// Cell: bIR215_L5_DBC_e2f2301440_0_0
/*
{
  "id" : "bIR215_L5_DBC_e2f2301440_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.46438, -10.9587, 0.660551, 2.48146", "-1.32683, -9.87667, 0.597834, 3.97794", "-1.18928, -8.79467, 0.535117, 5.03907", "-1.05173, -7.71267, 0.4724, 6.13889", "-0.914177, -6.63067, 0.409682, 7.21767", "-0.776625, -5.54866, 0.346965, 8.03623", "-0.639073, -4.46666, 0.284248, 8.69756", "-0.501522, -3.38466, 0.221531, 9.05897", "-0.36397, -2.30266, 0.158814, 9.32273", "-0.226418, -1.22066, 0.0960968, 9.64559", "-0.0888665, -0.138661, 0.0333797, 9.88524", "0.0486852, 0.943339, -0.0293375, 9.94228", "0.186237, 2.02534, -0.0920546, 10.0768", "0.323789, 3.10734, -0.154772, 10.303", "0.46134, 4.18934, -0.217489, 10.477", "0.598892, 5.27134, -0.280206, 10.0133", "0.736444, 6.35334, -0.342923, 9.03357", "0.873996, 7.43534, -0.40564, 7.79644", "1.01155, 8.51734, -0.468357, 6.40893", "1.1491, 9.59934, -0.531074, 4.35077", "1.28665, 10.6813, -0.593792, 2.55388" ]
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "2.53825, -1.08596, -8.8572, 1.11", "2.60646, -2.37928, -9.00923, 1.11", "2.72294, -4.79578, -9.3613, 1.11", "2.79603, -6.16038, -9.60531, 1.03", "2.89025, -7.95885, -9.94326, 1.03", "2.97187, -10.1593, -10.5898, 1.03", "2.9734, -11.9413, -11.262, 1.18", "2.91833, -13.6632, -12.0489, 1.18", "2.80398, -15.406, -13.0163, 1.4", "2.66281, -16.4119, -13.8091, 1.55", "2.00784, -19.6767, -17.0108, 1.25", "1.61189, -21.3386, -19.1009, 1.25", "1.44308, -22.0497, -20.2012, 1.47", "1.16956, -23.6468, -22.9384, 1.69", "0.886821, -26.8447, -28.6046, 1.69", "0.887121, -26.8873, -28.6794, 1.69", "1.17692, -29.6495, -33.2275, 1.33", "1.4972, -31.515, -36.029, 1.11", "1.825, -33.2641, -38.3046, 1.25", "2.1359, -34.9712, -39.9692, 1.4", "2.26904, -36.138, -40.7214, 1.4", "2.27006, -37.6195, -41.5153, 1.33", "1.9774, -39.6196, -42.2581, 1.18", "1.5339, -41.1322, -42.815, 1.18", "0.79889, -42.9327, -43.6098, 1.33", "-0.19034, -45.2242, -44.7752, 1.03", "-0.869951, -46.9444, -45.6949, 1.25", "-1.22182, -48.0232, -46.2789, 1.62", "-1.855, -50.512, -47.6056, 1.62", "-2.16657, -52.2979, -48.4864, 1.03", "-2.42361, -55.2633, -49.7413, 1.03", "-2.45282, -57.5137, -50.5177, 1.18", "-2.36349, -59.6214, -51.1324, 1.18", "-2.30443, -60.3556, -51.3222, 1.55", "-2.18533, -61.5966, -51.5726, 1.55", "-2.04284, -63.2943, -51.9232, 1.69", "-1.94048, -65.0501, -52.4081, 1.84", "-1.88507, -66.6495, -53.0022, 1.47", "-1.83415, -68.8367, -53.9216, 1.18", "-1.83361, -70.7183, -54.794, 1.18", "-1.8761, -72.8648, -55.88, 1.18", "-1.88074, -75.2516, -56.9888, 1.33", "-1.77845, -77.2347, -57.7071, 1.03", "-1.62873, -78.7536, -58.2224, 1.03", "-1.41049, -80.3444, -58.6912, 1.03", "-1.11978, -82.3451, -59.2399, 1.33", "-0.612473, -86.4424, -60.3552, 1.33", "-0.281529, -90.0417, -61.4452, 1.33", "-0.117039, -92.6054, -62.3377, 1.18", "-0.0325802, -94.0665, -62.9194, 1.4", "0.150445, -96.7478, -64.2134, 1.4", "0.348499, -99.5525, -65.8248, 1.33", "0.531409, -102.027, -67.5593, 1.18", "0.540953, -102.12, -67.6297, 1.18", "0.775669, -103.764, -68.8694, 1.47", "1.23085, -106.12, -70.6965, 1.84", "1.61849, -107.554, -71.7778, 1.62", "2.20762, -109.279, -73.0279, 1.55", "2.93112, -111.291, -74.4773, 1.33", "3.49315, -113.034, -75.7724, 1.62" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-0.511751, -10.3622, 0.0228061, 3.68", "-0.486257, -10.4583, 0.0228061, 3.68", "-0.278849, -11.2406, 0.0228061, 3.61" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "1.07825, 10.9783, 0.142806, 2.43", "1.47804, 11.8347, 0.142806, 2.43", "2.23215, 13.43, 0.142806, 2.14", "2.75792, 14.5781, 0.148045, 1.92", "2.95445, 15.0201, 0.151269, 1.92", "3.24277, 15.6513, 0.156749, 1.92", "3.43705, 16.0635, 0.160504, 1.92", "3.74427, 16.6812, 0.166952, 1.92", "3.99256, 17.165, 0.172143, 1.99", "4.36579, 17.8909, 0.179014, 1.99", "4.91482, 19.0172, 0.187856, 1.99", "5.3657, 19.9542, 0.193883, 1.99", "5.84203, 20.9905, 0.198757, 1.99", "6.36429, 22.2211, 0.179528, 2.21", "6.80508, 23.4052, 0.140431, 2.21", "7.08301, 24.2934, 0.0857851, 1.99", "7.17846, 24.6804, 0.046205, 1.99", "7.34948, 25.5457, -0.0664244, 1.99", "7.51427, 26.6558, -0.228611, 2.06", "7.66568, 28.0445, -0.467333, 1.92", "7.77923, 29.3868, -0.738277, 1.92", "7.89275, 30.886, -1.09663, 1.99", "7.94352, 31.6727, -1.31487, 2.14", "8.02462, 32.9895, -1.69839, 2.14", "8.1188, 34.6123, -2.18791, 1.99", "8.16259, 35.6008, -2.51759, 2.06", "8.1808, 36.7828, -2.93476, 2.43", "8.18257, 37.7003, -3.29549, 2.65" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000180399916434
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.28665, 10.6813, -0.593792, 0.551375", "3.17833, 25.5615, -0.593792, 0.551375", "5.07001, 40.4418, -0.593792, 0.551375" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "3.49315, -113.034, -75.7724, 0.52", "2.28096, -114.606, -77.3701, 0.52", "1.48455, -115.907, -78.6191, 0.52", "1.07038, -116.931, -79.5794, 0.52", "0.71354, -118.475, -81.0275, 0.52", "0.635492, -119.244, -81.7643, 1.11", "0.607746, -120.18, -82.6221, 1.4", "0.742113, -120.902, -83.2345, 1.69", "1.18129, -122.264, -84.3217, 1.62", "1.64149, -123.376, -85.1885, 1.4", "2.32121, -124.859, -86.2901, 0.88", "2.74902, -125.794, -86.9798, 0.66", "3.3471, -127.147, -87.902, 0.66", "3.69408, -127.963, -88.4536, 0.88", "4.08676, -128.93, -89.0548, 1.11", "4.44534, -129.739, -89.515, 1.18", "4.83703, -130.516, -89.9262, 1.18", "5.16668, -131.105, -90.2803, 1.18" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "3.49315, -113.034, -75.7724, 0.66", "3.13937, -114.305, -75.2173, 0.66", "2.75944, -115.219, -74.722, 0.52", "2.72544, -115.285, -74.6864, 0.52", "2.06528, -116.424, -74.0616, 0.74", "1.41338, -117.52, -73.5062, 0.88", "0.919549, -118.345, -73.0728, 0.74", "0.225882, -119.444, -72.4161, 0.37", "-0.258015, -120.254, -71.8924, 1.18", "-0.730004, -121.194, -71.2712, 1.4", "-1.17724, -122.266, -70.5503, 0.96", "-1.47582, -123.401, -69.6559, 0.74", "-1.59905, -124.536, -68.613, 0.29", "-1.575, -125.591, -67.5804, 0.74", "-1.48837, -126.295, -66.8644, 0.96", "-1.47924, -126.344, -66.8163, 0.96", "-1.10202, -128.311, -65.1041, 0.59", "-0.980022, -129.211, -64.5085, 1.11", "-0.936304, -129.953, -64.1278, 1.25", "-0.983807, -130.712, -63.8527, 1.18", "-1.21049, -132.061, -63.4519, 0.81", "-1.49581, -133.234, -63.1793, 0.59", "-1.9064, -134.492, -62.9951, 0.44", "-1.94008, -134.581, -62.9816, 0.44", "-2.36866, -135.522, -62.7948, 0.29", "-3.12689, -136.931, -62.4624, 0.29", "-3.62559, -137.794, -62.2384, 0.81", "-3.99821, -138.48, -62.0639, 1.33", "-4.36172, -139.252, -61.933, 1.33", "-4.85753, -140.564, -61.8931, 0.96", "-5.10572, -141.489, -61.9914, 0.81", "-5.27976, -142.49, -62.2172, 0.81", "-5.41557, -143.714, -62.581, 0.74", "-5.51454, -145.349, -63.142, 0.44", "-5.54998, -146.815, -63.7371, 0.66", "-5.55281, -147.761, -64.1772, 0.74", "-5.57265, -148.618, -64.5823, 1.03", "-5.64645, -149.62, -65.0399, 1.25", "-5.78978, -150.675, -65.4628, 1.11", "-6.03349, -151.968, -65.8914, 0.59", "-6.2591, -153.023, -66.1955, 0.59", "-6.51263, -154.133, -66.5284, 0.66", "-6.69864, -154.938, -66.7653, 0.66", "-6.95916, -156.17, -67.0924, 0.52", "-7.16833, -157.311, -67.3899, 0.52", "-7.30363, -158.315, -67.6258, 0.59", "-7.41177, -159.605, -67.9637, 1.25", "-7.43168, -160.1, -68.1081, 1.4", "-7.43512, -160.995, -68.3842, 1.4", "-7.42338, -162.302, -68.7334, 0.88", "-7.41838, -163.138, -68.9112, 0.52", "-7.4638, -164.591, -69.1507, 0.52", "-7.55168, -165.505, -69.1581, 0.52", "-7.567, -165.6, -69.1438, 0.52", "-7.84623, -167.013, -68.6708, 0.52", "-7.86022, -167.087, -68.6372, 0.52", "-7.96469, -167.693, -68.3284, 0.96", "-8.17949, -169.316, -67.4459, 1.33", "-8.28906, -170.545, -66.8412, 0.66", "-8.36655, -171.741, -66.3418, 0.59", "-8.41899, -172.902, -65.9629, 0.74", "-8.4241, -172.995, -65.9376, 0.74", "-8.49262, -173.981, -65.7399, 0.74", "-8.5852, -174.77, -65.6552, 1.03", "-8.72498, -175.415, -65.5964, 1.25", "-8.97781, -176.241, -65.5456, 1.18", "-9.27009, -177.001, -65.5045, 0.59", "-9.61364, -177.775, -65.4726, 0.29", "-9.93942, -178.421, -65.4569, 0.29", "-10.203, -178.914, -65.4482, 0.81", "-10.4317, -179.341, -65.4442, 1.11", "-10.7602, -180.01, -65.4456, 1.11", "-11.0886, -180.861, -65.4524, 0.59", "-11.1077, -180.953, -65.4537, 0.59", "-11.1165, -181.772, -65.4691, 0.44", "-11.1005, -181.854, -65.4709, 0.44", "-10.7885, -182.667, -65.49, 0.44", "-10.431, -183.343, -65.5218, 0.81", "-10.0097, -184.035, -65.564, 1.11", "-9.74271, -184.47, -65.6104, 1.11", "-9.37682, -185.081, -65.708, 0.88", "-9.07302, -185.648, -65.8169, 0.66", "-8.71852, -186.401, -65.981, 0.66", "-8.40723, -187.183, -66.1564, 0.44", "-8.1292, -188.033, -66.3404, 0.29", "-7.89006, -189.005, -66.5317, 0.88", "-7.76668, -189.752, -66.6529, 0.88", "-7.71535, -190.358, -66.7273, 0.88", "-7.69905, -191.22, -66.7943, 0.74", "-7.72309, -192.089, -66.8332, 0.37", "-7.76501, -192.903, -66.8367, 0.29", "-7.83379, -194.091, -66.8207, 0.29", "-7.886, -195.063, -66.8078, 0.81", "-7.91765, -195.959, -66.7972, 1.03", "-7.91659, -196.056, -66.7963, 1.03", "-7.85723, -196.824, -66.7921, 1.18", "-7.75518, -197.683, -66.7906, 1.33", "-7.64499, -198.431, -66.7921, 1.33", "-7.45654, -199.569, -66.8057, 0.59", "-7.27135, -200.695, -66.8267, 0.44", "-7.11587, -201.698, -66.8498, 0.44", "-6.97893, -202.618, -66.8715, 0.81", "-6.83507, -203.65, -66.8955, 1.11", "-6.7298, -204.602, -66.9165, 1.11", "-6.70536, -205.201, -66.9285, 1.25", "-6.76207, -206.159, -66.9436, 1.11", "-6.935, -207.351, -66.9825, 0.66", "-7.10811, -208.202, -67.0224, 0.37", "-7.33562, -209.019, -67.0694, 0.29", "-7.67358, -210.193, -67.1425, 0.37", "-7.85376, -211.025, -67.2419, 0.52", "-7.93562, -211.904, -67.3615, 0.88", "-7.91363, -212.5, -67.4461, 1.03", "-7.87224, -212.756, -67.4827, 1.03", "-7.5904, -214.082, -67.5737, 0.74", "-7.24708, -215.585, -67.5964, 0.59", "-6.99709, -216.771, -67.5778, 0.59", "-6.87582, -217.404, -67.5199, 1.4", "-6.74541, -218.123, -67.4248, 1.77", "-6.42263, -220.107, -67.041, 0.81", "-6.28809, -221.121, -66.7781, 0.81", "-6.13452, -222.517, -66.2859, 0.81", "-5.96497, -223.878, -65.7568, 1.11", "-5.85776, -224.549, -65.4724, 1.11", "-5.64319, -225.606, -65.0037, 0.88", "-5.61547, -225.731, -64.9456, 0.88", "-5.43687, -226.781, -64.4328, 0.59", "-5.35596, -227.875, -63.9232, 0.59", "-5.33164, -228.74, -63.5665, 0.52", "-5.33619, -229.481, -63.274, 0.52", "-5.37059, -231.232, -62.6698, 0.74", "-5.39755, -232.039, -62.4142, 1.33", "-5.46514, -233.093, -62.1281, 1.69" ],
    "parent" : "dend_92",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-0.278849, -11.2406, 0.0228061, 2.73", "-0.0443667, -13.0325, 0.00997557, 2.73", "0.173567, -14.8649, -0.00217767, 2.14", "0.323499, -16.3081, -0.0107885, 2.14", "0.475515, -17.9603, -0.019777, 2.28", "0.605871, -19.539, -0.046765, 2.14", "0.770193, -21.5863, -0.0948944, 1.92", "0.866504, -23.0905, -0.156185, 2.06", "0.964062, -25.182, -0.268813, 1.84", "0.998964, -27.1326, -0.419746, 1.84", "0.991984, -28.6034, -0.561041, 1.84", "0.934342, -30.456, -0.783873, 1.92", "0.806829, -32.2349, -1.06697, 1.92", "0.619456, -33.7008, -1.35523, 1.92", "0.317761, -35.1724, -1.67854, 1.84", "-0.103418, -36.746, -2.04538, 1.84", "-0.41878, -37.6927, -2.2779, 1.77", "-1.1722, -39.664, -2.79299, 1.69", "-2.03764, -41.7236, -3.34082, 1.69", "-2.80013, -43.4016, -3.80815, 1.84", "-2.83013, -43.4606, -3.82404, 1.84", "-3.28474, -44.2305, -4.04363, 2.06" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-0.278849, -11.2406, 0.0228061, 0.96", "-0.740947, -13.3582, -1.04155, 0.96", "-1.24526, -15.485, -1.88524, 1.25", "-1.92108, -17.9951, -2.66323, 0.96", "-2.39771, -19.6298, -2.97624, 1.25", "-2.77343, -20.7852, -3.11317, 1.47", "-3.28637, -22.2778, -3.23303, 1.11", "-3.99404, -24.1944, -3.20626, 0.96", "-4.76876, -26.0237, -3.01094, 1.11", "-5.90634, -28.3364, -2.63731, 1.11", "-6.74486, -29.8342, -2.3926, 1.11", "-6.8167, -29.9493, -2.37395, 1.11", "-7.8203, -31.3381, -2.1567, 0.96", "-7.86889, -31.3959, -2.1505, 0.96", "-8.88904, -32.3937, -2.1173, 1.03", "-9.6642, -33.0786, -2.17407, 1.25", "-9.73948, -33.1497, -2.18104, 1.25", "-10.7964, -34.1955, -2.29243, 0.88", "-11.8017, -35.2571, -2.41921, 0.88", "-13.0868, -36.6996, -2.6408, 1.11", "-14.0991, -37.9368, -2.85324, 1.11", "-15.0626, -39.1961, -3.08683, 1.25", "-15.1526, -39.3315, -3.11114, 1.25", "-15.9957, -40.8651, -3.40592, 0.96", "-16.7449, -42.4698, -3.70247, 0.96", "-17.2966, -43.814, -3.94161, 1.03", "-17.335, -43.9101, -3.95737, 1.03", "-18.005, -45.583, -4.20333, 1.03", "-18.5205, -46.8898, -4.36004, 1.03", "-18.9611, -48.0556, -4.43776, 1.25", "-19.4066, -49.2865, -4.45511, 1.62", "-20.0934, -51.1336, -4.41841, 1.25", "-20.6154, -52.4909, -4.34986, 1.18", "-21.0273, -53.4707, -4.22806, 1.18", "-21.5576, -54.6626, -3.9856, 1.33", "-22.2259, -56.0245, -3.62912, 1.33", "-22.8515, -57.212, -3.29539, 1.03", "-22.8899, -57.2793, -3.27529, 1.03", "-23.6247, -58.5253, -2.99384, 0.81", "-24.1994, -59.4852, -2.90433, 0.66", "-24.805, -60.4648, -2.99594, 0.81", "-25.5816, -61.6891, -3.3565, 1.03", "-25.998, -62.361, -3.65013, 1.33", "-26.495, -63.2682, -4.13999, 1.62", "-26.9983, -64.3416, -4.78794, 1.55", "-27.4824, -65.5483, -5.49269, 1.18", "-27.9926, -66.9915, -6.24671, 0.96", "-28.0187, -67.0721, -6.28317, 0.96", "-28.5682, -68.9463, -7.01002, 0.88", "-29.0064, -70.5633, -7.49968, 0.88", "-29.3327, -71.9796, -7.81518, 1.18", "-29.6117, -73.409, -8.06658, 1.4", "-29.9201, -75.0012, -8.31242, 1.4", "-30.176, -76.1032, -8.49628, 1.18", "-30.5473, -77.3655, -8.70869, 0.96", "-30.9759, -78.4991, -8.94039, 1.11", "-31.6912, -79.914, -9.3528, 0.88", "-32.318, -80.9984, -9.71548, 0.74", "-33.072, -82.0715, -10.1198, 0.96", "-33.6649, -82.7678, -10.4356, 1.25", "-34.573, -83.6219, -10.9109, 1.33", "-35.776, -84.4955, -11.4882, 1.4" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "8.18257, 37.7003, -3.29549, 1.4", "7.67648, 39.3622, -3.94539, 1.4", "7.38222, 40.5265, -4.30433, 1.4", "6.97142, 42.2326, -4.58334, 1.25", "6.90628, 42.503, -4.58281, 1.25", "6.70972, 43.3261, -4.50903, 1.03", "6.47458, 44.3187, -4.38138, 1.03", "6.2785, 45.282, -4.15453, 1.18", "5.93826, 46.8015, -3.5683, 1.33", "5.60174, 48.1925, -2.84524, 1.33", "5.37003, 49.1706, -2.29982, 1.47", "5.21729, 49.8928, -1.8901, 1.47", "5.05091, 50.8936, -1.35738, 1.47", "4.80255, 53.0592, -0.341319, 1.4", "4.72308, 54.4192, 0.191737, 1.4", "4.714, 55.3164, 0.479954, 1.4", "4.75515, 56.5569, 0.820614, 1.62", "4.8531, 57.9948, 1.1282, 1.18", "4.98304, 59.1643, 1.27599, 1.18", "4.99742, 59.258, 1.27784, 1.18", "5.21472, 60.8078, 1.26054, 1.18", "5.3568, 62.0512, 1.24496, 1.47", "5.39243, 62.4411, 1.23929, 1.47", "5.50231, 63.7629, 1.22027, 1.4", "5.6184, 65.1628, 1.20276, 1.33", "5.75243, 66.8414, 1.18358, 1.33", "5.86352, 68.42, 1.16795, 1.62", "5.92006, 69.5685, 1.15469, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "8.18257, 37.7003, -3.29549, 1.18", "9.81746, 38.0067, -3.18898, 1.18", "11.3827, 38.2059, -2.85227, 0.96", "12.2419, 38.2974, -2.64822, 1.25", "12.3419, 38.3117, -2.61737, 1.25", "13.794, 38.569, -2.16001, 1.25", "15.1438, 38.8808, -1.74053, 1.25", "17.5822, 39.4936, -0.985441, 1.18", "18.7111, 39.8357, -0.645273, 0.81", "20.2756, 40.4109, -0.157151, 0.96", "21.4711, 40.9806, 0.178251, 0.96", "22.405, 41.6193, 0.378204, 0.96", "22.4666, 41.673, 0.3813, 0.96", "23.4291, 42.6261, 0.206037, 0.96", "23.4928, 42.6934, 0.188568, 0.96", "24.3177, 43.5804, -0.125482, 1.18", "25.3859, 44.7255, -0.541965, 1.4", "26.2742, 45.6323, -0.883994, 1.33", "26.3778, 45.7322, -0.916602, 1.33", "27.4139, 46.6376, -1.16086, 1.18", "27.5993, 46.7707, -1.17527, 1.18", "28.4455, 47.2749, -1.12804, 1.18", "28.6815, 47.3882, -1.07251, 1.18", "29.9071, 47.9116, -0.640989, 0.96", "31.103, 48.4085, -0.145454, 0.96", "32.7805, 49.1445, 0.6863, 1.03", "32.9051, 49.2094, 0.750351, 1.03", "34.758, 50.3961, 1.71241, 1.03", "34.8754, 50.4758, 1.77528, 1.03", "35.5439, 50.9927, 2.1483, 1.03", "36.4331, 51.8147, 2.66227, 1.18", "37.5131, 53.0921, 3.16254, 1.4", "38.3636, 54.2093, 3.46263, 1.62" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "5.07001, 40.4418, -0.593792, 0.15", "6.9617, 55.322, -0.593792, 0.15", "8.85338, 70.2023, -0.593792, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "5.16668, -131.105, -90.2803, 0.52", "4.44672, -131.634, -90.7824, 0.52", "3.54497, -132.344, -91.3535, 0.52", "3.20135, -132.663, -91.5979, 0.96", "2.48928, -133.479, -92.2274, 1.33", "2.12223, -133.998, -92.6163, 0.81", "1.70699, -134.766, -93.1611, 0.52", "1.69617, -134.811, -93.1884, 0.52", "1.77475, -135.857, -93.8516, 0.88", "2.01176, -136.625, -94.3837, 1.25", "2.22626, -137.042, -94.7014, 1.47", "2.58822, -137.595, -95.1759, 1.47", "3.06436, -138.207, -95.7347, 0.88", "3.79034, -139.091, -96.5727, 0.88", "4.16423, -139.532, -97.0344, 0.37", "4.54698, -140.05, -97.5983, 0.66", "4.57139, -140.095, -97.6495, 0.66", "4.67026, -140.399, -97.9922, 0.96", "4.76578, -141.236, -98.8274, 1.11", "4.67153, -142.457, -99.8104, 0.44", "4.55619, -143.12, -100.27, 0.44", "4.34435, -144.114, -100.92, 0.52", "4.2232, -144.662, -101.279, 0.74", "4.0633, -145.273, -101.647, 0.74", "3.82932, -146.041, -102.095, 1.03", "3.47615, -147.321, -102.874, 0.88", "3.20544, -148.554, -103.687, 1.18", "3.03317, -149.737, -104.572, 0.96", "2.97068, -150.693, -105.485, 0.59", "2.95235, -151.748, -106.675, 0.29", "2.96521, -152.522, -107.657, 0.88", "2.96594, -152.749, -107.968, 1.47", "2.95955, -153.696, -109.282, 1.33", "2.91017, -155.111, -111.213, 0.52", "2.88042, -155.489, -111.697, 0.29", "2.82047, -155.823, -112.031, 0.96", "2.55653, -156.762, -112.799, 1.77", "2.44393, -157.159, -113.103, 1.77", "2.18908, -158.037, -113.683, 1.11", "2.02074, -158.756, -114.232, 0.37", "1.95835, -159.243, -114.792, 0.29", "1.92454, -159.954, -115.803, 0.74", "1.99003, -160.968, -117.441, 1.33", "1.99414, -160.998, -117.495, 1.33", "2.18824, -161.916, -119.384, 1.55", "2.46455, -163.07, -121.93, 0.96", "2.47033, -163.098, -121.991, 0.96", "2.51916, -163.457, -122.698, 1.18", "2.52133, -163.486, -122.745, 1.18", "2.53449, -164.647, -124.262, 0.44", "2.4409, -165.276, -124.805, 0.37", "2.30897, -165.812, -125.313, 0.52", "2.20175, -166.231, -125.801, 0.81", "2.08112, -166.732, -126.415, 1.33", "2.01809, -167.071, -126.844, 0.96", "1.91262, -168.143, -128.225, 1.25", "1.92211, -170.363, -131.185, 0.52", "2.01565, -171.397, -132.633, 0.44", "2.11426, -171.91, -133.376, 0.59", "2.36787, -172.759, -134.637, 0.59", "2.72121, -173.565, -135.822, 0.74", "2.97891, -173.982, -136.387, 1.18", "3.00766, -174.021, -136.428, 1.18", "3.33886, -174.402, -136.802, 1.47", "3.3745, -174.438, -136.838, 1.47", "4.21516, -175.315, -137.546, 1.18", "4.25207, -175.36, -137.576, 1.18", "4.59269, -175.895, -137.865, 1.18", "5.0111, -176.823, -138.338, 0.52", "5.17277, -177.445, -138.637, 0.29", "5.27852, -178.161, -138.989, 0.29", "5.31577, -178.654, -139.239, 0.88", "5.33279, -179.33, -139.615, 1.11", "5.30138, -180.626, -140.374, 0.81", "5.26637, -181.452, -140.943, 0.37", "5.22613, -182.324, -141.819, 0.29", "5.19891, -182.724, -142.338, 0.96", "5.19364, -182.762, -142.401, 0.96", "5.11207, -183.089, -143.046, 1.18", "4.82765, -183.785, -144.535, 1.11", "4.12644, -184.995, -147.198, 0.44", "3.84388, -185.368, -148.017, 0.74", "3.29302, -186.015, -149.323, 0.59", "2.9504, -186.396, -150.008, 0.81", "2.42164, -186.942, -150.83, 0.44", "2.07263, -187.339, -151.199, 0.59", "2.03817, -187.39, -151.22, 0.59", "1.67011, -188.145, -151.444, 0.52", "1.44993, -188.75, -151.585, 1.03", "1.253, -189.466, -151.764, 1.4", "1.00735, -190.562, -152.024, 1.33", "0.854097, -191.326, -152.26, 1.11", "0.75516, -192.079, -152.62, 0.59", "0.75281, -192.135, -152.655, 0.59", "0.785904, -192.631, -153.064, 0.44", "0.927013, -193.413, -153.893, 0.44", "1.15559, -194.27, -154.974, 0.74", "1.52673, -195.477, -156.636, 0.74", "1.61981, -195.765, -157.036, 1.25", "1.88311, -196.659, -158.276, 1.55", "2.13686, -197.62, -159.625, 1.77", "2.36307, -198.796, -161.288, 0.74", "2.40404, -199.429, -162.106, 0.52", "2.36638, -199.864, -162.608, 0.52", "2.1838, -200.795, -163.622, 0.96", "2.05522, -201.192, -163.996, 1.18", "1.59401, -202.167, -164.819, 0.52", "1.29425, -202.645, -165.203, 0.52", "1.07691, -202.932, -165.441, 0.66", "1.04154, -202.972, -165.476, 0.66", "0.736069, -203.269, -165.718, 0.44", "-0.0695889, -203.956, -166.265, 0.29", "-0.118348, -203.989, -166.287, 0.29", "-0.500883, -204.205, -166.437, 0.52", "-0.89011, -204.412, -166.552, 0.81", "-1.35372, -204.678, -166.63, 0.96", "-1.80447, -204.953, -166.651, 1.11", "-2.41358, -205.371, -166.595, 0.29", "-2.49003, -205.429, -166.585, 0.29", "-3.15089, -205.944, -166.464, 0.29", "-3.75531, -206.404, -166.336, 0.88", "-3.97341, -206.566, -166.283, 1.03", "-4.47272, -206.904, -166.163, 1.18", "-5.24494, -207.341, -166.011, 0.29", "-6.17788, -207.775, -165.878, 0.29", "-6.57032, -207.923, -165.857, 0.59", "-6.62961, -207.943, -165.86, 0.59", "-7.32139, -208.182, -165.956, 0.59", "-7.99976, -208.457, -166.117, 1.11", "-8.57186, -208.747, -166.308, 1.4", "-9.26119, -209.171, -166.587, 0.96", "-9.94719, -209.685, -166.89, 0.59", "-10.7288, -210.378, -167.249, 0.37", "-11.3086, -210.994, -167.518, 0.37", "-11.6555, -211.401, -167.651, 0.74", "-11.695, -211.451, -167.664, 0.74", "-12.0779, -211.999, -167.724, 0.74", "-12.3732, -212.445, -167.743, 1.03", "-12.7112, -212.971, -167.732, 1.33", "-13.2278, -213.688, -167.689, 1.47", "-13.8134, -214.436, -167.636, 0.37", "-14.534, -215.329, -167.572, 1.18" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "5.16668, -131.105, -90.2803, 0.52", "5.91007, -131.89, -89.068, 0.52", "6.76849, -132.895, -87.8096, 0.44", "7.20217, -133.471, -87.2477, 0.88", "7.23601, -133.522, -87.2078, 0.88", "7.51711, -133.991, -86.9013, 1.03", "7.81131, -134.534, -86.6018, 0.81", "8.1328, -135.279, -86.3874, 0.29", "8.43956, -136.121, -86.2533, 0.22", "8.65107, -136.766, -86.1687, 0.52", "8.75186, -137.114, -86.1228, 0.74", "8.96952, -138.023, -86.005, 0.29", "9.11748, -138.821, -85.8973, 0.29", "9.22556, -139.616, -85.7943, 0.74", "9.26838, -140.07, -85.7299, 1.03", "9.31198, -140.633, -85.6473, 0.96", "9.34253, -141.229, -85.5607, 0.59", "9.38814, -142.072, -85.4128, 0.22", "9.43758, -142.59, -85.3048, 0.37", "9.4615, -142.72, -85.2753, 0.37", "9.62647, -143.248, -85.1663, 0.37", "9.65582, -143.312, -85.1557, 0.37", "10.1943, -144.24, -85.1411, 0.29", "10.6044, -144.863, -85.204, 0.88", "10.8658, -145.255, -85.2684, 1.18", "11.3669, -146.037, -85.4284, 0.29", "11.8303, -146.781, -85.611, 0.29", "12.5118, -147.929, -85.8611, 0.52", "12.799, -148.45, -85.962, 0.81", "13.2446, -149.298, -86.0747, 0.22", "13.4408, -149.7, -86.102, 0.59", "13.4796, -149.788, -86.1035, 0.59", "14.0347, -151.176, -86.0786, 0.44", "14.4012, -152.157, -86.0277, 0.66", "14.6416, -152.821, -86.0065, 0.59", "14.8407, -153.379, -86.0178, 0.44", "15.1612, -154.294, -86.0852, 0.96", "15.4296, -154.988, -86.2191, 1.33", "15.7572, -155.682, -86.4774, 0.59", "15.7969, -155.748, -86.5092, 0.59", "16.2188, -156.301, -86.8525, 0.59", "16.2536, -156.343, -86.8851, 0.59", "16.9543, -157.239, -87.6969, 0.29", "17.2492, -157.677, -88.1234, 0.44", "17.482, -158.092, -88.488, 0.44", "17.788, -158.723, -88.9879, 0.44", "18.1156, -159.548, -89.5524, 1.33", "18.4806, -160.546, -90.1619, 1.11", "18.783, -161.481, -90.6573, 0.52", "19.0826, -162.334, -91.1026, 0.29", "19.1045, -162.395, -91.1329, 0.29", "19.327, -162.921, -91.3451, 0.29", "19.7686, -163.597, -91.5468, 0.29", "20.0816, -163.91, -91.586, 0.96", "20.5095, -164.155, -91.5849, 1.25" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-5.46514, -233.093, -62.1281, 0.29", "-5.98665, -233.66, -61.0963, 0.29", "-6.25912, -234.094, -60.4111, 0.29", "-6.34008, -234.233, -60.2026, 0.74", "-6.36094, -234.269, -60.1502, 0.74", "-6.50405, -234.5, -59.8241, 0.74", "-6.88494, -234.961, -59.1906, 0.29", "-7.24097, -235.321, -58.7901, 0.29", "-7.4388, -235.474, -58.6246, 0.74", "-7.62975, -235.584, -58.5041, 1.11", "-7.96176, -235.766, -58.3185, 1.11", "-8.85944, -236.237, -57.8835, 0.29", "-9.15257, -236.405, -57.7467, 0.37", "-9.53071, -236.69, -57.5034, 0.37", "-9.90582, -237.071, -57.1695, 0.66", "-10.2391, -237.524, -56.7808, 0.52", "-10.4133, -237.82, -56.5265, 0.96", "-10.698, -238.387, -56.0341, 1.33", "-11.1327, -239.191, -55.3334, 0.59", "-11.3214, -239.546, -55.0032, 0.37", "-11.4714, -239.822, -54.7341, 0.22", "-11.7465, -240.295, -54.2705, 0.22", "-11.9861, -240.703, -53.8842, 0.66", "-12.3011, -241.255, -53.4237, 0.66", "-12.7777, -242.182, -52.7729, 0.52", "-12.841, -242.326, -52.6813, 0.29", "-13.0095, -242.753, -52.4533, 0.74", "-13.0704, -242.953, -52.3447, 0.74", "-13.3199, -243.903, -51.838, 0.37", "-13.5183, -244.732, -51.427, 0.44", "-13.6312, -245.143, -51.2465, 0.59", "-13.8353, -245.85, -50.9355, 0.52", "-14.3041, -247.299, -50.2779, 0.37", "-14.5383, -247.917, -49.9813, 0.37", "-14.8427, -248.585, -49.6432, 0.29", "-15.2528, -249.369, -49.2249, 0.59", "-15.3395, -249.525, -49.1452, 0.88", "-15.6407, -250.0, -48.9128, 0.66", "-16.0479, -250.536, -48.702, 0.15", "-16.5259, -251.063, -48.4424, 0.15", "-16.5661, -251.098, -48.4203, 0.15", "-17.0744, -251.461, -48.1874, 0.59", "-17.4309, -251.714, -48.0618, 0.88", "-17.471, -251.744, -48.0514, 0.88", "-17.7736, -251.996, -47.9964, 0.88", "-18.2372, -252.435, -47.9464, 0.88", "-18.9288, -253.227, -47.9216, 0.29", "-19.2649, -253.676, -47.9277, 0.29", "-19.5323, -254.112, -47.946, 0.66", "-19.733, -254.491, -47.9573, 0.81", "-19.9781, -255.07, -47.9726, 0.66", "-20.2433, -255.849, -47.9778, 0.29", "-20.3599, -256.257, -47.9676, 0.81", "-20.4459, -256.554, -47.9538, 0.81", "-20.6771, -257.251, -47.8864, 0.22", "-20.8415, -257.716, -47.7863, 0.22", "-20.9378, -257.996, -47.6955, 0.81", "-21.0242, -258.224, -47.5972, 0.96", "-21.2875, -258.909, -47.1667, 0.22", "-21.4174, -259.265, -46.7647, 0.22", "-21.5419, -259.654, -46.04, 0.74", "-21.5759, -259.77, -45.7652, 1.18", "-21.626, -259.956, -45.2627, 0.74", "-21.7389, -260.352, -44.0565, 0.59", "-21.8975, -260.856, -42.4073, 0.44", "-22.0361, -261.3, -41.1082, 0.37", "-22.0453, -261.326, -41.047, 0.37", "-22.1022, -261.482, -40.7321, 0.66", "-22.1364, -261.682, -40.4375, 0.74", "-22.1918, -262.312, -39.7266, 0.29", "-22.212, -262.818, -39.241, 0.29", "-22.2237, -263.321, -38.7288, 0.29", "-22.2203, -263.45, -38.5912, 0.74", "-22.0657, -264.745, -37.1133, 0.66", "-21.921, -265.325, -36.3924, 0.22", "-21.8467, -265.481, -36.1536, 0.22", "-21.6286, -265.778, -35.5296, 0.44" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-5.46514, -233.093, -62.1281, 0.37", "-5.1672, -235.535, -64.1281, 0.37", "-4.98685, -236.882, -65.1207, 0.37", "-4.9762, -236.964, -65.1723, 0.37", "-4.87772, -237.84, -65.6642, 0.81", "-4.73463, -239.154, -66.3372, 0.88", "-4.67571, -239.704, -66.5968, 0.88", "-4.54653, -240.827, -67.0338, 0.52", "-4.43333, -242.111, -67.5043, 0.52", "-4.39958, -243.301, -67.9685, 0.52", "-4.44015, -243.965, -68.2306, 0.96", "-4.51928, -244.55, -68.4502, 0.96", "-4.83809, -246.135, -69.0664, 0.37", "-5.1001, -247.083, -69.4344, 0.29", "-5.4471, -248.019, -69.8108, 0.59", "-5.85061, -248.89, -70.1401, 0.96", "-6.18531, -249.525, -70.3541, 1.18", "-6.23268, -249.608, -70.3764, 1.18", "-6.53218, -250.114, -70.5039, 1.18", "-7.01618, -251.038, -70.7671, 1.03", "-7.49172, -252.125, -71.0753, 0.59", "-7.75273, -252.852, -71.2512, 0.52", "-7.94863, -253.457, -71.3604, 0.66", "-8.44539, -255.0, -71.5273, 0.29", "-8.79122, -256.072, -71.5435, 0.44", "-8.9436, -256.563, -71.4938, 0.52", "-9.44245, -258.127, -71.2001, 0.66", "-9.75344, -259.015, -70.98, 0.37", "-10.1347, -260.003, -70.6896, 0.88", "-10.3816, -260.567, -70.5017, 1.18", "-10.9042, -261.672, -70.1559, 0.96", "-11.2641, -262.456, -69.9491, 0.66", "-11.4947, -263.041, -69.8145, 1.03", "-11.8165, -264.144, -69.5603, 0.52", "-12.0653, -265.526, -69.2467, 0.52", "-12.134, -266.462, -69.0559, 1.11", "-12.0969, -267.385, -68.8877, 1.11", "-11.9258, -268.848, -68.6602, 0.74", "-11.7923, -269.672, -68.5512, 0.44", "-11.5561, -270.922, -68.4091, 0.59", "-11.2502, -272.628, -68.2585, 0.59", "-11.0416, -274.261, -68.1562, 0.59", "-10.934, -275.65, -68.0915, 0.52", "-10.9238, -276.541, -68.0686, 1.18", "-10.9456, -277.116, -68.0513, 1.33", "-11.102, -278.666, -67.9994, 1.18", "-11.2969, -279.903, -67.9399, 0.88", "-11.4894, -280.896, -67.8832, 0.52", "-11.69, -282.006, -67.8235, 0.66", "-11.7014, -282.121, -67.8147, 0.66", "-11.6872, -283.076, -67.7355, 0.81", "-11.6147, -284.168, -67.6401, 0.44", "-11.4767, -285.351, -67.5313, 0.44", "-11.2486, -286.798, -67.389, 0.44", "-10.8544, -288.63, -67.1916, 0.37", "-10.5525, -289.824, -67.0499, 0.29" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-3.28474, -44.2305, -4.04363, 1.03", "-4.83641, -44.7008, -3.73051, 1.03", "-5.88483, -45.1889, -3.35486, 1.03", "-7.1544, -45.9683, -2.81969, 0.96", "-7.99025, -46.6167, -2.45362, 0.96", "-8.09897, -46.7102, -2.40525, 0.96", "-10.2289, -48.7944, -1.46955, 0.81", "-10.9917, -49.7637, -1.0956, 1.11", "-11.7334, -50.82, -0.718775, 1.11", "-12.683, -52.2297, -0.239931, 1.03", "-12.7307, -52.2969, -0.218001, 1.03", "-13.7584, -53.6159, 0.239485, 1.03", "-14.5107, -54.5275, 0.519204, 1.25", "-15.1489, -55.2792, 0.814022, 1.4", "-15.5857, -55.7791, 1.05132, 1.4", "-16.4135, -56.7681, 1.60626, 1.25", "-17.2514, -57.942, 2.26333, 1.11", "-17.685, -58.6854, 2.66346, 1.11", "-18.128, -59.6768, 3.14352, 1.03", "-18.1805, -59.8238, 3.20086, 1.03", "-18.5323, -60.9079, 3.47695, 0.81", "-18.9007, -62.0952, 3.6331, 0.96", "-19.291, -63.3909, 3.69851, 0.96", "-19.7159, -64.8619, 3.72752, 0.81", "-19.9829, -65.9435, 3.69545, 0.74", "-20.3454, -67.5643, 3.58675, 0.81", "-20.5107, -68.448, 3.49154, 1.11", "-20.6857, -69.7188, 3.33456, 1.11", "-20.7668, -70.6819, 3.20601, 1.11", "-20.8503, -72.5515, 2.95516, 0.88", "-20.8618, -73.4914, 2.8666, 1.11", "-20.8485, -74.5948, 2.77859, 1.11", "-20.8324, -75.4489, 2.69862, 1.33", "-20.8292, -76.3351, 2.61382, 0.96", "-20.8461, -77.3951, 2.5155, 1.11", "-20.8579, -78.6898, 2.40434, 1.11", "-20.8432, -79.7695, 2.29073, 1.4", "-20.8308, -80.7169, 2.16927, 1.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-3.28474, -44.2305, -4.04363, 1.47", "-3.26969, -45.6776, -4.06622, 1.47", "-3.26042, -46.5695, -4.08014, 1.47", "-3.24021, -48.5124, -4.11046, 1.47", "-3.22674, -49.8082, -4.13069, 1.62", "-3.21025, -51.3941, -4.15544, 1.92", "-3.1943, -52.9282, -4.17938, 1.92" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-35.776, -84.4955, -11.4882, 0.88", "-36.9219, -84.5922, -11.2351, 0.88", "-37.2678, -84.6418, -11.1848, 1.11", "-37.6687, -84.7198, -11.1673, 0.88", "-38.1725, -84.8279, -11.1632, 0.81", "-38.7628, -84.9876, -11.1845, 0.74", "-39.3227, -85.1817, -11.2179, 0.96", "-39.8721, -85.4348, -11.3049, 0.96", "-40.6113, -85.8573, -11.432, 0.81", "-40.6449, -85.8813, -11.4378, 0.81", "-41.2305, -86.3784, -11.5376, 0.74", "-41.7268, -86.8567, -11.6194, 0.74", "-41.9022, -87.0333, -11.6412, 1.03", "-42.236, -87.3607, -11.6717, 1.11", "-42.802, -87.8769, -11.6978, 1.11", "-42.8463, -87.9133, -11.7002, 1.11", "-43.5168, -88.3874, -11.7356, 0.88", "-44.3121, -88.9014, -11.7853, 0.88", "-44.6652, -89.1145, -11.8098, 1.25", "-45.1109, -89.3603, -11.8448, 1.25", "-45.7268, -89.6748, -11.8984, 1.4", "-46.1813, -89.9059, -11.9366, 1.62" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-35.776, -84.4955, -11.4882, 0.74", "-35.6931, -84.9693, -12.5078, 0.74", "-35.6048, -85.5942, -13.8675, 0.44", "-35.5983, -85.639, -13.9593, 0.44", "-35.5104, -86.1042, -14.8187, 0.44", "-35.3245, -86.9496, -16.2886, 1.03", "-34.9781, -88.6789, -19.1038, 1.03", "-34.8909, -89.2453, -20.0083, 1.33", "-34.8122, -90.0596, -21.2412, 1.11", "-34.8064, -90.6401, -22.149, 0.59", "-34.8704, -91.514, -23.5352, 0.44", "-35.068, -92.6793, -25.2567, 0.44", "-35.2619, -93.4526, -26.3849, 0.88", "-35.4, -93.8099, -26.946, 1.25", "-36.1055, -95.202, -29.1711, 1.25", "-36.1275, -95.238, -29.2301, 1.25", "-36.2333, -95.4055, -29.4791, 1.25", "-36.2539, -95.4452, -29.5263, 1.25", "-36.6594, -96.8224, -30.5782, 0.74", "-36.8165, -97.6592, -31.0769, 0.74", "-36.8255, -97.7252, -31.1063, 0.74", "-36.9124, -98.3199, -31.4222, 0.74", "-37.0644, -99.1523, -32.0003, 0.81", "-37.2321, -99.8522, -32.55, 0.81", "-37.6932, -101.256, -33.8167, 0.44", "-37.7147, -101.305, -33.8652, 0.44", "-38.1477, -102.156, -34.7544, 0.74", "-38.7835, -103.29, -36.0218, 0.88", "-39.0778, -103.825, -36.6209, 1.03", "-39.5227, -104.692, -37.5327, 1.03", "-39.755, -105.253, -38.0232, 1.18", "-39.7712, -105.304, -38.0617, 1.18", "-39.9641, -106.488, -38.7584, 0.52", "-39.9008, -107.354, -39.1415, 0.44", "-39.7588, -107.808, -39.3475, 0.81", "-39.5829, -108.182, -39.518, 0.88", "-39.5175, -108.313, -39.5862, 0.88", "-39.2335, -108.933, -39.9139, 0.74", "-38.935, -109.697, -40.3129, 0.44", "-38.7147, -110.491, -40.7323, 0.59", "-38.5268, -111.587, -41.2592, 0.52", "-38.4449, -112.458, -41.6607, 0.88", "-38.4218, -113.056, -41.919, 1.18", "-38.4446, -113.918, -42.2935, 0.52", "-38.5038, -114.487, -42.5291, 0.44", "-38.6349, -115.327, -42.8359, 0.44", "-38.7802, -116.072, -43.0795, 0.74", "-38.8747, -116.492, -43.2102, 0.74", "-39.2089, -117.834, -43.647, 0.59", "-39.475, -118.817, -43.9567, 0.66", "-39.6295, -119.373, -44.1467, 1.18", "-39.8582, -120.226, -44.4395, 1.33", "-40.0447, -121.065, -44.7045, 1.11", "-40.055, -121.134, -44.7279, 1.11", "-40.1041, -121.92, -44.9838, 0.96", "-40.0994, -122.947, -45.3355, 0.66", "-40.0827, -123.73, -45.6367, 0.37", "-40.0964, -124.488, -45.9423, 0.29", "-40.2002, -125.818, -46.5272, 1.03", "-40.2818, -126.48, -46.8296, 1.33", "-40.3591, -127.01, -47.0773, 1.47", "-40.5689, -128.374, -47.6626, 0.37", "-40.6902, -129.203, -48.0319, 0.37", "-40.8608, -130.355, -48.5128, 0.29", "-40.9135, -130.787, -48.6675, 0.44", "-40.9774, -131.443, -48.8734, 0.59", "-41.0528, -132.479, -49.1524, 0.59", "-41.1063, -133.793, -49.4648, 0.74", "-41.113, -134.763, -49.6819, 0.59", "-41.1263, -135.638, -49.8515, 0.44", "-41.1528, -136.813, -50.0862, 0.44", "-41.1543, -136.889, -50.1246, 0.44", "-41.1399, -137.642, -50.7124, 0.96", "-41.1038, -138.075, -51.1357, 1.4", "-41.0965, -138.126, -51.1902, 1.4", "-41.0119, -138.608, -51.7128, 1.18", "-40.4907, -141.604, -54.9339, 0.59", "-40.3899, -142.236, -55.587, 0.88", "-40.3107, -142.829, -56.1761, 1.03", "-40.2477, -143.486, -56.7978, 0.52", "-40.2163, -144.251, -57.4271, 0.37", "-40.2373, -145.031, -57.924, 0.37", "-40.2403, -145.091, -57.9407, 0.37", "-40.2547, -145.362, -58.0123, 1.03", "-40.2758, -145.942, -58.1435, 1.03", "-40.2547, -146.835, -58.346, 0.44", "-40.1286, -147.787, -58.6439, 0.37", "-39.8996, -148.717, -58.9969, 0.88", "-39.7424, -149.263, -59.2606, 1.25", "-39.6229, -149.67, -59.4831, 1.25", "-39.4052, -150.445, -59.9661, 0.81", "-39.0628, -151.881, -60.9138, 0.29", "-39.0, -152.26, -61.1565, 0.29", "-38.9265, -153.146, -61.7269, 0.37", "-38.91, -153.961, -62.2605, 0.37", "-38.9301, -154.793, -62.7782, 0.66", "-38.9768, -155.489, -63.155, 1.25", "-39.0137, -156.214, -63.4729, 1.4", "-39.0184, -157.507, -63.9896, 0.81", "-38.9412, -158.685, -64.4116, 0.59", "-38.8589, -159.338, -64.6319, 0.29", "-38.7128, -160.18, -64.8898, 0.29", "-38.5346, -161.151, -65.3443, 0.29", "-38.475, -161.484, -65.5561, 1.03", "-38.4642, -161.542, -65.5996, 1.03", "-38.3654, -162.066, -66.0331, 1.4", "-38.2433, -162.826, -66.7004, 1.4", "-37.914, -165.111, -68.7503, 0.52", "-37.8169, -166.044, -69.5472, 0.74", "-37.8103, -166.141, -69.6236, 0.74", "-37.7768, -166.882, -70.1545, 0.52", "-37.7696, -167.635, -70.6318, 0.52", "-37.7921, -168.272, -70.9265, 0.74", "-37.848, -169.165, -71.2126, 0.66", "-37.9568, -170.607, -71.8511, 0.59", "-37.9592, -170.66, -71.8833, 0.59", "-37.9678, -171.281, -72.3257, 0.52", "-37.9502, -171.951, -72.8258, 1.18", "-37.8887, -173.083, -73.6757, 1.62", "-37.7235, -174.78, -74.9923, 1.18", "-37.5706, -175.923, -75.8447, 0.52", "-37.4371, -176.79, -76.4538, 0.37", "-37.2937, -177.611, -76.9799, 0.74", "-37.2322, -177.999, -77.1914, 1.11", "-37.1305, -179.179, -77.6316, 0.88", "-37.1697, -179.862, -77.777, 0.81", "-37.3742, -180.734, -77.9183, 0.44", "-37.6413, -181.399, -78.0203, 0.59", "-38.0219, -182.099, -78.1575, 0.59", "-38.5261, -182.894, -78.3241, 0.37", "-39.1791, -183.849, -78.5085, 0.29", "-39.6141, -184.481, -78.6491, 0.81", "-39.9846, -185.055, -78.8026, 1.11", "-40.6151, -186.129, -79.1082, 1.4", "-40.8928, -186.652, -79.2554, 1.33", "-41.2922, -187.513, -79.4704, 0.81", "-41.6341, -188.347, -79.6258, 0.52", "-42.054, -189.457, -79.7591, 0.44", "-42.3414, -190.292, -79.8182, 0.37", "-42.6226, -191.262, -79.7896, 0.37", "-42.8415, -192.18, -79.7216, 0.66", "-43.0107, -193.149, -79.6077, 0.96", "-43.086, -193.899, -79.4894, 1.03", "-43.1079, -194.652, -79.3444, 1.25", "-42.9991, -196.035, -79.0933, 0.81", "-42.9092, -196.631, -78.9998, 0.52", "-42.7697, -197.456, -78.9158, 0.52", "-42.68, -198.068, -78.8863, 0.29", "-42.6113, -198.962, -78.8827, 0.29", "-42.6331, -200.186, -78.9704, 0.29", "-42.7699, -200.963, -79.0885, 0.81", "-43.026, -201.758, -79.2245, 1.11", "-43.3255, -202.402, -79.3463, 1.11", "-43.7004, -203.038, -79.4697, 0.74", "-44.1743, -203.684, -79.6016, 0.37", "-44.8805, -204.544, -79.8095, 0.29", "-45.0984, -204.841, -79.8826, 0.74", "-45.1408, -204.913, -79.8996, 0.74", "-45.3454, -205.403, -80.0545, 0.96", "-45.3815, -205.526, -80.0973, 0.96", "-45.6283, -206.643, -80.4684, 0.29", "-45.7949, -207.363, -80.7016, 0.29", "-45.932, -207.864, -80.8474, 0.81", "-46.2869, -208.919, -81.1135, 1.03", "-46.5522, -209.542, -81.2418, 0.81", "-46.9829, -210.34, -81.3808, 0.29", "-47.5427, -211.158, -81.4874, 0.29", "-47.8905, -211.573, -81.5336, 0.44", "-48.3318, -212.061, -81.5749, 0.44", "-48.8957, -212.614, -81.5876, 0.66", "-49.5533, -213.174, -81.6083, 0.96", "-49.9066, -213.43, -81.627, 1.4", "-50.8888, -214.074, -81.7097, 1.69" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "5.92006, 69.5685, 1.15469, 1.11", "5.45884, 71.65, 1.27764, 1.11", "5.30782, 72.2518, 1.30303, 0.96", "5.07086, 73.0304, 1.32255, 0.96", "4.78119, 73.8993, 1.33705, 0.96", "4.40571, 74.9134, 1.34898, 0.96", "3.80019, 76.4457, 1.36268, 0.96", "3.7606, 76.5225, 1.36005, 0.96", "3.09342, 77.6983, 1.32054, 1.11", "3.02547, 77.8089, 1.31731, 1.11", "2.44294, 78.7054, 1.29495, 1.11", "2.38671, 78.7861, 1.29362, 1.11", "1.75529, 79.6692, 1.28436, 1.33", "1.18086, 80.4877, 1.27391, 1.18", "0.58924, 81.4084, 1.25872, 0.96", "0.54102, 81.4969, 1.25672, 0.96", "0.183909, 82.2566, 1.239, 0.88", "-0.214794, 83.2706, 1.212, 0.88", "-0.238552, 83.3531, 1.20957, 0.88", "-0.499628, 84.6658, 1.16651, 0.88", "-0.661523, 85.9577, 1.11909, 1.11", "-0.67017, 86.0814, 1.11452, 1.11", "-0.685218, 87.1588, 1.07395, 1.11", "-0.662561, 88.0752, 1.04268, 1.33", "-0.632947, 88.6459, 1.0254, 1.33", "-0.520723, 89.672, 0.957326, 1.18", "-0.367934, 90.6775, 0.859502, 1.18", "-0.34326, 90.7947, 0.839003, 1.18", "-0.0762447, 91.7763, 0.603822, 1.11", "0.242535, 92.7564, 0.320405, 1.11", "0.612964, 93.7327, -0.00132793, 1.03", "0.963718, 94.6156, -0.320424, 0.88", "1.46389, 95.9745, -0.836502, 0.88", "1.51011, 96.1358, -0.896335, 0.88", "1.74633, 97.2762, -1.22988, 0.88", "1.75471, 97.3612, -1.24536, 0.88", "1.7035, 98.2895, -1.28224, 0.88", "1.48268, 99.5021, -1.21239, 0.88", "1.22588, 100.37, -1.09739, 0.88", "0.732798, 101.699, -0.92388, 0.96", "0.609977, 101.952, -0.892571, 0.96", "0.212764, 102.686, -0.81607, 1.47", "-0.176927, 103.376, -0.743865, 1.62", "-0.721283, 104.288, -0.633587, 1.11", "-1.26244, 105.192, -0.540244, 1.11", "-1.94309, 106.33, -0.460579, 1.11", "-2.48637, 107.321, -0.37904, 0.96", "-2.95159, 108.26, -0.288634, 0.96", "-3.49335, 109.387, -0.174223, 0.96", "-3.53197, 109.48, -0.165641, 0.96", "-3.77243, 110.164, -0.135952, 0.96", "-4.13372, 111.399, -0.21459, 1.18", "-4.16477, 111.516, -0.232555, 1.18", "-4.55134, 113.005, -0.549184, 1.18", "-4.93845, 114.536, -0.925747, 1.03", "-5.22141, 115.629, -1.19569, 0.88", "-5.61096, 117.108, -1.57291, 1.03", "-5.884, 118.133, -1.8335, 1.03", "-6.02713, 118.713, -1.96336, 1.03", "-6.05506, 118.867, -1.9909, 1.03", "-6.21312, 119.839, -2.09865, 1.03", "-6.24118, 120.022, -2.10529, 1.03", "-6.39349, 120.896, -2.03957, 1.03", "-6.68009, 122.386, -1.87952, 1.18", "-6.94519, 123.706, -1.68122, 1.18", "-7.11502, 124.513, -1.53489, 1.18", "-7.30662, 125.386, -1.34982, 1.18", "-7.72191, 127.208, -0.943154, 1.18", "-8.01534, 128.492, -0.613754, 1.18", "-8.30754, 129.807, -0.252984, 1.18", "-8.32572, 129.891, -0.231184, 1.18", "-8.48453, 130.658, -0.074434, 1.18", "-8.77117, 132.052, 0.119114, 1.47", "-8.95362, 133.009, 0.183453, 1.47", "-9.13793, 133.959, 0.222595, 1.33", "-9.40062, 135.385, 0.24198, 1.03", "-9.76884, 137.351, 0.252306, 0.96", "-10.0734, 138.962, 0.245167, 0.96", "-10.2961, 140.107, 0.204991, 0.96", "-10.49, 141.071, 0.13951, 1.11", "-10.5992, 141.636, 0.0946497, 1.11", "-10.7975, 142.79, -0.0164486, 1.25", "-10.8696, 143.31, -0.0729088, 1.25", "-11.0587, 144.619, -0.24168, 1.03", "-11.0951, 144.817, -0.269025, 1.03", "-11.2118, 145.417, -0.329722, 1.03", "-11.336, 146.014, -0.365544, 1.03", "-11.4651, 146.732, -0.339843, 1.03", "-11.6655, 147.91, -0.200559, 1.03", "-11.7932, 148.785, -0.032448, 1.03", "-11.9031, 149.597, 0.201155, 1.03", "-11.9235, 149.756, 0.258875, 1.03", "-12.0715, 151.002, 0.771248, 1.03", "-12.081, 151.081, 0.806888, 1.03", "-12.2782, 152.452, 1.43255, 1.03", "-12.5142, 153.867, 2.01546, 1.03", "-12.5367, 153.989, 2.0552, 1.03", "-12.675, 154.943, 2.29392, 1.03", "-12.683, 155.031, 2.31173, 1.03", "-12.7099, 156.621, 2.59112, 1.03", "-12.7001, 156.805, 2.61613, 1.03", "-12.6085, 157.9, 2.71287, 1.25", "-12.4729, 159.504, 2.84486, 1.25", "-12.3497, 160.853, 2.9512, 1.25", "-12.2752, 162.079, 3.03767, 0.88", "-12.2541, 163.288, 3.08618, 0.74", "-12.3089, 164.298, 3.07595, 1.18", "-12.5134, 165.884, 2.98154, 1.4", "-12.5544, 166.066, 2.96143, 1.4", "-12.9317, 167.327, 2.76291, 1.4", "-13.4242, 168.686, 2.53285, 1.18", "-13.906, 169.922, 2.31099, 1.03", "-13.9377, 170.001, 2.29561, 1.03", "-14.4091, 171.144, 2.05602, 1.03", "-14.6493, 171.738, 1.93529, 0.88", "-15.2832, 173.405, 1.62937, 1.11", "-15.3144, 173.488, 1.62056, 1.11" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "5.92006, 69.5685, 1.15469, 0.52", "5.52355, 70.4622, 0.402485, 0.52", "5.1374, 71.1146, -0.174496, 0.74", "4.74718, 71.575, -0.650025, 0.74", "4.58938, 71.7311, -0.82561, 0.74", "4.29228, 71.979, -1.22932, 0.74", "3.8155, 72.3239, -2.00676, 0.44", "3.5479, 72.4753, -2.47932, 0.81", "3.07941, 72.7273, -3.37084, 0.81", "3.05541, 72.7418, -3.42427, 0.81", "2.22979, 73.3488, -5.38779, 1.03", "1.68946, 73.8593, -6.80884, 0.81", "1.54141, 74.0432, -7.23335, 0.81", "1.22455, 74.5028, -8.1065, 0.88", "0.838967, 75.0891, -9.03548, 0.81", "0.492504, 75.5307, -9.68457, 0.81", "-0.0678256, 76.1025, -10.4399, 0.59", "-0.404319, 76.3442, -10.8312, 0.59", "-0.998735, 76.5752, -11.5184, 0.88", "-1.68394, 76.6806, -12.8594, 0.88", "-2.16257, 76.6729, -14.1468, 0.88", "-2.37952, 76.6417, -14.8642, 1.25", "-2.75164, 76.5534, -16.2559, 1.25", "-3.16976, 76.4396, -17.9743, 1.11", "-4.38492, 76.1572, -23.6768, 1.03", "-4.68928, 76.1129, -25.3259, 0.66", "-4.69841, 76.1146, -25.3926, 0.66", "-4.82641, 76.2243, -26.7053, 0.52", "-4.86327, 76.3203, -27.3018, 0.52", "-4.87938, 76.5681, -28.1943, 0.52", "-4.87003, 76.6028, -28.2541, 0.52", "-4.4183, 77.542, -29.7222, 1.25", "-4.31968, 77.7523, -30.0572, 1.69", "-4.29895, 77.7927, -30.122, 1.69", "-4.20437, 78.0102, -30.4791, 1.69", "-3.97705, 79.0167, -32.1888, 0.88", "-4.00988, 80.0573, -33.8006, 0.59", "-4.12226, 80.4378, -34.3583, 0.81", "-4.1377, 80.4797, -34.4236, 0.81", "-4.2732, 80.8576, -35.06, 1.11", "-4.54354, 81.6452, -36.3969, 1.11", "-4.68618, 82.0866, -37.1089, 0.96", "-4.88075, 82.9355, -38.4919, 0.88", "-5.0406, 83.9961, -40.1104, 0.81", "-5.09317, 84.9448, -41.521, 0.52", "-5.05637, 85.2293, -41.9898, 0.52", "-4.93607, 85.5917, -42.5915, 0.59", "-4.89606, 85.6648, -42.7102, 0.59", "-4.5399, 86.1665, -43.458, 0.59", "-3.89003, 86.9949, -44.6423, 0.81", "-2.90867, 88.0933, -46.2946, 1.4", "-2.55603, 88.424, -46.8788, 1.62", "-2.02099, 88.8213, -47.7102, 1.84", "-1.98509, 88.8435, -47.763, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "38.3636, 54.2093, 3.46263, 1.18", "38.3813, 55.6793, 5.05487, 1.18", "38.4627, 56.6323, 5.82807, 0.96", "38.4778, 56.7102, 5.87059, 0.96", "38.8318, 57.8035, 6.26542, 0.74", "38.8636, 57.8834, 6.28479, 0.74", "39.1552, 58.4986, 6.38204, 0.88", "39.657, 59.342, 6.41297, 0.88", "40.2296, 60.1904, 6.45055, 0.59", "40.8111, 60.9399, 6.59204, 0.52", "41.3017, 61.4882, 6.78028, 0.81", "41.9677, 62.2138, 7.07401, 0.52", "43.0611, 63.3383, 7.6681, 0.88", "43.2311, 63.5078, 7.79237, 0.88", "44.1812, 64.4054, 8.70503, 1.33", "44.3268, 64.5376, 8.88911, 1.33" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "38.3636, 54.2093, 3.46263, 1.11", "40.2769, 53.1214, 2.07089, 1.11", "40.9286, 52.8153, 1.70022, 1.03", "41.6786, 52.4848, 1.33753, 0.88", "43.0563, 51.9081, 0.826499, 0.59", "43.8321, 51.5654, 0.573385, 0.81", "44.5259, 51.2433, 0.354063, 0.81", "45.1208, 50.9805, 0.212212, 1.03", "45.3778, 50.8875, 0.131142, 1.03", "46.2807, 50.5943, -0.266171, 1.03", "47.6051, 50.0913, -0.977994, 0.66", "48.62, 49.6258, -1.62911, 0.81", "49.5633, 49.0949, -2.32015, 0.59", "50.4239, 48.5166, -3.0343, 0.96", "51.5928, 47.6034, -4.08879, 0.59", "52.3752, 46.8898, -4.86081, 0.59", "53.1032, 46.1472, -5.55952, 0.96", "53.747, 45.4483, -6.10081, 0.81", "54.3754, 44.752, -6.51054, 0.81", "54.7611, 44.3579, -6.67238, 0.96", "55.6468, 43.6596, -6.89496, 0.37", "56.4922, 43.2199, -7.05174, 0.37", "57.5274, 42.8814, -7.19578, 0.44", "58.227, 42.7472, -7.29199, 0.81", "59.0503, 42.6471, -7.40757, 1.03", "60.2683, 42.4993, -7.59556, 0.52", "60.7038, 42.4119, -7.67691, 0.44", "60.7605, 42.3905, -7.69353, 0.44", "61.8822, 41.6933, -8.06709, 0.44", "62.2625, 41.3832, -8.19424, 0.88", "62.9102, 40.7499, -8.36618, 1.03", "63.748, 39.872, -8.47047, 1.03", "64.4999, 39.1033, -8.50039, 0.96", "65.2894, 38.3896, -8.45656, 0.52", "65.3367, 38.3511, -8.44888, 0.52", "65.925, 37.9804, -8.31086, 0.59", "66.7197, 37.641, -8.04881, 0.59", "67.2959, 37.4786, -7.8007, 0.29", "68.1443, 37.3042, -7.39464, 0.29", "68.1986, 37.2937, -7.36882, 0.29", "68.8696, 37.1244, -7.04878, 0.66", "69.4087, 36.9551, -6.79097, 0.81", "70.0692, 36.6538, -6.45578, 0.88", "70.1613, 36.5942, -6.39718, 0.88", "70.6514, 36.1899, -6.04142, 1.03", "71.0443, 35.8451, -5.7559, 1.03", "71.0846, 35.8079, -5.7278, 1.03", "71.5989, 35.3249, -5.36983, 0.81", "72.451, 34.5453, -4.79791, 0.37", "72.9224, 34.1462, -4.50755, 0.66", "73.3238, 33.8252, -4.2812, 0.66", "73.912, 33.3776, -4.01206, 0.52", "74.4106, 33.022, -3.8494, 0.52", "75.1454, 32.5106, -3.68945, 0.96", "75.6973, 32.1009, -3.62343, 1.25", "76.3744, 31.5706, -3.55996, 1.03", "77.1027, 30.966, -3.50632, 0.81", "77.8838, 30.326, -3.46583, 0.66", "78.286, 30.0223, -3.44567, 0.74", "78.7554, 29.6938, -3.41348, 0.74", "79.4497, 29.2484, -3.32336, 0.37", "79.4942, 29.2232, -3.31363, 0.37", "80.1022, 28.9167, -3.12522, 0.29", "80.993, 28.5185, -2.918, 0.66", "81.6479, 28.2378, -2.81848, 1.03", "82.3423, 27.9336, -2.74758, 0.74", "83.1602, 27.547, -2.69417, 0.74", "83.6662, 27.2732, -2.66832, 0.96", "84.8678, 26.5121, -2.61892, 1.18", "85.3295, 26.1961, -2.60698, 0.96", "85.9221, 25.777, -2.5875, 0.44", "85.9789, 25.7362, -2.58518, 0.44", "86.6863, 25.2098, -2.56036, 0.66", "87.1535, 24.8599, -2.55565, 0.81", "87.3834, 24.6895, -2.5722, 0.81", "87.9386, 24.2995, -2.66365, 0.66", "88.134, 24.1711, -2.701, 0.66", "88.8546, 23.7242, -2.80443, 0.66", "89.6796, 23.248, -2.89052, 0.44", "90.9357, 22.5208, -2.95647, 0.37", "91.5857, 22.1213, -2.96149, 0.88", "92.4975, 21.5349, -2.88352, 0.88", "93.221, 21.0762, -2.74884, 1.03", "93.7858, 20.7311, -2.57776, 1.03", "94.3137, 20.4396, -2.36761, 0.74", "94.9588, 20.122, -2.06691, 0.52", "95.7841, 19.7476, -1.69696, 0.52", "96.4869, 19.4299, -1.39547, 0.29", "96.5485, 19.4005, -1.37437, 0.29", "97.108, 19.0831, -1.19761, 0.29", "97.5901, 18.7435, -1.07419, 0.59", "97.6606, 18.6828, -1.06005, 0.59", "98.1765, 18.1, -1.0154, 0.88", "98.6424, 17.4247, -0.987888, 0.74", "99.0656, 16.6864, -1.02043, 0.44", "99.3751, 16.0401, -1.08941, 0.29", "99.5278, 15.6703, -1.14791, 0.59", "99.7193, 15.0943, -1.26402, 0.44", "99.8418, 14.5967, -1.39231, 0.44", "99.9754, 13.641, -1.65208, 0.81", "99.9773, 13.5812, -1.6692, 0.81", "99.9427, 13.0144, -1.80091, 1.03", "99.8694, 12.3342, -1.92681, 0.88", "99.8626, 12.2733, -1.93451, 0.88", "99.7817, 11.4141, -1.99222, 0.59", "99.7439, 10.8066, -1.98664, 0.59", "99.7384, 10.124, -1.95406, 0.88", "99.7453, 9.93579, -1.93894, 0.88", "99.8444, 9.01466, -1.81685, 0.37", "99.9418, 8.46216, -1.72787, 0.74", "100.069, 7.93276, -1.62698, 0.96", "100.264, 7.19406, -1.51239, 0.96", "100.28, 7.13494, -1.50449, 0.96", "100.464, 6.49392, -1.45157, 1.25", "100.771, 5.6244, -1.39981, 0.44", "101.01, 5.08641, -1.40498, 0.37", "101.429, 4.29486, -1.44582, 0.96", "101.836, 3.62582, -1.49153, 0.96", "102.494, 2.68153, -1.58111, 0.74", "103.061, 1.96395, -1.68911, 0.74", "103.805, 1.11996, -1.83604, 0.29", "104.182, 0.709449, -1.88822, 0.52", "104.754, 0.077543, -1.9262, 0.88", "105.231, -0.472707, -1.93221, 1.03", "106.012, -1.46077, -1.87349, 0.29", "106.316, -1.90104, -1.78605, 0.88", "106.828, -2.70553, -1.43027, 0.81", "107.099, -3.12599, -1.10764, 0.96", "107.381, -3.53292, -0.624399, 0.59", "107.408, -3.56833, -0.567752, 0.59", "107.928, -4.20517, 0.682987, 0.52", "108.229, -4.56535, 1.37463, 0.52", "108.593, -5.00744, 2.10987, 0.88", "108.618, -5.04081, 2.15506, 0.88", "108.754, -5.24829, 2.38997, 1.03", "109.038, -5.76325, 2.86076, 1.03", "109.286, -6.36456, 3.2869, 0.44", "109.494, -7.05608, 3.72707, 0.44", "109.662, -7.72646, 4.1281, 0.44", "109.835, -8.40674, 4.54956, 0.52", "109.969, -8.90047, 4.86237, 0.44", "110.184, -9.62455, 5.32521, 0.44", "110.344, -10.1186, 5.6306, 0.81", "110.539, -10.6523, 5.92799, 0.81", "110.811, -11.2959, 6.27215, 0.37", "111.108, -11.9408, 6.58311, 0.81", "111.313, -12.3529, 6.77719, 0.88", "111.472, -12.6636, 6.91484, 0.88", "111.737, -13.1974, 7.15804, 0.66", "112.125, -14.0133, 7.5342, 0.44", "112.471, -14.6985, 7.85401, 0.29", "112.781, -15.2206, 8.0729, 0.59", "113.1, -15.7125, 8.25345, 0.74", "113.172, -15.8189, 8.28648, 0.74", "113.522, -16.337, 8.38329, 0.59", "114.041, -17.1387, 8.41405, 0.44", "114.58, -18.0317, 8.38483, 0.44", "114.824, -18.4873, 8.35035, 0.44", "115.117, -19.1189, 8.29276, 0.74", "115.467, -19.9774, 8.20906, 0.74", "115.787, -20.893, 8.11671, 0.29", "115.907, -21.282, 8.07616, 0.96", "116.04, -21.7089, 8.04691, 0.96", "116.258, -22.3144, 8.01438, 0.81", "116.283, -22.3732, 8.01462, 0.81", "116.505, -22.8236, 8.06891, 0.96", "116.868, -23.4731, 8.16359, 0.52", "117.14, -23.9262, 8.22806, 0.52", "117.167, -23.9711, 8.23462, 0.52", "117.509, -24.6012, 8.29555, 0.44", "117.886, -25.3538, 8.34344, 0.59", "118.407, -26.4709, 8.40058, 0.29", "118.588, -26.8736, 8.42025, 0.96", "118.873, -27.5434, 8.446, 1.33", "119.337, -28.6771, 8.49174, 0.29", "119.745, -29.6924, 8.54206, 0.29", "119.973, -30.2665, 8.5803, 0.88", "119.995, -30.326, 8.58836, 0.88", "120.223, -30.9923, 8.72398, 0.88", "120.529, -32.0099, 9.0158, 0.29", "120.724, -32.7678, 9.30924, 0.29", "120.77, -33.0041, 9.41835, 0.66", "120.89, -33.8463, 9.83054, 0.66", "120.961, -34.4611, 10.1458, 0.66", "121.017, -35.0193, 10.4443, 0.96", "121.058, -35.545, 10.716, 0.74", "121.092, -36.1394, 11.0223, 0.52", "121.131, -36.8823, 11.4217, 0.44", "121.147, -37.065, 11.519, 0.44", "121.245, -37.836, 11.9053, 0.37", "121.399, -38.7609, 12.3456, 0.37", "121.58, -39.7502, 12.7906, 0.74", "121.79, -40.5778, 13.0991, 0.29", "122.088, -41.3862, 13.3646, 0.29", "122.492, -42.2366, 13.5728, 0.74", "122.713, -42.5789, 13.6238, 1.03", "122.752, -42.6263, 13.626, 1.03", "123.651, -43.5478, 13.5908, 0.22", "124.411, -44.2819, 13.5221, 0.22", "124.874, -44.7196, 13.4821, 0.81", "125.36, -45.197, 13.463, 0.81", "125.402, -45.2419, 13.4619, 0.81", "126.026, -46.0006, 13.4822, 0.29", "126.43, -46.6278, 13.4793, 0.44", "126.476, -46.7047, 13.4688, 0.44", "126.761, -47.1545, 13.3816, 0.44", "126.798, -47.2127, 13.3609, 0.44", "127.208, -47.8985, 13.076, 0.52", "127.828, -49.0361, 12.4937, 0.52", "128.226, -49.7508, 12.0512, 0.66", "128.51, -50.2097, 11.711, 0.59", "129.203, -51.2623, 10.8197, 0.37", "129.516, -51.7283, 10.4192, 0.29", "130.159, -52.6731, 9.59287, 0.74", "130.901, -53.7936, 8.67299, 0.81", "131.816, -55.2362, 7.52665, 0.29", "132.139, -55.758, 7.09016, 0.66", "132.548, -56.4017, 6.55375, 0.29", "133.0, -57.1131, 5.96599, 0.59", "133.274, -57.5614, 5.60946, 0.74", "133.894, -58.6587, 4.77762, 1.33", "134.88, -60.4618, 3.43687, 0.29", "135.07, -60.7932, 3.18963, 0.59", "135.208, -61.0172, 3.02427, 0.59", "135.918, -62.0765, 2.33084, 0.52", "136.27, -62.5496, 2.06885, 0.74", "136.548, -62.8883, 1.94843, 0.74", "137.13, -63.5265, 1.84308, 0.37", "138.011, -64.441, 1.69503, 0.37", "138.658, -65.0753, 1.63334, 0.37", "138.995, -65.3942, 1.63111, 0.66", "139.321, -65.6992, 1.62451, 0.88", "139.586, -65.95, 1.61221, 0.88", "140.696, -67.0207, 1.54874, 0.29", "141.619, -67.9578, 1.47766, 0.22", "141.798, -68.1535, 1.46115, 0.66", "142.432, -68.8909, 1.39418, 0.22", "142.67, -69.1962, 1.3529, 0.52", "143.075, -69.7908, 1.2643, 0.29", "143.263, -70.1322, 1.22014, 0.74", "143.432, -70.5114, 1.15638, 0.74", "143.739, -71.2967, 1.00145, 0.22", "144.067, -72.2476, 0.806837, 0.37", "144.213, -72.6763, 0.692403, 0.37", "144.361, -73.1513, 0.549138, 0.59", "144.493, -73.5615, 0.429102, 0.59", "144.709, -74.2642, 0.224758, 0.22", "144.808, -74.5774, 0.142451, 0.52", "145.203, -75.6569, -0.106313, 0.29", "145.425, -76.1893, -0.253418, 1.11", "145.679, -76.7471, -0.431863, 1.18" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-14.534, -215.329, -167.572, 0.29", "-14.3662, -217.082, -167.891, 0.29", "-14.3119, -218.185, -168.066, 0.29", "-14.3167, -219.526, -168.099, 0.22", "-14.3827, -220.362, -167.971, 0.74", "-14.4519, -220.991, -167.759, 0.88", "-14.4601, -221.076, -167.724, 0.88", "-14.5473, -221.584, -167.438, 0.88", "-14.8356, -222.952, -166.494, 0.29", "-15.0619, -224.077, -165.559, 0.29", "-15.2451, -225.174, -164.542, 0.88", "-15.3447, -225.825, -163.897, 0.88" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-14.534, -215.329, -167.572, 0.59", "-16.1669, -217.031, -171.241, 0.59", "-16.5941, -217.49, -172.186, 0.37", "-17.1531, -218.044, -173.281, 0.37", "-17.9021, -218.791, -174.671, 0.96", "-18.6048, -219.525, -175.959, 1.33", "-20.0141, -221.102, -178.581, 0.59", "-20.326, -221.549, -179.195, 0.29", "-20.7643, -222.234, -180.163, 0.29", "-21.0127, -222.698, -180.883, 0.88", "-21.1507, -222.985, -181.368, 0.88", "-21.4042, -223.577, -182.417, 0.66", "-21.6649, -224.315, -183.757, 0.88", "-22.0008, -225.457, -185.827, 1.4", "-22.6121, -227.656, -189.867, 0.59", "-22.9595, -228.639, -191.724, 0.59", "-23.105, -229.02, -192.464, 0.52", "-23.1974, -229.272, -192.964, 1.03", "-23.3342, -229.633, -193.662, 0.88", "-23.889, -230.948, -196.13, 0.22", "-24.34, -231.786, -197.601, 0.59", "-24.9746, -232.683, -199.3, 0.74", "-25.6421, -233.488, -200.951, 0.44", "-26.0592, -233.954, -201.904, 0.74", "-26.8258, -234.849, -203.606, 1.11", "-27.2164, -235.35, -204.418, 0.96", "-28.6077, -237.214, -207.021, 0.74", "-28.64, -237.254, -207.069, 0.74", "-29.2102, -237.945, -207.822, 0.74", "-30.0009, -238.999, -208.867, 0.74", "-30.7672, -240.143, -209.816, 0.37", "-31.153, -240.786, -210.316, 1.03", "-31.5119, -241.484, -210.761, 1.18", "-32.5116, -243.433, -212.029, 0.29", "-32.8513, -244.084, -212.459, 0.59", "-33.122, -244.61, -212.771, 0.59", "-33.4728, -245.425, -213.161, 0.44", "-33.7162, -246.087, -213.42, 0.29", "-33.7421, -246.161, -213.442, 0.29", "-33.9496, -246.753, -213.562, 0.59", "-34.164, -247.379, -213.892, 0.59", "-34.31, -247.942, -214.395, 0.44", "-34.3972, -248.498, -215.086, 0.29", "-34.4801, -249.121, -216.062, 0.88", "-34.5542, -249.782, -217.284, 1.11", "-34.7141, -251.251, -220.342, 0.74", "-34.811, -252.078, -222.115, 0.59", "-34.9367, -253.01, -224.131, 0.29", "-35.1191, -254.028, -226.295, 0.74", "-35.451, -255.42, -229.11, 1.03", "-35.9164, -256.859, -231.729, 0.52", "-36.1645, -257.441, -232.562, 0.44", "-36.3767, -257.86, -233.029, 0.88", "-36.8408, -258.68, -233.661, 1.11", "-37.1414, -259.177, -233.863, 1.11", "-37.7479, -260.106, -233.976, 0.59", "-38.396, -261.108, -233.971, 0.44", "-38.7607, -261.703, -233.993, 0.66", "-39.3704, -262.836, -234.072, 0.59", "-39.8003, -263.722, -234.408, 0.37", "-40.1744, -264.49, -234.89, 0.44", "-40.6354, -265.412, -235.663, 0.66", "-40.9877, -266.114, -236.358, 0.81", "-41.3142, -266.77, -237.084, 0.88", "-43.0514, -270.0, -240.951, 0.52", "-43.3561, -270.479, -241.565, 0.29", "-43.5577, -270.74, -241.924, 0.59", "-43.8317, -271.019, -242.3, 0.59", "-44.5793, -271.619, -242.981, 0.37", "-45.4187, -272.142, -243.38, 0.37", "-46.3504, -272.617, -243.376, 0.37", "-46.4302, -272.656, -243.375, 0.37", "-47.6444, -273.204, -243.349, 0.22", "-48.1389, -273.387, -243.321, 0.37", "-48.6137, -273.508, -243.26, 0.37", "-49.7448, -273.72, -243.125, 0.29" ],
    "parent" : "dend_102",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "20.5095, -164.155, -91.5849, 0.29", "21.1063, -164.309, -92.1336, 0.29", "21.3759, -164.407, -92.3782, 0.37", "21.4217, -164.427, -92.4156, 0.37", "21.9816, -164.763, -92.8699, 0.22", "22.03, -164.794, -92.9089, 0.22", "22.3441, -165.005, -93.1545, 0.52", "22.3843, -165.039, -93.1847, 0.52", "22.7327, -165.335, -93.4038, 0.52", "23.3665, -165.847, -93.7481, 0.22", "23.4121, -165.881, -93.7697, 0.22", "23.6178, -166.039, -93.8673, 0.37", "23.9846, -166.32, -94.0401, 0.22", "24.7326, -166.888, -94.378, 0.96", "24.7803, -166.925, -94.3971, 0.96" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "20.5095, -164.155, -91.5849, 0.37", "21.1667, -165.334, -92.6596, 0.37", "21.568, -166.199, -93.3943, 0.66", "21.7455, -166.635, -93.7385, 0.88", "21.9183, -167.123, -94.0914, 1.18", "22.3966, -168.68, -95.1275, 0.44", "22.5158, -169.106, -95.3868, 0.29", "22.6413, -169.791, -95.7278, 0.88", "22.6989, -170.193, -95.8896, 1.11", "22.7738, -170.709, -96.0549, 0.66", "22.8785, -171.385, -96.1912, 0.37", "23.0146, -172.004, -96.2018, 0.52", "23.0534, -172.123, -96.1965, 0.52", "23.378, -172.828, -96.1421, 0.59", "23.6207, -173.271, -96.098, 0.66", "23.6804, -173.366, -96.0802, 0.66", "24.028, -173.916, -95.9484, 0.37", "24.4001, -174.544, -95.6795, 0.37", "24.6768, -175.02, -95.4272, 0.37", "24.9677, -175.519, -95.1352, 0.96", "25.4294, -176.267, -94.6678, 1.25", "25.8663, -176.916, -94.2631, 0.96", "26.9741, -178.472, -93.211, 0.52", "27.4422, -179.104, -92.7638, 0.59", "27.7301, -179.478, -92.4944, 0.74", "28.1024, -179.942, -92.17, 0.74", "28.7154, -180.674, -91.7268, 0.29", "29.2774, -181.314, -91.3882, 0.66", "29.3151, -181.36, -91.3746, 0.66", "29.5968, -181.781, -91.2779, 0.29", "29.8422, -182.239, -91.2008, 0.74", "30.0528, -182.742, -91.1521, 0.88", "30.0751, -182.8, -91.1485, 0.88", "30.3445, -183.448, -91.1353, 0.37", "30.6573, -184.135, -91.1108, 0.59", "30.8538, -184.532, -91.0914, 0.88", "31.2139, -185.207, -91.053, 0.29", "31.5081, -185.726, -91.0019, 0.22", "31.6475, -185.963, -90.972, 0.81", "31.8876, -186.351, -90.9118, 1.18", "31.9221, -186.403, -90.9029, 1.18", "32.318, -186.988, -90.7915, 1.03", "32.8232, -187.811, -90.564, 0.29", "33.2194, -188.592, -90.3168, 0.22", "33.25, -188.67, -90.2868, 0.22", "33.4384, -189.27, -90.0371, 0.29", "33.5873, -189.786, -89.8197, 1.18", "33.9051, -190.842, -89.3379, 0.74", "34.0759, -191.383, -89.0884, 0.52", "34.3196, -192.068, -88.7307, 0.29", "34.5321, -192.632, -88.3946, 0.52", "34.7678, -193.2, -88.0036, 0.96", "35.1377, -193.95, -87.4764, 1.18", "35.5336, -194.647, -86.9501, 1.03", "36.0834, -195.581, -86.2071, 0.74", "36.6495, -196.588, -85.415, 0.66", "36.9591, -197.218, -84.9451, 1.03", "37.339, -198.108, -84.3458, 0.88", "37.7344, -199.142, -83.7621, 0.74", "38.0165, -199.932, -83.4141, 0.74", "38.2648, -200.675, -83.1955, 0.74", "38.5482, -201.576, -83.0315, 0.52", "38.7718, -202.305, -82.942, 0.52", "39.0062, -203.072, -82.8768, 0.44", "39.2417, -203.802, -82.8545, 0.74", "39.433, -204.336, -82.8422, 0.96", "39.6191, -204.819, -82.8311, 0.96", "40.0152, -205.808, -82.8099, 0.37", "40.3718, -206.634, -82.7968, 0.37", "40.3937, -206.681, -82.7962, 0.37", "40.7319, -207.288, -82.7933, 0.66", "40.9977, -207.738, -82.7946, 0.88", "41.361, -208.308, -82.8059, 0.59", "41.7334, -208.837, -82.839, 0.22", "41.7748, -208.885, -82.8416, 0.22", "42.3075, -209.424, -82.869, 0.22" ],
    "parent" : "dend_99",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-10.5525, -289.824, -67.0499, 0.52", "-8.64393, -289.727, -67.6968, 0.52", "-7.69349, -289.762, -68.0644, 0.52", "-6.68812, -289.885, -68.5948, 0.66", "-5.66704, -290.077, -69.2386, 0.59", "-4.42897, -290.38, -70.0736, 0.29", "-4.06449, -290.5, -70.362, 0.59", "-3.66082, -290.684, -70.8005, 0.59", "-2.57171, -291.28, -72.1284, 0.29", "-1.98305, -291.656, -72.8935, 0.88", "-1.73933, -291.823, -73.2406, 0.88", "-0.549885, -292.539, -75.2536, 0.29", "0.171776, -292.883, -76.6412, 0.59", "0.45251, -292.966, -77.3005, 0.44", "0.477845, -292.97, -77.3713, 0.44", "0.995204, -292.944, -79.0077, 0.44", "1.83191, -292.717, -81.9138, 0.29", "1.99471, -292.63, -82.5161, 0.29", "2.75916, -292.147, -85.0833, 0.29", "2.78107, -292.132, -85.1649, 0.29", "2.80204, -292.118, -85.2383, 0.44", "2.84567, -292.091, -85.3817, 0.44", "3.17801, -291.889, -86.4693, 0.29", "3.45708, -291.712, -87.3824, 0.81", "5.66837, -290.271, -94.6021, 0.29", "6.13837, -289.957, -96.1539, 0.22", "6.6246, -289.645, -97.8029, 0.44", "7.5129, -289.12, -101.043, 0.29", "7.67507, -289.029, -101.683, 0.88", "7.78497, -288.993, -102.137, 0.88", "7.80495, -288.992, -102.21, 0.88", "8.72849, -288.975, -105.853, 0.29", "9.55067, -288.946, -109.476, 0.52", "9.56593, -288.945, -109.549, 0.52", "10.532, -288.865, -114.335, 0.22", "10.7505, -288.831, -115.451, 0.37", "11.1612, -288.74, -117.606, 0.96", "11.6721, -288.527, -120.433, 0.22", "11.7553, -288.47, -120.902, 0.59" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-10.5525, -289.824, -67.0499, 0.81", "-10.5304, -290.384, -67.1794, 0.81", "-10.4968, -290.907, -67.2862, 1.03", "-10.4287, -291.682, -67.4274, 0.96", "-10.3466, -292.374, -67.5391, 0.74", "-10.2635, -292.983, -67.5649, 0.29", "-10.2108, -293.361, -67.5507, 0.29", "-10.168, -293.64, -67.5116, 0.52", "-10.1392, -293.892, -67.447, 0.52", "-10.117, -294.217, -67.3311, 0.52", "-10.0693, -295.34, -66.91, 0.29", "-10.0494, -295.842, -66.7351, 0.52", "-10.0314, -296.147, -66.6296, 0.81", "-9.97323, -296.728, -66.4179, 0.88", "-9.88401, -297.186, -66.2521, 1.18", "-9.72511, -297.772, -66.0465, 1.4", "-9.41579, -298.613, -65.7806, 0.52", "-9.06859, -299.358, -65.5396, 0.52", "-8.59743, -300.219, -65.2729, 0.52", "-8.07597, -301.084, -65.0243, 0.74", "-8.04443, -301.135, -65.0107, 0.74", "-7.69042, -301.753, -64.8897, 0.29", "-7.34027, -302.47, -64.8116, 0.29", "-7.0116, -303.271, -64.8005, 0.66", "-6.86324, -303.719, -64.8248, 0.88", "-6.71049, -304.334, -64.873, 0.88", "-6.491, -305.282, -64.9894, 0.29", "-6.39933, -305.68, -65.0549, 0.88", "-6.38539, -305.74, -65.0714, 0.88", "-6.27591, -306.148, -65.2154, 1.03", "-6.25621, -306.213, -65.24, 1.03", "-5.94945, -307.175, -65.5907, 0.74", "-5.68783, -307.868, -65.8113, 0.88", "-5.30467, -308.797, -66.0783, 1.18", "-5.11262, -309.253, -66.1893, 1.18", "-4.88535, -309.78, -66.2914, 0.66", "-4.57639, -310.485, -66.3853, 0.29", "-4.26478, -311.181, -66.4219, 0.29", "-4.05625, -311.655, -66.4209, 0.59", "-3.79903, -312.248, -66.3812, 0.74", "-3.54989, -312.844, -66.3342, 0.74", "-3.41851, -313.205, -66.2676, 0.74", "-3.31324, -313.586, -66.1689, 0.88", "-3.17346, -314.206, -65.973, 0.81", "-2.99888, -314.96, -65.6958, 0.81", "-2.81772, -315.693, -65.3881, 0.59", "-2.4597, -317.005, -64.7875, 0.37", "-2.28187, -317.578, -64.5059, 0.52", "-2.10854, -318.036, -64.2694, 0.44", "-1.91499, -318.431, -64.0611, 0.52", "-1.85159, -318.535, -64.0094, 0.52", "-1.57672, -318.907, -63.8869, 0.37", "-1.49668, -319.012, -63.8765, 0.37", "-1.20822, -319.467, -63.8466, 0.81", "-1.06321, -319.827, -63.8552, 0.96", "-1.04981, -319.88, -63.8634, 0.96", "-1.00435, -320.205, -63.9376, 0.81", "-0.957328, -320.874, -64.1512, 0.52", "-0.93799, -321.323, -64.3072, 0.52", "-0.908006, -322.11, -64.5886, 0.29", "-0.870941, -322.92, -64.8691, 0.74", "-0.840718, -323.478, -65.0559, 0.88", "-0.784122, -324.286, -65.2737, 0.52", "-0.715844, -325.099, -65.4286, 0.52", "-0.66139, -325.693, -65.4795, 0.74", "-0.59997, -326.261, -65.4671, 0.44", "-0.58487, -326.392, -65.4531, 0.44", "-0.490037, -327.427, -65.2937, 0.44", "-0.470884, -328.046, -65.163, 0.22", "-0.507275, -328.639, -65.0374, 0.22", "-0.570508, -329.077, -64.981, 0.74", "-0.582237, -329.138, -64.9788, 0.74", "-0.692597, -329.633, -65.005, 0.96", "-0.707872, -329.694, -65.015, 0.96", "-0.827264, -330.272, -65.1162, 0.96", "-0.92593, -331.265, -65.3161, 0.44", "-0.948613, -331.787, -65.3746, 0.52", "-0.948869, -331.848, -65.3778, 0.52", "-0.941111, -332.364, -65.3962, 0.81", "-0.909346, -333.078, -65.4265, 0.74", "-0.835758, -334.1, -65.4644, 0.37", "-0.759779, -335.398, -65.4938, 0.37", "-0.747408, -335.88, -65.4867, 1.18", "-0.745494, -336.765, -65.4537, 0.96", "-0.763801, -337.714, -65.4013, 0.52", "-0.810977, -338.799, -65.3245, 0.52", "-0.88061, -340.015, -65.2076, 0.74", "-0.927564, -341.289, -65.0924, 0.81", "-0.929331, -341.359, -65.0823, 0.81", "-0.942254, -341.919, -64.9443, 1.03", "-0.944427, -341.987, -64.922, 1.03", "-0.948677, -342.621, -64.6924, 0.52", "-0.929585, -343.226, -64.4805, 0.37", "-0.889789, -343.811, -64.3109, 0.88", "-0.845296, -344.443, -64.1369, 0.96", "-0.8021, -344.932, -64.0034, 0.74", "-0.7347, -345.507, -63.859, 0.22", "-0.637868, -346.087, -63.7135, 0.22", "-0.49972, -346.571, -63.5886, 0.74", "-0.353394, -346.901, -63.4994, 1.03", "-0.121188, -347.283, -63.3924, 1.03", "0.234438, -347.735, -63.2188, 0.59", "0.78018, -348.334, -62.9464, 0.37", "1.33858, -348.916, -62.6592, 0.22", "1.7415, -349.36, -62.4446, 0.81", "2.05082, -349.729, -62.281, 0.81", "2.56582, -350.427, -62.0152, 0.29", "2.80937, -350.789, -61.896, 0.59", "3.04503, -351.174, -61.8015, 0.74", "3.3687, -351.789, -61.6874, 0.74", "3.64338, -352.358, -61.6207, 0.52", "4.10119, -353.289, -61.6347, 0.22", "4.33666, -353.774, -61.6964, 0.22", "4.50145, -354.121, -61.7539, 0.74", "4.70868, -354.583, -61.8486, 0.74", "5.1779, -355.693, -62.111, 0.22", "5.61181, -356.888, -62.4178, 0.81", "5.76169, -357.389, -62.5429, 0.81", "5.97919, -358.256, -62.7301, 0.22", "6.13097, -358.968, -62.8471, 0.22", "6.18755, -359.276, -62.8835, 0.81", "6.25663, -359.735, -62.9106, 1.03", "6.40134, -360.807, -62.9006, 0.29", "6.4566, -361.197, -62.8974, 0.29", "6.57842, -362.091, -62.8922, 0.29", "6.67444, -362.861, -62.8744, 0.15", "6.70785, -363.171, -62.8678, 0.52", "6.73758, -363.43, -62.8621, 0.66" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-20.8308, -80.7169, 2.16927, 0.96", "-20.7152, -81.4609, 1.83241, 0.96", "-20.6104, -82.2472, 1.49944, 0.96", "-20.5151, -83.1272, 1.16078, 0.96", "-20.4359, -84.0386, 0.840146, 0.81", "-20.3813, -84.9526, 0.511616, 0.66", "-20.3524, -85.7255, 0.240753, 0.66", "-20.3526, -85.8134, 0.213092, 0.66", "-20.3646, -86.3888, 0.0353446, 0.88", "-20.3668, -86.7691, -0.0806825, 1.03", "-20.2912, -87.7426, -0.416515, 0.74", "-20.1838, -88.3302, -0.643301, 0.74", "-20.004, -88.9547, -0.909062, 0.74", "-19.7198, -89.7293, -1.25125, 0.96", "-19.5119, -90.1867, -1.45763, 1.03", "-19.2141, -90.7993, -1.71083, 1.03", "-18.8534, -91.572, -1.97229, 0.88", "-18.6525, -92.091, -2.11568, 0.88", "-18.6185, -92.2562, -2.14379, 0.88", "-18.6365, -92.6712, -2.12289, 0.59", "-18.9, -93.4793, -1.94951, 0.52", "-19.2524, -94.086, -1.73793, 0.74", "-19.5658, -94.4791, -1.52426, 0.66", "-20.0092, -94.9553, -1.21388, 0.52", "-20.7093, -95.6532, -0.692297, 0.52", "-21.0612, -95.9905, -0.41931, 0.74", "-21.5151, -96.428, -0.0672271, 1.03", "-22.0866, -97.0209, 0.360486, 1.03", "-22.4804, -97.4626, 0.634568, 1.03", "-23.0215, -98.1354, 0.976504, 0.74", "-23.3654, -98.6046, 1.14468, 0.66", "-23.7123, -99.1453, 1.31685, 0.52", "-23.983, -99.6541, 1.4635, 0.52", "-24.0012, -99.6945, 1.47313, 0.52", "-24.1632, -100.127, 1.59124, 0.66", "-24.2932, -100.56, 1.7165, 0.81", "-24.46, -101.16, 1.92171, 0.52", "-24.6738, -101.899, 2.14781, 0.52", "-24.7266, -102.048, 2.17069, 0.81", "-24.9477, -102.527, 2.16372, 0.81", "-25.1914, -102.911, 2.08946, 0.96", "-25.6112, -103.394, 1.89034, 1.03", "-26.2467, -103.916, 1.5753, 1.18", "-27.0498, -104.449, 1.189, 0.81", "-27.4452, -104.678, 0.999656, 0.88", "-27.9424, -104.927, 0.776172, 1.18", "-28.4631, -105.176, 0.567983, 1.55", "-29.2038, -105.551, 0.347034, 0.66", "-29.5321, -105.752, 0.298159, 0.66", "-29.8158, -105.983, 0.301135, 0.52", "-30.2904, -106.482, 0.355983, 0.52", "-30.64, -106.964, 0.434384, 0.37", "-30.9948, -107.622, 0.597849, 0.37", "-31.1959, -108.112, 0.732664, 0.74", "-31.401, -108.687, 0.914925, 1.25", "-31.4134, -108.721, 0.927002, 1.25", "-31.6106, -109.216, 1.10675, 1.18", "-31.9405, -109.926, 1.36851, 1.03", "-32.1763, -110.352, 1.51417, 0.66", "-32.4788, -110.844, 1.66614, 0.37", "-32.8925, -111.466, 1.82368, 0.37", "-33.1895, -111.887, 1.91088, 0.44", "-33.2211, -111.927, 1.91718, 0.44", "-33.6359, -112.404, 1.95613, 0.37", "-33.9458, -112.755, 1.97573, 0.59", "-34.1368, -112.979, 1.98115, 0.59", "-34.461, -113.395, 1.97739, 0.44", "-34.7245, -113.752, 1.96905, 0.66", "-35.0168, -114.16, 1.9599, 0.88", "-35.3377, -114.627, 1.94922, 0.88", "-35.7897, -115.283, 1.92362, 0.66", "-36.1407, -115.805, 1.88926, 0.96", "-36.4017, -116.182, 1.85739, 1.18", "-36.9672, -116.924, 1.80072, 0.88", "-37.2025, -117.187, 1.78517, 0.96", "-37.7692, -117.686, 1.77324, 0.59", "-37.8018, -117.705, 1.77449, 0.59", "-38.4482, -117.953, 1.85182, 0.59", "-39.0105, -118.089, 1.944, 0.52", "-39.4153, -118.157, 2.02468, 0.52", "-39.8255, -118.233, 2.14378, 0.74", "-40.2498, -118.326, 2.29837, 0.96", "-40.6634, -118.436, 2.45603, 0.81", "-41.3896, -118.682, 2.7391, 0.96", "-41.8611, -118.88, 2.91508, 0.96", "-42.5739, -119.217, 3.18249, 0.44", "-43.0075, -119.447, 3.34046, 0.44", "-43.4791, -119.719, 3.49637, 0.66", "-43.8819, -119.947, 3.60374, 0.59", "-44.3617, -120.218, 3.71147, 0.59", "-44.407, -120.243, 3.7188, 0.59", "-44.7902, -120.452, 3.74424, 0.88", "-45.4827, -120.877, 3.77227, 0.96", "-45.9952, -121.236, 3.78049, 0.37", "-46.068, -121.299, 3.78514, 0.37", "-46.5209, -121.794, 3.84344, 0.37", "-46.8483, -122.241, 3.91073, 0.29", "-47.1276, -122.731, 3.99648, 0.29", "-47.3162, -123.12, 4.07258, 0.52", "-47.713, -123.947, 4.24492, 1.03", "-47.923, -124.352, 4.33024, 1.25", "-48.1052, -124.668, 4.39298, 1.25", "-48.49, -125.202, 4.4984, 0.88", "-48.9012, -125.649, 4.57683, 0.74", "-49.3623, -126.061, 4.62031, 0.74", "-49.7467, -126.351, 4.62444, 0.96", "-50.2879, -126.724, 4.61908, 0.66", "-50.7507, -127.033, 4.58306, 0.74", "-51.0276, -127.223, 4.5505, 1.03", "-51.4173, -127.517, 4.49109, 1.4", "-51.4474, -127.543, 4.48573, 1.4", "-51.7284, -127.853, 4.43089, 1.4", "-52.2222, -128.592, 4.3364, 0.52", "-52.4605, -129.054, 4.28236, 0.81", "-52.6177, -129.388, 4.25103, 0.88", "-52.7703, -129.732, 4.22934, 0.52", "-53.006, -130.242, 4.2034, 0.44", "-53.2117, -130.679, 4.18942, 0.44", "-53.4128, -131.042, 4.19852, 0.44", "-53.6619, -131.384, 4.19851, 0.66", "-53.7281, -131.448, 4.20701, 0.66", "-54.0107, -131.643, 4.26889, 0.88", "-54.0669, -131.671, 4.28449, 0.88", "-54.4289, -131.853, 4.40233, 0.96", "-54.6366, -131.972, 4.47579, 0.66", "-55.1468, -132.303, 4.65698, 0.52", "-55.4952, -132.546, 4.77436, 0.44", "-55.7522, -132.746, 4.85298, 0.74", "-56.0797, -133.023, 4.93993, 0.81", "-56.489, -133.433, 5.02908, 0.52", "-56.5232, -133.473, 5.03197, 0.52", "-56.7449, -133.758, 5.01771, 0.81", "-57.0681, -134.225, 4.97375, 0.96", "-57.246, -134.512, 4.93715, 1.11", "-57.5097, -134.942, 4.88084, 0.81", "-57.8683, -135.493, 4.78906, 0.66", "-57.8907, -135.523, 4.78267, 0.66", "-58.2591, -135.947, 4.69823, 0.52", "-58.6427, -136.26, 4.6514, 0.37", "-58.9619, -136.425, 4.67564, 0.29", "-59.4869, -136.597, 4.80119, 0.66", "-59.7903, -136.679, 4.90737, 0.74", "-60.3912, -136.882, 5.17379, 0.29", "-60.6663, -136.996, 5.31337, 0.66", "-61.0397, -137.2, 5.51502, 0.88", "-61.3989, -137.445, 5.70775, 0.88", "-61.6012, -137.603, 5.81362, 0.88", "-62.1944, -138.096, 6.08359, 0.58", "-62.5836, -138.431, 6.22035, 0.81", "-62.9349, -138.738, 6.32485, 1.11", "-63.2537, -139.02, 6.39919, 0.74", "-63.6146, -139.335, 6.48285, 0.88", "-63.9753, -139.617, 6.56056, 0.81", "-64.334, -139.861, 6.62771, 0.74", "-64.9136, -140.219, 6.74244, 0.44", "-65.4525, -140.534, 6.85227, 0.74", "-65.8862, -140.768, 6.946, 0.88", "-66.4627, -141.021, 7.12564, 0.52", "-66.7862, -141.146, 7.26176, 0.59", "-67.3769, -141.358, 7.56269, 0.59", "-67.408, -141.37, 7.58067, 0.59", "-67.7124, -141.523, 7.77002, 0.66", "-68.5652, -142.142, 8.26605, 0.59", "-68.9504, -142.516, 8.47723, 0.59", "-69.2003, -142.808, 8.58464, 0.81", "-69.5697, -143.292, 8.70342, 0.52", "-69.9652, -143.839, 8.77385, 0.66", "-70.4104, -144.494, 8.78206, 0.44", "-70.6724, -144.916, 8.74193, 1.11", "-71.1743, -145.728, 8.63786, 0.59", "-71.1978, -145.766, 8.63373, 0.59", "-71.4817, -146.205, 8.59804, 0.44", "-71.6188, -146.397, 8.59109, 0.44", "-72.066, -146.939, 8.63917, 0.44", "-72.3744, -147.243, 8.70925, 0.37", "-72.722, -147.509, 8.82934, 0.29", "-73.0164, -147.703, 8.96856, 0.66", "-73.3034, -147.858, 9.13139, 1.03", "-73.6595, -148.017, 9.34263, 1.03", "-73.9259, -148.115, 9.50056, 0.81", "-74.3865, -148.296, 9.76249, 0.52", "-74.8955, -148.559, 10.0277, 0.66", "-75.1783, -148.762, 10.1665, 0.29", "-75.3184, -148.887, 10.2291, 0.59", "-75.5755, -149.13, 10.3198, 0.81", "-75.8798, -149.401, 10.4071, 0.81", "-76.279, -149.697, 10.4899, 0.52", "-76.7854, -150.014, 10.5513, 0.74", "-76.8204, -150.033, 10.5556, 0.74", "-77.3507, -150.287, 10.6206, 0.44", "-77.7271, -150.461, 10.6614, 0.74", "-78.1384, -150.652, 10.7018, 1.11", "-78.7449, -150.952, 10.7566, 0.59", "-79.1048, -151.166, 10.7864, 0.66", "-79.4635, -151.433, 10.8132, 0.81", "-79.8748, -151.835, 10.8402, 0.52", "-80.1352, -152.134, 10.8558, 0.66", "-80.3656, -152.414, 10.8699, 0.66", "-80.6004, -152.682, 10.8681, 0.44", "-80.632, -152.714, 10.8664, 0.44", "-81.1358, -153.111, 10.8255, 0.37", "-81.2217, -153.155, 10.8184, 0.37", "-81.815, -153.288, 10.7746, 0.37", "-82.3635, -153.298, 10.7071, 0.29", "-82.6926, -153.27, 10.6581, 0.37", "-83.0404, -153.228, 10.6165, 0.44", "-83.5215, -153.131, 10.5536, 0.37", "-84.1784, -152.971, 10.4682, 0.29", "-84.9058, -152.736, 10.3789, 0.22", "-85.0541, -152.683, 10.3689, 0.44", "-85.735, -152.419, 10.2916, 0.52" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-20.8308, -80.7169, 2.16927, 0.74", "-21.3495, -81.2056, 2.37212, 0.74", "-21.9826, -81.8058, 2.61907, 0.44", "-22.6073, -82.3871, 2.86097, 0.59", "-23.3961, -83.0896, 3.12428, 0.37", "-24.0006, -83.6341, 3.32472, 0.59", "-24.2616, -83.8666, 3.4107, 0.88", "-24.3215, -83.9176, 3.42786, 0.88", "-24.5799, -84.1288, 3.48907, 1.11", "-25.169, -84.5257, 3.60591, 0.88", "-25.8993, -84.8918, 3.73533, 0.37", "-26.3561, -85.0649, 3.80568, 0.66", "-27.0733, -85.2815, 3.88244, 0.81", "-27.7392, -85.4738, 3.94062, 0.74", "-28.6672, -85.7253, 4.01071, 0.88", "-29.3211, -85.8962, 4.06073, 0.74", "-30.3305, -86.1724, 4.0924, 0.52", "-31.5311, -86.5669, 4.11696, 0.52", "-32.247, -86.8632, 4.16487, 0.74", "-32.3091, -86.8971, 4.17669, 0.74", "-32.7996, -87.3293, 4.65992, 0.88", "-33.3159, -87.9552, 5.65095, 1.03", "-33.5918, -88.3413, 6.35701, 1.18", "-33.9584, -88.8816, 7.47609, 0.96", "-34.4359, -89.59, 9.08871, 1.18", "-35.8196, -91.5518, 13.8176, 0.66", "-36.0034, -91.8324, 14.5271, 0.66", "-36.1925, -92.1349, 15.2873, 0.81", "-36.3839, -92.4295, 15.9836, 0.81", "-36.4101, -92.4694, 16.0637, 0.81", "-36.7326, -93.0186, 16.9354, 0.88", "-37.251, -93.9925, 18.3693, 0.88", "-37.4924, -94.6035, 19.3649, 0.74", "-37.5815, -94.8852, 19.8457, 0.96", "-37.9352, -96.141, 21.9666, 0.44", "-38.2256, -97.248, 23.8193, 1.25", "-38.5939, -98.8014, 26.3619, 0.59", "-38.8466, -99.7199, 27.8216, 0.96", "-38.8602, -99.7649, 27.8894, 0.96", "-39.0768, -100.379, 28.703, 0.59", "-39.362, -101.011, 29.3722, 0.52", "-39.984, -102.215, 30.389, 0.81", "-40.8004, -103.781, 31.4387, 0.44", "-41.224, -104.588, 31.9298, 0.59", "-41.5831, -105.329, 32.3984, 0.74", "-41.9245, -106.139, 32.9785, 0.44", "-42.2738, -107.086, 33.7029, 0.44", "-42.6345, -108.166, 34.5314, 0.29", "-42.8944, -109.149, 35.2992, 0.44", "-43.139, -110.402, 36.3796, 0.81", "-43.3167, -111.842, 37.7611, 1.03", "-43.3182, -111.892, 37.8136, 1.03", "-47.418, -119.951, 44.7509, 1.03", "-52.1411, -127.809, 51.5119, 1.03", "-56.3983, -136.926, 56.9478, 1.03", "-62.1628, -145.361, 62.0372, 1.03" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.1943, -52.9282, -4.17938, 1.4", "-2.80018, -53.3441, -4.35314, 1.4", "-2.18193, -53.9873, -4.70802, 1.11", "-1.47744, -54.8037, -5.27173, 0.96", "-0.974129, -55.4727, -5.81268, 0.96", "-0.608324, -56.051, -6.33657, 1.11", "-0.217351, -56.7293, -6.96524, 1.25", "0.244857, -57.6305, -7.84447, 1.18", "0.719091, -58.7, -8.87023, 1.18", "1.04263, -59.6014, -9.67094, 1.03", "1.37406, -60.8095, -10.6123, 0.88", "1.49636, -61.4028, -10.9901, 0.96", "1.67691, -62.5071, -11.5477, 1.11", "1.82533, -63.6849, -11.9907, 1.11", "1.90367, -64.5124, -12.193, 0.96", "1.96358, -65.619, -12.3618, 1.11", "1.94944, -67.1552, -12.5135, 1.18", "1.89003, -67.9135, -12.5859, 1.18", "1.7756, -68.7653, -12.67, 1.18", "1.50582, -70.3873, -12.8429, 0.96", "1.30808, -71.47, -12.971, 1.03", "0.979402, -73.133, -13.2056, 1.03", "0.716457, -74.3327, -13.4041, 1.33", "0.523501, -75.2111, -13.574, 1.55", "0.376146, -75.931, -13.7454, 1.33", "0.162168, -77.0761, -14.0624, 1.03", "0.0236039, -78.0343, -14.3394, 1.33", "-0.0658543, -78.883, -14.5888, 1.33", "-0.213917, -80.4896, -15.0353, 1.25", "-0.396717, -82.2218, -15.5248, 1.03", "-0.521994, -83.2048, -15.8049, 0.96", "-0.722858, -84.4436, -16.1569, 0.96", "-0.87834, -85.207, -16.3668, 0.96", "-1.13745, -86.3344, -16.6889, 0.96", "-1.44837, -87.3885, -16.9874, 1.11", "-1.65189, -87.9004, -17.1218, 1.25", "-2.11622, -88.7884, -17.3716, 1.4", "-2.4974, -89.3193, -17.5416, 1.4" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-3.1943, -52.9282, -4.17938, 1.11", "-3.52709, -56.1023, -1.31237, 1.11", "-3.55896, -56.8329, -0.871674, 1.11", "-3.58395, -58.0158, -0.281691, 1.03", "-3.56283, -59.8276, 0.425567, 1.11", "-3.55975, -59.9116, 0.450075, 1.11", "-3.50514, -61.4271, 0.803279, 1.11", "-3.39166, -63.1407, 0.971896, 1.11", "-3.38567, -63.2305, 0.980179, 1.11", "-3.293, -64.7708, 1.10595, 1.11", "-3.19698, -66.6815, 1.21717, 1.03", "-3.15538, -67.9142, 1.27259, 1.33", "-3.1663, -69.3825, 1.33146, 1.18", "-3.33342, -71.2364, 1.40817, 0.88", "-3.34631, -71.3258, 1.41164, 0.88", "-3.7985, -73.3467, 1.52442, 0.88", "-4.2714, -74.9357, 1.63005, 0.88", "-4.78513, -76.3201, 1.72961, 1.11", "-5.54867, -78.1794, 1.94697, 0.88", "-5.57952, -78.2499, 1.96015, 0.88", "-6.11826, -79.5591, 2.2677, 0.88", "-6.21179, -79.798, 2.33999, 0.88", "-6.52385, -80.9169, 2.70933, 0.96", "-6.88168, -83.1892, 3.45316, 0.81", "-6.93611, -83.8704, 3.66197, 1.18", "-6.99548, -85.0043, 3.97782, 0.96", "-6.99981, -85.177, 4.01825, 0.96", "-7.00387, -86.8062, 4.33929, 0.74", "-6.99297, -87.9419, 4.43523, 0.96", "-6.99754, -88.908, 4.39196, 1.03", "-6.99957, -89.0831, 4.36238, 1.03", "-7.01651, -90.2231, 4.07115, 1.33", "-7.02693, -91.3787, 3.68376, 1.55", "-7.03543, -93.1314, 2.97549, 1.25", "-6.97061, -94.4394, 2.38334, 1.4", "-6.81316, -96.2726, 1.53396, 1.55", "-6.67815, -97.5835, 0.924338, 1.11", "-6.47318, -99.2415, 0.135247, 0.74", "-6.46271, -99.3323, 0.0953523, 0.74", "-6.35048, -100.485, -0.362133, 0.74", "-6.27329, -101.311, -0.59685, 0.96", "-6.263, -101.427, -0.613403, 0.96", "-6.16074, -102.994, -0.739122, 1.11", "-6.01536, -104.304, -0.789896, 1.11", "-5.80193, -106.061, -0.969917, 1.25", "-5.46565, -108.726, -1.34568, 0.96", "-5.18885, -110.595, -1.70148, 0.96", "-4.96332, -111.944, -2.00299, 1.11", "-4.44994, -114.648, -2.68338, 1.11", "-3.92336, -117.211, -3.43441, 1.25", "-3.76868, -117.971, -3.68071, 1.55", "-3.51849, -119.512, -4.28868, 1.47", "-3.50812, -119.594, -4.3157, 1.47", "-3.444, -120.57, -4.5263, 0.88", "-3.4692, -121.889, -4.53585, 0.59", "-3.51341, -123.244, -4.28329, 0.74", "-3.56257, -124.205, -4.0321, 1.03", "-3.68104, -126.09, -3.47499, 1.03", "-3.73885, -126.915, -3.2278, 1.25", "-3.87364, -128.807, -2.6504, 1.25", "-3.97249, -130.248, -2.20474, 0.74", "-4.06707, -131.438, -1.89999, 0.74", "-4.17768, -132.657, -1.75929, 0.96", "-4.18484, -132.735, -1.7651, 0.96", "-4.28037, -134.115, -2.03429, 1.18", "-4.28389, -134.213, -2.06382, 1.18", "-4.26643, -135.955, -2.64942, 1.33", "-4.16664, -138.037, -3.3231, 1.03", "-4.06168, -139.743, -3.81758, 0.88", "-4.02574, -140.387, -3.98256, 1.33", "-3.97395, -141.7, -4.26775, 1.33", "-3.95679, -143.176, -4.50866, 1.55", "-4.01494, -144.638, -4.61889, 1.33", "-4.1865, -145.97, -4.61953, 1.11", "-4.51073, -147.394, -4.56068, 0.66", "-4.9542, -148.791, -4.46677, 0.66", "-5.49805, -150.132, -4.34134, 0.74", "-6.15557, -151.542, -4.17917, 0.59", "-6.5944, -152.486, -4.05395, 0.88", "-6.96925, -153.442, -3.93244, 0.96", "-7.19723, -154.375, -3.83689, 0.88", "-7.19818, -154.462, -3.82435, 0.88", "-6.98554, -155.701, -3.61699, 0.74", "-6.68128, -156.882, -3.41674, 1.25", "-6.3378, -158.167, -3.17774, 1.25", "-6.01294, -159.597, -2.89182, 1.03", "-5.66489, -162.002, -2.37787, 0.74", "-5.58861, -163.37, -2.07076, 0.59", "-5.64652, -164.177, -1.88183, 0.81", "-5.90909, -165.31, -1.62693, 0.88", "-6.37136, -166.624, -1.3663, 1.03", "-6.79228, -167.736, -1.21303, 1.11", "-6.8875, -167.985, -1.21244, 1.11", "-7.30878, -169.218, -1.34948, 0.96", "-7.72604, -170.615, -1.61658, 1.11", "-8.06762, -172.015, -1.97932, 0.96", "-8.47558, -174.059, -2.59732, 1.18", "-8.8709, -176.251, -3.19813, 1.03", "-9.26385, -178.501, -3.76902, 0.96", "-9.28608, -178.657, -3.80547, 0.96", "-9.44616, -180.293, -4.12043, 0.96", "-9.49641, -181.491, -4.22703, 1.4", "-9.43204, -183.834, -4.15055, 1.11", "-9.42062, -183.949, -4.13451, 1.11", "-9.23242, -185.315, -3.88869, 1.25", "-8.96568, -187.09, -3.5808, 1.11", "-8.63483, -189.039, -3.28339, 0.88", "-8.43479, -190.106, -3.16482, 1.18", "-8.06557, -191.798, -3.08381, 1.25", "-7.83399, -192.954, -3.03964, 1.4", "-7.81799, -193.052, -3.03779, 1.4", "-7.61972, -194.764, -3.01486, 1.03", "-7.60915, -195.032, -3.01416, 1.03", "-7.66116, -196.497, -2.97108, 0.74", "-7.81364, -197.76, -2.83582, 0.74", "-8.03699, -198.746, -2.66413, 0.96", "-8.49562, -200.21, -2.3407, 0.88", "-9.03535, -201.533, -1.98444, 0.88", "-9.5616, -202.663, -1.65191, 0.88", "-10.3586, -204.147, -1.16697, 1.11", "-10.9278, -205.182, -0.825437, 1.25", "-11.4512, -206.169, -0.523476, 1.4", "-11.6029, -206.467, -0.457508, 1.4", "-11.958, -207.306, -0.341751, 1.4", "-12.0488, -207.558, -0.35659, 1.4", "-12.4901, -209.038, -0.743508, 1.25", "-12.764, -210.157, -1.14006, 1.18", "-12.9488, -211.151, -1.58924, 0.96", "-13.166, -212.559, -2.30298, 0.96", "-13.4969, -214.928, -3.70622, 0.81", "-13.7456, -216.91, -5.04754, 0.81", "-13.8675, -217.793, -5.70614, 1.03", "-14.1954, -219.884, -7.26704, 1.03", "-14.2123, -219.985, -7.33951, 1.03", "-14.5213, -221.741, -8.50409, 1.55", "-14.8878, -223.847, -9.665, 0.88", "-15.2513, -225.842, -10.641, 0.81", "-15.5643, -227.394, -11.3655, 0.81", "-15.8101, -228.536, -11.854, 0.96", "-16.0573, -229.733, -12.3246, 0.96", "-16.2842, -230.952, -12.7278, 0.74", "-16.6251, -232.952, -13.3295, 1.25", "-16.8736, -234.874, -13.9105, 0.81", "-16.883, -234.958, -13.9351, 0.81", "-17.0322, -236.346, -14.2215, 0.81", "-17.1632, -237.436, -14.3484, 1.18", "-17.182, -237.604, -14.3503, 1.18", "-17.2997, -238.783, -14.2491, 1.18", "-17.4468, -240.842, -13.9808, 0.81", "-17.582, -242.86, -13.7232, 0.81", "-17.6506, -243.955, -13.5811, 1.11", "-17.7746, -245.788, -13.375, 1.11", "-17.7853, -245.979, -13.3508, 1.11", "-17.8302, -247.575, -13.0192, 0.96", "-17.822, -248.355, -12.8172, 1.25", "-17.8205, -248.439, -12.794, 1.25", "-17.7872, -249.907, -12.3423, 1.25", "-17.786, -252.262, -11.5674, 1.03", "-17.8243, -255.088, -10.6176, 0.81", "-17.8361, -256.065, -10.2983, 1.11", "-17.8389, -257.756, -9.8099, 0.96", "-17.8404, -258.031, -9.74414, 0.96", "-17.8513, -259.469, -9.47696, 0.81", "-17.8551, -259.586, -9.46898, 0.81", "-17.9724, -261.584, -9.50355, 0.96", "-18.0398, -262.869, -9.52961, 1.18", "-18.0984, -264.247, -9.56208, 1.03", "-18.1037, -264.338, -9.56385, 1.03", "-18.2311, -265.922, -9.58532, 0.74", "-18.4599, -268.062, -9.62943, 0.74", "-18.6135, -269.23, -9.70434, 0.81", "-18.6285, -269.346, -9.71568, 0.81", "-18.7434, -270.472, -9.86612, 0.81", "-18.8508, -272.153, -10.1362, 0.81", "-18.8667, -274.113, -10.5512, 1.03", "-18.827, -275.784, -10.9605, 1.03", "-18.8259, -275.869, -10.9814, 1.03", "-18.8495, -277.02, -11.2473, 1.25", "-18.8962, -278.107, -11.4884, 0.96", "-19.0208, -279.561, -11.7476, 0.81", "-19.1503, -280.494, -11.8689, 1.11", "-19.3609, -281.889, -12.002, 1.33", "-19.5824, -283.247, -12.1401, 1.33", "-19.5985, -283.345, -12.1526, 1.33", "-19.8612, -285.199, -12.4161, 0.74", "-20.0387, -287.135, -12.76, 0.96", "-20.0512, -288.746, -13.1126, 0.96", "-20.0384, -288.903, -13.1461, 0.96", "-19.7939, -290.535, -13.4661, 0.96", "-19.5232, -292.001, -13.6433, 0.81", "-19.2074, -293.581, -13.7086, 0.66", "-18.9322, -295.131, -13.6438, 0.66", "-18.7346, -296.616, -13.4964, 1.33", "-18.6286, -297.86, -13.2808, 1.33", "-18.5582, -300.11, -12.7263, 1.11", "-18.5432, -301.721, -12.2763, 1.18", "-18.5479, -302.623, -12.0149, 1.4", "-18.5401, -304.015, -11.6709, 1.11", "-18.4519, -305.644, -11.3997, 0.59", "-18.3216, -306.697, -11.3083, 0.52", "-18.0418, -308.133, -11.3039, 0.88", "-17.6885, -309.545, -11.3925, 1.18", "-17.3005, -311.078, -11.5586, 1.03", "-16.8201, -313.012, -11.8548, 0.96", "-16.4135, -314.93, -12.2577, 0.81", "-16.2301, -316.061, -12.5218, 1.11", "-16.1191, -317.38, -12.8497, 1.69", "-16.0965, -318.858, -13.2454, 1.18", "-16.1029, -318.956, -13.2663, 1.18", "-16.294, -320.503, -13.4734, 0.59", "-16.3029, -320.59, -13.4668, 0.59", "-16.3533, -321.908, -13.108, 1.03", "-16.3503, -322.057, -13.0482, 1.03", "-16.1629, -323.986, -12.1847, 1.25", "-16.0495, -324.813, -11.8106, 1.25", "-15.7372, -326.78, -10.927, 0.96", "-15.5834, -327.902, -10.477, 0.66", "-15.4729, -328.9, -10.1363, 0.66", "-15.4154, -329.767, -9.91754, 0.37", "-15.4177, -330.947, -9.84039, 0.52", "-15.5353, -332.321, -9.91101, 0.81", "-15.746, -333.41, -10.0738, 1.11", "-16.0281, -334.491, -10.3165, 1.4", "-16.4099, -335.83, -10.6703, 1.4", "-17.1381, -338.16, -11.3549, 0.81", "-17.5358, -339.476, -11.7903, 0.66", "-17.8515, -340.734, -12.2476, 0.52", "-18.1218, -342.447, -12.8943, 0.37", "-18.1987, -343.398, -13.2584, 0.88", "-18.2011, -343.48, -13.2866, 0.88", "-18.2191, -344.36, -13.4831, 1.25", "-18.2744, -345.386, -13.6643, 1.25", "-18.4053, -346.554, -13.8072, 0.88", "-18.802, -348.536, -13.9259, 0.66", "-19.3263, -350.39, -13.9899, 0.66", "-19.9456, -352.143, -14.0355, 0.88", "-20.466, -353.399, -14.1056, 0.88", "-20.9396, -354.438, -14.2223, 1.11", "-21.3623, -355.382, -14.3672, 1.18", "-21.6562, -356.121, -14.4693, 1.18", "-22.3999, -358.334, -14.8002, 0.88", "-22.8957, -360.221, -15.0915, 1.25", "-23.2964, -362.297, -15.3909, 0.74", "-23.537, -364.0, -15.6039, 0.59", "-23.7277, -365.952, -15.7979, 1.03", "-23.796, -367.13, -15.8484, 0.74", "-23.8152, -368.48, -15.7785, 0.59", "-23.8225, -368.755, -15.7368, 0.59", "-23.9306, -370.152, -15.4259, 0.74", "-23.9499, -370.24, -15.4125, 0.74", "-24.3504, -371.514, -15.3905, 0.59", "-24.3842, -371.61, -15.3948, 0.59", "-24.9403, -373.287, -15.5562, 0.74", "-25.4444, -374.981, -15.7788, 0.59", "-25.9705, -377.179, -16.1635, 0.59", "-26.3737, -379.169, -16.5868, 0.59", "-26.5814, -380.577, -16.9521, 0.59", "-26.7066, -381.814, -17.3125, 0.81", "-26.7159, -382.076, -17.4, 0.81", "-26.6614, -383.113, -17.7756, 0.81", "-26.6506, -383.185, -17.7946, 0.81", "-26.5068, -384.45, -17.9586, 0.81", "-26.5037, -384.528, -17.9564, 0.81", "-26.5198, -385.867, -17.8126, 0.66", "-26.5206, -385.945, -17.8026, 0.66", "-26.5369, -387.495, -17.5763, 0.66", "-26.4785, -389.392, -17.3138, 0.44", "-26.3264, -391.915, -16.9691, 0.66", "-26.0461, -394.091, -16.6555, 0.96", "-25.689, -395.934, -16.3766, 0.96", "-25.6551, -396.07, -16.3566, 0.96", "-25.0569, -397.844, -16.1053, 0.81", "-24.9885, -398.009, -16.0863, 0.81", "-24.1682, -399.822, -15.9941, 0.74", "-24.1302, -399.904, -15.9893, 0.74", "-23.807, -400.76, -15.9348, 0.96", "-23.7568, -400.933, -15.9376, 0.96", "-23.4722, -402.412, -15.9897, 0.96", "-23.3334, -403.465, -16.0671, 0.96", "-23.331, -403.555, -16.0797, 0.96", "-23.2997, -404.898, -16.2788, 0.52", "-23.2725, -406.377, -16.5202, 0.52" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-46.1813, -89.9059, -11.9366, 0.74", "-46.87, -89.7778, -11.41, 0.74", "-46.929, -89.7766, -11.3459, 0.74", "-47.7139, -89.8779, -10.3054, 0.52", "-48.1228, -89.9576, -9.75366, 0.44", "-48.8126, -90.0993, -8.87179, 0.44", "-49.4892, -90.2378, -8.06964, 0.96", "-50.7458, -90.5771, -6.6458, 0.74", "-51.5225, -90.814, -5.85301, 0.74", "-51.9148, -90.9589, -5.5076, 0.74", "-52.4905, -91.1598, -5.07245, 0.59", "-53.0052, -91.3046, -4.74523, 0.52", "-53.7508, -91.468, -4.355, 0.52", "-54.2637, -91.5582, -4.14115, 0.88", "-55.1207, -91.6722, -3.79735, 0.59", "-56.412, -91.7841, -3.19514, 0.96", "-57.8408, -91.8634, -2.44387, 1.33", "-58.3818, -91.8826, -2.13, 1.33", "-59.2514, -91.9109, -1.6023, 0.44", "-59.766, -91.9129, -1.29315, 0.44", "-60.8896, -91.8843, -0.675856, 0.44", "-60.9472, -91.883, -0.649576, 0.44", "-61.8777, -91.8354, -0.313692, 0.81", "-62.5123, -91.7936, -0.0227316, 0.96" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-46.1813, -89.9059, -11.9366, 0.59", "-47.2804, -90.8951, -12.1488, 0.59", "-47.8576, -91.4571, -12.224, 0.52", "-48.2018, -91.7925, -12.2721, 0.88", "-48.8641, -92.3801, -12.4096, 0.88", "-49.3522, -92.7608, -12.6024, 0.88", "-49.8055, -93.0694, -12.83, 1.03", "-50.4702, -93.4006, -13.2048, 0.59", "-51.0639, -93.5744, -13.6327, 0.44", "-51.8655, -93.6392, -14.2807, 0.74", "-53.245, -93.465, -15.5125, 0.44", "-53.5947, -93.3559, -15.8249, 0.44", "-53.9897, -93.1906, -16.1645, 0.44", "-54.4413, -92.9735, -16.5175, 0.74", "-54.7433, -92.8326, -16.7099, 0.96", "-54.7942, -92.8152, -16.7303, 0.96", "-55.3224, -92.7078, -16.8352, 0.88", "-56.45, -92.5315, -17.0548, 0.44", "-56.7945, -92.4743, -17.1197, 0.44", "-56.8495, -92.4612, -17.137, 0.44", "-57.2502, -92.3297, -17.2879, 0.44", "-57.845, -92.0788, -17.5456, 0.44", "-58.2345, -91.8691, -17.7222, 0.81", "-58.5908, -91.6318, -17.9019, 1.33", "-59.762, -90.8039, -18.5335, 1.33", "-60.248, -90.4697, -18.7871, 1.25", "-60.8084, -90.1022, -19.0689, 0.96", "-61.4124, -89.7433, -19.3736, 0.88", "-62.1076, -89.3584, -19.7016, 0.74", "-62.647, -89.0788, -19.9267, 0.74", "-63.3902, -88.7098, -20.203, 0.66", "-63.797, -88.5121, -20.373, 0.52", "-64.4625, -88.1832, -20.6537, 0.29", "-64.9033, -87.9465, -20.8929, 0.37", "-64.9529, -87.9165, -20.924, 0.37", "-65.6999, -87.341, -21.5063, 0.88", "-65.9366, -87.1049, -21.7642, 1.25", "-66.265, -86.7606, -22.1958, 1.18", "-66.8977, -86.1375, -23.0291, 0.66", "-66.9304, -86.1089, -23.0697, 0.66", "-67.3584, -85.7722, -23.5333, 0.74", "-68.2659, -85.1619, -24.3729, 0.88", "-68.9413, -84.7558, -24.9532, 0.52", "-69.4599, -84.509, -25.3197, 0.88", "-70.0349, -84.3306, -25.613, 1.03", "-70.6603, -84.1962, -25.881, 1.33", "-71.2276, -84.1245, -26.0671, 0.88", "-71.2844, -84.1183, -26.0822, 0.88", "-72.0178, -84.0357, -26.3037, 0.59", "-72.9607, -83.924, -26.6718, 0.52", "-73.0672, -83.9088, -26.7208, 0.52", "-73.3951, -83.8394, -26.8877, 0.81", "-74.4766, -83.4804, -27.5674, 0.29", "-74.5212, -83.4641, -27.5999, 0.29", "-74.9116, -83.3116, -27.9772, 0.29", "-75.066, -83.253, -28.1462, 0.88", "-75.2465, -83.2079, -28.3693, 1.18", "-76.1042, -83.0863, -29.4928, 0.37", "-76.6313, -83.0731, -30.1741, 0.74", "-77.3547, -83.137, -31.1131, 1.03", "-77.3902, -83.1437, -31.1577, 1.03", "-78.1685, -83.3473, -32.0748, 0.44", "-78.3759, -83.4076, -32.2953, 1.18", "-78.7448, -83.5123, -32.6128, 1.47", "-79.7253, -83.7214, -33.5771, 0.81", "-80.1408, -83.7917, -34.0001, 0.52", "-80.731, -83.877, -34.6132, 0.37", "-81.0815, -83.9208, -34.9745, 0.37", "-81.5312, -83.9795, -35.444, 1.18", "-83.843, -84.3138, -37.9225, 0.81", "-83.9222, -84.3263, -38.0067, 0.81", "-84.3636, -84.4099, -38.4799, 0.81", "-84.6729, -84.4709, -38.7861, 0.88", "-84.9964, -84.5493, -39.0938, 0.81", "-85.7301, -84.775, -39.6943, 0.29", "-85.8968, -84.8303, -39.7811, 0.29", "-86.1869, -84.9475, -39.9714, 0.29", "-86.7202, -85.211, -40.3711, 1.18", "-87.8513, -85.9204, -41.2535, 0.59", "-88.2023, -86.1981, -41.5154, 1.33", "-88.2452, -86.2388, -41.5449, 1.33", "-89.0609, -87.085, -42.0589, 0.74", "-89.4651, -87.5441, -42.297, 0.66", "-89.9337, -88.0999, -42.5856, 0.37", "-90.4077, -88.6584, -42.8459, 0.88", "-90.9024, -89.2343, -43.1301, 1.03", "-91.3161, -89.7131, -43.3881, 0.88", "-91.3503, -89.7543, -43.4107, 0.88", "-92.1838, -90.8597, -44.0771, 0.74", "-92.5932, -91.4125, -44.5083, 0.44", "-92.8203, -91.7074, -44.7781, 1.47", "-93.3071, -92.2841, -45.3892, 1.03", "-93.6066, -92.5796, -45.7524, 0.74", "-93.8867, -92.7847, -46.0394, 0.74", "-94.9938, -93.3212, -46.9985, 0.52", "-95.542, -93.498, -47.4657, 0.66", "-96.0541, -93.6423, -47.9201, 0.37", "-96.4397, -93.7631, -48.3362, 0.29", "-96.7965, -93.8834, -48.7661, 0.29", "-97.2136, -94.0379, -49.3114, 0.74", "-97.7901, -94.2916, -50.1184, 0.96", "-98.554, -94.6394, -51.2615, 0.96", "-99.6574, -95.107, -52.9936, 0.88", "-99.6835, -95.1159, -53.0337, 0.88", "-100.164, -95.232, -53.7437, 0.88", "-100.392, -95.2619, -54.0511, 1.03", "-100.772, -95.2883, -54.498, 1.03", "-101.398, -95.3406, -55.122, 0.74", "-102.103, -95.4674, -55.7664, 0.37", "-102.143, -95.4806, -55.8076, 0.37", "-102.908, -95.8233, -56.6499, 0.37", "-103.584, -96.1972, -57.4642, 0.37", "-104.201, -96.5839, -58.2252, 0.88", "-104.793, -96.9568, -58.9214, 1.18", "-105.686, -97.4714, -60.0478, 0.59", "-105.721, -97.4869, -60.0927, 0.59", "-106.527, -97.6819, -61.0828, 0.44", "-106.771, -97.6915, -61.4175, 0.37", "-107.203, -97.6374, -62.0625, 0.37", "-108.187, -97.3954, -63.5436, 1.03", "-108.687, -97.2336, -64.2748, 1.03", "-109.114, -97.105, -64.8641, 1.25", "-110.178, -96.8668, -66.3403, 1.18", "-110.211, -96.8659, -66.3876, 1.18", "-110.701, -96.9445, -67.0638, 0.59", "-111.001, -97.0434, -67.4349, 0.74", "-111.332, -97.1962, -67.831, 0.74", "-112.434, -97.7983, -69.1498, 0.88", "-113.475, -98.4162, -70.6721, 0.52", "-113.751, -98.5917, -71.1294, 1.18", "-114.219, -98.9139, -72.0213, 1.55", "-114.454, -99.0805, -72.4993, 1.25", "-115.293, -99.6917, -74.2204, 0.74", "-116.873, -100.889, -77.453, 0.74", "-117.062, -101.037, -77.8557, 1.4", "-117.969, -101.748, -79.8717, 0.74", "-118.018, -101.784, -79.9804, 0.74", "-118.323, -101.979, -80.6435, 0.59", "-118.351, -101.993, -80.6938, 0.59", "-119.455, -102.395, -82.1435, 0.59", "-119.518, -102.415, -82.2152, 0.59", "-120.142, -102.575, -82.8579, 0.66", "-120.51, -102.662, -83.2408, 0.88", "-121.823, -102.932, -84.6114, 0.44", "-121.996, -102.969, -84.7727, 1.03", "-122.946, -103.19, -85.4271, 1.33" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-50.8888, -214.074, -81.7097, 0.29", "-51.873, -214.738, -81.3921, 0.29", "-52.4775, -215.126, -81.1817, 0.29", "-53.3962, -215.655, -80.9294, 0.22", "-53.801, -215.907, -80.8283, 0.81", "-54.1952, -216.167, -80.7324, 0.81", "-54.5428, -216.397, -80.675, 0.81", "-55.1533, -216.8, -80.6229, 0.52", "-56.3827, -217.631, -80.6071, 0.22", "-57.2086, -218.22, -80.6292, 0.22", "-57.5968, -218.512, -80.653, 0.81", "-58.7024, -219.379, -80.7412, 0.96", "-58.9836, -219.602, -80.7866, 1.11", "-59.9755, -220.387, -81.0643, 0.22", "-60.4716, -220.783, -81.2232, 0.22", "-60.7539, -221.002, -81.3184, 0.74", "-61.0704, -221.255, -81.4332, 0.96", "-62.2354, -222.214, -81.9055, 0.59", "-63.3503, -223.118, -82.4011, 0.29", "-64.1754, -223.736, -82.8234, 0.22", "-64.3988, -223.893, -82.9406, 0.37", "-65.4502, -224.59, -83.4844, 0.22", "-66.3249, -225.155, -83.9376, 0.81", "-66.7003, -225.4, -84.1257, 1.03", "-68.0751, -226.279, -84.9135, 0.37", "-68.5678, -226.588, -85.218, 0.52", "-69.7267, -227.317, -85.9403, 0.29", "-70.1784, -227.607, -86.2053, 0.66", "-70.5447, -227.854, -86.4114, 0.81", "-72.1815, -228.993, -87.4204, 0.29", "-72.5893, -229.303, -87.687, 0.44", "-72.6439, -229.346, -87.7278, 0.44", "-73.146, -229.753, -88.1135, 0.59", "-73.7944, -230.317, -88.6888, 1.03", "-74.907, -231.387, -89.8922, 1.03", "-75.762, -232.307, -91.0066, 0.29", "-76.5036, -233.145, -92.0795, 0.88", "-76.7684, -233.445, -92.4692, 1.25", "-78.5185, -235.4, -94.9952, 0.29", "-79.6152, -236.619, -96.5578, 0.37", "-80.4105, -237.523, -97.6518, 0.81", "-81.1586, -238.355, -98.6402, 0.44", "-81.6345, -238.874, -99.215, 0.37", "-82.3244, -239.62, -99.9677, 0.37", "-83.2365, -240.618, -100.746, 0.37", "-83.9507, -241.401, -101.234, 0.37", "-84.5151, -242.049, -101.593, 1.11", "-84.8776, -242.477, -101.817, 1.25", "-85.7808, -243.476, -102.356, 0.81", "-86.6223, -244.365, -102.794, 0.52", "-87.0167, -244.764, -102.928, 0.52", "-87.0737, -244.818, -102.947, 0.52", "-87.7843, -245.484, -103.17, 0.52", "-89.0567, -246.607, -103.576, 0.44", "-89.6552, -247.127, -103.754, 0.44", "-90.7082, -248.011, -104.144, 0.74", "-92.0771, -249.161, -104.726, 0.74", "-92.1245, -249.202, -104.748, 0.74", "-93.2595, -250.243, -105.329, 0.37", "-93.693, -250.64, -105.56, 0.81", "-95.1903, -251.872, -106.361, 0.29", "-95.7171, -252.258, -106.629, 0.29", "-96.2062, -252.636, -106.832, 0.88", "-96.404, -252.794, -106.916, 1.25" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-50.8888, -214.074, -81.7097, 0.59", "-50.6018, -217.281, -82.7748, 0.59", "-50.4883, -218.616, -83.1564, 0.59", "-50.4493, -218.988, -83.253, 0.81", "-50.3313, -219.852, -83.4569, 0.81", "-50.127, -221.1, -83.7353, 0.15", "-49.9011, -222.243, -83.9757, 0.15", "-49.8768, -222.324, -83.9783, 0.15", "-49.7141, -222.804, -84.0019, 0.59", "-49.4627, -223.513, -84.0446, 0.88", "-49.4002, -223.695, -84.0567, 0.88", "-49.2279, -224.333, -84.0953, 0.88", "-48.9652, -225.685, -84.1299, 0.52", "-48.8451, -226.799, -84.1247, 0.44", "-48.8263, -227.426, -84.1064, 0.74", "-48.8513, -228.22, -84.0657, 0.44", "-48.9349, -229.32, -83.9422, 0.29", "-49.0445, -230.074, -83.8163, 0.88", "-49.1431, -230.77, -83.6739, 0.96", "-49.2423, -231.849, -83.4366, 0.81", "-49.2728, -233.09, -83.1776, 0.29", "-49.2032, -234.388, -82.9608, 0.44", "-49.0753, -235.307, -82.8304, 0.22", "-48.7447, -236.767, -82.6833, 0.22", "-48.4394, -237.646, -82.6263, 0.59", "-47.9648, -238.631, -82.5509, 0.81", "-47.4676, -239.484, -82.4872, 0.81", "-47.0653, -240.133, -82.4461, 0.88", "-46.374, -241.359, -82.3282, 0.37", "-45.8851, -242.612, -82.1596, 0.59", "-45.5793, -243.86, -81.9858, 0.96", "-45.4575, -244.753, -81.8592, 0.59", "-45.4263, -245.839, -81.7135, 0.29", "-45.5477, -247.353, -81.6309, 0.29", "-45.826, -249.005, -81.6408, 0.74", "-46.0283, -249.967, -81.7034, 0.96", "-46.0568, -250.109, -81.7166, 0.96", "-46.1885, -250.886, -81.7832, 0.96", "-46.3958, -252.314, -81.8919, 0.44", "-46.5129, -253.3, -81.9498, 0.29", "-46.7165, -254.63, -81.9206, 0.59", "-46.9535, -255.717, -81.7964, 1.03", "-47.046, -256.051, -81.7379, 1.11", "-47.2464, -256.703, -81.5858, 0.96", "-47.4996, -257.483, -81.3671, 0.96", "-47.9058, -258.649, -81.0237, 0.37", "-48.3207, -259.793, -80.6983, 0.22", "-48.5698, -260.529, -80.5188, 0.44", "-48.9441, -261.783, -80.2301, 0.44", "-49.1346, -262.673, -80.0481, 0.66", "-49.232, -263.584, -79.8992, 0.88", "-49.2776, -264.548, -79.7888, 0.29", "-49.2897, -265.622, -79.576, 0.29", "-49.287, -265.741, -79.5453, 0.29", "-49.2674, -266.763, -79.2321, 0.29", "-49.2612, -268.064, -78.8154, 0.29", "-49.2714, -269.537, -78.3391, 0.29", "-49.3515, -271.392, -77.6278, 0.59", "-49.4098, -271.86, -77.4269, 0.74", "-49.637, -273.075, -76.8922, 0.29", "-49.8673, -274.023, -76.484, 0.29", "-49.8851, -274.113, -76.4503, 0.29", "-49.9826, -275.243, -76.1763, 0.81", "-49.9934, -275.947, -76.1099, 1.25", "-49.9776, -276.722, -76.099, 0.88", "-49.8672, -278.017, -76.1687, 0.52", "-49.6414, -279.599, -76.2695, 0.29", "-49.5038, -280.392, -76.3295, 0.66", "-49.2581, -281.431, -76.4362, 0.74", "-48.7047, -283.143, -76.6048, 0.22", "-48.3188, -284.137, -76.6939, 0.22", "-47.8543, -285.128, -76.7262, 0.88", "-47.8069, -285.226, -76.7204, 0.88", "-47.3621, -286.104, -76.5981, 0.81", "-46.8787, -287.045, -76.4384, 0.74", "-46.8392, -287.133, -76.4212, 0.74", "-46.4624, -288.428, -76.2138, 0.29", "-46.2328, -289.708, -76.0582, 0.74", "-46.2003, -290.149, -76.0046, 0.81", "-46.2741, -291.411, -75.8833, 0.22", "-46.3874, -292.041, -75.8391, 0.66", "-46.5449, -292.68, -75.8173, 0.74", "-46.5718, -292.761, -75.8188, 0.74", "-46.9361, -293.686, -75.8517, 0.74", "-47.4312, -294.757, -75.8945, 0.22", "-47.923, -295.62, -76.0175, 0.22", "-47.964, -295.687, -76.0334, 0.22", "-48.2362, -296.176, -76.1906, 0.66", "-48.2752, -296.271, -76.2266, 0.66", "-48.4185, -296.785, -76.4554, 0.66", "-48.7335, -298.223, -77.0685, 0.52", "-48.7521, -298.295, -77.1105, 0.52", "-49.0371, -299.254, -77.6814, 0.22", "-49.2951, -300.037, -78.1313, 1.03", "-49.4528, -300.516, -78.4163, 1.11", "-49.7334, -301.399, -78.9197, 0.88", "-50.6262, -304.236, -80.3842, 0.22", "-50.8356, -304.919, -80.722, 0.88", "-51.0698, -305.655, -81.085, 0.59", "-51.395, -306.754, -81.6022, 0.52", "-51.6305, -307.75, -82.0233, 0.81", "-51.7434, -308.479, -82.3832, 0.81", "-51.9091, -310.017, -83.3381, 0.29", "-51.9139, -310.081, -83.3866, 0.29", "-51.9337, -310.63, -83.8894, 0.96", "-51.9366, -311.164, -84.4601, 1.25", "-51.8537, -313.545, -87.3158, 0.52", "-51.7426, -315.096, -89.3158, 0.44", "-51.6855, -315.518, -89.879, 0.66", "-51.4563, -316.764, -91.536, 0.52", "-51.1201, -318.102, -93.3033, 0.29", "-51.0155, -318.424, -93.7092, 0.59", "-50.9583, -318.562, -93.854, 0.59", "-50.2866, -319.903, -95.102, 0.22", "-50.2475, -319.98, -95.1703, 0.22", "-49.9262, -320.533, -95.5405, 0.59", "-49.8115, -320.702, -95.6241, 0.59", "-49.6545, -320.931, -95.7426, 0.59", "-49.6026, -321.005, -95.7791, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-15.3144, 173.488, 1.62056, 0.29", "-16.1929, 174.043, 1.1166, 0.29", "-16.8094, 174.417, 0.825479, 0.29", "-17.6706, 174.928, 0.465118, 0.66", "-18.4185, 175.373, 0.132562, 0.29", "-18.7929, 175.597, -0.0371023, 0.37", "-19.5665, 176.067, -0.386138, 0.37", "-20.3724, 176.578, -0.71207, 0.59", "-20.7764, 176.838, -0.876708, 0.81", "-21.4656, 177.283, -1.14462, 0.37", "-21.6859, 177.442, -1.21765, 0.88", "-22.002, 177.697, -1.33031, 1.03", "-22.3975, 178.063, -1.47708, 0.81", "-22.7086, 178.384, -1.58658, 0.37", "-22.7464, 178.43, -1.59699, 0.37", "-23.1155, 178.99, -1.6637, 0.37", "-23.1529, 179.058, -1.67149, 0.37", "-23.4238, 179.617, -1.65739, 0.37", "-23.445, 179.668, -1.65024, 0.37", "-23.7599, 180.421, -1.47621, 0.22", "-23.9352, 180.838, -1.36308, 0.74", "-23.955, 180.887, -1.34829, 0.74", "-24.4077, 182.036, -1.01053, 0.29", "-24.495, 182.269, -0.935939, 0.66", "-24.6171, 182.586, -0.831676, 0.66", "-24.8427, 183.148, -0.645114, 0.37", "-24.9954, 183.551, -0.525911, 0.29", "-25.135, 183.96, -0.438087, 0.29", "-25.3091, 184.567, -0.367295, 0.96", "-25.324, 184.617, -0.361257, 0.96", "-25.4073, 184.949, -0.322846, 0.66", "-25.5219, 185.456, -0.266028, 0.29", "-25.6422, 185.958, -0.224695, 0.29", "-25.6553, 186.01, -0.223801, 0.29", "-25.787, 186.521, -0.248701, 1.11", "-25.8769, 187.01, -0.279187, 1.47", "-25.8929, 187.144, -0.288515, 1.47", "-25.9504, 187.828, -0.340857, 0.66", "-25.9854, 188.361, -0.379462, 0.37", "-26.0273, 189.032, -0.425517, 0.37", "-26.0775, 190.075, -0.559656, 0.29", "-26.1352, 191.178, -0.749024, 0.29", "-26.1404, 191.291, -0.769425, 0.29", "-26.1554, 191.998, -0.906699, 0.96", "-26.1612, 192.38, -0.9866, 1.18", "-26.1945, 193.623, -1.32018, 0.37", "-26.2327, 194.031, -1.47791, 0.37", "-30.2598, 200.297, -2.77568, 0.37", "-32.8394, 207.136, -4.79867, 0.37" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-15.3144, 173.488, 1.62056, 1.03", "-15.3784, 173.829, 1.70883, 1.03", "-15.5545, 174.645, 1.88906, 1.4", "-15.7623, 175.672, 2.07411, 1.4", "-15.7742, 175.735, 2.08411, 1.4", "-15.9254, 176.668, 2.20635, 1.25", "-16.0549, 177.656, 2.33783, 0.81", "-16.0614, 177.72, 2.34921, 0.81", "-16.1169, 178.453, 2.4904, 0.96", "-16.1284, 178.712, 2.53569, 0.96", "-16.152, 179.44, 2.67225, 1.18", "-16.1583, 180.275, 2.84891, 0.96", "-16.1792, 181.454, 3.04926, 1.18", "-16.1834, 181.551, 3.0617, 1.18", "-16.2323, 182.341, 3.11164, 1.18", "-16.2847, 183.238, 3.07981, 0.96", "-16.2891, 183.318, 3.06884, 0.96", "-16.327, 184.402, 2.84066, 1.47", "-16.3274, 184.466, 2.82398, 1.47", "-16.2871, 185.465, 2.587, 1.18", "-16.1805, 186.497, 2.35855, 0.81", "-16.1598, 186.612, 2.33959, 0.81", "-16.0214, 187.331, 2.33538, 0.74", "-16.0113, 187.388, 2.34651, 0.74", "-15.9744, 187.879, 2.49126, 0.74", "-15.9794, 187.94, 2.51438, 0.74", "-16.0932, 188.448, 2.70053, 0.81", "-16.4533, 189.557, 3.05169, 1.18", "-16.6307, 190.001, 3.17503, 1.4", "-16.9717, 190.799, 3.37226, 0.96", "-17.3143, 191.57, 3.54169, 0.96", "-17.6188, 192.256, 3.66595, 0.96", "-17.9909, 193.112, 3.76265, 0.96", "-18.0149, 193.172, 3.77043, 0.96", "-18.1789, 193.621, 3.86666, 0.96", "-18.2875, 193.955, 3.95831, 1.18", "-18.3328, 194.114, 4.01107, 1.18", "-18.5129, 194.776, 4.23636, 1.18", "-18.866, 196.11, 4.6588, 0.96", "-19.1591, 197.204, 5.00552, 0.66", "-19.3035, 197.728, 5.17225, 0.66", "-19.5019, 198.428, 5.37438, 0.88", "-19.6984, 199.139, 5.55911, 0.88", "-19.8784, 199.815, 5.71208, 1.03", "-20.0617, 200.547, 5.8269, 1.03", "-20.075, 200.602, 5.83633, 1.03", "-20.2275, 201.229, 5.92879, 1.11", "-20.3906, 201.891, 6.00046, 1.11", "-20.4148, 201.986, 6.00882, 1.11", "-20.6732, 202.957, 6.06437, 0.96", "-20.8586, 203.634, 6.11758, 0.96", "-21.0975, 204.553, 6.21407, 1.4", "-21.2559, 205.198, 6.29504, 1.03", "-21.4306, 206.003, 6.39531, 1.25", "-21.5929, 206.993, 6.51716, 0.88", "-21.6764, 207.921, 6.63054, 0.88", "-21.6979, 208.726, 6.73896, 0.88", "-21.6879, 208.912, 6.76503, 0.88", "-21.6206, 209.581, 6.84726, 0.88", "-21.5305, 210.496, 6.9251, 0.81", "-21.459, 211.343, 6.95812, 0.81", "-21.458, 211.4, 6.95687, 0.81", "-21.4954, 211.962, 6.97151, 0.96", "-21.6436, 212.925, 7.0261, 0.96", "-21.8719, 213.957, 7.10744, 1.03", "-21.885, 214.006, 7.11216, 1.03", "-22.2565, 215.259, 7.23926, 1.03", "-22.5634, 216.297, 7.34074, 1.03", "-22.8492, 217.334, 7.43845, 1.03", "-22.9371, 217.724, 7.47463, 1.03", "-23.0133, 218.214, 7.51372, 1.03", "-23.0979, 219.001, 7.56011, 0.88", "-23.1341, 219.964, 7.58295, 0.88", "-23.1214, 220.792, 7.55869, 1.11", "-23.096, 221.131, 7.53541, 1.11", "-23.018, 222.039, 7.43804, 1.11", "-23.0047, 222.161, 7.42079, 1.11", "-22.9249, 222.792, 7.31199, 0.96", "-22.9198, 222.84, 7.30206, 0.96", "-22.8518, 223.843, 7.07767, 0.88", "-22.8302, 224.603, 6.90564, 0.66", "-22.8301, 224.719, 6.8811, 0.66", "-22.8251, 225.428, 6.75186, 0.66", "-22.8237, 225.493, 6.74268, 0.66", "-22.7734, 226.245, 6.68065, 0.96", "-22.7597, 226.361, 6.67938, 0.96", "-22.6228, 227.104, 6.6723, 0.96", "-22.5934, 227.241, 6.67094, 0.96", "-22.5066, 227.636, 6.6682, 0.96", "-22.3529, 228.391, 6.70412, 0.96", "-22.247, 228.939, 6.75218, 1.18", "-22.1446, 229.583, 6.82135, 0.74", "-22.0686, 230.347, 6.90969, 0.74", "-22.0525, 230.931, 6.97557, 1.18", "-22.1288, 231.838, 7.06637, 0.66", "-22.2669, 232.515, 7.12127, 0.66", "-22.5048, 233.326, 7.16908, 0.66", "-22.7979, 234.118, 7.20143, 1.18", "-23.036, 234.687, 7.19755, 1.18", "-23.5288, 235.797, 7.13274, 0.96", "-23.8695, 236.553, 7.07896, 0.96", "-24.1096, 237.104, 7.05602, 0.66", "-24.1277, 237.15, 7.05545, 0.66", "-24.4439, 238.048, 7.06949, 0.59", "-24.6219, 238.623, 7.09309, 1.03", "-24.9288, 239.681, 7.221, 0.81", "-25.0964, 240.247, 7.32109, 1.03", "-25.1321, 240.358, 7.34368, 1.03", "-25.373, 241.048, 7.48852, 1.03", "-25.4632, 241.281, 7.53989, 1.03", "-25.8462, 242.215, 7.71856, 0.96", "-26.1749, 243.058, 7.83134, 0.96", "-26.39, 243.703, 7.90481, 0.96", "-26.5717, 244.358, 7.96645, 1.11", "-26.6692, 244.836, 7.99847, 1.33", "-26.6787, 244.901, 8.0004, 1.33", "-26.73, 245.781, 7.97436, 0.88", "-26.721, 246.459, 7.95942, 1.11", "-26.7088, 246.583, 7.96271, 1.11", "-26.6053, 247.125, 8.00457, 1.11", "-26.5899, 247.18, 8.01111, 1.11", "-26.4, 247.734, 8.1467, 0.88", "-26.3802, 247.785, 8.16362, 0.81", "-26.1659, 248.348, 8.35561, 1.03", "-26.0179, 248.759, 8.50124, 1.03", "-25.8026, 249.442, 8.73706, 0.81", "-25.5409, 250.476, 9.06858, 0.74", "-25.4013, 251.228, 9.28529, 0.74", "-25.3054, 251.989, 9.49992, 0.88", "-25.2724, 252.416, 9.6116, 0.88", "-25.2626, 253.051, 9.7766, 0.88", "-25.2741, 253.469, 9.87593, 0.88", "-25.2798, 254.044, 9.98299, 0.88", "-25.246, 254.867, 10.1311, 0.88", "-25.1993, 255.289, 10.2194, 0.88", "-25.1807, 255.409, 10.244, 0.88", "-25.0363, 256.151, 10.3966, 0.88", "-24.8778, 256.928, 10.5421, 0.88", "-24.6966, 257.78, 10.6825, 0.44", "-24.5562, 258.557, 10.8093, 0.81", "-24.4876, 259.143, 10.9128, 1.25", "-24.4365, 259.879, 11.0495, 0.96", "-24.4345, 260.833, 11.229, 1.33", "-24.4514, 261.127, 11.2831, 1.47", "-24.5773, 262.361, 11.4827, 1.11", "-24.6793, 263.103, 11.5747, 0.96", "-24.688, 263.16, 11.5811, 0.96", "-24.7789, 263.815, 11.633, 0.96", "-24.7845, 263.866, 11.635, 0.96", "-24.8315, 264.703, 11.6417, 0.96", "-24.8301, 264.819, 11.6356, 0.96", "-24.7705, 265.908, 11.5603, 0.96", "-24.6574, 267.149, 11.4164, 0.96", "-24.5227, 268.262, 11.2502, 0.96", "-24.4318, 268.933, 11.16, 0.96", "-24.3375, 269.532, 11.0833, 0.96", "-24.1977, 270.345, 10.9896, 1.11", "-23.9706, 271.558, 10.867, 1.11", "-23.9613, 271.609, 10.8662, 1.11", "-23.7775, 272.694, 10.9932, 1.11", "-23.7701, 272.749, 11.006, 1.11", "-23.6922, 273.451, 11.2369, 1.11", "-23.6341, 274.027, 11.4589, 1.18", "-23.5561, 275.01, 11.8778, 0.88", "-23.4993, 275.7, 12.1438, 0.66", "-23.4957, 275.757, 12.1614, 0.66", "-23.5054, 276.283, 12.3026, 0.81", "-23.5604, 276.959, 12.4465, 0.81", "-23.5666, 277.018, 12.4549, 0.81", "-23.6384, 277.652, 12.4951, 0.66", "-23.7062, 278.319, 12.5126, 1.18", "-23.8045, 279.375, 12.5296, 1.03", "-23.8603, 280.044, 12.5325, 0.88", "-23.913, 280.893, 12.509, 0.74", "-23.9493, 281.861, 12.4562, 1.25", "-23.9596, 282.375, 12.4115, 1.03", "-23.9578, 282.498, 12.3989, 1.03", "-23.9181, 283.345, 12.2821, 1.03", "-23.8967, 284.031, 12.2323, 1.03", "-23.893, 284.09, 12.2348, 1.03", "-23.8088, 284.966, 12.3719, 1.25", "-23.8007, 285.021, 12.3876, 1.25", "-23.63, 285.922, 12.7137, 1.4", "-23.3177, 287.309, 13.3233, 0.74", "-23.1201, 288.154, 13.7235, 0.59", "-23.102, 288.228, 13.7585, 0.59", "-22.83, 289.217, 14.2241, 0.59", "-22.6799, 289.775, 14.4513, 0.81", "-22.6666, 289.828, 14.4684, 0.81", "-22.5347, 290.478, 14.5627, 0.81", "-22.5114, 290.652, 14.5739, 0.81", "-22.4389, 291.374, 14.5898, 1.03", "-22.3832, 292.095, 14.5727, 1.25", "-22.3299, 292.646, 14.5922, 1.25", "-22.324, 292.696, 14.596, 1.25", "-22.234, 293.401, 14.7176, 0.96", "-22.1011, 294.426, 14.9574, 0.74", "-22.0529, 294.886, 15.1129, 0.74", "-21.9612, 295.914, 15.5291, 0.88", "-21.9292, 296.425, 15.7506, 0.74", "-21.8847, 297.498, 16.2204, 0.74", "-21.8801, 298.035, 16.4563, 0.74", "-21.9134, 299.1, 16.9038, 0.96", "-21.9534, 299.734, 17.1376, 1.03", "-22.0181, 300.367, 17.3199, 1.03", "-22.0838, 300.998, 17.4631, 1.18", "-22.1345, 301.686, 17.5515, 0.59", "-22.1507, 302.094, 17.5835, 0.37", "-22.1475, 302.422, 17.5856, 0.81", "-22.1326, 302.765, 17.5788, 0.81", "-22.1017, 303.405, 17.5504, 0.81", "-22.0968, 303.999, 17.5088, 0.81", "-22.1317, 304.494, 17.4617, 0.88", "-22.205, 304.889, 17.4164, 0.81", "-22.3965, 305.525, 17.3337, 0.74", "-22.6426, 306.149, 17.2468, 0.74", "-22.9556, 306.784, 17.1538, 0.96", "-23.3004, 307.417, 17.0657, 0.44", "-23.6421, 308.017, 16.9901, 0.44", "-23.9643, 308.589, 16.9314, 0.96", "-23.9964, 308.647, 16.9273, 0.96", "-24.2076, 309.077, 16.901, 0.96", "-24.4414, 309.626, 16.8719, 0.96", "-24.4996, 309.79, 16.8719, 0.96", "-24.6934, 310.292, 16.8905, 0.81", "-24.7603, 310.46, 16.9138, 0.81", "-25.0726, 311.192, 17.0599, 0.81", "-25.0943, 311.243, 17.0722, 0.81", "-25.3765, 311.916, 17.2536, 0.96", "-25.6756, 312.688, 17.4647, 0.81", "-26.0327, 313.696, 17.7493, 0.81", "-26.0487, 313.749, 17.7637, 0.81", "-26.198, 314.448, 17.9295, 0.81", "-26.2053, 314.504, 17.9389, 0.81", "-26.2156, 315.176, 17.9366, 0.59", "-26.2117, 315.263, 17.9314, 0.59", "-26.1846, 315.738, 17.8564, 0.59", "-26.1401, 316.412, 17.7374, 0.59", "-26.0762, 317.203, 17.5687, 0.81", "-25.9667, 318.344, 17.2954, 0.81" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-1.98509, 88.8435, -47.763, 0.52", "-0.44428, 90.3101, -49.19, 0.52", "-0.407601, 90.3518, -49.2268, 0.52", "0.248533, 91.3198, -49.9508, 0.44", "0.283771, 91.3878, -49.9957, 0.44", "0.605838, 91.9879, -50.4042, 0.88", "0.950946, 92.5491, -50.7836, 1.11", "0.983949, 92.6089, -50.8191, 1.11", "1.45693, 93.3144, -51.2339, 1.03", "2.24104, 94.2919, -51.8042, 0.37", "3.34412, 95.3652, -52.5211, 0.44", "3.98883, 95.8755, -52.8963, 0.44", "4.0934, 95.9537, -52.9562, 0.44", "4.64012, 96.3989, -53.3373, 0.44", "4.69877, 96.4603, -53.396, 0.44", "5.32664, 97.3845, -54.2957, 0.96", "5.46211, 97.7282, -54.6025, 1.33", "5.68775, 98.524, -55.2655, 1.18", "5.96103, 99.7226, -56.2051, 0.81", "6.17833, 101.019, -57.1199, 0.37", "6.18982, 101.093, -57.1675, 0.37", "6.28166, 101.846, -57.5682, 0.66", "6.36894, 102.344, -57.815, 0.88", "6.40185, 102.51, -57.8819, 0.88", "6.56989, 103.274, -58.1612, 0.88", "6.78118, 104.229, -58.5215, 0.74", "6.93182, 105.06, -58.8588, 0.59", "7.09281, 106.22, -59.356, 1.03", "7.15264, 107.108, -59.746, 0.29", "7.16244, 108.136, -60.174, 0.81", "7.1322, 108.664, -60.3775, 0.88", "7.05318, 109.277, -60.5786, 0.96", "6.95958, 109.885, -60.7778, 0.66", "6.76895, 110.967, -61.0918, 0.22", "6.60857, 111.977, -61.368, 1.62", "6.50838, 112.678, -61.5336, 1.99", "6.42221, 113.305, -61.666, 1.77", "6.22214, 114.61, -61.9075, 1.25", "6.04825, 115.577, -62.0469, 0.81", "5.8982, 116.317, -62.1204, 0.66", "5.71491, 117.102, -62.1738, 0.81", "5.48513, 118.034, -62.199, 0.29", "5.19069, 119.137, -62.1779, 0.29", "5.02018, 119.708, -62.1208, 0.44", "4.99871, 119.784, -62.1122, 0.44", "4.75933, 120.649, -62.0265, 0.59", "4.61212, 121.235, -61.9838, 1.11", "4.46185, 121.886, -61.9598, 1.11", "4.2783, 122.722, -61.9436, 0.88", "4.01538, 123.931, -61.9412, 0.52", "3.72295, 125.284, -61.9471, 0.52", "3.46071, 126.53, -61.959, 0.66", "3.25676, 127.564, -61.9767, 0.29", "3.08446, 128.564, -62.0043, 0.81", "3.07408, 128.645, -62.0078, 0.81", "3.04365, 129.179, -62.0383, 1.03", "3.05146, 129.368, -62.053, 1.03", "3.1135, 130.012, -62.1235, 1.03", "3.20607, 130.728, -62.2168, 0.96", "3.26953, 131.359, -62.3184, 0.66", "3.28654, 132.175, -62.4697, 0.52", "3.22755, 132.728, -62.5902, 0.44", "3.01755, 133.75, -62.8352, 0.44", "2.96273, 133.907, -62.8755, 0.44", "2.68079, 134.475, -63.0216, 0.37", "2.24845, 135.163, -63.1869, 0.37", "1.63595, 136.03, -63.3559, 1.03", "1.5924, 136.094, -63.3667, 1.03", "1.24841, 136.659, -63.4468, 1.18", "0.942624, 137.237, -63.5155, 0.59", "0.642557, 137.923, -63.5792, 0.37", "0.378012, 138.694, -63.6351, 0.29", "0.0856628, 139.74, -63.6617, 0.22", "-0.0481257, 140.241, -63.663, 0.44", "-0.0895712, 140.409, -63.6609, 0.44", "-0.278256, 141.105, -63.5803, 0.44", "-0.300303, 141.178, -63.5613, 0.44", "-0.633047, 142.193, -63.2023, 0.74", "-0.914558, 142.991, -62.8797, 1.33", "-1.26653, 143.976, -62.4544, 1.4", "-1.8125, 145.513, -61.7817, 0.52", "-2.16654, 146.509, -61.357, 0.59", "-2.42824, 147.25, -61.0686, 0.74", "-2.59917, 147.761, -60.8998, 0.74", "-2.62638, 147.846, -60.8783, 0.74", "-2.8163, 148.457, -60.789, 0.44", "-3.07008, 149.318, -60.7957, 0.52", "-3.22354, 149.889, -60.8269, 0.66", "-3.35729, 150.406, -60.8349, 0.44", "-3.53772, 151.122, -60.8265, 0.22", "-3.79874, 152.122, -60.7993, 0.66", "-3.93632, 152.616, -60.7945, 0.88", "-4.13996, 153.306, -60.7987, 0.29", "-4.40345, 154.135, -60.8137, 0.22", "-4.58851, 154.686, -60.8325, 0.37", "-4.78181, 155.25, -60.8832, 0.52", "-5.06967, 156.103, -61.0354, 0.29", "-5.21255, 156.551, -61.1272, 0.59", "-5.26004, 156.725, -61.1576, 0.59", "-5.34961, 157.208, -61.2188, 0.59", "-5.35882, 157.285, -61.2234, 0.59", "-5.42087, 158.012, -61.2295, 0.59", "-5.50659, 159.088, -61.1627, 0.44", "-5.58761, 159.97, -61.0891, 0.59", "-5.66619, 160.701, -61.0235, 1.03", "-5.76425, 161.428, -60.9583, 1.03", "-5.89249, 162.153, -60.9014, 0.81", "-6.06233, 162.911, -60.8545, 0.59", "-6.28366, 163.705, -60.8338, 0.37", "-6.64267, 164.818, -60.8526, 0.37", "-6.95325, 165.73, -60.883, 0.37", "-7.20868, 166.464, -60.92, 0.44", "-7.47596, 167.234, -60.9732, 0.44", "-7.70897, 167.965, -61.0187, 0.29", "-7.99112, 168.916, -61.053, 0.29", "-8.17537, 169.658, -61.0557, 0.81", "-8.31992, 170.378, -61.0116, 1.11", "-8.44073, 171.111, -60.9311, 0.81", "-8.60198, 172.19, -60.777, 0.52", "-8.61267, 172.267, -60.764, 0.52", "-8.77484, 173.224, -60.5948, 0.52", "-9.00251, 174.254, -60.4268, 0.29", "-9.18989, 174.959, -60.3258, 0.59", "-9.42607, 175.655, -60.2612, 0.81", "-9.48772, 175.8, -60.2579, 0.81", "-9.76221, 176.438, -60.2615, 0.81", "-10.0081, 177.058, -60.2821, 0.66", "-10.0378, 177.143, -60.2877, 0.66", "-10.2944, 177.926, -60.3331, 0.44", "-10.5953, 178.864, -60.3863, 0.37", "-10.8674, 179.738, -60.4356, 0.37", "-11.1606, 180.685, -60.4907, 0.52", "-11.4071, 181.449, -60.5401, 0.37", "-11.6234, 182.055, -60.5881, 0.37", "-11.8603, 182.687, -60.646, 0.81", "-12.0962, 183.273, -60.7098, 0.88", "-12.3215, 183.778, -60.7709, 0.59", "-12.4604, 184.079, -60.8087, 0.44", "-12.8379, 184.996, -60.9108, 0.37", "-13.2204, 186.102, -61.0135, 0.37", "-13.359, 186.662, -61.07, 0.66", "-13.3743, 186.75, -61.0794, 0.66", "-13.4399, 187.628, -61.1654, 0.74", "-13.4545, 188.077, -61.2093, 0.88", "-13.4233, 189.106, -61.3128, 0.59", "-13.3441, 190.131, -61.4275, 0.29", "-13.3334, 190.219, -61.4376, 0.29", "-13.12, 191.607, -61.6033, 1.18" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-1.98509, 88.8435, -47.763, 0.59", "-2.01194, 89.5666, -47.6554, 0.59", "-2.04046, 90.0857, -47.5675, 0.29", "-2.07013, 90.5183, -47.4953, 0.29", "-2.1164, 91.087, -47.4043, 0.29", "-2.24563, 92.3907, -47.2034, 0.29", "-2.34042, 93.2334, -47.0813, 0.74", "-2.42281, 93.7819, -47.0139, 0.74", "-2.51988, 94.3467, -46.9606, 0.52", "-2.58244, 94.6882, -46.9412, 0.44", "-2.66221, 95.1115, -46.9287, 0.29", "-2.75468, 95.6106, -46.9346, 0.29", "-2.86472, 96.2722, -46.9604, 0.66", "-2.92712, 96.7035, -46.9677, 0.96", "-2.96711, 97.1053, -46.9601, 0.66", "-2.9764, 97.2539, -46.9531, 0.66", "-2.99176, 97.7045, -46.9214, 0.44", "-3.01561, 98.1666, -46.8808, 0.29", "-3.04948, 98.6216, -46.8362, 0.22", "-3.15817, 99.3588, -46.7214, 0.29", "-3.17172, 99.4178, -46.7107, 0.29", "-3.32725, 99.9706, -46.6027, 0.37", "-3.53295, 100.567, -46.491, 0.66", "-3.69601, 100.977, -46.4175, 0.96", "-4.06887, 101.911, -46.2636, 0.81", "-4.2863, 102.506, -46.1723, 0.59", "-4.30534, 102.572, -46.1637, 0.59", "-4.45769, 103.285, -46.088, 0.59", "-4.51856, 103.737, -46.0531, 0.66", "-4.57493, 104.705, -46.0026, 0.22", "-4.55837, 105.192, -45.995, 0.22", "-4.50246, 105.799, -45.9743, 0.74", "-4.44605, 106.313, -45.953, 0.81", "-4.43806, 106.384, -45.9497, 0.81", "-4.39409, 106.947, -45.9266, 0.88", "-4.37447, 107.399, -45.9056, 0.81", "-4.36086, 107.947, -45.8858, 0.29", "-4.39381, 108.883, -45.8681, 0.29", "-4.49412, 110.211, -45.8615, 0.74", "-4.56956, 110.851, -45.8682, 1.11", "-4.66336, 111.41, -45.8857, 0.88", "-4.86093, 112.322, -45.9218, 0.22", "-5.10013, 113.271, -45.9661, 0.22", "-5.1246, 113.365, -45.9737, 0.22", "-5.18227, 113.603, -46.011, 0.22", "-5.2979, 114.147, -46.1198, 0.74", "-5.36946, 114.489, -46.1969, 1.11", "-5.5029, 115.138, -46.3821, 1.25", "-5.64377, 115.88, -46.6097, 0.74", "-5.83476, 116.878, -46.9479, 0.22", "-5.95324, 117.476, -47.1584, 0.37", "-6.11892, 118.273, -47.44, 0.37", "-6.36737, 119.409, -47.8238, 0.52", "-6.47125, 119.872, -47.9677, 0.88", "-6.69835, 120.845, -48.2272, 1.03", "-6.83595, 121.46, -48.368, 0.66", "-6.98178, 122.152, -48.5093, 0.29", "-7.13397, 122.925, -48.6418, 0.22", "-7.26434, 123.581, -48.7207, 0.22", "-7.38754, 124.21, -48.7851, 0.44", "-7.46387, 124.63, -48.8159, 0.59", "-7.55395, 125.238, -48.862, 0.37", "-7.62233, 125.838, -48.9059, 0.29", "-7.67368, 126.549, -48.9537, 0.44", "-7.67884, 127.225, -49.0124, 0.29", "-7.60645, 127.98, -49.1269, 0.66", "-7.55329, 128.442, -49.2208, 1.03", "-7.51548, 128.733, -49.291, 1.25", "-7.45477, 129.31, -49.4478, 0.44", "-7.40335, 130.186, -49.71, 0.52", "-7.40064, 131.205, -50.0403, 0.29", "-7.45363, 132.41, -50.4382, 0.29", "-7.4584, 132.498, -50.4649, 0.29", "-7.48931, 133.045, -50.6299, 0.29", "-7.49807, 133.811, -50.8331, 0.81", "-7.49514, 133.88, -50.846, 0.81", "-7.43366, 134.336, -50.916, 0.88", "-7.26824, 135.013, -51.0688, 0.88", "-7.12428, 135.602, -51.2251, 0.44", "-6.93923, 136.388, -51.4565, 0.22", "-6.78469, 137.146, -51.7461, 0.22", "-6.63013, 138.094, -52.1654, 0.81", "-6.55183, 138.849, -52.5361, 0.88", "-6.53656, 139.372, -52.7997, 0.96", "-6.5458, 139.816, -53.019, 0.96", "-6.624, 140.902, -53.577, 0.44", "-6.62796, 140.964, -53.6063, 0.44", "-6.65913, 141.565, -53.8296, 0.44", "-6.69222, 142.412, -54.0909, 0.66", "-6.69647, 142.554, -54.1315, 0.66", "-6.70437, 142.946, -54.2674, 0.88", "-6.71471, 143.617, -54.5098, 0.52", "-6.70576, 144.218, -54.759, 0.37", "-6.68186, 145.575, -55.4083, 1.11", "-6.68597, 145.894, -55.5782, 1.25", "-6.7624, 147.152, -56.2723, 0.22", "-6.77067, 147.21, -56.3069, 0.22", "-6.87728, 147.626, -56.5924, 0.22", "-7.05634, 148.12, -56.9554, 0.22", "-7.2099, 148.435, -57.1683, 0.74", "-7.36882, 148.729, -57.3624, 1.03", "-7.62929, 149.176, -57.6272, 0.81", "-8.0613, 149.953, -58.0886, 0.52", "-8.20187, 150.226, -58.2836, 0.37", "-8.43204, 150.757, -58.7081, 0.29", "-8.62017, 151.308, -59.1507, 0.59", "-8.69926, 151.654, -59.41, 0.96", "-8.74624, 152.002, -59.6492, 1.11", "-8.84992, 153.092, -60.2791, 0.37", "-8.85492, 153.152, -60.3116, 0.37", "-8.93312, 153.813, -60.6175, 0.29", "-9.06, 154.491, -60.838, 0.29", "-9.07959, 154.555, -60.8524, 0.29", "-9.35951, 155.205, -60.9395, 0.37", "-9.51632, 155.531, -60.9529, 0.59", "-9.84303, 156.193, -60.9742, 0.74", "-10.1228, 156.73, -60.9884, 0.52", "-10.5391, 157.551, -61.0054, 0.22", "-10.7998, 158.135, -61.0158, 0.22", "-10.9824, 158.61, -61.0481, 0.22", "-11.2198, 159.309, -61.1322, 0.74", "-11.3987, 159.918, -61.2341, 0.88", "-11.5465, 160.472, -61.3502, 0.74", "-11.7162, 161.158, -61.5082, 0.66", "-12.0164, 162.3, -61.794, 0.29", "-12.2418, 163.061, -61.9979, 0.29", "-12.3609, 163.46, -62.1094, 0.44", "-12.4011, 163.598, -62.1472, 0.44", "-12.5106, 164.0, -62.2438, 0.44", "-12.6037, 164.39, -62.3138, 0.29", "-12.6728, 164.789, -62.3475, 0.74", "-12.7222, 165.366, -62.3759, 0.96", "-12.7302, 165.664, -62.3859, 0.88", "-12.7254, 166.385, -62.4051, 0.29", "-12.7092, 166.879, -62.4152, 0.44", "-12.6799, 167.514, -62.4254, 0.29", "-12.6644, 168.438, -62.4412, 0.37", "-12.6593, 168.83, -62.4466, 0.59", "-12.6394, 169.405, -62.4526, 0.74", "-12.6285, 169.766, -62.4566, 0.52", "-12.6171, 170.214, -62.4525, 0.37", "-12.6078, 171.272, -62.4021, 0.52", "-12.6079, 172.142, -62.3346, 0.44", "-12.6063, 173.419, -62.2105, 0.88", "-12.5997, 173.93, -62.1535, 1.25", "-12.5957, 174.444, -62.0942, 1.03", "-12.5918, 175.251, -61.9962, 0.29", "-12.5996, 175.95, -61.9121, 0.44", "-12.6607, 176.735, -61.8512, 0.37", "-12.759, 177.483, -61.8302, 0.74", "-12.8794, 178.259, -61.8509, 0.74", "-12.8925, 178.327, -61.857, 0.74", "-13.071, 179.083, -61.9586, 0.74", "-13.2961, 179.909, -62.0794, 0.22", "-13.4149, 180.337, -62.1418, 0.52", "-13.5466, 180.817, -62.2073, 0.96", "-13.7424, 181.568, -62.2985, 0.22", "-13.8877, 182.184, -62.3599, 0.66", "-14.0003, 182.749, -62.3994, 1.03", "-14.1386, 183.54, -62.3953, 0.81", "-14.2928, 184.398, -62.3577, 0.52", "-14.3881, 184.883, -62.3335, 0.44", "-14.6104, 185.885, -62.2853, 0.37", "-14.8329, 186.763, -62.2481, 0.88", "-15.0867, 187.723, -62.2124, 1.25", "-15.2311, 188.285, -62.195, 0.88", "-15.4055, 189.049, -62.1794, 0.44", "-15.5868, 189.881, -62.1792, 0.59", "-15.6864, 190.376, -62.1911, 0.81", "-15.7829, 190.927, -62.2201, 0.59", "-15.8795, 191.627, -62.275, 0.37", "-15.9971, 192.772, -62.3301, 0.52", "-16.0685, 193.507, -62.3416, 0.37", "-16.1092, 193.845, -62.347, 0.74", "-16.201, 194.341, -62.3589, 0.88", "-16.276, 194.607, -62.3804, 0.88", "-16.4295, 195.077, -62.4849, 1.11", "-16.5644, 195.557, -62.639, 1.03", "-16.6726, 196.014, -62.8088, 0.37", "-16.7806, 196.564, -63.0258, 0.37", "-16.8898, 197.403, -63.3775, 0.66", "-17.004, 198.696, -63.9115, 0.29", "-17.0561, 199.557, -64.2511, 0.52", "-17.0585, 199.615, -64.2724, 0.52", "-17.0733, 200.099, -64.431, 0.66", "-17.1019, 200.949, -64.6544, 0.37", "-17.1569, 201.912, -64.8354, 0.66", "-17.2234, 202.618, -64.9259, 0.59", "-17.2896, 203.123, -64.9679, 0.74", "-17.3903, 203.794, -64.9926, 0.37", "-17.5483, 204.701, -64.9172, 0.59", "-17.5742, 204.836, -64.8923, 0.59", "-17.6756, 205.363, -64.7722, 0.37", "-17.873, 206.408, -64.5098, 0.29", "-18.0397, 207.307, -64.2966, 0.52", "-18.3054, 208.746, -63.9693, 0.22", "-18.4462, 209.639, -63.7881, 0.52", "-18.5223, 210.111, -63.7142, 0.81", "-18.624, 210.658, -63.6645, 0.52", "-18.8182, 211.622, -63.6671, 0.74", "-18.8347, 211.689, -63.6737, 0.74", "-19.1126, 212.546, -63.8475, 1.33", "-19.3698, 213.2, -63.9837, 0.88", "-19.7065, 213.927, -64.1313, 0.66", "-20.0793, 214.614, -64.2573, 0.52", "-20.5489, 215.402, -64.3988, 0.52", "-20.95, 216.038, -64.5182, 0.52", "-21.4333, 216.733, -64.6602, 0.29", "-21.7614, 217.222, -64.758, 0.52", "-22.0751, 217.678, -64.8457, 0.66" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "44.3268, 64.5376, 8.88911, 0.59", "46.1588, 64.8279, 5.38408, 0.59", "47.1751, 65.0247, 3.7219, 0.74", "47.22, 65.0343, 3.65556, 0.74", "47.6982, 65.1575, 3.01967, 0.74", "48.5267, 65.3572, 2.06297, 0.96", "48.5818, 65.3665, 2.00478, 0.96", "49.281, 65.4268, 1.56022, 0.96", "49.3493, 65.4296, 1.51741, 0.96", "50.6492, 65.4946, 0.634209, 0.52", "51.4856, 65.5465, 0.0203984, 0.52", "52.6076, 65.6276, -0.824721, 0.81", "53.2234, 65.6846, -1.27867, 0.88", "54.287, 65.7627, -2.09888, 0.52", "54.6097, 65.7913, -2.33601, 0.74", "54.7308, 65.8055, -2.44161, 0.74", "55.1532, 65.8915, -2.88543, 0.29", "55.667, 66.0457, -3.47459, 0.59", "56.5082, 66.3566, -4.66759, 0.74", "56.9652, 66.5461, -5.36555, 0.59", "58.0225, 67.0222, -7.11619, 1.03", "58.0873, 67.0548, -7.22489, 1.03", "58.2922, 67.1708, -7.58205, 0.74", "59.1214, 67.7413, -9.05, 0.44", "59.4421, 68.0044, -9.57846, 0.59", "60.0668, 68.4997, -10.5037, 0.66", "60.4967, 68.8053, -10.9817, 0.74", "60.5467, 68.838, -11.0337, 0.74", "60.7404, 68.9572, -11.2152, 0.74", "60.7898, 68.9866, -11.2529, 0.74", "61.8166, 69.6793, -12.2313, 0.29", "62.0701, 69.93, -12.589, 0.66", "62.1289, 70.018, -12.7213, 0.66", "62.2555, 70.2172, -13.08, 0.88", "62.2728, 70.2535, -13.1611, 0.88", "62.5139, 70.9654, -14.8302, 0.29", "62.6491, 71.5809, -16.3206, 0.29", "62.7592, 72.3065, -18.1438, 1.11", "62.8274, 72.9834, -19.8923, 0.96", "62.8827, 74.2864, -23.2025, 0.66", "62.8794, 74.5448, -23.8388, 0.66", "62.8717, 74.6343, -24.0431, 0.66", "62.8278, 75.1289, -25.0622, 0.59", "62.8225, 75.2261, -25.222, 0.59", "62.8174, 76.182, -26.3181, 0.52", "62.8257, 76.2282, -26.356, 0.52", "62.9663, 76.734, -26.7651, 0.96", "63.1812, 77.3342, -27.2201, 1.11", "63.7316, 78.5839, -28.0642, 0.29", "63.7617, 78.6362, -28.1037, 0.29", "64.043, 78.954, -28.4283, 0.52", "64.0819, 78.9891, -28.4741, 0.52", "64.2324, 79.1036, -28.6518, 0.74", "64.275, 79.1383, -28.709, 0.74", "64.9269, 79.7978, -29.596, 0.74", "65.4372, 80.475, -30.3514, 0.59", "65.4688, 80.5272, -30.4028, 0.59", "65.7446, 81.0259, -30.8282, 0.29", "66.1641, 81.8828, -31.4451, 0.29", "66.4744, 82.6103, -31.9107, 0.88", "66.6289, 83.0459, -32.1238, 1.11", "66.6496, 83.1076, -32.1509, 1.11", "66.8849, 83.7193, -32.4228, 0.88", "67.0, 83.9516, -32.5493, 0.52", "67.5591, 84.8034, -33.0681, 0.37", "68.0966, 85.4948, -33.5615, 0.22", "68.1422, 85.5486, -33.6023, 0.22", "68.4328, 85.9017, -33.8598, 0.74", "69.0411, 86.7328, -34.4903, 0.88", "69.3425, 87.1418, -34.797, 0.22", "69.6468, 87.5027, -35.1054, 0.29", "69.6925, 87.5482, -35.152, 0.29", "70.0476, 87.8627, -35.6123, 0.29", "70.7321, 88.3666, -36.7187, 0.88", "70.9866, 88.5198, -37.1462, 1.18", "71.7635, 88.9159, -38.497, 0.29", "72.1116, 89.075, -39.1047, 0.88", "73.3017, 89.6202, -41.1392, 1.33", "74.2912, 90.0496, -42.7708, 0.52", "74.6331, 90.2039, -43.3124, 1.25", "74.6688, 90.2238, -43.3683, 1.25", "75.4769, 90.8121, -44.6105, 0.29", "75.8721, 91.154, -45.1804, 0.29", "76.2482, 91.5305, -45.5868, 0.59", "76.4543, 91.7596, -45.7937, 0.96", "76.8753, 92.2248, -46.2207, 0.96", "77.5729, 92.9106, -46.8999, 0.59", "77.6232, 92.9531, -46.9443, 0.59", "78.0231, 93.2676, -47.2845, 0.29", "78.5939, 93.7286, -47.743, 0.44", "78.9437, 94.0175, -48.005, 0.66", "79.4576, 94.494, -48.3944, 0.29", "79.794, 94.8153, -48.6203, 0.22", "80.2339, 95.2485, -48.9244, 0.66", "80.4693, 95.4789, -49.0858, 0.74", "80.7131, 95.7274, -49.2476, 0.59", "81.5809, 96.546, -49.803, 0.22", "81.9777, 96.8231, -50.0532, 0.44", "82.0421, 96.8507, -50.0935, 0.44", "82.4143, 96.9426, -50.3109, 0.59", "82.4729, 96.9535, -50.346, 0.59", "83.0424, 97.0312, -50.6821, 0.59", "83.9676, 97.1451, -51.1973, 0.22", "84.4684, 97.2506, -51.4841, 0.59", "84.8002, 97.341, -51.6709, 0.66", "85.4194, 97.57, -52.074, 0.66", "85.4744, 97.5958, -52.1116, 0.66", "86.1904, 98.0179, -52.6407, 0.22", "86.6957, 98.362, -53.0117, 0.66", "86.9193, 98.523, -53.1801, 0.96", "88.0883, 99.3919, -54.0557, 0.22", "88.487, 99.6987, -54.3948, 0.22", "89.0494, 100.164, -55.036, 0.59", "89.2997, 100.393, -55.4229, 0.96", "89.4144, 100.498, -55.6277, 1.18", "89.4447, 100.524, -55.6844, 1.18", "90.2727, 101.103, -57.1006, 0.44", "90.991, 101.487, -58.2101, 0.37", "91.5595, 101.73, -59.0031, 0.29", "91.9215, 101.865, -59.4512, 0.44", "92.1944, 101.969, -59.7672, 0.44", "93.0078, 102.279, -60.5577, 0.22", "93.6501, 102.476, -61.0162, 0.81", "93.7737, 102.507, -61.0916, 0.81", "94.1779, 102.582, -61.3272, 0.96", "95.723, 102.812, -62.2324, 0.37", "96.6122, 102.959, -62.76, 0.37", "97.4496, 103.139, -63.3343, 0.29", "97.4962, 103.147, -63.3704, 0.29", "98.0872, 103.241, -63.8499, 0.29", "98.5447, 103.305, -64.2184, 0.74", "99.1429, 103.38, -64.6129, 1.03", "100.236, 103.544, -65.3039, 0.88", "101.757, 103.818, -66.0356, 0.29", "102.299, 103.898, -66.2177, 0.44", "103.081, 103.981, -66.3856, 0.29", "104.351, 104.032, -66.5059, 1.33", "104.814, 104.017, -66.4908, 1.69", "106.353, 103.916, -66.2642, 0.29", "107.019, 103.866, -66.1162, 0.29", "107.423, 103.82, -66.035, 0.66", "107.484, 103.81, -66.0263, 0.66", "107.932, 103.726, -66.0198, 0.66", "108.708, 103.549, -66.0748, 0.22", "109.177, 103.393, -66.1542, 0.44", "109.252, 103.365, -66.1639, 0.44", "109.807, 103.145, -66.2179, 0.44", "109.861, 103.124, -66.231, 0.44", "110.548, 102.867, -66.4574, 0.29", "111.284, 102.59, -66.7929, 0.29", "111.819, 102.39, -67.0849, 0.74", "112.111, 102.284, -67.2566, 0.96", "113.623, 101.761, -68.2532, 0.37", "113.955, 101.662, -68.4949, 1.03", "114.756, 101.49, -69.1917, 1.03", "115.104, 101.443, -69.5539, 0.88" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "44.3268, 64.5376, 8.88911, 0.88", "45.2427, 65.1034, 9.93099, 0.88", "45.6939, 65.4209, 10.3622, 0.66", "45.9353, 65.6278, 10.5858, 0.66", "45.9568, 65.6498, 10.6054, 0.66", "46.1889, 65.9417, 10.8158, 0.66", "46.2083, 65.9693, 10.8328, 0.66", "46.4155, 66.3731, 10.9881, 0.74", "46.6973, 67.0436, 11.2626, 0.44", "46.8134, 67.3478, 11.4032, 0.37", "46.9745, 67.7826, 11.6182, 0.37", "47.0477, 67.9864, 11.7228, 0.59", "47.2209, 68.4721, 11.9679, 0.59", "47.3491, 68.8239, 12.1385, 0.59", "47.4179, 68.9834, 12.2001, 0.88", "47.4371, 69.0173, 12.2148, 0.88", "47.645, 69.3132, 12.391, 1.18", "47.6876, 69.3673, 12.4324, 1.18", "47.817, 69.5265, 12.5748, 0.88", "48.0945, 69.8668, 12.8971, 0.44", "48.422, 70.2612, 13.2606, 0.74", "48.8552, 70.7695, 13.7328, 1.33", "49.2487, 71.2314, 14.1533, 0.96", "49.6493, 71.7113, 14.572, 0.52", "49.8891, 72.0158, 14.8194, 0.44", "50.197, 72.4276, 15.1476, 0.37", "50.4819, 72.8563, 15.4872, 0.37", "50.6535, 73.1447, 15.7282, 0.37", "50.6923, 73.2219, 15.7992, 0.37", "50.8014, 73.477, 16.0726, 0.59", "50.9828, 74.0366, 16.7578, 0.88", "51.0717, 74.4554, 17.3196, 0.88", "51.1091, 74.7839, 17.7655, 0.52", "51.1228, 74.9815, 18.0447, 0.52", "51.1241, 75.0003, 18.0693, 0.52", "51.1394, 75.181, 18.2532, 0.52", "51.1451, 75.215, 18.2664, 0.52", "51.214, 75.4527, 18.2893, 0.74", "51.2325, 75.5051, 18.2888, 0.74", "51.3672, 75.8262, 18.2782, 0.37", "51.5798, 76.3022, 18.257, 0.44", "51.7672, 76.6971, 18.2108, 0.44", "51.9232, 77.0201, 18.1575, 0.74", "51.9557, 77.0848, 18.1439, 0.74", "52.1516, 77.4981, 18.0421, 0.74", "52.1664, 77.5305, 18.0331, 0.74", "52.3756, 78.0188, 17.8939, 0.66", "52.3891, 78.0531, 17.8848, 0.66", "52.5088, 78.3531, 17.8182, 0.74", "52.7196, 78.8955, 17.7218, 0.29", "52.8469, 79.2248, 17.6958, 0.44", "52.9945, 79.6082, 17.6997, 0.22", "53.1007, 79.8961, 17.7342, 0.66", "53.1763, 80.1157, 17.771, 0.66", "53.188, 80.1561, 17.7807, 0.66", "53.3396, 80.6605, 17.9404, 0.44", "53.3515, 80.6955, 17.9495, 0.44", "53.4226, 80.8703, 17.9824, 0.52", "53.4675, 80.9776, 17.9924, 0.52", "53.5532, 81.1893, 17.9938, 0.52", "53.7273, 81.6619, 17.9745, 0.29", "53.8681, 82.1203, 17.9489, 0.29", "53.875, 82.1513, 17.9488, 0.29", "53.9302, 82.4991, 17.9611, 0.44", "53.9397, 82.6199, 17.9708, 0.44", "53.9412, 82.993, 18.0382, 0.44", "53.9127, 83.3392, 18.1317, 0.59", "53.8965, 83.6392, 18.2475, 0.74", "53.8978, 83.678, 18.264, 0.74", "53.9431, 83.9612, 18.3912, 0.74", "54.0917, 84.3655, 18.6344, 0.52", "54.1067, 84.393, 18.6536, 0.52", "54.2986, 84.7053, 18.8698, 0.44", "54.4072, 84.8795, 18.9998, 0.29", "54.5642, 85.1647, 19.2102, 0.29", "54.8684, 85.7736, 19.7172, 0.29", "54.9684, 86.0018, 19.9052, 0.37", "55.0991, 86.3186, 20.1579, 0.44", "55.274, 86.7844, 20.5198, 0.96", "55.3869, 87.0732, 20.7389, 1.25", "55.7224, 87.784, 21.2681, 0.52", "55.8846, 88.0792, 21.46, 0.52", "56.049, 88.3183, 21.6136, 0.66", "56.0736, 88.3467, 21.6318, 0.66", "56.3299, 88.6106, 21.7718, 0.44", "56.7193, 88.9941, 21.9468, 0.29", "56.8363, 89.1317, 21.9941, 0.52", "57.0125, 89.3706, 22.0899, 0.52", "57.2203, 89.6805, 22.2205, 0.44", "57.3796, 89.9198, 22.3123, 0.29", "57.5191, 90.1173, 22.403, 0.52", "57.8285, 90.5165, 22.581, 0.88", "57.9895, 90.7049, 22.667, 0.52", "58.3576, 91.0898, 22.8434, 0.44", "58.6546, 91.3732, 22.9657, 0.59", "59.2019, 91.8251, 23.1813, 0.29", "59.6084, 92.1208, 23.3376, 0.29", "61.7427, 96.3186, 25.5499, 0.29", "63.288, 101.107, 26.9599, 0.29" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "-85.735, -152.419, 10.2916, 0.29", "-85.9577, -153.782, 10.4526, 0.29", "-86.0335, -154.246, 10.5075, 0.74", "-86.1754, -155.114, 10.6101, 0.29", "-86.3088, -155.93, 10.7066, 0.29", "-86.4902, -157.04, 10.8377, 0.37", "-88.9407, -168.236, 10.7962, 0.37" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-85.735, -152.419, 10.2916, 0.37", "-86.9471, -152.478, 11.3875, 0.37", "-87.6058, -152.516, 11.9156, 0.37", "-88.8225, -152.547, 12.8829, 0.44", "-89.68, -152.572, 13.5343, 0.37", "-91.3789, -152.671, 14.7832, 0.88", "-91.9754, -152.728, 15.2595, 1.11", "-92.7018, -152.821, 15.8404, 0.81", "-94.418, -153.145, 17.3382, 0.29", "-94.9706, -153.266, 17.8026, 0.29", "-95.4633, -153.373, 18.2277, 0.74", "-97.1165, -153.723, 19.5527, 0.44", "-97.6295, -153.818, 19.9669, 0.44", "-98.7597, -153.965, 20.8058, 0.29", "-99.9793, -154.129, 21.7993, 0.29", "-100.793, -154.196, 22.6442, 0.59", "-101.351, -154.214, 23.2711, 0.66", "-102.173, -154.212, 24.2096, 0.44", "-102.936, -154.195, 25.1584, 0.37", "-104.787, -154.145, 27.6417, 0.66", "-106.569, -154.127, 30.1503, 0.81", "-106.972, -154.116, 30.69, 0.88", "-107.323, -154.101, 31.182, 0.88", "-107.383, -154.098, 31.2659, 0.88", "-108.433, -154.029, 32.6481, 0.52", "-109.077, -153.935, 33.1814, 0.52", "-111.241, -153.699, 34.5535, 1.69" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-2.4974, -89.3193, -17.5416, 0.74", "-2.64574, -90.3742, -18.0047, 0.74", "-2.68337, -91.2321, -18.3791, 0.74", "-2.67144, -92.4096, -18.8674, 0.88", "-2.63763, -93.1313, -19.1554, 0.88", "-2.5822, -94.3144, -19.6276, 0.81", "-2.50702, -95.9194, -20.2682, 0.88", "-2.38112, -96.9016, -20.6432, 0.88", "-2.24774, -97.5874, -20.9102, 1.33", "-2.06564, -98.312, -21.1726, 1.18" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-2.4974, -89.3193, -17.5416, 0.59", "-2.45616, -90.1337, -17.7323, 0.59", "-2.42568, -91.195, -18.1435, 0.52", "-2.36366, -92.2606, -18.6028, 0.44", "-2.29733, -93.1809, -19.0155, 0.44", "-2.16547, -94.4295, -19.5538, 0.59", "-1.9716, -95.9219, -20.2055, 0.74", "-1.79834, -97.0398, -20.7359, 0.59", "-1.64824, -97.8482, -21.1374, 0.59", "-1.63331, -97.9125, -21.1681, 0.59", "-1.29276, -99.1647, -21.6844, 0.59", "-0.861007, -100.508, -22.0762, 0.74", "-0.580958, -101.274, -22.2383, 0.74", "-0.0977546, -102.514, -22.4584, 0.66", "0.367387, -103.655, -22.6403, 0.59", "0.434983, -103.797, -22.6529, 0.59", "1.07478, -104.846, -22.6411, 0.59", "1.3566, -105.213, -22.5912, 0.81", "1.41022, -105.277, -22.5792, 0.81", "1.92525, -105.883, -22.4664, 0.81", "2.86298, -107.038, -22.3523, 0.66", "3.52031, -107.945, -22.3257, 0.66", "4.07031, -108.835, -22.304, 0.66", "4.61772, -109.835, -22.2369, 0.81", "5.0045, -110.631, -22.1684, 0.96", "5.50394, -111.818, -22.0601, 0.52", "5.84977, -112.75, -21.9857, 0.52", "6.27914, -113.973, -21.8336, 0.81", "6.64066, -114.952, -21.6796, 0.81", "6.9788, -115.849, -21.5187, 0.81", "7.00621, -115.928, -21.504, 0.81", "7.39269, -117.135, -21.3039, 0.81", "7.43467, -117.276, -21.2894, 0.81", "7.79281, -118.696, -21.2129, 0.81", "8.00564, -119.773, -21.1658, 0.81", "8.16543, -120.787, -21.1043, 0.66", "8.17648, -120.871, -21.0948, 0.66", "8.28766, -121.948, -20.9311, 0.37", "8.4303, -123.226, -20.717, 0.66", "8.49825, -123.814, -20.607, 0.96", "8.66698, -124.975, -20.3367, 0.74", "8.89388, -126.373, -19.9674, 0.96", "9.06011, -127.442, -19.6946, 0.81", "9.25021, -128.706, -19.3896, 0.74", "9.25768, -128.767, -19.3794, 0.74", "9.39583, -130.089, -19.2692, 0.74", "9.40522, -130.164, -19.2711, 0.74", "9.63995, -131.445, -19.5698, 0.44", "9.7884, -132.103, -19.7957, 0.44", "10.1215, -133.435, -20.3645, 1.4", "10.3742, -134.282, -20.8116, 1.18", "10.7396, -135.314, -21.4913, 1.03", "11.4638, -136.99, -22.7141, 0.66", "11.794, -137.611, -23.1921, 0.66", "11.8775, -137.751, -23.2988, 0.66", "12.6973, -139.004, -24.2138, 0.81", "13.3094, -139.926, -24.9256, 0.96", "14.123, -141.118, -25.8798, 0.74", "14.7819, -142.014, -26.571, 0.74", "15.3016, -142.693, -27.0853, 0.96", "15.7004, -143.212, -27.4364, 1.25" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-23.2725, -406.377, -16.5202, 0.29", "-22.3787, -406.257, -17.7724, 0.29", "-21.8368, -406.184, -18.5314, 0.29", "-20.7787, -406.042, -20.0135, 0.22", "-20.2606, -405.972, -20.7393, 0.29" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-23.2725, -406.377, -16.5202, 0.59", "-23.489, -407.374, -16.5512, 0.59", "-23.5056, -407.439, -16.5517, 0.59", "-23.7967, -408.466, -16.5284, 0.52", "-24.0979, -409.505, -16.493, 0.66", "-24.3553, -410.487, -16.4604, 0.66", "-24.6065, -411.504, -16.4276, 0.81", "-24.6596, -411.71, -16.4146, 0.81", "-24.8594, -412.742, -16.3173, 0.81", "-24.8749, -412.88, -16.3009, 0.81", "-24.8146, -414.078, -16.1032, 0.81", "-24.8078, -414.152, -16.0953, 0.81", "-24.7561, -415.228, -16.1356, 0.59", "-24.7571, -416.299, -16.2748, 0.37", "-24.8017, -416.948, -16.4711, 0.74", "-25.0755, -418.222, -17.1737, 0.81", "-25.4585, -419.544, -18.1498, 0.52", "-25.9455, -421.114, -19.5319, 0.52", "-25.9594, -421.154, -19.571, 0.52", "-26.4419, -422.278, -20.9392, 0.96", "-27.0669, -423.593, -22.8734, 1.69", "-27.3057, -424.077, -23.728, 0.37", "-27.5857, -424.677, -24.9892, 0.37", "-27.6869, -424.936, -25.5913, 0.66", "-28.0701, -426.117, -28.4447, 1.25", "-28.2644, -426.894, -30.4452, 0.44", "-28.3378, -427.366, -31.6896, 0.81", "-28.4429, -428.269, -34.066, 0.37", "-28.4463, -428.622, -34.9838, 0.29", "-28.3574, -429.117, -36.2216, 0.29", "-28.2529, -429.368, -36.7417, 0.96", "-28.1021, -429.638, -37.2596, 0.96", "-27.7299, -430.264, -38.3123, 0.44", "-27.5997, -430.476, -38.7127, 0.81", "-27.4375, -430.734, -39.2977, 1.03", "-27.4186, -430.763, -39.3637, 1.03", "-26.8943, -431.593, -41.092, 0.37", "-26.5359, -432.192, -42.2433, 1.4", "-26.0274, -433.406, -44.3947, 0.37", "-25.9095, -433.794, -45.0191, 0.66", "-25.7462, -434.408, -45.9065, 0.29", "-25.5796, -434.961, -46.6003, 0.96", "-25.4874, -435.23, -46.8787, 0.96", "-24.6958, -437.396, -48.7456, 0.37", "-24.5759, -437.71, -48.9516, 0.59", "-24.2435, -438.574, -49.5371, 0.29", "-23.897, -439.436, -50.215, 0.96", "-23.8765, -439.483, -50.2547, 0.96", "-23.6266, -439.882, -50.5152, 1.33", "-23.5787, -439.927, -50.5157, 1.33", "-23.2471, -440.244, -50.4977, 1.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-62.5123, -91.7936, -0.0227316, 0.29", "-62.1845, -92.9889, 0.651481, 0.29", "-61.9509, -93.8405, 1.13188, 0.37", "-61.7353, -94.6267, 1.57534, 0.37", "-61.4265, -95.7528, 2.2105, 0.29" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-62.5123, -91.7936, -0.0227316, 0.37", "-63.4707, -92.4038, 0.397457, 0.37", "-64.1167, -92.7456, 0.778336, 0.37", "-64.8489, -93.051, 1.24769, 0.81", "-65.3269, -93.2077, 1.66441, 1.25", "-65.6775, -93.3043, 2.01821, 1.25", "-67.1655, -93.7192, 3.54373, 0.44", "-67.2666, -93.741, 3.65488, 0.44", "-67.6076, -93.8016, 4.03232, 0.74", "-68.9661, -94.0535, 5.47411, 0.52", "-69.6911, -94.238, 6.17955, 0.59", "-70.2579, -94.4557, 6.58848, 0.44", "-70.7484, -94.7235, 6.77746, 0.29", "-71.2886, -95.0743, 6.90427, 0.29", "-71.9847, -95.6217, 6.95899, 1.11", "-72.4299, -96.0324, 6.92378, 1.33", "-73.4866, -97.2199, 6.77105, 0.74", "-74.0038, -97.9282, 6.69107, 0.74", "-74.2757, -98.3875, 6.65109, 1.11", "-74.5727, -98.9633, 6.63713, 0.88", "-74.8991, -99.6742, 6.66452, 0.66", "-75.2497, -100.518, 6.74079, 0.37", "-75.4372, -101.088, 6.82599, 0.37", "-75.6934, -101.976, 6.95645, 0.37", "-75.9345, -102.964, 7.0922, 0.37", "-76.0924, -103.7, 7.18523, 0.29", "-76.2083, -104.405, 7.28627, 0.59", "-76.3009, -105.123, 7.42032, 0.81", "-76.3045, -105.182, 7.4311, 0.81", "-76.2965, -105.981, 7.59757, 0.74", "-76.2625, -106.488, 7.70115, 1.11", "-76.1611, -107.605, 7.94726, 0.59", "-76.1174, -108.115, 8.06952, 1.03", "-76.0548, -109.103, 8.34169, 0.52", "-76.0214, -109.926, 8.58164, 0.74", "-76.0142, -110.505, 8.75246, 0.66", "-76.0226, -111.556, 9.05751, 0.44", "-76.0787, -112.484, 9.3281, 0.44", "-76.2196, -113.444, 9.62362, 0.44", "-76.3199, -113.826, 9.7487, 0.81", "-76.5638, -114.508, 9.96577, 1.18", "-76.6815, -114.763, 10.0524, 1.33", "-77.2338, -115.784, 10.4348, 0.44", "-77.6961, -116.581, 10.7343, 0.59", "-78.0531, -117.159, 11.0308, 0.81", "-78.2368, -117.425, 11.2034, 0.81", "-78.7056, -117.994, 11.6991, 0.37", "-79.2361, -118.533, 12.2568, 0.74", "-79.4559, -118.718, 12.4855, 0.96", "-80.6807, -119.654, 13.8066, 0.59", "-81.2161, -120.02, 14.3827, 0.81", "-82.2893, -120.673, 15.5299, 0.52", "-82.9479, -121.008, 16.2116, 0.52", "-83.5381, -121.257, 16.771, 0.74", "-87.9113, -128.432, 21.9054, 0.74", "-92.7631, -135.916, 26.1074, 0.74" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-122.946, -103.19, -85.4271, 0.52", "-122.723, -105.108, -86.2441, 0.52", "-122.43, -107.331, -87.1499, 0.88", "-122.246, -108.374, -87.5406, 0.88", "-121.863, -110.117, -88.1833, 0.37", "-121.679, -110.876, -88.4449, 0.29", "-121.519, -111.578, -88.6673, 0.88", "-121.484, -111.722, -88.7069, 0.88", "-121.23, -112.857, -88.8925, 0.88", "-120.947, -114.356, -89.0613, 0.29", "-120.789, -115.389, -89.091, 0.29", "-120.693, -116.339, -89.0912, 0.22", "-120.644, -117.422, -89.061, 0.22", "-120.656, -117.943, -89.0328, 0.81", "-120.748, -118.882, -88.9499, 1.25", "-120.944, -120.416, -88.7558, 0.37", "-121.151, -121.849, -88.5736, 0.22", "-121.286, -122.723, -88.4621, 0.66", "-121.429, -123.547, -88.3573, 0.81", "-121.756, -125.196, -88.1479, 0.22", "-121.943, -125.998, -88.0462, 0.88", "-122.065, -126.44, -87.991, 1.03", "-122.236, -127.108, -87.9122, 1.03", "-122.387, -127.813, -87.8295, 0.74", "-122.402, -127.929, -87.8161, 0.74" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-122.946, -103.19, -85.4271, 0.22", "-124.843, -103.399, -87.4957, 0.22", "-125.608, -103.52, -88.2474, 0.22", "-126.439, -103.666, -88.965, 0.81", "-126.89, -103.752, -89.3018, 1.11", "-127.45, -103.868, -89.657, 1.03", "-129.029, -104.194, -90.5428, 0.22", "-129.325, -104.267, -90.6518, 0.66", "-129.99, -104.453, -90.8828, 0.96", "-130.749, -104.623, -91.1038, 0.29", "-131.609, -104.753, -91.3595, 0.29", "-131.933, -104.775, -91.4479, 0.96", "-132.578, -104.772, -91.6324, 1.18", "-132.639, -104.768, -91.6563, 1.18", "-133.422, -104.681, -92.0203, 0.88", "-133.539, -104.667, -92.0773, 0.88", "-134.031, -104.624, -92.3049, 0.66", "-135.231, -104.639, -92.8771, 0.29", "-135.46, -104.652, -92.9812, 0.29", "-136.412, -104.749, -93.4056, 0.29", "-136.909, -104.802, -93.7002, 0.59", "-137.304, -104.828, -93.9689, 0.59", "-138.472, -104.875, -94.8629, 0.29", "-138.79, -104.874, -95.1147, 1.03", "-139.25, -104.846, -95.5679, 1.33", "-140.599, -104.632, -97.2707, 0.29", "-140.837, -104.568, -97.5984, 0.29", "-140.881, -104.553, -97.6634, 0.29", "-141.26, -104.447, -98.2738, 0.59", "-142.175, -104.303, -99.7621, 0.81", "-142.816, -104.329, -100.846, 0.52", "-143.153, -104.426, -101.409, 1.11", "-143.773, -104.717, -102.494, 1.4", "-144.689, -105.207, -104.135, 0.29", "-144.901, -105.346, -104.532, 0.88", "-145.796, -106.092, -106.134, 0.52", "-146.498, -106.818, -107.406, 0.81", "-146.752, -107.137, -107.897, 0.88" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-25.9667, 318.344, 17.2954, 0.37", "-25.4415, 318.329, 16.9407, 0.37", "-24.4302, 318.226, 16.2571, 0.66", "-24.363, 318.214, 16.2137, 0.66", "-23.8734, 318.128, 15.9004, 0.29", "-23.7945, 318.114, 15.8506, 0.29", "-22.4885, 317.943, 14.945, 0.29", "-22.4234, 317.937, 14.8989, 0.29", "-22.1129, 317.945, 14.689, 0.66", "-21.7499, 317.97, 14.4271, 0.52", "-21.685, 317.979, 14.3758, 0.52", "-20.492, 318.277, 13.437, 0.22", "-19.9053, 318.575, 13.0004, 0.22", "-19.5898, 318.751, 12.7561, 0.29", "-9.68806, 321.629, 7.79129, 0.29", "-0.262867, 326.621, 3.54668, 0.29", "7.75821, 332.405, -2.31969, 0.29" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-25.9667, 318.344, 17.2954, 0.29", "-25.6966, 320.01, 17.2328, 0.29", "-25.6371, 320.572, 17.2031, 0.29", "-25.6349, 320.647, 17.2032, 0.29", "-25.6519, 321.508, 17.2334, 0.29", "-25.6556, 321.572, 17.2369, 0.29", "-25.7727, 322.732, 17.367, 0.29", "-25.7885, 322.792, 17.3779, 0.29", "-25.9494, 323.512, 17.5593, 0.52", "-25.9726, 323.657, 17.5981, 0.52", "-25.9982, 323.959, 17.6715, 0.52", "-26.0219, 324.693, 17.8225, 0.22", "-26.0111, 325.411, 17.9252, 0.22", "-25.983, 326.127, 18.0053, 0.44", "-25.9392, 326.674, 18.0353, 0.44", "-25.866, 327.451, 18.0612, 0.22", "-25.8573, 327.528, 18.0604, 0.22", "-25.7132, 328.607, 17.9436, 0.22", "-26.3471, 339.151, 17.5989, 0.22" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-13.12, 191.607, -61.6033, 0.66", "-13.199, 192.481, -61.6231, 0.66", "-13.2347, 193.316, -61.6401, 0.29", "-13.2356, 193.404, -61.6418, 0.29", "-13.2253, 194.274, -61.6576, 0.29", "-13.2383, 195.774, -61.6876, 0.29", "-13.268, 196.421, -61.7024, 0.52", "-13.2835, 196.634, -61.7074, 0.52", "-13.3088, 196.943, -61.7162, 0.52", "-13.3666, 197.51, -61.7332, 0.37", "-13.4823, 198.289, -61.7587, 0.37", "-13.8236, 199.439, -61.8065, 0.88", "-13.8804, 199.593, -61.8112, 0.88", "-14.1207, 200.215, -61.8238, 1.03", "-14.3444, 200.814, -61.83, 1.18", "-14.5652, 201.473, -61.8303, 0.66", "-14.7997, 202.299, -61.8223, 0.52", "-14.8936, 202.701, -61.8153, 0.59", "-14.9575, 203.146, -61.8097, 0.44", "-15.0131, 204.363, -61.7998, 0.29", "-14.9985, 204.834, -61.8001, 0.37", "-14.9916, 204.925, -61.8056, 0.37", "-14.9585, 205.457, -61.8619, 0.22", "-14.9589, 206.506, -61.9616, 0.59", "-14.986, 207.051, -62.0056, 0.88", "-15.0726, 207.965, -62.0622, 0.52", "-15.2232, 209.112, -62.1137, 0.29", "-15.3632, 209.954, -62.1358, 0.29", "-15.6048, 211.074, -62.1432, 0.59", "-15.6285, 211.162, -62.1367, 0.59", "-15.8007, 211.764, -62.0474, 0.29", "-15.8367, 211.891, -62.0179, 0.29", "-16.0042, 212.847, -61.7465, 0.52", "-16.0524, 213.292, -61.6518, 0.66", "-16.1535, 214.366, -61.5014, 0.52", "-16.1619, 214.457, -61.4907, 0.52", "-16.2272, 215.101, -61.4331, 0.29", "-16.4, 216.654, -61.4286, 0.29", "-16.5403, 217.778, -61.5292, 0.66", "-16.6014, 218.183, -61.5714, 0.88", "-16.6164, 218.27, -61.5821, 0.88", "-16.8014, 219.077, -61.6577, 0.52", "-17.1172, 220.117, -61.7245, 0.52", "-17.4116, 220.988, -61.753, 0.29", "-17.7606, 222.137, -61.7587, 0.29", "-18.0037, 223.032, -61.7367, 1.03", "-18.2367, 223.992, -61.6929, 0.74", "-18.4514, 225.084, -61.5722, 0.29", "-18.6876, 226.622, -61.327, 0.44", "-18.7737, 227.422, -61.1838, 0.37", "-18.8386, 228.37, -61.0128, 0.37", "-18.8618, 229.389, -60.7889, 0.96", "-18.8046, 230.764, -60.4394, 0.37", "-18.7233, 231.679, -60.1751, 0.37", "-18.624, 232.483, -59.918, 0.59", "-18.5542, 232.92, -59.7845, 0.88", "-18.5071, 233.184, -59.7122, 0.88", "-18.3431, 234.02, -59.515, 0.59", "-18.3288, 234.092, -59.5026, 0.52", "-17.9418, 235.907, -59.221, 0.15", "-17.7653, 236.738, -59.1231, 0.59", "-17.7466, 236.824, -59.114, 0.59", "-17.5667, 237.471, -59.0595, 0.59", "-17.5389, 237.554, -59.0547, 0.59", "-17.2884, 238.231, -59.0319, 0.88", "-16.9272, 239.189, -59.0332, 1.18", "-16.7731, 239.622, -59.0344, 1.18", "-16.2635, 241.278, -59.0199, 0.15", "-15.9616, 242.517, -59.0003, 0.15", "-15.8493, 243.203, -58.9873, 0.52", "-15.7764, 244.019, -58.9695, 0.66", "-15.774, 244.496, -58.9593, 0.74", "-15.8467, 245.459, -58.9404, 0.29", "-15.9658, 246.372, -58.9243, 0.37", "-16.0755, 247.552, -58.8415, 0.29", "-16.0791, 247.652, -58.8302, 0.29", "-15.9616, 248.987, -58.6258, 0.52", "-15.9434, 249.072, -58.6103, 0.52", "-15.5534, 250.205, -58.3749, 0.81", "-15.0367, 251.36, -58.102, 0.37", "-14.9978, 251.437, -58.0812, 0.37", "-14.4676, 252.61, -57.7845, 0.29", "-14.2533, 253.158, -57.6568, 0.37", "-14.2312, 253.229, -57.6435, 0.37", "-14.0366, 254.016, -57.5444, 0.37", "-13.752, 255.276, -57.3396, 0.29", "-13.4093, 256.665, -57.0274, 0.37", "-13.2809, 257.18, -56.8956, 0.88", "-13.1112, 257.75, -56.7437, 0.96", "-12.5909, 259.078, -56.3221, 0.52", "-11.8004, 260.676, -55.7502, 0.66", "-11.4524, 261.26, -55.508, 0.66", "-10.9434, 261.982, -55.1667, 0.29", "-10.3353, 262.784, -54.7608, 0.44", "-9.61538, 263.702, -54.2717, 1.11", "-9.04252, 264.436, -53.8745, 1.11", "-8.16922, 265.59, -53.3013, 1.11", "-7.7965, 266.085, -53.0223, 1.55", "-7.16191, 266.881, -52.5055, 1.55", "-7.07767, 266.978, -52.4309, 1.55", "-6.55916, 267.518, -51.9146, 1.55", "-6.5161, 267.558, -51.8699, 1.55", "-5.8228, 268.136, -51.1381, 2.06", "-5.77181, 268.177, -51.0809, 2.06", "-4.36021, 269.225, -49.4726, 0.52", "-3.50669, 269.82, -48.5079, 0.74" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-13.12, 191.607, -61.6033, 0.74", "-12.6489, 190.384, -61.2971, 0.74", "-12.6263, 190.316, -61.2824, 0.74", "-12.3676, 189.465, -61.1165, 0.37", "-12.0318, 188.225, -60.8965, 0.22", "-11.896, 187.625, -60.8026, 0.37", "-11.7438, 186.883, -60.7014, 0.15", "-11.5576, 185.733, -60.5871, 0.15", "-11.4782, 185.221, -60.5371, 0.44", "-11.4037, 184.661, -60.4846, 0.44", "-11.2996, 183.571, -60.3998, 0.22", "-11.1974, 182.305, -60.3448, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "115.104, 101.443, -69.5539, 0.22", "115.771, 101.858, -70.9513, 0.22", "116.007, 102.005, -71.4451, 0.74", "116.132, 102.083, -71.7073, 0.74", "117.115, 102.695, -73.7675, 0.29", "117.357, 102.846, -74.2734, 0.44" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "115.104, 101.443, -69.5539, 0.22", "116.094, 101.01, -69.6064, 0.22", "116.816, 100.737, -69.7054, 0.66", "117.294, 100.57, -69.783, 0.66", "117.855, 100.407, -69.8784, 0.52", "118.966, 100.2, -70.1181, 0.22", "119.498, 100.168, -70.2477, 0.22", "120.249, 100.297, -70.4531, 0.59", "120.619, 100.416, -70.5507, 0.74", "121.134, 100.623, -70.661, 0.74", "122.148, 101.113, -70.8175, 0.29", "122.984, 101.59, -70.8904, 0.29", "124.001, 102.208, -70.9535, 0.59", "124.464, 102.505, -70.9608, 0.52", "125.372, 103.093, -70.9571, 0.22", "125.872, 103.395, -70.9284, 0.29", "126.556, 103.742, -70.8139, 0.29" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "63.288, 101.107, 26.9599, 0.29", "66.7564, 108.823, 30.4087, 0.29", "69.4445, 117.352, 32.4367, 0.29", "71.9254, 125.86, 34.7791, 0.29", "73.3361, 134.332, 37.963, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "63.288, 101.107, 26.9599, 0.44", "67.5834, 108.463, 30.8202, 0.29", "72.0324, 115.895, 34.3505, 0.29", "76.8446, 123.72, 36.1622, 0.29", "79.8746, 132.526, 37.4656, 0.29", "82.8988, 141.396, 36.77, 0.29", "85.7041, 150.372, 36.6799, 0.29", "87.7351, 159.531, 37.4937, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "-88.9407, -168.236, 10.7962, 0.29", "-89.6185, -182.494, 11.9168, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "-88.9407, -168.236, 10.7962, 0.44", "-96.5205, -177.173, 9.5658, 0.29", "-103.274, -186.052, 5.74052, 0.29" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-111.241, -153.699, 34.5535, 0.66", "-111.415, -152.764, 35.1685, 0.66", "-111.468, -152.191, 35.4884, 0.29", "-111.505, -151.54, 35.7894, 0.29", "-111.508, -151.487, 35.8086, 0.29", "-111.591, -150.468, 36.1127, 0.52", "-111.609, -150.268, 36.1637, 0.74", "-111.662, -149.485, 36.2774, 0.37", "-111.707, -148.81, 36.3494, 0.37", "-111.769, -148.145, 36.3947, 0.29", "-111.8, -147.737, 36.4044, 0.59", "-111.822, -147.287, 36.388, 0.59", "-111.805, -146.767, 36.3689, 0.59", "-111.711, -146.077, 36.3451, 0.52", "-111.585, -145.571, 36.331, 0.96", "-111.38, -144.969, 36.3223, 0.37", "-111.228, -144.597, 36.3134, 0.29", "-110.898, -143.9, 36.2909, 0.29", "-110.622, -143.334, 36.2716, 0.29", "-110.444, -142.965, 36.2592, 0.52", "-110.425, -142.913, 36.2572, 0.52", "-110.335, -142.604, 36.2446, 0.52", "-110.212, -141.995, 36.2243, 0.37", "-110.103, -141.294, 36.2027, 0.37", "-110.097, -141.237, 36.2013, 0.37", "-110.006, -140.108, 36.1797, 0.37", "-109.959, -139.092, 36.1672, 0.37", "-109.937, -137.828, 36.1588, 0.37", "-109.937, -137.724, 36.1586, 0.37", "-109.907, -136.743, 36.1462, 0.37", "-109.904, -136.694, 36.1453, 0.37", "-109.85, -136.067, 36.1307, 0.88", "-109.834, -135.941, 36.1258, 0.88", "-109.683, -135.165, 36.0807, 0.29", "-109.44, -134.194, 36.0174, 0.29", "-109.249, -133.577, 35.972, 0.44", "-109.1, -133.12, 35.9392, 0.44", "-108.92, -132.582, 35.887, 0.29", "-108.899, -132.512, 35.8794, 0.29", "-108.624, -131.744, 35.78, 0.66", "-108.545, -131.557, 35.7631, 0.66", "-108.396, -131.231, 35.7408, 0.59", "-108.018, -130.411, 35.709, 0.37", "-107.994, -130.36, 35.7108, 0.37", "-107.464, -129.194, 35.8259, 0.37", "-107.175, -128.518, 35.9473, 0.37", "-106.974, -128.06, 36.0505, 0.37", "-106.892, -127.884, 36.1047, 0.88", "-106.639, -127.343, 36.355, 0.74", "-106.622, -127.295, 36.38, 0.74", "-106.624, -126.928, 36.6518, 0.52" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-111.241, -153.699, 34.5535, 0.52", "-111.805, -154.219, 34.5098, 0.52", "-112.347, -154.667, 34.4521, 0.29", "-112.874, -155.077, 34.3888, 0.29", "-113.7, -155.684, 34.2839, 0.44", "-114.397, -156.192, 34.1964, 0.37", "-114.703, -156.414, 34.1584, 0.66", "-114.98, -156.591, 34.1181, 0.88", "-115.33, -156.795, 34.0323, 0.88", "-115.836, -157.08, 33.863, 0.44", "-116.441, -157.438, 33.6162, 0.44", "-116.483, -157.464, 33.5967, 0.44", "-116.994, -157.772, 33.3422, 0.44", "-117.826, -158.256, 32.9086, 0.29", "-118.347, -158.539, 32.6304, 0.29", "-119.018, -158.838, 32.3149, 0.29", "-119.071, -158.857, 32.2938, 0.74", "-119.119, -158.871, 32.2791, 0.74", "-119.616, -159.038, 32.1357, 0.74", "-120.057, -159.215, 32.0321, 0.74", "-120.951, -159.648, 31.7996, 0.29", "-121.413, -159.934, 31.6472, 0.29", "-122.031, -160.385, 31.4063, 0.29", "-122.801, -161.036, 31.0597, 0.29", "-123.162, -161.363, 30.9056, 0.59", "-123.336, -161.52, 30.8328, 0.59", "-123.859, -161.958, 30.6144, 0.37", "-123.959, -162.005, 30.598, 0.37", "-124.545, -162.082, 30.6252, 0.37", "-125.529, -162.085, 30.726, 0.29", "-126.162, -162.051, 30.8757, 0.29", "-126.664, -162.01, 31.0413, 0.59", "-127.68, -161.939, 31.4811, 0.59", "-128.248, -161.917, 31.7691, 0.59", "-128.689, -161.924, 32.0561, 0.59", "-129.904, -162.087, 32.9695, 0.44", "-129.938, -162.095, 32.9966, 0.44", "-130.427, -162.268, 33.4096, 0.44", "-130.46, -162.282, 33.4355, 0.44", "-131.146, -162.572, 33.9242, 0.59", "-131.593, -162.758, 34.1754, 0.59", "-132.222, -163.012, 34.3852, 0.29", "-132.269, -163.028, 34.3986, 0.29", "-133.347, -163.371, 34.6046, 0.44", "-133.812, -163.529, 34.6464, 0.96", "-134.271, -163.693, 34.6412, 1.33", "-134.861, -163.916, 34.6141, 0.88", "-135.818, -164.332, 34.5332, 0.44", "-136.557, -164.691, 34.4317, 0.44", "-137.34, -165.109, 34.2664, 0.52", "-137.904, -165.39, 34.1311, 0.52", "-137.951, -165.411, 34.1183, 0.52", "-138.671, -165.701, 33.8883, 0.37", "-139.196, -165.883, 33.6937, 0.37", "-139.758, -166.015, 33.5064, 0.37", "-140.557, -166.111, 33.2794, 0.52", "-140.815, -166.126, 33.2068, 0.96", "-141.1, -166.133, 33.1171, 0.96", "-141.471, -166.13, 32.9846, 0.96", "-141.964, -166.142, 32.8007, 0.81", "-142.797, -166.236, 32.4892, 0.37", "-142.837, -166.245, 32.4746, 0.37", "-143.524, -166.441, 32.2275, 0.37", "-143.921, -166.578, 32.0867, 0.59", "-144.213, -166.684, 31.9827, 0.66", "-144.666, -166.848, 31.8175, 0.52", "-145.223, -167.04, 31.57, 0.29", "-145.277, -167.055, 31.5456, 0.29", "-145.801, -167.166, 31.305, 0.29", "-146.331, -167.272, 31.0896, 0.44", "-146.691, -167.348, 30.9582, 0.44", "-147.426, -167.517, 30.7179, 0.44", "-148.169, -167.712, 30.5054, 0.37", "-148.52, -167.802, 30.4362, 0.37", "-149.571, -168.024, 30.3677, 0.37", "-150.07, -168.104, 30.397, 0.37", "-150.594, -168.158, 30.4844, 0.37", "-151.068, -168.164, 30.6086, 0.37", "-151.858, -168.098, 30.858, 0.37", "-152.731, -167.953, 31.1447, 0.37", "-153.015, -167.892, 31.2464, 0.81", "-153.226, -167.866, 31.324, 1.11", "-153.656, -167.867, 31.4829, 1.11", "-153.697, -167.873, 31.4952, 1.11", "-154.345, -168.05, 31.648, 0.59", "-155.312, -168.377, 31.8728, 0.44", "-155.957, -168.582, 32.0414, 0.66", "-156.0, -168.595, 32.0522, 0.66", "-156.446, -168.725, 32.1436, 0.66", "-157.162, -168.907, 32.2369, 0.44", "-157.247, -168.927, 32.2482, 0.44", "-157.939, -169.095, 32.3293, 0.37", "-158.664, -169.291, 32.4275, 0.37", "-159.336, -169.497, 32.5193, 0.88", "-159.796, -169.657, 32.58, 1.18", "-161.15, -170.131, 32.7413, 0.37", "-161.762, -170.33, 32.8166, 0.29", "-162.152, -170.445, 32.8658, 0.81", "-162.21, -170.459, 32.8746, 0.81", "-162.464, -170.511, 32.9256, 0.81", "-163.518, -170.713, 33.1459, 0.37", "-163.916, -170.778, 33.222, 0.74", "-164.345, -170.852, 33.3159, 0.74", "-165.126, -170.987, 33.4817, 0.81", "-166.184, -171.188, 33.7074, 0.29", "-166.543, -171.264, 33.7866, 0.29", "-166.585, -171.276, 33.7952, 0.29", "-167.057, -171.421, 33.8802, 0.74", "-167.422, -171.53, 33.942, 0.81", "-168.338, -171.755, 34.0587, 0.37", "-168.39, -171.765, 34.064, 0.37", "-168.948, -171.857, 34.1322, 0.29", "-169.391, -171.925, 34.1925, 0.29", "-170.074, -172.009, 34.3116, 0.52", "-170.659, -172.078, 34.4354, 0.88", "-170.874, -172.09, 34.4806, 1.03" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-2.06564, -98.312, -21.1726, 0.96", "-1.96718, -100.656, -20.5305, 0.96", "-1.86401, -102.105, -20.14, 0.96", "-1.73869, -103.36, -19.8226, 1.03", "-1.63628, -104.109, -19.6544, 1.25", "-1.48873, -105.054, -19.4563, 1.11", "-1.23053, -106.418, -19.1582, 0.74", "-0.959665, -107.514, -18.991, 0.96", "-0.708559, -108.3, -18.8672, 0.74", "-0.262448, -109.503, -18.7037, 0.59", "-0.237421, -109.565, -18.6993, 0.59", "0.328673, -110.999, -18.6877, 0.59", "0.76949, -112.268, -18.8174, 0.59", "0.785217, -112.325, -18.8291, 0.59", "1.02381, -113.496, -19.0722, 0.88", "1.18557, -114.652, -19.3154, 0.88", "1.2565, -115.352, -19.4658, 0.88", "1.32708, -116.487, -19.6842, 0.66", "1.40096, -117.67, -19.7883, 0.52", "1.50192, -118.836, -19.7786, 1.11", "1.56036, -119.387, -19.717, 1.11", "1.66655, -120.248, -19.5704, 0.88", "1.84336, -121.394, -19.3632, 0.81", "2.02529, -122.431, -19.194, 0.88", "2.17903, -123.196, -19.1471, 1.03", "2.43394, -124.382, -19.1972, 0.74", "2.63633, -125.264, -19.2871, 0.59", "2.89928, -126.28, -19.4511, 0.52", "3.11854, -127.063, -19.6469, 0.74", "3.5329, -128.435, -20.0733, 0.66", "3.83319, -129.39, -20.3941, 0.74", "4.10062, -130.22, -20.6629, 0.81", "4.34498, -131.001, -20.8656, 1.11", "4.60395, -131.853, -21.0291, 0.88", "4.62146, -131.916, -21.0431, 0.88", "4.8519, -132.886, -21.3515, 0.59", "5.0547, -133.866, -21.7644, 0.59", "5.24144, -134.863, -22.242, 0.81", "5.4663, -136.078, -22.8529, 1.03", "5.92386, -138.273, -24.0342, 1.03", "6.30177, -139.869, -24.9257, 0.81", "6.65799, -141.176, -25.6978, 0.59", "6.67458, -141.233, -25.7323, 0.59", "6.95287, -142.19, -26.2713, 0.74", "7.29344, -143.289, -26.777, 0.66", "7.67483, -144.397, -27.1279, 0.66", "8.0619, -145.513, -27.4225, 0.66", "8.36762, -146.49, -27.6575, 0.96", "8.55313, -147.3, -27.8374, 1.18", "8.66469, -148.316, -28.0606, 1.03", "8.62969, -149.21, -28.2592, 0.88", "8.45343, -150.253, -28.5206, 0.66", "8.28397, -150.9, -28.6868, 0.74", "7.90689, -152.149, -29.0182, 0.74", "7.60256, -153.114, -29.2572, 0.81", "7.19459, -154.44, -29.545, 0.81", "6.8993, -155.613, -29.7579, 1.03", "6.76537, -156.443, -29.8741, 1.11", "6.71695, -157.345, -29.9864, 0.81", "6.78596, -158.759, -30.1302, 0.66", "6.94813, -159.874, -30.1978, 0.81", "7.14948, -160.662, -30.234, 0.81", "7.42916, -161.459, -30.2816, 0.81", "7.66045, -161.982, -30.3235, 1.03", "7.693, -162.043, -30.3297, 1.03", "8.1885, -162.787, -30.4295, 0.74", "8.78387, -163.592, -30.6119, 0.44", "8.98624, -163.857, -30.6924, 0.74", "9.02582, -163.909, -30.7141, 0.74", "9.32817, -164.343, -30.9094, 0.74", "9.36699, -164.403, -30.936, 0.74", "10.0926, -165.643, -31.4081, 0.59", "10.2971, -166.029, -31.5341, 0.88", "10.6989, -166.891, -31.7732, 0.88", "11.1609, -168.03, -32.0287, 0.66", "11.4386, -168.843, -32.1682, 0.74", "11.7397, -169.923, -32.3408, 0.88", "11.8856, -170.686, -32.4837, 0.44", "11.967, -171.377, -32.6741, 0.44", "12.0038, -172.172, -32.9435, 0.52", "12.0002, -172.815, -33.2331, 0.81", "11.9799, -173.942, -33.8219, 1.03", "11.9887, -175.201, -34.5425, 0.88", "12.0634, -176.385, -35.2292, 0.59", "12.1452, -177.027, -35.6019, 0.74", "12.4002, -178.176, -36.208, 0.52", "12.6091, -178.804, -36.4787, 0.52", "12.9938, -179.634, -36.7053, 0.81", "13.354, -180.243, -36.7949, 1.03", "13.6251, -180.63, -36.8212, 1.03", "14.4262, -181.679, -36.8546, 0.52", "14.736, -182.088, -36.8627, 0.66", "15.2248, -182.781, -36.9016, 0.66", "15.2668, -182.847, -36.9074, 0.66", "15.6428, -183.487, -36.9846, 0.81", "16.1003, -184.333, -37.1152, 0.59", "16.6333, -185.394, -37.3218, 0.37", "16.9168, -185.95, -37.4325, 0.88", "17.2829, -186.605, -37.5888, 1.18", "17.3186, -186.66, -37.6037, 1.18", "17.6679, -187.149, -37.8213, 1.11", "18.0402, -187.653, -38.1545, 0.96", "18.0744, -187.7, -38.1916, 0.96", "18.6769, -188.596, -38.9582, 0.59", "19.0111, -189.158, -39.4304, 0.81", "19.7384, -190.62, -40.538, 0.59", "20.0305, -191.356, -41.0255, 0.88", "20.1828, -191.882, -41.3167, 0.88", "20.3088, -192.485, -41.5801, 0.81", "20.4096, -193.331, -41.8362, 0.59", "20.4761, -194.229, -42.0043, 0.66", "20.5404, -195.278, -42.085, 1.03", "20.5887, -195.938, -42.1267, 1.33", "20.6298, -196.501, -42.1738, 1.18", "20.6819, -197.258, -42.2827, 0.81", "20.7649, -198.221, -42.5484, 0.59", "20.9147, -199.126, -42.9009, 0.74", "21.0624, -199.675, -43.1327, 0.96", "21.0806, -199.725, -43.1536, 0.96", "21.5145, -200.709, -43.5424, 0.96", "22.3182, -202.254, -44.1346, 0.74", "22.9833, -203.353, -44.5489, 0.74", "23.6308, -204.331, -44.8953, 0.88", "24.2211, -205.208, -45.0852, 0.88", "24.8338, -206.122, -45.1518, 0.59", "25.2588, -206.805, -45.0276, 0.59", "25.5762, -207.435, -44.7539, 0.59", "25.5924, -207.483, -44.7274, 0.59", "25.9545, -209.508, -43.5234, 0.52", "25.9826, -210.385, -42.9827, 0.52", "25.8158, -212.088, -42.0691, 1.18", "25.6294, -213.107, -41.6258, 1.18", "25.4294, -214.006, -41.3882, 0.52", "25.1457, -215.333, -41.362, 0.52", "24.9503, -216.386, -41.5897, 0.66", "24.715, -218.081, -42.19, 0.66", "24.6447, -219.035, -42.684, 0.66", "24.6418, -220.68, -43.668, 0.66", "24.8044, -222.405, -44.8139, 0.74", "24.9286, -223.007, -45.246, 1.03", "25.0957, -223.55, -45.6485, 1.03", "25.5268, -224.629, -46.4302, 0.66", "25.8603, -225.368, -46.9742, 0.37", "26.1967, -226.044, -47.4117, 0.74", "26.5042, -226.638, -47.7447, 1.03", "26.5334, -226.69, -47.7742, 1.03", "26.6904, -226.909, -47.8904, 1.25", "26.7444, -226.963, -47.9078, 1.25", "27.123, -227.291, -47.9856, 1.25", "27.1711, -227.337, -47.9919, 1.25", "27.5378, -227.733, -48.0304, 1.25", "27.8772, -228.166, -48.0603, 1.25", "28.6564, -229.313, -48.0707, 0.59", "29.2519, -230.215, -48.0539, 0.59", "29.8968, -231.229, -48.0129, 0.66", "30.3984, -232.001, -47.9716, 0.66", "31.0571, -232.969, -47.9077, 0.59", "31.6146, -233.748, -47.8449, 0.44", "32.1639, -234.388, -47.7839, 0.29", "32.2104, -234.425, -47.7804, 0.29", "32.9979, -234.775, -47.7371, 0.59", "33.7572, -235.036, -47.7136, 0.74", "33.8219, -235.057, -47.7084, 0.74", "34.7732, -235.384, -47.6127, 0.74", "34.833, -235.408, -47.6005, 0.74", "36.265, -235.995, -47.1562, 0.59", "36.9858, -236.299, -46.8737, 0.81", "38.123, -236.829, -46.351, 0.66", "38.1857, -236.859, -46.3213, 0.66", "39.3185, -237.365, -45.7391, 1.03", "40.1666, -237.686, -45.2438, 1.47", "40.5932, -237.832, -44.9293, 1.55", "41.4937, -238.141, -44.1755, 0.29", "42.1296, -238.367, -43.6049, 0.59", "43.057, -238.714, -42.7599, 0.81", "44.1553, -239.145, -41.7274, 1.18", "45.547, -239.742, -40.4075, 0.44", "46.4752, -240.161, -39.5113, 0.59", "46.522, -240.184, -39.4673, 0.59", "47.0629, -240.518, -38.9936, 0.81", "47.1016, -240.549, -38.9664, 0.81", "47.68, -241.065, -38.6719, 0.37", "48.3259, -241.645, -38.4394, 0.88", "48.7988, -242.115, -38.2818, 1.33", "49.2544, -242.629, -38.1282, 1.47", "50.1735, -243.776, -37.8767, 0.88", "50.215, -243.831, -37.8686, 0.88", "50.598, -244.346, -37.8324, 1.03", "51.2053, -245.199, -37.8687, 0.44", "51.8157, -246.08, -37.976, 0.44", "52.3232, -246.853, -38.1367, 0.66", "52.3588, -246.907, -38.1533, 0.66", "52.7046, -247.408, -38.2988, 0.44", "53.0995, -247.948, -38.4508, 0.81", "53.358, -248.267, -38.5316, 0.96", "53.7606, -248.744, -38.628, 1.11", "54.2741, -249.366, -38.7035, 0.29", "54.6944, -249.895, -38.7654, 0.22", "54.7356, -249.95, -38.7715, 0.22", "55.2597, -250.611, -38.8487, 1.47", "55.3034, -250.661, -38.8551, 1.47" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-2.06564, -98.312, -21.1726, 0.44", "-1.92523, -99.3457, -22.0511, 0.44", "-1.74583, -100.375, -22.9267, 0.59", "-1.16763, -103.069, -25.165, 0.59", "-0.863739, -104.316, -26.1657, 0.81", "-0.437505, -105.898, -27.406, 0.81", "-0.0170564, -107.378, -28.5326, 0.88", "0.237846, -108.229, -29.1454, 1.03", "0.677773, -109.49, -30.0054, 0.52", "0.91273, -110.062, -30.331, 0.88", "1.29299, -110.972, -30.8343, 0.88", "1.46698, -111.477, -31.0912, 0.88", "1.47464, -111.542, -31.1251, 0.88", "1.32871, -112.421, -31.7224, 0.44", "1.14053, -113.016, -32.227, 0.74", "0.959275, -113.707, -32.8649, 0.74", "0.819102, -114.573, -33.7066, 0.96", "0.785904, -115.767, -34.9104, 0.96", "0.928856, -116.989, -36.1045, 0.96", "1.19471, -118.195, -37.2693, 0.96", "1.62295, -119.584, -38.5015, 0.88", "2.12512, -120.921, -39.5731, 0.88", "2.6063, -122.119, -40.417, 0.59", "3.1056, -123.339, -41.1986, 0.59", "3.46385, -124.292, -41.7647, 0.96", "3.7697, -125.263, -42.3049, 1.25", "3.99459, -126.215, -42.8118, 1.33", "4.26274, -127.6, -43.4965, 0.96", "4.45256, -128.663, -44.0022, 0.81", "4.68306, -129.825, -44.5675, 0.88", "4.86633, -130.37, -44.8097, 1.11", "4.8902, -130.416, -44.8322, 1.11", "5.39193, -131.088, -45.1532, 1.11", "5.86212, -131.56, -45.3336, 1.25", "5.97519, -131.656, -45.3748, 1.25", "6.77713, -132.302, -45.7525, 1.33", "7.58639, -132.994, -46.2881, 1.03", "8.02548, -133.429, -46.6953, 0.59", "8.33332, -133.79, -47.0937, 0.81", "8.97089, -134.779, -48.3376, 0.81", "9.30023, -135.556, -49.3974, 1.11", "9.47314, -136.381, -50.5562, 0.88", "9.55524, -137.37, -51.9013, 0.59", "9.5814, -137.956, -52.6917, 0.81", "9.63044, -138.958, -54.0601, 0.96", "9.70445, -139.807, -55.1537, 0.81", "9.87448, -140.955, -56.4796, 0.37", "10.1264, -142.02, -57.5683, 1.03", "10.624, -143.547, -58.8985, 0.96", "11.2517, -145.096, -60.0745, 1.18", "11.7962, -146.232, -60.8601, 1.18", "12.4265, -147.418, -61.6324, 1.18", "13.0603, -148.537, -62.3312, 0.81", "13.7793, -149.777, -63.0455, 0.66", "14.1799, -150.469, -63.4005, 0.96", "14.9702, -151.805, -64.0211, 1.25", "15.0055, -151.863, -64.0495, 1.25", "15.6932, -152.891, -64.53, 1.11", "16.2068, -153.695, -64.8293, 0.81", "16.5217, -154.238, -64.9878, 1.25", "16.863, -154.926, -65.1133, 1.25", "17.1272, -155.631, -65.1616, 0.66", "17.3035, -156.36, -65.2531, 0.59", "17.3525, -157.29, -65.4185, 0.59", "17.3098, -157.739, -65.5409, 0.88", "17.2984, -157.807, -65.5637, 0.88", "17.1591, -158.664, -65.9123, 0.88", "17.0453, -160.198, -66.5956, 0.59", "17.0971, -160.876, -66.928, 0.44", "17.1217, -160.997, -66.9852, 0.44", "17.2973, -161.616, -67.2622, 0.74", "17.6078, -162.585, -67.6503, 0.96", "17.8915, -163.397, -67.9828, 0.96", "18.3152, -164.633, -68.4307, 0.59", "18.5162, -165.286, -68.6744, 0.88", "18.5337, -165.352, -68.6989, 0.88", "18.7014, -166.051, -68.9462, 0.96", "19.0243, -167.671, -69.5297, 0.59", "19.2, -168.591, -69.8734, 1.03", "19.3571, -169.307, -70.1301, 1.18", "19.658, -170.498, -70.5623, 0.88", "19.9156, -171.52, -70.9202, 0.74", "20.183, -172.623, -71.2873, 0.66", "20.4699, -174.026, -71.7008, 0.52", "20.5968, -174.886, -71.9581, 0.81", "20.6583, -175.78, -72.2369, 0.37", "20.6131, -176.537, -72.4864, 0.37", "20.5264, -177.076, -72.673, 0.88", "20.3947, -177.583, -72.8595, 1.18", "20.1691, -178.182, -73.1011, 1.33", "19.7737, -179.203, -73.5575, 0.88", "19.3927, -180.325, -74.1062, 0.74", "19.3724, -180.388, -74.1386, 0.74", "18.9212, -181.877, -74.9322, 0.52", "18.6467, -182.824, -75.4506, 0.66", "18.1742, -184.537, -76.3961, 0.59", "17.9469, -185.513, -76.9026, 0.88" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "15.7004, -143.212, -27.4364, 0.37", "16.8798, -143.464, -27.2482, 0.37", "18.171, -143.828, -27.047, 0.59", "18.9558, -144.059, -26.9431, 0.59", "20.3595, -144.447, -26.7942, 0.59", "20.5473, -144.498, -26.7773, 0.59", "21.5517, -144.751, -26.7314, 0.22", "22.0562, -144.841, -26.7938, 0.44", "22.8397, -144.918, -27.063, 0.44", "23.415, -144.951, -27.3639, 0.81", "23.5088, -144.947, -27.4241, 0.81", "24.1555, -144.82, -27.922, 0.96", "25.5198, -144.379, -29.2184, 0.52", "25.9606, -144.215, -29.6672, 0.52", "26.0207, -144.191, -29.73, 0.52", "26.7653, -143.886, -30.5096, 0.44", "28.1451, -143.296, -31.8953, 0.74", "29.4229, -142.72, -33.2116, 0.29", "29.9777, -142.451, -33.7695, 0.29", "30.3564, -142.285, -34.1494, 0.59", "30.41, -142.267, -34.2034, 0.59", "30.8047, -142.191, -34.6411, 1.18", "32.0773, -142.107, -35.9645, 1.11", "32.7787, -142.128, -36.7169, 0.37", "33.7558, -142.211, -37.7791, 0.29", "34.901, -142.344, -38.973, 1.11", "36.4527, -142.539, -40.4941, 0.66", "37.4574, -142.684, -41.4282, 0.44", "38.7592, -142.881, -42.617, 1.18", "39.2492, -142.952, -43.0848, 1.62", "39.9788, -143.022, -43.7724, 1.18", "40.8449, -143.052, -44.5235, 0.74", "40.9066, -143.051, -44.5726, 0.74", "42.4702, -142.969, -46.0153, 0.59", "42.5267, -142.963, -46.07, 0.59" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "15.7004, -143.212, -27.4364, 0.59", "15.5125, -144.886, -27.0622, 0.59", "15.3948, -145.74, -26.6312, 0.66", "15.3328, -146.172, -26.3078, 1.03", "15.3012, -146.334, -26.1748, 1.03", "15.1937, -146.65, -25.8351, 1.03", "14.8472, -147.477, -24.8296, 0.74", "14.1837, -148.657, -23.087, 1.03", "13.7491, -149.356, -21.7519, 1.11", "13.5676, -149.652, -21.1696, 0.74", "12.7491, -150.943, -18.7188, 0.74", "12.7167, -150.992, -18.6268, 0.74", "12.3617, -151.542, -17.6655, 0.66", "11.0617, -154.009, -14.1479, 0.66", "10.7611, -154.757, -13.2902, 0.52", "10.5018, -155.716, -12.4203, 0.74", "10.4937, -155.77, -12.3857, 0.74", "10.4248, -156.553, -11.997, 0.88", "10.3731, -158.551, -11.2925, 0.52", "10.3842, -159.511, -11.1314, 0.52", "10.4209, -160.518, -10.9549, 0.52", "10.4846, -161.491, -10.8007, 0.44", "10.5232, -162.245, -10.7024, 0.37", "10.5781, -163.569, -10.5322, 0.37", "10.6403, -164.623, -10.422, 0.59", "10.6846, -165.244, -10.3331, 0.88", "10.6901, -165.309, -10.3178, 0.88", "10.7483, -165.853, -10.1501, 0.96", "10.8862, -167.32, -9.48238, 0.44", "10.9661, -168.103, -9.04711, 0.59", "10.9711, -168.151, -9.01409, 0.59", "11.1257, -169.306, -8.2035, 0.81", "11.1716, -169.706, -7.92813, 0.96", "11.3399, -171.412, -6.80417, 0.52", "11.3663, -171.814, -6.56309, 0.74", "11.4141, -173.192, -5.82158, 0.52", "11.452, -174.082, -5.44678, 0.74", "11.4818, -174.893, -5.17411, 0.44", "11.4788, -175.599, -4.92645, 0.29", "11.4579, -176.045, -4.74877, 0.37", "11.383, -176.705, -4.36622, 0.59", "11.2841, -177.497, -3.80278, 0.59", "11.1728, -178.775, -2.75964, 0.81", "11.1742, -180.109, -1.54031, 0.44", "11.3057, -181.356, -0.261249, 0.88", "11.6032, -182.681, 1.24795, 0.74", "11.8245, -183.163, 1.87262, 0.29", "12.3361, -183.759, 2.75302, 0.37", "13.1759, -184.022, 3.24902, 0.37", "13.9752, -184.032, 3.41301, 0.66", "14.0408, -184.026, 3.41768, 0.66", "15.0917, -183.86, 3.37926, 0.29", "15.1652, -183.846, 3.37743, 0.29", "16.3172, -183.588, 3.41293, 0.15", "17.4159, -183.287, 3.39079, 0.15", "18.0311, -190.345, 9.22992, 0.15", "17.7799, -197.471, 15.0202, 0.15", "18.8543, -205.284, 19.7773, 0.15", "21.5468, -211.638, 25.791, 0.15" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-23.2471, -440.244, -50.4977, 1.18", "-22.451, -441.5, -50.6626, 1.18", "-21.5995, -442.754, -50.8191, 0.96", "-21.2316, -443.278, -50.8972, 1.47", "-20.792, -443.906, -51.0083, 1.84", "-20.256, -444.666, -51.1566, 1.33", "-19.5325, -445.718, -51.3883, 0.74", "-19.4946, -445.777, -51.4062, 0.74", "-19.0054, -446.536, -51.6623, 0.81", "-18.6221, -447.145, -51.896, 0.44", "-18.59, -447.204, -51.9235, 0.44", "-18.1495, -448.192, -52.4327, 0.29", "-17.81, -449.08, -52.955, 0.44", "-17.6089, -449.634, -53.2901, 0.81", "-17.3908, -450.155, -53.6094, 0.81", "-16.8698, -451.136, -54.2305, 0.37", "-16.8293, -451.197, -54.2667, 0.37", "-16.3286, -451.85, -54.6185, 0.81", "-15.7889, -452.532, -54.9274, 1.11", "-15.0385, -453.52, -55.2815, 1.11", "-14.1239, -454.841, -55.6314, 0.29", "-13.4834, -455.895, -55.8109, 0.29", "-13.0833, -456.68, -55.8765, 0.66", "-12.6908, -457.693, -55.8711, 0.88", "-12.4418, -458.569, -55.8134, 1.03", "-12.3357, -459.315, -55.7204, 1.03", "-12.3028, -460.201, -55.5344, 0.74", "-12.3252, -461.447, -55.2043, 0.22", "-12.3362, -462.244, -54.9459, 0.74", "-12.3353, -462.319, -54.9163, 0.74", "-12.3049, -463.036, -54.6078, 0.74", "-12.3033, -463.102, -54.5782, 0.74", "-12.3011, -463.947, -54.2166, 0.29", "-12.3046, -464.555, -54.0132, 0.29", "-12.2891, -465.345, -53.8093, 1.03", "-12.2869, -466.157, -53.695, 1.4", "-12.3033, -467.065, -53.6516, 0.52", "-12.3474, -467.643, -53.6528, 0.29", "-12.5485, -468.587, -53.7478, 0.37", "-12.7672, -469.172, -53.8762, 0.66", "-13.2577, -470.07, -54.225, 0.37", "-13.557, -470.471, -54.4782, 0.96", "-13.8767, -470.86, -54.7767, 0.96", "-14.7405, -471.826, -55.5917, 0.37", "-15.5817, -472.723, -56.4276, 0.74", "-16.4742, -473.691, -57.398, 1.25", "-17.9976, -475.429, -59.3047, 0.29", "-18.501, -476.011, -59.9876, 0.29", "-18.5373, -476.054, -60.0423, 0.29", "-18.9937, -476.673, -60.8499, 0.88", "-19.1765, -476.962, -61.2415, 1.18", "-19.5729, -477.8, -62.4263, 0.52" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-23.2471, -440.244, -50.4977, 0.44", "-22.4384, -441.286, -51.341, 0.44", "-21.4367, -442.59, -52.3361, 0.44", "-21.3785, -442.671, -52.3908, 0.44", "-20.9708, -443.246, -52.7638, 0.29", "-20.465, -443.934, -53.219, 0.81", "-19.8784, -444.688, -53.7428, 1.11", "-19.8302, -444.75, -53.7801, 1.11", "-19.1579, -445.659, -54.3209, 0.44", "-19.1079, -445.731, -54.3632, 0.44", "-18.5159, -446.648, -54.8977, 0.37", "-18.114, -447.33, -55.2629, 0.37", "-17.4821, -448.518, -55.8432, 0.29", "-17.1299, -449.204, -56.1855, 0.74", "-16.9268, -449.603, -56.3922, 0.81", "-16.8448, -449.775, -56.4902, 0.81", "-16.4021, -450.747, -57.0858, 0.44", "-16.0146, -451.589, -57.646, 0.29", "-15.5743, -452.46, -58.3028, 0.52", "-15.316, -452.926, -58.69, 0.52", "-14.666, -454.119, -59.7438, 0.29", "-14.2474, -454.971, -60.5392, 0.59", "-14.2221, -455.04, -60.6071, 0.59", "-14.1019, -455.514, -61.0287, 0.59", "-14.0879, -455.587, -61.091, 0.59", "-13.8951, -457.032, -62.265, 0.81", "-13.8325, -457.859, -62.9053, 1.03", "-13.8243, -459.059, -63.8369, 0.59", "-13.8485, -460.376, -64.8474, 0.29" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-92.7631, -135.916, 26.1074, 0.37", "-96.3286, -142.001, 29.41, 0.37", "-101.57, -146.754, 32.5738, 0.37", "-107.749, -150.291, 35.5637, 0.37", "-112.935, -154.737, 39.2026, 0.37", "-118.019, -159.053, 43.1215, 0.37", "-122.843, -164.316, 46.1757, 0.37", "-126.881, -170.251, 49.1898, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-92.7631, -135.916, 26.1074, 0.29", "-97.2906, -143.208, 30.2356, 0.37", "-100.979, -151.283, 33.7651, 0.37", "-104.656, -159.706, 36.4312, 0.37", "-108.508, -167.563, 40.244, 0.37", "-113.595, -175.245, 42.7299, 0.37", "-118.3, -182.645, 46.46, 0.37", "-122.634, -189.361, 51.596, 0.37", "-127.07, -195.864, 56.903, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "73.3361, 134.332, 37.963, 0.29", "75.6494, 141.731, 40.7198, 0.29", "78.1745, 148.548, 44.5214, 0.29", "80.0077, 155.64, 48.2375, 0.29", "82.4542, 162.403, 52.1787, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "73.3361, 134.332, 37.963, 0.44", "76.5309, 145.16, 41.337, 0.29", "78.3977, 156.36, 44.531, 0.29", "80.2566, 166.927, 49.3571, 0.29" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "-103.274, -186.052, 5.74052, 0.29", "-110.118, -194.582, 3.07244, 0.29", "-117.674, -201.9, -0.81794, 0.29", "-124.764, -208.876, -5.9743, 0.29", "-132.752, -216.244, -8.75328, 0.29", "-140.627, -223.768, -11.4593, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "-103.274, -186.052, 5.74052, 0.44", "-107.911, -192.707, 3.72211, 0.29", "-112.122, -199.552, 1.39628, 0.29", "-115.35, -206.988, -0.768171, 0.29", "-118.919, -214.407, -2.3622, 0.29", "-122.391, -221.97, -3.42395, 0.29" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "-106.624, -126.928, 36.6518, 0.22", "-105.658, -125.912, 37.3575, 0.22", "-105.211, -125.466, 37.6627, 0.52", "-104.873, -125.169, 37.8604, 0.74", "-103.768, -124.312, 38.4386, 0.37", "-102.499, -123.391, 39.0296, 0.37", "-102.03, -123.051, 39.2479, 0.37", "-101.825, -122.92, 39.3295, 0.37", "-100.829, -122.338, 39.722, 0.37", "-100.356, -122.095, 39.8881, 0.88", "-99.6129, -121.792, 40.0276, 0.88", "-90.868, -116.415, 45.7489, 0.88", "-82.4125, -109.282, 49.8414, 0.88" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-106.624, -126.928, 36.6518, 0.44", "-106.675, -125.459, 36.3529, 0.44", "-106.668, -124.037, 36.0867, 0.37", "-106.665, -123.971, 36.0779, 0.37", "-106.643, -122.811, 35.9624, 0.37", "-106.646, -122.693, 35.9565, 0.37", "-106.721, -121.264, 35.9248, 0.37", "-106.727, -121.187, 35.9298, 0.37", "-106.853, -120.237, 36.0261, 0.29", "-107.042, -119.229, 36.1272, 0.29", "-107.273, -118.306, 36.2217, 0.29", "-107.342, -118.086, 36.2414, 0.66", "-107.406, -117.924, 36.2477, 0.66", "-107.627, -117.378, 36.2262, 0.66", "-107.992, -116.517, 36.1113, 0.29", "-108.159, -116.156, 36.0414, 0.44", "-108.226, -116.024, 36.0104, 0.44", "-108.593, -115.392, 35.8655, 0.37", "-109.029, -114.702, 35.716, 0.37", "-109.069, -114.641, 35.7038, 0.37", "-109.866, -113.521, 35.5044, 0.29", "-110.34, -112.847, 35.3969, 0.44", "-110.477, -112.646, 35.3742, 0.44", "-110.912, -111.996, 35.3346, 0.44", "-111.328, -111.35, 35.3086, 0.29", "-111.414, -111.21, 35.3053, 0.29", "-111.641, -110.8, 35.3061, 0.44", "-111.886, -110.343, 35.3112, 0.44", "-111.925, -110.265, 35.312, 0.44", "-112.181, -109.716, 35.3112, 0.44", "-112.415, -109.115, 35.3231, 0.44", "-112.436, -109.041, 35.3244, 0.44", "-112.579, -108.355, 35.3251, 0.37", "-112.639, -108.02, 35.3182, 0.37", "-112.769, -107.158, 35.2742, 0.44", "-112.859, -106.395, 35.2221, 0.44", "-112.934, -105.572, 35.0893, 0.44", "-113.024, -104.429, 34.8393, 0.44", "-113.115, -103.384, 34.564, 0.74", "-113.253, -101.999, 34.1416, 0.81", "-113.317, -101.436, 33.9409, 0.74", "-113.569, -99.4812, 33.1283, 0.29", "-113.578, -99.4208, 33.1006, 0.29", "-113.634, -98.986, 32.8883, 0.29", "-113.649, -98.8366, 32.8208, 0.29", "-113.685, -98.4594, 32.6964, 0.44", "-113.69, -98.3867, 32.6784, 0.44", "-113.717, -97.8554, 32.5924, 0.44", "-113.732, -96.9947, 32.4462, 0.88", "-113.713, -95.786, 32.2329, 0.52", "-113.689, -94.8443, 32.0668, 0.52", "-113.666, -94.0865, 31.9196, 0.44", "-113.653, -93.2549, 31.7483, 0.29", "-113.649, -92.633, 31.6124, 0.59", "-113.654, -92.3927, 31.5579, 0.59", "-113.688, -91.7872, 31.4193, 0.59", "-113.726, -91.1847, 31.2825, 0.29", "-113.783, -90.3582, 31.1141, 0.29", "-113.786, -90.2723, 31.0973, 0.29", "-113.81, -89.6483, 30.9679, 0.59", "-113.813, -89.5502, 30.9474, 0.59", "-113.829, -88.8518, 30.8109, 0.66", "-113.844, -88.0771, 30.672, 0.66", "-113.85, -87.2544, 30.5247, 0.29", "-113.853, -86.1042, 30.3214, 0.29", "-113.851, -86.0178, 30.3066, 0.29", "-113.807, -84.5493, 30.1105, 0.29", "-113.803, -84.3821, 30.0943, 0.29", "-113.786, -83.4334, 30.034, 0.52", "-113.788, -83.2675, 30.0289, 0.52", "-113.815, -82.2739, 30.0308, 0.81", "-113.874, -81.3295, 30.0319, 0.52", "-113.949, -80.5574, 30.0354, 0.52", "-114.038, -79.8454, 30.0219, 0.74", "-114.161, -79.0025, 29.9762, 0.88", "-114.195, -78.6897, 29.9377, 0.88", "-114.21, -77.708, 29.7112, 0.88", "-114.202, -77.6348, 29.6878, 0.88", "-114.095, -77.1273, 29.5049, 0.66", "-113.878, -76.3476, 29.2586, 0.44", "-113.517, -75.1756, 28.9848, 0.37", "-113.173, -74.01, 28.7898, 0.29", "-112.937, -73.2142, 28.6945, 0.29", "-112.917, -73.1397, 28.6889, 0.29", "-112.627, -71.7627, 28.6512, 0.29", "-112.346, -70.0232, 28.6734, 0.29", "-112.256, -68.9977, 28.7207, 0.37", "-112.251, -68.833, 28.7281, 0.37", "-112.251, -67.9705, 28.7344, 0.37", "-112.247, -67.1174, 28.7305, 0.37", "-112.246, -66.9627, 28.7261, 0.37", "-112.268, -65.7857, 28.7117, 0.52", "-112.318, -64.5854, 28.7135, 0.44", "-112.393, -63.3209, 28.7266, 1.11", "-112.484, -61.6285, 28.7543, 0.29", "-112.488, -61.5411, 28.7591, 0.29", "-112.518, -60.2317, 28.8575, 0.29", "-112.516, -59.4891, 28.9223, 0.29", "-112.515, -59.4248, 28.9279, 0.29", "-112.466, -58.1046, 29.0193, 0.37", "-112.369, -56.1462, 29.1005, 0.37", "-112.265, -54.7593, 29.1436, 0.37", "-112.143, -53.6518, 29.169, 0.81", "-112.053, -52.9224, 29.1786, 1.03", "-111.91, -51.6939, 29.1719, 0.29", "-111.822, -50.8621, 29.1432, 0.29", "-111.769, -50.3037, 29.091, 0.44", "-111.765, -50.229, 29.084, 0.44", "-111.76, -49.8267, 29.046, 0.44", "-111.797, -48.8188, 28.988, 0.29", "-111.808, -48.6671, 28.9841, 0.29", "-111.938, -47.3986, 28.9792, 0.29", "-111.948, -47.322, 28.9795, 0.29", "-112.169, -45.9382, 28.9937, 0.29", "-112.306, -45.1282, 29.0039, 0.66", "-112.397, -44.5434, 29.0115, 0.74", "-112.414, -44.3921, 29.0118, 0.74", "-112.477, -42.9817, 28.9943, 0.29", "-112.475, -42.8372, 28.9891, 0.29", "-112.431, -41.9672, 28.9191, 0.29", "-112.389, -41.3621, 28.8502, 0.74", "-112.295, -40.4044, 28.7348, 0.22", "-112.112, -39.0265, 28.5624, 0.22", "-111.863, -37.7761, 28.4036, 1.03", "-111.576, -36.5185, 28.2429, 0.29", "-111.517, -36.2826, 28.2129, 0.29", "-111.178, -35.0083, 28.0519, 0.29", "-111.111, -34.7752, 28.023, 0.29", "-110.485, -32.788, 27.7844, 0.29", "-110.422, -32.5895, 27.763, 0.29", "-109.993, -31.2052, 27.5882, 0.29", "-109.97, -31.1218, 27.5752, 0.29", "-109.724, -30.0423, 27.3681, 0.44", "-109.71, -29.9681, 27.3517, 0.44", "-109.594, -29.0694, 27.1185, 0.44", "-109.479, -28.1383, 26.8665, 0.74", "-109.472, -28.0643, 26.8452, 0.74", "-109.439, -27.6289, 26.722, 1.03", "-109.405, -26.8215, 26.5107, 0.59", "-109.419, -25.956, 26.4058, 0.29", "-109.429, -25.7914, 26.4087, 0.29", "-109.498, -25.2136, 26.4875, 0.29", "-109.511, -25.1284, 26.5028, 0.29", "-109.67, -24.2265, 26.6957, 0.88", "-109.913, -22.9143, 26.9696, 0.88", "-109.939, -22.7672, 26.996, 0.88", "-110.039, -22.1516, 27.0884, 0.66", "-110.106, -21.5401, 27.1952, 0.29", "-110.148, -20.9045, 27.3108, 0.29", "-110.178, -19.6808, 27.5237, 0.29", "-110.168, -19.0644, 27.6137, 0.44", "-110.165, -18.9784, 27.6295, 0.44", "-110.105, -17.7021, 27.9895, 0.37", "-110.086, -16.8363, 28.2689, 0.29", "-110.088, -16.7628, 28.2922, 0.29", "-110.125, -16.167, 28.4727, 0.74", "-110.133, -16.1055, 28.487, 0.74", "-110.422, -14.5279, 28.7629, 0.29", "-110.75, -13.0972, 28.9025, 0.29", "-111.037, -11.8985, 29.0145, 0.22", "-111.095, -11.6674, 29.036, 0.22", "-111.506, -10.0876, 29.1591, 0.29", "-111.528, -10.0031, 29.164, 0.29", "-111.878, -8.64186, 29.1908, 0.29", "-112.168, -7.48443, 29.2559, 0.29", "-112.454, -6.29296, 29.3693, 0.74" ],
    "parent" : "dend_72",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-170.874, -172.09, 34.4806, 0.37", "-170.893, -172.875, 34.3161, 0.37", "-171.046, -174.52, 33.9579, 0.37", "-171.219, -175.897, 33.6953, 0.29", "-171.328, -176.718, 33.5229, 0.44", "-171.44, -177.532, 33.3602, 0.44", "-171.672, -179.131, 33.064, 0.29", "-171.78, -179.715, 32.9585, 0.37", "-171.983, -180.529, 32.8326, 0.37", "-172.387, -182.19, 32.5118, 0.37", "-172.561, -182.968, 32.3462, 0.37", "-172.669, -183.524, 32.2287, 0.66", "-172.685, -183.599, 32.2138, 0.66", "-172.802, -184.101, 32.0928, 0.74", "-173.154, -185.367, 31.725, 0.37", "-173.42, -186.103, 31.5029, 0.37", "-173.45, -186.183, 31.4699, 0.37", "-173.682, -186.763, 31.1896, 0.37", "-175.486, -197.788, 30.809, 0.37", "-176.62, -208.831, 32.3573, 0.37" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-170.874, -172.09, 34.4806, 0.29", "-172.051, -171.892, 34.3525, 0.29", "-173.175, -171.713, 34.3619, 0.52", "-174.776, -171.544, 34.4159, 0.44", "-175.337, -171.539, 34.4469, 0.29", "-176.383, -171.616, 34.4961, 0.29", "-177.247, -171.687, 34.5583, 0.44", "-179.354, -171.891, 34.7951, 0.29", "-180.226, -171.983, 34.8762, 0.29", "-181.486, -172.143, 34.9934, 0.29", "-182.701, -172.276, 35.1502, 0.29", "-183.992, -172.388, 35.3353, 0.29", "-184.054, -172.394, 35.3445, 0.29", "-185.157, -172.45, 35.452, 0.44", "-186.791, -172.359, 35.6365, 0.44", "-186.952, -172.331, 35.6548, 0.44", "-187.85, -172.145, 35.7827, 0.66", "-188.77, -172.069, 35.856, 0.66", "-199.298, -171.764, 36.8437, 0.66", "-209.322, -170.334, 39.9052, 0.66" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "55.3034, -250.661, -38.8551, 0.52", "54.7823, -251.18, -38.6391, 0.52", "54.3774, -251.602, -38.4832, 0.29", "53.9498, -252.088, -38.3369, 0.22", "53.7355, -252.347, -38.2545, 0.52", "53.5453, -252.584, -38.176, 0.74", "53.3054, -252.889, -38.0746, 0.81", "53.0811, -253.173, -37.9818, 0.66", "52.7598, -253.584, -37.8638, 0.29", "52.4096, -254.105, -37.7231, 0.29", "52.3882, -254.14, -37.7142, 0.29", "52.322, -254.251, -37.6868, 0.66", "52.1312, -254.568, -37.6066, 0.81", "51.8888, -254.958, -37.5086, 0.22", "51.676, -255.296, -37.4336, 0.22", "51.5748, -255.465, -37.4156, 0.52", "51.4521, -255.677, -37.3947, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "55.3034, -250.661, -38.8551, 1.18", "56.0655, -251.809, -38.7429, 1.18", "56.3682, -252.346, -38.6765, 1.4", "56.8434, -253.381, -38.4577, 0.37", "57.1334, -254.347, -38.1253, 0.44", "57.2554, -255.166, -37.7884, 0.66", "57.2777, -256.34, -37.1943, 0.66", "57.2062, -256.944, -36.8565, 0.66", "56.9567, -258.319, -36.0664, 0.59", "56.5658, -260.1, -35.033, 0.37", "56.3305, -261.154, -34.4248, 1.55", "55.9955, -263.042, -33.405, 0.37", "55.8742, -264.233, -32.8584, 0.44", "55.8793, -265.425, -32.4161, 0.44", "55.9637, -266.098, -32.2585, 0.88", "56.1096, -266.72, -32.1877, 1.03", "56.4238, -267.933, -32.1167, 0.37", "56.6483, -268.88, -32.1267, 0.37", "56.7418, -269.353, -32.1249, 0.88", "56.8507, -269.995, -32.1166, 0.96", "56.9883, -271.06, -32.0937, 0.96", "57.1446, -272.379, -32.0624, 0.29", "57.3457, -273.722, -31.9395, 0.29", "57.4343, -274.203, -31.867, 0.66", "57.5555, -274.753, -31.725, 0.88", "57.576, -274.835, -31.6968, 0.88", "57.7664, -275.501, -31.4117, 0.74", "58.1959, -277.168, -30.5897, 0.29", "58.3736, -278.054, -30.1407, 0.29", "58.6414, -279.238, -29.6061, 1.11", "58.8171, -279.82, -29.3839, 1.11", "58.8473, -279.899, -29.36, 1.11", "59.1444, -280.577, -29.2228, 1.11", "59.958, -282.137, -28.9828, 0.29", "60.6941, -283.45, -28.7872, 0.29", "61.3328, -284.597, -28.6185, 0.29", "61.6776, -285.24, -28.5078, 0.81", "62.0727, -286.025, -28.3267, 0.96", "62.844, -287.538, -27.7666, 0.96", "63.2702, -288.432, -27.3354, 0.37", "63.6403, -289.323, -26.8362, 0.88", "63.9012, -290.047, -26.4085, 0.88", "64.3653, -291.489, -25.5584, 0.59", "64.9136, -293.447, -24.4814, 0.44", "65.1039, -294.228, -24.1215, 0.59", "65.2296, -294.863, -23.8733, 0.59", "65.376, -295.875, -23.5824, 0.88", "65.4872, -296.79, -23.4266, 0.29", "65.5953, -297.859, -23.3549, 0.29", "65.7143, -298.968, -23.3082, 0.37", "65.8815, -300.176, -23.2136, 0.96", "66.018, -301.05, -23.1197, 1.33", "66.2815, -302.497, -22.8596, 0.37", "66.4658, -303.535, -22.6068, 0.52", "66.6811, -304.879, -22.2065, 0.44", "66.7894, -305.587, -21.9706, 0.29", "66.9169, -306.351, -21.7048, 0.88", "67.1218, -307.707, -21.2334, 0.74", "67.2763, -308.595, -20.8962, 0.29", "67.4784, -309.42, -20.6027, 0.59", "67.7144, -310.311, -20.3107, 0.74", "67.9182, -311.032, -20.0389, 0.88", "67.9415, -311.12, -20.0036, 0.88", "68.2994, -312.932, -19.282, 0.52", "68.3632, -313.648, -18.9609, 0.52", "68.3174, -314.721, -18.3976, 0.52", "68.1943, -315.831, -17.7999, 0.96", "68.1238, -316.407, -17.4493, 1.33", "68.0496, -317.225, -16.9201, 0.59", "67.9675, -318.267, -16.2547, 0.37", "67.945, -319.758, -15.3107, 0.44", "67.9942, -320.64, -14.8079, 0.66", "68.1741, -322.27, -14.04, 0.96", "68.4361, -323.922, -13.3449, 0.44", "68.5961, -324.768, -13.0367, 1.03", "68.8288, -325.775, -12.7507, 1.18", "69.1432, -327.159, -12.521, 0.29", "69.403, -328.482, -12.4549, 0.29", "69.4355, -328.679, -12.47, 0.88", "69.4924, -329.152, -12.5326, 1.25", "69.5835, -330.129, -12.6267, 0.66", "69.6457, -331.203, -12.6858, 0.59", "69.6924, -332.694, -12.7098, 0.52", "69.6872, -333.579, -12.7016, 0.52", "69.6629, -334.85, -12.6653, 0.52", "69.6386, -336.049, -12.5716, 0.37", "69.5909, -337.159, -12.4936, 0.29", "69.5765, -337.599, -12.4732, 0.74", "69.5737, -337.86, -12.4718, 0.74", "69.5799, -338.583, -12.5182, 0.74", "69.6179, -339.748, -12.681, 0.81", "69.6514, -341.534, -13.0712, 0.81", "69.7044, -342.694, -13.3633, 0.81", "69.8012, -343.979, -13.7026, 0.81", "69.8091, -344.062, -13.7247, 0.81", "69.9403, -345.188, -14.0238, 0.59", "70.1398, -346.591, -14.3943, 0.44", "70.3111, -347.49, -14.5675, 0.44", "70.5455, -348.52, -14.7383, 0.29", "70.7552, -349.393, -14.8443, 0.74", "70.8654, -349.916, -14.8876, 0.96", "70.8801, -350.002, -14.886, 0.96", "70.9752, -350.901, -14.7891, 0.52", "71.0178, -352.225, -14.5319, 0.52", "71.0203, -353.464, -14.2095, 0.52", "71.0317, -354.284, -13.9741, 0.59", "71.1012, -355.694, -13.5615, 0.74", "71.1748, -356.467, -13.3382, 0.52", "71.3574, -357.886, -12.962, 0.37", "71.3716, -357.972, -12.9422, 0.37", "71.689, -359.259, -12.7368, 0.44", "71.9894, -360.175, -12.6774, 0.37", "72.2322, -360.813, -12.7187, 0.74", "72.6012, -361.784, -12.8317, 0.29", "72.6233, -361.853, -12.8432, 0.29", "72.7503, -362.314, -12.9153, 0.44", "72.7636, -362.385, -12.9248, 0.44", "72.8332, -363.026, -12.9971, 0.44", "72.94, -364.289, -13.1022, 0.22", "73.0423, -365.18, -13.1311, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "17.9469, -185.513, -76.9026, 0.29", "17.5729, -184.995, -78.0581, 0.29", "17.5168, -184.928, -78.1987, 0.29", "17.2284, -184.597, -78.8298, 0.29", "16.4991, -183.733, -80.271, 0.29", "16.2496, -183.392, -80.8005, 0.59", "15.578, -182.344, -82.2583, 0.59", "15.2321, -181.682, -83.043, 0.37", "15.0694, -181.286, -83.463, 0.66", "14.9198, -180.837, -83.9122, 0.88", "14.4642, -179.201, -85.4651, 0.22", "14.3215, -178.566, -86.054, 0.44", "14.2233, -177.995, -86.5429, 0.59", "14.1281, -177.023, -87.435, 0.29", "14.0696, -176.183, -88.2654, 0.74", "14.0186, -175.217, -89.2986, 1.03" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "17.9469, -185.513, -76.9026, 0.52", "17.9952, -186.549, -78.3222, 0.52", "17.9914, -186.579, -78.3552, 0.52", "17.9363, -186.863, -78.6187, 0.52", "17.7269, -187.87, -79.4275, 1.33", "17.6422, -188.263, -79.7182, 1.77", "17.5262, -188.849, -80.0974, 0.66", "17.3555, -189.585, -80.4574, 0.66", "17.1745, -190.581, -80.9317, 0.66", "17.1258, -191.132, -81.1923, 0.88", "17.13, -191.278, -81.2547, 0.88", "17.2361, -192.184, -81.6342, 0.88", "17.2426, -192.22, -81.6491, 0.88", "17.5241, -193.332, -82.0905, 0.66", "17.811, -194.2, -82.447, 0.44", "18.0104, -194.725, -82.6891, 0.96", "18.3171, -195.47, -83.0601, 0.96" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-127.07, -195.864, 56.903, 0.29", "-128.534, -201.331, 66.3514, 0.29", "-130.504, -206.175, 76.028, 0.29", "-132.756, -211.35, 85.4775, 0.29", "-136.684, -218.669, 92.7903, 0.29", "-139.671, -225.902, 100.612, 0.29", "-142.317, -232.939, 108.72, 0.29", "-145.049, -239.573, 117.119, 0.29", "-147.587, -246.792, 125.109, 0.29", "-149.858, -254.451, 132.784, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-127.07, -195.864, 56.903, 0.44", "-134.087, -203.038, 56.3201, 0.29", "-142.128, -208.972, 55.6916, 0.29", "-149.757, -215.43, 54.8519, 0.29", "-156.659, -222.377, 52.5889, 0.29", "-162.897, -229.296, 48.8083, 0.29", "-168.759, -235.853, 43.9591, 0.29", "-175.248, -241.324, 38.6515, 0.29", "-182.588, -246.135, 33.8761, 0.29", "-188.61, -252.788, 29.3593, 0.29", "-194.172, -260.638, 26.3382, 0.29", "-199.545, -269.105, 25.1326, 0.29", "-205.53, -277.126, 26.2813, 0.29" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "82.4542, 162.403, 52.1787, 0.29", "84.013, 168.909, 54.668, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "82.4542, 162.403, 52.1787, 0.44", "84.7544, 169.617, 55.8545, 0.29", "87.4124, 176.45, 59.9607, 0.29", "89.698, 183.391, 64.1102, 0.29", "92.0861, 189.721, 69.055, 0.29", "93.0344, 196.702, 73.622, 0.29", "93.9152, 203.134, 78.9098, 0.29", "93.5881, 210.342, 83.204, 0.29", "92.8382, 217.222, 87.931, 0.29", "91.3337, 222.981, 93.7707, 0.29", "90.9043, 228.909, 99.6332, 0.29", "92.2807, 234.098, 106.009, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-112.454, -6.29296, 29.3693, 0.22", "-113.208, -6.29003, 29.413, 0.22", "-114.455, -6.28514, 29.4851, 0.22", "-115.001, -6.28299, 29.5167, 0.52", "-115.336, -6.28168, 29.5361, 0.74", "-122.426, -5.12199, 30.7619, 0.74", "-129.466, -4.41651, 32.5031, 0.74", "-136.055, -2.83133, 35.1994, 0.74", "-142.457, -2.31167, 38.6399, 0.74", "-148.367, -0.552021, 42.5461, 0.74", "-153.379, 0.928418, 47.6394, 0.74", "-157.234, 2.64792, 53.6005, 0.74", "-160.8, 4.96495, 59.5516, 0.74", "-164.577, 7.88, 65.111, 0.74", "-167.937, 10.0152, 71.2439, 0.74" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-112.454, -6.29296, 29.3693, 0.44", "-112.466, -5.60234, 29.274, 0.44", "-112.482, -5.10236, 29.196, 0.66", "-112.487, -5.01039, 29.1801, 0.66", "-112.504, -4.73293, 29.1301, 0.59", "-112.537, -4.0977, 29.0114, 0.29", "-112.564, -3.08212, 28.8152, 0.29", "-112.567, -2.97481, 28.7977, 0.29", "-112.59, -2.22031, 28.6984, 0.52", "-112.592, -2.16291, 28.6922, 0.52", "-112.607, -1.3798, 28.6202, 0.52", "-112.607, -0.423832, 28.5476, 1.03", "-112.566, 0.752375, 28.4854, 0.29", "-112.564, 0.803236, 28.4833, 0.29", "-112.495, 1.49372, 28.4792, 0.29", "-112.417, 1.97833, 28.4806, 0.52", "-112.311, 2.47066, 28.4876, 0.52", "-112.164, 3.00206, 28.4862, 0.96", "-112.151, 3.04194, 28.4847, 0.96", "-111.77, 4.23973, 28.4362, 0.29", "-111.46, 5.23565, 28.3927, 0.29", "-111.445, 5.29115, 28.3895, 0.29", "-111.254, 6.20513, 28.3138, 0.29", "-111.218, 6.50957, 28.275, 0.59", "-111.212, 6.66052, 28.2506, 0.59", "-111.252, 7.06078, 28.1651, 0.52", "-111.327, 7.48209, 28.0739, 0.66", "-111.41, 7.92618, 27.9775, 0.66", "-111.554, 8.61251, 27.8273, 0.29", "-111.573, 8.71824, 27.8109, 0.29", "-111.645, 9.17958, 27.7621, 0.29", "-111.691, 9.54834, 27.7697, 0.52", "-111.696, 9.59724, 27.7748, 0.52", "-111.734, 10.3042, 27.8849, 0.37", "-111.751, 11.158, 28.051, 0.59", "-111.743, 11.5783, 28.1339, 0.96", "-111.691, 12.7517, 28.3723, 0.37", "-111.685, 12.8214, 28.3885, 0.37", "-111.586, 13.6227, 28.5806, 0.37", "-111.578, 13.6713, 28.5926, 0.37", "-111.465, 14.2291, 28.7061, 0.37", "-111.439, 14.3837, 28.722, 0.37", "-111.328, 15.4749, 28.6855, 0.59", "-111.317, 15.6763, 28.6719, 0.88", "-111.315, 15.7269, 28.6663, 0.88", "-111.301, 16.1368, 28.6093, 0.88", "-111.239, 17.6129, 28.3559, 0.29", "-111.151, 18.8806, 28.0621, 0.29", "-111.135, 19.0589, 28.0115, 0.29", "-111.003, 20.5154, 27.6274, 0.29", "-110.99, 20.719, 27.577, 0.29", "-110.948, 21.69, 27.3492, 0.37", "-110.938, 22.8974, 27.0904, 0.37", "-110.964, 23.4981, 27.005, 0.37", "-111.051, 24.432, 26.932, 0.29", "-111.201, 25.3587, 26.9075, 0.29", "-111.222, 25.465, 26.91, 0.29", "-111.369, 25.9486, 26.9744, 0.29", "-111.819, 27.1007, 27.2927, 1.18", "-111.908, 27.3263, 27.362, 1.47" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "18.3171, -195.47, -83.0601, 0.88", "17.9856, -196.363, -83.5959, 0.88", "17.7617, -197.006, -83.9337, 1.47", "17.5722, -197.644, -84.2271, 1.69", "17.2538, -198.968, -84.7512, 0.59", "17.2454, -199.013, -84.7687, 0.59", "17.1209, -199.835, -85.0755, 0.29", "17.0612, -200.49, -85.2905, 0.44", "17.0541, -201.065, -85.5163, 0.66", "17.1024, -201.693, -85.8472, 1.11", "17.1859, -202.308, -86.1983, 1.47", "17.2254, -202.62, -86.3903, 1.47", "17.2308, -202.67, -86.4225, 1.47", "17.3143, -204.128, -87.3271, 1.11", "17.2772, -205.446, -88.0538, 0.59", "17.2294, -206.127, -88.3562, 0.81", "17.1763, -206.76, -88.5694, 1.11", "17.1315, -207.414, -88.729, 1.25", "17.0724, -208.378, -88.8758, 0.66", "17.0003, -209.481, -88.9151, 0.52", "16.9415, -210.535, -88.8981, 1.03", "16.921, -211.054, -88.9028, 1.25", "16.907, -212.147, -88.9389, 0.66", "16.9085, -212.475, -88.9676, 0.44", "16.9291, -212.901, -89.0272, 0.96", "16.9587, -213.274, -89.0974, 1.25", "17.0283, -214.235, -89.3163, 1.11", "17.0797, -214.995, -89.5162, 0.96", "17.1348, -215.823, -89.7142, 0.66", "17.1811, -216.692, -89.8858, 0.59", "17.1837, -216.751, -89.8953, 0.59", "17.1841, -217.419, -89.9672, 0.59", "17.085, -218.308, -89.9952, 0.52", "16.8568, -219.163, -89.9758, 0.81", "16.576, -219.781, -89.9277, 1.03", "16.5272, -219.858, -89.921, 1.03", "16.1325, -220.414, -89.8671, 1.03", "15.522, -221.124, -89.785, 0.52", "15.1394, -221.502, -89.7321, 1.11", "14.6923, -221.897, -89.7231, 1.33", "14.6466, -221.935, -89.7217, 1.33" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "18.3171, -195.47, -83.0601, 0.52", "18.6203, -196.029, -82.2035, 0.52", "19.1291, -197.043, -80.5824, 0.29", "19.4308, -197.66, -79.637, 0.59", "19.592, -198.031, -79.0492, 0.96", "20.0735, -199.172, -77.2488, 0.22", "20.4133, -199.943, -76.0259, 0.59", "20.4316, -199.983, -75.9599, 0.59", "20.7186, -200.546, -75.0993, 0.52", "21.1085, -201.464, -73.8294, 0.37", "21.2744, -201.901, -73.3094, 0.81", "21.4291, -202.287, -72.9359, 0.96", "21.8519, -203.312, -72.0529, 0.37", "22.3393, -204.264, -71.3673, 0.37", "22.9165, -205.2, -70.8555, 0.44", "23.3188, -205.755, -70.6474, 0.44", "23.8698, -206.507, -70.3776, 0.22", "24.2736, -207.024, -70.1866, 0.44", "25.8382, -208.838, -69.4722, 0.37", "26.4752, -209.519, -69.181, 0.52", "27.1996, -210.248, -68.8461, 0.59", "28.0, -211.03, -68.413, 0.81", "28.7917, -211.809, -67.8991, 0.29", "29.4536, -212.462, -67.3622, 0.52", "29.7764, -212.788, -67.0207, 0.81", "30.1323, -213.081, -66.675, 1.11", "30.2956, -213.191, -66.5326, 1.11", "30.6426, -213.389, -66.2663, 0.96", "31.2457, -213.683, -65.7, 0.59", "32.1208, -214.038, -64.5811, 0.29", "32.5116, -214.204, -63.985, 0.52", "32.7964, -214.334, -63.4996, 0.66", "32.8315, -214.354, -63.4342, 0.66", "33.6382, -214.917, -61.7476, 0.52", "34.2076, -215.392, -60.4426, 0.74", "34.7521, -215.883, -59.1519, 0.22", "34.9087, -216.034, -58.8138, 0.74", "35.1996, -216.35, -58.2176, 0.81", "35.8715, -217.155, -56.9723, 0.22", "36.1, -217.461, -56.6306, 0.66", "36.3191, -217.78, -56.3282, 0.74", "36.8152, -218.635, -55.5999, 0.22", "37.2019, -219.439, -54.9577, 0.66", "37.3271, -219.739, -54.736, 0.81", "37.5305, -220.337, -54.3567, 0.52", "37.5478, -220.39, -54.3229, 0.52", "37.8202, -221.259, -53.8325, 0.22", "38.2025, -222.453, -53.2451, 0.74", "38.4806, -223.085, -53.006, 0.81", "38.5496, -223.216, -52.9611, 0.81", "38.9404, -223.832, -52.7809, 0.59", "39.4086, -224.403, -52.6874, 0.29", "39.9763, -225.006, -52.6714, 1.03", "40.8831, -225.984, -52.7581, 1.03", "41.0484, -226.18, -52.7861, 1.25", "41.6126, -226.989, -52.9132, 0.66", "42.4483, -228.44, -53.1498, 0.52", "42.8844, -229.397, -53.2826, 0.37", "43.1526, -230.185, -53.3871, 0.29", "43.3018, -230.976, -53.4668, 0.29", "43.4347, -232.36, -53.582, 0.29", "43.4569, -232.84, -53.6245, 0.81", "43.4745, -233.507, -53.6707, 1.03", "43.4826, -233.587, -53.6745, 1.03", "43.6969, -234.71, -53.699, 0.59", "43.9444, -235.772, -53.6487, 0.44", "44.2163, -236.968, -53.541, 0.88", "44.2898, -237.308, -53.4996, 1.25", "44.4061, -237.907, -53.3778, 1.55", "44.5494, -238.666, -53.1562, 0.29", "44.6645, -239.846, -52.5319, 0.29", "44.6809, -240.83, -51.8557, 0.29", "44.6786, -240.892, -51.8099, 0.29", "44.623, -241.853, -51.1022, 1.47", "44.5653, -242.687, -50.5024, 1.77", "44.4214, -244.868, -48.9404, 0.37", "44.373, -245.616, -48.402, 0.22", "44.2995, -246.599, -47.6732, 0.29", "44.2614, -247.06, -47.3543, 0.52", "44.2044, -247.69, -46.9862, 0.66", "44.196, -247.762, -46.9519, 0.66" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "-167.937, 10.0152, 71.2439, 0.37", "-175.595, 12.3347, 76.837, 0.37", "-183.923, 13.5543, 81.7578, 0.37", "-191.068, 15.1665, 88.1992, 0.37", "-198.664, 15.4349, 94.2987, 0.37", "-207.263, 13.9817, 98.651, 0.37", "-215.135, 12.6147, 104.233, 0.37", "-222.43, 10.2192, 110.247, 0.37", "-227.851, 6.54039, 117.492, 0.37", "-232.681, 0.526152, 123.568, 0.37", "-237.338, -6.79733, 128.253, 0.37", "-241.102, -14.2946, 133.447, 0.37", "-244.823, -21.7747, 138.696, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "-167.937, 10.0152, 71.2439, 0.29", "-175.597, 12.5671, 76.4752, 0.37", "-183.615, 15.1796, 81.1068, 0.37", "-192.028, 16.8808, 85.4284, 0.37", "-199.089, 20.159, 91.0989, 0.37", "-205.475, 23.0346, 97.7016, 0.37", "-212.258, 24.687, 104.306, 0.37", "-220.147, 27.2539, 109.176, 0.37", "-228.711, 30.6261, 112.019, 0.37" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-111.908, 27.3263, 27.362, 0.59", "-110.657, 28.0324, 28.3514, 0.59", "-110.601, 28.063, 28.3967, 0.59", "-109.492, 28.7917, 29.2741, 0.29", "-108.91, 29.2534, 29.6866, 0.29", "-108.856, 29.2999, 29.723, 0.29", "-107.678, 30.4218, 30.4126, 0.29", "-107.642, 30.4642, 30.4292, 0.29", "-106.638, 31.7048, 30.7995, 0.29", "-105.499, 33.1161, 31.0787, 0.29", "-105.404, 33.2303, 31.0954, 0.29", "-104.369, 34.4077, 31.2399, 0.74", "-103.478, 35.3625, 31.3652, 0.29", "-103.223, 35.6097, 31.4281, 0.29", "-101.916, 36.7576, 31.7809, 0.29", "-101.292, 37.2566, 31.979, 0.29", "-100.263, 38.0161, 32.3583, 0.29", "-98.988, 38.829, 32.9623, 0.29", "-97.8943, 39.4547, 33.5607, 0.88", "-92.586, 47.041, 36.6671, 0.88", "-88.7041, 54.8897, 41.0166, 0.88", "-84.3381, 62.9045, 44.539, 0.88", "-79.192, 70.5776, 47.7147, 0.88", "-73.9034, 77.8093, 51.5706, 0.88", "-69.2277, 85.6325, 55.1055, 0.88", "-64.0282, 92.8789, 59.0554, 0.88", "-57.9105, 99.1135, 63.3202, 0.88" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-111.908, 27.3263, 27.362, 0.59", "-112.32, 28.3044, 27.4859, 0.59", "-112.657, 29.1801, 27.6281, 0.59", "-112.955, 30.0441, 27.8138, 0.37", "-113.31, 31.1509, 28.0704, 0.29", "-113.599, 32.198, 28.3628, 0.29", "-113.618, 32.2713, 28.385, 0.29", "-113.812, 33.1978, 28.7069, 0.29", "-113.975, 34.0122, 29.0143, 0.66", "-114.065, 34.5295, 29.1933, 0.81", "-114.259, 35.6928, 29.4978, 0.29", "-114.272, 35.7685, 29.5159, 0.29", "-114.451, 36.7864, 29.6905, 0.29", "-114.463, 36.855, 29.6965, 0.29", "-114.632, 37.9602, 29.6969, 0.52", "-114.758, 38.722, 29.6479, 0.74", "-114.774, 38.7987, 29.6374, 0.74", "-114.946, 39.5021, 29.5773, 0.74", "-114.964, 39.5697, 29.5738, 0.74", "-115.263, 40.54, 29.543, 0.29", "-115.617, 41.5456, 29.5322, 0.29", "-116.134, 42.8944, 29.5274, 0.29", "-116.559, 44.0592, 29.5116, 0.29", "-116.601, 44.1925, 29.5108, 0.29", "-116.836, 45.3029, 29.496, 0.29", "-116.846, 45.372, 29.4948, 0.29", "-116.889, 46.5003, 29.4596, 0.29", "-116.835, 48.2056, 29.3808, 0.29", "-116.72, 50.4442, 29.2188, 0.29", "-116.59, 52.489, 29.0644, 0.29", "-116.582, 52.6262, 29.0563, 0.29", "-116.503, 54.6681, 28.9581, 0.29", "-116.499, 54.8149, 28.9521, 0.29", "-116.526, 57.1908, 28.8666, 0.29", "-116.53, 57.2699, 28.8635, 0.29", "-116.77, 59.3927, 28.8064, 0.29", "-116.784, 59.4706, 28.8042, 0.29", "-117.213, 61.053, 28.7242, 0.29", "-117.333, 61.4582, 28.6904, 0.74", "-117.357, 61.5333, 28.6826, 0.74", "-117.524, 62.0345, 28.6086, 0.59", "-118.0, 63.2685, 28.2724, 0.29", "-118.339, 64.0036, 28.0512, 0.88", "-118.636, 64.437, 27.8854, 0.96" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "14.6466, -221.935, -89.7217, 0.52", "13.7102, -222.858, -90.011, 0.52", "12.9934, -223.608, -90.237, 0.37", "12.3113, -224.347, -90.4128, 0.29", "11.7728, -224.905, -90.5419, 0.66", "11.2973, -225.389, -90.6536, 0.66", "11.2311, -225.455, -90.6694, 0.66", "10.7889, -225.91, -90.772, 0.59", "9.99969, -226.698, -90.9788, 0.29", "9.19167, -227.53, -91.2001, 0.29", "8.86838, -227.884, -91.2931, 0.66", "8.3672, -228.475, -91.4455, 0.96", "7.98826, -228.985, -91.5629, 1.18", "7.26582, -230.075, -91.8024, 0.29", "6.83987, -230.803, -91.9645, 0.29", "6.59574, -231.24, -92.0529, 0.52", "6.49417, -231.387, -92.0675, 0.52", "6.02599, -231.91, -92.0692, 0.22", "5.54061, -232.312, -92.0377, 0.44", "5.03858, -232.626, -91.9519, 0.66", "4.36041, -232.995, -91.8432, 0.66", "2.72142, -233.844, -91.6237, 0.29", "2.25421, -234.094, -91.5722, 0.96", "1.77938, -234.374, -91.5265, 1.25", "0.238278, -235.45, -91.3759, 0.52", "-0.649788, -236.19, -91.3111, 0.52", "-1.3289, -236.843, -91.3007, 0.29", "-1.88365, -237.428, -91.3626, 0.37", "-2.46719, -238.032, -91.4643, 0.44", "-2.89247, -238.417, -91.5808, 0.44", "-3.56461, -238.937, -91.8532, 0.22", "-3.97403, -239.173, -92.0249, 0.37", "-4.70834, -239.481, -92.2782, 0.59", "-5.71253, -239.804, -92.5788, 1.18", "-6.69682, -240.073, -92.8, 0.74", "-6.78651, -240.096, -92.8148, 0.74", "-8.2633, -240.493, -92.9746, 0.37", "-9.70784, -240.954, -93.0441, 0.29", "-10.0738, -241.076, -93.0212, 0.59", "-10.9918, -241.332, -92.8348, 0.74", "-11.098, -241.355, -92.798, 0.74", "-11.6734, -241.437, -92.5004, 0.74", "-11.7312, -241.44, -92.4648, 0.74", "-12.8147, -241.407, -91.775, 0.29", "-14.0731, -241.323, -90.958, 0.59", "-15.1361, -241.22, -90.2494, 0.96", "-16.9833, -241.024, -88.9885, 0.59", "-17.7437, -240.932, -88.4509, 0.29", "-17.8106, -240.925, -88.4032, 0.29", "-19.0461, -240.83, -87.4974, 0.88", "-20.1529, -240.746, -86.64, 1.03" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "14.6466, -221.935, -89.7217, 0.52", "14.9825, -223.084, -90.6792, 0.52", "14.9962, -223.146, -90.7249, 0.52", "15.1545, -224.064, -91.3754, 0.66", "15.399, -226.072, -92.6987, 0.44", "15.5211, -227.558, -93.6713, 0.37", "15.5467, -228.369, -94.1818, 0.66", "15.5002, -229.273, -94.7017, 0.88", "15.3939, -230.287, -95.278, 0.88", "15.2481, -231.187, -95.7714, 0.88", "15.037, -232.418, -96.4127, 0.59", "14.8997, -233.553, -97.0066, 0.37", "14.8373, -234.752, -97.6628, 0.37", "14.8858, -236.059, -98.3947, 0.74", "14.9461, -236.627, -98.6996, 1.11", "15.2787, -238.639, -99.8282, 0.74", "15.4675, -239.595, -100.372, 0.44", "15.48, -239.662, -100.411, 0.44", "15.7081, -241.078, -101.204, 1.03", "15.7745, -241.829, -101.58, 1.33", "15.7411, -243.488, -102.336, 0.66", "15.5355, -244.968, -102.896, 0.66", "15.251, -246.424, -103.405, 0.88", "15.2357, -246.501, -103.427, 0.88", "14.9959, -247.645, -103.695, 1.11", "14.6488, -249.366, -104.025, 1.03", "14.3918, -250.659, -104.182, 0.52", "14.3783, -250.737, -104.197, 0.52", "14.1701, -252.049, -104.578, 0.88", "14.0375, -252.886, -104.876, 0.96", "13.9342, -253.622, -105.238, 0.96", "13.83, -254.364, -105.735, 0.66", "13.442, -256.408, -107.343, 0.44", "13.2824, -257.149, -107.958, 0.96", "13.1097, -257.814, -108.561, 1.25", "12.7482, -259.171, -109.834, 1.11", "12.4496, -260.34, -111.018, 0.74", "12.2891, -260.943, -111.675, 0.74" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-118.636, 64.437, 27.8854, 0.29", "-119.685, 64.8232, 27.6336, 0.29", "-119.749, 64.843, 27.6189, 0.29", "-120.501, 65.1322, 27.3362, 0.29", "-120.56, 65.1563, 27.3111, 0.29", "-121.226, 65.4728, 27.0363, 0.66", "-121.733, 65.7349, 26.8356, 0.81", "-121.776, 65.7583, 26.8187, 0.81", "-123.119, 66.4794, 26.4081, 0.29", "-123.243, 66.5471, 26.3767, 0.29", "-124.242, 67.1096, 26.1829, 0.29", "-125.402, 67.7944, 26.0264, 0.29", "-125.454, 67.825, 26.0232, 0.29", "-126.544, 68.4405, 26.0357, 0.44", "-126.596, 68.4697, 26.0426, 0.44", "-127.014, 68.7164, 26.1035, 0.44", "-127.063, 68.7474, 26.112, 0.44", "-127.923, 69.3715, 26.278, 0.29", "-128.022, 69.4541, 26.2891, 0.29", "-128.64, 70.0578, 26.302, 0.29", "-128.944, 70.3662, 26.3082, 0.59", "-129.033, 70.4605, 26.3102, 0.59", "-129.3, 70.7395, 26.3138, 0.59", "-129.959, 71.4162, 26.316, 0.37", "-130.057, 71.5109, 26.3154, 0.37", "-130.569, 72.0317, 26.2711, 0.37", "-130.61, 72.0759, 26.2656, 0.37", "-131.177, 72.6697, 26.1678, 0.37", "-131.266, 72.7621, 26.1493, 0.37", "-131.869, 73.3227, 26.0298, 0.37", "-132.685, 74.0064, 25.876, 0.22", "-132.794, 74.0841, 25.8586, 0.22", "-133.415, 74.4666, 25.7803, 0.22", "-133.469, 74.4937, 25.7762, 0.22", "-134.23, 74.6835, 25.8475, 0.81", "-134.5, 74.7108, 25.8991, 0.81", "-135.264, 74.7217, 26.0602, 0.22", "-135.323, 74.7186, 26.0705, 0.22", "-135.986, 74.6375, 26.1945, 0.22", "-137.837, 74.3694, 26.4962, 0.22", "-137.962, 74.3501, 26.5143, 0.22", "-138.854, 74.2128, 26.6349, 0.22", "-139.703, 74.0811, 26.7392, 0.22", "-140.99, 73.905, 26.8787, 0.22", "-141.905, 73.8056, 26.9597, 0.22", "-141.973, 73.8045, 26.9627, 0.22", "-142.98, 73.9305, 27.0248, 0.52", "-143.269, 74.0425, 27.0539, 0.81", "-143.373, 74.1135, 27.0659, 0.81", "-143.608, 74.3325, 27.0808, 0.81", "-143.655, 74.3829, 27.0772, 0.81", "-144.339, 75.1402, 26.9345, 0.37", "-144.706, 75.5764, 26.8167, 0.59", "-144.743, 75.6219, 26.8024, 0.59", "-145.203, 76.2055, 26.6189, 0.44", "-145.931, 77.2021, 26.1795, 0.29", "-145.999, 77.2998, 26.1281, 0.29", "-146.353, 77.8419, 25.7097, 0.29", "-146.376, 77.8771, 25.6781, 0.29", "-146.716, 78.397, 25.1771, 0.29", "-147.226, 79.2692, 24.144, 0.29", "-147.243, 79.2971, 24.1066, 0.29", "-147.843, 80.1878, 22.7314, 0.29", "-147.861, 80.2108, 22.6915, 0.29", "-148.062, 80.4329, 22.2974, 0.66", "-149.046, 81.3577, 20.5411, 0.37", "-149.114, 81.4115, 20.4389, 0.37", "-149.528, 81.6855, 19.908, 0.29", "-149.981, 81.9287, 19.4708, 0.15", "-150.272, 82.0691, 19.2291, 0.74", "-150.416, 82.1243, 19.1413, 0.74", "-151.451, 82.4234, 18.7423, 0.37", "-151.941, 82.587, 18.5641, 0.29", "-152.607, 82.8431, 18.3726, 0.29", "-152.684, 82.8739, 18.3559, 0.29", "-153.678, 83.2615, 18.2289, 0.29", "-153.796, 83.3101, 18.2249, 0.29", "-154.466, 83.5961, 18.2679, 0.29", "-155.111, 83.8887, 18.311, 0.29", "-155.166, 83.9132, 18.3108, 0.29", "-156.009, 84.2942, 18.2572, 0.29", "-156.802, 84.6609, 18.1266, 0.29", "-156.954, 84.7282, 18.0911, 0.29", "-157.641, 85.0701, 17.8482, 0.29", "-158.381, 85.5132, 17.5329, 0.52", "-158.748, 85.7715, 17.3692, 0.66", "-159.568, 86.444, 16.9793, 0.29", "-160.467, 87.2519, 16.5436, 1.11", "-161.356, 88.106, 16.0578, 0.29", "-161.824, 88.5871, 15.7803, 0.29", "-162.225, 89.0106, 15.5471, 0.74", "-162.31, 89.1026, 15.4944, 0.74", "-162.547, 89.3643, 15.3412, 0.74", "-163.763, 90.6418, 14.4861, 0.29", "-163.822, 90.6956, 14.4464, 0.29", "-164.279, 91.0906, 14.1323, 0.29", "-164.312, 91.1202, 14.1093, 0.29", "-164.887, 91.6387, 13.7324, 0.59", "-165.974, 92.6767, 13.09, 0.29", "-166.019, 92.7246, 13.0712, 0.29", "-166.343, 93.1144, 12.9583, 0.29", "-166.509, 93.3732, 12.9184, 0.59", "-166.542, 93.4337, 12.9149, 0.59", "-166.793, 93.9614, 12.9265, 0.59", "-167.031, 94.5127, 12.971, 0.29", "-167.253, 94.9611, 12.9912, 0.29", "-167.984, 96.2586, 13.0026, 0.29", "-168.014, 96.3023, 13.0015, 0.29", "-168.453, 96.8713, 12.9712, 0.29", "-168.663, 97.1013, 12.9496, 0.29", "-169.279, 97.6465, 12.8686, 0.52", "-169.562, 97.8469, 12.8336, 0.59", "-170.424, 98.3396, 12.75, 0.22", "-170.654, 98.4769, 12.7184, 0.22", "-171.117, 98.7908, 12.6513, 0.22", "-171.544, 99.137, 12.5894, 0.81", "-171.83, 99.401, 12.5446, 1.03", "-172.288, 99.8392, 12.462, 0.52", "-173.123, 100.644, 12.2907, 0.29", "-174.085, 101.549, 12.0827, 0.22", "-174.998, 102.457, 11.8801, 0.22", "-175.106, 102.571, 11.8565, 0.22", "-175.552, 103.056, 11.7601, 0.74", "-175.796, 103.315, 11.7116, 0.74", "-176.113, 103.604, 11.6811, 0.74", "-182.446, 108.247, 9.06428, 0.74" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-118.636, 64.437, 27.8854, 0.29", "-118.45, 65.5058, 27.934, 0.29", "-118.083, 67.3817, 27.9529, 0.29", "-118.067, 67.4605, 27.953, 0.29", "-117.725, 69.226, 27.9459, 0.29", "-117.71, 69.3146, 27.9455, 0.29", "-117.331, 71.9531, 27.9342, 0.52", "-117.174, 73.4384, 27.9328, 0.52", "-117.103, 74.5118, 27.923, 0.52", "-117.095, 74.8149, 27.9143, 0.52", "-117.146, 76.1241, 27.958, 0.52", "-117.264, 77.1205, 28.0569, 0.81", "-117.315, 77.3071, 28.0939, 0.81", "-117.608, 78.0841, 28.3223, 0.66", "-117.95, 78.8273, 28.5632, 0.37", "-119.072, 81.0626, 29.3331, 0.37", "-119.113, 81.1411, 29.3572, 0.37", "-119.545, 81.926, 29.5559, 0.52", "-119.606, 82.0398, 29.5734, 0.52", "-120.349, 83.4684, 29.6824, 0.44", "-120.431, 83.6332, 29.6814, 0.44", "-121.01, 84.8031, 29.5294, 0.44", "-121.175, 85.1617, 29.4866, 0.44", "-121.912, 86.9884, 29.3075, 0.44", "-121.944, 87.0747, 29.3006, 0.44", "-122.235, 87.9689, 29.2507, 0.52", "-122.286, 88.1586, 29.2386, 0.52", "-122.563, 89.3309, 29.1703, 0.37", "-122.828, 90.6952, 29.0816, 0.74", "-122.844, 90.7862, 29.0763, 0.74", "-122.95, 91.4172, 29.0411, 0.74", "-123.439, 94.4106, 28.9775, 0.52", "-123.454, 94.502, 28.9778, 0.52", "-123.832, 96.9771, 29.0601, 0.52", "-124.278, 99.9106, 29.2274, 0.52", "-124.296, 100.029, 29.2366, 0.52", "-124.586, 101.93, 29.4307, 0.88", "-124.65, 102.34, 29.4871, 0.88", "-124.996, 104.642, 29.8041, 0.52", "-125.203, 106.105, 30.006, 0.52", "-125.238, 106.377, 30.0536, 0.52", "-125.411, 107.733, 30.2532, 0.52", "-125.467, 108.109, 30.291, 0.52", "-125.643, 109.043, 30.3725, 0.59", "-125.871, 110.123, 30.4509, 0.37", "-126.254, 111.858, 30.5616, 0.44", "-126.663, 113.74, 30.6645, 0.22", "-127.034, 115.431, 30.7406, 0.22", "-127.19, 116.15, 30.7822, 0.37", "-127.555, 117.823, 30.8872, 0.22", "-127.59, 117.992, 30.8981, 0.22", "-127.873, 119.404, 31.0573, 0.22", "-127.889, 119.493, 31.0769, 0.22", "-128.095, 120.938, 31.4463, 0.22", "-128.105, 121.015, 31.4664, 0.22", "-128.341, 122.903, 31.9676, 0.22", "-128.586, 125.026, 32.5127, 0.66", "-128.676, 125.838, 32.7118, 0.96", "-128.837, 127.335, 33.0938, 0.22", "-128.977, 128.622, 33.4202, 0.22", "-128.988, 128.723, 33.447, 0.22", "-129.077, 129.469, 33.6535, 0.59", "-129.172, 130.117, 33.7774, 0.88", "-129.436, 131.641, 34.0125, 0.44", "-129.611, 132.554, 34.1174, 0.29", "-129.663, 132.835, 34.1378, 0.29", "-129.771, 133.497, 34.161, 0.29", "-129.95, 135.163, 34.077, 0.74", "-129.996, 135.961, 33.9782, 0.29", "-130.022, 136.782, 33.8294, 0.44", "-130.034, 137.445, 33.7127, 0.59", "-130.036, 137.536, 33.699, 0.59", "-130.074, 139.529, 33.4566, 0.22", "-130.085, 139.824, 33.434, 0.22", "-130.186, 141.502, 33.4235, 0.22", "-130.192, 141.592, 33.4293, 0.22", "-130.251, 142.597, 33.5625, 0.44", "-130.257, 142.7, 33.5832, 0.44", "-130.286, 143.235, 33.7472, 0.44", "-130.316, 144.976, 34.3546, 0.29", "-130.289, 145.613, 34.629, 0.44", "-130.279, 145.792, 34.7113, 0.44", "-130.204, 146.606, 35.139, 0.44" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "12.2891, -260.943, -111.675, 0.29", "11.8841, -260.923, -111.902, 0.29", "11.3918, -260.98, -112.2, 0.29", "11.3016, -260.997, -112.255, 0.59", "10.9795, -261.065, -112.455, 0.66", "10.9195, -261.077, -112.5, 0.66", "10.6181, -261.134, -112.743, 0.66", "10.0949, -261.26, -113.186, 0.22", "9.88029, -261.319, -113.371, 0.66", "9.63011, -261.389, -113.59, 0.66", "8.9685, -261.572, -114.185, 0.22", "8.58806, -261.672, -114.533, 0.22", "8.06468, -261.8, -115.025, 0.22", "7.70381, -261.87, -115.368, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "12.2891, -260.943, -111.675, 0.29", "12.3432, -262.427, -112.072, 0.29", "12.44, -263.342, -112.336, 0.29", "12.4701, -263.792, -112.471, 0.74", "12.4938, -264.188, -112.612, 0.88", "12.4988, -264.285, -112.649, 0.88", "12.5081, -264.968, -112.912, 0.88", "12.5178, -266.163, -113.296, 0.22", "12.5128, -266.842, -113.525, 0.22", "12.5081, -267.622, -113.815, 0.88", "12.51, -267.686, -113.838, 0.88", "12.5606, -268.509, -114.095, 0.74", "12.6916, -269.541, -114.346, 0.37", "12.709, -269.606, -114.352, 0.37", "13.2571, -271.035, -114.246, 0.29", "13.5625, -271.706, -114.114, 0.59", "13.6568, -271.89, -114.066, 0.59", "14.1367, -272.72, -113.8, 0.88", "14.7984, -273.877, -113.228, 0.74", "15.5384, -275.181, -112.426, 0.29", "15.9179, -275.848, -111.953, 0.74", "15.9452, -275.898, -111.917, 0.74", "16.1598, -276.299, -111.605, 0.74", "17.0598, -278.048, -110.044, 0.44", "17.3164, -278.604, -109.462, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-130.204, 146.606, 35.139, 0.29", "-129.45, 146.04, 35.4058, 0.29", "-129.362, 145.973, 35.4306, 0.29", "-129.088, 145.764, 35.5002, 0.29", "-129.044, 145.731, 35.5115, 0.29", "-128.413, 145.249, 35.6722, 0.29", "-128.139, 145.04, 35.7419, 0.81", "-127.811, 144.82, 35.7824, 1.03", "-127.766, 144.786, 35.7869, 1.03", "-121.797, 139.769, 35.8095, 1.03" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-130.204, 146.606, 35.139, 0.44", "-130.342, 148.075, 35.4759, 0.44", "-130.478, 149.719, 35.8474, 0.37", "-130.716, 152.705, 36.6287, 0.29", "-130.967, 155.35, 37.3619, 0.29", "-131.071, 156.539, 37.7025, 0.74", "-131.119, 157.12, 37.8721, 0.74", "-131.158, 157.868, 38.0894, 0.44", "-131.178, 159.577, 38.627, 0.37", "-131.123, 161.352, 39.2233, 0.29", "-131.04, 163.129, 39.8291, 0.29", "-131.028, 163.306, 39.8942, 0.29", "-130.852, 165.732, 40.8129, 0.29", "-130.811, 166.193, 40.9879, 0.29", "-130.66, 167.697, 41.5348, 0.29", "-130.652, 167.772, 41.5649, 0.29", "-130.645, 169.203, 42.1426, 0.29", "-130.755, 169.985, 42.4139, 0.44", "-130.8, 170.147, 42.4625, 0.44", "-130.996, 170.734, 42.6105, 0.29", "-131.032, 170.834, 42.6314, 0.29", "-131.586, 172.399, 42.8468, 0.29", "-132.502, 175.094, 43.0597, 0.29", "-132.602, 175.407, 43.0824, 0.29", "-132.893, 176.375, 43.1499, 0.74", "-133.119, 177.18, 43.2091, 0.88", "-133.56, 178.792, 43.3281, 0.52", "-133.95, 180.252, 43.4376, 0.37", "-134.514, 182.265, 43.6153, 0.29", "-134.606, 182.58, 43.6489, 0.29", "-135.383, 185.137, 43.9719, 0.29", "-135.45, 185.35, 44.0049, 0.29", "-136.028, 187.087, 44.3548, 0.29", "-136.267, 187.749, 44.5179, 0.52", "-136.476, 188.262, 44.6754, 0.66", "-136.544, 188.416, 44.7314, 0.66", "-136.819, 188.962, 44.9887, 0.66", "-136.869, 189.058, 45.0323, 0.66", "-137.399, 190.02, 45.4157, 0.29", "-137.572, 190.32, 45.5241, 0.22", "-137.907, 190.881, 45.7253, 0.52", "-138.084, 191.197, 45.8365, 0.52", "-138.511, 191.993, 46.1083, 0.29", "-139.038, 193.075, 46.4473, 0.29", "-139.777, 194.757, 46.9916, 0.29", "-139.82, 194.86, 47.0277, 0.29", "-140.487, 196.58, 47.6694, 0.29", "-140.543, 196.737, 47.7304, 0.29", "-141.163, 198.602, 48.4764, 0.29", "-141.634, 200.165, 49.0804, 0.29", "-141.691, 200.398, 49.151, 0.29", "-141.863, 201.202, 49.3436, 0.29", "-141.876, 201.269, 49.3555, 0.29", "-142.042, 202.346, 49.4931, 0.88", "-142.082, 202.673, 49.5169, 0.88", "-142.243, 204.23, 49.5915, 0.22", "-142.37, 205.764, 49.6299, 0.22", "-142.387, 206.0, 49.6333, 0.22", "-142.499, 207.69, 49.653, 0.22", "-142.503, 207.762, 49.654, 0.22", "-142.633, 210.044, 49.5442, 0.52", "-142.737, 211.702, 49.3994, 0.29", "-142.785, 212.447, 49.2931, 0.37", "-142.795, 212.597, 49.2675, 0.37", "-142.857, 213.427, 49.1069, 0.37", "-143.031, 215.981, 48.4757, 0.22", "-143.138, 217.508, 48.0642, 0.22", "-143.143, 217.589, 48.0454, 0.22", "-143.185, 218.401, 47.8684, 0.52", "-143.242, 219.543, 47.6492, 0.66", "-143.318, 221.858, 47.1738, 0.15", "-143.35, 223.759, 46.8236, 0.15", "-143.351, 224.719, 46.5916, 0.29", "-143.352, 224.799, 46.5703, 0.29", "-143.359, 225.377, 46.3995, 0.29", "-143.409, 227.165, 45.8459, 0.44", "-143.418, 227.652, 45.649, 0.44", "-143.493, 228.865, 45.1024, 0.22", "-143.552, 229.52, 44.8272, 0.52", "-143.56, 229.597, 44.7974, 0.52", "-143.634, 230.159, 44.6118, 0.88", "-144.172, 233.45, 43.7943, 0.29", "-144.652, 236.191, 43.1877, 0.29", "-144.807, 237.15, 43.0364, 0.29", "-144.817, 237.232, 43.029, 0.29", "-144.962, 238.859, 42.9978, 0.29", "-145.007, 240.287, 43.1129, 0.29", "-145.005, 240.354, 43.1277, 0.29", "-144.728, 242.344, 43.6242, 0.29", "-144.462, 243.823, 44.0133, 0.59", "-144.31, 244.555, 44.2101, 0.59", "-144.055, 245.826, 44.5471, 0.22", "-143.795, 247.265, 44.919, 0.22", "-143.769, 247.445, 44.9636, 0.22", "-143.518, 249.672, 45.4981, 0.22", "-143.504, 249.845, 45.5383, 0.22", "-143.305, 253.372, 46.3365, 0.22", "-143.304, 253.464, 46.3565, 0.22", "-143.364, 255.579, 46.7915, 0.22", "-143.382, 255.827, 46.8397, 0.22", "-143.429, 256.183, 46.9042, 0.59", "-143.553, 256.92, 47.0308, 0.59", "-143.913, 258.768, 47.2058, 0.29", "-144.083, 259.611, 47.2437, 0.59", "-144.366, 260.928, 47.2496, 0.52", "-144.595, 262.074, 47.2364, 0.74", "-144.778, 263.067, 47.2084, 0.74", "-145.077, 265.056, 47.1258, 0.22", "-145.165, 265.9, 47.0759, 0.44", "-145.224, 266.651, 47.0372, 0.74", "-145.253, 267.085, 47.0282, 1.03", "-145.257, 267.155, 47.0279, 1.03", "-145.329, 268.091, 47.0785, 1.03", "-145.338, 268.172, 47.0945, 1.03", "-145.48, 269.491, 47.3511, 0.37", "-145.624, 270.802, 47.5948, 0.29", "-145.852, 281.958, 50.2578, 0.29", "-147.768, 292.72, 53.6943, 0.29", "-149.59, 303.289, 57.7201, 0.29", "-151.396, 313.227, 63.0947, 0.29", "-152.545, 322.594, 69.5378, 0.29", "-155.329, 330.717, 77.0106, 0.29" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-121.797, 139.769, 35.8095, 0.22", "-114.337, 133.216, 36.3229, 0.22", "-107.297, 126.352, 37.7709, 0.22", "-99.6355, 120.317, 39.5693, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-121.797, 139.769, 35.8095, 0.22", "-115.337, 133.927, 36.1607, 0.22", "-108.924, 128.039, 36.5708, 0.22" ],
    "parent" : "dend_78",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_92", "dend_25", "dend_0", "dend_98", "dend_93", "dend_41", "dend_26", "dend_14", "dend_1", "dend_102", "dend_99", "dend_97", "dend_94", "dend_65", "dend_42", "dend_30", "dend_27", "dend_20", "dend_15", "dend_3", "dend_2", "dend_104", "dend_103", "dend_101", "dend_100", "dend_96", "dend_95", "dend_67", "dend_66", "dend_48", "dend_43", "dend_34", "dend_31", "dend_29", "dend_28", "dend_24", "dend_21", "dend_17", "dend_16", "dend_11", "dend_4", "dend_87", "dend_68", "dend_52", "dend_49", "dend_47", "dend_44", "dend_40", "dend_35", "dend_33", "dend_32", "dend_23", "dend_22", "dend_19", "dend_18", "dend_13", "dend_12", "dend_6", "dend_5", "dend_91", "dend_88", "dend_72", "dend_69", "dend_62", "dend_53", "dend_51", "dend_50", "dend_46", "dend_45", "dend_39", "dend_36", "dend_8", "dend_7", "dend_90", "dend_89", "dend_86", "dend_73", "dend_71", "dend_70", "dend_64", "dend_63", "dend_61", "dend_54", "dend_38", "dend_37", "dend_10", "dend_9", "dend_83", "dend_74", "dend_56", "dend_55", "dend_85", "dend_84", "dend_82", "dend_75", "dend_60", "dend_57", "dend_81", "dend_76", "dend_59", "dend_58", "dend_78", "dend_77", "dend_80", "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_25", "dend_25", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_91", "dend_88", "dend_88", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_8", "dend_8", "dend_8", "dend_8", "dend_7", "dend_7", "dend_7", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_80", "dend_80", "dend_80", "dend_79", "dend_79" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.00545",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.90744E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.004119",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "5.9999998E-6",
    "erev" : "-60.065872"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.418459",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.026008999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.025854",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.19695699",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "2.0E-6",
    "erev" : "-60.2509"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.9899996E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.008343",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "6.58298E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.026899999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.502333",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.653374",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "5.6999997E-5",
    "erev" : "-76.49812"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.84E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.30005398",
    "erev" : "50.0"
  }, {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "k",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.002256",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.38E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.005574",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "7.92E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bIR215_L5_DBC_e2f2301440_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_92, id: dend_92, parent: soma_0
create dend_92
public dend_92
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_98, id: dend_98, parent: dend_92
create dend_98
public dend_98
// Section: dend_93, id: dend_93, parent: dend_92
create dend_93
public dend_93
// Section: dend_41, id: dend_41, parent: dend_25
create dend_41
public dend_41
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_0
create dend_14
public dend_14
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_102, id: dend_102, parent: dend_98
create dend_102
public dend_102
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_97, id: dend_97, parent: dend_93
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_65, id: dend_65, parent: dend_41
create dend_65
public dend_65
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_104, id: dend_104, parent: dend_102
create dend_104
public dend_104
// Section: dend_103, id: dend_103, parent: dend_102
create dend_103
public dend_103
// Section: dend_101, id: dend_101, parent: dend_99
create dend_101
public dend_101
// Section: dend_100, id: dend_100, parent: dend_99
create dend_100
public dend_100
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_30
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_3
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_87, id: dend_87, parent: dend_67
create dend_87
public dend_87
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_43
create dend_47
public dend_47
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_34
create dend_40
public dend_40
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_91, id: dend_91, parent: dend_87
create dend_91
public dend_91
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_72, id: dend_72, parent: dend_68
create dend_72
public dend_72
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_62, id: dend_62, parent: dend_52
create dend_62
public dend_62
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_90, id: dend_90, parent: dend_88
create dend_90
public dend_90
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_86, id: dend_86, parent: dend_72
create dend_86
public dend_86
// Section: dend_73, id: dend_73, parent: dend_72
create dend_73
public dend_73
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_53
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_83, id: dend_83, parent: dend_73
create dend_83
public dend_83
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_82, id: dend_82, parent: dend_74
create dend_82
public dend_82
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_81, id: dend_81, parent: dend_75
create dend_81
public dend_81
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_78, id: dend_78, parent: dend_76
create dend_78
public dend_78
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_80, id: dend_80, parent: dend_78
create dend_80
public dend_80
// Section: dend_79, id: dend_79, parent: dend_78
create dend_79
public dend_79

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_107
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_92(0), soma_0(0.45000180399916434)
    connect dend_25(0), soma_0(0.45000180399916434)
    connect dend_0(0), soma_0(0.45000180399916434)
    connect axon_0(0), soma_0(1.0)
    connect dend_98(0), dend_92(1.0)
    connect dend_93(0), dend_92(1.0)
    connect dend_41(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_102(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_97(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_65(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_104(0), dend_102(1.0)
    connect dend_103(0), dend_102(1.0)
    connect dend_101(0), dend_99(1.0)
    connect dend_100(0), dend_99(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_34(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_11(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_87(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_91(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_72(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_62(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_90(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_86(0), dend_72(1.0)
    connect dend_73(0), dend_72(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_83(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_82(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_81(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_78(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_80(0), dend_78(1.0)
    connect dend_79(0), dend_78(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.46438, -10.9587, 0.660551, 2.48146 ) }
    soma_0 { pt3dadd( -1.32683, -9.87667, 0.597834, 3.97794 ) }
    soma_0 { pt3dadd( -1.18928, -8.79467, 0.535117, 5.03907 ) }
    soma_0 { pt3dadd( -1.05173, -7.71267, 0.4724, 6.13889 ) }
    soma_0 { pt3dadd( -0.914177, -6.63067, 0.409682, 7.21767 ) }
    soma_0 { pt3dadd( -0.776625, -5.54866, 0.346965, 8.03623 ) }
    soma_0 { pt3dadd( -0.639073, -4.46666, 0.284248, 8.69756 ) }
    soma_0 { pt3dadd( -0.501522, -3.38466, 0.221531, 9.05897 ) }
    soma_0 { pt3dadd( -0.36397, -2.30266, 0.158814, 9.32273 ) }
    soma_0 { pt3dadd( -0.226418, -1.22066, 0.0960968, 9.64559 ) }
    soma_0 { pt3dadd( -0.0888665, -0.138661, 0.0333797, 9.88524 ) }
    soma_0 { pt3dadd( 0.0486852, 0.943339, -0.0293375, 9.94228 ) }
    soma_0 { pt3dadd( 0.186237, 2.02534, -0.0920546, 10.0768 ) }
    soma_0 { pt3dadd( 0.323789, 3.10734, -0.154772, 10.303 ) }
    soma_0 { pt3dadd( 0.46134, 4.18934, -0.217489, 10.477 ) }
    soma_0 { pt3dadd( 0.598892, 5.27134, -0.280206, 10.0133 ) }
    soma_0 { pt3dadd( 0.736444, 6.35334, -0.342923, 9.03357 ) }
    soma_0 { pt3dadd( 0.873996, 7.43534, -0.40564, 7.79644 ) }
    soma_0 { pt3dadd( 1.01155, 8.51734, -0.468357, 6.40893 ) }
    soma_0 { pt3dadd( 1.1491, 9.59934, -0.531074, 4.35077 ) }
    soma_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 2.55388 ) }
    // Section: dend_92, id: dend_92, parent: soma_0 (entry count 21/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 2.53825, -1.08596, -8.8572, 1.11 ) }
    dend_92 { pt3dadd( 2.60646, -2.37928, -9.00923, 1.11 ) }
    dend_92 { pt3dadd( 2.72294, -4.79578, -9.3613, 1.11 ) }
    dend_92 { pt3dadd( 2.79603, -6.16038, -9.60531, 1.03 ) }
    dend_92 { pt3dadd( 2.89025, -7.95885, -9.94326, 1.03 ) }
    dend_92 { pt3dadd( 2.97187, -10.1593, -10.5898, 1.03 ) }
    dend_92 { pt3dadd( 2.9734, -11.9413, -11.262, 1.18 ) }
    dend_92 { pt3dadd( 2.91833, -13.6632, -12.0489, 1.18 ) }
    dend_92 { pt3dadd( 2.80398, -15.406, -13.0163, 1.4 ) }
    dend_92 { pt3dadd( 2.66281, -16.4119, -13.8091, 1.55 ) }
    dend_92 { pt3dadd( 2.00784, -19.6767, -17.0108, 1.25 ) }
    dend_92 { pt3dadd( 1.61189, -21.3386, -19.1009, 1.25 ) }
    dend_92 { pt3dadd( 1.44308, -22.0497, -20.2012, 1.47 ) }
    dend_92 { pt3dadd( 1.16956, -23.6468, -22.9384, 1.69 ) }
    dend_92 { pt3dadd( 0.886821, -26.8447, -28.6046, 1.69 ) }
    dend_92 { pt3dadd( 0.887121, -26.8873, -28.6794, 1.69 ) }
    dend_92 { pt3dadd( 1.17692, -29.6495, -33.2275, 1.33 ) }
    dend_92 { pt3dadd( 1.4972, -31.515, -36.029, 1.11 ) }
    dend_92 { pt3dadd( 1.825, -33.2641, -38.3046, 1.25 ) }
    dend_92 { pt3dadd( 2.1359, -34.9712, -39.9692, 1.4 ) }
    dend_92 { pt3dadd( 2.26904, -36.138, -40.7214, 1.4 ) }
    dend_92 { pt3dadd( 2.27006, -37.6195, -41.5153, 1.33 ) }
    dend_92 { pt3dadd( 1.9774, -39.6196, -42.2581, 1.18 ) }
    dend_92 { pt3dadd( 1.5339, -41.1322, -42.815, 1.18 ) }
    dend_92 { pt3dadd( 0.79889, -42.9327, -43.6098, 1.33 ) }
    dend_92 { pt3dadd( -0.19034, -45.2242, -44.7752, 1.03 ) }
    dend_92 { pt3dadd( -0.869951, -46.9444, -45.6949, 1.25 ) }
    dend_92 { pt3dadd( -1.22182, -48.0232, -46.2789, 1.62 ) }
    dend_92 { pt3dadd( -1.855, -50.512, -47.6056, 1.62 ) }
    dend_92 { pt3dadd( -2.16657, -52.2979, -48.4864, 1.03 ) }
    dend_92 { pt3dadd( -2.42361, -55.2633, -49.7413, 1.03 ) }
    dend_92 { pt3dadd( -2.45282, -57.5137, -50.5177, 1.18 ) }
    dend_92 { pt3dadd( -2.36349, -59.6214, -51.1324, 1.18 ) }
    dend_92 { pt3dadd( -2.30443, -60.3556, -51.3222, 1.55 ) }
    dend_92 { pt3dadd( -2.18533, -61.5966, -51.5726, 1.55 ) }
    dend_92 { pt3dadd( -2.04284, -63.2943, -51.9232, 1.69 ) }
    dend_92 { pt3dadd( -1.94048, -65.0501, -52.4081, 1.84 ) }
    dend_92 { pt3dadd( -1.88507, -66.6495, -53.0022, 1.47 ) }
    dend_92 { pt3dadd( -1.83415, -68.8367, -53.9216, 1.18 ) }
    dend_92 { pt3dadd( -1.83361, -70.7183, -54.794, 1.18 ) }
    dend_92 { pt3dadd( -1.8761, -72.8648, -55.88, 1.18 ) }
    dend_92 { pt3dadd( -1.88074, -75.2516, -56.9888, 1.33 ) }
    dend_92 { pt3dadd( -1.77845, -77.2347, -57.7071, 1.03 ) }
    dend_92 { pt3dadd( -1.62873, -78.7536, -58.2224, 1.03 ) }
    dend_92 { pt3dadd( -1.41049, -80.3444, -58.6912, 1.03 ) }
    dend_92 { pt3dadd( -1.11978, -82.3451, -59.2399, 1.33 ) }
    dend_92 { pt3dadd( -0.612473, -86.4424, -60.3552, 1.33 ) }
    dend_92 { pt3dadd( -0.281529, -90.0417, -61.4452, 1.33 ) }
    dend_92 { pt3dadd( -0.117039, -92.6054, -62.3377, 1.18 ) }
    dend_92 { pt3dadd( -0.0325802, -94.0665, -62.9194, 1.4 ) }
    dend_92 { pt3dadd( 0.150445, -96.7478, -64.2134, 1.4 ) }
    dend_92 { pt3dadd( 0.348499, -99.5525, -65.8248, 1.33 ) }
    dend_92 { pt3dadd( 0.531409, -102.027, -67.5593, 1.18 ) }
    dend_92 { pt3dadd( 0.540953, -102.12, -67.6297, 1.18 ) }
    dend_92 { pt3dadd( 0.775669, -103.764, -68.8694, 1.47 ) }
    dend_92 { pt3dadd( 1.23085, -106.12, -70.6965, 1.84 ) }
    dend_92 { pt3dadd( 1.61849, -107.554, -71.7778, 1.62 ) }
    dend_92 { pt3dadd( 2.20762, -109.279, -73.0279, 1.55 ) }
    dend_92 { pt3dadd( 2.93112, -111.291, -74.4773, 1.33 ) }
    dend_92 { pt3dadd( 3.49315, -113.034, -75.7724, 1.62 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 81/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -0.511751, -10.3622, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.486257, -10.4583, 0.0228061, 3.68 ) }
    dend_25 { pt3dadd( -0.278849, -11.2406, 0.0228061, 3.61 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 84/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 1.07825, 10.9783, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 1.47804, 11.8347, 0.142806, 2.43 ) }
    dend_0 { pt3dadd( 2.23215, 13.43, 0.142806, 2.14 ) }
    dend_0 { pt3dadd( 2.75792, 14.5781, 0.148045, 1.92 ) }
    dend_0 { pt3dadd( 2.95445, 15.0201, 0.151269, 1.92 ) }
    dend_0 { pt3dadd( 3.24277, 15.6513, 0.156749, 1.92 ) }
    dend_0 { pt3dadd( 3.43705, 16.0635, 0.160504, 1.92 ) }
    dend_0 { pt3dadd( 3.74427, 16.6812, 0.166952, 1.92 ) }
    dend_0 { pt3dadd( 3.99256, 17.165, 0.172143, 1.99 ) }
    dend_0 { pt3dadd( 4.36579, 17.8909, 0.179014, 1.99 ) }
    dend_0 { pt3dadd( 4.91482, 19.0172, 0.187856, 1.99 ) }
    dend_0 { pt3dadd( 5.3657, 19.9542, 0.193883, 1.99 ) }
    dend_0 { pt3dadd( 5.84203, 20.9905, 0.198757, 1.99 ) }
    dend_0 { pt3dadd( 6.36429, 22.2211, 0.179528, 2.21 ) }
    dend_0 { pt3dadd( 6.80508, 23.4052, 0.140431, 2.21 ) }
    dend_0 { pt3dadd( 7.08301, 24.2934, 0.0857851, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 7.17846, 24.6804, 0.046205, 1.99 ) }
    dend_0 { pt3dadd( 7.34948, 25.5457, -0.0664244, 1.99 ) }
    dend_0 { pt3dadd( 7.51427, 26.6558, -0.228611, 2.06 ) }
    dend_0 { pt3dadd( 7.66568, 28.0445, -0.467333, 1.92 ) }
    dend_0 { pt3dadd( 7.77923, 29.3868, -0.738277, 1.92 ) }
    dend_0 { pt3dadd( 7.89275, 30.886, -1.09663, 1.99 ) }
    dend_0 { pt3dadd( 7.94352, 31.6727, -1.31487, 2.14 ) }
    dend_0 { pt3dadd( 8.02462, 32.9895, -1.69839, 2.14 ) }
    dend_0 { pt3dadd( 8.1188, 34.6123, -2.18791, 1.99 ) }
    dend_0 { pt3dadd( 8.16259, 35.6008, -2.51759, 2.06 ) }
    dend_0 { pt3dadd( 8.1808, 36.7828, -2.93476, 2.43 ) }
    dend_0 { pt3dadd( 8.18257, 37.7003, -3.29549, 2.65 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 12/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.28665, 10.6813, -0.593792, 0.551375 ) }
    axon_0 { pt3dadd( 3.17833, 25.5615, -0.593792, 0.551375 ) }
    axon_0 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.551375 ) }
    // Section: dend_98, id: dend_98, parent: dend_92 (entry count 15/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 3.49315, -113.034, -75.7724, 0.52 ) }
    dend_98 { pt3dadd( 2.28096, -114.606, -77.3701, 0.52 ) }
    dend_98 { pt3dadd( 1.48455, -115.907, -78.6191, 0.52 ) }
    dend_98 { pt3dadd( 1.07038, -116.931, -79.5794, 0.52 ) }
    dend_98 { pt3dadd( 0.71354, -118.475, -81.0275, 0.52 ) }
    dend_98 { pt3dadd( 0.635492, -119.244, -81.7643, 1.11 ) }
    dend_98 { pt3dadd( 0.607746, -120.18, -82.6221, 1.4 ) }
    dend_98 { pt3dadd( 0.742113, -120.902, -83.2345, 1.69 ) }
    dend_98 { pt3dadd( 1.18129, -122.264, -84.3217, 1.62 ) }
    dend_98 { pt3dadd( 1.64149, -123.376, -85.1885, 1.4 ) }
    dend_98 { pt3dadd( 2.32121, -124.859, -86.2901, 0.88 ) }
    dend_98 { pt3dadd( 2.74902, -125.794, -86.9798, 0.66 ) }
    dend_98 { pt3dadd( 3.3471, -127.147, -87.902, 0.66 ) }
    dend_98 { pt3dadd( 3.69408, -127.963, -88.4536, 0.88 ) }
    dend_98 { pt3dadd( 4.08676, -128.93, -89.0548, 1.11 ) }
    dend_98 { pt3dadd( 4.44534, -129.739, -89.515, 1.18 ) }
    dend_98 { pt3dadd( 4.83703, -130.516, -89.9262, 1.18 ) }
    dend_98 { pt3dadd( 5.16668, -131.105, -90.2803, 1.18 ) }
    // Section: dend_93, id: dend_93, parent: dend_92 (entry count 33/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 3.49315, -113.034, -75.7724, 0.66 ) }
    dend_93 { pt3dadd( 3.13937, -114.305, -75.2173, 0.66 ) }
    dend_93 { pt3dadd( 2.75944, -115.219, -74.722, 0.52 ) }
    dend_93 { pt3dadd( 2.72544, -115.285, -74.6864, 0.52 ) }
    dend_93 { pt3dadd( 2.06528, -116.424, -74.0616, 0.74 ) }
    dend_93 { pt3dadd( 1.41338, -117.52, -73.5062, 0.88 ) }
    dend_93 { pt3dadd( 0.919549, -118.345, -73.0728, 0.74 ) }
    dend_93 { pt3dadd( 0.225882, -119.444, -72.4161, 0.37 ) }
    dend_93 { pt3dadd( -0.258015, -120.254, -71.8924, 1.18 ) }
    dend_93 { pt3dadd( -0.730004, -121.194, -71.2712, 1.4 ) }
    dend_93 { pt3dadd( -1.17724, -122.266, -70.5503, 0.96 ) }
    dend_93 { pt3dadd( -1.47582, -123.401, -69.6559, 0.74 ) }
    dend_93 { pt3dadd( -1.59905, -124.536, -68.613, 0.29 ) }
    dend_93 { pt3dadd( -1.575, -125.591, -67.5804, 0.74 ) }
    dend_93 { pt3dadd( -1.48837, -126.295, -66.8644, 0.96 ) }
    dend_93 { pt3dadd( -1.47924, -126.344, -66.8163, 0.96 ) }
    dend_93 { pt3dadd( -1.10202, -128.311, -65.1041, 0.59 ) }
    dend_93 { pt3dadd( -0.980022, -129.211, -64.5085, 1.11 ) }
    dend_93 { pt3dadd( -0.936304, -129.953, -64.1278, 1.25 ) }
    dend_93 { pt3dadd( -0.983807, -130.712, -63.8527, 1.18 ) }
    dend_93 { pt3dadd( -1.21049, -132.061, -63.4519, 0.81 ) }
    dend_93 { pt3dadd( -1.49581, -133.234, -63.1793, 0.59 ) }
    dend_93 { pt3dadd( -1.9064, -134.492, -62.9951, 0.44 ) }
    dend_93 { pt3dadd( -1.94008, -134.581, -62.9816, 0.44 ) }
    dend_93 { pt3dadd( -2.36866, -135.522, -62.7948, 0.29 ) }
    dend_93 { pt3dadd( -3.12689, -136.931, -62.4624, 0.29 ) }
    dend_93 { pt3dadd( -3.62559, -137.794, -62.2384, 0.81 ) }
    dend_93 { pt3dadd( -3.99821, -138.48, -62.0639, 1.33 ) }
    dend_93 { pt3dadd( -4.36172, -139.252, -61.933, 1.33 ) }
    dend_93 { pt3dadd( -4.85753, -140.564, -61.8931, 0.96 ) }
    dend_93 { pt3dadd( -5.10572, -141.489, -61.9914, 0.81 ) }
    dend_93 { pt3dadd( -5.27976, -142.49, -62.2172, 0.81 ) }
    dend_93 { pt3dadd( -5.41557, -143.714, -62.581, 0.74 ) }
    dend_93 { pt3dadd( -5.51454, -145.349, -63.142, 0.44 ) }
    dend_93 { pt3dadd( -5.54998, -146.815, -63.7371, 0.66 ) }
    dend_93 { pt3dadd( -5.55281, -147.761, -64.1772, 0.74 ) }
    dend_93 { pt3dadd( -5.57265, -148.618, -64.5823, 1.03 ) }
    dend_93 { pt3dadd( -5.64645, -149.62, -65.0399, 1.25 ) }
    dend_93 { pt3dadd( -5.78978, -150.675, -65.4628, 1.11 ) }
    dend_93 { pt3dadd( -6.03349, -151.968, -65.8914, 0.59 ) }
    dend_93 { pt3dadd( -6.2591, -153.023, -66.1955, 0.59 ) }
    dend_93 { pt3dadd( -6.51263, -154.133, -66.5284, 0.66 ) }
    dend_93 { pt3dadd( -6.69864, -154.938, -66.7653, 0.66 ) }
    dend_93 { pt3dadd( -6.95916, -156.17, -67.0924, 0.52 ) }
    dend_93 { pt3dadd( -7.16833, -157.311, -67.3899, 0.52 ) }
    dend_93 { pt3dadd( -7.30363, -158.315, -67.6258, 0.59 ) }
    dend_93 { pt3dadd( -7.41177, -159.605, -67.9637, 1.25 ) }
    dend_93 { pt3dadd( -7.43168, -160.1, -68.1081, 1.4 ) }
    dend_93 { pt3dadd( -7.43512, -160.995, -68.3842, 1.4 ) }
    dend_93 { pt3dadd( -7.42338, -162.302, -68.7334, 0.88 ) }
    dend_93 { pt3dadd( -7.41838, -163.138, -68.9112, 0.52 ) }
    dend_93 { pt3dadd( -7.4638, -164.591, -69.1507, 0.52 ) }
    dend_93 { pt3dadd( -7.55168, -165.505, -69.1581, 0.52 ) }
    dend_93 { pt3dadd( -7.567, -165.6, -69.1438, 0.52 ) }
    dend_93 { pt3dadd( -7.84623, -167.013, -68.6708, 0.52 ) }
    dend_93 { pt3dadd( -7.86022, -167.087, -68.6372, 0.52 ) }
    dend_93 { pt3dadd( -7.96469, -167.693, -68.3284, 0.96 ) }
    dend_93 { pt3dadd( -8.17949, -169.316, -67.4459, 1.33 ) }
    dend_93 { pt3dadd( -8.28906, -170.545, -66.8412, 0.66 ) }
    dend_93 { pt3dadd( -8.36655, -171.741, -66.3418, 0.59 ) }
    dend_93 { pt3dadd( -8.41899, -172.902, -65.9629, 0.74 ) }
    dend_93 { pt3dadd( -8.4241, -172.995, -65.9376, 0.74 ) }
    dend_93 { pt3dadd( -8.49262, -173.981, -65.7399, 0.74 ) }
    dend_93 { pt3dadd( -8.5852, -174.77, -65.6552, 1.03 ) }
    dend_93 { pt3dadd( -8.72498, -175.415, -65.5964, 1.25 ) }
    dend_93 { pt3dadd( -8.97781, -176.241, -65.5456, 1.18 ) }
    dend_93 { pt3dadd( -9.27009, -177.001, -65.5045, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_93 { pt3dadd( -9.61364, -177.775, -65.4726, 0.29 ) }
    dend_93 { pt3dadd( -9.93942, -178.421, -65.4569, 0.29 ) }
    dend_93 { pt3dadd( -10.203, -178.914, -65.4482, 0.81 ) }
    dend_93 { pt3dadd( -10.4317, -179.341, -65.4442, 1.11 ) }
    dend_93 { pt3dadd( -10.7602, -180.01, -65.4456, 1.11 ) }
    dend_93 { pt3dadd( -11.0886, -180.861, -65.4524, 0.59 ) }
    dend_93 { pt3dadd( -11.1077, -180.953, -65.4537, 0.59 ) }
    dend_93 { pt3dadd( -11.1165, -181.772, -65.4691, 0.44 ) }
    dend_93 { pt3dadd( -11.1005, -181.854, -65.4709, 0.44 ) }
    dend_93 { pt3dadd( -10.7885, -182.667, -65.49, 0.44 ) }
    dend_93 { pt3dadd( -10.431, -183.343, -65.5218, 0.81 ) }
    dend_93 { pt3dadd( -10.0097, -184.035, -65.564, 1.11 ) }
    dend_93 { pt3dadd( -9.74271, -184.47, -65.6104, 1.11 ) }
    dend_93 { pt3dadd( -9.37682, -185.081, -65.708, 0.88 ) }
    dend_93 { pt3dadd( -9.07302, -185.648, -65.8169, 0.66 ) }
    dend_93 { pt3dadd( -8.71852, -186.401, -65.981, 0.66 ) }
    dend_93 { pt3dadd( -8.40723, -187.183, -66.1564, 0.44 ) }
    dend_93 { pt3dadd( -8.1292, -188.033, -66.3404, 0.29 ) }
    dend_93 { pt3dadd( -7.89006, -189.005, -66.5317, 0.88 ) }
    dend_93 { pt3dadd( -7.76668, -189.752, -66.6529, 0.88 ) }
    dend_93 { pt3dadd( -7.71535, -190.358, -66.7273, 0.88 ) }
    dend_93 { pt3dadd( -7.69905, -191.22, -66.7943, 0.74 ) }
    dend_93 { pt3dadd( -7.72309, -192.089, -66.8332, 0.37 ) }
    dend_93 { pt3dadd( -7.76501, -192.903, -66.8367, 0.29 ) }
    dend_93 { pt3dadd( -7.83379, -194.091, -66.8207, 0.29 ) }
    dend_93 { pt3dadd( -7.886, -195.063, -66.8078, 0.81 ) }
    dend_93 { pt3dadd( -7.91765, -195.959, -66.7972, 1.03 ) }
    dend_93 { pt3dadd( -7.91659, -196.056, -66.7963, 1.03 ) }
    dend_93 { pt3dadd( -7.85723, -196.824, -66.7921, 1.18 ) }
    dend_93 { pt3dadd( -7.75518, -197.683, -66.7906, 1.33 ) }
    dend_93 { pt3dadd( -7.64499, -198.431, -66.7921, 1.33 ) }
    dend_93 { pt3dadd( -7.45654, -199.569, -66.8057, 0.59 ) }
    dend_93 { pt3dadd( -7.27135, -200.695, -66.8267, 0.44 ) }
    dend_93 { pt3dadd( -7.11587, -201.698, -66.8498, 0.44 ) }
    dend_93 { pt3dadd( -6.97893, -202.618, -66.8715, 0.81 ) }
    dend_93 { pt3dadd( -6.83507, -203.65, -66.8955, 1.11 ) }
    dend_93 { pt3dadd( -6.7298, -204.602, -66.9165, 1.11 ) }
    dend_93 { pt3dadd( -6.70536, -205.201, -66.9285, 1.25 ) }
    dend_93 { pt3dadd( -6.76207, -206.159, -66.9436, 1.11 ) }
    dend_93 { pt3dadd( -6.935, -207.351, -66.9825, 0.66 ) }
    dend_93 { pt3dadd( -7.10811, -208.202, -67.0224, 0.37 ) }
    dend_93 { pt3dadd( -7.33562, -209.019, -67.0694, 0.29 ) }
    dend_93 { pt3dadd( -7.67358, -210.193, -67.1425, 0.37 ) }
    dend_93 { pt3dadd( -7.85376, -211.025, -67.2419, 0.52 ) }
    dend_93 { pt3dadd( -7.93562, -211.904, -67.3615, 0.88 ) }
    dend_93 { pt3dadd( -7.91363, -212.5, -67.4461, 1.03 ) }
    dend_93 { pt3dadd( -7.87224, -212.756, -67.4827, 1.03 ) }
    dend_93 { pt3dadd( -7.5904, -214.082, -67.5737, 0.74 ) }
    dend_93 { pt3dadd( -7.24708, -215.585, -67.5964, 0.59 ) }
    dend_93 { pt3dadd( -6.99709, -216.771, -67.5778, 0.59 ) }
    dend_93 { pt3dadd( -6.87582, -217.404, -67.5199, 1.4 ) }
    dend_93 { pt3dadd( -6.74541, -218.123, -67.4248, 1.77 ) }
    dend_93 { pt3dadd( -6.42263, -220.107, -67.041, 0.81 ) }
    dend_93 { pt3dadd( -6.28809, -221.121, -66.7781, 0.81 ) }
    dend_93 { pt3dadd( -6.13452, -222.517, -66.2859, 0.81 ) }
    dend_93 { pt3dadd( -5.96497, -223.878, -65.7568, 1.11 ) }
    dend_93 { pt3dadd( -5.85776, -224.549, -65.4724, 1.11 ) }
    dend_93 { pt3dadd( -5.64319, -225.606, -65.0037, 0.88 ) }
    dend_93 { pt3dadd( -5.61547, -225.731, -64.9456, 0.88 ) }
    dend_93 { pt3dadd( -5.43687, -226.781, -64.4328, 0.59 ) }
    dend_93 { pt3dadd( -5.35596, -227.875, -63.9232, 0.59 ) }
    dend_93 { pt3dadd( -5.33164, -228.74, -63.5665, 0.52 ) }
    dend_93 { pt3dadd( -5.33619, -229.481, -63.274, 0.52 ) }
    dend_93 { pt3dadd( -5.37059, -231.232, -62.6698, 0.74 ) }
    dend_93 { pt3dadd( -5.39755, -232.039, -62.4142, 1.33 ) }
    dend_93 { pt3dadd( -5.46514, -233.093, -62.1281, 1.69 ) }
    // Section: dend_41, id: dend_41, parent: dend_25 (entry count 66/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -0.278849, -11.2406, 0.0228061, 2.73 ) }
    dend_41 { pt3dadd( -0.0443667, -13.0325, 0.00997557, 2.73 ) }
    dend_41 { pt3dadd( 0.173567, -14.8649, -0.00217767, 2.14 ) }
    dend_41 { pt3dadd( 0.323499, -16.3081, -0.0107885, 2.14 ) }
    dend_41 { pt3dadd( 0.475515, -17.9603, -0.019777, 2.28 ) }
    dend_41 { pt3dadd( 0.605871, -19.539, -0.046765, 2.14 ) }
    dend_41 { pt3dadd( 0.770193, -21.5863, -0.0948944, 1.92 ) }
    dend_41 { pt3dadd( 0.866504, -23.0905, -0.156185, 2.06 ) }
    dend_41 { pt3dadd( 0.964062, -25.182, -0.268813, 1.84 ) }
    dend_41 { pt3dadd( 0.998964, -27.1326, -0.419746, 1.84 ) }
    dend_41 { pt3dadd( 0.991984, -28.6034, -0.561041, 1.84 ) }
    dend_41 { pt3dadd( 0.934342, -30.456, -0.783873, 1.92 ) }
    dend_41 { pt3dadd( 0.806829, -32.2349, -1.06697, 1.92 ) }
    dend_41 { pt3dadd( 0.619456, -33.7008, -1.35523, 1.92 ) }
    dend_41 { pt3dadd( 0.317761, -35.1724, -1.67854, 1.84 ) }
    dend_41 { pt3dadd( -0.103418, -36.746, -2.04538, 1.84 ) }
    dend_41 { pt3dadd( -0.41878, -37.6927, -2.2779, 1.77 ) }
    dend_41 { pt3dadd( -1.1722, -39.664, -2.79299, 1.69 ) }
    dend_41 { pt3dadd( -2.03764, -41.7236, -3.34082, 1.69 ) }
    dend_41 { pt3dadd( -2.80013, -43.4016, -3.80815, 1.84 ) }
    dend_41 { pt3dadd( -2.83013, -43.4606, -3.82404, 1.84 ) }
    dend_41 { pt3dadd( -3.28474, -44.2305, -4.04363, 2.06 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 88/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -0.278849, -11.2406, 0.0228061, 0.96 ) }
    dend_26 { pt3dadd( -0.740947, -13.3582, -1.04155, 0.96 ) }
    dend_26 { pt3dadd( -1.24526, -15.485, -1.88524, 1.25 ) }
    dend_26 { pt3dadd( -1.92108, -17.9951, -2.66323, 0.96 ) }
    dend_26 { pt3dadd( -2.39771, -19.6298, -2.97624, 1.25 ) }
    dend_26 { pt3dadd( -2.77343, -20.7852, -3.11317, 1.47 ) }
    dend_26 { pt3dadd( -3.28637, -22.2778, -3.23303, 1.11 ) }
    dend_26 { pt3dadd( -3.99404, -24.1944, -3.20626, 0.96 ) }
    dend_26 { pt3dadd( -4.76876, -26.0237, -3.01094, 1.11 ) }
    dend_26 { pt3dadd( -5.90634, -28.3364, -2.63731, 1.11 ) }
    dend_26 { pt3dadd( -6.74486, -29.8342, -2.3926, 1.11 ) }
    dend_26 { pt3dadd( -6.8167, -29.9493, -2.37395, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_26 { pt3dadd( -7.8203, -31.3381, -2.1567, 0.96 ) }
    dend_26 { pt3dadd( -7.86889, -31.3959, -2.1505, 0.96 ) }
    dend_26 { pt3dadd( -8.88904, -32.3937, -2.1173, 1.03 ) }
    dend_26 { pt3dadd( -9.6642, -33.0786, -2.17407, 1.25 ) }
    dend_26 { pt3dadd( -9.73948, -33.1497, -2.18104, 1.25 ) }
    dend_26 { pt3dadd( -10.7964, -34.1955, -2.29243, 0.88 ) }
    dend_26 { pt3dadd( -11.8017, -35.2571, -2.41921, 0.88 ) }
    dend_26 { pt3dadd( -13.0868, -36.6996, -2.6408, 1.11 ) }
    dend_26 { pt3dadd( -14.0991, -37.9368, -2.85324, 1.11 ) }
    dend_26 { pt3dadd( -15.0626, -39.1961, -3.08683, 1.25 ) }
    dend_26 { pt3dadd( -15.1526, -39.3315, -3.11114, 1.25 ) }
    dend_26 { pt3dadd( -15.9957, -40.8651, -3.40592, 0.96 ) }
    dend_26 { pt3dadd( -16.7449, -42.4698, -3.70247, 0.96 ) }
    dend_26 { pt3dadd( -17.2966, -43.814, -3.94161, 1.03 ) }
    dend_26 { pt3dadd( -17.335, -43.9101, -3.95737, 1.03 ) }
    dend_26 { pt3dadd( -18.005, -45.583, -4.20333, 1.03 ) }
    dend_26 { pt3dadd( -18.5205, -46.8898, -4.36004, 1.03 ) }
    dend_26 { pt3dadd( -18.9611, -48.0556, -4.43776, 1.25 ) }
    dend_26 { pt3dadd( -19.4066, -49.2865, -4.45511, 1.62 ) }
    dend_26 { pt3dadd( -20.0934, -51.1336, -4.41841, 1.25 ) }
    dend_26 { pt3dadd( -20.6154, -52.4909, -4.34986, 1.18 ) }
    dend_26 { pt3dadd( -21.0273, -53.4707, -4.22806, 1.18 ) }
    dend_26 { pt3dadd( -21.5576, -54.6626, -3.9856, 1.33 ) }
    dend_26 { pt3dadd( -22.2259, -56.0245, -3.62912, 1.33 ) }
    dend_26 { pt3dadd( -22.8515, -57.212, -3.29539, 1.03 ) }
    dend_26 { pt3dadd( -22.8899, -57.2793, -3.27529, 1.03 ) }
    dend_26 { pt3dadd( -23.6247, -58.5253, -2.99384, 0.81 ) }
    dend_26 { pt3dadd( -24.1994, -59.4852, -2.90433, 0.66 ) }
    dend_26 { pt3dadd( -24.805, -60.4648, -2.99594, 0.81 ) }
    dend_26 { pt3dadd( -25.5816, -61.6891, -3.3565, 1.03 ) }
    dend_26 { pt3dadd( -25.998, -62.361, -3.65013, 1.33 ) }
    dend_26 { pt3dadd( -26.495, -63.2682, -4.13999, 1.62 ) }
    dend_26 { pt3dadd( -26.9983, -64.3416, -4.78794, 1.55 ) }
    dend_26 { pt3dadd( -27.4824, -65.5483, -5.49269, 1.18 ) }
    dend_26 { pt3dadd( -27.9926, -66.9915, -6.24671, 0.96 ) }
    dend_26 { pt3dadd( -28.0187, -67.0721, -6.28317, 0.96 ) }
    dend_26 { pt3dadd( -28.5682, -68.9463, -7.01002, 0.88 ) }
    dend_26 { pt3dadd( -29.0064, -70.5633, -7.49968, 0.88 ) }
    dend_26 { pt3dadd( -29.3327, -71.9796, -7.81518, 1.18 ) }
    dend_26 { pt3dadd( -29.6117, -73.409, -8.06658, 1.4 ) }
    dend_26 { pt3dadd( -29.9201, -75.0012, -8.31242, 1.4 ) }
    dend_26 { pt3dadd( -30.176, -76.1032, -8.49628, 1.18 ) }
    dend_26 { pt3dadd( -30.5473, -77.3655, -8.70869, 0.96 ) }
    dend_26 { pt3dadd( -30.9759, -78.4991, -8.94039, 1.11 ) }
    dend_26 { pt3dadd( -31.6912, -79.914, -9.3528, 0.88 ) }
    dend_26 { pt3dadd( -32.318, -80.9984, -9.71548, 0.74 ) }
    dend_26 { pt3dadd( -33.072, -82.0715, -10.1198, 0.96 ) }
    dend_26 { pt3dadd( -33.6649, -82.7678, -10.4356, 1.25 ) }
    dend_26 { pt3dadd( -34.573, -83.6219, -10.9109, 1.33 ) }
    dend_26 { pt3dadd( -35.776, -84.4955, -11.4882, 1.4 ) }
    // Section: dend_14, id: dend_14, parent: dend_0 (entry count 50/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 8.18257, 37.7003, -3.29549, 1.4 ) }
    dend_14 { pt3dadd( 7.67648, 39.3622, -3.94539, 1.4 ) }
    dend_14 { pt3dadd( 7.38222, 40.5265, -4.30433, 1.4 ) }
    dend_14 { pt3dadd( 6.97142, 42.2326, -4.58334, 1.25 ) }
    dend_14 { pt3dadd( 6.90628, 42.503, -4.58281, 1.25 ) }
    dend_14 { pt3dadd( 6.70972, 43.3261, -4.50903, 1.03 ) }
    dend_14 { pt3dadd( 6.47458, 44.3187, -4.38138, 1.03 ) }
    dend_14 { pt3dadd( 6.2785, 45.282, -4.15453, 1.18 ) }
    dend_14 { pt3dadd( 5.93826, 46.8015, -3.5683, 1.33 ) }
    dend_14 { pt3dadd( 5.60174, 48.1925, -2.84524, 1.33 ) }
    dend_14 { pt3dadd( 5.37003, 49.1706, -2.29982, 1.47 ) }
    dend_14 { pt3dadd( 5.21729, 49.8928, -1.8901, 1.47 ) }
    dend_14 { pt3dadd( 5.05091, 50.8936, -1.35738, 1.47 ) }
    dend_14 { pt3dadd( 4.80255, 53.0592, -0.341319, 1.4 ) }
    dend_14 { pt3dadd( 4.72308, 54.4192, 0.191737, 1.4 ) }
    dend_14 { pt3dadd( 4.714, 55.3164, 0.479954, 1.4 ) }
    dend_14 { pt3dadd( 4.75515, 56.5569, 0.820614, 1.62 ) }
    dend_14 { pt3dadd( 4.8531, 57.9948, 1.1282, 1.18 ) }
    dend_14 { pt3dadd( 4.98304, 59.1643, 1.27599, 1.18 ) }
    dend_14 { pt3dadd( 4.99742, 59.258, 1.27784, 1.18 ) }
    dend_14 { pt3dadd( 5.21472, 60.8078, 1.26054, 1.18 ) }
    dend_14 { pt3dadd( 5.3568, 62.0512, 1.24496, 1.47 ) }
    dend_14 { pt3dadd( 5.39243, 62.4411, 1.23929, 1.47 ) }
    dend_14 { pt3dadd( 5.50231, 63.7629, 1.22027, 1.4 ) }
    dend_14 { pt3dadd( 5.6184, 65.1628, 1.20276, 1.33 ) }
    dend_14 { pt3dadd( 5.75243, 66.8414, 1.18358, 1.33 ) }
    dend_14 { pt3dadd( 5.86352, 68.42, 1.16795, 1.62 ) }
    dend_14 { pt3dadd( 5.92006, 69.5685, 1.15469, 1.92 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 78/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 8.18257, 37.7003, -3.29549, 1.18 ) }
    dend_1 { pt3dadd( 9.81746, 38.0067, -3.18898, 1.18 ) }
    dend_1 { pt3dadd( 11.3827, 38.2059, -2.85227, 0.96 ) }
    dend_1 { pt3dadd( 12.2419, 38.2974, -2.64822, 1.25 ) }
    dend_1 { pt3dadd( 12.3419, 38.3117, -2.61737, 1.25 ) }
    dend_1 { pt3dadd( 13.794, 38.569, -2.16001, 1.25 ) }
    dend_1 { pt3dadd( 15.1438, 38.8808, -1.74053, 1.25 ) }
    dend_1 { pt3dadd( 17.5822, 39.4936, -0.985441, 1.18 ) }
    dend_1 { pt3dadd( 18.7111, 39.8357, -0.645273, 0.81 ) }
    dend_1 { pt3dadd( 20.2756, 40.4109, -0.157151, 0.96 ) }
    dend_1 { pt3dadd( 21.4711, 40.9806, 0.178251, 0.96 ) }
    dend_1 { pt3dadd( 22.405, 41.6193, 0.378204, 0.96 ) }
    dend_1 { pt3dadd( 22.4666, 41.673, 0.3813, 0.96 ) }
    dend_1 { pt3dadd( 23.4291, 42.6261, 0.206037, 0.96 ) }
    dend_1 { pt3dadd( 23.4928, 42.6934, 0.188568, 0.96 ) }
    dend_1 { pt3dadd( 24.3177, 43.5804, -0.125482, 1.18 ) }
    dend_1 { pt3dadd( 25.3859, 44.7255, -0.541965, 1.4 ) }
    dend_1 { pt3dadd( 26.2742, 45.6323, -0.883994, 1.33 ) }
    dend_1 { pt3dadd( 26.3778, 45.7322, -0.916602, 1.33 ) }
    dend_1 { pt3dadd( 27.4139, 46.6376, -1.16086, 1.18 ) }
    dend_1 { pt3dadd( 27.5993, 46.7707, -1.17527, 1.18 ) }
    dend_1 { pt3dadd( 28.4455, 47.2749, -1.12804, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_1 { pt3dadd( 28.6815, 47.3882, -1.07251, 1.18 ) }
    dend_1 { pt3dadd( 29.9071, 47.9116, -0.640989, 0.96 ) }
    dend_1 { pt3dadd( 31.103, 48.4085, -0.145454, 0.96 ) }
    dend_1 { pt3dadd( 32.7805, 49.1445, 0.6863, 1.03 ) }
    dend_1 { pt3dadd( 32.9051, 49.2094, 0.750351, 1.03 ) }
    dend_1 { pt3dadd( 34.758, 50.3961, 1.71241, 1.03 ) }
    dend_1 { pt3dadd( 34.8754, 50.4758, 1.77528, 1.03 ) }
    dend_1 { pt3dadd( 35.5439, 50.9927, 2.1483, 1.03 ) }
    dend_1 { pt3dadd( 36.4331, 51.8147, 2.66227, 1.18 ) }
    dend_1 { pt3dadd( 37.5131, 53.0921, 3.16254, 1.4 ) }
    dend_1 { pt3dadd( 38.3636, 54.2093, 3.46263, 1.62 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 11/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 5.07001, 40.4418, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 6.9617, 55.322, -0.593792, 0.15 ) }
    axon_1 { pt3dadd( 8.85338, 70.2023, -0.593792, 0.15 ) }
    // Section: dend_102, id: dend_102, parent: dend_98 (entry count 14/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 5.16668, -131.105, -90.2803, 0.52 ) }
    dend_102 { pt3dadd( 4.44672, -131.634, -90.7824, 0.52 ) }
    dend_102 { pt3dadd( 3.54497, -132.344, -91.3535, 0.52 ) }
    dend_102 { pt3dadd( 3.20135, -132.663, -91.5979, 0.96 ) }
    dend_102 { pt3dadd( 2.48928, -133.479, -92.2274, 1.33 ) }
    dend_102 { pt3dadd( 2.12223, -133.998, -92.6163, 0.81 ) }
    dend_102 { pt3dadd( 1.70699, -134.766, -93.1611, 0.52 ) }
    dend_102 { pt3dadd( 1.69617, -134.811, -93.1884, 0.52 ) }
    dend_102 { pt3dadd( 1.77475, -135.857, -93.8516, 0.88 ) }
    dend_102 { pt3dadd( 2.01176, -136.625, -94.3837, 1.25 ) }
    dend_102 { pt3dadd( 2.22626, -137.042, -94.7014, 1.47 ) }
    dend_102 { pt3dadd( 2.58822, -137.595, -95.1759, 1.47 ) }
    dend_102 { pt3dadd( 3.06436, -138.207, -95.7347, 0.88 ) }
    dend_102 { pt3dadd( 3.79034, -139.091, -96.5727, 0.88 ) }
    dend_102 { pt3dadd( 4.16423, -139.532, -97.0344, 0.37 ) }
    dend_102 { pt3dadd( 4.54698, -140.05, -97.5983, 0.66 ) }
    dend_102 { pt3dadd( 4.57139, -140.095, -97.6495, 0.66 ) }
    dend_102 { pt3dadd( 4.67026, -140.399, -97.9922, 0.96 ) }
    dend_102 { pt3dadd( 4.76578, -141.236, -98.8274, 1.11 ) }
    dend_102 { pt3dadd( 4.67153, -142.457, -99.8104, 0.44 ) }
    dend_102 { pt3dadd( 4.55619, -143.12, -100.27, 0.44 ) }
    dend_102 { pt3dadd( 4.34435, -144.114, -100.92, 0.52 ) }
    dend_102 { pt3dadd( 4.2232, -144.662, -101.279, 0.74 ) }
    dend_102 { pt3dadd( 4.0633, -145.273, -101.647, 0.74 ) }
    dend_102 { pt3dadd( 3.82932, -146.041, -102.095, 1.03 ) }
    dend_102 { pt3dadd( 3.47615, -147.321, -102.874, 0.88 ) }
    dend_102 { pt3dadd( 3.20544, -148.554, -103.687, 1.18 ) }
    dend_102 { pt3dadd( 3.03317, -149.737, -104.572, 0.96 ) }
    dend_102 { pt3dadd( 2.97068, -150.693, -105.485, 0.59 ) }
    dend_102 { pt3dadd( 2.95235, -151.748, -106.675, 0.29 ) }
    dend_102 { pt3dadd( 2.96521, -152.522, -107.657, 0.88 ) }
    dend_102 { pt3dadd( 2.96594, -152.749, -107.968, 1.47 ) }
    dend_102 { pt3dadd( 2.95955, -153.696, -109.282, 1.33 ) }
    dend_102 { pt3dadd( 2.91017, -155.111, -111.213, 0.52 ) }
    dend_102 { pt3dadd( 2.88042, -155.489, -111.697, 0.29 ) }
    dend_102 { pt3dadd( 2.82047, -155.823, -112.031, 0.96 ) }
    dend_102 { pt3dadd( 2.55653, -156.762, -112.799, 1.77 ) }
    dend_102 { pt3dadd( 2.44393, -157.159, -113.103, 1.77 ) }
    dend_102 { pt3dadd( 2.18908, -158.037, -113.683, 1.11 ) }
    dend_102 { pt3dadd( 2.02074, -158.756, -114.232, 0.37 ) }
    dend_102 { pt3dadd( 1.95835, -159.243, -114.792, 0.29 ) }
    dend_102 { pt3dadd( 1.92454, -159.954, -115.803, 0.74 ) }
    dend_102 { pt3dadd( 1.99003, -160.968, -117.441, 1.33 ) }
    dend_102 { pt3dadd( 1.99414, -160.998, -117.495, 1.33 ) }
    dend_102 { pt3dadd( 2.18824, -161.916, -119.384, 1.55 ) }
    dend_102 { pt3dadd( 2.46455, -163.07, -121.93, 0.96 ) }
    dend_102 { pt3dadd( 2.47033, -163.098, -121.991, 0.96 ) }
    dend_102 { pt3dadd( 2.51916, -163.457, -122.698, 1.18 ) }
    dend_102 { pt3dadd( 2.52133, -163.486, -122.745, 1.18 ) }
    dend_102 { pt3dadd( 2.53449, -164.647, -124.262, 0.44 ) }
    dend_102 { pt3dadd( 2.4409, -165.276, -124.805, 0.37 ) }
    dend_102 { pt3dadd( 2.30897, -165.812, -125.313, 0.52 ) }
    dend_102 { pt3dadd( 2.20175, -166.231, -125.801, 0.81 ) }
    dend_102 { pt3dadd( 2.08112, -166.732, -126.415, 1.33 ) }
    dend_102 { pt3dadd( 2.01809, -167.071, -126.844, 0.96 ) }
    dend_102 { pt3dadd( 1.91262, -168.143, -128.225, 1.25 ) }
    dend_102 { pt3dadd( 1.92211, -170.363, -131.185, 0.52 ) }
    dend_102 { pt3dadd( 2.01565, -171.397, -132.633, 0.44 ) }
    dend_102 { pt3dadd( 2.11426, -171.91, -133.376, 0.59 ) }
    dend_102 { pt3dadd( 2.36787, -172.759, -134.637, 0.59 ) }
    dend_102 { pt3dadd( 2.72121, -173.565, -135.822, 0.74 ) }
    dend_102 { pt3dadd( 2.97891, -173.982, -136.387, 1.18 ) }
    dend_102 { pt3dadd( 3.00766, -174.021, -136.428, 1.18 ) }
    dend_102 { pt3dadd( 3.33886, -174.402, -136.802, 1.47 ) }
    dend_102 { pt3dadd( 3.3745, -174.438, -136.838, 1.47 ) }
    dend_102 { pt3dadd( 4.21516, -175.315, -137.546, 1.18 ) }
    dend_102 { pt3dadd( 4.25207, -175.36, -137.576, 1.18 ) }
    dend_102 { pt3dadd( 4.59269, -175.895, -137.865, 1.18 ) }
    dend_102 { pt3dadd( 5.0111, -176.823, -138.338, 0.52 ) }
    dend_102 { pt3dadd( 5.17277, -177.445, -138.637, 0.29 ) }
    dend_102 { pt3dadd( 5.27852, -178.161, -138.989, 0.29 ) }
    dend_102 { pt3dadd( 5.31577, -178.654, -139.239, 0.88 ) }
    dend_102 { pt3dadd( 5.33279, -179.33, -139.615, 1.11 ) }
    dend_102 { pt3dadd( 5.30138, -180.626, -140.374, 0.81 ) }
    dend_102 { pt3dadd( 5.26637, -181.452, -140.943, 0.37 ) }
    dend_102 { pt3dadd( 5.22613, -182.324, -141.819, 0.29 ) }
    dend_102 { pt3dadd( 5.19891, -182.724, -142.338, 0.96 ) }
    dend_102 { pt3dadd( 5.19364, -182.762, -142.401, 0.96 ) }
    dend_102 { pt3dadd( 5.11207, -183.089, -143.046, 1.18 ) }
    dend_102 { pt3dadd( 4.82765, -183.785, -144.535, 1.11 ) }
    dend_102 { pt3dadd( 4.12644, -184.995, -147.198, 0.44 ) }
    dend_102 { pt3dadd( 3.84388, -185.368, -148.017, 0.74 ) }
    dend_102 { pt3dadd( 3.29302, -186.015, -149.323, 0.59 ) }
    dend_102 { pt3dadd( 2.9504, -186.396, -150.008, 0.81 ) }
    dend_102 { pt3dadd( 2.42164, -186.942, -150.83, 0.44 ) }
    dend_102 { pt3dadd( 2.07263, -187.339, -151.199, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_102 { pt3dadd( 2.03817, -187.39, -151.22, 0.59 ) }
    dend_102 { pt3dadd( 1.67011, -188.145, -151.444, 0.52 ) }
    dend_102 { pt3dadd( 1.44993, -188.75, -151.585, 1.03 ) }
    dend_102 { pt3dadd( 1.253, -189.466, -151.764, 1.4 ) }
    dend_102 { pt3dadd( 1.00735, -190.562, -152.024, 1.33 ) }
    dend_102 { pt3dadd( 0.854097, -191.326, -152.26, 1.11 ) }
    dend_102 { pt3dadd( 0.75516, -192.079, -152.62, 0.59 ) }
    dend_102 { pt3dadd( 0.75281, -192.135, -152.655, 0.59 ) }
    dend_102 { pt3dadd( 0.785904, -192.631, -153.064, 0.44 ) }
    dend_102 { pt3dadd( 0.927013, -193.413, -153.893, 0.44 ) }
    dend_102 { pt3dadd( 1.15559, -194.27, -154.974, 0.74 ) }
    dend_102 { pt3dadd( 1.52673, -195.477, -156.636, 0.74 ) }
    dend_102 { pt3dadd( 1.61981, -195.765, -157.036, 1.25 ) }
    dend_102 { pt3dadd( 1.88311, -196.659, -158.276, 1.55 ) }
    dend_102 { pt3dadd( 2.13686, -197.62, -159.625, 1.77 ) }
    dend_102 { pt3dadd( 2.36307, -198.796, -161.288, 0.74 ) }
    dend_102 { pt3dadd( 2.40404, -199.429, -162.106, 0.52 ) }
    dend_102 { pt3dadd( 2.36638, -199.864, -162.608, 0.52 ) }
    dend_102 { pt3dadd( 2.1838, -200.795, -163.622, 0.96 ) }
    dend_102 { pt3dadd( 2.05522, -201.192, -163.996, 1.18 ) }
    dend_102 { pt3dadd( 1.59401, -202.167, -164.819, 0.52 ) }
    dend_102 { pt3dadd( 1.29425, -202.645, -165.203, 0.52 ) }
    dend_102 { pt3dadd( 1.07691, -202.932, -165.441, 0.66 ) }
    dend_102 { pt3dadd( 1.04154, -202.972, -165.476, 0.66 ) }
    dend_102 { pt3dadd( 0.736069, -203.269, -165.718, 0.44 ) }
    dend_102 { pt3dadd( -0.0695889, -203.956, -166.265, 0.29 ) }
    dend_102 { pt3dadd( -0.118348, -203.989, -166.287, 0.29 ) }
    dend_102 { pt3dadd( -0.500883, -204.205, -166.437, 0.52 ) }
    dend_102 { pt3dadd( -0.89011, -204.412, -166.552, 0.81 ) }
    dend_102 { pt3dadd( -1.35372, -204.678, -166.63, 0.96 ) }
    dend_102 { pt3dadd( -1.80447, -204.953, -166.651, 1.11 ) }
    dend_102 { pt3dadd( -2.41358, -205.371, -166.595, 0.29 ) }
    dend_102 { pt3dadd( -2.49003, -205.429, -166.585, 0.29 ) }
    dend_102 { pt3dadd( -3.15089, -205.944, -166.464, 0.29 ) }
    dend_102 { pt3dadd( -3.75531, -206.404, -166.336, 0.88 ) }
    dend_102 { pt3dadd( -3.97341, -206.566, -166.283, 1.03 ) }
    dend_102 { pt3dadd( -4.47272, -206.904, -166.163, 1.18 ) }
    dend_102 { pt3dadd( -5.24494, -207.341, -166.011, 0.29 ) }
    dend_102 { pt3dadd( -6.17788, -207.775, -165.878, 0.29 ) }
    dend_102 { pt3dadd( -6.57032, -207.923, -165.857, 0.59 ) }
    dend_102 { pt3dadd( -6.62961, -207.943, -165.86, 0.59 ) }
    dend_102 { pt3dadd( -7.32139, -208.182, -165.956, 0.59 ) }
    dend_102 { pt3dadd( -7.99976, -208.457, -166.117, 1.11 ) }
    dend_102 { pt3dadd( -8.57186, -208.747, -166.308, 1.4 ) }
    dend_102 { pt3dadd( -9.26119, -209.171, -166.587, 0.96 ) }
    dend_102 { pt3dadd( -9.94719, -209.685, -166.89, 0.59 ) }
    dend_102 { pt3dadd( -10.7288, -210.378, -167.249, 0.37 ) }
    dend_102 { pt3dadd( -11.3086, -210.994, -167.518, 0.37 ) }
    dend_102 { pt3dadd( -11.6555, -211.401, -167.651, 0.74 ) }
    dend_102 { pt3dadd( -11.695, -211.451, -167.664, 0.74 ) }
    dend_102 { pt3dadd( -12.0779, -211.999, -167.724, 0.74 ) }
    dend_102 { pt3dadd( -12.3732, -212.445, -167.743, 1.03 ) }
    dend_102 { pt3dadd( -12.7112, -212.971, -167.732, 1.33 ) }
    dend_102 { pt3dadd( -13.2278, -213.688, -167.689, 1.47 ) }
    dend_102 { pt3dadd( -13.8134, -214.436, -167.636, 0.37 ) }
    dend_102 { pt3dadd( -14.534, -215.329, -167.572, 1.18 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 56/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 5.16668, -131.105, -90.2803, 0.52 ) }
    dend_99 { pt3dadd( 5.91007, -131.89, -89.068, 0.52 ) }
    dend_99 { pt3dadd( 6.76849, -132.895, -87.8096, 0.44 ) }
    dend_99 { pt3dadd( 7.20217, -133.471, -87.2477, 0.88 ) }
    dend_99 { pt3dadd( 7.23601, -133.522, -87.2078, 0.88 ) }
    dend_99 { pt3dadd( 7.51711, -133.991, -86.9013, 1.03 ) }
    dend_99 { pt3dadd( 7.81131, -134.534, -86.6018, 0.81 ) }
    dend_99 { pt3dadd( 8.1328, -135.279, -86.3874, 0.29 ) }
    dend_99 { pt3dadd( 8.43956, -136.121, -86.2533, 0.22 ) }
    dend_99 { pt3dadd( 8.65107, -136.766, -86.1687, 0.52 ) }
    dend_99 { pt3dadd( 8.75186, -137.114, -86.1228, 0.74 ) }
    dend_99 { pt3dadd( 8.96952, -138.023, -86.005, 0.29 ) }
    dend_99 { pt3dadd( 9.11748, -138.821, -85.8973, 0.29 ) }
    dend_99 { pt3dadd( 9.22556, -139.616, -85.7943, 0.74 ) }
    dend_99 { pt3dadd( 9.26838, -140.07, -85.7299, 1.03 ) }
    dend_99 { pt3dadd( 9.31198, -140.633, -85.6473, 0.96 ) }
    dend_99 { pt3dadd( 9.34253, -141.229, -85.5607, 0.59 ) }
    dend_99 { pt3dadd( 9.38814, -142.072, -85.4128, 0.22 ) }
    dend_99 { pt3dadd( 9.43758, -142.59, -85.3048, 0.37 ) }
    dend_99 { pt3dadd( 9.4615, -142.72, -85.2753, 0.37 ) }
    dend_99 { pt3dadd( 9.62647, -143.248, -85.1663, 0.37 ) }
    dend_99 { pt3dadd( 9.65582, -143.312, -85.1557, 0.37 ) }
    dend_99 { pt3dadd( 10.1943, -144.24, -85.1411, 0.29 ) }
    dend_99 { pt3dadd( 10.6044, -144.863, -85.204, 0.88 ) }
    dend_99 { pt3dadd( 10.8658, -145.255, -85.2684, 1.18 ) }
    dend_99 { pt3dadd( 11.3669, -146.037, -85.4284, 0.29 ) }
    dend_99 { pt3dadd( 11.8303, -146.781, -85.611, 0.29 ) }
    dend_99 { pt3dadd( 12.5118, -147.929, -85.8611, 0.52 ) }
    dend_99 { pt3dadd( 12.799, -148.45, -85.962, 0.81 ) }
    dend_99 { pt3dadd( 13.2446, -149.298, -86.0747, 0.22 ) }
    dend_99 { pt3dadd( 13.4408, -149.7, -86.102, 0.59 ) }
    dend_99 { pt3dadd( 13.4796, -149.788, -86.1035, 0.59 ) }
    dend_99 { pt3dadd( 14.0347, -151.176, -86.0786, 0.44 ) }
    dend_99 { pt3dadd( 14.4012, -152.157, -86.0277, 0.66 ) }
    dend_99 { pt3dadd( 14.6416, -152.821, -86.0065, 0.59 ) }
    dend_99 { pt3dadd( 14.8407, -153.379, -86.0178, 0.44 ) }
    dend_99 { pt3dadd( 15.1612, -154.294, -86.0852, 0.96 ) }
    dend_99 { pt3dadd( 15.4296, -154.988, -86.2191, 1.33 ) }
    dend_99 { pt3dadd( 15.7572, -155.682, -86.4774, 0.59 ) }
    dend_99 { pt3dadd( 15.7969, -155.748, -86.5092, 0.59 ) }
    dend_99 { pt3dadd( 16.2188, -156.301, -86.8525, 0.59 ) }
    dend_99 { pt3dadd( 16.2536, -156.343, -86.8851, 0.59 ) }
    dend_99 { pt3dadd( 16.9543, -157.239, -87.6969, 0.29 ) }
    dend_99 { pt3dadd( 17.2492, -157.677, -88.1234, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_99 { pt3dadd( 17.482, -158.092, -88.488, 0.44 ) }
    dend_99 { pt3dadd( 17.788, -158.723, -88.9879, 0.44 ) }
    dend_99 { pt3dadd( 18.1156, -159.548, -89.5524, 1.33 ) }
    dend_99 { pt3dadd( 18.4806, -160.546, -90.1619, 1.11 ) }
    dend_99 { pt3dadd( 18.783, -161.481, -90.6573, 0.52 ) }
    dend_99 { pt3dadd( 19.0826, -162.334, -91.1026, 0.29 ) }
    dend_99 { pt3dadd( 19.1045, -162.395, -91.1329, 0.29 ) }
    dend_99 { pt3dadd( 19.327, -162.921, -91.3451, 0.29 ) }
    dend_99 { pt3dadd( 19.7686, -163.597, -91.5468, 0.29 ) }
    dend_99 { pt3dadd( 20.0816, -163.91, -91.586, 0.96 ) }
    dend_99 { pt3dadd( 20.5095, -164.155, -91.5849, 1.25 ) }
    // Section: dend_97, id: dend_97, parent: dend_93 (entry count 11/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -5.46514, -233.093, -62.1281, 0.29 ) }
    dend_97 { pt3dadd( -5.98665, -233.66, -61.0963, 0.29 ) }
    dend_97 { pt3dadd( -6.25912, -234.094, -60.4111, 0.29 ) }
    dend_97 { pt3dadd( -6.34008, -234.233, -60.2026, 0.74 ) }
    dend_97 { pt3dadd( -6.36094, -234.269, -60.1502, 0.74 ) }
    dend_97 { pt3dadd( -6.50405, -234.5, -59.8241, 0.74 ) }
    dend_97 { pt3dadd( -6.88494, -234.961, -59.1906, 0.29 ) }
    dend_97 { pt3dadd( -7.24097, -235.321, -58.7901, 0.29 ) }
    dend_97 { pt3dadd( -7.4388, -235.474, -58.6246, 0.74 ) }
    dend_97 { pt3dadd( -7.62975, -235.584, -58.5041, 1.11 ) }
    dend_97 { pt3dadd( -7.96176, -235.766, -58.3185, 1.11 ) }
    dend_97 { pt3dadd( -8.85944, -236.237, -57.8835, 0.29 ) }
    dend_97 { pt3dadd( -9.15257, -236.405, -57.7467, 0.37 ) }
    dend_97 { pt3dadd( -9.53071, -236.69, -57.5034, 0.37 ) }
    dend_97 { pt3dadd( -9.90582, -237.071, -57.1695, 0.66 ) }
    dend_97 { pt3dadd( -10.2391, -237.524, -56.7808, 0.52 ) }
    dend_97 { pt3dadd( -10.4133, -237.82, -56.5265, 0.96 ) }
    dend_97 { pt3dadd( -10.698, -238.387, -56.0341, 1.33 ) }
    dend_97 { pt3dadd( -11.1327, -239.191, -55.3334, 0.59 ) }
    dend_97 { pt3dadd( -11.3214, -239.546, -55.0032, 0.37 ) }
    dend_97 { pt3dadd( -11.4714, -239.822, -54.7341, 0.22 ) }
    dend_97 { pt3dadd( -11.7465, -240.295, -54.2705, 0.22 ) }
    dend_97 { pt3dadd( -11.9861, -240.703, -53.8842, 0.66 ) }
    dend_97 { pt3dadd( -12.3011, -241.255, -53.4237, 0.66 ) }
    dend_97 { pt3dadd( -12.7777, -242.182, -52.7729, 0.52 ) }
    dend_97 { pt3dadd( -12.841, -242.326, -52.6813, 0.29 ) }
    dend_97 { pt3dadd( -13.0095, -242.753, -52.4533, 0.74 ) }
    dend_97 { pt3dadd( -13.0704, -242.953, -52.3447, 0.74 ) }
    dend_97 { pt3dadd( -13.3199, -243.903, -51.838, 0.37 ) }
    dend_97 { pt3dadd( -13.5183, -244.732, -51.427, 0.44 ) }
    dend_97 { pt3dadd( -13.6312, -245.143, -51.2465, 0.59 ) }
    dend_97 { pt3dadd( -13.8353, -245.85, -50.9355, 0.52 ) }
    dend_97 { pt3dadd( -14.3041, -247.299, -50.2779, 0.37 ) }
    dend_97 { pt3dadd( -14.5383, -247.917, -49.9813, 0.37 ) }
    dend_97 { pt3dadd( -14.8427, -248.585, -49.6432, 0.29 ) }
    dend_97 { pt3dadd( -15.2528, -249.369, -49.2249, 0.59 ) }
    dend_97 { pt3dadd( -15.3395, -249.525, -49.1452, 0.88 ) }
    dend_97 { pt3dadd( -15.6407, -250.0, -48.9128, 0.66 ) }
    dend_97 { pt3dadd( -16.0479, -250.536, -48.702, 0.15 ) }
    dend_97 { pt3dadd( -16.5259, -251.063, -48.4424, 0.15 ) }
    dend_97 { pt3dadd( -16.5661, -251.098, -48.4203, 0.15 ) }
    dend_97 { pt3dadd( -17.0744, -251.461, -48.1874, 0.59 ) }
    dend_97 { pt3dadd( -17.4309, -251.714, -48.0618, 0.88 ) }
    dend_97 { pt3dadd( -17.471, -251.744, -48.0514, 0.88 ) }
    dend_97 { pt3dadd( -17.7736, -251.996, -47.9964, 0.88 ) }
    dend_97 { pt3dadd( -18.2372, -252.435, -47.9464, 0.88 ) }
    dend_97 { pt3dadd( -18.9288, -253.227, -47.9216, 0.29 ) }
    dend_97 { pt3dadd( -19.2649, -253.676, -47.9277, 0.29 ) }
    dend_97 { pt3dadd( -19.5323, -254.112, -47.946, 0.66 ) }
    dend_97 { pt3dadd( -19.733, -254.491, -47.9573, 0.81 ) }
    dend_97 { pt3dadd( -19.9781, -255.07, -47.9726, 0.66 ) }
    dend_97 { pt3dadd( -20.2433, -255.849, -47.9778, 0.29 ) }
    dend_97 { pt3dadd( -20.3599, -256.257, -47.9676, 0.81 ) }
    dend_97 { pt3dadd( -20.4459, -256.554, -47.9538, 0.81 ) }
    dend_97 { pt3dadd( -20.6771, -257.251, -47.8864, 0.22 ) }
    dend_97 { pt3dadd( -20.8415, -257.716, -47.7863, 0.22 ) }
    dend_97 { pt3dadd( -20.9378, -257.996, -47.6955, 0.81 ) }
    dend_97 { pt3dadd( -21.0242, -258.224, -47.5972, 0.96 ) }
    dend_97 { pt3dadd( -21.2875, -258.909, -47.1667, 0.22 ) }
    dend_97 { pt3dadd( -21.4174, -259.265, -46.7647, 0.22 ) }
    dend_97 { pt3dadd( -21.5419, -259.654, -46.04, 0.74 ) }
    dend_97 { pt3dadd( -21.5759, -259.77, -45.7652, 1.18 ) }
    dend_97 { pt3dadd( -21.626, -259.956, -45.2627, 0.74 ) }
    dend_97 { pt3dadd( -21.7389, -260.352, -44.0565, 0.59 ) }
    dend_97 { pt3dadd( -21.8975, -260.856, -42.4073, 0.44 ) }
    dend_97 { pt3dadd( -22.0361, -261.3, -41.1082, 0.37 ) }
    dend_97 { pt3dadd( -22.0453, -261.326, -41.047, 0.37 ) }
    dend_97 { pt3dadd( -22.1022, -261.482, -40.7321, 0.66 ) }
    dend_97 { pt3dadd( -22.1364, -261.682, -40.4375, 0.74 ) }
    dend_97 { pt3dadd( -22.1918, -262.312, -39.7266, 0.29 ) }
    dend_97 { pt3dadd( -22.212, -262.818, -39.241, 0.29 ) }
    dend_97 { pt3dadd( -22.2237, -263.321, -38.7288, 0.29 ) }
    dend_97 { pt3dadd( -22.2203, -263.45, -38.5912, 0.74 ) }
    dend_97 { pt3dadd( -22.0657, -264.745, -37.1133, 0.66 ) }
    dend_97 { pt3dadd( -21.921, -265.325, -36.3924, 0.22 ) }
    dend_97 { pt3dadd( -21.8467, -265.481, -36.1536, 0.22 ) }
    dend_97 { pt3dadd( -21.6286, -265.778, -35.5296, 0.44 ) }
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 88/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -5.46514, -233.093, -62.1281, 0.37 ) }
    dend_94 { pt3dadd( -5.1672, -235.535, -64.1281, 0.37 ) }
    dend_94 { pt3dadd( -4.98685, -236.882, -65.1207, 0.37 ) }
    dend_94 { pt3dadd( -4.9762, -236.964, -65.1723, 0.37 ) }
    dend_94 { pt3dadd( -4.87772, -237.84, -65.6642, 0.81 ) }
    dend_94 { pt3dadd( -4.73463, -239.154, -66.3372, 0.88 ) }
    dend_94 { pt3dadd( -4.67571, -239.704, -66.5968, 0.88 ) }
    dend_94 { pt3dadd( -4.54653, -240.827, -67.0338, 0.52 ) }
    dend_94 { pt3dadd( -4.43333, -242.111, -67.5043, 0.52 ) }
    dend_94 { pt3dadd( -4.39958, -243.301, -67.9685, 0.52 ) }
    dend_94 { pt3dadd( -4.44015, -243.965, -68.2306, 0.96 ) }
    dend_94 { pt3dadd( -4.51928, -244.55, -68.4502, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_94 { pt3dadd( -4.83809, -246.135, -69.0664, 0.37 ) }
    dend_94 { pt3dadd( -5.1001, -247.083, -69.4344, 0.29 ) }
    dend_94 { pt3dadd( -5.4471, -248.019, -69.8108, 0.59 ) }
    dend_94 { pt3dadd( -5.85061, -248.89, -70.1401, 0.96 ) }
    dend_94 { pt3dadd( -6.18531, -249.525, -70.3541, 1.18 ) }
    dend_94 { pt3dadd( -6.23268, -249.608, -70.3764, 1.18 ) }
    dend_94 { pt3dadd( -6.53218, -250.114, -70.5039, 1.18 ) }
    dend_94 { pt3dadd( -7.01618, -251.038, -70.7671, 1.03 ) }
    dend_94 { pt3dadd( -7.49172, -252.125, -71.0753, 0.59 ) }
    dend_94 { pt3dadd( -7.75273, -252.852, -71.2512, 0.52 ) }
    dend_94 { pt3dadd( -7.94863, -253.457, -71.3604, 0.66 ) }
    dend_94 { pt3dadd( -8.44539, -255.0, -71.5273, 0.29 ) }
    dend_94 { pt3dadd( -8.79122, -256.072, -71.5435, 0.44 ) }
    dend_94 { pt3dadd( -8.9436, -256.563, -71.4938, 0.52 ) }
    dend_94 { pt3dadd( -9.44245, -258.127, -71.2001, 0.66 ) }
    dend_94 { pt3dadd( -9.75344, -259.015, -70.98, 0.37 ) }
    dend_94 { pt3dadd( -10.1347, -260.003, -70.6896, 0.88 ) }
    dend_94 { pt3dadd( -10.3816, -260.567, -70.5017, 1.18 ) }
    dend_94 { pt3dadd( -10.9042, -261.672, -70.1559, 0.96 ) }
    dend_94 { pt3dadd( -11.2641, -262.456, -69.9491, 0.66 ) }
    dend_94 { pt3dadd( -11.4947, -263.041, -69.8145, 1.03 ) }
    dend_94 { pt3dadd( -11.8165, -264.144, -69.5603, 0.52 ) }
    dend_94 { pt3dadd( -12.0653, -265.526, -69.2467, 0.52 ) }
    dend_94 { pt3dadd( -12.134, -266.462, -69.0559, 1.11 ) }
    dend_94 { pt3dadd( -12.0969, -267.385, -68.8877, 1.11 ) }
    dend_94 { pt3dadd( -11.9258, -268.848, -68.6602, 0.74 ) }
    dend_94 { pt3dadd( -11.7923, -269.672, -68.5512, 0.44 ) }
    dend_94 { pt3dadd( -11.5561, -270.922, -68.4091, 0.59 ) }
    dend_94 { pt3dadd( -11.2502, -272.628, -68.2585, 0.59 ) }
    dend_94 { pt3dadd( -11.0416, -274.261, -68.1562, 0.59 ) }
    dend_94 { pt3dadd( -10.934, -275.65, -68.0915, 0.52 ) }
    dend_94 { pt3dadd( -10.9238, -276.541, -68.0686, 1.18 ) }
    dend_94 { pt3dadd( -10.9456, -277.116, -68.0513, 1.33 ) }
    dend_94 { pt3dadd( -11.102, -278.666, -67.9994, 1.18 ) }
    dend_94 { pt3dadd( -11.2969, -279.903, -67.9399, 0.88 ) }
    dend_94 { pt3dadd( -11.4894, -280.896, -67.8832, 0.52 ) }
    dend_94 { pt3dadd( -11.69, -282.006, -67.8235, 0.66 ) }
    dend_94 { pt3dadd( -11.7014, -282.121, -67.8147, 0.66 ) }
    dend_94 { pt3dadd( -11.6872, -283.076, -67.7355, 0.81 ) }
    dend_94 { pt3dadd( -11.6147, -284.168, -67.6401, 0.44 ) }
    dend_94 { pt3dadd( -11.4767, -285.351, -67.5313, 0.44 ) }
    dend_94 { pt3dadd( -11.2486, -286.798, -67.389, 0.44 ) }
    dend_94 { pt3dadd( -10.8544, -288.63, -67.1916, 0.37 ) }
    dend_94 { pt3dadd( -10.5525, -289.824, -67.0499, 0.29 ) }
    // Section: dend_65, id: dend_65, parent: dend_41 (entry count 44/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -3.28474, -44.2305, -4.04363, 1.03 ) }
    dend_65 { pt3dadd( -4.83641, -44.7008, -3.73051, 1.03 ) }
    dend_65 { pt3dadd( -5.88483, -45.1889, -3.35486, 1.03 ) }
    dend_65 { pt3dadd( -7.1544, -45.9683, -2.81969, 0.96 ) }
    dend_65 { pt3dadd( -7.99025, -46.6167, -2.45362, 0.96 ) }
    dend_65 { pt3dadd( -8.09897, -46.7102, -2.40525, 0.96 ) }
    dend_65 { pt3dadd( -10.2289, -48.7944, -1.46955, 0.81 ) }
    dend_65 { pt3dadd( -10.9917, -49.7637, -1.0956, 1.11 ) }
    dend_65 { pt3dadd( -11.7334, -50.82, -0.718775, 1.11 ) }
    dend_65 { pt3dadd( -12.683, -52.2297, -0.239931, 1.03 ) }
    dend_65 { pt3dadd( -12.7307, -52.2969, -0.218001, 1.03 ) }
    dend_65 { pt3dadd( -13.7584, -53.6159, 0.239485, 1.03 ) }
    dend_65 { pt3dadd( -14.5107, -54.5275, 0.519204, 1.25 ) }
    dend_65 { pt3dadd( -15.1489, -55.2792, 0.814022, 1.4 ) }
    dend_65 { pt3dadd( -15.5857, -55.7791, 1.05132, 1.4 ) }
    dend_65 { pt3dadd( -16.4135, -56.7681, 1.60626, 1.25 ) }
    dend_65 { pt3dadd( -17.2514, -57.942, 2.26333, 1.11 ) }
    dend_65 { pt3dadd( -17.685, -58.6854, 2.66346, 1.11 ) }
    dend_65 { pt3dadd( -18.128, -59.6768, 3.14352, 1.03 ) }
    dend_65 { pt3dadd( -18.1805, -59.8238, 3.20086, 1.03 ) }
    dend_65 { pt3dadd( -18.5323, -60.9079, 3.47695, 0.81 ) }
    dend_65 { pt3dadd( -18.9007, -62.0952, 3.6331, 0.96 ) }
    dend_65 { pt3dadd( -19.291, -63.3909, 3.69851, 0.96 ) }
    dend_65 { pt3dadd( -19.7159, -64.8619, 3.72752, 0.81 ) }
    dend_65 { pt3dadd( -19.9829, -65.9435, 3.69545, 0.74 ) }
    dend_65 { pt3dadd( -20.3454, -67.5643, 3.58675, 0.81 ) }
    dend_65 { pt3dadd( -20.5107, -68.448, 3.49154, 1.11 ) }
    dend_65 { pt3dadd( -20.6857, -69.7188, 3.33456, 1.11 ) }
    dend_65 { pt3dadd( -20.7668, -70.6819, 3.20601, 1.11 ) }
    dend_65 { pt3dadd( -20.8503, -72.5515, 2.95516, 0.88 ) }
    dend_65 { pt3dadd( -20.8618, -73.4914, 2.8666, 1.11 ) }
    dend_65 { pt3dadd( -20.8485, -74.5948, 2.77859, 1.11 ) }
    dend_65 { pt3dadd( -20.8324, -75.4489, 2.69862, 1.33 ) }
    dend_65 { pt3dadd( -20.8292, -76.3351, 2.61382, 0.96 ) }
    dend_65 { pt3dadd( -20.8461, -77.3951, 2.5155, 1.11 ) }
    dend_65 { pt3dadd( -20.8579, -78.6898, 2.40434, 1.11 ) }
    dend_65 { pt3dadd( -20.8432, -79.7695, 2.29073, 1.4 ) }
    dend_65 { pt3dadd( -20.8308, -80.7169, 2.16927, 1.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 82/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -3.28474, -44.2305, -4.04363, 1.47 ) }
    dend_42 { pt3dadd( -3.26969, -45.6776, -4.06622, 1.47 ) }
    dend_42 { pt3dadd( -3.26042, -46.5695, -4.08014, 1.47 ) }
    dend_42 { pt3dadd( -3.24021, -48.5124, -4.11046, 1.47 ) }
    dend_42 { pt3dadd( -3.22674, -49.8082, -4.13069, 1.62 ) }
    dend_42 { pt3dadd( -3.21025, -51.3941, -4.15544, 1.92 ) }
    dend_42 { pt3dadd( -3.1943, -52.9282, -4.17938, 1.92 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -35.776, -84.4955, -11.4882, 0.88 ) }
    dend_30 { pt3dadd( -36.9219, -84.5922, -11.2351, 0.88 ) }
    dend_30 { pt3dadd( -37.2678, -84.6418, -11.1848, 1.11 ) }
    dend_30 { pt3dadd( -37.6687, -84.7198, -11.1673, 0.88 ) }
    dend_30 { pt3dadd( -38.1725, -84.8279, -11.1632, 0.81 ) }
    dend_30 { pt3dadd( -38.7628, -84.9876, -11.1845, 0.74 ) }
    dend_30 { pt3dadd( -39.3227, -85.1817, -11.2179, 0.96 ) }
    dend_30 { pt3dadd( -39.8721, -85.4348, -11.3049, 0.96 ) }
    dend_30 { pt3dadd( -40.6113, -85.8573, -11.432, 0.81 ) }
    dend_30 { pt3dadd( -40.6449, -85.8813, -11.4378, 0.81 ) }
    dend_30 { pt3dadd( -41.2305, -86.3784, -11.5376, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_30 { pt3dadd( -41.7268, -86.8567, -11.6194, 0.74 ) }
    dend_30 { pt3dadd( -41.9022, -87.0333, -11.6412, 1.03 ) }
    dend_30 { pt3dadd( -42.236, -87.3607, -11.6717, 1.11 ) }
    dend_30 { pt3dadd( -42.802, -87.8769, -11.6978, 1.11 ) }
    dend_30 { pt3dadd( -42.8463, -87.9133, -11.7002, 1.11 ) }
    dend_30 { pt3dadd( -43.5168, -88.3874, -11.7356, 0.88 ) }
    dend_30 { pt3dadd( -44.3121, -88.9014, -11.7853, 0.88 ) }
    dend_30 { pt3dadd( -44.6652, -89.1145, -11.8098, 1.25 ) }
    dend_30 { pt3dadd( -45.1109, -89.3603, -11.8448, 1.25 ) }
    dend_30 { pt3dadd( -45.7268, -89.6748, -11.8984, 1.4 ) }
    dend_30 { pt3dadd( -46.1813, -89.9059, -11.9366, 1.62 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 11/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -35.776, -84.4955, -11.4882, 0.74 ) }
    dend_27 { pt3dadd( -35.6931, -84.9693, -12.5078, 0.74 ) }
    dend_27 { pt3dadd( -35.6048, -85.5942, -13.8675, 0.44 ) }
    dend_27 { pt3dadd( -35.5983, -85.639, -13.9593, 0.44 ) }
    dend_27 { pt3dadd( -35.5104, -86.1042, -14.8187, 0.44 ) }
    dend_27 { pt3dadd( -35.3245, -86.9496, -16.2886, 1.03 ) }
    dend_27 { pt3dadd( -34.9781, -88.6789, -19.1038, 1.03 ) }
    dend_27 { pt3dadd( -34.8909, -89.2453, -20.0083, 1.33 ) }
    dend_27 { pt3dadd( -34.8122, -90.0596, -21.2412, 1.11 ) }
    dend_27 { pt3dadd( -34.8064, -90.6401, -22.149, 0.59 ) }
    dend_27 { pt3dadd( -34.8704, -91.514, -23.5352, 0.44 ) }
    dend_27 { pt3dadd( -35.068, -92.6793, -25.2567, 0.44 ) }
    dend_27 { pt3dadd( -35.2619, -93.4526, -26.3849, 0.88 ) }
    dend_27 { pt3dadd( -35.4, -93.8099, -26.946, 1.25 ) }
    dend_27 { pt3dadd( -36.1055, -95.202, -29.1711, 1.25 ) }
    dend_27 { pt3dadd( -36.1275, -95.238, -29.2301, 1.25 ) }
    dend_27 { pt3dadd( -36.2333, -95.4055, -29.4791, 1.25 ) }
    dend_27 { pt3dadd( -36.2539, -95.4452, -29.5263, 1.25 ) }
    dend_27 { pt3dadd( -36.6594, -96.8224, -30.5782, 0.74 ) }
    dend_27 { pt3dadd( -36.8165, -97.6592, -31.0769, 0.74 ) }
    dend_27 { pt3dadd( -36.8255, -97.7252, -31.1063, 0.74 ) }
    dend_27 { pt3dadd( -36.9124, -98.3199, -31.4222, 0.74 ) }
    dend_27 { pt3dadd( -37.0644, -99.1523, -32.0003, 0.81 ) }
    dend_27 { pt3dadd( -37.2321, -99.8522, -32.55, 0.81 ) }
    dend_27 { pt3dadd( -37.6932, -101.256, -33.8167, 0.44 ) }
    dend_27 { pt3dadd( -37.7147, -101.305, -33.8652, 0.44 ) }
    dend_27 { pt3dadd( -38.1477, -102.156, -34.7544, 0.74 ) }
    dend_27 { pt3dadd( -38.7835, -103.29, -36.0218, 0.88 ) }
    dend_27 { pt3dadd( -39.0778, -103.825, -36.6209, 1.03 ) }
    dend_27 { pt3dadd( -39.5227, -104.692, -37.5327, 1.03 ) }
    dend_27 { pt3dadd( -39.755, -105.253, -38.0232, 1.18 ) }
    dend_27 { pt3dadd( -39.7712, -105.304, -38.0617, 1.18 ) }
    dend_27 { pt3dadd( -39.9641, -106.488, -38.7584, 0.52 ) }
    dend_27 { pt3dadd( -39.9008, -107.354, -39.1415, 0.44 ) }
    dend_27 { pt3dadd( -39.7588, -107.808, -39.3475, 0.81 ) }
    dend_27 { pt3dadd( -39.5829, -108.182, -39.518, 0.88 ) }
    dend_27 { pt3dadd( -39.5175, -108.313, -39.5862, 0.88 ) }
    dend_27 { pt3dadd( -39.2335, -108.933, -39.9139, 0.74 ) }
    dend_27 { pt3dadd( -38.935, -109.697, -40.3129, 0.44 ) }
    dend_27 { pt3dadd( -38.7147, -110.491, -40.7323, 0.59 ) }
    dend_27 { pt3dadd( -38.5268, -111.587, -41.2592, 0.52 ) }
    dend_27 { pt3dadd( -38.4449, -112.458, -41.6607, 0.88 ) }
    dend_27 { pt3dadd( -38.4218, -113.056, -41.919, 1.18 ) }
    dend_27 { pt3dadd( -38.4446, -113.918, -42.2935, 0.52 ) }
    dend_27 { pt3dadd( -38.5038, -114.487, -42.5291, 0.44 ) }
    dend_27 { pt3dadd( -38.6349, -115.327, -42.8359, 0.44 ) }
    dend_27 { pt3dadd( -38.7802, -116.072, -43.0795, 0.74 ) }
    dend_27 { pt3dadd( -38.8747, -116.492, -43.2102, 0.74 ) }
    dend_27 { pt3dadd( -39.2089, -117.834, -43.647, 0.59 ) }
    dend_27 { pt3dadd( -39.475, -118.817, -43.9567, 0.66 ) }
    dend_27 { pt3dadd( -39.6295, -119.373, -44.1467, 1.18 ) }
    dend_27 { pt3dadd( -39.8582, -120.226, -44.4395, 1.33 ) }
    dend_27 { pt3dadd( -40.0447, -121.065, -44.7045, 1.11 ) }
    dend_27 { pt3dadd( -40.055, -121.134, -44.7279, 1.11 ) }
    dend_27 { pt3dadd( -40.1041, -121.92, -44.9838, 0.96 ) }
    dend_27 { pt3dadd( -40.0994, -122.947, -45.3355, 0.66 ) }
    dend_27 { pt3dadd( -40.0827, -123.73, -45.6367, 0.37 ) }
    dend_27 { pt3dadd( -40.0964, -124.488, -45.9423, 0.29 ) }
    dend_27 { pt3dadd( -40.2002, -125.818, -46.5272, 1.03 ) }
    dend_27 { pt3dadd( -40.2818, -126.48, -46.8296, 1.33 ) }
    dend_27 { pt3dadd( -40.3591, -127.01, -47.0773, 1.47 ) }
    dend_27 { pt3dadd( -40.5689, -128.374, -47.6626, 0.37 ) }
    dend_27 { pt3dadd( -40.6902, -129.203, -48.0319, 0.37 ) }
    dend_27 { pt3dadd( -40.8608, -130.355, -48.5128, 0.29 ) }
    dend_27 { pt3dadd( -40.9135, -130.787, -48.6675, 0.44 ) }
    dend_27 { pt3dadd( -40.9774, -131.443, -48.8734, 0.59 ) }
    dend_27 { pt3dadd( -41.0528, -132.479, -49.1524, 0.59 ) }
    dend_27 { pt3dadd( -41.1063, -133.793, -49.4648, 0.74 ) }
    dend_27 { pt3dadd( -41.113, -134.763, -49.6819, 0.59 ) }
    dend_27 { pt3dadd( -41.1263, -135.638, -49.8515, 0.44 ) }
    dend_27 { pt3dadd( -41.1528, -136.813, -50.0862, 0.44 ) }
    dend_27 { pt3dadd( -41.1543, -136.889, -50.1246, 0.44 ) }
    dend_27 { pt3dadd( -41.1399, -137.642, -50.7124, 0.96 ) }
    dend_27 { pt3dadd( -41.1038, -138.075, -51.1357, 1.4 ) }
    dend_27 { pt3dadd( -41.0965, -138.126, -51.1902, 1.4 ) }
    dend_27 { pt3dadd( -41.0119, -138.608, -51.7128, 1.18 ) }
    dend_27 { pt3dadd( -40.4907, -141.604, -54.9339, 0.59 ) }
    dend_27 { pt3dadd( -40.3899, -142.236, -55.587, 0.88 ) }
    dend_27 { pt3dadd( -40.3107, -142.829, -56.1761, 1.03 ) }
    dend_27 { pt3dadd( -40.2477, -143.486, -56.7978, 0.52 ) }
    dend_27 { pt3dadd( -40.2163, -144.251, -57.4271, 0.37 ) }
    dend_27 { pt3dadd( -40.2373, -145.031, -57.924, 0.37 ) }
    dend_27 { pt3dadd( -40.2403, -145.091, -57.9407, 0.37 ) }
    dend_27 { pt3dadd( -40.2547, -145.362, -58.0123, 1.03 ) }
    dend_27 { pt3dadd( -40.2758, -145.942, -58.1435, 1.03 ) }
    dend_27 { pt3dadd( -40.2547, -146.835, -58.346, 0.44 ) }
    dend_27 { pt3dadd( -40.1286, -147.787, -58.6439, 0.37 ) }
    dend_27 { pt3dadd( -39.8996, -148.717, -58.9969, 0.88 ) }
    dend_27 { pt3dadd( -39.7424, -149.263, -59.2606, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_27 { pt3dadd( -39.6229, -149.67, -59.4831, 1.25 ) }
    dend_27 { pt3dadd( -39.4052, -150.445, -59.9661, 0.81 ) }
    dend_27 { pt3dadd( -39.0628, -151.881, -60.9138, 0.29 ) }
    dend_27 { pt3dadd( -39.0, -152.26, -61.1565, 0.29 ) }
    dend_27 { pt3dadd( -38.9265, -153.146, -61.7269, 0.37 ) }
    dend_27 { pt3dadd( -38.91, -153.961, -62.2605, 0.37 ) }
    dend_27 { pt3dadd( -38.9301, -154.793, -62.7782, 0.66 ) }
    dend_27 { pt3dadd( -38.9768, -155.489, -63.155, 1.25 ) }
    dend_27 { pt3dadd( -39.0137, -156.214, -63.4729, 1.4 ) }
    dend_27 { pt3dadd( -39.0184, -157.507, -63.9896, 0.81 ) }
    dend_27 { pt3dadd( -38.9412, -158.685, -64.4116, 0.59 ) }
    dend_27 { pt3dadd( -38.8589, -159.338, -64.6319, 0.29 ) }
    dend_27 { pt3dadd( -38.7128, -160.18, -64.8898, 0.29 ) }
    dend_27 { pt3dadd( -38.5346, -161.151, -65.3443, 0.29 ) }
    dend_27 { pt3dadd( -38.475, -161.484, -65.5561, 1.03 ) }
    dend_27 { pt3dadd( -38.4642, -161.542, -65.5996, 1.03 ) }
    dend_27 { pt3dadd( -38.3654, -162.066, -66.0331, 1.4 ) }
    dend_27 { pt3dadd( -38.2433, -162.826, -66.7004, 1.4 ) }
    dend_27 { pt3dadd( -37.914, -165.111, -68.7503, 0.52 ) }
    dend_27 { pt3dadd( -37.8169, -166.044, -69.5472, 0.74 ) }
    dend_27 { pt3dadd( -37.8103, -166.141, -69.6236, 0.74 ) }
    dend_27 { pt3dadd( -37.7768, -166.882, -70.1545, 0.52 ) }
    dend_27 { pt3dadd( -37.7696, -167.635, -70.6318, 0.52 ) }
    dend_27 { pt3dadd( -37.7921, -168.272, -70.9265, 0.74 ) }
    dend_27 { pt3dadd( -37.848, -169.165, -71.2126, 0.66 ) }
    dend_27 { pt3dadd( -37.9568, -170.607, -71.8511, 0.59 ) }
    dend_27 { pt3dadd( -37.9592, -170.66, -71.8833, 0.59 ) }
    dend_27 { pt3dadd( -37.9678, -171.281, -72.3257, 0.52 ) }
    dend_27 { pt3dadd( -37.9502, -171.951, -72.8258, 1.18 ) }
    dend_27 { pt3dadd( -37.8887, -173.083, -73.6757, 1.62 ) }
    dend_27 { pt3dadd( -37.7235, -174.78, -74.9923, 1.18 ) }
    dend_27 { pt3dadd( -37.5706, -175.923, -75.8447, 0.52 ) }
    dend_27 { pt3dadd( -37.4371, -176.79, -76.4538, 0.37 ) }
    dend_27 { pt3dadd( -37.2937, -177.611, -76.9799, 0.74 ) }
    dend_27 { pt3dadd( -37.2322, -177.999, -77.1914, 1.11 ) }
    dend_27 { pt3dadd( -37.1305, -179.179, -77.6316, 0.88 ) }
    dend_27 { pt3dadd( -37.1697, -179.862, -77.777, 0.81 ) }
    dend_27 { pt3dadd( -37.3742, -180.734, -77.9183, 0.44 ) }
    dend_27 { pt3dadd( -37.6413, -181.399, -78.0203, 0.59 ) }
    dend_27 { pt3dadd( -38.0219, -182.099, -78.1575, 0.59 ) }
    dend_27 { pt3dadd( -38.5261, -182.894, -78.3241, 0.37 ) }
    dend_27 { pt3dadd( -39.1791, -183.849, -78.5085, 0.29 ) }
    dend_27 { pt3dadd( -39.6141, -184.481, -78.6491, 0.81 ) }
    dend_27 { pt3dadd( -39.9846, -185.055, -78.8026, 1.11 ) }
    dend_27 { pt3dadd( -40.6151, -186.129, -79.1082, 1.4 ) }
    dend_27 { pt3dadd( -40.8928, -186.652, -79.2554, 1.33 ) }
    dend_27 { pt3dadd( -41.2922, -187.513, -79.4704, 0.81 ) }
    dend_27 { pt3dadd( -41.6341, -188.347, -79.6258, 0.52 ) }
    dend_27 { pt3dadd( -42.054, -189.457, -79.7591, 0.44 ) }
    dend_27 { pt3dadd( -42.3414, -190.292, -79.8182, 0.37 ) }
    dend_27 { pt3dadd( -42.6226, -191.262, -79.7896, 0.37 ) }
    dend_27 { pt3dadd( -42.8415, -192.18, -79.7216, 0.66 ) }
    dend_27 { pt3dadd( -43.0107, -193.149, -79.6077, 0.96 ) }
    dend_27 { pt3dadd( -43.086, -193.899, -79.4894, 1.03 ) }
    dend_27 { pt3dadd( -43.1079, -194.652, -79.3444, 1.25 ) }
    dend_27 { pt3dadd( -42.9991, -196.035, -79.0933, 0.81 ) }
    dend_27 { pt3dadd( -42.9092, -196.631, -78.9998, 0.52 ) }
    dend_27 { pt3dadd( -42.7697, -197.456, -78.9158, 0.52 ) }
    dend_27 { pt3dadd( -42.68, -198.068, -78.8863, 0.29 ) }
    dend_27 { pt3dadd( -42.6113, -198.962, -78.8827, 0.29 ) }
    dend_27 { pt3dadd( -42.6331, -200.186, -78.9704, 0.29 ) }
    dend_27 { pt3dadd( -42.7699, -200.963, -79.0885, 0.81 ) }
    dend_27 { pt3dadd( -43.026, -201.758, -79.2245, 1.11 ) }
    dend_27 { pt3dadd( -43.3255, -202.402, -79.3463, 1.11 ) }
    dend_27 { pt3dadd( -43.7004, -203.038, -79.4697, 0.74 ) }
    dend_27 { pt3dadd( -44.1743, -203.684, -79.6016, 0.37 ) }
    dend_27 { pt3dadd( -44.8805, -204.544, -79.8095, 0.29 ) }
    dend_27 { pt3dadd( -45.0984, -204.841, -79.8826, 0.74 ) }
    dend_27 { pt3dadd( -45.1408, -204.913, -79.8996, 0.74 ) }
    dend_27 { pt3dadd( -45.3454, -205.403, -80.0545, 0.96 ) }
    dend_27 { pt3dadd( -45.3815, -205.526, -80.0973, 0.96 ) }
    dend_27 { pt3dadd( -45.6283, -206.643, -80.4684, 0.29 ) }
    dend_27 { pt3dadd( -45.7949, -207.363, -80.7016, 0.29 ) }
    dend_27 { pt3dadd( -45.932, -207.864, -80.8474, 0.81 ) }
    dend_27 { pt3dadd( -46.2869, -208.919, -81.1135, 1.03 ) }
    dend_27 { pt3dadd( -46.5522, -209.542, -81.2418, 0.81 ) }
    dend_27 { pt3dadd( -46.9829, -210.34, -81.3808, 0.29 ) }
    dend_27 { pt3dadd( -47.5427, -211.158, -81.4874, 0.29 ) }
    dend_27 { pt3dadd( -47.8905, -211.573, -81.5336, 0.44 ) }
    dend_27 { pt3dadd( -48.3318, -212.061, -81.5749, 0.44 ) }
    dend_27 { pt3dadd( -48.8957, -212.614, -81.5876, 0.66 ) }
    dend_27 { pt3dadd( -49.5533, -213.174, -81.6083, 0.96 ) }
    dend_27 { pt3dadd( -49.9066, -213.43, -81.627, 1.4 ) }
    dend_27 { pt3dadd( -50.8888, -214.074, -81.7097, 1.69 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 84/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 5.92006, 69.5685, 1.15469, 1.11 ) }
    dend_20 { pt3dadd( 5.45884, 71.65, 1.27764, 1.11 ) }
    dend_20 { pt3dadd( 5.30782, 72.2518, 1.30303, 0.96 ) }
    dend_20 { pt3dadd( 5.07086, 73.0304, 1.32255, 0.96 ) }
    dend_20 { pt3dadd( 4.78119, 73.8993, 1.33705, 0.96 ) }
    dend_20 { pt3dadd( 4.40571, 74.9134, 1.34898, 0.96 ) }
    dend_20 { pt3dadd( 3.80019, 76.4457, 1.36268, 0.96 ) }
    dend_20 { pt3dadd( 3.7606, 76.5225, 1.36005, 0.96 ) }
    dend_20 { pt3dadd( 3.09342, 77.6983, 1.32054, 1.11 ) }
    dend_20 { pt3dadd( 3.02547, 77.8089, 1.31731, 1.11 ) }
    dend_20 { pt3dadd( 2.44294, 78.7054, 1.29495, 1.11 ) }
    dend_20 { pt3dadd( 2.38671, 78.7861, 1.29362, 1.11 ) }
    dend_20 { pt3dadd( 1.75529, 79.6692, 1.28436, 1.33 ) }
    dend_20 { pt3dadd( 1.18086, 80.4877, 1.27391, 1.18 ) }
    dend_20 { pt3dadd( 0.58924, 81.4084, 1.25872, 0.96 ) }
    dend_20 { pt3dadd( 0.54102, 81.4969, 1.25672, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_20 { pt3dadd( 0.183909, 82.2566, 1.239, 0.88 ) }
    dend_20 { pt3dadd( -0.214794, 83.2706, 1.212, 0.88 ) }
    dend_20 { pt3dadd( -0.238552, 83.3531, 1.20957, 0.88 ) }
    dend_20 { pt3dadd( -0.499628, 84.6658, 1.16651, 0.88 ) }
    dend_20 { pt3dadd( -0.661523, 85.9577, 1.11909, 1.11 ) }
    dend_20 { pt3dadd( -0.67017, 86.0814, 1.11452, 1.11 ) }
    dend_20 { pt3dadd( -0.685218, 87.1588, 1.07395, 1.11 ) }
    dend_20 { pt3dadd( -0.662561, 88.0752, 1.04268, 1.33 ) }
    dend_20 { pt3dadd( -0.632947, 88.6459, 1.0254, 1.33 ) }
    dend_20 { pt3dadd( -0.520723, 89.672, 0.957326, 1.18 ) }
    dend_20 { pt3dadd( -0.367934, 90.6775, 0.859502, 1.18 ) }
    dend_20 { pt3dadd( -0.34326, 90.7947, 0.839003, 1.18 ) }
    dend_20 { pt3dadd( -0.0762447, 91.7763, 0.603822, 1.11 ) }
    dend_20 { pt3dadd( 0.242535, 92.7564, 0.320405, 1.11 ) }
    dend_20 { pt3dadd( 0.612964, 93.7327, -0.00132793, 1.03 ) }
    dend_20 { pt3dadd( 0.963718, 94.6156, -0.320424, 0.88 ) }
    dend_20 { pt3dadd( 1.46389, 95.9745, -0.836502, 0.88 ) }
    dend_20 { pt3dadd( 1.51011, 96.1358, -0.896335, 0.88 ) }
    dend_20 { pt3dadd( 1.74633, 97.2762, -1.22988, 0.88 ) }
    dend_20 { pt3dadd( 1.75471, 97.3612, -1.24536, 0.88 ) }
    dend_20 { pt3dadd( 1.7035, 98.2895, -1.28224, 0.88 ) }
    dend_20 { pt3dadd( 1.48268, 99.5021, -1.21239, 0.88 ) }
    dend_20 { pt3dadd( 1.22588, 100.37, -1.09739, 0.88 ) }
    dend_20 { pt3dadd( 0.732798, 101.699, -0.92388, 0.96 ) }
    dend_20 { pt3dadd( 0.609977, 101.952, -0.892571, 0.96 ) }
    dend_20 { pt3dadd( 0.212764, 102.686, -0.81607, 1.47 ) }
    dend_20 { pt3dadd( -0.176927, 103.376, -0.743865, 1.62 ) }
    dend_20 { pt3dadd( -0.721283, 104.288, -0.633587, 1.11 ) }
    dend_20 { pt3dadd( -1.26244, 105.192, -0.540244, 1.11 ) }
    dend_20 { pt3dadd( -1.94309, 106.33, -0.460579, 1.11 ) }
    dend_20 { pt3dadd( -2.48637, 107.321, -0.37904, 0.96 ) }
    dend_20 { pt3dadd( -2.95159, 108.26, -0.288634, 0.96 ) }
    dend_20 { pt3dadd( -3.49335, 109.387, -0.174223, 0.96 ) }
    dend_20 { pt3dadd( -3.53197, 109.48, -0.165641, 0.96 ) }
    dend_20 { pt3dadd( -3.77243, 110.164, -0.135952, 0.96 ) }
    dend_20 { pt3dadd( -4.13372, 111.399, -0.21459, 1.18 ) }
    dend_20 { pt3dadd( -4.16477, 111.516, -0.232555, 1.18 ) }
    dend_20 { pt3dadd( -4.55134, 113.005, -0.549184, 1.18 ) }
    dend_20 { pt3dadd( -4.93845, 114.536, -0.925747, 1.03 ) }
    dend_20 { pt3dadd( -5.22141, 115.629, -1.19569, 0.88 ) }
    dend_20 { pt3dadd( -5.61096, 117.108, -1.57291, 1.03 ) }
    dend_20 { pt3dadd( -5.884, 118.133, -1.8335, 1.03 ) }
    dend_20 { pt3dadd( -6.02713, 118.713, -1.96336, 1.03 ) }
    dend_20 { pt3dadd( -6.05506, 118.867, -1.9909, 1.03 ) }
    dend_20 { pt3dadd( -6.21312, 119.839, -2.09865, 1.03 ) }
    dend_20 { pt3dadd( -6.24118, 120.022, -2.10529, 1.03 ) }
    dend_20 { pt3dadd( -6.39349, 120.896, -2.03957, 1.03 ) }
    dend_20 { pt3dadd( -6.68009, 122.386, -1.87952, 1.18 ) }
    dend_20 { pt3dadd( -6.94519, 123.706, -1.68122, 1.18 ) }
    dend_20 { pt3dadd( -7.11502, 124.513, -1.53489, 1.18 ) }
    dend_20 { pt3dadd( -7.30662, 125.386, -1.34982, 1.18 ) }
    dend_20 { pt3dadd( -7.72191, 127.208, -0.943154, 1.18 ) }
    dend_20 { pt3dadd( -8.01534, 128.492, -0.613754, 1.18 ) }
    dend_20 { pt3dadd( -8.30754, 129.807, -0.252984, 1.18 ) }
    dend_20 { pt3dadd( -8.32572, 129.891, -0.231184, 1.18 ) }
    dend_20 { pt3dadd( -8.48453, 130.658, -0.074434, 1.18 ) }
    dend_20 { pt3dadd( -8.77117, 132.052, 0.119114, 1.47 ) }
    dend_20 { pt3dadd( -8.95362, 133.009, 0.183453, 1.47 ) }
    dend_20 { pt3dadd( -9.13793, 133.959, 0.222595, 1.33 ) }
    dend_20 { pt3dadd( -9.40062, 135.385, 0.24198, 1.03 ) }
    dend_20 { pt3dadd( -9.76884, 137.351, 0.252306, 0.96 ) }
    dend_20 { pt3dadd( -10.0734, 138.962, 0.245167, 0.96 ) }
    dend_20 { pt3dadd( -10.2961, 140.107, 0.204991, 0.96 ) }
    dend_20 { pt3dadd( -10.49, 141.071, 0.13951, 1.11 ) }
    dend_20 { pt3dadd( -10.5992, 141.636, 0.0946497, 1.11 ) }
    dend_20 { pt3dadd( -10.7975, 142.79, -0.0164486, 1.25 ) }
    dend_20 { pt3dadd( -10.8696, 143.31, -0.0729088, 1.25 ) }
    dend_20 { pt3dadd( -11.0587, 144.619, -0.24168, 1.03 ) }
    dend_20 { pt3dadd( -11.0951, 144.817, -0.269025, 1.03 ) }
    dend_20 { pt3dadd( -11.2118, 145.417, -0.329722, 1.03 ) }
    dend_20 { pt3dadd( -11.336, 146.014, -0.365544, 1.03 ) }
    dend_20 { pt3dadd( -11.4651, 146.732, -0.339843, 1.03 ) }
    dend_20 { pt3dadd( -11.6655, 147.91, -0.200559, 1.03 ) }
    dend_20 { pt3dadd( -11.7932, 148.785, -0.032448, 1.03 ) }
    dend_20 { pt3dadd( -11.9031, 149.597, 0.201155, 1.03 ) }
    dend_20 { pt3dadd( -11.9235, 149.756, 0.258875, 1.03 ) }
    dend_20 { pt3dadd( -12.0715, 151.002, 0.771248, 1.03 ) }
    dend_20 { pt3dadd( -12.081, 151.081, 0.806888, 1.03 ) }
    dend_20 { pt3dadd( -12.2782, 152.452, 1.43255, 1.03 ) }
    dend_20 { pt3dadd( -12.5142, 153.867, 2.01546, 1.03 ) }
    dend_20 { pt3dadd( -12.5367, 153.989, 2.0552, 1.03 ) }
    dend_20 { pt3dadd( -12.675, 154.943, 2.29392, 1.03 ) }
    dend_20 { pt3dadd( -12.683, 155.031, 2.31173, 1.03 ) }
    dend_20 { pt3dadd( -12.7099, 156.621, 2.59112, 1.03 ) }
    dend_20 { pt3dadd( -12.7001, 156.805, 2.61613, 1.03 ) }
    dend_20 { pt3dadd( -12.6085, 157.9, 2.71287, 1.25 ) }
    dend_20 { pt3dadd( -12.4729, 159.504, 2.84486, 1.25 ) }
    dend_20 { pt3dadd( -12.3497, 160.853, 2.9512, 1.25 ) }
    dend_20 { pt3dadd( -12.2752, 162.079, 3.03767, 0.88 ) }
    dend_20 { pt3dadd( -12.2541, 163.288, 3.08618, 0.74 ) }
    dend_20 { pt3dadd( -12.3089, 164.298, 3.07595, 1.18 ) }
    dend_20 { pt3dadd( -12.5134, 165.884, 2.98154, 1.4 ) }
    dend_20 { pt3dadd( -12.5544, 166.066, 2.96143, 1.4 ) }
    dend_20 { pt3dadd( -12.9317, 167.327, 2.76291, 1.4 ) }
    dend_20 { pt3dadd( -13.4242, 168.686, 2.53285, 1.18 ) }
    dend_20 { pt3dadd( -13.906, 169.922, 2.31099, 1.03 ) }
    dend_20 { pt3dadd( -13.9377, 170.001, 2.29561, 1.03 ) }
    dend_20 { pt3dadd( -14.4091, 171.144, 2.05602, 1.03 ) }
    dend_20 { pt3dadd( -14.6493, 171.738, 1.93529, 0.88 ) }
    dend_20 { pt3dadd( -15.2832, 173.405, 1.62937, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_20 { pt3dadd( -15.3144, 173.488, 1.62056, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 1/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 5.92006, 69.5685, 1.15469, 0.52 ) }
    dend_15 { pt3dadd( 5.52355, 70.4622, 0.402485, 0.52 ) }
    dend_15 { pt3dadd( 5.1374, 71.1146, -0.174496, 0.74 ) }
    dend_15 { pt3dadd( 4.74718, 71.575, -0.650025, 0.74 ) }
    dend_15 { pt3dadd( 4.58938, 71.7311, -0.82561, 0.74 ) }
    dend_15 { pt3dadd( 4.29228, 71.979, -1.22932, 0.74 ) }
    dend_15 { pt3dadd( 3.8155, 72.3239, -2.00676, 0.44 ) }
    dend_15 { pt3dadd( 3.5479, 72.4753, -2.47932, 0.81 ) }
    dend_15 { pt3dadd( 3.07941, 72.7273, -3.37084, 0.81 ) }
    dend_15 { pt3dadd( 3.05541, 72.7418, -3.42427, 0.81 ) }
    dend_15 { pt3dadd( 2.22979, 73.3488, -5.38779, 1.03 ) }
    dend_15 { pt3dadd( 1.68946, 73.8593, -6.80884, 0.81 ) }
    dend_15 { pt3dadd( 1.54141, 74.0432, -7.23335, 0.81 ) }
    dend_15 { pt3dadd( 1.22455, 74.5028, -8.1065, 0.88 ) }
    dend_15 { pt3dadd( 0.838967, 75.0891, -9.03548, 0.81 ) }
    dend_15 { pt3dadd( 0.492504, 75.5307, -9.68457, 0.81 ) }
    dend_15 { pt3dadd( -0.0678256, 76.1025, -10.4399, 0.59 ) }
    dend_15 { pt3dadd( -0.404319, 76.3442, -10.8312, 0.59 ) }
    dend_15 { pt3dadd( -0.998735, 76.5752, -11.5184, 0.88 ) }
    dend_15 { pt3dadd( -1.68394, 76.6806, -12.8594, 0.88 ) }
    dend_15 { pt3dadd( -2.16257, 76.6729, -14.1468, 0.88 ) }
    dend_15 { pt3dadd( -2.37952, 76.6417, -14.8642, 1.25 ) }
    dend_15 { pt3dadd( -2.75164, 76.5534, -16.2559, 1.25 ) }
    dend_15 { pt3dadd( -3.16976, 76.4396, -17.9743, 1.11 ) }
    dend_15 { pt3dadd( -4.38492, 76.1572, -23.6768, 1.03 ) }
    dend_15 { pt3dadd( -4.68928, 76.1129, -25.3259, 0.66 ) }
    dend_15 { pt3dadd( -4.69841, 76.1146, -25.3926, 0.66 ) }
    dend_15 { pt3dadd( -4.82641, 76.2243, -26.7053, 0.52 ) }
    dend_15 { pt3dadd( -4.86327, 76.3203, -27.3018, 0.52 ) }
    dend_15 { pt3dadd( -4.87938, 76.5681, -28.1943, 0.52 ) }
    dend_15 { pt3dadd( -4.87003, 76.6028, -28.2541, 0.52 ) }
    dend_15 { pt3dadd( -4.4183, 77.542, -29.7222, 1.25 ) }
    dend_15 { pt3dadd( -4.31968, 77.7523, -30.0572, 1.69 ) }
    dend_15 { pt3dadd( -4.29895, 77.7927, -30.122, 1.69 ) }
    dend_15 { pt3dadd( -4.20437, 78.0102, -30.4791, 1.69 ) }
    dend_15 { pt3dadd( -3.97705, 79.0167, -32.1888, 0.88 ) }
    dend_15 { pt3dadd( -4.00988, 80.0573, -33.8006, 0.59 ) }
    dend_15 { pt3dadd( -4.12226, 80.4378, -34.3583, 0.81 ) }
    dend_15 { pt3dadd( -4.1377, 80.4797, -34.4236, 0.81 ) }
    dend_15 { pt3dadd( -4.2732, 80.8576, -35.06, 1.11 ) }
    dend_15 { pt3dadd( -4.54354, 81.6452, -36.3969, 1.11 ) }
    dend_15 { pt3dadd( -4.68618, 82.0866, -37.1089, 0.96 ) }
    dend_15 { pt3dadd( -4.88075, 82.9355, -38.4919, 0.88 ) }
    dend_15 { pt3dadd( -5.0406, 83.9961, -40.1104, 0.81 ) }
    dend_15 { pt3dadd( -5.09317, 84.9448, -41.521, 0.52 ) }
    dend_15 { pt3dadd( -5.05637, 85.2293, -41.9898, 0.52 ) }
    dend_15 { pt3dadd( -4.93607, 85.5917, -42.5915, 0.59 ) }
    dend_15 { pt3dadd( -4.89606, 85.6648, -42.7102, 0.59 ) }
    dend_15 { pt3dadd( -4.5399, 86.1665, -43.458, 0.59 ) }
    dend_15 { pt3dadd( -3.89003, 86.9949, -44.6423, 0.81 ) }
    dend_15 { pt3dadd( -2.90867, 88.0933, -46.2946, 1.4 ) }
    dend_15 { pt3dadd( -2.55603, 88.424, -46.8788, 1.62 ) }
    dend_15 { pt3dadd( -2.02099, 88.8213, -47.7102, 1.84 ) }
    dend_15 { pt3dadd( -1.98509, 88.8435, -47.763, 1.84 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 55/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 38.3636, 54.2093, 3.46263, 1.18 ) }
    dend_3 { pt3dadd( 38.3813, 55.6793, 5.05487, 1.18 ) }
    dend_3 { pt3dadd( 38.4627, 56.6323, 5.82807, 0.96 ) }
    dend_3 { pt3dadd( 38.4778, 56.7102, 5.87059, 0.96 ) }
    dend_3 { pt3dadd( 38.8318, 57.8035, 6.26542, 0.74 ) }
    dend_3 { pt3dadd( 38.8636, 57.8834, 6.28479, 0.74 ) }
    dend_3 { pt3dadd( 39.1552, 58.4986, 6.38204, 0.88 ) }
    dend_3 { pt3dadd( 39.657, 59.342, 6.41297, 0.88 ) }
    dend_3 { pt3dadd( 40.2296, 60.1904, 6.45055, 0.59 ) }
    dend_3 { pt3dadd( 40.8111, 60.9399, 6.59204, 0.52 ) }
    dend_3 { pt3dadd( 41.3017, 61.4882, 6.78028, 0.81 ) }
    dend_3 { pt3dadd( 41.9677, 62.2138, 7.07401, 0.52 ) }
    dend_3 { pt3dadd( 43.0611, 63.3383, 7.6681, 0.88 ) }
    dend_3 { pt3dadd( 43.2311, 63.5078, 7.79237, 0.88 ) }
    dend_3 { pt3dadd( 44.1812, 64.4054, 8.70503, 1.33 ) }
    dend_3 { pt3dadd( 44.3268, 64.5376, 8.88911, 1.33 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 71/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 38.3636, 54.2093, 3.46263, 1.11 ) }
    dend_2 { pt3dadd( 40.2769, 53.1214, 2.07089, 1.11 ) }
    dend_2 { pt3dadd( 40.9286, 52.8153, 1.70022, 1.03 ) }
    dend_2 { pt3dadd( 41.6786, 52.4848, 1.33753, 0.88 ) }
    dend_2 { pt3dadd( 43.0563, 51.9081, 0.826499, 0.59 ) }
    dend_2 { pt3dadd( 43.8321, 51.5654, 0.573385, 0.81 ) }
    dend_2 { pt3dadd( 44.5259, 51.2433, 0.354063, 0.81 ) }
    dend_2 { pt3dadd( 45.1208, 50.9805, 0.212212, 1.03 ) }
    dend_2 { pt3dadd( 45.3778, 50.8875, 0.131142, 1.03 ) }
    dend_2 { pt3dadd( 46.2807, 50.5943, -0.266171, 1.03 ) }
    dend_2 { pt3dadd( 47.6051, 50.0913, -0.977994, 0.66 ) }
    dend_2 { pt3dadd( 48.62, 49.6258, -1.62911, 0.81 ) }
    dend_2 { pt3dadd( 49.5633, 49.0949, -2.32015, 0.59 ) }
    dend_2 { pt3dadd( 50.4239, 48.5166, -3.0343, 0.96 ) }
    dend_2 { pt3dadd( 51.5928, 47.6034, -4.08879, 0.59 ) }
    dend_2 { pt3dadd( 52.3752, 46.8898, -4.86081, 0.59 ) }
    dend_2 { pt3dadd( 53.1032, 46.1472, -5.55952, 0.96 ) }
    dend_2 { pt3dadd( 53.747, 45.4483, -6.10081, 0.81 ) }
    dend_2 { pt3dadd( 54.3754, 44.752, -6.51054, 0.81 ) }
    dend_2 { pt3dadd( 54.7611, 44.3579, -6.67238, 0.96 ) }
    dend_2 { pt3dadd( 55.6468, 43.6596, -6.89496, 0.37 ) }
    dend_2 { pt3dadd( 56.4922, 43.2199, -7.05174, 0.37 ) }
    dend_2 { pt3dadd( 57.5274, 42.8814, -7.19578, 0.44 ) }
    dend_2 { pt3dadd( 58.227, 42.7472, -7.29199, 0.81 ) }
    dend_2 { pt3dadd( 59.0503, 42.6471, -7.40757, 1.03 ) }
    dend_2 { pt3dadd( 60.2683, 42.4993, -7.59556, 0.52 ) }
    dend_2 { pt3dadd( 60.7038, 42.4119, -7.67691, 0.44 ) }
    dend_2 { pt3dadd( 60.7605, 42.3905, -7.69353, 0.44 ) }
    dend_2 { pt3dadd( 61.8822, 41.6933, -8.06709, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_2 { pt3dadd( 62.2625, 41.3832, -8.19424, 0.88 ) }
    dend_2 { pt3dadd( 62.9102, 40.7499, -8.36618, 1.03 ) }
    dend_2 { pt3dadd( 63.748, 39.872, -8.47047, 1.03 ) }
    dend_2 { pt3dadd( 64.4999, 39.1033, -8.50039, 0.96 ) }
    dend_2 { pt3dadd( 65.2894, 38.3896, -8.45656, 0.52 ) }
    dend_2 { pt3dadd( 65.3367, 38.3511, -8.44888, 0.52 ) }
    dend_2 { pt3dadd( 65.925, 37.9804, -8.31086, 0.59 ) }
    dend_2 { pt3dadd( 66.7197, 37.641, -8.04881, 0.59 ) }
    dend_2 { pt3dadd( 67.2959, 37.4786, -7.8007, 0.29 ) }
    dend_2 { pt3dadd( 68.1443, 37.3042, -7.39464, 0.29 ) }
    dend_2 { pt3dadd( 68.1986, 37.2937, -7.36882, 0.29 ) }
    dend_2 { pt3dadd( 68.8696, 37.1244, -7.04878, 0.66 ) }
    dend_2 { pt3dadd( 69.4087, 36.9551, -6.79097, 0.81 ) }
    dend_2 { pt3dadd( 70.0692, 36.6538, -6.45578, 0.88 ) }
    dend_2 { pt3dadd( 70.1613, 36.5942, -6.39718, 0.88 ) }
    dend_2 { pt3dadd( 70.6514, 36.1899, -6.04142, 1.03 ) }
    dend_2 { pt3dadd( 71.0443, 35.8451, -5.7559, 1.03 ) }
    dend_2 { pt3dadd( 71.0846, 35.8079, -5.7278, 1.03 ) }
    dend_2 { pt3dadd( 71.5989, 35.3249, -5.36983, 0.81 ) }
    dend_2 { pt3dadd( 72.451, 34.5453, -4.79791, 0.37 ) }
    dend_2 { pt3dadd( 72.9224, 34.1462, -4.50755, 0.66 ) }
    dend_2 { pt3dadd( 73.3238, 33.8252, -4.2812, 0.66 ) }
    dend_2 { pt3dadd( 73.912, 33.3776, -4.01206, 0.52 ) }
    dend_2 { pt3dadd( 74.4106, 33.022, -3.8494, 0.52 ) }
    dend_2 { pt3dadd( 75.1454, 32.5106, -3.68945, 0.96 ) }
    dend_2 { pt3dadd( 75.6973, 32.1009, -3.62343, 1.25 ) }
    dend_2 { pt3dadd( 76.3744, 31.5706, -3.55996, 1.03 ) }
    dend_2 { pt3dadd( 77.1027, 30.966, -3.50632, 0.81 ) }
    dend_2 { pt3dadd( 77.8838, 30.326, -3.46583, 0.66 ) }
    dend_2 { pt3dadd( 78.286, 30.0223, -3.44567, 0.74 ) }
    dend_2 { pt3dadd( 78.7554, 29.6938, -3.41348, 0.74 ) }
    dend_2 { pt3dadd( 79.4497, 29.2484, -3.32336, 0.37 ) }
    dend_2 { pt3dadd( 79.4942, 29.2232, -3.31363, 0.37 ) }
    dend_2 { pt3dadd( 80.1022, 28.9167, -3.12522, 0.29 ) }
    dend_2 { pt3dadd( 80.993, 28.5185, -2.918, 0.66 ) }
    dend_2 { pt3dadd( 81.6479, 28.2378, -2.81848, 1.03 ) }
    dend_2 { pt3dadd( 82.3423, 27.9336, -2.74758, 0.74 ) }
    dend_2 { pt3dadd( 83.1602, 27.547, -2.69417, 0.74 ) }
    dend_2 { pt3dadd( 83.6662, 27.2732, -2.66832, 0.96 ) }
    dend_2 { pt3dadd( 84.8678, 26.5121, -2.61892, 1.18 ) }
    dend_2 { pt3dadd( 85.3295, 26.1961, -2.60698, 0.96 ) }
    dend_2 { pt3dadd( 85.9221, 25.777, -2.5875, 0.44 ) }
    dend_2 { pt3dadd( 85.9789, 25.7362, -2.58518, 0.44 ) }
    dend_2 { pt3dadd( 86.6863, 25.2098, -2.56036, 0.66 ) }
    dend_2 { pt3dadd( 87.1535, 24.8599, -2.55565, 0.81 ) }
    dend_2 { pt3dadd( 87.3834, 24.6895, -2.5722, 0.81 ) }
    dend_2 { pt3dadd( 87.9386, 24.2995, -2.66365, 0.66 ) }
    dend_2 { pt3dadd( 88.134, 24.1711, -2.701, 0.66 ) }
    dend_2 { pt3dadd( 88.8546, 23.7242, -2.80443, 0.66 ) }
    dend_2 { pt3dadd( 89.6796, 23.248, -2.89052, 0.44 ) }
    dend_2 { pt3dadd( 90.9357, 22.5208, -2.95647, 0.37 ) }
    dend_2 { pt3dadd( 91.5857, 22.1213, -2.96149, 0.88 ) }
    dend_2 { pt3dadd( 92.4975, 21.5349, -2.88352, 0.88 ) }
    dend_2 { pt3dadd( 93.221, 21.0762, -2.74884, 1.03 ) }
    dend_2 { pt3dadd( 93.7858, 20.7311, -2.57776, 1.03 ) }
    dend_2 { pt3dadd( 94.3137, 20.4396, -2.36761, 0.74 ) }
    dend_2 { pt3dadd( 94.9588, 20.122, -2.06691, 0.52 ) }
    dend_2 { pt3dadd( 95.7841, 19.7476, -1.69696, 0.52 ) }
    dend_2 { pt3dadd( 96.4869, 19.4299, -1.39547, 0.29 ) }
    dend_2 { pt3dadd( 96.5485, 19.4005, -1.37437, 0.29 ) }
    dend_2 { pt3dadd( 97.108, 19.0831, -1.19761, 0.29 ) }
    dend_2 { pt3dadd( 97.5901, 18.7435, -1.07419, 0.59 ) }
    dend_2 { pt3dadd( 97.6606, 18.6828, -1.06005, 0.59 ) }
    dend_2 { pt3dadd( 98.1765, 18.1, -1.0154, 0.88 ) }
    dend_2 { pt3dadd( 98.6424, 17.4247, -0.987888, 0.74 ) }
    dend_2 { pt3dadd( 99.0656, 16.6864, -1.02043, 0.44 ) }
    dend_2 { pt3dadd( 99.3751, 16.0401, -1.08941, 0.29 ) }
    dend_2 { pt3dadd( 99.5278, 15.6703, -1.14791, 0.59 ) }
    dend_2 { pt3dadd( 99.7193, 15.0943, -1.26402, 0.44 ) }
    dend_2 { pt3dadd( 99.8418, 14.5967, -1.39231, 0.44 ) }
    dend_2 { pt3dadd( 99.9754, 13.641, -1.65208, 0.81 ) }
    dend_2 { pt3dadd( 99.9773, 13.5812, -1.6692, 0.81 ) }
    dend_2 { pt3dadd( 99.9427, 13.0144, -1.80091, 1.03 ) }
    dend_2 { pt3dadd( 99.8694, 12.3342, -1.92681, 0.88 ) }
    dend_2 { pt3dadd( 99.8626, 12.2733, -1.93451, 0.88 ) }
    dend_2 { pt3dadd( 99.7817, 11.4141, -1.99222, 0.59 ) }
    dend_2 { pt3dadd( 99.7439, 10.8066, -1.98664, 0.59 ) }
    dend_2 { pt3dadd( 99.7384, 10.124, -1.95406, 0.88 ) }
    dend_2 { pt3dadd( 99.7453, 9.93579, -1.93894, 0.88 ) }
    dend_2 { pt3dadd( 99.8444, 9.01466, -1.81685, 0.37 ) }
    dend_2 { pt3dadd( 99.9418, 8.46216, -1.72787, 0.74 ) }
    dend_2 { pt3dadd( 100.069, 7.93276, -1.62698, 0.96 ) }
    dend_2 { pt3dadd( 100.264, 7.19406, -1.51239, 0.96 ) }
    dend_2 { pt3dadd( 100.28, 7.13494, -1.50449, 0.96 ) }
    dend_2 { pt3dadd( 100.464, 6.49392, -1.45157, 1.25 ) }
    dend_2 { pt3dadd( 100.771, 5.6244, -1.39981, 0.44 ) }
    dend_2 { pt3dadd( 101.01, 5.08641, -1.40498, 0.37 ) }
    dend_2 { pt3dadd( 101.429, 4.29486, -1.44582, 0.96 ) }
    dend_2 { pt3dadd( 101.836, 3.62582, -1.49153, 0.96 ) }
    dend_2 { pt3dadd( 102.494, 2.68153, -1.58111, 0.74 ) }
    dend_2 { pt3dadd( 103.061, 1.96395, -1.68911, 0.74 ) }
    dend_2 { pt3dadd( 103.805, 1.11996, -1.83604, 0.29 ) }
    dend_2 { pt3dadd( 104.182, 0.709449, -1.88822, 0.52 ) }
    dend_2 { pt3dadd( 104.754, 0.077543, -1.9262, 0.88 ) }
    dend_2 { pt3dadd( 105.231, -0.472707, -1.93221, 1.03 ) }
    dend_2 { pt3dadd( 106.012, -1.46077, -1.87349, 0.29 ) }
    dend_2 { pt3dadd( 106.316, -1.90104, -1.78605, 0.88 ) }
    dend_2 { pt3dadd( 106.828, -2.70553, -1.43027, 0.81 ) }
    dend_2 { pt3dadd( 107.099, -3.12599, -1.10764, 0.96 ) }
    dend_2 { pt3dadd( 107.381, -3.53292, -0.624399, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_2 { pt3dadd( 107.408, -3.56833, -0.567752, 0.59 ) }
    dend_2 { pt3dadd( 107.928, -4.20517, 0.682987, 0.52 ) }
    dend_2 { pt3dadd( 108.229, -4.56535, 1.37463, 0.52 ) }
    dend_2 { pt3dadd( 108.593, -5.00744, 2.10987, 0.88 ) }
    dend_2 { pt3dadd( 108.618, -5.04081, 2.15506, 0.88 ) }
    dend_2 { pt3dadd( 108.754, -5.24829, 2.38997, 1.03 ) }
    dend_2 { pt3dadd( 109.038, -5.76325, 2.86076, 1.03 ) }
    dend_2 { pt3dadd( 109.286, -6.36456, 3.2869, 0.44 ) }
    dend_2 { pt3dadd( 109.494, -7.05608, 3.72707, 0.44 ) }
    dend_2 { pt3dadd( 109.662, -7.72646, 4.1281, 0.44 ) }
    dend_2 { pt3dadd( 109.835, -8.40674, 4.54956, 0.52 ) }
    dend_2 { pt3dadd( 109.969, -8.90047, 4.86237, 0.44 ) }
    dend_2 { pt3dadd( 110.184, -9.62455, 5.32521, 0.44 ) }
    dend_2 { pt3dadd( 110.344, -10.1186, 5.6306, 0.81 ) }
    dend_2 { pt3dadd( 110.539, -10.6523, 5.92799, 0.81 ) }
    dend_2 { pt3dadd( 110.811, -11.2959, 6.27215, 0.37 ) }
    dend_2 { pt3dadd( 111.108, -11.9408, 6.58311, 0.81 ) }
    dend_2 { pt3dadd( 111.313, -12.3529, 6.77719, 0.88 ) }
    dend_2 { pt3dadd( 111.472, -12.6636, 6.91484, 0.88 ) }
    dend_2 { pt3dadd( 111.737, -13.1974, 7.15804, 0.66 ) }
    dend_2 { pt3dadd( 112.125, -14.0133, 7.5342, 0.44 ) }
    dend_2 { pt3dadd( 112.471, -14.6985, 7.85401, 0.29 ) }
    dend_2 { pt3dadd( 112.781, -15.2206, 8.0729, 0.59 ) }
    dend_2 { pt3dadd( 113.1, -15.7125, 8.25345, 0.74 ) }
    dend_2 { pt3dadd( 113.172, -15.8189, 8.28648, 0.74 ) }
    dend_2 { pt3dadd( 113.522, -16.337, 8.38329, 0.59 ) }
    dend_2 { pt3dadd( 114.041, -17.1387, 8.41405, 0.44 ) }
    dend_2 { pt3dadd( 114.58, -18.0317, 8.38483, 0.44 ) }
    dend_2 { pt3dadd( 114.824, -18.4873, 8.35035, 0.44 ) }
    dend_2 { pt3dadd( 115.117, -19.1189, 8.29276, 0.74 ) }
    dend_2 { pt3dadd( 115.467, -19.9774, 8.20906, 0.74 ) }
    dend_2 { pt3dadd( 115.787, -20.893, 8.11671, 0.29 ) }
    dend_2 { pt3dadd( 115.907, -21.282, 8.07616, 0.96 ) }
    dend_2 { pt3dadd( 116.04, -21.7089, 8.04691, 0.96 ) }
    dend_2 { pt3dadd( 116.258, -22.3144, 8.01438, 0.81 ) }
    dend_2 { pt3dadd( 116.283, -22.3732, 8.01462, 0.81 ) }
    dend_2 { pt3dadd( 116.505, -22.8236, 8.06891, 0.96 ) }
    dend_2 { pt3dadd( 116.868, -23.4731, 8.16359, 0.52 ) }
    dend_2 { pt3dadd( 117.14, -23.9262, 8.22806, 0.52 ) }
    dend_2 { pt3dadd( 117.167, -23.9711, 8.23462, 0.52 ) }
    dend_2 { pt3dadd( 117.509, -24.6012, 8.29555, 0.44 ) }
    dend_2 { pt3dadd( 117.886, -25.3538, 8.34344, 0.59 ) }
    dend_2 { pt3dadd( 118.407, -26.4709, 8.40058, 0.29 ) }
    dend_2 { pt3dadd( 118.588, -26.8736, 8.42025, 0.96 ) }
    dend_2 { pt3dadd( 118.873, -27.5434, 8.446, 1.33 ) }
    dend_2 { pt3dadd( 119.337, -28.6771, 8.49174, 0.29 ) }
    dend_2 { pt3dadd( 119.745, -29.6924, 8.54206, 0.29 ) }
    dend_2 { pt3dadd( 119.973, -30.2665, 8.5803, 0.88 ) }
    dend_2 { pt3dadd( 119.995, -30.326, 8.58836, 0.88 ) }
    dend_2 { pt3dadd( 120.223, -30.9923, 8.72398, 0.88 ) }
    dend_2 { pt3dadd( 120.529, -32.0099, 9.0158, 0.29 ) }
    dend_2 { pt3dadd( 120.724, -32.7678, 9.30924, 0.29 ) }
    dend_2 { pt3dadd( 120.77, -33.0041, 9.41835, 0.66 ) }
    dend_2 { pt3dadd( 120.89, -33.8463, 9.83054, 0.66 ) }
    dend_2 { pt3dadd( 120.961, -34.4611, 10.1458, 0.66 ) }
    dend_2 { pt3dadd( 121.017, -35.0193, 10.4443, 0.96 ) }
    dend_2 { pt3dadd( 121.058, -35.545, 10.716, 0.74 ) }
    dend_2 { pt3dadd( 121.092, -36.1394, 11.0223, 0.52 ) }
    dend_2 { pt3dadd( 121.131, -36.8823, 11.4217, 0.44 ) }
    dend_2 { pt3dadd( 121.147, -37.065, 11.519, 0.44 ) }
    dend_2 { pt3dadd( 121.245, -37.836, 11.9053, 0.37 ) }
    dend_2 { pt3dadd( 121.399, -38.7609, 12.3456, 0.37 ) }
    dend_2 { pt3dadd( 121.58, -39.7502, 12.7906, 0.74 ) }
    dend_2 { pt3dadd( 121.79, -40.5778, 13.0991, 0.29 ) }
    dend_2 { pt3dadd( 122.088, -41.3862, 13.3646, 0.29 ) }
    dend_2 { pt3dadd( 122.492, -42.2366, 13.5728, 0.74 ) }
    dend_2 { pt3dadd( 122.713, -42.5789, 13.6238, 1.03 ) }
    dend_2 { pt3dadd( 122.752, -42.6263, 13.626, 1.03 ) }
    dend_2 { pt3dadd( 123.651, -43.5478, 13.5908, 0.22 ) }
    dend_2 { pt3dadd( 124.411, -44.2819, 13.5221, 0.22 ) }
    dend_2 { pt3dadd( 124.874, -44.7196, 13.4821, 0.81 ) }
    dend_2 { pt3dadd( 125.36, -45.197, 13.463, 0.81 ) }
    dend_2 { pt3dadd( 125.402, -45.2419, 13.4619, 0.81 ) }
    dend_2 { pt3dadd( 126.026, -46.0006, 13.4822, 0.29 ) }
    dend_2 { pt3dadd( 126.43, -46.6278, 13.4793, 0.44 ) }
    dend_2 { pt3dadd( 126.476, -46.7047, 13.4688, 0.44 ) }
    dend_2 { pt3dadd( 126.761, -47.1545, 13.3816, 0.44 ) }
    dend_2 { pt3dadd( 126.798, -47.2127, 13.3609, 0.44 ) }
    dend_2 { pt3dadd( 127.208, -47.8985, 13.076, 0.52 ) }
    dend_2 { pt3dadd( 127.828, -49.0361, 12.4937, 0.52 ) }
    dend_2 { pt3dadd( 128.226, -49.7508, 12.0512, 0.66 ) }
    dend_2 { pt3dadd( 128.51, -50.2097, 11.711, 0.59 ) }
    dend_2 { pt3dadd( 129.203, -51.2623, 10.8197, 0.37 ) }
    dend_2 { pt3dadd( 129.516, -51.7283, 10.4192, 0.29 ) }
    dend_2 { pt3dadd( 130.159, -52.6731, 9.59287, 0.74 ) }
    dend_2 { pt3dadd( 130.901, -53.7936, 8.67299, 0.81 ) }
    dend_2 { pt3dadd( 131.816, -55.2362, 7.52665, 0.29 ) }
    dend_2 { pt3dadd( 132.139, -55.758, 7.09016, 0.66 ) }
    dend_2 { pt3dadd( 132.548, -56.4017, 6.55375, 0.29 ) }
    dend_2 { pt3dadd( 133.0, -57.1131, 5.96599, 0.59 ) }
    dend_2 { pt3dadd( 133.274, -57.5614, 5.60946, 0.74 ) }
    dend_2 { pt3dadd( 133.894, -58.6587, 4.77762, 1.33 ) }
    dend_2 { pt3dadd( 134.88, -60.4618, 3.43687, 0.29 ) }
    dend_2 { pt3dadd( 135.07, -60.7932, 3.18963, 0.59 ) }
    dend_2 { pt3dadd( 135.208, -61.0172, 3.02427, 0.59 ) }
    dend_2 { pt3dadd( 135.918, -62.0765, 2.33084, 0.52 ) }
    dend_2 { pt3dadd( 136.27, -62.5496, 2.06885, 0.74 ) }
    dend_2 { pt3dadd( 136.548, -62.8883, 1.94843, 0.74 ) }
    dend_2 { pt3dadd( 137.13, -63.5265, 1.84308, 0.37 ) }
    dend_2 { pt3dadd( 138.011, -64.441, 1.69503, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_2 { pt3dadd( 138.658, -65.0753, 1.63334, 0.37 ) }
    dend_2 { pt3dadd( 138.995, -65.3942, 1.63111, 0.66 ) }
    dend_2 { pt3dadd( 139.321, -65.6992, 1.62451, 0.88 ) }
    dend_2 { pt3dadd( 139.586, -65.95, 1.61221, 0.88 ) }
    dend_2 { pt3dadd( 140.696, -67.0207, 1.54874, 0.29 ) }
    dend_2 { pt3dadd( 141.619, -67.9578, 1.47766, 0.22 ) }
    dend_2 { pt3dadd( 141.798, -68.1535, 1.46115, 0.66 ) }
    dend_2 { pt3dadd( 142.432, -68.8909, 1.39418, 0.22 ) }
    dend_2 { pt3dadd( 142.67, -69.1962, 1.3529, 0.52 ) }
    dend_2 { pt3dadd( 143.075, -69.7908, 1.2643, 0.29 ) }
    dend_2 { pt3dadd( 143.263, -70.1322, 1.22014, 0.74 ) }
    dend_2 { pt3dadd( 143.432, -70.5114, 1.15638, 0.74 ) }
    dend_2 { pt3dadd( 143.739, -71.2967, 1.00145, 0.22 ) }
    dend_2 { pt3dadd( 144.067, -72.2476, 0.806837, 0.37 ) }
    dend_2 { pt3dadd( 144.213, -72.6763, 0.692403, 0.37 ) }
    dend_2 { pt3dadd( 144.361, -73.1513, 0.549138, 0.59 ) }
    dend_2 { pt3dadd( 144.493, -73.5615, 0.429102, 0.59 ) }
    dend_2 { pt3dadd( 144.709, -74.2642, 0.224758, 0.22 ) }
    dend_2 { pt3dadd( 144.808, -74.5774, 0.142451, 0.52 ) }
    dend_2 { pt3dadd( 145.203, -75.6569, -0.106313, 0.29 ) }
    dend_2 { pt3dadd( 145.425, -76.1893, -0.253418, 1.11 ) }
    dend_2 { pt3dadd( 145.679, -76.7471, -0.431863, 1.18 ) }
    // Section: dend_104, id: dend_104, parent: dend_102 (entry count 22/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -14.534, -215.329, -167.572, 0.29 ) }
    dend_104 { pt3dadd( -14.3662, -217.082, -167.891, 0.29 ) }
    dend_104 { pt3dadd( -14.3119, -218.185, -168.066, 0.29 ) }
    dend_104 { pt3dadd( -14.3167, -219.526, -168.099, 0.22 ) }
    dend_104 { pt3dadd( -14.3827, -220.362, -167.971, 0.74 ) }
    dend_104 { pt3dadd( -14.4519, -220.991, -167.759, 0.88 ) }
    dend_104 { pt3dadd( -14.4601, -221.076, -167.724, 0.88 ) }
    dend_104 { pt3dadd( -14.5473, -221.584, -167.438, 0.88 ) }
    dend_104 { pt3dadd( -14.8356, -222.952, -166.494, 0.29 ) }
    dend_104 { pt3dadd( -15.0619, -224.077, -165.559, 0.29 ) }
    dend_104 { pt3dadd( -15.2451, -225.174, -164.542, 0.88 ) }
    dend_104 { pt3dadd( -15.3447, -225.825, -163.897, 0.88 ) }
    // Section: dend_103, id: dend_103, parent: dend_102 (entry count 34/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -14.534, -215.329, -167.572, 0.59 ) }
    dend_103 { pt3dadd( -16.1669, -217.031, -171.241, 0.59 ) }
    dend_103 { pt3dadd( -16.5941, -217.49, -172.186, 0.37 ) }
    dend_103 { pt3dadd( -17.1531, -218.044, -173.281, 0.37 ) }
    dend_103 { pt3dadd( -17.9021, -218.791, -174.671, 0.96 ) }
    dend_103 { pt3dadd( -18.6048, -219.525, -175.959, 1.33 ) }
    dend_103 { pt3dadd( -20.0141, -221.102, -178.581, 0.59 ) }
    dend_103 { pt3dadd( -20.326, -221.549, -179.195, 0.29 ) }
    dend_103 { pt3dadd( -20.7643, -222.234, -180.163, 0.29 ) }
    dend_103 { pt3dadd( -21.0127, -222.698, -180.883, 0.88 ) }
    dend_103 { pt3dadd( -21.1507, -222.985, -181.368, 0.88 ) }
    dend_103 { pt3dadd( -21.4042, -223.577, -182.417, 0.66 ) }
    dend_103 { pt3dadd( -21.6649, -224.315, -183.757, 0.88 ) }
    dend_103 { pt3dadd( -22.0008, -225.457, -185.827, 1.4 ) }
    dend_103 { pt3dadd( -22.6121, -227.656, -189.867, 0.59 ) }
    dend_103 { pt3dadd( -22.9595, -228.639, -191.724, 0.59 ) }
    dend_103 { pt3dadd( -23.105, -229.02, -192.464, 0.52 ) }
    dend_103 { pt3dadd( -23.1974, -229.272, -192.964, 1.03 ) }
    dend_103 { pt3dadd( -23.3342, -229.633, -193.662, 0.88 ) }
    dend_103 { pt3dadd( -23.889, -230.948, -196.13, 0.22 ) }
    dend_103 { pt3dadd( -24.34, -231.786, -197.601, 0.59 ) }
    dend_103 { pt3dadd( -24.9746, -232.683, -199.3, 0.74 ) }
    dend_103 { pt3dadd( -25.6421, -233.488, -200.951, 0.44 ) }
    dend_103 { pt3dadd( -26.0592, -233.954, -201.904, 0.74 ) }
    dend_103 { pt3dadd( -26.8258, -234.849, -203.606, 1.11 ) }
    dend_103 { pt3dadd( -27.2164, -235.35, -204.418, 0.96 ) }
    dend_103 { pt3dadd( -28.6077, -237.214, -207.021, 0.74 ) }
    dend_103 { pt3dadd( -28.64, -237.254, -207.069, 0.74 ) }
    dend_103 { pt3dadd( -29.2102, -237.945, -207.822, 0.74 ) }
    dend_103 { pt3dadd( -30.0009, -238.999, -208.867, 0.74 ) }
    dend_103 { pt3dadd( -30.7672, -240.143, -209.816, 0.37 ) }
    dend_103 { pt3dadd( -31.153, -240.786, -210.316, 1.03 ) }
    dend_103 { pt3dadd( -31.5119, -241.484, -210.761, 1.18 ) }
    dend_103 { pt3dadd( -32.5116, -243.433, -212.029, 0.29 ) }
    dend_103 { pt3dadd( -32.8513, -244.084, -212.459, 0.59 ) }
    dend_103 { pt3dadd( -33.122, -244.61, -212.771, 0.59 ) }
    dend_103 { pt3dadd( -33.4728, -245.425, -213.161, 0.44 ) }
    dend_103 { pt3dadd( -33.7162, -246.087, -213.42, 0.29 ) }
    dend_103 { pt3dadd( -33.7421, -246.161, -213.442, 0.29 ) }
    dend_103 { pt3dadd( -33.9496, -246.753, -213.562, 0.59 ) }
    dend_103 { pt3dadd( -34.164, -247.379, -213.892, 0.59 ) }
    dend_103 { pt3dadd( -34.31, -247.942, -214.395, 0.44 ) }
    dend_103 { pt3dadd( -34.3972, -248.498, -215.086, 0.29 ) }
    dend_103 { pt3dadd( -34.4801, -249.121, -216.062, 0.88 ) }
    dend_103 { pt3dadd( -34.5542, -249.782, -217.284, 1.11 ) }
    dend_103 { pt3dadd( -34.7141, -251.251, -220.342, 0.74 ) }
    dend_103 { pt3dadd( -34.811, -252.078, -222.115, 0.59 ) }
    dend_103 { pt3dadd( -34.9367, -253.01, -224.131, 0.29 ) }
    dend_103 { pt3dadd( -35.1191, -254.028, -226.295, 0.74 ) }
    dend_103 { pt3dadd( -35.451, -255.42, -229.11, 1.03 ) }
    dend_103 { pt3dadd( -35.9164, -256.859, -231.729, 0.52 ) }
    dend_103 { pt3dadd( -36.1645, -257.441, -232.562, 0.44 ) }
    dend_103 { pt3dadd( -36.3767, -257.86, -233.029, 0.88 ) }
    dend_103 { pt3dadd( -36.8408, -258.68, -233.661, 1.11 ) }
    dend_103 { pt3dadd( -37.1414, -259.177, -233.863, 1.11 ) }
    dend_103 { pt3dadd( -37.7479, -260.106, -233.976, 0.59 ) }
    dend_103 { pt3dadd( -38.396, -261.108, -233.971, 0.44 ) }
    dend_103 { pt3dadd( -38.7607, -261.703, -233.993, 0.66 ) }
    dend_103 { pt3dadd( -39.3704, -262.836, -234.072, 0.59 ) }
    dend_103 { pt3dadd( -39.8003, -263.722, -234.408, 0.37 ) }
    dend_103 { pt3dadd( -40.1744, -264.49, -234.89, 0.44 ) }
    dend_103 { pt3dadd( -40.6354, -265.412, -235.663, 0.66 ) }
    dend_103 { pt3dadd( -40.9877, -266.114, -236.358, 0.81 ) }
    dend_103 { pt3dadd( -41.3142, -266.77, -237.084, 0.88 ) }
    dend_103 { pt3dadd( -43.0514, -270.0, -240.951, 0.52 ) }
    dend_103 { pt3dadd( -43.3561, -270.479, -241.565, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_103 { pt3dadd( -43.5577, -270.74, -241.924, 0.59 ) }
    dend_103 { pt3dadd( -43.8317, -271.019, -242.3, 0.59 ) }
    dend_103 { pt3dadd( -44.5793, -271.619, -242.981, 0.37 ) }
    dend_103 { pt3dadd( -45.4187, -272.142, -243.38, 0.37 ) }
    dend_103 { pt3dadd( -46.3504, -272.617, -243.376, 0.37 ) }
    dend_103 { pt3dadd( -46.4302, -272.656, -243.375, 0.37 ) }
    dend_103 { pt3dadd( -47.6444, -273.204, -243.349, 0.22 ) }
    dend_103 { pt3dadd( -48.1389, -273.387, -243.321, 0.37 ) }
    dend_103 { pt3dadd( -48.6137, -273.508, -243.26, 0.37 ) }
    dend_103 { pt3dadd( -49.7448, -273.72, -243.125, 0.29 ) }
    // Section: dend_101, id: dend_101, parent: dend_99 (entry count 10/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 20.5095, -164.155, -91.5849, 0.29 ) }
    dend_101 { pt3dadd( 21.1063, -164.309, -92.1336, 0.29 ) }
    dend_101 { pt3dadd( 21.3759, -164.407, -92.3782, 0.37 ) }
    dend_101 { pt3dadd( 21.4217, -164.427, -92.4156, 0.37 ) }
    dend_101 { pt3dadd( 21.9816, -164.763, -92.8699, 0.22 ) }
    dend_101 { pt3dadd( 22.03, -164.794, -92.9089, 0.22 ) }
    dend_101 { pt3dadd( 22.3441, -165.005, -93.1545, 0.52 ) }
    dend_101 { pt3dadd( 22.3843, -165.039, -93.1847, 0.52 ) }
    dend_101 { pt3dadd( 22.7327, -165.335, -93.4038, 0.52 ) }
    dend_101 { pt3dadd( 23.3665, -165.847, -93.7481, 0.22 ) }
    dend_101 { pt3dadd( 23.4121, -165.881, -93.7697, 0.22 ) }
    dend_101 { pt3dadd( 23.6178, -166.039, -93.8673, 0.37 ) }
    dend_101 { pt3dadd( 23.9846, -166.32, -94.0401, 0.22 ) }
    dend_101 { pt3dadd( 24.7326, -166.888, -94.378, 0.96 ) }
    dend_101 { pt3dadd( 24.7803, -166.925, -94.3971, 0.96 ) }
    // Section: dend_100, id: dend_100, parent: dend_99 (entry count 25/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 20.5095, -164.155, -91.5849, 0.37 ) }
    dend_100 { pt3dadd( 21.1667, -165.334, -92.6596, 0.37 ) }
    dend_100 { pt3dadd( 21.568, -166.199, -93.3943, 0.66 ) }
    dend_100 { pt3dadd( 21.7455, -166.635, -93.7385, 0.88 ) }
    dend_100 { pt3dadd( 21.9183, -167.123, -94.0914, 1.18 ) }
    dend_100 { pt3dadd( 22.3966, -168.68, -95.1275, 0.44 ) }
    dend_100 { pt3dadd( 22.5158, -169.106, -95.3868, 0.29 ) }
    dend_100 { pt3dadd( 22.6413, -169.791, -95.7278, 0.88 ) }
    dend_100 { pt3dadd( 22.6989, -170.193, -95.8896, 1.11 ) }
    dend_100 { pt3dadd( 22.7738, -170.709, -96.0549, 0.66 ) }
    dend_100 { pt3dadd( 22.8785, -171.385, -96.1912, 0.37 ) }
    dend_100 { pt3dadd( 23.0146, -172.004, -96.2018, 0.52 ) }
    dend_100 { pt3dadd( 23.0534, -172.123, -96.1965, 0.52 ) }
    dend_100 { pt3dadd( 23.378, -172.828, -96.1421, 0.59 ) }
    dend_100 { pt3dadd( 23.6207, -173.271, -96.098, 0.66 ) }
    dend_100 { pt3dadd( 23.6804, -173.366, -96.0802, 0.66 ) }
    dend_100 { pt3dadd( 24.028, -173.916, -95.9484, 0.37 ) }
    dend_100 { pt3dadd( 24.4001, -174.544, -95.6795, 0.37 ) }
    dend_100 { pt3dadd( 24.6768, -175.02, -95.4272, 0.37 ) }
    dend_100 { pt3dadd( 24.9677, -175.519, -95.1352, 0.96 ) }
    dend_100 { pt3dadd( 25.4294, -176.267, -94.6678, 1.25 ) }
    dend_100 { pt3dadd( 25.8663, -176.916, -94.2631, 0.96 ) }
    dend_100 { pt3dadd( 26.9741, -178.472, -93.211, 0.52 ) }
    dend_100 { pt3dadd( 27.4422, -179.104, -92.7638, 0.59 ) }
    dend_100 { pt3dadd( 27.7301, -179.478, -92.4944, 0.74 ) }
    dend_100 { pt3dadd( 28.1024, -179.942, -92.17, 0.74 ) }
    dend_100 { pt3dadd( 28.7154, -180.674, -91.7268, 0.29 ) }
    dend_100 { pt3dadd( 29.2774, -181.314, -91.3882, 0.66 ) }
    dend_100 { pt3dadd( 29.3151, -181.36, -91.3746, 0.66 ) }
    dend_100 { pt3dadd( 29.5968, -181.781, -91.2779, 0.29 ) }
    dend_100 { pt3dadd( 29.8422, -182.239, -91.2008, 0.74 ) }
    dend_100 { pt3dadd( 30.0528, -182.742, -91.1521, 0.88 ) }
    dend_100 { pt3dadd( 30.0751, -182.8, -91.1485, 0.88 ) }
    dend_100 { pt3dadd( 30.3445, -183.448, -91.1353, 0.37 ) }
    dend_100 { pt3dadd( 30.6573, -184.135, -91.1108, 0.59 ) }
    dend_100 { pt3dadd( 30.8538, -184.532, -91.0914, 0.88 ) }
    dend_100 { pt3dadd( 31.2139, -185.207, -91.053, 0.29 ) }
    dend_100 { pt3dadd( 31.5081, -185.726, -91.0019, 0.22 ) }
    dend_100 { pt3dadd( 31.6475, -185.963, -90.972, 0.81 ) }
    dend_100 { pt3dadd( 31.8876, -186.351, -90.9118, 1.18 ) }
    dend_100 { pt3dadd( 31.9221, -186.403, -90.9029, 1.18 ) }
    dend_100 { pt3dadd( 32.318, -186.988, -90.7915, 1.03 ) }
    dend_100 { pt3dadd( 32.8232, -187.811, -90.564, 0.29 ) }
    dend_100 { pt3dadd( 33.2194, -188.592, -90.3168, 0.22 ) }
    dend_100 { pt3dadd( 33.25, -188.67, -90.2868, 0.22 ) }
    dend_100 { pt3dadd( 33.4384, -189.27, -90.0371, 0.29 ) }
    dend_100 { pt3dadd( 33.5873, -189.786, -89.8197, 1.18 ) }
    dend_100 { pt3dadd( 33.9051, -190.842, -89.3379, 0.74 ) }
    dend_100 { pt3dadd( 34.0759, -191.383, -89.0884, 0.52 ) }
    dend_100 { pt3dadd( 34.3196, -192.068, -88.7307, 0.29 ) }
    dend_100 { pt3dadd( 34.5321, -192.632, -88.3946, 0.52 ) }
    dend_100 { pt3dadd( 34.7678, -193.2, -88.0036, 0.96 ) }
    dend_100 { pt3dadd( 35.1377, -193.95, -87.4764, 1.18 ) }
    dend_100 { pt3dadd( 35.5336, -194.647, -86.9501, 1.03 ) }
    dend_100 { pt3dadd( 36.0834, -195.581, -86.2071, 0.74 ) }
    dend_100 { pt3dadd( 36.6495, -196.588, -85.415, 0.66 ) }
    dend_100 { pt3dadd( 36.9591, -197.218, -84.9451, 1.03 ) }
    dend_100 { pt3dadd( 37.339, -198.108, -84.3458, 0.88 ) }
    dend_100 { pt3dadd( 37.7344, -199.142, -83.7621, 0.74 ) }
    dend_100 { pt3dadd( 38.0165, -199.932, -83.4141, 0.74 ) }
    dend_100 { pt3dadd( 38.2648, -200.675, -83.1955, 0.74 ) }
    dend_100 { pt3dadd( 38.5482, -201.576, -83.0315, 0.52 ) }
    dend_100 { pt3dadd( 38.7718, -202.305, -82.942, 0.52 ) }
    dend_100 { pt3dadd( 39.0062, -203.072, -82.8768, 0.44 ) }
    dend_100 { pt3dadd( 39.2417, -203.802, -82.8545, 0.74 ) }
    dend_100 { pt3dadd( 39.433, -204.336, -82.8422, 0.96 ) }
    dend_100 { pt3dadd( 39.6191, -204.819, -82.8311, 0.96 ) }
    dend_100 { pt3dadd( 40.0152, -205.808, -82.8099, 0.37 ) }
    dend_100 { pt3dadd( 40.3718, -206.634, -82.7968, 0.37 ) }
    dend_100 { pt3dadd( 40.3937, -206.681, -82.7962, 0.37 ) }
    dend_100 { pt3dadd( 40.7319, -207.288, -82.7933, 0.66 ) }
    dend_100 { pt3dadd( 40.9977, -207.738, -82.7946, 0.88 ) }
    dend_100 { pt3dadd( 41.361, -208.308, -82.8059, 0.59 ) }
    dend_100 { pt3dadd( 41.7334, -208.837, -82.839, 0.22 ) }
    dend_100 { pt3dadd( 41.7748, -208.885, -82.8416, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_100 { pt3dadd( 42.3075, -209.424, -82.869, 0.22 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 1/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -10.5525, -289.824, -67.0499, 0.52 ) }
    dend_96 { pt3dadd( -8.64393, -289.727, -67.6968, 0.52 ) }
    dend_96 { pt3dadd( -7.69349, -289.762, -68.0644, 0.52 ) }
    dend_96 { pt3dadd( -6.68812, -289.885, -68.5948, 0.66 ) }
    dend_96 { pt3dadd( -5.66704, -290.077, -69.2386, 0.59 ) }
    dend_96 { pt3dadd( -4.42897, -290.38, -70.0736, 0.29 ) }
    dend_96 { pt3dadd( -4.06449, -290.5, -70.362, 0.59 ) }
    dend_96 { pt3dadd( -3.66082, -290.684, -70.8005, 0.59 ) }
    dend_96 { pt3dadd( -2.57171, -291.28, -72.1284, 0.29 ) }
    dend_96 { pt3dadd( -1.98305, -291.656, -72.8935, 0.88 ) }
    dend_96 { pt3dadd( -1.73933, -291.823, -73.2406, 0.88 ) }
    dend_96 { pt3dadd( -0.549885, -292.539, -75.2536, 0.29 ) }
    dend_96 { pt3dadd( 0.171776, -292.883, -76.6412, 0.59 ) }
    dend_96 { pt3dadd( 0.45251, -292.966, -77.3005, 0.44 ) }
    dend_96 { pt3dadd( 0.477845, -292.97, -77.3713, 0.44 ) }
    dend_96 { pt3dadd( 0.995204, -292.944, -79.0077, 0.44 ) }
    dend_96 { pt3dadd( 1.83191, -292.717, -81.9138, 0.29 ) }
    dend_96 { pt3dadd( 1.99471, -292.63, -82.5161, 0.29 ) }
    dend_96 { pt3dadd( 2.75916, -292.147, -85.0833, 0.29 ) }
    dend_96 { pt3dadd( 2.78107, -292.132, -85.1649, 0.29 ) }
    dend_96 { pt3dadd( 2.80204, -292.118, -85.2383, 0.44 ) }
    dend_96 { pt3dadd( 2.84567, -292.091, -85.3817, 0.44 ) }
    dend_96 { pt3dadd( 3.17801, -291.889, -86.4693, 0.29 ) }
    dend_96 { pt3dadd( 3.45708, -291.712, -87.3824, 0.81 ) }
    dend_96 { pt3dadd( 5.66837, -290.271, -94.6021, 0.29 ) }
    dend_96 { pt3dadd( 6.13837, -289.957, -96.1539, 0.22 ) }
    dend_96 { pt3dadd( 6.6246, -289.645, -97.8029, 0.44 ) }
    dend_96 { pt3dadd( 7.5129, -289.12, -101.043, 0.29 ) }
    dend_96 { pt3dadd( 7.67507, -289.029, -101.683, 0.88 ) }
    dend_96 { pt3dadd( 7.78497, -288.993, -102.137, 0.88 ) }
    dend_96 { pt3dadd( 7.80495, -288.992, -102.21, 0.88 ) }
    dend_96 { pt3dadd( 8.72849, -288.975, -105.853, 0.29 ) }
    dend_96 { pt3dadd( 9.55067, -288.946, -109.476, 0.52 ) }
    dend_96 { pt3dadd( 9.56593, -288.945, -109.549, 0.52 ) }
    dend_96 { pt3dadd( 10.532, -288.865, -114.335, 0.22 ) }
    dend_96 { pt3dadd( 10.7505, -288.831, -115.451, 0.37 ) }
    dend_96 { pt3dadd( 11.1612, -288.74, -117.606, 0.96 ) }
    dend_96 { pt3dadd( 11.6721, -288.527, -120.433, 0.22 ) }
    dend_96 { pt3dadd( 11.7553, -288.47, -120.902, 0.59 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 40/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -10.5525, -289.824, -67.0499, 0.81 ) }
    dend_95 { pt3dadd( -10.5304, -290.384, -67.1794, 0.81 ) }
    dend_95 { pt3dadd( -10.4968, -290.907, -67.2862, 1.03 ) }
    dend_95 { pt3dadd( -10.4287, -291.682, -67.4274, 0.96 ) }
    dend_95 { pt3dadd( -10.3466, -292.374, -67.5391, 0.74 ) }
    dend_95 { pt3dadd( -10.2635, -292.983, -67.5649, 0.29 ) }
    dend_95 { pt3dadd( -10.2108, -293.361, -67.5507, 0.29 ) }
    dend_95 { pt3dadd( -10.168, -293.64, -67.5116, 0.52 ) }
    dend_95 { pt3dadd( -10.1392, -293.892, -67.447, 0.52 ) }
    dend_95 { pt3dadd( -10.117, -294.217, -67.3311, 0.52 ) }
    dend_95 { pt3dadd( -10.0693, -295.34, -66.91, 0.29 ) }
    dend_95 { pt3dadd( -10.0494, -295.842, -66.7351, 0.52 ) }
    dend_95 { pt3dadd( -10.0314, -296.147, -66.6296, 0.81 ) }
    dend_95 { pt3dadd( -9.97323, -296.728, -66.4179, 0.88 ) }
    dend_95 { pt3dadd( -9.88401, -297.186, -66.2521, 1.18 ) }
    dend_95 { pt3dadd( -9.72511, -297.772, -66.0465, 1.4 ) }
    dend_95 { pt3dadd( -9.41579, -298.613, -65.7806, 0.52 ) }
    dend_95 { pt3dadd( -9.06859, -299.358, -65.5396, 0.52 ) }
    dend_95 { pt3dadd( -8.59743, -300.219, -65.2729, 0.52 ) }
    dend_95 { pt3dadd( -8.07597, -301.084, -65.0243, 0.74 ) }
    dend_95 { pt3dadd( -8.04443, -301.135, -65.0107, 0.74 ) }
    dend_95 { pt3dadd( -7.69042, -301.753, -64.8897, 0.29 ) }
    dend_95 { pt3dadd( -7.34027, -302.47, -64.8116, 0.29 ) }
    dend_95 { pt3dadd( -7.0116, -303.271, -64.8005, 0.66 ) }
    dend_95 { pt3dadd( -6.86324, -303.719, -64.8248, 0.88 ) }
    dend_95 { pt3dadd( -6.71049, -304.334, -64.873, 0.88 ) }
    dend_95 { pt3dadd( -6.491, -305.282, -64.9894, 0.29 ) }
    dend_95 { pt3dadd( -6.39933, -305.68, -65.0549, 0.88 ) }
    dend_95 { pt3dadd( -6.38539, -305.74, -65.0714, 0.88 ) }
    dend_95 { pt3dadd( -6.27591, -306.148, -65.2154, 1.03 ) }
    dend_95 { pt3dadd( -6.25621, -306.213, -65.24, 1.03 ) }
    dend_95 { pt3dadd( -5.94945, -307.175, -65.5907, 0.74 ) }
    dend_95 { pt3dadd( -5.68783, -307.868, -65.8113, 0.88 ) }
    dend_95 { pt3dadd( -5.30467, -308.797, -66.0783, 1.18 ) }
    dend_95 { pt3dadd( -5.11262, -309.253, -66.1893, 1.18 ) }
    dend_95 { pt3dadd( -4.88535, -309.78, -66.2914, 0.66 ) }
    dend_95 { pt3dadd( -4.57639, -310.485, -66.3853, 0.29 ) }
    dend_95 { pt3dadd( -4.26478, -311.181, -66.4219, 0.29 ) }
    dend_95 { pt3dadd( -4.05625, -311.655, -66.4209, 0.59 ) }
    dend_95 { pt3dadd( -3.79903, -312.248, -66.3812, 0.74 ) }
    dend_95 { pt3dadd( -3.54989, -312.844, -66.3342, 0.74 ) }
    dend_95 { pt3dadd( -3.41851, -313.205, -66.2676, 0.74 ) }
    dend_95 { pt3dadd( -3.31324, -313.586, -66.1689, 0.88 ) }
    dend_95 { pt3dadd( -3.17346, -314.206, -65.973, 0.81 ) }
    dend_95 { pt3dadd( -2.99888, -314.96, -65.6958, 0.81 ) }
    dend_95 { pt3dadd( -2.81772, -315.693, -65.3881, 0.59 ) }
    dend_95 { pt3dadd( -2.4597, -317.005, -64.7875, 0.37 ) }
    dend_95 { pt3dadd( -2.28187, -317.578, -64.5059, 0.52 ) }
    dend_95 { pt3dadd( -2.10854, -318.036, -64.2694, 0.44 ) }
    dend_95 { pt3dadd( -1.91499, -318.431, -64.0611, 0.52 ) }
    dend_95 { pt3dadd( -1.85159, -318.535, -64.0094, 0.52 ) }
    dend_95 { pt3dadd( -1.57672, -318.907, -63.8869, 0.37 ) }
    dend_95 { pt3dadd( -1.49668, -319.012, -63.8765, 0.37 ) }
    dend_95 { pt3dadd( -1.20822, -319.467, -63.8466, 0.81 ) }
    dend_95 { pt3dadd( -1.06321, -319.827, -63.8552, 0.96 ) }
    dend_95 { pt3dadd( -1.04981, -319.88, -63.8634, 0.96 ) }
    dend_95 { pt3dadd( -1.00435, -320.205, -63.9376, 0.81 ) }
    dend_95 { pt3dadd( -0.957328, -320.874, -64.1512, 0.52 ) }
    dend_95 { pt3dadd( -0.93799, -321.323, -64.3072, 0.52 ) }
    dend_95 { pt3dadd( -0.908006, -322.11, -64.5886, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_95 { pt3dadd( -0.870941, -322.92, -64.8691, 0.74 ) }
    dend_95 { pt3dadd( -0.840718, -323.478, -65.0559, 0.88 ) }
    dend_95 { pt3dadd( -0.784122, -324.286, -65.2737, 0.52 ) }
    dend_95 { pt3dadd( -0.715844, -325.099, -65.4286, 0.52 ) }
    dend_95 { pt3dadd( -0.66139, -325.693, -65.4795, 0.74 ) }
    dend_95 { pt3dadd( -0.59997, -326.261, -65.4671, 0.44 ) }
    dend_95 { pt3dadd( -0.58487, -326.392, -65.4531, 0.44 ) }
    dend_95 { pt3dadd( -0.490037, -327.427, -65.2937, 0.44 ) }
    dend_95 { pt3dadd( -0.470884, -328.046, -65.163, 0.22 ) }
    dend_95 { pt3dadd( -0.507275, -328.639, -65.0374, 0.22 ) }
    dend_95 { pt3dadd( -0.570508, -329.077, -64.981, 0.74 ) }
    dend_95 { pt3dadd( -0.582237, -329.138, -64.9788, 0.74 ) }
    dend_95 { pt3dadd( -0.692597, -329.633, -65.005, 0.96 ) }
    dend_95 { pt3dadd( -0.707872, -329.694, -65.015, 0.96 ) }
    dend_95 { pt3dadd( -0.827264, -330.272, -65.1162, 0.96 ) }
    dend_95 { pt3dadd( -0.92593, -331.265, -65.3161, 0.44 ) }
    dend_95 { pt3dadd( -0.948613, -331.787, -65.3746, 0.52 ) }
    dend_95 { pt3dadd( -0.948869, -331.848, -65.3778, 0.52 ) }
    dend_95 { pt3dadd( -0.941111, -332.364, -65.3962, 0.81 ) }
    dend_95 { pt3dadd( -0.909346, -333.078, -65.4265, 0.74 ) }
    dend_95 { pt3dadd( -0.835758, -334.1, -65.4644, 0.37 ) }
    dend_95 { pt3dadd( -0.759779, -335.398, -65.4938, 0.37 ) }
    dend_95 { pt3dadd( -0.747408, -335.88, -65.4867, 1.18 ) }
    dend_95 { pt3dadd( -0.745494, -336.765, -65.4537, 0.96 ) }
    dend_95 { pt3dadd( -0.763801, -337.714, -65.4013, 0.52 ) }
    dend_95 { pt3dadd( -0.810977, -338.799, -65.3245, 0.52 ) }
    dend_95 { pt3dadd( -0.88061, -340.015, -65.2076, 0.74 ) }
    dend_95 { pt3dadd( -0.927564, -341.289, -65.0924, 0.81 ) }
    dend_95 { pt3dadd( -0.929331, -341.359, -65.0823, 0.81 ) }
    dend_95 { pt3dadd( -0.942254, -341.919, -64.9443, 1.03 ) }
    dend_95 { pt3dadd( -0.944427, -341.987, -64.922, 1.03 ) }
    dend_95 { pt3dadd( -0.948677, -342.621, -64.6924, 0.52 ) }
    dend_95 { pt3dadd( -0.929585, -343.226, -64.4805, 0.37 ) }
    dend_95 { pt3dadd( -0.889789, -343.811, -64.3109, 0.88 ) }
    dend_95 { pt3dadd( -0.845296, -344.443, -64.1369, 0.96 ) }
    dend_95 { pt3dadd( -0.8021, -344.932, -64.0034, 0.74 ) }
    dend_95 { pt3dadd( -0.7347, -345.507, -63.859, 0.22 ) }
    dend_95 { pt3dadd( -0.637868, -346.087, -63.7135, 0.22 ) }
    dend_95 { pt3dadd( -0.49972, -346.571, -63.5886, 0.74 ) }
    dend_95 { pt3dadd( -0.353394, -346.901, -63.4994, 1.03 ) }
    dend_95 { pt3dadd( -0.121188, -347.283, -63.3924, 1.03 ) }
    dend_95 { pt3dadd( 0.234438, -347.735, -63.2188, 0.59 ) }
    dend_95 { pt3dadd( 0.78018, -348.334, -62.9464, 0.37 ) }
    dend_95 { pt3dadd( 1.33858, -348.916, -62.6592, 0.22 ) }
    dend_95 { pt3dadd( 1.7415, -349.36, -62.4446, 0.81 ) }
    dend_95 { pt3dadd( 2.05082, -349.729, -62.281, 0.81 ) }
    dend_95 { pt3dadd( 2.56582, -350.427, -62.0152, 0.29 ) }
    dend_95 { pt3dadd( 2.80937, -350.789, -61.896, 0.59 ) }
    dend_95 { pt3dadd( 3.04503, -351.174, -61.8015, 0.74 ) }
    dend_95 { pt3dadd( 3.3687, -351.789, -61.6874, 0.74 ) }
    dend_95 { pt3dadd( 3.64338, -352.358, -61.6207, 0.52 ) }
    dend_95 { pt3dadd( 4.10119, -353.289, -61.6347, 0.22 ) }
    dend_95 { pt3dadd( 4.33666, -353.774, -61.6964, 0.22 ) }
    dend_95 { pt3dadd( 4.50145, -354.121, -61.7539, 0.74 ) }
    dend_95 { pt3dadd( 4.70868, -354.583, -61.8486, 0.74 ) }
    dend_95 { pt3dadd( 5.1779, -355.693, -62.111, 0.22 ) }
    dend_95 { pt3dadd( 5.61181, -356.888, -62.4178, 0.81 ) }
    dend_95 { pt3dadd( 5.76169, -357.389, -62.5429, 0.81 ) }
    dend_95 { pt3dadd( 5.97919, -358.256, -62.7301, 0.22 ) }
    dend_95 { pt3dadd( 6.13097, -358.968, -62.8471, 0.22 ) }
    dend_95 { pt3dadd( 6.18755, -359.276, -62.8835, 0.81 ) }
    dend_95 { pt3dadd( 6.25663, -359.735, -62.9106, 1.03 ) }
    dend_95 { pt3dadd( 6.40134, -360.807, -62.9006, 0.29 ) }
    dend_95 { pt3dadd( 6.4566, -361.197, -62.8974, 0.29 ) }
    dend_95 { pt3dadd( 6.57842, -362.091, -62.8922, 0.29 ) }
    dend_95 { pt3dadd( 6.67444, -362.861, -62.8744, 0.15 ) }
    dend_95 { pt3dadd( 6.70785, -363.171, -62.8678, 0.52 ) }
    dend_95 { pt3dadd( 6.73758, -363.43, -62.8621, 0.66 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 68/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -20.8308, -80.7169, 2.16927, 0.96 ) }
    dend_67 { pt3dadd( -20.7152, -81.4609, 1.83241, 0.96 ) }
    dend_67 { pt3dadd( -20.6104, -82.2472, 1.49944, 0.96 ) }
    dend_67 { pt3dadd( -20.5151, -83.1272, 1.16078, 0.96 ) }
    dend_67 { pt3dadd( -20.4359, -84.0386, 0.840146, 0.81 ) }
    dend_67 { pt3dadd( -20.3813, -84.9526, 0.511616, 0.66 ) }
    dend_67 { pt3dadd( -20.3524, -85.7255, 0.240753, 0.66 ) }
    dend_67 { pt3dadd( -20.3526, -85.8134, 0.213092, 0.66 ) }
    dend_67 { pt3dadd( -20.3646, -86.3888, 0.0353446, 0.88 ) }
    dend_67 { pt3dadd( -20.3668, -86.7691, -0.0806825, 1.03 ) }
    dend_67 { pt3dadd( -20.2912, -87.7426, -0.416515, 0.74 ) }
    dend_67 { pt3dadd( -20.1838, -88.3302, -0.643301, 0.74 ) }
    dend_67 { pt3dadd( -20.004, -88.9547, -0.909062, 0.74 ) }
    dend_67 { pt3dadd( -19.7198, -89.7293, -1.25125, 0.96 ) }
    dend_67 { pt3dadd( -19.5119, -90.1867, -1.45763, 1.03 ) }
    dend_67 { pt3dadd( -19.2141, -90.7993, -1.71083, 1.03 ) }
    dend_67 { pt3dadd( -18.8534, -91.572, -1.97229, 0.88 ) }
    dend_67 { pt3dadd( -18.6525, -92.091, -2.11568, 0.88 ) }
    dend_67 { pt3dadd( -18.6185, -92.2562, -2.14379, 0.88 ) }
    dend_67 { pt3dadd( -18.6365, -92.6712, -2.12289, 0.59 ) }
    dend_67 { pt3dadd( -18.9, -93.4793, -1.94951, 0.52 ) }
    dend_67 { pt3dadd( -19.2524, -94.086, -1.73793, 0.74 ) }
    dend_67 { pt3dadd( -19.5658, -94.4791, -1.52426, 0.66 ) }
    dend_67 { pt3dadd( -20.0092, -94.9553, -1.21388, 0.52 ) }
    dend_67 { pt3dadd( -20.7093, -95.6532, -0.692297, 0.52 ) }
    dend_67 { pt3dadd( -21.0612, -95.9905, -0.41931, 0.74 ) }
    dend_67 { pt3dadd( -21.5151, -96.428, -0.0672271, 1.03 ) }
    dend_67 { pt3dadd( -22.0866, -97.0209, 0.360486, 1.03 ) }
    dend_67 { pt3dadd( -22.4804, -97.4626, 0.634568, 1.03 ) }
    dend_67 { pt3dadd( -23.0215, -98.1354, 0.976504, 0.74 ) }
    dend_67 { pt3dadd( -23.3654, -98.6046, 1.14468, 0.66 ) }
    dend_67 { pt3dadd( -23.7123, -99.1453, 1.31685, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_67 { pt3dadd( -23.983, -99.6541, 1.4635, 0.52 ) }
    dend_67 { pt3dadd( -24.0012, -99.6945, 1.47313, 0.52 ) }
    dend_67 { pt3dadd( -24.1632, -100.127, 1.59124, 0.66 ) }
    dend_67 { pt3dadd( -24.2932, -100.56, 1.7165, 0.81 ) }
    dend_67 { pt3dadd( -24.46, -101.16, 1.92171, 0.52 ) }
    dend_67 { pt3dadd( -24.6738, -101.899, 2.14781, 0.52 ) }
    dend_67 { pt3dadd( -24.7266, -102.048, 2.17069, 0.81 ) }
    dend_67 { pt3dadd( -24.9477, -102.527, 2.16372, 0.81 ) }
    dend_67 { pt3dadd( -25.1914, -102.911, 2.08946, 0.96 ) }
    dend_67 { pt3dadd( -25.6112, -103.394, 1.89034, 1.03 ) }
    dend_67 { pt3dadd( -26.2467, -103.916, 1.5753, 1.18 ) }
    dend_67 { pt3dadd( -27.0498, -104.449, 1.189, 0.81 ) }
    dend_67 { pt3dadd( -27.4452, -104.678, 0.999656, 0.88 ) }
    dend_67 { pt3dadd( -27.9424, -104.927, 0.776172, 1.18 ) }
    dend_67 { pt3dadd( -28.4631, -105.176, 0.567983, 1.55 ) }
    dend_67 { pt3dadd( -29.2038, -105.551, 0.347034, 0.66 ) }
    dend_67 { pt3dadd( -29.5321, -105.752, 0.298159, 0.66 ) }
    dend_67 { pt3dadd( -29.8158, -105.983, 0.301135, 0.52 ) }
    dend_67 { pt3dadd( -30.2904, -106.482, 0.355983, 0.52 ) }
    dend_67 { pt3dadd( -30.64, -106.964, 0.434384, 0.37 ) }
    dend_67 { pt3dadd( -30.9948, -107.622, 0.597849, 0.37 ) }
    dend_67 { pt3dadd( -31.1959, -108.112, 0.732664, 0.74 ) }
    dend_67 { pt3dadd( -31.401, -108.687, 0.914925, 1.25 ) }
    dend_67 { pt3dadd( -31.4134, -108.721, 0.927002, 1.25 ) }
    dend_67 { pt3dadd( -31.6106, -109.216, 1.10675, 1.18 ) }
    dend_67 { pt3dadd( -31.9405, -109.926, 1.36851, 1.03 ) }
    dend_67 { pt3dadd( -32.1763, -110.352, 1.51417, 0.66 ) }
    dend_67 { pt3dadd( -32.4788, -110.844, 1.66614, 0.37 ) }
    dend_67 { pt3dadd( -32.8925, -111.466, 1.82368, 0.37 ) }
    dend_67 { pt3dadd( -33.1895, -111.887, 1.91088, 0.44 ) }
    dend_67 { pt3dadd( -33.2211, -111.927, 1.91718, 0.44 ) }
    dend_67 { pt3dadd( -33.6359, -112.404, 1.95613, 0.37 ) }
    dend_67 { pt3dadd( -33.9458, -112.755, 1.97573, 0.59 ) }
    dend_67 { pt3dadd( -34.1368, -112.979, 1.98115, 0.59 ) }
    dend_67 { pt3dadd( -34.461, -113.395, 1.97739, 0.44 ) }
    dend_67 { pt3dadd( -34.7245, -113.752, 1.96905, 0.66 ) }
    dend_67 { pt3dadd( -35.0168, -114.16, 1.9599, 0.88 ) }
    dend_67 { pt3dadd( -35.3377, -114.627, 1.94922, 0.88 ) }
    dend_67 { pt3dadd( -35.7897, -115.283, 1.92362, 0.66 ) }
    dend_67 { pt3dadd( -36.1407, -115.805, 1.88926, 0.96 ) }
    dend_67 { pt3dadd( -36.4017, -116.182, 1.85739, 1.18 ) }
    dend_67 { pt3dadd( -36.9672, -116.924, 1.80072, 0.88 ) }
    dend_67 { pt3dadd( -37.2025, -117.187, 1.78517, 0.96 ) }
    dend_67 { pt3dadd( -37.7692, -117.686, 1.77324, 0.59 ) }
    dend_67 { pt3dadd( -37.8018, -117.705, 1.77449, 0.59 ) }
    dend_67 { pt3dadd( -38.4482, -117.953, 1.85182, 0.59 ) }
    dend_67 { pt3dadd( -39.0105, -118.089, 1.944, 0.52 ) }
    dend_67 { pt3dadd( -39.4153, -118.157, 2.02468, 0.52 ) }
    dend_67 { pt3dadd( -39.8255, -118.233, 2.14378, 0.74 ) }
    dend_67 { pt3dadd( -40.2498, -118.326, 2.29837, 0.96 ) }
    dend_67 { pt3dadd( -40.6634, -118.436, 2.45603, 0.81 ) }
    dend_67 { pt3dadd( -41.3896, -118.682, 2.7391, 0.96 ) }
    dend_67 { pt3dadd( -41.8611, -118.88, 2.91508, 0.96 ) }
    dend_67 { pt3dadd( -42.5739, -119.217, 3.18249, 0.44 ) }
    dend_67 { pt3dadd( -43.0075, -119.447, 3.34046, 0.44 ) }
    dend_67 { pt3dadd( -43.4791, -119.719, 3.49637, 0.66 ) }
    dend_67 { pt3dadd( -43.8819, -119.947, 3.60374, 0.59 ) }
    dend_67 { pt3dadd( -44.3617, -120.218, 3.71147, 0.59 ) }
    dend_67 { pt3dadd( -44.407, -120.243, 3.7188, 0.59 ) }
    dend_67 { pt3dadd( -44.7902, -120.452, 3.74424, 0.88 ) }
    dend_67 { pt3dadd( -45.4827, -120.877, 3.77227, 0.96 ) }
    dend_67 { pt3dadd( -45.9952, -121.236, 3.78049, 0.37 ) }
    dend_67 { pt3dadd( -46.068, -121.299, 3.78514, 0.37 ) }
    dend_67 { pt3dadd( -46.5209, -121.794, 3.84344, 0.37 ) }
    dend_67 { pt3dadd( -46.8483, -122.241, 3.91073, 0.29 ) }
    dend_67 { pt3dadd( -47.1276, -122.731, 3.99648, 0.29 ) }
    dend_67 { pt3dadd( -47.3162, -123.12, 4.07258, 0.52 ) }
    dend_67 { pt3dadd( -47.713, -123.947, 4.24492, 1.03 ) }
    dend_67 { pt3dadd( -47.923, -124.352, 4.33024, 1.25 ) }
    dend_67 { pt3dadd( -48.1052, -124.668, 4.39298, 1.25 ) }
    dend_67 { pt3dadd( -48.49, -125.202, 4.4984, 0.88 ) }
    dend_67 { pt3dadd( -48.9012, -125.649, 4.57683, 0.74 ) }
    dend_67 { pt3dadd( -49.3623, -126.061, 4.62031, 0.74 ) }
    dend_67 { pt3dadd( -49.7467, -126.351, 4.62444, 0.96 ) }
    dend_67 { pt3dadd( -50.2879, -126.724, 4.61908, 0.66 ) }
    dend_67 { pt3dadd( -50.7507, -127.033, 4.58306, 0.74 ) }
    dend_67 { pt3dadd( -51.0276, -127.223, 4.5505, 1.03 ) }
    dend_67 { pt3dadd( -51.4173, -127.517, 4.49109, 1.4 ) }
    dend_67 { pt3dadd( -51.4474, -127.543, 4.48573, 1.4 ) }
    dend_67 { pt3dadd( -51.7284, -127.853, 4.43089, 1.4 ) }
    dend_67 { pt3dadd( -52.2222, -128.592, 4.3364, 0.52 ) }
    dend_67 { pt3dadd( -52.4605, -129.054, 4.28236, 0.81 ) }
    dend_67 { pt3dadd( -52.6177, -129.388, 4.25103, 0.88 ) }
    dend_67 { pt3dadd( -52.7703, -129.732, 4.22934, 0.52 ) }
    dend_67 { pt3dadd( -53.006, -130.242, 4.2034, 0.44 ) }
    dend_67 { pt3dadd( -53.2117, -130.679, 4.18942, 0.44 ) }
    dend_67 { pt3dadd( -53.4128, -131.042, 4.19852, 0.44 ) }
    dend_67 { pt3dadd( -53.6619, -131.384, 4.19851, 0.66 ) }
    dend_67 { pt3dadd( -53.7281, -131.448, 4.20701, 0.66 ) }
    dend_67 { pt3dadd( -54.0107, -131.643, 4.26889, 0.88 ) }
    dend_67 { pt3dadd( -54.0669, -131.671, 4.28449, 0.88 ) }
    dend_67 { pt3dadd( -54.4289, -131.853, 4.40233, 0.96 ) }
    dend_67 { pt3dadd( -54.6366, -131.972, 4.47579, 0.66 ) }
    dend_67 { pt3dadd( -55.1468, -132.303, 4.65698, 0.52 ) }
    dend_67 { pt3dadd( -55.4952, -132.546, 4.77436, 0.44 ) }
    dend_67 { pt3dadd( -55.7522, -132.746, 4.85298, 0.74 ) }
    dend_67 { pt3dadd( -56.0797, -133.023, 4.93993, 0.81 ) }
    dend_67 { pt3dadd( -56.489, -133.433, 5.02908, 0.52 ) }
    dend_67 { pt3dadd( -56.5232, -133.473, 5.03197, 0.52 ) }
    dend_67 { pt3dadd( -56.7449, -133.758, 5.01771, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_67 { pt3dadd( -57.0681, -134.225, 4.97375, 0.96 ) }
    dend_67 { pt3dadd( -57.246, -134.512, 4.93715, 1.11 ) }
    dend_67 { pt3dadd( -57.5097, -134.942, 4.88084, 0.81 ) }
    dend_67 { pt3dadd( -57.8683, -135.493, 4.78906, 0.66 ) }
    dend_67 { pt3dadd( -57.8907, -135.523, 4.78267, 0.66 ) }
    dend_67 { pt3dadd( -58.2591, -135.947, 4.69823, 0.52 ) }
    dend_67 { pt3dadd( -58.6427, -136.26, 4.6514, 0.37 ) }
    dend_67 { pt3dadd( -58.9619, -136.425, 4.67564, 0.29 ) }
    dend_67 { pt3dadd( -59.4869, -136.597, 4.80119, 0.66 ) }
    dend_67 { pt3dadd( -59.7903, -136.679, 4.90737, 0.74 ) }
    dend_67 { pt3dadd( -60.3912, -136.882, 5.17379, 0.29 ) }
    dend_67 { pt3dadd( -60.6663, -136.996, 5.31337, 0.66 ) }
    dend_67 { pt3dadd( -61.0397, -137.2, 5.51502, 0.88 ) }
    dend_67 { pt3dadd( -61.3989, -137.445, 5.70775, 0.88 ) }
    dend_67 { pt3dadd( -61.6012, -137.603, 5.81362, 0.88 ) }
    dend_67 { pt3dadd( -62.1944, -138.096, 6.08359, 0.58 ) }
    dend_67 { pt3dadd( -62.5836, -138.431, 6.22035, 0.81 ) }
    dend_67 { pt3dadd( -62.9349, -138.738, 6.32485, 1.11 ) }
    dend_67 { pt3dadd( -63.2537, -139.02, 6.39919, 0.74 ) }
    dend_67 { pt3dadd( -63.6146, -139.335, 6.48285, 0.88 ) }
    dend_67 { pt3dadd( -63.9753, -139.617, 6.56056, 0.81 ) }
    dend_67 { pt3dadd( -64.334, -139.861, 6.62771, 0.74 ) }
    dend_67 { pt3dadd( -64.9136, -140.219, 6.74244, 0.44 ) }
    dend_67 { pt3dadd( -65.4525, -140.534, 6.85227, 0.74 ) }
    dend_67 { pt3dadd( -65.8862, -140.768, 6.946, 0.88 ) }
    dend_67 { pt3dadd( -66.4627, -141.021, 7.12564, 0.52 ) }
    dend_67 { pt3dadd( -66.7862, -141.146, 7.26176, 0.59 ) }
    dend_67 { pt3dadd( -67.3769, -141.358, 7.56269, 0.59 ) }
    dend_67 { pt3dadd( -67.408, -141.37, 7.58067, 0.59 ) }
    dend_67 { pt3dadd( -67.7124, -141.523, 7.77002, 0.66 ) }
    dend_67 { pt3dadd( -68.5652, -142.142, 8.26605, 0.59 ) }
    dend_67 { pt3dadd( -68.9504, -142.516, 8.47723, 0.59 ) }
    dend_67 { pt3dadd( -69.2003, -142.808, 8.58464, 0.81 ) }
    dend_67 { pt3dadd( -69.5697, -143.292, 8.70342, 0.52 ) }
    dend_67 { pt3dadd( -69.9652, -143.839, 8.77385, 0.66 ) }
    dend_67 { pt3dadd( -70.4104, -144.494, 8.78206, 0.44 ) }
    dend_67 { pt3dadd( -70.6724, -144.916, 8.74193, 1.11 ) }
    dend_67 { pt3dadd( -71.1743, -145.728, 8.63786, 0.59 ) }
    dend_67 { pt3dadd( -71.1978, -145.766, 8.63373, 0.59 ) }
    dend_67 { pt3dadd( -71.4817, -146.205, 8.59804, 0.44 ) }
    dend_67 { pt3dadd( -71.6188, -146.397, 8.59109, 0.44 ) }
    dend_67 { pt3dadd( -72.066, -146.939, 8.63917, 0.44 ) }
    dend_67 { pt3dadd( -72.3744, -147.243, 8.70925, 0.37 ) }
    dend_67 { pt3dadd( -72.722, -147.509, 8.82934, 0.29 ) }
    dend_67 { pt3dadd( -73.0164, -147.703, 8.96856, 0.66 ) }
    dend_67 { pt3dadd( -73.3034, -147.858, 9.13139, 1.03 ) }
    dend_67 { pt3dadd( -73.6595, -148.017, 9.34263, 1.03 ) }
    dend_67 { pt3dadd( -73.9259, -148.115, 9.50056, 0.81 ) }
    dend_67 { pt3dadd( -74.3865, -148.296, 9.76249, 0.52 ) }
    dend_67 { pt3dadd( -74.8955, -148.559, 10.0277, 0.66 ) }
    dend_67 { pt3dadd( -75.1783, -148.762, 10.1665, 0.29 ) }
    dend_67 { pt3dadd( -75.3184, -148.887, 10.2291, 0.59 ) }
    dend_67 { pt3dadd( -75.5755, -149.13, 10.3198, 0.81 ) }
    dend_67 { pt3dadd( -75.8798, -149.401, 10.4071, 0.81 ) }
    dend_67 { pt3dadd( -76.279, -149.697, 10.4899, 0.52 ) }
    dend_67 { pt3dadd( -76.7854, -150.014, 10.5513, 0.74 ) }
    dend_67 { pt3dadd( -76.8204, -150.033, 10.5556, 0.74 ) }
    dend_67 { pt3dadd( -77.3507, -150.287, 10.6206, 0.44 ) }
    dend_67 { pt3dadd( -77.7271, -150.461, 10.6614, 0.74 ) }
    dend_67 { pt3dadd( -78.1384, -150.652, 10.7018, 1.11 ) }
    dend_67 { pt3dadd( -78.7449, -150.952, 10.7566, 0.59 ) }
    dend_67 { pt3dadd( -79.1048, -151.166, 10.7864, 0.66 ) }
    dend_67 { pt3dadd( -79.4635, -151.433, 10.8132, 0.81 ) }
    dend_67 { pt3dadd( -79.8748, -151.835, 10.8402, 0.52 ) }
    dend_67 { pt3dadd( -80.1352, -152.134, 10.8558, 0.66 ) }
    dend_67 { pt3dadd( -80.3656, -152.414, 10.8699, 0.66 ) }
    dend_67 { pt3dadd( -80.6004, -152.682, 10.8681, 0.44 ) }
    dend_67 { pt3dadd( -80.632, -152.714, 10.8664, 0.44 ) }
    dend_67 { pt3dadd( -81.1358, -153.111, 10.8255, 0.37 ) }
    dend_67 { pt3dadd( -81.2217, -153.155, 10.8184, 0.37 ) }
    dend_67 { pt3dadd( -81.815, -153.288, 10.7746, 0.37 ) }
    dend_67 { pt3dadd( -82.3635, -153.298, 10.7071, 0.29 ) }
    dend_67 { pt3dadd( -82.6926, -153.27, 10.6581, 0.37 ) }
    dend_67 { pt3dadd( -83.0404, -153.228, 10.6165, 0.44 ) }
    dend_67 { pt3dadd( -83.5215, -153.131, 10.5536, 0.37 ) }
    dend_67 { pt3dadd( -84.1784, -152.971, 10.4682, 0.29 ) }
    dend_67 { pt3dadd( -84.9058, -152.736, 10.3789, 0.22 ) }
    dend_67 { pt3dadd( -85.0541, -152.683, 10.3689, 0.44 ) }
    dend_67 { pt3dadd( -85.735, -152.419, 10.2916, 0.52 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 79/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -20.8308, -80.7169, 2.16927, 0.74 ) }
    dend_66 { pt3dadd( -21.3495, -81.2056, 2.37212, 0.74 ) }
    dend_66 { pt3dadd( -21.9826, -81.8058, 2.61907, 0.44 ) }
    dend_66 { pt3dadd( -22.6073, -82.3871, 2.86097, 0.59 ) }
    dend_66 { pt3dadd( -23.3961, -83.0896, 3.12428, 0.37 ) }
    dend_66 { pt3dadd( -24.0006, -83.6341, 3.32472, 0.59 ) }
    dend_66 { pt3dadd( -24.2616, -83.8666, 3.4107, 0.88 ) }
    dend_66 { pt3dadd( -24.3215, -83.9176, 3.42786, 0.88 ) }
    dend_66 { pt3dadd( -24.5799, -84.1288, 3.48907, 1.11 ) }
    dend_66 { pt3dadd( -25.169, -84.5257, 3.60591, 0.88 ) }
    dend_66 { pt3dadd( -25.8993, -84.8918, 3.73533, 0.37 ) }
    dend_66 { pt3dadd( -26.3561, -85.0649, 3.80568, 0.66 ) }
    dend_66 { pt3dadd( -27.0733, -85.2815, 3.88244, 0.81 ) }
    dend_66 { pt3dadd( -27.7392, -85.4738, 3.94062, 0.74 ) }
    dend_66 { pt3dadd( -28.6672, -85.7253, 4.01071, 0.88 ) }
    dend_66 { pt3dadd( -29.3211, -85.8962, 4.06073, 0.74 ) }
    dend_66 { pt3dadd( -30.3305, -86.1724, 4.0924, 0.52 ) }
    dend_66 { pt3dadd( -31.5311, -86.5669, 4.11696, 0.52 ) }
    dend_66 { pt3dadd( -32.247, -86.8632, 4.16487, 0.74 ) }
    dend_66 { pt3dadd( -32.3091, -86.8971, 4.17669, 0.74 ) }
    dend_66 { pt3dadd( -32.7996, -87.3293, 4.65992, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_66 { pt3dadd( -33.3159, -87.9552, 5.65095, 1.03 ) }
    dend_66 { pt3dadd( -33.5918, -88.3413, 6.35701, 1.18 ) }
    dend_66 { pt3dadd( -33.9584, -88.8816, 7.47609, 0.96 ) }
    dend_66 { pt3dadd( -34.4359, -89.59, 9.08871, 1.18 ) }
    dend_66 { pt3dadd( -35.8196, -91.5518, 13.8176, 0.66 ) }
    dend_66 { pt3dadd( -36.0034, -91.8324, 14.5271, 0.66 ) }
    dend_66 { pt3dadd( -36.1925, -92.1349, 15.2873, 0.81 ) }
    dend_66 { pt3dadd( -36.3839, -92.4295, 15.9836, 0.81 ) }
    dend_66 { pt3dadd( -36.4101, -92.4694, 16.0637, 0.81 ) }
    dend_66 { pt3dadd( -36.7326, -93.0186, 16.9354, 0.88 ) }
    dend_66 { pt3dadd( -37.251, -93.9925, 18.3693, 0.88 ) }
    dend_66 { pt3dadd( -37.4924, -94.6035, 19.3649, 0.74 ) }
    dend_66 { pt3dadd( -37.5815, -94.8852, 19.8457, 0.96 ) }
    dend_66 { pt3dadd( -37.9352, -96.141, 21.9666, 0.44 ) }
    dend_66 { pt3dadd( -38.2256, -97.248, 23.8193, 1.25 ) }
    dend_66 { pt3dadd( -38.5939, -98.8014, 26.3619, 0.59 ) }
    dend_66 { pt3dadd( -38.8466, -99.7199, 27.8216, 0.96 ) }
    dend_66 { pt3dadd( -38.8602, -99.7649, 27.8894, 0.96 ) }
    dend_66 { pt3dadd( -39.0768, -100.379, 28.703, 0.59 ) }
    dend_66 { pt3dadd( -39.362, -101.011, 29.3722, 0.52 ) }
    dend_66 { pt3dadd( -39.984, -102.215, 30.389, 0.81 ) }
    dend_66 { pt3dadd( -40.8004, -103.781, 31.4387, 0.44 ) }
    dend_66 { pt3dadd( -41.224, -104.588, 31.9298, 0.59 ) }
    dend_66 { pt3dadd( -41.5831, -105.329, 32.3984, 0.74 ) }
    dend_66 { pt3dadd( -41.9245, -106.139, 32.9785, 0.44 ) }
    dend_66 { pt3dadd( -42.2738, -107.086, 33.7029, 0.44 ) }
    dend_66 { pt3dadd( -42.6345, -108.166, 34.5314, 0.29 ) }
    dend_66 { pt3dadd( -42.8944, -109.149, 35.2992, 0.44 ) }
    dend_66 { pt3dadd( -43.139, -110.402, 36.3796, 0.81 ) }
    dend_66 { pt3dadd( -43.3167, -111.842, 37.7611, 1.03 ) }
    dend_66 { pt3dadd( -43.3182, -111.892, 37.8136, 1.03 ) }
    dend_66 { pt3dadd( -47.418, -119.951, 44.7509, 1.03 ) }
    dend_66 { pt3dadd( -52.1411, -127.809, 51.5119, 1.03 ) }
    dend_66 { pt3dadd( -56.3983, -136.926, 56.9478, 1.03 ) }
    dend_66 { pt3dadd( -62.1628, -145.361, 62.0372, 1.03 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 35/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.1943, -52.9282, -4.17938, 1.4 ) }
    dend_48 { pt3dadd( -2.80018, -53.3441, -4.35314, 1.4 ) }
    dend_48 { pt3dadd( -2.18193, -53.9873, -4.70802, 1.11 ) }
    dend_48 { pt3dadd( -1.47744, -54.8037, -5.27173, 0.96 ) }
    dend_48 { pt3dadd( -0.974129, -55.4727, -5.81268, 0.96 ) }
    dend_48 { pt3dadd( -0.608324, -56.051, -6.33657, 1.11 ) }
    dend_48 { pt3dadd( -0.217351, -56.7293, -6.96524, 1.25 ) }
    dend_48 { pt3dadd( 0.244857, -57.6305, -7.84447, 1.18 ) }
    dend_48 { pt3dadd( 0.719091, -58.7, -8.87023, 1.18 ) }
    dend_48 { pt3dadd( 1.04263, -59.6014, -9.67094, 1.03 ) }
    dend_48 { pt3dadd( 1.37406, -60.8095, -10.6123, 0.88 ) }
    dend_48 { pt3dadd( 1.49636, -61.4028, -10.9901, 0.96 ) }
    dend_48 { pt3dadd( 1.67691, -62.5071, -11.5477, 1.11 ) }
    dend_48 { pt3dadd( 1.82533, -63.6849, -11.9907, 1.11 ) }
    dend_48 { pt3dadd( 1.90367, -64.5124, -12.193, 0.96 ) }
    dend_48 { pt3dadd( 1.96358, -65.619, -12.3618, 1.11 ) }
    dend_48 { pt3dadd( 1.94944, -67.1552, -12.5135, 1.18 ) }
    dend_48 { pt3dadd( 1.89003, -67.9135, -12.5859, 1.18 ) }
    dend_48 { pt3dadd( 1.7756, -68.7653, -12.67, 1.18 ) }
    dend_48 { pt3dadd( 1.50582, -70.3873, -12.8429, 0.96 ) }
    dend_48 { pt3dadd( 1.30808, -71.47, -12.971, 1.03 ) }
    dend_48 { pt3dadd( 0.979402, -73.133, -13.2056, 1.03 ) }
    dend_48 { pt3dadd( 0.716457, -74.3327, -13.4041, 1.33 ) }
    dend_48 { pt3dadd( 0.523501, -75.2111, -13.574, 1.55 ) }
    dend_48 { pt3dadd( 0.376146, -75.931, -13.7454, 1.33 ) }
    dend_48 { pt3dadd( 0.162168, -77.0761, -14.0624, 1.03 ) }
    dend_48 { pt3dadd( 0.0236039, -78.0343, -14.3394, 1.33 ) }
    dend_48 { pt3dadd( -0.0658543, -78.883, -14.5888, 1.33 ) }
    dend_48 { pt3dadd( -0.213917, -80.4896, -15.0353, 1.25 ) }
    dend_48 { pt3dadd( -0.396717, -82.2218, -15.5248, 1.03 ) }
    dend_48 { pt3dadd( -0.521994, -83.2048, -15.8049, 0.96 ) }
    dend_48 { pt3dadd( -0.722858, -84.4436, -16.1569, 0.96 ) }
    dend_48 { pt3dadd( -0.87834, -85.207, -16.3668, 0.96 ) }
    dend_48 { pt3dadd( -1.13745, -86.3344, -16.6889, 0.96 ) }
    dend_48 { pt3dadd( -1.44837, -87.3885, -16.9874, 1.11 ) }
    dend_48 { pt3dadd( -1.65189, -87.9004, -17.1218, 1.25 ) }
    dend_48 { pt3dadd( -2.11622, -88.7884, -17.3716, 1.4 ) }
    dend_48 { pt3dadd( -2.4974, -89.3193, -17.5416, 1.4 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 73/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -3.1943, -52.9282, -4.17938, 1.11 ) }
    dend_43 { pt3dadd( -3.52709, -56.1023, -1.31237, 1.11 ) }
    dend_43 { pt3dadd( -3.55896, -56.8329, -0.871674, 1.11 ) }
    dend_43 { pt3dadd( -3.58395, -58.0158, -0.281691, 1.03 ) }
    dend_43 { pt3dadd( -3.56283, -59.8276, 0.425567, 1.11 ) }
    dend_43 { pt3dadd( -3.55975, -59.9116, 0.450075, 1.11 ) }
    dend_43 { pt3dadd( -3.50514, -61.4271, 0.803279, 1.11 ) }
    dend_43 { pt3dadd( -3.39166, -63.1407, 0.971896, 1.11 ) }
    dend_43 { pt3dadd( -3.38567, -63.2305, 0.980179, 1.11 ) }
    dend_43 { pt3dadd( -3.293, -64.7708, 1.10595, 1.11 ) }
    dend_43 { pt3dadd( -3.19698, -66.6815, 1.21717, 1.03 ) }
    dend_43 { pt3dadd( -3.15538, -67.9142, 1.27259, 1.33 ) }
    dend_43 { pt3dadd( -3.1663, -69.3825, 1.33146, 1.18 ) }
    dend_43 { pt3dadd( -3.33342, -71.2364, 1.40817, 0.88 ) }
    dend_43 { pt3dadd( -3.34631, -71.3258, 1.41164, 0.88 ) }
    dend_43 { pt3dadd( -3.7985, -73.3467, 1.52442, 0.88 ) }
    dend_43 { pt3dadd( -4.2714, -74.9357, 1.63005, 0.88 ) }
    dend_43 { pt3dadd( -4.78513, -76.3201, 1.72961, 1.11 ) }
    dend_43 { pt3dadd( -5.54867, -78.1794, 1.94697, 0.88 ) }
    dend_43 { pt3dadd( -5.57952, -78.2499, 1.96015, 0.88 ) }
    dend_43 { pt3dadd( -6.11826, -79.5591, 2.2677, 0.88 ) }
    dend_43 { pt3dadd( -6.21179, -79.798, 2.33999, 0.88 ) }
    dend_43 { pt3dadd( -6.52385, -80.9169, 2.70933, 0.96 ) }
    dend_43 { pt3dadd( -6.88168, -83.1892, 3.45316, 0.81 ) }
    dend_43 { pt3dadd( -6.93611, -83.8704, 3.66197, 1.18 ) }
    dend_43 { pt3dadd( -6.99548, -85.0043, 3.97782, 0.96 ) }
    dend_43 { pt3dadd( -6.99981, -85.177, 4.01825, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_43 { pt3dadd( -7.00387, -86.8062, 4.33929, 0.74 ) }
    dend_43 { pt3dadd( -6.99297, -87.9419, 4.43523, 0.96 ) }
    dend_43 { pt3dadd( -6.99754, -88.908, 4.39196, 1.03 ) }
    dend_43 { pt3dadd( -6.99957, -89.0831, 4.36238, 1.03 ) }
    dend_43 { pt3dadd( -7.01651, -90.2231, 4.07115, 1.33 ) }
    dend_43 { pt3dadd( -7.02693, -91.3787, 3.68376, 1.55 ) }
    dend_43 { pt3dadd( -7.03543, -93.1314, 2.97549, 1.25 ) }
    dend_43 { pt3dadd( -6.97061, -94.4394, 2.38334, 1.4 ) }
    dend_43 { pt3dadd( -6.81316, -96.2726, 1.53396, 1.55 ) }
    dend_43 { pt3dadd( -6.67815, -97.5835, 0.924338, 1.11 ) }
    dend_43 { pt3dadd( -6.47318, -99.2415, 0.135247, 0.74 ) }
    dend_43 { pt3dadd( -6.46271, -99.3323, 0.0953523, 0.74 ) }
    dend_43 { pt3dadd( -6.35048, -100.485, -0.362133, 0.74 ) }
    dend_43 { pt3dadd( -6.27329, -101.311, -0.59685, 0.96 ) }
    dend_43 { pt3dadd( -6.263, -101.427, -0.613403, 0.96 ) }
    dend_43 { pt3dadd( -6.16074, -102.994, -0.739122, 1.11 ) }
    dend_43 { pt3dadd( -6.01536, -104.304, -0.789896, 1.11 ) }
    dend_43 { pt3dadd( -5.80193, -106.061, -0.969917, 1.25 ) }
    dend_43 { pt3dadd( -5.46565, -108.726, -1.34568, 0.96 ) }
    dend_43 { pt3dadd( -5.18885, -110.595, -1.70148, 0.96 ) }
    dend_43 { pt3dadd( -4.96332, -111.944, -2.00299, 1.11 ) }
    dend_43 { pt3dadd( -4.44994, -114.648, -2.68338, 1.11 ) }
    dend_43 { pt3dadd( -3.92336, -117.211, -3.43441, 1.25 ) }
    dend_43 { pt3dadd( -3.76868, -117.971, -3.68071, 1.55 ) }
    dend_43 { pt3dadd( -3.51849, -119.512, -4.28868, 1.47 ) }
    dend_43 { pt3dadd( -3.50812, -119.594, -4.3157, 1.47 ) }
    dend_43 { pt3dadd( -3.444, -120.57, -4.5263, 0.88 ) }
    dend_43 { pt3dadd( -3.4692, -121.889, -4.53585, 0.59 ) }
    dend_43 { pt3dadd( -3.51341, -123.244, -4.28329, 0.74 ) }
    dend_43 { pt3dadd( -3.56257, -124.205, -4.0321, 1.03 ) }
    dend_43 { pt3dadd( -3.68104, -126.09, -3.47499, 1.03 ) }
    dend_43 { pt3dadd( -3.73885, -126.915, -3.2278, 1.25 ) }
    dend_43 { pt3dadd( -3.87364, -128.807, -2.6504, 1.25 ) }
    dend_43 { pt3dadd( -3.97249, -130.248, -2.20474, 0.74 ) }
    dend_43 { pt3dadd( -4.06707, -131.438, -1.89999, 0.74 ) }
    dend_43 { pt3dadd( -4.17768, -132.657, -1.75929, 0.96 ) }
    dend_43 { pt3dadd( -4.18484, -132.735, -1.7651, 0.96 ) }
    dend_43 { pt3dadd( -4.28037, -134.115, -2.03429, 1.18 ) }
    dend_43 { pt3dadd( -4.28389, -134.213, -2.06382, 1.18 ) }
    dend_43 { pt3dadd( -4.26643, -135.955, -2.64942, 1.33 ) }
    dend_43 { pt3dadd( -4.16664, -138.037, -3.3231, 1.03 ) }
    dend_43 { pt3dadd( -4.06168, -139.743, -3.81758, 0.88 ) }
    dend_43 { pt3dadd( -4.02574, -140.387, -3.98256, 1.33 ) }
    dend_43 { pt3dadd( -3.97395, -141.7, -4.26775, 1.33 ) }
    dend_43 { pt3dadd( -3.95679, -143.176, -4.50866, 1.55 ) }
    dend_43 { pt3dadd( -4.01494, -144.638, -4.61889, 1.33 ) }
    dend_43 { pt3dadd( -4.1865, -145.97, -4.61953, 1.11 ) }
    dend_43 { pt3dadd( -4.51073, -147.394, -4.56068, 0.66 ) }
    dend_43 { pt3dadd( -4.9542, -148.791, -4.46677, 0.66 ) }
    dend_43 { pt3dadd( -5.49805, -150.132, -4.34134, 0.74 ) }
    dend_43 { pt3dadd( -6.15557, -151.542, -4.17917, 0.59 ) }
    dend_43 { pt3dadd( -6.5944, -152.486, -4.05395, 0.88 ) }
    dend_43 { pt3dadd( -6.96925, -153.442, -3.93244, 0.96 ) }
    dend_43 { pt3dadd( -7.19723, -154.375, -3.83689, 0.88 ) }
    dend_43 { pt3dadd( -7.19818, -154.462, -3.82435, 0.88 ) }
    dend_43 { pt3dadd( -6.98554, -155.701, -3.61699, 0.74 ) }
    dend_43 { pt3dadd( -6.68128, -156.882, -3.41674, 1.25 ) }
    dend_43 { pt3dadd( -6.3378, -158.167, -3.17774, 1.25 ) }
    dend_43 { pt3dadd( -6.01294, -159.597, -2.89182, 1.03 ) }
    dend_43 { pt3dadd( -5.66489, -162.002, -2.37787, 0.74 ) }
    dend_43 { pt3dadd( -5.58861, -163.37, -2.07076, 0.59 ) }
    dend_43 { pt3dadd( -5.64652, -164.177, -1.88183, 0.81 ) }
    dend_43 { pt3dadd( -5.90909, -165.31, -1.62693, 0.88 ) }
    dend_43 { pt3dadd( -6.37136, -166.624, -1.3663, 1.03 ) }
    dend_43 { pt3dadd( -6.79228, -167.736, -1.21303, 1.11 ) }
    dend_43 { pt3dadd( -6.8875, -167.985, -1.21244, 1.11 ) }
    dend_43 { pt3dadd( -7.30878, -169.218, -1.34948, 0.96 ) }
    dend_43 { pt3dadd( -7.72604, -170.615, -1.61658, 1.11 ) }
    dend_43 { pt3dadd( -8.06762, -172.015, -1.97932, 0.96 ) }
    dend_43 { pt3dadd( -8.47558, -174.059, -2.59732, 1.18 ) }
    dend_43 { pt3dadd( -8.8709, -176.251, -3.19813, 1.03 ) }
    dend_43 { pt3dadd( -9.26385, -178.501, -3.76902, 0.96 ) }
    dend_43 { pt3dadd( -9.28608, -178.657, -3.80547, 0.96 ) }
    dend_43 { pt3dadd( -9.44616, -180.293, -4.12043, 0.96 ) }
    dend_43 { pt3dadd( -9.49641, -181.491, -4.22703, 1.4 ) }
    dend_43 { pt3dadd( -9.43204, -183.834, -4.15055, 1.11 ) }
    dend_43 { pt3dadd( -9.42062, -183.949, -4.13451, 1.11 ) }
    dend_43 { pt3dadd( -9.23242, -185.315, -3.88869, 1.25 ) }
    dend_43 { pt3dadd( -8.96568, -187.09, -3.5808, 1.11 ) }
    dend_43 { pt3dadd( -8.63483, -189.039, -3.28339, 0.88 ) }
    dend_43 { pt3dadd( -8.43479, -190.106, -3.16482, 1.18 ) }
    dend_43 { pt3dadd( -8.06557, -191.798, -3.08381, 1.25 ) }
    dend_43 { pt3dadd( -7.83399, -192.954, -3.03964, 1.4 ) }
    dend_43 { pt3dadd( -7.81799, -193.052, -3.03779, 1.4 ) }
    dend_43 { pt3dadd( -7.61972, -194.764, -3.01486, 1.03 ) }
    dend_43 { pt3dadd( -7.60915, -195.032, -3.01416, 1.03 ) }
    dend_43 { pt3dadd( -7.66116, -196.497, -2.97108, 0.74 ) }
    dend_43 { pt3dadd( -7.81364, -197.76, -2.83582, 0.74 ) }
    dend_43 { pt3dadd( -8.03699, -198.746, -2.66413, 0.96 ) }
    dend_43 { pt3dadd( -8.49562, -200.21, -2.3407, 0.88 ) }
    dend_43 { pt3dadd( -9.03535, -201.533, -1.98444, 0.88 ) }
    dend_43 { pt3dadd( -9.5616, -202.663, -1.65191, 0.88 ) }
    dend_43 { pt3dadd( -10.3586, -204.147, -1.16697, 1.11 ) }
    dend_43 { pt3dadd( -10.9278, -205.182, -0.825437, 1.25 ) }
    dend_43 { pt3dadd( -11.4512, -206.169, -0.523476, 1.4 ) }
    dend_43 { pt3dadd( -11.6029, -206.467, -0.457508, 1.4 ) }
    dend_43 { pt3dadd( -11.958, -207.306, -0.341751, 1.4 ) }
    dend_43 { pt3dadd( -12.0488, -207.558, -0.35659, 1.4 ) }
    dend_43 { pt3dadd( -12.4901, -209.038, -0.743508, 1.25 ) }
    dend_43 { pt3dadd( -12.764, -210.157, -1.14006, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_43 { pt3dadd( -12.9488, -211.151, -1.58924, 0.96 ) }
    dend_43 { pt3dadd( -13.166, -212.559, -2.30298, 0.96 ) }
    dend_43 { pt3dadd( -13.4969, -214.928, -3.70622, 0.81 ) }
    dend_43 { pt3dadd( -13.7456, -216.91, -5.04754, 0.81 ) }
    dend_43 { pt3dadd( -13.8675, -217.793, -5.70614, 1.03 ) }
    dend_43 { pt3dadd( -14.1954, -219.884, -7.26704, 1.03 ) }
    dend_43 { pt3dadd( -14.2123, -219.985, -7.33951, 1.03 ) }
    dend_43 { pt3dadd( -14.5213, -221.741, -8.50409, 1.55 ) }
    dend_43 { pt3dadd( -14.8878, -223.847, -9.665, 0.88 ) }
    dend_43 { pt3dadd( -15.2513, -225.842, -10.641, 0.81 ) }
    dend_43 { pt3dadd( -15.5643, -227.394, -11.3655, 0.81 ) }
    dend_43 { pt3dadd( -15.8101, -228.536, -11.854, 0.96 ) }
    dend_43 { pt3dadd( -16.0573, -229.733, -12.3246, 0.96 ) }
    dend_43 { pt3dadd( -16.2842, -230.952, -12.7278, 0.74 ) }
    dend_43 { pt3dadd( -16.6251, -232.952, -13.3295, 1.25 ) }
    dend_43 { pt3dadd( -16.8736, -234.874, -13.9105, 0.81 ) }
    dend_43 { pt3dadd( -16.883, -234.958, -13.9351, 0.81 ) }
    dend_43 { pt3dadd( -17.0322, -236.346, -14.2215, 0.81 ) }
    dend_43 { pt3dadd( -17.1632, -237.436, -14.3484, 1.18 ) }
    dend_43 { pt3dadd( -17.182, -237.604, -14.3503, 1.18 ) }
    dend_43 { pt3dadd( -17.2997, -238.783, -14.2491, 1.18 ) }
    dend_43 { pt3dadd( -17.4468, -240.842, -13.9808, 0.81 ) }
    dend_43 { pt3dadd( -17.582, -242.86, -13.7232, 0.81 ) }
    dend_43 { pt3dadd( -17.6506, -243.955, -13.5811, 1.11 ) }
    dend_43 { pt3dadd( -17.7746, -245.788, -13.375, 1.11 ) }
    dend_43 { pt3dadd( -17.7853, -245.979, -13.3508, 1.11 ) }
    dend_43 { pt3dadd( -17.8302, -247.575, -13.0192, 0.96 ) }
    dend_43 { pt3dadd( -17.822, -248.355, -12.8172, 1.25 ) }
    dend_43 { pt3dadd( -17.8205, -248.439, -12.794, 1.25 ) }
    dend_43 { pt3dadd( -17.7872, -249.907, -12.3423, 1.25 ) }
    dend_43 { pt3dadd( -17.786, -252.262, -11.5674, 1.03 ) }
    dend_43 { pt3dadd( -17.8243, -255.088, -10.6176, 0.81 ) }
    dend_43 { pt3dadd( -17.8361, -256.065, -10.2983, 1.11 ) }
    dend_43 { pt3dadd( -17.8389, -257.756, -9.8099, 0.96 ) }
    dend_43 { pt3dadd( -17.8404, -258.031, -9.74414, 0.96 ) }
    dend_43 { pt3dadd( -17.8513, -259.469, -9.47696, 0.81 ) }
    dend_43 { pt3dadd( -17.8551, -259.586, -9.46898, 0.81 ) }
    dend_43 { pt3dadd( -17.9724, -261.584, -9.50355, 0.96 ) }
    dend_43 { pt3dadd( -18.0398, -262.869, -9.52961, 1.18 ) }
    dend_43 { pt3dadd( -18.0984, -264.247, -9.56208, 1.03 ) }
    dend_43 { pt3dadd( -18.1037, -264.338, -9.56385, 1.03 ) }
    dend_43 { pt3dadd( -18.2311, -265.922, -9.58532, 0.74 ) }
    dend_43 { pt3dadd( -18.4599, -268.062, -9.62943, 0.74 ) }
    dend_43 { pt3dadd( -18.6135, -269.23, -9.70434, 0.81 ) }
    dend_43 { pt3dadd( -18.6285, -269.346, -9.71568, 0.81 ) }
    dend_43 { pt3dadd( -18.7434, -270.472, -9.86612, 0.81 ) }
    dend_43 { pt3dadd( -18.8508, -272.153, -10.1362, 0.81 ) }
    dend_43 { pt3dadd( -18.8667, -274.113, -10.5512, 1.03 ) }
    dend_43 { pt3dadd( -18.827, -275.784, -10.9605, 1.03 ) }
    dend_43 { pt3dadd( -18.8259, -275.869, -10.9814, 1.03 ) }
    dend_43 { pt3dadd( -18.8495, -277.02, -11.2473, 1.25 ) }
    dend_43 { pt3dadd( -18.8962, -278.107, -11.4884, 0.96 ) }
    dend_43 { pt3dadd( -19.0208, -279.561, -11.7476, 0.81 ) }
    dend_43 { pt3dadd( -19.1503, -280.494, -11.8689, 1.11 ) }
    dend_43 { pt3dadd( -19.3609, -281.889, -12.002, 1.33 ) }
    dend_43 { pt3dadd( -19.5824, -283.247, -12.1401, 1.33 ) }
    dend_43 { pt3dadd( -19.5985, -283.345, -12.1526, 1.33 ) }
    dend_43 { pt3dadd( -19.8612, -285.199, -12.4161, 0.74 ) }
    dend_43 { pt3dadd( -20.0387, -287.135, -12.76, 0.96 ) }
    dend_43 { pt3dadd( -20.0512, -288.746, -13.1126, 0.96 ) }
    dend_43 { pt3dadd( -20.0384, -288.903, -13.1461, 0.96 ) }
    dend_43 { pt3dadd( -19.7939, -290.535, -13.4661, 0.96 ) }
    dend_43 { pt3dadd( -19.5232, -292.001, -13.6433, 0.81 ) }
    dend_43 { pt3dadd( -19.2074, -293.581, -13.7086, 0.66 ) }
    dend_43 { pt3dadd( -18.9322, -295.131, -13.6438, 0.66 ) }
    dend_43 { pt3dadd( -18.7346, -296.616, -13.4964, 1.33 ) }
    dend_43 { pt3dadd( -18.6286, -297.86, -13.2808, 1.33 ) }
    dend_43 { pt3dadd( -18.5582, -300.11, -12.7263, 1.11 ) }
    dend_43 { pt3dadd( -18.5432, -301.721, -12.2763, 1.18 ) }
    dend_43 { pt3dadd( -18.5479, -302.623, -12.0149, 1.4 ) }
    dend_43 { pt3dadd( -18.5401, -304.015, -11.6709, 1.11 ) }
    dend_43 { pt3dadd( -18.4519, -305.644, -11.3997, 0.59 ) }
    dend_43 { pt3dadd( -18.3216, -306.697, -11.3083, 0.52 ) }
    dend_43 { pt3dadd( -18.0418, -308.133, -11.3039, 0.88 ) }
    dend_43 { pt3dadd( -17.6885, -309.545, -11.3925, 1.18 ) }
    dend_43 { pt3dadd( -17.3005, -311.078, -11.5586, 1.03 ) }
    dend_43 { pt3dadd( -16.8201, -313.012, -11.8548, 0.96 ) }
    dend_43 { pt3dadd( -16.4135, -314.93, -12.2577, 0.81 ) }
    dend_43 { pt3dadd( -16.2301, -316.061, -12.5218, 1.11 ) }
    dend_43 { pt3dadd( -16.1191, -317.38, -12.8497, 1.69 ) }
    dend_43 { pt3dadd( -16.0965, -318.858, -13.2454, 1.18 ) }
    dend_43 { pt3dadd( -16.1029, -318.956, -13.2663, 1.18 ) }
    dend_43 { pt3dadd( -16.294, -320.503, -13.4734, 0.59 ) }
    dend_43 { pt3dadd( -16.3029, -320.59, -13.4668, 0.59 ) }
    dend_43 { pt3dadd( -16.3533, -321.908, -13.108, 1.03 ) }
    dend_43 { pt3dadd( -16.3503, -322.057, -13.0482, 1.03 ) }
    dend_43 { pt3dadd( -16.1629, -323.986, -12.1847, 1.25 ) }
    dend_43 { pt3dadd( -16.0495, -324.813, -11.8106, 1.25 ) }
    dend_43 { pt3dadd( -15.7372, -326.78, -10.927, 0.96 ) }
    dend_43 { pt3dadd( -15.5834, -327.902, -10.477, 0.66 ) }
    dend_43 { pt3dadd( -15.4729, -328.9, -10.1363, 0.66 ) }
    dend_43 { pt3dadd( -15.4154, -329.767, -9.91754, 0.37 ) }
    dend_43 { pt3dadd( -15.4177, -330.947, -9.84039, 0.52 ) }
    dend_43 { pt3dadd( -15.5353, -332.321, -9.91101, 0.81 ) }
    dend_43 { pt3dadd( -15.746, -333.41, -10.0738, 1.11 ) }
    dend_43 { pt3dadd( -16.0281, -334.491, -10.3165, 1.4 ) }
    dend_43 { pt3dadd( -16.4099, -335.83, -10.6703, 1.4 ) }
    dend_43 { pt3dadd( -17.1381, -338.16, -11.3549, 0.81 ) }
    dend_43 { pt3dadd( -17.5358, -339.476, -11.7903, 0.66 ) }
    dend_43 { pt3dadd( -17.8515, -340.734, -12.2476, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_43 { pt3dadd( -18.1218, -342.447, -12.8943, 0.37 ) }
    dend_43 { pt3dadd( -18.1987, -343.398, -13.2584, 0.88 ) }
    dend_43 { pt3dadd( -18.2011, -343.48, -13.2866, 0.88 ) }
    dend_43 { pt3dadd( -18.2191, -344.36, -13.4831, 1.25 ) }
    dend_43 { pt3dadd( -18.2744, -345.386, -13.6643, 1.25 ) }
    dend_43 { pt3dadd( -18.4053, -346.554, -13.8072, 0.88 ) }
    dend_43 { pt3dadd( -18.802, -348.536, -13.9259, 0.66 ) }
    dend_43 { pt3dadd( -19.3263, -350.39, -13.9899, 0.66 ) }
    dend_43 { pt3dadd( -19.9456, -352.143, -14.0355, 0.88 ) }
    dend_43 { pt3dadd( -20.466, -353.399, -14.1056, 0.88 ) }
    dend_43 { pt3dadd( -20.9396, -354.438, -14.2223, 1.11 ) }
    dend_43 { pt3dadd( -21.3623, -355.382, -14.3672, 1.18 ) }
    dend_43 { pt3dadd( -21.6562, -356.121, -14.4693, 1.18 ) }
    dend_43 { pt3dadd( -22.3999, -358.334, -14.8002, 0.88 ) }
    dend_43 { pt3dadd( -22.8957, -360.221, -15.0915, 1.25 ) }
    dend_43 { pt3dadd( -23.2964, -362.297, -15.3909, 0.74 ) }
    dend_43 { pt3dadd( -23.537, -364.0, -15.6039, 0.59 ) }
    dend_43 { pt3dadd( -23.7277, -365.952, -15.7979, 1.03 ) }
    dend_43 { pt3dadd( -23.796, -367.13, -15.8484, 0.74 ) }
    dend_43 { pt3dadd( -23.8152, -368.48, -15.7785, 0.59 ) }
    dend_43 { pt3dadd( -23.8225, -368.755, -15.7368, 0.59 ) }
    dend_43 { pt3dadd( -23.9306, -370.152, -15.4259, 0.74 ) }
    dend_43 { pt3dadd( -23.9499, -370.24, -15.4125, 0.74 ) }
    dend_43 { pt3dadd( -24.3504, -371.514, -15.3905, 0.59 ) }
    dend_43 { pt3dadd( -24.3842, -371.61, -15.3948, 0.59 ) }
    dend_43 { pt3dadd( -24.9403, -373.287, -15.5562, 0.74 ) }
    dend_43 { pt3dadd( -25.4444, -374.981, -15.7788, 0.59 ) }
    dend_43 { pt3dadd( -25.9705, -377.179, -16.1635, 0.59 ) }
    dend_43 { pt3dadd( -26.3737, -379.169, -16.5868, 0.59 ) }
    dend_43 { pt3dadd( -26.5814, -380.577, -16.9521, 0.59 ) }
    dend_43 { pt3dadd( -26.7066, -381.814, -17.3125, 0.81 ) }
    dend_43 { pt3dadd( -26.7159, -382.076, -17.4, 0.81 ) }
    dend_43 { pt3dadd( -26.6614, -383.113, -17.7756, 0.81 ) }
    dend_43 { pt3dadd( -26.6506, -383.185, -17.7946, 0.81 ) }
    dend_43 { pt3dadd( -26.5068, -384.45, -17.9586, 0.81 ) }
    dend_43 { pt3dadd( -26.5037, -384.528, -17.9564, 0.81 ) }
    dend_43 { pt3dadd( -26.5198, -385.867, -17.8126, 0.66 ) }
    dend_43 { pt3dadd( -26.5206, -385.945, -17.8026, 0.66 ) }
    dend_43 { pt3dadd( -26.5369, -387.495, -17.5763, 0.66 ) }
    dend_43 { pt3dadd( -26.4785, -389.392, -17.3138, 0.44 ) }
    dend_43 { pt3dadd( -26.3264, -391.915, -16.9691, 0.66 ) }
    dend_43 { pt3dadd( -26.0461, -394.091, -16.6555, 0.96 ) }
    dend_43 { pt3dadd( -25.689, -395.934, -16.3766, 0.96 ) }
    dend_43 { pt3dadd( -25.6551, -396.07, -16.3566, 0.96 ) }
    dend_43 { pt3dadd( -25.0569, -397.844, -16.1053, 0.81 ) }
    dend_43 { pt3dadd( -24.9885, -398.009, -16.0863, 0.81 ) }
    dend_43 { pt3dadd( -24.1682, -399.822, -15.9941, 0.74 ) }
    dend_43 { pt3dadd( -24.1302, -399.904, -15.9893, 0.74 ) }
    dend_43 { pt3dadd( -23.807, -400.76, -15.9348, 0.96 ) }
    dend_43 { pt3dadd( -23.7568, -400.933, -15.9376, 0.96 ) }
    dend_43 { pt3dadd( -23.4722, -402.412, -15.9897, 0.96 ) }
    dend_43 { pt3dadd( -23.3334, -403.465, -16.0671, 0.96 ) }
    dend_43 { pt3dadd( -23.331, -403.555, -16.0797, 0.96 ) }
    dend_43 { pt3dadd( -23.2997, -404.898, -16.2788, 0.52 ) }
    dend_43 { pt3dadd( -23.2725, -406.377, -16.5202, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_30 (entry count 55/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -46.1813, -89.9059, -11.9366, 0.74 ) }
    dend_34 { pt3dadd( -46.87, -89.7778, -11.41, 0.74 ) }
    dend_34 { pt3dadd( -46.929, -89.7766, -11.3459, 0.74 ) }
    dend_34 { pt3dadd( -47.7139, -89.8779, -10.3054, 0.52 ) }
    dend_34 { pt3dadd( -48.1228, -89.9576, -9.75366, 0.44 ) }
    dend_34 { pt3dadd( -48.8126, -90.0993, -8.87179, 0.44 ) }
    dend_34 { pt3dadd( -49.4892, -90.2378, -8.06964, 0.96 ) }
    dend_34 { pt3dadd( -50.7458, -90.5771, -6.6458, 0.74 ) }
    dend_34 { pt3dadd( -51.5225, -90.814, -5.85301, 0.74 ) }
    dend_34 { pt3dadd( -51.9148, -90.9589, -5.5076, 0.74 ) }
    dend_34 { pt3dadd( -52.4905, -91.1598, -5.07245, 0.59 ) }
    dend_34 { pt3dadd( -53.0052, -91.3046, -4.74523, 0.52 ) }
    dend_34 { pt3dadd( -53.7508, -91.468, -4.355, 0.52 ) }
    dend_34 { pt3dadd( -54.2637, -91.5582, -4.14115, 0.88 ) }
    dend_34 { pt3dadd( -55.1207, -91.6722, -3.79735, 0.59 ) }
    dend_34 { pt3dadd( -56.412, -91.7841, -3.19514, 0.96 ) }
    dend_34 { pt3dadd( -57.8408, -91.8634, -2.44387, 1.33 ) }
    dend_34 { pt3dadd( -58.3818, -91.8826, -2.13, 1.33 ) }
    dend_34 { pt3dadd( -59.2514, -91.9109, -1.6023, 0.44 ) }
    dend_34 { pt3dadd( -59.766, -91.9129, -1.29315, 0.44 ) }
    dend_34 { pt3dadd( -60.8896, -91.8843, -0.675856, 0.44 ) }
    dend_34 { pt3dadd( -60.9472, -91.883, -0.649576, 0.44 ) }
    dend_34 { pt3dadd( -61.8777, -91.8354, -0.313692, 0.81 ) }
    dend_34 { pt3dadd( -62.5123, -91.7936, -0.0227316, 0.96 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 79/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -46.1813, -89.9059, -11.9366, 0.59 ) }
    dend_31 { pt3dadd( -47.2804, -90.8951, -12.1488, 0.59 ) }
    dend_31 { pt3dadd( -47.8576, -91.4571, -12.224, 0.52 ) }
    dend_31 { pt3dadd( -48.2018, -91.7925, -12.2721, 0.88 ) }
    dend_31 { pt3dadd( -48.8641, -92.3801, -12.4096, 0.88 ) }
    dend_31 { pt3dadd( -49.3522, -92.7608, -12.6024, 0.88 ) }
    dend_31 { pt3dadd( -49.8055, -93.0694, -12.83, 1.03 ) }
    dend_31 { pt3dadd( -50.4702, -93.4006, -13.2048, 0.59 ) }
    dend_31 { pt3dadd( -51.0639, -93.5744, -13.6327, 0.44 ) }
    dend_31 { pt3dadd( -51.8655, -93.6392, -14.2807, 0.74 ) }
    dend_31 { pt3dadd( -53.245, -93.465, -15.5125, 0.44 ) }
    dend_31 { pt3dadd( -53.5947, -93.3559, -15.8249, 0.44 ) }
    dend_31 { pt3dadd( -53.9897, -93.1906, -16.1645, 0.44 ) }
    dend_31 { pt3dadd( -54.4413, -92.9735, -16.5175, 0.74 ) }
    dend_31 { pt3dadd( -54.7433, -92.8326, -16.7099, 0.96 ) }
    dend_31 { pt3dadd( -54.7942, -92.8152, -16.7303, 0.96 ) }
    dend_31 { pt3dadd( -55.3224, -92.7078, -16.8352, 0.88 ) }
    dend_31 { pt3dadd( -56.45, -92.5315, -17.0548, 0.44 ) }
    dend_31 { pt3dadd( -56.7945, -92.4743, -17.1197, 0.44 ) }
    dend_31 { pt3dadd( -56.8495, -92.4612, -17.137, 0.44 ) }
    dend_31 { pt3dadd( -57.2502, -92.3297, -17.2879, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_31 { pt3dadd( -57.845, -92.0788, -17.5456, 0.44 ) }
    dend_31 { pt3dadd( -58.2345, -91.8691, -17.7222, 0.81 ) }
    dend_31 { pt3dadd( -58.5908, -91.6318, -17.9019, 1.33 ) }
    dend_31 { pt3dadd( -59.762, -90.8039, -18.5335, 1.33 ) }
    dend_31 { pt3dadd( -60.248, -90.4697, -18.7871, 1.25 ) }
    dend_31 { pt3dadd( -60.8084, -90.1022, -19.0689, 0.96 ) }
    dend_31 { pt3dadd( -61.4124, -89.7433, -19.3736, 0.88 ) }
    dend_31 { pt3dadd( -62.1076, -89.3584, -19.7016, 0.74 ) }
    dend_31 { pt3dadd( -62.647, -89.0788, -19.9267, 0.74 ) }
    dend_31 { pt3dadd( -63.3902, -88.7098, -20.203, 0.66 ) }
    dend_31 { pt3dadd( -63.797, -88.5121, -20.373, 0.52 ) }
    dend_31 { pt3dadd( -64.4625, -88.1832, -20.6537, 0.29 ) }
    dend_31 { pt3dadd( -64.9033, -87.9465, -20.8929, 0.37 ) }
    dend_31 { pt3dadd( -64.9529, -87.9165, -20.924, 0.37 ) }
    dend_31 { pt3dadd( -65.6999, -87.341, -21.5063, 0.88 ) }
    dend_31 { pt3dadd( -65.9366, -87.1049, -21.7642, 1.25 ) }
    dend_31 { pt3dadd( -66.265, -86.7606, -22.1958, 1.18 ) }
    dend_31 { pt3dadd( -66.8977, -86.1375, -23.0291, 0.66 ) }
    dend_31 { pt3dadd( -66.9304, -86.1089, -23.0697, 0.66 ) }
    dend_31 { pt3dadd( -67.3584, -85.7722, -23.5333, 0.74 ) }
    dend_31 { pt3dadd( -68.2659, -85.1619, -24.3729, 0.88 ) }
    dend_31 { pt3dadd( -68.9413, -84.7558, -24.9532, 0.52 ) }
    dend_31 { pt3dadd( -69.4599, -84.509, -25.3197, 0.88 ) }
    dend_31 { pt3dadd( -70.0349, -84.3306, -25.613, 1.03 ) }
    dend_31 { pt3dadd( -70.6603, -84.1962, -25.881, 1.33 ) }
    dend_31 { pt3dadd( -71.2276, -84.1245, -26.0671, 0.88 ) }
    dend_31 { pt3dadd( -71.2844, -84.1183, -26.0822, 0.88 ) }
    dend_31 { pt3dadd( -72.0178, -84.0357, -26.3037, 0.59 ) }
    dend_31 { pt3dadd( -72.9607, -83.924, -26.6718, 0.52 ) }
    dend_31 { pt3dadd( -73.0672, -83.9088, -26.7208, 0.52 ) }
    dend_31 { pt3dadd( -73.3951, -83.8394, -26.8877, 0.81 ) }
    dend_31 { pt3dadd( -74.4766, -83.4804, -27.5674, 0.29 ) }
    dend_31 { pt3dadd( -74.5212, -83.4641, -27.5999, 0.29 ) }
    dend_31 { pt3dadd( -74.9116, -83.3116, -27.9772, 0.29 ) }
    dend_31 { pt3dadd( -75.066, -83.253, -28.1462, 0.88 ) }
    dend_31 { pt3dadd( -75.2465, -83.2079, -28.3693, 1.18 ) }
    dend_31 { pt3dadd( -76.1042, -83.0863, -29.4928, 0.37 ) }
    dend_31 { pt3dadd( -76.6313, -83.0731, -30.1741, 0.74 ) }
    dend_31 { pt3dadd( -77.3547, -83.137, -31.1131, 1.03 ) }
    dend_31 { pt3dadd( -77.3902, -83.1437, -31.1577, 1.03 ) }
    dend_31 { pt3dadd( -78.1685, -83.3473, -32.0748, 0.44 ) }
    dend_31 { pt3dadd( -78.3759, -83.4076, -32.2953, 1.18 ) }
    dend_31 { pt3dadd( -78.7448, -83.5123, -32.6128, 1.47 ) }
    dend_31 { pt3dadd( -79.7253, -83.7214, -33.5771, 0.81 ) }
    dend_31 { pt3dadd( -80.1408, -83.7917, -34.0001, 0.52 ) }
    dend_31 { pt3dadd( -80.731, -83.877, -34.6132, 0.37 ) }
    dend_31 { pt3dadd( -81.0815, -83.9208, -34.9745, 0.37 ) }
    dend_31 { pt3dadd( -81.5312, -83.9795, -35.444, 1.18 ) }
    dend_31 { pt3dadd( -83.843, -84.3138, -37.9225, 0.81 ) }
    dend_31 { pt3dadd( -83.9222, -84.3263, -38.0067, 0.81 ) }
    dend_31 { pt3dadd( -84.3636, -84.4099, -38.4799, 0.81 ) }
    dend_31 { pt3dadd( -84.6729, -84.4709, -38.7861, 0.88 ) }
    dend_31 { pt3dadd( -84.9964, -84.5493, -39.0938, 0.81 ) }
    dend_31 { pt3dadd( -85.7301, -84.775, -39.6943, 0.29 ) }
    dend_31 { pt3dadd( -85.8968, -84.8303, -39.7811, 0.29 ) }
    dend_31 { pt3dadd( -86.1869, -84.9475, -39.9714, 0.29 ) }
    dend_31 { pt3dadd( -86.7202, -85.211, -40.3711, 1.18 ) }
    dend_31 { pt3dadd( -87.8513, -85.9204, -41.2535, 0.59 ) }
    dend_31 { pt3dadd( -88.2023, -86.1981, -41.5154, 1.33 ) }
    dend_31 { pt3dadd( -88.2452, -86.2388, -41.5449, 1.33 ) }
    dend_31 { pt3dadd( -89.0609, -87.085, -42.0589, 0.74 ) }
    dend_31 { pt3dadd( -89.4651, -87.5441, -42.297, 0.66 ) }
    dend_31 { pt3dadd( -89.9337, -88.0999, -42.5856, 0.37 ) }
    dend_31 { pt3dadd( -90.4077, -88.6584, -42.8459, 0.88 ) }
    dend_31 { pt3dadd( -90.9024, -89.2343, -43.1301, 1.03 ) }
    dend_31 { pt3dadd( -91.3161, -89.7131, -43.3881, 0.88 ) }
    dend_31 { pt3dadd( -91.3503, -89.7543, -43.4107, 0.88 ) }
    dend_31 { pt3dadd( -92.1838, -90.8597, -44.0771, 0.74 ) }
    dend_31 { pt3dadd( -92.5932, -91.4125, -44.5083, 0.44 ) }
    dend_31 { pt3dadd( -92.8203, -91.7074, -44.7781, 1.47 ) }
    dend_31 { pt3dadd( -93.3071, -92.2841, -45.3892, 1.03 ) }
    dend_31 { pt3dadd( -93.6066, -92.5796, -45.7524, 0.74 ) }
    dend_31 { pt3dadd( -93.8867, -92.7847, -46.0394, 0.74 ) }
    dend_31 { pt3dadd( -94.9938, -93.3212, -46.9985, 0.52 ) }
    dend_31 { pt3dadd( -95.542, -93.498, -47.4657, 0.66 ) }
    dend_31 { pt3dadd( -96.0541, -93.6423, -47.9201, 0.37 ) }
    dend_31 { pt3dadd( -96.4397, -93.7631, -48.3362, 0.29 ) }
    dend_31 { pt3dadd( -96.7965, -93.8834, -48.7661, 0.29 ) }
    dend_31 { pt3dadd( -97.2136, -94.0379, -49.3114, 0.74 ) }
    dend_31 { pt3dadd( -97.7901, -94.2916, -50.1184, 0.96 ) }
    dend_31 { pt3dadd( -98.554, -94.6394, -51.2615, 0.96 ) }
    dend_31 { pt3dadd( -99.6574, -95.107, -52.9936, 0.88 ) }
    dend_31 { pt3dadd( -99.6835, -95.1159, -53.0337, 0.88 ) }
    dend_31 { pt3dadd( -100.164, -95.232, -53.7437, 0.88 ) }
    dend_31 { pt3dadd( -100.392, -95.2619, -54.0511, 1.03 ) }
    dend_31 { pt3dadd( -100.772, -95.2883, -54.498, 1.03 ) }
    dend_31 { pt3dadd( -101.398, -95.3406, -55.122, 0.74 ) }
    dend_31 { pt3dadd( -102.103, -95.4674, -55.7664, 0.37 ) }
    dend_31 { pt3dadd( -102.143, -95.4806, -55.8076, 0.37 ) }
    dend_31 { pt3dadd( -102.908, -95.8233, -56.6499, 0.37 ) }
    dend_31 { pt3dadd( -103.584, -96.1972, -57.4642, 0.37 ) }
    dend_31 { pt3dadd( -104.201, -96.5839, -58.2252, 0.88 ) }
    dend_31 { pt3dadd( -104.793, -96.9568, -58.9214, 1.18 ) }
    dend_31 { pt3dadd( -105.686, -97.4714, -60.0478, 0.59 ) }
    dend_31 { pt3dadd( -105.721, -97.4869, -60.0927, 0.59 ) }
    dend_31 { pt3dadd( -106.527, -97.6819, -61.0828, 0.44 ) }
    dend_31 { pt3dadd( -106.771, -97.6915, -61.4175, 0.37 ) }
    dend_31 { pt3dadd( -107.203, -97.6374, -62.0625, 0.37 ) }
    dend_31 { pt3dadd( -108.187, -97.3954, -63.5436, 1.03 ) }
    dend_31 { pt3dadd( -108.687, -97.2336, -64.2748, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_31 { pt3dadd( -109.114, -97.105, -64.8641, 1.25 ) }
    dend_31 { pt3dadd( -110.178, -96.8668, -66.3403, 1.18 ) }
    dend_31 { pt3dadd( -110.211, -96.8659, -66.3876, 1.18 ) }
    dend_31 { pt3dadd( -110.701, -96.9445, -67.0638, 0.59 ) }
    dend_31 { pt3dadd( -111.001, -97.0434, -67.4349, 0.74 ) }
    dend_31 { pt3dadd( -111.332, -97.1962, -67.831, 0.74 ) }
    dend_31 { pt3dadd( -112.434, -97.7983, -69.1498, 0.88 ) }
    dend_31 { pt3dadd( -113.475, -98.4162, -70.6721, 0.52 ) }
    dend_31 { pt3dadd( -113.751, -98.5917, -71.1294, 1.18 ) }
    dend_31 { pt3dadd( -114.219, -98.9139, -72.0213, 1.55 ) }
    dend_31 { pt3dadd( -114.454, -99.0805, -72.4993, 1.25 ) }
    dend_31 { pt3dadd( -115.293, -99.6917, -74.2204, 0.74 ) }
    dend_31 { pt3dadd( -116.873, -100.889, -77.453, 0.74 ) }
    dend_31 { pt3dadd( -117.062, -101.037, -77.8557, 1.4 ) }
    dend_31 { pt3dadd( -117.969, -101.748, -79.8717, 0.74 ) }
    dend_31 { pt3dadd( -118.018, -101.784, -79.9804, 0.74 ) }
    dend_31 { pt3dadd( -118.323, -101.979, -80.6435, 0.59 ) }
    dend_31 { pt3dadd( -118.351, -101.993, -80.6938, 0.59 ) }
    dend_31 { pt3dadd( -119.455, -102.395, -82.1435, 0.59 ) }
    dend_31 { pt3dadd( -119.518, -102.415, -82.2152, 0.59 ) }
    dend_31 { pt3dadd( -120.142, -102.575, -82.8579, 0.66 ) }
    dend_31 { pt3dadd( -120.51, -102.662, -83.2408, 0.88 ) }
    dend_31 { pt3dadd( -121.823, -102.932, -84.6114, 0.44 ) }
    dend_31 { pt3dadd( -121.996, -102.969, -84.7727, 1.03 ) }
    dend_31 { pt3dadd( -122.946, -103.19, -85.4271, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -50.8888, -214.074, -81.7097, 0.29 ) }
    dend_29 { pt3dadd( -51.873, -214.738, -81.3921, 0.29 ) }
    dend_29 { pt3dadd( -52.4775, -215.126, -81.1817, 0.29 ) }
    dend_29 { pt3dadd( -53.3962, -215.655, -80.9294, 0.22 ) }
    dend_29 { pt3dadd( -53.801, -215.907, -80.8283, 0.81 ) }
    dend_29 { pt3dadd( -54.1952, -216.167, -80.7324, 0.81 ) }
    dend_29 { pt3dadd( -54.5428, -216.397, -80.675, 0.81 ) }
    dend_29 { pt3dadd( -55.1533, -216.8, -80.6229, 0.52 ) }
    dend_29 { pt3dadd( -56.3827, -217.631, -80.6071, 0.22 ) }
    dend_29 { pt3dadd( -57.2086, -218.22, -80.6292, 0.22 ) }
    dend_29 { pt3dadd( -57.5968, -218.512, -80.653, 0.81 ) }
    dend_29 { pt3dadd( -58.7024, -219.379, -80.7412, 0.96 ) }
    dend_29 { pt3dadd( -58.9836, -219.602, -80.7866, 1.11 ) }
    dend_29 { pt3dadd( -59.9755, -220.387, -81.0643, 0.22 ) }
    dend_29 { pt3dadd( -60.4716, -220.783, -81.2232, 0.22 ) }
    dend_29 { pt3dadd( -60.7539, -221.002, -81.3184, 0.74 ) }
    dend_29 { pt3dadd( -61.0704, -221.255, -81.4332, 0.96 ) }
    dend_29 { pt3dadd( -62.2354, -222.214, -81.9055, 0.59 ) }
    dend_29 { pt3dadd( -63.3503, -223.118, -82.4011, 0.29 ) }
    dend_29 { pt3dadd( -64.1754, -223.736, -82.8234, 0.22 ) }
    dend_29 { pt3dadd( -64.3988, -223.893, -82.9406, 0.37 ) }
    dend_29 { pt3dadd( -65.4502, -224.59, -83.4844, 0.22 ) }
    dend_29 { pt3dadd( -66.3249, -225.155, -83.9376, 0.81 ) }
    dend_29 { pt3dadd( -66.7003, -225.4, -84.1257, 1.03 ) }
    dend_29 { pt3dadd( -68.0751, -226.279, -84.9135, 0.37 ) }
    dend_29 { pt3dadd( -68.5678, -226.588, -85.218, 0.52 ) }
    dend_29 { pt3dadd( -69.7267, -227.317, -85.9403, 0.29 ) }
    dend_29 { pt3dadd( -70.1784, -227.607, -86.2053, 0.66 ) }
    dend_29 { pt3dadd( -70.5447, -227.854, -86.4114, 0.81 ) }
    dend_29 { pt3dadd( -72.1815, -228.993, -87.4204, 0.29 ) }
    dend_29 { pt3dadd( -72.5893, -229.303, -87.687, 0.44 ) }
    dend_29 { pt3dadd( -72.6439, -229.346, -87.7278, 0.44 ) }
    dend_29 { pt3dadd( -73.146, -229.753, -88.1135, 0.59 ) }
    dend_29 { pt3dadd( -73.7944, -230.317, -88.6888, 1.03 ) }
    dend_29 { pt3dadd( -74.907, -231.387, -89.8922, 1.03 ) }
    dend_29 { pt3dadd( -75.762, -232.307, -91.0066, 0.29 ) }
    dend_29 { pt3dadd( -76.5036, -233.145, -92.0795, 0.88 ) }
    dend_29 { pt3dadd( -76.7684, -233.445, -92.4692, 1.25 ) }
    dend_29 { pt3dadd( -78.5185, -235.4, -94.9952, 0.29 ) }
    dend_29 { pt3dadd( -79.6152, -236.619, -96.5578, 0.37 ) }
    dend_29 { pt3dadd( -80.4105, -237.523, -97.6518, 0.81 ) }
    dend_29 { pt3dadd( -81.1586, -238.355, -98.6402, 0.44 ) }
    dend_29 { pt3dadd( -81.6345, -238.874, -99.215, 0.37 ) }
    dend_29 { pt3dadd( -82.3244, -239.62, -99.9677, 0.37 ) }
    dend_29 { pt3dadd( -83.2365, -240.618, -100.746, 0.37 ) }
    dend_29 { pt3dadd( -83.9507, -241.401, -101.234, 0.37 ) }
    dend_29 { pt3dadd( -84.5151, -242.049, -101.593, 1.11 ) }
    dend_29 { pt3dadd( -84.8776, -242.477, -101.817, 1.25 ) }
    dend_29 { pt3dadd( -85.7808, -243.476, -102.356, 0.81 ) }
    dend_29 { pt3dadd( -86.6223, -244.365, -102.794, 0.52 ) }
    dend_29 { pt3dadd( -87.0167, -244.764, -102.928, 0.52 ) }
    dend_29 { pt3dadd( -87.0737, -244.818, -102.947, 0.52 ) }
    dend_29 { pt3dadd( -87.7843, -245.484, -103.17, 0.52 ) }
    dend_29 { pt3dadd( -89.0567, -246.607, -103.576, 0.44 ) }
    dend_29 { pt3dadd( -89.6552, -247.127, -103.754, 0.44 ) }
    dend_29 { pt3dadd( -90.7082, -248.011, -104.144, 0.74 ) }
    dend_29 { pt3dadd( -92.0771, -249.161, -104.726, 0.74 ) }
    dend_29 { pt3dadd( -92.1245, -249.202, -104.748, 0.74 ) }
    dend_29 { pt3dadd( -93.2595, -250.243, -105.329, 0.37 ) }
    dend_29 { pt3dadd( -93.693, -250.64, -105.56, 0.81 ) }
    dend_29 { pt3dadd( -95.1903, -251.872, -106.361, 0.29 ) }
    dend_29 { pt3dadd( -95.7171, -252.258, -106.629, 0.29 ) }
    dend_29 { pt3dadd( -96.2062, -252.636, -106.832, 0.88 ) }
    dend_29 { pt3dadd( -96.404, -252.794, -106.916, 1.25 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 89/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -50.8888, -214.074, -81.7097, 0.59 ) }
    dend_28 { pt3dadd( -50.6018, -217.281, -82.7748, 0.59 ) }
    dend_28 { pt3dadd( -50.4883, -218.616, -83.1564, 0.59 ) }
    dend_28 { pt3dadd( -50.4493, -218.988, -83.253, 0.81 ) }
    dend_28 { pt3dadd( -50.3313, -219.852, -83.4569, 0.81 ) }
    dend_28 { pt3dadd( -50.127, -221.1, -83.7353, 0.15 ) }
    dend_28 { pt3dadd( -49.9011, -222.243, -83.9757, 0.15 ) }
    dend_28 { pt3dadd( -49.8768, -222.324, -83.9783, 0.15 ) }
    dend_28 { pt3dadd( -49.7141, -222.804, -84.0019, 0.59 ) }
    dend_28 { pt3dadd( -49.4627, -223.513, -84.0446, 0.88 ) }
    dend_28 { pt3dadd( -49.4002, -223.695, -84.0567, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_28 { pt3dadd( -49.2279, -224.333, -84.0953, 0.88 ) }
    dend_28 { pt3dadd( -48.9652, -225.685, -84.1299, 0.52 ) }
    dend_28 { pt3dadd( -48.8451, -226.799, -84.1247, 0.44 ) }
    dend_28 { pt3dadd( -48.8263, -227.426, -84.1064, 0.74 ) }
    dend_28 { pt3dadd( -48.8513, -228.22, -84.0657, 0.44 ) }
    dend_28 { pt3dadd( -48.9349, -229.32, -83.9422, 0.29 ) }
    dend_28 { pt3dadd( -49.0445, -230.074, -83.8163, 0.88 ) }
    dend_28 { pt3dadd( -49.1431, -230.77, -83.6739, 0.96 ) }
    dend_28 { pt3dadd( -49.2423, -231.849, -83.4366, 0.81 ) }
    dend_28 { pt3dadd( -49.2728, -233.09, -83.1776, 0.29 ) }
    dend_28 { pt3dadd( -49.2032, -234.388, -82.9608, 0.44 ) }
    dend_28 { pt3dadd( -49.0753, -235.307, -82.8304, 0.22 ) }
    dend_28 { pt3dadd( -48.7447, -236.767, -82.6833, 0.22 ) }
    dend_28 { pt3dadd( -48.4394, -237.646, -82.6263, 0.59 ) }
    dend_28 { pt3dadd( -47.9648, -238.631, -82.5509, 0.81 ) }
    dend_28 { pt3dadd( -47.4676, -239.484, -82.4872, 0.81 ) }
    dend_28 { pt3dadd( -47.0653, -240.133, -82.4461, 0.88 ) }
    dend_28 { pt3dadd( -46.374, -241.359, -82.3282, 0.37 ) }
    dend_28 { pt3dadd( -45.8851, -242.612, -82.1596, 0.59 ) }
    dend_28 { pt3dadd( -45.5793, -243.86, -81.9858, 0.96 ) }
    dend_28 { pt3dadd( -45.4575, -244.753, -81.8592, 0.59 ) }
    dend_28 { pt3dadd( -45.4263, -245.839, -81.7135, 0.29 ) }
    dend_28 { pt3dadd( -45.5477, -247.353, -81.6309, 0.29 ) }
    dend_28 { pt3dadd( -45.826, -249.005, -81.6408, 0.74 ) }
    dend_28 { pt3dadd( -46.0283, -249.967, -81.7034, 0.96 ) }
    dend_28 { pt3dadd( -46.0568, -250.109, -81.7166, 0.96 ) }
    dend_28 { pt3dadd( -46.1885, -250.886, -81.7832, 0.96 ) }
    dend_28 { pt3dadd( -46.3958, -252.314, -81.8919, 0.44 ) }
    dend_28 { pt3dadd( -46.5129, -253.3, -81.9498, 0.29 ) }
    dend_28 { pt3dadd( -46.7165, -254.63, -81.9206, 0.59 ) }
    dend_28 { pt3dadd( -46.9535, -255.717, -81.7964, 1.03 ) }
    dend_28 { pt3dadd( -47.046, -256.051, -81.7379, 1.11 ) }
    dend_28 { pt3dadd( -47.2464, -256.703, -81.5858, 0.96 ) }
    dend_28 { pt3dadd( -47.4996, -257.483, -81.3671, 0.96 ) }
    dend_28 { pt3dadd( -47.9058, -258.649, -81.0237, 0.37 ) }
    dend_28 { pt3dadd( -48.3207, -259.793, -80.6983, 0.22 ) }
    dend_28 { pt3dadd( -48.5698, -260.529, -80.5188, 0.44 ) }
    dend_28 { pt3dadd( -48.9441, -261.783, -80.2301, 0.44 ) }
    dend_28 { pt3dadd( -49.1346, -262.673, -80.0481, 0.66 ) }
    dend_28 { pt3dadd( -49.232, -263.584, -79.8992, 0.88 ) }
    dend_28 { pt3dadd( -49.2776, -264.548, -79.7888, 0.29 ) }
    dend_28 { pt3dadd( -49.2897, -265.622, -79.576, 0.29 ) }
    dend_28 { pt3dadd( -49.287, -265.741, -79.5453, 0.29 ) }
    dend_28 { pt3dadd( -49.2674, -266.763, -79.2321, 0.29 ) }
    dend_28 { pt3dadd( -49.2612, -268.064, -78.8154, 0.29 ) }
    dend_28 { pt3dadd( -49.2714, -269.537, -78.3391, 0.29 ) }
    dend_28 { pt3dadd( -49.3515, -271.392, -77.6278, 0.59 ) }
    dend_28 { pt3dadd( -49.4098, -271.86, -77.4269, 0.74 ) }
    dend_28 { pt3dadd( -49.637, -273.075, -76.8922, 0.29 ) }
    dend_28 { pt3dadd( -49.8673, -274.023, -76.484, 0.29 ) }
    dend_28 { pt3dadd( -49.8851, -274.113, -76.4503, 0.29 ) }
    dend_28 { pt3dadd( -49.9826, -275.243, -76.1763, 0.81 ) }
    dend_28 { pt3dadd( -49.9934, -275.947, -76.1099, 1.25 ) }
    dend_28 { pt3dadd( -49.9776, -276.722, -76.099, 0.88 ) }
    dend_28 { pt3dadd( -49.8672, -278.017, -76.1687, 0.52 ) }
    dend_28 { pt3dadd( -49.6414, -279.599, -76.2695, 0.29 ) }
    dend_28 { pt3dadd( -49.5038, -280.392, -76.3295, 0.66 ) }
    dend_28 { pt3dadd( -49.2581, -281.431, -76.4362, 0.74 ) }
    dend_28 { pt3dadd( -48.7047, -283.143, -76.6048, 0.22 ) }
    dend_28 { pt3dadd( -48.3188, -284.137, -76.6939, 0.22 ) }
    dend_28 { pt3dadd( -47.8543, -285.128, -76.7262, 0.88 ) }
    dend_28 { pt3dadd( -47.8069, -285.226, -76.7204, 0.88 ) }
    dend_28 { pt3dadd( -47.3621, -286.104, -76.5981, 0.81 ) }
    dend_28 { pt3dadd( -46.8787, -287.045, -76.4384, 0.74 ) }
    dend_28 { pt3dadd( -46.8392, -287.133, -76.4212, 0.74 ) }
    dend_28 { pt3dadd( -46.4624, -288.428, -76.2138, 0.29 ) }
    dend_28 { pt3dadd( -46.2328, -289.708, -76.0582, 0.74 ) }
    dend_28 { pt3dadd( -46.2003, -290.149, -76.0046, 0.81 ) }
    dend_28 { pt3dadd( -46.2741, -291.411, -75.8833, 0.22 ) }
    dend_28 { pt3dadd( -46.3874, -292.041, -75.8391, 0.66 ) }
    dend_28 { pt3dadd( -46.5449, -292.68, -75.8173, 0.74 ) }
    dend_28 { pt3dadd( -46.5718, -292.761, -75.8188, 0.74 ) }
    dend_28 { pt3dadd( -46.9361, -293.686, -75.8517, 0.74 ) }
    dend_28 { pt3dadd( -47.4312, -294.757, -75.8945, 0.22 ) }
    dend_28 { pt3dadd( -47.923, -295.62, -76.0175, 0.22 ) }
    dend_28 { pt3dadd( -47.964, -295.687, -76.0334, 0.22 ) }
    dend_28 { pt3dadd( -48.2362, -296.176, -76.1906, 0.66 ) }
    dend_28 { pt3dadd( -48.2752, -296.271, -76.2266, 0.66 ) }
    dend_28 { pt3dadd( -48.4185, -296.785, -76.4554, 0.66 ) }
    dend_28 { pt3dadd( -48.7335, -298.223, -77.0685, 0.52 ) }
    dend_28 { pt3dadd( -48.7521, -298.295, -77.1105, 0.52 ) }
    dend_28 { pt3dadd( -49.0371, -299.254, -77.6814, 0.22 ) }
    dend_28 { pt3dadd( -49.2951, -300.037, -78.1313, 1.03 ) }
    dend_28 { pt3dadd( -49.4528, -300.516, -78.4163, 1.11 ) }
    dend_28 { pt3dadd( -49.7334, -301.399, -78.9197, 0.88 ) }
    dend_28 { pt3dadd( -50.6262, -304.236, -80.3842, 0.22 ) }
    dend_28 { pt3dadd( -50.8356, -304.919, -80.722, 0.88 ) }
    dend_28 { pt3dadd( -51.0698, -305.655, -81.085, 0.59 ) }
    dend_28 { pt3dadd( -51.395, -306.754, -81.6022, 0.52 ) }
    dend_28 { pt3dadd( -51.6305, -307.75, -82.0233, 0.81 ) }
    dend_28 { pt3dadd( -51.7434, -308.479, -82.3832, 0.81 ) }
    dend_28 { pt3dadd( -51.9091, -310.017, -83.3381, 0.29 ) }
    dend_28 { pt3dadd( -51.9139, -310.081, -83.3866, 0.29 ) }
    dend_28 { pt3dadd( -51.9337, -310.63, -83.8894, 0.96 ) }
    dend_28 { pt3dadd( -51.9366, -311.164, -84.4601, 1.25 ) }
    dend_28 { pt3dadd( -51.8537, -313.545, -87.3158, 0.52 ) }
    dend_28 { pt3dadd( -51.7426, -315.096, -89.3158, 0.44 ) }
    dend_28 { pt3dadd( -51.6855, -315.518, -89.879, 0.66 ) }
    dend_28 { pt3dadd( -51.4563, -316.764, -91.536, 0.52 ) }
    dend_28 { pt3dadd( -51.1201, -318.102, -93.3033, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_28 { pt3dadd( -51.0155, -318.424, -93.7092, 0.59 ) }
    dend_28 { pt3dadd( -50.9583, -318.562, -93.854, 0.59 ) }
    dend_28 { pt3dadd( -50.2866, -319.903, -95.102, 0.22 ) }
    dend_28 { pt3dadd( -50.2475, -319.98, -95.1703, 0.22 ) }
    dend_28 { pt3dadd( -49.9262, -320.533, -95.5405, 0.59 ) }
    dend_28 { pt3dadd( -49.8115, -320.702, -95.6241, 0.59 ) }
    dend_28 { pt3dadd( -49.6545, -320.931, -95.7426, 0.59 ) }
    dend_28 { pt3dadd( -49.6026, -321.005, -95.7791, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 8/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -15.3144, 173.488, 1.62056, 0.29 ) }
    dend_24 { pt3dadd( -16.1929, 174.043, 1.1166, 0.29 ) }
    dend_24 { pt3dadd( -16.8094, 174.417, 0.825479, 0.29 ) }
    dend_24 { pt3dadd( -17.6706, 174.928, 0.465118, 0.66 ) }
    dend_24 { pt3dadd( -18.4185, 175.373, 0.132562, 0.29 ) }
    dend_24 { pt3dadd( -18.7929, 175.597, -0.0371023, 0.37 ) }
    dend_24 { pt3dadd( -19.5665, 176.067, -0.386138, 0.37 ) }
    dend_24 { pt3dadd( -20.3724, 176.578, -0.71207, 0.59 ) }
    dend_24 { pt3dadd( -20.7764, 176.838, -0.876708, 0.81 ) }
    dend_24 { pt3dadd( -21.4656, 177.283, -1.14462, 0.37 ) }
    dend_24 { pt3dadd( -21.6859, 177.442, -1.21765, 0.88 ) }
    dend_24 { pt3dadd( -22.002, 177.697, -1.33031, 1.03 ) }
    dend_24 { pt3dadd( -22.3975, 178.063, -1.47708, 0.81 ) }
    dend_24 { pt3dadd( -22.7086, 178.384, -1.58658, 0.37 ) }
    dend_24 { pt3dadd( -22.7464, 178.43, -1.59699, 0.37 ) }
    dend_24 { pt3dadd( -23.1155, 178.99, -1.6637, 0.37 ) }
    dend_24 { pt3dadd( -23.1529, 179.058, -1.67149, 0.37 ) }
    dend_24 { pt3dadd( -23.4238, 179.617, -1.65739, 0.37 ) }
    dend_24 { pt3dadd( -23.445, 179.668, -1.65024, 0.37 ) }
    dend_24 { pt3dadd( -23.7599, 180.421, -1.47621, 0.22 ) }
    dend_24 { pt3dadd( -23.9352, 180.838, -1.36308, 0.74 ) }
    dend_24 { pt3dadd( -23.955, 180.887, -1.34829, 0.74 ) }
    dend_24 { pt3dadd( -24.4077, 182.036, -1.01053, 0.29 ) }
    dend_24 { pt3dadd( -24.495, 182.269, -0.935939, 0.66 ) }
    dend_24 { pt3dadd( -24.6171, 182.586, -0.831676, 0.66 ) }
    dend_24 { pt3dadd( -24.8427, 183.148, -0.645114, 0.37 ) }
    dend_24 { pt3dadd( -24.9954, 183.551, -0.525911, 0.29 ) }
    dend_24 { pt3dadd( -25.135, 183.96, -0.438087, 0.29 ) }
    dend_24 { pt3dadd( -25.3091, 184.567, -0.367295, 0.96 ) }
    dend_24 { pt3dadd( -25.324, 184.617, -0.361257, 0.96 ) }
    dend_24 { pt3dadd( -25.4073, 184.949, -0.322846, 0.66 ) }
    dend_24 { pt3dadd( -25.5219, 185.456, -0.266028, 0.29 ) }
    dend_24 { pt3dadd( -25.6422, 185.958, -0.224695, 0.29 ) }
    dend_24 { pt3dadd( -25.6553, 186.01, -0.223801, 0.29 ) }
    dend_24 { pt3dadd( -25.787, 186.521, -0.248701, 1.11 ) }
    dend_24 { pt3dadd( -25.8769, 187.01, -0.279187, 1.47 ) }
    dend_24 { pt3dadd( -25.8929, 187.144, -0.288515, 1.47 ) }
    dend_24 { pt3dadd( -25.9504, 187.828, -0.340857, 0.66 ) }
    dend_24 { pt3dadd( -25.9854, 188.361, -0.379462, 0.37 ) }
    dend_24 { pt3dadd( -26.0273, 189.032, -0.425517, 0.37 ) }
    dend_24 { pt3dadd( -26.0775, 190.075, -0.559656, 0.29 ) }
    dend_24 { pt3dadd( -26.1352, 191.178, -0.749024, 0.29 ) }
    dend_24 { pt3dadd( -26.1404, 191.291, -0.769425, 0.29 ) }
    dend_24 { pt3dadd( -26.1554, 191.998, -0.906699, 0.96 ) }
    dend_24 { pt3dadd( -26.1612, 192.38, -0.9866, 1.18 ) }
    dend_24 { pt3dadd( -26.1945, 193.623, -1.32018, 0.37 ) }
    dend_24 { pt3dadd( -26.2327, 194.031, -1.47791, 0.37 ) }
    dend_24 { pt3dadd( -30.2598, 200.297, -2.77568, 0.37 ) }
    dend_24 { pt3dadd( -32.8394, 207.136, -4.79867, 0.37 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 57/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -15.3144, 173.488, 1.62056, 1.03 ) }
    dend_21 { pt3dadd( -15.3784, 173.829, 1.70883, 1.03 ) }
    dend_21 { pt3dadd( -15.5545, 174.645, 1.88906, 1.4 ) }
    dend_21 { pt3dadd( -15.7623, 175.672, 2.07411, 1.4 ) }
    dend_21 { pt3dadd( -15.7742, 175.735, 2.08411, 1.4 ) }
    dend_21 { pt3dadd( -15.9254, 176.668, 2.20635, 1.25 ) }
    dend_21 { pt3dadd( -16.0549, 177.656, 2.33783, 0.81 ) }
    dend_21 { pt3dadd( -16.0614, 177.72, 2.34921, 0.81 ) }
    dend_21 { pt3dadd( -16.1169, 178.453, 2.4904, 0.96 ) }
    dend_21 { pt3dadd( -16.1284, 178.712, 2.53569, 0.96 ) }
    dend_21 { pt3dadd( -16.152, 179.44, 2.67225, 1.18 ) }
    dend_21 { pt3dadd( -16.1583, 180.275, 2.84891, 0.96 ) }
    dend_21 { pt3dadd( -16.1792, 181.454, 3.04926, 1.18 ) }
    dend_21 { pt3dadd( -16.1834, 181.551, 3.0617, 1.18 ) }
    dend_21 { pt3dadd( -16.2323, 182.341, 3.11164, 1.18 ) }
    dend_21 { pt3dadd( -16.2847, 183.238, 3.07981, 0.96 ) }
    dend_21 { pt3dadd( -16.2891, 183.318, 3.06884, 0.96 ) }
    dend_21 { pt3dadd( -16.327, 184.402, 2.84066, 1.47 ) }
    dend_21 { pt3dadd( -16.3274, 184.466, 2.82398, 1.47 ) }
    dend_21 { pt3dadd( -16.2871, 185.465, 2.587, 1.18 ) }
    dend_21 { pt3dadd( -16.1805, 186.497, 2.35855, 0.81 ) }
    dend_21 { pt3dadd( -16.1598, 186.612, 2.33959, 0.81 ) }
    dend_21 { pt3dadd( -16.0214, 187.331, 2.33538, 0.74 ) }
    dend_21 { pt3dadd( -16.0113, 187.388, 2.34651, 0.74 ) }
    dend_21 { pt3dadd( -15.9744, 187.879, 2.49126, 0.74 ) }
    dend_21 { pt3dadd( -15.9794, 187.94, 2.51438, 0.74 ) }
    dend_21 { pt3dadd( -16.0932, 188.448, 2.70053, 0.81 ) }
    dend_21 { pt3dadd( -16.4533, 189.557, 3.05169, 1.18 ) }
    dend_21 { pt3dadd( -16.6307, 190.001, 3.17503, 1.4 ) }
    dend_21 { pt3dadd( -16.9717, 190.799, 3.37226, 0.96 ) }
    dend_21 { pt3dadd( -17.3143, 191.57, 3.54169, 0.96 ) }
    dend_21 { pt3dadd( -17.6188, 192.256, 3.66595, 0.96 ) }
    dend_21 { pt3dadd( -17.9909, 193.112, 3.76265, 0.96 ) }
    dend_21 { pt3dadd( -18.0149, 193.172, 3.77043, 0.96 ) }
    dend_21 { pt3dadd( -18.1789, 193.621, 3.86666, 0.96 ) }
    dend_21 { pt3dadd( -18.2875, 193.955, 3.95831, 1.18 ) }
    dend_21 { pt3dadd( -18.3328, 194.114, 4.01107, 1.18 ) }
    dend_21 { pt3dadd( -18.5129, 194.776, 4.23636, 1.18 ) }
    dend_21 { pt3dadd( -18.866, 196.11, 4.6588, 0.96 ) }
    dend_21 { pt3dadd( -19.1591, 197.204, 5.00552, 0.66 ) }
    dend_21 { pt3dadd( -19.3035, 197.728, 5.17225, 0.66 ) }
    dend_21 { pt3dadd( -19.5019, 198.428, 5.37438, 0.88 ) }
    dend_21 { pt3dadd( -19.6984, 199.139, 5.55911, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_21 { pt3dadd( -19.8784, 199.815, 5.71208, 1.03 ) }
    dend_21 { pt3dadd( -20.0617, 200.547, 5.8269, 1.03 ) }
    dend_21 { pt3dadd( -20.075, 200.602, 5.83633, 1.03 ) }
    dend_21 { pt3dadd( -20.2275, 201.229, 5.92879, 1.11 ) }
    dend_21 { pt3dadd( -20.3906, 201.891, 6.00046, 1.11 ) }
    dend_21 { pt3dadd( -20.4148, 201.986, 6.00882, 1.11 ) }
    dend_21 { pt3dadd( -20.6732, 202.957, 6.06437, 0.96 ) }
    dend_21 { pt3dadd( -20.8586, 203.634, 6.11758, 0.96 ) }
    dend_21 { pt3dadd( -21.0975, 204.553, 6.21407, 1.4 ) }
    dend_21 { pt3dadd( -21.2559, 205.198, 6.29504, 1.03 ) }
    dend_21 { pt3dadd( -21.4306, 206.003, 6.39531, 1.25 ) }
    dend_21 { pt3dadd( -21.5929, 206.993, 6.51716, 0.88 ) }
    dend_21 { pt3dadd( -21.6764, 207.921, 6.63054, 0.88 ) }
    dend_21 { pt3dadd( -21.6979, 208.726, 6.73896, 0.88 ) }
    dend_21 { pt3dadd( -21.6879, 208.912, 6.76503, 0.88 ) }
    dend_21 { pt3dadd( -21.6206, 209.581, 6.84726, 0.88 ) }
    dend_21 { pt3dadd( -21.5305, 210.496, 6.9251, 0.81 ) }
    dend_21 { pt3dadd( -21.459, 211.343, 6.95812, 0.81 ) }
    dend_21 { pt3dadd( -21.458, 211.4, 6.95687, 0.81 ) }
    dend_21 { pt3dadd( -21.4954, 211.962, 6.97151, 0.96 ) }
    dend_21 { pt3dadd( -21.6436, 212.925, 7.0261, 0.96 ) }
    dend_21 { pt3dadd( -21.8719, 213.957, 7.10744, 1.03 ) }
    dend_21 { pt3dadd( -21.885, 214.006, 7.11216, 1.03 ) }
    dend_21 { pt3dadd( -22.2565, 215.259, 7.23926, 1.03 ) }
    dend_21 { pt3dadd( -22.5634, 216.297, 7.34074, 1.03 ) }
    dend_21 { pt3dadd( -22.8492, 217.334, 7.43845, 1.03 ) }
    dend_21 { pt3dadd( -22.9371, 217.724, 7.47463, 1.03 ) }
    dend_21 { pt3dadd( -23.0133, 218.214, 7.51372, 1.03 ) }
    dend_21 { pt3dadd( -23.0979, 219.001, 7.56011, 0.88 ) }
    dend_21 { pt3dadd( -23.1341, 219.964, 7.58295, 0.88 ) }
    dend_21 { pt3dadd( -23.1214, 220.792, 7.55869, 1.11 ) }
    dend_21 { pt3dadd( -23.096, 221.131, 7.53541, 1.11 ) }
    dend_21 { pt3dadd( -23.018, 222.039, 7.43804, 1.11 ) }
    dend_21 { pt3dadd( -23.0047, 222.161, 7.42079, 1.11 ) }
    dend_21 { pt3dadd( -22.9249, 222.792, 7.31199, 0.96 ) }
    dend_21 { pt3dadd( -22.9198, 222.84, 7.30206, 0.96 ) }
    dend_21 { pt3dadd( -22.8518, 223.843, 7.07767, 0.88 ) }
    dend_21 { pt3dadd( -22.8302, 224.603, 6.90564, 0.66 ) }
    dend_21 { pt3dadd( -22.8301, 224.719, 6.8811, 0.66 ) }
    dend_21 { pt3dadd( -22.8251, 225.428, 6.75186, 0.66 ) }
    dend_21 { pt3dadd( -22.8237, 225.493, 6.74268, 0.66 ) }
    dend_21 { pt3dadd( -22.7734, 226.245, 6.68065, 0.96 ) }
    dend_21 { pt3dadd( -22.7597, 226.361, 6.67938, 0.96 ) }
    dend_21 { pt3dadd( -22.6228, 227.104, 6.6723, 0.96 ) }
    dend_21 { pt3dadd( -22.5934, 227.241, 6.67094, 0.96 ) }
    dend_21 { pt3dadd( -22.5066, 227.636, 6.6682, 0.96 ) }
    dend_21 { pt3dadd( -22.3529, 228.391, 6.70412, 0.96 ) }
    dend_21 { pt3dadd( -22.247, 228.939, 6.75218, 1.18 ) }
    dend_21 { pt3dadd( -22.1446, 229.583, 6.82135, 0.74 ) }
    dend_21 { pt3dadd( -22.0686, 230.347, 6.90969, 0.74 ) }
    dend_21 { pt3dadd( -22.0525, 230.931, 6.97557, 1.18 ) }
    dend_21 { pt3dadd( -22.1288, 231.838, 7.06637, 0.66 ) }
    dend_21 { pt3dadd( -22.2669, 232.515, 7.12127, 0.66 ) }
    dend_21 { pt3dadd( -22.5048, 233.326, 7.16908, 0.66 ) }
    dend_21 { pt3dadd( -22.7979, 234.118, 7.20143, 1.18 ) }
    dend_21 { pt3dadd( -23.036, 234.687, 7.19755, 1.18 ) }
    dend_21 { pt3dadd( -23.5288, 235.797, 7.13274, 0.96 ) }
    dend_21 { pt3dadd( -23.8695, 236.553, 7.07896, 0.96 ) }
    dend_21 { pt3dadd( -24.1096, 237.104, 7.05602, 0.66 ) }
    dend_21 { pt3dadd( -24.1277, 237.15, 7.05545, 0.66 ) }
    dend_21 { pt3dadd( -24.4439, 238.048, 7.06949, 0.59 ) }
    dend_21 { pt3dadd( -24.6219, 238.623, 7.09309, 1.03 ) }
    dend_21 { pt3dadd( -24.9288, 239.681, 7.221, 0.81 ) }
    dend_21 { pt3dadd( -25.0964, 240.247, 7.32109, 1.03 ) }
    dend_21 { pt3dadd( -25.1321, 240.358, 7.34368, 1.03 ) }
    dend_21 { pt3dadd( -25.373, 241.048, 7.48852, 1.03 ) }
    dend_21 { pt3dadd( -25.4632, 241.281, 7.53989, 1.03 ) }
    dend_21 { pt3dadd( -25.8462, 242.215, 7.71856, 0.96 ) }
    dend_21 { pt3dadd( -26.1749, 243.058, 7.83134, 0.96 ) }
    dend_21 { pt3dadd( -26.39, 243.703, 7.90481, 0.96 ) }
    dend_21 { pt3dadd( -26.5717, 244.358, 7.96645, 1.11 ) }
    dend_21 { pt3dadd( -26.6692, 244.836, 7.99847, 1.33 ) }
    dend_21 { pt3dadd( -26.6787, 244.901, 8.0004, 1.33 ) }
    dend_21 { pt3dadd( -26.73, 245.781, 7.97436, 0.88 ) }
    dend_21 { pt3dadd( -26.721, 246.459, 7.95942, 1.11 ) }
    dend_21 { pt3dadd( -26.7088, 246.583, 7.96271, 1.11 ) }
    dend_21 { pt3dadd( -26.6053, 247.125, 8.00457, 1.11 ) }
    dend_21 { pt3dadd( -26.5899, 247.18, 8.01111, 1.11 ) }
    dend_21 { pt3dadd( -26.4, 247.734, 8.1467, 0.88 ) }
    dend_21 { pt3dadd( -26.3802, 247.785, 8.16362, 0.81 ) }
    dend_21 { pt3dadd( -26.1659, 248.348, 8.35561, 1.03 ) }
    dend_21 { pt3dadd( -26.0179, 248.759, 8.50124, 1.03 ) }
    dend_21 { pt3dadd( -25.8026, 249.442, 8.73706, 0.81 ) }
    dend_21 { pt3dadd( -25.5409, 250.476, 9.06858, 0.74 ) }
    dend_21 { pt3dadd( -25.4013, 251.228, 9.28529, 0.74 ) }
    dend_21 { pt3dadd( -25.3054, 251.989, 9.49992, 0.88 ) }
    dend_21 { pt3dadd( -25.2724, 252.416, 9.6116, 0.88 ) }
    dend_21 { pt3dadd( -25.2626, 253.051, 9.7766, 0.88 ) }
    dend_21 { pt3dadd( -25.2741, 253.469, 9.87593, 0.88 ) }
    dend_21 { pt3dadd( -25.2798, 254.044, 9.98299, 0.88 ) }
    dend_21 { pt3dadd( -25.246, 254.867, 10.1311, 0.88 ) }
    dend_21 { pt3dadd( -25.1993, 255.289, 10.2194, 0.88 ) }
    dend_21 { pt3dadd( -25.1807, 255.409, 10.244, 0.88 ) }
    dend_21 { pt3dadd( -25.0363, 256.151, 10.3966, 0.88 ) }
    dend_21 { pt3dadd( -24.8778, 256.928, 10.5421, 0.88 ) }
    dend_21 { pt3dadd( -24.6966, 257.78, 10.6825, 0.44 ) }
    dend_21 { pt3dadd( -24.5562, 258.557, 10.8093, 0.81 ) }
    dend_21 { pt3dadd( -24.4876, 259.143, 10.9128, 1.25 ) }
    dend_21 { pt3dadd( -24.4365, 259.879, 11.0495, 0.96 ) }
    dend_21 { pt3dadd( -24.4345, 260.833, 11.229, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_21 { pt3dadd( -24.4514, 261.127, 11.2831, 1.47 ) }
    dend_21 { pt3dadd( -24.5773, 262.361, 11.4827, 1.11 ) }
    dend_21 { pt3dadd( -24.6793, 263.103, 11.5747, 0.96 ) }
    dend_21 { pt3dadd( -24.688, 263.16, 11.5811, 0.96 ) }
    dend_21 { pt3dadd( -24.7789, 263.815, 11.633, 0.96 ) }
    dend_21 { pt3dadd( -24.7845, 263.866, 11.635, 0.96 ) }
    dend_21 { pt3dadd( -24.8315, 264.703, 11.6417, 0.96 ) }
    dend_21 { pt3dadd( -24.8301, 264.819, 11.6356, 0.96 ) }
    dend_21 { pt3dadd( -24.7705, 265.908, 11.5603, 0.96 ) }
    dend_21 { pt3dadd( -24.6574, 267.149, 11.4164, 0.96 ) }
    dend_21 { pt3dadd( -24.5227, 268.262, 11.2502, 0.96 ) }
    dend_21 { pt3dadd( -24.4318, 268.933, 11.16, 0.96 ) }
    dend_21 { pt3dadd( -24.3375, 269.532, 11.0833, 0.96 ) }
    dend_21 { pt3dadd( -24.1977, 270.345, 10.9896, 1.11 ) }
    dend_21 { pt3dadd( -23.9706, 271.558, 10.867, 1.11 ) }
    dend_21 { pt3dadd( -23.9613, 271.609, 10.8662, 1.11 ) }
    dend_21 { pt3dadd( -23.7775, 272.694, 10.9932, 1.11 ) }
    dend_21 { pt3dadd( -23.7701, 272.749, 11.006, 1.11 ) }
    dend_21 { pt3dadd( -23.6922, 273.451, 11.2369, 1.11 ) }
    dend_21 { pt3dadd( -23.6341, 274.027, 11.4589, 1.18 ) }
    dend_21 { pt3dadd( -23.5561, 275.01, 11.8778, 0.88 ) }
    dend_21 { pt3dadd( -23.4993, 275.7, 12.1438, 0.66 ) }
    dend_21 { pt3dadd( -23.4957, 275.757, 12.1614, 0.66 ) }
    dend_21 { pt3dadd( -23.5054, 276.283, 12.3026, 0.81 ) }
    dend_21 { pt3dadd( -23.5604, 276.959, 12.4465, 0.81 ) }
    dend_21 { pt3dadd( -23.5666, 277.018, 12.4549, 0.81 ) }
    dend_21 { pt3dadd( -23.6384, 277.652, 12.4951, 0.66 ) }
    dend_21 { pt3dadd( -23.7062, 278.319, 12.5126, 1.18 ) }
    dend_21 { pt3dadd( -23.8045, 279.375, 12.5296, 1.03 ) }
    dend_21 { pt3dadd( -23.8603, 280.044, 12.5325, 0.88 ) }
    dend_21 { pt3dadd( -23.913, 280.893, 12.509, 0.74 ) }
    dend_21 { pt3dadd( -23.9493, 281.861, 12.4562, 1.25 ) }
    dend_21 { pt3dadd( -23.9596, 282.375, 12.4115, 1.03 ) }
    dend_21 { pt3dadd( -23.9578, 282.498, 12.3989, 1.03 ) }
    dend_21 { pt3dadd( -23.9181, 283.345, 12.2821, 1.03 ) }
    dend_21 { pt3dadd( -23.8967, 284.031, 12.2323, 1.03 ) }
    dend_21 { pt3dadd( -23.893, 284.09, 12.2348, 1.03 ) }
    dend_21 { pt3dadd( -23.8088, 284.966, 12.3719, 1.25 ) }
    dend_21 { pt3dadd( -23.8007, 285.021, 12.3876, 1.25 ) }
    dend_21 { pt3dadd( -23.63, 285.922, 12.7137, 1.4 ) }
    dend_21 { pt3dadd( -23.3177, 287.309, 13.3233, 0.74 ) }
    dend_21 { pt3dadd( -23.1201, 288.154, 13.7235, 0.59 ) }
    dend_21 { pt3dadd( -23.102, 288.228, 13.7585, 0.59 ) }
    dend_21 { pt3dadd( -22.83, 289.217, 14.2241, 0.59 ) }
    dend_21 { pt3dadd( -22.6799, 289.775, 14.4513, 0.81 ) }
    dend_21 { pt3dadd( -22.6666, 289.828, 14.4684, 0.81 ) }
    dend_21 { pt3dadd( -22.5347, 290.478, 14.5627, 0.81 ) }
    dend_21 { pt3dadd( -22.5114, 290.652, 14.5739, 0.81 ) }
    dend_21 { pt3dadd( -22.4389, 291.374, 14.5898, 1.03 ) }
    dend_21 { pt3dadd( -22.3832, 292.095, 14.5727, 1.25 ) }
    dend_21 { pt3dadd( -22.3299, 292.646, 14.5922, 1.25 ) }
    dend_21 { pt3dadd( -22.324, 292.696, 14.596, 1.25 ) }
    dend_21 { pt3dadd( -22.234, 293.401, 14.7176, 0.96 ) }
    dend_21 { pt3dadd( -22.1011, 294.426, 14.9574, 0.74 ) }
    dend_21 { pt3dadd( -22.0529, 294.886, 15.1129, 0.74 ) }
    dend_21 { pt3dadd( -21.9612, 295.914, 15.5291, 0.88 ) }
    dend_21 { pt3dadd( -21.9292, 296.425, 15.7506, 0.74 ) }
    dend_21 { pt3dadd( -21.8847, 297.498, 16.2204, 0.74 ) }
    dend_21 { pt3dadd( -21.8801, 298.035, 16.4563, 0.74 ) }
    dend_21 { pt3dadd( -21.9134, 299.1, 16.9038, 0.96 ) }
    dend_21 { pt3dadd( -21.9534, 299.734, 17.1376, 1.03 ) }
    dend_21 { pt3dadd( -22.0181, 300.367, 17.3199, 1.03 ) }
    dend_21 { pt3dadd( -22.0838, 300.998, 17.4631, 1.18 ) }
    dend_21 { pt3dadd( -22.1345, 301.686, 17.5515, 0.59 ) }
    dend_21 { pt3dadd( -22.1507, 302.094, 17.5835, 0.37 ) }
    dend_21 { pt3dadd( -22.1475, 302.422, 17.5856, 0.81 ) }
    dend_21 { pt3dadd( -22.1326, 302.765, 17.5788, 0.81 ) }
    dend_21 { pt3dadd( -22.1017, 303.405, 17.5504, 0.81 ) }
    dend_21 { pt3dadd( -22.0968, 303.999, 17.5088, 0.81 ) }
    dend_21 { pt3dadd( -22.1317, 304.494, 17.4617, 0.88 ) }
    dend_21 { pt3dadd( -22.205, 304.889, 17.4164, 0.81 ) }
    dend_21 { pt3dadd( -22.3965, 305.525, 17.3337, 0.74 ) }
    dend_21 { pt3dadd( -22.6426, 306.149, 17.2468, 0.74 ) }
    dend_21 { pt3dadd( -22.9556, 306.784, 17.1538, 0.96 ) }
    dend_21 { pt3dadd( -23.3004, 307.417, 17.0657, 0.44 ) }
    dend_21 { pt3dadd( -23.6421, 308.017, 16.9901, 0.44 ) }
    dend_21 { pt3dadd( -23.9643, 308.589, 16.9314, 0.96 ) }
    dend_21 { pt3dadd( -23.9964, 308.647, 16.9273, 0.96 ) }
    dend_21 { pt3dadd( -24.2076, 309.077, 16.901, 0.96 ) }
    dend_21 { pt3dadd( -24.4414, 309.626, 16.8719, 0.96 ) }
    dend_21 { pt3dadd( -24.4996, 309.79, 16.8719, 0.96 ) }
    dend_21 { pt3dadd( -24.6934, 310.292, 16.8905, 0.81 ) }
    dend_21 { pt3dadd( -24.7603, 310.46, 16.9138, 0.81 ) }
    dend_21 { pt3dadd( -25.0726, 311.192, 17.0599, 0.81 ) }
    dend_21 { pt3dadd( -25.0943, 311.243, 17.0722, 0.81 ) }
    dend_21 { pt3dadd( -25.3765, 311.916, 17.2536, 0.96 ) }
    dend_21 { pt3dadd( -25.6756, 312.688, 17.4647, 0.81 ) }
    dend_21 { pt3dadd( -26.0327, 313.696, 17.7493, 0.81 ) }
    dend_21 { pt3dadd( -26.0487, 313.749, 17.7637, 0.81 ) }
    dend_21 { pt3dadd( -26.198, 314.448, 17.9295, 0.81 ) }
    dend_21 { pt3dadd( -26.2053, 314.504, 17.9389, 0.81 ) }
    dend_21 { pt3dadd( -26.2156, 315.176, 17.9366, 0.59 ) }
    dend_21 { pt3dadd( -26.2117, 315.263, 17.9314, 0.59 ) }
    dend_21 { pt3dadd( -26.1846, 315.738, 17.8564, 0.59 ) }
    dend_21 { pt3dadd( -26.1401, 316.412, 17.7374, 0.59 ) }
    dend_21 { pt3dadd( -26.0762, 317.203, 17.5687, 0.81 ) }
    dend_21 { pt3dadd( -25.9667, 318.344, 17.2954, 0.81 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 97/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -1.98509, 88.8435, -47.763, 0.52 ) }
    dend_17 { pt3dadd( -0.44428, 90.3101, -49.19, 0.52 ) }
    dend_17 { pt3dadd( -0.407601, 90.3518, -49.2268, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_17 { pt3dadd( 0.248533, 91.3198, -49.9508, 0.44 ) }
    dend_17 { pt3dadd( 0.283771, 91.3878, -49.9957, 0.44 ) }
    dend_17 { pt3dadd( 0.605838, 91.9879, -50.4042, 0.88 ) }
    dend_17 { pt3dadd( 0.950946, 92.5491, -50.7836, 1.11 ) }
    dend_17 { pt3dadd( 0.983949, 92.6089, -50.8191, 1.11 ) }
    dend_17 { pt3dadd( 1.45693, 93.3144, -51.2339, 1.03 ) }
    dend_17 { pt3dadd( 2.24104, 94.2919, -51.8042, 0.37 ) }
    dend_17 { pt3dadd( 3.34412, 95.3652, -52.5211, 0.44 ) }
    dend_17 { pt3dadd( 3.98883, 95.8755, -52.8963, 0.44 ) }
    dend_17 { pt3dadd( 4.0934, 95.9537, -52.9562, 0.44 ) }
    dend_17 { pt3dadd( 4.64012, 96.3989, -53.3373, 0.44 ) }
    dend_17 { pt3dadd( 4.69877, 96.4603, -53.396, 0.44 ) }
    dend_17 { pt3dadd( 5.32664, 97.3845, -54.2957, 0.96 ) }
    dend_17 { pt3dadd( 5.46211, 97.7282, -54.6025, 1.33 ) }
    dend_17 { pt3dadd( 5.68775, 98.524, -55.2655, 1.18 ) }
    dend_17 { pt3dadd( 5.96103, 99.7226, -56.2051, 0.81 ) }
    dend_17 { pt3dadd( 6.17833, 101.019, -57.1199, 0.37 ) }
    dend_17 { pt3dadd( 6.18982, 101.093, -57.1675, 0.37 ) }
    dend_17 { pt3dadd( 6.28166, 101.846, -57.5682, 0.66 ) }
    dend_17 { pt3dadd( 6.36894, 102.344, -57.815, 0.88 ) }
    dend_17 { pt3dadd( 6.40185, 102.51, -57.8819, 0.88 ) }
    dend_17 { pt3dadd( 6.56989, 103.274, -58.1612, 0.88 ) }
    dend_17 { pt3dadd( 6.78118, 104.229, -58.5215, 0.74 ) }
    dend_17 { pt3dadd( 6.93182, 105.06, -58.8588, 0.59 ) }
    dend_17 { pt3dadd( 7.09281, 106.22, -59.356, 1.03 ) }
    dend_17 { pt3dadd( 7.15264, 107.108, -59.746, 0.29 ) }
    dend_17 { pt3dadd( 7.16244, 108.136, -60.174, 0.81 ) }
    dend_17 { pt3dadd( 7.1322, 108.664, -60.3775, 0.88 ) }
    dend_17 { pt3dadd( 7.05318, 109.277, -60.5786, 0.96 ) }
    dend_17 { pt3dadd( 6.95958, 109.885, -60.7778, 0.66 ) }
    dend_17 { pt3dadd( 6.76895, 110.967, -61.0918, 0.22 ) }
    dend_17 { pt3dadd( 6.60857, 111.977, -61.368, 1.62 ) }
    dend_17 { pt3dadd( 6.50838, 112.678, -61.5336, 1.99 ) }
    dend_17 { pt3dadd( 6.42221, 113.305, -61.666, 1.77 ) }
    dend_17 { pt3dadd( 6.22214, 114.61, -61.9075, 1.25 ) }
    dend_17 { pt3dadd( 6.04825, 115.577, -62.0469, 0.81 ) }
    dend_17 { pt3dadd( 5.8982, 116.317, -62.1204, 0.66 ) }
    dend_17 { pt3dadd( 5.71491, 117.102, -62.1738, 0.81 ) }
    dend_17 { pt3dadd( 5.48513, 118.034, -62.199, 0.29 ) }
    dend_17 { pt3dadd( 5.19069, 119.137, -62.1779, 0.29 ) }
    dend_17 { pt3dadd( 5.02018, 119.708, -62.1208, 0.44 ) }
    dend_17 { pt3dadd( 4.99871, 119.784, -62.1122, 0.44 ) }
    dend_17 { pt3dadd( 4.75933, 120.649, -62.0265, 0.59 ) }
    dend_17 { pt3dadd( 4.61212, 121.235, -61.9838, 1.11 ) }
    dend_17 { pt3dadd( 4.46185, 121.886, -61.9598, 1.11 ) }
    dend_17 { pt3dadd( 4.2783, 122.722, -61.9436, 0.88 ) }
    dend_17 { pt3dadd( 4.01538, 123.931, -61.9412, 0.52 ) }
    dend_17 { pt3dadd( 3.72295, 125.284, -61.9471, 0.52 ) }
    dend_17 { pt3dadd( 3.46071, 126.53, -61.959, 0.66 ) }
    dend_17 { pt3dadd( 3.25676, 127.564, -61.9767, 0.29 ) }
    dend_17 { pt3dadd( 3.08446, 128.564, -62.0043, 0.81 ) }
    dend_17 { pt3dadd( 3.07408, 128.645, -62.0078, 0.81 ) }
    dend_17 { pt3dadd( 3.04365, 129.179, -62.0383, 1.03 ) }
    dend_17 { pt3dadd( 3.05146, 129.368, -62.053, 1.03 ) }
    dend_17 { pt3dadd( 3.1135, 130.012, -62.1235, 1.03 ) }
    dend_17 { pt3dadd( 3.20607, 130.728, -62.2168, 0.96 ) }
    dend_17 { pt3dadd( 3.26953, 131.359, -62.3184, 0.66 ) }
    dend_17 { pt3dadd( 3.28654, 132.175, -62.4697, 0.52 ) }
    dend_17 { pt3dadd( 3.22755, 132.728, -62.5902, 0.44 ) }
    dend_17 { pt3dadd( 3.01755, 133.75, -62.8352, 0.44 ) }
    dend_17 { pt3dadd( 2.96273, 133.907, -62.8755, 0.44 ) }
    dend_17 { pt3dadd( 2.68079, 134.475, -63.0216, 0.37 ) }
    dend_17 { pt3dadd( 2.24845, 135.163, -63.1869, 0.37 ) }
    dend_17 { pt3dadd( 1.63595, 136.03, -63.3559, 1.03 ) }
    dend_17 { pt3dadd( 1.5924, 136.094, -63.3667, 1.03 ) }
    dend_17 { pt3dadd( 1.24841, 136.659, -63.4468, 1.18 ) }
    dend_17 { pt3dadd( 0.942624, 137.237, -63.5155, 0.59 ) }
    dend_17 { pt3dadd( 0.642557, 137.923, -63.5792, 0.37 ) }
    dend_17 { pt3dadd( 0.378012, 138.694, -63.6351, 0.29 ) }
    dend_17 { pt3dadd( 0.0856628, 139.74, -63.6617, 0.22 ) }
    dend_17 { pt3dadd( -0.0481257, 140.241, -63.663, 0.44 ) }
    dend_17 { pt3dadd( -0.0895712, 140.409, -63.6609, 0.44 ) }
    dend_17 { pt3dadd( -0.278256, 141.105, -63.5803, 0.44 ) }
    dend_17 { pt3dadd( -0.300303, 141.178, -63.5613, 0.44 ) }
    dend_17 { pt3dadd( -0.633047, 142.193, -63.2023, 0.74 ) }
    dend_17 { pt3dadd( -0.914558, 142.991, -62.8797, 1.33 ) }
    dend_17 { pt3dadd( -1.26653, 143.976, -62.4544, 1.4 ) }
    dend_17 { pt3dadd( -1.8125, 145.513, -61.7817, 0.52 ) }
    dend_17 { pt3dadd( -2.16654, 146.509, -61.357, 0.59 ) }
    dend_17 { pt3dadd( -2.42824, 147.25, -61.0686, 0.74 ) }
    dend_17 { pt3dadd( -2.59917, 147.761, -60.8998, 0.74 ) }
    dend_17 { pt3dadd( -2.62638, 147.846, -60.8783, 0.74 ) }
    dend_17 { pt3dadd( -2.8163, 148.457, -60.789, 0.44 ) }
    dend_17 { pt3dadd( -3.07008, 149.318, -60.7957, 0.52 ) }
    dend_17 { pt3dadd( -3.22354, 149.889, -60.8269, 0.66 ) }
    dend_17 { pt3dadd( -3.35729, 150.406, -60.8349, 0.44 ) }
    dend_17 { pt3dadd( -3.53772, 151.122, -60.8265, 0.22 ) }
    dend_17 { pt3dadd( -3.79874, 152.122, -60.7993, 0.66 ) }
    dend_17 { pt3dadd( -3.93632, 152.616, -60.7945, 0.88 ) }
    dend_17 { pt3dadd( -4.13996, 153.306, -60.7987, 0.29 ) }
    dend_17 { pt3dadd( -4.40345, 154.135, -60.8137, 0.22 ) }
    dend_17 { pt3dadd( -4.58851, 154.686, -60.8325, 0.37 ) }
    dend_17 { pt3dadd( -4.78181, 155.25, -60.8832, 0.52 ) }
    dend_17 { pt3dadd( -5.06967, 156.103, -61.0354, 0.29 ) }
    dend_17 { pt3dadd( -5.21255, 156.551, -61.1272, 0.59 ) }
    dend_17 { pt3dadd( -5.26004, 156.725, -61.1576, 0.59 ) }
    dend_17 { pt3dadd( -5.34961, 157.208, -61.2188, 0.59 ) }
    dend_17 { pt3dadd( -5.35882, 157.285, -61.2234, 0.59 ) }
    dend_17 { pt3dadd( -5.42087, 158.012, -61.2295, 0.59 ) }
    dend_17 { pt3dadd( -5.50659, 159.088, -61.1627, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_17 { pt3dadd( -5.58761, 159.97, -61.0891, 0.59 ) }
    dend_17 { pt3dadd( -5.66619, 160.701, -61.0235, 1.03 ) }
    dend_17 { pt3dadd( -5.76425, 161.428, -60.9583, 1.03 ) }
    dend_17 { pt3dadd( -5.89249, 162.153, -60.9014, 0.81 ) }
    dend_17 { pt3dadd( -6.06233, 162.911, -60.8545, 0.59 ) }
    dend_17 { pt3dadd( -6.28366, 163.705, -60.8338, 0.37 ) }
    dend_17 { pt3dadd( -6.64267, 164.818, -60.8526, 0.37 ) }
    dend_17 { pt3dadd( -6.95325, 165.73, -60.883, 0.37 ) }
    dend_17 { pt3dadd( -7.20868, 166.464, -60.92, 0.44 ) }
    dend_17 { pt3dadd( -7.47596, 167.234, -60.9732, 0.44 ) }
    dend_17 { pt3dadd( -7.70897, 167.965, -61.0187, 0.29 ) }
    dend_17 { pt3dadd( -7.99112, 168.916, -61.053, 0.29 ) }
    dend_17 { pt3dadd( -8.17537, 169.658, -61.0557, 0.81 ) }
    dend_17 { pt3dadd( -8.31992, 170.378, -61.0116, 1.11 ) }
    dend_17 { pt3dadd( -8.44073, 171.111, -60.9311, 0.81 ) }
    dend_17 { pt3dadd( -8.60198, 172.19, -60.777, 0.52 ) }
    dend_17 { pt3dadd( -8.61267, 172.267, -60.764, 0.52 ) }
    dend_17 { pt3dadd( -8.77484, 173.224, -60.5948, 0.52 ) }
    dend_17 { pt3dadd( -9.00251, 174.254, -60.4268, 0.29 ) }
    dend_17 { pt3dadd( -9.18989, 174.959, -60.3258, 0.59 ) }
    dend_17 { pt3dadd( -9.42607, 175.655, -60.2612, 0.81 ) }
    dend_17 { pt3dadd( -9.48772, 175.8, -60.2579, 0.81 ) }
    dend_17 { pt3dadd( -9.76221, 176.438, -60.2615, 0.81 ) }
    dend_17 { pt3dadd( -10.0081, 177.058, -60.2821, 0.66 ) }
    dend_17 { pt3dadd( -10.0378, 177.143, -60.2877, 0.66 ) }
    dend_17 { pt3dadd( -10.2944, 177.926, -60.3331, 0.44 ) }
    dend_17 { pt3dadd( -10.5953, 178.864, -60.3863, 0.37 ) }
    dend_17 { pt3dadd( -10.8674, 179.738, -60.4356, 0.37 ) }
    dend_17 { pt3dadd( -11.1606, 180.685, -60.4907, 0.52 ) }
    dend_17 { pt3dadd( -11.4071, 181.449, -60.5401, 0.37 ) }
    dend_17 { pt3dadd( -11.6234, 182.055, -60.5881, 0.37 ) }
    dend_17 { pt3dadd( -11.8603, 182.687, -60.646, 0.81 ) }
    dend_17 { pt3dadd( -12.0962, 183.273, -60.7098, 0.88 ) }
    dend_17 { pt3dadd( -12.3215, 183.778, -60.7709, 0.59 ) }
    dend_17 { pt3dadd( -12.4604, 184.079, -60.8087, 0.44 ) }
    dend_17 { pt3dadd( -12.8379, 184.996, -60.9108, 0.37 ) }
    dend_17 { pt3dadd( -13.2204, 186.102, -61.0135, 0.37 ) }
    dend_17 { pt3dadd( -13.359, 186.662, -61.07, 0.66 ) }
    dend_17 { pt3dadd( -13.3743, 186.75, -61.0794, 0.66 ) }
    dend_17 { pt3dadd( -13.4399, 187.628, -61.1654, 0.74 ) }
    dend_17 { pt3dadd( -13.4545, 188.077, -61.2093, 0.88 ) }
    dend_17 { pt3dadd( -13.4233, 189.106, -61.3128, 0.59 ) }
    dend_17 { pt3dadd( -13.3441, 190.131, -61.4275, 0.29 ) }
    dend_17 { pt3dadd( -13.3334, 190.219, -61.4376, 0.29 ) }
    dend_17 { pt3dadd( -13.12, 191.607, -61.6033, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -1.98509, 88.8435, -47.763, 0.59 ) }
    dend_16 { pt3dadd( -2.01194, 89.5666, -47.6554, 0.59 ) }
    dend_16 { pt3dadd( -2.04046, 90.0857, -47.5675, 0.29 ) }
    dend_16 { pt3dadd( -2.07013, 90.5183, -47.4953, 0.29 ) }
    dend_16 { pt3dadd( -2.1164, 91.087, -47.4043, 0.29 ) }
    dend_16 { pt3dadd( -2.24563, 92.3907, -47.2034, 0.29 ) }
    dend_16 { pt3dadd( -2.34042, 93.2334, -47.0813, 0.74 ) }
    dend_16 { pt3dadd( -2.42281, 93.7819, -47.0139, 0.74 ) }
    dend_16 { pt3dadd( -2.51988, 94.3467, -46.9606, 0.52 ) }
    dend_16 { pt3dadd( -2.58244, 94.6882, -46.9412, 0.44 ) }
    dend_16 { pt3dadd( -2.66221, 95.1115, -46.9287, 0.29 ) }
    dend_16 { pt3dadd( -2.75468, 95.6106, -46.9346, 0.29 ) }
    dend_16 { pt3dadd( -2.86472, 96.2722, -46.9604, 0.66 ) }
    dend_16 { pt3dadd( -2.92712, 96.7035, -46.9677, 0.96 ) }
    dend_16 { pt3dadd( -2.96711, 97.1053, -46.9601, 0.66 ) }
    dend_16 { pt3dadd( -2.9764, 97.2539, -46.9531, 0.66 ) }
    dend_16 { pt3dadd( -2.99176, 97.7045, -46.9214, 0.44 ) }
    dend_16 { pt3dadd( -3.01561, 98.1666, -46.8808, 0.29 ) }
    dend_16 { pt3dadd( -3.04948, 98.6216, -46.8362, 0.22 ) }
    dend_16 { pt3dadd( -3.15817, 99.3588, -46.7214, 0.29 ) }
    dend_16 { pt3dadd( -3.17172, 99.4178, -46.7107, 0.29 ) }
    dend_16 { pt3dadd( -3.32725, 99.9706, -46.6027, 0.37 ) }
    dend_16 { pt3dadd( -3.53295, 100.567, -46.491, 0.66 ) }
    dend_16 { pt3dadd( -3.69601, 100.977, -46.4175, 0.96 ) }
    dend_16 { pt3dadd( -4.06887, 101.911, -46.2636, 0.81 ) }
    dend_16 { pt3dadd( -4.2863, 102.506, -46.1723, 0.59 ) }
    dend_16 { pt3dadd( -4.30534, 102.572, -46.1637, 0.59 ) }
    dend_16 { pt3dadd( -4.45769, 103.285, -46.088, 0.59 ) }
    dend_16 { pt3dadd( -4.51856, 103.737, -46.0531, 0.66 ) }
    dend_16 { pt3dadd( -4.57493, 104.705, -46.0026, 0.22 ) }
    dend_16 { pt3dadd( -4.55837, 105.192, -45.995, 0.22 ) }
    dend_16 { pt3dadd( -4.50246, 105.799, -45.9743, 0.74 ) }
    dend_16 { pt3dadd( -4.44605, 106.313, -45.953, 0.81 ) }
    dend_16 { pt3dadd( -4.43806, 106.384, -45.9497, 0.81 ) }
    dend_16 { pt3dadd( -4.39409, 106.947, -45.9266, 0.88 ) }
    dend_16 { pt3dadd( -4.37447, 107.399, -45.9056, 0.81 ) }
    dend_16 { pt3dadd( -4.36086, 107.947, -45.8858, 0.29 ) }
    dend_16 { pt3dadd( -4.39381, 108.883, -45.8681, 0.29 ) }
    dend_16 { pt3dadd( -4.49412, 110.211, -45.8615, 0.74 ) }
    dend_16 { pt3dadd( -4.56956, 110.851, -45.8682, 1.11 ) }
    dend_16 { pt3dadd( -4.66336, 111.41, -45.8857, 0.88 ) }
    dend_16 { pt3dadd( -4.86093, 112.322, -45.9218, 0.22 ) }
    dend_16 { pt3dadd( -5.10013, 113.271, -45.9661, 0.22 ) }
    dend_16 { pt3dadd( -5.1246, 113.365, -45.9737, 0.22 ) }
    dend_16 { pt3dadd( -5.18227, 113.603, -46.011, 0.22 ) }
    dend_16 { pt3dadd( -5.2979, 114.147, -46.1198, 0.74 ) }
    dend_16 { pt3dadd( -5.36946, 114.489, -46.1969, 1.11 ) }
    dend_16 { pt3dadd( -5.5029, 115.138, -46.3821, 1.25 ) }
    dend_16 { pt3dadd( -5.64377, 115.88, -46.6097, 0.74 ) }
    dend_16 { pt3dadd( -5.83476, 116.878, -46.9479, 0.22 ) }
    dend_16 { pt3dadd( -5.95324, 117.476, -47.1584, 0.37 ) }
    dend_16 { pt3dadd( -6.11892, 118.273, -47.44, 0.37 ) }
    dend_16 { pt3dadd( -6.36737, 119.409, -47.8238, 0.52 ) }
    dend_16 { pt3dadd( -6.47125, 119.872, -47.9677, 0.88 ) }
    dend_16 { pt3dadd( -6.69835, 120.845, -48.2272, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_16 { pt3dadd( -6.83595, 121.46, -48.368, 0.66 ) }
    dend_16 { pt3dadd( -6.98178, 122.152, -48.5093, 0.29 ) }
    dend_16 { pt3dadd( -7.13397, 122.925, -48.6418, 0.22 ) }
    dend_16 { pt3dadd( -7.26434, 123.581, -48.7207, 0.22 ) }
    dend_16 { pt3dadd( -7.38754, 124.21, -48.7851, 0.44 ) }
    dend_16 { pt3dadd( -7.46387, 124.63, -48.8159, 0.59 ) }
    dend_16 { pt3dadd( -7.55395, 125.238, -48.862, 0.37 ) }
    dend_16 { pt3dadd( -7.62233, 125.838, -48.9059, 0.29 ) }
    dend_16 { pt3dadd( -7.67368, 126.549, -48.9537, 0.44 ) }
    dend_16 { pt3dadd( -7.67884, 127.225, -49.0124, 0.29 ) }
    dend_16 { pt3dadd( -7.60645, 127.98, -49.1269, 0.66 ) }
    dend_16 { pt3dadd( -7.55329, 128.442, -49.2208, 1.03 ) }
    dend_16 { pt3dadd( -7.51548, 128.733, -49.291, 1.25 ) }
    dend_16 { pt3dadd( -7.45477, 129.31, -49.4478, 0.44 ) }
    dend_16 { pt3dadd( -7.40335, 130.186, -49.71, 0.52 ) }
    dend_16 { pt3dadd( -7.40064, 131.205, -50.0403, 0.29 ) }
    dend_16 { pt3dadd( -7.45363, 132.41, -50.4382, 0.29 ) }
    dend_16 { pt3dadd( -7.4584, 132.498, -50.4649, 0.29 ) }
    dend_16 { pt3dadd( -7.48931, 133.045, -50.6299, 0.29 ) }
    dend_16 { pt3dadd( -7.49807, 133.811, -50.8331, 0.81 ) }
    dend_16 { pt3dadd( -7.49514, 133.88, -50.846, 0.81 ) }
    dend_16 { pt3dadd( -7.43366, 134.336, -50.916, 0.88 ) }
    dend_16 { pt3dadd( -7.26824, 135.013, -51.0688, 0.88 ) }
    dend_16 { pt3dadd( -7.12428, 135.602, -51.2251, 0.44 ) }
    dend_16 { pt3dadd( -6.93923, 136.388, -51.4565, 0.22 ) }
    dend_16 { pt3dadd( -6.78469, 137.146, -51.7461, 0.22 ) }
    dend_16 { pt3dadd( -6.63013, 138.094, -52.1654, 0.81 ) }
    dend_16 { pt3dadd( -6.55183, 138.849, -52.5361, 0.88 ) }
    dend_16 { pt3dadd( -6.53656, 139.372, -52.7997, 0.96 ) }
    dend_16 { pt3dadd( -6.5458, 139.816, -53.019, 0.96 ) }
    dend_16 { pt3dadd( -6.624, 140.902, -53.577, 0.44 ) }
    dend_16 { pt3dadd( -6.62796, 140.964, -53.6063, 0.44 ) }
    dend_16 { pt3dadd( -6.65913, 141.565, -53.8296, 0.44 ) }
    dend_16 { pt3dadd( -6.69222, 142.412, -54.0909, 0.66 ) }
    dend_16 { pt3dadd( -6.69647, 142.554, -54.1315, 0.66 ) }
    dend_16 { pt3dadd( -6.70437, 142.946, -54.2674, 0.88 ) }
    dend_16 { pt3dadd( -6.71471, 143.617, -54.5098, 0.52 ) }
    dend_16 { pt3dadd( -6.70576, 144.218, -54.759, 0.37 ) }
    dend_16 { pt3dadd( -6.68186, 145.575, -55.4083, 1.11 ) }
    dend_16 { pt3dadd( -6.68597, 145.894, -55.5782, 1.25 ) }
    dend_16 { pt3dadd( -6.7624, 147.152, -56.2723, 0.22 ) }
    dend_16 { pt3dadd( -6.77067, 147.21, -56.3069, 0.22 ) }
    dend_16 { pt3dadd( -6.87728, 147.626, -56.5924, 0.22 ) }
    dend_16 { pt3dadd( -7.05634, 148.12, -56.9554, 0.22 ) }
    dend_16 { pt3dadd( -7.2099, 148.435, -57.1683, 0.74 ) }
    dend_16 { pt3dadd( -7.36882, 148.729, -57.3624, 1.03 ) }
    dend_16 { pt3dadd( -7.62929, 149.176, -57.6272, 0.81 ) }
    dend_16 { pt3dadd( -8.0613, 149.953, -58.0886, 0.52 ) }
    dend_16 { pt3dadd( -8.20187, 150.226, -58.2836, 0.37 ) }
    dend_16 { pt3dadd( -8.43204, 150.757, -58.7081, 0.29 ) }
    dend_16 { pt3dadd( -8.62017, 151.308, -59.1507, 0.59 ) }
    dend_16 { pt3dadd( -8.69926, 151.654, -59.41, 0.96 ) }
    dend_16 { pt3dadd( -8.74624, 152.002, -59.6492, 1.11 ) }
    dend_16 { pt3dadd( -8.84992, 153.092, -60.2791, 0.37 ) }
    dend_16 { pt3dadd( -8.85492, 153.152, -60.3116, 0.37 ) }
    dend_16 { pt3dadd( -8.93312, 153.813, -60.6175, 0.29 ) }
    dend_16 { pt3dadd( -9.06, 154.491, -60.838, 0.29 ) }
    dend_16 { pt3dadd( -9.07959, 154.555, -60.8524, 0.29 ) }
    dend_16 { pt3dadd( -9.35951, 155.205, -60.9395, 0.37 ) }
    dend_16 { pt3dadd( -9.51632, 155.531, -60.9529, 0.59 ) }
    dend_16 { pt3dadd( -9.84303, 156.193, -60.9742, 0.74 ) }
    dend_16 { pt3dadd( -10.1228, 156.73, -60.9884, 0.52 ) }
    dend_16 { pt3dadd( -10.5391, 157.551, -61.0054, 0.22 ) }
    dend_16 { pt3dadd( -10.7998, 158.135, -61.0158, 0.22 ) }
    dend_16 { pt3dadd( -10.9824, 158.61, -61.0481, 0.22 ) }
    dend_16 { pt3dadd( -11.2198, 159.309, -61.1322, 0.74 ) }
    dend_16 { pt3dadd( -11.3987, 159.918, -61.2341, 0.88 ) }
    dend_16 { pt3dadd( -11.5465, 160.472, -61.3502, 0.74 ) }
    dend_16 { pt3dadd( -11.7162, 161.158, -61.5082, 0.66 ) }
    dend_16 { pt3dadd( -12.0164, 162.3, -61.794, 0.29 ) }
    dend_16 { pt3dadd( -12.2418, 163.061, -61.9979, 0.29 ) }
    dend_16 { pt3dadd( -12.3609, 163.46, -62.1094, 0.44 ) }
    dend_16 { pt3dadd( -12.4011, 163.598, -62.1472, 0.44 ) }
    dend_16 { pt3dadd( -12.5106, 164.0, -62.2438, 0.44 ) }
    dend_16 { pt3dadd( -12.6037, 164.39, -62.3138, 0.29 ) }
    dend_16 { pt3dadd( -12.6728, 164.789, -62.3475, 0.74 ) }
    dend_16 { pt3dadd( -12.7222, 165.366, -62.3759, 0.96 ) }
    dend_16 { pt3dadd( -12.7302, 165.664, -62.3859, 0.88 ) }
    dend_16 { pt3dadd( -12.7254, 166.385, -62.4051, 0.29 ) }
    dend_16 { pt3dadd( -12.7092, 166.879, -62.4152, 0.44 ) }
    dend_16 { pt3dadd( -12.6799, 167.514, -62.4254, 0.29 ) }
    dend_16 { pt3dadd( -12.6644, 168.438, -62.4412, 0.37 ) }
    dend_16 { pt3dadd( -12.6593, 168.83, -62.4466, 0.59 ) }
    dend_16 { pt3dadd( -12.6394, 169.405, -62.4526, 0.74 ) }
    dend_16 { pt3dadd( -12.6285, 169.766, -62.4566, 0.52 ) }
    dend_16 { pt3dadd( -12.6171, 170.214, -62.4525, 0.37 ) }
    dend_16 { pt3dadd( -12.6078, 171.272, -62.4021, 0.52 ) }
    dend_16 { pt3dadd( -12.6079, 172.142, -62.3346, 0.44 ) }
    dend_16 { pt3dadd( -12.6063, 173.419, -62.2105, 0.88 ) }
    dend_16 { pt3dadd( -12.5997, 173.93, -62.1535, 1.25 ) }
    dend_16 { pt3dadd( -12.5957, 174.444, -62.0942, 1.03 ) }
    dend_16 { pt3dadd( -12.5918, 175.251, -61.9962, 0.29 ) }
    dend_16 { pt3dadd( -12.5996, 175.95, -61.9121, 0.44 ) }
    dend_16 { pt3dadd( -12.6607, 176.735, -61.8512, 0.37 ) }
    dend_16 { pt3dadd( -12.759, 177.483, -61.8302, 0.74 ) }
    dend_16 { pt3dadd( -12.8794, 178.259, -61.8509, 0.74 ) }
    dend_16 { pt3dadd( -12.8925, 178.327, -61.857, 0.74 ) }
    dend_16 { pt3dadd( -13.071, 179.083, -61.9586, 0.74 ) }
    dend_16 { pt3dadd( -13.2961, 179.909, -62.0794, 0.22 ) }
    dend_16 { pt3dadd( -13.4149, 180.337, -62.1418, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_16 { pt3dadd( -13.5466, 180.817, -62.2073, 0.96 ) }
    dend_16 { pt3dadd( -13.7424, 181.568, -62.2985, 0.22 ) }
    dend_16 { pt3dadd( -13.8877, 182.184, -62.3599, 0.66 ) }
    dend_16 { pt3dadd( -14.0003, 182.749, -62.3994, 1.03 ) }
    dend_16 { pt3dadd( -14.1386, 183.54, -62.3953, 0.81 ) }
    dend_16 { pt3dadd( -14.2928, 184.398, -62.3577, 0.52 ) }
    dend_16 { pt3dadd( -14.3881, 184.883, -62.3335, 0.44 ) }
    dend_16 { pt3dadd( -14.6104, 185.885, -62.2853, 0.37 ) }
    dend_16 { pt3dadd( -14.8329, 186.763, -62.2481, 0.88 ) }
    dend_16 { pt3dadd( -15.0867, 187.723, -62.2124, 1.25 ) }
    dend_16 { pt3dadd( -15.2311, 188.285, -62.195, 0.88 ) }
    dend_16 { pt3dadd( -15.4055, 189.049, -62.1794, 0.44 ) }
    dend_16 { pt3dadd( -15.5868, 189.881, -62.1792, 0.59 ) }
    dend_16 { pt3dadd( -15.6864, 190.376, -62.1911, 0.81 ) }
    dend_16 { pt3dadd( -15.7829, 190.927, -62.2201, 0.59 ) }
    dend_16 { pt3dadd( -15.8795, 191.627, -62.275, 0.37 ) }
    dend_16 { pt3dadd( -15.9971, 192.772, -62.3301, 0.52 ) }
    dend_16 { pt3dadd( -16.0685, 193.507, -62.3416, 0.37 ) }
    dend_16 { pt3dadd( -16.1092, 193.845, -62.347, 0.74 ) }
    dend_16 { pt3dadd( -16.201, 194.341, -62.3589, 0.88 ) }
    dend_16 { pt3dadd( -16.276, 194.607, -62.3804, 0.88 ) }
    dend_16 { pt3dadd( -16.4295, 195.077, -62.4849, 1.11 ) }
    dend_16 { pt3dadd( -16.5644, 195.557, -62.639, 1.03 ) }
    dend_16 { pt3dadd( -16.6726, 196.014, -62.8088, 0.37 ) }
    dend_16 { pt3dadd( -16.7806, 196.564, -63.0258, 0.37 ) }
    dend_16 { pt3dadd( -16.8898, 197.403, -63.3775, 0.66 ) }
    dend_16 { pt3dadd( -17.004, 198.696, -63.9115, 0.29 ) }
    dend_16 { pt3dadd( -17.0561, 199.557, -64.2511, 0.52 ) }
    dend_16 { pt3dadd( -17.0585, 199.615, -64.2724, 0.52 ) }
    dend_16 { pt3dadd( -17.0733, 200.099, -64.431, 0.66 ) }
    dend_16 { pt3dadd( -17.1019, 200.949, -64.6544, 0.37 ) }
    dend_16 { pt3dadd( -17.1569, 201.912, -64.8354, 0.66 ) }
    dend_16 { pt3dadd( -17.2234, 202.618, -64.9259, 0.59 ) }
    dend_16 { pt3dadd( -17.2896, 203.123, -64.9679, 0.74 ) }
    dend_16 { pt3dadd( -17.3903, 203.794, -64.9926, 0.37 ) }
    dend_16 { pt3dadd( -17.5483, 204.701, -64.9172, 0.59 ) }
    dend_16 { pt3dadd( -17.5742, 204.836, -64.8923, 0.59 ) }
    dend_16 { pt3dadd( -17.6756, 205.363, -64.7722, 0.37 ) }
    dend_16 { pt3dadd( -17.873, 206.408, -64.5098, 0.29 ) }
    dend_16 { pt3dadd( -18.0397, 207.307, -64.2966, 0.52 ) }
    dend_16 { pt3dadd( -18.3054, 208.746, -63.9693, 0.22 ) }
    dend_16 { pt3dadd( -18.4462, 209.639, -63.7881, 0.52 ) }
    dend_16 { pt3dadd( -18.5223, 210.111, -63.7142, 0.81 ) }
    dend_16 { pt3dadd( -18.624, 210.658, -63.6645, 0.52 ) }
    dend_16 { pt3dadd( -18.8182, 211.622, -63.6671, 0.74 ) }
    dend_16 { pt3dadd( -18.8347, 211.689, -63.6737, 0.74 ) }
    dend_16 { pt3dadd( -19.1126, 212.546, -63.8475, 1.33 ) }
    dend_16 { pt3dadd( -19.3698, 213.2, -63.9837, 0.88 ) }
    dend_16 { pt3dadd( -19.7065, 213.927, -64.1313, 0.66 ) }
    dend_16 { pt3dadd( -20.0793, 214.614, -64.2573, 0.52 ) }
    dend_16 { pt3dadd( -20.5489, 215.402, -64.3988, 0.52 ) }
    dend_16 { pt3dadd( -20.95, 216.038, -64.5182, 0.52 ) }
    dend_16 { pt3dadd( -21.4333, 216.733, -64.6602, 0.29 ) }
    dend_16 { pt3dadd( -21.7614, 217.222, -64.758, 0.52 ) }
    dend_16 { pt3dadd( -22.0751, 217.678, -64.8457, 0.66 ) }
    // Section: dend_11, id: dend_11, parent: dend_3 (entry count 55/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 44.3268, 64.5376, 8.88911, 0.59 ) }
    dend_11 { pt3dadd( 46.1588, 64.8279, 5.38408, 0.59 ) }
    dend_11 { pt3dadd( 47.1751, 65.0247, 3.7219, 0.74 ) }
    dend_11 { pt3dadd( 47.22, 65.0343, 3.65556, 0.74 ) }
    dend_11 { pt3dadd( 47.6982, 65.1575, 3.01967, 0.74 ) }
    dend_11 { pt3dadd( 48.5267, 65.3572, 2.06297, 0.96 ) }
    dend_11 { pt3dadd( 48.5818, 65.3665, 2.00478, 0.96 ) }
    dend_11 { pt3dadd( 49.281, 65.4268, 1.56022, 0.96 ) }
    dend_11 { pt3dadd( 49.3493, 65.4296, 1.51741, 0.96 ) }
    dend_11 { pt3dadd( 50.6492, 65.4946, 0.634209, 0.52 ) }
    dend_11 { pt3dadd( 51.4856, 65.5465, 0.0203984, 0.52 ) }
    dend_11 { pt3dadd( 52.6076, 65.6276, -0.824721, 0.81 ) }
    dend_11 { pt3dadd( 53.2234, 65.6846, -1.27867, 0.88 ) }
    dend_11 { pt3dadd( 54.287, 65.7627, -2.09888, 0.52 ) }
    dend_11 { pt3dadd( 54.6097, 65.7913, -2.33601, 0.74 ) }
    dend_11 { pt3dadd( 54.7308, 65.8055, -2.44161, 0.74 ) }
    dend_11 { pt3dadd( 55.1532, 65.8915, -2.88543, 0.29 ) }
    dend_11 { pt3dadd( 55.667, 66.0457, -3.47459, 0.59 ) }
    dend_11 { pt3dadd( 56.5082, 66.3566, -4.66759, 0.74 ) }
    dend_11 { pt3dadd( 56.9652, 66.5461, -5.36555, 0.59 ) }
    dend_11 { pt3dadd( 58.0225, 67.0222, -7.11619, 1.03 ) }
    dend_11 { pt3dadd( 58.0873, 67.0548, -7.22489, 1.03 ) }
    dend_11 { pt3dadd( 58.2922, 67.1708, -7.58205, 0.74 ) }
    dend_11 { pt3dadd( 59.1214, 67.7413, -9.05, 0.44 ) }
    dend_11 { pt3dadd( 59.4421, 68.0044, -9.57846, 0.59 ) }
    dend_11 { pt3dadd( 60.0668, 68.4997, -10.5037, 0.66 ) }
    dend_11 { pt3dadd( 60.4967, 68.8053, -10.9817, 0.74 ) }
    dend_11 { pt3dadd( 60.5467, 68.838, -11.0337, 0.74 ) }
    dend_11 { pt3dadd( 60.7404, 68.9572, -11.2152, 0.74 ) }
    dend_11 { pt3dadd( 60.7898, 68.9866, -11.2529, 0.74 ) }
    dend_11 { pt3dadd( 61.8166, 69.6793, -12.2313, 0.29 ) }
    dend_11 { pt3dadd( 62.0701, 69.93, -12.589, 0.66 ) }
    dend_11 { pt3dadd( 62.1289, 70.018, -12.7213, 0.66 ) }
    dend_11 { pt3dadd( 62.2555, 70.2172, -13.08, 0.88 ) }
    dend_11 { pt3dadd( 62.2728, 70.2535, -13.1611, 0.88 ) }
    dend_11 { pt3dadd( 62.5139, 70.9654, -14.8302, 0.29 ) }
    dend_11 { pt3dadd( 62.6491, 71.5809, -16.3206, 0.29 ) }
    dend_11 { pt3dadd( 62.7592, 72.3065, -18.1438, 1.11 ) }
    dend_11 { pt3dadd( 62.8274, 72.9834, -19.8923, 0.96 ) }
    dend_11 { pt3dadd( 62.8827, 74.2864, -23.2025, 0.66 ) }
    dend_11 { pt3dadd( 62.8794, 74.5448, -23.8388, 0.66 ) }
    dend_11 { pt3dadd( 62.8717, 74.6343, -24.0431, 0.66 ) }
    dend_11 { pt3dadd( 62.8278, 75.1289, -25.0622, 0.59 ) }
    dend_11 { pt3dadd( 62.8225, 75.2261, -25.222, 0.59 ) }
    dend_11 { pt3dadd( 62.8174, 76.182, -26.3181, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_11 { pt3dadd( 62.8257, 76.2282, -26.356, 0.52 ) }
    dend_11 { pt3dadd( 62.9663, 76.734, -26.7651, 0.96 ) }
    dend_11 { pt3dadd( 63.1812, 77.3342, -27.2201, 1.11 ) }
    dend_11 { pt3dadd( 63.7316, 78.5839, -28.0642, 0.29 ) }
    dend_11 { pt3dadd( 63.7617, 78.6362, -28.1037, 0.29 ) }
    dend_11 { pt3dadd( 64.043, 78.954, -28.4283, 0.52 ) }
    dend_11 { pt3dadd( 64.0819, 78.9891, -28.4741, 0.52 ) }
    dend_11 { pt3dadd( 64.2324, 79.1036, -28.6518, 0.74 ) }
    dend_11 { pt3dadd( 64.275, 79.1383, -28.709, 0.74 ) }
    dend_11 { pt3dadd( 64.9269, 79.7978, -29.596, 0.74 ) }
    dend_11 { pt3dadd( 65.4372, 80.475, -30.3514, 0.59 ) }
    dend_11 { pt3dadd( 65.4688, 80.5272, -30.4028, 0.59 ) }
    dend_11 { pt3dadd( 65.7446, 81.0259, -30.8282, 0.29 ) }
    dend_11 { pt3dadd( 66.1641, 81.8828, -31.4451, 0.29 ) }
    dend_11 { pt3dadd( 66.4744, 82.6103, -31.9107, 0.88 ) }
    dend_11 { pt3dadd( 66.6289, 83.0459, -32.1238, 1.11 ) }
    dend_11 { pt3dadd( 66.6496, 83.1076, -32.1509, 1.11 ) }
    dend_11 { pt3dadd( 66.8849, 83.7193, -32.4228, 0.88 ) }
    dend_11 { pt3dadd( 67.0, 83.9516, -32.5493, 0.52 ) }
    dend_11 { pt3dadd( 67.5591, 84.8034, -33.0681, 0.37 ) }
    dend_11 { pt3dadd( 68.0966, 85.4948, -33.5615, 0.22 ) }
    dend_11 { pt3dadd( 68.1422, 85.5486, -33.6023, 0.22 ) }
    dend_11 { pt3dadd( 68.4328, 85.9017, -33.8598, 0.74 ) }
    dend_11 { pt3dadd( 69.0411, 86.7328, -34.4903, 0.88 ) }
    dend_11 { pt3dadd( 69.3425, 87.1418, -34.797, 0.22 ) }
    dend_11 { pt3dadd( 69.6468, 87.5027, -35.1054, 0.29 ) }
    dend_11 { pt3dadd( 69.6925, 87.5482, -35.152, 0.29 ) }
    dend_11 { pt3dadd( 70.0476, 87.8627, -35.6123, 0.29 ) }
    dend_11 { pt3dadd( 70.7321, 88.3666, -36.7187, 0.88 ) }
    dend_11 { pt3dadd( 70.9866, 88.5198, -37.1462, 1.18 ) }
    dend_11 { pt3dadd( 71.7635, 88.9159, -38.497, 0.29 ) }
    dend_11 { pt3dadd( 72.1116, 89.075, -39.1047, 0.88 ) }
    dend_11 { pt3dadd( 73.3017, 89.6202, -41.1392, 1.33 ) }
    dend_11 { pt3dadd( 74.2912, 90.0496, -42.7708, 0.52 ) }
    dend_11 { pt3dadd( 74.6331, 90.2039, -43.3124, 1.25 ) }
    dend_11 { pt3dadd( 74.6688, 90.2238, -43.3683, 1.25 ) }
    dend_11 { pt3dadd( 75.4769, 90.8121, -44.6105, 0.29 ) }
    dend_11 { pt3dadd( 75.8721, 91.154, -45.1804, 0.29 ) }
    dend_11 { pt3dadd( 76.2482, 91.5305, -45.5868, 0.59 ) }
    dend_11 { pt3dadd( 76.4543, 91.7596, -45.7937, 0.96 ) }
    dend_11 { pt3dadd( 76.8753, 92.2248, -46.2207, 0.96 ) }
    dend_11 { pt3dadd( 77.5729, 92.9106, -46.8999, 0.59 ) }
    dend_11 { pt3dadd( 77.6232, 92.9531, -46.9443, 0.59 ) }
    dend_11 { pt3dadd( 78.0231, 93.2676, -47.2845, 0.29 ) }
    dend_11 { pt3dadd( 78.5939, 93.7286, -47.743, 0.44 ) }
    dend_11 { pt3dadd( 78.9437, 94.0175, -48.005, 0.66 ) }
    dend_11 { pt3dadd( 79.4576, 94.494, -48.3944, 0.29 ) }
    dend_11 { pt3dadd( 79.794, 94.8153, -48.6203, 0.22 ) }
    dend_11 { pt3dadd( 80.2339, 95.2485, -48.9244, 0.66 ) }
    dend_11 { pt3dadd( 80.4693, 95.4789, -49.0858, 0.74 ) }
    dend_11 { pt3dadd( 80.7131, 95.7274, -49.2476, 0.59 ) }
    dend_11 { pt3dadd( 81.5809, 96.546, -49.803, 0.22 ) }
    dend_11 { pt3dadd( 81.9777, 96.8231, -50.0532, 0.44 ) }
    dend_11 { pt3dadd( 82.0421, 96.8507, -50.0935, 0.44 ) }
    dend_11 { pt3dadd( 82.4143, 96.9426, -50.3109, 0.59 ) }
    dend_11 { pt3dadd( 82.4729, 96.9535, -50.346, 0.59 ) }
    dend_11 { pt3dadd( 83.0424, 97.0312, -50.6821, 0.59 ) }
    dend_11 { pt3dadd( 83.9676, 97.1451, -51.1973, 0.22 ) }
    dend_11 { pt3dadd( 84.4684, 97.2506, -51.4841, 0.59 ) }
    dend_11 { pt3dadd( 84.8002, 97.341, -51.6709, 0.66 ) }
    dend_11 { pt3dadd( 85.4194, 97.57, -52.074, 0.66 ) }
    dend_11 { pt3dadd( 85.4744, 97.5958, -52.1116, 0.66 ) }
    dend_11 { pt3dadd( 86.1904, 98.0179, -52.6407, 0.22 ) }
    dend_11 { pt3dadd( 86.6957, 98.362, -53.0117, 0.66 ) }
    dend_11 { pt3dadd( 86.9193, 98.523, -53.1801, 0.96 ) }
    dend_11 { pt3dadd( 88.0883, 99.3919, -54.0557, 0.22 ) }
    dend_11 { pt3dadd( 88.487, 99.6987, -54.3948, 0.22 ) }
    dend_11 { pt3dadd( 89.0494, 100.164, -55.036, 0.59 ) }
    dend_11 { pt3dadd( 89.2997, 100.393, -55.4229, 0.96 ) }
    dend_11 { pt3dadd( 89.4144, 100.498, -55.6277, 1.18 ) }
    dend_11 { pt3dadd( 89.4447, 100.524, -55.6844, 1.18 ) }
    dend_11 { pt3dadd( 90.2727, 101.103, -57.1006, 0.44 ) }
    dend_11 { pt3dadd( 90.991, 101.487, -58.2101, 0.37 ) }
    dend_11 { pt3dadd( 91.5595, 101.73, -59.0031, 0.29 ) }
    dend_11 { pt3dadd( 91.9215, 101.865, -59.4512, 0.44 ) }
    dend_11 { pt3dadd( 92.1944, 101.969, -59.7672, 0.44 ) }
    dend_11 { pt3dadd( 93.0078, 102.279, -60.5577, 0.22 ) }
    dend_11 { pt3dadd( 93.6501, 102.476, -61.0162, 0.81 ) }
    dend_11 { pt3dadd( 93.7737, 102.507, -61.0916, 0.81 ) }
    dend_11 { pt3dadd( 94.1779, 102.582, -61.3272, 0.96 ) }
    dend_11 { pt3dadd( 95.723, 102.812, -62.2324, 0.37 ) }
    dend_11 { pt3dadd( 96.6122, 102.959, -62.76, 0.37 ) }
    dend_11 { pt3dadd( 97.4496, 103.139, -63.3343, 0.29 ) }
    dend_11 { pt3dadd( 97.4962, 103.147, -63.3704, 0.29 ) }
    dend_11 { pt3dadd( 98.0872, 103.241, -63.8499, 0.29 ) }
    dend_11 { pt3dadd( 98.5447, 103.305, -64.2184, 0.74 ) }
    dend_11 { pt3dadd( 99.1429, 103.38, -64.6129, 1.03 ) }
    dend_11 { pt3dadd( 100.236, 103.544, -65.3039, 0.88 ) }
    dend_11 { pt3dadd( 101.757, 103.818, -66.0356, 0.29 ) }
    dend_11 { pt3dadd( 102.299, 103.898, -66.2177, 0.44 ) }
    dend_11 { pt3dadd( 103.081, 103.981, -66.3856, 0.29 ) }
    dend_11 { pt3dadd( 104.351, 104.032, -66.5059, 1.33 ) }
    dend_11 { pt3dadd( 104.814, 104.017, -66.4908, 1.69 ) }
    dend_11 { pt3dadd( 106.353, 103.916, -66.2642, 0.29 ) }
    dend_11 { pt3dadd( 107.019, 103.866, -66.1162, 0.29 ) }
    dend_11 { pt3dadd( 107.423, 103.82, -66.035, 0.66 ) }
    dend_11 { pt3dadd( 107.484, 103.81, -66.0263, 0.66 ) }
    dend_11 { pt3dadd( 107.932, 103.726, -66.0198, 0.66 ) }
    dend_11 { pt3dadd( 108.708, 103.549, -66.0748, 0.22 ) }
    dend_11 { pt3dadd( 109.177, 103.393, -66.1542, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_11 { pt3dadd( 109.252, 103.365, -66.1639, 0.44 ) }
    dend_11 { pt3dadd( 109.807, 103.145, -66.2179, 0.44 ) }
    dend_11 { pt3dadd( 109.861, 103.124, -66.231, 0.44 ) }
    dend_11 { pt3dadd( 110.548, 102.867, -66.4574, 0.29 ) }
    dend_11 { pt3dadd( 111.284, 102.59, -66.7929, 0.29 ) }
    dend_11 { pt3dadd( 111.819, 102.39, -67.0849, 0.74 ) }
    dend_11 { pt3dadd( 112.111, 102.284, -67.2566, 0.96 ) }
    dend_11 { pt3dadd( 113.623, 101.761, -68.2532, 0.37 ) }
    dend_11 { pt3dadd( 113.955, 101.662, -68.4949, 1.03 ) }
    dend_11 { pt3dadd( 114.756, 101.49, -69.1917, 1.03 ) }
    dend_11 { pt3dadd( 115.104, 101.443, -69.5539, 0.88 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 11/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 44.3268, 64.5376, 8.88911, 0.88 ) }
    dend_4 { pt3dadd( 45.2427, 65.1034, 9.93099, 0.88 ) }
    dend_4 { pt3dadd( 45.6939, 65.4209, 10.3622, 0.66 ) }
    dend_4 { pt3dadd( 45.9353, 65.6278, 10.5858, 0.66 ) }
    dend_4 { pt3dadd( 45.9568, 65.6498, 10.6054, 0.66 ) }
    dend_4 { pt3dadd( 46.1889, 65.9417, 10.8158, 0.66 ) }
    dend_4 { pt3dadd( 46.2083, 65.9693, 10.8328, 0.66 ) }
    dend_4 { pt3dadd( 46.4155, 66.3731, 10.9881, 0.74 ) }
    dend_4 { pt3dadd( 46.6973, 67.0436, 11.2626, 0.44 ) }
    dend_4 { pt3dadd( 46.8134, 67.3478, 11.4032, 0.37 ) }
    dend_4 { pt3dadd( 46.9745, 67.7826, 11.6182, 0.37 ) }
    dend_4 { pt3dadd( 47.0477, 67.9864, 11.7228, 0.59 ) }
    dend_4 { pt3dadd( 47.2209, 68.4721, 11.9679, 0.59 ) }
    dend_4 { pt3dadd( 47.3491, 68.8239, 12.1385, 0.59 ) }
    dend_4 { pt3dadd( 47.4179, 68.9834, 12.2001, 0.88 ) }
    dend_4 { pt3dadd( 47.4371, 69.0173, 12.2148, 0.88 ) }
    dend_4 { pt3dadd( 47.645, 69.3132, 12.391, 1.18 ) }
    dend_4 { pt3dadd( 47.6876, 69.3673, 12.4324, 1.18 ) }
    dend_4 { pt3dadd( 47.817, 69.5265, 12.5748, 0.88 ) }
    dend_4 { pt3dadd( 48.0945, 69.8668, 12.8971, 0.44 ) }
    dend_4 { pt3dadd( 48.422, 70.2612, 13.2606, 0.74 ) }
    dend_4 { pt3dadd( 48.8552, 70.7695, 13.7328, 1.33 ) }
    dend_4 { pt3dadd( 49.2487, 71.2314, 14.1533, 0.96 ) }
    dend_4 { pt3dadd( 49.6493, 71.7113, 14.572, 0.52 ) }
    dend_4 { pt3dadd( 49.8891, 72.0158, 14.8194, 0.44 ) }
    dend_4 { pt3dadd( 50.197, 72.4276, 15.1476, 0.37 ) }
    dend_4 { pt3dadd( 50.4819, 72.8563, 15.4872, 0.37 ) }
    dend_4 { pt3dadd( 50.6535, 73.1447, 15.7282, 0.37 ) }
    dend_4 { pt3dadd( 50.6923, 73.2219, 15.7992, 0.37 ) }
    dend_4 { pt3dadd( 50.8014, 73.477, 16.0726, 0.59 ) }
    dend_4 { pt3dadd( 50.9828, 74.0366, 16.7578, 0.88 ) }
    dend_4 { pt3dadd( 51.0717, 74.4554, 17.3196, 0.88 ) }
    dend_4 { pt3dadd( 51.1091, 74.7839, 17.7655, 0.52 ) }
    dend_4 { pt3dadd( 51.1228, 74.9815, 18.0447, 0.52 ) }
    dend_4 { pt3dadd( 51.1241, 75.0003, 18.0693, 0.52 ) }
    dend_4 { pt3dadd( 51.1394, 75.181, 18.2532, 0.52 ) }
    dend_4 { pt3dadd( 51.1451, 75.215, 18.2664, 0.52 ) }
    dend_4 { pt3dadd( 51.214, 75.4527, 18.2893, 0.74 ) }
    dend_4 { pt3dadd( 51.2325, 75.5051, 18.2888, 0.74 ) }
    dend_4 { pt3dadd( 51.3672, 75.8262, 18.2782, 0.37 ) }
    dend_4 { pt3dadd( 51.5798, 76.3022, 18.257, 0.44 ) }
    dend_4 { pt3dadd( 51.7672, 76.6971, 18.2108, 0.44 ) }
    dend_4 { pt3dadd( 51.9232, 77.0201, 18.1575, 0.74 ) }
    dend_4 { pt3dadd( 51.9557, 77.0848, 18.1439, 0.74 ) }
    dend_4 { pt3dadd( 52.1516, 77.4981, 18.0421, 0.74 ) }
    dend_4 { pt3dadd( 52.1664, 77.5305, 18.0331, 0.74 ) }
    dend_4 { pt3dadd( 52.3756, 78.0188, 17.8939, 0.66 ) }
    dend_4 { pt3dadd( 52.3891, 78.0531, 17.8848, 0.66 ) }
    dend_4 { pt3dadd( 52.5088, 78.3531, 17.8182, 0.74 ) }
    dend_4 { pt3dadd( 52.7196, 78.8955, 17.7218, 0.29 ) }
    dend_4 { pt3dadd( 52.8469, 79.2248, 17.6958, 0.44 ) }
    dend_4 { pt3dadd( 52.9945, 79.6082, 17.6997, 0.22 ) }
    dend_4 { pt3dadd( 53.1007, 79.8961, 17.7342, 0.66 ) }
    dend_4 { pt3dadd( 53.1763, 80.1157, 17.771, 0.66 ) }
    dend_4 { pt3dadd( 53.188, 80.1561, 17.7807, 0.66 ) }
    dend_4 { pt3dadd( 53.3396, 80.6605, 17.9404, 0.44 ) }
    dend_4 { pt3dadd( 53.3515, 80.6955, 17.9495, 0.44 ) }
    dend_4 { pt3dadd( 53.4226, 80.8703, 17.9824, 0.52 ) }
    dend_4 { pt3dadd( 53.4675, 80.9776, 17.9924, 0.52 ) }
    dend_4 { pt3dadd( 53.5532, 81.1893, 17.9938, 0.52 ) }
    dend_4 { pt3dadd( 53.7273, 81.6619, 17.9745, 0.29 ) }
    dend_4 { pt3dadd( 53.8681, 82.1203, 17.9489, 0.29 ) }
    dend_4 { pt3dadd( 53.875, 82.1513, 17.9488, 0.29 ) }
    dend_4 { pt3dadd( 53.9302, 82.4991, 17.9611, 0.44 ) }
    dend_4 { pt3dadd( 53.9397, 82.6199, 17.9708, 0.44 ) }
    dend_4 { pt3dadd( 53.9412, 82.993, 18.0382, 0.44 ) }
    dend_4 { pt3dadd( 53.9127, 83.3392, 18.1317, 0.59 ) }
    dend_4 { pt3dadd( 53.8965, 83.6392, 18.2475, 0.74 ) }
    dend_4 { pt3dadd( 53.8978, 83.678, 18.264, 0.74 ) }
    dend_4 { pt3dadd( 53.9431, 83.9612, 18.3912, 0.74 ) }
    dend_4 { pt3dadd( 54.0917, 84.3655, 18.6344, 0.52 ) }
    dend_4 { pt3dadd( 54.1067, 84.393, 18.6536, 0.52 ) }
    dend_4 { pt3dadd( 54.2986, 84.7053, 18.8698, 0.44 ) }
    dend_4 { pt3dadd( 54.4072, 84.8795, 18.9998, 0.29 ) }
    dend_4 { pt3dadd( 54.5642, 85.1647, 19.2102, 0.29 ) }
    dend_4 { pt3dadd( 54.8684, 85.7736, 19.7172, 0.29 ) }
    dend_4 { pt3dadd( 54.9684, 86.0018, 19.9052, 0.37 ) }
    dend_4 { pt3dadd( 55.0991, 86.3186, 20.1579, 0.44 ) }
    dend_4 { pt3dadd( 55.274, 86.7844, 20.5198, 0.96 ) }
    dend_4 { pt3dadd( 55.3869, 87.0732, 20.7389, 1.25 ) }
    dend_4 { pt3dadd( 55.7224, 87.784, 21.2681, 0.52 ) }
    dend_4 { pt3dadd( 55.8846, 88.0792, 21.46, 0.52 ) }
    dend_4 { pt3dadd( 56.049, 88.3183, 21.6136, 0.66 ) }
    dend_4 { pt3dadd( 56.0736, 88.3467, 21.6318, 0.66 ) }
    dend_4 { pt3dadd( 56.3299, 88.6106, 21.7718, 0.44 ) }
    dend_4 { pt3dadd( 56.7193, 88.9941, 21.9468, 0.29 ) }
    dend_4 { pt3dadd( 56.8363, 89.1317, 21.9941, 0.52 ) }
    dend_4 { pt3dadd( 57.0125, 89.3706, 22.0899, 0.52 ) }
    dend_4 { pt3dadd( 57.2203, 89.6805, 22.2205, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_4 { pt3dadd( 57.3796, 89.9198, 22.3123, 0.29 ) }
    dend_4 { pt3dadd( 57.5191, 90.1173, 22.403, 0.52 ) }
    dend_4 { pt3dadd( 57.8285, 90.5165, 22.581, 0.88 ) }
    dend_4 { pt3dadd( 57.9895, 90.7049, 22.667, 0.52 ) }
    dend_4 { pt3dadd( 58.3576, 91.0898, 22.8434, 0.44 ) }
    dend_4 { pt3dadd( 58.6546, 91.3732, 22.9657, 0.59 ) }
    dend_4 { pt3dadd( 59.2019, 91.8251, 23.1813, 0.29 ) }
    dend_4 { pt3dadd( 59.6084, 92.1208, 23.3376, 0.29 ) }
    dend_4 { pt3dadd( 61.7427, 96.3186, 25.5499, 0.29 ) }
    dend_4 { pt3dadd( 63.288, 101.107, 26.9599, 0.29 ) }
    // Section: dend_87, id: dend_87, parent: dend_67 (entry count 10/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( -85.735, -152.419, 10.2916, 0.29 ) }
    dend_87 { pt3dadd( -85.9577, -153.782, 10.4526, 0.29 ) }
    dend_87 { pt3dadd( -86.0335, -154.246, 10.5075, 0.74 ) }
    dend_87 { pt3dadd( -86.1754, -155.114, 10.6101, 0.29 ) }
    dend_87 { pt3dadd( -86.3088, -155.93, 10.7066, 0.29 ) }
    dend_87 { pt3dadd( -86.4902, -157.04, 10.8377, 0.37 ) }
    dend_87 { pt3dadd( -88.9407, -168.236, 10.7962, 0.37 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 17/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -85.735, -152.419, 10.2916, 0.37 ) }
    dend_68 { pt3dadd( -86.9471, -152.478, 11.3875, 0.37 ) }
    dend_68 { pt3dadd( -87.6058, -152.516, 11.9156, 0.37 ) }
    dend_68 { pt3dadd( -88.8225, -152.547, 12.8829, 0.44 ) }
    dend_68 { pt3dadd( -89.68, -152.572, 13.5343, 0.37 ) }
    dend_68 { pt3dadd( -91.3789, -152.671, 14.7832, 0.88 ) }
    dend_68 { pt3dadd( -91.9754, -152.728, 15.2595, 1.11 ) }
    dend_68 { pt3dadd( -92.7018, -152.821, 15.8404, 0.81 ) }
    dend_68 { pt3dadd( -94.418, -153.145, 17.3382, 0.29 ) }
    dend_68 { pt3dadd( -94.9706, -153.266, 17.8026, 0.29 ) }
    dend_68 { pt3dadd( -95.4633, -153.373, 18.2277, 0.74 ) }
    dend_68 { pt3dadd( -97.1165, -153.723, 19.5527, 0.44 ) }
    dend_68 { pt3dadd( -97.6295, -153.818, 19.9669, 0.44 ) }
    dend_68 { pt3dadd( -98.7597, -153.965, 20.8058, 0.29 ) }
    dend_68 { pt3dadd( -99.9793, -154.129, 21.7993, 0.29 ) }
    dend_68 { pt3dadd( -100.793, -154.196, 22.6442, 0.59 ) }
    dend_68 { pt3dadd( -101.351, -154.214, 23.2711, 0.66 ) }
    dend_68 { pt3dadd( -102.173, -154.212, 24.2096, 0.44 ) }
    dend_68 { pt3dadd( -102.936, -154.195, 25.1584, 0.37 ) }
    dend_68 { pt3dadd( -104.787, -154.145, 27.6417, 0.66 ) }
    dend_68 { pt3dadd( -106.569, -154.127, 30.1503, 0.81 ) }
    dend_68 { pt3dadd( -106.972, -154.116, 30.69, 0.88 ) }
    dend_68 { pt3dadd( -107.323, -154.101, 31.182, 0.88 ) }
    dend_68 { pt3dadd( -107.383, -154.098, 31.2659, 0.88 ) }
    dend_68 { pt3dadd( -108.433, -154.029, 32.6481, 0.52 ) }
    dend_68 { pt3dadd( -109.077, -153.935, 33.1814, 0.52 ) }
    dend_68 { pt3dadd( -111.241, -153.699, 34.5535, 1.69 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 44/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -2.4974, -89.3193, -17.5416, 0.74 ) }
    dend_52 { pt3dadd( -2.64574, -90.3742, -18.0047, 0.74 ) }
    dend_52 { pt3dadd( -2.68337, -91.2321, -18.3791, 0.74 ) }
    dend_52 { pt3dadd( -2.67144, -92.4096, -18.8674, 0.88 ) }
    dend_52 { pt3dadd( -2.63763, -93.1313, -19.1554, 0.88 ) }
    dend_52 { pt3dadd( -2.5822, -94.3144, -19.6276, 0.81 ) }
    dend_52 { pt3dadd( -2.50702, -95.9194, -20.2682, 0.88 ) }
    dend_52 { pt3dadd( -2.38112, -96.9016, -20.6432, 0.88 ) }
    dend_52 { pt3dadd( -2.24774, -97.5874, -20.9102, 1.33 ) }
    dend_52 { pt3dadd( -2.06564, -98.312, -21.1726, 1.18 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 54/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -2.4974, -89.3193, -17.5416, 0.59 ) }
    dend_49 { pt3dadd( -2.45616, -90.1337, -17.7323, 0.59 ) }
    dend_49 { pt3dadd( -2.42568, -91.195, -18.1435, 0.52 ) }
    dend_49 { pt3dadd( -2.36366, -92.2606, -18.6028, 0.44 ) }
    dend_49 { pt3dadd( -2.29733, -93.1809, -19.0155, 0.44 ) }
    dend_49 { pt3dadd( -2.16547, -94.4295, -19.5538, 0.59 ) }
    dend_49 { pt3dadd( -1.9716, -95.9219, -20.2055, 0.74 ) }
    dend_49 { pt3dadd( -1.79834, -97.0398, -20.7359, 0.59 ) }
    dend_49 { pt3dadd( -1.64824, -97.8482, -21.1374, 0.59 ) }
    dend_49 { pt3dadd( -1.63331, -97.9125, -21.1681, 0.59 ) }
    dend_49 { pt3dadd( -1.29276, -99.1647, -21.6844, 0.59 ) }
    dend_49 { pt3dadd( -0.861007, -100.508, -22.0762, 0.74 ) }
    dend_49 { pt3dadd( -0.580958, -101.274, -22.2383, 0.74 ) }
    dend_49 { pt3dadd( -0.0977546, -102.514, -22.4584, 0.66 ) }
    dend_49 { pt3dadd( 0.367387, -103.655, -22.6403, 0.59 ) }
    dend_49 { pt3dadd( 0.434983, -103.797, -22.6529, 0.59 ) }
    dend_49 { pt3dadd( 1.07478, -104.846, -22.6411, 0.59 ) }
    dend_49 { pt3dadd( 1.3566, -105.213, -22.5912, 0.81 ) }
    dend_49 { pt3dadd( 1.41022, -105.277, -22.5792, 0.81 ) }
    dend_49 { pt3dadd( 1.92525, -105.883, -22.4664, 0.81 ) }
    dend_49 { pt3dadd( 2.86298, -107.038, -22.3523, 0.66 ) }
    dend_49 { pt3dadd( 3.52031, -107.945, -22.3257, 0.66 ) }
    dend_49 { pt3dadd( 4.07031, -108.835, -22.304, 0.66 ) }
    dend_49 { pt3dadd( 4.61772, -109.835, -22.2369, 0.81 ) }
    dend_49 { pt3dadd( 5.0045, -110.631, -22.1684, 0.96 ) }
    dend_49 { pt3dadd( 5.50394, -111.818, -22.0601, 0.52 ) }
    dend_49 { pt3dadd( 5.84977, -112.75, -21.9857, 0.52 ) }
    dend_49 { pt3dadd( 6.27914, -113.973, -21.8336, 0.81 ) }
    dend_49 { pt3dadd( 6.64066, -114.952, -21.6796, 0.81 ) }
    dend_49 { pt3dadd( 6.9788, -115.849, -21.5187, 0.81 ) }
    dend_49 { pt3dadd( 7.00621, -115.928, -21.504, 0.81 ) }
    dend_49 { pt3dadd( 7.39269, -117.135, -21.3039, 0.81 ) }
    dend_49 { pt3dadd( 7.43467, -117.276, -21.2894, 0.81 ) }
    dend_49 { pt3dadd( 7.79281, -118.696, -21.2129, 0.81 ) }
    dend_49 { pt3dadd( 8.00564, -119.773, -21.1658, 0.81 ) }
    dend_49 { pt3dadd( 8.16543, -120.787, -21.1043, 0.66 ) }
    dend_49 { pt3dadd( 8.17648, -120.871, -21.0948, 0.66 ) }
    dend_49 { pt3dadd( 8.28766, -121.948, -20.9311, 0.37 ) }
    dend_49 { pt3dadd( 8.4303, -123.226, -20.717, 0.66 ) }
    dend_49 { pt3dadd( 8.49825, -123.814, -20.607, 0.96 ) }
    dend_49 { pt3dadd( 8.66698, -124.975, -20.3367, 0.74 ) }
    dend_49 { pt3dadd( 8.89388, -126.373, -19.9674, 0.96 ) }
    dend_49 { pt3dadd( 9.06011, -127.442, -19.6946, 0.81 ) }
    dend_49 { pt3dadd( 9.25021, -128.706, -19.3896, 0.74 ) }
    dend_49 { pt3dadd( 9.25768, -128.767, -19.3794, 0.74 ) }
    dend_49 { pt3dadd( 9.39583, -130.089, -19.2692, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_49 { pt3dadd( 9.40522, -130.164, -19.2711, 0.74 ) }
    dend_49 { pt3dadd( 9.63995, -131.445, -19.5698, 0.44 ) }
    dend_49 { pt3dadd( 9.7884, -132.103, -19.7957, 0.44 ) }
    dend_49 { pt3dadd( 10.1215, -133.435, -20.3645, 1.4 ) }
    dend_49 { pt3dadd( 10.3742, -134.282, -20.8116, 1.18 ) }
    dend_49 { pt3dadd( 10.7396, -135.314, -21.4913, 1.03 ) }
    dend_49 { pt3dadd( 11.4638, -136.99, -22.7141, 0.66 ) }
    dend_49 { pt3dadd( 11.794, -137.611, -23.1921, 0.66 ) }
    dend_49 { pt3dadd( 11.8775, -137.751, -23.2988, 0.66 ) }
    dend_49 { pt3dadd( 12.6973, -139.004, -24.2138, 0.81 ) }
    dend_49 { pt3dadd( 13.3094, -139.926, -24.9256, 0.96 ) }
    dend_49 { pt3dadd( 14.123, -141.118, -25.8798, 0.74 ) }
    dend_49 { pt3dadd( 14.7819, -142.014, -26.571, 0.74 ) }
    dend_49 { pt3dadd( 15.3016, -142.693, -27.0853, 0.96 ) }
    dend_49 { pt3dadd( 15.7004, -143.212, -27.4364, 1.25 ) }
    // Section: dend_47, id: dend_47, parent: dend_43 (entry count 15/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -23.2725, -406.377, -16.5202, 0.29 ) }
    dend_47 { pt3dadd( -22.3787, -406.257, -17.7724, 0.29 ) }
    dend_47 { pt3dadd( -21.8368, -406.184, -18.5314, 0.29 ) }
    dend_47 { pt3dadd( -20.7787, -406.042, -20.0135, 0.22 ) }
    dend_47 { pt3dadd( -20.2606, -405.972, -20.7393, 0.29 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -23.2725, -406.377, -16.5202, 0.59 ) }
    dend_44 { pt3dadd( -23.489, -407.374, -16.5512, 0.59 ) }
    dend_44 { pt3dadd( -23.5056, -407.439, -16.5517, 0.59 ) }
    dend_44 { pt3dadd( -23.7967, -408.466, -16.5284, 0.52 ) }
    dend_44 { pt3dadd( -24.0979, -409.505, -16.493, 0.66 ) }
    dend_44 { pt3dadd( -24.3553, -410.487, -16.4604, 0.66 ) }
    dend_44 { pt3dadd( -24.6065, -411.504, -16.4276, 0.81 ) }
    dend_44 { pt3dadd( -24.6596, -411.71, -16.4146, 0.81 ) }
    dend_44 { pt3dadd( -24.8594, -412.742, -16.3173, 0.81 ) }
    dend_44 { pt3dadd( -24.8749, -412.88, -16.3009, 0.81 ) }
    dend_44 { pt3dadd( -24.8146, -414.078, -16.1032, 0.81 ) }
    dend_44 { pt3dadd( -24.8078, -414.152, -16.0953, 0.81 ) }
    dend_44 { pt3dadd( -24.7561, -415.228, -16.1356, 0.59 ) }
    dend_44 { pt3dadd( -24.7571, -416.299, -16.2748, 0.37 ) }
    dend_44 { pt3dadd( -24.8017, -416.948, -16.4711, 0.74 ) }
    dend_44 { pt3dadd( -25.0755, -418.222, -17.1737, 0.81 ) }
    dend_44 { pt3dadd( -25.4585, -419.544, -18.1498, 0.52 ) }
    dend_44 { pt3dadd( -25.9455, -421.114, -19.5319, 0.52 ) }
    dend_44 { pt3dadd( -25.9594, -421.154, -19.571, 0.52 ) }
    dend_44 { pt3dadd( -26.4419, -422.278, -20.9392, 0.96 ) }
    dend_44 { pt3dadd( -27.0669, -423.593, -22.8734, 1.69 ) }
    dend_44 { pt3dadd( -27.3057, -424.077, -23.728, 0.37 ) }
    dend_44 { pt3dadd( -27.5857, -424.677, -24.9892, 0.37 ) }
    dend_44 { pt3dadd( -27.6869, -424.936, -25.5913, 0.66 ) }
    dend_44 { pt3dadd( -28.0701, -426.117, -28.4447, 1.25 ) }
    dend_44 { pt3dadd( -28.2644, -426.894, -30.4452, 0.44 ) }
    dend_44 { pt3dadd( -28.3378, -427.366, -31.6896, 0.81 ) }
    dend_44 { pt3dadd( -28.4429, -428.269, -34.066, 0.37 ) }
    dend_44 { pt3dadd( -28.4463, -428.622, -34.9838, 0.29 ) }
    dend_44 { pt3dadd( -28.3574, -429.117, -36.2216, 0.29 ) }
    dend_44 { pt3dadd( -28.2529, -429.368, -36.7417, 0.96 ) }
    dend_44 { pt3dadd( -28.1021, -429.638, -37.2596, 0.96 ) }
    dend_44 { pt3dadd( -27.7299, -430.264, -38.3123, 0.44 ) }
    dend_44 { pt3dadd( -27.5997, -430.476, -38.7127, 0.81 ) }
    dend_44 { pt3dadd( -27.4375, -430.734, -39.2977, 1.03 ) }
    dend_44 { pt3dadd( -27.4186, -430.763, -39.3637, 1.03 ) }
    dend_44 { pt3dadd( -26.8943, -431.593, -41.092, 0.37 ) }
    dend_44 { pt3dadd( -26.5359, -432.192, -42.2433, 1.4 ) }
    dend_44 { pt3dadd( -26.0274, -433.406, -44.3947, 0.37 ) }
    dend_44 { pt3dadd( -25.9095, -433.794, -45.0191, 0.66 ) }
    dend_44 { pt3dadd( -25.7462, -434.408, -45.9065, 0.29 ) }
    dend_44 { pt3dadd( -25.5796, -434.961, -46.6003, 0.96 ) }
    dend_44 { pt3dadd( -25.4874, -435.23, -46.8787, 0.96 ) }
    dend_44 { pt3dadd( -24.6958, -437.396, -48.7456, 0.37 ) }
    dend_44 { pt3dadd( -24.5759, -437.71, -48.9516, 0.59 ) }
    dend_44 { pt3dadd( -24.2435, -438.574, -49.5371, 0.29 ) }
    dend_44 { pt3dadd( -23.897, -439.436, -50.215, 0.96 ) }
    dend_44 { pt3dadd( -23.8765, -439.483, -50.2547, 0.96 ) }
    dend_44 { pt3dadd( -23.6266, -439.882, -50.5152, 1.33 ) }
    dend_44 { pt3dadd( -23.5787, -439.927, -50.5157, 1.33 ) }
    dend_44 { pt3dadd( -23.2471, -440.244, -50.4977, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_34 (entry count 71/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -62.5123, -91.7936, -0.0227316, 0.29 ) }
    dend_40 { pt3dadd( -62.1845, -92.9889, 0.651481, 0.29 ) }
    dend_40 { pt3dadd( -61.9509, -93.8405, 1.13188, 0.37 ) }
    dend_40 { pt3dadd( -61.7353, -94.6267, 1.57534, 0.37 ) }
    dend_40 { pt3dadd( -61.4265, -95.7528, 2.2105, 0.29 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 76/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -62.5123, -91.7936, -0.0227316, 0.37 ) }
    dend_35 { pt3dadd( -63.4707, -92.4038, 0.397457, 0.37 ) }
    dend_35 { pt3dadd( -64.1167, -92.7456, 0.778336, 0.37 ) }
    dend_35 { pt3dadd( -64.8489, -93.051, 1.24769, 0.81 ) }
    dend_35 { pt3dadd( -65.3269, -93.2077, 1.66441, 1.25 ) }
    dend_35 { pt3dadd( -65.6775, -93.3043, 2.01821, 1.25 ) }
    dend_35 { pt3dadd( -67.1655, -93.7192, 3.54373, 0.44 ) }
    dend_35 { pt3dadd( -67.2666, -93.741, 3.65488, 0.44 ) }
    dend_35 { pt3dadd( -67.6076, -93.8016, 4.03232, 0.74 ) }
    dend_35 { pt3dadd( -68.9661, -94.0535, 5.47411, 0.52 ) }
    dend_35 { pt3dadd( -69.6911, -94.238, 6.17955, 0.59 ) }
    dend_35 { pt3dadd( -70.2579, -94.4557, 6.58848, 0.44 ) }
    dend_35 { pt3dadd( -70.7484, -94.7235, 6.77746, 0.29 ) }
    dend_35 { pt3dadd( -71.2886, -95.0743, 6.90427, 0.29 ) }
    dend_35 { pt3dadd( -71.9847, -95.6217, 6.95899, 1.11 ) }
    dend_35 { pt3dadd( -72.4299, -96.0324, 6.92378, 1.33 ) }
    dend_35 { pt3dadd( -73.4866, -97.2199, 6.77105, 0.74 ) }
    dend_35 { pt3dadd( -74.0038, -97.9282, 6.69107, 0.74 ) }
    dend_35 { pt3dadd( -74.2757, -98.3875, 6.65109, 1.11 ) }
    dend_35 { pt3dadd( -74.5727, -98.9633, 6.63713, 0.88 ) }
    dend_35 { pt3dadd( -74.8991, -99.6742, 6.66452, 0.66 ) }
    dend_35 { pt3dadd( -75.2497, -100.518, 6.74079, 0.37 ) }
    dend_35 { pt3dadd( -75.4372, -101.088, 6.82599, 0.37 ) }
    dend_35 { pt3dadd( -75.6934, -101.976, 6.95645, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_35 { pt3dadd( -75.9345, -102.964, 7.0922, 0.37 ) }
    dend_35 { pt3dadd( -76.0924, -103.7, 7.18523, 0.29 ) }
    dend_35 { pt3dadd( -76.2083, -104.405, 7.28627, 0.59 ) }
    dend_35 { pt3dadd( -76.3009, -105.123, 7.42032, 0.81 ) }
    dend_35 { pt3dadd( -76.3045, -105.182, 7.4311, 0.81 ) }
    dend_35 { pt3dadd( -76.2965, -105.981, 7.59757, 0.74 ) }
    dend_35 { pt3dadd( -76.2625, -106.488, 7.70115, 1.11 ) }
    dend_35 { pt3dadd( -76.1611, -107.605, 7.94726, 0.59 ) }
    dend_35 { pt3dadd( -76.1174, -108.115, 8.06952, 1.03 ) }
    dend_35 { pt3dadd( -76.0548, -109.103, 8.34169, 0.52 ) }
    dend_35 { pt3dadd( -76.0214, -109.926, 8.58164, 0.74 ) }
    dend_35 { pt3dadd( -76.0142, -110.505, 8.75246, 0.66 ) }
    dend_35 { pt3dadd( -76.0226, -111.556, 9.05751, 0.44 ) }
    dend_35 { pt3dadd( -76.0787, -112.484, 9.3281, 0.44 ) }
    dend_35 { pt3dadd( -76.2196, -113.444, 9.62362, 0.44 ) }
    dend_35 { pt3dadd( -76.3199, -113.826, 9.7487, 0.81 ) }
    dend_35 { pt3dadd( -76.5638, -114.508, 9.96577, 1.18 ) }
    dend_35 { pt3dadd( -76.6815, -114.763, 10.0524, 1.33 ) }
    dend_35 { pt3dadd( -77.2338, -115.784, 10.4348, 0.44 ) }
    dend_35 { pt3dadd( -77.6961, -116.581, 10.7343, 0.59 ) }
    dend_35 { pt3dadd( -78.0531, -117.159, 11.0308, 0.81 ) }
    dend_35 { pt3dadd( -78.2368, -117.425, 11.2034, 0.81 ) }
    dend_35 { pt3dadd( -78.7056, -117.994, 11.6991, 0.37 ) }
    dend_35 { pt3dadd( -79.2361, -118.533, 12.2568, 0.74 ) }
    dend_35 { pt3dadd( -79.4559, -118.718, 12.4855, 0.96 ) }
    dend_35 { pt3dadd( -80.6807, -119.654, 13.8066, 0.59 ) }
    dend_35 { pt3dadd( -81.2161, -120.02, 14.3827, 0.81 ) }
    dend_35 { pt3dadd( -82.2893, -120.673, 15.5299, 0.52 ) }
    dend_35 { pt3dadd( -82.9479, -121.008, 16.2116, 0.52 ) }
    dend_35 { pt3dadd( -83.5381, -121.257, 16.771, 0.74 ) }
    dend_35 { pt3dadd( -87.9113, -128.432, 21.9054, 0.74 ) }
    dend_35 { pt3dadd( -92.7631, -135.916, 26.1074, 0.74 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 32/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -122.946, -103.19, -85.4271, 0.52 ) }
    dend_33 { pt3dadd( -122.723, -105.108, -86.2441, 0.52 ) }
    dend_33 { pt3dadd( -122.43, -107.331, -87.1499, 0.88 ) }
    dend_33 { pt3dadd( -122.246, -108.374, -87.5406, 0.88 ) }
    dend_33 { pt3dadd( -121.863, -110.117, -88.1833, 0.37 ) }
    dend_33 { pt3dadd( -121.679, -110.876, -88.4449, 0.29 ) }
    dend_33 { pt3dadd( -121.519, -111.578, -88.6673, 0.88 ) }
    dend_33 { pt3dadd( -121.484, -111.722, -88.7069, 0.88 ) }
    dend_33 { pt3dadd( -121.23, -112.857, -88.8925, 0.88 ) }
    dend_33 { pt3dadd( -120.947, -114.356, -89.0613, 0.29 ) }
    dend_33 { pt3dadd( -120.789, -115.389, -89.091, 0.29 ) }
    dend_33 { pt3dadd( -120.693, -116.339, -89.0912, 0.22 ) }
    dend_33 { pt3dadd( -120.644, -117.422, -89.061, 0.22 ) }
    dend_33 { pt3dadd( -120.656, -117.943, -89.0328, 0.81 ) }
    dend_33 { pt3dadd( -120.748, -118.882, -88.9499, 1.25 ) }
    dend_33 { pt3dadd( -120.944, -120.416, -88.7558, 0.37 ) }
    dend_33 { pt3dadd( -121.151, -121.849, -88.5736, 0.22 ) }
    dend_33 { pt3dadd( -121.286, -122.723, -88.4621, 0.66 ) }
    dend_33 { pt3dadd( -121.429, -123.547, -88.3573, 0.81 ) }
    dend_33 { pt3dadd( -121.756, -125.196, -88.1479, 0.22 ) }
    dend_33 { pt3dadd( -121.943, -125.998, -88.0462, 0.88 ) }
    dend_33 { pt3dadd( -122.065, -126.44, -87.991, 1.03 ) }
    dend_33 { pt3dadd( -122.236, -127.108, -87.9122, 1.03 ) }
    dend_33 { pt3dadd( -122.387, -127.813, -87.8295, 0.74 ) }
    dend_33 { pt3dadd( -122.402, -127.929, -87.8161, 0.74 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 57/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -122.946, -103.19, -85.4271, 0.22 ) }
    dend_32 { pt3dadd( -124.843, -103.399, -87.4957, 0.22 ) }
    dend_32 { pt3dadd( -125.608, -103.52, -88.2474, 0.22 ) }
    dend_32 { pt3dadd( -126.439, -103.666, -88.965, 0.81 ) }
    dend_32 { pt3dadd( -126.89, -103.752, -89.3018, 1.11 ) }
    dend_32 { pt3dadd( -127.45, -103.868, -89.657, 1.03 ) }
    dend_32 { pt3dadd( -129.029, -104.194, -90.5428, 0.22 ) }
    dend_32 { pt3dadd( -129.325, -104.267, -90.6518, 0.66 ) }
    dend_32 { pt3dadd( -129.99, -104.453, -90.8828, 0.96 ) }
    dend_32 { pt3dadd( -130.749, -104.623, -91.1038, 0.29 ) }
    dend_32 { pt3dadd( -131.609, -104.753, -91.3595, 0.29 ) }
    dend_32 { pt3dadd( -131.933, -104.775, -91.4479, 0.96 ) }
    dend_32 { pt3dadd( -132.578, -104.772, -91.6324, 1.18 ) }
    dend_32 { pt3dadd( -132.639, -104.768, -91.6563, 1.18 ) }
    dend_32 { pt3dadd( -133.422, -104.681, -92.0203, 0.88 ) }
    dend_32 { pt3dadd( -133.539, -104.667, -92.0773, 0.88 ) }
    dend_32 { pt3dadd( -134.031, -104.624, -92.3049, 0.66 ) }
    dend_32 { pt3dadd( -135.231, -104.639, -92.8771, 0.29 ) }
    dend_32 { pt3dadd( -135.46, -104.652, -92.9812, 0.29 ) }
    dend_32 { pt3dadd( -136.412, -104.749, -93.4056, 0.29 ) }
    dend_32 { pt3dadd( -136.909, -104.802, -93.7002, 0.59 ) }
    dend_32 { pt3dadd( -137.304, -104.828, -93.9689, 0.59 ) }
    dend_32 { pt3dadd( -138.472, -104.875, -94.8629, 0.29 ) }
    dend_32 { pt3dadd( -138.79, -104.874, -95.1147, 1.03 ) }
    dend_32 { pt3dadd( -139.25, -104.846, -95.5679, 1.33 ) }
    dend_32 { pt3dadd( -140.599, -104.632, -97.2707, 0.29 ) }
    dend_32 { pt3dadd( -140.837, -104.568, -97.5984, 0.29 ) }
    dend_32 { pt3dadd( -140.881, -104.553, -97.6634, 0.29 ) }
    dend_32 { pt3dadd( -141.26, -104.447, -98.2738, 0.59 ) }
    dend_32 { pt3dadd( -142.175, -104.303, -99.7621, 0.81 ) }
    dend_32 { pt3dadd( -142.816, -104.329, -100.846, 0.52 ) }
    dend_32 { pt3dadd( -143.153, -104.426, -101.409, 1.11 ) }
    dend_32 { pt3dadd( -143.773, -104.717, -102.494, 1.4 ) }
    dend_32 { pt3dadd( -144.689, -105.207, -104.135, 0.29 ) }
    dend_32 { pt3dadd( -144.901, -105.346, -104.532, 0.88 ) }
    dend_32 { pt3dadd( -145.796, -106.092, -106.134, 0.52 ) }
    dend_32 { pt3dadd( -146.498, -106.818, -107.406, 0.81 ) }
    dend_32 { pt3dadd( -146.752, -107.137, -107.897, 0.88 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 95/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -25.9667, 318.344, 17.2954, 0.37 ) }
    dend_23 { pt3dadd( -25.4415, 318.329, 16.9407, 0.37 ) }
    dend_23 { pt3dadd( -24.4302, 318.226, 16.2571, 0.66 ) }
    dend_23 { pt3dadd( -24.363, 318.214, 16.2137, 0.66 ) }
    dend_23 { pt3dadd( -23.8734, 318.128, 15.9004, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_23 { pt3dadd( -23.7945, 318.114, 15.8506, 0.29 ) }
    dend_23 { pt3dadd( -22.4885, 317.943, 14.945, 0.29 ) }
    dend_23 { pt3dadd( -22.4234, 317.937, 14.8989, 0.29 ) }
    dend_23 { pt3dadd( -22.1129, 317.945, 14.689, 0.66 ) }
    dend_23 { pt3dadd( -21.7499, 317.97, 14.4271, 0.52 ) }
    dend_23 { pt3dadd( -21.685, 317.979, 14.3758, 0.52 ) }
    dend_23 { pt3dadd( -20.492, 318.277, 13.437, 0.22 ) }
    dend_23 { pt3dadd( -19.9053, 318.575, 13.0004, 0.22 ) }
    dend_23 { pt3dadd( -19.5898, 318.751, 12.7561, 0.29 ) }
    dend_23 { pt3dadd( -9.68806, 321.629, 7.79129, 0.29 ) }
    dend_23 { pt3dadd( -0.262867, 326.621, 3.54668, 0.29 ) }
    dend_23 { pt3dadd( 7.75821, 332.405, -2.31969, 0.29 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 12/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -25.9667, 318.344, 17.2954, 0.29 ) }
    dend_22 { pt3dadd( -25.6966, 320.01, 17.2328, 0.29 ) }
    dend_22 { pt3dadd( -25.6371, 320.572, 17.2031, 0.29 ) }
    dend_22 { pt3dadd( -25.6349, 320.647, 17.2032, 0.29 ) }
    dend_22 { pt3dadd( -25.6519, 321.508, 17.2334, 0.29 ) }
    dend_22 { pt3dadd( -25.6556, 321.572, 17.2369, 0.29 ) }
    dend_22 { pt3dadd( -25.7727, 322.732, 17.367, 0.29 ) }
    dend_22 { pt3dadd( -25.7885, 322.792, 17.3779, 0.29 ) }
    dend_22 { pt3dadd( -25.9494, 323.512, 17.5593, 0.52 ) }
    dend_22 { pt3dadd( -25.9726, 323.657, 17.5981, 0.52 ) }
    dend_22 { pt3dadd( -25.9982, 323.959, 17.6715, 0.52 ) }
    dend_22 { pt3dadd( -26.0219, 324.693, 17.8225, 0.22 ) }
    dend_22 { pt3dadd( -26.0111, 325.411, 17.9252, 0.22 ) }
    dend_22 { pt3dadd( -25.983, 326.127, 18.0053, 0.44 ) }
    dend_22 { pt3dadd( -25.9392, 326.674, 18.0353, 0.44 ) }
    dend_22 { pt3dadd( -25.866, 327.451, 18.0612, 0.22 ) }
    dend_22 { pt3dadd( -25.8573, 327.528, 18.0604, 0.22 ) }
    dend_22 { pt3dadd( -25.7132, 328.607, 17.9436, 0.22 ) }
    dend_22 { pt3dadd( -26.3471, 339.151, 17.5989, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 31/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -13.12, 191.607, -61.6033, 0.66 ) }
    dend_19 { pt3dadd( -13.199, 192.481, -61.6231, 0.66 ) }
    dend_19 { pt3dadd( -13.2347, 193.316, -61.6401, 0.29 ) }
    dend_19 { pt3dadd( -13.2356, 193.404, -61.6418, 0.29 ) }
    dend_19 { pt3dadd( -13.2253, 194.274, -61.6576, 0.29 ) }
    dend_19 { pt3dadd( -13.2383, 195.774, -61.6876, 0.29 ) }
    dend_19 { pt3dadd( -13.268, 196.421, -61.7024, 0.52 ) }
    dend_19 { pt3dadd( -13.2835, 196.634, -61.7074, 0.52 ) }
    dend_19 { pt3dadd( -13.3088, 196.943, -61.7162, 0.52 ) }
    dend_19 { pt3dadd( -13.3666, 197.51, -61.7332, 0.37 ) }
    dend_19 { pt3dadd( -13.4823, 198.289, -61.7587, 0.37 ) }
    dend_19 { pt3dadd( -13.8236, 199.439, -61.8065, 0.88 ) }
    dend_19 { pt3dadd( -13.8804, 199.593, -61.8112, 0.88 ) }
    dend_19 { pt3dadd( -14.1207, 200.215, -61.8238, 1.03 ) }
    dend_19 { pt3dadd( -14.3444, 200.814, -61.83, 1.18 ) }
    dend_19 { pt3dadd( -14.5652, 201.473, -61.8303, 0.66 ) }
    dend_19 { pt3dadd( -14.7997, 202.299, -61.8223, 0.52 ) }
    dend_19 { pt3dadd( -14.8936, 202.701, -61.8153, 0.59 ) }
    dend_19 { pt3dadd( -14.9575, 203.146, -61.8097, 0.44 ) }
    dend_19 { pt3dadd( -15.0131, 204.363, -61.7998, 0.29 ) }
    dend_19 { pt3dadd( -14.9985, 204.834, -61.8001, 0.37 ) }
    dend_19 { pt3dadd( -14.9916, 204.925, -61.8056, 0.37 ) }
    dend_19 { pt3dadd( -14.9585, 205.457, -61.8619, 0.22 ) }
    dend_19 { pt3dadd( -14.9589, 206.506, -61.9616, 0.59 ) }
    dend_19 { pt3dadd( -14.986, 207.051, -62.0056, 0.88 ) }
    dend_19 { pt3dadd( -15.0726, 207.965, -62.0622, 0.52 ) }
    dend_19 { pt3dadd( -15.2232, 209.112, -62.1137, 0.29 ) }
    dend_19 { pt3dadd( -15.3632, 209.954, -62.1358, 0.29 ) }
    dend_19 { pt3dadd( -15.6048, 211.074, -62.1432, 0.59 ) }
    dend_19 { pt3dadd( -15.6285, 211.162, -62.1367, 0.59 ) }
    dend_19 { pt3dadd( -15.8007, 211.764, -62.0474, 0.29 ) }
    dend_19 { pt3dadd( -15.8367, 211.891, -62.0179, 0.29 ) }
    dend_19 { pt3dadd( -16.0042, 212.847, -61.7465, 0.52 ) }
    dend_19 { pt3dadd( -16.0524, 213.292, -61.6518, 0.66 ) }
    dend_19 { pt3dadd( -16.1535, 214.366, -61.5014, 0.52 ) }
    dend_19 { pt3dadd( -16.1619, 214.457, -61.4907, 0.52 ) }
    dend_19 { pt3dadd( -16.2272, 215.101, -61.4331, 0.29 ) }
    dend_19 { pt3dadd( -16.4, 216.654, -61.4286, 0.29 ) }
    dend_19 { pt3dadd( -16.5403, 217.778, -61.5292, 0.66 ) }
    dend_19 { pt3dadd( -16.6014, 218.183, -61.5714, 0.88 ) }
    dend_19 { pt3dadd( -16.6164, 218.27, -61.5821, 0.88 ) }
    dend_19 { pt3dadd( -16.8014, 219.077, -61.6577, 0.52 ) }
    dend_19 { pt3dadd( -17.1172, 220.117, -61.7245, 0.52 ) }
    dend_19 { pt3dadd( -17.4116, 220.988, -61.753, 0.29 ) }
    dend_19 { pt3dadd( -17.7606, 222.137, -61.7587, 0.29 ) }
    dend_19 { pt3dadd( -18.0037, 223.032, -61.7367, 1.03 ) }
    dend_19 { pt3dadd( -18.2367, 223.992, -61.6929, 0.74 ) }
    dend_19 { pt3dadd( -18.4514, 225.084, -61.5722, 0.29 ) }
    dend_19 { pt3dadd( -18.6876, 226.622, -61.327, 0.44 ) }
    dend_19 { pt3dadd( -18.7737, 227.422, -61.1838, 0.37 ) }
    dend_19 { pt3dadd( -18.8386, 228.37, -61.0128, 0.37 ) }
    dend_19 { pt3dadd( -18.8618, 229.389, -60.7889, 0.96 ) }
    dend_19 { pt3dadd( -18.8046, 230.764, -60.4394, 0.37 ) }
    dend_19 { pt3dadd( -18.7233, 231.679, -60.1751, 0.37 ) }
    dend_19 { pt3dadd( -18.624, 232.483, -59.918, 0.59 ) }
    dend_19 { pt3dadd( -18.5542, 232.92, -59.7845, 0.88 ) }
    dend_19 { pt3dadd( -18.5071, 233.184, -59.7122, 0.88 ) }
    dend_19 { pt3dadd( -18.3431, 234.02, -59.515, 0.59 ) }
    dend_19 { pt3dadd( -18.3288, 234.092, -59.5026, 0.52 ) }
    dend_19 { pt3dadd( -17.9418, 235.907, -59.221, 0.15 ) }
    dend_19 { pt3dadd( -17.7653, 236.738, -59.1231, 0.59 ) }
    dend_19 { pt3dadd( -17.7466, 236.824, -59.114, 0.59 ) }
    dend_19 { pt3dadd( -17.5667, 237.471, -59.0595, 0.59 ) }
    dend_19 { pt3dadd( -17.5389, 237.554, -59.0547, 0.59 ) }
    dend_19 { pt3dadd( -17.2884, 238.231, -59.0319, 0.88 ) }
    dend_19 { pt3dadd( -16.9272, 239.189, -59.0332, 1.18 ) }
    dend_19 { pt3dadd( -16.7731, 239.622, -59.0344, 1.18 ) }
    dend_19 { pt3dadd( -16.2635, 241.278, -59.0199, 0.15 ) }
    dend_19 { pt3dadd( -15.9616, 242.517, -59.0003, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_19 { pt3dadd( -15.8493, 243.203, -58.9873, 0.52 ) }
    dend_19 { pt3dadd( -15.7764, 244.019, -58.9695, 0.66 ) }
    dend_19 { pt3dadd( -15.774, 244.496, -58.9593, 0.74 ) }
    dend_19 { pt3dadd( -15.8467, 245.459, -58.9404, 0.29 ) }
    dend_19 { pt3dadd( -15.9658, 246.372, -58.9243, 0.37 ) }
    dend_19 { pt3dadd( -16.0755, 247.552, -58.8415, 0.29 ) }
    dend_19 { pt3dadd( -16.0791, 247.652, -58.8302, 0.29 ) }
    dend_19 { pt3dadd( -15.9616, 248.987, -58.6258, 0.52 ) }
    dend_19 { pt3dadd( -15.9434, 249.072, -58.6103, 0.52 ) }
    dend_19 { pt3dadd( -15.5534, 250.205, -58.3749, 0.81 ) }
    dend_19 { pt3dadd( -15.0367, 251.36, -58.102, 0.37 ) }
    dend_19 { pt3dadd( -14.9978, 251.437, -58.0812, 0.37 ) }
    dend_19 { pt3dadd( -14.4676, 252.61, -57.7845, 0.29 ) }
    dend_19 { pt3dadd( -14.2533, 253.158, -57.6568, 0.37 ) }
    dend_19 { pt3dadd( -14.2312, 253.229, -57.6435, 0.37 ) }
    dend_19 { pt3dadd( -14.0366, 254.016, -57.5444, 0.37 ) }
    dend_19 { pt3dadd( -13.752, 255.276, -57.3396, 0.29 ) }
    dend_19 { pt3dadd( -13.4093, 256.665, -57.0274, 0.37 ) }
    dend_19 { pt3dadd( -13.2809, 257.18, -56.8956, 0.88 ) }
    dend_19 { pt3dadd( -13.1112, 257.75, -56.7437, 0.96 ) }
    dend_19 { pt3dadd( -12.5909, 259.078, -56.3221, 0.52 ) }
    dend_19 { pt3dadd( -11.8004, 260.676, -55.7502, 0.66 ) }
    dend_19 { pt3dadd( -11.4524, 261.26, -55.508, 0.66 ) }
    dend_19 { pt3dadd( -10.9434, 261.982, -55.1667, 0.29 ) }
    dend_19 { pt3dadd( -10.3353, 262.784, -54.7608, 0.44 ) }
    dend_19 { pt3dadd( -9.61538, 263.702, -54.2717, 1.11 ) }
    dend_19 { pt3dadd( -9.04252, 264.436, -53.8745, 1.11 ) }
    dend_19 { pt3dadd( -8.16922, 265.59, -53.3013, 1.11 ) }
    dend_19 { pt3dadd( -7.7965, 266.085, -53.0223, 1.55 ) }
    dend_19 { pt3dadd( -7.16191, 266.881, -52.5055, 1.55 ) }
    dend_19 { pt3dadd( -7.07767, 266.978, -52.4309, 1.55 ) }
    dend_19 { pt3dadd( -6.55916, 267.518, -51.9146, 1.55 ) }
    dend_19 { pt3dadd( -6.5161, 267.558, -51.8699, 1.55 ) }
    dend_19 { pt3dadd( -5.8228, 268.136, -51.1381, 2.06 ) }
    dend_19 { pt3dadd( -5.77181, 268.177, -51.0809, 2.06 ) }
    dend_19 { pt3dadd( -4.36021, 269.225, -49.4726, 0.52 ) }
    dend_19 { pt3dadd( -3.50669, 269.82, -48.5079, 0.74 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 37/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -13.12, 191.607, -61.6033, 0.74 ) }
    dend_18 { pt3dadd( -12.6489, 190.384, -61.2971, 0.74 ) }
    dend_18 { pt3dadd( -12.6263, 190.316, -61.2824, 0.74 ) }
    dend_18 { pt3dadd( -12.3676, 189.465, -61.1165, 0.37 ) }
    dend_18 { pt3dadd( -12.0318, 188.225, -60.8965, 0.22 ) }
    dend_18 { pt3dadd( -11.896, 187.625, -60.8026, 0.37 ) }
    dend_18 { pt3dadd( -11.7438, 186.883, -60.7014, 0.15 ) }
    dend_18 { pt3dadd( -11.5576, 185.733, -60.5871, 0.15 ) }
    dend_18 { pt3dadd( -11.4782, 185.221, -60.5371, 0.44 ) }
    dend_18 { pt3dadd( -11.4037, 184.661, -60.4846, 0.44 ) }
    dend_18 { pt3dadd( -11.2996, 183.571, -60.3998, 0.22 ) }
    dend_18 { pt3dadd( -11.1974, 182.305, -60.3448, 0.37 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 49/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 115.104, 101.443, -69.5539, 0.22 ) }
    dend_13 { pt3dadd( 115.771, 101.858, -70.9513, 0.22 ) }
    dend_13 { pt3dadd( 116.007, 102.005, -71.4451, 0.74 ) }
    dend_13 { pt3dadd( 116.132, 102.083, -71.7073, 0.74 ) }
    dend_13 { pt3dadd( 117.115, 102.695, -73.7675, 0.29 ) }
    dend_13 { pt3dadd( 117.357, 102.846, -74.2734, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 55/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 115.104, 101.443, -69.5539, 0.22 ) }
    dend_12 { pt3dadd( 116.094, 101.01, -69.6064, 0.22 ) }
    dend_12 { pt3dadd( 116.816, 100.737, -69.7054, 0.66 ) }
    dend_12 { pt3dadd( 117.294, 100.57, -69.783, 0.66 ) }
    dend_12 { pt3dadd( 117.855, 100.407, -69.8784, 0.52 ) }
    dend_12 { pt3dadd( 118.966, 100.2, -70.1181, 0.22 ) }
    dend_12 { pt3dadd( 119.498, 100.168, -70.2477, 0.22 ) }
    dend_12 { pt3dadd( 120.249, 100.297, -70.4531, 0.59 ) }
    dend_12 { pt3dadd( 120.619, 100.416, -70.5507, 0.74 ) }
    dend_12 { pt3dadd( 121.134, 100.623, -70.661, 0.74 ) }
    dend_12 { pt3dadd( 122.148, 101.113, -70.8175, 0.29 ) }
    dend_12 { pt3dadd( 122.984, 101.59, -70.8904, 0.29 ) }
    dend_12 { pt3dadd( 124.001, 102.208, -70.9535, 0.59 ) }
    dend_12 { pt3dadd( 124.464, 102.505, -70.9608, 0.52 ) }
    dend_12 { pt3dadd( 125.372, 103.093, -70.9571, 0.22 ) }
    dend_12 { pt3dadd( 125.872, 103.395, -70.9284, 0.29 ) }
    dend_12 { pt3dadd( 126.556, 103.742, -70.8139, 0.29 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 72/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 63.288, 101.107, 26.9599, 0.29 ) }
    dend_6 { pt3dadd( 66.7564, 108.823, 30.4087, 0.29 ) }
    dend_6 { pt3dadd( 69.4445, 117.352, 32.4367, 0.29 ) }
    dend_6 { pt3dadd( 71.9254, 125.86, 34.7791, 0.29 ) }
    dend_6 { pt3dadd( 73.3361, 134.332, 37.963, 0.29 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 77/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 63.288, 101.107, 26.9599, 0.44 ) }
    dend_5 { pt3dadd( 67.5834, 108.463, 30.8202, 0.29 ) }
    dend_5 { pt3dadd( 72.0324, 115.895, 34.3505, 0.29 ) }
    dend_5 { pt3dadd( 76.8446, 123.72, 36.1622, 0.29 ) }
    dend_5 { pt3dadd( 79.8746, 132.526, 37.4656, 0.29 ) }
    dend_5 { pt3dadd( 82.8988, 141.396, 36.77, 0.29 ) }
    dend_5 { pt3dadd( 85.7041, 150.372, 36.6799, 0.29 ) }
    dend_5 { pt3dadd( 87.7351, 159.531, 37.4937, 0.29 ) }
    // Section: dend_91, id: dend_91, parent: dend_87 (entry count 85/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( -88.9407, -168.236, 10.7962, 0.29 ) }
    dend_91 { pt3dadd( -89.6185, -182.494, 11.9168, 0.29 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 87/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( -88.9407, -168.236, 10.7962, 0.44 ) }
    dend_88 { pt3dadd( -96.5205, -177.173, 9.5658, 0.29 ) }
    dend_88 { pt3dadd( -103.274, -186.052, 5.74052, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_68 (entry count 90/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -111.241, -153.699, 34.5535, 0.66 ) }
    dend_72 { pt3dadd( -111.415, -152.764, 35.1685, 0.66 ) }
    dend_72 { pt3dadd( -111.468, -152.191, 35.4884, 0.29 ) }
    dend_72 { pt3dadd( -111.505, -151.54, 35.7894, 0.29 ) }
    dend_72 { pt3dadd( -111.508, -151.487, 35.8086, 0.29 ) }
    dend_72 { pt3dadd( -111.591, -150.468, 36.1127, 0.52 ) }
    dend_72 { pt3dadd( -111.609, -150.268, 36.1637, 0.74 ) }
    dend_72 { pt3dadd( -111.662, -149.485, 36.2774, 0.37 ) }
    dend_72 { pt3dadd( -111.707, -148.81, 36.3494, 0.37 ) }
    dend_72 { pt3dadd( -111.769, -148.145, 36.3947, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_72 { pt3dadd( -111.8, -147.737, 36.4044, 0.59 ) }
    dend_72 { pt3dadd( -111.822, -147.287, 36.388, 0.59 ) }
    dend_72 { pt3dadd( -111.805, -146.767, 36.3689, 0.59 ) }
    dend_72 { pt3dadd( -111.711, -146.077, 36.3451, 0.52 ) }
    dend_72 { pt3dadd( -111.585, -145.571, 36.331, 0.96 ) }
    dend_72 { pt3dadd( -111.38, -144.969, 36.3223, 0.37 ) }
    dend_72 { pt3dadd( -111.228, -144.597, 36.3134, 0.29 ) }
    dend_72 { pt3dadd( -110.898, -143.9, 36.2909, 0.29 ) }
    dend_72 { pt3dadd( -110.622, -143.334, 36.2716, 0.29 ) }
    dend_72 { pt3dadd( -110.444, -142.965, 36.2592, 0.52 ) }
    dend_72 { pt3dadd( -110.425, -142.913, 36.2572, 0.52 ) }
    dend_72 { pt3dadd( -110.335, -142.604, 36.2446, 0.52 ) }
    dend_72 { pt3dadd( -110.212, -141.995, 36.2243, 0.37 ) }
    dend_72 { pt3dadd( -110.103, -141.294, 36.2027, 0.37 ) }
    dend_72 { pt3dadd( -110.097, -141.237, 36.2013, 0.37 ) }
    dend_72 { pt3dadd( -110.006, -140.108, 36.1797, 0.37 ) }
    dend_72 { pt3dadd( -109.959, -139.092, 36.1672, 0.37 ) }
    dend_72 { pt3dadd( -109.937, -137.828, 36.1588, 0.37 ) }
    dend_72 { pt3dadd( -109.937, -137.724, 36.1586, 0.37 ) }
    dend_72 { pt3dadd( -109.907, -136.743, 36.1462, 0.37 ) }
    dend_72 { pt3dadd( -109.904, -136.694, 36.1453, 0.37 ) }
    dend_72 { pt3dadd( -109.85, -136.067, 36.1307, 0.88 ) }
    dend_72 { pt3dadd( -109.834, -135.941, 36.1258, 0.88 ) }
    dend_72 { pt3dadd( -109.683, -135.165, 36.0807, 0.29 ) }
    dend_72 { pt3dadd( -109.44, -134.194, 36.0174, 0.29 ) }
    dend_72 { pt3dadd( -109.249, -133.577, 35.972, 0.44 ) }
    dend_72 { pt3dadd( -109.1, -133.12, 35.9392, 0.44 ) }
    dend_72 { pt3dadd( -108.92, -132.582, 35.887, 0.29 ) }
    dend_72 { pt3dadd( -108.899, -132.512, 35.8794, 0.29 ) }
    dend_72 { pt3dadd( -108.624, -131.744, 35.78, 0.66 ) }
    dend_72 { pt3dadd( -108.545, -131.557, 35.7631, 0.66 ) }
    dend_72 { pt3dadd( -108.396, -131.231, 35.7408, 0.59 ) }
    dend_72 { pt3dadd( -108.018, -130.411, 35.709, 0.37 ) }
    dend_72 { pt3dadd( -107.994, -130.36, 35.7108, 0.37 ) }
    dend_72 { pt3dadd( -107.464, -129.194, 35.8259, 0.37 ) }
    dend_72 { pt3dadd( -107.175, -128.518, 35.9473, 0.37 ) }
    dend_72 { pt3dadd( -106.974, -128.06, 36.0505, 0.37 ) }
    dend_72 { pt3dadd( -106.892, -127.884, 36.1047, 0.88 ) }
    dend_72 { pt3dadd( -106.639, -127.343, 36.355, 0.74 ) }
    dend_72 { pt3dadd( -106.622, -127.295, 36.38, 0.74 ) }
    dend_72 { pt3dadd( -106.624, -126.928, 36.6518, 0.52 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 41/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -111.241, -153.699, 34.5535, 0.52 ) }
    dend_69 { pt3dadd( -111.805, -154.219, 34.5098, 0.52 ) }
    dend_69 { pt3dadd( -112.347, -154.667, 34.4521, 0.29 ) }
    dend_69 { pt3dadd( -112.874, -155.077, 34.3888, 0.29 ) }
    dend_69 { pt3dadd( -113.7, -155.684, 34.2839, 0.44 ) }
    dend_69 { pt3dadd( -114.397, -156.192, 34.1964, 0.37 ) }
    dend_69 { pt3dadd( -114.703, -156.414, 34.1584, 0.66 ) }
    dend_69 { pt3dadd( -114.98, -156.591, 34.1181, 0.88 ) }
    dend_69 { pt3dadd( -115.33, -156.795, 34.0323, 0.88 ) }
    dend_69 { pt3dadd( -115.836, -157.08, 33.863, 0.44 ) }
    dend_69 { pt3dadd( -116.441, -157.438, 33.6162, 0.44 ) }
    dend_69 { pt3dadd( -116.483, -157.464, 33.5967, 0.44 ) }
    dend_69 { pt3dadd( -116.994, -157.772, 33.3422, 0.44 ) }
    dend_69 { pt3dadd( -117.826, -158.256, 32.9086, 0.29 ) }
    dend_69 { pt3dadd( -118.347, -158.539, 32.6304, 0.29 ) }
    dend_69 { pt3dadd( -119.018, -158.838, 32.3149, 0.29 ) }
    dend_69 { pt3dadd( -119.071, -158.857, 32.2938, 0.74 ) }
    dend_69 { pt3dadd( -119.119, -158.871, 32.2791, 0.74 ) }
    dend_69 { pt3dadd( -119.616, -159.038, 32.1357, 0.74 ) }
    dend_69 { pt3dadd( -120.057, -159.215, 32.0321, 0.74 ) }
    dend_69 { pt3dadd( -120.951, -159.648, 31.7996, 0.29 ) }
    dend_69 { pt3dadd( -121.413, -159.934, 31.6472, 0.29 ) }
    dend_69 { pt3dadd( -122.031, -160.385, 31.4063, 0.29 ) }
    dend_69 { pt3dadd( -122.801, -161.036, 31.0597, 0.29 ) }
    dend_69 { pt3dadd( -123.162, -161.363, 30.9056, 0.59 ) }
    dend_69 { pt3dadd( -123.336, -161.52, 30.8328, 0.59 ) }
    dend_69 { pt3dadd( -123.859, -161.958, 30.6144, 0.37 ) }
    dend_69 { pt3dadd( -123.959, -162.005, 30.598, 0.37 ) }
    dend_69 { pt3dadd( -124.545, -162.082, 30.6252, 0.37 ) }
    dend_69 { pt3dadd( -125.529, -162.085, 30.726, 0.29 ) }
    dend_69 { pt3dadd( -126.162, -162.051, 30.8757, 0.29 ) }
    dend_69 { pt3dadd( -126.664, -162.01, 31.0413, 0.59 ) }
    dend_69 { pt3dadd( -127.68, -161.939, 31.4811, 0.59 ) }
    dend_69 { pt3dadd( -128.248, -161.917, 31.7691, 0.59 ) }
    dend_69 { pt3dadd( -128.689, -161.924, 32.0561, 0.59 ) }
    dend_69 { pt3dadd( -129.904, -162.087, 32.9695, 0.44 ) }
    dend_69 { pt3dadd( -129.938, -162.095, 32.9966, 0.44 ) }
    dend_69 { pt3dadd( -130.427, -162.268, 33.4096, 0.44 ) }
    dend_69 { pt3dadd( -130.46, -162.282, 33.4355, 0.44 ) }
    dend_69 { pt3dadd( -131.146, -162.572, 33.9242, 0.59 ) }
    dend_69 { pt3dadd( -131.593, -162.758, 34.1754, 0.59 ) }
    dend_69 { pt3dadd( -132.222, -163.012, 34.3852, 0.29 ) }
    dend_69 { pt3dadd( -132.269, -163.028, 34.3986, 0.29 ) }
    dend_69 { pt3dadd( -133.347, -163.371, 34.6046, 0.44 ) }
    dend_69 { pt3dadd( -133.812, -163.529, 34.6464, 0.96 ) }
    dend_69 { pt3dadd( -134.271, -163.693, 34.6412, 1.33 ) }
    dend_69 { pt3dadd( -134.861, -163.916, 34.6141, 0.88 ) }
    dend_69 { pt3dadd( -135.818, -164.332, 34.5332, 0.44 ) }
    dend_69 { pt3dadd( -136.557, -164.691, 34.4317, 0.44 ) }
    dend_69 { pt3dadd( -137.34, -165.109, 34.2664, 0.52 ) }
    dend_69 { pt3dadd( -137.904, -165.39, 34.1311, 0.52 ) }
    dend_69 { pt3dadd( -137.951, -165.411, 34.1183, 0.52 ) }
    dend_69 { pt3dadd( -138.671, -165.701, 33.8883, 0.37 ) }
    dend_69 { pt3dadd( -139.196, -165.883, 33.6937, 0.37 ) }
    dend_69 { pt3dadd( -139.758, -166.015, 33.5064, 0.37 ) }
    dend_69 { pt3dadd( -140.557, -166.111, 33.2794, 0.52 ) }
    dend_69 { pt3dadd( -140.815, -166.126, 33.2068, 0.96 ) }
    dend_69 { pt3dadd( -141.1, -166.133, 33.1171, 0.96 ) }
    dend_69 { pt3dadd( -141.471, -166.13, 32.9846, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_69 { pt3dadd( -141.964, -166.142, 32.8007, 0.81 ) }
    dend_69 { pt3dadd( -142.797, -166.236, 32.4892, 0.37 ) }
    dend_69 { pt3dadd( -142.837, -166.245, 32.4746, 0.37 ) }
    dend_69 { pt3dadd( -143.524, -166.441, 32.2275, 0.37 ) }
    dend_69 { pt3dadd( -143.921, -166.578, 32.0867, 0.59 ) }
    dend_69 { pt3dadd( -144.213, -166.684, 31.9827, 0.66 ) }
    dend_69 { pt3dadd( -144.666, -166.848, 31.8175, 0.52 ) }
    dend_69 { pt3dadd( -145.223, -167.04, 31.57, 0.29 ) }
    dend_69 { pt3dadd( -145.277, -167.055, 31.5456, 0.29 ) }
    dend_69 { pt3dadd( -145.801, -167.166, 31.305, 0.29 ) }
    dend_69 { pt3dadd( -146.331, -167.272, 31.0896, 0.44 ) }
    dend_69 { pt3dadd( -146.691, -167.348, 30.9582, 0.44 ) }
    dend_69 { pt3dadd( -147.426, -167.517, 30.7179, 0.44 ) }
    dend_69 { pt3dadd( -148.169, -167.712, 30.5054, 0.37 ) }
    dend_69 { pt3dadd( -148.52, -167.802, 30.4362, 0.37 ) }
    dend_69 { pt3dadd( -149.571, -168.024, 30.3677, 0.37 ) }
    dend_69 { pt3dadd( -150.07, -168.104, 30.397, 0.37 ) }
    dend_69 { pt3dadd( -150.594, -168.158, 30.4844, 0.37 ) }
    dend_69 { pt3dadd( -151.068, -168.164, 30.6086, 0.37 ) }
    dend_69 { pt3dadd( -151.858, -168.098, 30.858, 0.37 ) }
    dend_69 { pt3dadd( -152.731, -167.953, 31.1447, 0.37 ) }
    dend_69 { pt3dadd( -153.015, -167.892, 31.2464, 0.81 ) }
    dend_69 { pt3dadd( -153.226, -167.866, 31.324, 1.11 ) }
    dend_69 { pt3dadd( -153.656, -167.867, 31.4829, 1.11 ) }
    dend_69 { pt3dadd( -153.697, -167.873, 31.4952, 1.11 ) }
    dend_69 { pt3dadd( -154.345, -168.05, 31.648, 0.59 ) }
    dend_69 { pt3dadd( -155.312, -168.377, 31.8728, 0.44 ) }
    dend_69 { pt3dadd( -155.957, -168.582, 32.0414, 0.66 ) }
    dend_69 { pt3dadd( -156.0, -168.595, 32.0522, 0.66 ) }
    dend_69 { pt3dadd( -156.446, -168.725, 32.1436, 0.66 ) }
    dend_69 { pt3dadd( -157.162, -168.907, 32.2369, 0.44 ) }
    dend_69 { pt3dadd( -157.247, -168.927, 32.2482, 0.44 ) }
    dend_69 { pt3dadd( -157.939, -169.095, 32.3293, 0.37 ) }
    dend_69 { pt3dadd( -158.664, -169.291, 32.4275, 0.37 ) }
    dend_69 { pt3dadd( -159.336, -169.497, 32.5193, 0.88 ) }
    dend_69 { pt3dadd( -159.796, -169.657, 32.58, 1.18 ) }
    dend_69 { pt3dadd( -161.15, -170.131, 32.7413, 0.37 ) }
    dend_69 { pt3dadd( -161.762, -170.33, 32.8166, 0.29 ) }
    dend_69 { pt3dadd( -162.152, -170.445, 32.8658, 0.81 ) }
    dend_69 { pt3dadd( -162.21, -170.459, 32.8746, 0.81 ) }
    dend_69 { pt3dadd( -162.464, -170.511, 32.9256, 0.81 ) }
    dend_69 { pt3dadd( -163.518, -170.713, 33.1459, 0.37 ) }
    dend_69 { pt3dadd( -163.916, -170.778, 33.222, 0.74 ) }
    dend_69 { pt3dadd( -164.345, -170.852, 33.3159, 0.74 ) }
    dend_69 { pt3dadd( -165.126, -170.987, 33.4817, 0.81 ) }
    dend_69 { pt3dadd( -166.184, -171.188, 33.7074, 0.29 ) }
    dend_69 { pt3dadd( -166.543, -171.264, 33.7866, 0.29 ) }
    dend_69 { pt3dadd( -166.585, -171.276, 33.7952, 0.29 ) }
    dend_69 { pt3dadd( -167.057, -171.421, 33.8802, 0.74 ) }
    dend_69 { pt3dadd( -167.422, -171.53, 33.942, 0.81 ) }
    dend_69 { pt3dadd( -168.338, -171.755, 34.0587, 0.37 ) }
    dend_69 { pt3dadd( -168.39, -171.765, 34.064, 0.37 ) }
    dend_69 { pt3dadd( -168.948, -171.857, 34.1322, 0.29 ) }
    dend_69 { pt3dadd( -169.391, -171.925, 34.1925, 0.29 ) }
    dend_69 { pt3dadd( -170.074, -172.009, 34.3116, 0.52 ) }
    dend_69 { pt3dadd( -170.659, -172.078, 34.4354, 0.88 ) }
    dend_69 { pt3dadd( -170.874, -172.09, 34.4806, 1.03 ) }
    // Section: dend_62, id: dend_62, parent: dend_52 (entry count 57/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -2.06564, -98.312, -21.1726, 0.96 ) }
    dend_62 { pt3dadd( -1.96718, -100.656, -20.5305, 0.96 ) }
    dend_62 { pt3dadd( -1.86401, -102.105, -20.14, 0.96 ) }
    dend_62 { pt3dadd( -1.73869, -103.36, -19.8226, 1.03 ) }
    dend_62 { pt3dadd( -1.63628, -104.109, -19.6544, 1.25 ) }
    dend_62 { pt3dadd( -1.48873, -105.054, -19.4563, 1.11 ) }
    dend_62 { pt3dadd( -1.23053, -106.418, -19.1582, 0.74 ) }
    dend_62 { pt3dadd( -0.959665, -107.514, -18.991, 0.96 ) }
    dend_62 { pt3dadd( -0.708559, -108.3, -18.8672, 0.74 ) }
    dend_62 { pt3dadd( -0.262448, -109.503, -18.7037, 0.59 ) }
    dend_62 { pt3dadd( -0.237421, -109.565, -18.6993, 0.59 ) }
    dend_62 { pt3dadd( 0.328673, -110.999, -18.6877, 0.59 ) }
    dend_62 { pt3dadd( 0.76949, -112.268, -18.8174, 0.59 ) }
    dend_62 { pt3dadd( 0.785217, -112.325, -18.8291, 0.59 ) }
    dend_62 { pt3dadd( 1.02381, -113.496, -19.0722, 0.88 ) }
    dend_62 { pt3dadd( 1.18557, -114.652, -19.3154, 0.88 ) }
    dend_62 { pt3dadd( 1.2565, -115.352, -19.4658, 0.88 ) }
    dend_62 { pt3dadd( 1.32708, -116.487, -19.6842, 0.66 ) }
    dend_62 { pt3dadd( 1.40096, -117.67, -19.7883, 0.52 ) }
    dend_62 { pt3dadd( 1.50192, -118.836, -19.7786, 1.11 ) }
    dend_62 { pt3dadd( 1.56036, -119.387, -19.717, 1.11 ) }
    dend_62 { pt3dadd( 1.66655, -120.248, -19.5704, 0.88 ) }
    dend_62 { pt3dadd( 1.84336, -121.394, -19.3632, 0.81 ) }
    dend_62 { pt3dadd( 2.02529, -122.431, -19.194, 0.88 ) }
    dend_62 { pt3dadd( 2.17903, -123.196, -19.1471, 1.03 ) }
    dend_62 { pt3dadd( 2.43394, -124.382, -19.1972, 0.74 ) }
    dend_62 { pt3dadd( 2.63633, -125.264, -19.2871, 0.59 ) }
    dend_62 { pt3dadd( 2.89928, -126.28, -19.4511, 0.52 ) }
    dend_62 { pt3dadd( 3.11854, -127.063, -19.6469, 0.74 ) }
    dend_62 { pt3dadd( 3.5329, -128.435, -20.0733, 0.66 ) }
    dend_62 { pt3dadd( 3.83319, -129.39, -20.3941, 0.74 ) }
    dend_62 { pt3dadd( 4.10062, -130.22, -20.6629, 0.81 ) }
    dend_62 { pt3dadd( 4.34498, -131.001, -20.8656, 1.11 ) }
    dend_62 { pt3dadd( 4.60395, -131.853, -21.0291, 0.88 ) }
    dend_62 { pt3dadd( 4.62146, -131.916, -21.0431, 0.88 ) }
    dend_62 { pt3dadd( 4.8519, -132.886, -21.3515, 0.59 ) }
    dend_62 { pt3dadd( 5.0547, -133.866, -21.7644, 0.59 ) }
    dend_62 { pt3dadd( 5.24144, -134.863, -22.242, 0.81 ) }
    dend_62 { pt3dadd( 5.4663, -136.078, -22.8529, 1.03 ) }
    dend_62 { pt3dadd( 5.92386, -138.273, -24.0342, 1.03 ) }
    dend_62 { pt3dadd( 6.30177, -139.869, -24.9257, 0.81 ) }
    dend_62 { pt3dadd( 6.65799, -141.176, -25.6978, 0.59 ) }
    dend_62 { pt3dadd( 6.67458, -141.233, -25.7323, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_62 { pt3dadd( 6.95287, -142.19, -26.2713, 0.74 ) }
    dend_62 { pt3dadd( 7.29344, -143.289, -26.777, 0.66 ) }
    dend_62 { pt3dadd( 7.67483, -144.397, -27.1279, 0.66 ) }
    dend_62 { pt3dadd( 8.0619, -145.513, -27.4225, 0.66 ) }
    dend_62 { pt3dadd( 8.36762, -146.49, -27.6575, 0.96 ) }
    dend_62 { pt3dadd( 8.55313, -147.3, -27.8374, 1.18 ) }
    dend_62 { pt3dadd( 8.66469, -148.316, -28.0606, 1.03 ) }
    dend_62 { pt3dadd( 8.62969, -149.21, -28.2592, 0.88 ) }
    dend_62 { pt3dadd( 8.45343, -150.253, -28.5206, 0.66 ) }
    dend_62 { pt3dadd( 8.28397, -150.9, -28.6868, 0.74 ) }
    dend_62 { pt3dadd( 7.90689, -152.149, -29.0182, 0.74 ) }
    dend_62 { pt3dadd( 7.60256, -153.114, -29.2572, 0.81 ) }
    dend_62 { pt3dadd( 7.19459, -154.44, -29.545, 0.81 ) }
    dend_62 { pt3dadd( 6.8993, -155.613, -29.7579, 1.03 ) }
    dend_62 { pt3dadd( 6.76537, -156.443, -29.8741, 1.11 ) }
    dend_62 { pt3dadd( 6.71695, -157.345, -29.9864, 0.81 ) }
    dend_62 { pt3dadd( 6.78596, -158.759, -30.1302, 0.66 ) }
    dend_62 { pt3dadd( 6.94813, -159.874, -30.1978, 0.81 ) }
    dend_62 { pt3dadd( 7.14948, -160.662, -30.234, 0.81 ) }
    dend_62 { pt3dadd( 7.42916, -161.459, -30.2816, 0.81 ) }
    dend_62 { pt3dadd( 7.66045, -161.982, -30.3235, 1.03 ) }
    dend_62 { pt3dadd( 7.693, -162.043, -30.3297, 1.03 ) }
    dend_62 { pt3dadd( 8.1885, -162.787, -30.4295, 0.74 ) }
    dend_62 { pt3dadd( 8.78387, -163.592, -30.6119, 0.44 ) }
    dend_62 { pt3dadd( 8.98624, -163.857, -30.6924, 0.74 ) }
    dend_62 { pt3dadd( 9.02582, -163.909, -30.7141, 0.74 ) }
    dend_62 { pt3dadd( 9.32817, -164.343, -30.9094, 0.74 ) }
    dend_62 { pt3dadd( 9.36699, -164.403, -30.936, 0.74 ) }
    dend_62 { pt3dadd( 10.0926, -165.643, -31.4081, 0.59 ) }
    dend_62 { pt3dadd( 10.2971, -166.029, -31.5341, 0.88 ) }
    dend_62 { pt3dadd( 10.6989, -166.891, -31.7732, 0.88 ) }
    dend_62 { pt3dadd( 11.1609, -168.03, -32.0287, 0.66 ) }
    dend_62 { pt3dadd( 11.4386, -168.843, -32.1682, 0.74 ) }
    dend_62 { pt3dadd( 11.7397, -169.923, -32.3408, 0.88 ) }
    dend_62 { pt3dadd( 11.8856, -170.686, -32.4837, 0.44 ) }
    dend_62 { pt3dadd( 11.967, -171.377, -32.6741, 0.44 ) }
    dend_62 { pt3dadd( 12.0038, -172.172, -32.9435, 0.52 ) }
    dend_62 { pt3dadd( 12.0002, -172.815, -33.2331, 0.81 ) }
    dend_62 { pt3dadd( 11.9799, -173.942, -33.8219, 1.03 ) }
    dend_62 { pt3dadd( 11.9887, -175.201, -34.5425, 0.88 ) }
    dend_62 { pt3dadd( 12.0634, -176.385, -35.2292, 0.59 ) }
    dend_62 { pt3dadd( 12.1452, -177.027, -35.6019, 0.74 ) }
    dend_62 { pt3dadd( 12.4002, -178.176, -36.208, 0.52 ) }
    dend_62 { pt3dadd( 12.6091, -178.804, -36.4787, 0.52 ) }
    dend_62 { pt3dadd( 12.9938, -179.634, -36.7053, 0.81 ) }
    dend_62 { pt3dadd( 13.354, -180.243, -36.7949, 1.03 ) }
    dend_62 { pt3dadd( 13.6251, -180.63, -36.8212, 1.03 ) }
    dend_62 { pt3dadd( 14.4262, -181.679, -36.8546, 0.52 ) }
    dend_62 { pt3dadd( 14.736, -182.088, -36.8627, 0.66 ) }
    dend_62 { pt3dadd( 15.2248, -182.781, -36.9016, 0.66 ) }
    dend_62 { pt3dadd( 15.2668, -182.847, -36.9074, 0.66 ) }
    dend_62 { pt3dadd( 15.6428, -183.487, -36.9846, 0.81 ) }
    dend_62 { pt3dadd( 16.1003, -184.333, -37.1152, 0.59 ) }
    dend_62 { pt3dadd( 16.6333, -185.394, -37.3218, 0.37 ) }
    dend_62 { pt3dadd( 16.9168, -185.95, -37.4325, 0.88 ) }
    dend_62 { pt3dadd( 17.2829, -186.605, -37.5888, 1.18 ) }
    dend_62 { pt3dadd( 17.3186, -186.66, -37.6037, 1.18 ) }
    dend_62 { pt3dadd( 17.6679, -187.149, -37.8213, 1.11 ) }
    dend_62 { pt3dadd( 18.0402, -187.653, -38.1545, 0.96 ) }
    dend_62 { pt3dadd( 18.0744, -187.7, -38.1916, 0.96 ) }
    dend_62 { pt3dadd( 18.6769, -188.596, -38.9582, 0.59 ) }
    dend_62 { pt3dadd( 19.0111, -189.158, -39.4304, 0.81 ) }
    dend_62 { pt3dadd( 19.7384, -190.62, -40.538, 0.59 ) }
    dend_62 { pt3dadd( 20.0305, -191.356, -41.0255, 0.88 ) }
    dend_62 { pt3dadd( 20.1828, -191.882, -41.3167, 0.88 ) }
    dend_62 { pt3dadd( 20.3088, -192.485, -41.5801, 0.81 ) }
    dend_62 { pt3dadd( 20.4096, -193.331, -41.8362, 0.59 ) }
    dend_62 { pt3dadd( 20.4761, -194.229, -42.0043, 0.66 ) }
    dend_62 { pt3dadd( 20.5404, -195.278, -42.085, 1.03 ) }
    dend_62 { pt3dadd( 20.5887, -195.938, -42.1267, 1.33 ) }
    dend_62 { pt3dadd( 20.6298, -196.501, -42.1738, 1.18 ) }
    dend_62 { pt3dadd( 20.6819, -197.258, -42.2827, 0.81 ) }
    dend_62 { pt3dadd( 20.7649, -198.221, -42.5484, 0.59 ) }
    dend_62 { pt3dadd( 20.9147, -199.126, -42.9009, 0.74 ) }
    dend_62 { pt3dadd( 21.0624, -199.675, -43.1327, 0.96 ) }
    dend_62 { pt3dadd( 21.0806, -199.725, -43.1536, 0.96 ) }
    dend_62 { pt3dadd( 21.5145, -200.709, -43.5424, 0.96 ) }
    dend_62 { pt3dadd( 22.3182, -202.254, -44.1346, 0.74 ) }
    dend_62 { pt3dadd( 22.9833, -203.353, -44.5489, 0.74 ) }
    dend_62 { pt3dadd( 23.6308, -204.331, -44.8953, 0.88 ) }
    dend_62 { pt3dadd( 24.2211, -205.208, -45.0852, 0.88 ) }
    dend_62 { pt3dadd( 24.8338, -206.122, -45.1518, 0.59 ) }
    dend_62 { pt3dadd( 25.2588, -206.805, -45.0276, 0.59 ) }
    dend_62 { pt3dadd( 25.5762, -207.435, -44.7539, 0.59 ) }
    dend_62 { pt3dadd( 25.5924, -207.483, -44.7274, 0.59 ) }
    dend_62 { pt3dadd( 25.9545, -209.508, -43.5234, 0.52 ) }
    dend_62 { pt3dadd( 25.9826, -210.385, -42.9827, 0.52 ) }
    dend_62 { pt3dadd( 25.8158, -212.088, -42.0691, 1.18 ) }
    dend_62 { pt3dadd( 25.6294, -213.107, -41.6258, 1.18 ) }
    dend_62 { pt3dadd( 25.4294, -214.006, -41.3882, 0.52 ) }
    dend_62 { pt3dadd( 25.1457, -215.333, -41.362, 0.52 ) }
    dend_62 { pt3dadd( 24.9503, -216.386, -41.5897, 0.66 ) }
    dend_62 { pt3dadd( 24.715, -218.081, -42.19, 0.66 ) }
    dend_62 { pt3dadd( 24.6447, -219.035, -42.684, 0.66 ) }
    dend_62 { pt3dadd( 24.6418, -220.68, -43.668, 0.66 ) }
    dend_62 { pt3dadd( 24.8044, -222.405, -44.8139, 0.74 ) }
    dend_62 { pt3dadd( 24.9286, -223.007, -45.246, 1.03 ) }
    dend_62 { pt3dadd( 25.0957, -223.55, -45.6485, 1.03 ) }
    dend_62 { pt3dadd( 25.5268, -224.629, -46.4302, 0.66 ) }
    dend_62 { pt3dadd( 25.8603, -225.368, -46.9742, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_62 { pt3dadd( 26.1967, -226.044, -47.4117, 0.74 ) }
    dend_62 { pt3dadd( 26.5042, -226.638, -47.7447, 1.03 ) }
    dend_62 { pt3dadd( 26.5334, -226.69, -47.7742, 1.03 ) }
    dend_62 { pt3dadd( 26.6904, -226.909, -47.8904, 1.25 ) }
    dend_62 { pt3dadd( 26.7444, -226.963, -47.9078, 1.25 ) }
    dend_62 { pt3dadd( 27.123, -227.291, -47.9856, 1.25 ) }
    dend_62 { pt3dadd( 27.1711, -227.337, -47.9919, 1.25 ) }
    dend_62 { pt3dadd( 27.5378, -227.733, -48.0304, 1.25 ) }
    dend_62 { pt3dadd( 27.8772, -228.166, -48.0603, 1.25 ) }
    dend_62 { pt3dadd( 28.6564, -229.313, -48.0707, 0.59 ) }
    dend_62 { pt3dadd( 29.2519, -230.215, -48.0539, 0.59 ) }
    dend_62 { pt3dadd( 29.8968, -231.229, -48.0129, 0.66 ) }
    dend_62 { pt3dadd( 30.3984, -232.001, -47.9716, 0.66 ) }
    dend_62 { pt3dadd( 31.0571, -232.969, -47.9077, 0.59 ) }
    dend_62 { pt3dadd( 31.6146, -233.748, -47.8449, 0.44 ) }
    dend_62 { pt3dadd( 32.1639, -234.388, -47.7839, 0.29 ) }
    dend_62 { pt3dadd( 32.2104, -234.425, -47.7804, 0.29 ) }
    dend_62 { pt3dadd( 32.9979, -234.775, -47.7371, 0.59 ) }
    dend_62 { pt3dadd( 33.7572, -235.036, -47.7136, 0.74 ) }
    dend_62 { pt3dadd( 33.8219, -235.057, -47.7084, 0.74 ) }
    dend_62 { pt3dadd( 34.7732, -235.384, -47.6127, 0.74 ) }
    dend_62 { pt3dadd( 34.833, -235.408, -47.6005, 0.74 ) }
    dend_62 { pt3dadd( 36.265, -235.995, -47.1562, 0.59 ) }
    dend_62 { pt3dadd( 36.9858, -236.299, -46.8737, 0.81 ) }
    dend_62 { pt3dadd( 38.123, -236.829, -46.351, 0.66 ) }
    dend_62 { pt3dadd( 38.1857, -236.859, -46.3213, 0.66 ) }
    dend_62 { pt3dadd( 39.3185, -237.365, -45.7391, 1.03 ) }
    dend_62 { pt3dadd( 40.1666, -237.686, -45.2438, 1.47 ) }
    dend_62 { pt3dadd( 40.5932, -237.832, -44.9293, 1.55 ) }
    dend_62 { pt3dadd( 41.4937, -238.141, -44.1755, 0.29 ) }
    dend_62 { pt3dadd( 42.1296, -238.367, -43.6049, 0.59 ) }
    dend_62 { pt3dadd( 43.057, -238.714, -42.7599, 0.81 ) }
    dend_62 { pt3dadd( 44.1553, -239.145, -41.7274, 1.18 ) }
    dend_62 { pt3dadd( 45.547, -239.742, -40.4075, 0.44 ) }
    dend_62 { pt3dadd( 46.4752, -240.161, -39.5113, 0.59 ) }
    dend_62 { pt3dadd( 46.522, -240.184, -39.4673, 0.59 ) }
    dend_62 { pt3dadd( 47.0629, -240.518, -38.9936, 0.81 ) }
    dend_62 { pt3dadd( 47.1016, -240.549, -38.9664, 0.81 ) }
    dend_62 { pt3dadd( 47.68, -241.065, -38.6719, 0.37 ) }
    dend_62 { pt3dadd( 48.3259, -241.645, -38.4394, 0.88 ) }
    dend_62 { pt3dadd( 48.7988, -242.115, -38.2818, 1.33 ) }
    dend_62 { pt3dadd( 49.2544, -242.629, -38.1282, 1.47 ) }
    dend_62 { pt3dadd( 50.1735, -243.776, -37.8767, 0.88 ) }
    dend_62 { pt3dadd( 50.215, -243.831, -37.8686, 0.88 ) }
    dend_62 { pt3dadd( 50.598, -244.346, -37.8324, 1.03 ) }
    dend_62 { pt3dadd( 51.2053, -245.199, -37.8687, 0.44 ) }
    dend_62 { pt3dadd( 51.8157, -246.08, -37.976, 0.44 ) }
    dend_62 { pt3dadd( 52.3232, -246.853, -38.1367, 0.66 ) }
    dend_62 { pt3dadd( 52.3588, -246.907, -38.1533, 0.66 ) }
    dend_62 { pt3dadd( 52.7046, -247.408, -38.2988, 0.44 ) }
    dend_62 { pt3dadd( 53.0995, -247.948, -38.4508, 0.81 ) }
    dend_62 { pt3dadd( 53.358, -248.267, -38.5316, 0.96 ) }
    dend_62 { pt3dadd( 53.7606, -248.744, -38.628, 1.11 ) }
    dend_62 { pt3dadd( 54.2741, -249.366, -38.7035, 0.29 ) }
    dend_62 { pt3dadd( 54.6944, -249.895, -38.7654, 0.22 ) }
    dend_62 { pt3dadd( 54.7356, -249.95, -38.7715, 0.22 ) }
    dend_62 { pt3dadd( 55.2597, -250.611, -38.8487, 1.47 ) }
    dend_62 { pt3dadd( 55.3034, -250.661, -38.8551, 1.47 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 58/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -2.06564, -98.312, -21.1726, 0.44 ) }
    dend_53 { pt3dadd( -1.92523, -99.3457, -22.0511, 0.44 ) }
    dend_53 { pt3dadd( -1.74583, -100.375, -22.9267, 0.59 ) }
    dend_53 { pt3dadd( -1.16763, -103.069, -25.165, 0.59 ) }
    dend_53 { pt3dadd( -0.863739, -104.316, -26.1657, 0.81 ) }
    dend_53 { pt3dadd( -0.437505, -105.898, -27.406, 0.81 ) }
    dend_53 { pt3dadd( -0.0170564, -107.378, -28.5326, 0.88 ) }
    dend_53 { pt3dadd( 0.237846, -108.229, -29.1454, 1.03 ) }
    dend_53 { pt3dadd( 0.677773, -109.49, -30.0054, 0.52 ) }
    dend_53 { pt3dadd( 0.91273, -110.062, -30.331, 0.88 ) }
    dend_53 { pt3dadd( 1.29299, -110.972, -30.8343, 0.88 ) }
    dend_53 { pt3dadd( 1.46698, -111.477, -31.0912, 0.88 ) }
    dend_53 { pt3dadd( 1.47464, -111.542, -31.1251, 0.88 ) }
    dend_53 { pt3dadd( 1.32871, -112.421, -31.7224, 0.44 ) }
    dend_53 { pt3dadd( 1.14053, -113.016, -32.227, 0.74 ) }
    dend_53 { pt3dadd( 0.959275, -113.707, -32.8649, 0.74 ) }
    dend_53 { pt3dadd( 0.819102, -114.573, -33.7066, 0.96 ) }
    dend_53 { pt3dadd( 0.785904, -115.767, -34.9104, 0.96 ) }
    dend_53 { pt3dadd( 0.928856, -116.989, -36.1045, 0.96 ) }
    dend_53 { pt3dadd( 1.19471, -118.195, -37.2693, 0.96 ) }
    dend_53 { pt3dadd( 1.62295, -119.584, -38.5015, 0.88 ) }
    dend_53 { pt3dadd( 2.12512, -120.921, -39.5731, 0.88 ) }
    dend_53 { pt3dadd( 2.6063, -122.119, -40.417, 0.59 ) }
    dend_53 { pt3dadd( 3.1056, -123.339, -41.1986, 0.59 ) }
    dend_53 { pt3dadd( 3.46385, -124.292, -41.7647, 0.96 ) }
    dend_53 { pt3dadd( 3.7697, -125.263, -42.3049, 1.25 ) }
    dend_53 { pt3dadd( 3.99459, -126.215, -42.8118, 1.33 ) }
    dend_53 { pt3dadd( 4.26274, -127.6, -43.4965, 0.96 ) }
    dend_53 { pt3dadd( 4.45256, -128.663, -44.0022, 0.81 ) }
    dend_53 { pt3dadd( 4.68306, -129.825, -44.5675, 0.88 ) }
    dend_53 { pt3dadd( 4.86633, -130.37, -44.8097, 1.11 ) }
    dend_53 { pt3dadd( 4.8902, -130.416, -44.8322, 1.11 ) }
    dend_53 { pt3dadd( 5.39193, -131.088, -45.1532, 1.11 ) }
    dend_53 { pt3dadd( 5.86212, -131.56, -45.3336, 1.25 ) }
    dend_53 { pt3dadd( 5.97519, -131.656, -45.3748, 1.25 ) }
    dend_53 { pt3dadd( 6.77713, -132.302, -45.7525, 1.33 ) }
    dend_53 { pt3dadd( 7.58639, -132.994, -46.2881, 1.03 ) }
    dend_53 { pt3dadd( 8.02548, -133.429, -46.6953, 0.59 ) }
    dend_53 { pt3dadd( 8.33332, -133.79, -47.0937, 0.81 ) }
    dend_53 { pt3dadd( 8.97089, -134.779, -48.3376, 0.81 ) }
    dend_53 { pt3dadd( 9.30023, -135.556, -49.3974, 1.11 ) }
    dend_53 { pt3dadd( 9.47314, -136.381, -50.5562, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_53 { pt3dadd( 9.55524, -137.37, -51.9013, 0.59 ) }
    dend_53 { pt3dadd( 9.5814, -137.956, -52.6917, 0.81 ) }
    dend_53 { pt3dadd( 9.63044, -138.958, -54.0601, 0.96 ) }
    dend_53 { pt3dadd( 9.70445, -139.807, -55.1537, 0.81 ) }
    dend_53 { pt3dadd( 9.87448, -140.955, -56.4796, 0.37 ) }
    dend_53 { pt3dadd( 10.1264, -142.02, -57.5683, 1.03 ) }
    dend_53 { pt3dadd( 10.624, -143.547, -58.8985, 0.96 ) }
    dend_53 { pt3dadd( 11.2517, -145.096, -60.0745, 1.18 ) }
    dend_53 { pt3dadd( 11.7962, -146.232, -60.8601, 1.18 ) }
    dend_53 { pt3dadd( 12.4265, -147.418, -61.6324, 1.18 ) }
    dend_53 { pt3dadd( 13.0603, -148.537, -62.3312, 0.81 ) }
    dend_53 { pt3dadd( 13.7793, -149.777, -63.0455, 0.66 ) }
    dend_53 { pt3dadd( 14.1799, -150.469, -63.4005, 0.96 ) }
    dend_53 { pt3dadd( 14.9702, -151.805, -64.0211, 1.25 ) }
    dend_53 { pt3dadd( 15.0055, -151.863, -64.0495, 1.25 ) }
    dend_53 { pt3dadd( 15.6932, -152.891, -64.53, 1.11 ) }
    dend_53 { pt3dadd( 16.2068, -153.695, -64.8293, 0.81 ) }
    dend_53 { pt3dadd( 16.5217, -154.238, -64.9878, 1.25 ) }
    dend_53 { pt3dadd( 16.863, -154.926, -65.1133, 1.25 ) }
    dend_53 { pt3dadd( 17.1272, -155.631, -65.1616, 0.66 ) }
    dend_53 { pt3dadd( 17.3035, -156.36, -65.2531, 0.59 ) }
    dend_53 { pt3dadd( 17.3525, -157.29, -65.4185, 0.59 ) }
    dend_53 { pt3dadd( 17.3098, -157.739, -65.5409, 0.88 ) }
    dend_53 { pt3dadd( 17.2984, -157.807, -65.5637, 0.88 ) }
    dend_53 { pt3dadd( 17.1591, -158.664, -65.9123, 0.88 ) }
    dend_53 { pt3dadd( 17.0453, -160.198, -66.5956, 0.59 ) }
    dend_53 { pt3dadd( 17.0971, -160.876, -66.928, 0.44 ) }
    dend_53 { pt3dadd( 17.1217, -160.997, -66.9852, 0.44 ) }
    dend_53 { pt3dadd( 17.2973, -161.616, -67.2622, 0.74 ) }
    dend_53 { pt3dadd( 17.6078, -162.585, -67.6503, 0.96 ) }
    dend_53 { pt3dadd( 17.8915, -163.397, -67.9828, 0.96 ) }
    dend_53 { pt3dadd( 18.3152, -164.633, -68.4307, 0.59 ) }
    dend_53 { pt3dadd( 18.5162, -165.286, -68.6744, 0.88 ) }
    dend_53 { pt3dadd( 18.5337, -165.352, -68.6989, 0.88 ) }
    dend_53 { pt3dadd( 18.7014, -166.051, -68.9462, 0.96 ) }
    dend_53 { pt3dadd( 19.0243, -167.671, -69.5297, 0.59 ) }
    dend_53 { pt3dadd( 19.2, -168.591, -69.8734, 1.03 ) }
    dend_53 { pt3dadd( 19.3571, -169.307, -70.1301, 1.18 ) }
    dend_53 { pt3dadd( 19.658, -170.498, -70.5623, 0.88 ) }
    dend_53 { pt3dadd( 19.9156, -171.52, -70.9202, 0.74 ) }
    dend_53 { pt3dadd( 20.183, -172.623, -71.2873, 0.66 ) }
    dend_53 { pt3dadd( 20.4699, -174.026, -71.7008, 0.52 ) }
    dend_53 { pt3dadd( 20.5968, -174.886, -71.9581, 0.81 ) }
    dend_53 { pt3dadd( 20.6583, -175.78, -72.2369, 0.37 ) }
    dend_53 { pt3dadd( 20.6131, -176.537, -72.4864, 0.37 ) }
    dend_53 { pt3dadd( 20.5264, -177.076, -72.673, 0.88 ) }
    dend_53 { pt3dadd( 20.3947, -177.583, -72.8595, 1.18 ) }
    dend_53 { pt3dadd( 20.1691, -178.182, -73.1011, 1.33 ) }
    dend_53 { pt3dadd( 19.7737, -179.203, -73.5575, 0.88 ) }
    dend_53 { pt3dadd( 19.3927, -180.325, -74.1062, 0.74 ) }
    dend_53 { pt3dadd( 19.3724, -180.388, -74.1386, 0.74 ) }
    dend_53 { pt3dadd( 18.9212, -181.877, -74.9322, 0.52 ) }
    dend_53 { pt3dadd( 18.6467, -182.824, -75.4506, 0.66 ) }
    dend_53 { pt3dadd( 18.1742, -184.537, -76.3961, 0.59 ) }
    dend_53 { pt3dadd( 17.9469, -185.513, -76.9026, 0.88 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 55/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 15.7004, -143.212, -27.4364, 0.37 ) }
    dend_51 { pt3dadd( 16.8798, -143.464, -27.2482, 0.37 ) }
    dend_51 { pt3dadd( 18.171, -143.828, -27.047, 0.59 ) }
    dend_51 { pt3dadd( 18.9558, -144.059, -26.9431, 0.59 ) }
    dend_51 { pt3dadd( 20.3595, -144.447, -26.7942, 0.59 ) }
    dend_51 { pt3dadd( 20.5473, -144.498, -26.7773, 0.59 ) }
    dend_51 { pt3dadd( 21.5517, -144.751, -26.7314, 0.22 ) }
    dend_51 { pt3dadd( 22.0562, -144.841, -26.7938, 0.44 ) }
    dend_51 { pt3dadd( 22.8397, -144.918, -27.063, 0.44 ) }
    dend_51 { pt3dadd( 23.415, -144.951, -27.3639, 0.81 ) }
    dend_51 { pt3dadd( 23.5088, -144.947, -27.4241, 0.81 ) }
    dend_51 { pt3dadd( 24.1555, -144.82, -27.922, 0.96 ) }
    dend_51 { pt3dadd( 25.5198, -144.379, -29.2184, 0.52 ) }
    dend_51 { pt3dadd( 25.9606, -144.215, -29.6672, 0.52 ) }
    dend_51 { pt3dadd( 26.0207, -144.191, -29.73, 0.52 ) }
    dend_51 { pt3dadd( 26.7653, -143.886, -30.5096, 0.44 ) }
    dend_51 { pt3dadd( 28.1451, -143.296, -31.8953, 0.74 ) }
    dend_51 { pt3dadd( 29.4229, -142.72, -33.2116, 0.29 ) }
    dend_51 { pt3dadd( 29.9777, -142.451, -33.7695, 0.29 ) }
    dend_51 { pt3dadd( 30.3564, -142.285, -34.1494, 0.59 ) }
    dend_51 { pt3dadd( 30.41, -142.267, -34.2034, 0.59 ) }
    dend_51 { pt3dadd( 30.8047, -142.191, -34.6411, 1.18 ) }
    dend_51 { pt3dadd( 32.0773, -142.107, -35.9645, 1.11 ) }
    dend_51 { pt3dadd( 32.7787, -142.128, -36.7169, 0.37 ) }
    dend_51 { pt3dadd( 33.7558, -142.211, -37.7791, 0.29 ) }
    dend_51 { pt3dadd( 34.901, -142.344, -38.973, 1.11 ) }
    dend_51 { pt3dadd( 36.4527, -142.539, -40.4941, 0.66 ) }
    dend_51 { pt3dadd( 37.4574, -142.684, -41.4282, 0.44 ) }
    dend_51 { pt3dadd( 38.7592, -142.881, -42.617, 1.18 ) }
    dend_51 { pt3dadd( 39.2492, -142.952, -43.0848, 1.62 ) }
    dend_51 { pt3dadd( 39.9788, -143.022, -43.7724, 1.18 ) }
    dend_51 { pt3dadd( 40.8449, -143.052, -44.5235, 0.74 ) }
    dend_51 { pt3dadd( 40.9066, -143.051, -44.5726, 0.74 ) }
    dend_51 { pt3dadd( 42.4702, -142.969, -46.0153, 0.59 ) }
    dend_51 { pt3dadd( 42.5267, -142.963, -46.07, 0.59 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 90/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 15.7004, -143.212, -27.4364, 0.59 ) }
    dend_50 { pt3dadd( 15.5125, -144.886, -27.0622, 0.59 ) }
    dend_50 { pt3dadd( 15.3948, -145.74, -26.6312, 0.66 ) }
    dend_50 { pt3dadd( 15.3328, -146.172, -26.3078, 1.03 ) }
    dend_50 { pt3dadd( 15.3012, -146.334, -26.1748, 1.03 ) }
    dend_50 { pt3dadd( 15.1937, -146.65, -25.8351, 1.03 ) }
    dend_50 { pt3dadd( 14.8472, -147.477, -24.8296, 0.74 ) }
    dend_50 { pt3dadd( 14.1837, -148.657, -23.087, 1.03 ) }
    dend_50 { pt3dadd( 13.7491, -149.356, -21.7519, 1.11 ) }
    dend_50 { pt3dadd( 13.5676, -149.652, -21.1696, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_50 { pt3dadd( 12.7491, -150.943, -18.7188, 0.74 ) }
    dend_50 { pt3dadd( 12.7167, -150.992, -18.6268, 0.74 ) }
    dend_50 { pt3dadd( 12.3617, -151.542, -17.6655, 0.66 ) }
    dend_50 { pt3dadd( 11.0617, -154.009, -14.1479, 0.66 ) }
    dend_50 { pt3dadd( 10.7611, -154.757, -13.2902, 0.52 ) }
    dend_50 { pt3dadd( 10.5018, -155.716, -12.4203, 0.74 ) }
    dend_50 { pt3dadd( 10.4937, -155.77, -12.3857, 0.74 ) }
    dend_50 { pt3dadd( 10.4248, -156.553, -11.997, 0.88 ) }
    dend_50 { pt3dadd( 10.3731, -158.551, -11.2925, 0.52 ) }
    dend_50 { pt3dadd( 10.3842, -159.511, -11.1314, 0.52 ) }
    dend_50 { pt3dadd( 10.4209, -160.518, -10.9549, 0.52 ) }
    dend_50 { pt3dadd( 10.4846, -161.491, -10.8007, 0.44 ) }
    dend_50 { pt3dadd( 10.5232, -162.245, -10.7024, 0.37 ) }
    dend_50 { pt3dadd( 10.5781, -163.569, -10.5322, 0.37 ) }
    dend_50 { pt3dadd( 10.6403, -164.623, -10.422, 0.59 ) }
    dend_50 { pt3dadd( 10.6846, -165.244, -10.3331, 0.88 ) }
    dend_50 { pt3dadd( 10.6901, -165.309, -10.3178, 0.88 ) }
    dend_50 { pt3dadd( 10.7483, -165.853, -10.1501, 0.96 ) }
    dend_50 { pt3dadd( 10.8862, -167.32, -9.48238, 0.44 ) }
    dend_50 { pt3dadd( 10.9661, -168.103, -9.04711, 0.59 ) }
    dend_50 { pt3dadd( 10.9711, -168.151, -9.01409, 0.59 ) }
    dend_50 { pt3dadd( 11.1257, -169.306, -8.2035, 0.81 ) }
    dend_50 { pt3dadd( 11.1716, -169.706, -7.92813, 0.96 ) }
    dend_50 { pt3dadd( 11.3399, -171.412, -6.80417, 0.52 ) }
    dend_50 { pt3dadd( 11.3663, -171.814, -6.56309, 0.74 ) }
    dend_50 { pt3dadd( 11.4141, -173.192, -5.82158, 0.52 ) }
    dend_50 { pt3dadd( 11.452, -174.082, -5.44678, 0.74 ) }
    dend_50 { pt3dadd( 11.4818, -174.893, -5.17411, 0.44 ) }
    dend_50 { pt3dadd( 11.4788, -175.599, -4.92645, 0.29 ) }
    dend_50 { pt3dadd( 11.4579, -176.045, -4.74877, 0.37 ) }
    dend_50 { pt3dadd( 11.383, -176.705, -4.36622, 0.59 ) }
    dend_50 { pt3dadd( 11.2841, -177.497, -3.80278, 0.59 ) }
    dend_50 { pt3dadd( 11.1728, -178.775, -2.75964, 0.81 ) }
    dend_50 { pt3dadd( 11.1742, -180.109, -1.54031, 0.44 ) }
    dend_50 { pt3dadd( 11.3057, -181.356, -0.261249, 0.88 ) }
    dend_50 { pt3dadd( 11.6032, -182.681, 1.24795, 0.74 ) }
    dend_50 { pt3dadd( 11.8245, -183.163, 1.87262, 0.29 ) }
    dend_50 { pt3dadd( 12.3361, -183.759, 2.75302, 0.37 ) }
    dend_50 { pt3dadd( 13.1759, -184.022, 3.24902, 0.37 ) }
    dend_50 { pt3dadd( 13.9752, -184.032, 3.41301, 0.66 ) }
    dend_50 { pt3dadd( 14.0408, -184.026, 3.41768, 0.66 ) }
    dend_50 { pt3dadd( 15.0917, -183.86, 3.37926, 0.29 ) }
    dend_50 { pt3dadd( 15.1652, -183.846, 3.37743, 0.29 ) }
    dend_50 { pt3dadd( 16.3172, -183.588, 3.41293, 0.15 ) }
    dend_50 { pt3dadd( 17.4159, -183.287, 3.39079, 0.15 ) }
    dend_50 { pt3dadd( 18.0311, -190.345, 9.22992, 0.15 ) }
    dend_50 { pt3dadd( 17.7799, -197.471, 15.0202, 0.15 ) }
    dend_50 { pt3dadd( 18.8543, -205.284, 19.7773, 0.15 ) }
    dend_50 { pt3dadd( 21.5468, -211.638, 25.791, 0.15 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -23.2471, -440.244, -50.4977, 1.18 ) }
    dend_46 { pt3dadd( -22.451, -441.5, -50.6626, 1.18 ) }
    dend_46 { pt3dadd( -21.5995, -442.754, -50.8191, 0.96 ) }
    dend_46 { pt3dadd( -21.2316, -443.278, -50.8972, 1.47 ) }
    dend_46 { pt3dadd( -20.792, -443.906, -51.0083, 1.84 ) }
    dend_46 { pt3dadd( -20.256, -444.666, -51.1566, 1.33 ) }
    dend_46 { pt3dadd( -19.5325, -445.718, -51.3883, 0.74 ) }
    dend_46 { pt3dadd( -19.4946, -445.777, -51.4062, 0.74 ) }
    dend_46 { pt3dadd( -19.0054, -446.536, -51.6623, 0.81 ) }
    dend_46 { pt3dadd( -18.6221, -447.145, -51.896, 0.44 ) }
    dend_46 { pt3dadd( -18.59, -447.204, -51.9235, 0.44 ) }
    dend_46 { pt3dadd( -18.1495, -448.192, -52.4327, 0.29 ) }
    dend_46 { pt3dadd( -17.81, -449.08, -52.955, 0.44 ) }
    dend_46 { pt3dadd( -17.6089, -449.634, -53.2901, 0.81 ) }
    dend_46 { pt3dadd( -17.3908, -450.155, -53.6094, 0.81 ) }
    dend_46 { pt3dadd( -16.8698, -451.136, -54.2305, 0.37 ) }
    dend_46 { pt3dadd( -16.8293, -451.197, -54.2667, 0.37 ) }
    dend_46 { pt3dadd( -16.3286, -451.85, -54.6185, 0.81 ) }
    dend_46 { pt3dadd( -15.7889, -452.532, -54.9274, 1.11 ) }
    dend_46 { pt3dadd( -15.0385, -453.52, -55.2815, 1.11 ) }
    dend_46 { pt3dadd( -14.1239, -454.841, -55.6314, 0.29 ) }
    dend_46 { pt3dadd( -13.4834, -455.895, -55.8109, 0.29 ) }
    dend_46 { pt3dadd( -13.0833, -456.68, -55.8765, 0.66 ) }
    dend_46 { pt3dadd( -12.6908, -457.693, -55.8711, 0.88 ) }
    dend_46 { pt3dadd( -12.4418, -458.569, -55.8134, 1.03 ) }
    dend_46 { pt3dadd( -12.3357, -459.315, -55.7204, 1.03 ) }
    dend_46 { pt3dadd( -12.3028, -460.201, -55.5344, 0.74 ) }
    dend_46 { pt3dadd( -12.3252, -461.447, -55.2043, 0.22 ) }
    dend_46 { pt3dadd( -12.3362, -462.244, -54.9459, 0.74 ) }
    dend_46 { pt3dadd( -12.3353, -462.319, -54.9163, 0.74 ) }
    dend_46 { pt3dadd( -12.3049, -463.036, -54.6078, 0.74 ) }
    dend_46 { pt3dadd( -12.3033, -463.102, -54.5782, 0.74 ) }
    dend_46 { pt3dadd( -12.3011, -463.947, -54.2166, 0.29 ) }
    dend_46 { pt3dadd( -12.3046, -464.555, -54.0132, 0.29 ) }
    dend_46 { pt3dadd( -12.2891, -465.345, -53.8093, 1.03 ) }
    dend_46 { pt3dadd( -12.2869, -466.157, -53.695, 1.4 ) }
    dend_46 { pt3dadd( -12.3033, -467.065, -53.6516, 0.52 ) }
    dend_46 { pt3dadd( -12.3474, -467.643, -53.6528, 0.29 ) }
    dend_46 { pt3dadd( -12.5485, -468.587, -53.7478, 0.37 ) }
    dend_46 { pt3dadd( -12.7672, -469.172, -53.8762, 0.66 ) }
    dend_46 { pt3dadd( -13.2577, -470.07, -54.225, 0.37 ) }
    dend_46 { pt3dadd( -13.557, -470.471, -54.4782, 0.96 ) }
    dend_46 { pt3dadd( -13.8767, -470.86, -54.7767, 0.96 ) }
    dend_46 { pt3dadd( -14.7405, -471.826, -55.5917, 0.37 ) }
    dend_46 { pt3dadd( -15.5817, -472.723, -56.4276, 0.74 ) }
    dend_46 { pt3dadd( -16.4742, -473.691, -57.398, 1.25 ) }
    dend_46 { pt3dadd( -17.9976, -475.429, -59.3047, 0.29 ) }
    dend_46 { pt3dadd( -18.501, -476.011, -59.9876, 0.29 ) }
    dend_46 { pt3dadd( -18.5373, -476.054, -60.0423, 0.29 ) }
    dend_46 { pt3dadd( -18.9937, -476.673, -60.8499, 0.88 ) }
    dend_46 { pt3dadd( -19.1765, -476.962, -61.2415, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_46 { pt3dadd( -19.5729, -477.8, -62.4263, 0.52 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 1/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -23.2471, -440.244, -50.4977, 0.44 ) }
    dend_45 { pt3dadd( -22.4384, -441.286, -51.341, 0.44 ) }
    dend_45 { pt3dadd( -21.4367, -442.59, -52.3361, 0.44 ) }
    dend_45 { pt3dadd( -21.3785, -442.671, -52.3908, 0.44 ) }
    dend_45 { pt3dadd( -20.9708, -443.246, -52.7638, 0.29 ) }
    dend_45 { pt3dadd( -20.465, -443.934, -53.219, 0.81 ) }
    dend_45 { pt3dadd( -19.8784, -444.688, -53.7428, 1.11 ) }
    dend_45 { pt3dadd( -19.8302, -444.75, -53.7801, 1.11 ) }
    dend_45 { pt3dadd( -19.1579, -445.659, -54.3209, 0.44 ) }
    dend_45 { pt3dadd( -19.1079, -445.731, -54.3632, 0.44 ) }
    dend_45 { pt3dadd( -18.5159, -446.648, -54.8977, 0.37 ) }
    dend_45 { pt3dadd( -18.114, -447.33, -55.2629, 0.37 ) }
    dend_45 { pt3dadd( -17.4821, -448.518, -55.8432, 0.29 ) }
    dend_45 { pt3dadd( -17.1299, -449.204, -56.1855, 0.74 ) }
    dend_45 { pt3dadd( -16.9268, -449.603, -56.3922, 0.81 ) }
    dend_45 { pt3dadd( -16.8448, -449.775, -56.4902, 0.81 ) }
    dend_45 { pt3dadd( -16.4021, -450.747, -57.0858, 0.44 ) }
    dend_45 { pt3dadd( -16.0146, -451.589, -57.646, 0.29 ) }
    dend_45 { pt3dadd( -15.5743, -452.46, -58.3028, 0.52 ) }
    dend_45 { pt3dadd( -15.316, -452.926, -58.69, 0.52 ) }
    dend_45 { pt3dadd( -14.666, -454.119, -59.7438, 0.29 ) }
    dend_45 { pt3dadd( -14.2474, -454.971, -60.5392, 0.59 ) }
    dend_45 { pt3dadd( -14.2221, -455.04, -60.6071, 0.59 ) }
    dend_45 { pt3dadd( -14.1019, -455.514, -61.0287, 0.59 ) }
    dend_45 { pt3dadd( -14.0879, -455.587, -61.091, 0.59 ) }
    dend_45 { pt3dadd( -13.8951, -457.032, -62.265, 0.81 ) }
    dend_45 { pt3dadd( -13.8325, -457.859, -62.9053, 1.03 ) }
    dend_45 { pt3dadd( -13.8243, -459.059, -63.8369, 0.59 ) }
    dend_45 { pt3dadd( -13.8485, -460.376, -64.8474, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 30/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -92.7631, -135.916, 26.1074, 0.37 ) }
    dend_39 { pt3dadd( -96.3286, -142.001, 29.41, 0.37 ) }
    dend_39 { pt3dadd( -101.57, -146.754, 32.5738, 0.37 ) }
    dend_39 { pt3dadd( -107.749, -150.291, 35.5637, 0.37 ) }
    dend_39 { pt3dadd( -112.935, -154.737, 39.2026, 0.37 ) }
    dend_39 { pt3dadd( -118.019, -159.053, 43.1215, 0.37 ) }
    dend_39 { pt3dadd( -122.843, -164.316, 46.1757, 0.37 ) }
    dend_39 { pt3dadd( -126.881, -170.251, 49.1898, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 38/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -92.7631, -135.916, 26.1074, 0.29 ) }
    dend_36 { pt3dadd( -97.2906, -143.208, 30.2356, 0.37 ) }
    dend_36 { pt3dadd( -100.979, -151.283, 33.7651, 0.37 ) }
    dend_36 { pt3dadd( -104.656, -159.706, 36.4312, 0.37 ) }
    dend_36 { pt3dadd( -108.508, -167.563, 40.244, 0.37 ) }
    dend_36 { pt3dadd( -113.595, -175.245, 42.7299, 0.37 ) }
    dend_36 { pt3dadd( -118.3, -182.645, 46.46, 0.37 ) }
    dend_36 { pt3dadd( -122.634, -189.361, 51.596, 0.37 ) }
    dend_36 { pt3dadd( -127.07, -195.864, 56.903, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 47/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 73.3361, 134.332, 37.963, 0.29 ) }
    dend_8 { pt3dadd( 75.6494, 141.731, 40.7198, 0.29 ) }
    dend_8 { pt3dadd( 78.1745, 148.548, 44.5214, 0.29 ) }
    dend_8 { pt3dadd( 80.0077, 155.64, 48.2375, 0.29 ) }
    dend_8 { pt3dadd( 82.4542, 162.403, 52.1787, 0.29 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 52/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 73.3361, 134.332, 37.963, 0.44 ) }
    dend_7 { pt3dadd( 76.5309, 145.16, 41.337, 0.29 ) }
    dend_7 { pt3dadd( 78.3977, 156.36, 44.531, 0.29 ) }
    dend_7 { pt3dadd( 80.2566, 166.927, 49.3571, 0.29 ) }
    // Section: dend_90, id: dend_90, parent: dend_88 (entry count 56/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( -103.274, -186.052, 5.74052, 0.29 ) }
    dend_90 { pt3dadd( -110.118, -194.582, 3.07244, 0.29 ) }
    dend_90 { pt3dadd( -117.674, -201.9, -0.81794, 0.29 ) }
    dend_90 { pt3dadd( -124.764, -208.876, -5.9743, 0.29 ) }
    dend_90 { pt3dadd( -132.752, -216.244, -8.75328, 0.29 ) }
    dend_90 { pt3dadd( -140.627, -223.768, -11.4593, 0.29 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 62/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( -103.274, -186.052, 5.74052, 0.44 ) }
    dend_89 { pt3dadd( -107.911, -192.707, 3.72211, 0.29 ) }
    dend_89 { pt3dadd( -112.122, -199.552, 1.39628, 0.29 ) }
    dend_89 { pt3dadd( -115.35, -206.988, -0.768171, 0.29 ) }
    dend_89 { pt3dadd( -118.919, -214.407, -2.3622, 0.29 ) }
    dend_89 { pt3dadd( -122.391, -221.97, -3.42395, 0.29 ) }
    // Section: dend_86, id: dend_86, parent: dend_72 (entry count 68/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( -106.624, -126.928, 36.6518, 0.22 ) }
    dend_86 { pt3dadd( -105.658, -125.912, 37.3575, 0.22 ) }
    dend_86 { pt3dadd( -105.211, -125.466, 37.6627, 0.52 ) }
    dend_86 { pt3dadd( -104.873, -125.169, 37.8604, 0.74 ) }
    dend_86 { pt3dadd( -103.768, -124.312, 38.4386, 0.37 ) }
    dend_86 { pt3dadd( -102.499, -123.391, 39.0296, 0.37 ) }
    dend_86 { pt3dadd( -102.03, -123.051, 39.2479, 0.37 ) }
    dend_86 { pt3dadd( -101.825, -122.92, 39.3295, 0.37 ) }
    dend_86 { pt3dadd( -100.829, -122.338, 39.722, 0.37 ) }
    dend_86 { pt3dadd( -100.356, -122.095, 39.8881, 0.88 ) }
    dend_86 { pt3dadd( -99.6129, -121.792, 40.0276, 0.88 ) }
    dend_86 { pt3dadd( -90.868, -116.415, 45.7489, 0.88 ) }
    dend_86 { pt3dadd( -82.4125, -109.282, 49.8414, 0.88 ) }
    // Section: dend_73, id: dend_73, parent: dend_72 (entry count 81/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -106.624, -126.928, 36.6518, 0.44 ) }
    dend_73 { pt3dadd( -106.675, -125.459, 36.3529, 0.44 ) }
    dend_73 { pt3dadd( -106.668, -124.037, 36.0867, 0.37 ) }
    dend_73 { pt3dadd( -106.665, -123.971, 36.0779, 0.37 ) }
    dend_73 { pt3dadd( -106.643, -122.811, 35.9624, 0.37 ) }
    dend_73 { pt3dadd( -106.646, -122.693, 35.9565, 0.37 ) }
    dend_73 { pt3dadd( -106.721, -121.264, 35.9248, 0.37 ) }
    dend_73 { pt3dadd( -106.727, -121.187, 35.9298, 0.37 ) }
    dend_73 { pt3dadd( -106.853, -120.237, 36.0261, 0.29 ) }
    dend_73 { pt3dadd( -107.042, -119.229, 36.1272, 0.29 ) }
    dend_73 { pt3dadd( -107.273, -118.306, 36.2217, 0.29 ) }
    dend_73 { pt3dadd( -107.342, -118.086, 36.2414, 0.66 ) }
    dend_73 { pt3dadd( -107.406, -117.924, 36.2477, 0.66 ) }
    dend_73 { pt3dadd( -107.627, -117.378, 36.2262, 0.66 ) }
    dend_73 { pt3dadd( -107.992, -116.517, 36.1113, 0.29 ) }
    dend_73 { pt3dadd( -108.159, -116.156, 36.0414, 0.44 ) }
    dend_73 { pt3dadd( -108.226, -116.024, 36.0104, 0.44 ) }
    dend_73 { pt3dadd( -108.593, -115.392, 35.8655, 0.37 ) }
    dend_73 { pt3dadd( -109.029, -114.702, 35.716, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_73 { pt3dadd( -109.069, -114.641, 35.7038, 0.37 ) }
    dend_73 { pt3dadd( -109.866, -113.521, 35.5044, 0.29 ) }
    dend_73 { pt3dadd( -110.34, -112.847, 35.3969, 0.44 ) }
    dend_73 { pt3dadd( -110.477, -112.646, 35.3742, 0.44 ) }
    dend_73 { pt3dadd( -110.912, -111.996, 35.3346, 0.44 ) }
    dend_73 { pt3dadd( -111.328, -111.35, 35.3086, 0.29 ) }
    dend_73 { pt3dadd( -111.414, -111.21, 35.3053, 0.29 ) }
    dend_73 { pt3dadd( -111.641, -110.8, 35.3061, 0.44 ) }
    dend_73 { pt3dadd( -111.886, -110.343, 35.3112, 0.44 ) }
    dend_73 { pt3dadd( -111.925, -110.265, 35.312, 0.44 ) }
    dend_73 { pt3dadd( -112.181, -109.716, 35.3112, 0.44 ) }
    dend_73 { pt3dadd( -112.415, -109.115, 35.3231, 0.44 ) }
    dend_73 { pt3dadd( -112.436, -109.041, 35.3244, 0.44 ) }
    dend_73 { pt3dadd( -112.579, -108.355, 35.3251, 0.37 ) }
    dend_73 { pt3dadd( -112.639, -108.02, 35.3182, 0.37 ) }
    dend_73 { pt3dadd( -112.769, -107.158, 35.2742, 0.44 ) }
    dend_73 { pt3dadd( -112.859, -106.395, 35.2221, 0.44 ) }
    dend_73 { pt3dadd( -112.934, -105.572, 35.0893, 0.44 ) }
    dend_73 { pt3dadd( -113.024, -104.429, 34.8393, 0.44 ) }
    dend_73 { pt3dadd( -113.115, -103.384, 34.564, 0.74 ) }
    dend_73 { pt3dadd( -113.253, -101.999, 34.1416, 0.81 ) }
    dend_73 { pt3dadd( -113.317, -101.436, 33.9409, 0.74 ) }
    dend_73 { pt3dadd( -113.569, -99.4812, 33.1283, 0.29 ) }
    dend_73 { pt3dadd( -113.578, -99.4208, 33.1006, 0.29 ) }
    dend_73 { pt3dadd( -113.634, -98.986, 32.8883, 0.29 ) }
    dend_73 { pt3dadd( -113.649, -98.8366, 32.8208, 0.29 ) }
    dend_73 { pt3dadd( -113.685, -98.4594, 32.6964, 0.44 ) }
    dend_73 { pt3dadd( -113.69, -98.3867, 32.6784, 0.44 ) }
    dend_73 { pt3dadd( -113.717, -97.8554, 32.5924, 0.44 ) }
    dend_73 { pt3dadd( -113.732, -96.9947, 32.4462, 0.88 ) }
    dend_73 { pt3dadd( -113.713, -95.786, 32.2329, 0.52 ) }
    dend_73 { pt3dadd( -113.689, -94.8443, 32.0668, 0.52 ) }
    dend_73 { pt3dadd( -113.666, -94.0865, 31.9196, 0.44 ) }
    dend_73 { pt3dadd( -113.653, -93.2549, 31.7483, 0.29 ) }
    dend_73 { pt3dadd( -113.649, -92.633, 31.6124, 0.59 ) }
    dend_73 { pt3dadd( -113.654, -92.3927, 31.5579, 0.59 ) }
    dend_73 { pt3dadd( -113.688, -91.7872, 31.4193, 0.59 ) }
    dend_73 { pt3dadd( -113.726, -91.1847, 31.2825, 0.29 ) }
    dend_73 { pt3dadd( -113.783, -90.3582, 31.1141, 0.29 ) }
    dend_73 { pt3dadd( -113.786, -90.2723, 31.0973, 0.29 ) }
    dend_73 { pt3dadd( -113.81, -89.6483, 30.9679, 0.59 ) }
    dend_73 { pt3dadd( -113.813, -89.5502, 30.9474, 0.59 ) }
    dend_73 { pt3dadd( -113.829, -88.8518, 30.8109, 0.66 ) }
    dend_73 { pt3dadd( -113.844, -88.0771, 30.672, 0.66 ) }
    dend_73 { pt3dadd( -113.85, -87.2544, 30.5247, 0.29 ) }
    dend_73 { pt3dadd( -113.853, -86.1042, 30.3214, 0.29 ) }
    dend_73 { pt3dadd( -113.851, -86.0178, 30.3066, 0.29 ) }
    dend_73 { pt3dadd( -113.807, -84.5493, 30.1105, 0.29 ) }
    dend_73 { pt3dadd( -113.803, -84.3821, 30.0943, 0.29 ) }
    dend_73 { pt3dadd( -113.786, -83.4334, 30.034, 0.52 ) }
    dend_73 { pt3dadd( -113.788, -83.2675, 30.0289, 0.52 ) }
    dend_73 { pt3dadd( -113.815, -82.2739, 30.0308, 0.81 ) }
    dend_73 { pt3dadd( -113.874, -81.3295, 30.0319, 0.52 ) }
    dend_73 { pt3dadd( -113.949, -80.5574, 30.0354, 0.52 ) }
    dend_73 { pt3dadd( -114.038, -79.8454, 30.0219, 0.74 ) }
    dend_73 { pt3dadd( -114.161, -79.0025, 29.9762, 0.88 ) }
    dend_73 { pt3dadd( -114.195, -78.6897, 29.9377, 0.88 ) }
    dend_73 { pt3dadd( -114.21, -77.708, 29.7112, 0.88 ) }
    dend_73 { pt3dadd( -114.202, -77.6348, 29.6878, 0.88 ) }
    dend_73 { pt3dadd( -114.095, -77.1273, 29.5049, 0.66 ) }
    dend_73 { pt3dadd( -113.878, -76.3476, 29.2586, 0.44 ) }
    dend_73 { pt3dadd( -113.517, -75.1756, 28.9848, 0.37 ) }
    dend_73 { pt3dadd( -113.173, -74.01, 28.7898, 0.29 ) }
    dend_73 { pt3dadd( -112.937, -73.2142, 28.6945, 0.29 ) }
    dend_73 { pt3dadd( -112.917, -73.1397, 28.6889, 0.29 ) }
    dend_73 { pt3dadd( -112.627, -71.7627, 28.6512, 0.29 ) }
    dend_73 { pt3dadd( -112.346, -70.0232, 28.6734, 0.29 ) }
    dend_73 { pt3dadd( -112.256, -68.9977, 28.7207, 0.37 ) }
    dend_73 { pt3dadd( -112.251, -68.833, 28.7281, 0.37 ) }
    dend_73 { pt3dadd( -112.251, -67.9705, 28.7344, 0.37 ) }
    dend_73 { pt3dadd( -112.247, -67.1174, 28.7305, 0.37 ) }
    dend_73 { pt3dadd( -112.246, -66.9627, 28.7261, 0.37 ) }
    dend_73 { pt3dadd( -112.268, -65.7857, 28.7117, 0.52 ) }
    dend_73 { pt3dadd( -112.318, -64.5854, 28.7135, 0.44 ) }
    dend_73 { pt3dadd( -112.393, -63.3209, 28.7266, 1.11 ) }
    dend_73 { pt3dadd( -112.484, -61.6285, 28.7543, 0.29 ) }
    dend_73 { pt3dadd( -112.488, -61.5411, 28.7591, 0.29 ) }
    dend_73 { pt3dadd( -112.518, -60.2317, 28.8575, 0.29 ) }
    dend_73 { pt3dadd( -112.516, -59.4891, 28.9223, 0.29 ) }
    dend_73 { pt3dadd( -112.515, -59.4248, 28.9279, 0.29 ) }
    dend_73 { pt3dadd( -112.466, -58.1046, 29.0193, 0.37 ) }
    dend_73 { pt3dadd( -112.369, -56.1462, 29.1005, 0.37 ) }
    dend_73 { pt3dadd( -112.265, -54.7593, 29.1436, 0.37 ) }
    dend_73 { pt3dadd( -112.143, -53.6518, 29.169, 0.81 ) }
    dend_73 { pt3dadd( -112.053, -52.9224, 29.1786, 1.03 ) }
    dend_73 { pt3dadd( -111.91, -51.6939, 29.1719, 0.29 ) }
    dend_73 { pt3dadd( -111.822, -50.8621, 29.1432, 0.29 ) }
    dend_73 { pt3dadd( -111.769, -50.3037, 29.091, 0.44 ) }
    dend_73 { pt3dadd( -111.765, -50.229, 29.084, 0.44 ) }
    dend_73 { pt3dadd( -111.76, -49.8267, 29.046, 0.44 ) }
    dend_73 { pt3dadd( -111.797, -48.8188, 28.988, 0.29 ) }
    dend_73 { pt3dadd( -111.808, -48.6671, 28.9841, 0.29 ) }
    dend_73 { pt3dadd( -111.938, -47.3986, 28.9792, 0.29 ) }
    dend_73 { pt3dadd( -111.948, -47.322, 28.9795, 0.29 ) }
    dend_73 { pt3dadd( -112.169, -45.9382, 28.9937, 0.29 ) }
    dend_73 { pt3dadd( -112.306, -45.1282, 29.0039, 0.66 ) }
    dend_73 { pt3dadd( -112.397, -44.5434, 29.0115, 0.74 ) }
    dend_73 { pt3dadd( -112.414, -44.3921, 29.0118, 0.74 ) }
    dend_73 { pt3dadd( -112.477, -42.9817, 28.9943, 0.29 ) }
    dend_73 { pt3dadd( -112.475, -42.8372, 28.9891, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_73 { pt3dadd( -112.431, -41.9672, 28.9191, 0.29 ) }
    dend_73 { pt3dadd( -112.389, -41.3621, 28.8502, 0.74 ) }
    dend_73 { pt3dadd( -112.295, -40.4044, 28.7348, 0.22 ) }
    dend_73 { pt3dadd( -112.112, -39.0265, 28.5624, 0.22 ) }
    dend_73 { pt3dadd( -111.863, -37.7761, 28.4036, 1.03 ) }
    dend_73 { pt3dadd( -111.576, -36.5185, 28.2429, 0.29 ) }
    dend_73 { pt3dadd( -111.517, -36.2826, 28.2129, 0.29 ) }
    dend_73 { pt3dadd( -111.178, -35.0083, 28.0519, 0.29 ) }
    dend_73 { pt3dadd( -111.111, -34.7752, 28.023, 0.29 ) }
    dend_73 { pt3dadd( -110.485, -32.788, 27.7844, 0.29 ) }
    dend_73 { pt3dadd( -110.422, -32.5895, 27.763, 0.29 ) }
    dend_73 { pt3dadd( -109.993, -31.2052, 27.5882, 0.29 ) }
    dend_73 { pt3dadd( -109.97, -31.1218, 27.5752, 0.29 ) }
    dend_73 { pt3dadd( -109.724, -30.0423, 27.3681, 0.44 ) }
    dend_73 { pt3dadd( -109.71, -29.9681, 27.3517, 0.44 ) }
    dend_73 { pt3dadd( -109.594, -29.0694, 27.1185, 0.44 ) }
    dend_73 { pt3dadd( -109.479, -28.1383, 26.8665, 0.74 ) }
    dend_73 { pt3dadd( -109.472, -28.0643, 26.8452, 0.74 ) }
    dend_73 { pt3dadd( -109.439, -27.6289, 26.722, 1.03 ) }
    dend_73 { pt3dadd( -109.405, -26.8215, 26.5107, 0.59 ) }
    dend_73 { pt3dadd( -109.419, -25.956, 26.4058, 0.29 ) }
    dend_73 { pt3dadd( -109.429, -25.7914, 26.4087, 0.29 ) }
    dend_73 { pt3dadd( -109.498, -25.2136, 26.4875, 0.29 ) }
    dend_73 { pt3dadd( -109.511, -25.1284, 26.5028, 0.29 ) }
    dend_73 { pt3dadd( -109.67, -24.2265, 26.6957, 0.88 ) }
    dend_73 { pt3dadd( -109.913, -22.9143, 26.9696, 0.88 ) }
    dend_73 { pt3dadd( -109.939, -22.7672, 26.996, 0.88 ) }
    dend_73 { pt3dadd( -110.039, -22.1516, 27.0884, 0.66 ) }
    dend_73 { pt3dadd( -110.106, -21.5401, 27.1952, 0.29 ) }
    dend_73 { pt3dadd( -110.148, -20.9045, 27.3108, 0.29 ) }
    dend_73 { pt3dadd( -110.178, -19.6808, 27.5237, 0.29 ) }
    dend_73 { pt3dadd( -110.168, -19.0644, 27.6137, 0.44 ) }
    dend_73 { pt3dadd( -110.165, -18.9784, 27.6295, 0.44 ) }
    dend_73 { pt3dadd( -110.105, -17.7021, 27.9895, 0.37 ) }
    dend_73 { pt3dadd( -110.086, -16.8363, 28.2689, 0.29 ) }
    dend_73 { pt3dadd( -110.088, -16.7628, 28.2922, 0.29 ) }
    dend_73 { pt3dadd( -110.125, -16.167, 28.4727, 0.74 ) }
    dend_73 { pt3dadd( -110.133, -16.1055, 28.487, 0.74 ) }
    dend_73 { pt3dadd( -110.422, -14.5279, 28.7629, 0.29 ) }
    dend_73 { pt3dadd( -110.75, -13.0972, 28.9025, 0.29 ) }
    dend_73 { pt3dadd( -111.037, -11.8985, 29.0145, 0.22 ) }
    dend_73 { pt3dadd( -111.095, -11.6674, 29.036, 0.22 ) }
    dend_73 { pt3dadd( -111.506, -10.0876, 29.1591, 0.29 ) }
    dend_73 { pt3dadd( -111.528, -10.0031, 29.164, 0.29 ) }
    dend_73 { pt3dadd( -111.878, -8.64186, 29.1908, 0.29 ) }
    dend_73 { pt3dadd( -112.168, -7.48443, 29.2559, 0.29 ) }
    dend_73 { pt3dadd( -112.454, -6.29296, 29.3693, 0.74 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 47/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -170.874, -172.09, 34.4806, 0.37 ) }
    dend_71 { pt3dadd( -170.893, -172.875, 34.3161, 0.37 ) }
    dend_71 { pt3dadd( -171.046, -174.52, 33.9579, 0.37 ) }
    dend_71 { pt3dadd( -171.219, -175.897, 33.6953, 0.29 ) }
    dend_71 { pt3dadd( -171.328, -176.718, 33.5229, 0.44 ) }
    dend_71 { pt3dadd( -171.44, -177.532, 33.3602, 0.44 ) }
    dend_71 { pt3dadd( -171.672, -179.131, 33.064, 0.29 ) }
    dend_71 { pt3dadd( -171.78, -179.715, 32.9585, 0.37 ) }
    dend_71 { pt3dadd( -171.983, -180.529, 32.8326, 0.37 ) }
    dend_71 { pt3dadd( -172.387, -182.19, 32.5118, 0.37 ) }
    dend_71 { pt3dadd( -172.561, -182.968, 32.3462, 0.37 ) }
    dend_71 { pt3dadd( -172.669, -183.524, 32.2287, 0.66 ) }
    dend_71 { pt3dadd( -172.685, -183.599, 32.2138, 0.66 ) }
    dend_71 { pt3dadd( -172.802, -184.101, 32.0928, 0.74 ) }
    dend_71 { pt3dadd( -173.154, -185.367, 31.725, 0.37 ) }
    dend_71 { pt3dadd( -173.42, -186.103, 31.5029, 0.37 ) }
    dend_71 { pt3dadd( -173.45, -186.183, 31.4699, 0.37 ) }
    dend_71 { pt3dadd( -173.682, -186.763, 31.1896, 0.37 ) }
    dend_71 { pt3dadd( -175.486, -197.788, 30.809, 0.37 ) }
    dend_71 { pt3dadd( -176.62, -208.831, 32.3573, 0.37 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 67/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -170.874, -172.09, 34.4806, 0.29 ) }
    dend_70 { pt3dadd( -172.051, -171.892, 34.3525, 0.29 ) }
    dend_70 { pt3dadd( -173.175, -171.713, 34.3619, 0.52 ) }
    dend_70 { pt3dadd( -174.776, -171.544, 34.4159, 0.44 ) }
    dend_70 { pt3dadd( -175.337, -171.539, 34.4469, 0.29 ) }
    dend_70 { pt3dadd( -176.383, -171.616, 34.4961, 0.29 ) }
    dend_70 { pt3dadd( -177.247, -171.687, 34.5583, 0.44 ) }
    dend_70 { pt3dadd( -179.354, -171.891, 34.7951, 0.29 ) }
    dend_70 { pt3dadd( -180.226, -171.983, 34.8762, 0.29 ) }
    dend_70 { pt3dadd( -181.486, -172.143, 34.9934, 0.29 ) }
    dend_70 { pt3dadd( -182.701, -172.276, 35.1502, 0.29 ) }
    dend_70 { pt3dadd( -183.992, -172.388, 35.3353, 0.29 ) }
    dend_70 { pt3dadd( -184.054, -172.394, 35.3445, 0.29 ) }
    dend_70 { pt3dadd( -185.157, -172.45, 35.452, 0.44 ) }
    dend_70 { pt3dadd( -186.791, -172.359, 35.6365, 0.44 ) }
    dend_70 { pt3dadd( -186.952, -172.331, 35.6548, 0.44 ) }
    dend_70 { pt3dadd( -187.85, -172.145, 35.7827, 0.66 ) }
    dend_70 { pt3dadd( -188.77, -172.069, 35.856, 0.66 ) }
    dend_70 { pt3dadd( -199.298, -171.764, 36.8437, 0.66 ) }
    dend_70 { pt3dadd( -209.322, -170.334, 39.9052, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 87/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 55.3034, -250.661, -38.8551, 0.52 ) }
    dend_64 { pt3dadd( 54.7823, -251.18, -38.6391, 0.52 ) }
    dend_64 { pt3dadd( 54.3774, -251.602, -38.4832, 0.29 ) }
    dend_64 { pt3dadd( 53.9498, -252.088, -38.3369, 0.22 ) }
    dend_64 { pt3dadd( 53.7355, -252.347, -38.2545, 0.52 ) }
    dend_64 { pt3dadd( 53.5453, -252.584, -38.176, 0.74 ) }
    dend_64 { pt3dadd( 53.3054, -252.889, -38.0746, 0.81 ) }
    dend_64 { pt3dadd( 53.0811, -253.173, -37.9818, 0.66 ) }
    dend_64 { pt3dadd( 52.7598, -253.584, -37.8638, 0.29 ) }
    dend_64 { pt3dadd( 52.4096, -254.105, -37.7231, 0.29 ) }
    dend_64 { pt3dadd( 52.3882, -254.14, -37.7142, 0.29 ) }
    dend_64 { pt3dadd( 52.322, -254.251, -37.6868, 0.66 ) }
    dend_64 { pt3dadd( 52.1312, -254.568, -37.6066, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_64 { pt3dadd( 51.8888, -254.958, -37.5086, 0.22 ) }
    dend_64 { pt3dadd( 51.676, -255.296, -37.4336, 0.22 ) }
    dend_64 { pt3dadd( 51.5748, -255.465, -37.4156, 0.52 ) }
    dend_64 { pt3dadd( 51.4521, -255.677, -37.3947, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 4/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 55.3034, -250.661, -38.8551, 1.18 ) }
    dend_63 { pt3dadd( 56.0655, -251.809, -38.7429, 1.18 ) }
    dend_63 { pt3dadd( 56.3682, -252.346, -38.6765, 1.4 ) }
    dend_63 { pt3dadd( 56.8434, -253.381, -38.4577, 0.37 ) }
    dend_63 { pt3dadd( 57.1334, -254.347, -38.1253, 0.44 ) }
    dend_63 { pt3dadd( 57.2554, -255.166, -37.7884, 0.66 ) }
    dend_63 { pt3dadd( 57.2777, -256.34, -37.1943, 0.66 ) }
    dend_63 { pt3dadd( 57.2062, -256.944, -36.8565, 0.66 ) }
    dend_63 { pt3dadd( 56.9567, -258.319, -36.0664, 0.59 ) }
    dend_63 { pt3dadd( 56.5658, -260.1, -35.033, 0.37 ) }
    dend_63 { pt3dadd( 56.3305, -261.154, -34.4248, 1.55 ) }
    dend_63 { pt3dadd( 55.9955, -263.042, -33.405, 0.37 ) }
    dend_63 { pt3dadd( 55.8742, -264.233, -32.8584, 0.44 ) }
    dend_63 { pt3dadd( 55.8793, -265.425, -32.4161, 0.44 ) }
    dend_63 { pt3dadd( 55.9637, -266.098, -32.2585, 0.88 ) }
    dend_63 { pt3dadd( 56.1096, -266.72, -32.1877, 1.03 ) }
    dend_63 { pt3dadd( 56.4238, -267.933, -32.1167, 0.37 ) }
    dend_63 { pt3dadd( 56.6483, -268.88, -32.1267, 0.37 ) }
    dend_63 { pt3dadd( 56.7418, -269.353, -32.1249, 0.88 ) }
    dend_63 { pt3dadd( 56.8507, -269.995, -32.1166, 0.96 ) }
    dend_63 { pt3dadd( 56.9883, -271.06, -32.0937, 0.96 ) }
    dend_63 { pt3dadd( 57.1446, -272.379, -32.0624, 0.29 ) }
    dend_63 { pt3dadd( 57.3457, -273.722, -31.9395, 0.29 ) }
    dend_63 { pt3dadd( 57.4343, -274.203, -31.867, 0.66 ) }
    dend_63 { pt3dadd( 57.5555, -274.753, -31.725, 0.88 ) }
    dend_63 { pt3dadd( 57.576, -274.835, -31.6968, 0.88 ) }
    dend_63 { pt3dadd( 57.7664, -275.501, -31.4117, 0.74 ) }
    dend_63 { pt3dadd( 58.1959, -277.168, -30.5897, 0.29 ) }
    dend_63 { pt3dadd( 58.3736, -278.054, -30.1407, 0.29 ) }
    dend_63 { pt3dadd( 58.6414, -279.238, -29.6061, 1.11 ) }
    dend_63 { pt3dadd( 58.8171, -279.82, -29.3839, 1.11 ) }
    dend_63 { pt3dadd( 58.8473, -279.899, -29.36, 1.11 ) }
    dend_63 { pt3dadd( 59.1444, -280.577, -29.2228, 1.11 ) }
    dend_63 { pt3dadd( 59.958, -282.137, -28.9828, 0.29 ) }
    dend_63 { pt3dadd( 60.6941, -283.45, -28.7872, 0.29 ) }
    dend_63 { pt3dadd( 61.3328, -284.597, -28.6185, 0.29 ) }
    dend_63 { pt3dadd( 61.6776, -285.24, -28.5078, 0.81 ) }
    dend_63 { pt3dadd( 62.0727, -286.025, -28.3267, 0.96 ) }
    dend_63 { pt3dadd( 62.844, -287.538, -27.7666, 0.96 ) }
    dend_63 { pt3dadd( 63.2702, -288.432, -27.3354, 0.37 ) }
    dend_63 { pt3dadd( 63.6403, -289.323, -26.8362, 0.88 ) }
    dend_63 { pt3dadd( 63.9012, -290.047, -26.4085, 0.88 ) }
    dend_63 { pt3dadd( 64.3653, -291.489, -25.5584, 0.59 ) }
    dend_63 { pt3dadd( 64.9136, -293.447, -24.4814, 0.44 ) }
    dend_63 { pt3dadd( 65.1039, -294.228, -24.1215, 0.59 ) }
    dend_63 { pt3dadd( 65.2296, -294.863, -23.8733, 0.59 ) }
    dend_63 { pt3dadd( 65.376, -295.875, -23.5824, 0.88 ) }
    dend_63 { pt3dadd( 65.4872, -296.79, -23.4266, 0.29 ) }
    dend_63 { pt3dadd( 65.5953, -297.859, -23.3549, 0.29 ) }
    dend_63 { pt3dadd( 65.7143, -298.968, -23.3082, 0.37 ) }
    dend_63 { pt3dadd( 65.8815, -300.176, -23.2136, 0.96 ) }
    dend_63 { pt3dadd( 66.018, -301.05, -23.1197, 1.33 ) }
    dend_63 { pt3dadd( 66.2815, -302.497, -22.8596, 0.37 ) }
    dend_63 { pt3dadd( 66.4658, -303.535, -22.6068, 0.52 ) }
    dend_63 { pt3dadd( 66.6811, -304.879, -22.2065, 0.44 ) }
    dend_63 { pt3dadd( 66.7894, -305.587, -21.9706, 0.29 ) }
    dend_63 { pt3dadd( 66.9169, -306.351, -21.7048, 0.88 ) }
    dend_63 { pt3dadd( 67.1218, -307.707, -21.2334, 0.74 ) }
    dend_63 { pt3dadd( 67.2763, -308.595, -20.8962, 0.29 ) }
    dend_63 { pt3dadd( 67.4784, -309.42, -20.6027, 0.59 ) }
    dend_63 { pt3dadd( 67.7144, -310.311, -20.3107, 0.74 ) }
    dend_63 { pt3dadd( 67.9182, -311.032, -20.0389, 0.88 ) }
    dend_63 { pt3dadd( 67.9415, -311.12, -20.0036, 0.88 ) }
    dend_63 { pt3dadd( 68.2994, -312.932, -19.282, 0.52 ) }
    dend_63 { pt3dadd( 68.3632, -313.648, -18.9609, 0.52 ) }
    dend_63 { pt3dadd( 68.3174, -314.721, -18.3976, 0.52 ) }
    dend_63 { pt3dadd( 68.1943, -315.831, -17.7999, 0.96 ) }
    dend_63 { pt3dadd( 68.1238, -316.407, -17.4493, 1.33 ) }
    dend_63 { pt3dadd( 68.0496, -317.225, -16.9201, 0.59 ) }
    dend_63 { pt3dadd( 67.9675, -318.267, -16.2547, 0.37 ) }
    dend_63 { pt3dadd( 67.945, -319.758, -15.3107, 0.44 ) }
    dend_63 { pt3dadd( 67.9942, -320.64, -14.8079, 0.66 ) }
    dend_63 { pt3dadd( 68.1741, -322.27, -14.04, 0.96 ) }
    dend_63 { pt3dadd( 68.4361, -323.922, -13.3449, 0.44 ) }
    dend_63 { pt3dadd( 68.5961, -324.768, -13.0367, 1.03 ) }
    dend_63 { pt3dadd( 68.8288, -325.775, -12.7507, 1.18 ) }
    dend_63 { pt3dadd( 69.1432, -327.159, -12.521, 0.29 ) }
    dend_63 { pt3dadd( 69.403, -328.482, -12.4549, 0.29 ) }
    dend_63 { pt3dadd( 69.4355, -328.679, -12.47, 0.88 ) }
    dend_63 { pt3dadd( 69.4924, -329.152, -12.5326, 1.25 ) }
    dend_63 { pt3dadd( 69.5835, -330.129, -12.6267, 0.66 ) }
    dend_63 { pt3dadd( 69.6457, -331.203, -12.6858, 0.59 ) }
    dend_63 { pt3dadd( 69.6924, -332.694, -12.7098, 0.52 ) }
    dend_63 { pt3dadd( 69.6872, -333.579, -12.7016, 0.52 ) }
    dend_63 { pt3dadd( 69.6629, -334.85, -12.6653, 0.52 ) }
    dend_63 { pt3dadd( 69.6386, -336.049, -12.5716, 0.37 ) }
    dend_63 { pt3dadd( 69.5909, -337.159, -12.4936, 0.29 ) }
    dend_63 { pt3dadd( 69.5765, -337.599, -12.4732, 0.74 ) }
    dend_63 { pt3dadd( 69.5737, -337.86, -12.4718, 0.74 ) }
    dend_63 { pt3dadd( 69.5799, -338.583, -12.5182, 0.74 ) }
    dend_63 { pt3dadd( 69.6179, -339.748, -12.681, 0.81 ) }
    dend_63 { pt3dadd( 69.6514, -341.534, -13.0712, 0.81 ) }
    dend_63 { pt3dadd( 69.7044, -342.694, -13.3633, 0.81 ) }
    dend_63 { pt3dadd( 69.8012, -343.979, -13.7026, 0.81 ) }
    dend_63 { pt3dadd( 69.8091, -344.062, -13.7247, 0.81 ) }
    dend_63 { pt3dadd( 69.9403, -345.188, -14.0238, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_63 { pt3dadd( 70.1398, -346.591, -14.3943, 0.44 ) }
    dend_63 { pt3dadd( 70.3111, -347.49, -14.5675, 0.44 ) }
    dend_63 { pt3dadd( 70.5455, -348.52, -14.7383, 0.29 ) }
    dend_63 { pt3dadd( 70.7552, -349.393, -14.8443, 0.74 ) }
    dend_63 { pt3dadd( 70.8654, -349.916, -14.8876, 0.96 ) }
    dend_63 { pt3dadd( 70.8801, -350.002, -14.886, 0.96 ) }
    dend_63 { pt3dadd( 70.9752, -350.901, -14.7891, 0.52 ) }
    dend_63 { pt3dadd( 71.0178, -352.225, -14.5319, 0.52 ) }
    dend_63 { pt3dadd( 71.0203, -353.464, -14.2095, 0.52 ) }
    dend_63 { pt3dadd( 71.0317, -354.284, -13.9741, 0.59 ) }
    dend_63 { pt3dadd( 71.1012, -355.694, -13.5615, 0.74 ) }
    dend_63 { pt3dadd( 71.1748, -356.467, -13.3382, 0.52 ) }
    dend_63 { pt3dadd( 71.3574, -357.886, -12.962, 0.37 ) }
    dend_63 { pt3dadd( 71.3716, -357.972, -12.9422, 0.37 ) }
    dend_63 { pt3dadd( 71.689, -359.259, -12.7368, 0.44 ) }
    dend_63 { pt3dadd( 71.9894, -360.175, -12.6774, 0.37 ) }
    dend_63 { pt3dadd( 72.2322, -360.813, -12.7187, 0.74 ) }
    dend_63 { pt3dadd( 72.6012, -361.784, -12.8317, 0.29 ) }
    dend_63 { pt3dadd( 72.6233, -361.853, -12.8432, 0.29 ) }
    dend_63 { pt3dadd( 72.7503, -362.314, -12.9153, 0.44 ) }
    dend_63 { pt3dadd( 72.7636, -362.385, -12.9248, 0.44 ) }
    dend_63 { pt3dadd( 72.8332, -363.026, -12.9971, 0.44 ) }
    dend_63 { pt3dadd( 72.94, -364.289, -13.1022, 0.22 ) }
    dend_63 { pt3dadd( 73.0423, -365.18, -13.1311, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_53 (entry count 24/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 17.9469, -185.513, -76.9026, 0.29 ) }
    dend_61 { pt3dadd( 17.5729, -184.995, -78.0581, 0.29 ) }
    dend_61 { pt3dadd( 17.5168, -184.928, -78.1987, 0.29 ) }
    dend_61 { pt3dadd( 17.2284, -184.597, -78.8298, 0.29 ) }
    dend_61 { pt3dadd( 16.4991, -183.733, -80.271, 0.29 ) }
    dend_61 { pt3dadd( 16.2496, -183.392, -80.8005, 0.59 ) }
    dend_61 { pt3dadd( 15.578, -182.344, -82.2583, 0.59 ) }
    dend_61 { pt3dadd( 15.2321, -181.682, -83.043, 0.37 ) }
    dend_61 { pt3dadd( 15.0694, -181.286, -83.463, 0.66 ) }
    dend_61 { pt3dadd( 14.9198, -180.837, -83.9122, 0.88 ) }
    dend_61 { pt3dadd( 14.4642, -179.201, -85.4651, 0.22 ) }
    dend_61 { pt3dadd( 14.3215, -178.566, -86.054, 0.44 ) }
    dend_61 { pt3dadd( 14.2233, -177.995, -86.5429, 0.59 ) }
    dend_61 { pt3dadd( 14.1281, -177.023, -87.435, 0.29 ) }
    dend_61 { pt3dadd( 14.0696, -176.183, -88.2654, 0.74 ) }
    dend_61 { pt3dadd( 14.0186, -175.217, -89.2986, 1.03 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 40/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 17.9469, -185.513, -76.9026, 0.52 ) }
    dend_54 { pt3dadd( 17.9952, -186.549, -78.3222, 0.52 ) }
    dend_54 { pt3dadd( 17.9914, -186.579, -78.3552, 0.52 ) }
    dend_54 { pt3dadd( 17.9363, -186.863, -78.6187, 0.52 ) }
    dend_54 { pt3dadd( 17.7269, -187.87, -79.4275, 1.33 ) }
    dend_54 { pt3dadd( 17.6422, -188.263, -79.7182, 1.77 ) }
    dend_54 { pt3dadd( 17.5262, -188.849, -80.0974, 0.66 ) }
    dend_54 { pt3dadd( 17.3555, -189.585, -80.4574, 0.66 ) }
    dend_54 { pt3dadd( 17.1745, -190.581, -80.9317, 0.66 ) }
    dend_54 { pt3dadd( 17.1258, -191.132, -81.1923, 0.88 ) }
    dend_54 { pt3dadd( 17.13, -191.278, -81.2547, 0.88 ) }
    dend_54 { pt3dadd( 17.2361, -192.184, -81.6342, 0.88 ) }
    dend_54 { pt3dadd( 17.2426, -192.22, -81.6491, 0.88 ) }
    dend_54 { pt3dadd( 17.5241, -193.332, -82.0905, 0.66 ) }
    dend_54 { pt3dadd( 17.811, -194.2, -82.447, 0.44 ) }
    dend_54 { pt3dadd( 18.0104, -194.725, -82.6891, 0.96 ) }
    dend_54 { pt3dadd( 18.3171, -195.47, -83.0601, 0.96 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 57/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -127.07, -195.864, 56.903, 0.29 ) }
    dend_38 { pt3dadd( -128.534, -201.331, 66.3514, 0.29 ) }
    dend_38 { pt3dadd( -130.504, -206.175, 76.028, 0.29 ) }
    dend_38 { pt3dadd( -132.756, -211.35, 85.4775, 0.29 ) }
    dend_38 { pt3dadd( -136.684, -218.669, 92.7903, 0.29 ) }
    dend_38 { pt3dadd( -139.671, -225.902, 100.612, 0.29 ) }
    dend_38 { pt3dadd( -142.317, -232.939, 108.72, 0.29 ) }
    dend_38 { pt3dadd( -145.049, -239.573, 117.119, 0.29 ) }
    dend_38 { pt3dadd( -147.587, -246.792, 125.109, 0.29 ) }
    dend_38 { pt3dadd( -149.858, -254.451, 132.784, 0.29 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 67/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -127.07, -195.864, 56.903, 0.44 ) }
    dend_37 { pt3dadd( -134.087, -203.038, 56.3201, 0.29 ) }
    dend_37 { pt3dadd( -142.128, -208.972, 55.6916, 0.29 ) }
    dend_37 { pt3dadd( -149.757, -215.43, 54.8519, 0.29 ) }
    dend_37 { pt3dadd( -156.659, -222.377, 52.5889, 0.29 ) }
    dend_37 { pt3dadd( -162.897, -229.296, 48.8083, 0.29 ) }
    dend_37 { pt3dadd( -168.759, -235.853, 43.9591, 0.29 ) }
    dend_37 { pt3dadd( -175.248, -241.324, 38.6515, 0.29 ) }
    dend_37 { pt3dadd( -182.588, -246.135, 33.8761, 0.29 ) }
    dend_37 { pt3dadd( -188.61, -252.788, 29.3593, 0.29 ) }
    dend_37 { pt3dadd( -194.172, -260.638, 26.3382, 0.29 ) }
    dend_37 { pt3dadd( -199.545, -269.105, 25.1326, 0.29 ) }
    dend_37 { pt3dadd( -205.53, -277.126, 26.2813, 0.29 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 80/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 82.4542, 162.403, 52.1787, 0.29 ) }
    dend_10 { pt3dadd( 84.013, 168.909, 54.668, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 82.4542, 162.403, 52.1787, 0.44 ) }
    dend_9 { pt3dadd( 84.7544, 169.617, 55.8545, 0.29 ) }
    dend_9 { pt3dadd( 87.4124, 176.45, 59.9607, 0.29 ) }
    dend_9 { pt3dadd( 89.698, 183.391, 64.1102, 0.29 ) }
    dend_9 { pt3dadd( 92.0861, 189.721, 69.055, 0.29 ) }
    dend_9 { pt3dadd( 93.0344, 196.702, 73.622, 0.29 ) }
    dend_9 { pt3dadd( 93.9152, 203.134, 78.9098, 0.29 ) }
    dend_9 { pt3dadd( 93.5881, 210.342, 83.204, 0.29 ) }
    dend_9 { pt3dadd( 92.8382, 217.222, 87.931, 0.29 ) }
    dend_9 { pt3dadd( 91.3337, 222.981, 93.7707, 0.29 ) }
    dend_9 { pt3dadd( 90.9043, 228.909, 99.6332, 0.29 ) }
    dend_9 { pt3dadd( 92.2807, 234.098, 106.009, 0.29 ) }
    // Section: dend_83, id: dend_83, parent: dend_73 (entry count 94/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -112.454, -6.29296, 29.3693, 0.22 ) }
    dend_83 { pt3dadd( -113.208, -6.29003, 29.413, 0.22 ) }
    dend_83 { pt3dadd( -114.455, -6.28514, 29.4851, 0.22 ) }
    dend_83 { pt3dadd( -115.001, -6.28299, 29.5167, 0.52 ) }
    dend_83 { pt3dadd( -115.336, -6.28168, 29.5361, 0.74 ) }
    dend_83 { pt3dadd( -122.426, -5.12199, 30.7619, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_83 { pt3dadd( -129.466, -4.41651, 32.5031, 0.74 ) }
    dend_83 { pt3dadd( -136.055, -2.83133, 35.1994, 0.74 ) }
    dend_83 { pt3dadd( -142.457, -2.31167, 38.6399, 0.74 ) }
    dend_83 { pt3dadd( -148.367, -0.552021, 42.5461, 0.74 ) }
    dend_83 { pt3dadd( -153.379, 0.928418, 47.6394, 0.74 ) }
    dend_83 { pt3dadd( -157.234, 2.64792, 53.6005, 0.74 ) }
    dend_83 { pt3dadd( -160.8, 4.96495, 59.5516, 0.74 ) }
    dend_83 { pt3dadd( -164.577, 7.88, 65.111, 0.74 ) }
    dend_83 { pt3dadd( -167.937, 10.0152, 71.2439, 0.74 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 9/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -112.454, -6.29296, 29.3693, 0.44 ) }
    dend_74 { pt3dadd( -112.466, -5.60234, 29.274, 0.44 ) }
    dend_74 { pt3dadd( -112.482, -5.10236, 29.196, 0.66 ) }
    dend_74 { pt3dadd( -112.487, -5.01039, 29.1801, 0.66 ) }
    dend_74 { pt3dadd( -112.504, -4.73293, 29.1301, 0.59 ) }
    dend_74 { pt3dadd( -112.537, -4.0977, 29.0114, 0.29 ) }
    dend_74 { pt3dadd( -112.564, -3.08212, 28.8152, 0.29 ) }
    dend_74 { pt3dadd( -112.567, -2.97481, 28.7977, 0.29 ) }
    dend_74 { pt3dadd( -112.59, -2.22031, 28.6984, 0.52 ) }
    dend_74 { pt3dadd( -112.592, -2.16291, 28.6922, 0.52 ) }
    dend_74 { pt3dadd( -112.607, -1.3798, 28.6202, 0.52 ) }
    dend_74 { pt3dadd( -112.607, -0.423832, 28.5476, 1.03 ) }
    dend_74 { pt3dadd( -112.566, 0.752375, 28.4854, 0.29 ) }
    dend_74 { pt3dadd( -112.564, 0.803236, 28.4833, 0.29 ) }
    dend_74 { pt3dadd( -112.495, 1.49372, 28.4792, 0.29 ) }
    dend_74 { pt3dadd( -112.417, 1.97833, 28.4806, 0.52 ) }
    dend_74 { pt3dadd( -112.311, 2.47066, 28.4876, 0.52 ) }
    dend_74 { pt3dadd( -112.164, 3.00206, 28.4862, 0.96 ) }
    dend_74 { pt3dadd( -112.151, 3.04194, 28.4847, 0.96 ) }
    dend_74 { pt3dadd( -111.77, 4.23973, 28.4362, 0.29 ) }
    dend_74 { pt3dadd( -111.46, 5.23565, 28.3927, 0.29 ) }
    dend_74 { pt3dadd( -111.445, 5.29115, 28.3895, 0.29 ) }
    dend_74 { pt3dadd( -111.254, 6.20513, 28.3138, 0.29 ) }
    dend_74 { pt3dadd( -111.218, 6.50957, 28.275, 0.59 ) }
    dend_74 { pt3dadd( -111.212, 6.66052, 28.2506, 0.59 ) }
    dend_74 { pt3dadd( -111.252, 7.06078, 28.1651, 0.52 ) }
    dend_74 { pt3dadd( -111.327, 7.48209, 28.0739, 0.66 ) }
    dend_74 { pt3dadd( -111.41, 7.92618, 27.9775, 0.66 ) }
    dend_74 { pt3dadd( -111.554, 8.61251, 27.8273, 0.29 ) }
    dend_74 { pt3dadd( -111.573, 8.71824, 27.8109, 0.29 ) }
    dend_74 { pt3dadd( -111.645, 9.17958, 27.7621, 0.29 ) }
    dend_74 { pt3dadd( -111.691, 9.54834, 27.7697, 0.52 ) }
    dend_74 { pt3dadd( -111.696, 9.59724, 27.7748, 0.52 ) }
    dend_74 { pt3dadd( -111.734, 10.3042, 27.8849, 0.37 ) }
    dend_74 { pt3dadd( -111.751, 11.158, 28.051, 0.59 ) }
    dend_74 { pt3dadd( -111.743, 11.5783, 28.1339, 0.96 ) }
    dend_74 { pt3dadd( -111.691, 12.7517, 28.3723, 0.37 ) }
    dend_74 { pt3dadd( -111.685, 12.8214, 28.3885, 0.37 ) }
    dend_74 { pt3dadd( -111.586, 13.6227, 28.5806, 0.37 ) }
    dend_74 { pt3dadd( -111.578, 13.6713, 28.5926, 0.37 ) }
    dend_74 { pt3dadd( -111.465, 14.2291, 28.7061, 0.37 ) }
    dend_74 { pt3dadd( -111.439, 14.3837, 28.722, 0.37 ) }
    dend_74 { pt3dadd( -111.328, 15.4749, 28.6855, 0.59 ) }
    dend_74 { pt3dadd( -111.317, 15.6763, 28.6719, 0.88 ) }
    dend_74 { pt3dadd( -111.315, 15.7269, 28.6663, 0.88 ) }
    dend_74 { pt3dadd( -111.301, 16.1368, 28.6093, 0.88 ) }
    dend_74 { pt3dadd( -111.239, 17.6129, 28.3559, 0.29 ) }
    dend_74 { pt3dadd( -111.151, 18.8806, 28.0621, 0.29 ) }
    dend_74 { pt3dadd( -111.135, 19.0589, 28.0115, 0.29 ) }
    dend_74 { pt3dadd( -111.003, 20.5154, 27.6274, 0.29 ) }
    dend_74 { pt3dadd( -110.99, 20.719, 27.577, 0.29 ) }
    dend_74 { pt3dadd( -110.948, 21.69, 27.3492, 0.37 ) }
    dend_74 { pt3dadd( -110.938, 22.8974, 27.0904, 0.37 ) }
    dend_74 { pt3dadd( -110.964, 23.4981, 27.005, 0.37 ) }
    dend_74 { pt3dadd( -111.051, 24.432, 26.932, 0.29 ) }
    dend_74 { pt3dadd( -111.201, 25.3587, 26.9075, 0.29 ) }
    dend_74 { pt3dadd( -111.222, 25.465, 26.91, 0.29 ) }
    dend_74 { pt3dadd( -111.369, 25.9486, 26.9744, 0.29 ) }
    dend_74 { pt3dadd( -111.819, 27.1007, 27.2927, 1.18 ) }
    dend_74 { pt3dadd( -111.908, 27.3263, 27.362, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 69/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 18.3171, -195.47, -83.0601, 0.88 ) }
    dend_56 { pt3dadd( 17.9856, -196.363, -83.5959, 0.88 ) }
    dend_56 { pt3dadd( 17.7617, -197.006, -83.9337, 1.47 ) }
    dend_56 { pt3dadd( 17.5722, -197.644, -84.2271, 1.69 ) }
    dend_56 { pt3dadd( 17.2538, -198.968, -84.7512, 0.59 ) }
    dend_56 { pt3dadd( 17.2454, -199.013, -84.7687, 0.59 ) }
    dend_56 { pt3dadd( 17.1209, -199.835, -85.0755, 0.29 ) }
    dend_56 { pt3dadd( 17.0612, -200.49, -85.2905, 0.44 ) }
    dend_56 { pt3dadd( 17.0541, -201.065, -85.5163, 0.66 ) }
    dend_56 { pt3dadd( 17.1024, -201.693, -85.8472, 1.11 ) }
    dend_56 { pt3dadd( 17.1859, -202.308, -86.1983, 1.47 ) }
    dend_56 { pt3dadd( 17.2254, -202.62, -86.3903, 1.47 ) }
    dend_56 { pt3dadd( 17.2308, -202.67, -86.4225, 1.47 ) }
    dend_56 { pt3dadd( 17.3143, -204.128, -87.3271, 1.11 ) }
    dend_56 { pt3dadd( 17.2772, -205.446, -88.0538, 0.59 ) }
    dend_56 { pt3dadd( 17.2294, -206.127, -88.3562, 0.81 ) }
    dend_56 { pt3dadd( 17.1763, -206.76, -88.5694, 1.11 ) }
    dend_56 { pt3dadd( 17.1315, -207.414, -88.729, 1.25 ) }
    dend_56 { pt3dadd( 17.0724, -208.378, -88.8758, 0.66 ) }
    dend_56 { pt3dadd( 17.0003, -209.481, -88.9151, 0.52 ) }
    dend_56 { pt3dadd( 16.9415, -210.535, -88.8981, 1.03 ) }
    dend_56 { pt3dadd( 16.921, -211.054, -88.9028, 1.25 ) }
    dend_56 { pt3dadd( 16.907, -212.147, -88.9389, 0.66 ) }
    dend_56 { pt3dadd( 16.9085, -212.475, -88.9676, 0.44 ) }
    dend_56 { pt3dadd( 16.9291, -212.901, -89.0272, 0.96 ) }
    dend_56 { pt3dadd( 16.9587, -213.274, -89.0974, 1.25 ) }
    dend_56 { pt3dadd( 17.0283, -214.235, -89.3163, 1.11 ) }
    dend_56 { pt3dadd( 17.0797, -214.995, -89.5162, 0.96 ) }
    dend_56 { pt3dadd( 17.1348, -215.823, -89.7142, 0.66 ) }
    dend_56 { pt3dadd( 17.1811, -216.692, -89.8858, 0.59 ) }
    dend_56 { pt3dadd( 17.1837, -216.751, -89.8953, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_56 { pt3dadd( 17.1841, -217.419, -89.9672, 0.59 ) }
    dend_56 { pt3dadd( 17.085, -218.308, -89.9952, 0.52 ) }
    dend_56 { pt3dadd( 16.8568, -219.163, -89.9758, 0.81 ) }
    dend_56 { pt3dadd( 16.576, -219.781, -89.9277, 1.03 ) }
    dend_56 { pt3dadd( 16.5272, -219.858, -89.921, 1.03 ) }
    dend_56 { pt3dadd( 16.1325, -220.414, -89.8671, 1.03 ) }
    dend_56 { pt3dadd( 15.522, -221.124, -89.785, 0.52 ) }
    dend_56 { pt3dadd( 15.1394, -221.502, -89.7321, 1.11 ) }
    dend_56 { pt3dadd( 14.6923, -221.897, -89.7231, 1.33 ) }
    dend_56 { pt3dadd( 14.6466, -221.935, -89.7217, 1.33 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 10/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 18.3171, -195.47, -83.0601, 0.52 ) }
    dend_55 { pt3dadd( 18.6203, -196.029, -82.2035, 0.52 ) }
    dend_55 { pt3dadd( 19.1291, -197.043, -80.5824, 0.29 ) }
    dend_55 { pt3dadd( 19.4308, -197.66, -79.637, 0.59 ) }
    dend_55 { pt3dadd( 19.592, -198.031, -79.0492, 0.96 ) }
    dend_55 { pt3dadd( 20.0735, -199.172, -77.2488, 0.22 ) }
    dend_55 { pt3dadd( 20.4133, -199.943, -76.0259, 0.59 ) }
    dend_55 { pt3dadd( 20.4316, -199.983, -75.9599, 0.59 ) }
    dend_55 { pt3dadd( 20.7186, -200.546, -75.0993, 0.52 ) }
    dend_55 { pt3dadd( 21.1085, -201.464, -73.8294, 0.37 ) }
    dend_55 { pt3dadd( 21.2744, -201.901, -73.3094, 0.81 ) }
    dend_55 { pt3dadd( 21.4291, -202.287, -72.9359, 0.96 ) }
    dend_55 { pt3dadd( 21.8519, -203.312, -72.0529, 0.37 ) }
    dend_55 { pt3dadd( 22.3393, -204.264, -71.3673, 0.37 ) }
    dend_55 { pt3dadd( 22.9165, -205.2, -70.8555, 0.44 ) }
    dend_55 { pt3dadd( 23.3188, -205.755, -70.6474, 0.44 ) }
    dend_55 { pt3dadd( 23.8698, -206.507, -70.3776, 0.22 ) }
    dend_55 { pt3dadd( 24.2736, -207.024, -70.1866, 0.44 ) }
    dend_55 { pt3dadd( 25.8382, -208.838, -69.4722, 0.37 ) }
    dend_55 { pt3dadd( 26.4752, -209.519, -69.181, 0.52 ) }
    dend_55 { pt3dadd( 27.1996, -210.248, -68.8461, 0.59 ) }
    dend_55 { pt3dadd( 28.0, -211.03, -68.413, 0.81 ) }
    dend_55 { pt3dadd( 28.7917, -211.809, -67.8991, 0.29 ) }
    dend_55 { pt3dadd( 29.4536, -212.462, -67.3622, 0.52 ) }
    dend_55 { pt3dadd( 29.7764, -212.788, -67.0207, 0.81 ) }
    dend_55 { pt3dadd( 30.1323, -213.081, -66.675, 1.11 ) }
    dend_55 { pt3dadd( 30.2956, -213.191, -66.5326, 1.11 ) }
    dend_55 { pt3dadd( 30.6426, -213.389, -66.2663, 0.96 ) }
    dend_55 { pt3dadd( 31.2457, -213.683, -65.7, 0.59 ) }
    dend_55 { pt3dadd( 32.1208, -214.038, -64.5811, 0.29 ) }
    dend_55 { pt3dadd( 32.5116, -214.204, -63.985, 0.52 ) }
    dend_55 { pt3dadd( 32.7964, -214.334, -63.4996, 0.66 ) }
    dend_55 { pt3dadd( 32.8315, -214.354, -63.4342, 0.66 ) }
    dend_55 { pt3dadd( 33.6382, -214.917, -61.7476, 0.52 ) }
    dend_55 { pt3dadd( 34.2076, -215.392, -60.4426, 0.74 ) }
    dend_55 { pt3dadd( 34.7521, -215.883, -59.1519, 0.22 ) }
    dend_55 { pt3dadd( 34.9087, -216.034, -58.8138, 0.74 ) }
    dend_55 { pt3dadd( 35.1996, -216.35, -58.2176, 0.81 ) }
    dend_55 { pt3dadd( 35.8715, -217.155, -56.9723, 0.22 ) }
    dend_55 { pt3dadd( 36.1, -217.461, -56.6306, 0.66 ) }
    dend_55 { pt3dadd( 36.3191, -217.78, -56.3282, 0.74 ) }
    dend_55 { pt3dadd( 36.8152, -218.635, -55.5999, 0.22 ) }
    dend_55 { pt3dadd( 37.2019, -219.439, -54.9577, 0.66 ) }
    dend_55 { pt3dadd( 37.3271, -219.739, -54.736, 0.81 ) }
    dend_55 { pt3dadd( 37.5305, -220.337, -54.3567, 0.52 ) }
    dend_55 { pt3dadd( 37.5478, -220.39, -54.3229, 0.52 ) }
    dend_55 { pt3dadd( 37.8202, -221.259, -53.8325, 0.22 ) }
    dend_55 { pt3dadd( 38.2025, -222.453, -53.2451, 0.74 ) }
    dend_55 { pt3dadd( 38.4806, -223.085, -53.006, 0.81 ) }
    dend_55 { pt3dadd( 38.5496, -223.216, -52.9611, 0.81 ) }
    dend_55 { pt3dadd( 38.9404, -223.832, -52.7809, 0.59 ) }
    dend_55 { pt3dadd( 39.4086, -224.403, -52.6874, 0.29 ) }
    dend_55 { pt3dadd( 39.9763, -225.006, -52.6714, 1.03 ) }
    dend_55 { pt3dadd( 40.8831, -225.984, -52.7581, 1.03 ) }
    dend_55 { pt3dadd( 41.0484, -226.18, -52.7861, 1.25 ) }
    dend_55 { pt3dadd( 41.6126, -226.989, -52.9132, 0.66 ) }
    dend_55 { pt3dadd( 42.4483, -228.44, -53.1498, 0.52 ) }
    dend_55 { pt3dadd( 42.8844, -229.397, -53.2826, 0.37 ) }
    dend_55 { pt3dadd( 43.1526, -230.185, -53.3871, 0.29 ) }
    dend_55 { pt3dadd( 43.3018, -230.976, -53.4668, 0.29 ) }
    dend_55 { pt3dadd( 43.4347, -232.36, -53.582, 0.29 ) }
    dend_55 { pt3dadd( 43.4569, -232.84, -53.6245, 0.81 ) }
    dend_55 { pt3dadd( 43.4745, -233.507, -53.6707, 1.03 ) }
    dend_55 { pt3dadd( 43.4826, -233.587, -53.6745, 1.03 ) }
    dend_55 { pt3dadd( 43.6969, -234.71, -53.699, 0.59 ) }
    dend_55 { pt3dadd( 43.9444, -235.772, -53.6487, 0.44 ) }
    dend_55 { pt3dadd( 44.2163, -236.968, -53.541, 0.88 ) }
    dend_55 { pt3dadd( 44.2898, -237.308, -53.4996, 1.25 ) }
    dend_55 { pt3dadd( 44.4061, -237.907, -53.3778, 1.55 ) }
    dend_55 { pt3dadd( 44.5494, -238.666, -53.1562, 0.29 ) }
    dend_55 { pt3dadd( 44.6645, -239.846, -52.5319, 0.29 ) }
    dend_55 { pt3dadd( 44.6809, -240.83, -51.8557, 0.29 ) }
    dend_55 { pt3dadd( 44.6786, -240.892, -51.8099, 0.29 ) }
    dend_55 { pt3dadd( 44.623, -241.853, -51.1022, 1.47 ) }
    dend_55 { pt3dadd( 44.5653, -242.687, -50.5024, 1.77 ) }
    dend_55 { pt3dadd( 44.4214, -244.868, -48.9404, 0.37 ) }
    dend_55 { pt3dadd( 44.373, -245.616, -48.402, 0.22 ) }
    dend_55 { pt3dadd( 44.2995, -246.599, -47.6732, 0.29 ) }
    dend_55 { pt3dadd( 44.2614, -247.06, -47.3543, 0.52 ) }
    dend_55 { pt3dadd( 44.2044, -247.69, -46.9862, 0.66 ) }
    dend_55 { pt3dadd( 44.196, -247.762, -46.9519, 0.66 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 91/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( -167.937, 10.0152, 71.2439, 0.37 ) }
    dend_85 { pt3dadd( -175.595, 12.3347, 76.837, 0.37 ) }
    dend_85 { pt3dadd( -183.923, 13.5543, 81.7578, 0.37 ) }
    dend_85 { pt3dadd( -191.068, 15.1665, 88.1992, 0.37 ) }
    dend_85 { pt3dadd( -198.664, 15.4349, 94.2987, 0.37 ) }
    dend_85 { pt3dadd( -207.263, 13.9817, 98.651, 0.37 ) }
    dend_85 { pt3dadd( -215.135, 12.6147, 104.233, 0.37 ) }
    dend_85 { pt3dadd( -222.43, 10.2192, 110.247, 0.37 ) }
    dend_85 { pt3dadd( -227.851, 6.54039, 117.492, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_85 { pt3dadd( -232.681, 0.526152, 123.568, 0.37 ) }
    dend_85 { pt3dadd( -237.338, -6.79733, 128.253, 0.37 ) }
    dend_85 { pt3dadd( -241.102, -14.2946, 133.447, 0.37 ) }
    dend_85 { pt3dadd( -244.823, -21.7747, 138.696, 0.37 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 4/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( -167.937, 10.0152, 71.2439, 0.29 ) }
    dend_84 { pt3dadd( -175.597, 12.5671, 76.4752, 0.37 ) }
    dend_84 { pt3dadd( -183.615, 15.1796, 81.1068, 0.37 ) }
    dend_84 { pt3dadd( -192.028, 16.8808, 85.4284, 0.37 ) }
    dend_84 { pt3dadd( -199.089, 20.159, 91.0989, 0.37 ) }
    dend_84 { pt3dadd( -205.475, 23.0346, 97.7016, 0.37 ) }
    dend_84 { pt3dadd( -212.258, 24.687, 104.306, 0.37 ) }
    dend_84 { pt3dadd( -220.147, 27.2539, 109.176, 0.37 ) }
    dend_84 { pt3dadd( -228.711, 30.6261, 112.019, 0.37 ) }
    // Section: dend_82, id: dend_82, parent: dend_74 (entry count 13/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -111.908, 27.3263, 27.362, 0.59 ) }
    dend_82 { pt3dadd( -110.657, 28.0324, 28.3514, 0.59 ) }
    dend_82 { pt3dadd( -110.601, 28.063, 28.3967, 0.59 ) }
    dend_82 { pt3dadd( -109.492, 28.7917, 29.2741, 0.29 ) }
    dend_82 { pt3dadd( -108.91, 29.2534, 29.6866, 0.29 ) }
    dend_82 { pt3dadd( -108.856, 29.2999, 29.723, 0.29 ) }
    dend_82 { pt3dadd( -107.678, 30.4218, 30.4126, 0.29 ) }
    dend_82 { pt3dadd( -107.642, 30.4642, 30.4292, 0.29 ) }
    dend_82 { pt3dadd( -106.638, 31.7048, 30.7995, 0.29 ) }
    dend_82 { pt3dadd( -105.499, 33.1161, 31.0787, 0.29 ) }
    dend_82 { pt3dadd( -105.404, 33.2303, 31.0954, 0.29 ) }
    dend_82 { pt3dadd( -104.369, 34.4077, 31.2399, 0.74 ) }
    dend_82 { pt3dadd( -103.478, 35.3625, 31.3652, 0.29 ) }
    dend_82 { pt3dadd( -103.223, 35.6097, 31.4281, 0.29 ) }
    dend_82 { pt3dadd( -101.916, 36.7576, 31.7809, 0.29 ) }
    dend_82 { pt3dadd( -101.292, 37.2566, 31.979, 0.29 ) }
    dend_82 { pt3dadd( -100.263, 38.0161, 32.3583, 0.29 ) }
    dend_82 { pt3dadd( -98.988, 38.829, 32.9623, 0.29 ) }
    dend_82 { pt3dadd( -97.8943, 39.4547, 33.5607, 0.88 ) }
    dend_82 { pt3dadd( -92.586, 47.041, 36.6671, 0.88 ) }
    dend_82 { pt3dadd( -88.7041, 54.8897, 41.0166, 0.88 ) }
    dend_82 { pt3dadd( -84.3381, 62.9045, 44.539, 0.88 ) }
    dend_82 { pt3dadd( -79.192, 70.5776, 47.7147, 0.88 ) }
    dend_82 { pt3dadd( -73.9034, 77.8093, 51.5706, 0.88 ) }
    dend_82 { pt3dadd( -69.2277, 85.6325, 55.1055, 0.88 ) }
    dend_82 { pt3dadd( -64.0282, 92.8789, 59.0554, 0.88 ) }
    dend_82 { pt3dadd( -57.9105, 99.1135, 63.3202, 0.88 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 40/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -111.908, 27.3263, 27.362, 0.59 ) }
    dend_75 { pt3dadd( -112.32, 28.3044, 27.4859, 0.59 ) }
    dend_75 { pt3dadd( -112.657, 29.1801, 27.6281, 0.59 ) }
    dend_75 { pt3dadd( -112.955, 30.0441, 27.8138, 0.37 ) }
    dend_75 { pt3dadd( -113.31, 31.1509, 28.0704, 0.29 ) }
    dend_75 { pt3dadd( -113.599, 32.198, 28.3628, 0.29 ) }
    dend_75 { pt3dadd( -113.618, 32.2713, 28.385, 0.29 ) }
    dend_75 { pt3dadd( -113.812, 33.1978, 28.7069, 0.29 ) }
    dend_75 { pt3dadd( -113.975, 34.0122, 29.0143, 0.66 ) }
    dend_75 { pt3dadd( -114.065, 34.5295, 29.1933, 0.81 ) }
    dend_75 { pt3dadd( -114.259, 35.6928, 29.4978, 0.29 ) }
    dend_75 { pt3dadd( -114.272, 35.7685, 29.5159, 0.29 ) }
    dend_75 { pt3dadd( -114.451, 36.7864, 29.6905, 0.29 ) }
    dend_75 { pt3dadd( -114.463, 36.855, 29.6965, 0.29 ) }
    dend_75 { pt3dadd( -114.632, 37.9602, 29.6969, 0.52 ) }
    dend_75 { pt3dadd( -114.758, 38.722, 29.6479, 0.74 ) }
    dend_75 { pt3dadd( -114.774, 38.7987, 29.6374, 0.74 ) }
    dend_75 { pt3dadd( -114.946, 39.5021, 29.5773, 0.74 ) }
    dend_75 { pt3dadd( -114.964, 39.5697, 29.5738, 0.74 ) }
    dend_75 { pt3dadd( -115.263, 40.54, 29.543, 0.29 ) }
    dend_75 { pt3dadd( -115.617, 41.5456, 29.5322, 0.29 ) }
    dend_75 { pt3dadd( -116.134, 42.8944, 29.5274, 0.29 ) }
    dend_75 { pt3dadd( -116.559, 44.0592, 29.5116, 0.29 ) }
    dend_75 { pt3dadd( -116.601, 44.1925, 29.5108, 0.29 ) }
    dend_75 { pt3dadd( -116.836, 45.3029, 29.496, 0.29 ) }
    dend_75 { pt3dadd( -116.846, 45.372, 29.4948, 0.29 ) }
    dend_75 { pt3dadd( -116.889, 46.5003, 29.4596, 0.29 ) }
    dend_75 { pt3dadd( -116.835, 48.2056, 29.3808, 0.29 ) }
    dend_75 { pt3dadd( -116.72, 50.4442, 29.2188, 0.29 ) }
    dend_75 { pt3dadd( -116.59, 52.489, 29.0644, 0.29 ) }
    dend_75 { pt3dadd( -116.582, 52.6262, 29.0563, 0.29 ) }
    dend_75 { pt3dadd( -116.503, 54.6681, 28.9581, 0.29 ) }
    dend_75 { pt3dadd( -116.499, 54.8149, 28.9521, 0.29 ) }
    dend_75 { pt3dadd( -116.526, 57.1908, 28.8666, 0.29 ) }
    dend_75 { pt3dadd( -116.53, 57.2699, 28.8635, 0.29 ) }
    dend_75 { pt3dadd( -116.77, 59.3927, 28.8064, 0.29 ) }
    dend_75 { pt3dadd( -116.784, 59.4706, 28.8042, 0.29 ) }
    dend_75 { pt3dadd( -117.213, 61.053, 28.7242, 0.29 ) }
    dend_75 { pt3dadd( -117.333, 61.4582, 28.6904, 0.74 ) }
    dend_75 { pt3dadd( -117.357, 61.5333, 28.6826, 0.74 ) }
    dend_75 { pt3dadd( -117.524, 62.0345, 28.6086, 0.59 ) }
    dend_75 { pt3dadd( -118.0, 63.2685, 28.2724, 0.29 ) }
    dend_75 { pt3dadd( -118.339, 64.0036, 28.0512, 0.88 ) }
    dend_75 { pt3dadd( -118.636, 64.437, 27.8854, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 14.6466, -221.935, -89.7217, 0.52 ) }
    dend_60 { pt3dadd( 13.7102, -222.858, -90.011, 0.52 ) }
    dend_60 { pt3dadd( 12.9934, -223.608, -90.237, 0.37 ) }
    dend_60 { pt3dadd( 12.3113, -224.347, -90.4128, 0.29 ) }
    dend_60 { pt3dadd( 11.7728, -224.905, -90.5419, 0.66 ) }
    dend_60 { pt3dadd( 11.2973, -225.389, -90.6536, 0.66 ) }
    dend_60 { pt3dadd( 11.2311, -225.455, -90.6694, 0.66 ) }
    dend_60 { pt3dadd( 10.7889, -225.91, -90.772, 0.59 ) }
    dend_60 { pt3dadd( 9.99969, -226.698, -90.9788, 0.29 ) }
    dend_60 { pt3dadd( 9.19167, -227.53, -91.2001, 0.29 ) }
    dend_60 { pt3dadd( 8.86838, -227.884, -91.2931, 0.66 ) }
    dend_60 { pt3dadd( 8.3672, -228.475, -91.4455, 0.96 ) }
    dend_60 { pt3dadd( 7.98826, -228.985, -91.5629, 1.18 ) }
    dend_60 { pt3dadd( 7.26582, -230.075, -91.8024, 0.29 ) }
    dend_60 { pt3dadd( 6.83987, -230.803, -91.9645, 0.29 ) }
    dend_60 { pt3dadd( 6.59574, -231.24, -92.0529, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_60 { pt3dadd( 6.49417, -231.387, -92.0675, 0.52 ) }
    dend_60 { pt3dadd( 6.02599, -231.91, -92.0692, 0.22 ) }
    dend_60 { pt3dadd( 5.54061, -232.312, -92.0377, 0.44 ) }
    dend_60 { pt3dadd( 5.03858, -232.626, -91.9519, 0.66 ) }
    dend_60 { pt3dadd( 4.36041, -232.995, -91.8432, 0.66 ) }
    dend_60 { pt3dadd( 2.72142, -233.844, -91.6237, 0.29 ) }
    dend_60 { pt3dadd( 2.25421, -234.094, -91.5722, 0.96 ) }
    dend_60 { pt3dadd( 1.77938, -234.374, -91.5265, 1.25 ) }
    dend_60 { pt3dadd( 0.238278, -235.45, -91.3759, 0.52 ) }
    dend_60 { pt3dadd( -0.649788, -236.19, -91.3111, 0.52 ) }
    dend_60 { pt3dadd( -1.3289, -236.843, -91.3007, 0.29 ) }
    dend_60 { pt3dadd( -1.88365, -237.428, -91.3626, 0.37 ) }
    dend_60 { pt3dadd( -2.46719, -238.032, -91.4643, 0.44 ) }
    dend_60 { pt3dadd( -2.89247, -238.417, -91.5808, 0.44 ) }
    dend_60 { pt3dadd( -3.56461, -238.937, -91.8532, 0.22 ) }
    dend_60 { pt3dadd( -3.97403, -239.173, -92.0249, 0.37 ) }
    dend_60 { pt3dadd( -4.70834, -239.481, -92.2782, 0.59 ) }
    dend_60 { pt3dadd( -5.71253, -239.804, -92.5788, 1.18 ) }
    dend_60 { pt3dadd( -6.69682, -240.073, -92.8, 0.74 ) }
    dend_60 { pt3dadd( -6.78651, -240.096, -92.8148, 0.74 ) }
    dend_60 { pt3dadd( -8.2633, -240.493, -92.9746, 0.37 ) }
    dend_60 { pt3dadd( -9.70784, -240.954, -93.0441, 0.29 ) }
    dend_60 { pt3dadd( -10.0738, -241.076, -93.0212, 0.59 ) }
    dend_60 { pt3dadd( -10.9918, -241.332, -92.8348, 0.74 ) }
    dend_60 { pt3dadd( -11.098, -241.355, -92.798, 0.74 ) }
    dend_60 { pt3dadd( -11.6734, -241.437, -92.5004, 0.74 ) }
    dend_60 { pt3dadd( -11.7312, -241.44, -92.4648, 0.74 ) }
    dend_60 { pt3dadd( -12.8147, -241.407, -91.775, 0.29 ) }
    dend_60 { pt3dadd( -14.0731, -241.323, -90.958, 0.59 ) }
    dend_60 { pt3dadd( -15.1361, -241.22, -90.2494, 0.96 ) }
    dend_60 { pt3dadd( -16.9833, -241.024, -88.9885, 0.59 ) }
    dend_60 { pt3dadd( -17.7437, -240.932, -88.4509, 0.29 ) }
    dend_60 { pt3dadd( -17.8106, -240.925, -88.4032, 0.29 ) }
    dend_60 { pt3dadd( -19.0461, -240.83, -87.4974, 0.88 ) }
    dend_60 { pt3dadd( -20.1529, -240.746, -86.64, 1.03 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 35/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 14.6466, -221.935, -89.7217, 0.52 ) }
    dend_57 { pt3dadd( 14.9825, -223.084, -90.6792, 0.52 ) }
    dend_57 { pt3dadd( 14.9962, -223.146, -90.7249, 0.52 ) }
    dend_57 { pt3dadd( 15.1545, -224.064, -91.3754, 0.66 ) }
    dend_57 { pt3dadd( 15.399, -226.072, -92.6987, 0.44 ) }
    dend_57 { pt3dadd( 15.5211, -227.558, -93.6713, 0.37 ) }
    dend_57 { pt3dadd( 15.5467, -228.369, -94.1818, 0.66 ) }
    dend_57 { pt3dadd( 15.5002, -229.273, -94.7017, 0.88 ) }
    dend_57 { pt3dadd( 15.3939, -230.287, -95.278, 0.88 ) }
    dend_57 { pt3dadd( 15.2481, -231.187, -95.7714, 0.88 ) }
    dend_57 { pt3dadd( 15.037, -232.418, -96.4127, 0.59 ) }
    dend_57 { pt3dadd( 14.8997, -233.553, -97.0066, 0.37 ) }
    dend_57 { pt3dadd( 14.8373, -234.752, -97.6628, 0.37 ) }
    dend_57 { pt3dadd( 14.8858, -236.059, -98.3947, 0.74 ) }
    dend_57 { pt3dadd( 14.9461, -236.627, -98.6996, 1.11 ) }
    dend_57 { pt3dadd( 15.2787, -238.639, -99.8282, 0.74 ) }
    dend_57 { pt3dadd( 15.4675, -239.595, -100.372, 0.44 ) }
    dend_57 { pt3dadd( 15.48, -239.662, -100.411, 0.44 ) }
    dend_57 { pt3dadd( 15.7081, -241.078, -101.204, 1.03 ) }
    dend_57 { pt3dadd( 15.7745, -241.829, -101.58, 1.33 ) }
    dend_57 { pt3dadd( 15.7411, -243.488, -102.336, 0.66 ) }
    dend_57 { pt3dadd( 15.5355, -244.968, -102.896, 0.66 ) }
    dend_57 { pt3dadd( 15.251, -246.424, -103.405, 0.88 ) }
    dend_57 { pt3dadd( 15.2357, -246.501, -103.427, 0.88 ) }
    dend_57 { pt3dadd( 14.9959, -247.645, -103.695, 1.11 ) }
    dend_57 { pt3dadd( 14.6488, -249.366, -104.025, 1.03 ) }
    dend_57 { pt3dadd( 14.3918, -250.659, -104.182, 0.52 ) }
    dend_57 { pt3dadd( 14.3783, -250.737, -104.197, 0.52 ) }
    dend_57 { pt3dadd( 14.1701, -252.049, -104.578, 0.88 ) }
    dend_57 { pt3dadd( 14.0375, -252.886, -104.876, 0.96 ) }
    dend_57 { pt3dadd( 13.9342, -253.622, -105.238, 0.96 ) }
    dend_57 { pt3dadd( 13.83, -254.364, -105.735, 0.66 ) }
    dend_57 { pt3dadd( 13.442, -256.408, -107.343, 0.44 ) }
    dend_57 { pt3dadd( 13.2824, -257.149, -107.958, 0.96 ) }
    dend_57 { pt3dadd( 13.1097, -257.814, -108.561, 1.25 ) }
    dend_57 { pt3dadd( 12.7482, -259.171, -109.834, 1.11 ) }
    dend_57 { pt3dadd( 12.4496, -260.34, -111.018, 0.74 ) }
    dend_57 { pt3dadd( 12.2891, -260.943, -111.675, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_75 (entry count 73/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -118.636, 64.437, 27.8854, 0.29 ) }
    dend_81 { pt3dadd( -119.685, 64.8232, 27.6336, 0.29 ) }
    dend_81 { pt3dadd( -119.749, 64.843, 27.6189, 0.29 ) }
    dend_81 { pt3dadd( -120.501, 65.1322, 27.3362, 0.29 ) }
    dend_81 { pt3dadd( -120.56, 65.1563, 27.3111, 0.29 ) }
    dend_81 { pt3dadd( -121.226, 65.4728, 27.0363, 0.66 ) }
    dend_81 { pt3dadd( -121.733, 65.7349, 26.8356, 0.81 ) }
    dend_81 { pt3dadd( -121.776, 65.7583, 26.8187, 0.81 ) }
    dend_81 { pt3dadd( -123.119, 66.4794, 26.4081, 0.29 ) }
    dend_81 { pt3dadd( -123.243, 66.5471, 26.3767, 0.29 ) }
    dend_81 { pt3dadd( -124.242, 67.1096, 26.1829, 0.29 ) }
    dend_81 { pt3dadd( -125.402, 67.7944, 26.0264, 0.29 ) }
    dend_81 { pt3dadd( -125.454, 67.825, 26.0232, 0.29 ) }
    dend_81 { pt3dadd( -126.544, 68.4405, 26.0357, 0.44 ) }
    dend_81 { pt3dadd( -126.596, 68.4697, 26.0426, 0.44 ) }
    dend_81 { pt3dadd( -127.014, 68.7164, 26.1035, 0.44 ) }
    dend_81 { pt3dadd( -127.063, 68.7474, 26.112, 0.44 ) }
    dend_81 { pt3dadd( -127.923, 69.3715, 26.278, 0.29 ) }
    dend_81 { pt3dadd( -128.022, 69.4541, 26.2891, 0.29 ) }
    dend_81 { pt3dadd( -128.64, 70.0578, 26.302, 0.29 ) }
    dend_81 { pt3dadd( -128.944, 70.3662, 26.3082, 0.59 ) }
    dend_81 { pt3dadd( -129.033, 70.4605, 26.3102, 0.59 ) }
    dend_81 { pt3dadd( -129.3, 70.7395, 26.3138, 0.59 ) }
    dend_81 { pt3dadd( -129.959, 71.4162, 26.316, 0.37 ) }
    dend_81 { pt3dadd( -130.057, 71.5109, 26.3154, 0.37 ) }
    dend_81 { pt3dadd( -130.569, 72.0317, 26.2711, 0.37 ) }
    dend_81 { pt3dadd( -130.61, 72.0759, 26.2656, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_81 { pt3dadd( -131.177, 72.6697, 26.1678, 0.37 ) }
    dend_81 { pt3dadd( -131.266, 72.7621, 26.1493, 0.37 ) }
    dend_81 { pt3dadd( -131.869, 73.3227, 26.0298, 0.37 ) }
    dend_81 { pt3dadd( -132.685, 74.0064, 25.876, 0.22 ) }
    dend_81 { pt3dadd( -132.794, 74.0841, 25.8586, 0.22 ) }
    dend_81 { pt3dadd( -133.415, 74.4666, 25.7803, 0.22 ) }
    dend_81 { pt3dadd( -133.469, 74.4937, 25.7762, 0.22 ) }
    dend_81 { pt3dadd( -134.23, 74.6835, 25.8475, 0.81 ) }
    dend_81 { pt3dadd( -134.5, 74.7108, 25.8991, 0.81 ) }
    dend_81 { pt3dadd( -135.264, 74.7217, 26.0602, 0.22 ) }
    dend_81 { pt3dadd( -135.323, 74.7186, 26.0705, 0.22 ) }
    dend_81 { pt3dadd( -135.986, 74.6375, 26.1945, 0.22 ) }
    dend_81 { pt3dadd( -137.837, 74.3694, 26.4962, 0.22 ) }
    dend_81 { pt3dadd( -137.962, 74.3501, 26.5143, 0.22 ) }
    dend_81 { pt3dadd( -138.854, 74.2128, 26.6349, 0.22 ) }
    dend_81 { pt3dadd( -139.703, 74.0811, 26.7392, 0.22 ) }
    dend_81 { pt3dadd( -140.99, 73.905, 26.8787, 0.22 ) }
    dend_81 { pt3dadd( -141.905, 73.8056, 26.9597, 0.22 ) }
    dend_81 { pt3dadd( -141.973, 73.8045, 26.9627, 0.22 ) }
    dend_81 { pt3dadd( -142.98, 73.9305, 27.0248, 0.52 ) }
    dend_81 { pt3dadd( -143.269, 74.0425, 27.0539, 0.81 ) }
    dend_81 { pt3dadd( -143.373, 74.1135, 27.0659, 0.81 ) }
    dend_81 { pt3dadd( -143.608, 74.3325, 27.0808, 0.81 ) }
    dend_81 { pt3dadd( -143.655, 74.3829, 27.0772, 0.81 ) }
    dend_81 { pt3dadd( -144.339, 75.1402, 26.9345, 0.37 ) }
    dend_81 { pt3dadd( -144.706, 75.5764, 26.8167, 0.59 ) }
    dend_81 { pt3dadd( -144.743, 75.6219, 26.8024, 0.59 ) }
    dend_81 { pt3dadd( -145.203, 76.2055, 26.6189, 0.44 ) }
    dend_81 { pt3dadd( -145.931, 77.2021, 26.1795, 0.29 ) }
    dend_81 { pt3dadd( -145.999, 77.2998, 26.1281, 0.29 ) }
    dend_81 { pt3dadd( -146.353, 77.8419, 25.7097, 0.29 ) }
    dend_81 { pt3dadd( -146.376, 77.8771, 25.6781, 0.29 ) }
    dend_81 { pt3dadd( -146.716, 78.397, 25.1771, 0.29 ) }
    dend_81 { pt3dadd( -147.226, 79.2692, 24.144, 0.29 ) }
    dend_81 { pt3dadd( -147.243, 79.2971, 24.1066, 0.29 ) }
    dend_81 { pt3dadd( -147.843, 80.1878, 22.7314, 0.29 ) }
    dend_81 { pt3dadd( -147.861, 80.2108, 22.6915, 0.29 ) }
    dend_81 { pt3dadd( -148.062, 80.4329, 22.2974, 0.66 ) }
    dend_81 { pt3dadd( -149.046, 81.3577, 20.5411, 0.37 ) }
    dend_81 { pt3dadd( -149.114, 81.4115, 20.4389, 0.37 ) }
    dend_81 { pt3dadd( -149.528, 81.6855, 19.908, 0.29 ) }
    dend_81 { pt3dadd( -149.981, 81.9287, 19.4708, 0.15 ) }
    dend_81 { pt3dadd( -150.272, 82.0691, 19.2291, 0.74 ) }
    dend_81 { pt3dadd( -150.416, 82.1243, 19.1413, 0.74 ) }
    dend_81 { pt3dadd( -151.451, 82.4234, 18.7423, 0.37 ) }
    dend_81 { pt3dadd( -151.941, 82.587, 18.5641, 0.29 ) }
    dend_81 { pt3dadd( -152.607, 82.8431, 18.3726, 0.29 ) }
    dend_81 { pt3dadd( -152.684, 82.8739, 18.3559, 0.29 ) }
    dend_81 { pt3dadd( -153.678, 83.2615, 18.2289, 0.29 ) }
    dend_81 { pt3dadd( -153.796, 83.3101, 18.2249, 0.29 ) }
    dend_81 { pt3dadd( -154.466, 83.5961, 18.2679, 0.29 ) }
    dend_81 { pt3dadd( -155.111, 83.8887, 18.311, 0.29 ) }
    dend_81 { pt3dadd( -155.166, 83.9132, 18.3108, 0.29 ) }
    dend_81 { pt3dadd( -156.009, 84.2942, 18.2572, 0.29 ) }
    dend_81 { pt3dadd( -156.802, 84.6609, 18.1266, 0.29 ) }
    dend_81 { pt3dadd( -156.954, 84.7282, 18.0911, 0.29 ) }
    dend_81 { pt3dadd( -157.641, 85.0701, 17.8482, 0.29 ) }
    dend_81 { pt3dadd( -158.381, 85.5132, 17.5329, 0.52 ) }
    dend_81 { pt3dadd( -158.748, 85.7715, 17.3692, 0.66 ) }
    dend_81 { pt3dadd( -159.568, 86.444, 16.9793, 0.29 ) }
    dend_81 { pt3dadd( -160.467, 87.2519, 16.5436, 1.11 ) }
    dend_81 { pt3dadd( -161.356, 88.106, 16.0578, 0.29 ) }
    dend_81 { pt3dadd( -161.824, 88.5871, 15.7803, 0.29 ) }
    dend_81 { pt3dadd( -162.225, 89.0106, 15.5471, 0.74 ) }
    dend_81 { pt3dadd( -162.31, 89.1026, 15.4944, 0.74 ) }
    dend_81 { pt3dadd( -162.547, 89.3643, 15.3412, 0.74 ) }
    dend_81 { pt3dadd( -163.763, 90.6418, 14.4861, 0.29 ) }
    dend_81 { pt3dadd( -163.822, 90.6956, 14.4464, 0.29 ) }
    dend_81 { pt3dadd( -164.279, 91.0906, 14.1323, 0.29 ) }
    dend_81 { pt3dadd( -164.312, 91.1202, 14.1093, 0.29 ) }
    dend_81 { pt3dadd( -164.887, 91.6387, 13.7324, 0.59 ) }
    dend_81 { pt3dadd( -165.974, 92.6767, 13.09, 0.29 ) }
    dend_81 { pt3dadd( -166.019, 92.7246, 13.0712, 0.29 ) }
    dend_81 { pt3dadd( -166.343, 93.1144, 12.9583, 0.29 ) }
    dend_81 { pt3dadd( -166.509, 93.3732, 12.9184, 0.59 ) }
    dend_81 { pt3dadd( -166.542, 93.4337, 12.9149, 0.59 ) }
    dend_81 { pt3dadd( -166.793, 93.9614, 12.9265, 0.59 ) }
    dend_81 { pt3dadd( -167.031, 94.5127, 12.971, 0.29 ) }
    dend_81 { pt3dadd( -167.253, 94.9611, 12.9912, 0.29 ) }
    dend_81 { pt3dadd( -167.984, 96.2586, 13.0026, 0.29 ) }
    dend_81 { pt3dadd( -168.014, 96.3023, 13.0015, 0.29 ) }
    dend_81 { pt3dadd( -168.453, 96.8713, 12.9712, 0.29 ) }
    dend_81 { pt3dadd( -168.663, 97.1013, 12.9496, 0.29 ) }
    dend_81 { pt3dadd( -169.279, 97.6465, 12.8686, 0.52 ) }
    dend_81 { pt3dadd( -169.562, 97.8469, 12.8336, 0.59 ) }
    dend_81 { pt3dadd( -170.424, 98.3396, 12.75, 0.22 ) }
    dend_81 { pt3dadd( -170.654, 98.4769, 12.7184, 0.22 ) }
    dend_81 { pt3dadd( -171.117, 98.7908, 12.6513, 0.22 ) }
    dend_81 { pt3dadd( -171.544, 99.137, 12.5894, 0.81 ) }
    dend_81 { pt3dadd( -171.83, 99.401, 12.5446, 1.03 ) }
    dend_81 { pt3dadd( -172.288, 99.8392, 12.462, 0.52 ) }
    dend_81 { pt3dadd( -173.123, 100.644, 12.2907, 0.29 ) }
    dend_81 { pt3dadd( -174.085, 101.549, 12.0827, 0.22 ) }
    dend_81 { pt3dadd( -174.998, 102.457, 11.8801, 0.22 ) }
    dend_81 { pt3dadd( -175.106, 102.571, 11.8565, 0.22 ) }
    dend_81 { pt3dadd( -175.552, 103.056, 11.7601, 0.74 ) }
    dend_81 { pt3dadd( -175.796, 103.315, 11.7116, 0.74 ) }
    dend_81 { pt3dadd( -176.113, 103.604, 11.6811, 0.74 ) }
    dend_81 { pt3dadd( -182.446, 108.247, 9.06428, 0.74 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 99/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -118.636, 64.437, 27.8854, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_76 { pt3dadd( -118.45, 65.5058, 27.934, 0.29 ) }
    dend_76 { pt3dadd( -118.083, 67.3817, 27.9529, 0.29 ) }
    dend_76 { pt3dadd( -118.067, 67.4605, 27.953, 0.29 ) }
    dend_76 { pt3dadd( -117.725, 69.226, 27.9459, 0.29 ) }
    dend_76 { pt3dadd( -117.71, 69.3146, 27.9455, 0.29 ) }
    dend_76 { pt3dadd( -117.331, 71.9531, 27.9342, 0.52 ) }
    dend_76 { pt3dadd( -117.174, 73.4384, 27.9328, 0.52 ) }
    dend_76 { pt3dadd( -117.103, 74.5118, 27.923, 0.52 ) }
    dend_76 { pt3dadd( -117.095, 74.8149, 27.9143, 0.52 ) }
    dend_76 { pt3dadd( -117.146, 76.1241, 27.958, 0.52 ) }
    dend_76 { pt3dadd( -117.264, 77.1205, 28.0569, 0.81 ) }
    dend_76 { pt3dadd( -117.315, 77.3071, 28.0939, 0.81 ) }
    dend_76 { pt3dadd( -117.608, 78.0841, 28.3223, 0.66 ) }
    dend_76 { pt3dadd( -117.95, 78.8273, 28.5632, 0.37 ) }
    dend_76 { pt3dadd( -119.072, 81.0626, 29.3331, 0.37 ) }
    dend_76 { pt3dadd( -119.113, 81.1411, 29.3572, 0.37 ) }
    dend_76 { pt3dadd( -119.545, 81.926, 29.5559, 0.52 ) }
    dend_76 { pt3dadd( -119.606, 82.0398, 29.5734, 0.52 ) }
    dend_76 { pt3dadd( -120.349, 83.4684, 29.6824, 0.44 ) }
    dend_76 { pt3dadd( -120.431, 83.6332, 29.6814, 0.44 ) }
    dend_76 { pt3dadd( -121.01, 84.8031, 29.5294, 0.44 ) }
    dend_76 { pt3dadd( -121.175, 85.1617, 29.4866, 0.44 ) }
    dend_76 { pt3dadd( -121.912, 86.9884, 29.3075, 0.44 ) }
    dend_76 { pt3dadd( -121.944, 87.0747, 29.3006, 0.44 ) }
    dend_76 { pt3dadd( -122.235, 87.9689, 29.2507, 0.52 ) }
    dend_76 { pt3dadd( -122.286, 88.1586, 29.2386, 0.52 ) }
    dend_76 { pt3dadd( -122.563, 89.3309, 29.1703, 0.37 ) }
    dend_76 { pt3dadd( -122.828, 90.6952, 29.0816, 0.74 ) }
    dend_76 { pt3dadd( -122.844, 90.7862, 29.0763, 0.74 ) }
    dend_76 { pt3dadd( -122.95, 91.4172, 29.0411, 0.74 ) }
    dend_76 { pt3dadd( -123.439, 94.4106, 28.9775, 0.52 ) }
    dend_76 { pt3dadd( -123.454, 94.502, 28.9778, 0.52 ) }
    dend_76 { pt3dadd( -123.832, 96.9771, 29.0601, 0.52 ) }
    dend_76 { pt3dadd( -124.278, 99.9106, 29.2274, 0.52 ) }
    dend_76 { pt3dadd( -124.296, 100.029, 29.2366, 0.52 ) }
    dend_76 { pt3dadd( -124.586, 101.93, 29.4307, 0.88 ) }
    dend_76 { pt3dadd( -124.65, 102.34, 29.4871, 0.88 ) }
    dend_76 { pt3dadd( -124.996, 104.642, 29.8041, 0.52 ) }
    dend_76 { pt3dadd( -125.203, 106.105, 30.006, 0.52 ) }
    dend_76 { pt3dadd( -125.238, 106.377, 30.0536, 0.52 ) }
    dend_76 { pt3dadd( -125.411, 107.733, 30.2532, 0.52 ) }
    dend_76 { pt3dadd( -125.467, 108.109, 30.291, 0.52 ) }
    dend_76 { pt3dadd( -125.643, 109.043, 30.3725, 0.59 ) }
    dend_76 { pt3dadd( -125.871, 110.123, 30.4509, 0.37 ) }
    dend_76 { pt3dadd( -126.254, 111.858, 30.5616, 0.44 ) }
    dend_76 { pt3dadd( -126.663, 113.74, 30.6645, 0.22 ) }
    dend_76 { pt3dadd( -127.034, 115.431, 30.7406, 0.22 ) }
    dend_76 { pt3dadd( -127.19, 116.15, 30.7822, 0.37 ) }
    dend_76 { pt3dadd( -127.555, 117.823, 30.8872, 0.22 ) }
    dend_76 { pt3dadd( -127.59, 117.992, 30.8981, 0.22 ) }
    dend_76 { pt3dadd( -127.873, 119.404, 31.0573, 0.22 ) }
    dend_76 { pt3dadd( -127.889, 119.493, 31.0769, 0.22 ) }
    dend_76 { pt3dadd( -128.095, 120.938, 31.4463, 0.22 ) }
    dend_76 { pt3dadd( -128.105, 121.015, 31.4664, 0.22 ) }
    dend_76 { pt3dadd( -128.341, 122.903, 31.9676, 0.22 ) }
    dend_76 { pt3dadd( -128.586, 125.026, 32.5127, 0.66 ) }
    dend_76 { pt3dadd( -128.676, 125.838, 32.7118, 0.96 ) }
    dend_76 { pt3dadd( -128.837, 127.335, 33.0938, 0.22 ) }
    dend_76 { pt3dadd( -128.977, 128.622, 33.4202, 0.22 ) }
    dend_76 { pt3dadd( -128.988, 128.723, 33.447, 0.22 ) }
    dend_76 { pt3dadd( -129.077, 129.469, 33.6535, 0.59 ) }
    dend_76 { pt3dadd( -129.172, 130.117, 33.7774, 0.88 ) }
    dend_76 { pt3dadd( -129.436, 131.641, 34.0125, 0.44 ) }
    dend_76 { pt3dadd( -129.611, 132.554, 34.1174, 0.29 ) }
    dend_76 { pt3dadd( -129.663, 132.835, 34.1378, 0.29 ) }
    dend_76 { pt3dadd( -129.771, 133.497, 34.161, 0.29 ) }
    dend_76 { pt3dadd( -129.95, 135.163, 34.077, 0.74 ) }
    dend_76 { pt3dadd( -129.996, 135.961, 33.9782, 0.29 ) }
    dend_76 { pt3dadd( -130.022, 136.782, 33.8294, 0.44 ) }
    dend_76 { pt3dadd( -130.034, 137.445, 33.7127, 0.59 ) }
    dend_76 { pt3dadd( -130.036, 137.536, 33.699, 0.59 ) }
    dend_76 { pt3dadd( -130.074, 139.529, 33.4566, 0.22 ) }
    dend_76 { pt3dadd( -130.085, 139.824, 33.434, 0.22 ) }
    dend_76 { pt3dadd( -130.186, 141.502, 33.4235, 0.22 ) }
    dend_76 { pt3dadd( -130.192, 141.592, 33.4293, 0.22 ) }
    dend_76 { pt3dadd( -130.251, 142.597, 33.5625, 0.44 ) }
    dend_76 { pt3dadd( -130.257, 142.7, 33.5832, 0.44 ) }
    dend_76 { pt3dadd( -130.286, 143.235, 33.7472, 0.44 ) }
    dend_76 { pt3dadd( -130.316, 144.976, 34.3546, 0.29 ) }
    dend_76 { pt3dadd( -130.289, 145.613, 34.629, 0.44 ) }
    dend_76 { pt3dadd( -130.279, 145.792, 34.7113, 0.44 ) }
    dend_76 { pt3dadd( -130.204, 146.606, 35.139, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 12.2891, -260.943, -111.675, 0.29 ) }
    dend_59 { pt3dadd( 11.8841, -260.923, -111.902, 0.29 ) }
    dend_59 { pt3dadd( 11.3918, -260.98, -112.2, 0.29 ) }
    dend_59 { pt3dadd( 11.3016, -260.997, -112.255, 0.59 ) }
    dend_59 { pt3dadd( 10.9795, -261.065, -112.455, 0.66 ) }
    dend_59 { pt3dadd( 10.9195, -261.077, -112.5, 0.66 ) }
    dend_59 { pt3dadd( 10.6181, -261.134, -112.743, 0.66 ) }
    dend_59 { pt3dadd( 10.0949, -261.26, -113.186, 0.22 ) }
    dend_59 { pt3dadd( 9.88029, -261.319, -113.371, 0.66 ) }
    dend_59 { pt3dadd( 9.63011, -261.389, -113.59, 0.66 ) }
    dend_59 { pt3dadd( 8.9685, -261.572, -114.185, 0.22 ) }
    dend_59 { pt3dadd( 8.58806, -261.672, -114.533, 0.22 ) }
    dend_59 { pt3dadd( 8.06468, -261.8, -115.025, 0.22 ) }
    dend_59 { pt3dadd( 7.70381, -261.87, -115.368, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 96/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 12.2891, -260.943, -111.675, 0.29 ) }
    dend_58 { pt3dadd( 12.3432, -262.427, -112.072, 0.29 ) }
    dend_58 { pt3dadd( 12.44, -263.342, -112.336, 0.29 ) }
    dend_58 { pt3dadd( 12.4701, -263.792, -112.471, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_58 { pt3dadd( 12.4938, -264.188, -112.612, 0.88 ) }
    dend_58 { pt3dadd( 12.4988, -264.285, -112.649, 0.88 ) }
    dend_58 { pt3dadd( 12.5081, -264.968, -112.912, 0.88 ) }
    dend_58 { pt3dadd( 12.5178, -266.163, -113.296, 0.22 ) }
    dend_58 { pt3dadd( 12.5128, -266.842, -113.525, 0.22 ) }
    dend_58 { pt3dadd( 12.5081, -267.622, -113.815, 0.88 ) }
    dend_58 { pt3dadd( 12.51, -267.686, -113.838, 0.88 ) }
    dend_58 { pt3dadd( 12.5606, -268.509, -114.095, 0.74 ) }
    dend_58 { pt3dadd( 12.6916, -269.541, -114.346, 0.37 ) }
    dend_58 { pt3dadd( 12.709, -269.606, -114.352, 0.37 ) }
    dend_58 { pt3dadd( 13.2571, -271.035, -114.246, 0.29 ) }
    dend_58 { pt3dadd( 13.5625, -271.706, -114.114, 0.59 ) }
    dend_58 { pt3dadd( 13.6568, -271.89, -114.066, 0.59 ) }
    dend_58 { pt3dadd( 14.1367, -272.72, -113.8, 0.88 ) }
    dend_58 { pt3dadd( 14.7984, -273.877, -113.228, 0.74 ) }
    dend_58 { pt3dadd( 15.5384, -275.181, -112.426, 0.29 ) }
    dend_58 { pt3dadd( 15.9179, -275.848, -111.953, 0.74 ) }
    dend_58 { pt3dadd( 15.9452, -275.898, -111.917, 0.74 ) }
    dend_58 { pt3dadd( 16.1598, -276.299, -111.605, 0.74 ) }
    dend_58 { pt3dadd( 17.0598, -278.048, -110.044, 0.44 ) }
    dend_58 { pt3dadd( 17.3164, -278.604, -109.462, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_76 (entry count 21/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -130.204, 146.606, 35.139, 0.29 ) }
    dend_78 { pt3dadd( -129.45, 146.04, 35.4058, 0.29 ) }
    dend_78 { pt3dadd( -129.362, 145.973, 35.4306, 0.29 ) }
    dend_78 { pt3dadd( -129.088, 145.764, 35.5002, 0.29 ) }
    dend_78 { pt3dadd( -129.044, 145.731, 35.5115, 0.29 ) }
    dend_78 { pt3dadd( -128.413, 145.249, 35.6722, 0.29 ) }
    dend_78 { pt3dadd( -128.139, 145.04, 35.7419, 0.81 ) }
    dend_78 { pt3dadd( -127.811, 144.82, 35.7824, 1.03 ) }
    dend_78 { pt3dadd( -127.766, 144.786, 35.7869, 1.03 ) }
    dend_78 { pt3dadd( -121.797, 139.769, 35.8095, 1.03 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 31/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -130.204, 146.606, 35.139, 0.44 ) }
    dend_77 { pt3dadd( -130.342, 148.075, 35.4759, 0.44 ) }
    dend_77 { pt3dadd( -130.478, 149.719, 35.8474, 0.37 ) }
    dend_77 { pt3dadd( -130.716, 152.705, 36.6287, 0.29 ) }
    dend_77 { pt3dadd( -130.967, 155.35, 37.3619, 0.29 ) }
    dend_77 { pt3dadd( -131.071, 156.539, 37.7025, 0.74 ) }
    dend_77 { pt3dadd( -131.119, 157.12, 37.8721, 0.74 ) }
    dend_77 { pt3dadd( -131.158, 157.868, 38.0894, 0.44 ) }
    dend_77 { pt3dadd( -131.178, 159.577, 38.627, 0.37 ) }
    dend_77 { pt3dadd( -131.123, 161.352, 39.2233, 0.29 ) }
    dend_77 { pt3dadd( -131.04, 163.129, 39.8291, 0.29 ) }
    dend_77 { pt3dadd( -131.028, 163.306, 39.8942, 0.29 ) }
    dend_77 { pt3dadd( -130.852, 165.732, 40.8129, 0.29 ) }
    dend_77 { pt3dadd( -130.811, 166.193, 40.9879, 0.29 ) }
    dend_77 { pt3dadd( -130.66, 167.697, 41.5348, 0.29 ) }
    dend_77 { pt3dadd( -130.652, 167.772, 41.5649, 0.29 ) }
    dend_77 { pt3dadd( -130.645, 169.203, 42.1426, 0.29 ) }
    dend_77 { pt3dadd( -130.755, 169.985, 42.4139, 0.44 ) }
    dend_77 { pt3dadd( -130.8, 170.147, 42.4625, 0.44 ) }
    dend_77 { pt3dadd( -130.996, 170.734, 42.6105, 0.29 ) }
    dend_77 { pt3dadd( -131.032, 170.834, 42.6314, 0.29 ) }
    dend_77 { pt3dadd( -131.586, 172.399, 42.8468, 0.29 ) }
    dend_77 { pt3dadd( -132.502, 175.094, 43.0597, 0.29 ) }
    dend_77 { pt3dadd( -132.602, 175.407, 43.0824, 0.29 ) }
    dend_77 { pt3dadd( -132.893, 176.375, 43.1499, 0.74 ) }
    dend_77 { pt3dadd( -133.119, 177.18, 43.2091, 0.88 ) }
    dend_77 { pt3dadd( -133.56, 178.792, 43.3281, 0.52 ) }
    dend_77 { pt3dadd( -133.95, 180.252, 43.4376, 0.37 ) }
    dend_77 { pt3dadd( -134.514, 182.265, 43.6153, 0.29 ) }
    dend_77 { pt3dadd( -134.606, 182.58, 43.6489, 0.29 ) }
    dend_77 { pt3dadd( -135.383, 185.137, 43.9719, 0.29 ) }
    dend_77 { pt3dadd( -135.45, 185.35, 44.0049, 0.29 ) }
    dend_77 { pt3dadd( -136.028, 187.087, 44.3548, 0.29 ) }
    dend_77 { pt3dadd( -136.267, 187.749, 44.5179, 0.52 ) }
    dend_77 { pt3dadd( -136.476, 188.262, 44.6754, 0.66 ) }
    dend_77 { pt3dadd( -136.544, 188.416, 44.7314, 0.66 ) }
    dend_77 { pt3dadd( -136.819, 188.962, 44.9887, 0.66 ) }
    dend_77 { pt3dadd( -136.869, 189.058, 45.0323, 0.66 ) }
    dend_77 { pt3dadd( -137.399, 190.02, 45.4157, 0.29 ) }
    dend_77 { pt3dadd( -137.572, 190.32, 45.5241, 0.22 ) }
    dend_77 { pt3dadd( -137.907, 190.881, 45.7253, 0.52 ) }
    dend_77 { pt3dadd( -138.084, 191.197, 45.8365, 0.52 ) }
    dend_77 { pt3dadd( -138.511, 191.993, 46.1083, 0.29 ) }
    dend_77 { pt3dadd( -139.038, 193.075, 46.4473, 0.29 ) }
    dend_77 { pt3dadd( -139.777, 194.757, 46.9916, 0.29 ) }
    dend_77 { pt3dadd( -139.82, 194.86, 47.0277, 0.29 ) }
    dend_77 { pt3dadd( -140.487, 196.58, 47.6694, 0.29 ) }
    dend_77 { pt3dadd( -140.543, 196.737, 47.7304, 0.29 ) }
    dend_77 { pt3dadd( -141.163, 198.602, 48.4764, 0.29 ) }
    dend_77 { pt3dadd( -141.634, 200.165, 49.0804, 0.29 ) }
    dend_77 { pt3dadd( -141.691, 200.398, 49.151, 0.29 ) }
    dend_77 { pt3dadd( -141.863, 201.202, 49.3436, 0.29 ) }
    dend_77 { pt3dadd( -141.876, 201.269, 49.3555, 0.29 ) }
    dend_77 { pt3dadd( -142.042, 202.346, 49.4931, 0.88 ) }
    dend_77 { pt3dadd( -142.082, 202.673, 49.5169, 0.88 ) }
    dend_77 { pt3dadd( -142.243, 204.23, 49.5915, 0.22 ) }
    dend_77 { pt3dadd( -142.37, 205.764, 49.6299, 0.22 ) }
    dend_77 { pt3dadd( -142.387, 206.0, 49.6333, 0.22 ) }
    dend_77 { pt3dadd( -142.499, 207.69, 49.653, 0.22 ) }
    dend_77 { pt3dadd( -142.503, 207.762, 49.654, 0.22 ) }
    dend_77 { pt3dadd( -142.633, 210.044, 49.5442, 0.52 ) }
    dend_77 { pt3dadd( -142.737, 211.702, 49.3994, 0.29 ) }
    dend_77 { pt3dadd( -142.785, 212.447, 49.2931, 0.37 ) }
    dend_77 { pt3dadd( -142.795, 212.597, 49.2675, 0.37 ) }
    dend_77 { pt3dadd( -142.857, 213.427, 49.1069, 0.37 ) }
    dend_77 { pt3dadd( -143.031, 215.981, 48.4757, 0.22 ) }
    dend_77 { pt3dadd( -143.138, 217.508, 48.0642, 0.22 ) }
    dend_77 { pt3dadd( -143.143, 217.589, 48.0454, 0.22 ) }
    dend_77 { pt3dadd( -143.185, 218.401, 47.8684, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_77 { pt3dadd( -143.242, 219.543, 47.6492, 0.66 ) }
    dend_77 { pt3dadd( -143.318, 221.858, 47.1738, 0.15 ) }
    dend_77 { pt3dadd( -143.35, 223.759, 46.8236, 0.15 ) }
    dend_77 { pt3dadd( -143.351, 224.719, 46.5916, 0.29 ) }
    dend_77 { pt3dadd( -143.352, 224.799, 46.5703, 0.29 ) }
    dend_77 { pt3dadd( -143.359, 225.377, 46.3995, 0.29 ) }
    dend_77 { pt3dadd( -143.409, 227.165, 45.8459, 0.44 ) }
    dend_77 { pt3dadd( -143.418, 227.652, 45.649, 0.44 ) }
    dend_77 { pt3dadd( -143.493, 228.865, 45.1024, 0.22 ) }
    dend_77 { pt3dadd( -143.552, 229.52, 44.8272, 0.52 ) }
    dend_77 { pt3dadd( -143.56, 229.597, 44.7974, 0.52 ) }
    dend_77 { pt3dadd( -143.634, 230.159, 44.6118, 0.88 ) }
    dend_77 { pt3dadd( -144.172, 233.45, 43.7943, 0.29 ) }
    dend_77 { pt3dadd( -144.652, 236.191, 43.1877, 0.29 ) }
    dend_77 { pt3dadd( -144.807, 237.15, 43.0364, 0.29 ) }
    dend_77 { pt3dadd( -144.817, 237.232, 43.029, 0.29 ) }
    dend_77 { pt3dadd( -144.962, 238.859, 42.9978, 0.29 ) }
    dend_77 { pt3dadd( -145.007, 240.287, 43.1129, 0.29 ) }
    dend_77 { pt3dadd( -145.005, 240.354, 43.1277, 0.29 ) }
    dend_77 { pt3dadd( -144.728, 242.344, 43.6242, 0.29 ) }
    dend_77 { pt3dadd( -144.462, 243.823, 44.0133, 0.59 ) }
    dend_77 { pt3dadd( -144.31, 244.555, 44.2101, 0.59 ) }
    dend_77 { pt3dadd( -144.055, 245.826, 44.5471, 0.22 ) }
    dend_77 { pt3dadd( -143.795, 247.265, 44.919, 0.22 ) }
    dend_77 { pt3dadd( -143.769, 247.445, 44.9636, 0.22 ) }
    dend_77 { pt3dadd( -143.518, 249.672, 45.4981, 0.22 ) }
    dend_77 { pt3dadd( -143.504, 249.845, 45.5383, 0.22 ) }
    dend_77 { pt3dadd( -143.305, 253.372, 46.3365, 0.22 ) }
    dend_77 { pt3dadd( -143.304, 253.464, 46.3565, 0.22 ) }
    dend_77 { pt3dadd( -143.364, 255.579, 46.7915, 0.22 ) }
    dend_77 { pt3dadd( -143.382, 255.827, 46.8397, 0.22 ) }
    dend_77 { pt3dadd( -143.429, 256.183, 46.9042, 0.59 ) }
    dend_77 { pt3dadd( -143.553, 256.92, 47.0308, 0.59 ) }
    dend_77 { pt3dadd( -143.913, 258.768, 47.2058, 0.29 ) }
    dend_77 { pt3dadd( -144.083, 259.611, 47.2437, 0.59 ) }
    dend_77 { pt3dadd( -144.366, 260.928, 47.2496, 0.52 ) }
    dend_77 { pt3dadd( -144.595, 262.074, 47.2364, 0.74 ) }
    dend_77 { pt3dadd( -144.778, 263.067, 47.2084, 0.74 ) }
    dend_77 { pt3dadd( -145.077, 265.056, 47.1258, 0.22 ) }
    dend_77 { pt3dadd( -145.165, 265.9, 47.0759, 0.44 ) }
    dend_77 { pt3dadd( -145.224, 266.651, 47.0372, 0.74 ) }
    dend_77 { pt3dadd( -145.253, 267.085, 47.0282, 1.03 ) }
    dend_77 { pt3dadd( -145.257, 267.155, 47.0279, 1.03 ) }
    dend_77 { pt3dadd( -145.329, 268.091, 47.0785, 1.03 ) }
    dend_77 { pt3dadd( -145.338, 268.172, 47.0945, 1.03 ) }
    dend_77 { pt3dadd( -145.48, 269.491, 47.3511, 0.37 ) }
    dend_77 { pt3dadd( -145.624, 270.802, 47.5948, 0.29 ) }
    dend_77 { pt3dadd( -145.852, 281.958, 50.2578, 0.29 ) }
    dend_77 { pt3dadd( -147.768, 292.72, 53.6943, 0.29 ) }
    dend_77 { pt3dadd( -149.59, 303.289, 57.7201, 0.29 ) }
    dend_77 { pt3dadd( -151.396, 313.227, 63.0947, 0.29 ) }
    dend_77 { pt3dadd( -152.545, 322.594, 69.5378, 0.29 ) }
    dend_77 { pt3dadd( -155.329, 330.717, 77.0106, 0.29 ) }
    // Section: dend_80, id: dend_80, parent: dend_78 (entry count 53/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -121.797, 139.769, 35.8095, 0.22 ) }
    dend_80 { pt3dadd( -114.337, 133.216, 36.3229, 0.22 ) }
    dend_80 { pt3dadd( -107.297, 126.352, 37.7709, 0.22 ) }
    dend_80 { pt3dadd( -99.6355, 120.317, 39.5693, 0.22 ) }
    // Section: dend_79, id: dend_79, parent: dend_78 (entry count 57/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -121.797, 139.769, 35.8095, 0.22 ) }
    dend_79 { pt3dadd( -115.337, 133.927, 36.1607, 0.22 ) }
    dend_79 { pt3dadd( -108.924, 128.039, 36.5708, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_2 = new SectionList()
    dend_92 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_81 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_92, dend_25, dend_0, dend_98, dend_93, dend_41, dend_26, dend_14, dend_1, dend_102, dend_99, dend_97, dend_94, dend_65, dend_42, dend_30, dend_27, dend_20, dend_15, dend_3, dend_2, dend_104, dend_103, dend_101, dend_100, dend_96, dend_95, dend_67, dend_66, dend_48, dend_43, dend_34, dend_31, dend_29, dend_28, dend_24, dend_21, dend_17, dend_16, dend_11, dend_4, dend_87, dend_68, dend_52, dend_49, dend_47, dend_44, dend_40, dend_35, dend_33, dend_32, dend_23, dend_22, dend_19, dend_18, dend_13, dend_12, dend_6, dend_5, dend_91, dend_88, dend_72, dend_69, dend_62, dend_53, dend_51, dend_50, dend_46, dend_45, dend_39, dend_36, dend_8, dend_7, dend_90, dend_89, dend_86, dend_73, dend_71, dend_70, dend_64, dend_63, dend_61, dend_54, dend_38, dend_37, dend_10, dend_9, dend_83, dend_74, dend_56, dend_55, dend_85, dend_84, dend_82, dend_75, dend_60, dend_57, dend_81, dend_76, dend_59, dend_58, dend_78, dend_77, dend_80, dend_79]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_92 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_93 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_26 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_102 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_99 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_97 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_94 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_65 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_27 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_20 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_15 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_103 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_100 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_96 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_95 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_67 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_66 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_48 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_43 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_31 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_29 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_28 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_21 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_17 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_16 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_11 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_44 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_35 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_23 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_19 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_5 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_69 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_53 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_50 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_46 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_39 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_36 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_90 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_89 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_73 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_63 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_38 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_37 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_9 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_83 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_55 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_85 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_84 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_82 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_60 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_57 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_81 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_76 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_77 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_41 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_14 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_52 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_30 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_34 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_98 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_6 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_51 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_8 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_7 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_10 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_87 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_101 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_13 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_12 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_54 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_91 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_61 OneSecGrp_SectionRef_85.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_68 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_88 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_33 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_18 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_56 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_32 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_72 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_64 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_86 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_59 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_104 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_58 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_71 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_70 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_22 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_74 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_75 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_45 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_78 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_79 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_80 OneSecGrp_SectionRef_107.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_25, dend_25, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_91, dend_88, dend_88, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_8, dend_8, dend_8, dend_8, dend_7, dend_7, dend_7, dend_90, dend_90, dend_90, dend_90, dend_90, dend_89, dend_89, dend_89, dend_89, dend_89, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_80, dend_80, dend_80, dend_79, dend_79]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_87 all.append()
    dend_87 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_47 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_91 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_54 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_79 all.append()
    dend_79 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.00545  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 2.90744E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.004119  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 5.9999998E-6  // units: S cm-2
        e_pas_nml2 = -60.065872  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.418459  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.026008999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 9.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.025854  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.19695699  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-6  // units: S cm-2
        e_pas_nml2 = -60.2509  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.9899996E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.008343  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 6.58298E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.026899999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.502333  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.653374  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 5.6999997E-5  // units: S cm-2
        e_pas_nml2 = -76.49812  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 7.84E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.30005398  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec basal {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        // gmax_K_Tst will be set later...
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Im
        // gmax_Im will be set later...
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.002256  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 1.38E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.005574  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 7.92E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_K_Tst(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.002940))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000051))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Im(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p--1000.000000)*-0.003000))*0.000371))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_92 nseg = 7
    dend_93 nseg = 7
    dend_26 nseg = 5
    dend_102 nseg = 7
    dend_99 nseg = 3
    dend_97 nseg = 3
    dend_94 nseg = 3
    dend_65 nseg = 3
    dend_27 nseg = 9
    dend_20 nseg = 5
    dend_15 nseg = 3
    dend_2 nseg = 9
    dend_103 nseg = 5
    dend_100 nseg = 3
    dend_96 nseg = 3
    dend_95 nseg = 3
    dend_67 nseg = 5
    dend_66 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 19
    dend_31 nseg = 5
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_24 nseg = 3
    dend_21 nseg = 7
    dend_17 nseg = 5
    dend_16 nseg = 7
    dend_11 nseg = 7
    dend_4 nseg = 3
    dend_49 nseg = 3
    dend_44 nseg = 3
    dend_35 nseg = 3
    dend_23 nseg = 3
    dend_19 nseg = 5
    dend_5 nseg = 3
    dend_69 nseg = 3
    dend_62 nseg = 9
    dend_53 nseg = 5
    dend_50 nseg = 5
    dend_46 nseg = 3
    dend_39 nseg = 3
    dend_36 nseg = 3
    dend_90 nseg = 3
    dend_89 nseg = 3
    dend_73 nseg = 7
    dend_63 nseg = 7
    dend_38 nseg = 5
    dend_37 nseg = 7
    dend_9 nseg = 5
    dend_83 nseg = 3
    dend_55 nseg = 3
    dend_85 nseg = 5
    dend_84 nseg = 3
    dend_82 nseg = 5
    dend_60 nseg = 3
    dend_57 nseg = 3
    dend_81 nseg = 5
    dend_76 nseg = 5
    dend_77 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bIR215_L5_DBC_e2f2301440_0_0


