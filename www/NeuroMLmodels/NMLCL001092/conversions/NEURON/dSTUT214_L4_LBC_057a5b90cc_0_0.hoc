// Cell: dSTUT214_L4_LBC_057a5b90cc_0_0
/*
{
  "id" : "dSTUT214_L4_LBC_057a5b90cc_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.4489, -11.1277, 1.96857, 2.53905", "-2.21373, -9.99102, 1.77288, 4.60052", "-1.97857, -8.85434, 1.57719, 5.7745", "-1.74341, -7.71767, 1.3815, 6.94848", "-1.50825, -6.581, 1.18581, 8.08333", "-1.27308, -5.44432, 0.990126, 9.17802", "-1.03792, -4.30765, 0.794438, 10.2727", "-0.802757, -3.17097, 0.59875, 11.3674", "-0.567594, -2.0343, 0.403062, 12.0266", "-0.332431, -0.897626, 0.207374, 12.2828", "-0.0972679, 0.239047, 0.0116859, 12.3212", "0.137895, 1.37572, -0.184002, 11.9564", "0.373058, 2.5124, -0.37969, 10.9173", "0.608221, 3.64907, -0.575378, 9.90283", "0.843384, 4.78574, -0.771067, 9.18979", "1.07855, 5.92242, -0.966755, 8.44172", "1.31371, 7.05909, -1.16244, 7.69366", "1.54887, 8.19576, -1.35813, 6.80206", "1.78404, 9.33244, -1.55382, 5.87376", "2.0192, 10.4691, -1.74951, 4.94547", "2.25436, 11.6058, -1.9452, 2.87974" ]
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "6.41062, 0.934565, -2.60158, 1.33", "6.98134, 4.22544, -1.35913, 1.33", "7.92517, 9.66777, 0.695564, 0.67", "9.19568, 16.9938, 3.46144, 0.67", "9.90149, 21.0636, 4.99797, 1.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-3.05938, -11.0354, 1.30842, 3.33", "-3.5305, -12.1147, 1.30842, 3.33" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-2.75938, 10.7101, -11.0115, 1.33", "-6.67634, 10.8078, -13.8028, 1.33", "-12.2705, 10.9473, -17.7892, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-2.30938, 11.9281, -10.0116, 1.33", "-3.02804, 18.4658, -7.85679, 1.33", "-3.54179, 25.2091, -5.85652, 2.0", "-4.01258, 30.9822, -4.35273, 1.33", "-4.38642, 34.9408, -3.50132, 1.33", "-4.76918, 39.8505, -2.46934, 2.0", "-5.01218, 43.9031, -1.74225, 1.33", "-5.07623, 46.0007, -1.474, 1.33", "-5.12719, 50.0322, -1.3306, 1.33", "-5.36306, 55.2915, -1.34826, 1.33", "-5.67359, 60.9768, -1.60894, 1.33", "-6.02848, 65.2764, -1.86518, 1.33", "-6.35291, 68.0916, -2.06005, 0.67", "-6.95753, 72.6807, -2.3152, 0.67", "-7.40061, 75.9587, -2.53064, 0.67", "-7.87806, 79.1078, -2.73282, 0.67", "-8.25472, 81.3279, -2.88044, 0.67", "-8.81086, 84.5215, -2.99616, 0.67", "-9.5841, 89.3345, -3.11324, 0.67", "-10.6015, 96.0798, -3.13262, 0.67", "-11.2736, 101.67, -3.16799, 0.67", "-11.4921, 103.421, -3.18507, 0.67" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.750619, 12.9676, 0.238424, 2.67", "0.961337, 15.1063, 3.96986, 2.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999988841484605
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.25436, 11.6058, -1.9452, 0.960025", "5.29331, 26.2947, -1.9452, 0.960025", "8.33225, 40.9837, -1.9452, 0.960025" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "9.90149, 21.0636, 4.99797, 0.67", "16.0653, 24.3865, 7.59245, 0.67", "21.4246, 26.8133, 10.228, 0.67", "25.5182, 28.1154, 12.2932, 0.67", "28.4439, 28.9052, 13.7156, 0.33", "31.7978, 29.691, 15.3664, 0.67", "33.8164, 30.1193, 16.3574, 0.67", "36.1773, 30.2616, 17.5311, 0.67", "41.3814, 30.2865, 20.1343, 0.67", "44.7976, 30.2138, 21.5732, 0.67", "46.6295, 30.231, 22.1596, 0.67", "47.7828, 30.2866, 22.4595, 0.67", "50.8978, 30.6288, 22.9275, 0.67", "55.7957, 31.3901, 23.195, 0.67", "57.9787, 31.7845, 23.2452, 0.33", "60.2766, 32.1855, 23.1829, 0.67", "61.7691, 32.4476, 23.1219, 0.33", "68.9234, 33.8093, 22.8478, 0.67", "71.2849, 34.2452, 22.7797, 0.67", "75.1766, 34.8327, 22.7621, 0.67", "79.285, 35.4153, 22.7296, 0.67", "84.5463, 36.1109, 22.7086, 0.67", "86.993, 36.3682, 22.7454, 0.67", "90.0062, 36.5435, 22.9063, 0.67", "92.2395, 36.6211, 23.0699, 0.67" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "9.90149, 21.0636, 4.99797, 0.67", "10.5258, 24.4078, 4.93188, 0.67", "14.3461, 41.8171, 4.49971, 0.67", "15.593, 47.0882, 4.3217, 0.67", "17.7856, 55.7244, 3.9723, 0.67", "21.493, 68.8261, 3.35198, 0.67", "22.7046, 72.6973, 3.22121, 0.67", "24.4511, 77.0966, 3.1235, 0.67", "25.3854, 78.8343, 3.13288, 0.67", "27.2399, 81.5424, 3.22436, 0.67", "29.7089, 84.3451, 3.28057, 0.67", "34.9201, 88.8913, 3.68718, 0.67", "37.8685, 91.306, 3.86888, 0.67", "45.8387, 97.409, 4.28338, 0.67", "50.7259, 101.022, 4.47038, 0.67", "53.3842, 102.85, 4.48755, 0.67", "55.7162, 104.388, 4.40136, 0.67", "59.156, 106.608, 4.06091, 0.67", "61.9473, 108.526, 3.74102, 0.67", "64.8783, 110.886, 3.40461, 0.67", "67.6507, 113.83, 3.11473, 0.67", "69.3992, 116.105, 2.97912, 0.67", "71.9921, 120.263, 2.86928, 0.67", "74.0425, 124.461, 2.93669, 0.67", "76.3049, 130.682, 3.14252, 0.67", "77.1342, 133.465, 3.27626, 0.67", "78.0427, 137.083, 3.48505, 0.67", "78.5741, 139.356, 3.65251, 0.67", "80.4659, 147.156, 4.29552, 0.67", "81.0202, 149.588, 4.51773, 0.67", "81.7957, 152.699, 4.80914, 0.33", "82.8521, 157.797, 5.0984, 0.67", "83.2862, 160.11, 5.15062, 0.67", "84.1999, 165.01, 5.08556, 0.67", "84.4946, 167.094, 4.97849, 0.67", "84.9457, 170.791, 4.64586, 0.67", "85.5893, 177.259, 3.84554, 0.67", "85.736, 178.94, 3.6336, 0.67", "85.9649, 181.69, 3.30696, 0.33", "86.2013, 184.678, 3.05662, 0.33", "86.594, 189.085, 2.90451, 0.67", "86.7748, 191.149, 2.95408, 0.67", "87.1418, 195.215, 3.34749, 0.67", "87.171, 197.431, 3.48839, 0.33", "87.0017, 200.747, 3.61032, 0.67", "86.7449, 204.266, 3.65134, 0.33", "86.6709, 204.853, 3.65048, 0.67", "86.323, 207.325, 3.41449, 0.33", "85.8829, 212.333, 2.26285, 0.67", "85.7726, 215.577, 1.27847, 0.67", "85.846, 217.558, 0.620664, 0.67", "86.071, 220.062, -0.159438, 0.67", "86.6396, 224.278, -1.31892, 0.67", "87.461, 228.392, -2.27603, 0.67", "88.1938, 231.177, -2.71858, 0.33", "89.2937, 235.075, -3.06244, 0.67", "90.0858, 237.708, -3.06873, 0.33", "90.5201, 239.119, -2.94145, 0.67", "90.9998, 241.084, -2.52321, 0.33", "91.2332, 242.656, -2.10782, 0.67", "91.5684, 245.684, -1.3885, 0.67", "91.7266, 248.536, -0.782931, 0.33", "91.7755, 249.446, -0.618575, 0.67", "91.8002, 251.483, -0.24124, 0.33", "91.7543, 253.004, 0.0379075, 0.67", "91.5952, 256.364, 0.585533, 0.33", "91.5056, 257.605, 0.719552, 0.67", "91.3693, 260.987, 1.13215, 0.33" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-3.5305, -12.1147, 1.30842, 0.67", "-2.61035, -14.4049, 0.894823, 0.67", "-1.12132, -19.6679, -0.235094, 1.33", "-0.565247, -22.4178, -0.710332, 1.33", "-0.19088, -25.2275, -1.11523, 1.33", "0.576839, -29.9233, -1.47083, 1.33", "0.862302, -32.2129, -1.67688, 0.67", "1.14348, -35.7363, -2.02703, 1.33", "1.27543, -38.5249, -2.30468, 1.33", "1.37618, -40.0787, -2.39389, 0.67", "2.76937, -53.6247, -2.51213, 0.67", "3.39002, -58.9271, -2.19072, 0.67", "3.48624, -59.9029, -2.10443, 0.67", "3.72648, -62.1595, -1.84658, 0.67", "4.37844, -67.3204, -1.19109, 0.67", "4.64176, -69.2582, -0.87385, 0.67", "5.04684, -74.4349, 0.243596, 1.33", "5.42313, -78.8022, 1.14666, 0.67", "5.67055, -81.8743, 1.60678, 0.67", "5.89191, -85.3156, 2.01693, 0.67", "6.16794, -89.9262, 2.33085, 0.67", "6.49857, -94.9322, 2.5733, 0.67", "7.0429, -99.9676, 2.56405, 0.67", "7.42403, -102.668, 2.47591, 0.67" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.5305, -12.1147, 1.30842, 1.33", "-3.50787, -15.844, -0.422156, 1.33", "-3.47065, -21.9807, -3.26989, 1.33", "-3.45058, -25.2885, -4.80487, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-12.2705, 10.9473, -17.7892, 1.33", "-15.0125, 7.97068, -18.2318, 1.33", "-17.704, 4.55071, -18.6332, 1.33", "-19.1534, 2.71073, -18.8555, 0.67", "-21.3551, 0.237293, -19.1567, 0.67", "-23.9979, -2.36034, -19.3797, 0.67", "-27.8478, -6.14509, -19.4743, 0.67", "-28.8733, -7.16218, -19.5555, 0.67", "-31.3991, -9.61659, -20.0853, 0.67", "-33.7372, -11.5861, -20.8622, 0.67", "-37.1761, -14.0951, -22.3844, 0.67", "-41.0047, -16.9605, -24.4822, 0.67", "-45.9201, -20.5557, -27.4434, 0.67", "-48.2448, -22.3188, -28.9995, 0.67", "-50.9712, -24.5225, -31.0401, 0.67", "-54.9777, -27.9805, -34.3328, 0.67", "-57.7928, -30.4475, -36.7665, 0.67", "-61.2804, -33.47, -39.6005, 0.67", "-62.626, -34.6789, -40.4126, 0.67", "-63.585, -35.6103, -40.9258, 0.33", "-63.8545, -35.8743, -41.0556, 0.67", "-65.052, -36.9326, -41.4964, 0.33", "-66.329, -37.9108, -41.8454, 1.33", "-69.2385, -40.1664, -42.6246, 0.33", "-70.395, -40.8909, -42.9818, 0.33", "-71.3288, -41.3931, -43.3405, 1.33", "-73.9938, -42.6402, -44.7871, 0.33", "-74.9005, -43.0036, -45.4037, 0.67", "-77.5683, -43.8611, -47.5024, 0.33", "-80.9233, -44.6837, -50.5546, 0.67", "-82.4853, -44.9222, -52.0155, 0.67", "-85.8173, -45.185, -55.4229, 0.33", "-86.402, -45.1703, -56.0567, 0.67", "-87.437, -45.0814, -57.2034, 0.33", "-88.2343, -44.9969, -58.0547, 0.67", "-90.0967, -44.879, -59.8264, 0.33", "-91.5481, -44.935, -60.9474, 1.33", "-95.0161, -45.3514, -63.1517, 0.33", "-95.8519, -45.5478, -63.6884, 1.33", "-98.2693, -46.3777, -65.1716, 0.33", "-101.451, -47.8346, -66.9712, 0.33", "-102.877, -48.6517, -67.7092, 0.33", "-103.374, -48.9797, -67.918, 1.33", "-105.574, -50.7788, -68.7908, 0.33", "-106.897, -51.8917, -69.2917, 0.67", "-108.02, -52.9045, -69.8364, 0.33", "-108.439, -53.2997, -70.0854, 0.67", "-109.707, -54.3383, -70.8052, 0.33", "-111.107, -55.3117, -71.4845, 1.33", "-114.633, -57.5592, -73.0227, 0.33", "-116.548, -58.6729, -73.751, 0.67", "-117.6, -59.2531, -74.1048, 0.33", "-119.235, -60.1183, -74.5964, 0.67", "-123.994, -62.5297, -76.1088, 0.33", "-125.035, -63.0367, -76.3999, 1.33", "-130.673, -65.7505, -77.8544, 0.33", "-131.075, -65.9391, -77.943, 0.67", "-132.596, -66.6475, -78.3071, 0.33", "-135.478, -67.9976, -79.1234, 0.67" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-12.2705, 10.9473, -17.7892, 0.67", "-15.3041, 15.7733, -18.4328, 0.67", "-19.4129, 20.516, -19.9204, 0.67", "-21.5159, 22.8353, -20.9063, 0.67", "-23.0274, 24.5022, -21.6149, 1.33", "-24.8954, 26.5622, -22.4906, 0.67", "-26.66, 28.5084, -23.3178, 1.33", "-30.498, 31.6323, -25.0307, 0.67", "-32.281, 32.6497, -25.9771, 1.33" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-11.4921, 103.421, -3.18507, 0.67", "-6.31837, 107.662, -5.68391, 0.67", "-4.81228, 109.057, -6.46651, 0.67", "0.116258, 113.764, -9.11268, 0.33", "1.49039, 115.028, -9.8924, 0.67", "4.37961, 117.783, -11.578, 0.33", "6.80638, 120.178, -13.0473, 0.67", "9.4337, 123.039, -14.6042, 0.67", "10.5398, 124.485, -15.3891, 0.33", "12.2536, 126.992, -17.0494, 0.67", "13.5563, 129.438, -18.5554, 0.67", "14.4556, 131.762, -19.9537, 0.33", "14.9998, 133.572, -21.1811, 0.67", "15.5277, 135.417, -22.7077, 0.67", "16.4957, 139.527, -26.2431, 0.33", "17.2177, 143.128, -29.2878, 0.67", "17.936, 146.466, -32.0079, 0.67", "18.6799, 149.863, -34.44, 0.67", "19.4681, 153.344, -36.4956, 0.67", "20.0477, 155.954, -37.7786, 0.67", "20.5031, 158.071, -38.5644, 0.33", "21.6732, 162.808, -40.024, 0.67", "22.2919, 165.738, -40.5721, 0.33", "23.0428, 169.947, -41.0103, 0.67", "23.6077, 174.492, -41.4505, 0.33", "23.7151, 175.605, -41.623, 0.67", "23.8069, 176.969, -42.0418, 0.33", "23.809, 179.146, -42.9596, 0.67", "23.7582, 180.734, -43.7515, 0.67", "23.3866, 185.764, -46.381, 0.67", "23.2338, 187.923, -47.5086, 1.33", "22.9191, 193.24, -50.4883, 0.33", "22.8271, 195.185, -51.6424, 0.67", "22.8321, 196.419, -52.4109, 0.67", "22.9295, 198.443, -53.652, 0.33", "23.4439, 203.041, -56.1657, 0.67", "23.8316, 205.602, -57.3636, 0.33", "23.9136, 206.065, -57.5541, 0.67", "24.9168, 210.669, -59.5465, 0.33", "25.1837, 211.81, -60.0539, 0.67", "26.2337, 215.622, -61.753, 0.33", "26.6071, 216.947, -62.242, 1.33" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-11.4921, 103.421, -3.18507, 0.67", "-10.5724, 107.336, -3.94948, 0.67", "-8.93824, 112.741, -5.0757, 0.67", "-8.33749, 115.196, -5.54317, 0.67", "-7.90994, 117.659, -6.00095, 0.67", "-7.47259, 120.904, -6.53223, 0.67", "-7.28127, 122.8, -6.80527, 0.67", "-6.96057, 125.67, -6.97262, 0.67", "-6.6606, 129.06, -6.90972, 0.67", "-6.48335, 132.304, -6.96321, 0.67", "-6.41337, 135.954, -7.06568, 0.67", "-6.45534, 138.679, -7.12978, 0.67", "-6.54797, 145.458, -7.17239, 0.67", "-6.48244, 149.159, -7.06392, 0.67", "-6.18432, 152.846, -6.94837, 0.67" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "0.961337, 15.1063, 3.96986, 0.67", "1.86698, 17.5475, 5.67151, 0.67", "2.47635, 20.3892, 7.46354, 0.67", "3.36958, 26.1575, 10.2126, 0.67", "3.48782, 27.3709, 10.7296, 1.33", "3.6599, 29.8918, 11.7399, 0.67", "3.72694, 32.3039, 12.6648, 0.67", "3.82457, 39.072, 15.1211, 0.67", "3.69678, 47.1323, 17.8384, 0.67", "3.59427, 49.2642, 18.4712, 0.67", "3.23019, 53.8389, 19.888, 0.67", "3.02451, 56.4593, 20.6067, 0.67", "2.94593, 57.9254, 20.9701, 0.67", "3.1173, 61.9141, 21.7958, 0.67", "3.65314, 67.5979, 22.8502, 0.67", "3.96158, 69.5282, 23.1566, 0.67", "5.22433, 75.4348, 23.8404, 0.67", "5.64411, 77.2183, 24.0003, 0.67", "6.72267, 81.5154, 24.4051, 0.67", "7.17394, 83.327, 24.5574, 0.67", "7.88045, 85.9003, 24.7786, 0.67", "9.12535, 90.5331, 25.3618, 0.67", "9.58864, 92.5898, 25.7387, 0.67", "10.5582, 97.4244, 26.7366, 0.67", "10.9653, 100.005, 27.3372, 0.67", "11.3691, 102.556, 27.9377, 0.67", "12.0449, 107.177, 29.0732, 0.67", "12.3276, 109.176, 29.5874, 0.67", "12.9389, 113.14, 30.5634, 0.67", "13.0787, 114.48, 30.8297, 0.67", "13.5124, 118.725, 31.7553, 0.67", "12.9657, 129.637, 33.3181, 0.67", "14.0198, 140.289, 35.9367, 0.67", "13.6331, 151.176, 37.6958, 0.67", "14.6945, 161.672, 40.8282, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "0.961337, 15.1063, 3.96986, 1.33", "-1.42081, 19.8135, 4.84619, 1.33", "-3.30493, 23.1966, 5.22514, 1.33", "-5.47408, 27.1856, 5.51755, 1.33", "-9.46466, 34.7752, 5.90593, 1.33", "-10.6954, 37.263, 6.00886, 1.33", "-11.6387, 39.2983, 6.08808, 0.67", "-14.1748, 44.6902, 6.31067, 0.67", "-15.2618, 47.1551, 6.3947, 0.67", "-16.1672, 49.2771, 6.30877, 0.67", "-16.7964, 50.8987, 6.12346, 0.67", "-17.7259, 53.2826, 5.93068, 0.67", "-18.9983, 56.3823, 5.73489, 0.67", "-20.2486, 59.1632, 5.61064, 0.67", "-21.6412, 61.793, 5.453, 0.67", "-22.8327, 63.7851, 5.29539, 0.67", "-24.2932, 65.9296, 5.07686, 0.67", "-25.9564, 68.1606, 4.78546, 0.67" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "8.33225, 40.9837, -1.9452, 0.33", "11.3712, 55.6726, -1.9452, 0.33", "14.4101, 70.3615, -1.9452, 0.33" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "92.2395, 36.6211, 23.0699, 1.33", "92.9035, 36.5534, 26.7374, 1.33", "93.1943, 36.5238, 28.3431, 0.67", "94.4834, 36.3924, 35.4632, 0.67", "95.0865, 35.1397, 46.2596, 0.67", "97.9458, 32.1518, 56.3184, 0.67", "100.211, 30.1425, 66.7658, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "92.2395, 36.6211, 23.0699, 0.33", "94.5065, 37.3891, 23.4038, 0.33", "95.8872, 37.6951, 23.5453, 0.67", "98.503, 38.0543, 23.7335, 0.33", "101.654, 38.0532, 23.8102, 0.33", "103.619, 37.8413, 23.7857, 0.67", "105.98, 37.4302, 23.7029, 0.33", "109.227, 36.4957, 23.4614, 0.67", "111.456, 35.5978, 23.2078, 0.67", "115.194, 33.6769, 22.6416, 0.67", "117.116, 32.5242, 22.3317, 0.33", "118.173, 31.8516, 22.1681, 0.67", "119.598, 30.946, 21.9725, 0.33", "121.017, 30.125, 21.8267, 0.67", "123.29, 29.0531, 21.6897, 0.33", "124.811, 28.5532, 21.7774, 0.67", "128.242, 27.5455, 22.0517, 0.33", "129.807, 27.1208, 22.2045, 0.67", "132.134, 26.5604, 22.4819, 0.33", "135.209, 25.8809, 22.9083, 0.67", "142.079, 24.5613, 24.0116, 0.67", "153.38, 21.1123, 25.1618, 0.67", "164.825, 17.966, 25.3977, 0.67", "176.452, 15.903, 24.3081, 0.67" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "7.42403, -102.668, 2.47591, 0.67", "8.0747, -103.994, 1.75747, 0.67", "8.93961, -106.074, 0.893228, 0.67", "9.92547, -108.714, 0.0301585, 0.67", "11.3612, -112.546, -1.21144, 0.67", "13.095, -117.176, -2.67493, 0.67", "13.9347, -119.545, -3.37757, 0.67", "15.6026, -124.665, -4.65084, 0.67", "16.2053, -126.909, -5.07625, 0.67", "16.9059, -129.66, -5.58522, 0.33", "17.2984, -131.122, -5.82442, 0.67", "17.7462, -132.856, -6.14342, 0.67", "19.3809, -139.126, -7.4515, 0.67", "20.5964, -144.427, -8.53623, 0.67", "21.6067, -148.736, -9.35213, 0.33", "22.0283, -150.687, -9.64149, 1.33", "22.2878, -151.888, -9.80198, 0.33", "22.7702, -153.826, -9.9997, 0.33", "23.4902, -156.964, -10.3157, 0.67", "24.2025, -160.061, -10.5849, 0.67", "24.834, -163.09, -10.7766, 0.67", "25.7348, -167.012, -11.1335, 0.67", "26.421, -170.007, -11.4913, 0.67", "27.6467, -174.79, -12.2043, 0.67", "28.0692, -176.164, -12.471, 0.33", "28.5367, -177.461, -12.7796, 0.33", "29.2773, -178.975, -13.2101, 0.67", "32.2638, -184.089, -14.821, 0.67", "33.4524, -185.806, -15.425, 0.67", "35.5381, -188.361, -16.2717, 0.67", "37.2275, -190.236, -16.9073, 0.67", "38.7462, -191.971, -17.5083, 0.67", "39.6014, -193.012, -17.8626, 0.33", "41.9714, -195.835, -18.7753, 0.67", "43.3801, -197.752, -19.3527, 0.67", "44.7594, -199.906, -19.9212, 0.33", "47.2701, -203.964, -20.6451, 0.67", "48.5419, -206.079, -20.9138, 0.33", "49.2432, -207.113, -20.9587, 0.67", "51.0913, -209.479, -20.8517, 0.33", "52.2632, -210.676, -20.6457, 1.33", "54.8251, -212.933, -20.1528, 0.33", "56.5389, -214.134, -19.7476, 0.33", "59.6411, -216.127, -19.008, 0.33", "61.5963, -217.364, -18.5219, 0.67", "64.6759, -219.238, -17.5759, 0.33", "66.8347, -220.467, -16.9561, 0.67", "69.9086, -222.062, -16.3209, 0.33" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "7.42403, -102.668, 2.47591, 0.67", "6.70027, -105.889, 2.48673, 0.67", "6.1939, -108.679, 2.82152, 0.67", "5.49824, -114.444, 3.81143, 0.67", "5.19562, -118.174, 4.27241, 0.67", "4.9188, -121.048, 4.38742, 0.67", "4.79655, -123.347, 4.37039, 0.67", "4.85111, -127.143, 4.19104, 0.67", "5.21751, -130.609, 3.90402, 0.67", "5.72528, -134.042, 3.68387, 0.67", "6.05643, -138.141, 3.30364, 0.67", "6.21746, -141.933, 3.00411, 0.67", "6.19695, -145.248, 2.80265, 0.67", "6.05184, -148.115, 2.68431, 0.67", "5.72291, -152.765, 2.726, 0.67", "5.43708, -157.036, 2.92993, 0.67", "5.06957, -162.592, 3.26448, 0.67", "4.75893, -166.042, 3.42865, 0.33", "4.58302, -170.143, 3.69277, 0.67", "4.5831, -170.964, 3.76181, 0.33", "4.76022, -173.149, 4.00288, 0.67", "5.00086, -174.994, 4.25702, 0.33", "5.60392, -178.959, 4.94892, 0.67", "6.20797, -182.586, 5.68656, 0.67", "7.11162, -189.401, 7.29728, 0.67", "7.40898, -192.144, 7.99235, 0.33", "7.72444, -195.867, 9.05977, 0.67" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-3.45058, -25.2885, -4.80487, 0.67", "-6.28363, -26.4376, -3.11654, 0.67", "-9.06502, -27.5402, -1.79149, 0.67", "-10.5633, -28.1625, -1.17708, 0.67", "-14.7729, -29.9409, 0.340647, 0.67", "-21.2536, -32.4065, 2.28412, 0.67", "-23.7066, -33.3607, 2.97951, 0.67", "-26.1163, -34.2905, 3.58777, 0.67", "-27.9868, -35.0095, 4.03503, 0.67", "-30.2469, -35.806, 4.50634, 0.67", "-34.5355, -37.2074, 5.21579, 0.67", "-37.3741, -38.0413, 5.96535, 0.67", "-40.1619, -38.7523, 6.75614, 0.67", "-41.8147, -39.1657, 7.31025, 0.33", "-43.2882, -39.4911, 7.83918, 0.33", "-45.0619, -39.8904, 8.53522, 0.33", "-48.7075, -40.8378, 10.0896, 0.67", "-51.5039, -41.2765, 10.9444, 0.33", "-60.7569, -43.401, 12.4683, 0.33", "-69.9445, -46.1197, 13.4218, 0.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-3.45058, -25.2885, -4.80487, 1.33", "-3.70559, -29.8182, -3.99058, 1.33", "-3.74962, -33.4682, -3.67983, 1.33", "-3.75765, -39.2194, -3.45553, 1.33", "-3.76487, -44.3815, -3.25419, 1.33", "-3.77359, -50.6254, -3.01067, 1.33", "-3.78115, -56.0385, -2.79955, 1.33", "-4.00539, -63.8638, -2.84622, 1.33", "-4.03776, -67.7658, -3.00965, 1.33" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-32.281, 32.6497, -25.9771, 0.67", "-33.1518, 32.5354, -27.4892, 0.67", "-34.5931, 32.3302, -30.2215, 0.67", "-35.227, 32.2516, -31.3977, 0.67", "-36.579, 32.1005, -33.7359, 0.67", "-37.4922, 32.0188, -35.3432, 0.67", "-39.6835, 31.8228, -39.2002, 0.67", "-41.0816, 31.7387, -41.6469, 0.33", "-41.5298, 31.7274, -42.3488, 0.67", "-42.2, 31.7302, -43.4815, 0.33", "-43.3947, 31.766, -45.5402, 0.67" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-32.281, 32.6497, -25.9771, 0.67", "-34.0864, 34.5563, -26.2123, 0.67", "-36.4309, 36.992, -26.528, 0.67", "-38.5089, 39.1731, -26.8962, 0.67", "-40.8003, 41.7401, -27.4742, 0.67", "-43.9567, 45.276, -28.2703, 0.67", "-46.7202, 48.3717, -28.9674, 0.67", "-48.9773, 50.9133, -29.6609, 0.67", "-50.9414, 53.3199, -30.3816, 0.67", "-53.2795, 56.3619, -31.4003, 2.0" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "26.6071, 216.947, -62.242, 0.33", "25.7323, 217.697, -62.9911, 0.33", "25.4794, 217.914, -63.2076, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "26.6071, 216.947, -62.242, 0.33", "26.9742, 217.914, -65.2967, 0.33", "27.163, 218.412, -66.8681, 0.67" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-6.18432, 152.846, -6.94837, 0.67", "-6.61092, 157.26, -10.0914, 0.67", "-7.81609, 162.887, -14.3152, 0.67", "-8.29387, 165.118, -15.9897, 0.67", "-9.37375, 170.161, -19.7744, 0.67", "-9.77378, 172.028, -21.1764, 0.33", "-10.4405, 175.142, -23.5132, 0.33", "-11.0849, 177.184, -25.4564, 0.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-6.18432, 152.846, -6.94837, 0.67", "-6.89597, 154.091, -8.48059, 0.67", "-7.32178, 154.836, -9.39738, 0.67", "-8.56086, 157.004, -12.0652, 1.33" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "14.6945, 161.672, 40.8282, 0.67", "14.4226, 171.788, 43.065, 0.67", "13.207, 181.221, 47.053, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "14.6945, 161.672, 40.8282, 0.67", "16.9781, 172.296, 43.5354, 0.67", "20.5577, 182.406, 46.5709, 0.67" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-25.9564, 68.1606, 4.78546, 0.67", "-26.8915, 74.9579, 4.00423, 0.67", "-27.4571, 77.7167, 3.82052, 0.67", "-28.4126, 82.0175, 3.62874, 0.67", "-29.4207, 86.3203, 3.47248, 0.67", "-30.2936, 90.2763, 3.28277, 0.67", "-31.6188, 96.5912, 2.93416, 0.67", "-33.1232, 103.114, 2.58098, 0.67", "-33.5917, 105.26, 2.45482, 0.67", "-34.1623, 107.805, 2.27158, 0.67", "-35.1676, 113.667, 1.7582, 0.67", "-35.7624, 118.319, 1.26149, 0.67", "-35.932, 121.898, 0.864712, 0.67", "-36.0135, 125.505, 0.465539, 0.67", "-36.0167, 127.825, 0.235921, 0.67", "-35.8813, 133.315, -0.195148, 0.67", "-35.7304, 135.429, -0.307655, 0.67", "-35.0293, 140.128, -0.471669, 0.67", "-34.0874, 144.309, -0.481236, 0.67", "-33.4524, 147.272, -0.314014, 0.67", "-33.1291, 149.086, -0.105577, 0.67", "-32.7555, 152.506, 0.656832, 0.67", "-32.5762, 155.034, 1.34506, 0.67", "-32.4733, 158.578, 2.44971, 0.67", "-32.5043, 163.38, 3.97698, 0.67", "-32.5764, 166.096, 4.78599, 0.67", "-32.5378, 170.436, 5.88667, 0.67", "-32.5314, 173.282, 6.40551, 0.67", "-32.4405, 175.493, 6.5715, 0.67", "-32.1846, 177.813, 6.52929, 0.67", "-31.3929, 182.497, 6.22297, 0.67", "-30.498, 186.99, 5.7939, 0.67", "-29.3796, 192.356, 4.95343, 0.67", "-28.437, 196.588, 4.21904, 0.67", "-27.7532, 199.724, 3.62793, 0.67", "-28.1568, 210.394, 1.51042, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-25.9564, 68.1606, 4.78546, 0.67", "-26.0239, 71.7365, 4.30326, 0.67", "-26.2613, 75.5278, 3.99123, 0.67", "-26.7264, 78.0646, 3.89689, 0.67", "-28.1251, 83.2303, 4.01087, 1.33", "-29.0902, 86.2294, 4.22476, 0.67", "-30.115, 88.8583, 4.50856, 1.33", "-33.1124, 95.2699, 5.62958, 0.67", "-35.7824, 99.9266, 6.95532, 0.67", "-37.4261, 102.146, 7.86815, 0.67", "-39.555, 104.391, 9.09675, 0.67", "-41.7752, 106.484, 10.4705, 0.67", "-43.6893, 108.125, 11.7225, 0.67", "-46.5767, 110.395, 13.6584, 0.67", "-48.845, 112.525, 15.389, 0.67", "-49.6849, 113.321, 15.9797, 0.67", "-55.8347, 123.531, 16.1429, 0.67", "-61.6292, 133.661, 18.6245, 0.67", "-67.0929, 144.086, 20.7114, 0.67", "-74.5095, 153.316, 20.5509, 0.67" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "7.72444, -195.867, 9.05977, 0.67", "9.64329, -195.114, 11.0251, 0.67", "10.8876, -194.626, 12.2995, 0.67", "18.1863, -193.638, 19.5081, 0.67", "24.3781, -194.165, 27.7205, 0.67", "30.6675, -195.195, 35.8123, 0.67", "36.6246, -194.054, 44.148, 0.67", "42.1701, -191.623, 52.5224, 0.67", "48.0405, -189.177, 60.6682, 0.67", "54.3174, -188.051, 68.7673, 0.67", "60.7486, -185.734, 76.5124, 0.67", "68.3506, -184.518, 83.3677, 0.67", "75.5017, -185.351, 90.733, 0.67", "83.3083, -187.998, 96.9491, 0.67", "92.3062, -190.994, 101.058, 0.67", "101.161, -195.663, 103.856, 0.67", "110.25, -198.044, 108.129, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "7.72444, -195.867, 9.05977, 0.33", "8.06797, -198.529, 7.97032, 0.33", "8.39506, -201.286, 6.89497, 0.67", "8.57929, -203.447, 6.10384, 0.33", "8.72408, -208.263, 4.36836, 0.67", "8.73577, -209.563, 3.93017, 0.67", "8.70498, -211.565, 3.28781, 0.67", "8.59546, -212.9, 2.88906, 0.33", "8.22188, -215.49, 2.1378, 0.67", "7.73731, -217.703, 1.62596, 0.33", "7.25424, -219.542, 1.33347, 0.67", "6.78413, -221.225, 1.06649, 0.33", "6.58974, -221.933, 0.96483, 0.67", "6.05126, -223.587, 0.711409, 0.33", "5.6051, -224.978, 0.554376, 0.67", "4.63593, -234.667, -1.19832, 0.67", "4.0716, -244.395, -2.9379, 0.67" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-69.9445, -46.1197, 13.4218, 0.67", "-78.1484, -48.6926, 15.6059, 0.67", "-85.4562, -52.4288, 19.0594, 0.67", "-92.2755, -57.0615, 22.5206, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-69.9445, -46.1197, 13.4218, 0.67", "-79.8586, -49.6005, 17.098, 0.67", "-90.3683, -51.5744, 20.0919, 0.67", "-101.097, -53.4811, 22.2399, 0.67" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-4.03776, -67.7658, -3.00965, 0.67", "-2.88409, -73.8637, -2.33324, 0.67", "-2.34619, -77.2029, -2.3008, 0.67", "-2.18511, -78.5976, -2.35679, 0.67", "-1.93095, -80.582, -2.53592, 0.67", "-1.29679, -84.9584, -3.06989, 0.67", "-0.807922, -87.5492, -3.44831, 0.67", "0.287897, -91.1919, -4.38525, 0.67", "0.912146, -92.7649, -4.87091, 0.67", "1.76142, -95.2466, -5.83179, 0.67", "2.04603, -96.2672, -6.30531, 0.67", "2.45519, -97.9939, -7.14754, 0.67", "2.8369, -99.9036, -7.94633, 0.67", "3.70504, -103.846, -9.36132, 0.67", "4.35126, -107.064, -10.5438, 0.67", "4.67879, -109.532, -11.4161, 0.67", "4.84011, -111.569, -12.1002, 0.67", "4.84321, -112.569, -12.4017, 0.67", "4.75965, -114.212, -12.7809, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-4.03776, -67.7658, -3.00965, 0.67", "-6.66386, -72.9024, -4.69439, 0.67", "-10.4324, -81.3492, -7.37698, 0.67", "-15.4901, -92.5641, -10.7926, 0.67", "-17.8904, -97.7044, -12.3036, 0.67", "-18.4413, -98.8932, -12.6306, 0.67", "-20.3024, -103.137, -13.7167, 0.67", "-21.9744, -107.968, -14.817, 0.67", "-23.5326, -112.942, -15.5331, 0.67", "-24.206, -115.096, -15.5581, 0.67", "-25.5621, -119.386, -15.4784, 0.67", "-26.6588, -122.847, -15.3441, 0.67", "-29.4673, -131.459, -14.82, 0.67", "-31.3701, -136.98, -14.3296, 0.67", "-33.3071, -141.814, -13.782, 0.67", "-33.8922, -143.008, -13.6313, 0.67", "-36.3174, -147.061, -13.1974, 0.67", "-37.2727, -148.639, -13.0303, 0.67", "-40.3057, -154.06, -12.5627, 0.67", "-44.4965, -161.836, -12.1173, 0.67", "-46.9094, -166.326, -11.8676, 0.67", "-49.0186, -170.213, -11.6267, 0.67", "-52.7796, -177.07, -11.1814, 0.67", "-57.2247, -185.783, -10.6334, 0.67", "-59.4869, -190.988, -10.3369, 0.67", "-60.3104, -193.084, -10.2424, 0.67", "-61.761, -196.531, -10.0085, 0.67", "-62.8076, -198.7, -9.77542, 0.67" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-53.2795, 56.3619, -31.4003, 0.33", "-56.7751, 59.0328, -31.6888, 0.33", "-58.7903, 60.8488, -32.21, 0.67", "-60.012, 62.0298, -32.5948, 0.67", "-61.3661, 63.3696, -33.0301, 0.33", "-62.5645, 64.5728, -33.3641, 0.67", "-64.8246, 66.8512, -34.0416, 0.33", "-67.405, 69.668, -34.908, 0.67", "-69.658, 72.0168, -35.625, 0.33", "-70.5741, 73.0209, -35.931, 0.67", "-72.2052, 74.8775, -36.5023, 0.33", "-74.5831, 77.6916, -37.3169, 0.33", "-75.8325, 79.1782, -37.7124, 0.33", "-76.9335, 80.3778, -37.9498, 1.33", "-79.2339, 83.0543, -38.6751, 0.33" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-53.2795, 56.3619, -31.4003, 0.33", "-53.598, 62.8098, -29.241, 0.33", "-53.6973, 64.3772, -28.8194, 0.33", "-53.9232, 69.1622, -27.865, 0.67", "-54.1654, 75.3867, -26.8522, 0.33", "-54.1973, 76.7937, -26.6565, 0.67", "-54.2318, 81.104, -26.1642, 0.33", "-54.3128, 84.2738, -26.0869, 0.67", "-54.388, 89.3202, -26.2352, 0.33", "-54.4178, 90.6762, -26.3657, 0.67", "-54.574, 92.6555, -26.6206, 0.33", "-54.7657, 94.3123, -26.8218, 0.67", "-55.8208, 100.982, -27.5088, 0.33", "-56.3639, 103.692, -27.7597, 0.33", "-56.974, 106.231, -27.9569, 0.67", "-59.22, 114.111, -28.273, 0.67", "-60.1925, 117.054, -28.4309, 0.33", "-60.9865, 119.351, -28.4998, 0.67", "-62.2104, 122.826, -28.5325, 0.33", "-62.5359, 123.769, -28.5518, 0.67", "-63.8702, 127.975, -28.593, 0.33", "-65.297, 132.967, -28.4952, 0.67", "-66.3466, 138.347, -28.2146, 0.67", "-66.7266, 141.138, -27.9119, 0.33", "-66.897, 143.66, -27.5635, 0.33", "-66.952, 148.868, -26.7819, 0.67", "-66.8592, 152.511, -26.1248, 0.33", "-66.6866, 156.586, -25.1867, 0.67", "-66.456, 161.964, -24.2628, 0.67", "-66.2869, 165.843, -23.7309, 0.33", "-66.1519, 168.672, -23.4551, 0.67", "-66.1771, 171.792, -23.4175, 0.33", "-66.3369, 174.21, -23.5547, 0.33", "-66.9733, 179.868, -24.166, 0.33", "-67.1201, 181.182, -24.3947, 0.67", "-67.5371, 183.371, -24.7118, 0.33", "-68.5656, 187.819, -25.2713, 0.67", "-69.6327, 191.69, -25.7092, 0.33", "-70.8798, 195.55, -25.9736, 0.33", "-71.5987, 197.588, -25.991, 0.67", "-74.226, 204.523, -25.9749, 0.33", "-74.4662, 205.117, -25.9653, 0.67", "-75.4059, 207.48, -25.8753, 0.33", "-76.2101, 209.623, -25.8821, 0.67", "-77.2743, 212.712, -25.9481, 0.33", "-77.8218, 214.636, -26.0076, 0.33", "-77.9176, 215.085, -26.0368, 0.67", "-78.544, 218.283, -26.3421, 0.33", "-79.5436, 223.5, -27.1308, 0.67", "-80.0792, 226.254, -27.5769, 0.33", "-80.4073, 228.044, -27.9188, 0.67", "-81.2336, 232.138, -28.7578, 0.33", "-81.6694, 234.048, -29.1647, 0.67", "-82.5259, 237.684, -29.9421, 0.33", "-83.2943, 240.533, -30.492, 0.67", "-84.2588, 243.811, -31.0544, 0.33", "-84.9053, 246.131, -31.3988, 0.33", "-85.1661, 247.084, -31.505, 0.67", "-86.0322, 250.241, -31.689, 0.33", "-86.5103, 252.081, -31.6554, 0.33", "-86.8199, 252.931, -31.5855, 0.67", "-88.5131, 256.625, -30.9885, 0.33", "-89.2202, 258.046, -30.7349, 0.33", "-89.9133, 259.247, -30.4685, 0.67", "-93.4275, 264.714, -29.0687, 0.33", "-96.6073, 269.511, -27.8024, 0.33", "-98.8128, 272.848, -26.9204, 0.67", "-101.379, 276.665, -26.2567, 0.33", "-103.036, 279.102, -26.0661, 0.33", "-103.535, 279.833, -26.0452, 0.67", "-105.451, 282.681, -26.286, 0.33", "-106.959, 285.405, -26.8102, 0.33", "-110.7, 292.377, -28.8243, 0.33", "-111.725, 294.239, -29.6105, 0.67" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-8.56086, 157.004, -12.0652, 0.67", "-7.21607, 160.446, -11.1245, 0.67", "-6.0615, 163.401, -10.3169, 0.67", "-4.47079, 167.473, -9.20428, 0.67", "-3.29167, 170.491, -8.37952, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-8.56086, 157.004, -12.0652, 0.67", "-10.7152, 162.052, -15.3015, 0.67", "-11.3522, 163.371, -16.2263, 0.67", "-12.6968, 165.903, -18.0845, 0.67", "-14.048, 168.132, -19.8402, 0.67", "-16.6668, 172.487, -23.1883, 0.67", "-18.1371, 174.924, -24.892, 0.67", "-18.7312, 175.822, -25.4548, 0.33", "-19.1003, 176.445, -25.7595, 0.67", "-20.4429, 179.037, -26.7687, 0.67", "-21.8027, 181.719, -27.6808, 0.67", "-23.9751, 185.787, -29.0907, 0.67", "-26.3338, 190.288, -30.6221, 0.67", "-27.2056, 191.982, -31.2358, 0.67", "-29.6505, 196.633, -32.9993, 0.67", "-30.8499, 198.814, -33.8703, 0.67", "-33.0176, 202.274, -35.5398, 0.67", "-33.9834, 203.726, -36.3759, 0.33", "-34.4767, 204.371, -36.7754, 0.67", "-35.6901, 205.656, -37.5317, 0.33", "-35.9668, 205.903, -37.6309, 0.67", "-37.5742, 207.28, -37.7629, 0.33", "-38.4834, 208.096, -37.5746, 0.67", "-40.5293, 209.839, -36.8171, 0.33", "-42.0107, 211.151, -36.2284, 0.33", "-43.2878, 212.381, -35.6936, 0.67", "-45.9104, 214.963, -34.6467, 0.33", "-47.2737, 216.33, -34.1102, 0.33", "-49.1096, 218.383, -33.396, 0.33", "-50.9329, 220.887, -32.7381, 0.67", "-51.9951, 222.494, -32.4191, 0.33", "-53.3339, 224.442, -32.2579, 0.67", "-53.9665, 225.357, -32.1915, 0.67", "-55.622, 227.758, -31.8334, 0.67", "-56.4511, 229.109, -31.5545, 0.33", "-57.5015, 230.687, -30.9743, 0.33", "-58.4652, 232.064, -30.5936, 0.67", "-61.2148, 235.901, -30.1712, 0.67", "-62.1831, 237.182, -30.0871, 0.67", "-63.2251, 238.429, -30.1302, 0.33", "-65.6167, 241.203, -30.3679, 0.33", "-69.9947, 246.534, -31.3702, 0.67", "-71.83, 248.521, -32.3852, 0.67" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-74.5095, 153.316, 20.5509, 0.67", "-80.9399, 163.615, 21.8821, 0.67", "-88.2589, 173.17, 23.5976, 0.67", "-94.2522, 182.912, 27.8212, 0.67", "-98.1778, 193.249, 33.1118, 0.67", "-103.121, 203.065, 38.4337, 0.67", "-108.106, 212.104, 44.8666, 0.67", "-113.476, 221.916, 49.7513, 0.67", "-120.846, 230.125, 54.69, 0.67", "-127.82, 237.472, 61.2101, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-74.5095, 153.316, 20.5509, 0.67", "-79.1831, 162.131, 22.9649, 0.67", "-86.1307, 169.151, 25.1951, 0.67", "-93.479, 174.499, 29.5049, 0.67", "-100.334, 181.694, 31.4897, 0.67", "-105.752, 189.984, 34.0278, 0.67", "-111.119, 198.125, 37.0908, 0.67", "-116.136, 206.497, 40.192, 0.67", "-122.248, 214.212, 42.7916, 0.67", "-127.637, 221.401, 47.5835, 0.67" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-92.2755, -57.0615, 22.5206, 0.67", "-95.131, -56.1465, 26.1418, 0.67", "-97.5378, -55.4655, 30.1255, 0.67", "-100.43, -55.3405, 33.8409, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-92.2755, -57.0615, 22.5206, 0.67", "-101.551, -62.7158, 22.3786, 0.67", "-110.415, -69.0313, 21.9376, 0.67" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-101.097, -53.4811, 22.2399, 0.67", "-107.333, -54.9259, 23.807, 0.67", "-113.595, -55.9068, 25.5861, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-101.097, -53.4811, 22.2399, 0.67", "-110.775, -55.6361, 23.5849, 0.67", "-120.514, -56.8282, 25.4824, 0.67" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "4.75965, -114.212, -12.7809, 0.67", "6.46037, -117.48, -13.6131, 0.67", "7.34142, -118.968, -14.0868, 0.67", "8.74079, -121.447, -14.9073, 0.33", "9.47771, -122.706, -15.4121, 0.67", "10.4031, -124.179, -16.054, 0.33", "11.5419, -125.839, -16.8759, 0.67", "12.5038, -127.241, -17.7499, 0.33", "13.2009, -128.121, -18.3243, 0.67", "15.0302, -129.951, -19.309, 0.33", "15.6655, -130.55, -19.5621, 0.67", "16.8463, -131.807, -19.8306, 0.33", "17.4062, -132.545, -19.8148, 0.67", "18.6258, -134.148, -19.4267, 0.33", "20.3373, -136.478, -18.6122, 0.67", "21.5451, -138.036, -18.0204, 0.33", "23.2759, -140.156, -17.488, 0.67", "25.1013, -142.423, -16.8796, 0.33", "26.879, -144.602, -16.3405, 0.67", "28.1415, -146.04, -16.0532, 0.33", "30.9095, -148.997, -15.8636, 0.33", "34.6297, -152.302, -16.0191, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.75965, -114.212, -12.7809, 0.67", "4.43528, -118.163, -13.2442, 0.67", "4.2372, -122.83, -13.7773, 0.67", "4.16694, -125.933, -14.1177, 0.33", "4.17077, -127.053, -14.2813, 0.67", "4.37965, -131.608, -14.5765, 0.33", "4.54458, -133.5, -14.6049, 0.67", "5.00569, -135.483, -14.5294, 0.33", "5.29982, -136.164, -14.4114, 0.67", "6.93705, -138.988, -13.5749, 0.33", "10.6105, -144.452, -11.7896, 0.33", "11.3161, -145.335, -11.4752, 0.67", "13.4426, -147.96, -10.5299, 0.33", "15.3456, -150.201, -9.67193, 0.67", "17.084, -152.17, -8.90587, 0.33", "18.8066, -154.062, -8.17395, 0.67", "19.8681, -155.336, -8.08842, 0.33", "20.1791, -155.765, -8.04338, 0.67", "21.4218, -158.19, -7.66464, 0.33", "25.7958, -168.419, -5.96052, 0.33", "32.0192, -177.68, -5.24947, 0.33", "38.9899, -186.307, -4.29987, 0.33", "46.5477, -194.068, -2.02439, 0.33", "54.6639, -201.012, 0.683458, 0.33", "63.4959, -207.512, 1.52371, 0.33", "72.1653, -214.059, 3.24299, 0.33", "80.8946, -220.456, 5.1612, 0.33", "89.6699, -226.987, 6.31273, 0.33" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-62.8076, -198.7, -9.77542, 0.67", "-63.9974, -201.673, -11.0366, 0.67", "-64.495, -202.917, -11.564, 0.67", "-66.7205, -208.478, -13.923, 0.67", "-68.1122, -211.956, -15.3982, 0.67", "-68.6664, -213.341, -15.9857, 0.67", "-69.6806, -215.876, -17.0608, 0.67" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-62.8076, -198.7, -9.77542, 0.67", "-62.6609, -200.98, -9.52242, 0.67", "-62.4394, -203.009, -9.25555, 0.67", "-62.1726, -206.855, -8.59282, 0.67", "-61.9243, -212.645, -7.32796, 0.67", "-61.9119, -216.891, -6.23391, 0.67", "-61.9062, -218.884, -5.72047, 0.67", "-61.9666, -221.799, -4.88327, 0.67", "-62.1058, -225.224, -3.75161, 0.67", "-62.3052, -227.095, -2.98904, 0.67", "-62.4705, -229.295, -1.76601, 0.67" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-79.2339, 83.0543, -38.6751, 0.67", "-77.2497, 83.3407, -39.6527, 0.67", "-69.854, 84.1761, -42.6021, 0.67", "-65.2523, 84.5218, -44.2521, 0.67", "-61.9782, 84.6296, -45.5433, 0.33", "-59.0612, 84.6531, -46.6443, 0.67", "-56.079, 84.7074, -47.7046, 0.33", "-53.593, 84.7098, -48.5445, 0.33", "-48.7398, 84.5768, -49.9028, 0.67", "-43.4192, 84.4592, -51.3896, 0.33", "-40.7827, 84.6348, -52.306, 0.67", "-37.2707, 85.1427, -53.8352, 0.33", "-33.7527, 85.7021, -55.4751, 0.33", "-32.2465, 86.0185, -56.2113, 0.67", "-28.6507, 87.012, -57.9505, 0.67", "-21.1088, 89.6045, -61.657, 0.33", "-17.1625, 91.1114, -63.9945, 0.67" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-79.2339, 83.0543, -38.6751, 0.67", "-81.1986, 84.7251, -38.7554, 0.67", "-82.6781, 85.9552, -38.7187, 0.67", "-83.6988, 86.8153, -38.7165, 0.67", "-85.3215, 88.2845, -38.709, 0.67", "-86.7924, 89.713, -38.6856, 0.33", "-87.2969, 90.2266, -38.6727, 0.67", "-89.5409, 92.6206, -38.5602, 0.33", "-90.4146, 93.6308, -38.5372, 1.33", "-92.5002, 96.0191, -38.4908, 0.33", "-94.312, 98.2644, -38.521, 0.33", "-94.7077, 98.7707, -38.5314, 0.67", "-95.5807, 99.9238, -38.564, 0.33", "-96.9398, 101.772, -38.6588, 0.67", "-99.324, 104.906, -38.7472, 0.33", "-100.982, 106.9, -38.9333, 1.33" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-3.29167, 170.491, -8.37952, 0.67", "-4.43067, 176.8, -9.58845, 0.67", "-5.82788, 183.693, -11.0041, 0.67", "-7.8851, 193.367, -13.0048, 0.67", "-8.92537, 198.538, -14.0635, 0.67", "-9.61486, 202.113, -14.7686, 0.67", "-10.3562, 206.101, -15.4585, 0.67", "-11.2178, 210.983, -16.1062, 0.33", "-11.3327, 211.892, -16.2441, 0.67", "-11.576, 214.895, -16.4344, 0.33", "-11.6152, 217.06, -16.4258, 0.67", "-11.3099, 220.292, -16.467, 0.33", "-11.0263, 221.527, -16.495, 0.67", "-9.94801, 224.207, -16.6828, 0.33", "-9.15854, 225.799, -16.9318, 0.67", "-7.79066, 227.996, -17.3535, 0.33", "-5.45617, 231.237, -18.1251, 0.33", "-3.76827, 233.466, -18.7514, 0.67", "-1.76936, 236.28, -19.6513, 0.33", "-1.76936, 236.28, -19.6513, 0.67", "1.0777, 241.305, -21.2446, 0.33", "2.60656, 244.389, -22.1946, 0.33", "3.98522, 247.911, -23.3095, 0.67", "5.42051, 252.855, -24.8997, 0.33", "6.16624, 255.935, -25.8857, 0.33", "6.86839, 259.312, -27.0651, 0.33", "7.0845, 260.954, -27.7451, 0.67", "7.48848, 266.146, -29.8871, 0.33", "7.50693, 267.179, -30.3127, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-3.29167, 170.491, -8.37952, 0.67", "-5.52236, 175.816, -6.43428, 0.67", "-7.94504, 181.599, -4.32163, 0.67" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-69.6806, -215.876, -17.0608, 0.33", "-75.1401, -221.252, -14.2149, 0.33", "-77.1767, -223.723, -13.5702, 0.67", "-78.5807, -225.696, -13.3675, 0.33", "-79.563, -227.276, -13.3126, 0.67", "-81.4341, -230.389, -13.0335, 0.67", "-83.3636, -233.986, -12.6343, 0.67", "-85.0716, -237.78, -12.427, 0.67", "-86.2727, -241.241, -12.058, 0.67", "-87.0659, -243.826, -11.6633, 0.67", "-88.4942, -248.168, -10.775, 0.33", "-89.5402, -251.161, -9.94168, 0.67", "-90.8427, -254.428, -8.71782, 0.33", "-91.5782, -255.977, -8.00515, 0.67", "-92.8621, -258.741, -6.8715, 0.67", "-93.9971, -261.074, -6.0779, 0.67", "-95.0552, -263.127, -5.52403, 0.67", "-96.4542, -265.828, -4.84533, 0.67", "-98.2757, -269.353, -3.93063, 0.67", "-100.754, -274.509, -2.55279, 0.67", "-101.71, -276.477, -1.9993, 0.67", "-103.144, -279.393, -1.23698, 0.67", "-104.663, -281.96, -0.70607, 0.67", "-107.099, -285.822, -0.0832053, 0.67", "-109.361, -289.174, 0.336979, 0.67", "-111.582, -292.477, 0.575349, 0.67", "-114.599, -297.334, 0.765305, 0.67", "-119.326, -305.039, 0.833805, 0.67", "-121.7, -308.914, 0.773517, 0.67", "-123.881, -312.6, 0.598488, 0.33", "-127.193, -318.394, 0.293476, 0.67", "-128.873, -321.5, 0.113267, 0.33", "-130.713, -325.126, -0.0573316, 0.33", "-131.223, -326.384, -0.0171333, 0.67", "-132.285, -329.412, 0.201115, 0.33", "-133.221, -332.486, 0.533129, 0.33", "-134.332, -335.934, 1.12604, 0.33", "-135.078, -338.71, 1.58713, 0.33", "-135.865, -344.646, 2.70854, 0.33", "-136.104, -348.347, 3.53095, 0.33", "-140.653, -361.199, 4.47098, 0.33" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-69.6806, -215.876, -17.0608, 0.67", "-71.4413, -217.517, -17.6879, 0.67", "-73.6353, -219.608, -18.3199, 0.67", "-76.5186, -222.887, -19.2028, 0.67", "-77.77, -224.557, -19.6892, 0.33", "-79.4329, -226.928, -20.3888, 0.67", "-81.1478, -229.473, -21.1264, 0.33", "-81.5373, -230.12, -21.3214, 0.33", "-83.3971, -233.825, -22.3966, 0.67", "-84.7315, -236.519, -23.1511, 0.33", "-85.9135, -238.923, -23.8948, 0.33", "-86.6322, -240.446, -24.3901, 0.67", "-87.8486, -243.194, -25.2772, 0.33", "-88.6208, -244.927, -25.8018, 0.33", "-89.7401, -247.464, -26.4267, 0.33", "-89.8842, -247.822, -26.4964, 0.67", "-90.7784, -250.449, -26.9209, 0.33", "-91.207, -251.966, -27.1153, 0.67", "-91.7141, -254.183, -27.3138, 0.33", "-92.354, -256.907, -27.5432, 0.33", "-92.7447, -258.852, -27.682, 0.67", "-93.6429, -263.189, -27.9645, 0.33", "-94.4436, -266.772, -28.1727, 0.67", "-95.2815, -270.266, -28.2612, 0.67", "-96.1474, -273.905, -28.2229, 0.33", "-96.9499, -277.469, -28.1249, 0.33", "-97.1381, -278.337, -28.0854, 0.33", "-97.8264, -281.278, -27.8856, 0.33", "-98.5268, -283.665, -27.5924, 0.67", "-99.0155, -285.252, -27.3321, 0.33", "-99.1368, -285.622, -27.2812, 0.67", "-99.9306, -287.59, -27.0889, 0.33", "-100.382, -288.345, -27.0611, 0.67", "-103.666, -292.512, -27.1461, 0.33", "-104.806, -293.628, -27.2426, 0.67", "-107.334, -295.718, -27.4867, 0.33", "-108.326, -296.408, -27.6428, 1.33", "-114.284, -300.025, -28.848, 0.33", "-114.73, -300.3, -28.9764, 0.67", "-117.107, -301.748, -29.8385, 0.33", "-117.107, -301.748, -29.8385, 0.67", "-120.813, -304.662, -31.2748, 0.33", "-121.608, -305.416, -31.6392, 0.67", "-124.606, -308.967, -33.2844, 0.33", "-126.451, -311.606, -34.2648, 0.33", "-126.706, -312.065, -34.4322, 0.67", "-127.741, -314.074, -35.0935, 0.33", "-127.957, -314.578, -35.2222, 0.67", "-129.029, -317.07, -35.8311, 0.33", "-130.517, -320.752, -36.515, 0.33", "-131.395, -324.14, -37.2439, 0.67" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-62.4705, -229.295, -1.76601, 0.33", "-63.543, -234.155, 1.72955, 0.33", "-64.7447, -237.939, 4.33626, 0.67", "-65.6596, -240.121, 5.85337, 0.33", "-67.5577, -243.835, 9.30482, 0.67", "-70.4747, -248.484, 14.353, 0.33", "-71.9206, -250.063, 16.6857, 0.67", "-73.6943, -250.995, 19.375, 0.33", "-75.1625, -251.517, 21.5268, 0.67", "-81.7425, -252.974, 31.0115, 0.33", "-83.7366, -253.12, 33.8037, 0.67", "-89.0104, -252.991, 41.524, 0.67", "-92.1119, -252.736, 46.6529, 1.33", "-98.0272, -259.726, 61.6572, 1.33", "-101.11, -269.234, 76.2514, 1.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-62.4705, -229.295, -1.76601, 0.67", "-63.619, -230.692, -1.03533, 0.67", "-64.9158, -232.269, -0.210239, 0.67", "-66.1479, -233.767, 0.573615, 0.33", "-67.1039, -234.93, 1.18188, 0.67", "-69.3825, -237.701, 2.63158, 0.33", "-70.7139, -239.32, 3.47863, 0.33", "-76.3466, -245.085, 6.65273, 0.33", "-81.9845, -249.527, 11.3664, 0.33" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-7.94504, 181.599, -4.32163, 0.67", "-8.69069, 184.481, -4.46387, 0.67", "-9.42604, 187.293, -4.6861, 0.67", "-10.9589, 193.235, -5.2207, 0.67", "-11.3238, 194.734, -5.35715, 0.67", "-12.3987, 199.475, -5.85053, 0.67", "-12.862, 201.361, -6.04209, 0.67", "-13.5339, 204.082, -6.37178, 0.67", "-13.8627, 205.53, -6.50926, 0.67", "-14.4353, 208.025, -6.65799, 0.33", "-15.2572, 211.811, -6.64523, 0.67", "-15.7873, 214.504, -6.42924, 0.67", "-16.0164, 215.566, -6.32641, 1.33", "-16.9572, 220.372, -5.79792, 0.33", "-17.3851, 222.471, -5.50501, 1.33", "-17.7868, 224.26, -5.24602, 0.33", "-18.0773, 225.36, -5.11763, 0.67", "-19.0683, 228.539, -4.95347, 0.67", "-19.9506, 230.933, -4.96828, 0.67", "-20.9088, 232.881, -5.20752, 0.33", "-22.0826, 234.786, -5.65053, 0.67", "-24.1609, 237.344, -6.61886, 0.33", "-25.9702, 238.827, -7.66211, 0.67", "-27.5175, 239.245, -9.03542, 0.67", "-30.0829, 239.281, -11.6047, 0.67", "-31.6897, 239.105, -13.3256, 0.67", "-33.3546, 238.678, -15.185, 0.67", "-35.0891, 237.957, -17.2407, 0.33", "-39.9551, 235.432, -23.2619, 0.33", "-40.418, 235.174, -23.8381, 0.67" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-7.94504, 181.599, -4.32163, 0.67", "-9.61116, 183.562, -2.19746, 0.67", "-10.3326, 184.495, -1.28584, 0.67", "-10.9648, 185.392, -0.518061, 0.67", "-13.2124, 189.347, 2.56062, 0.67", "-14.4922, 191.635, 4.29236, 0.67", "-15.8861, 194.204, 6.13378, 0.33", "-16.2163, 194.853, 6.45623, 2.0", "-17.3582, 196.901, 7.13093, 0.67", "-20.0367, 201.094, 7.88924, 0.33", "-21.6406, 203.29, 7.91205, 0.67", "-23.046, 205.049, 7.79215, 0.67", "-29.0095, 211.257, 7.29349, 0.33", "-30.7172, 212.992, 7.38563, 0.33", "-31.9212, 214.14, 7.55711, 1.33", "-33.6681, 215.774, 7.9857, 0.67", "-34.6428, 216.731, 8.36196, 0.67", "-36.8672, 218.965, 9.82651, 0.33", "-40.4321, 222.958, 13.7865, 1.33", "-41.0936, 223.822, 14.6472, 0.67", "-41.9366, 225.124, 15.9456, 0.33" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_56", "dend_31", "dend_22", "dend_9", "dend_0", "dend_58", "dend_57", "dend_51", "dend_32", "dend_30", "dend_23", "dend_19", "dend_10", "dend_6", "dend_1", "dend_60", "dend_59", "dend_55", "dend_52", "dend_44", "dend_33", "dend_29", "dend_24", "dend_21", "dend_20", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_54", "dend_53", "dend_48", "dend_45", "dend_41", "dend_34", "dend_26", "dend_25", "dend_13", "dend_12", "dend_4", "dend_3", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_17", "dend_14", "dend_40", "dend_39", "dend_37", "dend_36", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_56", "dend_31", "dend_22", "dend_9", "dend_0", "dend_58", "dend_57", "dend_51", "dend_32", "dend_30", "dend_23", "dend_19", "dend_10", "dend_6", "dend_1", "dend_60", "dend_59", "dend_55", "dend_52", "dend_44", "dend_33", "dend_29", "dend_24", "dend_21", "dend_20", "dend_18", "dend_11", "dend_8", "dend_7", "dend_5", "dend_2", "dend_54", "dend_53", "dend_48", "dend_45", "dend_41", "dend_34", "dend_26", "dend_25", "dend_13", "dend_12", "dend_4", "dend_3", "dend_50", "dend_49", "dend_47", "dend_46", "dend_43", "dend_42", "dend_38", "dend_35", "dend_28", "dend_27", "dend_17", "dend_14", "dend_40", "dend_39", "dend_37", "dend_36", "dend_16", "dend_15" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_56", "dend_56", "dend_56", "dend_56", "dend_31", "dend_22", "dend_22", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_0", "axon_0", "axon_0", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_20", "dend_20", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_7", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L4_LBC_057a5b90cc_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_22, id: dend_22, parent: soma_0
create dend_22
public dend_22
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_58, id: dend_58, parent: dend_56
create dend_58
public dend_58
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_31
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_30, id: dend_30, parent: dend_22
create dend_30
public dend_30
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_9
create dend_19
public dend_19
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_32
create dend_44
public dend_44
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_23
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_6
create dend_8
public dend_8
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_33
create dend_41
public dend_41
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_62
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_31, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, axon_0, axon_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_8, dend_8, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_56(0), soma_0(0.49999988841484605)
    connect dend_31(0), soma_0(0.49999988841484605)
    connect dend_22(0), soma_0(0.49999988841484605)
    connect dend_9(0), soma_0(0.49999988841484605)
    connect dend_0(0), soma_0(0.49999988841484605)
    connect axon_0(0), soma_0(1.0)
    connect dend_58(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_30(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.4489, -11.1277, 1.96857, 2.53905 ) }
    soma_0 { pt3dadd( -2.21373, -9.99102, 1.77288, 4.60052 ) }
    soma_0 { pt3dadd( -1.97857, -8.85434, 1.57719, 5.7745 ) }
    soma_0 { pt3dadd( -1.74341, -7.71767, 1.3815, 6.94848 ) }
    soma_0 { pt3dadd( -1.50825, -6.581, 1.18581, 8.08333 ) }
    soma_0 { pt3dadd( -1.27308, -5.44432, 0.990126, 9.17802 ) }
    soma_0 { pt3dadd( -1.03792, -4.30765, 0.794438, 10.2727 ) }
    soma_0 { pt3dadd( -0.802757, -3.17097, 0.59875, 11.3674 ) }
    soma_0 { pt3dadd( -0.567594, -2.0343, 0.403062, 12.0266 ) }
    soma_0 { pt3dadd( -0.332431, -0.897626, 0.207374, 12.2828 ) }
    soma_0 { pt3dadd( -0.0972679, 0.239047, 0.0116859, 12.3212 ) }
    soma_0 { pt3dadd( 0.137895, 1.37572, -0.184002, 11.9564 ) }
    soma_0 { pt3dadd( 0.373058, 2.5124, -0.37969, 10.9173 ) }
    soma_0 { pt3dadd( 0.608221, 3.64907, -0.575378, 9.90283 ) }
    soma_0 { pt3dadd( 0.843384, 4.78574, -0.771067, 9.18979 ) }
    soma_0 { pt3dadd( 1.07855, 5.92242, -0.966755, 8.44172 ) }
    soma_0 { pt3dadd( 1.31371, 7.05909, -1.16244, 7.69366 ) }
    soma_0 { pt3dadd( 1.54887, 8.19576, -1.35813, 6.80206 ) }
    soma_0 { pt3dadd( 1.78404, 9.33244, -1.55382, 5.87376 ) }
    soma_0 { pt3dadd( 2.0192, 10.4691, -1.74951, 4.94547 ) }
    soma_0 { pt3dadd( 2.25436, 11.6058, -1.9452, 2.87974 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 21/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 6.41062, 0.934565, -2.60158, 1.33 ) }
    dend_56 { pt3dadd( 6.98134, 4.22544, -1.35913, 1.33 ) }
    dend_56 { pt3dadd( 7.92517, 9.66777, 0.695564, 0.67 ) }
    dend_56 { pt3dadd( 9.19568, 16.9938, 3.46144, 0.67 ) }
    dend_56 { pt3dadd( 9.90149, 21.0636, 4.99797, 1.33 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 26/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -3.05938, -11.0354, 1.30842, 3.33 ) }
    dend_31 { pt3dadd( -3.5305, -12.1147, 1.30842, 3.33 ) }
    // Section: dend_22, id: dend_22, parent: soma_0 (entry count 28/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -2.75938, 10.7101, -11.0115, 1.33 ) }
    dend_22 { pt3dadd( -6.67634, 10.8078, -13.8028, 1.33 ) }
    dend_22 { pt3dadd( -12.2705, 10.9473, -17.7892, 2.0 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 31/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -2.30938, 11.9281, -10.0116, 1.33 ) }
    dend_9 { pt3dadd( -3.02804, 18.4658, -7.85679, 1.33 ) }
    dend_9 { pt3dadd( -3.54179, 25.2091, -5.85652, 2.0 ) }
    dend_9 { pt3dadd( -4.01258, 30.9822, -4.35273, 1.33 ) }
    dend_9 { pt3dadd( -4.38642, 34.9408, -3.50132, 1.33 ) }
    dend_9 { pt3dadd( -4.76918, 39.8505, -2.46934, 2.0 ) }
    dend_9 { pt3dadd( -5.01218, 43.9031, -1.74225, 1.33 ) }
    dend_9 { pt3dadd( -5.07623, 46.0007, -1.474, 1.33 ) }
    dend_9 { pt3dadd( -5.12719, 50.0322, -1.3306, 1.33 ) }
    dend_9 { pt3dadd( -5.36306, 55.2915, -1.34826, 1.33 ) }
    dend_9 { pt3dadd( -5.67359, 60.9768, -1.60894, 1.33 ) }
    dend_9 { pt3dadd( -6.02848, 65.2764, -1.86518, 1.33 ) }
    dend_9 { pt3dadd( -6.35291, 68.0916, -2.06005, 0.67 ) }
    dend_9 { pt3dadd( -6.95753, 72.6807, -2.3152, 0.67 ) }
    dend_9 { pt3dadd( -7.40061, 75.9587, -2.53064, 0.67 ) }
    dend_9 { pt3dadd( -7.87806, 79.1078, -2.73282, 0.67 ) }
    dend_9 { pt3dadd( -8.25472, 81.3279, -2.88044, 0.67 ) }
    dend_9 { pt3dadd( -8.81086, 84.5215, -2.99616, 0.67 ) }
    dend_9 { pt3dadd( -9.5841, 89.3345, -3.11324, 0.67 ) }
    dend_9 { pt3dadd( -10.6015, 96.0798, -3.13262, 0.67 ) }
    dend_9 { pt3dadd( -11.2736, 101.67, -3.16799, 0.67 ) }
    dend_9 { pt3dadd( -11.4921, 103.421, -3.18507, 0.67 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 53/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.750619, 12.9676, 0.238424, 2.67 ) }
    dend_0 { pt3dadd( 0.961337, 15.1063, 3.96986, 2.0 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 55/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.25436, 11.6058, -1.9452, 0.960025 ) }
    axon_0 { pt3dadd( 5.29331, 26.2947, -1.9452, 0.960025 ) }
    axon_0 { pt3dadd( 8.33225, 40.9837, -1.9452, 0.960025 ) }
    // Section: dend_58, id: dend_58, parent: dend_56 (entry count 58/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 9.90149, 21.0636, 4.99797, 0.67 ) }
    dend_58 { pt3dadd( 16.0653, 24.3865, 7.59245, 0.67 ) }
    dend_58 { pt3dadd( 21.4246, 26.8133, 10.228, 0.67 ) }
    dend_58 { pt3dadd( 25.5182, 28.1154, 12.2932, 0.67 ) }
    dend_58 { pt3dadd( 28.4439, 28.9052, 13.7156, 0.33 ) }
    dend_58 { pt3dadd( 31.7978, 29.691, 15.3664, 0.67 ) }
    dend_58 { pt3dadd( 33.8164, 30.1193, 16.3574, 0.67 ) }
    dend_58 { pt3dadd( 36.1773, 30.2616, 17.5311, 0.67 ) }
    dend_58 { pt3dadd( 41.3814, 30.2865, 20.1343, 0.67 ) }
    dend_58 { pt3dadd( 44.7976, 30.2138, 21.5732, 0.67 ) }
    dend_58 { pt3dadd( 46.6295, 30.231, 22.1596, 0.67 ) }
    dend_58 { pt3dadd( 47.7828, 30.2866, 22.4595, 0.67 ) }
    dend_58 { pt3dadd( 50.8978, 30.6288, 22.9275, 0.67 ) }
    dend_58 { pt3dadd( 55.7957, 31.3901, 23.195, 0.67 ) }
    dend_58 { pt3dadd( 57.9787, 31.7845, 23.2452, 0.33 ) }
    dend_58 { pt3dadd( 60.2766, 32.1855, 23.1829, 0.67 ) }
    dend_58 { pt3dadd( 61.7691, 32.4476, 23.1219, 0.33 ) }
    dend_58 { pt3dadd( 68.9234, 33.8093, 22.8478, 0.67 ) }
    dend_58 { pt3dadd( 71.2849, 34.2452, 22.7797, 0.67 ) }
    dend_58 { pt3dadd( 75.1766, 34.8327, 22.7621, 0.67 ) }
    dend_58 { pt3dadd( 79.285, 35.4153, 22.7296, 0.67 ) }
    dend_58 { pt3dadd( 84.5463, 36.1109, 22.7086, 0.67 ) }
    dend_58 { pt3dadd( 86.993, 36.3682, 22.7454, 0.67 ) }
    dend_58 { pt3dadd( 90.0062, 36.5435, 22.9063, 0.67 ) }
    dend_58 { pt3dadd( 92.2395, 36.6211, 23.0699, 0.67 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 83/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 9.90149, 21.0636, 4.99797, 0.67 ) }
    dend_57 { pt3dadd( 10.5258, 24.4078, 4.93188, 0.67 ) }
    dend_57 { pt3dadd( 14.3461, 41.8171, 4.49971, 0.67 ) }
    dend_57 { pt3dadd( 15.593, 47.0882, 4.3217, 0.67 ) }
    dend_57 { pt3dadd( 17.7856, 55.7244, 3.9723, 0.67 ) }
    dend_57 { pt3dadd( 21.493, 68.8261, 3.35198, 0.67 ) }
    dend_57 { pt3dadd( 22.7046, 72.6973, 3.22121, 0.67 ) }
    dend_57 { pt3dadd( 24.4511, 77.0966, 3.1235, 0.67 ) }
    dend_57 { pt3dadd( 25.3854, 78.8343, 3.13288, 0.67 ) }
    dend_57 { pt3dadd( 27.2399, 81.5424, 3.22436, 0.67 ) }
    dend_57 { pt3dadd( 29.7089, 84.3451, 3.28057, 0.67 ) }
    dend_57 { pt3dadd( 34.9201, 88.8913, 3.68718, 0.67 ) }
    dend_57 { pt3dadd( 37.8685, 91.306, 3.86888, 0.67 ) }
    dend_57 { pt3dadd( 45.8387, 97.409, 4.28338, 0.67 ) }
    dend_57 { pt3dadd( 50.7259, 101.022, 4.47038, 0.67 ) }
    dend_57 { pt3dadd( 53.3842, 102.85, 4.48755, 0.67 ) }
    dend_57 { pt3dadd( 55.7162, 104.388, 4.40136, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_57 { pt3dadd( 59.156, 106.608, 4.06091, 0.67 ) }
    dend_57 { pt3dadd( 61.9473, 108.526, 3.74102, 0.67 ) }
    dend_57 { pt3dadd( 64.8783, 110.886, 3.40461, 0.67 ) }
    dend_57 { pt3dadd( 67.6507, 113.83, 3.11473, 0.67 ) }
    dend_57 { pt3dadd( 69.3992, 116.105, 2.97912, 0.67 ) }
    dend_57 { pt3dadd( 71.9921, 120.263, 2.86928, 0.67 ) }
    dend_57 { pt3dadd( 74.0425, 124.461, 2.93669, 0.67 ) }
    dend_57 { pt3dadd( 76.3049, 130.682, 3.14252, 0.67 ) }
    dend_57 { pt3dadd( 77.1342, 133.465, 3.27626, 0.67 ) }
    dend_57 { pt3dadd( 78.0427, 137.083, 3.48505, 0.67 ) }
    dend_57 { pt3dadd( 78.5741, 139.356, 3.65251, 0.67 ) }
    dend_57 { pt3dadd( 80.4659, 147.156, 4.29552, 0.67 ) }
    dend_57 { pt3dadd( 81.0202, 149.588, 4.51773, 0.67 ) }
    dend_57 { pt3dadd( 81.7957, 152.699, 4.80914, 0.33 ) }
    dend_57 { pt3dadd( 82.8521, 157.797, 5.0984, 0.67 ) }
    dend_57 { pt3dadd( 83.2862, 160.11, 5.15062, 0.67 ) }
    dend_57 { pt3dadd( 84.1999, 165.01, 5.08556, 0.67 ) }
    dend_57 { pt3dadd( 84.4946, 167.094, 4.97849, 0.67 ) }
    dend_57 { pt3dadd( 84.9457, 170.791, 4.64586, 0.67 ) }
    dend_57 { pt3dadd( 85.5893, 177.259, 3.84554, 0.67 ) }
    dend_57 { pt3dadd( 85.736, 178.94, 3.6336, 0.67 ) }
    dend_57 { pt3dadd( 85.9649, 181.69, 3.30696, 0.33 ) }
    dend_57 { pt3dadd( 86.2013, 184.678, 3.05662, 0.33 ) }
    dend_57 { pt3dadd( 86.594, 189.085, 2.90451, 0.67 ) }
    dend_57 { pt3dadd( 86.7748, 191.149, 2.95408, 0.67 ) }
    dend_57 { pt3dadd( 87.1418, 195.215, 3.34749, 0.67 ) }
    dend_57 { pt3dadd( 87.171, 197.431, 3.48839, 0.33 ) }
    dend_57 { pt3dadd( 87.0017, 200.747, 3.61032, 0.67 ) }
    dend_57 { pt3dadd( 86.7449, 204.266, 3.65134, 0.33 ) }
    dend_57 { pt3dadd( 86.6709, 204.853, 3.65048, 0.67 ) }
    dend_57 { pt3dadd( 86.323, 207.325, 3.41449, 0.33 ) }
    dend_57 { pt3dadd( 85.8829, 212.333, 2.26285, 0.67 ) }
    dend_57 { pt3dadd( 85.7726, 215.577, 1.27847, 0.67 ) }
    dend_57 { pt3dadd( 85.846, 217.558, 0.620664, 0.67 ) }
    dend_57 { pt3dadd( 86.071, 220.062, -0.159438, 0.67 ) }
    dend_57 { pt3dadd( 86.6396, 224.278, -1.31892, 0.67 ) }
    dend_57 { pt3dadd( 87.461, 228.392, -2.27603, 0.67 ) }
    dend_57 { pt3dadd( 88.1938, 231.177, -2.71858, 0.33 ) }
    dend_57 { pt3dadd( 89.2937, 235.075, -3.06244, 0.67 ) }
    dend_57 { pt3dadd( 90.0858, 237.708, -3.06873, 0.33 ) }
    dend_57 { pt3dadd( 90.5201, 239.119, -2.94145, 0.67 ) }
    dend_57 { pt3dadd( 90.9998, 241.084, -2.52321, 0.33 ) }
    dend_57 { pt3dadd( 91.2332, 242.656, -2.10782, 0.67 ) }
    dend_57 { pt3dadd( 91.5684, 245.684, -1.3885, 0.67 ) }
    dend_57 { pt3dadd( 91.7266, 248.536, -0.782931, 0.33 ) }
    dend_57 { pt3dadd( 91.7755, 249.446, -0.618575, 0.67 ) }
    dend_57 { pt3dadd( 91.8002, 251.483, -0.24124, 0.33 ) }
    dend_57 { pt3dadd( 91.7543, 253.004, 0.0379075, 0.67 ) }
    dend_57 { pt3dadd( 91.5952, 256.364, 0.585533, 0.33 ) }
    dend_57 { pt3dadd( 91.5056, 257.605, 0.719552, 0.67 ) }
    dend_57 { pt3dadd( 91.3693, 260.987, 1.13215, 0.33 ) }
    // Section: dend_51, id: dend_51, parent: dend_31 (entry count 51/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -3.5305, -12.1147, 1.30842, 0.67 ) }
    dend_51 { pt3dadd( -2.61035, -14.4049, 0.894823, 0.67 ) }
    dend_51 { pt3dadd( -1.12132, -19.6679, -0.235094, 1.33 ) }
    dend_51 { pt3dadd( -0.565247, -22.4178, -0.710332, 1.33 ) }
    dend_51 { pt3dadd( -0.19088, -25.2275, -1.11523, 1.33 ) }
    dend_51 { pt3dadd( 0.576839, -29.9233, -1.47083, 1.33 ) }
    dend_51 { pt3dadd( 0.862302, -32.2129, -1.67688, 0.67 ) }
    dend_51 { pt3dadd( 1.14348, -35.7363, -2.02703, 1.33 ) }
    dend_51 { pt3dadd( 1.27543, -38.5249, -2.30468, 1.33 ) }
    dend_51 { pt3dadd( 1.37618, -40.0787, -2.39389, 0.67 ) }
    dend_51 { pt3dadd( 2.76937, -53.6247, -2.51213, 0.67 ) }
    dend_51 { pt3dadd( 3.39002, -58.9271, -2.19072, 0.67 ) }
    dend_51 { pt3dadd( 3.48624, -59.9029, -2.10443, 0.67 ) }
    dend_51 { pt3dadd( 3.72648, -62.1595, -1.84658, 0.67 ) }
    dend_51 { pt3dadd( 4.37844, -67.3204, -1.19109, 0.67 ) }
    dend_51 { pt3dadd( 4.64176, -69.2582, -0.87385, 0.67 ) }
    dend_51 { pt3dadd( 5.04684, -74.4349, 0.243596, 1.33 ) }
    dend_51 { pt3dadd( 5.42313, -78.8022, 1.14666, 0.67 ) }
    dend_51 { pt3dadd( 5.67055, -81.8743, 1.60678, 0.67 ) }
    dend_51 { pt3dadd( 5.89191, -85.3156, 2.01693, 0.67 ) }
    dend_51 { pt3dadd( 6.16794, -89.9262, 2.33085, 0.67 ) }
    dend_51 { pt3dadd( 6.49857, -94.9322, 2.5733, 0.67 ) }
    dend_51 { pt3dadd( 7.0429, -99.9676, 2.56405, 0.67 ) }
    dend_51 { pt3dadd( 7.42403, -102.668, 2.47591, 0.67 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 75/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.5305, -12.1147, 1.30842, 1.33 ) }
    dend_32 { pt3dadd( -3.50787, -15.844, -0.422156, 1.33 ) }
    dend_32 { pt3dadd( -3.47065, -21.9807, -3.26989, 1.33 ) }
    dend_32 { pt3dadd( -3.45058, -25.2885, -4.80487, 1.33 ) }
    // Section: dend_30, id: dend_30, parent: dend_22 (entry count 79/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -12.2705, 10.9473, -17.7892, 1.33 ) }
    dend_30 { pt3dadd( -15.0125, 7.97068, -18.2318, 1.33 ) }
    dend_30 { pt3dadd( -17.704, 4.55071, -18.6332, 1.33 ) }
    dend_30 { pt3dadd( -19.1534, 2.71073, -18.8555, 0.67 ) }
    dend_30 { pt3dadd( -21.3551, 0.237293, -19.1567, 0.67 ) }
    dend_30 { pt3dadd( -23.9979, -2.36034, -19.3797, 0.67 ) }
    dend_30 { pt3dadd( -27.8478, -6.14509, -19.4743, 0.67 ) }
    dend_30 { pt3dadd( -28.8733, -7.16218, -19.5555, 0.67 ) }
    dend_30 { pt3dadd( -31.3991, -9.61659, -20.0853, 0.67 ) }
    dend_30 { pt3dadd( -33.7372, -11.5861, -20.8622, 0.67 ) }
    dend_30 { pt3dadd( -37.1761, -14.0951, -22.3844, 0.67 ) }
    dend_30 { pt3dadd( -41.0047, -16.9605, -24.4822, 0.67 ) }
    dend_30 { pt3dadd( -45.9201, -20.5557, -27.4434, 0.67 ) }
    dend_30 { pt3dadd( -48.2448, -22.3188, -28.9995, 0.67 ) }
    dend_30 { pt3dadd( -50.9712, -24.5225, -31.0401, 0.67 ) }
    dend_30 { pt3dadd( -54.9777, -27.9805, -34.3328, 0.67 ) }
    dend_30 { pt3dadd( -57.7928, -30.4475, -36.7665, 0.67 ) }
    dend_30 { pt3dadd( -61.2804, -33.47, -39.6005, 0.67 ) }
    dend_30 { pt3dadd( -62.626, -34.6789, -40.4126, 0.67 ) }
    dend_30 { pt3dadd( -63.585, -35.6103, -40.9258, 0.33 ) }
    dend_30 { pt3dadd( -63.8545, -35.8743, -41.0556, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( -65.052, -36.9326, -41.4964, 0.33 ) }
    dend_30 { pt3dadd( -66.329, -37.9108, -41.8454, 1.33 ) }
    dend_30 { pt3dadd( -69.2385, -40.1664, -42.6246, 0.33 ) }
    dend_30 { pt3dadd( -70.395, -40.8909, -42.9818, 0.33 ) }
    dend_30 { pt3dadd( -71.3288, -41.3931, -43.3405, 1.33 ) }
    dend_30 { pt3dadd( -73.9938, -42.6402, -44.7871, 0.33 ) }
    dend_30 { pt3dadd( -74.9005, -43.0036, -45.4037, 0.67 ) }
    dend_30 { pt3dadd( -77.5683, -43.8611, -47.5024, 0.33 ) }
    dend_30 { pt3dadd( -80.9233, -44.6837, -50.5546, 0.67 ) }
    dend_30 { pt3dadd( -82.4853, -44.9222, -52.0155, 0.67 ) }
    dend_30 { pt3dadd( -85.8173, -45.185, -55.4229, 0.33 ) }
    dend_30 { pt3dadd( -86.402, -45.1703, -56.0567, 0.67 ) }
    dend_30 { pt3dadd( -87.437, -45.0814, -57.2034, 0.33 ) }
    dend_30 { pt3dadd( -88.2343, -44.9969, -58.0547, 0.67 ) }
    dend_30 { pt3dadd( -90.0967, -44.879, -59.8264, 0.33 ) }
    dend_30 { pt3dadd( -91.5481, -44.935, -60.9474, 1.33 ) }
    dend_30 { pt3dadd( -95.0161, -45.3514, -63.1517, 0.33 ) }
    dend_30 { pt3dadd( -95.8519, -45.5478, -63.6884, 1.33 ) }
    dend_30 { pt3dadd( -98.2693, -46.3777, -65.1716, 0.33 ) }
    dend_30 { pt3dadd( -101.451, -47.8346, -66.9712, 0.33 ) }
    dend_30 { pt3dadd( -102.877, -48.6517, -67.7092, 0.33 ) }
    dend_30 { pt3dadd( -103.374, -48.9797, -67.918, 1.33 ) }
    dend_30 { pt3dadd( -105.574, -50.7788, -68.7908, 0.33 ) }
    dend_30 { pt3dadd( -106.897, -51.8917, -69.2917, 0.67 ) }
    dend_30 { pt3dadd( -108.02, -52.9045, -69.8364, 0.33 ) }
    dend_30 { pt3dadd( -108.439, -53.2997, -70.0854, 0.67 ) }
    dend_30 { pt3dadd( -109.707, -54.3383, -70.8052, 0.33 ) }
    dend_30 { pt3dadd( -111.107, -55.3117, -71.4845, 1.33 ) }
    dend_30 { pt3dadd( -114.633, -57.5592, -73.0227, 0.33 ) }
    dend_30 { pt3dadd( -116.548, -58.6729, -73.751, 0.67 ) }
    dend_30 { pt3dadd( -117.6, -59.2531, -74.1048, 0.33 ) }
    dend_30 { pt3dadd( -119.235, -60.1183, -74.5964, 0.67 ) }
    dend_30 { pt3dadd( -123.994, -62.5297, -76.1088, 0.33 ) }
    dend_30 { pt3dadd( -125.035, -63.0367, -76.3999, 1.33 ) }
    dend_30 { pt3dadd( -130.673, -65.7505, -77.8544, 0.33 ) }
    dend_30 { pt3dadd( -131.075, -65.9391, -77.943, 0.67 ) }
    dend_30 { pt3dadd( -132.596, -66.6475, -78.3071, 0.33 ) }
    dend_30 { pt3dadd( -135.478, -67.9976, -79.1234, 0.67 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 38/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -12.2705, 10.9473, -17.7892, 0.67 ) }
    dend_23 { pt3dadd( -15.3041, 15.7733, -18.4328, 0.67 ) }
    dend_23 { pt3dadd( -19.4129, 20.516, -19.9204, 0.67 ) }
    dend_23 { pt3dadd( -21.5159, 22.8353, -20.9063, 0.67 ) }
    dend_23 { pt3dadd( -23.0274, 24.5022, -21.6149, 1.33 ) }
    dend_23 { pt3dadd( -24.8954, 26.5622, -22.4906, 0.67 ) }
    dend_23 { pt3dadd( -26.66, 28.5084, -23.3178, 1.33 ) }
    dend_23 { pt3dadd( -30.498, 31.6323, -25.0307, 0.67 ) }
    dend_23 { pt3dadd( -32.281, 32.6497, -25.9771, 1.33 ) }
    // Section: dend_19, id: dend_19, parent: dend_9 (entry count 47/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -11.4921, 103.421, -3.18507, 0.67 ) }
    dend_19 { pt3dadd( -6.31837, 107.662, -5.68391, 0.67 ) }
    dend_19 { pt3dadd( -4.81228, 109.057, -6.46651, 0.67 ) }
    dend_19 { pt3dadd( 0.116258, 113.764, -9.11268, 0.33 ) }
    dend_19 { pt3dadd( 1.49039, 115.028, -9.8924, 0.67 ) }
    dend_19 { pt3dadd( 4.37961, 117.783, -11.578, 0.33 ) }
    dend_19 { pt3dadd( 6.80638, 120.178, -13.0473, 0.67 ) }
    dend_19 { pt3dadd( 9.4337, 123.039, -14.6042, 0.67 ) }
    dend_19 { pt3dadd( 10.5398, 124.485, -15.3891, 0.33 ) }
    dend_19 { pt3dadd( 12.2536, 126.992, -17.0494, 0.67 ) }
    dend_19 { pt3dadd( 13.5563, 129.438, -18.5554, 0.67 ) }
    dend_19 { pt3dadd( 14.4556, 131.762, -19.9537, 0.33 ) }
    dend_19 { pt3dadd( 14.9998, 133.572, -21.1811, 0.67 ) }
    dend_19 { pt3dadd( 15.5277, 135.417, -22.7077, 0.67 ) }
    dend_19 { pt3dadd( 16.4957, 139.527, -26.2431, 0.33 ) }
    dend_19 { pt3dadd( 17.2177, 143.128, -29.2878, 0.67 ) }
    dend_19 { pt3dadd( 17.936, 146.466, -32.0079, 0.67 ) }
    dend_19 { pt3dadd( 18.6799, 149.863, -34.44, 0.67 ) }
    dend_19 { pt3dadd( 19.4681, 153.344, -36.4956, 0.67 ) }
    dend_19 { pt3dadd( 20.0477, 155.954, -37.7786, 0.67 ) }
    dend_19 { pt3dadd( 20.5031, 158.071, -38.5644, 0.33 ) }
    dend_19 { pt3dadd( 21.6732, 162.808, -40.024, 0.67 ) }
    dend_19 { pt3dadd( 22.2919, 165.738, -40.5721, 0.33 ) }
    dend_19 { pt3dadd( 23.0428, 169.947, -41.0103, 0.67 ) }
    dend_19 { pt3dadd( 23.6077, 174.492, -41.4505, 0.33 ) }
    dend_19 { pt3dadd( 23.7151, 175.605, -41.623, 0.67 ) }
    dend_19 { pt3dadd( 23.8069, 176.969, -42.0418, 0.33 ) }
    dend_19 { pt3dadd( 23.809, 179.146, -42.9596, 0.67 ) }
    dend_19 { pt3dadd( 23.7582, 180.734, -43.7515, 0.67 ) }
    dend_19 { pt3dadd( 23.3866, 185.764, -46.381, 0.67 ) }
    dend_19 { pt3dadd( 23.2338, 187.923, -47.5086, 1.33 ) }
    dend_19 { pt3dadd( 22.9191, 193.24, -50.4883, 0.33 ) }
    dend_19 { pt3dadd( 22.8271, 195.185, -51.6424, 0.67 ) }
    dend_19 { pt3dadd( 22.8321, 196.419, -52.4109, 0.67 ) }
    dend_19 { pt3dadd( 22.9295, 198.443, -53.652, 0.33 ) }
    dend_19 { pt3dadd( 23.4439, 203.041, -56.1657, 0.67 ) }
    dend_19 { pt3dadd( 23.8316, 205.602, -57.3636, 0.33 ) }
    dend_19 { pt3dadd( 23.9136, 206.065, -57.5541, 0.67 ) }
    dend_19 { pt3dadd( 24.9168, 210.669, -59.5465, 0.33 ) }
    dend_19 { pt3dadd( 25.1837, 211.81, -60.0539, 0.67 ) }
    dend_19 { pt3dadd( 26.2337, 215.622, -61.753, 0.33 ) }
    dend_19 { pt3dadd( 26.6071, 216.947, -62.242, 1.33 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 89/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -11.4921, 103.421, -3.18507, 0.67 ) }
    dend_10 { pt3dadd( -10.5724, 107.336, -3.94948, 0.67 ) }
    dend_10 { pt3dadd( -8.93824, 112.741, -5.0757, 0.67 ) }
    dend_10 { pt3dadd( -8.33749, 115.196, -5.54317, 0.67 ) }
    dend_10 { pt3dadd( -7.90994, 117.659, -6.00095, 0.67 ) }
    dend_10 { pt3dadd( -7.47259, 120.904, -6.53223, 0.67 ) }
    dend_10 { pt3dadd( -7.28127, 122.8, -6.80527, 0.67 ) }
    dend_10 { pt3dadd( -6.96057, 125.67, -6.97262, 0.67 ) }
    dend_10 { pt3dadd( -6.6606, 129.06, -6.90972, 0.67 ) }
    dend_10 { pt3dadd( -6.48335, 132.304, -6.96321, 0.67 ) }
    dend_10 { pt3dadd( -6.41337, 135.954, -7.06568, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_10 { pt3dadd( -6.45534, 138.679, -7.12978, 0.67 ) }
    dend_10 { pt3dadd( -6.54797, 145.458, -7.17239, 0.67 ) }
    dend_10 { pt3dadd( -6.48244, 149.159, -7.06392, 0.67 ) }
    dend_10 { pt3dadd( -6.18432, 152.846, -6.94837, 0.67 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 4/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 0.961337, 15.1063, 3.96986, 0.67 ) }
    dend_6 { pt3dadd( 1.86698, 17.5475, 5.67151, 0.67 ) }
    dend_6 { pt3dadd( 2.47635, 20.3892, 7.46354, 0.67 ) }
    dend_6 { pt3dadd( 3.36958, 26.1575, 10.2126, 0.67 ) }
    dend_6 { pt3dadd( 3.48782, 27.3709, 10.7296, 1.33 ) }
    dend_6 { pt3dadd( 3.6599, 29.8918, 11.7399, 0.67 ) }
    dend_6 { pt3dadd( 3.72694, 32.3039, 12.6648, 0.67 ) }
    dend_6 { pt3dadd( 3.82457, 39.072, 15.1211, 0.67 ) }
    dend_6 { pt3dadd( 3.69678, 47.1323, 17.8384, 0.67 ) }
    dend_6 { pt3dadd( 3.59427, 49.2642, 18.4712, 0.67 ) }
    dend_6 { pt3dadd( 3.23019, 53.8389, 19.888, 0.67 ) }
    dend_6 { pt3dadd( 3.02451, 56.4593, 20.6067, 0.67 ) }
    dend_6 { pt3dadd( 2.94593, 57.9254, 20.9701, 0.67 ) }
    dend_6 { pt3dadd( 3.1173, 61.9141, 21.7958, 0.67 ) }
    dend_6 { pt3dadd( 3.65314, 67.5979, 22.8502, 0.67 ) }
    dend_6 { pt3dadd( 3.96158, 69.5282, 23.1566, 0.67 ) }
    dend_6 { pt3dadd( 5.22433, 75.4348, 23.8404, 0.67 ) }
    dend_6 { pt3dadd( 5.64411, 77.2183, 24.0003, 0.67 ) }
    dend_6 { pt3dadd( 6.72267, 81.5154, 24.4051, 0.67 ) }
    dend_6 { pt3dadd( 7.17394, 83.327, 24.5574, 0.67 ) }
    dend_6 { pt3dadd( 7.88045, 85.9003, 24.7786, 0.67 ) }
    dend_6 { pt3dadd( 9.12535, 90.5331, 25.3618, 0.67 ) }
    dend_6 { pt3dadd( 9.58864, 92.5898, 25.7387, 0.67 ) }
    dend_6 { pt3dadd( 10.5582, 97.4244, 26.7366, 0.67 ) }
    dend_6 { pt3dadd( 10.9653, 100.005, 27.3372, 0.67 ) }
    dend_6 { pt3dadd( 11.3691, 102.556, 27.9377, 0.67 ) }
    dend_6 { pt3dadd( 12.0449, 107.177, 29.0732, 0.67 ) }
    dend_6 { pt3dadd( 12.3276, 109.176, 29.5874, 0.67 ) }
    dend_6 { pt3dadd( 12.9389, 113.14, 30.5634, 0.67 ) }
    dend_6 { pt3dadd( 13.0787, 114.48, 30.8297, 0.67 ) }
    dend_6 { pt3dadd( 13.5124, 118.725, 31.7553, 0.67 ) }
    dend_6 { pt3dadd( 12.9657, 129.637, 33.3181, 0.67 ) }
    dend_6 { pt3dadd( 14.0198, 140.289, 35.9367, 0.67 ) }
    dend_6 { pt3dadd( 13.6331, 151.176, 37.6958, 0.67 ) }
    dend_6 { pt3dadd( 14.6945, 161.672, 40.8282, 0.67 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 39/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 0.961337, 15.1063, 3.96986, 1.33 ) }
    dend_1 { pt3dadd( -1.42081, 19.8135, 4.84619, 1.33 ) }
    dend_1 { pt3dadd( -3.30493, 23.1966, 5.22514, 1.33 ) }
    dend_1 { pt3dadd( -5.47408, 27.1856, 5.51755, 1.33 ) }
    dend_1 { pt3dadd( -9.46466, 34.7752, 5.90593, 1.33 ) }
    dend_1 { pt3dadd( -10.6954, 37.263, 6.00886, 1.33 ) }
    dend_1 { pt3dadd( -11.6387, 39.2983, 6.08808, 0.67 ) }
    dend_1 { pt3dadd( -14.1748, 44.6902, 6.31067, 0.67 ) }
    dend_1 { pt3dadd( -15.2618, 47.1551, 6.3947, 0.67 ) }
    dend_1 { pt3dadd( -16.1672, 49.2771, 6.30877, 0.67 ) }
    dend_1 { pt3dadd( -16.7964, 50.8987, 6.12346, 0.67 ) }
    dend_1 { pt3dadd( -17.7259, 53.2826, 5.93068, 0.67 ) }
    dend_1 { pt3dadd( -18.9983, 56.3823, 5.73489, 0.67 ) }
    dend_1 { pt3dadd( -20.2486, 59.1632, 5.61064, 0.67 ) }
    dend_1 { pt3dadd( -21.6412, 61.793, 5.453, 0.67 ) }
    dend_1 { pt3dadd( -22.8327, 63.7851, 5.29539, 0.67 ) }
    dend_1 { pt3dadd( -24.2932, 65.9296, 5.07686, 0.67 ) }
    dend_1 { pt3dadd( -25.9564, 68.1606, 4.78546, 0.67 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 57/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 8.33225, 40.9837, -1.9452, 0.33 ) }
    axon_1 { pt3dadd( 11.3712, 55.6726, -1.9452, 0.33 ) }
    axon_1 { pt3dadd( 14.4101, 70.3615, -1.9452, 0.33 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 92.2395, 36.6211, 23.0699, 1.33 ) }
    dend_60 { pt3dadd( 92.9035, 36.5534, 26.7374, 1.33 ) }
    dend_60 { pt3dadd( 93.1943, 36.5238, 28.3431, 0.67 ) }
    dend_60 { pt3dadd( 94.4834, 36.3924, 35.4632, 0.67 ) }
    dend_60 { pt3dadd( 95.0865, 35.1397, 46.2596, 0.67 ) }
    dend_60 { pt3dadd( 97.9458, 32.1518, 56.3184, 0.67 ) }
    dend_60 { pt3dadd( 100.211, 30.1425, 66.7658, 0.67 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 67/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 92.2395, 36.6211, 23.0699, 0.33 ) }
    dend_59 { pt3dadd( 94.5065, 37.3891, 23.4038, 0.33 ) }
    dend_59 { pt3dadd( 95.8872, 37.6951, 23.5453, 0.67 ) }
    dend_59 { pt3dadd( 98.503, 38.0543, 23.7335, 0.33 ) }
    dend_59 { pt3dadd( 101.654, 38.0532, 23.8102, 0.33 ) }
    dend_59 { pt3dadd( 103.619, 37.8413, 23.7857, 0.67 ) }
    dend_59 { pt3dadd( 105.98, 37.4302, 23.7029, 0.33 ) }
    dend_59 { pt3dadd( 109.227, 36.4957, 23.4614, 0.67 ) }
    dend_59 { pt3dadd( 111.456, 35.5978, 23.2078, 0.67 ) }
    dend_59 { pt3dadd( 115.194, 33.6769, 22.6416, 0.67 ) }
    dend_59 { pt3dadd( 117.116, 32.5242, 22.3317, 0.33 ) }
    dend_59 { pt3dadd( 118.173, 31.8516, 22.1681, 0.67 ) }
    dend_59 { pt3dadd( 119.598, 30.946, 21.9725, 0.33 ) }
    dend_59 { pt3dadd( 121.017, 30.125, 21.8267, 0.67 ) }
    dend_59 { pt3dadd( 123.29, 29.0531, 21.6897, 0.33 ) }
    dend_59 { pt3dadd( 124.811, 28.5532, 21.7774, 0.67 ) }
    dend_59 { pt3dadd( 128.242, 27.5455, 22.0517, 0.33 ) }
    dend_59 { pt3dadd( 129.807, 27.1208, 22.2045, 0.67 ) }
    dend_59 { pt3dadd( 132.134, 26.5604, 22.4819, 0.33 ) }
    dend_59 { pt3dadd( 135.209, 25.8809, 22.9083, 0.67 ) }
    dend_59 { pt3dadd( 142.079, 24.5613, 24.0116, 0.67 ) }
    dend_59 { pt3dadd( 153.38, 21.1123, 25.1618, 0.67 ) }
    dend_59 { pt3dadd( 164.825, 17.966, 25.3977, 0.67 ) }
    dend_59 { pt3dadd( 176.452, 15.903, 24.3081, 0.67 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 91/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 7.42403, -102.668, 2.47591, 0.67 ) }
    dend_55 { pt3dadd( 8.0747, -103.994, 1.75747, 0.67 ) }
    dend_55 { pt3dadd( 8.93961, -106.074, 0.893228, 0.67 ) }
    dend_55 { pt3dadd( 9.92547, -108.714, 0.0301585, 0.67 ) }
    dend_55 { pt3dadd( 11.3612, -112.546, -1.21144, 0.67 ) }
    dend_55 { pt3dadd( 13.095, -117.176, -2.67493, 0.67 ) }
    dend_55 { pt3dadd( 13.9347, -119.545, -3.37757, 0.67 ) }
    dend_55 { pt3dadd( 15.6026, -124.665, -4.65084, 0.67 ) }
    dend_55 { pt3dadd( 16.2053, -126.909, -5.07625, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_55 { pt3dadd( 16.9059, -129.66, -5.58522, 0.33 ) }
    dend_55 { pt3dadd( 17.2984, -131.122, -5.82442, 0.67 ) }
    dend_55 { pt3dadd( 17.7462, -132.856, -6.14342, 0.67 ) }
    dend_55 { pt3dadd( 19.3809, -139.126, -7.4515, 0.67 ) }
    dend_55 { pt3dadd( 20.5964, -144.427, -8.53623, 0.67 ) }
    dend_55 { pt3dadd( 21.6067, -148.736, -9.35213, 0.33 ) }
    dend_55 { pt3dadd( 22.0283, -150.687, -9.64149, 1.33 ) }
    dend_55 { pt3dadd( 22.2878, -151.888, -9.80198, 0.33 ) }
    dend_55 { pt3dadd( 22.7702, -153.826, -9.9997, 0.33 ) }
    dend_55 { pt3dadd( 23.4902, -156.964, -10.3157, 0.67 ) }
    dend_55 { pt3dadd( 24.2025, -160.061, -10.5849, 0.67 ) }
    dend_55 { pt3dadd( 24.834, -163.09, -10.7766, 0.67 ) }
    dend_55 { pt3dadd( 25.7348, -167.012, -11.1335, 0.67 ) }
    dend_55 { pt3dadd( 26.421, -170.007, -11.4913, 0.67 ) }
    dend_55 { pt3dadd( 27.6467, -174.79, -12.2043, 0.67 ) }
    dend_55 { pt3dadd( 28.0692, -176.164, -12.471, 0.33 ) }
    dend_55 { pt3dadd( 28.5367, -177.461, -12.7796, 0.33 ) }
    dend_55 { pt3dadd( 29.2773, -178.975, -13.2101, 0.67 ) }
    dend_55 { pt3dadd( 32.2638, -184.089, -14.821, 0.67 ) }
    dend_55 { pt3dadd( 33.4524, -185.806, -15.425, 0.67 ) }
    dend_55 { pt3dadd( 35.5381, -188.361, -16.2717, 0.67 ) }
    dend_55 { pt3dadd( 37.2275, -190.236, -16.9073, 0.67 ) }
    dend_55 { pt3dadd( 38.7462, -191.971, -17.5083, 0.67 ) }
    dend_55 { pt3dadd( 39.6014, -193.012, -17.8626, 0.33 ) }
    dend_55 { pt3dadd( 41.9714, -195.835, -18.7753, 0.67 ) }
    dend_55 { pt3dadd( 43.3801, -197.752, -19.3527, 0.67 ) }
    dend_55 { pt3dadd( 44.7594, -199.906, -19.9212, 0.33 ) }
    dend_55 { pt3dadd( 47.2701, -203.964, -20.6451, 0.67 ) }
    dend_55 { pt3dadd( 48.5419, -206.079, -20.9138, 0.33 ) }
    dend_55 { pt3dadd( 49.2432, -207.113, -20.9587, 0.67 ) }
    dend_55 { pt3dadd( 51.0913, -209.479, -20.8517, 0.33 ) }
    dend_55 { pt3dadd( 52.2632, -210.676, -20.6457, 1.33 ) }
    dend_55 { pt3dadd( 54.8251, -212.933, -20.1528, 0.33 ) }
    dend_55 { pt3dadd( 56.5389, -214.134, -19.7476, 0.33 ) }
    dend_55 { pt3dadd( 59.6411, -216.127, -19.008, 0.33 ) }
    dend_55 { pt3dadd( 61.5963, -217.364, -18.5219, 0.67 ) }
    dend_55 { pt3dadd( 64.6759, -219.238, -17.5759, 0.33 ) }
    dend_55 { pt3dadd( 66.8347, -220.467, -16.9561, 0.67 ) }
    dend_55 { pt3dadd( 69.9086, -222.062, -16.3209, 0.33 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 39/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 7.42403, -102.668, 2.47591, 0.67 ) }
    dend_52 { pt3dadd( 6.70027, -105.889, 2.48673, 0.67 ) }
    dend_52 { pt3dadd( 6.1939, -108.679, 2.82152, 0.67 ) }
    dend_52 { pt3dadd( 5.49824, -114.444, 3.81143, 0.67 ) }
    dend_52 { pt3dadd( 5.19562, -118.174, 4.27241, 0.67 ) }
    dend_52 { pt3dadd( 4.9188, -121.048, 4.38742, 0.67 ) }
    dend_52 { pt3dadd( 4.79655, -123.347, 4.37039, 0.67 ) }
    dend_52 { pt3dadd( 4.85111, -127.143, 4.19104, 0.67 ) }
    dend_52 { pt3dadd( 5.21751, -130.609, 3.90402, 0.67 ) }
    dend_52 { pt3dadd( 5.72528, -134.042, 3.68387, 0.67 ) }
    dend_52 { pt3dadd( 6.05643, -138.141, 3.30364, 0.67 ) }
    dend_52 { pt3dadd( 6.21746, -141.933, 3.00411, 0.67 ) }
    dend_52 { pt3dadd( 6.19695, -145.248, 2.80265, 0.67 ) }
    dend_52 { pt3dadd( 6.05184, -148.115, 2.68431, 0.67 ) }
    dend_52 { pt3dadd( 5.72291, -152.765, 2.726, 0.67 ) }
    dend_52 { pt3dadd( 5.43708, -157.036, 2.92993, 0.67 ) }
    dend_52 { pt3dadd( 5.06957, -162.592, 3.26448, 0.67 ) }
    dend_52 { pt3dadd( 4.75893, -166.042, 3.42865, 0.33 ) }
    dend_52 { pt3dadd( 4.58302, -170.143, 3.69277, 0.67 ) }
    dend_52 { pt3dadd( 4.5831, -170.964, 3.76181, 0.33 ) }
    dend_52 { pt3dadd( 4.76022, -173.149, 4.00288, 0.67 ) }
    dend_52 { pt3dadd( 5.00086, -174.994, 4.25702, 0.33 ) }
    dend_52 { pt3dadd( 5.60392, -178.959, 4.94892, 0.67 ) }
    dend_52 { pt3dadd( 6.20797, -182.586, 5.68656, 0.67 ) }
    dend_52 { pt3dadd( 7.11162, -189.401, 7.29728, 0.67 ) }
    dend_52 { pt3dadd( 7.40898, -192.144, 7.99235, 0.33 ) }
    dend_52 { pt3dadd( 7.72444, -195.867, 9.05977, 0.67 ) }
    // Section: dend_44, id: dend_44, parent: dend_32 (entry count 66/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -3.45058, -25.2885, -4.80487, 0.67 ) }
    dend_44 { pt3dadd( -6.28363, -26.4376, -3.11654, 0.67 ) }
    dend_44 { pt3dadd( -9.06502, -27.5402, -1.79149, 0.67 ) }
    dend_44 { pt3dadd( -10.5633, -28.1625, -1.17708, 0.67 ) }
    dend_44 { pt3dadd( -14.7729, -29.9409, 0.340647, 0.67 ) }
    dend_44 { pt3dadd( -21.2536, -32.4065, 2.28412, 0.67 ) }
    dend_44 { pt3dadd( -23.7066, -33.3607, 2.97951, 0.67 ) }
    dend_44 { pt3dadd( -26.1163, -34.2905, 3.58777, 0.67 ) }
    dend_44 { pt3dadd( -27.9868, -35.0095, 4.03503, 0.67 ) }
    dend_44 { pt3dadd( -30.2469, -35.806, 4.50634, 0.67 ) }
    dend_44 { pt3dadd( -34.5355, -37.2074, 5.21579, 0.67 ) }
    dend_44 { pt3dadd( -37.3741, -38.0413, 5.96535, 0.67 ) }
    dend_44 { pt3dadd( -40.1619, -38.7523, 6.75614, 0.67 ) }
    dend_44 { pt3dadd( -41.8147, -39.1657, 7.31025, 0.33 ) }
    dend_44 { pt3dadd( -43.2882, -39.4911, 7.83918, 0.33 ) }
    dend_44 { pt3dadd( -45.0619, -39.8904, 8.53522, 0.33 ) }
    dend_44 { pt3dadd( -48.7075, -40.8378, 10.0896, 0.67 ) }
    dend_44 { pt3dadd( -51.5039, -41.2765, 10.9444, 0.33 ) }
    dend_44 { pt3dadd( -60.7569, -43.401, 12.4683, 0.33 ) }
    dend_44 { pt3dadd( -69.9445, -46.1197, 13.4218, 0.33 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 86/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -3.45058, -25.2885, -4.80487, 1.33 ) }
    dend_33 { pt3dadd( -3.70559, -29.8182, -3.99058, 1.33 ) }
    dend_33 { pt3dadd( -3.74962, -33.4682, -3.67983, 1.33 ) }
    dend_33 { pt3dadd( -3.75765, -39.2194, -3.45553, 1.33 ) }
    dend_33 { pt3dadd( -3.76487, -44.3815, -3.25419, 1.33 ) }
    dend_33 { pt3dadd( -3.77359, -50.6254, -3.01067, 1.33 ) }
    dend_33 { pt3dadd( -3.78115, -56.0385, -2.79955, 1.33 ) }
    dend_33 { pt3dadd( -4.00539, -63.8638, -2.84622, 1.33 ) }
    dend_33 { pt3dadd( -4.03776, -67.7658, -3.00965, 1.33 ) }
    // Section: dend_29, id: dend_29, parent: dend_23 (entry count 95/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -32.281, 32.6497, -25.9771, 0.67 ) }
    dend_29 { pt3dadd( -33.1518, 32.5354, -27.4892, 0.67 ) }
    dend_29 { pt3dadd( -34.5931, 32.3302, -30.2215, 0.67 ) }
    dend_29 { pt3dadd( -35.227, 32.2516, -31.3977, 0.67 ) }
    dend_29 { pt3dadd( -36.579, 32.1005, -33.7359, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_29 { pt3dadd( -37.4922, 32.0188, -35.3432, 0.67 ) }
    dend_29 { pt3dadd( -39.6835, 31.8228, -39.2002, 0.67 ) }
    dend_29 { pt3dadd( -41.0816, 31.7387, -41.6469, 0.33 ) }
    dend_29 { pt3dadd( -41.5298, 31.7274, -42.3488, 0.67 ) }
    dend_29 { pt3dadd( -42.2, 31.7302, -43.4815, 0.33 ) }
    dend_29 { pt3dadd( -43.3947, 31.766, -45.5402, 0.67 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 6/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -32.281, 32.6497, -25.9771, 0.67 ) }
    dend_24 { pt3dadd( -34.0864, 34.5563, -26.2123, 0.67 ) }
    dend_24 { pt3dadd( -36.4309, 36.992, -26.528, 0.67 ) }
    dend_24 { pt3dadd( -38.5089, 39.1731, -26.8962, 0.67 ) }
    dend_24 { pt3dadd( -40.8003, 41.7401, -27.4742, 0.67 ) }
    dend_24 { pt3dadd( -43.9567, 45.276, -28.2703, 0.67 ) }
    dend_24 { pt3dadd( -46.7202, 48.3717, -28.9674, 0.67 ) }
    dend_24 { pt3dadd( -48.9773, 50.9133, -29.6609, 0.67 ) }
    dend_24 { pt3dadd( -50.9414, 53.3199, -30.3816, 0.67 ) }
    dend_24 { pt3dadd( -53.2795, 56.3619, -31.4003, 2.0 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 16/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 26.6071, 216.947, -62.242, 0.33 ) }
    dend_21 { pt3dadd( 25.7323, 217.697, -62.9911, 0.33 ) }
    dend_21 { pt3dadd( 25.4794, 217.914, -63.2076, 0.67 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 19/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 26.6071, 216.947, -62.242, 0.33 ) }
    dend_20 { pt3dadd( 26.9742, 217.914, -65.2967, 0.33 ) }
    dend_20 { pt3dadd( 27.163, 218.412, -66.8681, 0.67 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -6.18432, 152.846, -6.94837, 0.67 ) }
    dend_18 { pt3dadd( -6.61092, 157.26, -10.0914, 0.67 ) }
    dend_18 { pt3dadd( -7.81609, 162.887, -14.3152, 0.67 ) }
    dend_18 { pt3dadd( -8.29387, 165.118, -15.9897, 0.67 ) }
    dend_18 { pt3dadd( -9.37375, 170.161, -19.7744, 0.67 ) }
    dend_18 { pt3dadd( -9.77378, 172.028, -21.1764, 0.33 ) }
    dend_18 { pt3dadd( -10.4405, 175.142, -23.5132, 0.33 ) }
    dend_18 { pt3dadd( -11.0849, 177.184, -25.4564, 0.33 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 30/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -6.18432, 152.846, -6.94837, 0.67 ) }
    dend_11 { pt3dadd( -6.89597, 154.091, -8.48059, 0.67 ) }
    dend_11 { pt3dadd( -7.32178, 154.836, -9.39738, 0.67 ) }
    dend_11 { pt3dadd( -8.56086, 157.004, -12.0652, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_6 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 14.6945, 161.672, 40.8282, 0.67 ) }
    dend_8 { pt3dadd( 14.4226, 171.788, 43.065, 0.67 ) }
    dend_8 { pt3dadd( 13.207, 181.221, 47.053, 0.67 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 37/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 14.6945, 161.672, 40.8282, 0.67 ) }
    dend_7 { pt3dadd( 16.9781, 172.296, 43.5354, 0.67 ) }
    dend_7 { pt3dadd( 20.5577, 182.406, 46.5709, 0.67 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 40/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -25.9564, 68.1606, 4.78546, 0.67 ) }
    dend_5 { pt3dadd( -26.8915, 74.9579, 4.00423, 0.67 ) }
    dend_5 { pt3dadd( -27.4571, 77.7167, 3.82052, 0.67 ) }
    dend_5 { pt3dadd( -28.4126, 82.0175, 3.62874, 0.67 ) }
    dend_5 { pt3dadd( -29.4207, 86.3203, 3.47248, 0.67 ) }
    dend_5 { pt3dadd( -30.2936, 90.2763, 3.28277, 0.67 ) }
    dend_5 { pt3dadd( -31.6188, 96.5912, 2.93416, 0.67 ) }
    dend_5 { pt3dadd( -33.1232, 103.114, 2.58098, 0.67 ) }
    dend_5 { pt3dadd( -33.5917, 105.26, 2.45482, 0.67 ) }
    dend_5 { pt3dadd( -34.1623, 107.805, 2.27158, 0.67 ) }
    dend_5 { pt3dadd( -35.1676, 113.667, 1.7582, 0.67 ) }
    dend_5 { pt3dadd( -35.7624, 118.319, 1.26149, 0.67 ) }
    dend_5 { pt3dadd( -35.932, 121.898, 0.864712, 0.67 ) }
    dend_5 { pt3dadd( -36.0135, 125.505, 0.465539, 0.67 ) }
    dend_5 { pt3dadd( -36.0167, 127.825, 0.235921, 0.67 ) }
    dend_5 { pt3dadd( -35.8813, 133.315, -0.195148, 0.67 ) }
    dend_5 { pt3dadd( -35.7304, 135.429, -0.307655, 0.67 ) }
    dend_5 { pt3dadd( -35.0293, 140.128, -0.471669, 0.67 ) }
    dend_5 { pt3dadd( -34.0874, 144.309, -0.481236, 0.67 ) }
    dend_5 { pt3dadd( -33.4524, 147.272, -0.314014, 0.67 ) }
    dend_5 { pt3dadd( -33.1291, 149.086, -0.105577, 0.67 ) }
    dend_5 { pt3dadd( -32.7555, 152.506, 0.656832, 0.67 ) }
    dend_5 { pt3dadd( -32.5762, 155.034, 1.34506, 0.67 ) }
    dend_5 { pt3dadd( -32.4733, 158.578, 2.44971, 0.67 ) }
    dend_5 { pt3dadd( -32.5043, 163.38, 3.97698, 0.67 ) }
    dend_5 { pt3dadd( -32.5764, 166.096, 4.78599, 0.67 ) }
    dend_5 { pt3dadd( -32.5378, 170.436, 5.88667, 0.67 ) }
    dend_5 { pt3dadd( -32.5314, 173.282, 6.40551, 0.67 ) }
    dend_5 { pt3dadd( -32.4405, 175.493, 6.5715, 0.67 ) }
    dend_5 { pt3dadd( -32.1846, 177.813, 6.52929, 0.67 ) }
    dend_5 { pt3dadd( -31.3929, 182.497, 6.22297, 0.67 ) }
    dend_5 { pt3dadd( -30.498, 186.99, 5.7939, 0.67 ) }
    dend_5 { pt3dadd( -29.3796, 192.356, 4.95343, 0.67 ) }
    dend_5 { pt3dadd( -28.437, 196.588, 4.21904, 0.67 ) }
    dend_5 { pt3dadd( -27.7532, 199.724, 3.62793, 0.67 ) }
    dend_5 { pt3dadd( -28.1568, 210.394, 1.51042, 0.67 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 76/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -25.9564, 68.1606, 4.78546, 0.67 ) }
    dend_2 { pt3dadd( -26.0239, 71.7365, 4.30326, 0.67 ) }
    dend_2 { pt3dadd( -26.2613, 75.5278, 3.99123, 0.67 ) }
    dend_2 { pt3dadd( -26.7264, 78.0646, 3.89689, 0.67 ) }
    dend_2 { pt3dadd( -28.1251, 83.2303, 4.01087, 1.33 ) }
    dend_2 { pt3dadd( -29.0902, 86.2294, 4.22476, 0.67 ) }
    dend_2 { pt3dadd( -30.115, 88.8583, 4.50856, 1.33 ) }
    dend_2 { pt3dadd( -33.1124, 95.2699, 5.62958, 0.67 ) }
    dend_2 { pt3dadd( -35.7824, 99.9266, 6.95532, 0.67 ) }
    dend_2 { pt3dadd( -37.4261, 102.146, 7.86815, 0.67 ) }
    dend_2 { pt3dadd( -39.555, 104.391, 9.09675, 0.67 ) }
    dend_2 { pt3dadd( -41.7752, 106.484, 10.4705, 0.67 ) }
    dend_2 { pt3dadd( -43.6893, 108.125, 11.7225, 0.67 ) }
    dend_2 { pt3dadd( -46.5767, 110.395, 13.6584, 0.67 ) }
    dend_2 { pt3dadd( -48.845, 112.525, 15.389, 0.67 ) }
    dend_2 { pt3dadd( -49.6849, 113.321, 15.9797, 0.67 ) }
    dend_2 { pt3dadd( -55.8347, 123.531, 16.1429, 0.67 ) }
    dend_2 { pt3dadd( -61.6292, 133.661, 18.6245, 0.67 ) }
    dend_2 { pt3dadd( -67.0929, 144.086, 20.7114, 0.67 ) }
    dend_2 { pt3dadd( -74.5095, 153.316, 20.5509, 0.67 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 96/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 7.72444, -195.867, 9.05977, 0.67 ) }
    dend_54 { pt3dadd( 9.64329, -195.114, 11.0251, 0.67 ) }
    dend_54 { pt3dadd( 10.8876, -194.626, 12.2995, 0.67 ) }
    dend_54 { pt3dadd( 18.1863, -193.638, 19.5081, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( 24.3781, -194.165, 27.7205, 0.67 ) }
    dend_54 { pt3dadd( 30.6675, -195.195, 35.8123, 0.67 ) }
    dend_54 { pt3dadd( 36.6246, -194.054, 44.148, 0.67 ) }
    dend_54 { pt3dadd( 42.1701, -191.623, 52.5224, 0.67 ) }
    dend_54 { pt3dadd( 48.0405, -189.177, 60.6682, 0.67 ) }
    dend_54 { pt3dadd( 54.3174, -188.051, 68.7673, 0.67 ) }
    dend_54 { pt3dadd( 60.7486, -185.734, 76.5124, 0.67 ) }
    dend_54 { pt3dadd( 68.3506, -184.518, 83.3677, 0.67 ) }
    dend_54 { pt3dadd( 75.5017, -185.351, 90.733, 0.67 ) }
    dend_54 { pt3dadd( 83.3083, -187.998, 96.9491, 0.67 ) }
    dend_54 { pt3dadd( 92.3062, -190.994, 101.058, 0.67 ) }
    dend_54 { pt3dadd( 101.161, -195.663, 103.856, 0.67 ) }
    dend_54 { pt3dadd( 110.25, -198.044, 108.129, 0.67 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 13/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 7.72444, -195.867, 9.05977, 0.33 ) }
    dend_53 { pt3dadd( 8.06797, -198.529, 7.97032, 0.33 ) }
    dend_53 { pt3dadd( 8.39506, -201.286, 6.89497, 0.67 ) }
    dend_53 { pt3dadd( 8.57929, -203.447, 6.10384, 0.33 ) }
    dend_53 { pt3dadd( 8.72408, -208.263, 4.36836, 0.67 ) }
    dend_53 { pt3dadd( 8.73577, -209.563, 3.93017, 0.67 ) }
    dend_53 { pt3dadd( 8.70498, -211.565, 3.28781, 0.67 ) }
    dend_53 { pt3dadd( 8.59546, -212.9, 2.88906, 0.33 ) }
    dend_53 { pt3dadd( 8.22188, -215.49, 2.1378, 0.67 ) }
    dend_53 { pt3dadd( 7.73731, -217.703, 1.62596, 0.33 ) }
    dend_53 { pt3dadd( 7.25424, -219.542, 1.33347, 0.67 ) }
    dend_53 { pt3dadd( 6.78413, -221.225, 1.06649, 0.33 ) }
    dend_53 { pt3dadd( 6.58974, -221.933, 0.96483, 0.67 ) }
    dend_53 { pt3dadd( 6.05126, -223.587, 0.711409, 0.33 ) }
    dend_53 { pt3dadd( 5.6051, -224.978, 0.554376, 0.67 ) }
    dend_53 { pt3dadd( 4.63593, -234.667, -1.19832, 0.67 ) }
    dend_53 { pt3dadd( 4.0716, -244.395, -2.9379, 0.67 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 30/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -69.9445, -46.1197, 13.4218, 0.67 ) }
    dend_48 { pt3dadd( -78.1484, -48.6926, 15.6059, 0.67 ) }
    dend_48 { pt3dadd( -85.4562, -52.4288, 19.0594, 0.67 ) }
    dend_48 { pt3dadd( -92.2755, -57.0615, 22.5206, 0.67 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 34/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -69.9445, -46.1197, 13.4218, 0.67 ) }
    dend_45 { pt3dadd( -79.8586, -49.6005, 17.098, 0.67 ) }
    dend_45 { pt3dadd( -90.3683, -51.5744, 20.0919, 0.67 ) }
    dend_45 { pt3dadd( -101.097, -53.4811, 22.2399, 0.67 ) }
    // Section: dend_41, id: dend_41, parent: dend_33 (entry count 38/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -4.03776, -67.7658, -3.00965, 0.67 ) }
    dend_41 { pt3dadd( -2.88409, -73.8637, -2.33324, 0.67 ) }
    dend_41 { pt3dadd( -2.34619, -77.2029, -2.3008, 0.67 ) }
    dend_41 { pt3dadd( -2.18511, -78.5976, -2.35679, 0.67 ) }
    dend_41 { pt3dadd( -1.93095, -80.582, -2.53592, 0.67 ) }
    dend_41 { pt3dadd( -1.29679, -84.9584, -3.06989, 0.67 ) }
    dend_41 { pt3dadd( -0.807922, -87.5492, -3.44831, 0.67 ) }
    dend_41 { pt3dadd( 0.287897, -91.1919, -4.38525, 0.67 ) }
    dend_41 { pt3dadd( 0.912146, -92.7649, -4.87091, 0.67 ) }
    dend_41 { pt3dadd( 1.76142, -95.2466, -5.83179, 0.67 ) }
    dend_41 { pt3dadd( 2.04603, -96.2672, -6.30531, 0.67 ) }
    dend_41 { pt3dadd( 2.45519, -97.9939, -7.14754, 0.67 ) }
    dend_41 { pt3dadd( 2.8369, -99.9036, -7.94633, 0.67 ) }
    dend_41 { pt3dadd( 3.70504, -103.846, -9.36132, 0.67 ) }
    dend_41 { pt3dadd( 4.35126, -107.064, -10.5438, 0.67 ) }
    dend_41 { pt3dadd( 4.67879, -109.532, -11.4161, 0.67 ) }
    dend_41 { pt3dadd( 4.84011, -111.569, -12.1002, 0.67 ) }
    dend_41 { pt3dadd( 4.84321, -112.569, -12.4017, 0.67 ) }
    dend_41 { pt3dadd( 4.75965, -114.212, -12.7809, 0.67 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 57/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -4.03776, -67.7658, -3.00965, 0.67 ) }
    dend_34 { pt3dadd( -6.66386, -72.9024, -4.69439, 0.67 ) }
    dend_34 { pt3dadd( -10.4324, -81.3492, -7.37698, 0.67 ) }
    dend_34 { pt3dadd( -15.4901, -92.5641, -10.7926, 0.67 ) }
    dend_34 { pt3dadd( -17.8904, -97.7044, -12.3036, 0.67 ) }
    dend_34 { pt3dadd( -18.4413, -98.8932, -12.6306, 0.67 ) }
    dend_34 { pt3dadd( -20.3024, -103.137, -13.7167, 0.67 ) }
    dend_34 { pt3dadd( -21.9744, -107.968, -14.817, 0.67 ) }
    dend_34 { pt3dadd( -23.5326, -112.942, -15.5331, 0.67 ) }
    dend_34 { pt3dadd( -24.206, -115.096, -15.5581, 0.67 ) }
    dend_34 { pt3dadd( -25.5621, -119.386, -15.4784, 0.67 ) }
    dend_34 { pt3dadd( -26.6588, -122.847, -15.3441, 0.67 ) }
    dend_34 { pt3dadd( -29.4673, -131.459, -14.82, 0.67 ) }
    dend_34 { pt3dadd( -31.3701, -136.98, -14.3296, 0.67 ) }
    dend_34 { pt3dadd( -33.3071, -141.814, -13.782, 0.67 ) }
    dend_34 { pt3dadd( -33.8922, -143.008, -13.6313, 0.67 ) }
    dend_34 { pt3dadd( -36.3174, -147.061, -13.1974, 0.67 ) }
    dend_34 { pt3dadd( -37.2727, -148.639, -13.0303, 0.67 ) }
    dend_34 { pt3dadd( -40.3057, -154.06, -12.5627, 0.67 ) }
    dend_34 { pt3dadd( -44.4965, -161.836, -12.1173, 0.67 ) }
    dend_34 { pt3dadd( -46.9094, -166.326, -11.8676, 0.67 ) }
    dend_34 { pt3dadd( -49.0186, -170.213, -11.6267, 0.67 ) }
    dend_34 { pt3dadd( -52.7796, -177.07, -11.1814, 0.67 ) }
    dend_34 { pt3dadd( -57.2247, -185.783, -10.6334, 0.67 ) }
    dend_34 { pt3dadd( -59.4869, -190.988, -10.3369, 0.67 ) }
    dend_34 { pt3dadd( -60.3104, -193.084, -10.2424, 0.67 ) }
    dend_34 { pt3dadd( -61.761, -196.531, -10.0085, 0.67 ) }
    dend_34 { pt3dadd( -62.8076, -198.7, -9.77542, 0.67 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -53.2795, 56.3619, -31.4003, 0.33 ) }
    dend_26 { pt3dadd( -56.7751, 59.0328, -31.6888, 0.33 ) }
    dend_26 { pt3dadd( -58.7903, 60.8488, -32.21, 0.67 ) }
    dend_26 { pt3dadd( -60.012, 62.0298, -32.5948, 0.67 ) }
    dend_26 { pt3dadd( -61.3661, 63.3696, -33.0301, 0.33 ) }
    dend_26 { pt3dadd( -62.5645, 64.5728, -33.3641, 0.67 ) }
    dend_26 { pt3dadd( -64.8246, 66.8512, -34.0416, 0.33 ) }
    dend_26 { pt3dadd( -67.405, 69.668, -34.908, 0.67 ) }
    dend_26 { pt3dadd( -69.658, 72.0168, -35.625, 0.33 ) }
    dend_26 { pt3dadd( -70.5741, 73.0209, -35.931, 0.67 ) }
    dend_26 { pt3dadd( -72.2052, 74.8775, -36.5023, 0.33 ) }
    dend_26 { pt3dadd( -74.5831, 77.6916, -37.3169, 0.33 ) }
    dend_26 { pt3dadd( -75.8325, 79.1782, -37.7124, 0.33 ) }
    dend_26 { pt3dadd( -76.9335, 80.3778, -37.9498, 1.33 ) }
    dend_26 { pt3dadd( -79.2339, 83.0543, -38.6751, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 0/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -53.2795, 56.3619, -31.4003, 0.33 ) }
    dend_25 { pt3dadd( -53.598, 62.8098, -29.241, 0.33 ) }
    dend_25 { pt3dadd( -53.6973, 64.3772, -28.8194, 0.33 ) }
    dend_25 { pt3dadd( -53.9232, 69.1622, -27.865, 0.67 ) }
    dend_25 { pt3dadd( -54.1654, 75.3867, -26.8522, 0.33 ) }
    dend_25 { pt3dadd( -54.1973, 76.7937, -26.6565, 0.67 ) }
    dend_25 { pt3dadd( -54.2318, 81.104, -26.1642, 0.33 ) }
    dend_25 { pt3dadd( -54.3128, 84.2738, -26.0869, 0.67 ) }
    dend_25 { pt3dadd( -54.388, 89.3202, -26.2352, 0.33 ) }
    dend_25 { pt3dadd( -54.4178, 90.6762, -26.3657, 0.67 ) }
    dend_25 { pt3dadd( -54.574, 92.6555, -26.6206, 0.33 ) }
    dend_25 { pt3dadd( -54.7657, 94.3123, -26.8218, 0.67 ) }
    dend_25 { pt3dadd( -55.8208, 100.982, -27.5088, 0.33 ) }
    dend_25 { pt3dadd( -56.3639, 103.692, -27.7597, 0.33 ) }
    dend_25 { pt3dadd( -56.974, 106.231, -27.9569, 0.67 ) }
    dend_25 { pt3dadd( -59.22, 114.111, -28.273, 0.67 ) }
    dend_25 { pt3dadd( -60.1925, 117.054, -28.4309, 0.33 ) }
    dend_25 { pt3dadd( -60.9865, 119.351, -28.4998, 0.67 ) }
    dend_25 { pt3dadd( -62.2104, 122.826, -28.5325, 0.33 ) }
    dend_25 { pt3dadd( -62.5359, 123.769, -28.5518, 0.67 ) }
    dend_25 { pt3dadd( -63.8702, 127.975, -28.593, 0.33 ) }
    dend_25 { pt3dadd( -65.297, 132.967, -28.4952, 0.67 ) }
    dend_25 { pt3dadd( -66.3466, 138.347, -28.2146, 0.67 ) }
    dend_25 { pt3dadd( -66.7266, 141.138, -27.9119, 0.33 ) }
    dend_25 { pt3dadd( -66.897, 143.66, -27.5635, 0.33 ) }
    dend_25 { pt3dadd( -66.952, 148.868, -26.7819, 0.67 ) }
    dend_25 { pt3dadd( -66.8592, 152.511, -26.1248, 0.33 ) }
    dend_25 { pt3dadd( -66.6866, 156.586, -25.1867, 0.67 ) }
    dend_25 { pt3dadd( -66.456, 161.964, -24.2628, 0.67 ) }
    dend_25 { pt3dadd( -66.2869, 165.843, -23.7309, 0.33 ) }
    dend_25 { pt3dadd( -66.1519, 168.672, -23.4551, 0.67 ) }
    dend_25 { pt3dadd( -66.1771, 171.792, -23.4175, 0.33 ) }
    dend_25 { pt3dadd( -66.3369, 174.21, -23.5547, 0.33 ) }
    dend_25 { pt3dadd( -66.9733, 179.868, -24.166, 0.33 ) }
    dend_25 { pt3dadd( -67.1201, 181.182, -24.3947, 0.67 ) }
    dend_25 { pt3dadd( -67.5371, 183.371, -24.7118, 0.33 ) }
    dend_25 { pt3dadd( -68.5656, 187.819, -25.2713, 0.67 ) }
    dend_25 { pt3dadd( -69.6327, 191.69, -25.7092, 0.33 ) }
    dend_25 { pt3dadd( -70.8798, 195.55, -25.9736, 0.33 ) }
    dend_25 { pt3dadd( -71.5987, 197.588, -25.991, 0.67 ) }
    dend_25 { pt3dadd( -74.226, 204.523, -25.9749, 0.33 ) }
    dend_25 { pt3dadd( -74.4662, 205.117, -25.9653, 0.67 ) }
    dend_25 { pt3dadd( -75.4059, 207.48, -25.8753, 0.33 ) }
    dend_25 { pt3dadd( -76.2101, 209.623, -25.8821, 0.67 ) }
    dend_25 { pt3dadd( -77.2743, 212.712, -25.9481, 0.33 ) }
    dend_25 { pt3dadd( -77.8218, 214.636, -26.0076, 0.33 ) }
    dend_25 { pt3dadd( -77.9176, 215.085, -26.0368, 0.67 ) }
    dend_25 { pt3dadd( -78.544, 218.283, -26.3421, 0.33 ) }
    dend_25 { pt3dadd( -79.5436, 223.5, -27.1308, 0.67 ) }
    dend_25 { pt3dadd( -80.0792, 226.254, -27.5769, 0.33 ) }
    dend_25 { pt3dadd( -80.4073, 228.044, -27.9188, 0.67 ) }
    dend_25 { pt3dadd( -81.2336, 232.138, -28.7578, 0.33 ) }
    dend_25 { pt3dadd( -81.6694, 234.048, -29.1647, 0.67 ) }
    dend_25 { pt3dadd( -82.5259, 237.684, -29.9421, 0.33 ) }
    dend_25 { pt3dadd( -83.2943, 240.533, -30.492, 0.67 ) }
    dend_25 { pt3dadd( -84.2588, 243.811, -31.0544, 0.33 ) }
    dend_25 { pt3dadd( -84.9053, 246.131, -31.3988, 0.33 ) }
    dend_25 { pt3dadd( -85.1661, 247.084, -31.505, 0.67 ) }
    dend_25 { pt3dadd( -86.0322, 250.241, -31.689, 0.33 ) }
    dend_25 { pt3dadd( -86.5103, 252.081, -31.6554, 0.33 ) }
    dend_25 { pt3dadd( -86.8199, 252.931, -31.5855, 0.67 ) }
    dend_25 { pt3dadd( -88.5131, 256.625, -30.9885, 0.33 ) }
    dend_25 { pt3dadd( -89.2202, 258.046, -30.7349, 0.33 ) }
    dend_25 { pt3dadd( -89.9133, 259.247, -30.4685, 0.67 ) }
    dend_25 { pt3dadd( -93.4275, 264.714, -29.0687, 0.33 ) }
    dend_25 { pt3dadd( -96.6073, 269.511, -27.8024, 0.33 ) }
    dend_25 { pt3dadd( -98.8128, 272.848, -26.9204, 0.67 ) }
    dend_25 { pt3dadd( -101.379, 276.665, -26.2567, 0.33 ) }
    dend_25 { pt3dadd( -103.036, 279.102, -26.0661, 0.33 ) }
    dend_25 { pt3dadd( -103.535, 279.833, -26.0452, 0.67 ) }
    dend_25 { pt3dadd( -105.451, 282.681, -26.286, 0.33 ) }
    dend_25 { pt3dadd( -106.959, 285.405, -26.8102, 0.33 ) }
    dend_25 { pt3dadd( -110.7, 292.377, -28.8243, 0.33 ) }
    dend_25 { pt3dadd( -111.725, 294.239, -29.6105, 0.67 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 74/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -8.56086, 157.004, -12.0652, 0.67 ) }
    dend_13 { pt3dadd( -7.21607, 160.446, -11.1245, 0.67 ) }
    dend_13 { pt3dadd( -6.0615, 163.401, -10.3169, 0.67 ) }
    dend_13 { pt3dadd( -4.47079, 167.473, -9.20428, 0.67 ) }
    dend_13 { pt3dadd( -3.29167, 170.491, -8.37952, 0.67 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 79/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -8.56086, 157.004, -12.0652, 0.67 ) }
    dend_12 { pt3dadd( -10.7152, 162.052, -15.3015, 0.67 ) }
    dend_12 { pt3dadd( -11.3522, 163.371, -16.2263, 0.67 ) }
    dend_12 { pt3dadd( -12.6968, 165.903, -18.0845, 0.67 ) }
    dend_12 { pt3dadd( -14.048, 168.132, -19.8402, 0.67 ) }
    dend_12 { pt3dadd( -16.6668, 172.487, -23.1883, 0.67 ) }
    dend_12 { pt3dadd( -18.1371, 174.924, -24.892, 0.67 ) }
    dend_12 { pt3dadd( -18.7312, 175.822, -25.4548, 0.33 ) }
    dend_12 { pt3dadd( -19.1003, 176.445, -25.7595, 0.67 ) }
    dend_12 { pt3dadd( -20.4429, 179.037, -26.7687, 0.67 ) }
    dend_12 { pt3dadd( -21.8027, 181.719, -27.6808, 0.67 ) }
    dend_12 { pt3dadd( -23.9751, 185.787, -29.0907, 0.67 ) }
    dend_12 { pt3dadd( -26.3338, 190.288, -30.6221, 0.67 ) }
    dend_12 { pt3dadd( -27.2056, 191.982, -31.2358, 0.67 ) }
    dend_12 { pt3dadd( -29.6505, 196.633, -32.9993, 0.67 ) }
    dend_12 { pt3dadd( -30.8499, 198.814, -33.8703, 0.67 ) }
    dend_12 { pt3dadd( -33.0176, 202.274, -35.5398, 0.67 ) }
    dend_12 { pt3dadd( -33.9834, 203.726, -36.3759, 0.33 ) }
    dend_12 { pt3dadd( -34.4767, 204.371, -36.7754, 0.67 ) }
    dend_12 { pt3dadd( -35.6901, 205.656, -37.5317, 0.33 ) }
    dend_12 { pt3dadd( -35.9668, 205.903, -37.6309, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_12 { pt3dadd( -37.5742, 207.28, -37.7629, 0.33 ) }
    dend_12 { pt3dadd( -38.4834, 208.096, -37.5746, 0.67 ) }
    dend_12 { pt3dadd( -40.5293, 209.839, -36.8171, 0.33 ) }
    dend_12 { pt3dadd( -42.0107, 211.151, -36.2284, 0.33 ) }
    dend_12 { pt3dadd( -43.2878, 212.381, -35.6936, 0.67 ) }
    dend_12 { pt3dadd( -45.9104, 214.963, -34.6467, 0.33 ) }
    dend_12 { pt3dadd( -47.2737, 216.33, -34.1102, 0.33 ) }
    dend_12 { pt3dadd( -49.1096, 218.383, -33.396, 0.33 ) }
    dend_12 { pt3dadd( -50.9329, 220.887, -32.7381, 0.67 ) }
    dend_12 { pt3dadd( -51.9951, 222.494, -32.4191, 0.33 ) }
    dend_12 { pt3dadd( -53.3339, 224.442, -32.2579, 0.67 ) }
    dend_12 { pt3dadd( -53.9665, 225.357, -32.1915, 0.67 ) }
    dend_12 { pt3dadd( -55.622, 227.758, -31.8334, 0.67 ) }
    dend_12 { pt3dadd( -56.4511, 229.109, -31.5545, 0.33 ) }
    dend_12 { pt3dadd( -57.5015, 230.687, -30.9743, 0.33 ) }
    dend_12 { pt3dadd( -58.4652, 232.064, -30.5936, 0.67 ) }
    dend_12 { pt3dadd( -61.2148, 235.901, -30.1712, 0.67 ) }
    dend_12 { pt3dadd( -62.1831, 237.182, -30.0871, 0.67 ) }
    dend_12 { pt3dadd( -63.2251, 238.429, -30.1302, 0.33 ) }
    dend_12 { pt3dadd( -65.6167, 241.203, -30.3679, 0.33 ) }
    dend_12 { pt3dadd( -69.9947, 246.534, -31.3702, 0.67 ) }
    dend_12 { pt3dadd( -71.83, 248.521, -32.3852, 0.67 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 22/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -74.5095, 153.316, 20.5509, 0.67 ) }
    dend_4 { pt3dadd( -80.9399, 163.615, 21.8821, 0.67 ) }
    dend_4 { pt3dadd( -88.2589, 173.17, 23.5976, 0.67 ) }
    dend_4 { pt3dadd( -94.2522, 182.912, 27.8212, 0.67 ) }
    dend_4 { pt3dadd( -98.1778, 193.249, 33.1118, 0.67 ) }
    dend_4 { pt3dadd( -103.121, 203.065, 38.4337, 0.67 ) }
    dend_4 { pt3dadd( -108.106, 212.104, 44.8666, 0.67 ) }
    dend_4 { pt3dadd( -113.476, 221.916, 49.7513, 0.67 ) }
    dend_4 { pt3dadd( -120.846, 230.125, 54.69, 0.67 ) }
    dend_4 { pt3dadd( -127.82, 237.472, 61.2101, 0.67 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 32/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -74.5095, 153.316, 20.5509, 0.67 ) }
    dend_3 { pt3dadd( -79.1831, 162.131, 22.9649, 0.67 ) }
    dend_3 { pt3dadd( -86.1307, 169.151, 25.1951, 0.67 ) }
    dend_3 { pt3dadd( -93.479, 174.499, 29.5049, 0.67 ) }
    dend_3 { pt3dadd( -100.334, 181.694, 31.4897, 0.67 ) }
    dend_3 { pt3dadd( -105.752, 189.984, 34.0278, 0.67 ) }
    dend_3 { pt3dadd( -111.119, 198.125, 37.0908, 0.67 ) }
    dend_3 { pt3dadd( -116.136, 206.497, 40.192, 0.67 ) }
    dend_3 { pt3dadd( -122.248, 214.212, 42.7916, 0.67 ) }
    dend_3 { pt3dadd( -127.637, 221.401, 47.5835, 0.67 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 42/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -92.2755, -57.0615, 22.5206, 0.67 ) }
    dend_50 { pt3dadd( -95.131, -56.1465, 26.1418, 0.67 ) }
    dend_50 { pt3dadd( -97.5378, -55.4655, 30.1255, 0.67 ) }
    dend_50 { pt3dadd( -100.43, -55.3405, 33.8409, 0.67 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 46/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -92.2755, -57.0615, 22.5206, 0.67 ) }
    dend_49 { pt3dadd( -101.551, -62.7158, 22.3786, 0.67 ) }
    dend_49 { pt3dadd( -110.415, -69.0313, 21.9376, 0.67 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 49/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -101.097, -53.4811, 22.2399, 0.67 ) }
    dend_47 { pt3dadd( -107.333, -54.9259, 23.807, 0.67 ) }
    dend_47 { pt3dadd( -113.595, -55.9068, 25.5861, 0.67 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 52/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -101.097, -53.4811, 22.2399, 0.67 ) }
    dend_46 { pt3dadd( -110.775, -55.6361, 23.5849, 0.67 ) }
    dend_46 { pt3dadd( -120.514, -56.8282, 25.4824, 0.67 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 55/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 4.75965, -114.212, -12.7809, 0.67 ) }
    dend_43 { pt3dadd( 6.46037, -117.48, -13.6131, 0.67 ) }
    dend_43 { pt3dadd( 7.34142, -118.968, -14.0868, 0.67 ) }
    dend_43 { pt3dadd( 8.74079, -121.447, -14.9073, 0.33 ) }
    dend_43 { pt3dadd( 9.47771, -122.706, -15.4121, 0.67 ) }
    dend_43 { pt3dadd( 10.4031, -124.179, -16.054, 0.33 ) }
    dend_43 { pt3dadd( 11.5419, -125.839, -16.8759, 0.67 ) }
    dend_43 { pt3dadd( 12.5038, -127.241, -17.7499, 0.33 ) }
    dend_43 { pt3dadd( 13.2009, -128.121, -18.3243, 0.67 ) }
    dend_43 { pt3dadd( 15.0302, -129.951, -19.309, 0.33 ) }
    dend_43 { pt3dadd( 15.6655, -130.55, -19.5621, 0.67 ) }
    dend_43 { pt3dadd( 16.8463, -131.807, -19.8306, 0.33 ) }
    dend_43 { pt3dadd( 17.4062, -132.545, -19.8148, 0.67 ) }
    dend_43 { pt3dadd( 18.6258, -134.148, -19.4267, 0.33 ) }
    dend_43 { pt3dadd( 20.3373, -136.478, -18.6122, 0.67 ) }
    dend_43 { pt3dadd( 21.5451, -138.036, -18.0204, 0.33 ) }
    dend_43 { pt3dadd( 23.2759, -140.156, -17.488, 0.67 ) }
    dend_43 { pt3dadd( 25.1013, -142.423, -16.8796, 0.33 ) }
    dend_43 { pt3dadd( 26.879, -144.602, -16.3405, 0.67 ) }
    dend_43 { pt3dadd( 28.1415, -146.04, -16.0532, 0.33 ) }
    dend_43 { pt3dadd( 30.9095, -148.997, -15.8636, 0.33 ) }
    dend_43 { pt3dadd( 34.6297, -152.302, -16.0191, 0.33 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 77/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.75965, -114.212, -12.7809, 0.67 ) }
    dend_42 { pt3dadd( 4.43528, -118.163, -13.2442, 0.67 ) }
    dend_42 { pt3dadd( 4.2372, -122.83, -13.7773, 0.67 ) }
    dend_42 { pt3dadd( 4.16694, -125.933, -14.1177, 0.33 ) }
    dend_42 { pt3dadd( 4.17077, -127.053, -14.2813, 0.67 ) }
    dend_42 { pt3dadd( 4.37965, -131.608, -14.5765, 0.33 ) }
    dend_42 { pt3dadd( 4.54458, -133.5, -14.6049, 0.67 ) }
    dend_42 { pt3dadd( 5.00569, -135.483, -14.5294, 0.33 ) }
    dend_42 { pt3dadd( 5.29982, -136.164, -14.4114, 0.67 ) }
    dend_42 { pt3dadd( 6.93705, -138.988, -13.5749, 0.33 ) }
    dend_42 { pt3dadd( 10.6105, -144.452, -11.7896, 0.33 ) }
    dend_42 { pt3dadd( 11.3161, -145.335, -11.4752, 0.67 ) }
    dend_42 { pt3dadd( 13.4426, -147.96, -10.5299, 0.33 ) }
    dend_42 { pt3dadd( 15.3456, -150.201, -9.67193, 0.67 ) }
    dend_42 { pt3dadd( 17.084, -152.17, -8.90587, 0.33 ) }
    dend_42 { pt3dadd( 18.8066, -154.062, -8.17395, 0.67 ) }
    dend_42 { pt3dadd( 19.8681, -155.336, -8.08842, 0.33 ) }
    dend_42 { pt3dadd( 20.1791, -155.765, -8.04338, 0.67 ) }
    dend_42 { pt3dadd( 21.4218, -158.19, -7.66464, 0.33 ) }
    dend_42 { pt3dadd( 25.7958, -168.419, -5.96052, 0.33 ) }
    dend_42 { pt3dadd( 32.0192, -177.68, -5.24947, 0.33 ) }
    dend_42 { pt3dadd( 38.9899, -186.307, -4.29987, 0.33 ) }
    dend_42 { pt3dadd( 46.5477, -194.068, -2.02439, 0.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_42 { pt3dadd( 54.6639, -201.012, 0.683458, 0.33 ) }
    dend_42 { pt3dadd( 63.4959, -207.512, 1.52371, 0.33 ) }
    dend_42 { pt3dadd( 72.1653, -214.059, 3.24299, 0.33 ) }
    dend_42 { pt3dadd( 80.8946, -220.456, 5.1612, 0.33 ) }
    dend_42 { pt3dadd( 89.6699, -226.987, 6.31273, 0.33 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 5/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -62.8076, -198.7, -9.77542, 0.67 ) }
    dend_38 { pt3dadd( -63.9974, -201.673, -11.0366, 0.67 ) }
    dend_38 { pt3dadd( -64.495, -202.917, -11.564, 0.67 ) }
    dend_38 { pt3dadd( -66.7205, -208.478, -13.923, 0.67 ) }
    dend_38 { pt3dadd( -68.1122, -211.956, -15.3982, 0.67 ) }
    dend_38 { pt3dadd( -68.6664, -213.341, -15.9857, 0.67 ) }
    dend_38 { pt3dadd( -69.6806, -215.876, -17.0608, 0.67 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 12/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -62.8076, -198.7, -9.77542, 0.67 ) }
    dend_35 { pt3dadd( -62.6609, -200.98, -9.52242, 0.67 ) }
    dend_35 { pt3dadd( -62.4394, -203.009, -9.25555, 0.67 ) }
    dend_35 { pt3dadd( -62.1726, -206.855, -8.59282, 0.67 ) }
    dend_35 { pt3dadd( -61.9243, -212.645, -7.32796, 0.67 ) }
    dend_35 { pt3dadd( -61.9119, -216.891, -6.23391, 0.67 ) }
    dend_35 { pt3dadd( -61.9062, -218.884, -5.72047, 0.67 ) }
    dend_35 { pt3dadd( -61.9666, -221.799, -4.88327, 0.67 ) }
    dend_35 { pt3dadd( -62.1058, -225.224, -3.75161, 0.67 ) }
    dend_35 { pt3dadd( -62.3052, -227.095, -2.98904, 0.67 ) }
    dend_35 { pt3dadd( -62.4705, -229.295, -1.76601, 0.67 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 23/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -79.2339, 83.0543, -38.6751, 0.67 ) }
    dend_28 { pt3dadd( -77.2497, 83.3407, -39.6527, 0.67 ) }
    dend_28 { pt3dadd( -69.854, 84.1761, -42.6021, 0.67 ) }
    dend_28 { pt3dadd( -65.2523, 84.5218, -44.2521, 0.67 ) }
    dend_28 { pt3dadd( -61.9782, 84.6296, -45.5433, 0.33 ) }
    dend_28 { pt3dadd( -59.0612, 84.6531, -46.6443, 0.67 ) }
    dend_28 { pt3dadd( -56.079, 84.7074, -47.7046, 0.33 ) }
    dend_28 { pt3dadd( -53.593, 84.7098, -48.5445, 0.33 ) }
    dend_28 { pt3dadd( -48.7398, 84.5768, -49.9028, 0.67 ) }
    dend_28 { pt3dadd( -43.4192, 84.4592, -51.3896, 0.33 ) }
    dend_28 { pt3dadd( -40.7827, 84.6348, -52.306, 0.67 ) }
    dend_28 { pt3dadd( -37.2707, 85.1427, -53.8352, 0.33 ) }
    dend_28 { pt3dadd( -33.7527, 85.7021, -55.4751, 0.33 ) }
    dend_28 { pt3dadd( -32.2465, 86.0185, -56.2113, 0.67 ) }
    dend_28 { pt3dadd( -28.6507, 87.012, -57.9505, 0.67 ) }
    dend_28 { pt3dadd( -21.1088, 89.6045, -61.657, 0.33 ) }
    dend_28 { pt3dadd( -17.1625, 91.1114, -63.9945, 0.67 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -79.2339, 83.0543, -38.6751, 0.67 ) }
    dend_27 { pt3dadd( -81.1986, 84.7251, -38.7554, 0.67 ) }
    dend_27 { pt3dadd( -82.6781, 85.9552, -38.7187, 0.67 ) }
    dend_27 { pt3dadd( -83.6988, 86.8153, -38.7165, 0.67 ) }
    dend_27 { pt3dadd( -85.3215, 88.2845, -38.709, 0.67 ) }
    dend_27 { pt3dadd( -86.7924, 89.713, -38.6856, 0.33 ) }
    dend_27 { pt3dadd( -87.2969, 90.2266, -38.6727, 0.67 ) }
    dend_27 { pt3dadd( -89.5409, 92.6206, -38.5602, 0.33 ) }
    dend_27 { pt3dadd( -90.4146, 93.6308, -38.5372, 1.33 ) }
    dend_27 { pt3dadd( -92.5002, 96.0191, -38.4908, 0.33 ) }
    dend_27 { pt3dadd( -94.312, 98.2644, -38.521, 0.33 ) }
    dend_27 { pt3dadd( -94.7077, 98.7707, -38.5314, 0.67 ) }
    dend_27 { pt3dadd( -95.5807, 99.9238, -38.564, 0.33 ) }
    dend_27 { pt3dadd( -96.9398, 101.772, -38.6588, 0.67 ) }
    dend_27 { pt3dadd( -99.324, 104.906, -38.7472, 0.33 ) }
    dend_27 { pt3dadd( -100.982, 106.9, -38.9333, 1.33 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 56/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -3.29167, 170.491, -8.37952, 0.67 ) }
    dend_17 { pt3dadd( -4.43067, 176.8, -9.58845, 0.67 ) }
    dend_17 { pt3dadd( -5.82788, 183.693, -11.0041, 0.67 ) }
    dend_17 { pt3dadd( -7.8851, 193.367, -13.0048, 0.67 ) }
    dend_17 { pt3dadd( -8.92537, 198.538, -14.0635, 0.67 ) }
    dend_17 { pt3dadd( -9.61486, 202.113, -14.7686, 0.67 ) }
    dend_17 { pt3dadd( -10.3562, 206.101, -15.4585, 0.67 ) }
    dend_17 { pt3dadd( -11.2178, 210.983, -16.1062, 0.33 ) }
    dend_17 { pt3dadd( -11.3327, 211.892, -16.2441, 0.67 ) }
    dend_17 { pt3dadd( -11.576, 214.895, -16.4344, 0.33 ) }
    dend_17 { pt3dadd( -11.6152, 217.06, -16.4258, 0.67 ) }
    dend_17 { pt3dadd( -11.3099, 220.292, -16.467, 0.33 ) }
    dend_17 { pt3dadd( -11.0263, 221.527, -16.495, 0.67 ) }
    dend_17 { pt3dadd( -9.94801, 224.207, -16.6828, 0.33 ) }
    dend_17 { pt3dadd( -9.15854, 225.799, -16.9318, 0.67 ) }
    dend_17 { pt3dadd( -7.79066, 227.996, -17.3535, 0.33 ) }
    dend_17 { pt3dadd( -5.45617, 231.237, -18.1251, 0.33 ) }
    dend_17 { pt3dadd( -3.76827, 233.466, -18.7514, 0.67 ) }
    dend_17 { pt3dadd( -1.76936, 236.28, -19.6513, 0.33 ) }
    dend_17 { pt3dadd( -1.76936, 236.28, -19.6513, 0.67 ) }
    dend_17 { pt3dadd( 1.0777, 241.305, -21.2446, 0.33 ) }
    dend_17 { pt3dadd( 2.60656, 244.389, -22.1946, 0.33 ) }
    dend_17 { pt3dadd( 3.98522, 247.911, -23.3095, 0.67 ) }
    dend_17 { pt3dadd( 5.42051, 252.855, -24.8997, 0.33 ) }
    dend_17 { pt3dadd( 6.16624, 255.935, -25.8857, 0.33 ) }
    dend_17 { pt3dadd( 6.86839, 259.312, -27.0651, 0.33 ) }
    dend_17 { pt3dadd( 7.0845, 260.954, -27.7451, 0.67 ) }
    dend_17 { pt3dadd( 7.48848, 266.146, -29.8871, 0.33 ) }
    dend_17 { pt3dadd( 7.50693, 267.179, -30.3127, 0.67 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 85/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -3.29167, 170.491, -8.37952, 0.67 ) }
    dend_14 { pt3dadd( -5.52236, 175.816, -6.43428, 0.67 ) }
    dend_14 { pt3dadd( -7.94504, 181.599, -4.32163, 0.67 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 88/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -69.6806, -215.876, -17.0608, 0.33 ) }
    dend_40 { pt3dadd( -75.1401, -221.252, -14.2149, 0.33 ) }
    dend_40 { pt3dadd( -77.1767, -223.723, -13.5702, 0.67 ) }
    dend_40 { pt3dadd( -78.5807, -225.696, -13.3675, 0.33 ) }
    dend_40 { pt3dadd( -79.563, -227.276, -13.3126, 0.67 ) }
    dend_40 { pt3dadd( -81.4341, -230.389, -13.0335, 0.67 ) }
    dend_40 { pt3dadd( -83.3636, -233.986, -12.6343, 0.67 ) }
    dend_40 { pt3dadd( -85.0716, -237.78, -12.427, 0.67 ) }
    dend_40 { pt3dadd( -86.2727, -241.241, -12.058, 0.67 ) }
    dend_40 { pt3dadd( -87.0659, -243.826, -11.6633, 0.67 ) }
    dend_40 { pt3dadd( -88.4942, -248.168, -10.775, 0.33 ) }
    dend_40 { pt3dadd( -89.5402, -251.161, -9.94168, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_40 { pt3dadd( -90.8427, -254.428, -8.71782, 0.33 ) }
    dend_40 { pt3dadd( -91.5782, -255.977, -8.00515, 0.67 ) }
    dend_40 { pt3dadd( -92.8621, -258.741, -6.8715, 0.67 ) }
    dend_40 { pt3dadd( -93.9971, -261.074, -6.0779, 0.67 ) }
    dend_40 { pt3dadd( -95.0552, -263.127, -5.52403, 0.67 ) }
    dend_40 { pt3dadd( -96.4542, -265.828, -4.84533, 0.67 ) }
    dend_40 { pt3dadd( -98.2757, -269.353, -3.93063, 0.67 ) }
    dend_40 { pt3dadd( -100.754, -274.509, -2.55279, 0.67 ) }
    dend_40 { pt3dadd( -101.71, -276.477, -1.9993, 0.67 ) }
    dend_40 { pt3dadd( -103.144, -279.393, -1.23698, 0.67 ) }
    dend_40 { pt3dadd( -104.663, -281.96, -0.70607, 0.67 ) }
    dend_40 { pt3dadd( -107.099, -285.822, -0.0832053, 0.67 ) }
    dend_40 { pt3dadd( -109.361, -289.174, 0.336979, 0.67 ) }
    dend_40 { pt3dadd( -111.582, -292.477, 0.575349, 0.67 ) }
    dend_40 { pt3dadd( -114.599, -297.334, 0.765305, 0.67 ) }
    dend_40 { pt3dadd( -119.326, -305.039, 0.833805, 0.67 ) }
    dend_40 { pt3dadd( -121.7, -308.914, 0.773517, 0.67 ) }
    dend_40 { pt3dadd( -123.881, -312.6, 0.598488, 0.33 ) }
    dend_40 { pt3dadd( -127.193, -318.394, 0.293476, 0.67 ) }
    dend_40 { pt3dadd( -128.873, -321.5, 0.113267, 0.33 ) }
    dend_40 { pt3dadd( -130.713, -325.126, -0.0573316, 0.33 ) }
    dend_40 { pt3dadd( -131.223, -326.384, -0.0171333, 0.67 ) }
    dend_40 { pt3dadd( -132.285, -329.412, 0.201115, 0.33 ) }
    dend_40 { pt3dadd( -133.221, -332.486, 0.533129, 0.33 ) }
    dend_40 { pt3dadd( -134.332, -335.934, 1.12604, 0.33 ) }
    dend_40 { pt3dadd( -135.078, -338.71, 1.58713, 0.33 ) }
    dend_40 { pt3dadd( -135.865, -344.646, 2.70854, 0.33 ) }
    dend_40 { pt3dadd( -136.104, -348.347, 3.53095, 0.33 ) }
    dend_40 { pt3dadd( -140.653, -361.199, 4.47098, 0.33 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 29/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -69.6806, -215.876, -17.0608, 0.67 ) }
    dend_39 { pt3dadd( -71.4413, -217.517, -17.6879, 0.67 ) }
    dend_39 { pt3dadd( -73.6353, -219.608, -18.3199, 0.67 ) }
    dend_39 { pt3dadd( -76.5186, -222.887, -19.2028, 0.67 ) }
    dend_39 { pt3dadd( -77.77, -224.557, -19.6892, 0.33 ) }
    dend_39 { pt3dadd( -79.4329, -226.928, -20.3888, 0.67 ) }
    dend_39 { pt3dadd( -81.1478, -229.473, -21.1264, 0.33 ) }
    dend_39 { pt3dadd( -81.5373, -230.12, -21.3214, 0.33 ) }
    dend_39 { pt3dadd( -83.3971, -233.825, -22.3966, 0.67 ) }
    dend_39 { pt3dadd( -84.7315, -236.519, -23.1511, 0.33 ) }
    dend_39 { pt3dadd( -85.9135, -238.923, -23.8948, 0.33 ) }
    dend_39 { pt3dadd( -86.6322, -240.446, -24.3901, 0.67 ) }
    dend_39 { pt3dadd( -87.8486, -243.194, -25.2772, 0.33 ) }
    dend_39 { pt3dadd( -88.6208, -244.927, -25.8018, 0.33 ) }
    dend_39 { pt3dadd( -89.7401, -247.464, -26.4267, 0.33 ) }
    dend_39 { pt3dadd( -89.8842, -247.822, -26.4964, 0.67 ) }
    dend_39 { pt3dadd( -90.7784, -250.449, -26.9209, 0.33 ) }
    dend_39 { pt3dadd( -91.207, -251.966, -27.1153, 0.67 ) }
    dend_39 { pt3dadd( -91.7141, -254.183, -27.3138, 0.33 ) }
    dend_39 { pt3dadd( -92.354, -256.907, -27.5432, 0.33 ) }
    dend_39 { pt3dadd( -92.7447, -258.852, -27.682, 0.67 ) }
    dend_39 { pt3dadd( -93.6429, -263.189, -27.9645, 0.33 ) }
    dend_39 { pt3dadd( -94.4436, -266.772, -28.1727, 0.67 ) }
    dend_39 { pt3dadd( -95.2815, -270.266, -28.2612, 0.67 ) }
    dend_39 { pt3dadd( -96.1474, -273.905, -28.2229, 0.33 ) }
    dend_39 { pt3dadd( -96.9499, -277.469, -28.1249, 0.33 ) }
    dend_39 { pt3dadd( -97.1381, -278.337, -28.0854, 0.33 ) }
    dend_39 { pt3dadd( -97.8264, -281.278, -27.8856, 0.33 ) }
    dend_39 { pt3dadd( -98.5268, -283.665, -27.5924, 0.67 ) }
    dend_39 { pt3dadd( -99.0155, -285.252, -27.3321, 0.33 ) }
    dend_39 { pt3dadd( -99.1368, -285.622, -27.2812, 0.67 ) }
    dend_39 { pt3dadd( -99.9306, -287.59, -27.0889, 0.33 ) }
    dend_39 { pt3dadd( -100.382, -288.345, -27.0611, 0.67 ) }
    dend_39 { pt3dadd( -103.666, -292.512, -27.1461, 0.33 ) }
    dend_39 { pt3dadd( -104.806, -293.628, -27.2426, 0.67 ) }
    dend_39 { pt3dadd( -107.334, -295.718, -27.4867, 0.33 ) }
    dend_39 { pt3dadd( -108.326, -296.408, -27.6428, 1.33 ) }
    dend_39 { pt3dadd( -114.284, -300.025, -28.848, 0.33 ) }
    dend_39 { pt3dadd( -114.73, -300.3, -28.9764, 0.67 ) }
    dend_39 { pt3dadd( -117.107, -301.748, -29.8385, 0.33 ) }
    dend_39 { pt3dadd( -117.107, -301.748, -29.8385, 0.67 ) }
    dend_39 { pt3dadd( -120.813, -304.662, -31.2748, 0.33 ) }
    dend_39 { pt3dadd( -121.608, -305.416, -31.6392, 0.67 ) }
    dend_39 { pt3dadd( -124.606, -308.967, -33.2844, 0.33 ) }
    dend_39 { pt3dadd( -126.451, -311.606, -34.2648, 0.33 ) }
    dend_39 { pt3dadd( -126.706, -312.065, -34.4322, 0.67 ) }
    dend_39 { pt3dadd( -127.741, -314.074, -35.0935, 0.33 ) }
    dend_39 { pt3dadd( -127.957, -314.578, -35.2222, 0.67 ) }
    dend_39 { pt3dadd( -129.029, -317.07, -35.8311, 0.33 ) }
    dend_39 { pt3dadd( -130.517, -320.752, -36.515, 0.33 ) }
    dend_39 { pt3dadd( -131.395, -324.14, -37.2439, 0.67 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 80/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -62.4705, -229.295, -1.76601, 0.33 ) }
    dend_37 { pt3dadd( -63.543, -234.155, 1.72955, 0.33 ) }
    dend_37 { pt3dadd( -64.7447, -237.939, 4.33626, 0.67 ) }
    dend_37 { pt3dadd( -65.6596, -240.121, 5.85337, 0.33 ) }
    dend_37 { pt3dadd( -67.5577, -243.835, 9.30482, 0.67 ) }
    dend_37 { pt3dadd( -70.4747, -248.484, 14.353, 0.33 ) }
    dend_37 { pt3dadd( -71.9206, -250.063, 16.6857, 0.67 ) }
    dend_37 { pt3dadd( -73.6943, -250.995, 19.375, 0.33 ) }
    dend_37 { pt3dadd( -75.1625, -251.517, 21.5268, 0.67 ) }
    dend_37 { pt3dadd( -81.7425, -252.974, 31.0115, 0.33 ) }
    dend_37 { pt3dadd( -83.7366, -253.12, 33.8037, 0.67 ) }
    dend_37 { pt3dadd( -89.0104, -252.991, 41.524, 0.67 ) }
    dend_37 { pt3dadd( -92.1119, -252.736, 46.6529, 1.33 ) }
    dend_37 { pt3dadd( -98.0272, -259.726, 61.6572, 1.33 ) }
    dend_37 { pt3dadd( -101.11, -269.234, 76.2514, 1.33 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 95/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -62.4705, -229.295, -1.76601, 0.67 ) }
    dend_36 { pt3dadd( -63.619, -230.692, -1.03533, 0.67 ) }
    dend_36 { pt3dadd( -64.9158, -232.269, -0.210239, 0.67 ) }
    dend_36 { pt3dadd( -66.1479, -233.767, 0.573615, 0.33 ) }
    dend_36 { pt3dadd( -67.1039, -234.93, 1.18188, 0.67 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_36 { pt3dadd( -69.3825, -237.701, 2.63158, 0.33 ) }
    dend_36 { pt3dadd( -70.7139, -239.32, 3.47863, 0.33 ) }
    dend_36 { pt3dadd( -76.3466, -245.085, 6.65273, 0.33 ) }
    dend_36 { pt3dadd( -81.9845, -249.527, 11.3664, 0.33 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 4/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -7.94504, 181.599, -4.32163, 0.67 ) }
    dend_16 { pt3dadd( -8.69069, 184.481, -4.46387, 0.67 ) }
    dend_16 { pt3dadd( -9.42604, 187.293, -4.6861, 0.67 ) }
    dend_16 { pt3dadd( -10.9589, 193.235, -5.2207, 0.67 ) }
    dend_16 { pt3dadd( -11.3238, 194.734, -5.35715, 0.67 ) }
    dend_16 { pt3dadd( -12.3987, 199.475, -5.85053, 0.67 ) }
    dend_16 { pt3dadd( -12.862, 201.361, -6.04209, 0.67 ) }
    dend_16 { pt3dadd( -13.5339, 204.082, -6.37178, 0.67 ) }
    dend_16 { pt3dadd( -13.8627, 205.53, -6.50926, 0.67 ) }
    dend_16 { pt3dadd( -14.4353, 208.025, -6.65799, 0.33 ) }
    dend_16 { pt3dadd( -15.2572, 211.811, -6.64523, 0.67 ) }
    dend_16 { pt3dadd( -15.7873, 214.504, -6.42924, 0.67 ) }
    dend_16 { pt3dadd( -16.0164, 215.566, -6.32641, 1.33 ) }
    dend_16 { pt3dadd( -16.9572, 220.372, -5.79792, 0.33 ) }
    dend_16 { pt3dadd( -17.3851, 222.471, -5.50501, 1.33 ) }
    dend_16 { pt3dadd( -17.7868, 224.26, -5.24602, 0.33 ) }
    dend_16 { pt3dadd( -18.0773, 225.36, -5.11763, 0.67 ) }
    dend_16 { pt3dadd( -19.0683, 228.539, -4.95347, 0.67 ) }
    dend_16 { pt3dadd( -19.9506, 230.933, -4.96828, 0.67 ) }
    dend_16 { pt3dadd( -20.9088, 232.881, -5.20752, 0.33 ) }
    dend_16 { pt3dadd( -22.0826, 234.786, -5.65053, 0.67 ) }
    dend_16 { pt3dadd( -24.1609, 237.344, -6.61886, 0.33 ) }
    dend_16 { pt3dadd( -25.9702, 238.827, -7.66211, 0.67 ) }
    dend_16 { pt3dadd( -27.5175, 239.245, -9.03542, 0.67 ) }
    dend_16 { pt3dadd( -30.0829, 239.281, -11.6047, 0.67 ) }
    dend_16 { pt3dadd( -31.6897, 239.105, -13.3256, 0.67 ) }
    dend_16 { pt3dadd( -33.3546, 238.678, -15.185, 0.67 ) }
    dend_16 { pt3dadd( -35.0891, 237.957, -17.2407, 0.33 ) }
    dend_16 { pt3dadd( -39.9551, 235.432, -23.2619, 0.33 ) }
    dend_16 { pt3dadd( -40.418, 235.174, -23.8381, 0.67 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 34/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -7.94504, 181.599, -4.32163, 0.67 ) }
    dend_15 { pt3dadd( -9.61116, 183.562, -2.19746, 0.67 ) }
    dend_15 { pt3dadd( -10.3326, 184.495, -1.28584, 0.67 ) }
    dend_15 { pt3dadd( -10.9648, 185.392, -0.518061, 0.67 ) }
    dend_15 { pt3dadd( -13.2124, 189.347, 2.56062, 0.67 ) }
    dend_15 { pt3dadd( -14.4922, 191.635, 4.29236, 0.67 ) }
    dend_15 { pt3dadd( -15.8861, 194.204, 6.13378, 0.33 ) }
    dend_15 { pt3dadd( -16.2163, 194.853, 6.45623, 2.0 ) }
    dend_15 { pt3dadd( -17.3582, 196.901, 7.13093, 0.67 ) }
    dend_15 { pt3dadd( -20.0367, 201.094, 7.88924, 0.33 ) }
    dend_15 { pt3dadd( -21.6406, 203.29, 7.91205, 0.67 ) }
    dend_15 { pt3dadd( -23.046, 205.049, 7.79215, 0.67 ) }
    dend_15 { pt3dadd( -29.0095, 211.257, 7.29349, 0.33 ) }
    dend_15 { pt3dadd( -30.7172, 212.992, 7.38563, 0.33 ) }
    dend_15 { pt3dadd( -31.9212, 214.14, 7.55711, 1.33 ) }
    dend_15 { pt3dadd( -33.6681, 215.774, 7.9857, 0.67 ) }
    dend_15 { pt3dadd( -34.6428, 216.731, 8.36196, 0.67 ) }
    dend_15 { pt3dadd( -36.8672, 218.965, 9.82651, 0.33 ) }
    dend_15 { pt3dadd( -40.4321, 222.958, 13.7865, 1.33 ) }
    dend_15 { pt3dadd( -41.0936, 223.822, 14.6472, 0.67 ) }
    dend_15 { pt3dadd( -41.9366, 225.124, 15.9456, 0.33 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
    ModelViewParmSubset_2 = new SectionList()
    dend_56 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_56, dend_31, dend_22, dend_9, dend_0, dend_58, dend_57, dend_51, dend_32, dend_30, dend_23, dend_19, dend_10, dend_6, dend_1, dend_60, dend_59, dend_55, dend_52, dend_44, dend_33, dend_29, dend_24, dend_21, dend_20, dend_18, dend_11, dend_8, dend_7, dend_5, dend_2, dend_54, dend_53, dend_48, dend_45, dend_41, dend_34, dend_26, dend_25, dend_13, dend_12, dend_4, dend_3, dend_50, dend_49, dend_47, dend_46, dend_43, dend_42, dend_38, dend_35, dend_28, dend_27, dend_17, dend_14, dend_40, dend_39, dend_37, dend_36, dend_16, dend_15]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_41 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_58 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_57 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_51 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_30 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_19 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_6 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_60 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_59 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_55 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_52 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_33 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_5 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_54 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_53 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_41 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_34 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_25 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_12 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_4 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_3 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_42 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_28 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_17 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_40 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_39 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_37 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_16 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_15 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_31 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_22 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_32 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_56 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_23 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_29 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_24 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_48 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_45 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_50 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_49 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_27 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_13 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_18 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_14 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_7 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_38 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_21 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_35 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_20 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_36 OneSecGrp_SectionRef_62.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_56, dend_56, dend_56, dend_56, dend_31, dend_22, dend_22, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_0, axon_0, axon_0, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_20, dend_20, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_8, dend_8, dend_7, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_50, dend_50, dend_50, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_31 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_9 nseg = 5
    dend_58 nseg = 5
    dend_57 nseg = 13
    dend_51 nseg = 5
    dend_30 nseg = 9
    dend_19 nseg = 7
    dend_10 nseg = 3
    dend_6 nseg = 7
    dend_1 nseg = 3
    dend_60 nseg = 3
    dend_59 nseg = 5
    dend_55 nseg = 7
    dend_52 nseg = 5
    dend_44 nseg = 3
    dend_33 nseg = 3
    dend_5 nseg = 7
    dend_2 nseg = 5
    dend_54 nseg = 7
    dend_53 nseg = 3
    dend_41 nseg = 3
    dend_34 nseg = 7
    dend_25 nseg = 13
    dend_12 nseg = 5
    dend_4 nseg = 5
    dend_3 nseg = 5
    dend_43 nseg = 3
    dend_42 nseg = 7
    dend_28 nseg = 3
    dend_17 nseg = 5
    dend_40 nseg = 9
    dend_39 nseg = 7
    dend_37 nseg = 5
    dend_16 nseg = 5
    dend_15 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L4_LBC_057a5b90cc_0_0


