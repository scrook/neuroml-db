// Cell: dNAC222_L4_SBC_9995bf5c97_0_0
/*
{
  "id" : "dNAC222_L4_SBC_9995bf5c97_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.566138, -14.2736, 0.0, 4.7562", "0.529356, -12.8797, 0.0, 7.97011", "0.492574, -11.4859, 0.0, 9.9442", "0.455792, -10.0921, 0.0, 11.2117", "0.419009, -8.69823, 0.0, 12.2129", "0.382227, -7.3044, 0.0, 12.4666", "0.345445, -5.91057, 0.0, 12.5364", "0.308663, -4.51674, 0.0, 12.5226", "0.271881, -3.12291, 0.0, 12.2716", "0.235099, -1.72908, 0.0, 11.4903", "0.198316, -0.335252, 0.0, 10.5046", "0.161534, 1.05858, 0.0, 9.96394", "0.124752, 2.45241, 0.0, 9.57888", "0.0879699, 3.84624, 0.0, 8.9522", "0.0511878, 5.24007, 0.0, 8.07113", "0.0144056, 6.6339, 0.0, 7.75231", "-0.0223766, 8.02773, 0.0, 7.65831", "-0.0591587, 9.42156, 0.0, 7.44457", "-0.0959409, 10.8154, 0.0, 6.57662", "-0.132723, 12.2092, 0.0, 5.01156", "-0.169505, 13.603, 0.0, 3.05458" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "0.89782, -7.62067, -8.81, 1.17", "0.194996, -8.13439, -8.21388, 1.17", "-1.27891, -9.21172, -6.96376, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "3.47782, -12.4371, 7.54, 1.39", "4.53818, -13.5934, 7.83222, 1.39", "5.90126, -14.9797, 8.14313, 1.17", "6.57089, -15.6608, 8.29587, 1.24", "7.5145, -16.6205, 8.51109, 0.95", "8.685, -17.811, 8.77807, 1.24", "9.54907, -18.6899, 8.97516, 1.68", "10.4844, -19.5646, 9.23886, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.53218, -12.3201, -0.570001, 0.73", "-0.467422, -13.8856, -0.0080836, 0.66", "-0.394764, -15.5733, 0.706846, 0.66", "-0.356352, -16.5264, 1.15006, 1.09", "-0.333461, -17.3796, 1.5474, 1.09", "-0.303919, -18.7303, 2.16489, 0.58", "-0.264412, -20.7129, 3.01024, 0.44", "-0.24835, -22.3775, 3.66343, 1.24", "-0.265825, -24.066, 4.27818, 0.58", "-0.300045, -24.9164, 4.57829, 1.02", "-0.336865, -25.4953, 4.77738, 1.09", "-0.491466, -27.3075, 5.35011, 0.51", "-0.65358, -28.9369, 5.77749, 0.36", "-0.799747, -30.3709, 6.11335, 1.24", "-0.987711, -32.3048, 6.58517, 0.58", "-1.09581, -33.689, 6.94518, 0.51", "-1.15232, -34.6595, 7.19817, 0.88", "-1.16395, -35.332, 7.36761, 1.02", "-1.08785, -37.0856, 7.75664, 0.36", "-1.00191, -38.0726, 7.96486, 0.66", "-0.846915, -39.4433, 8.20821, 0.88", "-0.652846, -40.9877, 8.43716, 1.09", "-0.461099, -42.351, 8.62076, 0.66", "-0.310338, -43.3834, 8.73462, 0.51", "-0.124039, -44.8073, 8.87169, 0.44", "0.0245529, -46.285, 9.00889, 1.02", "0.0728117, -47.1455, 9.11249, 1.31", "0.0922515, -48.2042, 9.26077, 1.02", "0.0796752, -49.8645, 9.5105, 0.58", "0.0727412, -51.5729, 9.77539, 0.73", "0.0945185, -52.9904, 9.94981, 0.51", "0.130024, -54.1323, 10.0547, 0.15", "0.157269, -54.9971, 10.1034, 0.15", "0.197586, -56.0874, 10.1202, 1.17", "0.300695, -57.8095, 10.0234, 0.51", "0.482835, -59.3011, 9.857, 0.07", "0.635853, -60.2108, 9.76168, 0.73", "0.825575, -61.2421, 9.68645, 0.95", "1.11745, -63.0456, 9.66368, 1.39", "1.35762, -64.954, 9.78842, 1.61", "1.49281, -66.9998, 10.1351, 0.58", "1.48279, -68.5359, 10.5785, 0.44", "1.38457, -69.7638, 11.0284, 0.8", "1.18735, -71.0833, 11.5906, 0.44", "0.945288, -72.2046, 12.0827, 0.58", "0.529835, -73.85, 12.7864, 0.29", "0.222104, -75.2611, 13.1977, 0.22", "0.111359, -76.262, 13.3213, 0.22", "0.154748, -77.3016, 13.2963, 0.22", "0.493447, -79.1102, 13.0698, 0.58", "0.838859, -80.2383, 12.8539, 1.17", "1.86107, -82.6335, 12.3099, 0.15", "2.2258, -83.3511, 12.1507, 0.73", "2.87047, -84.5333, 11.9328, 1.31", "3.58698, -85.8808, 11.7539, 0.15", "3.9575, -86.6477, 11.7032, 0.15", "4.4322, -87.8314, 11.6752, 1.24", "4.87259, -89.2771, 11.738, 0.15", "5.1315, -90.396, 11.7918, 0.66", "5.38975, -91.8425, 11.8852, 0.29", "5.53314, -92.8197, 11.9594, 0.44", "5.686, -94.1035, 12.0651, 0.15", "5.85741, -95.6128, 12.1932, 1.68", "6.09124, -97.4988, 12.433, 0.73", "6.31822, -99.0723, 12.6687, 0.15", "6.54986, -100.397, 12.8869, 0.88", "6.6664, -100.991, 12.9841, 0.88", "7.16988, -103.514, 13.3757, 0.15", "7.55079, -105.383, 13.6413, 0.73", "7.83036, -106.713, 13.8194, 0.58", "8.09833, -107.965, 13.9618, 1.02", "8.66165, -110.441, 14.1236, 0.36", "9.01113, -111.87, 14.1499, 0.22", "9.18632, -112.584, 14.1221, 0.51", "9.45744, -113.63, 14.0065, 0.95", "10.0073, -115.637, 13.7396, 0.36", "10.5073, -117.357, 13.4733, 0.44", "10.7444, -118.131, 13.3159, 0.66", "11.3071, -119.994, 12.9017, 0.44", "11.7499, -121.563, 12.5488, 0.8", "11.9901, -122.467, 12.3234, 0.95", "12.2723, -123.561, 12.0553, 0.58", "12.7448, -125.48, 11.6379, 0.36", "13.0796, -126.984, 11.3082, 1.75", "13.2656, -127.997, 11.0863, 1.75", "13.4295, -129.405, 10.8034, 1.53", "13.588, -131.709, 10.3616, 0.51", "13.6215, -132.564, 10.2175, 0.22", "13.6593, -133.642, 10.0966, 0.22", "13.7166, -134.482, 10.0231, 0.22", "13.7977, -135.135, 9.99513, 0.22", "13.9344, -135.734, 10.0091, 0.66", "14.2131, -136.427, 10.0251, 0.66", "14.8676, -137.571, 10.0963, 0.15", "15.584, -138.647, 10.252, 1.09", "16.1641, -139.513, 10.4297, 1.09", "16.9014, -140.69, 10.7104, 0.36", "17.5788, -141.844, 10.9745, 0.51", "18.2331, -143.016, 11.2063, 0.95", "19.0887, -144.607, 11.4829, 0.29", "19.6845, -145.809, 11.658, 0.07", "20.2651, -147.079, 11.8032, 1.46", "21.0663, -149.092, 11.9535, 0.58", "21.6117, -150.582, 12.0064, 0.44", "21.9037, -151.354, 11.9957, 0.22", "22.2692, -152.227, 11.9556, 0.8", "22.7363, -153.219, 11.9206, 0.8", "23.5574, -154.872, 11.9093, 0.15", "23.9903, -155.748, 11.9349, 0.15", "24.8019, -157.316, 12.0085, 1.61", "25.3907, -158.403, 12.0618, 1.31", "26.1442, -159.74, 12.1296, 0.29", "26.6706, -160.734, 12.1773, 0.22", "27.533, -162.486, 12.256, 0.73", "28.1626, -163.921, 12.3141, 0.07", "28.5111, -164.782, 12.3466, 0.73", "28.7923, -165.514, 12.373, 0.88", "29.5598, -167.626, 12.3989, 0.22", "29.9768, -168.764, 12.3491, 1.09", "30.2247, -169.413, 12.2885, 1.09", "30.99, -171.234, 12.0471, 0.07", "31.1712, -171.622, 11.9838, 0.36", "31.9955, -173.201, 11.6708, 0.07", "32.8029, -174.552, 11.3697, 0.07", "33.3189, -175.376, 11.1878, 0.07", "33.8161, -176.139, 11.0381, 1.17", "34.2136, -176.736, 10.9407, 1.31", "35.4866, -178.844, 10.7129, 0.07", "36.0924, -179.99, 10.63, 0.07", "36.5493, -180.981, 10.5726, 0.36", "37.2186, -182.578, 10.5531, 0.07", "37.5776, -183.551, 10.5459, 0.07", "38.3969, -185.879, 10.5458, 2.12", "39.1756, -188.333, 10.5796, 0.15", "39.5466, -189.646, 10.5948, 0.15", "40.1799, -192.186, 10.6228, 1.24", "40.6105, -194.111, 10.6503, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-2.03218, 1.51508, -5.49, 1.68", "-2.91089, 1.87903, -6.18642, 1.68", "-4.14295, 2.50296, -7.30834, 1.09", "-5.17787, 3.15732, -8.56568, 0.51", "-5.80883, 3.65867, -9.60945, 0.66", "-6.58802, 4.47365, -11.4579, 0.73", "-6.86973, 4.87375, -12.517, 0.73", "-6.86323, 5.03414, -13.1108, 0.73", "-6.49227, 5.37268, -15.1333, 0.73", "-6.15241, 5.51129, -16.2383, 0.73", "-5.79406, 5.57906, -17.0617, 0.73", "-5.23358, 5.61332, -18.1121, 0.73", "-4.73651, 5.61208, -19.0538, 0.73", "-4.19772, 5.62649, -20.1678, 0.73", "-6.59935, 5.15627, -14.4349, 0.66", "-7.24296, 4.97588, -12.8531, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "1.50782, 11.9964, -1.4, 0.88", "1.74556, 12.5146, -1.66977, 0.88", "2.25786, 13.5053, -2.15126, 0.88", "2.65529, 14.289, -2.45564, 0.88", "3.15852, 15.4119, -2.82226, 0.88", "3.48514, 16.1408, -3.0602, 1.31", "3.69463, 16.6083, -3.21283, 1.46", "4.37844, 18.0821, -3.65805, 0.8", "4.86322, 19.0968, -3.88765, 1.24", "5.30016, 20.017, -4.02877, 1.53" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.25782, 12.5716, -0.12, 0.36", "3.51174, 13.4224, 0.0656596, 0.36", "3.73587, 14.3816, 0.315334, 0.58", "3.91909, 15.3423, 0.570724, 0.29", "4.06381, 16.2589, 0.804875, 0.07", "4.1411, 16.8313, 0.974671, 0.07", "4.20431, 17.4008, 1.15557, 0.07", "4.21907, 18.3817, 1.58941, 0.36", "4.18236, 18.9598, 1.9814, 0.51", "4.13156, 19.5987, 2.50751, 0.51", "4.10385, 20.3547, 3.17349, 0.29", "4.09942, 20.6338, 3.41358, 0.44", "4.11172, 21.6551, 4.29683, 0.15", "4.18778, 23.1964, 5.64413, 0.07", "4.25942, 23.7888, 6.15269, 0.07", "4.34923, 24.2523, 6.51969, 0.07", "4.57335, 25.216, 7.20811, 0.07", "4.82716, 26.119, 7.78218, 0.07", "4.99911, 26.625, 8.01959, 0.07", "5.34965, 27.5457, 8.32607, 0.07", "5.55084, 28.039, 8.52179, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-3.35218, 8.85683, 2.7, 1.31", "-4.39698, 9.90266, 3.9456, 0.8", "-5.03877, 10.6591, 4.65837, 0.58", "-5.85315, 11.7927, 5.55034, 0.73", "-6.45705, 12.8792, 6.27597, 0.73", "-6.77845, 13.609, 6.70896, 0.88", "-7.22527, 14.8761, 7.43719, 0.58", "-7.44322, 16.0418, 7.96466, 0.36", "-7.43071, 17.1516, 8.40587, 1.24", "-7.07747, 18.603, 8.89408, 0.58", "-6.74563, 19.1999, 9.0964, 0.58", "-6.05844, 19.7456, 9.34179, 0.58", "-5.19737, 20.0691, 9.54644, 0.58", "-4.57336, 20.2102, 9.66992, 1.02", "-3.81911, 20.3395, 9.79416, 1.02", "-3.09713, 20.488, 9.92529, 1.24", "-1.28324, 21.1087, 10.274, 0.66", "-0.294082, 21.6567, 10.4735, 0.66", "0.289127, 22.1334, 10.6132, 0.95", "1.01705, 22.9523, 10.8154, 0.95", "1.93142, 24.3837, 11.1133, 0.51", "2.64011, 25.8908, 11.3667, 0.51", "3.08001, 27.1312, 11.5359, 0.73", "3.29941, 27.8027, 11.6159, 0.51", "3.5077, 28.3433, 11.6718, 0.8", "3.95852, 29.224, 11.7454, 0.8", "4.78096, 30.2405, 11.7824, 0.51", "5.43412, 30.7896, 11.8009, 0.51", "5.97553, 31.1662, 11.8129, 0.51", "7.42693, 32.1188, 11.8405, 0.8", "8.47281, 32.7924, 11.8678, 0.8", "9.6017, 33.5724, 11.9532, 0.51", "10.1034, 33.9948, 12.0456, 0.29", "10.5213, 34.4939, 12.1811, 0.07", "10.8585, 35.1263, 12.3728, 0.07", "11.1348, 36.0472, 12.7092, 0.8", "11.4037, 37.4218, 13.3219, 0.73", "11.567, 38.4491, 13.8519, 0.88", "11.7759, 39.5569, 14.488, 1.09", "11.9898, 40.4121, 15.0337, 0.73", "12.3618, 41.6151, 15.8788, 0.58", "12.6556, 42.395, 16.477, 0.58", "12.8736, 42.7439, 16.7719, 0.73", "13.3027, 43.1764, 17.1656, 0.73", "13.688, 43.4539, 17.427, 0.73", "13.8012, 43.5272, 17.484, 0.07", "14.2299, 43.8524, 17.6733, 0.07", "14.7872, 44.4062, 17.934, 0.07", "15.2789, 45.0145, 18.3016, 0.58", "15.8134, 45.7877, 18.8083, 0.88", "16.2346, 46.4396, 19.2888, 0.66", "16.7329, 47.2481, 19.9495, 0.66", "17.021, 47.7623, 20.3867, 1.17", "17.6837, 48.994, 21.4385, 0.07", "17.9832, 49.5129, 21.8769, 0.58", "18.4173, 50.2257, 22.4869, 0.22", "18.8401, 50.8658, 23.0661, 0.51", "19.2574, 51.4113, 23.5924, 0.51", "19.8198, 52.0362, 24.235, 0.36", "20.2935, 52.467, 24.6779, 0.36", "21.0689, 53.0238, 25.3725, 0.36", "22.0016, 53.5555, 26.1145, 0.88", "22.33, 53.7102, 26.3852, 0.88", "22.5897, 53.8281, 26.6195, 0.88", "22.8873, 53.9919, 26.8679, 0.88", "23.5387, 54.4877, 27.3105, 0.88", "24.0292, 54.9436, 27.541, 0.15", "24.8129, 55.7259, 27.7961, 0.15", "25.4463, 56.4032, 28.0099, 0.95", "26.5128, 57.6644, 28.417, 0.58", "27.1005, 58.4604, 28.6571, 0.58", "27.4138, 58.9494, 28.8042, 0.58", "27.9564, 59.9405, 29.1224, 0.88", "28.5041, 61.1903, 29.5625, 0.29", "28.8473, 62.2567, 30.004, 0.07", "29.0167, 63.1003, 30.4027, 0.66", "29.1674, 64.3512, 30.9053, 0.07", "29.2285, 65.2024, 31.1775, 0.66", "29.2721, 66.4186, 31.4658, 0.29", "29.2866, 66.764, 31.5137, 0.51", "29.365, 67.8325, 31.5867, 0.22", "29.5462, 69.4165, 31.612, 0.73", "29.6832, 70.4441, 31.5571, 0.07", "29.7924, 71.0779, 31.4917, 0.44", "29.9295, 71.6992, 31.3956, 0.44", "30.0904, 72.3506, 31.3011, 0.07", "30.3271, 73.2609, 31.2013, 0.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "3.28782, 12.2889, -1.27, 1.68", "4.86366, 12.5363, -1.61425, 1.68", "6.0345, 12.7201, -1.87003, 1.68", "7.29437, 12.9179, -2.14526, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.56218, 0.852082, -3.14, 1.97", "-3.86795, 0.72666, -2.92786, 1.97", "-4.68625, 0.658806, -2.8044, 1.97", "-6.8201, 0.509306, -2.50572, 1.31", "-8.56768, 0.435566, -2.27895, 1.02", "-9.57543, 0.438532, -2.16054, 1.02", "-10.4826, 0.48606, -2.06469, 1.02", "-11.4476, 0.599283, -1.97712, 1.02", "-12.1241, 0.714401, -1.92199, 1.02", "-12.9219, 0.930494, -1.87735, 1.02", "-14.1708, 1.35555, -1.87735, 1.02", "-15.2569, 1.77046, -1.87735, 1.02", "-16.7843, 2.44665, -1.87735, 2.12" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-3.76218, 7.90133, 3.27, 2.19", "-4.72207, 8.62936, 3.2888, 2.19", "-5.82071, 9.41318, 3.37472, 1.39", "-6.55879, 9.90862, 3.33117, 1.46", "-7.67849, 10.6005, 3.18612, 1.61", "-8.53425, 11.0869, 3.03926, 1.61", "-9.38594, 11.527, 2.85917, 1.61", "-10.4452, 11.9953, 2.58792, 1.61", "-12.6102, 12.8104, 1.96247, 1.61", "-13.3308, 13.0531, 1.73101, 1.46", "-14.2716, 13.3302, 1.39032, 1.17", "-15.3975, 13.6256, 0.948662, 1.17", "-16.946, 14.001, 0.305509, 1.39", "-17.0195, 14.0184, 0.275263, 1.39" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000179203975454
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.169505, 13.603, 0.0, 0.713328", "-0.565205, 28.5978, 0.0, 0.713328", "-0.960906, 43.5926, 0.0, 0.713328" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-1.27891, -9.21172, -6.96376, 0.36", "-1.60827, -10.8527, -6.77186, 0.36", "-2.09105, -12.1713, -6.46083, 0.36", "-2.5565, -13.1952, -6.09536, 1.02", "-2.82728, -13.7366, -5.87574, 1.02", "-3.19322, -14.4554, -5.58612, 0.66", "-3.8505, -15.7596, -4.99012, 0.36", "-4.61645, -17.1325, -4.23473, 0.51", "-5.21901, -18.1508, -3.63868, 0.95", "-5.55553, -18.7135, -3.30216, 1.24", "-6.28841, -20.0131, -2.57684, 0.95", "-7.13238, -21.64, -1.78489, 0.95", "-7.43375, -22.2951, -1.50535, 0.95", "-7.92228, -23.456, -1.06527, 1.17", "-8.51077, -24.8462, -0.573052, 0.51", "-9.01437, -26.0299, -0.156326, 0.73", "-9.5846, -27.3387, 0.279714, 0.66", "-9.94609, -28.1706, 0.489127, 1.24", "-10.3284, -29.0954, 0.730123, 1.53" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-1.27891, -9.21172, -6.96376, 0.36", "-2.01636, -8.96086, -7.04584, 0.36", "-2.65456, -8.81, -7.10492, 0.36", "-3.697, -8.6459, -7.1819, 0.36", "-4.41002, -8.56432, -7.22042, 0.36", "-4.88034, -8.51307, -7.23701, 0.36", "-5.68218, -8.41703, -7.21167, 0.36", "-5.98808, -8.39324, -7.18212, 0.36", "-6.45167, -8.37659, -7.10847, 0.51", "-7.03729, -8.38244, -6.96553, 0.73", "-7.68784, -8.40097, -6.79038, 0.73", "-8.75319, -8.46813, -6.49134, 0.73", "-9.25696, -8.52399, -6.34534, 0.88", "-10.1968, -8.75056, -6.07839, 0.44", "-11.4834, -9.27174, -5.7286, 0.36", "-11.9571, -9.56023, -5.61053, 0.36", "-12.4954, -9.99624, -5.48115, 0.36", "-12.8329, -10.3196, -5.41018, 0.66", "-13.7297, -11.2737, -5.21616, 0.29", "-14.0978, -11.7032, -5.11478, 0.29", "-14.4387, -12.1084, -5.01116, 0.29", "-15.243, -13.0052, -4.73734, 0.29", "-15.7972, -13.5438, -4.53793, 1.09", "-16.0888, -13.8017, -4.42762, 1.09", "-16.9564, -14.5304, -4.08981, 0.36", "-17.5625, -15.0508, -3.86974, 1.02", "-17.7445, -15.2192, -3.80755, 1.02", "-18.6693, -16.213, -3.55962, 0.29", "-18.9511, -16.5813, -3.50533, 0.29", "-19.3392, -17.2236, -3.51033, 0.58", "-19.906, -18.465, -3.66058, 0.22", "-20.1938, -19.3277, -3.7895, 1.24", "-20.4443, -20.306, -3.95127, 1.09", "-20.6927, -21.5362, -4.17701, 1.09", "-21.008, -23.1372, -4.47838, 0.29", "-21.1889, -23.8629, -4.59837, 0.29", "-21.4765, -24.7215, -4.71047, 0.29", "-21.9573, -25.511, -4.75502, 0.66", "-22.4412, -25.9683, -4.71661, 1.24", "-22.7801, -26.1776, -4.67021, 1.24", "-24.4637, -26.9483, -4.39335, 0.36", "-25.1567, -27.2069, -4.29672, 0.66", "-26.594, -27.6677, -4.1288, 0.29", "-27.1704, -27.8348, -4.08068, 1.24", "-27.6192, -27.9631, -4.05831, 1.24", "-28.092, -28.0915, -4.05365, 1.24", "-28.7205, -28.2396, -4.08898, 1.24", "-29.5324, -28.3909, -4.17926, 0.22", "-30.267, -28.5071, -4.30978, 0.22", "-30.5073, -28.5246, -4.35685, 0.22", "-31.1128, -28.5309, -4.47319, 0.22", "-31.397, -28.5218, -4.5179, 0.22", "-32.0437, -28.4644, -4.66079, 0.22", "-32.5207, -28.4134, -4.77235, 0.51", "-33.0315, -28.3831, -4.88817, 0.51", "-33.4895, -28.3722, -5.00865, 0.51", "-34.6203, -28.383, -5.38411, 0.29", "-35.7789, -28.4066, -5.82653, 0.58", "-36.4737, -28.4224, -6.1185, 0.88", "-37.2788, -28.4413, -6.51508, 1.24", "-38.2253, -28.4828, -7.06547, 0.51", "-39.1509, -28.5459, -7.69302, 0.51", "-39.7138, -28.6074, -8.1595, 0.29", "-40.088, -28.6631, -8.50541, 0.29", "-40.5705, -28.7353, -9.08193, 0.29", "-40.8751, -28.7834, -9.56408, 0.29", "-41.1427, -28.8807, -10.0979, 0.29", "-41.4831, -29.0097, -10.5165, 0.29", "-41.7567, -29.082, -10.6977, 0.29", "-42.2569, -29.2416, -10.9635, 0.29", "-42.5189, -29.3528, -11.0981, 0.51", "-43.1782, -29.7148, -11.4692, 1.39", "-44.2562, -30.4285, -12.0974, 0.29", "-44.7411, -30.8528, -12.3847, 0.88", "-45.5261, -31.709, -12.8829, 0.36", "-46.197, -32.5954, -13.3375, 0.66", "-46.7365, -33.4203, -13.7153, 1.53", "-47.0088, -33.9061, -13.9051, 1.53", "-47.6336, -35.1874, -14.2967, 0.07", "-47.9184, -35.7941, -14.4518, 0.07", "-48.1881, -36.3443, -14.5497, 1.17", "-48.3533, -36.6665, -14.5942, 1.17", "-48.66, -37.2719, -14.6785, 1.17", "-49.144, -38.3492, -14.8597, 0.07", "-49.323, -38.8594, -15.0262, 0.22", "-49.5073, -39.5463, -15.3197, 0.22", "-49.6451, -40.2829, -15.6857, 0.51", "-49.7013, -40.9001, -16.0234, 1.24", "-49.6947, -41.5745, -16.4507, 1.24", "-49.563, -43.3427, -17.6996, 0.44", "-49.5089, -43.7357, -17.9898, 0.29", "-49.4475, -44.1396, -18.3004, 0.07", "-49.4037, -44.4943, -18.5773, 0.07", "-49.3922, -45.1082, -19.0942, 0.07", "-49.4548, -45.5047, -19.4422, 0.07", "-49.7615, -46.2727, -20.0413, 1.17", "-50.2671, -46.8906, -20.659, 0.07", "-50.5585, -47.1164, -20.9204, 0.07", "-51.2824, -47.5626, -21.4136, 0.07", "-51.8775, -47.8778, -21.7311, 0.44", "-52.254, -48.0584, -21.9069, 1.24", "-53.3472, -48.5807, -22.3733, 0.15", "-53.6087, -48.7277, -22.4563, 0.29", "-54.3101, -49.2028, -22.6176, 0.07", "-54.6865, -49.4833, -22.6917, 0.66", "-54.9393, -49.6759, -22.7415, 0.66", "-55.8451, -50.399, -22.8956, 0.22", "-56.7928, -51.1693, -23.0716, 0.88", "-57.5416, -51.7848, -23.2613, 1.09", "-58.648, -52.7004, -23.5823, 0.22", "-59.1085, -53.0883, -23.7239, 0.22", "-60.1276, -53.9558, -24.0927, 2.12", "-61.7772, -55.4476, -24.7578, 0.36", "-62.6522, -56.2847, -25.1962, 0.15", "-63.0855, -56.7155, -25.4269, 0.8", "-63.4607, -57.1048, -25.6232, 0.8", "-64.726, -58.4329, -26.3228, 0.15", "-65.7165, -59.447, -26.8961, 1.75", "-67.1703, -60.9123, -27.6684, 0.07", "-67.6207, -61.354, -27.8853, 0.07", "-68.4908, -62.1792, -28.2997, 0.36", "-69.1778, -62.8059, -28.6423, 0.07", "-70.3968, -63.8726, -29.2385, 1.02", "-71.8788, -65.0603, -30.0014, 0.07", "-72.4937, -65.5364, -30.3137, 0.36", "-73.5319, -66.3311, -30.8521, 0.07", "-74.7347, -67.2613, -31.4783, 0.36", "-75.2044, -67.6413, -31.7128, 1.17", "-76.6622, -68.9446, -32.4264, 0.44", "-77.3144, -69.5961, -32.7767, 0.15", "-77.7851, -70.1075, -33.0154, 0.15", "-78.2264, -70.6392, -33.2014, 0.15", "-78.8127, -71.3948, -33.4003, 0.15", "-79.6765, -72.5423, -33.6693, 0.44", "-80.4364, -73.5528, -33.9236, 0.07", "-80.932, -74.0849, -34.0899, 0.07", "-81.6989, -74.7203, -34.3142, 0.07", "-82.2185, -75.0513, -34.4349, 0.07", "-83.6836, -75.7825, -34.6943, 0.36", "-85.025, -76.3218, -34.8912, 0.07", "-87.2001, -77.0897, -35.1339, 0.07", "-88.6091, -77.5589, -35.2755, 0.36", "-90.302, -78.0806, -35.418, 0.15", "-91.5792, -78.4564, -35.4594, 0.36", "-93.4233, -78.968, -35.4011, 0.15", "-94.9792, -79.3485, -35.2405, 0.15", "-95.7175, -79.5026, -35.1412, 0.15", "-96.6791, -79.6687, -34.9968, 0.15", "-98.1246, -79.8883, -34.7559, 0.15", "-99.6612, -80.0868, -34.4699, 0.58", "-103.783, -80.4677, -33.5972, 0.07", "-104.872, -80.5335, -33.3691, 0.07", "-106.626, -80.5927, -33.0272, 0.22", "-113.575, -84.1705, -33.9775, 0.22" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "10.4844, -19.5646, 9.23886, 1.02", "11.2858, -20.9523, 8.95296, 1.02", "12.1388, -22.1755, 8.78067, 0.88", "13.0998, -23.49, 8.73252, 0.73", "13.9298, -24.6537, 8.83973, 0.58", "15.0106, -26.2894, 9.14537, 0.88", "15.7811, -27.5247, 9.50154, 0.88", "16.7888, -29.1797, 10.1963, 0.66", "17.4991, -30.4555, 10.8421, 0.36", "18.3252, -32.1367, 11.9405, 1.02", "18.9658, -33.7275, 13.1422, 0.36", "19.4812, -35.3382, 14.4964, 0.88", "19.7541, -36.4552, 15.5027, 0.88", "19.8635, -37.0378, 16.0286, 0.88", "20.3131, -39.4432, 18.1593, 0.58", "20.4474, -40.101, 18.7198, 0.58", "20.5623, -40.5908, 19.0907, 0.73", "20.8451, -41.7828, 19.7662, 0.44", "21.1045, -42.8518, 20.1941, 0.15", "21.68, -45.1513, 20.7288, 1.09", "21.9545, -46.2305, 20.8049, 1.09", "22.5637, -48.4204, 20.8192, 0.44", "23.0835, -50.2863, 20.7419, 0.22", "23.429, -51.6636, 20.6249, 0.66", "23.7648, -53.0201, 20.5395, 0.66", "24.1543, -54.5064, 20.5199, 0.8", "24.5792, -56.0219, 20.6899, 0.8", "25.0678, -57.6186, 21.0794, 0.66", "25.8039, -59.7799, 21.9149, 0.66", "26.4342, -61.5344, 22.7578, 0.36", "27.0838, -63.3536, 23.7655, 0.51", "27.6639, -64.979, 24.7353, 0.73", "28.1013, -66.1928, 25.4745, 0.36", "28.6399, -67.6322, 26.3372, 0.8", "28.8617, -68.2248, 26.6788, 1.09", "29.05, -68.8225, 26.9557, 0.88", "29.4244, -70.2809, 27.509, 0.36", "29.7372, -71.6373, 27.9212, 0.07", "30.0476, -73.0934, 28.3136, 0.51", "30.2263, -73.9168, 28.4734, 0.73", "30.5625, -75.2626, 28.5974, 0.88", "31.214, -77.4701, 28.5791, 0.29", "31.5311, -78.448, 28.478, 0.22", "31.9217, -79.652, 28.2571, 0.36", "32.4474, -81.1759, 27.8571, 0.8", "33.2532, -83.243, 27.2068, 0.22", "33.6565, -84.157, 26.9128, 0.22", "33.8995, -84.6908, 26.7439, 0.22", "34.3491, -85.7601, 26.4752, 0.22", "34.8175, -87.0482, 26.2495, 0.58", "35.1657, -88.1778, 26.1514, 0.8", "35.7286, -90.4216, 26.1079, 0.29", "36.2229, -92.6825, 26.16, 0.29", "36.405, -93.6472, 26.2311, 0.8", "36.6137, -95.1162, 26.4153, 0.95", "36.742, -96.8459, 26.7391, 1.17", "36.7198, -98.9499, 27.2065, 0.58", "36.566, -100.478, 27.6113, 0.15", "36.4021, -101.49, 27.8917, 0.15", "36.2598, -102.226, 28.0118, 0.15", "36.047, -103.287, 28.0692, 0.36", "35.6379, -105.419, 27.9504, 0.36", "35.4744, -106.593, 27.795, 0.88", "35.3554, -108.087, 27.5135, 0.88", "35.3443, -110.818, 26.9172, 1.61", "35.4662, -112.359, 26.5656, 0.36", "35.749, -114.006, 26.1953, 0.88", "36.3542, -116.267, 25.7142, 0.51", "36.836, -117.706, 25.4159, 0.36", "37.2535, -118.756, 25.2236, 0.58", "37.8359, -119.999, 24.9973, 0.07", "38.7674, -121.842, 24.5758, 1.31", "39.6256, -123.52, 24.118, 0.44", "39.9994, -124.316, 23.8841, 0.15", "40.1971, -124.819, 23.7542, 0.44", "40.8049, -126.669, 23.344, 0.22", "41.1358, -127.803, 23.1165, 0.22", "41.631, -129.543, 22.8008, 1.68", "42.1033, -131.31, 22.5434, 0.88", "42.6703, -133.645, 22.2868, 0.36", "43.1787, -135.964, 22.1363, 1.24", "43.7415, -138.64, 22.0666, 0.07", "44.0437, -139.984, 22.0508, 0.07", "44.4381, -141.612, 22.0505, 1.17", "44.8085, -143.149, 22.059, 1.39", "45.3832, -145.508, 22.0925, 0.51", "45.7917, -147.15, 22.1368, 0.22", "46.389, -149.599, 22.2459, 1.82", "46.6929, -150.877, 22.3261, 1.82", "47.2553, -153.315, 22.5231, 0.36", "47.6424, -155.161, 22.7162, 0.15", "47.8771, -156.622, 22.9323, 0.66", "48.0066, -157.978, 23.2065, 0.66", "48.0738, -159.156, 23.543, 0.36", "48.1802, -160.538, 24.002, 1.02", "48.2761, -161.491, 24.3573, 1.02", "48.562, -163.593, 25.2094, 0.07", "48.8316, -164.673, 25.6676, 0.66", "49.5778, -166.656, 26.4857, 0.07", "50.3936, -168.247, 27.0784, 0.07", "50.673, -168.67, 27.2231, 0.36", "51.9796, -170.31, 27.6764, 0.07", "53.8447, -172.256, 28.0389, 1.39", "54.5546, -172.913, 28.0846, 1.39", "55.9027, -174.064, 28.0232, 0.07", "56.7085, -174.695, 27.943, 0.36", "58.7244, -176.105, 27.6175, 0.15", "59.8237, -176.783, 27.3635, 0.73", "61.8294, -177.94, 26.805, 0.07", "63.236, -178.784, 26.4183, 0.07", "64.2806, -179.474, 26.1404, 0.36", "65.4606, -180.386, 25.8476, 0.22", "66.203, -181.152, 25.6114, 0.22", "67.1452, -182.478, 25.246, 0.51", "68.0606, -184.326, 24.814, 0.15", "68.7432, -186.019, 24.4513, 0.15", "69.4988, -188.392, 23.9919, 0.58", "70.2683, -191.603, 23.4221, 0.07", "70.4203, -192.472, 23.269, 0.07", "70.5758, -193.924, 22.9898, 0.73" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "10.4844, -19.5646, 9.23886, 0.51", "11.4469, -19.8336, 10.4666, 0.51", "12.7566, -20.2144, 12.3933, 0.51", "13.3559, -20.3467, 13.3457, 0.51", "13.6475, -20.3717, 13.8375, 0.51", "14.0598, -20.344, 14.5758, 0.51", "14.5098, -20.2362, 15.5076, 0.51", "14.6404, -20.1152, 15.9931, 0.51", "14.6687, -19.7777, 16.8206, 0.51", "14.5754, -19.4274, 17.7878, 0.51", "14.4473, -19.3103, 18.4833, 0.66", "14.1442, -19.4243, 19.4406, 0.51", "14.021, -19.5533, 19.7344, 0.51", "13.7691, -19.8933, 20.2972, 0.51", "13.2982, -20.7537, 21.4841, 0.51", "12.9139, -21.7125, 22.6546, 0.29", "12.747, -22.3712, 23.5157, 0.66", "12.5934, -23.4375, 25.0875, 0.36", "12.5803, -23.6944, 25.607, 0.36", "12.6244, -24.1856, 27.1634, 0.58", "12.6688, -24.2641, 27.7416, 0.51", "12.9, -24.2474, 29.8627, 0.51", "12.9945, -24.165, 30.6565, 0.51", "13.1944, -23.9532, 32.2875, 0.51", "13.2635, -23.9041, 32.8101, 0.51", "13.2897, -23.8969, 33.0545, 0.51", "13.4378, -24.0714, 34.1054, 0.51", "13.6124, -24.3936, 34.6618, 0.51", "14.4714, -25.8097, 36.2048, 0.51", "14.9459, -26.5004, 36.7396, 0.29", "15.2425, -26.8417, 37.0364, 0.29", "16.1941, -27.764, 37.9281, 0.29", "16.9615, -28.3684, 38.5649, 0.44", "17.7504, -28.8376, 39.1788, 0.22", "18.5522, -29.1636, 39.7315, 0.44", "20.5214, -29.5955, 41.2749, 0.29", "21.3564, -29.5583, 42.0723, 0.07", "21.6212, -29.4889, 42.3886, 0.07", "21.8754, -29.4113, 42.7049, 0.07", "22.311, -29.3476, 43.1795, 0.07", "22.9358, -29.4368, 43.7424, 0.36", "24.0165, -29.7576, 44.559, 0.51", "25.0193, -30.0957, 45.3031, 0.51", "25.8846, -30.4199, 45.9613, 0.15", "26.8005, -30.7814, 46.6768, 0.07", "27.8127, -31.1548, 47.467, 0.07" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-7.24296, 4.97588, -12.8531, 0.36", "-7.49129, 5.79275, -13.1774, 0.36", "-7.7422, 6.73687, -13.4814, 0.36", "-7.89247, 7.33308, -13.6821, 0.36", "-8.00706, 7.84961, -13.8521, 0.36", "-8.16545, 8.65901, -14.1121, 0.58", "-8.29157, 9.42351, -14.3517, 0.73", "-8.4766, 10.685, -14.7092, 0.73", "-8.62174, 11.8097, -14.9968, 0.36", "-8.71458, 12.6256, -15.2001, 0.15", "-8.80595, 13.354, -15.3639, 0.15", "-8.88549, 13.8751, -15.4634, 0.15", "-8.99427, 14.4833, -15.5663, 0.15", "-9.17561, 15.1779, -15.637, 0.15", "-9.42773, 15.9838, -15.6729, 0.88", "-9.94689, 17.4469, -15.7091, 0.07", "-10.385, 18.6017, -15.7214, 0.8", "-10.6051, 19.1267, -15.7228, 0.8", "-11.4342, 20.8848, -15.713, 0.07", "-11.9292, 21.8488, -15.7012, 0.07", "-12.4904, 22.8753, -15.6836, 1.02", "-12.6569, 23.1605, -15.6791, 1.02", "-13.4234, 24.4506, -15.6779, 0.07", "-13.9505, 25.3831, -15.7111, 0.07", "-14.2241, 25.9305, -15.7585, 0.07", "-14.5071, 26.564, -15.8604, 0.66", "-14.6733, 27.0331, -15.9669, 0.66", "-14.9799, 28.2354, -16.2984, 0.07", "-15.1057, 29.0381, -16.5593, 0.07", "-15.1711, 29.6456, -16.7953, 1.61", "-15.3251, 30.9115, -17.3359, 0.07", "-15.4321, 31.5777, -17.6383, 0.07", "-15.5685, 32.2169, -17.9322, 0.07", "-15.809, 33.0617, -18.3133, 0.36", "-16.116, 33.8461, -18.6432, 0.07", "-16.5453, 34.6699, -18.8987, 0.73", "-17.4868, 36.0229, -19.2309, 0.07", "-18.386, 37.031, -19.3909, 0.07", "-19.1366, 37.7077, -19.4364, 0.07", "-20.383, 38.5898, -19.3894, 0.07", "-22.3553, 39.6435, -19.1701, 1.09", "-23.8533, 40.237, -18.9521, 0.07", "-25.5601, 40.754, -18.6533, 0.07", "-26.2656, 40.9457, -18.5249, 0.07", "-27.3461, 41.2424, -18.3349, 0.88", "-29.336, 41.8471, -18.0212, 0.07", "-30.614, 42.3105, -17.8897, 0.07", "-30.908, 42.4676, -17.8649, 0.73", "-31.9851, 43.25, -17.865, 0.07", "-32.5144, 43.7473, -17.8766, 0.07", "-32.924, 44.2496, -17.8976, 0.73", "-33.0543, 44.4633, -17.9097, 0.73", "-33.7679, 45.8406, -17.94, 0.07", "-34.0651, 46.4068, -17.9336, 0.07", "-34.2361, 46.7239, -17.9214, 0.22", "-34.4606, 47.1043, -17.899, 0.22", "-35.0366, 48.0062, -17.8285, 0.07", "-35.6884, 48.9599, -17.7384, 0.88", "-36.5725, 50.119, -17.6669, 0.07", "-36.9938, 50.6228, -17.6644, 0.36", "-37.4988, 51.1611, -17.7381, 0.07", "-37.9762, 51.5957, -17.853, 0.29", "-38.115, 51.7, -17.8956, 0.29", "-39.4976, 52.5586, -18.3939, 0.07", "-40.4084, 53.0018, -18.718, 1.02", "-41.9601, 53.71, -19.3, 0.07", "-42.7533, 54.0471, -19.6116, 0.07", "-43.3561, 54.2699, -19.8491, 0.07", "-43.8671, 54.4267, -20.0366, 0.07", "-45.0149, 54.5837, -20.3505, 0.36", "-49.6968, 60.6586, -20.9727, 0.36", "-54.4262, 66.6241, -22.1073, 0.36", "-60.3593, 71.5572, -22.6474, 0.36", "-65.9781, 76.7967, -21.7943, 0.36", "-71.2832, 82.3799, -22.2436, 0.36", "-76.3044, 88.1634, -21.3436, 0.36", "-80.9663, 94.269, -20.8447, 0.36", "-85.5148, 100.313, -19.3924, 0.36" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-7.24296, 4.97588, -12.8531, 0.36", "-7.2402, 3.9747, -13.4272, 0.36", "-7.24845, 2.56446, -14.054, 0.36", "-7.29476, 0.742829, -14.6528, 0.36", "-7.33338, -0.236148, -14.8786, 1.17", "-7.43087, -1.77642, -15.1372, 1.17", "-7.59791, -3.66973, -15.3731, 1.17", "-7.74216, -4.82682, -15.4057, 1.17", "-8.02563, -6.46494, -15.2866, 1.17", "-8.44135, -8.25532, -15.0204, 1.31", "-8.74606, -9.29444, -14.8313, 0.22", "-9.05801, -10.1072, -14.6436, 0.22", "-9.61827, -11.1975, -14.367, 0.22", "-10.3999, -12.3808, -14.0364, 0.22", "-11.1375, -13.2341, -13.7674, 0.22", "-11.6304, -13.6874, -13.6068, 0.22", "-12.4338, -14.3714, -13.3539, 0.66", "-13.2183, -15.0237, -13.1096, 0.95", "-13.9418, -15.6195, -12.887, 0.73", "-14.8596, -16.3869, -12.6044, 0.07", "-16.0518, -17.4664, -12.2256, 0.8", "-17.1692, -18.5921, -11.8532, 0.36", "-17.984, -19.5132, -11.5663, 0.07", "-19.0054, -20.8117, -11.2474, 0.15", "-19.2096, -21.103, -11.1913, 0.15", "-19.8592, -22.1534, -11.0394, 0.07", "-20.2071, -22.9208, -10.9704, 0.07", "-20.4211, -23.7297, -10.972, 0.07", "-20.5449, -25.6401, -11.1164, 1.68", "-20.4261, -26.6579, -11.2444, 2.19", "-20.3065, -27.1593, -11.3118, 2.19", "-19.636, -29.1488, -11.6783, 0.07", "-19.0063, -30.6612, -11.9948, 0.15", "-18.5941, -31.5202, -12.1736, 0.15", "-18.2039, -32.2797, -12.3139, 0.66", "-17.383, -33.9701, -12.6117, 0.07", "-16.7277, -35.5707, -12.8419, 1.97", "-16.5029, -36.3044, -12.9127, 1.97", "-16.1887, -37.8578, -12.9525, 0.22", "-16.1194, -38.8942, -12.9948, 0.22", "-16.1669, -39.6442, -13.0279, 0.22", "-16.4179, -40.9213, -13.0051, 0.44", "-16.67, -41.7447, -12.9256, 1.17", "-17.1081, -42.8428, -12.7885, 1.17", "-17.9756, -44.7502, -12.4968, 0.15", "-18.2847, -45.4236, -12.3797, 0.15", "-18.9076, -46.8586, -12.1019, 0.95", "-19.1846, -47.5919, -11.9445, 0.95", "-19.4719, -48.4614, -11.7688, 0.95", "-19.8655, -50.016, -11.5263, 0.15", "-19.9386, -50.4502, -11.4799, 0.15", "-20.0211, -51.1133, -11.4859, 0.15", "-20.0956, -52.0188, -11.5692, 0.15", "-20.1516, -53.2274, -11.7538, 1.24", "-20.1982, -55.2098, -12.1592, 0.07", "-20.2303, -56.9158, -12.5932, 0.07", "-20.2498, -58.008, -12.9041, 0.07", "-20.2684, -59.4959, -13.352, 1.53", "-20.274, -61.8512, -14.0729, 0.07", "-20.2457, -63.0281, -14.4245, 0.44", "-20.1653, -64.7014, -14.9193, 0.15", "-20.0308, -66.4658, -15.4738, 1.39", "-19.8526, -67.9752, -15.9376, 0.07", "-19.759, -68.4979, -16.1097, 0.07", "-19.57, -69.2789, -16.3529, 0.07", "-19.2672, -70.4168, -16.7249, 1.61", "-18.633, -72.7721, -17.5504, 0.15", "-18.3386, -73.9296, -17.9955, 0.15", "-18.0074, -75.3929, -18.5949, 0.8", "-17.8468, -76.1508, -18.9065, 0.15", "-17.5654, -77.6113, -19.5386, 0.15", "-17.3787, -78.3815, -19.8652, 1.31", "-17.0718, -79.4105, -20.2981, 0.07", "-16.8466, -80.0782, -20.606, 0.07", "-16.4193, -81.1893, -21.1099, 0.95", "-15.741, -82.788, -21.8315, 0.07", "-14.9642, -84.5353, -22.5523, 1.24", "-14.245, -86.232, -23.195, 0.29", "-13.7411, -87.5517, -23.6539, 0.07", "-13.4443, -88.4242, -23.9529, 0.73", "-12.9881, -89.9795, -24.4937, 0.22", "-12.6847, -91.0713, -24.8333, 0.88", "-12.3914, -92.1853, -25.1569, 1.02", "-11.9919, -93.6698, -25.5494, 0.29", "-11.7267, -94.6662, -25.7998, 0.07", "-11.2918, -96.3369, -26.2306, 0.07", "-10.831, -98.207, -26.7442, 1.39", "-10.6005, -99.2502, -27.0873, 1.39", "-10.2577, -101.105, -27.7364, 0.07", "-10.087, -102.385, -28.1805, 1.02", "-9.99115, -103.826, -28.6382, 0.29", "-10.0545, -105.671, -29.2244, 0.95", "-10.3667, -107.848, -29.9697, 0.07", "-10.5061, -108.488, -30.1847, 0.07", "-10.6315, -108.982, -30.3271, 0.07", "-11.0492, -110.563, -30.7222, 0.73", "-11.536, -112.466, -31.1257, 0.07", "-11.878, -114.087, -31.4217, 0.8", "-12.0054, -114.87, -31.5414, 1.09", "-12.22, -116.896, -31.9032, 0.07", "-12.2717, -117.784, -32.1048, 0.07", "-12.2831, -118.774, -32.4357, 0.66", "-12.2344, -120.569, -33.1328, 0.07", "-12.1543, -121.841, -33.7108, 0.07", "-11.9886, -123.689, -34.6237, 0.66", "-11.7214, -125.856, -35.7696, 0.07", "-11.2747, -128.152, -36.9711, 0.07", "-10.895, -129.445, -37.6421, 0.36", "-10.0477, -131.342, -38.6432, 0.07", "-9.52534, -132.238, -39.1116, 0.07", "-9.02224, -132.953, -39.4681, 0.66", "-7.72813, -134.5, -40.1348, 0.07", "-6.74433, -135.551, -40.4995, 0.07", "-5.5363, -136.699, -40.9502, 0.8", "-3.79068, -138.21, -41.541, 0.07", "-2.9677, -147.757, -43.5249, 0.07", "-3.48387, -156.852, -47.136, 0.07" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "5.30016, 20.017, -4.02877, 0.29", "4.57761, 20.838, -3.68495, 0.29", "4.01223, 21.5155, -3.40068, 0.29", "3.76333, 21.8574, -3.22348, 0.8", "3.37353, 22.4934, -2.87638, 0.95", "3.07107, 23.1037, -2.55772, 1.09", "2.91954, 23.4429, -2.38654, 1.09", "2.68988, 24.1081, -2.05464, 0.73", "2.37818, 25.0611, -1.59131, 0.36", "2.10648, 25.876, -1.20811, 0.22", "1.69646, 26.8488, -0.879563, 0.22", "1.28583, 27.6902, -0.680353, 0.22", "1.03156, 28.1735, -0.601238, 0.88", "0.484047, 29.1098, -0.491359, 1.09", "-0.040167, 29.9089, -0.422392, 1.09", "-1.52256, 31.9821, -0.228252, 0.15", "-2.1321, 32.7903, -0.162373, 0.15", "-2.79597, 33.6962, -0.0891012, 0.15", "-3.42782, 34.5957, -0.00203711, 1.09", "-3.84397, 35.2146, 0.0770763, 1.09", "-4.31222, 35.9324, 0.214026, 1.09", "-4.89336, 36.8828, 0.475362, 1.09", "-5.633, 38.0595, 0.787474, 0.15", "-6.12305, 38.8483, 0.987832, 0.15", "-6.57247, 39.6148, 1.17443, 0.15", "-7.12802, 40.5896, 1.39501, 0.36", "-7.34525, 40.9857, 1.48156, 0.36", "-7.63242, 41.5198, 1.60253, 0.07", "-7.95324, 42.1284, 1.68869, 0.36", "-8.30759, 42.8898, 1.74073, 0.07", "-8.70348, 43.9065, 1.76415, 0.07", "-9.06393, 44.9277, 1.73847, 1.46", "-9.27132, 45.5595, 1.70702, 1.61", "-9.69751, 46.8934, 1.64495, 0.07", "-9.9665, 47.7039, 1.61033, 0.07", "-10.4128, 48.9986, 1.57841, 1.02", "-10.9422, 50.2949, 1.62215, 0.07", "-11.3753, 51.15, 1.69002, 0.07", "-12.0026, 52.1997, 1.91959, 0.29", "-12.3205, 52.6271, 2.06381, 0.07", "-12.8897, 53.2434, 2.31189, 1.02", "-14.1297, 54.3781, 2.74935, 0.07", "-15.0425, 55.1378, 3.03467, 0.07", "-16.6387, 56.4042, 3.36457, 1.39", "-18.181, 57.6201, 3.53926, 0.07", "-19.0184, 58.3074, 3.57114, 0.73", "-20.302, 59.4236, 3.48792, 0.15", "-20.5868, 59.7096, 3.44386, 1.53", "-21.7943, 61.0433, 3.21953, 0.07", "-22.1069, 61.4257, 3.15013, 0.8", "-22.4666, 61.9272, 3.13249, 0.8", "-23.3985, 63.2848, 3.19591, 0.07", "-24.2576, 64.5914, 3.47061, 0.07", "-24.7209, 65.2929, 3.69238, 1.17", "-25.0636, 65.8117, 3.94199, 1.68", "-26.1056, 67.2925, 4.81254, 0.07", "-26.8133, 68.2498, 5.46528, 0.07", "-27.9312, 69.6774, 6.58404, 1.09", "-29.0237, 70.9812, 7.67372, 0.07", "-30.1779, 72.3327, 8.82146, 0.88", "-31.1089, 73.3924, 9.76275, 0.07", "-31.2595, 73.5592, 9.91901, 0.8", "-32.0068, 74.3529, 10.6784, 0.07", "-32.6437, 74.9629, 11.1675, 0.07", "-33.0973, 75.3707, 11.5138, 0.36", "-36.3041, 83.1812, 13.6482, 0.36", "-38.7781, 90.7511, 17.1764, 0.36", "-40.0046, 98.2055, 21.5045, 0.36", "-40.8708, 105.234, 26.5937, 0.36", "-42.2143, 112.811, 30.6579, 0.36", "-42.432, 120.701, 34.2789, 0.36", "-43.2231, 128.842, 37.1805, 0.36", "-43.8285, 137.375, 38.5586, 0.36" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "5.30016, 20.017, -4.02877, 1.02", "5.51771, 20.7134, -3.43702, 1.02", "6.05606, 22.4365, -1.97273, 0.73", "6.33544, 23.3307, -1.21284, 0.73" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "7.29437, 12.9179, -2.14526, 0.66", "8.32083, 13.2849, -1.61623, 0.66", "8.98961, 13.5757, -1.23593, 0.95", "10.35, 14.3083, -0.318715, 0.58", "10.9778, 14.7031, 0.157551, 0.88", "11.506, 15.1193, 0.631532, 0.51", "11.835, 15.4722, 1.00525, 0.29", "12.0026, 15.8705, 1.3948, 0.29", "11.997, 16.5347, 2.01223, 0.88", "11.9537, 16.7116, 2.16535, 1.09", "11.7628, 17.4417, 2.8412, 0.8", "11.6017, 18.184, 3.51961, 0.58", "11.5478, 18.6257, 3.89904, 0.58", "11.5258, 19.5078, 4.56231, 0.73", "11.5651, 20.5928, 5.2728, 0.44", "11.6652, 21.6529, 5.87882, 0.44", "11.7845, 22.4662, 6.29679, 0.95", "11.9495, 23.5202, 6.7756, 0.95", "12.1346, 24.8254, 7.33289, 0.73", "12.2375, 25.6562, 7.71844, 0.95", "12.3172, 26.7754, 8.25728, 0.58", "12.3338, 27.4957, 8.62176, 0.58", "12.3407, 28.4915, 9.17426, 1.02", "12.3676, 29.9708, 10.0772, 0.22", "12.3945, 31.0169, 10.7664, 0.36", "12.4561, 31.8481, 11.3371, 0.22", "12.5927, 32.8159, 12.028, 1.09", "12.7453, 33.4531, 12.5005, 1.31", "13.1835, 34.6165, 13.464, 0.73", "13.4769, 35.1766, 13.9753, 0.15", "14.0008, 36.0106, 14.7872, 0.44", "14.3054, 36.4105, 15.3067, 0.58", "14.6659, 36.8345, 15.9947, 0.58", "15.0652, 37.3084, 16.8077, 0.58", "15.4049, 37.6457, 17.3953, 0.58", "15.9667, 38.1688, 18.1503, 0.73", "16.7121, 38.8832, 18.8642, 0.95", "16.9609, 39.1483, 19.0424, 0.95", "17.5639, 39.8292, 19.3672, 0.58", "18.5612, 40.9247, 19.7316, 0.88", "19.1999, 41.5108, 19.8921, 0.58", "20.1251, 42.2214, 20.0904, 0.29", "20.8728, 42.7514, 20.2241, 0.29", "21.1665, 42.9526, 20.2802, 0.58", "21.6786, 43.3138, 20.4181, 0.73", "22.6992, 44.1321, 20.7546, 0.07", "23.4307, 44.774, 21.0498, 0.51", "23.7478, 45.0667, 21.221, 1.17", "24.2242, 45.5456, 21.5595, 1.17", "25.1554, 46.6072, 22.3917, 0.51", "25.7014, 47.3127, 23.0269, 0.73", "26.1189, 47.9535, 23.6581, 0.36", "26.6616, 48.8638, 24.6711, 1.02", "27.1702, 49.7067, 25.7828, 0.36", "27.2382, 49.8138, 25.9562, 0.36", "27.7757, 50.0414, 26.7011, 0.51", "28.2532, 50.031, 27.053, 0.51", "28.5734, 50.0152, 27.2699, 0.51", "29.4136, 50.0144, 27.8309, 0.73", "30.2229, 50.0708, 28.463, 0.44", "31.6838, 50.4017, 29.8451, 1.02", "32.6408, 50.8573, 31.0847, 0.44", "33.4243, 51.4873, 32.4714, 0.73", "33.6599, 51.8065, 33.0598, 0.44", "33.8535, 52.2641, 33.7676, 0.51", "33.9927, 52.7928, 34.4596, 0.8", "34.1754, 53.8345, 35.5102, 0.44", "34.3061, 54.4355, 35.9355, 0.8", "34.5676, 55.5128, 36.4703, 0.58", "34.8438, 56.4368, 36.8257, 0.88", "35.1558, 57.3301, 37.0795, 0.58", "35.4302, 58.0664, 37.2757, 0.8", "35.7351, 58.8968, 37.4831, 0.44", "36.0407, 59.8639, 37.7674, 0.95", "36.1993, 60.5809, 38.0443, 0.58", "36.2768, 61.1601, 38.3068, 0.73", "36.3933, 62.3557, 38.8829, 0.36", "36.4843, 62.942, 39.1771, 0.66", "36.6294, 63.3526, 39.369, 0.66", "37.0423, 64.0225, 39.6951, 0.36", "37.5788, 64.7062, 40.0235, 0.15", "38.1593, 65.3574, 40.322, 0.44", "38.8925, 66.0745, 40.609, 0.22", "39.6591, 66.7965, 40.8822, 0.58", "40.4641, 67.5659, 41.151, 0.22", "40.8561, 67.9556, 41.2737, 0.51", "41.6047, 68.7016, 41.5475, 0.22", "42.3668, 69.5272, 41.8417, 0.51", "42.8703, 70.1152, 42.0516, 0.51", "43.5255, 70.9248, 42.3515, 0.44", "43.9128, 71.4184, 42.5221, 0.73", "44.815, 72.601, 42.923, 0.44", "45.1879, 73.2003, 43.0865, 0.29", "45.4633, 73.8231, 43.2274, 0.29", "45.6122, 74.4502, 43.3246, 0.29", "45.6263, 75.2157, 43.3872, 0.29", "45.5001, 75.906, 43.3906, 0.51", "45.0095, 77.352, 43.3264, 0.15", "44.7815, 77.9125, 43.2925, 0.15", "44.3729, 78.8509, 43.222, 0.15", "44.1633, 79.3326, 43.1993, 0.15", "43.7745, 80.1398, 43.1877, 0.36", "43.3649, 80.9717, 43.2434, 0.07", "43.2131, 81.2853, 43.2968, 0.07", "43.0301, 81.7026, 43.3775, 0.36", "42.7575, 82.6289, 43.6145, 0.07" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "7.29437, 12.9179, -2.14526, 1.02", "8.26991, 12.2916, -2.81636, 1.02", "9.25425, 11.7133, -3.46448, 1.02", "10.1689, 11.2279, -4.03866, 1.02", "11.1347, 10.7417, -4.57312, 1.24", "12.051, 10.2959, -5.00244, 1.31", "13.0795, 9.79516, -5.41723, 1.31", "13.7171, 9.50778, -5.60564, 1.31", "14.9424, 9.00473, -5.82056, 0.8", "16.2821, 8.49719, -5.95708, 1.39", "17.6859, 8.0258, -6.04536, 1.9", "19.2991, 7.58466, -6.18606, 1.61", "21.5256, 7.12554, -6.4911, 1.61", "23.4486, 6.76136, -6.75694, 1.17", "24.2978, 6.63162, -6.88516, 0.88", "25.891, 6.48879, -7.20665, 0.66", "28.1928, 6.47743, -7.83183, 0.8", "29.7394, 6.67353, -8.41713, 1.82" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-16.7843, 2.44665, -1.87735, 0.58", "-17.027, 3.77263, -1.96256, 0.58", "-17.4505, 5.48762, -2.06745, 0.36", "-17.7999, 6.57379, -2.15015, 0.36", "-18.4577, 8.27979, -2.31287, 1.17", "-19.0083, 9.5455, -2.48166, 0.88", "-19.5865, 10.8747, -2.65891, 0.88", "-20.2635, 12.2623, -2.89863, 1.02", "-21.0841, 13.7283, -3.22016, 0.07", "-21.6386, 14.5717, -3.42591, 0.22", "-22.4906, 15.6537, -3.65925, 0.22", "-25.5895, 25.1505, -4.17977, 0.22", "-28.2163, 34.7749, -3.6596, 0.22", "-30.1349, 44.3327, -1.51127, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-16.7843, 2.44665, -1.87735, 0.51", "-18.6993, 1.32267, -2.12627, 0.51", "-19.5005, 0.848108, -2.23198, 0.51", "-20.1479, 0.454034, -2.29656, 0.51", "-20.904, -0.00766096, -2.35947, 0.51", "-21.758, -0.546131, -2.42835, 0.58", "-22.5721, -1.06881, -2.4658, 0.36", "-23.2248, -1.53599, -2.47147, 0.66", "-24.1192, -2.19538, -2.45585, 0.88", "-24.7814, -2.67428, -2.42605, 0.88", "-26.2762, -3.71867, -2.32483, 0.22", "-27.5926, -4.60649, -2.18143, 0.58", "-28.7396, -5.32926, -2.02748, 0.07", "-29.4012, -5.70842, -1.93186, 0.07", "-30.0809, -6.05014, -1.82821, 0.07", "-30.7511, -6.36123, -1.6607, 0.73", "-31.6648, -6.7672, -1.34481, 0.8", "-32.5965, -7.18509, -0.992192, 0.95", "-33.3081, -7.50681, -0.706262, 0.95", "-34.653, -8.1712, -0.158609, 0.66", "-36.6701, -9.2367, 0.595844, 0.22", "-37.7254, -9.82864, 0.978242, 0.22", "-38.5736, -10.3357, 1.29872, 0.95", "-39.0509, -10.6474, 1.49026, 0.95", "-39.6113, -11.0295, 1.70824, 1.17", "-40.9732, -11.9463, 2.17641, 0.44", "-42.0653, -12.6393, 2.45362, 0.44", "-43.3414, -13.4187, 2.75096, 0.58", "-43.8489, -13.7346, 2.8666, 0.73", "-44.5215, -14.1824, 3.00045, 0.95", "-45.0647, -14.5621, 3.08977, 1.02", "-45.9224, -15.2065, 3.18314, 0.8", "-46.6944, -15.7881, 3.19656, 0.66", "-47.5933, -16.4587, 3.16004, 0.36", "-48.405, -17.0656, 3.12808, 0.36", "-48.8849, -17.4536, 3.11241, 0.36", "-49.6616, -18.1282, 3.08357, 0.95", "-50.1695, -18.5708, 3.06218, 1.24", "-50.7703, -19.0733, 3.03048, 1.24", "-51.422, -19.5677, 2.96938, 1.09", "-52.3, -20.1721, 2.83853, 0.66", "-53.0762, -20.6806, 2.6803, 0.36", "-54.1883, -21.4165, 2.3965, 0.66", "-54.8613, -21.9005, 2.19548, 0.66", "-55.7007, -22.576, 1.9079, 0.29", "-56.2064, -23.0223, 1.71371, 0.29", "-56.7481, -23.5253, 1.48767, 0.88", "-57.2649, -24.0295, 1.27647, 1.17", "-58.0865, -24.8309, 0.978299, 0.66", "-59.1175, -25.825, 0.694899, 0.36", "-59.4029, -26.1119, 0.637823, 0.36", "-59.7421, -26.4671, 0.586836, 0.73", "-60.4238, -27.2097, 0.532562, 0.95", "-61.2939, -28.1205, 0.533979, 0.07", "-61.8961, -28.7899, 0.616107, 0.07", "-62.2792, -29.2718, 0.712064, 0.07", "-62.6805, -29.8893, 0.831688, 0.07", "-63.1754, -30.7583, 1.00216, 0.07", "-63.5851, -31.5622, 1.15003, 0.36", "-63.9835, -32.3814, 1.27441, 1.53", "-64.3494, -33.1021, 1.36291, 1.53", "-65.127, -34.4613, 1.48629, 0.8", "-65.8857, -35.6907, 1.51413, 0.51", "-66.4565, -36.5822, 1.47162, 0.66", "-67.0218, -37.4585, 1.39294, 1.24", "-68.1889, -39.2127, 1.1591, 0.51", "-69.2271, -40.6876, 0.898934, 0.15", "-70.1441, -41.8632, 0.673139, 0.95", "-71.1698, -43.0487, 0.423319, 0.73", "-71.9974, -43.8882, 0.244057, 0.73", "-72.76, -44.5509, 0.125069, 0.58", "-73.6886, -45.2146, 0.0396027, 0.22", "-74.9017, -45.9591, 0.0789385, 0.22", "-75.3326, -46.1673, 0.150965, 0.22", "-75.6474, -46.2776, 0.223676, 0.22", "-76.5952, -46.5783, 0.483355, 0.22", "-77.1309, -46.7714, 0.632497, 0.95", "-77.6084, -46.9967, 0.744572, 1.17", "-78.1893, -47.3403, 0.799952, 1.17", "-78.4639, -47.5157, 0.834532, 1.17", "-79.6633, -48.3095, 0.989796, 1.46", "-80.1085, -48.6188, 1.05974, 1.46", "-80.8265, -49.1208, 1.19396, 1.46", "-82.5295, -50.2982, 1.53726, 0.36", "-83.9779, -51.29, 1.78988, 0.36", "-84.5178, -51.652, 1.88268, 0.36", "-85.8104, -52.5178, 2.08275, 0.51", "-86.5128, -52.9973, 2.21732, 1.17", "-86.9811, -53.3273, 2.31618, 1.17", "-89.1655, -54.9603, 2.76285, 0.44", "-90.2473, -55.8299, 2.93293, 0.95", "-91.1872, -56.6346, 3.09814, 0.29", "-92.3848, -57.7343, 3.31058, 0.58", "-92.9504, -58.3048, 3.42177, 1.02", "-93.9444, -59.3762, 3.61478, 0.44", "-94.7193, -60.2796, 3.75479, 0.44", "-95.506, -61.1992, 3.83042, 1.09", "-95.9297, -61.6758, 3.84281, 1.09", "-96.5382, -62.337, 3.80502, 0.88", "-97.4876, -63.323, 3.74689, 0.44", "-98.0402, -63.8749, 3.70441, 0.44", "-98.7489, -64.5885, 3.66413, 0.29", "-99.5893, -65.476, 3.61059, 0.66", "-100.164, -66.1335, 3.588, 0.51", "-101.025, -67.1617, 3.56888, 1.09", "-101.99, -68.3445, 3.55769, 0.36", "-102.826, -69.3423, 3.52679, 0.88", "-103.456, -70.0853, 3.48474, 1.39", "-104.185, -70.9249, 3.40802, 1.09", "-105.134, -71.9859, 3.2003, 0.73", "-105.724, -72.6155, 3.00243, 0.36", "-106.723, -73.6018, 2.57215, 0.58", "-107.361, -74.1899, 2.23787, 0.58", "-108.224, -74.9294, 1.75626, 0.36", "-109.271, -75.8112, 1.14249, 1.39", "-109.862, -76.3485, 0.763143, 1.46", "-110.331, -76.8219, 0.4372, 1.46", "-111.23, -77.8298, -0.220959, 0.73", "-112.259, -79.0935, -0.980221, 0.15", "-112.699, -79.6676, -1.2818, 0.15", "-112.966, -80.0381, -1.43326, 0.15", "-113.332, -80.5877, -1.65077, 0.15", "-113.578, -81.0002, -1.79771, 0.15", "-114.05, -81.9578, -2.08246, 0.15", "-114.343, -82.7383, -2.26629, 1.68", "-114.613, -83.2941, -2.40562, 2.19" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-17.0195, 14.0184, 0.275263, 0.36", "-18.6527, 14.6654, 0.649727, 0.36", "-20.3103, 15.1834, 1.07346, 0.36", "-22.0666, 15.5959, 1.59219, 0.22", "-22.7132, 15.7172, 1.79162, 0.22", "-24.0065, 15.9316, 2.22877, 0.51", "-25.5293, 16.1824, 2.76018, 0.29", "-26.262, 16.2714, 3.03424, 0.29", "-27.3373, 16.4034, 3.43197, 0.73", "-28.1624, 16.5751, 3.75709, 0.95", "-29.1826, 16.9977, 4.12834, 0.95", "-29.7671, 17.4451, 4.33514, 0.95", "-30.4654, 18.2107, 4.55502, 0.66", "-30.8954, 18.8022, 4.68331, 0.95", "-31.6695, 20.0033, 4.87606, 1.02", "-32.5649, 21.4784, 5.08862, 0.44", "-33.4429, 22.9547, 5.29931, 0.88", "-33.8277, 23.5857, 5.39889, 0.88", "-34.5274, 24.7138, 5.61632, 0.66", "-35.5987, 26.3451, 5.97237, 0.15", "-36.315, 27.3287, 6.20661, 0.36", "-37.1227, 28.3413, 6.4594, 0.95", "-37.8863, 29.2131, 6.66409, 1.24", "-38.6576, 30.0185, 6.85756, 1.39", "-39.3993, 30.7372, 7.05751, 1.17", "-40.3057, 31.5779, 7.30263, 1.17", "-41.3312, 32.4836, 7.56538, 1.31", "-42.4252, 33.4124, 7.85879, 1.02", "-43.3974, 34.2001, 8.12461, 0.66", "-44.5194, 35.0652, 8.41526, 0.36", "-45.3407, 35.6996, 8.64579, 0.66", "-46.7833, 36.8403, 9.01009, 0.29", "-48.0538, 37.8742, 9.2831, 0.66", "-49.1551, 38.7972, 9.47313, 0.29", "-49.9186, 39.4703, 9.56759, 0.29", "-51.2399, 40.7165, 9.65186, 0.29", "-52.2556, 41.7777, 9.62259, 1.17", "-52.9001, 42.5335, 9.53366, 1.39", "-53.6297, 43.5162, 9.3497, 1.17", "-54.9753, 45.5358, 8.88257, 0.8", "-55.7589, 46.7423, 8.57082, 0.8", "-56.8257, 48.3254, 8.14237, 0.51", "-57.4246, 49.1987, 7.969, 1.02", "-58.1194, 50.2179, 7.80213, 1.31", "-58.8921, 51.3495, 7.68895, 0.95", "-59.9699, 52.8166, 7.70594, 0.8", "-61.2417, 54.3466, 7.97729, 0.44", "-62.4608, 55.694, 8.42207, 0.44", "-63.2217, 56.4964, 8.75376, 0.44", "-64.1081, 57.4554, 9.23855, 0.66", "-65.1915, 58.7416, 9.94716, 0.36", "-66.1345, 60.0307, 10.6208, 0.36", "-66.7263, 60.9132, 11.043, 1.09", "-67.2574, 61.7042, 11.3633, 0.95", "-68.4628, 63.4724, 11.9976, 0.22", "-69.01, 64.2403, 12.2106, 0.51", "-70.1816, 65.7821, 12.5082, 0.15", "-70.5027, 66.1764, 12.5845, 0.15", "-71.1632, 66.9045, 12.7438, 0.36", "-71.9284, 67.6891, 12.9153, 0.58", "-72.9602, 68.6853, 13.2412, 0.58", "-74.001, 69.8135, 13.8017, 0.29", "-74.7834, 70.918, 14.5112, 0.95", "-74.9845, 71.3266, 14.8096, 1.31", "-75.3626, 72.4791, 15.6998, 1.31", "-75.8317, 74.4976, 17.2926, 1.02", "-76.0875, 75.8238, 18.3265, 0.95", "-76.312, 76.9684, 19.1703, 0.29", "-76.535, 77.8434, 19.7292, 0.29", "-76.7471, 78.5139, 20.0969, 0.29", "-77.1244, 79.4139, 20.5295, 0.29", "-77.7737, 80.6178, 20.9615, 0.58", "-78.3549, 81.5577, 21.2593, 0.73", "-79.0553, 82.6685, 21.5801, 0.95", "-79.6063, 83.628, 21.869, 1.09", "-80.6013, 85.5654, 22.5211, 0.22", "-80.9089, 86.2068, 22.7589, 0.51", "-81.2319, 86.8678, 23.0576, 0.8", "-81.6382, 87.6267, 23.4983, 0.8", "-82.2365, 88.755, 24.2458, 0.15", "-82.4635, 89.2421, 24.5646, 0.15", "-82.7891, 89.9528, 24.9882, 0.15", "-83.3337, 90.9433, 25.594, 0.44", "-83.9888, 91.8567, 26.1563, 1.02", "-84.7371, 92.7494, 26.6698, 1.24", "-85.6961, 93.8056, 27.1941, 0.36", "-86.3228, 94.4766, 27.4847, 0.22", "-86.9176, 95.0787, 27.721, 0.22", "-87.4675, 95.5366, 27.8697, 0.22", "-88.2461, 96.0557, 28.0309, 0.22", "-89.2864, 96.6357, 28.2343, 0.95", "-90.2358, 97.0957, 28.4068, 0.95", "-91.3593, 97.606, 28.5952, 0.95", "-93.1796, 98.3425, 28.8608, 0.58", "-94.3726, 98.7588, 29.0013, 0.58", "-95.2805, 99.0302, 29.0769, 0.58", "-96.4678, 99.3637, 29.1352, 0.29", "-97.253, 99.596, 29.1584, 0.29", "-98.1792, 99.8777, 29.1589, 0.29", "-98.9912, 100.114, 29.1426, 0.8", "-99.7249, 100.286, 29.1519, 0.8", "-100.715, 100.44, 29.1913, 0.8", "-101.93, 100.556, 29.2649, 0.58", "-103.166, 100.574, 29.3547, 0.44", "-104.27, 100.516, 29.4678, 0.8", "-106.158, 100.306, 29.7398, 0.44", "-107.501, 100.079, 30.0034, 1.02", "-108.175, 99.9331, 30.1606, 1.02", "-109.802, 99.5467, 30.5725, 0.36", "-110.827, 99.3311, 30.8391, 0.36", "-111.66, 99.2156, 31.0766, 0.36", "-112.828, 99.1385, 31.4712, 0.73", "-114.088, 99.0971, 31.9898, 0.73", "-115.469, 99.014, 32.6376, 0.44", "-116.419, 98.9462, 33.1633, 0.44", "-117.529, 98.8366, 33.7789, 0.66", "-119.278, 98.7406, 34.7125, 0.36", "-119.778, 98.7467, 34.9864, 1.17", "-121.507, 98.9265, 35.9812, 0.51", "-122.653, 99.2017, 36.62, 0.8", "-124.019, 99.7059, 37.2993, 0.58", "-125.502, 100.431, 37.9073, 0.22", "-126.242, 100.923, 38.1463, 0.95", "-127.116, 101.669, 38.4063, 0.95", "-128.174, 102.804, 38.6696, 0.36", "-128.903, 103.663, 38.8093, 0.36", "-129.264, 104.124, 38.8717, 0.58", "-130.105, 105.249, 38.9206, 0.22", "-130.884, 106.309, 38.866, 0.22", "-131.781, 107.524, 38.7299, 0.88", "-132.545, 108.572, 38.5431, 0.51", "-133.608, 110.074, 38.1804, 0.73", "-134.851, 111.861, 37.6055, 0.22", "-135.656, 113.055, 37.1137, 1.02", "-136.112, 113.732, 36.7861, 1.02", "-136.668, 114.559, 36.3607, 1.02", "-137.185, 115.276, 35.9865, 1.02", "-138.401, 116.673, 35.2703, 0.07", "-139.176, 117.401, 34.926, 0.22", "-139.996, 118.141, 34.5809, 0.8", "-140.827, 118.866, 34.254, 1.46", "-142.002, 119.815, 33.8865, 1.46", "-143.36, 120.753, 33.6214, 0.29", "-144.595, 121.41, 33.5834, 1.46" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-17.0195, 14.0184, 0.275263, 1.39", "-18.3553, 14.3508, -0.0802204, 1.39", "-19.7, 14.6853, -0.438059, 1.39", "-21.287, 15.0802, -0.860404, 1.61" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.960906, 43.5926, 0.0, 0.15", "-1.35661, 58.5873, 0.0, 0.15", "-1.75231, 73.5821, 0.0, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-10.3284, -29.0954, 0.730123, 0.29", "-10.9871, -30.49, 1.51696, 0.29", "-11.606, -31.7745, 2.30253, 0.07", "-12.1311, -32.7715, 3.03369, 0.95", "-12.4565, -33.3357, 3.49259, 0.95", "-12.901, -34.0675, 4.12817, 0.95", "-13.5558, -35.162, 5.12571, 0.51", "-13.8937, -35.7682, 5.72079, 0.73", "-14.4018, -36.8594, 6.92514, 0.44", "-14.5074, -37.1594, 7.23702, 0.44", "-14.5426, -37.3411, 7.40782, 0.44", "-14.5939, -37.9144, 7.85872, 0.29", "-14.5809, -38.8975, 8.45316, 0.88", "-14.5538, -39.6495, 8.8389, 1.02", "-14.4685, -40.8835, 9.47073, 0.22", "-14.4223, -41.6041, 9.86378, 0.22", "-14.3614, -42.7093, 10.3917, 1.02", "-14.2546, -44.4897, 11.117, 0.51", "-14.1999, -45.1948, 11.3465, 0.8", "-14.0421, -47.0213, 11.8087, 0.58", "-13.9371, -48.369, 12.032, 0.8", "-13.8025, -50.5061, 12.1198, 0.58", "-13.7618, -51.7515, 12.02, 1.09", "-13.7744, -53.1381, 11.7724, 0.88", "-13.8142, -54.4023, 11.4878, 0.8", "-13.8853, -55.6365, 11.1555, 1.02", "-13.9508, -56.835, 10.8478, 1.24", "-14.0229, -58.0152, 10.6141, 0.58", "-14.1414, -59.9886, 10.2653, 0.22", "-14.179, -60.8764, 10.1318, 1.02", "-14.2042, -61.9778, 9.99686, 1.17", "-14.2341, -63.5045, 9.86507, 0.36", "-14.2774, -64.7246, 9.80832, 0.15", "-14.3589, -65.936, 9.75672, 0.29", "-14.4738, -67.0629, 9.70573, 0.66", "-14.6665, -68.8339, 9.6141, 0.29", "-14.854, -70.3277, 9.46442, 0.29", "-15.0158, -71.4723, 9.28825, 1.24", "-15.2494, -73.1259, 8.95686, 0.29", "-15.4028, -74.1333, 8.70744, 0.07", "-15.5932, -75.2702, 8.39436, 1.09", "-15.9188, -77.0853, 7.82838, 0.51", "-16.1155, -78.2194, 7.46051, 1.09", "-16.3116, -79.4351, 7.04285, 0.88", "-16.4781, -80.8492, 6.54364, 0.51", "-16.5545, -82.3872, 5.96979, 0.22", "-16.4781, -84.0298, 5.29837, 0.66", "-16.288, -85.1614, 4.8143, 1.09", "-16.0324, -85.9925, 4.40851, 1.09", "-15.305, -87.5981, 3.51618, 0.73", "-14.5242, -88.8504, 2.70915, 0.36", "-13.6309, -89.9538, 1.87934, 1.02", "-13.42, -90.1645, 1.70429, 1.02", "-12.5994, -90.8498, 1.09324, 0.22", "-12.1187, -91.2015, 0.767833, 0.73", "-11.3926, -91.6695, 0.315787, 1.09", "-11.0787, -91.8792, 0.145358, 1.39", "-10.578, -92.2546, -0.074769, 1.17", "-9.10357, -93.5066, -0.708281, 0.44", "-8.4286, -94.1561, -0.944427, 0.73", "-7.45718, -95.2229, -1.23773, 0.22", "-6.08896, -96.9204, -1.59825, 2.19", "-4.83076, -98.7509, -1.96265, 0.36", "-4.02015, -100.148, -2.21463, 0.15", "-3.07068, -102.192, -2.53101, 1.61", "-2.41248, -103.985, -2.76688, 0.15", "-2.20035, -104.793, -2.86894, 0.29", "-1.93022, -106.359, -3.07522, 0.07", "-1.85316, -107.005, -3.17388, 0.07", "-1.76942, -107.864, -3.30392, 1.02", "-1.68845, -108.864, -3.48852, 0.51", "-1.54119, -109.97, -3.65714, 0.07", "-1.35269, -110.868, -3.78023, 0.07", "-0.964793, -112.199, -3.92182, 1.75", "-0.64642, -113.114, -4.02353, 1.97", "-0.406365, -113.697, -4.06523, 1.97", "0.561404, -115.74, -4.15671, 0.07", "1.1536, -116.865, -4.18345, 1.9", "2.16662, -118.616, -4.13377, 0.07", "2.84603, -119.699, -4.03365, 1.02", "3.82021, -121.125, -3.807, 0.15", "4.22815, -121.702, -3.67715, 0.07", "5.07403, -122.871, -3.26773, 1.61", "5.83338, -123.974, -2.7622, 1.09", "6.45064, -124.923, -2.15062, 0.29", "6.73914, -125.485, -1.67011, 0.29", "6.86248, -125.902, -1.25169, 0.29", "6.94541, -126.752, -0.258672, 0.29", "6.91721, -127.038, 0.107547, 0.95", "6.68886, -128.02, 1.3295, 0.22", "6.45694, -128.683, 2.10468, 0.22", "6.24384, -129.31, 2.77044, 0.44", "5.91497, -130.338, 3.71297, 0.44", "5.73389, -130.944, 4.17109, 1.02", "5.36215, -132.404, 5.12751, 0.51", "5.1461, -133.528, 5.75737, 0.22", "5.0257, -134.802, 6.39253, 0.66", "5.08226, -135.836, 6.88647, 0.15", "5.21121, -136.404, 7.12082, 0.58", "5.72123, -137.552, 7.51062, 0.22", "6.24282, -138.335, 7.69999, 0.51", "7.21577, -139.505, 7.91372, 0.22", "8.39661, -140.798, 8.10169, 0.95", "9.24994, -141.671, 8.21866, 0.07", "10.0216, -142.444, 8.29411, 0.29", "10.6662, -143.084, 8.3567, 0.07", "11.0731, -143.512, 8.40898, 0.36", "11.7992, -144.354, 8.54339, 0.15", "12.5609, -145.354, 8.69571, 0.15", "13.2299, -146.295, 8.87338, 0.44", "13.9312, -147.326, 9.06652, 0.15", "14.3535, -147.933, 9.16198, 0.15", "14.792, -148.54, 9.23169, 0.8", "15.332, -149.257, 9.26965, 0.44", "16.1705, -150.394, 9.28663, 0.07", "16.6609, -151.105, 9.29691, 0.07", "17.045, -151.669, 9.27618, 0.07", "17.4913, -152.32, 9.26126, 0.07", "17.7116, -152.644, 9.25813, 0.29", "18.1703, -153.311, 9.25377, 0.07", "19.1453, -154.658, 9.19116, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-10.3284, -29.0954, 0.730123, 0.29", "-11.2529, -30.12, 0.160686, 0.29", "-12.231, -31.0292, -0.286346, 0.36", "-12.7615, -31.4737, -0.472101, 0.44", "-13.9026, -32.3602, -0.866411, 0.66", "-15.2039, -33.3662, -1.3038, 0.07", "-15.9716, -33.9716, -1.5473, 0.58", "-16.5667, -34.3932, -1.68624, 0.58", "-17.315, -34.9309, -1.80428, 0.22", "-18.3573, -35.797, -1.93353, 1.24", "-18.89, -36.3529, -1.97754, 1.53", "-19.4305, -37.1855, -2.0387, 1.31", "-19.6956, -37.803, -2.07182, 0.95", "-20.0296, -39.0098, -2.1079, 0.95", "-20.2085, -40.0687, -2.11615, 0.29", "-20.2773, -41.0226, -2.10526, 0.29", "-20.2946, -42.7958, -2.09967, 0.15", "-20.2409, -44.1946, -2.11843, 0.58", "-20.1338, -45.9257, -2.16034, 0.22", "-20.0458, -47.3244, -2.20391, 1.68", "-20.0087, -48.6321, -2.27216, 0.66", "-20.0235, -49.4485, -2.32767, 0.29", "-20.1188, -50.548, -2.41671, 0.58", "-20.2298, -51.2142, -2.47254, 0.95", "-20.5259, -52.333, -2.55844, 1.61", "-21.2444, -54.2739, -2.67684, 0.07", "-21.5243, -54.868, -2.7012, 0.95", "-21.8907, -55.5054, -2.71089, 0.95", "-23.0207, -57.0602, -2.67268, 0.07", "-23.9378, -58.0757, -2.61032, 0.07", "-24.5593, -58.6171, -2.54777, 0.88", "-25.0704, -58.9511, -2.4794, 1.09", "-26.1625, -59.5633, -2.3335, 0.58", "-27.4114, -60.1766, -2.16682, 0.07", "-28.4872, -60.5968, -2.02343, 1.31", "-28.9062, -60.7437, -1.96762, 1.31", "-30.7396, -61.3785, -1.72341, 0.51", "-31.3005, -61.5831, -1.64868, 0.88" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "6.33544, 23.3307, -1.21284, 0.15", "6.44702, 23.3295, -1.01635, 0.15", "7.22018, 23.3508, 0.145669, 0.15", "7.90824, 23.4056, 1.11455, 0.29", "9.23283, 23.5795, 2.88396, 0.51", "10.0998, 23.7415, 4.03944, 0.51", "11.3061, 24.022, 5.69937, 0.66", "11.7059, 24.1423, 6.25233, 0.29", "12.0004, 24.2646, 6.68022, 0.58", "12.762, 24.7229, 7.96794, 0.22", "13.128, 25.0819, 8.86356, 0.07", "13.3059, 25.4063, 9.59816, 0.07", "13.4125, 25.792, 10.3563, 0.36", "13.5998, 26.2499, 11.3677, 0.36", "13.7626, 26.4268, 11.7679, 0.36", "14.1351, 26.6298, 12.1889, 0.73", "14.554, 26.8279, 12.5973, 0.73", "15.1877, 27.1826, 13.3195, 0.22", "15.8883, 27.7183, 14.3073, 0.22", "16.2596, 28.2434, 15.1071, 0.88", "16.5829, 29.2279, 16.4479, 0.58", "16.7052, 29.8936, 17.2888, 0.36", "16.8266, 30.7394, 18.2526, 0.88", "16.9131, 31.4734, 18.9907, 0.15", "17.1191, 32.6651, 20.0092, 0.44", "17.359, 33.5244, 20.6509, 0.22", "17.9462, 34.8562, 21.4024, 0.22", "18.4285, 35.6974, 21.8004, 0.73", "18.7944, 36.2421, 22.0369, 1.02", "19.641, 37.3693, 22.5861, 0.88", "20.1472, 38.0151, 22.9471, 0.88", "20.7073, 38.7866, 23.45, 0.22", "20.9632, 39.2293, 23.9025, 0.22", "21.1015, 39.5119, 24.5934, 0.58", "21.3394, 39.8845, 25.9148, 0.58", "21.4915, 40.0721, 26.7331, 0.58", "21.6398, 40.2478, 27.3162, 0.58", "21.9559, 40.5701, 28.1053, 0.58", "22.4261, 41.0886, 28.9706, 0.58", "23.2135, 42.0522, 30.2657, 0.58", "23.5431, 42.4897, 30.7874, 0.8", "24.1527, 43.3026, 31.7775, 0.51", "24.6562, 44.0643, 32.6518, 0.51", "24.8452, 44.4125, 33.0522, 0.51", "25.1621, 45.04, 33.9592, 0.51", "25.3004, 45.1982, 34.4959, 0.51", "25.4914, 45.3631, 35.4827, 0.51", "25.729, 45.6116, 36.8651, 0.51", "25.8159, 45.9045, 37.5911, 0.51", "25.933, 46.5612, 38.5065, 0.51", "26.1316, 47.7415, 39.5046, 0.51", "26.2527, 48.5333, 40.1318, 0.51", "26.3458, 49.3112, 40.8316, 0.51", "26.3957, 49.8085, 41.3289, 0.51", "26.4379, 50.3867, 41.8994, 0.51", "26.5394, 51.2774, 42.7682, 0.73", "26.8005, 52.2275, 43.6903, 0.29", "27.3745, 53.4817, 44.948, 0.29", "27.5828, 53.8607, 45.3573, 0.29", "27.756, 54.1848, 45.6907, 0.29", "28.022, 54.7054, 46.1641, 0.29", "28.5527, 55.6944, 46.8273, 0.29", "28.8397, 56.1536, 47.0623, 0.29", "29.4243, 57.0265, 47.4279, 0.29", "29.9264, 57.7194, 47.7084, 0.44", "30.4855, 58.4608, 48.0068, 0.44", "31.2235, 59.4452, 48.3816, 0.22", "32.141, 60.6077, 48.8417, 0.22", "32.7795, 61.3161, 49.1049, 0.22", "33.5837, 62.0916, 49.349, 0.07", "34.0949, 62.5324, 49.4741, 0.07", "34.841, 63.1723, 49.595, 0.07" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "6.33544, 23.3307, -1.21284, 0.51", "7.07085, 24.6023, -1.43375, 0.51", "7.79704, 25.7395, -1.3983, 0.73", "8.33913, 26.5919, -1.24738, 0.73", "8.80575, 27.33, -1.07974, 0.73", "9.65166, 28.5927, -0.789295, 0.44", "10.6385, 29.9577, -0.491753, 0.66", "11.5225, 31.0225, -0.285885, 0.44", "12.5104, 32.1557, -0.071322, 0.95", "12.8896, 32.5965, -0.00252247, 0.95", "13.9551, 33.8499, 0.0572691, 0.73", "14.6908, 34.6975, -0.0390583, 1.02", "15.8647, 35.9145, -0.324942, 0.66", "16.3884, 36.3904, -0.556222, 0.07", "16.7243, 36.6641, -0.742536, 0.07", "17.4002, 37.1574, -1.15036, 0.51", "17.878, 37.4224, -1.44054, 0.15", "18.668, 37.7219, -1.87016, 0.15", "20.1371, 38.031, -2.54668, 0.73", "21.0739, 38.1005, -2.87509, 1.31", "22.4211, 38.0924, -3.15946, 0.07", "23.6624, 38.0479, -3.28873, 0.95", "24.3145, 38.0352, -3.30297, 0.95", "24.9867, 38.0339, -3.27178, 0.95", "26.8202, 38.0751, -3.01729, 0.07", "28.1034, 38.1314, -2.82613, 0.95", "28.9284, 38.2131, -2.76595, 0.95", "29.6152, 38.3154, -2.7973, 0.95", "30.5063, 38.491, -3.05081, 0.66", "31.5676, 38.7547, -3.6283, 0.29", "32.5546, 39.0146, -4.38949, 0.07", "34.007, 39.3751, -5.70212, 1.24", "34.6939, 39.5223, -6.35685, 1.24", "36.4501, 39.8429, -8.0597, 0.15", "37.1138, 39.957, -8.70214, 0.15", "37.7044, 40.056, -9.25056, 0.95", "38.2066, 40.1401, -9.68014, 1.17", "38.8938, 40.2158, -10.2274, 0.88", "39.5061, 40.1828, -10.8433, 0.88", "39.9877, 40.0859, -11.398, 0.22", "40.4214, 39.9554, -12.0131, 0.22", "40.9914, 39.7745, -12.8868, 1.02", "42.0344, 39.4896, -14.5809, 1.61", "43.535, 39.1735, -17.124, 0.07", "44.2239, 39.1182, -18.2765, 1.39", "45.1747, 39.1899, -19.7303, 1.46", "46.0673, 39.4318, -20.8882, 0.73", "46.9419, 39.8365, -21.7008, 0.29", "47.4826, 40.1766, -21.9874, 0.29", "48.8429, 41.2098, -22.3005, 1.17", "49.9864, 42.1183, -22.3993, 0.44", "50.897, 42.8568, -22.3964, 0.88", "52.2479, 43.959, -22.3638, 0.07", "53.2796, 44.7879, -22.3526, 1.24", "54.9203, 46.1838, -22.4404, 0.07", "55.8433, 47.0501, -22.5475, 0.66", "56.3526, 47.6199, -22.662, 0.07", "56.8857, 48.3968, -22.8955, 0.07", "57.6343, 49.8611, -23.4606, 1.17", "58.0563, 51.2118, -23.9543, 0.07", "58.1532, 51.8823, -24.2189, 0.07", "58.1967, 52.743, -24.548, 0.88", "58.159, 54.5807, -25.204, 0.07", "58.1036, 55.28, -25.4312, 0.66", "57.8204, 57.1339, -26.0921, 0.15", "57.4172, 59.105, -26.8346, 0.15", "57.2221, 59.7715, -27.092, 0.36", "56.9549, 60.497, -27.3595, 0.07", "56.8385, 60.7703, -27.4559, 0.07", "56.1331, 62.5176, -28.0052, 0.07", "55.8802, 63.2704, -28.1954, 0.29", "55.449, 65.3428, -28.3286, 0.07", "55.4069, 66.2816, -28.4365, 0.07", "55.4853, 67.1258, -28.5539, 0.07", "55.7584, 68.4969, -28.744, 0.29", "56.0602, 69.4093, -28.8625, 0.07", "56.6794, 70.7894, -29.1555, 0.07", "58.3184, 73.6148, -30.0227, 0.07", "58.7711, 74.2826, -30.2786, 0.07", "59.461, 75.1563, -30.686, 0.36", "60.4738, 76.122, -31.3551, 0.07", "61.1531, 76.7016, -31.8181, 0.07", "62.1006, 77.3684, -32.4664, 0.29", "63.1129, 77.8599, -32.9933, 0.07", "63.9203, 78.1592, -33.4436, 0.36", "65.9536, 78.617, -34.6641, 0.15", "73.3741, 83.918, -38.5554, 0.15", "80.3608, 88.9795, -43.4592, 0.15", "87.1569, 94.5355, -48.0576, 0.15", "92.7855, 100.937, -53.064, 0.15", "96.2941, 108.116, -58.846, 0.15", "99.3497, 114.819, -65.4345, 0.15" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "29.7394, 6.67353, -8.41713, 0.8", "31.158, 5.55435, -9.24659, 0.8", "31.7107, 5.13491, -9.53311, 0.44", "32.6079, 4.47571, -10.0063, 1.09", "33.178, 4.05836, -10.2622, 1.39", "34.0166, 3.46803, -10.6164, 1.39", "34.7681, 2.939, -10.9338, 1.39", "35.5857, 2.35306, -11.2419, 1.39", "36.5685, 1.6731, -11.5944, 1.39", "37.9649, 0.75591, -12.0835, 1.39", "39.2768, -0.0687232, -12.4896, 1.75" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "29.7394, 6.67353, -8.41713, 0.66", "29.7292, 7.52852, -8.55728, 0.66", "29.7534, 8.46251, -8.57557, 0.58", "29.7724, 8.90495, -8.54032, 0.8", "29.8095, 9.51235, -8.46048, 0.44", "29.8559, 10.0636, -8.36893, 0.44", "29.944, 10.7953, -8.24048, 1.02", "30.1194, 11.7318, -8.01512, 0.66", "30.2667, 12.2962, -7.86586, 0.66", "30.4367, 12.8631, -7.74297, 0.66", "30.6613, 13.5622, -7.6581, 0.22", "30.8561, 14.1525, -7.64849, 0.66", "30.9632, 14.5026, -7.68763, 0.88", "31.1528, 15.3053, -7.91478, 0.36", "31.2968, 16.1198, -8.21762, 0.22", "31.4265, 17.1311, -8.66575, 1.02", "31.463, 17.5558, -8.87502, 1.53", "31.4978, 18.4235, -9.32898, 1.53", "31.5086, 19.5427, -9.93105, 0.44", "31.4995, 20.0789, -10.2238, 0.8", "31.4977, 20.8119, -10.6319, 0.44", "31.5165, 21.429, -10.9566, 0.66", "31.5635, 22.0604, -11.2577, 1.75", "31.6081, 22.404, -11.3951, 1.75", "31.7811, 23.4447, -11.6795, 1.09", "31.9521, 24.4805, -11.9285, 0.44", "32.038, 25.0758, -12.056, 0.44", "32.1092, 25.5917, -12.1535, 0.73", "32.2049, 26.274, -12.2722, 1.68", "32.4005, 27.7282, -12.5109, 0.07", "32.5192, 28.7296, -12.6719, 1.09", "32.5988, 29.5873, -12.8057, 0.07", "32.6426, 30.2203, -12.9208, 0.07", "32.6832, 31.0257, -13.0761, 1.31", "32.695, 31.3756, -13.146, 1.31", "32.7425, 32.6458, -13.398, 0.15", "32.7965, 33.2793, -13.5052, 0.15", "32.9407, 34.3715, -13.6797, 1.17", "33.1309, 35.4662, -13.8653, 0.07", "33.3584, 36.4189, -14.0398, 1.9", "33.4753, 36.7391, -14.096, 2.04", "34.0805, 37.7798, -14.2399, 0.29", "34.3256, 38.0888, -14.276, 0.95", "34.6026, 38.3767, -14.2929, 0.95", "35.1707, 38.9212, -14.2935, 0.22", "36.0911, 39.8365, -14.2759, 1.24", "36.8653, 40.7179, -14.2629, 0.07", "37.2567, 41.2482, -14.2621, 0.07", "37.678, 41.9349, -14.277, 0.95", "38.0272, 42.6221, -14.3166, 0.22", "38.3276, 43.3397, -14.3887, 0.22", "38.5395, 43.9091, -14.5075, 1.17", "38.71, 44.3651, -14.6351, 1.17", "39.0785, 45.1594, -14.9109, 0.07", "39.385, 45.6531, -15.1379, 1.09", "39.5545, 45.8526, -15.2325, 1.09", "40.3848, 46.6045, -15.5588, 0.22", "40.3848, 46.6045, -15.5588, 0.44", "40.7845, 46.8753, -15.6597, 0.15", "41.3839, 47.2281, -15.8292, 0.15", "42.3358, 47.7277, -16.1518, 0.44", "42.6555, 47.8873, -16.2648, 0.44", "43.0926, 48.0895, -16.4244, 0.07", "43.8717, 48.4201, -16.7273, 1.82", "45.0548, 48.8636, -17.2436, 0.07", "46.0455, 49.1657, -17.7254, 0.07", "46.4188, 49.2723, -17.9341, 1.61", "46.7326, 49.3483, -18.1116, 1.61", "47.5368, 49.4987, -18.5669, 0.22", "48.1606, 49.5798, -18.904, 0.22", "48.783, 49.6289, -19.2172, 1.02" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-114.613, -83.2941, -2.40562, 0.15", "-115.121, -84.6405, -2.21771, 0.15", "-115.447, -85.5882, -2.09527, 0.36", "-115.674, -86.3694, -2.00828, 0.15", "-116.011, -87.5338, -1.9, 0.15", "-116.28, -88.4157, -1.7961, 0.15", "-116.472, -89.0716, -1.70974, 0.73", "-116.637, -89.738, -1.62602, 0.73", "-116.928, -91.0494, -1.43497, 0.07", "-117.099, -91.8836, -1.30626, 0.66", "-117.374, -93.3129, -1.09647, 0.07", "-117.496, -93.9058, -1.01469, 0.07", "-117.6, -94.3866, -0.956657, 0.07", "-117.673, -94.7236, -0.922075, 0.44", "-117.812, -95.5285, -0.855849, 0.95", "-117.917, -96.6484, -0.795075, 0.51", "-117.924, -97.4155, -0.78499, 0.22", "-117.914, -97.8267, -0.777199, 0.22", "-117.86, -98.6497, -0.755803, 0.88", "-117.772, -99.3164, -0.730973, 0.88", "-117.693, -99.7387, -0.704773, 0.88", "-117.491, -100.652, -0.631951, 0.15", "-117.393, -101.116, -0.592447, 0.15", "-117.3, -101.811, -0.508316, 0.15", "-117.272, -102.415, -0.391286, 0.15", "-117.297, -103.559, -0.120737, 0.95", "-117.324, -104.155, 0.0364852, 1.17", "-117.378, -105.15, 0.319551, 0.58", "-117.417, -106.615, 0.758411, 0.22", "-117.409, -107.791, 1.15667, 0.22", "-117.408, -108.362, 1.35712, 0.51", "-117.412, -109.26, 1.66986, 0.22", "-117.422, -109.856, 1.86664, 0.73", "-117.43, -110.454, 2.04428, 0.73", "-117.392, -111.42, 2.2617, 0.36", "-117.302, -112.504, 2.44572, 0.66", "-117.22, -113.181, 2.55704, 0.22", "-117.146, -113.661, 2.63978, 0.07", "-117.075, -114.007, 2.71657, 0.36", "-116.869, -114.811, 2.9108, 0.07", "-116.663, -115.498, 3.07252, 0.36", "-116.355, -116.357, 3.30113, 0.15", "-116.122, -116.97, 3.47801, 0.44", "-115.648, -118.204, 3.85678, 0.22", "-115.237, -119.342, 4.22376, 0.22", "-114.884, -120.456, 4.6054, 0.88" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-114.613, -83.2941, -2.40562, 0.07", "-115.836, -84.5163, -3.34906, 0.07", "-116.445, -85.113, -3.86367, 0.73", "-117.145, -85.8098, -4.45908, 0.07", "-117.73, -86.4221, -4.95292, 0.95", "-117.992, -86.7149, -5.16093, 0.95", "-119.235, -88.131, -6.06682, 0.07", "-119.58, -88.5394, -6.31235, 0.07", "-120.105, -89.1321, -6.62996, 0.8", "-120.574, -89.6498, -6.84873, 1.02", "-121.68, -90.8163, -7.22746, 0.29", "-122.372, -91.5022, -7.4066, 0.29", "-122.995, -92.0646, -7.51115, 0.36", "-123.56, -92.5524, -7.60107, 1.09", "-125.252, -93.8961, -7.85664, 0.07", "-125.86, -94.331, -7.944, 0.07", "-126.592, -94.815, -8.04535, 0.66", "-127.971, -95.7047, -8.23283, 0.29", "-128.865, -96.2689, -8.3643, 1.46", "-129.591, -96.7079, -8.48478, 0.88", "-130.714, -97.3492, -8.69136, 0.15", "-131.419, -97.7411, -8.83358, 0.15", "-132.15, -98.1181, -8.99943, 0.51", "-133.41, -98.7278, -9.3654, 0.15", "-133.974, -98.983, -9.55591, 0.44", "-134.498, -99.1971, -9.74564, 0.44", "-135.42, -99.4944, -10.0876, 0.07", "-136.616, -99.7677, -10.5191, 0.07", "-137.548, -99.8907, -10.8865, 0.8", "-138.454, -99.9467, -11.254, 0.29", "-139.674, -99.9607, -11.7236, 0.07", "-140.563, -99.9337, -12.0614, 0.95", "-141.227, -99.9047, -12.297, 1.31", "-142.908, -99.8177, -12.8328, 0.07", "-143.718, -99.7817, -13.0834, 1.09", "-145.794, -99.7117, -13.7286, 0.07", "-146.86, -99.6947, -14.0549, 0.95", "-148.507, -99.6807, -14.5325, 0.07", "-149.667, -99.6537, -14.8381, 0.07", "-150.992, -99.6215, -15.137, 0.88", "-152.783, -99.5939, -15.4991, 0.07", "-153.382, -99.5929, -15.6032, 0.36", "-154.375, -99.6133, -15.7387, 0.07", "-155.326, -99.6627, -15.8394, 1.17", "-156.141, -99.7647, -15.8959, 1.53", "-157.514, -100.08, -15.981, 0.07", "-158.235, -100.323, -16.0796, 0.29", "-158.736, -100.513, -16.2046, 0.07", "-159.358, -100.761, -16.421, 0.07", "-160.133, -101.055, -16.7557, 0.36", "-161.503, -101.552, -17.4519, 0.07", "-162.382, -101.861, -17.995, 0.07", "-163.38, -102.193, -18.6663, 0.58", "-163.876, -102.326, -19.0208, 0.58", "-164.351, -102.411, -19.3848, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-144.595, 121.41, 33.5834, 0.51", "-144.92, 122.738, 33.159, 0.51", "-145.173, 123.933, 32.7812, 0.51", "-145.466, 125.488, 32.3381, 0.51", "-145.645, 126.422, 32.0958, 0.51", "-145.82, 127.329, 31.8613, 0.73", "-146.051, 128.433, 31.5822, 0.44", "-146.385, 129.832, 31.2615, 0.15", "-146.683, 131.106, 31.038, 0.36", "-146.881, 131.914, 30.8805, 0.07", "-147.154, 133.008, 30.6321, 0.58", "-147.365, 133.764, 30.4449, 0.36", "-147.655, 134.675, 30.1972, 1.24", "-148.151, 136.185, 29.7864, 0.29", "-148.558, 137.464, 29.4219, 0.29", "-148.763, 138.078, 29.2269, 0.73", "-149.028, 138.805, 28.985, 0.73", "-149.496, 139.983, 28.579, 0.07", "-149.885, 140.854, 28.2846, 0.07", "-150.311, 141.729, 28.0356, 0.58", "-151.087, 143.242, 27.7276, 0.29", "-151.265, 143.6, 27.6682, 0.29", "-151.82, 144.686, 27.5033, 1.53", "-152.238, 145.471, 27.4092, 1.53", "-153.18, 147.204, 27.2386, 0.51", "-153.784, 148.361, 27.1716, 0.29", "-154.421, 149.79, 27.1955, 0.29" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-144.595, 121.41, 33.5834, 0.36", "-146.097, 121.338, 33.1137, 0.36", "-146.941, 121.347, 32.8464, 0.58", "-147.502, 121.376, 32.6743, 0.29", "-148.026, 121.453, 32.5275, 0.58", "-148.884, 121.64, 32.3046, 0.29", "-149.586, 121.819, 32.1395, 0.88", "-150.387, 122.064, 31.9813, 1.17", "-150.794, 122.193, 31.9094, 1.17", "-152.003, 122.538, 31.7562, 0.15", "-152.427, 122.638, 31.7244, 0.15", "-153.159, 122.787, 31.7191, 0.15", "-153.93, 122.919, 31.736, 0.15", "-154.384, 122.982, 31.7488, 0.44", "-156.073, 123.178, 31.8028, 0.22", "-156.752, 123.25, 31.8262, 0.22", "-157.477, 123.351, 31.8516, 1.75", "-158.013, 123.458, 31.8704, 1.97", "-159.658, 123.867, 31.8974, 0.51", "-160.138, 123.986, 31.8881, 0.51", "-160.712, 124.1, 31.8562, 0.8", "-161.375, 124.196, 31.802, 0.07", "-162.073, 124.26, 31.7306, 0.22", "-162.79, 124.31, 31.6532, 0.07", "-164.133, 124.409, 31.5738, 0.88", "-165.274, 124.467, 31.6222, 0.07", "-166.087, 124.489, 31.7538, 0.36", "-166.883, 124.497, 31.9539, 0.07", "-167.408, 124.493, 32.1237, 0.07", "-168.846, 124.462, 32.6975, 1.46", "-170.24, 124.394, 33.3759, 0.07", "-171.372, 124.269, 33.9714, 0.58", "-172.37, 123.984, 34.478, 0.07", "-172.704, 123.826, 34.6314, 0.07", "-173.033, 123.603, 34.7551, 0.07", "-173.833, 122.942, 34.9523, 0.07", "-174.539, 122.356, 35.0554, 0.8", "-176.294, 120.929, 35.2295, 0.07", "-176.861, 120.458, 35.2832, 0.07", "-177.667, 119.812, 35.3486, 0.07", "-178.879, 118.886, 35.4179, 0.07", "-179.906, 118.129, 35.4267, 0.36", "-180.312, 117.871, 35.4315, 0.36" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-21.287, 15.0802, -0.860404, 1.02", "-21.8441, 16.4444, -0.901216, 1.02", "-22.235, 17.5426, -0.894125, 1.02", "-22.8596, 19.3925, -0.851789, 1.24", "-23.2521, 20.6795, -0.779417, 0.8", "-23.5791, 21.8687, -0.694231, 0.58", "-23.9133, 23.2328, -0.546384, 0.07", "-24.1627, 24.4825, -0.362265, 0.07", "-24.3231, 25.3853, -0.188438, 0.51", "-24.5305, 26.4136, 0.0197073, 0.8", "-25.1077, 28.6946, 0.492594, 0.15", "-25.4923, 29.9556, 0.760114, 1.09", "-25.86, 30.9731, 0.958885, 1.39", "-26.2609, 32.0169, 1.15616, 1.17", "-26.9869, 33.981, 1.48844, 0.36", "-27.4407, 35.2277, 1.67021, 0.36", "-27.8545, 36.4716, 1.83208, 0.36", "-28.2977, 38.0482, 1.98443, 0.95", "-28.5278, 39.1773, 2.08201, 0.58", "-28.7053, 40.3544, 2.21707, 0.29", "-28.8894, 41.5637, 2.37649, 1.17", "-29.1499, 42.8622, 2.52619, 1.39", "-29.4684, 43.9883, 2.64376, 0.95", "-30.0248, 45.4747, 2.80049, 0.29", "-30.8145, 47.1579, 2.95554, 0.07", "-31.7469, 48.8984, 3.08275, 0.58", "-32.3197, 49.8612, 3.13047, 0.58", "-32.8762, 50.751, 3.15913, 0.95", "-33.3939, 51.5946, 3.16654, 1.61", "-34.4398, 53.4106, 3.12849, 0.88", "-35.0732, 54.6763, 3.05781, 0.44", "-35.5779, 55.8086, 3.05242, 0.73", "-35.9515, 56.6439, 3.09127, 0.29", "-36.4897, 57.7915, 3.15808, 0.15", "-36.9098, 58.6272, 3.2006, 0.66", "-37.3787, 59.5136, 3.23931, 0.95", "-38.0988, 60.8352, 3.28384, 1.17", "-39.419, 63.1085, 3.33743, 0.29", "-39.9954, 63.9749, 3.34808, 0.66", "-40.9537, 65.2687, 3.34577, 0.29", "-41.5877, 66.0709, 3.32945, 0.29", "-42.1267, 66.7023, 3.29989, 0.8", "-42.7643, 67.3799, 3.24053, 1.02", "-43.923, 68.4515, 3.171, 0.29", "-44.605, 69.0247, 3.15568, 0.29", "-45.0344, 69.3486, 3.15678, 0.88", "-45.5915, 69.7344, 3.15898, 1.17", "-46.5085, 70.3299, 3.16352, 1.17", "-47.8452, 71.1848, 3.17043, 0.07", "-48.6283, 71.7006, 3.17413, 0.44", "-49.1385, 72.035, 3.15777, 0.44", "-49.9459, 72.5819, 3.10983, 0.36", "-50.9266, 73.2788, 3.08059, 0.58", "-52.2682, 74.2928, 3.07388, 0.22", "-53.1182, 74.9852, 3.12339, 0.44", "-54.2437, 75.9688, 3.24452, 0.22", "-54.8394, 76.5047, 3.32092, 0.29", "-56.1547, 77.7385, 3.53362, 2.04", "-56.8313, 78.4046, 3.67906, 2.04", "-58.1746, 79.7547, 4.07939, 1.53", "-58.8768, 80.4501, 4.35451, 1.24" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-21.287, 15.0802, -0.860404, 0.44", "-22.6905, 14.5853, -1.0516, 0.44", "-23.2679, 14.4479, -1.1174, 0.66", "-23.8911, 14.3739, -1.20763, 0.29", "-24.4575, 14.3479, -1.30735, 0.58", "-25.1804, 14.3407, -1.44246, 0.58", "-26.0697, 14.3318, -1.60866, 0.36", "-27.1298, 14.4003, -1.79051, 0.66", "-28.617, 14.556, -2.08362, 0.8", "-29.6301, 14.6893, -2.31272, 0.8", "-29.8482, 14.7268, -2.36842, 0.8" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-31.3005, -61.5831, -1.64868, 0.15", "-32.2933, -63.423, -2.71264, 0.15", "-32.6345, -64.1147, -3.0964, 0.73", "-33.8218, -66.5936, -4.32647, 0.07", "-34.4671, -67.8947, -4.92038, 0.07", "-35.3642, -69.6277, -5.65012, 0.29", "-36.1025, -70.9754, -6.18277, 0.07", "-36.6234, -71.8715, -6.51502, 0.73", "-37.654, -73.3569, -6.97038, 0.07", "-38.4693, -74.2293, -7.08064, 0.07", "-39.3174, -75.0365, -7.16032, 0.36", "-40.1604, -75.7321, -7.1833, 0.07", "-41.2834, -76.548, -7.14733, 0.36", "-43.5023, -77.9767, -7.05571, 0.07", "-46.3083, -79.5398, -6.87321, 0.66", "-53.4267, -88.7812, -8.74114, 0.66", "-60.3729, -97.8483, -11.8163, 0.66", "-67.7975, -106.358, -15.4102, 0.66", "-72.6145, -116.269, -19.6423, 0.66", "-78.2318, -125.964, -23.3745, 0.66", "-84.4086, -134.853, -28.1858, 0.66", "-90.8276, -142.946, -34.0447, 0.66", "-96.6346, -152.447, -38.0062, 0.66" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-31.3005, -61.5831, -1.64868, 0.07", "-33.5531, -62.2225, -2.09815, 0.07", "-34.598, -62.4304, -2.3922, 0.29", "-35.3108, -62.5476, -2.65136, 0.95", "-35.9107, -62.6031, -2.90122, 0.95", "-37.3204, -62.6864, -3.51265, 0.07", "-38.9665, -62.7603, -4.23093, 0.07", "-40.1897, -62.8046, -4.90905, 1.53", "-41.2203, -62.8648, -5.52864, 1.53", "-43.7813, -63.1847, -7.18352, 0.15", "-44.0635, -63.2372, -7.37193, 0.51", "-44.5623, -63.3735, -7.70328, 1.02", "-46.9683, -64.351, -9.36098, 0.07", "-47.5963, -64.6882, -9.79147, 0.8", "-49.156, -65.7539, -10.9146, 0.15", "-49.5279, -66.0959, -11.2101, 0.15", "-50.1523, -66.7611, -11.7481, 0.8", "-51.4939, -68.3607, -12.9459, 0.07", "-52.0297, -69.0507, -13.4704, 0.07", "-52.5321, -69.7244, -14.0496, 0.07", "-53.1489, -70.5983, -14.8556, 0.36", "-53.6984, -71.4074, -15.6145, 0.07", "-54.0388, -71.9431, -16.0997, 0.95", "-55.4692, -74.2892, -17.9729, 0.07", "-55.8442, -74.8874, -18.3811, 0.07", "-56.4337, -75.8117, -18.8951, 0.44", "-57.0314, -76.7876, -19.2656, 0.15", "-57.5318, -77.6952, -19.4419, 0.15", "-58.2423, -79.1063, -19.5276, 1.02", "-58.8449, -80.388, -19.4566, 0.29", "-59.2156, -81.2021, -19.3862, 0.66", "-60.1436, -83.2846, -19.1739, 0.07", "-60.8856, -84.995, -19.002, 0.36", "-61.7223, -86.9935, -18.8068, 0.07", "-62.2923, -88.4807, -18.6579, 0.07", "-62.7074, -89.6518, -18.5623, 0.51", "-63.0829, -90.7504, -18.4968, 0.07", "-63.5349, -92.1306, -18.5197, 0.36", "-63.8191, -92.9448, -18.5891, 0.15", "-64.2492, -94.1067, -18.7425, 0.29", "-64.6233, -95.0655, -18.9014, 0.07", "-65.3255, -96.741, -19.2377, 0.66", "-66.1955, -98.6977, -19.7014, 0.22", "-67.0963, -100.575, -20.2192, 0.07", "-67.958, -102.256, -20.7242, 0.36", "-73.6584, -110.837, -21.876, 0.36", "-79.796, -119.19, -21.6169, 0.36", "-86.7152, -126.915, -20.9613, 0.36", "-93.5807, -134.686, -20.3046, 0.36", "-100.561, -142.38, -19.9299, 0.36" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "39.2768, -0.0687232, -12.4896, 0.51", "39.1494, -0.0510772, -13.4455, 0.51", "39.1172, -0.101185, -14.0885, 0.29", "39.1488, -0.246137, -15.343, 0.29", "39.3001, -0.507945, -16.9556, 0.51", "39.362, -0.59603, -17.4322, 0.8", "39.4448, -0.727379, -18.0187, 0.8", "39.5943, -1.01988, -19.0691, 0.8", "39.8784, -1.54789, -20.4395, 1.02", "40.1825, -2.01721, -21.4065, 0.8", "40.7309, -2.7411, -22.6988, 0.8", "41.1241, -3.23261, -23.5009, 0.22", "41.5592, -3.75986, -24.2602, 1.17", "42.3046, -4.6382, -25.2754, 0.58", "42.7311, -5.13855, -25.7056, 0.44", "43.1531, -5.62955, -26.0659, 0.44", "43.6273, -6.179, -26.4234, 0.44", "44.0365, -6.61947, -26.7586, 0.44", "44.7795, -7.32138, -27.4261, 0.95", "45.3362, -7.79507, -27.9762, 1.24", "45.9203, -8.22537, -28.5422, 1.24", "46.3224, -8.46031, -28.8954, 1.24", "47.3974, -8.94038, -29.7515, 0.22", "48.4695, -9.30181, -30.5286, 0.36", "49.6947, -9.67574, -31.3697, 0.8", "50.674, -9.99104, -32.0171, 0.51", "51.444, -10.2625, -32.5278, 0.44", "51.9203, -10.4513, -32.8548, 0.44", "52.676, -10.8175, -33.4341, 0.44", "53.6564, -11.3466, -34.4486, 0.8", "54.2882, -11.7223, -35.301, 1.31", "54.6759, -12.0022, -35.9562, 1.31", "55.0141, -12.2884, -36.6033, 1.31", "55.6466, -12.8554, -37.8438, 0.8", "56.5585, -13.6649, -39.7009, 0.8", "57.0851, -14.1174, -40.7978, 1.02", "57.6974, -14.6439, -42.1745, 1.02", "58.2381, -15.1231, -43.5217, 0.22", "58.599, -15.475, -44.5341, 0.73", "58.9178, -15.7978, -45.6293, 1.31", "59.0189, -15.8907, -46.0116, 1.53", "59.4812, -16.134, -47.8419, 0.22", "59.8018, -16.1774, -49.045, 0.88", "60.0806, -16.1308, -49.9639, 0.88", "60.8245, -15.9076, -51.8022, 0.29", "61.1908, -15.7813, -52.4242, 0.88", "61.8858, -15.5216, -53.2266, 1.46", "62.668, -15.2701, -53.7999, 1.75", "63.7947, -14.991, -54.3258, 1.39", "65.1625, -14.7432, -54.7261, 0.29", "65.9828, -14.65, -54.8582, 0.29", "67.3007, -14.5828, -54.9412, 1.02", "68.5623, -14.5744, -54.8884, 1.02", "70.0638, -14.5917, -54.6652, 0.44", "70.8753, -14.6161, -54.4612, 0.22", "71.4021, -14.631, -54.2979, 0.51", "72.6021, -14.632, -53.9173, 0.15", "73.2677, -14.5891, -53.7147, 0.15", "73.953, -14.4751, -53.5671, 0.15", "74.7401, -14.322, -53.4786, 0.15", "75.7167, -14.1669, -53.4524, 0.8", "76.9466, -14.0388, -53.5391, 1.02", "77.6371, -13.9958, -53.6588, 1.02", "78.3369, -13.9887, -53.8192, 1.02", "79.8212, -14.0389, -54.2339, 0.07", "80.5297, -14.0921, -54.4773, 0.07", "81.2631, -14.1696, -54.7803, 0.07", "82.0761, -14.2696, -55.1672, 0.66", "82.6881, -14.339, -55.5094, 0.95", "83.217, -14.3819, -55.8768, 0.95", "84.4756, -14.3715, -56.9903, 0.44", "85.4009, -14.2528, -57.8961, 1.17", "85.8684, -14.1406, -58.3864, 1.17", "86.6531, -13.8116, -59.4013, 0.07", "87.1855, -13.4276, -60.3739, 0.58", "87.5552, -12.7925, -61.7014, 0.22", "87.5566, -12.417, -62.3615, 0.58", "87.5013, -12.1853, -62.7016, 0.58", "87.1978, -11.1781, -63.9887, 0.58", "86.9044, -10.3333, -64.956, 0.22", "86.7397, -9.83374, -65.5123, 0.22", "86.6223, -9.54953, -65.8762, 0.22", "86.4348, -8.82122, -67.1553, 0.58", "86.4937, -8.50379, -67.9669, 0.22", "86.5993, -8.46909, -68.2193, 0.22", "86.9458, -8.38906, -68.8046, 0.22", "87.3592, -8.27336, -69.5392, 0.73", "87.835, -8.1682, -70.4932, 1.31", "88.0867, -8.13732, -71.0435, 1.31", "88.504, -8.06448, -71.96, 0.15", "89.2223, -7.85365, -73.1917, 0.29", "89.9761, -7.4722, -74.2568, 0.29", "90.3447, -7.2826, -74.6887, 0.29", "90.6697, -7.15659, -75.0322, 0.29", "90.9839, -7.06305, -75.3521, 0.29", "92.0529, -6.87878, -76.4255, 0.58", "93.1781, -6.82074, -77.5656, 0.22", "94.6634, -6.84151, -79.1141, 1.82", "96.2052, -6.9016, -80.8063, 0.36", "97.1861, -6.97727, -81.9286, 0.15", "98.2445, -7.13079, -83.2154, 0.66", "98.8028, -7.27112, -83.9527, 0.29", "99.7492, -7.60518, -85.2482, 1.53", "100.844, -8.06145, -86.8626, 0.15", "101.424, -8.35223, -87.727, 0.73", "102.086, -8.78057, -88.7399, 0.36", "102.824, -9.30868, -89.8564, 1.02", "103.274, -9.65034, -90.5149, 1.02", "103.938, -10.1985, -91.4746, 0.36", "104.731, -10.8634, -92.5995, 2.04", "106.087, -11.9109, -94.5187, 0.07", "106.773, -12.399, -95.5528, 0.07", "107.236, -12.7101, -96.2895, 0.07", "107.977, -13.2229, -97.5877, 1.02", "108.974, -13.9947, -99.6108, 0.36", "109.66, -14.6155, -101.327, 1.97", "110.308, -15.3643, -103.378, 0.07", "110.471, -15.7366, -104.269, 0.07", "110.513, -16.2812, -105.376, 0.73", "110.364, -17.0098, -106.605, 0.44", "110.12, -17.6282, -107.482, 1.09", "109.882, -18.1375, -108.101, 1.09", "108.996, -19.9172, -110.05, 0.22", "108.239, -21.3494, -111.56, 1.17", "107.67, -22.4303, -112.627, 0.22", "107.294, -23.0693, -113.267, 0.58", "106.912, -23.6544, -113.855, 0.22", "106.472, -24.267, -114.494, 0.44", "105.861, -25.0503, -115.334, 0.07", "105.373, -25.6312, -115.991, 0.29", "104.007, -27.1134, -117.792, 0.07", "103.335, -27.7931, -118.659, 0.07", "102.56, -28.4809, -119.59, 0.8", "107.686, -28.7051, -128.581, 0.8" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "39.2768, -0.0687232, -12.4896, 0.07", "40.1758, -0.221588, -12.4037, 0.07", "40.6354, -0.27746, -12.2814, 0.07", "41.0048, -0.313568, -12.1035, 0.07", "41.3194, -0.333941, -11.9305, 0.36", "41.8416, -0.399291, -11.6609, 0.07", "42.3477, -0.489422, -11.4606, 0.07", "43.0836, -0.613064, -11.2073, 0.58", "43.456, -0.670209, -11.1035, 0.58", "43.9501, -0.725559, -10.977, 0.58", "44.7987, -0.795399, -10.8253, 0.8", "45.7106, -0.905039, -10.7312, 0.07", "46.1909, -0.992089, -10.7152, 0.07", "46.7913, -1.15354, -10.7274, 0.66", "47.1226, -1.28011, -10.7393, 0.66", "47.681, -1.59061, -10.7467, 0.07", "48.3367, -2.05852, -10.6964, 0.07", "48.6677, -2.34033, -10.6217, 0.07", "48.9408, -2.57773, -10.5432, 0.07", "49.4376, -2.98827, -10.4128, 0.07", "49.9396, -3.36801, -10.2955, 0.07", "50.772, -3.92635, -10.1321, 0.66", "51.8183, -4.52649, -9.98846, 0.66", "52.9195, -5.08628, -9.9081, 0.29", "53.5821, -5.39718, -9.88401, 0.8", "54.2363, -5.66772, -9.89832, 0.07", "54.7373, -5.85064, -9.94093, 0.07", "55.1566, -5.96839, -10.0162, 0.44", "55.7951, -6.09601, -10.1435, 0.44", "56.6436, -6.22433, -10.3142, 0.73", "57.4275, -6.32437, -10.4391, 0.73", "58.0639, -6.38113, -10.5202, 0.73", "58.9422, -6.44309, -10.5901, 0.44", "60.1943, -6.50056, -10.6407, 0.73" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "48.783, 49.6289, -19.2172, 0.07", "49.8059, 50.2191, -19.6811, 0.07", "50.9576, 50.8835, -20.2033, 0.07", "51.3908, 51.1335, -20.3997, 0.07", "52.3385, 51.6802, -20.8295, 0.07", "54.0342, 52.6585, -21.5984, 1.75" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "48.783, 49.6289, -19.2172, 0.07", "49.5841, 49.3306, -18.9706, 0.07", "50.511, 48.969, -18.7144, 0.36", "51.027, 48.7583, -18.5716, 0.29", "51.5434, 48.5389, -18.3686, 0.51", "52.1883, 48.2542, -18.088, 0.22", "53.37, 47.728, -17.5607, 0.95", "54.149, 47.3772, -17.2077, 0.07", "55.1432, 46.9261, -16.7472, 0.73", "56.6237, 46.2397, -15.9795, 0.22", "56.9285, 46.0938, -15.8027, 0.44", "57.217, 45.9449, -15.6148, 0.07", "57.5222, 45.7784, -15.4079, 0.44", "64.0006, 43.2435, -13.2192, 0.44", "71.0414, 41.8638, -11.829, 0.44", "78.0123, 40.2782, -10.3224, 0.44", "85.0795, 39.1782, -8.81013, 0.44", "92.2669, 39.2719, -7.45765, 0.44", "99.3792, 40.514, -6.32609, 0.44", "106.31, 42.7744, -6.58796, 0.44" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-154.421, 149.79, 27.1955, 0.07", "-153.88, 150.411, 26.8689, 0.07", "-153.055, 151.464, 26.242, 1.02", "-151.961, 152.994, 25.3072, 0.07", "-151.457, 153.826, 24.7906, 0.36", "-150.802, 155.061, 24.0318, 0.07", "-150.392, 155.912, 23.4831, 0.36", "-150.075, 156.788, 22.892, 0.07", "-149.958, 157.395, 22.461, 0.29", "-149.916, 158.722, 21.5091, 0.07", "-149.953, 159.121, 21.2216, 1.17", "-150.217, 160.406, 20.3587, 0.15", "-150.482, 161.347, 19.7516, 1.09", "-150.916, 162.57, 18.9811, 0.51", "-151.243, 163.348, 18.5076, 0.73", "-151.983, 165.018, 17.5487, 0.07", "-152.515, 166.217, 16.9089, 0.07", "-152.711, 166.627, 16.7175, 0.44", "-153.64, 168.538, 15.8918, 0.07", "-154.195, 169.705, 15.4338, 0.88", "-154.965, 171.378, 14.8203, 0.15", "-155.307, 172.156, 14.5575, 0.88", "-155.934, 173.697, 14.0223, 0.07", "-156.101, 174.109, 13.8887, 0.29" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-154.421, 149.79, 27.1955, 0.44", "-154.817, 150.607, 27.1885, 0.44", "-155.122, 151.219, 27.1694, 0.07", "-155.282, 151.523, 27.1568, 0.07", "-155.568, 152.012, 27.1356, 1.17", "-155.837, 152.472, 27.1157, 0.07", "-156.052, 152.838, 27.0998, 0.07", "-156.273, 153.198, 27.0524, 0.07", "-156.556, 153.628, 26.9995, 0.95", "-157.118, 154.456, 26.9217, 0.07" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-58.8768, 80.4501, 4.35451, 0.22", "-58.0198, 80.7569, 3.88547, 0.22", "-57.8598, 80.8086, 3.80992, 0.51", "-56.6002, 81.2059, 3.29434, 0.15", "-56.0373, 81.3775, 3.0683, 0.44", "-55.3778, 81.5692, 2.80981, 0.15", "-54.4218, 81.8257, 2.50299, 0.44", "-53.7979, 81.939, 2.40091, 0.44", "-52.9149, 82.0306, 2.35394, 0.15", "-51.9858, 82.0631, 2.40179, 0.15", "-51.5126, 82.06, 2.44896, 0.15", "-50.2333, 82.0127, 2.63245, 0.15", "-48.5785, 81.8986, 2.91052, 0.29", "-47.6549, 81.8188, 3.06982, 0.07", "-47.0257, 81.7445, 3.18132, 0.29", "-46.5032, 81.671, 3.22544, 0.07", "-46.0428, 81.5944, 3.20124, 0.07", "-45.5395, 81.4911, 3.08034, 0.07", "-44.6359, 81.2676, 2.73431, 0.88", "-44.3087, 81.1522, 2.59058, 0.88", "-42.7782, 80.3842, 1.8152, 0.07", "-42.4927, 80.2066, 1.66662, 0.07", "-42.254, 80.0471, 1.55258, 0.07", "-41.3881, 79.4612, 1.21503, 0.07", "-40.5231, 78.8946, 1.01668, 0.29", "-39.4228, 78.2842, 0.955674, 0.07", "-38.5424, 77.8803, 1.03981, 0.07", "-37.6546, 77.557, 1.18391, 0.07", "-36.8405, 77.3135, 1.38239, 0.07", "-35.63, 77.0375, 1.80662, 0.07", "-34.46, 76.8766, 2.32345, 0.36", "-33.9347, 76.8471, 2.60437, 0.07", "-33.3523, 76.8444, 2.93136, 0.07", "-32.5419, 76.8346, 3.35605, 0.36", "-32.1868, 76.8162, 3.51853, 0.07", "-31.8668, 76.7678, 3.64541, 0.07", "-31.3765, 76.6028, 3.86034, 0.07", "-30.8757, 76.3881, 4.07213, 0.07", "-30.1176, 75.9846, 4.32079, 0.07", "-29.7736, 75.7625, 4.39836, 0.07", "-29.2183, 75.3212, 4.48928, 0.36", "-28.788, 74.8982, 4.54526, 0.36" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-58.8768, 80.4501, 4.35451, 0.07", "-59.8923, 81.5074, 4.59716, 0.07", "-60.2905, 81.8982, 4.67265, 0.58", "-60.6085, 82.2187, 4.78161, 0.58", "-61.4737, 83.1368, 5.1348, 0.07", "-61.9462, 83.6639, 5.34129, 0.88", "-62.3155, 84.0818, 5.50005, 1.09", "-63.4191, 85.3366, 6.05141, 0.15", "-64.3602, 86.44, 6.5315, 0.36", "-64.7818, 86.9515, 6.74248, 0.88", "-65.1436, 87.3842, 6.91811, 0.88", "-65.7909, 88.1515, 7.23159, 0.07", "-66.405, 88.8974, 7.55416, 0.07", "-66.7464, 89.3304, 7.7358, 0.73", "-67.0938, 89.7606, 7.88755, 1.09", "-67.9236, 90.7339, 8.24934, 0.15", "-68.5099, 91.4028, 8.53158, 0.15", "-68.9729, 91.9535, 8.77526, 1.24", "-69.4, 92.509, 9.00477, 1.24", "-69.8508, 93.1434, 9.24498, 0.07", "-70.2896, 93.8407, 9.46427, 0.22", "-70.6611, 94.5694, 9.62277, 0.07", "-70.8121, 94.9899, 9.71437, 0.07", "-70.9789, 95.779, 9.91854, 0.8", "-71.0476, 96.3954, 10.18, 0.07", "-71.0763, 96.8912, 10.4431, 0.66", "-71.1017, 97.1341, 10.5767, 0.66", "-71.3372, 98.3699, 11.2372, 0.29", "-71.6194, 99.327, 11.7536, 0.88", "-72.0638, 100.459, 12.3852, 1.17", "-72.1949, 100.757, 12.5478, 1.53", "-72.8186, 102.122, 13.2005, 0.29", "-73.1483, 102.783, 13.4551, 0.29", "-73.5274, 103.456, 13.6313, 0.29", "-74.0442, 104.321, 13.7741, 0.88", "-74.2922, 104.751, 13.8162, 0.88", "-74.7128, 105.448, 13.9223, 1.09", "-75.1462, 106.089, 14.0597, 0.22", "-75.6473, 106.708, 14.2346, 0.51", "-76.2565, 107.346, 14.4472, 0.15", "-76.5369, 107.601, 14.5521, 0.44", "-77.4506, 108.341, 14.9272, 0.07", "-77.8305, 108.62, 15.0834, 0.73", "-78.3573, 109.002, 15.3249, 0.29", "-78.8889, 109.385, 15.5796, 0.29", "-79.6181, 109.905, 15.912, 0.66", "-80.0965, 110.235, 16.1246, 0.95", "-81.0836, 110.924, 16.6345, 0.07", "-81.9342, 111.488, 17.1225, 0.44", "-82.1584, 111.615, 17.2606, 0.07", "-82.8615, 111.945, 17.6944, 0.66", "-83.773, 112.32, 18.2379, 0.07", "-85.0451, 112.814, 19.0432, 0.51", "-86.141, 113.222, 19.6592, 0.15", "-87.4281, 113.709, 20.2494, 0.15", "-88.2056, 114.022, 20.5605, 0.15", "-88.7513, 114.261, 20.7355, 0.15", "-89.6168, 114.658, 20.8359, 0.15", "-91.9158, 115.916, 20.2282, 0.15", "-92.0491, 116.107, 19.9894, 0.44", "-92.1172, 116.434, 19.4666, 0.07", "-92.0583, 116.857, 18.6588, 0.58" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-29.8482, 14.7268, -2.36842, 1.09", "-31.0384, 14.8732, -2.2261, 1.09", "-32.64, 14.9852, -2.01466, 0.22", "-33.4318, 14.9958, -1.89966, 0.58", "-33.9321, 14.9718, -1.81981, 0.58", "-34.582, 14.9312, -1.63596, 0.22", "-35.1124, 14.8912, -1.45148, 0.58", "-35.5985, 14.8166, -1.23811, 0.95", "-36.1094, 14.7097, -0.985242, 0.95", "-37.3328, 14.4741, -0.37566, 0.44", "-39.0883, 14.1711, 0.481815, 0.8", "-39.7417, 14.0779, 0.786732, 0.95", "-40.7681, 13.9793, 1.20209, 0.95", "-41.7695, 13.9252, 1.48242, 0.15", "-42.589, 13.9102, 1.62445, 0.44", "-43.1499, 13.912, 1.6547, 0.95", "-43.9593, 13.9246, 1.60371, 1.17", "-46.1761, 13.9765, 1.39083, 0.22", "-47.8873, 14.0199, 1.19788, 0.95", "-48.5327, 14.0316, 1.12419, 1.68", "-49.5594, 14.0285, 1.08674, 1.39", "-50.5647, 13.9922, 1.13667, 1.39", "-51.8021, 13.8803, 1.31788, 0.07", "-52.9533, 13.6809, 1.6268, 0.29", "-53.7458, 13.483, 1.92881, 0.29", "-55.6955, 12.795, 2.77822, 0.07", "-56.7715, 12.2862, 3.24469, 0.22", "-57.5172, 11.8626, 3.54997, 0.44", "-58.3569, 11.3235, 3.85997, 1.75", "-58.9934, 10.903, 4.0577, 1.82", "-60.5128, 9.94625, 4.51499, 0.22", "-61.9695, 9.09528, 4.89932, 1.53", "-62.742, 8.69489, 5.12836, 1.17", "-64.0615, 8.08715, 5.55701, 0.58", "-65.3149, 7.57914, 5.99939, 0.29", "-66.8745, 7.00067, 6.60313, 0.15", "-67.4742, 6.79438, 6.86096, 0.44", "-68.4617, 6.44786, 7.3195, 0.07", "-68.8089, 6.30791, 7.47168, 0.58", "-69.6978, 5.90201, 7.81452, 1.61", "-70.5894, 5.44794, 8.11212, 1.39", "-71.4826, 4.98259, 8.34942, 0.73", "-72.6911, 4.3729, 8.66023, 0.07", "-73.0876, 4.18864, 8.74428, 0.07", "-74.1882, 3.71123, 8.91043, 0.44", "-76.2143, 2.85191, 9.13055, 0.07", "-77.2625, 2.38101, 9.18922, 1.39", "-77.8114, 2.13127, 9.2112, 1.39", "-79.7026, 1.23824, 9.27529, 0.07", "-80.9773, 0.640923, 9.36627, 0.66", "-81.4688, 0.419333, 9.43913, 0.66", "-82.8984, -0.177698, 9.86179, 0.22", "-83.85, -0.556748, 10.2697, 1.24", "-84.8347, -0.975819, 10.7998, 1.82", "-86.4736, -1.74463, 12.0122, 0.29", "-87.4913, -2.27728, 12.8854, 0.58", "-89.0443, -3.18126, 14.3009, 0.07", "-89.7421, -3.65864, 14.9798, 1.53", "-90.8842, -4.63698, 16.1061, 0.88", "-92.272, -6.124, 17.5425, 0.44", "-92.7904, -6.83046, 18.1879, 0.73", "-93.2935, -7.6657, 18.9032, 1.31", "-93.7314, -8.62231, 19.6876, 1.53", "-94.0719, -9.55134, 20.4349, 0.15", "-94.2638, -10.3643, 21.0765, 0.73", "-94.6195, -12.8416, 23.0971, 0.07", "-94.6805, -13.4395, 23.6195, 0.73", "-94.7959, -14.8708, 24.8926, 0.07", "-94.8568, -15.5827, 25.5267, 0.07", "-95.0712, -17.3614, 27.0386, 0.8", "-95.2815, -18.7291, 28.0956, 1.17", "-95.5598, -20.2355, 29.0502, 0.36", "-95.8162, -21.3217, 29.7247, 1.02", "-95.9742, -21.8358, 30.0207, 1.02", "-96.4313, -23.0139, 30.6016, 0.44", "-96.6627, -23.4643, 30.7761, 0.22", "-97.1567, -24.3263, 31.0512, 0.22", "-97.6808, -25.142, 31.32, 0.88", "-98.6395, -26.4299, 31.7638, 0.15", "-99.277, -27.1753, 32.0329, 0.15", "-100.438, -28.3723, 32.4853, 0.15", "-100.975, -28.8591, 32.6789, 0.95", "-101.357, -29.1584, 32.8057, 0.95", "-102.97, -30.2776, 33.3071, 0.22", "-103.651, -30.7003, 33.507, 0.51", "-104.759, -31.3696, 33.8282, 0.15", "-105.368, -31.7442, 34.0363, 0.66", "-106.215, -32.285, 34.3577, 0.95", "-107.162, -32.868, 34.7305, 1.53", "-109.501, -34.2634, 35.6793, 0.22", "-110.38, -34.7859, 36.0411, 0.58", "-112.296, -35.8938, 36.8556, 0.22", "-113.13, -36.3786, 37.2598, 0.8", "-114.578, -37.2319, 38.0244, 0.15", "-115.112, -37.5356, 38.3197, 0.15", "-116.209, -38.1512, 39.0123, 0.58", "-117.874, -39.0841, 40.1347, 0.29", "-119.847, -40.1634, 41.4831, 0.95", "-120.761, -40.672, 42.1853, 0.15", "-121.283, -41.001, 42.6858, 0.44", "-122.271, -41.75, 43.8289, 0.07", "-122.809, -42.2919, 44.6518, 0.95", "-123.413, -43.1411, 45.8652, 0.29", "-123.8, -43.9185, 47.0006, 0.29", "-124.259, -44.974, 48.5391, 0.95", "-124.621, -45.9194, 49.8893, 0.07", "-124.944, -46.8189, 51.1452, 0.07", "-125.058, -47.2284, 51.7366, 0.58", "-125.391, -48.9674, 54.2486, 0.07", "-125.602, -49.8455, 55.4645, 0.66" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-29.8482, 14.7268, -2.36842, 0.44", "-29.6821, 15.2842, -3.3645, 0.44", "-29.0202, 15.3555, -5.18431, 0.44", "-28.9402, 15.2277, -5.5875, 0.44", "-28.9211, 15.0585, -5.98856, 0.44", "-29.0385, 14.7425, -6.73828, 0.44", "-29.1508, 14.5028, -7.43462, 0.66", "-29.3638, 13.8403, -9.4923, 0.36", "-29.6071, 13.3994, -11.1209, 0.07", "-29.7561, 13.292, -12.0661, 0.88", "-30.1507, 13.3051, -13.9601, 0.07", "-30.5558, 13.3808, -15.3259, 0.58", "-31.1185, 13.4574, -16.7306, 0.29", "-31.6395, 13.5086, -17.7609, 0.58", "-33.5419, 13.4448, -20.648, 0.15", "-34.6699, 13.247, -21.9893, 0.8", "-36.2156, 12.8033, -23.3072, 0.07", "-38.3938, 11.9755, -24.6128, 0.51", "-39.5512, 11.4374, -25.0674, 0.07", "-41.2972, 10.4873, -25.408, 0.07", "-42.0356, 10.0369, -25.4136, 0.66", "-42.5329, 9.69486, -25.391, 0.66", "-43.715, 8.84456, -25.2912, 0.07", "-44.6925, 8.11032, -25.1904, 0.8", "-46.1366, 6.96871, -25.0716, 0.07", "-47.1527, 6.08485, -24.9981, 1.17", "-49.2108, 4.18805, -24.8493, 0.07", "-50.465, 2.95399, -24.8266, 0.07", "-51.05, 2.33403, -24.8437, 0.95", "-51.537, 1.78489, -24.8719, 0.95", "-52.4751, 0.627643, -24.9396, 0.15", "-53.0653, -0.136858, -25.0573, 0.44", "-54.4368, -1.90078, -25.4424, 0.07", "-55.0776, -2.7091, -25.8205, 0.44", "-55.8791, -3.64988, -26.3938, 0.07", "-56.3802, -4.20822, -26.7844, 1.02", "-58.1343, -6.07229, -28.1977, 0.29", "-58.8747, -6.86108, -28.8144, 0.66", "-61.3185, -9.45935, -30.7929, 0.07", "-62.0056, -10.2054, -31.3451, 0.95", "-62.4246, -10.6964, -31.7038, 0.95", "-63.5342, -12.1004, -32.7011, 0.07", "-64.2597, -13.1161, -33.3412, 0.07", "-64.6809, -13.7852, -33.8163, 0.29", "-65.1425, -14.5555, -34.3512, 0.58", "-66.3389, -16.6721, -35.9253, 0.29", "-67.5364, -18.8695, -37.6749, 0.07", "-68.4271, -20.5754, -39.1419, 0.29", "-69.7655, -23.1919, -41.5105, 0.07", "-77.411, -27.6658, -49.3215, 0.07", "-82.8012, -33.5283, -58.0163, 0.07", "-87.2328, -40.0799, -66.7422, 0.07", "-89.8809, -45.5435, -76.8624, 0.07", "-92.2103, -51.4737, -86.7868, 0.07", "-96.5945, -57.438, -95.964, 0.07", "-98.8765, -63.9739, -105.496, 0.07", "-100.404, -72.4152, -113.489, 0.07", "-99.6327, -80.3344, -122.126, 0.07", "-96.8918, -87.5588, -130.994, 0.07", "-93.9544, -94.1883, -140.274, 0.07" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "54.0342, 52.6585, -21.5984, 0.07", "55.2257, 52.7059, -22.1452, 0.07", "56.7005, 52.6875, -22.7931, 0.07", "57.9666, 52.5811, -23.3239, 0.36", "58.3166, 52.5178, -23.4639, 0.07", "59.4733, 52.1759, -23.9153, 1.31", "60.2442, 51.8348, -24.2295, 0.07", "60.5626, 51.5835, -24.3368, 0.36", "61.1277, 50.9168, -24.4693, 0.15", "61.7206, 50.0096, -24.5926, 0.36", "62.2266, 49.1086, -24.6865, 0.07", "62.7909, 47.9908, -24.7791, 0.95", "63.4445, 46.6126, -24.8707, 0.29", "64.0622, 45.2966, -24.9474, 0.07", "64.347, 44.6758, -24.9755, 0.44", "64.9006, 43.5095, -25.0137, 0.22", "65.3161, 42.7403, -25.0332, 0.51", "71.272, 38.9599, -27.4304, 0.51", "77.6051, 35.2096, -28.6004, 0.51", "83.6636, 30.899, -28.7921, 0.51", "89.5311, 26.4205, -27.9097, 0.51", "94.3577, 21.0386, -26.3102, 0.51", "99.519, 15.7304, -26.4212, 0.51", "103.51, 9.63043, -27.5153, 0.51", "109.123, 4.78726, -27.8363, 0.51", "114.424, -0.359948, -28.3932, 0.51", "120.015, -5.21584, -28.871, 0.51", "126.234, -9.23703, -28.0865, 0.51", "132.325, -13.3401, -26.8655, 0.51" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "54.0342, 52.6585, -21.5984, 0.07", "52.7387, 53.9351, -21.4199, 0.07", "52.2568, 54.4397, -21.3557, 0.07", "51.609, 55.118, -21.2694, 0.29", "50.5366, 56.241, -21.1265, 0.22", "50.1658, 56.6292, -21.0772, 0.51", "49.3678, 57.4648, -20.9709, 0.15", "48.4512, 58.617, -20.9377, 0.36", "43.0674, 65.6598, -19.0628, 0.36", "36.9497, 71.7935, -16.2847, 0.36", "30.4515, 77.6692, -13.8076, 0.36", "24.0293, 83.4967, -11.0262, 0.36", "19.3091, 90.6194, -7.99667, 0.36", "13.5211, 97.5233, -7.035, 0.36", "7.40937, 104.182, -7.65162, 0.36", "0.465555, 109.743, -9.532, 0.36", "-6.92183, 115.043, -10.0501, 0.36", "-14.4756, 120.145, -9.99492, 0.36" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_40", "dend_39", "dend_36", "dend_31", "dend_30", "dend_29", "dend_18", "dend_13", "dend_0", "dend_45", "dend_44", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_28", "dend_19", "dend_17", "dend_14", "dend_8", "dend_1", "dend_49", "dend_46", "dend_34", "dend_33", "dend_25", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_2", "dend_48", "dend_47", "dend_27", "dend_26", "dend_22", "dend_21", "dend_12", "dend_11", "dend_7", "dend_6", "dend_4", "dend_3", "dend_24", "dend_23" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_40", "dend_39", "dend_36", "dend_31", "dend_30", "dend_29", "dend_18", "dend_13", "dend_0", "dend_45", "dend_44", "dend_42", "dend_41", "dend_38", "dend_37", "dend_35", "dend_32", "dend_28", "dend_19", "dend_17", "dend_14", "dend_8", "dend_1", "dend_49", "dend_46", "dend_34", "dend_33", "dend_25", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_5", "dend_2", "dend_48", "dend_47", "dend_27", "dend_26", "dend_22", "dend_21", "dend_12", "dend_11", "dend_7", "dend_6", "dend_4", "dend_3", "dend_24", "dend_23" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dNAC222_L4_SBC_9995bf5c97_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_40, id: dend_40, parent: soma_0
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: soma_0
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: soma_0
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_18
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_49, id: dend_49, parent: dend_45
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_25, id: dend_25, parent: dend_19
create dend_25
public dend_25
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_39, dend_36, dend_31, dend_30, dend_29, dend_18, dend_13, dend_0, dend_45, dend_44, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_28, dend_19, dend_17, dend_14, dend_8, dend_1, dend_49, dend_46, dend_34, dend_33, dend_25, dend_20, dend_16, dend_15, dend_10, dend_9, dend_5, dend_2, dend_48, dend_47, dend_27, dend_26, dend_22, dend_21, dend_12, dend_11, dend_7, dend_6, dend_4, dend_3, dend_24, dend_23]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_40, dend_39, dend_36, dend_31, dend_30, dend_29, dend_18, dend_13, dend_0, dend_45, dend_44, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_28, dend_19, dend_17, dend_14, dend_8, dend_1, dend_49, dend_46, dend_34, dend_33, dend_25, dend_20, dend_16, dend_15, dend_10, dend_9, dend_5, dend_2, dend_48, dend_47, dend_27, dend_26, dend_22, dend_21, dend_12, dend_11, dend_7, dend_6, dend_4, dend_3, dend_24, dend_23]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_46
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, axon_1, axon_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.45000179203975454)
    connect dend_40(0), soma_0(0.45000179203975454)
    connect dend_39(0), soma_0(0.45000179203975454)
    connect dend_36(0), soma_0(0.45000179203975454)
    connect dend_31(0), soma_0(0.45000179203975454)
    connect dend_30(0), soma_0(0.45000179203975454)
    connect dend_29(0), soma_0(0.45000179203975454)
    connect dend_18(0), soma_0(0.45000179203975454)
    connect dend_13(0), soma_0(0.45000179203975454)
    connect dend_0(0), soma_0(0.45000179203975454)
    connect axon_0(0), soma_0(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_49(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_25(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.566138, -14.2736, 0.0, 4.7562 ) }
    soma_0 { pt3dadd( 0.529356, -12.8797, 0.0, 7.97011 ) }
    soma_0 { pt3dadd( 0.492574, -11.4859, 0.0, 9.9442 ) }
    soma_0 { pt3dadd( 0.455792, -10.0921, 0.0, 11.2117 ) }
    soma_0 { pt3dadd( 0.419009, -8.69823, 0.0, 12.2129 ) }
    soma_0 { pt3dadd( 0.382227, -7.3044, 0.0, 12.4666 ) }
    soma_0 { pt3dadd( 0.345445, -5.91057, 0.0, 12.5364 ) }
    soma_0 { pt3dadd( 0.308663, -4.51674, 0.0, 12.5226 ) }
    soma_0 { pt3dadd( 0.271881, -3.12291, 0.0, 12.2716 ) }
    soma_0 { pt3dadd( 0.235099, -1.72908, 0.0, 11.4903 ) }
    soma_0 { pt3dadd( 0.198316, -0.335252, 0.0, 10.5046 ) }
    soma_0 { pt3dadd( 0.161534, 1.05858, 0.0, 9.96394 ) }
    soma_0 { pt3dadd( 0.124752, 2.45241, 0.0, 9.57888 ) }
    soma_0 { pt3dadd( 0.0879699, 3.84624, 0.0, 8.9522 ) }
    soma_0 { pt3dadd( 0.0511878, 5.24007, 0.0, 8.07113 ) }
    soma_0 { pt3dadd( 0.0144056, 6.6339, 0.0, 7.75231 ) }
    soma_0 { pt3dadd( -0.0223766, 8.02773, 0.0, 7.65831 ) }
    soma_0 { pt3dadd( -0.0591587, 9.42156, 0.0, 7.44457 ) }
    soma_0 { pt3dadd( -0.0959409, 10.8154, 0.0, 6.57662 ) }
    soma_0 { pt3dadd( -0.132723, 12.2092, 0.0, 5.01156 ) }
    soma_0 { pt3dadd( -0.169505, 13.603, 0.0, 3.05458 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 0.89782, -7.62067, -8.81, 1.17 ) }
    dend_43 { pt3dadd( 0.194996, -8.13439, -8.21388, 1.17 ) }
    dend_43 { pt3dadd( -1.27891, -9.21172, -6.96376, 1.39 ) }
    // Section: dend_40, id: dend_40, parent: soma_0 (entry count 24/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 3.47782, -12.4371, 7.54, 1.39 ) }
    dend_40 { pt3dadd( 4.53818, -13.5934, 7.83222, 1.39 ) }
    dend_40 { pt3dadd( 5.90126, -14.9797, 8.14313, 1.17 ) }
    dend_40 { pt3dadd( 6.57089, -15.6608, 8.29587, 1.24 ) }
    dend_40 { pt3dadd( 7.5145, -16.6205, 8.51109, 0.95 ) }
    dend_40 { pt3dadd( 8.685, -17.811, 8.77807, 1.24 ) }
    dend_40 { pt3dadd( 9.54907, -18.6899, 8.97516, 1.68 ) }
    dend_40 { pt3dadd( 10.4844, -19.5646, 9.23886, 1.68 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 32/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.53218, -12.3201, -0.570001, 0.73 ) }
    dend_39 { pt3dadd( -0.467422, -13.8856, -0.0080836, 0.66 ) }
    dend_39 { pt3dadd( -0.394764, -15.5733, 0.706846, 0.66 ) }
    dend_39 { pt3dadd( -0.356352, -16.5264, 1.15006, 1.09 ) }
    dend_39 { pt3dadd( -0.333461, -17.3796, 1.5474, 1.09 ) }
    dend_39 { pt3dadd( -0.303919, -18.7303, 2.16489, 0.58 ) }
    dend_39 { pt3dadd( -0.264412, -20.7129, 3.01024, 0.44 ) }
    dend_39 { pt3dadd( -0.24835, -22.3775, 3.66343, 1.24 ) }
    dend_39 { pt3dadd( -0.265825, -24.066, 4.27818, 0.58 ) }
    dend_39 { pt3dadd( -0.300045, -24.9164, 4.57829, 1.02 ) }
    dend_39 { pt3dadd( -0.336865, -25.4953, 4.77738, 1.09 ) }
    dend_39 { pt3dadd( -0.491466, -27.3075, 5.35011, 0.51 ) }
    dend_39 { pt3dadd( -0.65358, -28.9369, 5.77749, 0.36 ) }
    dend_39 { pt3dadd( -0.799747, -30.3709, 6.11335, 1.24 ) }
    dend_39 { pt3dadd( -0.987711, -32.3048, 6.58517, 0.58 ) }
    dend_39 { pt3dadd( -1.09581, -33.689, 6.94518, 0.51 ) }
    dend_39 { pt3dadd( -1.15232, -34.6595, 7.19817, 0.88 ) }
    dend_39 { pt3dadd( -1.16395, -35.332, 7.36761, 1.02 ) }
    dend_39 { pt3dadd( -1.08785, -37.0856, 7.75664, 0.36 ) }
    dend_39 { pt3dadd( -1.00191, -38.0726, 7.96486, 0.66 ) }
    dend_39 { pt3dadd( -0.846915, -39.4433, 8.20821, 0.88 ) }
    dend_39 { pt3dadd( -0.652846, -40.9877, 8.43716, 1.09 ) }
    dend_39 { pt3dadd( -0.461099, -42.351, 8.62076, 0.66 ) }
    dend_39 { pt3dadd( -0.310338, -43.3834, 8.73462, 0.51 ) }
    dend_39 { pt3dadd( -0.124039, -44.8073, 8.87169, 0.44 ) }
    dend_39 { pt3dadd( 0.0245529, -46.285, 9.00889, 1.02 ) }
    dend_39 { pt3dadd( 0.0728117, -47.1455, 9.11249, 1.31 ) }
    dend_39 { pt3dadd( 0.0922515, -48.2042, 9.26077, 1.02 ) }
    dend_39 { pt3dadd( 0.0796752, -49.8645, 9.5105, 0.58 ) }
    dend_39 { pt3dadd( 0.0727412, -51.5729, 9.77539, 0.73 ) }
    dend_39 { pt3dadd( 0.0945185, -52.9904, 9.94981, 0.51 ) }
    dend_39 { pt3dadd( 0.130024, -54.1323, 10.0547, 0.15 ) }
    dend_39 { pt3dadd( 0.157269, -54.9971, 10.1034, 0.15 ) }
    dend_39 { pt3dadd( 0.197586, -56.0874, 10.1202, 1.17 ) }
    dend_39 { pt3dadd( 0.300695, -57.8095, 10.0234, 0.51 ) }
    dend_39 { pt3dadd( 0.482835, -59.3011, 9.857, 0.07 ) }
    dend_39 { pt3dadd( 0.635853, -60.2108, 9.76168, 0.73 ) }
    dend_39 { pt3dadd( 0.825575, -61.2421, 9.68645, 0.95 ) }
    dend_39 { pt3dadd( 1.11745, -63.0456, 9.66368, 1.39 ) }
    dend_39 { pt3dadd( 1.35762, -64.954, 9.78842, 1.61 ) }
    dend_39 { pt3dadd( 1.49281, -66.9998, 10.1351, 0.58 ) }
    dend_39 { pt3dadd( 1.48279, -68.5359, 10.5785, 0.44 ) }
    dend_39 { pt3dadd( 1.38457, -69.7638, 11.0284, 0.8 ) }
    dend_39 { pt3dadd( 1.18735, -71.0833, 11.5906, 0.44 ) }
    dend_39 { pt3dadd( 0.945288, -72.2046, 12.0827, 0.58 ) }
    dend_39 { pt3dadd( 0.529835, -73.85, 12.7864, 0.29 ) }
    dend_39 { pt3dadd( 0.222104, -75.2611, 13.1977, 0.22 ) }
    dend_39 { pt3dadd( 0.111359, -76.262, 13.3213, 0.22 ) }
    dend_39 { pt3dadd( 0.154748, -77.3016, 13.2963, 0.22 ) }
    dend_39 { pt3dadd( 0.493447, -79.1102, 13.0698, 0.58 ) }
    dend_39 { pt3dadd( 0.838859, -80.2383, 12.8539, 1.17 ) }
    dend_39 { pt3dadd( 1.86107, -82.6335, 12.3099, 0.15 ) }
    dend_39 { pt3dadd( 2.2258, -83.3511, 12.1507, 0.73 ) }
    dend_39 { pt3dadd( 2.87047, -84.5333, 11.9328, 1.31 ) }
    dend_39 { pt3dadd( 3.58698, -85.8808, 11.7539, 0.15 ) }
    dend_39 { pt3dadd( 3.9575, -86.6477, 11.7032, 0.15 ) }
    dend_39 { pt3dadd( 4.4322, -87.8314, 11.6752, 1.24 ) }
    dend_39 { pt3dadd( 4.87259, -89.2771, 11.738, 0.15 ) }
    dend_39 { pt3dadd( 5.1315, -90.396, 11.7918, 0.66 ) }
    dend_39 { pt3dadd( 5.38975, -91.8425, 11.8852, 0.29 ) }
    dend_39 { pt3dadd( 5.53314, -92.8197, 11.9594, 0.44 ) }
    dend_39 { pt3dadd( 5.686, -94.1035, 12.0651, 0.15 ) }
    dend_39 { pt3dadd( 5.85741, -95.6128, 12.1932, 1.68 ) }
    dend_39 { pt3dadd( 6.09124, -97.4988, 12.433, 0.73 ) }
    dend_39 { pt3dadd( 6.31822, -99.0723, 12.6687, 0.15 ) }
    dend_39 { pt3dadd( 6.54986, -100.397, 12.8869, 0.88 ) }
    dend_39 { pt3dadd( 6.6664, -100.991, 12.9841, 0.88 ) }
    dend_39 { pt3dadd( 7.16988, -103.514, 13.3757, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_39 { pt3dadd( 7.55079, -105.383, 13.6413, 0.73 ) }
    dend_39 { pt3dadd( 7.83036, -106.713, 13.8194, 0.58 ) }
    dend_39 { pt3dadd( 8.09833, -107.965, 13.9618, 1.02 ) }
    dend_39 { pt3dadd( 8.66165, -110.441, 14.1236, 0.36 ) }
    dend_39 { pt3dadd( 9.01113, -111.87, 14.1499, 0.22 ) }
    dend_39 { pt3dadd( 9.18632, -112.584, 14.1221, 0.51 ) }
    dend_39 { pt3dadd( 9.45744, -113.63, 14.0065, 0.95 ) }
    dend_39 { pt3dadd( 10.0073, -115.637, 13.7396, 0.36 ) }
    dend_39 { pt3dadd( 10.5073, -117.357, 13.4733, 0.44 ) }
    dend_39 { pt3dadd( 10.7444, -118.131, 13.3159, 0.66 ) }
    dend_39 { pt3dadd( 11.3071, -119.994, 12.9017, 0.44 ) }
    dend_39 { pt3dadd( 11.7499, -121.563, 12.5488, 0.8 ) }
    dend_39 { pt3dadd( 11.9901, -122.467, 12.3234, 0.95 ) }
    dend_39 { pt3dadd( 12.2723, -123.561, 12.0553, 0.58 ) }
    dend_39 { pt3dadd( 12.7448, -125.48, 11.6379, 0.36 ) }
    dend_39 { pt3dadd( 13.0796, -126.984, 11.3082, 1.75 ) }
    dend_39 { pt3dadd( 13.2656, -127.997, 11.0863, 1.75 ) }
    dend_39 { pt3dadd( 13.4295, -129.405, 10.8034, 1.53 ) }
    dend_39 { pt3dadd( 13.588, -131.709, 10.3616, 0.51 ) }
    dend_39 { pt3dadd( 13.6215, -132.564, 10.2175, 0.22 ) }
    dend_39 { pt3dadd( 13.6593, -133.642, 10.0966, 0.22 ) }
    dend_39 { pt3dadd( 13.7166, -134.482, 10.0231, 0.22 ) }
    dend_39 { pt3dadd( 13.7977, -135.135, 9.99513, 0.22 ) }
    dend_39 { pt3dadd( 13.9344, -135.734, 10.0091, 0.66 ) }
    dend_39 { pt3dadd( 14.2131, -136.427, 10.0251, 0.66 ) }
    dend_39 { pt3dadd( 14.8676, -137.571, 10.0963, 0.15 ) }
    dend_39 { pt3dadd( 15.584, -138.647, 10.252, 1.09 ) }
    dend_39 { pt3dadd( 16.1641, -139.513, 10.4297, 1.09 ) }
    dend_39 { pt3dadd( 16.9014, -140.69, 10.7104, 0.36 ) }
    dend_39 { pt3dadd( 17.5788, -141.844, 10.9745, 0.51 ) }
    dend_39 { pt3dadd( 18.2331, -143.016, 11.2063, 0.95 ) }
    dend_39 { pt3dadd( 19.0887, -144.607, 11.4829, 0.29 ) }
    dend_39 { pt3dadd( 19.6845, -145.809, 11.658, 0.07 ) }
    dend_39 { pt3dadd( 20.2651, -147.079, 11.8032, 1.46 ) }
    dend_39 { pt3dadd( 21.0663, -149.092, 11.9535, 0.58 ) }
    dend_39 { pt3dadd( 21.6117, -150.582, 12.0064, 0.44 ) }
    dend_39 { pt3dadd( 21.9037, -151.354, 11.9957, 0.22 ) }
    dend_39 { pt3dadd( 22.2692, -152.227, 11.9556, 0.8 ) }
    dend_39 { pt3dadd( 22.7363, -153.219, 11.9206, 0.8 ) }
    dend_39 { pt3dadd( 23.5574, -154.872, 11.9093, 0.15 ) }
    dend_39 { pt3dadd( 23.9903, -155.748, 11.9349, 0.15 ) }
    dend_39 { pt3dadd( 24.8019, -157.316, 12.0085, 1.61 ) }
    dend_39 { pt3dadd( 25.3907, -158.403, 12.0618, 1.31 ) }
    dend_39 { pt3dadd( 26.1442, -159.74, 12.1296, 0.29 ) }
    dend_39 { pt3dadd( 26.6706, -160.734, 12.1773, 0.22 ) }
    dend_39 { pt3dadd( 27.533, -162.486, 12.256, 0.73 ) }
    dend_39 { pt3dadd( 28.1626, -163.921, 12.3141, 0.07 ) }
    dend_39 { pt3dadd( 28.5111, -164.782, 12.3466, 0.73 ) }
    dend_39 { pt3dadd( 28.7923, -165.514, 12.373, 0.88 ) }
    dend_39 { pt3dadd( 29.5598, -167.626, 12.3989, 0.22 ) }
    dend_39 { pt3dadd( 29.9768, -168.764, 12.3491, 1.09 ) }
    dend_39 { pt3dadd( 30.2247, -169.413, 12.2885, 1.09 ) }
    dend_39 { pt3dadd( 30.99, -171.234, 12.0471, 0.07 ) }
    dend_39 { pt3dadd( 31.1712, -171.622, 11.9838, 0.36 ) }
    dend_39 { pt3dadd( 31.9955, -173.201, 11.6708, 0.07 ) }
    dend_39 { pt3dadd( 32.8029, -174.552, 11.3697, 0.07 ) }
    dend_39 { pt3dadd( 33.3189, -175.376, 11.1878, 0.07 ) }
    dend_39 { pt3dadd( 33.8161, -176.139, 11.0381, 1.17 ) }
    dend_39 { pt3dadd( 34.2136, -176.736, 10.9407, 1.31 ) }
    dend_39 { pt3dadd( 35.4866, -178.844, 10.7129, 0.07 ) }
    dend_39 { pt3dadd( 36.0924, -179.99, 10.63, 0.07 ) }
    dend_39 { pt3dadd( 36.5493, -180.981, 10.5726, 0.36 ) }
    dend_39 { pt3dadd( 37.2186, -182.578, 10.5531, 0.07 ) }
    dend_39 { pt3dadd( 37.5776, -183.551, 10.5459, 0.07 ) }
    dend_39 { pt3dadd( 38.3969, -185.879, 10.5458, 2.12 ) }
    dend_39 { pt3dadd( 39.1756, -188.333, 10.5796, 0.15 ) }
    dend_39 { pt3dadd( 39.5466, -189.646, 10.5948, 0.15 ) }
    dend_39 { pt3dadd( 40.1799, -192.186, 10.6228, 1.24 ) }
    dend_39 { pt3dadd( 40.6105, -194.111, 10.6503, 0.22 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 69/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -2.03218, 1.51508, -5.49, 1.68 ) }
    dend_36 { pt3dadd( -2.91089, 1.87903, -6.18642, 1.68 ) }
    dend_36 { pt3dadd( -4.14295, 2.50296, -7.30834, 1.09 ) }
    dend_36 { pt3dadd( -5.17787, 3.15732, -8.56568, 0.51 ) }
    dend_36 { pt3dadd( -5.80883, 3.65867, -9.60945, 0.66 ) }
    dend_36 { pt3dadd( -6.58802, 4.47365, -11.4579, 0.73 ) }
    dend_36 { pt3dadd( -6.86973, 4.87375, -12.517, 0.73 ) }
    dend_36 { pt3dadd( -6.86323, 5.03414, -13.1108, 0.73 ) }
    dend_36 { pt3dadd( -6.49227, 5.37268, -15.1333, 0.73 ) }
    dend_36 { pt3dadd( -6.15241, 5.51129, -16.2383, 0.73 ) }
    dend_36 { pt3dadd( -5.79406, 5.57906, -17.0617, 0.73 ) }
    dend_36 { pt3dadd( -5.23358, 5.61332, -18.1121, 0.73 ) }
    dend_36 { pt3dadd( -4.73651, 5.61208, -19.0538, 0.73 ) }
    dend_36 { pt3dadd( -4.19772, 5.62649, -20.1678, 0.73 ) }
    dend_36 { pt3dadd( -6.59935, 5.15627, -14.4349, 0.66 ) }
    dend_36 { pt3dadd( -7.24296, 4.97588, -12.8531, 0.66 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 85/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 1.50782, 11.9964, -1.4, 0.88 ) }
    dend_31 { pt3dadd( 1.74556, 12.5146, -1.66977, 0.88 ) }
    dend_31 { pt3dadd( 2.25786, 13.5053, -2.15126, 0.88 ) }
    dend_31 { pt3dadd( 2.65529, 14.289, -2.45564, 0.88 ) }
    dend_31 { pt3dadd( 3.15852, 15.4119, -2.82226, 0.88 ) }
    dend_31 { pt3dadd( 3.48514, 16.1408, -3.0602, 1.31 ) }
    dend_31 { pt3dadd( 3.69463, 16.6083, -3.21283, 1.46 ) }
    dend_31 { pt3dadd( 4.37844, 18.0821, -3.65805, 0.8 ) }
    dend_31 { pt3dadd( 4.86322, 19.0968, -3.88765, 1.24 ) }
    dend_31 { pt3dadd( 5.30016, 20.017, -4.02877, 1.53 ) }
    // Section: dend_30, id: dend_30, parent: soma_0 (entry count 95/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.25782, 12.5716, -0.12, 0.36 ) }
    dend_30 { pt3dadd( 3.51174, 13.4224, 0.0656596, 0.36 ) }
    dend_30 { pt3dadd( 3.73587, 14.3816, 0.315334, 0.58 ) }
    dend_30 { pt3dadd( 3.91909, 15.3423, 0.570724, 0.29 ) }
    dend_30 { pt3dadd( 4.06381, 16.2589, 0.804875, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 4.1411, 16.8313, 0.974671, 0.07 ) }
    dend_30 { pt3dadd( 4.20431, 17.4008, 1.15557, 0.07 ) }
    dend_30 { pt3dadd( 4.21907, 18.3817, 1.58941, 0.36 ) }
    dend_30 { pt3dadd( 4.18236, 18.9598, 1.9814, 0.51 ) }
    dend_30 { pt3dadd( 4.13156, 19.5987, 2.50751, 0.51 ) }
    dend_30 { pt3dadd( 4.10385, 20.3547, 3.17349, 0.29 ) }
    dend_30 { pt3dadd( 4.09942, 20.6338, 3.41358, 0.44 ) }
    dend_30 { pt3dadd( 4.11172, 21.6551, 4.29683, 0.15 ) }
    dend_30 { pt3dadd( 4.18778, 23.1964, 5.64413, 0.07 ) }
    dend_30 { pt3dadd( 4.25942, 23.7888, 6.15269, 0.07 ) }
    dend_30 { pt3dadd( 4.34923, 24.2523, 6.51969, 0.07 ) }
    dend_30 { pt3dadd( 4.57335, 25.216, 7.20811, 0.07 ) }
    dend_30 { pt3dadd( 4.82716, 26.119, 7.78218, 0.07 ) }
    dend_30 { pt3dadd( 4.99911, 26.625, 8.01959, 0.07 ) }
    dend_30 { pt3dadd( 5.34965, 27.5457, 8.32607, 0.07 ) }
    dend_30 { pt3dadd( 5.55084, 28.039, 8.52179, 0.29 ) }
    // Section: dend_29, id: dend_29, parent: soma_0 (entry count 16/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -3.35218, 8.85683, 2.7, 1.31 ) }
    dend_29 { pt3dadd( -4.39698, 9.90266, 3.9456, 0.8 ) }
    dend_29 { pt3dadd( -5.03877, 10.6591, 4.65837, 0.58 ) }
    dend_29 { pt3dadd( -5.85315, 11.7927, 5.55034, 0.73 ) }
    dend_29 { pt3dadd( -6.45705, 12.8792, 6.27597, 0.73 ) }
    dend_29 { pt3dadd( -6.77845, 13.609, 6.70896, 0.88 ) }
    dend_29 { pt3dadd( -7.22527, 14.8761, 7.43719, 0.58 ) }
    dend_29 { pt3dadd( -7.44322, 16.0418, 7.96466, 0.36 ) }
    dend_29 { pt3dadd( -7.43071, 17.1516, 8.40587, 1.24 ) }
    dend_29 { pt3dadd( -7.07747, 18.603, 8.89408, 0.58 ) }
    dend_29 { pt3dadd( -6.74563, 19.1999, 9.0964, 0.58 ) }
    dend_29 { pt3dadd( -6.05844, 19.7456, 9.34179, 0.58 ) }
    dend_29 { pt3dadd( -5.19737, 20.0691, 9.54644, 0.58 ) }
    dend_29 { pt3dadd( -4.57336, 20.2102, 9.66992, 1.02 ) }
    dend_29 { pt3dadd( -3.81911, 20.3395, 9.79416, 1.02 ) }
    dend_29 { pt3dadd( -3.09713, 20.488, 9.92529, 1.24 ) }
    dend_29 { pt3dadd( -1.28324, 21.1087, 10.274, 0.66 ) }
    dend_29 { pt3dadd( -0.294082, 21.6567, 10.4735, 0.66 ) }
    dend_29 { pt3dadd( 0.289127, 22.1334, 10.6132, 0.95 ) }
    dend_29 { pt3dadd( 1.01705, 22.9523, 10.8154, 0.95 ) }
    dend_29 { pt3dadd( 1.93142, 24.3837, 11.1133, 0.51 ) }
    dend_29 { pt3dadd( 2.64011, 25.8908, 11.3667, 0.51 ) }
    dend_29 { pt3dadd( 3.08001, 27.1312, 11.5359, 0.73 ) }
    dend_29 { pt3dadd( 3.29941, 27.8027, 11.6159, 0.51 ) }
    dend_29 { pt3dadd( 3.5077, 28.3433, 11.6718, 0.8 ) }
    dend_29 { pt3dadd( 3.95852, 29.224, 11.7454, 0.8 ) }
    dend_29 { pt3dadd( 4.78096, 30.2405, 11.7824, 0.51 ) }
    dend_29 { pt3dadd( 5.43412, 30.7896, 11.8009, 0.51 ) }
    dend_29 { pt3dadd( 5.97553, 31.1662, 11.8129, 0.51 ) }
    dend_29 { pt3dadd( 7.42693, 32.1188, 11.8405, 0.8 ) }
    dend_29 { pt3dadd( 8.47281, 32.7924, 11.8678, 0.8 ) }
    dend_29 { pt3dadd( 9.6017, 33.5724, 11.9532, 0.51 ) }
    dend_29 { pt3dadd( 10.1034, 33.9948, 12.0456, 0.29 ) }
    dend_29 { pt3dadd( 10.5213, 34.4939, 12.1811, 0.07 ) }
    dend_29 { pt3dadd( 10.8585, 35.1263, 12.3728, 0.07 ) }
    dend_29 { pt3dadd( 11.1348, 36.0472, 12.7092, 0.8 ) }
    dend_29 { pt3dadd( 11.4037, 37.4218, 13.3219, 0.73 ) }
    dend_29 { pt3dadd( 11.567, 38.4491, 13.8519, 0.88 ) }
    dend_29 { pt3dadd( 11.7759, 39.5569, 14.488, 1.09 ) }
    dend_29 { pt3dadd( 11.9898, 40.4121, 15.0337, 0.73 ) }
    dend_29 { pt3dadd( 12.3618, 41.6151, 15.8788, 0.58 ) }
    dend_29 { pt3dadd( 12.6556, 42.395, 16.477, 0.58 ) }
    dend_29 { pt3dadd( 12.8736, 42.7439, 16.7719, 0.73 ) }
    dend_29 { pt3dadd( 13.3027, 43.1764, 17.1656, 0.73 ) }
    dend_29 { pt3dadd( 13.688, 43.4539, 17.427, 0.73 ) }
    dend_29 { pt3dadd( 13.8012, 43.5272, 17.484, 0.07 ) }
    dend_29 { pt3dadd( 14.2299, 43.8524, 17.6733, 0.07 ) }
    dend_29 { pt3dadd( 14.7872, 44.4062, 17.934, 0.07 ) }
    dend_29 { pt3dadd( 15.2789, 45.0145, 18.3016, 0.58 ) }
    dend_29 { pt3dadd( 15.8134, 45.7877, 18.8083, 0.88 ) }
    dend_29 { pt3dadd( 16.2346, 46.4396, 19.2888, 0.66 ) }
    dend_29 { pt3dadd( 16.7329, 47.2481, 19.9495, 0.66 ) }
    dend_29 { pt3dadd( 17.021, 47.7623, 20.3867, 1.17 ) }
    dend_29 { pt3dadd( 17.6837, 48.994, 21.4385, 0.07 ) }
    dend_29 { pt3dadd( 17.9832, 49.5129, 21.8769, 0.58 ) }
    dend_29 { pt3dadd( 18.4173, 50.2257, 22.4869, 0.22 ) }
    dend_29 { pt3dadd( 18.8401, 50.8658, 23.0661, 0.51 ) }
    dend_29 { pt3dadd( 19.2574, 51.4113, 23.5924, 0.51 ) }
    dend_29 { pt3dadd( 19.8198, 52.0362, 24.235, 0.36 ) }
    dend_29 { pt3dadd( 20.2935, 52.467, 24.6779, 0.36 ) }
    dend_29 { pt3dadd( 21.0689, 53.0238, 25.3725, 0.36 ) }
    dend_29 { pt3dadd( 22.0016, 53.5555, 26.1145, 0.88 ) }
    dend_29 { pt3dadd( 22.33, 53.7102, 26.3852, 0.88 ) }
    dend_29 { pt3dadd( 22.5897, 53.8281, 26.6195, 0.88 ) }
    dend_29 { pt3dadd( 22.8873, 53.9919, 26.8679, 0.88 ) }
    dend_29 { pt3dadd( 23.5387, 54.4877, 27.3105, 0.88 ) }
    dend_29 { pt3dadd( 24.0292, 54.9436, 27.541, 0.15 ) }
    dend_29 { pt3dadd( 24.8129, 55.7259, 27.7961, 0.15 ) }
    dend_29 { pt3dadd( 25.4463, 56.4032, 28.0099, 0.95 ) }
    dend_29 { pt3dadd( 26.5128, 57.6644, 28.417, 0.58 ) }
    dend_29 { pt3dadd( 27.1005, 58.4604, 28.6571, 0.58 ) }
    dend_29 { pt3dadd( 27.4138, 58.9494, 28.8042, 0.58 ) }
    dend_29 { pt3dadd( 27.9564, 59.9405, 29.1224, 0.88 ) }
    dend_29 { pt3dadd( 28.5041, 61.1903, 29.5625, 0.29 ) }
    dend_29 { pt3dadd( 28.8473, 62.2567, 30.004, 0.07 ) }
    dend_29 { pt3dadd( 29.0167, 63.1003, 30.4027, 0.66 ) }
    dend_29 { pt3dadd( 29.1674, 64.3512, 30.9053, 0.07 ) }
    dend_29 { pt3dadd( 29.2285, 65.2024, 31.1775, 0.66 ) }
    dend_29 { pt3dadd( 29.2721, 66.4186, 31.4658, 0.29 ) }
    dend_29 { pt3dadd( 29.2866, 66.764, 31.5137, 0.51 ) }
    dend_29 { pt3dadd( 29.365, 67.8325, 31.5867, 0.22 ) }
    dend_29 { pt3dadd( 29.5462, 69.4165, 31.612, 0.73 ) }
    dend_29 { pt3dadd( 29.6832, 70.4441, 31.5571, 0.07 ) }
    dend_29 { pt3dadd( 29.7924, 71.0779, 31.4917, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_29 { pt3dadd( 29.9295, 71.6992, 31.3956, 0.44 ) }
    dend_29 { pt3dadd( 30.0904, 72.3506, 31.3011, 0.07 ) }
    dend_29 { pt3dadd( 30.3271, 73.2609, 31.2013, 0.36 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 3/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 3.28782, 12.2889, -1.27, 1.68 ) }
    dend_18 { pt3dadd( 4.86366, 12.5363, -1.61425, 1.68 ) }
    dend_18 { pt3dadd( 6.0345, 12.7201, -1.87003, 1.68 ) }
    dend_18 { pt3dadd( 7.29437, 12.9179, -2.14526, 1.68 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 7/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.56218, 0.852082, -3.14, 1.97 ) }
    dend_13 { pt3dadd( -3.86795, 0.72666, -2.92786, 1.97 ) }
    dend_13 { pt3dadd( -4.68625, 0.658806, -2.8044, 1.97 ) }
    dend_13 { pt3dadd( -6.8201, 0.509306, -2.50572, 1.31 ) }
    dend_13 { pt3dadd( -8.56768, 0.435566, -2.27895, 1.02 ) }
    dend_13 { pt3dadd( -9.57543, 0.438532, -2.16054, 1.02 ) }
    dend_13 { pt3dadd( -10.4826, 0.48606, -2.06469, 1.02 ) }
    dend_13 { pt3dadd( -11.4476, 0.599283, -1.97712, 1.02 ) }
    dend_13 { pt3dadd( -12.1241, 0.714401, -1.92199, 1.02 ) }
    dend_13 { pt3dadd( -12.9219, 0.930494, -1.87735, 1.02 ) }
    dend_13 { pt3dadd( -14.1708, 1.35555, -1.87735, 1.02 ) }
    dend_13 { pt3dadd( -15.2569, 1.77046, -1.87735, 1.02 ) }
    dend_13 { pt3dadd( -16.7843, 2.44665, -1.87735, 2.12 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 20/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -3.76218, 7.90133, 3.27, 2.19 ) }
    dend_0 { pt3dadd( -4.72207, 8.62936, 3.2888, 2.19 ) }
    dend_0 { pt3dadd( -5.82071, 9.41318, 3.37472, 1.39 ) }
    dend_0 { pt3dadd( -6.55879, 9.90862, 3.33117, 1.46 ) }
    dend_0 { pt3dadd( -7.67849, 10.6005, 3.18612, 1.61 ) }
    dend_0 { pt3dadd( -8.53425, 11.0869, 3.03926, 1.61 ) }
    dend_0 { pt3dadd( -9.38594, 11.527, 2.85917, 1.61 ) }
    dend_0 { pt3dadd( -10.4452, 11.9953, 2.58792, 1.61 ) }
    dend_0 { pt3dadd( -12.6102, 12.8104, 1.96247, 1.61 ) }
    dend_0 { pt3dadd( -13.3308, 13.0531, 1.73101, 1.46 ) }
    dend_0 { pt3dadd( -14.2716, 13.3302, 1.39032, 1.17 ) }
    dend_0 { pt3dadd( -15.3975, 13.6256, 0.948662, 1.17 ) }
    dend_0 { pt3dadd( -16.946, 14.001, 0.305509, 1.39 ) }
    dend_0 { pt3dadd( -17.0195, 14.0184, 0.275263, 1.39 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 34/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.169505, 13.603, 0.0, 0.713328 ) }
    axon_0 { pt3dadd( -0.565205, 28.5978, 0.0, 0.713328 ) }
    axon_0 { pt3dadd( -0.960906, 43.5926, 0.0, 0.713328 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 37/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -1.27891, -9.21172, -6.96376, 0.36 ) }
    dend_45 { pt3dadd( -1.60827, -10.8527, -6.77186, 0.36 ) }
    dend_45 { pt3dadd( -2.09105, -12.1713, -6.46083, 0.36 ) }
    dend_45 { pt3dadd( -2.5565, -13.1952, -6.09536, 1.02 ) }
    dend_45 { pt3dadd( -2.82728, -13.7366, -5.87574, 1.02 ) }
    dend_45 { pt3dadd( -3.19322, -14.4554, -5.58612, 0.66 ) }
    dend_45 { pt3dadd( -3.8505, -15.7596, -4.99012, 0.36 ) }
    dend_45 { pt3dadd( -4.61645, -17.1325, -4.23473, 0.51 ) }
    dend_45 { pt3dadd( -5.21901, -18.1508, -3.63868, 0.95 ) }
    dend_45 { pt3dadd( -5.55553, -18.7135, -3.30216, 1.24 ) }
    dend_45 { pt3dadd( -6.28841, -20.0131, -2.57684, 0.95 ) }
    dend_45 { pt3dadd( -7.13238, -21.64, -1.78489, 0.95 ) }
    dend_45 { pt3dadd( -7.43375, -22.2951, -1.50535, 0.95 ) }
    dend_45 { pt3dadd( -7.92228, -23.456, -1.06527, 1.17 ) }
    dend_45 { pt3dadd( -8.51077, -24.8462, -0.573052, 0.51 ) }
    dend_45 { pt3dadd( -9.01437, -26.0299, -0.156326, 0.73 ) }
    dend_45 { pt3dadd( -9.5846, -27.3387, 0.279714, 0.66 ) }
    dend_45 { pt3dadd( -9.94609, -28.1706, 0.489127, 1.24 ) }
    dend_45 { pt3dadd( -10.3284, -29.0954, 0.730123, 1.53 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 56/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -1.27891, -9.21172, -6.96376, 0.36 ) }
    dend_44 { pt3dadd( -2.01636, -8.96086, -7.04584, 0.36 ) }
    dend_44 { pt3dadd( -2.65456, -8.81, -7.10492, 0.36 ) }
    dend_44 { pt3dadd( -3.697, -8.6459, -7.1819, 0.36 ) }
    dend_44 { pt3dadd( -4.41002, -8.56432, -7.22042, 0.36 ) }
    dend_44 { pt3dadd( -4.88034, -8.51307, -7.23701, 0.36 ) }
    dend_44 { pt3dadd( -5.68218, -8.41703, -7.21167, 0.36 ) }
    dend_44 { pt3dadd( -5.98808, -8.39324, -7.18212, 0.36 ) }
    dend_44 { pt3dadd( -6.45167, -8.37659, -7.10847, 0.51 ) }
    dend_44 { pt3dadd( -7.03729, -8.38244, -6.96553, 0.73 ) }
    dend_44 { pt3dadd( -7.68784, -8.40097, -6.79038, 0.73 ) }
    dend_44 { pt3dadd( -8.75319, -8.46813, -6.49134, 0.73 ) }
    dend_44 { pt3dadd( -9.25696, -8.52399, -6.34534, 0.88 ) }
    dend_44 { pt3dadd( -10.1968, -8.75056, -6.07839, 0.44 ) }
    dend_44 { pt3dadd( -11.4834, -9.27174, -5.7286, 0.36 ) }
    dend_44 { pt3dadd( -11.9571, -9.56023, -5.61053, 0.36 ) }
    dend_44 { pt3dadd( -12.4954, -9.99624, -5.48115, 0.36 ) }
    dend_44 { pt3dadd( -12.8329, -10.3196, -5.41018, 0.66 ) }
    dend_44 { pt3dadd( -13.7297, -11.2737, -5.21616, 0.29 ) }
    dend_44 { pt3dadd( -14.0978, -11.7032, -5.11478, 0.29 ) }
    dend_44 { pt3dadd( -14.4387, -12.1084, -5.01116, 0.29 ) }
    dend_44 { pt3dadd( -15.243, -13.0052, -4.73734, 0.29 ) }
    dend_44 { pt3dadd( -15.7972, -13.5438, -4.53793, 1.09 ) }
    dend_44 { pt3dadd( -16.0888, -13.8017, -4.42762, 1.09 ) }
    dend_44 { pt3dadd( -16.9564, -14.5304, -4.08981, 0.36 ) }
    dend_44 { pt3dadd( -17.5625, -15.0508, -3.86974, 1.02 ) }
    dend_44 { pt3dadd( -17.7445, -15.2192, -3.80755, 1.02 ) }
    dend_44 { pt3dadd( -18.6693, -16.213, -3.55962, 0.29 ) }
    dend_44 { pt3dadd( -18.9511, -16.5813, -3.50533, 0.29 ) }
    dend_44 { pt3dadd( -19.3392, -17.2236, -3.51033, 0.58 ) }
    dend_44 { pt3dadd( -19.906, -18.465, -3.66058, 0.22 ) }
    dend_44 { pt3dadd( -20.1938, -19.3277, -3.7895, 1.24 ) }
    dend_44 { pt3dadd( -20.4443, -20.306, -3.95127, 1.09 ) }
    dend_44 { pt3dadd( -20.6927, -21.5362, -4.17701, 1.09 ) }
    dend_44 { pt3dadd( -21.008, -23.1372, -4.47838, 0.29 ) }
    dend_44 { pt3dadd( -21.1889, -23.8629, -4.59837, 0.29 ) }
    dend_44 { pt3dadd( -21.4765, -24.7215, -4.71047, 0.29 ) }
    dend_44 { pt3dadd( -21.9573, -25.511, -4.75502, 0.66 ) }
    dend_44 { pt3dadd( -22.4412, -25.9683, -4.71661, 1.24 ) }
    dend_44 { pt3dadd( -22.7801, -26.1776, -4.67021, 1.24 ) }
    dend_44 { pt3dadd( -24.4637, -26.9483, -4.39335, 0.36 ) }
    dend_44 { pt3dadd( -25.1567, -27.2069, -4.29672, 0.66 ) }
    dend_44 { pt3dadd( -26.594, -27.6677, -4.1288, 0.29 ) }
    dend_44 { pt3dadd( -27.1704, -27.8348, -4.08068, 1.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_44 { pt3dadd( -27.6192, -27.9631, -4.05831, 1.24 ) }
    dend_44 { pt3dadd( -28.092, -28.0915, -4.05365, 1.24 ) }
    dend_44 { pt3dadd( -28.7205, -28.2396, -4.08898, 1.24 ) }
    dend_44 { pt3dadd( -29.5324, -28.3909, -4.17926, 0.22 ) }
    dend_44 { pt3dadd( -30.267, -28.5071, -4.30978, 0.22 ) }
    dend_44 { pt3dadd( -30.5073, -28.5246, -4.35685, 0.22 ) }
    dend_44 { pt3dadd( -31.1128, -28.5309, -4.47319, 0.22 ) }
    dend_44 { pt3dadd( -31.397, -28.5218, -4.5179, 0.22 ) }
    dend_44 { pt3dadd( -32.0437, -28.4644, -4.66079, 0.22 ) }
    dend_44 { pt3dadd( -32.5207, -28.4134, -4.77235, 0.51 ) }
    dend_44 { pt3dadd( -33.0315, -28.3831, -4.88817, 0.51 ) }
    dend_44 { pt3dadd( -33.4895, -28.3722, -5.00865, 0.51 ) }
    dend_44 { pt3dadd( -34.6203, -28.383, -5.38411, 0.29 ) }
    dend_44 { pt3dadd( -35.7789, -28.4066, -5.82653, 0.58 ) }
    dend_44 { pt3dadd( -36.4737, -28.4224, -6.1185, 0.88 ) }
    dend_44 { pt3dadd( -37.2788, -28.4413, -6.51508, 1.24 ) }
    dend_44 { pt3dadd( -38.2253, -28.4828, -7.06547, 0.51 ) }
    dend_44 { pt3dadd( -39.1509, -28.5459, -7.69302, 0.51 ) }
    dend_44 { pt3dadd( -39.7138, -28.6074, -8.1595, 0.29 ) }
    dend_44 { pt3dadd( -40.088, -28.6631, -8.50541, 0.29 ) }
    dend_44 { pt3dadd( -40.5705, -28.7353, -9.08193, 0.29 ) }
    dend_44 { pt3dadd( -40.8751, -28.7834, -9.56408, 0.29 ) }
    dend_44 { pt3dadd( -41.1427, -28.8807, -10.0979, 0.29 ) }
    dend_44 { pt3dadd( -41.4831, -29.0097, -10.5165, 0.29 ) }
    dend_44 { pt3dadd( -41.7567, -29.082, -10.6977, 0.29 ) }
    dend_44 { pt3dadd( -42.2569, -29.2416, -10.9635, 0.29 ) }
    dend_44 { pt3dadd( -42.5189, -29.3528, -11.0981, 0.51 ) }
    dend_44 { pt3dadd( -43.1782, -29.7148, -11.4692, 1.39 ) }
    dend_44 { pt3dadd( -44.2562, -30.4285, -12.0974, 0.29 ) }
    dend_44 { pt3dadd( -44.7411, -30.8528, -12.3847, 0.88 ) }
    dend_44 { pt3dadd( -45.5261, -31.709, -12.8829, 0.36 ) }
    dend_44 { pt3dadd( -46.197, -32.5954, -13.3375, 0.66 ) }
    dend_44 { pt3dadd( -46.7365, -33.4203, -13.7153, 1.53 ) }
    dend_44 { pt3dadd( -47.0088, -33.9061, -13.9051, 1.53 ) }
    dend_44 { pt3dadd( -47.6336, -35.1874, -14.2967, 0.07 ) }
    dend_44 { pt3dadd( -47.9184, -35.7941, -14.4518, 0.07 ) }
    dend_44 { pt3dadd( -48.1881, -36.3443, -14.5497, 1.17 ) }
    dend_44 { pt3dadd( -48.3533, -36.6665, -14.5942, 1.17 ) }
    dend_44 { pt3dadd( -48.66, -37.2719, -14.6785, 1.17 ) }
    dend_44 { pt3dadd( -49.144, -38.3492, -14.8597, 0.07 ) }
    dend_44 { pt3dadd( -49.323, -38.8594, -15.0262, 0.22 ) }
    dend_44 { pt3dadd( -49.5073, -39.5463, -15.3197, 0.22 ) }
    dend_44 { pt3dadd( -49.6451, -40.2829, -15.6857, 0.51 ) }
    dend_44 { pt3dadd( -49.7013, -40.9001, -16.0234, 1.24 ) }
    dend_44 { pt3dadd( -49.6947, -41.5745, -16.4507, 1.24 ) }
    dend_44 { pt3dadd( -49.563, -43.3427, -17.6996, 0.44 ) }
    dend_44 { pt3dadd( -49.5089, -43.7357, -17.9898, 0.29 ) }
    dend_44 { pt3dadd( -49.4475, -44.1396, -18.3004, 0.07 ) }
    dend_44 { pt3dadd( -49.4037, -44.4943, -18.5773, 0.07 ) }
    dend_44 { pt3dadd( -49.3922, -45.1082, -19.0942, 0.07 ) }
    dend_44 { pt3dadd( -49.4548, -45.5047, -19.4422, 0.07 ) }
    dend_44 { pt3dadd( -49.7615, -46.2727, -20.0413, 1.17 ) }
    dend_44 { pt3dadd( -50.2671, -46.8906, -20.659, 0.07 ) }
    dend_44 { pt3dadd( -50.5585, -47.1164, -20.9204, 0.07 ) }
    dend_44 { pt3dadd( -51.2824, -47.5626, -21.4136, 0.07 ) }
    dend_44 { pt3dadd( -51.8775, -47.8778, -21.7311, 0.44 ) }
    dend_44 { pt3dadd( -52.254, -48.0584, -21.9069, 1.24 ) }
    dend_44 { pt3dadd( -53.3472, -48.5807, -22.3733, 0.15 ) }
    dend_44 { pt3dadd( -53.6087, -48.7277, -22.4563, 0.29 ) }
    dend_44 { pt3dadd( -54.3101, -49.2028, -22.6176, 0.07 ) }
    dend_44 { pt3dadd( -54.6865, -49.4833, -22.6917, 0.66 ) }
    dend_44 { pt3dadd( -54.9393, -49.6759, -22.7415, 0.66 ) }
    dend_44 { pt3dadd( -55.8451, -50.399, -22.8956, 0.22 ) }
    dend_44 { pt3dadd( -56.7928, -51.1693, -23.0716, 0.88 ) }
    dend_44 { pt3dadd( -57.5416, -51.7848, -23.2613, 1.09 ) }
    dend_44 { pt3dadd( -58.648, -52.7004, -23.5823, 0.22 ) }
    dend_44 { pt3dadd( -59.1085, -53.0883, -23.7239, 0.22 ) }
    dend_44 { pt3dadd( -60.1276, -53.9558, -24.0927, 2.12 ) }
    dend_44 { pt3dadd( -61.7772, -55.4476, -24.7578, 0.36 ) }
    dend_44 { pt3dadd( -62.6522, -56.2847, -25.1962, 0.15 ) }
    dend_44 { pt3dadd( -63.0855, -56.7155, -25.4269, 0.8 ) }
    dend_44 { pt3dadd( -63.4607, -57.1048, -25.6232, 0.8 ) }
    dend_44 { pt3dadd( -64.726, -58.4329, -26.3228, 0.15 ) }
    dend_44 { pt3dadd( -65.7165, -59.447, -26.8961, 1.75 ) }
    dend_44 { pt3dadd( -67.1703, -60.9123, -27.6684, 0.07 ) }
    dend_44 { pt3dadd( -67.6207, -61.354, -27.8853, 0.07 ) }
    dend_44 { pt3dadd( -68.4908, -62.1792, -28.2997, 0.36 ) }
    dend_44 { pt3dadd( -69.1778, -62.8059, -28.6423, 0.07 ) }
    dend_44 { pt3dadd( -70.3968, -63.8726, -29.2385, 1.02 ) }
    dend_44 { pt3dadd( -71.8788, -65.0603, -30.0014, 0.07 ) }
    dend_44 { pt3dadd( -72.4937, -65.5364, -30.3137, 0.36 ) }
    dend_44 { pt3dadd( -73.5319, -66.3311, -30.8521, 0.07 ) }
    dend_44 { pt3dadd( -74.7347, -67.2613, -31.4783, 0.36 ) }
    dend_44 { pt3dadd( -75.2044, -67.6413, -31.7128, 1.17 ) }
    dend_44 { pt3dadd( -76.6622, -68.9446, -32.4264, 0.44 ) }
    dend_44 { pt3dadd( -77.3144, -69.5961, -32.7767, 0.15 ) }
    dend_44 { pt3dadd( -77.7851, -70.1075, -33.0154, 0.15 ) }
    dend_44 { pt3dadd( -78.2264, -70.6392, -33.2014, 0.15 ) }
    dend_44 { pt3dadd( -78.8127, -71.3948, -33.4003, 0.15 ) }
    dend_44 { pt3dadd( -79.6765, -72.5423, -33.6693, 0.44 ) }
    dend_44 { pt3dadd( -80.4364, -73.5528, -33.9236, 0.07 ) }
    dend_44 { pt3dadd( -80.932, -74.0849, -34.0899, 0.07 ) }
    dend_44 { pt3dadd( -81.6989, -74.7203, -34.3142, 0.07 ) }
    dend_44 { pt3dadd( -82.2185, -75.0513, -34.4349, 0.07 ) }
    dend_44 { pt3dadd( -83.6836, -75.7825, -34.6943, 0.36 ) }
    dend_44 { pt3dadd( -85.025, -76.3218, -34.8912, 0.07 ) }
    dend_44 { pt3dadd( -87.2001, -77.0897, -35.1339, 0.07 ) }
    dend_44 { pt3dadd( -88.6091, -77.5589, -35.2755, 0.36 ) }
    dend_44 { pt3dadd( -90.302, -78.0806, -35.418, 0.15 ) }
    dend_44 { pt3dadd( -91.5792, -78.4564, -35.4594, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_44 { pt3dadd( -93.4233, -78.968, -35.4011, 0.15 ) }
    dend_44 { pt3dadd( -94.9792, -79.3485, -35.2405, 0.15 ) }
    dend_44 { pt3dadd( -95.7175, -79.5026, -35.1412, 0.15 ) }
    dend_44 { pt3dadd( -96.6791, -79.6687, -34.9968, 0.15 ) }
    dend_44 { pt3dadd( -98.1246, -79.8883, -34.7559, 0.15 ) }
    dend_44 { pt3dadd( -99.6612, -80.0868, -34.4699, 0.58 ) }
    dend_44 { pt3dadd( -103.783, -80.4677, -33.5972, 0.07 ) }
    dend_44 { pt3dadd( -104.872, -80.5335, -33.3691, 0.07 ) }
    dend_44 { pt3dadd( -106.626, -80.5927, -33.0272, 0.22 ) }
    dend_44 { pt3dadd( -113.575, -84.1705, -33.9775, 0.22 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 10/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 10.4844, -19.5646, 9.23886, 1.02 ) }
    dend_42 { pt3dadd( 11.2858, -20.9523, 8.95296, 1.02 ) }
    dend_42 { pt3dadd( 12.1388, -22.1755, 8.78067, 0.88 ) }
    dend_42 { pt3dadd( 13.0998, -23.49, 8.73252, 0.73 ) }
    dend_42 { pt3dadd( 13.9298, -24.6537, 8.83973, 0.58 ) }
    dend_42 { pt3dadd( 15.0106, -26.2894, 9.14537, 0.88 ) }
    dend_42 { pt3dadd( 15.7811, -27.5247, 9.50154, 0.88 ) }
    dend_42 { pt3dadd( 16.7888, -29.1797, 10.1963, 0.66 ) }
    dend_42 { pt3dadd( 17.4991, -30.4555, 10.8421, 0.36 ) }
    dend_42 { pt3dadd( 18.3252, -32.1367, 11.9405, 1.02 ) }
    dend_42 { pt3dadd( 18.9658, -33.7275, 13.1422, 0.36 ) }
    dend_42 { pt3dadd( 19.4812, -35.3382, 14.4964, 0.88 ) }
    dend_42 { pt3dadd( 19.7541, -36.4552, 15.5027, 0.88 ) }
    dend_42 { pt3dadd( 19.8635, -37.0378, 16.0286, 0.88 ) }
    dend_42 { pt3dadd( 20.3131, -39.4432, 18.1593, 0.58 ) }
    dend_42 { pt3dadd( 20.4474, -40.101, 18.7198, 0.58 ) }
    dend_42 { pt3dadd( 20.5623, -40.5908, 19.0907, 0.73 ) }
    dend_42 { pt3dadd( 20.8451, -41.7828, 19.7662, 0.44 ) }
    dend_42 { pt3dadd( 21.1045, -42.8518, 20.1941, 0.15 ) }
    dend_42 { pt3dadd( 21.68, -45.1513, 20.7288, 1.09 ) }
    dend_42 { pt3dadd( 21.9545, -46.2305, 20.8049, 1.09 ) }
    dend_42 { pt3dadd( 22.5637, -48.4204, 20.8192, 0.44 ) }
    dend_42 { pt3dadd( 23.0835, -50.2863, 20.7419, 0.22 ) }
    dend_42 { pt3dadd( 23.429, -51.6636, 20.6249, 0.66 ) }
    dend_42 { pt3dadd( 23.7648, -53.0201, 20.5395, 0.66 ) }
    dend_42 { pt3dadd( 24.1543, -54.5064, 20.5199, 0.8 ) }
    dend_42 { pt3dadd( 24.5792, -56.0219, 20.6899, 0.8 ) }
    dend_42 { pt3dadd( 25.0678, -57.6186, 21.0794, 0.66 ) }
    dend_42 { pt3dadd( 25.8039, -59.7799, 21.9149, 0.66 ) }
    dend_42 { pt3dadd( 26.4342, -61.5344, 22.7578, 0.36 ) }
    dend_42 { pt3dadd( 27.0838, -63.3536, 23.7655, 0.51 ) }
    dend_42 { pt3dadd( 27.6639, -64.979, 24.7353, 0.73 ) }
    dend_42 { pt3dadd( 28.1013, -66.1928, 25.4745, 0.36 ) }
    dend_42 { pt3dadd( 28.6399, -67.6322, 26.3372, 0.8 ) }
    dend_42 { pt3dadd( 28.8617, -68.2248, 26.6788, 1.09 ) }
    dend_42 { pt3dadd( 29.05, -68.8225, 26.9557, 0.88 ) }
    dend_42 { pt3dadd( 29.4244, -70.2809, 27.509, 0.36 ) }
    dend_42 { pt3dadd( 29.7372, -71.6373, 27.9212, 0.07 ) }
    dend_42 { pt3dadd( 30.0476, -73.0934, 28.3136, 0.51 ) }
    dend_42 { pt3dadd( 30.2263, -73.9168, 28.4734, 0.73 ) }
    dend_42 { pt3dadd( 30.5625, -75.2626, 28.5974, 0.88 ) }
    dend_42 { pt3dadd( 31.214, -77.4701, 28.5791, 0.29 ) }
    dend_42 { pt3dadd( 31.5311, -78.448, 28.478, 0.22 ) }
    dend_42 { pt3dadd( 31.9217, -79.652, 28.2571, 0.36 ) }
    dend_42 { pt3dadd( 32.4474, -81.1759, 27.8571, 0.8 ) }
    dend_42 { pt3dadd( 33.2532, -83.243, 27.2068, 0.22 ) }
    dend_42 { pt3dadd( 33.6565, -84.157, 26.9128, 0.22 ) }
    dend_42 { pt3dadd( 33.8995, -84.6908, 26.7439, 0.22 ) }
    dend_42 { pt3dadd( 34.3491, -85.7601, 26.4752, 0.22 ) }
    dend_42 { pt3dadd( 34.8175, -87.0482, 26.2495, 0.58 ) }
    dend_42 { pt3dadd( 35.1657, -88.1778, 26.1514, 0.8 ) }
    dend_42 { pt3dadd( 35.7286, -90.4216, 26.1079, 0.29 ) }
    dend_42 { pt3dadd( 36.2229, -92.6825, 26.16, 0.29 ) }
    dend_42 { pt3dadd( 36.405, -93.6472, 26.2311, 0.8 ) }
    dend_42 { pt3dadd( 36.6137, -95.1162, 26.4153, 0.95 ) }
    dend_42 { pt3dadd( 36.742, -96.8459, 26.7391, 1.17 ) }
    dend_42 { pt3dadd( 36.7198, -98.9499, 27.2065, 0.58 ) }
    dend_42 { pt3dadd( 36.566, -100.478, 27.6113, 0.15 ) }
    dend_42 { pt3dadd( 36.4021, -101.49, 27.8917, 0.15 ) }
    dend_42 { pt3dadd( 36.2598, -102.226, 28.0118, 0.15 ) }
    dend_42 { pt3dadd( 36.047, -103.287, 28.0692, 0.36 ) }
    dend_42 { pt3dadd( 35.6379, -105.419, 27.9504, 0.36 ) }
    dend_42 { pt3dadd( 35.4744, -106.593, 27.795, 0.88 ) }
    dend_42 { pt3dadd( 35.3554, -108.087, 27.5135, 0.88 ) }
    dend_42 { pt3dadd( 35.3443, -110.818, 26.9172, 1.61 ) }
    dend_42 { pt3dadd( 35.4662, -112.359, 26.5656, 0.36 ) }
    dend_42 { pt3dadd( 35.749, -114.006, 26.1953, 0.88 ) }
    dend_42 { pt3dadd( 36.3542, -116.267, 25.7142, 0.51 ) }
    dend_42 { pt3dadd( 36.836, -117.706, 25.4159, 0.36 ) }
    dend_42 { pt3dadd( 37.2535, -118.756, 25.2236, 0.58 ) }
    dend_42 { pt3dadd( 37.8359, -119.999, 24.9973, 0.07 ) }
    dend_42 { pt3dadd( 38.7674, -121.842, 24.5758, 1.31 ) }
    dend_42 { pt3dadd( 39.6256, -123.52, 24.118, 0.44 ) }
    dend_42 { pt3dadd( 39.9994, -124.316, 23.8841, 0.15 ) }
    dend_42 { pt3dadd( 40.1971, -124.819, 23.7542, 0.44 ) }
    dend_42 { pt3dadd( 40.8049, -126.669, 23.344, 0.22 ) }
    dend_42 { pt3dadd( 41.1358, -127.803, 23.1165, 0.22 ) }
    dend_42 { pt3dadd( 41.631, -129.543, 22.8008, 1.68 ) }
    dend_42 { pt3dadd( 42.1033, -131.31, 22.5434, 0.88 ) }
    dend_42 { pt3dadd( 42.6703, -133.645, 22.2868, 0.36 ) }
    dend_42 { pt3dadd( 43.1787, -135.964, 22.1363, 1.24 ) }
    dend_42 { pt3dadd( 43.7415, -138.64, 22.0666, 0.07 ) }
    dend_42 { pt3dadd( 44.0437, -139.984, 22.0508, 0.07 ) }
    dend_42 { pt3dadd( 44.4381, -141.612, 22.0505, 1.17 ) }
    dend_42 { pt3dadd( 44.8085, -143.149, 22.059, 1.39 ) }
    dend_42 { pt3dadd( 45.3832, -145.508, 22.0925, 0.51 ) }
    dend_42 { pt3dadd( 45.7917, -147.15, 22.1368, 0.22 ) }
    dend_42 { pt3dadd( 46.389, -149.599, 22.2459, 1.82 ) }
    dend_42 { pt3dadd( 46.6929, -150.877, 22.3261, 1.82 ) }
    dend_42 { pt3dadd( 47.2553, -153.315, 22.5231, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_42 { pt3dadd( 47.6424, -155.161, 22.7162, 0.15 ) }
    dend_42 { pt3dadd( 47.8771, -156.622, 22.9323, 0.66 ) }
    dend_42 { pt3dadd( 48.0066, -157.978, 23.2065, 0.66 ) }
    dend_42 { pt3dadd( 48.0738, -159.156, 23.543, 0.36 ) }
    dend_42 { pt3dadd( 48.1802, -160.538, 24.002, 1.02 ) }
    dend_42 { pt3dadd( 48.2761, -161.491, 24.3573, 1.02 ) }
    dend_42 { pt3dadd( 48.562, -163.593, 25.2094, 0.07 ) }
    dend_42 { pt3dadd( 48.8316, -164.673, 25.6676, 0.66 ) }
    dend_42 { pt3dadd( 49.5778, -166.656, 26.4857, 0.07 ) }
    dend_42 { pt3dadd( 50.3936, -168.247, 27.0784, 0.07 ) }
    dend_42 { pt3dadd( 50.673, -168.67, 27.2231, 0.36 ) }
    dend_42 { pt3dadd( 51.9796, -170.31, 27.6764, 0.07 ) }
    dend_42 { pt3dadd( 53.8447, -172.256, 28.0389, 1.39 ) }
    dend_42 { pt3dadd( 54.5546, -172.913, 28.0846, 1.39 ) }
    dend_42 { pt3dadd( 55.9027, -174.064, 28.0232, 0.07 ) }
    dend_42 { pt3dadd( 56.7085, -174.695, 27.943, 0.36 ) }
    dend_42 { pt3dadd( 58.7244, -176.105, 27.6175, 0.15 ) }
    dend_42 { pt3dadd( 59.8237, -176.783, 27.3635, 0.73 ) }
    dend_42 { pt3dadd( 61.8294, -177.94, 26.805, 0.07 ) }
    dend_42 { pt3dadd( 63.236, -178.784, 26.4183, 0.07 ) }
    dend_42 { pt3dadd( 64.2806, -179.474, 26.1404, 0.36 ) }
    dend_42 { pt3dadd( 65.4606, -180.386, 25.8476, 0.22 ) }
    dend_42 { pt3dadd( 66.203, -181.152, 25.6114, 0.22 ) }
    dend_42 { pt3dadd( 67.1452, -182.478, 25.246, 0.51 ) }
    dend_42 { pt3dadd( 68.0606, -184.326, 24.814, 0.15 ) }
    dend_42 { pt3dadd( 68.7432, -186.019, 24.4513, 0.15 ) }
    dend_42 { pt3dadd( 69.4988, -188.392, 23.9919, 0.58 ) }
    dend_42 { pt3dadd( 70.2683, -191.603, 23.4221, 0.07 ) }
    dend_42 { pt3dadd( 70.4203, -192.472, 23.269, 0.07 ) }
    dend_42 { pt3dadd( 70.5758, -193.924, 22.9898, 0.73 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 10.4844, -19.5646, 9.23886, 0.51 ) }
    dend_41 { pt3dadd( 11.4469, -19.8336, 10.4666, 0.51 ) }
    dend_41 { pt3dadd( 12.7566, -20.2144, 12.3933, 0.51 ) }
    dend_41 { pt3dadd( 13.3559, -20.3467, 13.3457, 0.51 ) }
    dend_41 { pt3dadd( 13.6475, -20.3717, 13.8375, 0.51 ) }
    dend_41 { pt3dadd( 14.0598, -20.344, 14.5758, 0.51 ) }
    dend_41 { pt3dadd( 14.5098, -20.2362, 15.5076, 0.51 ) }
    dend_41 { pt3dadd( 14.6404, -20.1152, 15.9931, 0.51 ) }
    dend_41 { pt3dadd( 14.6687, -19.7777, 16.8206, 0.51 ) }
    dend_41 { pt3dadd( 14.5754, -19.4274, 17.7878, 0.51 ) }
    dend_41 { pt3dadd( 14.4473, -19.3103, 18.4833, 0.66 ) }
    dend_41 { pt3dadd( 14.1442, -19.4243, 19.4406, 0.51 ) }
    dend_41 { pt3dadd( 14.021, -19.5533, 19.7344, 0.51 ) }
    dend_41 { pt3dadd( 13.7691, -19.8933, 20.2972, 0.51 ) }
    dend_41 { pt3dadd( 13.2982, -20.7537, 21.4841, 0.51 ) }
    dend_41 { pt3dadd( 12.9139, -21.7125, 22.6546, 0.29 ) }
    dend_41 { pt3dadd( 12.747, -22.3712, 23.5157, 0.66 ) }
    dend_41 { pt3dadd( 12.5934, -23.4375, 25.0875, 0.36 ) }
    dend_41 { pt3dadd( 12.5803, -23.6944, 25.607, 0.36 ) }
    dend_41 { pt3dadd( 12.6244, -24.1856, 27.1634, 0.58 ) }
    dend_41 { pt3dadd( 12.6688, -24.2641, 27.7416, 0.51 ) }
    dend_41 { pt3dadd( 12.9, -24.2474, 29.8627, 0.51 ) }
    dend_41 { pt3dadd( 12.9945, -24.165, 30.6565, 0.51 ) }
    dend_41 { pt3dadd( 13.1944, -23.9532, 32.2875, 0.51 ) }
    dend_41 { pt3dadd( 13.2635, -23.9041, 32.8101, 0.51 ) }
    dend_41 { pt3dadd( 13.2897, -23.8969, 33.0545, 0.51 ) }
    dend_41 { pt3dadd( 13.4378, -24.0714, 34.1054, 0.51 ) }
    dend_41 { pt3dadd( 13.6124, -24.3936, 34.6618, 0.51 ) }
    dend_41 { pt3dadd( 14.4714, -25.8097, 36.2048, 0.51 ) }
    dend_41 { pt3dadd( 14.9459, -26.5004, 36.7396, 0.29 ) }
    dend_41 { pt3dadd( 15.2425, -26.8417, 37.0364, 0.29 ) }
    dend_41 { pt3dadd( 16.1941, -27.764, 37.9281, 0.29 ) }
    dend_41 { pt3dadd( 16.9615, -28.3684, 38.5649, 0.44 ) }
    dend_41 { pt3dadd( 17.7504, -28.8376, 39.1788, 0.22 ) }
    dend_41 { pt3dadd( 18.5522, -29.1636, 39.7315, 0.44 ) }
    dend_41 { pt3dadd( 20.5214, -29.5955, 41.2749, 0.29 ) }
    dend_41 { pt3dadd( 21.3564, -29.5583, 42.0723, 0.07 ) }
    dend_41 { pt3dadd( 21.6212, -29.4889, 42.3886, 0.07 ) }
    dend_41 { pt3dadd( 21.8754, -29.4113, 42.7049, 0.07 ) }
    dend_41 { pt3dadd( 22.311, -29.3476, 43.1795, 0.07 ) }
    dend_41 { pt3dadd( 22.9358, -29.4368, 43.7424, 0.36 ) }
    dend_41 { pt3dadd( 24.0165, -29.7576, 44.559, 0.51 ) }
    dend_41 { pt3dadd( 25.0193, -30.0957, 45.3031, 0.51 ) }
    dend_41 { pt3dadd( 25.8846, -30.4199, 45.9613, 0.15 ) }
    dend_41 { pt3dadd( 26.8005, -30.7814, 46.6768, 0.07 ) }
    dend_41 { pt3dadd( 27.8127, -31.1548, 47.467, 0.07 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 76/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -7.24296, 4.97588, -12.8531, 0.36 ) }
    dend_38 { pt3dadd( -7.49129, 5.79275, -13.1774, 0.36 ) }
    dend_38 { pt3dadd( -7.7422, 6.73687, -13.4814, 0.36 ) }
    dend_38 { pt3dadd( -7.89247, 7.33308, -13.6821, 0.36 ) }
    dend_38 { pt3dadd( -8.00706, 7.84961, -13.8521, 0.36 ) }
    dend_38 { pt3dadd( -8.16545, 8.65901, -14.1121, 0.58 ) }
    dend_38 { pt3dadd( -8.29157, 9.42351, -14.3517, 0.73 ) }
    dend_38 { pt3dadd( -8.4766, 10.685, -14.7092, 0.73 ) }
    dend_38 { pt3dadd( -8.62174, 11.8097, -14.9968, 0.36 ) }
    dend_38 { pt3dadd( -8.71458, 12.6256, -15.2001, 0.15 ) }
    dend_38 { pt3dadd( -8.80595, 13.354, -15.3639, 0.15 ) }
    dend_38 { pt3dadd( -8.88549, 13.8751, -15.4634, 0.15 ) }
    dend_38 { pt3dadd( -8.99427, 14.4833, -15.5663, 0.15 ) }
    dend_38 { pt3dadd( -9.17561, 15.1779, -15.637, 0.15 ) }
    dend_38 { pt3dadd( -9.42773, 15.9838, -15.6729, 0.88 ) }
    dend_38 { pt3dadd( -9.94689, 17.4469, -15.7091, 0.07 ) }
    dend_38 { pt3dadd( -10.385, 18.6017, -15.7214, 0.8 ) }
    dend_38 { pt3dadd( -10.6051, 19.1267, -15.7228, 0.8 ) }
    dend_38 { pt3dadd( -11.4342, 20.8848, -15.713, 0.07 ) }
    dend_38 { pt3dadd( -11.9292, 21.8488, -15.7012, 0.07 ) }
    dend_38 { pt3dadd( -12.4904, 22.8753, -15.6836, 1.02 ) }
    dend_38 { pt3dadd( -12.6569, 23.1605, -15.6791, 1.02 ) }
    dend_38 { pt3dadd( -13.4234, 24.4506, -15.6779, 0.07 ) }
    dend_38 { pt3dadd( -13.9505, 25.3831, -15.7111, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_38 { pt3dadd( -14.2241, 25.9305, -15.7585, 0.07 ) }
    dend_38 { pt3dadd( -14.5071, 26.564, -15.8604, 0.66 ) }
    dend_38 { pt3dadd( -14.6733, 27.0331, -15.9669, 0.66 ) }
    dend_38 { pt3dadd( -14.9799, 28.2354, -16.2984, 0.07 ) }
    dend_38 { pt3dadd( -15.1057, 29.0381, -16.5593, 0.07 ) }
    dend_38 { pt3dadd( -15.1711, 29.6456, -16.7953, 1.61 ) }
    dend_38 { pt3dadd( -15.3251, 30.9115, -17.3359, 0.07 ) }
    dend_38 { pt3dadd( -15.4321, 31.5777, -17.6383, 0.07 ) }
    dend_38 { pt3dadd( -15.5685, 32.2169, -17.9322, 0.07 ) }
    dend_38 { pt3dadd( -15.809, 33.0617, -18.3133, 0.36 ) }
    dend_38 { pt3dadd( -16.116, 33.8461, -18.6432, 0.07 ) }
    dend_38 { pt3dadd( -16.5453, 34.6699, -18.8987, 0.73 ) }
    dend_38 { pt3dadd( -17.4868, 36.0229, -19.2309, 0.07 ) }
    dend_38 { pt3dadd( -18.386, 37.031, -19.3909, 0.07 ) }
    dend_38 { pt3dadd( -19.1366, 37.7077, -19.4364, 0.07 ) }
    dend_38 { pt3dadd( -20.383, 38.5898, -19.3894, 0.07 ) }
    dend_38 { pt3dadd( -22.3553, 39.6435, -19.1701, 1.09 ) }
    dend_38 { pt3dadd( -23.8533, 40.237, -18.9521, 0.07 ) }
    dend_38 { pt3dadd( -25.5601, 40.754, -18.6533, 0.07 ) }
    dend_38 { pt3dadd( -26.2656, 40.9457, -18.5249, 0.07 ) }
    dend_38 { pt3dadd( -27.3461, 41.2424, -18.3349, 0.88 ) }
    dend_38 { pt3dadd( -29.336, 41.8471, -18.0212, 0.07 ) }
    dend_38 { pt3dadd( -30.614, 42.3105, -17.8897, 0.07 ) }
    dend_38 { pt3dadd( -30.908, 42.4676, -17.8649, 0.73 ) }
    dend_38 { pt3dadd( -31.9851, 43.25, -17.865, 0.07 ) }
    dend_38 { pt3dadd( -32.5144, 43.7473, -17.8766, 0.07 ) }
    dend_38 { pt3dadd( -32.924, 44.2496, -17.8976, 0.73 ) }
    dend_38 { pt3dadd( -33.0543, 44.4633, -17.9097, 0.73 ) }
    dend_38 { pt3dadd( -33.7679, 45.8406, -17.94, 0.07 ) }
    dend_38 { pt3dadd( -34.0651, 46.4068, -17.9336, 0.07 ) }
    dend_38 { pt3dadd( -34.2361, 46.7239, -17.9214, 0.22 ) }
    dend_38 { pt3dadd( -34.4606, 47.1043, -17.899, 0.22 ) }
    dend_38 { pt3dadd( -35.0366, 48.0062, -17.8285, 0.07 ) }
    dend_38 { pt3dadd( -35.6884, 48.9599, -17.7384, 0.88 ) }
    dend_38 { pt3dadd( -36.5725, 50.119, -17.6669, 0.07 ) }
    dend_38 { pt3dadd( -36.9938, 50.6228, -17.6644, 0.36 ) }
    dend_38 { pt3dadd( -37.4988, 51.1611, -17.7381, 0.07 ) }
    dend_38 { pt3dadd( -37.9762, 51.5957, -17.853, 0.29 ) }
    dend_38 { pt3dadd( -38.115, 51.7, -17.8956, 0.29 ) }
    dend_38 { pt3dadd( -39.4976, 52.5586, -18.3939, 0.07 ) }
    dend_38 { pt3dadd( -40.4084, 53.0018, -18.718, 1.02 ) }
    dend_38 { pt3dadd( -41.9601, 53.71, -19.3, 0.07 ) }
    dend_38 { pt3dadd( -42.7533, 54.0471, -19.6116, 0.07 ) }
    dend_38 { pt3dadd( -43.3561, 54.2699, -19.8491, 0.07 ) }
    dend_38 { pt3dadd( -43.8671, 54.4267, -20.0366, 0.07 ) }
    dend_38 { pt3dadd( -45.0149, 54.5837, -20.3505, 0.36 ) }
    dend_38 { pt3dadd( -49.6968, 60.6586, -20.9727, 0.36 ) }
    dend_38 { pt3dadd( -54.4262, 66.6241, -22.1073, 0.36 ) }
    dend_38 { pt3dadd( -60.3593, 71.5572, -22.6474, 0.36 ) }
    dend_38 { pt3dadd( -65.9781, 76.7967, -21.7943, 0.36 ) }
    dend_38 { pt3dadd( -71.2832, 82.3799, -22.2436, 0.36 ) }
    dend_38 { pt3dadd( -76.3044, 88.1634, -21.3436, 0.36 ) }
    dend_38 { pt3dadd( -80.9663, 94.269, -20.8447, 0.36 ) }
    dend_38 { pt3dadd( -85.5148, 100.313, -19.3924, 0.36 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 54/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -7.24296, 4.97588, -12.8531, 0.36 ) }
    dend_37 { pt3dadd( -7.2402, 3.9747, -13.4272, 0.36 ) }
    dend_37 { pt3dadd( -7.24845, 2.56446, -14.054, 0.36 ) }
    dend_37 { pt3dadd( -7.29476, 0.742829, -14.6528, 0.36 ) }
    dend_37 { pt3dadd( -7.33338, -0.236148, -14.8786, 1.17 ) }
    dend_37 { pt3dadd( -7.43087, -1.77642, -15.1372, 1.17 ) }
    dend_37 { pt3dadd( -7.59791, -3.66973, -15.3731, 1.17 ) }
    dend_37 { pt3dadd( -7.74216, -4.82682, -15.4057, 1.17 ) }
    dend_37 { pt3dadd( -8.02563, -6.46494, -15.2866, 1.17 ) }
    dend_37 { pt3dadd( -8.44135, -8.25532, -15.0204, 1.31 ) }
    dend_37 { pt3dadd( -8.74606, -9.29444, -14.8313, 0.22 ) }
    dend_37 { pt3dadd( -9.05801, -10.1072, -14.6436, 0.22 ) }
    dend_37 { pt3dadd( -9.61827, -11.1975, -14.367, 0.22 ) }
    dend_37 { pt3dadd( -10.3999, -12.3808, -14.0364, 0.22 ) }
    dend_37 { pt3dadd( -11.1375, -13.2341, -13.7674, 0.22 ) }
    dend_37 { pt3dadd( -11.6304, -13.6874, -13.6068, 0.22 ) }
    dend_37 { pt3dadd( -12.4338, -14.3714, -13.3539, 0.66 ) }
    dend_37 { pt3dadd( -13.2183, -15.0237, -13.1096, 0.95 ) }
    dend_37 { pt3dadd( -13.9418, -15.6195, -12.887, 0.73 ) }
    dend_37 { pt3dadd( -14.8596, -16.3869, -12.6044, 0.07 ) }
    dend_37 { pt3dadd( -16.0518, -17.4664, -12.2256, 0.8 ) }
    dend_37 { pt3dadd( -17.1692, -18.5921, -11.8532, 0.36 ) }
    dend_37 { pt3dadd( -17.984, -19.5132, -11.5663, 0.07 ) }
    dend_37 { pt3dadd( -19.0054, -20.8117, -11.2474, 0.15 ) }
    dend_37 { pt3dadd( -19.2096, -21.103, -11.1913, 0.15 ) }
    dend_37 { pt3dadd( -19.8592, -22.1534, -11.0394, 0.07 ) }
    dend_37 { pt3dadd( -20.2071, -22.9208, -10.9704, 0.07 ) }
    dend_37 { pt3dadd( -20.4211, -23.7297, -10.972, 0.07 ) }
    dend_37 { pt3dadd( -20.5449, -25.6401, -11.1164, 1.68 ) }
    dend_37 { pt3dadd( -20.4261, -26.6579, -11.2444, 2.19 ) }
    dend_37 { pt3dadd( -20.3065, -27.1593, -11.3118, 2.19 ) }
    dend_37 { pt3dadd( -19.636, -29.1488, -11.6783, 0.07 ) }
    dend_37 { pt3dadd( -19.0063, -30.6612, -11.9948, 0.15 ) }
    dend_37 { pt3dadd( -18.5941, -31.5202, -12.1736, 0.15 ) }
    dend_37 { pt3dadd( -18.2039, -32.2797, -12.3139, 0.66 ) }
    dend_37 { pt3dadd( -17.383, -33.9701, -12.6117, 0.07 ) }
    dend_37 { pt3dadd( -16.7277, -35.5707, -12.8419, 1.97 ) }
    dend_37 { pt3dadd( -16.5029, -36.3044, -12.9127, 1.97 ) }
    dend_37 { pt3dadd( -16.1887, -37.8578, -12.9525, 0.22 ) }
    dend_37 { pt3dadd( -16.1194, -38.8942, -12.9948, 0.22 ) }
    dend_37 { pt3dadd( -16.1669, -39.6442, -13.0279, 0.22 ) }
    dend_37 { pt3dadd( -16.4179, -40.9213, -13.0051, 0.44 ) }
    dend_37 { pt3dadd( -16.67, -41.7447, -12.9256, 1.17 ) }
    dend_37 { pt3dadd( -17.1081, -42.8428, -12.7885, 1.17 ) }
    dend_37 { pt3dadd( -17.9756, -44.7502, -12.4968, 0.15 ) }
    dend_37 { pt3dadd( -18.2847, -45.4236, -12.3797, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_37 { pt3dadd( -18.9076, -46.8586, -12.1019, 0.95 ) }
    dend_37 { pt3dadd( -19.1846, -47.5919, -11.9445, 0.95 ) }
    dend_37 { pt3dadd( -19.4719, -48.4614, -11.7688, 0.95 ) }
    dend_37 { pt3dadd( -19.8655, -50.016, -11.5263, 0.15 ) }
    dend_37 { pt3dadd( -19.9386, -50.4502, -11.4799, 0.15 ) }
    dend_37 { pt3dadd( -20.0211, -51.1133, -11.4859, 0.15 ) }
    dend_37 { pt3dadd( -20.0956, -52.0188, -11.5692, 0.15 ) }
    dend_37 { pt3dadd( -20.1516, -53.2274, -11.7538, 1.24 ) }
    dend_37 { pt3dadd( -20.1982, -55.2098, -12.1592, 0.07 ) }
    dend_37 { pt3dadd( -20.2303, -56.9158, -12.5932, 0.07 ) }
    dend_37 { pt3dadd( -20.2498, -58.008, -12.9041, 0.07 ) }
    dend_37 { pt3dadd( -20.2684, -59.4959, -13.352, 1.53 ) }
    dend_37 { pt3dadd( -20.274, -61.8512, -14.0729, 0.07 ) }
    dend_37 { pt3dadd( -20.2457, -63.0281, -14.4245, 0.44 ) }
    dend_37 { pt3dadd( -20.1653, -64.7014, -14.9193, 0.15 ) }
    dend_37 { pt3dadd( -20.0308, -66.4658, -15.4738, 1.39 ) }
    dend_37 { pt3dadd( -19.8526, -67.9752, -15.9376, 0.07 ) }
    dend_37 { pt3dadd( -19.759, -68.4979, -16.1097, 0.07 ) }
    dend_37 { pt3dadd( -19.57, -69.2789, -16.3529, 0.07 ) }
    dend_37 { pt3dadd( -19.2672, -70.4168, -16.7249, 1.61 ) }
    dend_37 { pt3dadd( -18.633, -72.7721, -17.5504, 0.15 ) }
    dend_37 { pt3dadd( -18.3386, -73.9296, -17.9955, 0.15 ) }
    dend_37 { pt3dadd( -18.0074, -75.3929, -18.5949, 0.8 ) }
    dend_37 { pt3dadd( -17.8468, -76.1508, -18.9065, 0.15 ) }
    dend_37 { pt3dadd( -17.5654, -77.6113, -19.5386, 0.15 ) }
    dend_37 { pt3dadd( -17.3787, -78.3815, -19.8652, 1.31 ) }
    dend_37 { pt3dadd( -17.0718, -79.4105, -20.2981, 0.07 ) }
    dend_37 { pt3dadd( -16.8466, -80.0782, -20.606, 0.07 ) }
    dend_37 { pt3dadd( -16.4193, -81.1893, -21.1099, 0.95 ) }
    dend_37 { pt3dadd( -15.741, -82.788, -21.8315, 0.07 ) }
    dend_37 { pt3dadd( -14.9642, -84.5353, -22.5523, 1.24 ) }
    dend_37 { pt3dadd( -14.245, -86.232, -23.195, 0.29 ) }
    dend_37 { pt3dadd( -13.7411, -87.5517, -23.6539, 0.07 ) }
    dend_37 { pt3dadd( -13.4443, -88.4242, -23.9529, 0.73 ) }
    dend_37 { pt3dadd( -12.9881, -89.9795, -24.4937, 0.22 ) }
    dend_37 { pt3dadd( -12.6847, -91.0713, -24.8333, 0.88 ) }
    dend_37 { pt3dadd( -12.3914, -92.1853, -25.1569, 1.02 ) }
    dend_37 { pt3dadd( -11.9919, -93.6698, -25.5494, 0.29 ) }
    dend_37 { pt3dadd( -11.7267, -94.6662, -25.7998, 0.07 ) }
    dend_37 { pt3dadd( -11.2918, -96.3369, -26.2306, 0.07 ) }
    dend_37 { pt3dadd( -10.831, -98.207, -26.7442, 1.39 ) }
    dend_37 { pt3dadd( -10.6005, -99.2502, -27.0873, 1.39 ) }
    dend_37 { pt3dadd( -10.2577, -101.105, -27.7364, 0.07 ) }
    dend_37 { pt3dadd( -10.087, -102.385, -28.1805, 1.02 ) }
    dend_37 { pt3dadd( -9.99115, -103.826, -28.6382, 0.29 ) }
    dend_37 { pt3dadd( -10.0545, -105.671, -29.2244, 0.95 ) }
    dend_37 { pt3dadd( -10.3667, -107.848, -29.9697, 0.07 ) }
    dend_37 { pt3dadd( -10.5061, -108.488, -30.1847, 0.07 ) }
    dend_37 { pt3dadd( -10.6315, -108.982, -30.3271, 0.07 ) }
    dend_37 { pt3dadd( -11.0492, -110.563, -30.7222, 0.73 ) }
    dend_37 { pt3dadd( -11.536, -112.466, -31.1257, 0.07 ) }
    dend_37 { pt3dadd( -11.878, -114.087, -31.4217, 0.8 ) }
    dend_37 { pt3dadd( -12.0054, -114.87, -31.5414, 1.09 ) }
    dend_37 { pt3dadd( -12.22, -116.896, -31.9032, 0.07 ) }
    dend_37 { pt3dadd( -12.2717, -117.784, -32.1048, 0.07 ) }
    dend_37 { pt3dadd( -12.2831, -118.774, -32.4357, 0.66 ) }
    dend_37 { pt3dadd( -12.2344, -120.569, -33.1328, 0.07 ) }
    dend_37 { pt3dadd( -12.1543, -121.841, -33.7108, 0.07 ) }
    dend_37 { pt3dadd( -11.9886, -123.689, -34.6237, 0.66 ) }
    dend_37 { pt3dadd( -11.7214, -125.856, -35.7696, 0.07 ) }
    dend_37 { pt3dadd( -11.2747, -128.152, -36.9711, 0.07 ) }
    dend_37 { pt3dadd( -10.895, -129.445, -37.6421, 0.36 ) }
    dend_37 { pt3dadd( -10.0477, -131.342, -38.6432, 0.07 ) }
    dend_37 { pt3dadd( -9.52534, -132.238, -39.1116, 0.07 ) }
    dend_37 { pt3dadd( -9.02224, -132.953, -39.4681, 0.66 ) }
    dend_37 { pt3dadd( -7.72813, -134.5, -40.1348, 0.07 ) }
    dend_37 { pt3dadd( -6.74433, -135.551, -40.4995, 0.07 ) }
    dend_37 { pt3dadd( -5.5363, -136.699, -40.9502, 0.8 ) }
    dend_37 { pt3dadd( -3.79068, -138.21, -41.541, 0.07 ) }
    dend_37 { pt3dadd( -2.9677, -147.757, -43.5249, 0.07 ) }
    dend_37 { pt3dadd( -3.48387, -156.852, -47.136, 0.07 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 5.30016, 20.017, -4.02877, 0.29 ) }
    dend_35 { pt3dadd( 4.57761, 20.838, -3.68495, 0.29 ) }
    dend_35 { pt3dadd( 4.01223, 21.5155, -3.40068, 0.29 ) }
    dend_35 { pt3dadd( 3.76333, 21.8574, -3.22348, 0.8 ) }
    dend_35 { pt3dadd( 3.37353, 22.4934, -2.87638, 0.95 ) }
    dend_35 { pt3dadd( 3.07107, 23.1037, -2.55772, 1.09 ) }
    dend_35 { pt3dadd( 2.91954, 23.4429, -2.38654, 1.09 ) }
    dend_35 { pt3dadd( 2.68988, 24.1081, -2.05464, 0.73 ) }
    dend_35 { pt3dadd( 2.37818, 25.0611, -1.59131, 0.36 ) }
    dend_35 { pt3dadd( 2.10648, 25.876, -1.20811, 0.22 ) }
    dend_35 { pt3dadd( 1.69646, 26.8488, -0.879563, 0.22 ) }
    dend_35 { pt3dadd( 1.28583, 27.6902, -0.680353, 0.22 ) }
    dend_35 { pt3dadd( 1.03156, 28.1735, -0.601238, 0.88 ) }
    dend_35 { pt3dadd( 0.484047, 29.1098, -0.491359, 1.09 ) }
    dend_35 { pt3dadd( -0.040167, 29.9089, -0.422392, 1.09 ) }
    dend_35 { pt3dadd( -1.52256, 31.9821, -0.228252, 0.15 ) }
    dend_35 { pt3dadd( -2.1321, 32.7903, -0.162373, 0.15 ) }
    dend_35 { pt3dadd( -2.79597, 33.6962, -0.0891012, 0.15 ) }
    dend_35 { pt3dadd( -3.42782, 34.5957, -0.00203711, 1.09 ) }
    dend_35 { pt3dadd( -3.84397, 35.2146, 0.0770763, 1.09 ) }
    dend_35 { pt3dadd( -4.31222, 35.9324, 0.214026, 1.09 ) }
    dend_35 { pt3dadd( -4.89336, 36.8828, 0.475362, 1.09 ) }
    dend_35 { pt3dadd( -5.633, 38.0595, 0.787474, 0.15 ) }
    dend_35 { pt3dadd( -6.12305, 38.8483, 0.987832, 0.15 ) }
    dend_35 { pt3dadd( -6.57247, 39.6148, 1.17443, 0.15 ) }
    dend_35 { pt3dadd( -7.12802, 40.5896, 1.39501, 0.36 ) }
    dend_35 { pt3dadd( -7.34525, 40.9857, 1.48156, 0.36 ) }
    dend_35 { pt3dadd( -7.63242, 41.5198, 1.60253, 0.07 ) }
    dend_35 { pt3dadd( -7.95324, 42.1284, 1.68869, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_35 { pt3dadd( -8.30759, 42.8898, 1.74073, 0.07 ) }
    dend_35 { pt3dadd( -8.70348, 43.9065, 1.76415, 0.07 ) }
    dend_35 { pt3dadd( -9.06393, 44.9277, 1.73847, 1.46 ) }
    dend_35 { pt3dadd( -9.27132, 45.5595, 1.70702, 1.61 ) }
    dend_35 { pt3dadd( -9.69751, 46.8934, 1.64495, 0.07 ) }
    dend_35 { pt3dadd( -9.9665, 47.7039, 1.61033, 0.07 ) }
    dend_35 { pt3dadd( -10.4128, 48.9986, 1.57841, 1.02 ) }
    dend_35 { pt3dadd( -10.9422, 50.2949, 1.62215, 0.07 ) }
    dend_35 { pt3dadd( -11.3753, 51.15, 1.69002, 0.07 ) }
    dend_35 { pt3dadd( -12.0026, 52.1997, 1.91959, 0.29 ) }
    dend_35 { pt3dadd( -12.3205, 52.6271, 2.06381, 0.07 ) }
    dend_35 { pt3dadd( -12.8897, 53.2434, 2.31189, 1.02 ) }
    dend_35 { pt3dadd( -14.1297, 54.3781, 2.74935, 0.07 ) }
    dend_35 { pt3dadd( -15.0425, 55.1378, 3.03467, 0.07 ) }
    dend_35 { pt3dadd( -16.6387, 56.4042, 3.36457, 1.39 ) }
    dend_35 { pt3dadd( -18.181, 57.6201, 3.53926, 0.07 ) }
    dend_35 { pt3dadd( -19.0184, 58.3074, 3.57114, 0.73 ) }
    dend_35 { pt3dadd( -20.302, 59.4236, 3.48792, 0.15 ) }
    dend_35 { pt3dadd( -20.5868, 59.7096, 3.44386, 1.53 ) }
    dend_35 { pt3dadd( -21.7943, 61.0433, 3.21953, 0.07 ) }
    dend_35 { pt3dadd( -22.1069, 61.4257, 3.15013, 0.8 ) }
    dend_35 { pt3dadd( -22.4666, 61.9272, 3.13249, 0.8 ) }
    dend_35 { pt3dadd( -23.3985, 63.2848, 3.19591, 0.07 ) }
    dend_35 { pt3dadd( -24.2576, 64.5914, 3.47061, 0.07 ) }
    dend_35 { pt3dadd( -24.7209, 65.2929, 3.69238, 1.17 ) }
    dend_35 { pt3dadd( -25.0636, 65.8117, 3.94199, 1.68 ) }
    dend_35 { pt3dadd( -26.1056, 67.2925, 4.81254, 0.07 ) }
    dend_35 { pt3dadd( -26.8133, 68.2498, 5.46528, 0.07 ) }
    dend_35 { pt3dadd( -27.9312, 69.6774, 6.58404, 1.09 ) }
    dend_35 { pt3dadd( -29.0237, 70.9812, 7.67372, 0.07 ) }
    dend_35 { pt3dadd( -30.1779, 72.3327, 8.82146, 0.88 ) }
    dend_35 { pt3dadd( -31.1089, 73.3924, 9.76275, 0.07 ) }
    dend_35 { pt3dadd( -31.2595, 73.5592, 9.91901, 0.8 ) }
    dend_35 { pt3dadd( -32.0068, 74.3529, 10.6784, 0.07 ) }
    dend_35 { pt3dadd( -32.6437, 74.9629, 11.1675, 0.07 ) }
    dend_35 { pt3dadd( -33.0973, 75.3707, 11.5138, 0.36 ) }
    dend_35 { pt3dadd( -36.3041, 83.1812, 13.6482, 0.36 ) }
    dend_35 { pt3dadd( -38.7781, 90.7511, 17.1764, 0.36 ) }
    dend_35 { pt3dadd( -40.0046, 98.2055, 21.5045, 0.36 ) }
    dend_35 { pt3dadd( -40.8708, 105.234, 26.5937, 0.36 ) }
    dend_35 { pt3dadd( -42.2143, 112.811, 30.6579, 0.36 ) }
    dend_35 { pt3dadd( -42.432, 120.701, 34.2789, 0.36 ) }
    dend_35 { pt3dadd( -43.2231, 128.842, 37.1805, 0.36 ) }
    dend_35 { pt3dadd( -43.8285, 137.375, 38.5586, 0.36 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 44/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 5.30016, 20.017, -4.02877, 1.02 ) }
    dend_32 { pt3dadd( 5.51771, 20.7134, -3.43702, 1.02 ) }
    dend_32 { pt3dadd( 6.05606, 22.4365, -1.97273, 0.73 ) }
    dend_32 { pt3dadd( 6.33544, 23.3307, -1.21284, 0.73 ) }
    // Section: dend_28, id: dend_28, parent: dend_18 (entry count 48/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 7.29437, 12.9179, -2.14526, 0.66 ) }
    dend_28 { pt3dadd( 8.32083, 13.2849, -1.61623, 0.66 ) }
    dend_28 { pt3dadd( 8.98961, 13.5757, -1.23593, 0.95 ) }
    dend_28 { pt3dadd( 10.35, 14.3083, -0.318715, 0.58 ) }
    dend_28 { pt3dadd( 10.9778, 14.7031, 0.157551, 0.88 ) }
    dend_28 { pt3dadd( 11.506, 15.1193, 0.631532, 0.51 ) }
    dend_28 { pt3dadd( 11.835, 15.4722, 1.00525, 0.29 ) }
    dend_28 { pt3dadd( 12.0026, 15.8705, 1.3948, 0.29 ) }
    dend_28 { pt3dadd( 11.997, 16.5347, 2.01223, 0.88 ) }
    dend_28 { pt3dadd( 11.9537, 16.7116, 2.16535, 1.09 ) }
    dend_28 { pt3dadd( 11.7628, 17.4417, 2.8412, 0.8 ) }
    dend_28 { pt3dadd( 11.6017, 18.184, 3.51961, 0.58 ) }
    dend_28 { pt3dadd( 11.5478, 18.6257, 3.89904, 0.58 ) }
    dend_28 { pt3dadd( 11.5258, 19.5078, 4.56231, 0.73 ) }
    dend_28 { pt3dadd( 11.5651, 20.5928, 5.2728, 0.44 ) }
    dend_28 { pt3dadd( 11.6652, 21.6529, 5.87882, 0.44 ) }
    dend_28 { pt3dadd( 11.7845, 22.4662, 6.29679, 0.95 ) }
    dend_28 { pt3dadd( 11.9495, 23.5202, 6.7756, 0.95 ) }
    dend_28 { pt3dadd( 12.1346, 24.8254, 7.33289, 0.73 ) }
    dend_28 { pt3dadd( 12.2375, 25.6562, 7.71844, 0.95 ) }
    dend_28 { pt3dadd( 12.3172, 26.7754, 8.25728, 0.58 ) }
    dend_28 { pt3dadd( 12.3338, 27.4957, 8.62176, 0.58 ) }
    dend_28 { pt3dadd( 12.3407, 28.4915, 9.17426, 1.02 ) }
    dend_28 { pt3dadd( 12.3676, 29.9708, 10.0772, 0.22 ) }
    dend_28 { pt3dadd( 12.3945, 31.0169, 10.7664, 0.36 ) }
    dend_28 { pt3dadd( 12.4561, 31.8481, 11.3371, 0.22 ) }
    dend_28 { pt3dadd( 12.5927, 32.8159, 12.028, 1.09 ) }
    dend_28 { pt3dadd( 12.7453, 33.4531, 12.5005, 1.31 ) }
    dend_28 { pt3dadd( 13.1835, 34.6165, 13.464, 0.73 ) }
    dend_28 { pt3dadd( 13.4769, 35.1766, 13.9753, 0.15 ) }
    dend_28 { pt3dadd( 14.0008, 36.0106, 14.7872, 0.44 ) }
    dend_28 { pt3dadd( 14.3054, 36.4105, 15.3067, 0.58 ) }
    dend_28 { pt3dadd( 14.6659, 36.8345, 15.9947, 0.58 ) }
    dend_28 { pt3dadd( 15.0652, 37.3084, 16.8077, 0.58 ) }
    dend_28 { pt3dadd( 15.4049, 37.6457, 17.3953, 0.58 ) }
    dend_28 { pt3dadd( 15.9667, 38.1688, 18.1503, 0.73 ) }
    dend_28 { pt3dadd( 16.7121, 38.8832, 18.8642, 0.95 ) }
    dend_28 { pt3dadd( 16.9609, 39.1483, 19.0424, 0.95 ) }
    dend_28 { pt3dadd( 17.5639, 39.8292, 19.3672, 0.58 ) }
    dend_28 { pt3dadd( 18.5612, 40.9247, 19.7316, 0.88 ) }
    dend_28 { pt3dadd( 19.1999, 41.5108, 19.8921, 0.58 ) }
    dend_28 { pt3dadd( 20.1251, 42.2214, 20.0904, 0.29 ) }
    dend_28 { pt3dadd( 20.8728, 42.7514, 20.2241, 0.29 ) }
    dend_28 { pt3dadd( 21.1665, 42.9526, 20.2802, 0.58 ) }
    dend_28 { pt3dadd( 21.6786, 43.3138, 20.4181, 0.73 ) }
    dend_28 { pt3dadd( 22.6992, 44.1321, 20.7546, 0.07 ) }
    dend_28 { pt3dadd( 23.4307, 44.774, 21.0498, 0.51 ) }
    dend_28 { pt3dadd( 23.7478, 45.0667, 21.221, 1.17 ) }
    dend_28 { pt3dadd( 24.2242, 45.5456, 21.5595, 1.17 ) }
    dend_28 { pt3dadd( 25.1554, 46.6072, 22.3917, 0.51 ) }
    dend_28 { pt3dadd( 25.7014, 47.3127, 23.0269, 0.73 ) }
    dend_28 { pt3dadd( 26.1189, 47.9535, 23.6581, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_28 { pt3dadd( 26.6616, 48.8638, 24.6711, 1.02 ) }
    dend_28 { pt3dadd( 27.1702, 49.7067, 25.7828, 0.36 ) }
    dend_28 { pt3dadd( 27.2382, 49.8138, 25.9562, 0.36 ) }
    dend_28 { pt3dadd( 27.7757, 50.0414, 26.7011, 0.51 ) }
    dend_28 { pt3dadd( 28.2532, 50.031, 27.053, 0.51 ) }
    dend_28 { pt3dadd( 28.5734, 50.0152, 27.2699, 0.51 ) }
    dend_28 { pt3dadd( 29.4136, 50.0144, 27.8309, 0.73 ) }
    dend_28 { pt3dadd( 30.2229, 50.0708, 28.463, 0.44 ) }
    dend_28 { pt3dadd( 31.6838, 50.4017, 29.8451, 1.02 ) }
    dend_28 { pt3dadd( 32.6408, 50.8573, 31.0847, 0.44 ) }
    dend_28 { pt3dadd( 33.4243, 51.4873, 32.4714, 0.73 ) }
    dend_28 { pt3dadd( 33.6599, 51.8065, 33.0598, 0.44 ) }
    dend_28 { pt3dadd( 33.8535, 52.2641, 33.7676, 0.51 ) }
    dend_28 { pt3dadd( 33.9927, 52.7928, 34.4596, 0.8 ) }
    dend_28 { pt3dadd( 34.1754, 53.8345, 35.5102, 0.44 ) }
    dend_28 { pt3dadd( 34.3061, 54.4355, 35.9355, 0.8 ) }
    dend_28 { pt3dadd( 34.5676, 55.5128, 36.4703, 0.58 ) }
    dend_28 { pt3dadd( 34.8438, 56.4368, 36.8257, 0.88 ) }
    dend_28 { pt3dadd( 35.1558, 57.3301, 37.0795, 0.58 ) }
    dend_28 { pt3dadd( 35.4302, 58.0664, 37.2757, 0.8 ) }
    dend_28 { pt3dadd( 35.7351, 58.8968, 37.4831, 0.44 ) }
    dend_28 { pt3dadd( 36.0407, 59.8639, 37.7674, 0.95 ) }
    dend_28 { pt3dadd( 36.1993, 60.5809, 38.0443, 0.58 ) }
    dend_28 { pt3dadd( 36.2768, 61.1601, 38.3068, 0.73 ) }
    dend_28 { pt3dadd( 36.3933, 62.3557, 38.8829, 0.36 ) }
    dend_28 { pt3dadd( 36.4843, 62.942, 39.1771, 0.66 ) }
    dend_28 { pt3dadd( 36.6294, 63.3526, 39.369, 0.66 ) }
    dend_28 { pt3dadd( 37.0423, 64.0225, 39.6951, 0.36 ) }
    dend_28 { pt3dadd( 37.5788, 64.7062, 40.0235, 0.15 ) }
    dend_28 { pt3dadd( 38.1593, 65.3574, 40.322, 0.44 ) }
    dend_28 { pt3dadd( 38.8925, 66.0745, 40.609, 0.22 ) }
    dend_28 { pt3dadd( 39.6591, 66.7965, 40.8822, 0.58 ) }
    dend_28 { pt3dadd( 40.4641, 67.5659, 41.151, 0.22 ) }
    dend_28 { pt3dadd( 40.8561, 67.9556, 41.2737, 0.51 ) }
    dend_28 { pt3dadd( 41.6047, 68.7016, 41.5475, 0.22 ) }
    dend_28 { pt3dadd( 42.3668, 69.5272, 41.8417, 0.51 ) }
    dend_28 { pt3dadd( 42.8703, 70.1152, 42.0516, 0.51 ) }
    dend_28 { pt3dadd( 43.5255, 70.9248, 42.3515, 0.44 ) }
    dend_28 { pt3dadd( 43.9128, 71.4184, 42.5221, 0.73 ) }
    dend_28 { pt3dadd( 44.815, 72.601, 42.923, 0.44 ) }
    dend_28 { pt3dadd( 45.1879, 73.2003, 43.0865, 0.29 ) }
    dend_28 { pt3dadd( 45.4633, 73.8231, 43.2274, 0.29 ) }
    dend_28 { pt3dadd( 45.6122, 74.4502, 43.3246, 0.29 ) }
    dend_28 { pt3dadd( 45.6263, 75.2157, 43.3872, 0.29 ) }
    dend_28 { pt3dadd( 45.5001, 75.906, 43.3906, 0.51 ) }
    dend_28 { pt3dadd( 45.0095, 77.352, 43.3264, 0.15 ) }
    dend_28 { pt3dadd( 44.7815, 77.9125, 43.2925, 0.15 ) }
    dend_28 { pt3dadd( 44.3729, 78.8509, 43.222, 0.15 ) }
    dend_28 { pt3dadd( 44.1633, 79.3326, 43.1993, 0.15 ) }
    dend_28 { pt3dadd( 43.7745, 80.1398, 43.1877, 0.36 ) }
    dend_28 { pt3dadd( 43.3649, 80.9717, 43.2434, 0.07 ) }
    dend_28 { pt3dadd( 43.2131, 81.2853, 43.2968, 0.07 ) }
    dend_28 { pt3dadd( 43.0301, 81.7026, 43.3775, 0.36 ) }
    dend_28 { pt3dadd( 42.7575, 82.6289, 43.6145, 0.07 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 54/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 7.29437, 12.9179, -2.14526, 1.02 ) }
    dend_19 { pt3dadd( 8.26991, 12.2916, -2.81636, 1.02 ) }
    dend_19 { pt3dadd( 9.25425, 11.7133, -3.46448, 1.02 ) }
    dend_19 { pt3dadd( 10.1689, 11.2279, -4.03866, 1.02 ) }
    dend_19 { pt3dadd( 11.1347, 10.7417, -4.57312, 1.24 ) }
    dend_19 { pt3dadd( 12.051, 10.2959, -5.00244, 1.31 ) }
    dend_19 { pt3dadd( 13.0795, 9.79516, -5.41723, 1.31 ) }
    dend_19 { pt3dadd( 13.7171, 9.50778, -5.60564, 1.31 ) }
    dend_19 { pt3dadd( 14.9424, 9.00473, -5.82056, 0.8 ) }
    dend_19 { pt3dadd( 16.2821, 8.49719, -5.95708, 1.39 ) }
    dend_19 { pt3dadd( 17.6859, 8.0258, -6.04536, 1.9 ) }
    dend_19 { pt3dadd( 19.2991, 7.58466, -6.18606, 1.61 ) }
    dend_19 { pt3dadd( 21.5256, 7.12554, -6.4911, 1.61 ) }
    dend_19 { pt3dadd( 23.4486, 6.76136, -6.75694, 1.17 ) }
    dend_19 { pt3dadd( 24.2978, 6.63162, -6.88516, 0.88 ) }
    dend_19 { pt3dadd( 25.891, 6.48879, -7.20665, 0.66 ) }
    dend_19 { pt3dadd( 28.1928, 6.47743, -7.83183, 0.8 ) }
    dend_19 { pt3dadd( 29.7394, 6.67353, -8.41713, 1.82 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 72/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -16.7843, 2.44665, -1.87735, 0.58 ) }
    dend_17 { pt3dadd( -17.027, 3.77263, -1.96256, 0.58 ) }
    dend_17 { pt3dadd( -17.4505, 5.48762, -2.06745, 0.36 ) }
    dend_17 { pt3dadd( -17.7999, 6.57379, -2.15015, 0.36 ) }
    dend_17 { pt3dadd( -18.4577, 8.27979, -2.31287, 1.17 ) }
    dend_17 { pt3dadd( -19.0083, 9.5455, -2.48166, 0.88 ) }
    dend_17 { pt3dadd( -19.5865, 10.8747, -2.65891, 0.88 ) }
    dend_17 { pt3dadd( -20.2635, 12.2623, -2.89863, 1.02 ) }
    dend_17 { pt3dadd( -21.0841, 13.7283, -3.22016, 0.07 ) }
    dend_17 { pt3dadd( -21.6386, 14.5717, -3.42591, 0.22 ) }
    dend_17 { pt3dadd( -22.4906, 15.6537, -3.65925, 0.22 ) }
    dend_17 { pt3dadd( -25.5895, 25.1505, -4.17977, 0.22 ) }
    dend_17 { pt3dadd( -28.2163, 34.7749, -3.6596, 0.22 ) }
    dend_17 { pt3dadd( -30.1349, 44.3327, -1.51127, 0.22 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 86/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -16.7843, 2.44665, -1.87735, 0.51 ) }
    dend_14 { pt3dadd( -18.6993, 1.32267, -2.12627, 0.51 ) }
    dend_14 { pt3dadd( -19.5005, 0.848108, -2.23198, 0.51 ) }
    dend_14 { pt3dadd( -20.1479, 0.454034, -2.29656, 0.51 ) }
    dend_14 { pt3dadd( -20.904, -0.00766096, -2.35947, 0.51 ) }
    dend_14 { pt3dadd( -21.758, -0.546131, -2.42835, 0.58 ) }
    dend_14 { pt3dadd( -22.5721, -1.06881, -2.4658, 0.36 ) }
    dend_14 { pt3dadd( -23.2248, -1.53599, -2.47147, 0.66 ) }
    dend_14 { pt3dadd( -24.1192, -2.19538, -2.45585, 0.88 ) }
    dend_14 { pt3dadd( -24.7814, -2.67428, -2.42605, 0.88 ) }
    dend_14 { pt3dadd( -26.2762, -3.71867, -2.32483, 0.22 ) }
    dend_14 { pt3dadd( -27.5926, -4.60649, -2.18143, 0.58 ) }
    dend_14 { pt3dadd( -28.7396, -5.32926, -2.02748, 0.07 ) }
    dend_14 { pt3dadd( -29.4012, -5.70842, -1.93186, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_14 { pt3dadd( -30.0809, -6.05014, -1.82821, 0.07 ) }
    dend_14 { pt3dadd( -30.7511, -6.36123, -1.6607, 0.73 ) }
    dend_14 { pt3dadd( -31.6648, -6.7672, -1.34481, 0.8 ) }
    dend_14 { pt3dadd( -32.5965, -7.18509, -0.992192, 0.95 ) }
    dend_14 { pt3dadd( -33.3081, -7.50681, -0.706262, 0.95 ) }
    dend_14 { pt3dadd( -34.653, -8.1712, -0.158609, 0.66 ) }
    dend_14 { pt3dadd( -36.6701, -9.2367, 0.595844, 0.22 ) }
    dend_14 { pt3dadd( -37.7254, -9.82864, 0.978242, 0.22 ) }
    dend_14 { pt3dadd( -38.5736, -10.3357, 1.29872, 0.95 ) }
    dend_14 { pt3dadd( -39.0509, -10.6474, 1.49026, 0.95 ) }
    dend_14 { pt3dadd( -39.6113, -11.0295, 1.70824, 1.17 ) }
    dend_14 { pt3dadd( -40.9732, -11.9463, 2.17641, 0.44 ) }
    dend_14 { pt3dadd( -42.0653, -12.6393, 2.45362, 0.44 ) }
    dend_14 { pt3dadd( -43.3414, -13.4187, 2.75096, 0.58 ) }
    dend_14 { pt3dadd( -43.8489, -13.7346, 2.8666, 0.73 ) }
    dend_14 { pt3dadd( -44.5215, -14.1824, 3.00045, 0.95 ) }
    dend_14 { pt3dadd( -45.0647, -14.5621, 3.08977, 1.02 ) }
    dend_14 { pt3dadd( -45.9224, -15.2065, 3.18314, 0.8 ) }
    dend_14 { pt3dadd( -46.6944, -15.7881, 3.19656, 0.66 ) }
    dend_14 { pt3dadd( -47.5933, -16.4587, 3.16004, 0.36 ) }
    dend_14 { pt3dadd( -48.405, -17.0656, 3.12808, 0.36 ) }
    dend_14 { pt3dadd( -48.8849, -17.4536, 3.11241, 0.36 ) }
    dend_14 { pt3dadd( -49.6616, -18.1282, 3.08357, 0.95 ) }
    dend_14 { pt3dadd( -50.1695, -18.5708, 3.06218, 1.24 ) }
    dend_14 { pt3dadd( -50.7703, -19.0733, 3.03048, 1.24 ) }
    dend_14 { pt3dadd( -51.422, -19.5677, 2.96938, 1.09 ) }
    dend_14 { pt3dadd( -52.3, -20.1721, 2.83853, 0.66 ) }
    dend_14 { pt3dadd( -53.0762, -20.6806, 2.6803, 0.36 ) }
    dend_14 { pt3dadd( -54.1883, -21.4165, 2.3965, 0.66 ) }
    dend_14 { pt3dadd( -54.8613, -21.9005, 2.19548, 0.66 ) }
    dend_14 { pt3dadd( -55.7007, -22.576, 1.9079, 0.29 ) }
    dend_14 { pt3dadd( -56.2064, -23.0223, 1.71371, 0.29 ) }
    dend_14 { pt3dadd( -56.7481, -23.5253, 1.48767, 0.88 ) }
    dend_14 { pt3dadd( -57.2649, -24.0295, 1.27647, 1.17 ) }
    dend_14 { pt3dadd( -58.0865, -24.8309, 0.978299, 0.66 ) }
    dend_14 { pt3dadd( -59.1175, -25.825, 0.694899, 0.36 ) }
    dend_14 { pt3dadd( -59.4029, -26.1119, 0.637823, 0.36 ) }
    dend_14 { pt3dadd( -59.7421, -26.4671, 0.586836, 0.73 ) }
    dend_14 { pt3dadd( -60.4238, -27.2097, 0.532562, 0.95 ) }
    dend_14 { pt3dadd( -61.2939, -28.1205, 0.533979, 0.07 ) }
    dend_14 { pt3dadd( -61.8961, -28.7899, 0.616107, 0.07 ) }
    dend_14 { pt3dadd( -62.2792, -29.2718, 0.712064, 0.07 ) }
    dend_14 { pt3dadd( -62.6805, -29.8893, 0.831688, 0.07 ) }
    dend_14 { pt3dadd( -63.1754, -30.7583, 1.00216, 0.07 ) }
    dend_14 { pt3dadd( -63.5851, -31.5622, 1.15003, 0.36 ) }
    dend_14 { pt3dadd( -63.9835, -32.3814, 1.27441, 1.53 ) }
    dend_14 { pt3dadd( -64.3494, -33.1021, 1.36291, 1.53 ) }
    dend_14 { pt3dadd( -65.127, -34.4613, 1.48629, 0.8 ) }
    dend_14 { pt3dadd( -65.8857, -35.6907, 1.51413, 0.51 ) }
    dend_14 { pt3dadd( -66.4565, -36.5822, 1.47162, 0.66 ) }
    dend_14 { pt3dadd( -67.0218, -37.4585, 1.39294, 1.24 ) }
    dend_14 { pt3dadd( -68.1889, -39.2127, 1.1591, 0.51 ) }
    dend_14 { pt3dadd( -69.2271, -40.6876, 0.898934, 0.15 ) }
    dend_14 { pt3dadd( -70.1441, -41.8632, 0.673139, 0.95 ) }
    dend_14 { pt3dadd( -71.1698, -43.0487, 0.423319, 0.73 ) }
    dend_14 { pt3dadd( -71.9974, -43.8882, 0.244057, 0.73 ) }
    dend_14 { pt3dadd( -72.76, -44.5509, 0.125069, 0.58 ) }
    dend_14 { pt3dadd( -73.6886, -45.2146, 0.0396027, 0.22 ) }
    dend_14 { pt3dadd( -74.9017, -45.9591, 0.0789385, 0.22 ) }
    dend_14 { pt3dadd( -75.3326, -46.1673, 0.150965, 0.22 ) }
    dend_14 { pt3dadd( -75.6474, -46.2776, 0.223676, 0.22 ) }
    dend_14 { pt3dadd( -76.5952, -46.5783, 0.483355, 0.22 ) }
    dend_14 { pt3dadd( -77.1309, -46.7714, 0.632497, 0.95 ) }
    dend_14 { pt3dadd( -77.6084, -46.9967, 0.744572, 1.17 ) }
    dend_14 { pt3dadd( -78.1893, -47.3403, 0.799952, 1.17 ) }
    dend_14 { pt3dadd( -78.4639, -47.5157, 0.834532, 1.17 ) }
    dend_14 { pt3dadd( -79.6633, -48.3095, 0.989796, 1.46 ) }
    dend_14 { pt3dadd( -80.1085, -48.6188, 1.05974, 1.46 ) }
    dend_14 { pt3dadd( -80.8265, -49.1208, 1.19396, 1.46 ) }
    dend_14 { pt3dadd( -82.5295, -50.2982, 1.53726, 0.36 ) }
    dend_14 { pt3dadd( -83.9779, -51.29, 1.78988, 0.36 ) }
    dend_14 { pt3dadd( -84.5178, -51.652, 1.88268, 0.36 ) }
    dend_14 { pt3dadd( -85.8104, -52.5178, 2.08275, 0.51 ) }
    dend_14 { pt3dadd( -86.5128, -52.9973, 2.21732, 1.17 ) }
    dend_14 { pt3dadd( -86.9811, -53.3273, 2.31618, 1.17 ) }
    dend_14 { pt3dadd( -89.1655, -54.9603, 2.76285, 0.44 ) }
    dend_14 { pt3dadd( -90.2473, -55.8299, 2.93293, 0.95 ) }
    dend_14 { pt3dadd( -91.1872, -56.6346, 3.09814, 0.29 ) }
    dend_14 { pt3dadd( -92.3848, -57.7343, 3.31058, 0.58 ) }
    dend_14 { pt3dadd( -92.9504, -58.3048, 3.42177, 1.02 ) }
    dend_14 { pt3dadd( -93.9444, -59.3762, 3.61478, 0.44 ) }
    dend_14 { pt3dadd( -94.7193, -60.2796, 3.75479, 0.44 ) }
    dend_14 { pt3dadd( -95.506, -61.1992, 3.83042, 1.09 ) }
    dend_14 { pt3dadd( -95.9297, -61.6758, 3.84281, 1.09 ) }
    dend_14 { pt3dadd( -96.5382, -62.337, 3.80502, 0.88 ) }
    dend_14 { pt3dadd( -97.4876, -63.323, 3.74689, 0.44 ) }
    dend_14 { pt3dadd( -98.0402, -63.8749, 3.70441, 0.44 ) }
    dend_14 { pt3dadd( -98.7489, -64.5885, 3.66413, 0.29 ) }
    dend_14 { pt3dadd( -99.5893, -65.476, 3.61059, 0.66 ) }
    dend_14 { pt3dadd( -100.164, -66.1335, 3.588, 0.51 ) }
    dend_14 { pt3dadd( -101.025, -67.1617, 3.56888, 1.09 ) }
    dend_14 { pt3dadd( -101.99, -68.3445, 3.55769, 0.36 ) }
    dend_14 { pt3dadd( -102.826, -69.3423, 3.52679, 0.88 ) }
    dend_14 { pt3dadd( -103.456, -70.0853, 3.48474, 1.39 ) }
    dend_14 { pt3dadd( -104.185, -70.9249, 3.40802, 1.09 ) }
    dend_14 { pt3dadd( -105.134, -71.9859, 3.2003, 0.73 ) }
    dend_14 { pt3dadd( -105.724, -72.6155, 3.00243, 0.36 ) }
    dend_14 { pt3dadd( -106.723, -73.6018, 2.57215, 0.58 ) }
    dend_14 { pt3dadd( -107.361, -74.1899, 2.23787, 0.58 ) }
    dend_14 { pt3dadd( -108.224, -74.9294, 1.75626, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_14 { pt3dadd( -109.271, -75.8112, 1.14249, 1.39 ) }
    dend_14 { pt3dadd( -109.862, -76.3485, 0.763143, 1.46 ) }
    dend_14 { pt3dadd( -110.331, -76.8219, 0.4372, 1.46 ) }
    dend_14 { pt3dadd( -111.23, -77.8298, -0.220959, 0.73 ) }
    dend_14 { pt3dadd( -112.259, -79.0935, -0.980221, 0.15 ) }
    dend_14 { pt3dadd( -112.699, -79.6676, -1.2818, 0.15 ) }
    dend_14 { pt3dadd( -112.966, -80.0381, -1.43326, 0.15 ) }
    dend_14 { pt3dadd( -113.332, -80.5877, -1.65077, 0.15 ) }
    dend_14 { pt3dadd( -113.578, -81.0002, -1.79771, 0.15 ) }
    dend_14 { pt3dadd( -114.05, -81.9578, -2.08246, 0.15 ) }
    dend_14 { pt3dadd( -114.343, -82.7383, -2.26629, 1.68 ) }
    dend_14 { pt3dadd( -114.613, -83.2941, -2.40562, 2.19 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 12/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -17.0195, 14.0184, 0.275263, 0.36 ) }
    dend_8 { pt3dadd( -18.6527, 14.6654, 0.649727, 0.36 ) }
    dend_8 { pt3dadd( -20.3103, 15.1834, 1.07346, 0.36 ) }
    dend_8 { pt3dadd( -22.0666, 15.5959, 1.59219, 0.22 ) }
    dend_8 { pt3dadd( -22.7132, 15.7172, 1.79162, 0.22 ) }
    dend_8 { pt3dadd( -24.0065, 15.9316, 2.22877, 0.51 ) }
    dend_8 { pt3dadd( -25.5293, 16.1824, 2.76018, 0.29 ) }
    dend_8 { pt3dadd( -26.262, 16.2714, 3.03424, 0.29 ) }
    dend_8 { pt3dadd( -27.3373, 16.4034, 3.43197, 0.73 ) }
    dend_8 { pt3dadd( -28.1624, 16.5751, 3.75709, 0.95 ) }
    dend_8 { pt3dadd( -29.1826, 16.9977, 4.12834, 0.95 ) }
    dend_8 { pt3dadd( -29.7671, 17.4451, 4.33514, 0.95 ) }
    dend_8 { pt3dadd( -30.4654, 18.2107, 4.55502, 0.66 ) }
    dend_8 { pt3dadd( -30.8954, 18.8022, 4.68331, 0.95 ) }
    dend_8 { pt3dadd( -31.6695, 20.0033, 4.87606, 1.02 ) }
    dend_8 { pt3dadd( -32.5649, 21.4784, 5.08862, 0.44 ) }
    dend_8 { pt3dadd( -33.4429, 22.9547, 5.29931, 0.88 ) }
    dend_8 { pt3dadd( -33.8277, 23.5857, 5.39889, 0.88 ) }
    dend_8 { pt3dadd( -34.5274, 24.7138, 5.61632, 0.66 ) }
    dend_8 { pt3dadd( -35.5987, 26.3451, 5.97237, 0.15 ) }
    dend_8 { pt3dadd( -36.315, 27.3287, 6.20661, 0.36 ) }
    dend_8 { pt3dadd( -37.1227, 28.3413, 6.4594, 0.95 ) }
    dend_8 { pt3dadd( -37.8863, 29.2131, 6.66409, 1.24 ) }
    dend_8 { pt3dadd( -38.6576, 30.0185, 6.85756, 1.39 ) }
    dend_8 { pt3dadd( -39.3993, 30.7372, 7.05751, 1.17 ) }
    dend_8 { pt3dadd( -40.3057, 31.5779, 7.30263, 1.17 ) }
    dend_8 { pt3dadd( -41.3312, 32.4836, 7.56538, 1.31 ) }
    dend_8 { pt3dadd( -42.4252, 33.4124, 7.85879, 1.02 ) }
    dend_8 { pt3dadd( -43.3974, 34.2001, 8.12461, 0.66 ) }
    dend_8 { pt3dadd( -44.5194, 35.0652, 8.41526, 0.36 ) }
    dend_8 { pt3dadd( -45.3407, 35.6996, 8.64579, 0.66 ) }
    dend_8 { pt3dadd( -46.7833, 36.8403, 9.01009, 0.29 ) }
    dend_8 { pt3dadd( -48.0538, 37.8742, 9.2831, 0.66 ) }
    dend_8 { pt3dadd( -49.1551, 38.7972, 9.47313, 0.29 ) }
    dend_8 { pt3dadd( -49.9186, 39.4703, 9.56759, 0.29 ) }
    dend_8 { pt3dadd( -51.2399, 40.7165, 9.65186, 0.29 ) }
    dend_8 { pt3dadd( -52.2556, 41.7777, 9.62259, 1.17 ) }
    dend_8 { pt3dadd( -52.9001, 42.5335, 9.53366, 1.39 ) }
    dend_8 { pt3dadd( -53.6297, 43.5162, 9.3497, 1.17 ) }
    dend_8 { pt3dadd( -54.9753, 45.5358, 8.88257, 0.8 ) }
    dend_8 { pt3dadd( -55.7589, 46.7423, 8.57082, 0.8 ) }
    dend_8 { pt3dadd( -56.8257, 48.3254, 8.14237, 0.51 ) }
    dend_8 { pt3dadd( -57.4246, 49.1987, 7.969, 1.02 ) }
    dend_8 { pt3dadd( -58.1194, 50.2179, 7.80213, 1.31 ) }
    dend_8 { pt3dadd( -58.8921, 51.3495, 7.68895, 0.95 ) }
    dend_8 { pt3dadd( -59.9699, 52.8166, 7.70594, 0.8 ) }
    dend_8 { pt3dadd( -61.2417, 54.3466, 7.97729, 0.44 ) }
    dend_8 { pt3dadd( -62.4608, 55.694, 8.42207, 0.44 ) }
    dend_8 { pt3dadd( -63.2217, 56.4964, 8.75376, 0.44 ) }
    dend_8 { pt3dadd( -64.1081, 57.4554, 9.23855, 0.66 ) }
    dend_8 { pt3dadd( -65.1915, 58.7416, 9.94716, 0.36 ) }
    dend_8 { pt3dadd( -66.1345, 60.0307, 10.6208, 0.36 ) }
    dend_8 { pt3dadd( -66.7263, 60.9132, 11.043, 1.09 ) }
    dend_8 { pt3dadd( -67.2574, 61.7042, 11.3633, 0.95 ) }
    dend_8 { pt3dadd( -68.4628, 63.4724, 11.9976, 0.22 ) }
    dend_8 { pt3dadd( -69.01, 64.2403, 12.2106, 0.51 ) }
    dend_8 { pt3dadd( -70.1816, 65.7821, 12.5082, 0.15 ) }
    dend_8 { pt3dadd( -70.5027, 66.1764, 12.5845, 0.15 ) }
    dend_8 { pt3dadd( -71.1632, 66.9045, 12.7438, 0.36 ) }
    dend_8 { pt3dadd( -71.9284, 67.6891, 12.9153, 0.58 ) }
    dend_8 { pt3dadd( -72.9602, 68.6853, 13.2412, 0.58 ) }
    dend_8 { pt3dadd( -74.001, 69.8135, 13.8017, 0.29 ) }
    dend_8 { pt3dadd( -74.7834, 70.918, 14.5112, 0.95 ) }
    dend_8 { pt3dadd( -74.9845, 71.3266, 14.8096, 1.31 ) }
    dend_8 { pt3dadd( -75.3626, 72.4791, 15.6998, 1.31 ) }
    dend_8 { pt3dadd( -75.8317, 74.4976, 17.2926, 1.02 ) }
    dend_8 { pt3dadd( -76.0875, 75.8238, 18.3265, 0.95 ) }
    dend_8 { pt3dadd( -76.312, 76.9684, 19.1703, 0.29 ) }
    dend_8 { pt3dadd( -76.535, 77.8434, 19.7292, 0.29 ) }
    dend_8 { pt3dadd( -76.7471, 78.5139, 20.0969, 0.29 ) }
    dend_8 { pt3dadd( -77.1244, 79.4139, 20.5295, 0.29 ) }
    dend_8 { pt3dadd( -77.7737, 80.6178, 20.9615, 0.58 ) }
    dend_8 { pt3dadd( -78.3549, 81.5577, 21.2593, 0.73 ) }
    dend_8 { pt3dadd( -79.0553, 82.6685, 21.5801, 0.95 ) }
    dend_8 { pt3dadd( -79.6063, 83.628, 21.869, 1.09 ) }
    dend_8 { pt3dadd( -80.6013, 85.5654, 22.5211, 0.22 ) }
    dend_8 { pt3dadd( -80.9089, 86.2068, 22.7589, 0.51 ) }
    dend_8 { pt3dadd( -81.2319, 86.8678, 23.0576, 0.8 ) }
    dend_8 { pt3dadd( -81.6382, 87.6267, 23.4983, 0.8 ) }
    dend_8 { pt3dadd( -82.2365, 88.755, 24.2458, 0.15 ) }
    dend_8 { pt3dadd( -82.4635, 89.2421, 24.5646, 0.15 ) }
    dend_8 { pt3dadd( -82.7891, 89.9528, 24.9882, 0.15 ) }
    dend_8 { pt3dadd( -83.3337, 90.9433, 25.594, 0.44 ) }
    dend_8 { pt3dadd( -83.9888, 91.8567, 26.1563, 1.02 ) }
    dend_8 { pt3dadd( -84.7371, 92.7494, 26.6698, 1.24 ) }
    dend_8 { pt3dadd( -85.6961, 93.8056, 27.1941, 0.36 ) }
    dend_8 { pt3dadd( -86.3228, 94.4766, 27.4847, 0.22 ) }
    dend_8 { pt3dadd( -86.9176, 95.0787, 27.721, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_8 { pt3dadd( -87.4675, 95.5366, 27.8697, 0.22 ) }
    dend_8 { pt3dadd( -88.2461, 96.0557, 28.0309, 0.22 ) }
    dend_8 { pt3dadd( -89.2864, 96.6357, 28.2343, 0.95 ) }
    dend_8 { pt3dadd( -90.2358, 97.0957, 28.4068, 0.95 ) }
    dend_8 { pt3dadd( -91.3593, 97.606, 28.5952, 0.95 ) }
    dend_8 { pt3dadd( -93.1796, 98.3425, 28.8608, 0.58 ) }
    dend_8 { pt3dadd( -94.3726, 98.7588, 29.0013, 0.58 ) }
    dend_8 { pt3dadd( -95.2805, 99.0302, 29.0769, 0.58 ) }
    dend_8 { pt3dadd( -96.4678, 99.3637, 29.1352, 0.29 ) }
    dend_8 { pt3dadd( -97.253, 99.596, 29.1584, 0.29 ) }
    dend_8 { pt3dadd( -98.1792, 99.8777, 29.1589, 0.29 ) }
    dend_8 { pt3dadd( -98.9912, 100.114, 29.1426, 0.8 ) }
    dend_8 { pt3dadd( -99.7249, 100.286, 29.1519, 0.8 ) }
    dend_8 { pt3dadd( -100.715, 100.44, 29.1913, 0.8 ) }
    dend_8 { pt3dadd( -101.93, 100.556, 29.2649, 0.58 ) }
    dend_8 { pt3dadd( -103.166, 100.574, 29.3547, 0.44 ) }
    dend_8 { pt3dadd( -104.27, 100.516, 29.4678, 0.8 ) }
    dend_8 { pt3dadd( -106.158, 100.306, 29.7398, 0.44 ) }
    dend_8 { pt3dadd( -107.501, 100.079, 30.0034, 1.02 ) }
    dend_8 { pt3dadd( -108.175, 99.9331, 30.1606, 1.02 ) }
    dend_8 { pt3dadd( -109.802, 99.5467, 30.5725, 0.36 ) }
    dend_8 { pt3dadd( -110.827, 99.3311, 30.8391, 0.36 ) }
    dend_8 { pt3dadd( -111.66, 99.2156, 31.0766, 0.36 ) }
    dend_8 { pt3dadd( -112.828, 99.1385, 31.4712, 0.73 ) }
    dend_8 { pt3dadd( -114.088, 99.0971, 31.9898, 0.73 ) }
    dend_8 { pt3dadd( -115.469, 99.014, 32.6376, 0.44 ) }
    dend_8 { pt3dadd( -116.419, 98.9462, 33.1633, 0.44 ) }
    dend_8 { pt3dadd( -117.529, 98.8366, 33.7789, 0.66 ) }
    dend_8 { pt3dadd( -119.278, 98.7406, 34.7125, 0.36 ) }
    dend_8 { pt3dadd( -119.778, 98.7467, 34.9864, 1.17 ) }
    dend_8 { pt3dadd( -121.507, 98.9265, 35.9812, 0.51 ) }
    dend_8 { pt3dadd( -122.653, 99.2017, 36.62, 0.8 ) }
    dend_8 { pt3dadd( -124.019, 99.7059, 37.2993, 0.58 ) }
    dend_8 { pt3dadd( -125.502, 100.431, 37.9073, 0.22 ) }
    dend_8 { pt3dadd( -126.242, 100.923, 38.1463, 0.95 ) }
    dend_8 { pt3dadd( -127.116, 101.669, 38.4063, 0.95 ) }
    dend_8 { pt3dadd( -128.174, 102.804, 38.6696, 0.36 ) }
    dend_8 { pt3dadd( -128.903, 103.663, 38.8093, 0.36 ) }
    dend_8 { pt3dadd( -129.264, 104.124, 38.8717, 0.58 ) }
    dend_8 { pt3dadd( -130.105, 105.249, 38.9206, 0.22 ) }
    dend_8 { pt3dadd( -130.884, 106.309, 38.866, 0.22 ) }
    dend_8 { pt3dadd( -131.781, 107.524, 38.7299, 0.88 ) }
    dend_8 { pt3dadd( -132.545, 108.572, 38.5431, 0.51 ) }
    dend_8 { pt3dadd( -133.608, 110.074, 38.1804, 0.73 ) }
    dend_8 { pt3dadd( -134.851, 111.861, 37.6055, 0.22 ) }
    dend_8 { pt3dadd( -135.656, 113.055, 37.1137, 1.02 ) }
    dend_8 { pt3dadd( -136.112, 113.732, 36.7861, 1.02 ) }
    dend_8 { pt3dadd( -136.668, 114.559, 36.3607, 1.02 ) }
    dend_8 { pt3dadd( -137.185, 115.276, 35.9865, 1.02 ) }
    dend_8 { pt3dadd( -138.401, 116.673, 35.2703, 0.07 ) }
    dend_8 { pt3dadd( -139.176, 117.401, 34.926, 0.22 ) }
    dend_8 { pt3dadd( -139.996, 118.141, 34.5809, 0.8 ) }
    dend_8 { pt3dadd( -140.827, 118.866, 34.254, 1.46 ) }
    dend_8 { pt3dadd( -142.002, 119.815, 33.8865, 1.46 ) }
    dend_8 { pt3dadd( -143.36, 120.753, 33.6214, 0.29 ) }
    dend_8 { pt3dadd( -144.595, 121.41, 33.5834, 1.46 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 56/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -17.0195, 14.0184, 0.275263, 1.39 ) }
    dend_1 { pt3dadd( -18.3553, 14.3508, -0.0802204, 1.39 ) }
    dend_1 { pt3dadd( -19.7, 14.6853, -0.438059, 1.39 ) }
    dend_1 { pt3dadd( -21.287, 15.0802, -0.860404, 1.61 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 60/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.960906, 43.5926, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -1.35661, 58.5873, 0.0, 0.15 ) }
    axon_1 { pt3dadd( -1.75231, 73.5821, 0.0, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_45 (entry count 63/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -10.3284, -29.0954, 0.730123, 0.29 ) }
    dend_49 { pt3dadd( -10.9871, -30.49, 1.51696, 0.29 ) }
    dend_49 { pt3dadd( -11.606, -31.7745, 2.30253, 0.07 ) }
    dend_49 { pt3dadd( -12.1311, -32.7715, 3.03369, 0.95 ) }
    dend_49 { pt3dadd( -12.4565, -33.3357, 3.49259, 0.95 ) }
    dend_49 { pt3dadd( -12.901, -34.0675, 4.12817, 0.95 ) }
    dend_49 { pt3dadd( -13.5558, -35.162, 5.12571, 0.51 ) }
    dend_49 { pt3dadd( -13.8937, -35.7682, 5.72079, 0.73 ) }
    dend_49 { pt3dadd( -14.4018, -36.8594, 6.92514, 0.44 ) }
    dend_49 { pt3dadd( -14.5074, -37.1594, 7.23702, 0.44 ) }
    dend_49 { pt3dadd( -14.5426, -37.3411, 7.40782, 0.44 ) }
    dend_49 { pt3dadd( -14.5939, -37.9144, 7.85872, 0.29 ) }
    dend_49 { pt3dadd( -14.5809, -38.8975, 8.45316, 0.88 ) }
    dend_49 { pt3dadd( -14.5538, -39.6495, 8.8389, 1.02 ) }
    dend_49 { pt3dadd( -14.4685, -40.8835, 9.47073, 0.22 ) }
    dend_49 { pt3dadd( -14.4223, -41.6041, 9.86378, 0.22 ) }
    dend_49 { pt3dadd( -14.3614, -42.7093, 10.3917, 1.02 ) }
    dend_49 { pt3dadd( -14.2546, -44.4897, 11.117, 0.51 ) }
    dend_49 { pt3dadd( -14.1999, -45.1948, 11.3465, 0.8 ) }
    dend_49 { pt3dadd( -14.0421, -47.0213, 11.8087, 0.58 ) }
    dend_49 { pt3dadd( -13.9371, -48.369, 12.032, 0.8 ) }
    dend_49 { pt3dadd( -13.8025, -50.5061, 12.1198, 0.58 ) }
    dend_49 { pt3dadd( -13.7618, -51.7515, 12.02, 1.09 ) }
    dend_49 { pt3dadd( -13.7744, -53.1381, 11.7724, 0.88 ) }
    dend_49 { pt3dadd( -13.8142, -54.4023, 11.4878, 0.8 ) }
    dend_49 { pt3dadd( -13.8853, -55.6365, 11.1555, 1.02 ) }
    dend_49 { pt3dadd( -13.9508, -56.835, 10.8478, 1.24 ) }
    dend_49 { pt3dadd( -14.0229, -58.0152, 10.6141, 0.58 ) }
    dend_49 { pt3dadd( -14.1414, -59.9886, 10.2653, 0.22 ) }
    dend_49 { pt3dadd( -14.179, -60.8764, 10.1318, 1.02 ) }
    dend_49 { pt3dadd( -14.2042, -61.9778, 9.99686, 1.17 ) }
    dend_49 { pt3dadd( -14.2341, -63.5045, 9.86507, 0.36 ) }
    dend_49 { pt3dadd( -14.2774, -64.7246, 9.80832, 0.15 ) }
    dend_49 { pt3dadd( -14.3589, -65.936, 9.75672, 0.29 ) }
    dend_49 { pt3dadd( -14.4738, -67.0629, 9.70573, 0.66 ) }
    dend_49 { pt3dadd( -14.6665, -68.8339, 9.6141, 0.29 ) }
    dend_49 { pt3dadd( -14.854, -70.3277, 9.46442, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_49 { pt3dadd( -15.0158, -71.4723, 9.28825, 1.24 ) }
    dend_49 { pt3dadd( -15.2494, -73.1259, 8.95686, 0.29 ) }
    dend_49 { pt3dadd( -15.4028, -74.1333, 8.70744, 0.07 ) }
    dend_49 { pt3dadd( -15.5932, -75.2702, 8.39436, 1.09 ) }
    dend_49 { pt3dadd( -15.9188, -77.0853, 7.82838, 0.51 ) }
    dend_49 { pt3dadd( -16.1155, -78.2194, 7.46051, 1.09 ) }
    dend_49 { pt3dadd( -16.3116, -79.4351, 7.04285, 0.88 ) }
    dend_49 { pt3dadd( -16.4781, -80.8492, 6.54364, 0.51 ) }
    dend_49 { pt3dadd( -16.5545, -82.3872, 5.96979, 0.22 ) }
    dend_49 { pt3dadd( -16.4781, -84.0298, 5.29837, 0.66 ) }
    dend_49 { pt3dadd( -16.288, -85.1614, 4.8143, 1.09 ) }
    dend_49 { pt3dadd( -16.0324, -85.9925, 4.40851, 1.09 ) }
    dend_49 { pt3dadd( -15.305, -87.5981, 3.51618, 0.73 ) }
    dend_49 { pt3dadd( -14.5242, -88.8504, 2.70915, 0.36 ) }
    dend_49 { pt3dadd( -13.6309, -89.9538, 1.87934, 1.02 ) }
    dend_49 { pt3dadd( -13.42, -90.1645, 1.70429, 1.02 ) }
    dend_49 { pt3dadd( -12.5994, -90.8498, 1.09324, 0.22 ) }
    dend_49 { pt3dadd( -12.1187, -91.2015, 0.767833, 0.73 ) }
    dend_49 { pt3dadd( -11.3926, -91.6695, 0.315787, 1.09 ) }
    dend_49 { pt3dadd( -11.0787, -91.8792, 0.145358, 1.39 ) }
    dend_49 { pt3dadd( -10.578, -92.2546, -0.074769, 1.17 ) }
    dend_49 { pt3dadd( -9.10357, -93.5066, -0.708281, 0.44 ) }
    dend_49 { pt3dadd( -8.4286, -94.1561, -0.944427, 0.73 ) }
    dend_49 { pt3dadd( -7.45718, -95.2229, -1.23773, 0.22 ) }
    dend_49 { pt3dadd( -6.08896, -96.9204, -1.59825, 2.19 ) }
    dend_49 { pt3dadd( -4.83076, -98.7509, -1.96265, 0.36 ) }
    dend_49 { pt3dadd( -4.02015, -100.148, -2.21463, 0.15 ) }
    dend_49 { pt3dadd( -3.07068, -102.192, -2.53101, 1.61 ) }
    dend_49 { pt3dadd( -2.41248, -103.985, -2.76688, 0.15 ) }
    dend_49 { pt3dadd( -2.20035, -104.793, -2.86894, 0.29 ) }
    dend_49 { pt3dadd( -1.93022, -106.359, -3.07522, 0.07 ) }
    dend_49 { pt3dadd( -1.85316, -107.005, -3.17388, 0.07 ) }
    dend_49 { pt3dadd( -1.76942, -107.864, -3.30392, 1.02 ) }
    dend_49 { pt3dadd( -1.68845, -108.864, -3.48852, 0.51 ) }
    dend_49 { pt3dadd( -1.54119, -109.97, -3.65714, 0.07 ) }
    dend_49 { pt3dadd( -1.35269, -110.868, -3.78023, 0.07 ) }
    dend_49 { pt3dadd( -0.964793, -112.199, -3.92182, 1.75 ) }
    dend_49 { pt3dadd( -0.64642, -113.114, -4.02353, 1.97 ) }
    dend_49 { pt3dadd( -0.406365, -113.697, -4.06523, 1.97 ) }
    dend_49 { pt3dadd( 0.561404, -115.74, -4.15671, 0.07 ) }
    dend_49 { pt3dadd( 1.1536, -116.865, -4.18345, 1.9 ) }
    dend_49 { pt3dadd( 2.16662, -118.616, -4.13377, 0.07 ) }
    dend_49 { pt3dadd( 2.84603, -119.699, -4.03365, 1.02 ) }
    dend_49 { pt3dadd( 3.82021, -121.125, -3.807, 0.15 ) }
    dend_49 { pt3dadd( 4.22815, -121.702, -3.67715, 0.07 ) }
    dend_49 { pt3dadd( 5.07403, -122.871, -3.26773, 1.61 ) }
    dend_49 { pt3dadd( 5.83338, -123.974, -2.7622, 1.09 ) }
    dend_49 { pt3dadd( 6.45064, -124.923, -2.15062, 0.29 ) }
    dend_49 { pt3dadd( 6.73914, -125.485, -1.67011, 0.29 ) }
    dend_49 { pt3dadd( 6.86248, -125.902, -1.25169, 0.29 ) }
    dend_49 { pt3dadd( 6.94541, -126.752, -0.258672, 0.29 ) }
    dend_49 { pt3dadd( 6.91721, -127.038, 0.107547, 0.95 ) }
    dend_49 { pt3dadd( 6.68886, -128.02, 1.3295, 0.22 ) }
    dend_49 { pt3dadd( 6.45694, -128.683, 2.10468, 0.22 ) }
    dend_49 { pt3dadd( 6.24384, -129.31, 2.77044, 0.44 ) }
    dend_49 { pt3dadd( 5.91497, -130.338, 3.71297, 0.44 ) }
    dend_49 { pt3dadd( 5.73389, -130.944, 4.17109, 1.02 ) }
    dend_49 { pt3dadd( 5.36215, -132.404, 5.12751, 0.51 ) }
    dend_49 { pt3dadd( 5.1461, -133.528, 5.75737, 0.22 ) }
    dend_49 { pt3dadd( 5.0257, -134.802, 6.39253, 0.66 ) }
    dend_49 { pt3dadd( 5.08226, -135.836, 6.88647, 0.15 ) }
    dend_49 { pt3dadd( 5.21121, -136.404, 7.12082, 0.58 ) }
    dend_49 { pt3dadd( 5.72123, -137.552, 7.51062, 0.22 ) }
    dend_49 { pt3dadd( 6.24282, -138.335, 7.69999, 0.51 ) }
    dend_49 { pt3dadd( 7.21577, -139.505, 7.91372, 0.22 ) }
    dend_49 { pt3dadd( 8.39661, -140.798, 8.10169, 0.95 ) }
    dend_49 { pt3dadd( 9.24994, -141.671, 8.21866, 0.07 ) }
    dend_49 { pt3dadd( 10.0216, -142.444, 8.29411, 0.29 ) }
    dend_49 { pt3dadd( 10.6662, -143.084, 8.3567, 0.07 ) }
    dend_49 { pt3dadd( 11.0731, -143.512, 8.40898, 0.36 ) }
    dend_49 { pt3dadd( 11.7992, -144.354, 8.54339, 0.15 ) }
    dend_49 { pt3dadd( 12.5609, -145.354, 8.69571, 0.15 ) }
    dend_49 { pt3dadd( 13.2299, -146.295, 8.87338, 0.44 ) }
    dend_49 { pt3dadd( 13.9312, -147.326, 9.06652, 0.15 ) }
    dend_49 { pt3dadd( 14.3535, -147.933, 9.16198, 0.15 ) }
    dend_49 { pt3dadd( 14.792, -148.54, 9.23169, 0.8 ) }
    dend_49 { pt3dadd( 15.332, -149.257, 9.26965, 0.44 ) }
    dend_49 { pt3dadd( 16.1705, -150.394, 9.28663, 0.07 ) }
    dend_49 { pt3dadd( 16.6609, -151.105, 9.29691, 0.07 ) }
    dend_49 { pt3dadd( 17.045, -151.669, 9.27618, 0.07 ) }
    dend_49 { pt3dadd( 17.4913, -152.32, 9.26126, 0.07 ) }
    dend_49 { pt3dadd( 17.7116, -152.644, 9.25813, 0.29 ) }
    dend_49 { pt3dadd( 18.1703, -153.311, 9.25377, 0.07 ) }
    dend_49 { pt3dadd( 19.1453, -154.658, 9.19116, 0.07 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 84/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -10.3284, -29.0954, 0.730123, 0.29 ) }
    dend_46 { pt3dadd( -11.2529, -30.12, 0.160686, 0.29 ) }
    dend_46 { pt3dadd( -12.231, -31.0292, -0.286346, 0.36 ) }
    dend_46 { pt3dadd( -12.7615, -31.4737, -0.472101, 0.44 ) }
    dend_46 { pt3dadd( -13.9026, -32.3602, -0.866411, 0.66 ) }
    dend_46 { pt3dadd( -15.2039, -33.3662, -1.3038, 0.07 ) }
    dend_46 { pt3dadd( -15.9716, -33.9716, -1.5473, 0.58 ) }
    dend_46 { pt3dadd( -16.5667, -34.3932, -1.68624, 0.58 ) }
    dend_46 { pt3dadd( -17.315, -34.9309, -1.80428, 0.22 ) }
    dend_46 { pt3dadd( -18.3573, -35.797, -1.93353, 1.24 ) }
    dend_46 { pt3dadd( -18.89, -36.3529, -1.97754, 1.53 ) }
    dend_46 { pt3dadd( -19.4305, -37.1855, -2.0387, 1.31 ) }
    dend_46 { pt3dadd( -19.6956, -37.803, -2.07182, 0.95 ) }
    dend_46 { pt3dadd( -20.0296, -39.0098, -2.1079, 0.95 ) }
    dend_46 { pt3dadd( -20.2085, -40.0687, -2.11615, 0.29 ) }
    dend_46 { pt3dadd( -20.2773, -41.0226, -2.10526, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_46 { pt3dadd( -20.2946, -42.7958, -2.09967, 0.15 ) }
    dend_46 { pt3dadd( -20.2409, -44.1946, -2.11843, 0.58 ) }
    dend_46 { pt3dadd( -20.1338, -45.9257, -2.16034, 0.22 ) }
    dend_46 { pt3dadd( -20.0458, -47.3244, -2.20391, 1.68 ) }
    dend_46 { pt3dadd( -20.0087, -48.6321, -2.27216, 0.66 ) }
    dend_46 { pt3dadd( -20.0235, -49.4485, -2.32767, 0.29 ) }
    dend_46 { pt3dadd( -20.1188, -50.548, -2.41671, 0.58 ) }
    dend_46 { pt3dadd( -20.2298, -51.2142, -2.47254, 0.95 ) }
    dend_46 { pt3dadd( -20.5259, -52.333, -2.55844, 1.61 ) }
    dend_46 { pt3dadd( -21.2444, -54.2739, -2.67684, 0.07 ) }
    dend_46 { pt3dadd( -21.5243, -54.868, -2.7012, 0.95 ) }
    dend_46 { pt3dadd( -21.8907, -55.5054, -2.71089, 0.95 ) }
    dend_46 { pt3dadd( -23.0207, -57.0602, -2.67268, 0.07 ) }
    dend_46 { pt3dadd( -23.9378, -58.0757, -2.61032, 0.07 ) }
    dend_46 { pt3dadd( -24.5593, -58.6171, -2.54777, 0.88 ) }
    dend_46 { pt3dadd( -25.0704, -58.9511, -2.4794, 1.09 ) }
    dend_46 { pt3dadd( -26.1625, -59.5633, -2.3335, 0.58 ) }
    dend_46 { pt3dadd( -27.4114, -60.1766, -2.16682, 0.07 ) }
    dend_46 { pt3dadd( -28.4872, -60.5968, -2.02343, 1.31 ) }
    dend_46 { pt3dadd( -28.9062, -60.7437, -1.96762, 1.31 ) }
    dend_46 { pt3dadd( -30.7396, -61.3785, -1.72341, 0.51 ) }
    dend_46 { pt3dadd( -31.3005, -61.5831, -1.64868, 0.88 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 22/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 6.33544, 23.3307, -1.21284, 0.15 ) }
    dend_34 { pt3dadd( 6.44702, 23.3295, -1.01635, 0.15 ) }
    dend_34 { pt3dadd( 7.22018, 23.3508, 0.145669, 0.15 ) }
    dend_34 { pt3dadd( 7.90824, 23.4056, 1.11455, 0.29 ) }
    dend_34 { pt3dadd( 9.23283, 23.5795, 2.88396, 0.51 ) }
    dend_34 { pt3dadd( 10.0998, 23.7415, 4.03944, 0.51 ) }
    dend_34 { pt3dadd( 11.3061, 24.022, 5.69937, 0.66 ) }
    dend_34 { pt3dadd( 11.7059, 24.1423, 6.25233, 0.29 ) }
    dend_34 { pt3dadd( 12.0004, 24.2646, 6.68022, 0.58 ) }
    dend_34 { pt3dadd( 12.762, 24.7229, 7.96794, 0.22 ) }
    dend_34 { pt3dadd( 13.128, 25.0819, 8.86356, 0.07 ) }
    dend_34 { pt3dadd( 13.3059, 25.4063, 9.59816, 0.07 ) }
    dend_34 { pt3dadd( 13.4125, 25.792, 10.3563, 0.36 ) }
    dend_34 { pt3dadd( 13.5998, 26.2499, 11.3677, 0.36 ) }
    dend_34 { pt3dadd( 13.7626, 26.4268, 11.7679, 0.36 ) }
    dend_34 { pt3dadd( 14.1351, 26.6298, 12.1889, 0.73 ) }
    dend_34 { pt3dadd( 14.554, 26.8279, 12.5973, 0.73 ) }
    dend_34 { pt3dadd( 15.1877, 27.1826, 13.3195, 0.22 ) }
    dend_34 { pt3dadd( 15.8883, 27.7183, 14.3073, 0.22 ) }
    dend_34 { pt3dadd( 16.2596, 28.2434, 15.1071, 0.88 ) }
    dend_34 { pt3dadd( 16.5829, 29.2279, 16.4479, 0.58 ) }
    dend_34 { pt3dadd( 16.7052, 29.8936, 17.2888, 0.36 ) }
    dend_34 { pt3dadd( 16.8266, 30.7394, 18.2526, 0.88 ) }
    dend_34 { pt3dadd( 16.9131, 31.4734, 18.9907, 0.15 ) }
    dend_34 { pt3dadd( 17.1191, 32.6651, 20.0092, 0.44 ) }
    dend_34 { pt3dadd( 17.359, 33.5244, 20.6509, 0.22 ) }
    dend_34 { pt3dadd( 17.9462, 34.8562, 21.4024, 0.22 ) }
    dend_34 { pt3dadd( 18.4285, 35.6974, 21.8004, 0.73 ) }
    dend_34 { pt3dadd( 18.7944, 36.2421, 22.0369, 1.02 ) }
    dend_34 { pt3dadd( 19.641, 37.3693, 22.5861, 0.88 ) }
    dend_34 { pt3dadd( 20.1472, 38.0151, 22.9471, 0.88 ) }
    dend_34 { pt3dadd( 20.7073, 38.7866, 23.45, 0.22 ) }
    dend_34 { pt3dadd( 20.9632, 39.2293, 23.9025, 0.22 ) }
    dend_34 { pt3dadd( 21.1015, 39.5119, 24.5934, 0.58 ) }
    dend_34 { pt3dadd( 21.3394, 39.8845, 25.9148, 0.58 ) }
    dend_34 { pt3dadd( 21.4915, 40.0721, 26.7331, 0.58 ) }
    dend_34 { pt3dadd( 21.6398, 40.2478, 27.3162, 0.58 ) }
    dend_34 { pt3dadd( 21.9559, 40.5701, 28.1053, 0.58 ) }
    dend_34 { pt3dadd( 22.4261, 41.0886, 28.9706, 0.58 ) }
    dend_34 { pt3dadd( 23.2135, 42.0522, 30.2657, 0.58 ) }
    dend_34 { pt3dadd( 23.5431, 42.4897, 30.7874, 0.8 ) }
    dend_34 { pt3dadd( 24.1527, 43.3026, 31.7775, 0.51 ) }
    dend_34 { pt3dadd( 24.6562, 44.0643, 32.6518, 0.51 ) }
    dend_34 { pt3dadd( 24.8452, 44.4125, 33.0522, 0.51 ) }
    dend_34 { pt3dadd( 25.1621, 45.04, 33.9592, 0.51 ) }
    dend_34 { pt3dadd( 25.3004, 45.1982, 34.4959, 0.51 ) }
    dend_34 { pt3dadd( 25.4914, 45.3631, 35.4827, 0.51 ) }
    dend_34 { pt3dadd( 25.729, 45.6116, 36.8651, 0.51 ) }
    dend_34 { pt3dadd( 25.8159, 45.9045, 37.5911, 0.51 ) }
    dend_34 { pt3dadd( 25.933, 46.5612, 38.5065, 0.51 ) }
    dend_34 { pt3dadd( 26.1316, 47.7415, 39.5046, 0.51 ) }
    dend_34 { pt3dadd( 26.2527, 48.5333, 40.1318, 0.51 ) }
    dend_34 { pt3dadd( 26.3458, 49.3112, 40.8316, 0.51 ) }
    dend_34 { pt3dadd( 26.3957, 49.8085, 41.3289, 0.51 ) }
    dend_34 { pt3dadd( 26.4379, 50.3867, 41.8994, 0.51 ) }
    dend_34 { pt3dadd( 26.5394, 51.2774, 42.7682, 0.73 ) }
    dend_34 { pt3dadd( 26.8005, 52.2275, 43.6903, 0.29 ) }
    dend_34 { pt3dadd( 27.3745, 53.4817, 44.948, 0.29 ) }
    dend_34 { pt3dadd( 27.5828, 53.8607, 45.3573, 0.29 ) }
    dend_34 { pt3dadd( 27.756, 54.1848, 45.6907, 0.29 ) }
    dend_34 { pt3dadd( 28.022, 54.7054, 46.1641, 0.29 ) }
    dend_34 { pt3dadd( 28.5527, 55.6944, 46.8273, 0.29 ) }
    dend_34 { pt3dadd( 28.8397, 56.1536, 47.0623, 0.29 ) }
    dend_34 { pt3dadd( 29.4243, 57.0265, 47.4279, 0.29 ) }
    dend_34 { pt3dadd( 29.9264, 57.7194, 47.7084, 0.44 ) }
    dend_34 { pt3dadd( 30.4855, 58.4608, 48.0068, 0.44 ) }
    dend_34 { pt3dadd( 31.2235, 59.4452, 48.3816, 0.22 ) }
    dend_34 { pt3dadd( 32.141, 60.6077, 48.8417, 0.22 ) }
    dend_34 { pt3dadd( 32.7795, 61.3161, 49.1049, 0.22 ) }
    dend_34 { pt3dadd( 33.5837, 62.0916, 49.349, 0.07 ) }
    dend_34 { pt3dadd( 34.0949, 62.5324, 49.4741, 0.07 ) }
    dend_34 { pt3dadd( 34.841, 63.1723, 49.595, 0.07 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 94/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 6.33544, 23.3307, -1.21284, 0.51 ) }
    dend_33 { pt3dadd( 7.07085, 24.6023, -1.43375, 0.51 ) }
    dend_33 { pt3dadd( 7.79704, 25.7395, -1.3983, 0.73 ) }
    dend_33 { pt3dadd( 8.33913, 26.5919, -1.24738, 0.73 ) }
    dend_33 { pt3dadd( 8.80575, 27.33, -1.07974, 0.73 ) }
    dend_33 { pt3dadd( 9.65166, 28.5927, -0.789295, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_33 { pt3dadd( 10.6385, 29.9577, -0.491753, 0.66 ) }
    dend_33 { pt3dadd( 11.5225, 31.0225, -0.285885, 0.44 ) }
    dend_33 { pt3dadd( 12.5104, 32.1557, -0.071322, 0.95 ) }
    dend_33 { pt3dadd( 12.8896, 32.5965, -0.00252247, 0.95 ) }
    dend_33 { pt3dadd( 13.9551, 33.8499, 0.0572691, 0.73 ) }
    dend_33 { pt3dadd( 14.6908, 34.6975, -0.0390583, 1.02 ) }
    dend_33 { pt3dadd( 15.8647, 35.9145, -0.324942, 0.66 ) }
    dend_33 { pt3dadd( 16.3884, 36.3904, -0.556222, 0.07 ) }
    dend_33 { pt3dadd( 16.7243, 36.6641, -0.742536, 0.07 ) }
    dend_33 { pt3dadd( 17.4002, 37.1574, -1.15036, 0.51 ) }
    dend_33 { pt3dadd( 17.878, 37.4224, -1.44054, 0.15 ) }
    dend_33 { pt3dadd( 18.668, 37.7219, -1.87016, 0.15 ) }
    dend_33 { pt3dadd( 20.1371, 38.031, -2.54668, 0.73 ) }
    dend_33 { pt3dadd( 21.0739, 38.1005, -2.87509, 1.31 ) }
    dend_33 { pt3dadd( 22.4211, 38.0924, -3.15946, 0.07 ) }
    dend_33 { pt3dadd( 23.6624, 38.0479, -3.28873, 0.95 ) }
    dend_33 { pt3dadd( 24.3145, 38.0352, -3.30297, 0.95 ) }
    dend_33 { pt3dadd( 24.9867, 38.0339, -3.27178, 0.95 ) }
    dend_33 { pt3dadd( 26.8202, 38.0751, -3.01729, 0.07 ) }
    dend_33 { pt3dadd( 28.1034, 38.1314, -2.82613, 0.95 ) }
    dend_33 { pt3dadd( 28.9284, 38.2131, -2.76595, 0.95 ) }
    dend_33 { pt3dadd( 29.6152, 38.3154, -2.7973, 0.95 ) }
    dend_33 { pt3dadd( 30.5063, 38.491, -3.05081, 0.66 ) }
    dend_33 { pt3dadd( 31.5676, 38.7547, -3.6283, 0.29 ) }
    dend_33 { pt3dadd( 32.5546, 39.0146, -4.38949, 0.07 ) }
    dend_33 { pt3dadd( 34.007, 39.3751, -5.70212, 1.24 ) }
    dend_33 { pt3dadd( 34.6939, 39.5223, -6.35685, 1.24 ) }
    dend_33 { pt3dadd( 36.4501, 39.8429, -8.0597, 0.15 ) }
    dend_33 { pt3dadd( 37.1138, 39.957, -8.70214, 0.15 ) }
    dend_33 { pt3dadd( 37.7044, 40.056, -9.25056, 0.95 ) }
    dend_33 { pt3dadd( 38.2066, 40.1401, -9.68014, 1.17 ) }
    dend_33 { pt3dadd( 38.8938, 40.2158, -10.2274, 0.88 ) }
    dend_33 { pt3dadd( 39.5061, 40.1828, -10.8433, 0.88 ) }
    dend_33 { pt3dadd( 39.9877, 40.0859, -11.398, 0.22 ) }
    dend_33 { pt3dadd( 40.4214, 39.9554, -12.0131, 0.22 ) }
    dend_33 { pt3dadd( 40.9914, 39.7745, -12.8868, 1.02 ) }
    dend_33 { pt3dadd( 42.0344, 39.4896, -14.5809, 1.61 ) }
    dend_33 { pt3dadd( 43.535, 39.1735, -17.124, 0.07 ) }
    dend_33 { pt3dadd( 44.2239, 39.1182, -18.2765, 1.39 ) }
    dend_33 { pt3dadd( 45.1747, 39.1899, -19.7303, 1.46 ) }
    dend_33 { pt3dadd( 46.0673, 39.4318, -20.8882, 0.73 ) }
    dend_33 { pt3dadd( 46.9419, 39.8365, -21.7008, 0.29 ) }
    dend_33 { pt3dadd( 47.4826, 40.1766, -21.9874, 0.29 ) }
    dend_33 { pt3dadd( 48.8429, 41.2098, -22.3005, 1.17 ) }
    dend_33 { pt3dadd( 49.9864, 42.1183, -22.3993, 0.44 ) }
    dend_33 { pt3dadd( 50.897, 42.8568, -22.3964, 0.88 ) }
    dend_33 { pt3dadd( 52.2479, 43.959, -22.3638, 0.07 ) }
    dend_33 { pt3dadd( 53.2796, 44.7879, -22.3526, 1.24 ) }
    dend_33 { pt3dadd( 54.9203, 46.1838, -22.4404, 0.07 ) }
    dend_33 { pt3dadd( 55.8433, 47.0501, -22.5475, 0.66 ) }
    dend_33 { pt3dadd( 56.3526, 47.6199, -22.662, 0.07 ) }
    dend_33 { pt3dadd( 56.8857, 48.3968, -22.8955, 0.07 ) }
    dend_33 { pt3dadd( 57.6343, 49.8611, -23.4606, 1.17 ) }
    dend_33 { pt3dadd( 58.0563, 51.2118, -23.9543, 0.07 ) }
    dend_33 { pt3dadd( 58.1532, 51.8823, -24.2189, 0.07 ) }
    dend_33 { pt3dadd( 58.1967, 52.743, -24.548, 0.88 ) }
    dend_33 { pt3dadd( 58.159, 54.5807, -25.204, 0.07 ) }
    dend_33 { pt3dadd( 58.1036, 55.28, -25.4312, 0.66 ) }
    dend_33 { pt3dadd( 57.8204, 57.1339, -26.0921, 0.15 ) }
    dend_33 { pt3dadd( 57.4172, 59.105, -26.8346, 0.15 ) }
    dend_33 { pt3dadd( 57.2221, 59.7715, -27.092, 0.36 ) }
    dend_33 { pt3dadd( 56.9549, 60.497, -27.3595, 0.07 ) }
    dend_33 { pt3dadd( 56.8385, 60.7703, -27.4559, 0.07 ) }
    dend_33 { pt3dadd( 56.1331, 62.5176, -28.0052, 0.07 ) }
    dend_33 { pt3dadd( 55.8802, 63.2704, -28.1954, 0.29 ) }
    dend_33 { pt3dadd( 55.449, 65.3428, -28.3286, 0.07 ) }
    dend_33 { pt3dadd( 55.4069, 66.2816, -28.4365, 0.07 ) }
    dend_33 { pt3dadd( 55.4853, 67.1258, -28.5539, 0.07 ) }
    dend_33 { pt3dadd( 55.7584, 68.4969, -28.744, 0.29 ) }
    dend_33 { pt3dadd( 56.0602, 69.4093, -28.8625, 0.07 ) }
    dend_33 { pt3dadd( 56.6794, 70.7894, -29.1555, 0.07 ) }
    dend_33 { pt3dadd( 58.3184, 73.6148, -30.0227, 0.07 ) }
    dend_33 { pt3dadd( 58.7711, 74.2826, -30.2786, 0.07 ) }
    dend_33 { pt3dadd( 59.461, 75.1563, -30.686, 0.36 ) }
    dend_33 { pt3dadd( 60.4738, 76.122, -31.3551, 0.07 ) }
    dend_33 { pt3dadd( 61.1531, 76.7016, -31.8181, 0.07 ) }
    dend_33 { pt3dadd( 62.1006, 77.3684, -32.4664, 0.29 ) }
    dend_33 { pt3dadd( 63.1129, 77.8599, -32.9933, 0.07 ) }
    dend_33 { pt3dadd( 63.9203, 78.1592, -33.4436, 0.36 ) }
    dend_33 { pt3dadd( 65.9536, 78.617, -34.6641, 0.15 ) }
    dend_33 { pt3dadd( 73.3741, 83.918, -38.5554, 0.15 ) }
    dend_33 { pt3dadd( 80.3608, 88.9795, -43.4592, 0.15 ) }
    dend_33 { pt3dadd( 87.1569, 94.5355, -48.0576, 0.15 ) }
    dend_33 { pt3dadd( 92.7855, 100.937, -53.064, 0.15 ) }
    dend_33 { pt3dadd( 96.2941, 108.116, -58.846, 0.15 ) }
    dend_33 { pt3dadd( 99.3497, 114.819, -65.4345, 0.15 ) }
    // Section: dend_25, id: dend_25, parent: dend_19 (entry count 86/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 29.7394, 6.67353, -8.41713, 0.8 ) }
    dend_25 { pt3dadd( 31.158, 5.55435, -9.24659, 0.8 ) }
    dend_25 { pt3dadd( 31.7107, 5.13491, -9.53311, 0.44 ) }
    dend_25 { pt3dadd( 32.6079, 4.47571, -10.0063, 1.09 ) }
    dend_25 { pt3dadd( 33.178, 4.05836, -10.2622, 1.39 ) }
    dend_25 { pt3dadd( 34.0166, 3.46803, -10.6164, 1.39 ) }
    dend_25 { pt3dadd( 34.7681, 2.939, -10.9338, 1.39 ) }
    dend_25 { pt3dadd( 35.5857, 2.35306, -11.2419, 1.39 ) }
    dend_25 { pt3dadd( 36.5685, 1.6731, -11.5944, 1.39 ) }
    dend_25 { pt3dadd( 37.9649, 0.75591, -12.0835, 1.39 ) }
    dend_25 { pt3dadd( 39.2768, -0.0687232, -12.4896, 1.75 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 97/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 29.7394, 6.67353, -8.41713, 0.66 ) }
    dend_20 { pt3dadd( 29.7292, 7.52852, -8.55728, 0.66 ) }
    dend_20 { pt3dadd( 29.7534, 8.46251, -8.57557, 0.58 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_20 { pt3dadd( 29.7724, 8.90495, -8.54032, 0.8 ) }
    dend_20 { pt3dadd( 29.8095, 9.51235, -8.46048, 0.44 ) }
    dend_20 { pt3dadd( 29.8559, 10.0636, -8.36893, 0.44 ) }
    dend_20 { pt3dadd( 29.944, 10.7953, -8.24048, 1.02 ) }
    dend_20 { pt3dadd( 30.1194, 11.7318, -8.01512, 0.66 ) }
    dend_20 { pt3dadd( 30.2667, 12.2962, -7.86586, 0.66 ) }
    dend_20 { pt3dadd( 30.4367, 12.8631, -7.74297, 0.66 ) }
    dend_20 { pt3dadd( 30.6613, 13.5622, -7.6581, 0.22 ) }
    dend_20 { pt3dadd( 30.8561, 14.1525, -7.64849, 0.66 ) }
    dend_20 { pt3dadd( 30.9632, 14.5026, -7.68763, 0.88 ) }
    dend_20 { pt3dadd( 31.1528, 15.3053, -7.91478, 0.36 ) }
    dend_20 { pt3dadd( 31.2968, 16.1198, -8.21762, 0.22 ) }
    dend_20 { pt3dadd( 31.4265, 17.1311, -8.66575, 1.02 ) }
    dend_20 { pt3dadd( 31.463, 17.5558, -8.87502, 1.53 ) }
    dend_20 { pt3dadd( 31.4978, 18.4235, -9.32898, 1.53 ) }
    dend_20 { pt3dadd( 31.5086, 19.5427, -9.93105, 0.44 ) }
    dend_20 { pt3dadd( 31.4995, 20.0789, -10.2238, 0.8 ) }
    dend_20 { pt3dadd( 31.4977, 20.8119, -10.6319, 0.44 ) }
    dend_20 { pt3dadd( 31.5165, 21.429, -10.9566, 0.66 ) }
    dend_20 { pt3dadd( 31.5635, 22.0604, -11.2577, 1.75 ) }
    dend_20 { pt3dadd( 31.6081, 22.404, -11.3951, 1.75 ) }
    dend_20 { pt3dadd( 31.7811, 23.4447, -11.6795, 1.09 ) }
    dend_20 { pt3dadd( 31.9521, 24.4805, -11.9285, 0.44 ) }
    dend_20 { pt3dadd( 32.038, 25.0758, -12.056, 0.44 ) }
    dend_20 { pt3dadd( 32.1092, 25.5917, -12.1535, 0.73 ) }
    dend_20 { pt3dadd( 32.2049, 26.274, -12.2722, 1.68 ) }
    dend_20 { pt3dadd( 32.4005, 27.7282, -12.5109, 0.07 ) }
    dend_20 { pt3dadd( 32.5192, 28.7296, -12.6719, 1.09 ) }
    dend_20 { pt3dadd( 32.5988, 29.5873, -12.8057, 0.07 ) }
    dend_20 { pt3dadd( 32.6426, 30.2203, -12.9208, 0.07 ) }
    dend_20 { pt3dadd( 32.6832, 31.0257, -13.0761, 1.31 ) }
    dend_20 { pt3dadd( 32.695, 31.3756, -13.146, 1.31 ) }
    dend_20 { pt3dadd( 32.7425, 32.6458, -13.398, 0.15 ) }
    dend_20 { pt3dadd( 32.7965, 33.2793, -13.5052, 0.15 ) }
    dend_20 { pt3dadd( 32.9407, 34.3715, -13.6797, 1.17 ) }
    dend_20 { pt3dadd( 33.1309, 35.4662, -13.8653, 0.07 ) }
    dend_20 { pt3dadd( 33.3584, 36.4189, -14.0398, 1.9 ) }
    dend_20 { pt3dadd( 33.4753, 36.7391, -14.096, 2.04 ) }
    dend_20 { pt3dadd( 34.0805, 37.7798, -14.2399, 0.29 ) }
    dend_20 { pt3dadd( 34.3256, 38.0888, -14.276, 0.95 ) }
    dend_20 { pt3dadd( 34.6026, 38.3767, -14.2929, 0.95 ) }
    dend_20 { pt3dadd( 35.1707, 38.9212, -14.2935, 0.22 ) }
    dend_20 { pt3dadd( 36.0911, 39.8365, -14.2759, 1.24 ) }
    dend_20 { pt3dadd( 36.8653, 40.7179, -14.2629, 0.07 ) }
    dend_20 { pt3dadd( 37.2567, 41.2482, -14.2621, 0.07 ) }
    dend_20 { pt3dadd( 37.678, 41.9349, -14.277, 0.95 ) }
    dend_20 { pt3dadd( 38.0272, 42.6221, -14.3166, 0.22 ) }
    dend_20 { pt3dadd( 38.3276, 43.3397, -14.3887, 0.22 ) }
    dend_20 { pt3dadd( 38.5395, 43.9091, -14.5075, 1.17 ) }
    dend_20 { pt3dadd( 38.71, 44.3651, -14.6351, 1.17 ) }
    dend_20 { pt3dadd( 39.0785, 45.1594, -14.9109, 0.07 ) }
    dend_20 { pt3dadd( 39.385, 45.6531, -15.1379, 1.09 ) }
    dend_20 { pt3dadd( 39.5545, 45.8526, -15.2325, 1.09 ) }
    dend_20 { pt3dadd( 40.3848, 46.6045, -15.5588, 0.22 ) }
    dend_20 { pt3dadd( 40.3848, 46.6045, -15.5588, 0.44 ) }
    dend_20 { pt3dadd( 40.7845, 46.8753, -15.6597, 0.15 ) }
    dend_20 { pt3dadd( 41.3839, 47.2281, -15.8292, 0.15 ) }
    dend_20 { pt3dadd( 42.3358, 47.7277, -16.1518, 0.44 ) }
    dend_20 { pt3dadd( 42.6555, 47.8873, -16.2648, 0.44 ) }
    dend_20 { pt3dadd( 43.0926, 48.0895, -16.4244, 0.07 ) }
    dend_20 { pt3dadd( 43.8717, 48.4201, -16.7273, 1.82 ) }
    dend_20 { pt3dadd( 45.0548, 48.8636, -17.2436, 0.07 ) }
    dend_20 { pt3dadd( 46.0455, 49.1657, -17.7254, 0.07 ) }
    dend_20 { pt3dadd( 46.4188, 49.2723, -17.9341, 1.61 ) }
    dend_20 { pt3dadd( 46.7326, 49.3483, -18.1116, 1.61 ) }
    dend_20 { pt3dadd( 47.5368, 49.4987, -18.5669, 0.22 ) }
    dend_20 { pt3dadd( 48.1606, 49.5798, -18.904, 0.22 ) }
    dend_20 { pt3dadd( 48.783, 49.6289, -19.2172, 1.02 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 68/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -114.613, -83.2941, -2.40562, 0.15 ) }
    dend_16 { pt3dadd( -115.121, -84.6405, -2.21771, 0.15 ) }
    dend_16 { pt3dadd( -115.447, -85.5882, -2.09527, 0.36 ) }
    dend_16 { pt3dadd( -115.674, -86.3694, -2.00828, 0.15 ) }
    dend_16 { pt3dadd( -116.011, -87.5338, -1.9, 0.15 ) }
    dend_16 { pt3dadd( -116.28, -88.4157, -1.7961, 0.15 ) }
    dend_16 { pt3dadd( -116.472, -89.0716, -1.70974, 0.73 ) }
    dend_16 { pt3dadd( -116.637, -89.738, -1.62602, 0.73 ) }
    dend_16 { pt3dadd( -116.928, -91.0494, -1.43497, 0.07 ) }
    dend_16 { pt3dadd( -117.099, -91.8836, -1.30626, 0.66 ) }
    dend_16 { pt3dadd( -117.374, -93.3129, -1.09647, 0.07 ) }
    dend_16 { pt3dadd( -117.496, -93.9058, -1.01469, 0.07 ) }
    dend_16 { pt3dadd( -117.6, -94.3866, -0.956657, 0.07 ) }
    dend_16 { pt3dadd( -117.673, -94.7236, -0.922075, 0.44 ) }
    dend_16 { pt3dadd( -117.812, -95.5285, -0.855849, 0.95 ) }
    dend_16 { pt3dadd( -117.917, -96.6484, -0.795075, 0.51 ) }
    dend_16 { pt3dadd( -117.924, -97.4155, -0.78499, 0.22 ) }
    dend_16 { pt3dadd( -117.914, -97.8267, -0.777199, 0.22 ) }
    dend_16 { pt3dadd( -117.86, -98.6497, -0.755803, 0.88 ) }
    dend_16 { pt3dadd( -117.772, -99.3164, -0.730973, 0.88 ) }
    dend_16 { pt3dadd( -117.693, -99.7387, -0.704773, 0.88 ) }
    dend_16 { pt3dadd( -117.491, -100.652, -0.631951, 0.15 ) }
    dend_16 { pt3dadd( -117.393, -101.116, -0.592447, 0.15 ) }
    dend_16 { pt3dadd( -117.3, -101.811, -0.508316, 0.15 ) }
    dend_16 { pt3dadd( -117.272, -102.415, -0.391286, 0.15 ) }
    dend_16 { pt3dadd( -117.297, -103.559, -0.120737, 0.95 ) }
    dend_16 { pt3dadd( -117.324, -104.155, 0.0364852, 1.17 ) }
    dend_16 { pt3dadd( -117.378, -105.15, 0.319551, 0.58 ) }
    dend_16 { pt3dadd( -117.417, -106.615, 0.758411, 0.22 ) }
    dend_16 { pt3dadd( -117.409, -107.791, 1.15667, 0.22 ) }
    dend_16 { pt3dadd( -117.408, -108.362, 1.35712, 0.51 ) }
    dend_16 { pt3dadd( -117.412, -109.26, 1.66986, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_16 { pt3dadd( -117.422, -109.856, 1.86664, 0.73 ) }
    dend_16 { pt3dadd( -117.43, -110.454, 2.04428, 0.73 ) }
    dend_16 { pt3dadd( -117.392, -111.42, 2.2617, 0.36 ) }
    dend_16 { pt3dadd( -117.302, -112.504, 2.44572, 0.66 ) }
    dend_16 { pt3dadd( -117.22, -113.181, 2.55704, 0.22 ) }
    dend_16 { pt3dadd( -117.146, -113.661, 2.63978, 0.07 ) }
    dend_16 { pt3dadd( -117.075, -114.007, 2.71657, 0.36 ) }
    dend_16 { pt3dadd( -116.869, -114.811, 2.9108, 0.07 ) }
    dend_16 { pt3dadd( -116.663, -115.498, 3.07252, 0.36 ) }
    dend_16 { pt3dadd( -116.355, -116.357, 3.30113, 0.15 ) }
    dend_16 { pt3dadd( -116.122, -116.97, 3.47801, 0.44 ) }
    dend_16 { pt3dadd( -115.648, -118.204, 3.85678, 0.22 ) }
    dend_16 { pt3dadd( -115.237, -119.342, 4.22376, 0.22 ) }
    dend_16 { pt3dadd( -114.884, -120.456, 4.6054, 0.88 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 14/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -114.613, -83.2941, -2.40562, 0.07 ) }
    dend_15 { pt3dadd( -115.836, -84.5163, -3.34906, 0.07 ) }
    dend_15 { pt3dadd( -116.445, -85.113, -3.86367, 0.73 ) }
    dend_15 { pt3dadd( -117.145, -85.8098, -4.45908, 0.07 ) }
    dend_15 { pt3dadd( -117.73, -86.4221, -4.95292, 0.95 ) }
    dend_15 { pt3dadd( -117.992, -86.7149, -5.16093, 0.95 ) }
    dend_15 { pt3dadd( -119.235, -88.131, -6.06682, 0.07 ) }
    dend_15 { pt3dadd( -119.58, -88.5394, -6.31235, 0.07 ) }
    dend_15 { pt3dadd( -120.105, -89.1321, -6.62996, 0.8 ) }
    dend_15 { pt3dadd( -120.574, -89.6498, -6.84873, 1.02 ) }
    dend_15 { pt3dadd( -121.68, -90.8163, -7.22746, 0.29 ) }
    dend_15 { pt3dadd( -122.372, -91.5022, -7.4066, 0.29 ) }
    dend_15 { pt3dadd( -122.995, -92.0646, -7.51115, 0.36 ) }
    dend_15 { pt3dadd( -123.56, -92.5524, -7.60107, 1.09 ) }
    dend_15 { pt3dadd( -125.252, -93.8961, -7.85664, 0.07 ) }
    dend_15 { pt3dadd( -125.86, -94.331, -7.944, 0.07 ) }
    dend_15 { pt3dadd( -126.592, -94.815, -8.04535, 0.66 ) }
    dend_15 { pt3dadd( -127.971, -95.7047, -8.23283, 0.29 ) }
    dend_15 { pt3dadd( -128.865, -96.2689, -8.3643, 1.46 ) }
    dend_15 { pt3dadd( -129.591, -96.7079, -8.48478, 0.88 ) }
    dend_15 { pt3dadd( -130.714, -97.3492, -8.69136, 0.15 ) }
    dend_15 { pt3dadd( -131.419, -97.7411, -8.83358, 0.15 ) }
    dend_15 { pt3dadd( -132.15, -98.1181, -8.99943, 0.51 ) }
    dend_15 { pt3dadd( -133.41, -98.7278, -9.3654, 0.15 ) }
    dend_15 { pt3dadd( -133.974, -98.983, -9.55591, 0.44 ) }
    dend_15 { pt3dadd( -134.498, -99.1971, -9.74564, 0.44 ) }
    dend_15 { pt3dadd( -135.42, -99.4944, -10.0876, 0.07 ) }
    dend_15 { pt3dadd( -136.616, -99.7677, -10.5191, 0.07 ) }
    dend_15 { pt3dadd( -137.548, -99.8907, -10.8865, 0.8 ) }
    dend_15 { pt3dadd( -138.454, -99.9467, -11.254, 0.29 ) }
    dend_15 { pt3dadd( -139.674, -99.9607, -11.7236, 0.07 ) }
    dend_15 { pt3dadd( -140.563, -99.9337, -12.0614, 0.95 ) }
    dend_15 { pt3dadd( -141.227, -99.9047, -12.297, 1.31 ) }
    dend_15 { pt3dadd( -142.908, -99.8177, -12.8328, 0.07 ) }
    dend_15 { pt3dadd( -143.718, -99.7817, -13.0834, 1.09 ) }
    dend_15 { pt3dadd( -145.794, -99.7117, -13.7286, 0.07 ) }
    dend_15 { pt3dadd( -146.86, -99.6947, -14.0549, 0.95 ) }
    dend_15 { pt3dadd( -148.507, -99.6807, -14.5325, 0.07 ) }
    dend_15 { pt3dadd( -149.667, -99.6537, -14.8381, 0.07 ) }
    dend_15 { pt3dadd( -150.992, -99.6215, -15.137, 0.88 ) }
    dend_15 { pt3dadd( -152.783, -99.5939, -15.4991, 0.07 ) }
    dend_15 { pt3dadd( -153.382, -99.5929, -15.6032, 0.36 ) }
    dend_15 { pt3dadd( -154.375, -99.6133, -15.7387, 0.07 ) }
    dend_15 { pt3dadd( -155.326, -99.6627, -15.8394, 1.17 ) }
    dend_15 { pt3dadd( -156.141, -99.7647, -15.8959, 1.53 ) }
    dend_15 { pt3dadd( -157.514, -100.08, -15.981, 0.07 ) }
    dend_15 { pt3dadd( -158.235, -100.323, -16.0796, 0.29 ) }
    dend_15 { pt3dadd( -158.736, -100.513, -16.2046, 0.07 ) }
    dend_15 { pt3dadd( -159.358, -100.761, -16.421, 0.07 ) }
    dend_15 { pt3dadd( -160.133, -101.055, -16.7557, 0.36 ) }
    dend_15 { pt3dadd( -161.503, -101.552, -17.4519, 0.07 ) }
    dend_15 { pt3dadd( -162.382, -101.861, -17.995, 0.07 ) }
    dend_15 { pt3dadd( -163.38, -102.193, -18.6663, 0.58 ) }
    dend_15 { pt3dadd( -163.876, -102.326, -19.0208, 0.58 ) }
    dend_15 { pt3dadd( -164.351, -102.411, -19.3848, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 69/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -144.595, 121.41, 33.5834, 0.51 ) }
    dend_10 { pt3dadd( -144.92, 122.738, 33.159, 0.51 ) }
    dend_10 { pt3dadd( -145.173, 123.933, 32.7812, 0.51 ) }
    dend_10 { pt3dadd( -145.466, 125.488, 32.3381, 0.51 ) }
    dend_10 { pt3dadd( -145.645, 126.422, 32.0958, 0.51 ) }
    dend_10 { pt3dadd( -145.82, 127.329, 31.8613, 0.73 ) }
    dend_10 { pt3dadd( -146.051, 128.433, 31.5822, 0.44 ) }
    dend_10 { pt3dadd( -146.385, 129.832, 31.2615, 0.15 ) }
    dend_10 { pt3dadd( -146.683, 131.106, 31.038, 0.36 ) }
    dend_10 { pt3dadd( -146.881, 131.914, 30.8805, 0.07 ) }
    dend_10 { pt3dadd( -147.154, 133.008, 30.6321, 0.58 ) }
    dend_10 { pt3dadd( -147.365, 133.764, 30.4449, 0.36 ) }
    dend_10 { pt3dadd( -147.655, 134.675, 30.1972, 1.24 ) }
    dend_10 { pt3dadd( -148.151, 136.185, 29.7864, 0.29 ) }
    dend_10 { pt3dadd( -148.558, 137.464, 29.4219, 0.29 ) }
    dend_10 { pt3dadd( -148.763, 138.078, 29.2269, 0.73 ) }
    dend_10 { pt3dadd( -149.028, 138.805, 28.985, 0.73 ) }
    dend_10 { pt3dadd( -149.496, 139.983, 28.579, 0.07 ) }
    dend_10 { pt3dadd( -149.885, 140.854, 28.2846, 0.07 ) }
    dend_10 { pt3dadd( -150.311, 141.729, 28.0356, 0.58 ) }
    dend_10 { pt3dadd( -151.087, 143.242, 27.7276, 0.29 ) }
    dend_10 { pt3dadd( -151.265, 143.6, 27.6682, 0.29 ) }
    dend_10 { pt3dadd( -151.82, 144.686, 27.5033, 1.53 ) }
    dend_10 { pt3dadd( -152.238, 145.471, 27.4092, 1.53 ) }
    dend_10 { pt3dadd( -153.18, 147.204, 27.2386, 0.51 ) }
    dend_10 { pt3dadd( -153.784, 148.361, 27.1716, 0.29 ) }
    dend_10 { pt3dadd( -154.421, 149.79, 27.1955, 0.29 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 96/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -144.595, 121.41, 33.5834, 0.36 ) }
    dend_9 { pt3dadd( -146.097, 121.338, 33.1137, 0.36 ) }
    dend_9 { pt3dadd( -146.941, 121.347, 32.8464, 0.58 ) }
    dend_9 { pt3dadd( -147.502, 121.376, 32.6743, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( -148.026, 121.453, 32.5275, 0.58 ) }
    dend_9 { pt3dadd( -148.884, 121.64, 32.3046, 0.29 ) }
    dend_9 { pt3dadd( -149.586, 121.819, 32.1395, 0.88 ) }
    dend_9 { pt3dadd( -150.387, 122.064, 31.9813, 1.17 ) }
    dend_9 { pt3dadd( -150.794, 122.193, 31.9094, 1.17 ) }
    dend_9 { pt3dadd( -152.003, 122.538, 31.7562, 0.15 ) }
    dend_9 { pt3dadd( -152.427, 122.638, 31.7244, 0.15 ) }
    dend_9 { pt3dadd( -153.159, 122.787, 31.7191, 0.15 ) }
    dend_9 { pt3dadd( -153.93, 122.919, 31.736, 0.15 ) }
    dend_9 { pt3dadd( -154.384, 122.982, 31.7488, 0.44 ) }
    dend_9 { pt3dadd( -156.073, 123.178, 31.8028, 0.22 ) }
    dend_9 { pt3dadd( -156.752, 123.25, 31.8262, 0.22 ) }
    dend_9 { pt3dadd( -157.477, 123.351, 31.8516, 1.75 ) }
    dend_9 { pt3dadd( -158.013, 123.458, 31.8704, 1.97 ) }
    dend_9 { pt3dadd( -159.658, 123.867, 31.8974, 0.51 ) }
    dend_9 { pt3dadd( -160.138, 123.986, 31.8881, 0.51 ) }
    dend_9 { pt3dadd( -160.712, 124.1, 31.8562, 0.8 ) }
    dend_9 { pt3dadd( -161.375, 124.196, 31.802, 0.07 ) }
    dend_9 { pt3dadd( -162.073, 124.26, 31.7306, 0.22 ) }
    dend_9 { pt3dadd( -162.79, 124.31, 31.6532, 0.07 ) }
    dend_9 { pt3dadd( -164.133, 124.409, 31.5738, 0.88 ) }
    dend_9 { pt3dadd( -165.274, 124.467, 31.6222, 0.07 ) }
    dend_9 { pt3dadd( -166.087, 124.489, 31.7538, 0.36 ) }
    dend_9 { pt3dadd( -166.883, 124.497, 31.9539, 0.07 ) }
    dend_9 { pt3dadd( -167.408, 124.493, 32.1237, 0.07 ) }
    dend_9 { pt3dadd( -168.846, 124.462, 32.6975, 1.46 ) }
    dend_9 { pt3dadd( -170.24, 124.394, 33.3759, 0.07 ) }
    dend_9 { pt3dadd( -171.372, 124.269, 33.9714, 0.58 ) }
    dend_9 { pt3dadd( -172.37, 123.984, 34.478, 0.07 ) }
    dend_9 { pt3dadd( -172.704, 123.826, 34.6314, 0.07 ) }
    dend_9 { pt3dadd( -173.033, 123.603, 34.7551, 0.07 ) }
    dend_9 { pt3dadd( -173.833, 122.942, 34.9523, 0.07 ) }
    dend_9 { pt3dadd( -174.539, 122.356, 35.0554, 0.8 ) }
    dend_9 { pt3dadd( -176.294, 120.929, 35.2295, 0.07 ) }
    dend_9 { pt3dadd( -176.861, 120.458, 35.2832, 0.07 ) }
    dend_9 { pt3dadd( -177.667, 119.812, 35.3486, 0.07 ) }
    dend_9 { pt3dadd( -178.879, 118.886, 35.4179, 0.07 ) }
    dend_9 { pt3dadd( -179.906, 118.129, 35.4267, 0.36 ) }
    dend_9 { pt3dadd( -180.312, 117.871, 35.4315, 0.36 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 39/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -21.287, 15.0802, -0.860404, 1.02 ) }
    dend_5 { pt3dadd( -21.8441, 16.4444, -0.901216, 1.02 ) }
    dend_5 { pt3dadd( -22.235, 17.5426, -0.894125, 1.02 ) }
    dend_5 { pt3dadd( -22.8596, 19.3925, -0.851789, 1.24 ) }
    dend_5 { pt3dadd( -23.2521, 20.6795, -0.779417, 0.8 ) }
    dend_5 { pt3dadd( -23.5791, 21.8687, -0.694231, 0.58 ) }
    dend_5 { pt3dadd( -23.9133, 23.2328, -0.546384, 0.07 ) }
    dend_5 { pt3dadd( -24.1627, 24.4825, -0.362265, 0.07 ) }
    dend_5 { pt3dadd( -24.3231, 25.3853, -0.188438, 0.51 ) }
    dend_5 { pt3dadd( -24.5305, 26.4136, 0.0197073, 0.8 ) }
    dend_5 { pt3dadd( -25.1077, 28.6946, 0.492594, 0.15 ) }
    dend_5 { pt3dadd( -25.4923, 29.9556, 0.760114, 1.09 ) }
    dend_5 { pt3dadd( -25.86, 30.9731, 0.958885, 1.39 ) }
    dend_5 { pt3dadd( -26.2609, 32.0169, 1.15616, 1.17 ) }
    dend_5 { pt3dadd( -26.9869, 33.981, 1.48844, 0.36 ) }
    dend_5 { pt3dadd( -27.4407, 35.2277, 1.67021, 0.36 ) }
    dend_5 { pt3dadd( -27.8545, 36.4716, 1.83208, 0.36 ) }
    dend_5 { pt3dadd( -28.2977, 38.0482, 1.98443, 0.95 ) }
    dend_5 { pt3dadd( -28.5278, 39.1773, 2.08201, 0.58 ) }
    dend_5 { pt3dadd( -28.7053, 40.3544, 2.21707, 0.29 ) }
    dend_5 { pt3dadd( -28.8894, 41.5637, 2.37649, 1.17 ) }
    dend_5 { pt3dadd( -29.1499, 42.8622, 2.52619, 1.39 ) }
    dend_5 { pt3dadd( -29.4684, 43.9883, 2.64376, 0.95 ) }
    dend_5 { pt3dadd( -30.0248, 45.4747, 2.80049, 0.29 ) }
    dend_5 { pt3dadd( -30.8145, 47.1579, 2.95554, 0.07 ) }
    dend_5 { pt3dadd( -31.7469, 48.8984, 3.08275, 0.58 ) }
    dend_5 { pt3dadd( -32.3197, 49.8612, 3.13047, 0.58 ) }
    dend_5 { pt3dadd( -32.8762, 50.751, 3.15913, 0.95 ) }
    dend_5 { pt3dadd( -33.3939, 51.5946, 3.16654, 1.61 ) }
    dend_5 { pt3dadd( -34.4398, 53.4106, 3.12849, 0.88 ) }
    dend_5 { pt3dadd( -35.0732, 54.6763, 3.05781, 0.44 ) }
    dend_5 { pt3dadd( -35.5779, 55.8086, 3.05242, 0.73 ) }
    dend_5 { pt3dadd( -35.9515, 56.6439, 3.09127, 0.29 ) }
    dend_5 { pt3dadd( -36.4897, 57.7915, 3.15808, 0.15 ) }
    dend_5 { pt3dadd( -36.9098, 58.6272, 3.2006, 0.66 ) }
    dend_5 { pt3dadd( -37.3787, 59.5136, 3.23931, 0.95 ) }
    dend_5 { pt3dadd( -38.0988, 60.8352, 3.28384, 1.17 ) }
    dend_5 { pt3dadd( -39.419, 63.1085, 3.33743, 0.29 ) }
    dend_5 { pt3dadd( -39.9954, 63.9749, 3.34808, 0.66 ) }
    dend_5 { pt3dadd( -40.9537, 65.2687, 3.34577, 0.29 ) }
    dend_5 { pt3dadd( -41.5877, 66.0709, 3.32945, 0.29 ) }
    dend_5 { pt3dadd( -42.1267, 66.7023, 3.29989, 0.8 ) }
    dend_5 { pt3dadd( -42.7643, 67.3799, 3.24053, 1.02 ) }
    dend_5 { pt3dadd( -43.923, 68.4515, 3.171, 0.29 ) }
    dend_5 { pt3dadd( -44.605, 69.0247, 3.15568, 0.29 ) }
    dend_5 { pt3dadd( -45.0344, 69.3486, 3.15678, 0.88 ) }
    dend_5 { pt3dadd( -45.5915, 69.7344, 3.15898, 1.17 ) }
    dend_5 { pt3dadd( -46.5085, 70.3299, 3.16352, 1.17 ) }
    dend_5 { pt3dadd( -47.8452, 71.1848, 3.17043, 0.07 ) }
    dend_5 { pt3dadd( -48.6283, 71.7006, 3.17413, 0.44 ) }
    dend_5 { pt3dadd( -49.1385, 72.035, 3.15777, 0.44 ) }
    dend_5 { pt3dadd( -49.9459, 72.5819, 3.10983, 0.36 ) }
    dend_5 { pt3dadd( -50.9266, 73.2788, 3.08059, 0.58 ) }
    dend_5 { pt3dadd( -52.2682, 74.2928, 3.07388, 0.22 ) }
    dend_5 { pt3dadd( -53.1182, 74.9852, 3.12339, 0.44 ) }
    dend_5 { pt3dadd( -54.2437, 75.9688, 3.24452, 0.22 ) }
    dend_5 { pt3dadd( -54.8394, 76.5047, 3.32092, 0.29 ) }
    dend_5 { pt3dadd( -56.1547, 77.7385, 3.53362, 2.04 ) }
    dend_5 { pt3dadd( -56.8313, 78.4046, 3.67906, 2.04 ) }
    dend_5 { pt3dadd( -58.1746, 79.7547, 4.07939, 1.53 ) }
    dend_5 { pt3dadd( -58.8768, 80.4501, 4.35451, 1.24 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 0/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -21.287, 15.0802, -0.860404, 0.44 ) }
    dend_2 { pt3dadd( -22.6905, 14.5853, -1.0516, 0.44 ) }
    dend_2 { pt3dadd( -23.2679, 14.4479, -1.1174, 0.66 ) }
    dend_2 { pt3dadd( -23.8911, 14.3739, -1.20763, 0.29 ) }
    dend_2 { pt3dadd( -24.4575, 14.3479, -1.30735, 0.58 ) }
    dend_2 { pt3dadd( -25.1804, 14.3407, -1.44246, 0.58 ) }
    dend_2 { pt3dadd( -26.0697, 14.3318, -1.60866, 0.36 ) }
    dend_2 { pt3dadd( -27.1298, 14.4003, -1.79051, 0.66 ) }
    dend_2 { pt3dadd( -28.617, 14.556, -2.08362, 0.8 ) }
    dend_2 { pt3dadd( -29.6301, 14.6893, -2.31272, 0.8 ) }
    dend_2 { pt3dadd( -29.8482, 14.7268, -2.36842, 0.8 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 11/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -31.3005, -61.5831, -1.64868, 0.15 ) }
    dend_48 { pt3dadd( -32.2933, -63.423, -2.71264, 0.15 ) }
    dend_48 { pt3dadd( -32.6345, -64.1147, -3.0964, 0.73 ) }
    dend_48 { pt3dadd( -33.8218, -66.5936, -4.32647, 0.07 ) }
    dend_48 { pt3dadd( -34.4671, -67.8947, -4.92038, 0.07 ) }
    dend_48 { pt3dadd( -35.3642, -69.6277, -5.65012, 0.29 ) }
    dend_48 { pt3dadd( -36.1025, -70.9754, -6.18277, 0.07 ) }
    dend_48 { pt3dadd( -36.6234, -71.8715, -6.51502, 0.73 ) }
    dend_48 { pt3dadd( -37.654, -73.3569, -6.97038, 0.07 ) }
    dend_48 { pt3dadd( -38.4693, -74.2293, -7.08064, 0.07 ) }
    dend_48 { pt3dadd( -39.3174, -75.0365, -7.16032, 0.36 ) }
    dend_48 { pt3dadd( -40.1604, -75.7321, -7.1833, 0.07 ) }
    dend_48 { pt3dadd( -41.2834, -76.548, -7.14733, 0.36 ) }
    dend_48 { pt3dadd( -43.5023, -77.9767, -7.05571, 0.07 ) }
    dend_48 { pt3dadd( -46.3083, -79.5398, -6.87321, 0.66 ) }
    dend_48 { pt3dadd( -53.4267, -88.7812, -8.74114, 0.66 ) }
    dend_48 { pt3dadd( -60.3729, -97.8483, -11.8163, 0.66 ) }
    dend_48 { pt3dadd( -67.7975, -106.358, -15.4102, 0.66 ) }
    dend_48 { pt3dadd( -72.6145, -116.269, -19.6423, 0.66 ) }
    dend_48 { pt3dadd( -78.2318, -125.964, -23.3745, 0.66 ) }
    dend_48 { pt3dadd( -84.4086, -134.853, -28.1858, 0.66 ) }
    dend_48 { pt3dadd( -90.8276, -142.946, -34.0447, 0.66 ) }
    dend_48 { pt3dadd( -96.6346, -152.447, -38.0062, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -31.3005, -61.5831, -1.64868, 0.07 ) }
    dend_47 { pt3dadd( -33.5531, -62.2225, -2.09815, 0.07 ) }
    dend_47 { pt3dadd( -34.598, -62.4304, -2.3922, 0.29 ) }
    dend_47 { pt3dadd( -35.3108, -62.5476, -2.65136, 0.95 ) }
    dend_47 { pt3dadd( -35.9107, -62.6031, -2.90122, 0.95 ) }
    dend_47 { pt3dadd( -37.3204, -62.6864, -3.51265, 0.07 ) }
    dend_47 { pt3dadd( -38.9665, -62.7603, -4.23093, 0.07 ) }
    dend_47 { pt3dadd( -40.1897, -62.8046, -4.90905, 1.53 ) }
    dend_47 { pt3dadd( -41.2203, -62.8648, -5.52864, 1.53 ) }
    dend_47 { pt3dadd( -43.7813, -63.1847, -7.18352, 0.15 ) }
    dend_47 { pt3dadd( -44.0635, -63.2372, -7.37193, 0.51 ) }
    dend_47 { pt3dadd( -44.5623, -63.3735, -7.70328, 1.02 ) }
    dend_47 { pt3dadd( -46.9683, -64.351, -9.36098, 0.07 ) }
    dend_47 { pt3dadd( -47.5963, -64.6882, -9.79147, 0.8 ) }
    dend_47 { pt3dadd( -49.156, -65.7539, -10.9146, 0.15 ) }
    dend_47 { pt3dadd( -49.5279, -66.0959, -11.2101, 0.15 ) }
    dend_47 { pt3dadd( -50.1523, -66.7611, -11.7481, 0.8 ) }
    dend_47 { pt3dadd( -51.4939, -68.3607, -12.9459, 0.07 ) }
    dend_47 { pt3dadd( -52.0297, -69.0507, -13.4704, 0.07 ) }
    dend_47 { pt3dadd( -52.5321, -69.7244, -14.0496, 0.07 ) }
    dend_47 { pt3dadd( -53.1489, -70.5983, -14.8556, 0.36 ) }
    dend_47 { pt3dadd( -53.6984, -71.4074, -15.6145, 0.07 ) }
    dend_47 { pt3dadd( -54.0388, -71.9431, -16.0997, 0.95 ) }
    dend_47 { pt3dadd( -55.4692, -74.2892, -17.9729, 0.07 ) }
    dend_47 { pt3dadd( -55.8442, -74.8874, -18.3811, 0.07 ) }
    dend_47 { pt3dadd( -56.4337, -75.8117, -18.8951, 0.44 ) }
    dend_47 { pt3dadd( -57.0314, -76.7876, -19.2656, 0.15 ) }
    dend_47 { pt3dadd( -57.5318, -77.6952, -19.4419, 0.15 ) }
    dend_47 { pt3dadd( -58.2423, -79.1063, -19.5276, 1.02 ) }
    dend_47 { pt3dadd( -58.8449, -80.388, -19.4566, 0.29 ) }
    dend_47 { pt3dadd( -59.2156, -81.2021, -19.3862, 0.66 ) }
    dend_47 { pt3dadd( -60.1436, -83.2846, -19.1739, 0.07 ) }
    dend_47 { pt3dadd( -60.8856, -84.995, -19.002, 0.36 ) }
    dend_47 { pt3dadd( -61.7223, -86.9935, -18.8068, 0.07 ) }
    dend_47 { pt3dadd( -62.2923, -88.4807, -18.6579, 0.07 ) }
    dend_47 { pt3dadd( -62.7074, -89.6518, -18.5623, 0.51 ) }
    dend_47 { pt3dadd( -63.0829, -90.7504, -18.4968, 0.07 ) }
    dend_47 { pt3dadd( -63.5349, -92.1306, -18.5197, 0.36 ) }
    dend_47 { pt3dadd( -63.8191, -92.9448, -18.5891, 0.15 ) }
    dend_47 { pt3dadd( -64.2492, -94.1067, -18.7425, 0.29 ) }
    dend_47 { pt3dadd( -64.6233, -95.0655, -18.9014, 0.07 ) }
    dend_47 { pt3dadd( -65.3255, -96.741, -19.2377, 0.66 ) }
    dend_47 { pt3dadd( -66.1955, -98.6977, -19.7014, 0.22 ) }
    dend_47 { pt3dadd( -67.0963, -100.575, -20.2192, 0.07 ) }
    dend_47 { pt3dadd( -67.958, -102.256, -20.7242, 0.36 ) }
    dend_47 { pt3dadd( -73.6584, -110.837, -21.876, 0.36 ) }
    dend_47 { pt3dadd( -79.796, -119.19, -21.6169, 0.36 ) }
    dend_47 { pt3dadd( -86.7152, -126.915, -20.9613, 0.36 ) }
    dend_47 { pt3dadd( -93.5807, -134.686, -20.3046, 0.36 ) }
    dend_47 { pt3dadd( -100.561, -142.38, -19.9299, 0.36 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 84/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 39.2768, -0.0687232, -12.4896, 0.51 ) }
    dend_27 { pt3dadd( 39.1494, -0.0510772, -13.4455, 0.51 ) }
    dend_27 { pt3dadd( 39.1172, -0.101185, -14.0885, 0.29 ) }
    dend_27 { pt3dadd( 39.1488, -0.246137, -15.343, 0.29 ) }
    dend_27 { pt3dadd( 39.3001, -0.507945, -16.9556, 0.51 ) }
    dend_27 { pt3dadd( 39.362, -0.59603, -17.4322, 0.8 ) }
    dend_27 { pt3dadd( 39.4448, -0.727379, -18.0187, 0.8 ) }
    dend_27 { pt3dadd( 39.5943, -1.01988, -19.0691, 0.8 ) }
    dend_27 { pt3dadd( 39.8784, -1.54789, -20.4395, 1.02 ) }
    dend_27 { pt3dadd( 40.1825, -2.01721, -21.4065, 0.8 ) }
    dend_27 { pt3dadd( 40.7309, -2.7411, -22.6988, 0.8 ) }
    dend_27 { pt3dadd( 41.1241, -3.23261, -23.5009, 0.22 ) }
    dend_27 { pt3dadd( 41.5592, -3.75986, -24.2602, 1.17 ) }
    dend_27 { pt3dadd( 42.3046, -4.6382, -25.2754, 0.58 ) }
    dend_27 { pt3dadd( 42.7311, -5.13855, -25.7056, 0.44 ) }
    dend_27 { pt3dadd( 43.1531, -5.62955, -26.0659, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_27 { pt3dadd( 43.6273, -6.179, -26.4234, 0.44 ) }
    dend_27 { pt3dadd( 44.0365, -6.61947, -26.7586, 0.44 ) }
    dend_27 { pt3dadd( 44.7795, -7.32138, -27.4261, 0.95 ) }
    dend_27 { pt3dadd( 45.3362, -7.79507, -27.9762, 1.24 ) }
    dend_27 { pt3dadd( 45.9203, -8.22537, -28.5422, 1.24 ) }
    dend_27 { pt3dadd( 46.3224, -8.46031, -28.8954, 1.24 ) }
    dend_27 { pt3dadd( 47.3974, -8.94038, -29.7515, 0.22 ) }
    dend_27 { pt3dadd( 48.4695, -9.30181, -30.5286, 0.36 ) }
    dend_27 { pt3dadd( 49.6947, -9.67574, -31.3697, 0.8 ) }
    dend_27 { pt3dadd( 50.674, -9.99104, -32.0171, 0.51 ) }
    dend_27 { pt3dadd( 51.444, -10.2625, -32.5278, 0.44 ) }
    dend_27 { pt3dadd( 51.9203, -10.4513, -32.8548, 0.44 ) }
    dend_27 { pt3dadd( 52.676, -10.8175, -33.4341, 0.44 ) }
    dend_27 { pt3dadd( 53.6564, -11.3466, -34.4486, 0.8 ) }
    dend_27 { pt3dadd( 54.2882, -11.7223, -35.301, 1.31 ) }
    dend_27 { pt3dadd( 54.6759, -12.0022, -35.9562, 1.31 ) }
    dend_27 { pt3dadd( 55.0141, -12.2884, -36.6033, 1.31 ) }
    dend_27 { pt3dadd( 55.6466, -12.8554, -37.8438, 0.8 ) }
    dend_27 { pt3dadd( 56.5585, -13.6649, -39.7009, 0.8 ) }
    dend_27 { pt3dadd( 57.0851, -14.1174, -40.7978, 1.02 ) }
    dend_27 { pt3dadd( 57.6974, -14.6439, -42.1745, 1.02 ) }
    dend_27 { pt3dadd( 58.2381, -15.1231, -43.5217, 0.22 ) }
    dend_27 { pt3dadd( 58.599, -15.475, -44.5341, 0.73 ) }
    dend_27 { pt3dadd( 58.9178, -15.7978, -45.6293, 1.31 ) }
    dend_27 { pt3dadd( 59.0189, -15.8907, -46.0116, 1.53 ) }
    dend_27 { pt3dadd( 59.4812, -16.134, -47.8419, 0.22 ) }
    dend_27 { pt3dadd( 59.8018, -16.1774, -49.045, 0.88 ) }
    dend_27 { pt3dadd( 60.0806, -16.1308, -49.9639, 0.88 ) }
    dend_27 { pt3dadd( 60.8245, -15.9076, -51.8022, 0.29 ) }
    dend_27 { pt3dadd( 61.1908, -15.7813, -52.4242, 0.88 ) }
    dend_27 { pt3dadd( 61.8858, -15.5216, -53.2266, 1.46 ) }
    dend_27 { pt3dadd( 62.668, -15.2701, -53.7999, 1.75 ) }
    dend_27 { pt3dadd( 63.7947, -14.991, -54.3258, 1.39 ) }
    dend_27 { pt3dadd( 65.1625, -14.7432, -54.7261, 0.29 ) }
    dend_27 { pt3dadd( 65.9828, -14.65, -54.8582, 0.29 ) }
    dend_27 { pt3dadd( 67.3007, -14.5828, -54.9412, 1.02 ) }
    dend_27 { pt3dadd( 68.5623, -14.5744, -54.8884, 1.02 ) }
    dend_27 { pt3dadd( 70.0638, -14.5917, -54.6652, 0.44 ) }
    dend_27 { pt3dadd( 70.8753, -14.6161, -54.4612, 0.22 ) }
    dend_27 { pt3dadd( 71.4021, -14.631, -54.2979, 0.51 ) }
    dend_27 { pt3dadd( 72.6021, -14.632, -53.9173, 0.15 ) }
    dend_27 { pt3dadd( 73.2677, -14.5891, -53.7147, 0.15 ) }
    dend_27 { pt3dadd( 73.953, -14.4751, -53.5671, 0.15 ) }
    dend_27 { pt3dadd( 74.7401, -14.322, -53.4786, 0.15 ) }
    dend_27 { pt3dadd( 75.7167, -14.1669, -53.4524, 0.8 ) }
    dend_27 { pt3dadd( 76.9466, -14.0388, -53.5391, 1.02 ) }
    dend_27 { pt3dadd( 77.6371, -13.9958, -53.6588, 1.02 ) }
    dend_27 { pt3dadd( 78.3369, -13.9887, -53.8192, 1.02 ) }
    dend_27 { pt3dadd( 79.8212, -14.0389, -54.2339, 0.07 ) }
    dend_27 { pt3dadd( 80.5297, -14.0921, -54.4773, 0.07 ) }
    dend_27 { pt3dadd( 81.2631, -14.1696, -54.7803, 0.07 ) }
    dend_27 { pt3dadd( 82.0761, -14.2696, -55.1672, 0.66 ) }
    dend_27 { pt3dadd( 82.6881, -14.339, -55.5094, 0.95 ) }
    dend_27 { pt3dadd( 83.217, -14.3819, -55.8768, 0.95 ) }
    dend_27 { pt3dadd( 84.4756, -14.3715, -56.9903, 0.44 ) }
    dend_27 { pt3dadd( 85.4009, -14.2528, -57.8961, 1.17 ) }
    dend_27 { pt3dadd( 85.8684, -14.1406, -58.3864, 1.17 ) }
    dend_27 { pt3dadd( 86.6531, -13.8116, -59.4013, 0.07 ) }
    dend_27 { pt3dadd( 87.1855, -13.4276, -60.3739, 0.58 ) }
    dend_27 { pt3dadd( 87.5552, -12.7925, -61.7014, 0.22 ) }
    dend_27 { pt3dadd( 87.5566, -12.417, -62.3615, 0.58 ) }
    dend_27 { pt3dadd( 87.5013, -12.1853, -62.7016, 0.58 ) }
    dend_27 { pt3dadd( 87.1978, -11.1781, -63.9887, 0.58 ) }
    dend_27 { pt3dadd( 86.9044, -10.3333, -64.956, 0.22 ) }
    dend_27 { pt3dadd( 86.7397, -9.83374, -65.5123, 0.22 ) }
    dend_27 { pt3dadd( 86.6223, -9.54953, -65.8762, 0.22 ) }
    dend_27 { pt3dadd( 86.4348, -8.82122, -67.1553, 0.58 ) }
    dend_27 { pt3dadd( 86.4937, -8.50379, -67.9669, 0.22 ) }
    dend_27 { pt3dadd( 86.5993, -8.46909, -68.2193, 0.22 ) }
    dend_27 { pt3dadd( 86.9458, -8.38906, -68.8046, 0.22 ) }
    dend_27 { pt3dadd( 87.3592, -8.27336, -69.5392, 0.73 ) }
    dend_27 { pt3dadd( 87.835, -8.1682, -70.4932, 1.31 ) }
    dend_27 { pt3dadd( 88.0867, -8.13732, -71.0435, 1.31 ) }
    dend_27 { pt3dadd( 88.504, -8.06448, -71.96, 0.15 ) }
    dend_27 { pt3dadd( 89.2223, -7.85365, -73.1917, 0.29 ) }
    dend_27 { pt3dadd( 89.9761, -7.4722, -74.2568, 0.29 ) }
    dend_27 { pt3dadd( 90.3447, -7.2826, -74.6887, 0.29 ) }
    dend_27 { pt3dadd( 90.6697, -7.15659, -75.0322, 0.29 ) }
    dend_27 { pt3dadd( 90.9839, -7.06305, -75.3521, 0.29 ) }
    dend_27 { pt3dadd( 92.0529, -6.87878, -76.4255, 0.58 ) }
    dend_27 { pt3dadd( 93.1781, -6.82074, -77.5656, 0.22 ) }
    dend_27 { pt3dadd( 94.6634, -6.84151, -79.1141, 1.82 ) }
    dend_27 { pt3dadd( 96.2052, -6.9016, -80.8063, 0.36 ) }
    dend_27 { pt3dadd( 97.1861, -6.97727, -81.9286, 0.15 ) }
    dend_27 { pt3dadd( 98.2445, -7.13079, -83.2154, 0.66 ) }
    dend_27 { pt3dadd( 98.8028, -7.27112, -83.9527, 0.29 ) }
    dend_27 { pt3dadd( 99.7492, -7.60518, -85.2482, 1.53 ) }
    dend_27 { pt3dadd( 100.844, -8.06145, -86.8626, 0.15 ) }
    dend_27 { pt3dadd( 101.424, -8.35223, -87.727, 0.73 ) }
    dend_27 { pt3dadd( 102.086, -8.78057, -88.7399, 0.36 ) }
    dend_27 { pt3dadd( 102.824, -9.30868, -89.8564, 1.02 ) }
    dend_27 { pt3dadd( 103.274, -9.65034, -90.5149, 1.02 ) }
    dend_27 { pt3dadd( 103.938, -10.1985, -91.4746, 0.36 ) }
    dend_27 { pt3dadd( 104.731, -10.8634, -92.5995, 2.04 ) }
    dend_27 { pt3dadd( 106.087, -11.9109, -94.5187, 0.07 ) }
    dend_27 { pt3dadd( 106.773, -12.399, -95.5528, 0.07 ) }
    dend_27 { pt3dadd( 107.236, -12.7101, -96.2895, 0.07 ) }
    dend_27 { pt3dadd( 107.977, -13.2229, -97.5877, 1.02 ) }
    dend_27 { pt3dadd( 108.974, -13.9947, -99.6108, 0.36 ) }
    dend_27 { pt3dadd( 109.66, -14.6155, -101.327, 1.97 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_27 { pt3dadd( 110.308, -15.3643, -103.378, 0.07 ) }
    dend_27 { pt3dadd( 110.471, -15.7366, -104.269, 0.07 ) }
    dend_27 { pt3dadd( 110.513, -16.2812, -105.376, 0.73 ) }
    dend_27 { pt3dadd( 110.364, -17.0098, -106.605, 0.44 ) }
    dend_27 { pt3dadd( 110.12, -17.6282, -107.482, 1.09 ) }
    dend_27 { pt3dadd( 109.882, -18.1375, -108.101, 1.09 ) }
    dend_27 { pt3dadd( 108.996, -19.9172, -110.05, 0.22 ) }
    dend_27 { pt3dadd( 108.239, -21.3494, -111.56, 1.17 ) }
    dend_27 { pt3dadd( 107.67, -22.4303, -112.627, 0.22 ) }
    dend_27 { pt3dadd( 107.294, -23.0693, -113.267, 0.58 ) }
    dend_27 { pt3dadd( 106.912, -23.6544, -113.855, 0.22 ) }
    dend_27 { pt3dadd( 106.472, -24.267, -114.494, 0.44 ) }
    dend_27 { pt3dadd( 105.861, -25.0503, -115.334, 0.07 ) }
    dend_27 { pt3dadd( 105.373, -25.6312, -115.991, 0.29 ) }
    dend_27 { pt3dadd( 104.007, -27.1134, -117.792, 0.07 ) }
    dend_27 { pt3dadd( 103.335, -27.7931, -118.659, 0.07 ) }
    dend_27 { pt3dadd( 102.56, -28.4809, -119.59, 0.8 ) }
    dend_27 { pt3dadd( 107.686, -28.7051, -128.581, 0.8 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 18/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 39.2768, -0.0687232, -12.4896, 0.07 ) }
    dend_26 { pt3dadd( 40.1758, -0.221588, -12.4037, 0.07 ) }
    dend_26 { pt3dadd( 40.6354, -0.27746, -12.2814, 0.07 ) }
    dend_26 { pt3dadd( 41.0048, -0.313568, -12.1035, 0.07 ) }
    dend_26 { pt3dadd( 41.3194, -0.333941, -11.9305, 0.36 ) }
    dend_26 { pt3dadd( 41.8416, -0.399291, -11.6609, 0.07 ) }
    dend_26 { pt3dadd( 42.3477, -0.489422, -11.4606, 0.07 ) }
    dend_26 { pt3dadd( 43.0836, -0.613064, -11.2073, 0.58 ) }
    dend_26 { pt3dadd( 43.456, -0.670209, -11.1035, 0.58 ) }
    dend_26 { pt3dadd( 43.9501, -0.725559, -10.977, 0.58 ) }
    dend_26 { pt3dadd( 44.7987, -0.795399, -10.8253, 0.8 ) }
    dend_26 { pt3dadd( 45.7106, -0.905039, -10.7312, 0.07 ) }
    dend_26 { pt3dadd( 46.1909, -0.992089, -10.7152, 0.07 ) }
    dend_26 { pt3dadd( 46.7913, -1.15354, -10.7274, 0.66 ) }
    dend_26 { pt3dadd( 47.1226, -1.28011, -10.7393, 0.66 ) }
    dend_26 { pt3dadd( 47.681, -1.59061, -10.7467, 0.07 ) }
    dend_26 { pt3dadd( 48.3367, -2.05852, -10.6964, 0.07 ) }
    dend_26 { pt3dadd( 48.6677, -2.34033, -10.6217, 0.07 ) }
    dend_26 { pt3dadd( 48.9408, -2.57773, -10.5432, 0.07 ) }
    dend_26 { pt3dadd( 49.4376, -2.98827, -10.4128, 0.07 ) }
    dend_26 { pt3dadd( 49.9396, -3.36801, -10.2955, 0.07 ) }
    dend_26 { pt3dadd( 50.772, -3.92635, -10.1321, 0.66 ) }
    dend_26 { pt3dadd( 51.8183, -4.52649, -9.98846, 0.66 ) }
    dend_26 { pt3dadd( 52.9195, -5.08628, -9.9081, 0.29 ) }
    dend_26 { pt3dadd( 53.5821, -5.39718, -9.88401, 0.8 ) }
    dend_26 { pt3dadd( 54.2363, -5.66772, -9.89832, 0.07 ) }
    dend_26 { pt3dadd( 54.7373, -5.85064, -9.94093, 0.07 ) }
    dend_26 { pt3dadd( 55.1566, -5.96839, -10.0162, 0.44 ) }
    dend_26 { pt3dadd( 55.7951, -6.09601, -10.1435, 0.44 ) }
    dend_26 { pt3dadd( 56.6436, -6.22433, -10.3142, 0.73 ) }
    dend_26 { pt3dadd( 57.4275, -6.32437, -10.4391, 0.73 ) }
    dend_26 { pt3dadd( 58.0639, -6.38113, -10.5202, 0.73 ) }
    dend_26 { pt3dadd( 58.9422, -6.44309, -10.5901, 0.44 ) }
    dend_26 { pt3dadd( 60.1943, -6.50056, -10.6407, 0.73 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 48.783, 49.6289, -19.2172, 0.07 ) }
    dend_22 { pt3dadd( 49.8059, 50.2191, -19.6811, 0.07 ) }
    dend_22 { pt3dadd( 50.9576, 50.8835, -20.2033, 0.07 ) }
    dend_22 { pt3dadd( 51.3908, 51.1335, -20.3997, 0.07 ) }
    dend_22 { pt3dadd( 52.3385, 51.6802, -20.8295, 0.07 ) }
    dend_22 { pt3dadd( 54.0342, 52.6585, -21.5984, 1.75 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 58/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 48.783, 49.6289, -19.2172, 0.07 ) }
    dend_21 { pt3dadd( 49.5841, 49.3306, -18.9706, 0.07 ) }
    dend_21 { pt3dadd( 50.511, 48.969, -18.7144, 0.36 ) }
    dend_21 { pt3dadd( 51.027, 48.7583, -18.5716, 0.29 ) }
    dend_21 { pt3dadd( 51.5434, 48.5389, -18.3686, 0.51 ) }
    dend_21 { pt3dadd( 52.1883, 48.2542, -18.088, 0.22 ) }
    dend_21 { pt3dadd( 53.37, 47.728, -17.5607, 0.95 ) }
    dend_21 { pt3dadd( 54.149, 47.3772, -17.2077, 0.07 ) }
    dend_21 { pt3dadd( 55.1432, 46.9261, -16.7472, 0.73 ) }
    dend_21 { pt3dadd( 56.6237, 46.2397, -15.9795, 0.22 ) }
    dend_21 { pt3dadd( 56.9285, 46.0938, -15.8027, 0.44 ) }
    dend_21 { pt3dadd( 57.217, 45.9449, -15.6148, 0.07 ) }
    dend_21 { pt3dadd( 57.5222, 45.7784, -15.4079, 0.44 ) }
    dend_21 { pt3dadd( 64.0006, 43.2435, -13.2192, 0.44 ) }
    dend_21 { pt3dadd( 71.0414, 41.8638, -11.829, 0.44 ) }
    dend_21 { pt3dadd( 78.0123, 40.2782, -10.3224, 0.44 ) }
    dend_21 { pt3dadd( 85.0795, 39.1782, -8.81013, 0.44 ) }
    dend_21 { pt3dadd( 92.2669, 39.2719, -7.45765, 0.44 ) }
    dend_21 { pt3dadd( 99.3792, 40.514, -6.32609, 0.44 ) }
    dend_21 { pt3dadd( 106.31, 42.7744, -6.58796, 0.44 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 78/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -154.421, 149.79, 27.1955, 0.07 ) }
    dend_12 { pt3dadd( -153.88, 150.411, 26.8689, 0.07 ) }
    dend_12 { pt3dadd( -153.055, 151.464, 26.242, 1.02 ) }
    dend_12 { pt3dadd( -151.961, 152.994, 25.3072, 0.07 ) }
    dend_12 { pt3dadd( -151.457, 153.826, 24.7906, 0.36 ) }
    dend_12 { pt3dadd( -150.802, 155.061, 24.0318, 0.07 ) }
    dend_12 { pt3dadd( -150.392, 155.912, 23.4831, 0.36 ) }
    dend_12 { pt3dadd( -150.075, 156.788, 22.892, 0.07 ) }
    dend_12 { pt3dadd( -149.958, 157.395, 22.461, 0.29 ) }
    dend_12 { pt3dadd( -149.916, 158.722, 21.5091, 0.07 ) }
    dend_12 { pt3dadd( -149.953, 159.121, 21.2216, 1.17 ) }
    dend_12 { pt3dadd( -150.217, 160.406, 20.3587, 0.15 ) }
    dend_12 { pt3dadd( -150.482, 161.347, 19.7516, 1.09 ) }
    dend_12 { pt3dadd( -150.916, 162.57, 18.9811, 0.51 ) }
    dend_12 { pt3dadd( -151.243, 163.348, 18.5076, 0.73 ) }
    dend_12 { pt3dadd( -151.983, 165.018, 17.5487, 0.07 ) }
    dend_12 { pt3dadd( -152.515, 166.217, 16.9089, 0.07 ) }
    dend_12 { pt3dadd( -152.711, 166.627, 16.7175, 0.44 ) }
    dend_12 { pt3dadd( -153.64, 168.538, 15.8918, 0.07 ) }
    dend_12 { pt3dadd( -154.195, 169.705, 15.4338, 0.88 ) }
    dend_12 { pt3dadd( -154.965, 171.378, 14.8203, 0.15 ) }
    dend_12 { pt3dadd( -155.307, 172.156, 14.5575, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_12 { pt3dadd( -155.934, 173.697, 14.0223, 0.07 ) }
    dend_12 { pt3dadd( -156.101, 174.109, 13.8887, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -154.421, 149.79, 27.1955, 0.44 ) }
    dend_11 { pt3dadd( -154.817, 150.607, 27.1885, 0.44 ) }
    dend_11 { pt3dadd( -155.122, 151.219, 27.1694, 0.07 ) }
    dend_11 { pt3dadd( -155.282, 151.523, 27.1568, 0.07 ) }
    dend_11 { pt3dadd( -155.568, 152.012, 27.1356, 1.17 ) }
    dend_11 { pt3dadd( -155.837, 152.472, 27.1157, 0.07 ) }
    dend_11 { pt3dadd( -156.052, 152.838, 27.0998, 0.07 ) }
    dend_11 { pt3dadd( -156.273, 153.198, 27.0524, 0.07 ) }
    dend_11 { pt3dadd( -156.556, 153.628, 26.9995, 0.95 ) }
    dend_11 { pt3dadd( -157.118, 154.456, 26.9217, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 12/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -58.8768, 80.4501, 4.35451, 0.22 ) }
    dend_7 { pt3dadd( -58.0198, 80.7569, 3.88547, 0.22 ) }
    dend_7 { pt3dadd( -57.8598, 80.8086, 3.80992, 0.51 ) }
    dend_7 { pt3dadd( -56.6002, 81.2059, 3.29434, 0.15 ) }
    dend_7 { pt3dadd( -56.0373, 81.3775, 3.0683, 0.44 ) }
    dend_7 { pt3dadd( -55.3778, 81.5692, 2.80981, 0.15 ) }
    dend_7 { pt3dadd( -54.4218, 81.8257, 2.50299, 0.44 ) }
    dend_7 { pt3dadd( -53.7979, 81.939, 2.40091, 0.44 ) }
    dend_7 { pt3dadd( -52.9149, 82.0306, 2.35394, 0.15 ) }
    dend_7 { pt3dadd( -51.9858, 82.0631, 2.40179, 0.15 ) }
    dend_7 { pt3dadd( -51.5126, 82.06, 2.44896, 0.15 ) }
    dend_7 { pt3dadd( -50.2333, 82.0127, 2.63245, 0.15 ) }
    dend_7 { pt3dadd( -48.5785, 81.8986, 2.91052, 0.29 ) }
    dend_7 { pt3dadd( -47.6549, 81.8188, 3.06982, 0.07 ) }
    dend_7 { pt3dadd( -47.0257, 81.7445, 3.18132, 0.29 ) }
    dend_7 { pt3dadd( -46.5032, 81.671, 3.22544, 0.07 ) }
    dend_7 { pt3dadd( -46.0428, 81.5944, 3.20124, 0.07 ) }
    dend_7 { pt3dadd( -45.5395, 81.4911, 3.08034, 0.07 ) }
    dend_7 { pt3dadd( -44.6359, 81.2676, 2.73431, 0.88 ) }
    dend_7 { pt3dadd( -44.3087, 81.1522, 2.59058, 0.88 ) }
    dend_7 { pt3dadd( -42.7782, 80.3842, 1.8152, 0.07 ) }
    dend_7 { pt3dadd( -42.4927, 80.2066, 1.66662, 0.07 ) }
    dend_7 { pt3dadd( -42.254, 80.0471, 1.55258, 0.07 ) }
    dend_7 { pt3dadd( -41.3881, 79.4612, 1.21503, 0.07 ) }
    dend_7 { pt3dadd( -40.5231, 78.8946, 1.01668, 0.29 ) }
    dend_7 { pt3dadd( -39.4228, 78.2842, 0.955674, 0.07 ) }
    dend_7 { pt3dadd( -38.5424, 77.8803, 1.03981, 0.07 ) }
    dend_7 { pt3dadd( -37.6546, 77.557, 1.18391, 0.07 ) }
    dend_7 { pt3dadd( -36.8405, 77.3135, 1.38239, 0.07 ) }
    dend_7 { pt3dadd( -35.63, 77.0375, 1.80662, 0.07 ) }
    dend_7 { pt3dadd( -34.46, 76.8766, 2.32345, 0.36 ) }
    dend_7 { pt3dadd( -33.9347, 76.8471, 2.60437, 0.07 ) }
    dend_7 { pt3dadd( -33.3523, 76.8444, 2.93136, 0.07 ) }
    dend_7 { pt3dadd( -32.5419, 76.8346, 3.35605, 0.36 ) }
    dend_7 { pt3dadd( -32.1868, 76.8162, 3.51853, 0.07 ) }
    dend_7 { pt3dadd( -31.8668, 76.7678, 3.64541, 0.07 ) }
    dend_7 { pt3dadd( -31.3765, 76.6028, 3.86034, 0.07 ) }
    dend_7 { pt3dadd( -30.8757, 76.3881, 4.07213, 0.07 ) }
    dend_7 { pt3dadd( -30.1176, 75.9846, 4.32079, 0.07 ) }
    dend_7 { pt3dadd( -29.7736, 75.7625, 4.39836, 0.07 ) }
    dend_7 { pt3dadd( -29.2183, 75.3212, 4.48928, 0.36 ) }
    dend_7 { pt3dadd( -28.788, 74.8982, 4.54526, 0.36 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 54/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -58.8768, 80.4501, 4.35451, 0.07 ) }
    dend_6 { pt3dadd( -59.8923, 81.5074, 4.59716, 0.07 ) }
    dend_6 { pt3dadd( -60.2905, 81.8982, 4.67265, 0.58 ) }
    dend_6 { pt3dadd( -60.6085, 82.2187, 4.78161, 0.58 ) }
    dend_6 { pt3dadd( -61.4737, 83.1368, 5.1348, 0.07 ) }
    dend_6 { pt3dadd( -61.9462, 83.6639, 5.34129, 0.88 ) }
    dend_6 { pt3dadd( -62.3155, 84.0818, 5.50005, 1.09 ) }
    dend_6 { pt3dadd( -63.4191, 85.3366, 6.05141, 0.15 ) }
    dend_6 { pt3dadd( -64.3602, 86.44, 6.5315, 0.36 ) }
    dend_6 { pt3dadd( -64.7818, 86.9515, 6.74248, 0.88 ) }
    dend_6 { pt3dadd( -65.1436, 87.3842, 6.91811, 0.88 ) }
    dend_6 { pt3dadd( -65.7909, 88.1515, 7.23159, 0.07 ) }
    dend_6 { pt3dadd( -66.405, 88.8974, 7.55416, 0.07 ) }
    dend_6 { pt3dadd( -66.7464, 89.3304, 7.7358, 0.73 ) }
    dend_6 { pt3dadd( -67.0938, 89.7606, 7.88755, 1.09 ) }
    dend_6 { pt3dadd( -67.9236, 90.7339, 8.24934, 0.15 ) }
    dend_6 { pt3dadd( -68.5099, 91.4028, 8.53158, 0.15 ) }
    dend_6 { pt3dadd( -68.9729, 91.9535, 8.77526, 1.24 ) }
    dend_6 { pt3dadd( -69.4, 92.509, 9.00477, 1.24 ) }
    dend_6 { pt3dadd( -69.8508, 93.1434, 9.24498, 0.07 ) }
    dend_6 { pt3dadd( -70.2896, 93.8407, 9.46427, 0.22 ) }
    dend_6 { pt3dadd( -70.6611, 94.5694, 9.62277, 0.07 ) }
    dend_6 { pt3dadd( -70.8121, 94.9899, 9.71437, 0.07 ) }
    dend_6 { pt3dadd( -70.9789, 95.779, 9.91854, 0.8 ) }
    dend_6 { pt3dadd( -71.0476, 96.3954, 10.18, 0.07 ) }
    dend_6 { pt3dadd( -71.0763, 96.8912, 10.4431, 0.66 ) }
    dend_6 { pt3dadd( -71.1017, 97.1341, 10.5767, 0.66 ) }
    dend_6 { pt3dadd( -71.3372, 98.3699, 11.2372, 0.29 ) }
    dend_6 { pt3dadd( -71.6194, 99.327, 11.7536, 0.88 ) }
    dend_6 { pt3dadd( -72.0638, 100.459, 12.3852, 1.17 ) }
    dend_6 { pt3dadd( -72.1949, 100.757, 12.5478, 1.53 ) }
    dend_6 { pt3dadd( -72.8186, 102.122, 13.2005, 0.29 ) }
    dend_6 { pt3dadd( -73.1483, 102.783, 13.4551, 0.29 ) }
    dend_6 { pt3dadd( -73.5274, 103.456, 13.6313, 0.29 ) }
    dend_6 { pt3dadd( -74.0442, 104.321, 13.7741, 0.88 ) }
    dend_6 { pt3dadd( -74.2922, 104.751, 13.8162, 0.88 ) }
    dend_6 { pt3dadd( -74.7128, 105.448, 13.9223, 1.09 ) }
    dend_6 { pt3dadd( -75.1462, 106.089, 14.0597, 0.22 ) }
    dend_6 { pt3dadd( -75.6473, 106.708, 14.2346, 0.51 ) }
    dend_6 { pt3dadd( -76.2565, 107.346, 14.4472, 0.15 ) }
    dend_6 { pt3dadd( -76.5369, 107.601, 14.5521, 0.44 ) }
    dend_6 { pt3dadd( -77.4506, 108.341, 14.9272, 0.07 ) }
    dend_6 { pt3dadd( -77.8305, 108.62, 15.0834, 0.73 ) }
    dend_6 { pt3dadd( -78.3573, 109.002, 15.3249, 0.29 ) }
    dend_6 { pt3dadd( -78.8889, 109.385, 15.5796, 0.29 ) }
    dend_6 { pt3dadd( -79.6181, 109.905, 15.912, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_6 { pt3dadd( -80.0965, 110.235, 16.1246, 0.95 ) }
    dend_6 { pt3dadd( -81.0836, 110.924, 16.6345, 0.07 ) }
    dend_6 { pt3dadd( -81.9342, 111.488, 17.1225, 0.44 ) }
    dend_6 { pt3dadd( -82.1584, 111.615, 17.2606, 0.07 ) }
    dend_6 { pt3dadd( -82.8615, 111.945, 17.6944, 0.66 ) }
    dend_6 { pt3dadd( -83.773, 112.32, 18.2379, 0.07 ) }
    dend_6 { pt3dadd( -85.0451, 112.814, 19.0432, 0.51 ) }
    dend_6 { pt3dadd( -86.141, 113.222, 19.6592, 0.15 ) }
    dend_6 { pt3dadd( -87.4281, 113.709, 20.2494, 0.15 ) }
    dend_6 { pt3dadd( -88.2056, 114.022, 20.5605, 0.15 ) }
    dend_6 { pt3dadd( -88.7513, 114.261, 20.7355, 0.15 ) }
    dend_6 { pt3dadd( -89.6168, 114.658, 20.8359, 0.15 ) }
    dend_6 { pt3dadd( -91.9158, 115.916, 20.2282, 0.15 ) }
    dend_6 { pt3dadd( -92.0491, 116.107, 19.9894, 0.44 ) }
    dend_6 { pt3dadd( -92.1172, 116.434, 19.4666, 0.07 ) }
    dend_6 { pt3dadd( -92.0583, 116.857, 18.6588, 0.58 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 16/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -29.8482, 14.7268, -2.36842, 1.09 ) }
    dend_4 { pt3dadd( -31.0384, 14.8732, -2.2261, 1.09 ) }
    dend_4 { pt3dadd( -32.64, 14.9852, -2.01466, 0.22 ) }
    dend_4 { pt3dadd( -33.4318, 14.9958, -1.89966, 0.58 ) }
    dend_4 { pt3dadd( -33.9321, 14.9718, -1.81981, 0.58 ) }
    dend_4 { pt3dadd( -34.582, 14.9312, -1.63596, 0.22 ) }
    dend_4 { pt3dadd( -35.1124, 14.8912, -1.45148, 0.58 ) }
    dend_4 { pt3dadd( -35.5985, 14.8166, -1.23811, 0.95 ) }
    dend_4 { pt3dadd( -36.1094, 14.7097, -0.985242, 0.95 ) }
    dend_4 { pt3dadd( -37.3328, 14.4741, -0.37566, 0.44 ) }
    dend_4 { pt3dadd( -39.0883, 14.1711, 0.481815, 0.8 ) }
    dend_4 { pt3dadd( -39.7417, 14.0779, 0.786732, 0.95 ) }
    dend_4 { pt3dadd( -40.7681, 13.9793, 1.20209, 0.95 ) }
    dend_4 { pt3dadd( -41.7695, 13.9252, 1.48242, 0.15 ) }
    dend_4 { pt3dadd( -42.589, 13.9102, 1.62445, 0.44 ) }
    dend_4 { pt3dadd( -43.1499, 13.912, 1.6547, 0.95 ) }
    dend_4 { pt3dadd( -43.9593, 13.9246, 1.60371, 1.17 ) }
    dend_4 { pt3dadd( -46.1761, 13.9765, 1.39083, 0.22 ) }
    dend_4 { pt3dadd( -47.8873, 14.0199, 1.19788, 0.95 ) }
    dend_4 { pt3dadd( -48.5327, 14.0316, 1.12419, 1.68 ) }
    dend_4 { pt3dadd( -49.5594, 14.0285, 1.08674, 1.39 ) }
    dend_4 { pt3dadd( -50.5647, 13.9922, 1.13667, 1.39 ) }
    dend_4 { pt3dadd( -51.8021, 13.8803, 1.31788, 0.07 ) }
    dend_4 { pt3dadd( -52.9533, 13.6809, 1.6268, 0.29 ) }
    dend_4 { pt3dadd( -53.7458, 13.483, 1.92881, 0.29 ) }
    dend_4 { pt3dadd( -55.6955, 12.795, 2.77822, 0.07 ) }
    dend_4 { pt3dadd( -56.7715, 12.2862, 3.24469, 0.22 ) }
    dend_4 { pt3dadd( -57.5172, 11.8626, 3.54997, 0.44 ) }
    dend_4 { pt3dadd( -58.3569, 11.3235, 3.85997, 1.75 ) }
    dend_4 { pt3dadd( -58.9934, 10.903, 4.0577, 1.82 ) }
    dend_4 { pt3dadd( -60.5128, 9.94625, 4.51499, 0.22 ) }
    dend_4 { pt3dadd( -61.9695, 9.09528, 4.89932, 1.53 ) }
    dend_4 { pt3dadd( -62.742, 8.69489, 5.12836, 1.17 ) }
    dend_4 { pt3dadd( -64.0615, 8.08715, 5.55701, 0.58 ) }
    dend_4 { pt3dadd( -65.3149, 7.57914, 5.99939, 0.29 ) }
    dend_4 { pt3dadd( -66.8745, 7.00067, 6.60313, 0.15 ) }
    dend_4 { pt3dadd( -67.4742, 6.79438, 6.86096, 0.44 ) }
    dend_4 { pt3dadd( -68.4617, 6.44786, 7.3195, 0.07 ) }
    dend_4 { pt3dadd( -68.8089, 6.30791, 7.47168, 0.58 ) }
    dend_4 { pt3dadd( -69.6978, 5.90201, 7.81452, 1.61 ) }
    dend_4 { pt3dadd( -70.5894, 5.44794, 8.11212, 1.39 ) }
    dend_4 { pt3dadd( -71.4826, 4.98259, 8.34942, 0.73 ) }
    dend_4 { pt3dadd( -72.6911, 4.3729, 8.66023, 0.07 ) }
    dend_4 { pt3dadd( -73.0876, 4.18864, 8.74428, 0.07 ) }
    dend_4 { pt3dadd( -74.1882, 3.71123, 8.91043, 0.44 ) }
    dend_4 { pt3dadd( -76.2143, 2.85191, 9.13055, 0.07 ) }
    dend_4 { pt3dadd( -77.2625, 2.38101, 9.18922, 1.39 ) }
    dend_4 { pt3dadd( -77.8114, 2.13127, 9.2112, 1.39 ) }
    dend_4 { pt3dadd( -79.7026, 1.23824, 9.27529, 0.07 ) }
    dend_4 { pt3dadd( -80.9773, 0.640923, 9.36627, 0.66 ) }
    dend_4 { pt3dadd( -81.4688, 0.419333, 9.43913, 0.66 ) }
    dend_4 { pt3dadd( -82.8984, -0.177698, 9.86179, 0.22 ) }
    dend_4 { pt3dadd( -83.85, -0.556748, 10.2697, 1.24 ) }
    dend_4 { pt3dadd( -84.8347, -0.975819, 10.7998, 1.82 ) }
    dend_4 { pt3dadd( -86.4736, -1.74463, 12.0122, 0.29 ) }
    dend_4 { pt3dadd( -87.4913, -2.27728, 12.8854, 0.58 ) }
    dend_4 { pt3dadd( -89.0443, -3.18126, 14.3009, 0.07 ) }
    dend_4 { pt3dadd( -89.7421, -3.65864, 14.9798, 1.53 ) }
    dend_4 { pt3dadd( -90.8842, -4.63698, 16.1061, 0.88 ) }
    dend_4 { pt3dadd( -92.272, -6.124, 17.5425, 0.44 ) }
    dend_4 { pt3dadd( -92.7904, -6.83046, 18.1879, 0.73 ) }
    dend_4 { pt3dadd( -93.2935, -7.6657, 18.9032, 1.31 ) }
    dend_4 { pt3dadd( -93.7314, -8.62231, 19.6876, 1.53 ) }
    dend_4 { pt3dadd( -94.0719, -9.55134, 20.4349, 0.15 ) }
    dend_4 { pt3dadd( -94.2638, -10.3643, 21.0765, 0.73 ) }
    dend_4 { pt3dadd( -94.6195, -12.8416, 23.0971, 0.07 ) }
    dend_4 { pt3dadd( -94.6805, -13.4395, 23.6195, 0.73 ) }
    dend_4 { pt3dadd( -94.7959, -14.8708, 24.8926, 0.07 ) }
    dend_4 { pt3dadd( -94.8568, -15.5827, 25.5267, 0.07 ) }
    dend_4 { pt3dadd( -95.0712, -17.3614, 27.0386, 0.8 ) }
    dend_4 { pt3dadd( -95.2815, -18.7291, 28.0956, 1.17 ) }
    dend_4 { pt3dadd( -95.5598, -20.2355, 29.0502, 0.36 ) }
    dend_4 { pt3dadd( -95.8162, -21.3217, 29.7247, 1.02 ) }
    dend_4 { pt3dadd( -95.9742, -21.8358, 30.0207, 1.02 ) }
    dend_4 { pt3dadd( -96.4313, -23.0139, 30.6016, 0.44 ) }
    dend_4 { pt3dadd( -96.6627, -23.4643, 30.7761, 0.22 ) }
    dend_4 { pt3dadd( -97.1567, -24.3263, 31.0512, 0.22 ) }
    dend_4 { pt3dadd( -97.6808, -25.142, 31.32, 0.88 ) }
    dend_4 { pt3dadd( -98.6395, -26.4299, 31.7638, 0.15 ) }
    dend_4 { pt3dadd( -99.277, -27.1753, 32.0329, 0.15 ) }
    dend_4 { pt3dadd( -100.438, -28.3723, 32.4853, 0.15 ) }
    dend_4 { pt3dadd( -100.975, -28.8591, 32.6789, 0.95 ) }
    dend_4 { pt3dadd( -101.357, -29.1584, 32.8057, 0.95 ) }
    dend_4 { pt3dadd( -102.97, -30.2776, 33.3071, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_4 { pt3dadd( -103.651, -30.7003, 33.507, 0.51 ) }
    dend_4 { pt3dadd( -104.759, -31.3696, 33.8282, 0.15 ) }
    dend_4 { pt3dadd( -105.368, -31.7442, 34.0363, 0.66 ) }
    dend_4 { pt3dadd( -106.215, -32.285, 34.3577, 0.95 ) }
    dend_4 { pt3dadd( -107.162, -32.868, 34.7305, 1.53 ) }
    dend_4 { pt3dadd( -109.501, -34.2634, 35.6793, 0.22 ) }
    dend_4 { pt3dadd( -110.38, -34.7859, 36.0411, 0.58 ) }
    dend_4 { pt3dadd( -112.296, -35.8938, 36.8556, 0.22 ) }
    dend_4 { pt3dadd( -113.13, -36.3786, 37.2598, 0.8 ) }
    dend_4 { pt3dadd( -114.578, -37.2319, 38.0244, 0.15 ) }
    dend_4 { pt3dadd( -115.112, -37.5356, 38.3197, 0.15 ) }
    dend_4 { pt3dadd( -116.209, -38.1512, 39.0123, 0.58 ) }
    dend_4 { pt3dadd( -117.874, -39.0841, 40.1347, 0.29 ) }
    dend_4 { pt3dadd( -119.847, -40.1634, 41.4831, 0.95 ) }
    dend_4 { pt3dadd( -120.761, -40.672, 42.1853, 0.15 ) }
    dend_4 { pt3dadd( -121.283, -41.001, 42.6858, 0.44 ) }
    dend_4 { pt3dadd( -122.271, -41.75, 43.8289, 0.07 ) }
    dend_4 { pt3dadd( -122.809, -42.2919, 44.6518, 0.95 ) }
    dend_4 { pt3dadd( -123.413, -43.1411, 45.8652, 0.29 ) }
    dend_4 { pt3dadd( -123.8, -43.9185, 47.0006, 0.29 ) }
    dend_4 { pt3dadd( -124.259, -44.974, 48.5391, 0.95 ) }
    dend_4 { pt3dadd( -124.621, -45.9194, 49.8893, 0.07 ) }
    dend_4 { pt3dadd( -124.944, -46.8189, 51.1452, 0.07 ) }
    dend_4 { pt3dadd( -125.058, -47.2284, 51.7366, 0.58 ) }
    dend_4 { pt3dadd( -125.391, -48.9674, 54.2486, 0.07 ) }
    dend_4 { pt3dadd( -125.602, -49.8455, 55.4645, 0.66 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -29.8482, 14.7268, -2.36842, 0.44 ) }
    dend_3 { pt3dadd( -29.6821, 15.2842, -3.3645, 0.44 ) }
    dend_3 { pt3dadd( -29.0202, 15.3555, -5.18431, 0.44 ) }
    dend_3 { pt3dadd( -28.9402, 15.2277, -5.5875, 0.44 ) }
    dend_3 { pt3dadd( -28.9211, 15.0585, -5.98856, 0.44 ) }
    dend_3 { pt3dadd( -29.0385, 14.7425, -6.73828, 0.44 ) }
    dend_3 { pt3dadd( -29.1508, 14.5028, -7.43462, 0.66 ) }
    dend_3 { pt3dadd( -29.3638, 13.8403, -9.4923, 0.36 ) }
    dend_3 { pt3dadd( -29.6071, 13.3994, -11.1209, 0.07 ) }
    dend_3 { pt3dadd( -29.7561, 13.292, -12.0661, 0.88 ) }
    dend_3 { pt3dadd( -30.1507, 13.3051, -13.9601, 0.07 ) }
    dend_3 { pt3dadd( -30.5558, 13.3808, -15.3259, 0.58 ) }
    dend_3 { pt3dadd( -31.1185, 13.4574, -16.7306, 0.29 ) }
    dend_3 { pt3dadd( -31.6395, 13.5086, -17.7609, 0.58 ) }
    dend_3 { pt3dadd( -33.5419, 13.4448, -20.648, 0.15 ) }
    dend_3 { pt3dadd( -34.6699, 13.247, -21.9893, 0.8 ) }
    dend_3 { pt3dadd( -36.2156, 12.8033, -23.3072, 0.07 ) }
    dend_3 { pt3dadd( -38.3938, 11.9755, -24.6128, 0.51 ) }
    dend_3 { pt3dadd( -39.5512, 11.4374, -25.0674, 0.07 ) }
    dend_3 { pt3dadd( -41.2972, 10.4873, -25.408, 0.07 ) }
    dend_3 { pt3dadd( -42.0356, 10.0369, -25.4136, 0.66 ) }
    dend_3 { pt3dadd( -42.5329, 9.69486, -25.391, 0.66 ) }
    dend_3 { pt3dadd( -43.715, 8.84456, -25.2912, 0.07 ) }
    dend_3 { pt3dadd( -44.6925, 8.11032, -25.1904, 0.8 ) }
    dend_3 { pt3dadd( -46.1366, 6.96871, -25.0716, 0.07 ) }
    dend_3 { pt3dadd( -47.1527, 6.08485, -24.9981, 1.17 ) }
    dend_3 { pt3dadd( -49.2108, 4.18805, -24.8493, 0.07 ) }
    dend_3 { pt3dadd( -50.465, 2.95399, -24.8266, 0.07 ) }
    dend_3 { pt3dadd( -51.05, 2.33403, -24.8437, 0.95 ) }
    dend_3 { pt3dadd( -51.537, 1.78489, -24.8719, 0.95 ) }
    dend_3 { pt3dadd( -52.4751, 0.627643, -24.9396, 0.15 ) }
    dend_3 { pt3dadd( -53.0653, -0.136858, -25.0573, 0.44 ) }
    dend_3 { pt3dadd( -54.4368, -1.90078, -25.4424, 0.07 ) }
    dend_3 { pt3dadd( -55.0776, -2.7091, -25.8205, 0.44 ) }
    dend_3 { pt3dadd( -55.8791, -3.64988, -26.3938, 0.07 ) }
    dend_3 { pt3dadd( -56.3802, -4.20822, -26.7844, 1.02 ) }
    dend_3 { pt3dadd( -58.1343, -6.07229, -28.1977, 0.29 ) }
    dend_3 { pt3dadd( -58.8747, -6.86108, -28.8144, 0.66 ) }
    dend_3 { pt3dadd( -61.3185, -9.45935, -30.7929, 0.07 ) }
    dend_3 { pt3dadd( -62.0056, -10.2054, -31.3451, 0.95 ) }
    dend_3 { pt3dadd( -62.4246, -10.6964, -31.7038, 0.95 ) }
    dend_3 { pt3dadd( -63.5342, -12.1004, -32.7011, 0.07 ) }
    dend_3 { pt3dadd( -64.2597, -13.1161, -33.3412, 0.07 ) }
    dend_3 { pt3dadd( -64.6809, -13.7852, -33.8163, 0.29 ) }
    dend_3 { pt3dadd( -65.1425, -14.5555, -34.3512, 0.58 ) }
    dend_3 { pt3dadd( -66.3389, -16.6721, -35.9253, 0.29 ) }
    dend_3 { pt3dadd( -67.5364, -18.8695, -37.6749, 0.07 ) }
    dend_3 { pt3dadd( -68.4271, -20.5754, -39.1419, 0.29 ) }
    dend_3 { pt3dadd( -69.7655, -23.1919, -41.5105, 0.07 ) }
    dend_3 { pt3dadd( -77.411, -27.6658, -49.3215, 0.07 ) }
    dend_3 { pt3dadd( -82.8012, -33.5283, -58.0163, 0.07 ) }
    dend_3 { pt3dadd( -87.2328, -40.0799, -66.7422, 0.07 ) }
    dend_3 { pt3dadd( -89.8809, -45.5435, -76.8624, 0.07 ) }
    dend_3 { pt3dadd( -92.2103, -51.4737, -86.7868, 0.07 ) }
    dend_3 { pt3dadd( -96.5945, -57.438, -95.964, 0.07 ) }
    dend_3 { pt3dadd( -98.8765, -63.9739, -105.496, 0.07 ) }
    dend_3 { pt3dadd( -100.404, -72.4152, -113.489, 0.07 ) }
    dend_3 { pt3dadd( -99.6327, -80.3344, -122.126, 0.07 ) }
    dend_3 { pt3dadd( -96.8918, -87.5588, -130.994, 0.07 ) }
    dend_3 { pt3dadd( -93.9544, -94.1883, -140.274, 0.07 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 86/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 54.0342, 52.6585, -21.5984, 0.07 ) }
    dend_24 { pt3dadd( 55.2257, 52.7059, -22.1452, 0.07 ) }
    dend_24 { pt3dadd( 56.7005, 52.6875, -22.7931, 0.07 ) }
    dend_24 { pt3dadd( 57.9666, 52.5811, -23.3239, 0.36 ) }
    dend_24 { pt3dadd( 58.3166, 52.5178, -23.4639, 0.07 ) }
    dend_24 { pt3dadd( 59.4733, 52.1759, -23.9153, 1.31 ) }
    dend_24 { pt3dadd( 60.2442, 51.8348, -24.2295, 0.07 ) }
    dend_24 { pt3dadd( 60.5626, 51.5835, -24.3368, 0.36 ) }
    dend_24 { pt3dadd( 61.1277, 50.9168, -24.4693, 0.15 ) }
    dend_24 { pt3dadd( 61.7206, 50.0096, -24.5926, 0.36 ) }
    dend_24 { pt3dadd( 62.2266, 49.1086, -24.6865, 0.07 ) }
    dend_24 { pt3dadd( 62.7909, 47.9908, -24.7791, 0.95 ) }
    dend_24 { pt3dadd( 63.4445, 46.6126, -24.8707, 0.29 ) }
    dend_24 { pt3dadd( 64.0622, 45.2966, -24.9474, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_24 { pt3dadd( 64.347, 44.6758, -24.9755, 0.44 ) }
    dend_24 { pt3dadd( 64.9006, 43.5095, -25.0137, 0.22 ) }
    dend_24 { pt3dadd( 65.3161, 42.7403, -25.0332, 0.51 ) }
    dend_24 { pt3dadd( 71.272, 38.9599, -27.4304, 0.51 ) }
    dend_24 { pt3dadd( 77.6051, 35.2096, -28.6004, 0.51 ) }
    dend_24 { pt3dadd( 83.6636, 30.899, -28.7921, 0.51 ) }
    dend_24 { pt3dadd( 89.5311, 26.4205, -27.9097, 0.51 ) }
    dend_24 { pt3dadd( 94.3577, 21.0386, -26.3102, 0.51 ) }
    dend_24 { pt3dadd( 99.519, 15.7304, -26.4212, 0.51 ) }
    dend_24 { pt3dadd( 103.51, 9.63043, -27.5153, 0.51 ) }
    dend_24 { pt3dadd( 109.123, 4.78726, -27.8363, 0.51 ) }
    dend_24 { pt3dadd( 114.424, -0.359948, -28.3932, 0.51 ) }
    dend_24 { pt3dadd( 120.015, -5.21584, -28.871, 0.51 ) }
    dend_24 { pt3dadd( 126.234, -9.23703, -28.0865, 0.51 ) }
    dend_24 { pt3dadd( 132.325, -13.3401, -26.8655, 0.51 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 15/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 54.0342, 52.6585, -21.5984, 0.07 ) }
    dend_23 { pt3dadd( 52.7387, 53.9351, -21.4199, 0.07 ) }
    dend_23 { pt3dadd( 52.2568, 54.4397, -21.3557, 0.07 ) }
    dend_23 { pt3dadd( 51.609, 55.118, -21.2694, 0.29 ) }
    dend_23 { pt3dadd( 50.5366, 56.241, -21.1265, 0.22 ) }
    dend_23 { pt3dadd( 50.1658, 56.6292, -21.0772, 0.51 ) }
    dend_23 { pt3dadd( 49.3678, 57.4648, -20.9709, 0.15 ) }
    dend_23 { pt3dadd( 48.4512, 58.617, -20.9377, 0.36 ) }
    dend_23 { pt3dadd( 43.0674, 65.6598, -19.0628, 0.36 ) }
    dend_23 { pt3dadd( 36.9497, 71.7935, -16.2847, 0.36 ) }
    dend_23 { pt3dadd( 30.4515, 77.6692, -13.8076, 0.36 ) }
    dend_23 { pt3dadd( 24.0293, 83.4967, -11.0262, 0.36 ) }
    dend_23 { pt3dadd( 19.3091, 90.6194, -7.99667, 0.36 ) }
    dend_23 { pt3dadd( 13.5211, 97.5233, -7.035, 0.36 ) }
    dend_23 { pt3dadd( 7.40937, 104.182, -7.65162, 0.36 ) }
    dend_23 { pt3dadd( 0.465555, 109.743, -9.532, 0.36 ) }
    dend_23 { pt3dadd( -6.92183, 115.043, -10.0501, 0.36 ) }
    dend_23 { pt3dadd( -14.4756, 120.145, -9.99492, 0.36 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_40, dend_39, dend_36, dend_31, dend_30, dend_29, dend_18, dend_13, dend_0, dend_45, dend_44, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_28, dend_19, dend_17, dend_14, dend_8, dend_1, dend_49, dend_46, dend_34, dend_33, dend_25, dend_20, dend_16, dend_15, dend_10, dend_9, dend_5, dend_2, dend_48, dend_47, dend_27, dend_26, dend_22, dend_21, dend_12, dend_11, dend_7, dend_6, dend_4, dend_3, dend_24, dend_23]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_40, dend_39, dend_36, dend_31, dend_30, dend_29, dend_18, dend_13, dend_0, dend_45, dend_44, dend_42, dend_41, dend_38, dend_37, dend_35, dend_32, dend_28, dend_19, dend_17, dend_14, dend_8, dend_1, dend_49, dend_46, dend_34, dend_33, dend_25, dend_20, dend_16, dend_15, dend_10, dend_9, dend_5, dend_2, dend_48, dend_47, dend_27, dend_26, dend_22, dend_21, dend_12, dend_11, dend_7, dend_6, dend_4, dend_3, dend_24, dend_23]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_7 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_4 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_39 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_44 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_42 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_41 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_38 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_37 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_28 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_17 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_8 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_49 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_46 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_34 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_33 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_20 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_5 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_48 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_47 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_27 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_21 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_4 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_3 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_24 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_18 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_31 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_40 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_32 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_13 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_0 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_30 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_1 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_36 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_45 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_2 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_19 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_25 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_26 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_22 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_16 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_10 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_11 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_12 OneSecGrp_SectionRef_46.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, axon_1, axon_1, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_39 nseg = 9
    dend_29 nseg = 5
    dend_44 nseg = 7
    dend_42 nseg = 9
    dend_41 nseg = 3
    dend_38 nseg = 7
    dend_37 nseg = 9
    dend_35 nseg = 7
    dend_28 nseg = 5
    dend_17 nseg = 3
    dend_14 nseg = 7
    dend_8 nseg = 9
    dend_49 nseg = 7
    dend_46 nseg = 3
    dend_34 nseg = 3
    dend_33 nseg = 9
    dend_20 nseg = 3
    dend_15 nseg = 3
    dend_5 nseg = 3
    dend_48 nseg = 5
    dend_47 nseg = 5
    dend_27 nseg = 9
    dend_21 nseg = 3
    dend_6 nseg = 3
    dend_4 nseg = 7
    dend_3 nseg = 11
    dend_24 nseg = 5
    dend_23 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dNAC222_L4_SBC_9995bf5c97_0_0


