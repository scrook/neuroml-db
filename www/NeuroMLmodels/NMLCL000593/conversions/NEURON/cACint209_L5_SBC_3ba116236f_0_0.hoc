// Cell: cACint209_L5_SBC_3ba116236f_0_0
/*
{
  "id" : "cACint209_L5_SBC_3ba116236f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.23899, -15.0556, -0.519658, 3.66989", "-1.17536, -13.7023, -0.469772, 6.06288", "-1.11173, -12.349, -0.419887, 7.06144", "-1.0481, -10.9958, -0.370002, 7.9923", "-0.984469, -9.64252, -0.320117, 9.33711", "-0.920839, -8.28926, -0.270232, 10.6845", "-0.85721, -6.936, -0.220347, 11.7558", "-0.793581, -5.58274, -0.170462, 12.5063", "-0.729952, -4.22947, -0.120577, 13.1759", "-0.666322, -2.87621, -0.0706922, 13.3814", "-0.602693, -1.52295, -0.0208072, 13.1588", "-0.539064, -0.169689, 0.0290779, 13.1475", "-0.475434, 1.18357, 0.0789629, 12.911", "-0.411805, 2.53683, 0.128848, 12.361", "-0.348176, 3.8901, 0.178733, 11.3572", "-0.284546, 5.24336, 0.228618, 10.1252", "-0.220917, 6.59662, 0.278503, 9.00977", "-0.157288, 7.94988, 0.328388, 8.0324", "-0.0936586, 9.30314, 0.378273, 7.2911", "-0.0300293, 10.6564, 0.428158, 4.83974", "0.0336, 12.0097, 0.478043, 3.67414" ]
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "3.4463, 9.23739, 0.091561, 1.47", "3.4463, 9.23739, 0.091561, 1.47", "3.79277, 9.80303, 0.191395, 0.81", "4.17462, 10.5774, 0.319276, 0.59", "4.5057, 11.3357, 0.440096, 0.88", "4.71661, 11.8847, 0.543233, 1.11", "4.94915, 12.5822, 0.710961, 1.33", "4.96533, 12.6477, 0.734647, 1.33", "5.11468, 13.5087, 1.07259, 1.11", "5.12216, 13.5727, 1.10051, 1.11", "5.20551, 14.3011, 1.45681, 1.25", "5.33295, 15.2701, 1.95713, 1.55", "5.52612, 16.5576, 2.73869, 1.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001888841101
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-2.0737, -14.0554, -0.098439, 4.79", "-2.0737, -14.0554, -0.098439, 4.79", "-2.06388, -15.5433, 0.267158, 3.83", "-2.00091, -17.2478, 0.690635, 3.32", "-1.94854, -18.6656, 1.04289, 2.65", "-1.89391, -20.1447, 1.41035, 2.95", "-1.84596, -21.4426, 1.7328, 3.39", "-1.76941, -22.8091, 2.08843, 3.76", "-1.72209, -23.2518, 2.21751, 3.76" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001888841101
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.0537, 11.1191, 1.47156, 3.02", "-1.15435, 11.8633, 1.88057, 3.02", "-1.25505, 12.7974, 2.33822, 3.02", "-1.39463, 14.0921, 2.97253, 2.95", "-1.5264, 15.3144, 3.57133, 2.8", "-1.66393, 16.5901, 4.19633, 2.8", "-1.77702, 17.6391, 4.71027, 3.24", "-1.97809, 19.6617, 5.77062, 3.24" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001888841101
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "0.0336, 12.0097, 0.478043, 0.49712", "0.73811, 26.9931, 0.478043, 0.49712", "1.44262, 41.9766, 0.478043, 0.49712" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "5.52612, 16.5576, 2.73869, 0.66", "4.57684, 18.1034, 0.262038, 0.66", "4.42457, 18.6158, -0.468705, 0.29", "4.45807, 18.6852, -0.516627, 0.29", "5.08916, 19.1416, -0.268204, 0.29", "5.46875, 19.4765, -0.116458, 0.59", "5.59008, 19.5908, -0.0668411, 0.59", "6.04742, 20.022, 0.140222, 0.59", "7.19258, 21.0424, 0.563234, 0.29", "7.85313, 21.6179, 0.740109, 0.88", "8.46289, 22.1328, 0.846905, 1.11", "8.51918, 22.1795, 0.852554, 1.11", "9.77563, 23.233, 0.756649, 0.37", "10.7916, 24.0946, 0.523884, 0.37", "11.6307, 24.8356, 0.168841, 0.88", "12.3137, 25.4474, -0.189489, 0.88", "12.4156, 25.5466, -0.252242, 0.88", "13.6918, 26.9307, -1.15457, 0.29", "13.736, 26.9884, -1.19235, 0.29", "14.4398, 28.1806, -1.91542, 0.88", "14.4677, 28.2383, -1.94734, 0.88", "15.0281, 29.4949, -2.6024, 0.88", "15.1034, 29.6509, -2.68601, 0.88", "15.5141, 30.4251, -3.11556, 1.03", "16.0528, 31.311, -3.68235, 0.29", "16.0956, 31.3728, -3.72713, 0.29", "16.5179, 31.9337, -4.15285, 0.29", "17.1208, 32.6459, -4.74216, 0.88", "17.6768, 33.2763, -5.23966, 0.29", "17.721, 33.3236, -5.27574, 0.29", "18.2579, 33.9254, -5.59498, 0.44", "18.5889, 34.3477, -5.74749, 0.59", "18.6292, 34.4076, -5.75777, 0.59", "19.1158, 35.2656, -5.77277, 0.44", "19.1503, 35.3238, -5.77111, 0.44", "19.6858, 36.198, -5.74495, 0.96", "19.8868, 36.4919, -5.74522, 1.11", "20.4579, 37.1938, -5.81664, 0.81", "21.4557, 38.202, -6.04177, 0.29", "22.1792, 38.796, -6.26126, 0.29", "22.2418, 38.8426, -6.2874, 0.29", "22.9575, 39.324, -6.6469, 0.59", "23.9852, 39.9962, -7.22641, 0.37", "24.7171, 40.4682, -7.68407, 1.11", "25.2633, 40.8183, -8.05245, 1.33", "26.446, 41.7933, -8.88543, 0.22", "26.5083, 41.8624, -8.92788, 0.22", "27.0164, 42.6021, -9.24435, 1.03", "27.1574, 42.8372, -9.3158, 1.11", "27.1935, 42.8993, -9.33169, 1.11", "28.0091, 44.0391, -9.55624, 0.22", "28.8708, 45.017, -9.68304, 1.11", "29.3813, 45.5447, -9.7412, 0.88", "30.2508, 46.3691, -9.77799, 0.22", "30.303, 46.4184, -9.77852, 0.22", "31.6405, 47.6343, -9.76816, 0.22", "31.8689, 47.8212, -9.7642, 0.22", "33.0378, 48.7599, -9.72456, 0.88", "33.7128, 49.312, -9.70061, 1.03", "34.5291, 50.0016, -9.67403, 0.66", "35.426, 50.7858, -9.66721, 0.22", "35.8102, 51.1397, -9.68091, 0.22", "35.875, 51.1901, -9.68339, 0.22", "36.4876, 51.5648, -9.7175, 0.37", "36.5452, 51.5956, -9.72246, 0.37", "37.3195, 51.9543, -9.75426, 1.11", "37.8682, 52.2103, -9.76121, 1.47", "38.6957, 52.6015, -9.7431, 0.88", "38.7578, 52.6306, -9.74056, 0.88", "40.125, 53.283, -9.66292, 0.22", "41.1095, 53.7553, -9.60444, 0.59", "41.6779, 54.027, -9.56764, 0.74", "42.7508, 54.6138, -9.52607, 0.22", "42.8152, 54.6571, -9.52904, 0.22", "43.1339, 54.9058, -9.56202, 0.74", "43.4093, 55.1639, -9.61875, 0.74", "43.4632, 55.2228, -9.63696, 0.74", "44.2475, 56.1722, -9.94627, 0.22", "45.0568, 57.1583, -10.32, 1.03", "45.3312, 57.4818, -10.4574, 1.4", "45.8992, 58.1494, -10.7536, 1.77", "47.2208, 59.6565, -11.4654, 0.22", "47.8473, 60.3437, -11.7667, 0.22", "48.7349, 61.2813, -12.1509, 0.22", "49.6214, 62.1297, -12.4544, 1.33", "50.0562, 62.51, -12.5733, 1.55", "51.1609, 63.3555, -12.8013, 0.29", "52.2564, 64.0508, -12.8997, 1.33", "52.511, 64.1992, -12.9011, 1.47", "54.3771, 65.2498, -12.7469, 0.29", "55.102, 65.6544, -12.6473, 1.03", "55.6725, 65.9672, -12.5634, 0.81", "56.8526, 66.6289, -12.3856, 0.22", "57.4631, 66.9761, -12.3326, 0.22", "57.5379, 67.021, -12.332, 0.22", "58.2762, 67.543, -12.4166, 0.81", "58.5682, 67.7616, -12.4818, 0.96", "59.0762, 68.1995, -12.6555, 0.59", "59.7384, 68.8109, -12.9756, 0.15", "60.6845, 69.6736, -13.4416, 1.33", "61.2904, 70.2413, -13.7428, 0.22", "61.3415, 70.2878, -13.7679, 0.22", "61.8316, 70.7191, -13.9708, 0.22", "62.5174, 71.2764, -14.1989, 0.66", "63.0116, 71.6434, -14.2811, 0.81", "63.125, 71.728, -14.284, 0.81", "63.8279, 72.2751, -14.2796, 0.52", "64.5078, 72.8695, -14.2572, 1.33", "64.8982, 73.2335, -14.2442, 1.55", "66.029, 74.334, -14.2183, 0.22", "66.7096, 75.006, -14.2189, 0.37", "67.1628, 75.4546, -14.2319, 0.96", "67.6499, 75.9169, -14.2402, 1.33", "68.8918, 77.0246, -14.2722, 0.22", "69.8307, 77.7642, -14.272, 0.22", "70.4669, 78.1855, -14.271, 0.88", "70.9285, 78.4378, -14.2645, 0.96", "72.3576, 79.1309, -14.2253, 0.22", "72.4238, 79.1599, -14.2228, 0.22", "73.6201, 79.6717, -14.1382, 1.4", "74.2283, 79.9375, -14.0913, 1.99", "75.3404, 80.4126, -14.025, 0.29", "75.4083, 80.4415, -14.024, 0.29", "75.9806, 80.6913, -14.0677, 0.22", "76.0474, 80.7218, -14.0755, 0.22", "76.5777, 80.9965, -14.1954, 0.29", "76.639, 81.0341, -14.2113, 0.29", "76.996, 81.2866, -14.3138, 0.88", "77.3471, 81.5447, -14.4171, 1.18", "77.6109, 81.7486, -14.496, 1.18", "78.5525, 82.4891, -14.7794, 0.22", "78.9084, 82.7558, -14.8851, 0.66", "79.251, 82.997, -14.9839, 0.66", "79.3068, 83.0336, -14.9995, 0.66", "79.6939, 83.2719, -15.1021, 0.66", "79.7618, 83.3106, -15.1189, 0.66", "80.731, 83.7996, -15.3349, 0.22", "81.1332, 83.972, -15.427, 0.74", "81.6319, 84.1679, -15.5598, 1.11", "81.9555, 84.2868, -15.6529, 0.88", "82.0264, 84.3114, -15.6745, 0.88", "83.2407, 84.7399, -16.0557, 0.22", "84.2577, 85.1404, -16.4077, 0.22", "84.9367, 85.4238, -16.6555, 0.88", "85.3488, 85.6045, -16.8181, 1.11", "85.4238, 85.6387, -16.8493, 1.11", "86.0513, 85.9497, -17.1178, 0.44", "87.3856, 86.6866, -17.7057, 0.22", "87.4455, 86.7192, -17.734, 0.22", "88.3162, 87.1572, -18.141, 1.11", "88.4425, 87.2152, -18.2008, 1.11", "89.0131, 87.446, -18.466, 1.69", "89.5375, 87.6292, -18.7315, 1.69", "91.3219, 88.1543, -19.6488, 0.22", "92.057, 88.3773, -20.0141, 0.88", "92.4154, 88.4881, -20.1873, 1.4", "93.1249, 88.7119, -20.529, 1.18", "94.1002, 89.0464, -20.9896, 0.59", "95.288, 89.5292, -21.5165, 0.29", "96.9184, 90.3959, -22.1613, 0.22", "97.1603, 90.5609, -22.2522, 0.59", "97.2051, 90.5995, -22.2675, 0.59", "97.8458, 91.2746, -22.4117, 0.74", "98.3644, 91.9198, -22.4532, 0.22", "98.8399, 92.6152, -22.4535, 0.22", "99.3836, 93.3866, -22.3936, 1.11", "99.6082, 93.6802, -22.3622, 1.4", "100.471, 94.7151, -22.2329, 0.22", "100.794, 95.0685, -22.1819, 0.96", "101.22, 95.4872, -22.1173, 1.25", "102.302, 96.4452, -21.9707, 0.29", "102.783, 96.855, -21.9325, 0.81", "103.144, 97.1565, -21.936, 0.81", "103.268, 97.2629, -21.9492, 0.81", "103.851, 97.7948, -22.0352, 0.37", "104.334, 98.2566, -22.1241, 0.29", "105.087, 98.9744, -22.2723, 0.15", "105.792, 99.647, -22.3412, 1.03", "106.194, 100.027, -22.358, 1.62", "108.225, 101.728, -22.2939, 0.15", "109.256, 102.507, -22.2091, 0.44", "110.088, 103.099, -22.1002, 0.37", "111.773, 104.187, -21.7585, 1.62", "112.045, 104.347, -21.6919, 1.77", "114.051, 105.365, -21.1569, 0.22", "114.506, 105.543, -21.0319, 0.66", "115.375, 105.834, -20.8064, 0.59", "116.915, 106.249, -20.4741, 0.37", "116.987, 106.265, -20.4637, 0.37", "117.527, 106.402, -20.3892, 0.29", "118.505, 106.724, -20.2806, 0.44", "118.567, 106.745, -20.2736, 0.44", "119.549, 107.097, -20.1266, 0.59", "120.47, 107.565, -19.8614, 0.22", "120.534, 107.607, -19.8305, 0.22", "121.1, 108.093, -19.4337, 0.22", "121.136, 108.133, -19.4063, 0.22", "121.855, 109.031, -18.8739, 0.59", "122.536, 109.943, -18.3984, 0.81", "122.59, 110.0, -18.3622, 0.81", "123.052, 110.37, -18.1032, 0.81", "124.49, 110.972, -17.2092, 0.22", "124.541, 110.982, -17.1765, 0.22", "124.998, 110.978, -16.8594, 0.59", "126.562, 110.834, -15.7814, 0.81", "127.119, 110.739, -15.363, 0.96", "129.236, 110.121, -13.5803, 0.37", "129.343, 110.075, -13.4768, 0.37", "130.389, 109.588, -12.4192, 0.66" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "5.52612, 16.5576, 2.73869, 0.88", "6.48472, 17.307, 3.12242, 0.88", "8.19794, 18.5356, 3.66045, 0.66", "9.54506, 19.4638, 3.98933, 0.66", "11.2449, 20.5852, 4.31596, 0.66", "12.3096, 21.2559, 4.4371, 0.66", "13.6526, 22.0947, 4.51261, 0.88", "13.7358, 22.1428, 4.50673, 0.88", "14.7134, 22.712, 4.30506, 1.47", "15.338, 23.1082, 4.12618, 1.47", "16.6033, 24.0194, 3.74331, 1.03", "17.5541, 24.7745, 3.4758, 0.88", "18.2866, 25.4172, 3.30051, 1.03", "19.52, 26.5913, 3.06146, 1.03", "20.7114, 27.8485, 2.9481, 0.88", "21.4857, 28.7836, 2.96171, 0.74", "22.0768, 29.5416, 3.10159, 0.88", "22.9907, 30.6772, 3.46764, 1.4", "23.6042, 31.3958, 3.81179, 1.33", "24.5082, 32.4152, 4.4168, 0.88", "25.0416, 32.9848, 4.79948, 0.59", "26.3416, 34.3118, 5.65577, 0.52", "27.0564, 34.9994, 5.99859, 0.52", "28.047, 35.9205, 6.31265, 0.81", "29.0321, 36.8475, 6.51501, 1.03", "29.6772, 37.4684, 6.55684, 1.33", "30.5533, 38.4031, 6.46592, 1.33", "31.5887, 39.7551, 6.13107, 0.81", "32.117, 40.5725, 5.87784, 0.81", "32.1582, 40.6494, 5.85473, 0.81", "32.4428, 41.2268, 5.77454, 0.88", "33.1688, 42.7923, 5.80996, 0.74", "33.5853, 43.6575, 5.9993, 0.59", "34.0078, 44.4226, 6.3129, 0.59", "34.9531, 45.8161, 7.19541, 1.03", "36.4424, 47.494, 8.69704, 1.03", "36.4975, 47.5465, 8.75583, 1.03", "36.9574, 47.9171, 9.25994, 1.18", "37.6009, 48.3659, 9.89828, 1.33", "38.7944, 49.106, 10.9172, 1.47", "39.9711, 49.7761, 11.6857, 1.11", "40.7738, 50.3099, 12.067, 1.11", "41.0265, 50.5114, 12.1673, 1.11", "41.6126, 51.1268, 12.3132, 1.4", "41.895, 51.5022, 12.3357, 1.62", "41.9476, 51.5814, 12.3294, 1.62", "42.4295, 52.4384, 12.2386, 1.18", "43.0725, 53.6361, 12.1971, 0.81", "43.6768, 54.8123, 12.2112, 0.66", "44.339, 56.1251, 12.2752, 0.59", "44.3741, 56.1955, 12.2808, 0.59", "45.1884, 57.8822, 12.4646, 1.03", "45.7678, 59.181, 12.692, 0.88", "45.8384, 59.3405, 12.73, 0.88", "46.203, 60.1712, 12.9621, 1.03", "46.2358, 60.2522, 12.9832, 1.03", "46.6135, 61.1923, 13.2341, 0.96", "47.2172, 62.6525, 13.6539, 1.25" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-1.72209, -23.2518, 2.21751, 2.58", "-1.36437, -24.1092, 2.20708, 2.58", "-1.22235, -24.5275, 2.16287, 2.58", "-0.962991, -25.4624, 2.00231, 1.99", "-0.734153, -26.4594, 1.7619, 1.99", "-0.568314, -27.3134, 1.52194, 1.84", "-0.416839, -28.2329, 1.2409, 1.84", "-0.280732, -29.4705, 0.801953, 1.84", "-0.216124, -30.4057, 0.438256, 1.92", "-0.180008, -31.628, -0.0766997, 1.92", "-0.213348, -33.0827, -0.710963, 1.92", "-0.258016, -34.1256, -1.14698, 2.5", "-0.278468, -35.2031, -1.53203, 2.95", "-0.273339, -35.6021, -1.65081, 3.24", "-0.226454, -36.661, -1.92187, 2.58", "-0.108082, -37.9509, -2.14503, 1.99", "0.11001, -39.1632, -2.23836, 1.99", "0.53588, -41.0446, -2.29104, 1.92", "0.645671, -41.4349, -2.28094, 1.92", "0.779831, -41.8259, -2.25404, 2.36", "1.30212, -43.0074, -2.06914, 1.99", "1.92052, -44.0309, -1.78126, 1.99" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-1.72209, -23.2518, 2.21751, 1.25", "-3.40336, -24.4749, 2.89045, 1.25", "-4.41682, -25.1946, 3.26819, 0.88", "-5.62224, -26.0279, 3.69477, 0.88", "-6.50799, -26.6159, 3.96891, 1.11", "-7.12501, -27.0095, 4.14383, 1.47", "-7.4721, -27.2275, 4.23586, 1.47", "-7.88606, -27.4745, 4.30325, 1.77", "-8.54622, -27.8679, 4.37987, 1.62", "-9.40834, -28.3848, 4.46145, 1.47", "-10.0831, -28.7865, 4.53607, 1.62", "-10.6399, -29.1191, 4.6195, 1.62", "-11.0763, -29.3797, 4.69533, 1.33", "-12.2074, -30.06, 4.91775, 1.33", "-13.1049, -30.637, 5.10822, 1.25", "-14.0263, -31.269, 5.32522, 1.25", "-15.3717, -32.226, 5.65105, 1.25", "-16.2944, -32.9068, 5.91832, 1.03", "-16.883, -33.3683, 6.11437, 0.88", "-17.7614, -34.1555, 6.49049, 0.88", "-18.2839, -34.7176, 6.77231, 1.11", "-18.3224, -34.7672, 6.80006, 1.11", "-19.0164, -35.8118, 7.44283, 1.11", "-19.4283, -36.5101, 7.93626, 1.62", "-19.9942, -37.5008, 8.71259, 1.77", "-20.589, -38.4389, 9.51214, 1.92", "-21.0972, -39.1424, 10.1012, 1.55", "-21.1333, -39.1845, 10.1332, 1.55", "-22.1626, -40.1122, 10.7059, 0.66", "-22.922, -40.5763, 10.8881, 0.66", "-24.0581, -41.0498, 10.8959, 1.25", "-25.082, -41.4112, 10.8003, 1.55", "-26.1744, -41.7962, 10.6583, 1.4", "-27.1492, -42.1753, 10.5305, 1.18", "-28.1891, -42.6617, 10.409, 0.96", "-29.0852, -43.2403, 10.3789, 0.96", "-29.8321, -43.9658, 10.4954, 1.03", "-30.2891, -44.607, 10.6741, 1.4", "-30.73, -45.5355, 10.9899, 1.4", "-31.1782, -46.9533, 11.4783, 1.33", "-31.3855, -47.9189, 11.7955, 1.4", "-31.5569, -49.1458, 12.1504, 1.62", "-31.6466, -50.0657, 12.379, 1.47", "-31.7814, -51.501, 12.6858, 1.25", "-31.9076, -52.6806, 12.9039, 1.4", "-32.0263, -53.3583, 13.0123, 1.4", "-32.3115, -54.3982, 13.1791, 1.4", "-32.841, -55.6419, 13.357, 0.88", "-33.3686, -56.4856, 13.499, 0.66", "-33.8093, -56.9601, 13.5858, 0.96", "-34.6901, -57.6499, 13.7464, 1.25", "-35.3383, -58.0646, 13.861, 1.33", "-36.2545, -58.6042, 14.0239, 1.4", "-36.839, -58.9901, 14.1277, 1.11", "-37.474, -59.535, 14.2477, 1.11", "-38.0756, -60.2113, 14.3921, 1.11", "-38.8115, -61.16, 14.5802, 1.11", "-39.629, -62.3689, 14.8163, 1.11", "-40.5554, -63.9774, 15.144, 1.11", "-41.2019, -65.2846, 15.4006, 1.11", "-41.6715, -66.4219, 15.6295, 2.14" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.97809, 19.6617, 5.77062, 0.96", "-0.921472, 20.9817, 4.3217, 0.96", "-0.0373905, 22.3534, 3.05041, 0.96", "1.09089, 24.4169, 1.33576, 1.18", "1.66151, 25.6285, 0.400617, 1.18", "2.19403, 26.8861, -0.524098, 0.9", "2.58463, 27.9978, -1.28198, 0.9", "2.83212, 29.3007, -2.12583, 0.81", "2.84404, 29.8258, -2.35955, 0.81", "2.7926, 30.3907, -2.49312, 0.81", "2.78178, 30.4814, -2.50334, 0.81", "2.62403, 31.9737, -2.52953, 0.81", "2.62157, 32.1187, -2.5249, 0.81", "2.77854, 33.3126, -2.40349, 0.74", "2.86973, 33.659, -2.34842, 0.74", "3.3473, 34.924, -2.20686, 0.96", "3.85158, 36.0196, -2.11955, 0.96", "4.34185, 36.9388, -2.04015, 0.81", "5.1597, 38.3828, -1.92721, 0.59", "5.76545, 39.3453, -1.86688, 0.96", "6.93847, 41.0582, -1.8027, 0.96", "7.00177, 41.1398, -1.80571, 0.96" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.97809, 19.6617, 5.77062, 2.73", "-2.61345, 20.3644, 6.53034, 2.73", "-3.14069, 20.9565, 7.12763, 2.43", "-3.84163, 21.7421, 7.84818, 2.5", "-4.40163, 22.3687, 8.38045, 1.47", "-5.26991, 23.3316, 9.13861, 1.42", "-5.83315, 23.964, 9.5971, 1.42", "-6.25956, 24.4622, 9.89653, 1.42", "-6.82822, 25.1277, 10.2361, 1.42", "-7.48874, 25.8921, 10.5481, 1.42", "-7.99133, 26.4837, 10.761, 1.62", "-8.71535, 27.3092, 10.9905, 2.06", "-9.22292, 27.899, 11.1379, 2.28", "-9.97359, 28.787, 11.357, 2.28", "-10.5639, 29.5044, 11.5213, 2.28" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "1.44262, 41.9766, 0.478043, 0.15", "2.14713, 56.96, 0.478043, 0.15", "2.85164, 71.9435, 0.478043, 0.15" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "47.2172, 62.6525, 13.6539, 0.59", "48.1527, 63.2141, 14.6251, 0.59", "49.7312, 64.1749, 16.0682, 0.59", "49.7753, 64.1979, 16.1076, 0.59", "50.8856, 64.5829, 17.0021, 1.03", "50.9331, 64.5972, 17.0419, 1.03", "51.9859, 64.8967, 17.9389, 0.44", "52.6258, 65.0488, 18.4604, 0.74", "53.9705, 65.3984, 19.6137, 0.44", "55.158, 65.8647, 21.0079, 0.37", "56.0065, 66.3707, 22.4492, 0.37", "56.0378, 66.3947, 22.525, 0.37", "56.2759, 66.6403, 23.3772, 0.37", "56.6371, 67.0921, 24.9651, 0.59", "56.9518, 67.8341, 27.0432, 0.59", "56.9569, 67.8587, 27.1014, 0.59", "57.1511, 68.7525, 29.1804, 0.96", "57.2014, 68.9462, 29.5967, 0.96", "57.4428, 69.6264, 30.9896, 0.22", "57.6834, 70.0485, 31.6001, 0.44", "58.0553, 70.5728, 32.1452, 0.37", "58.0904, 70.6318, 32.1945, 0.37", "58.3029, 71.1634, 32.6614, 0.37", "58.3206, 71.2181, 32.7238, 0.37", "58.4196, 71.6132, 33.2904, 0.37", "58.6724, 72.6974, 34.8247, 0.52", "58.6859, 72.7391, 34.884, 0.52", "59.0961, 74.0339, 36.7969, 0.22", "59.1728, 74.292, 37.199, 0.52", "59.2325, 74.5557, 37.6018, 0.81", "59.3845, 76.0184, 39.735, 0.29", "59.3813, 76.6854, 40.4938, 0.29" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "47.2172, 62.6525, 13.6539, 0.37", "47.8459, 63.8166, 14.6454, 0.37", "48.0743, 64.162, 15.0077, 0.74", "49.2465, 65.936, 17.139, 0.59", "49.7137, 66.646, 18.048, 1.11", "50.1945, 67.4154, 19.0464, 1.11", "50.4736, 67.88, 19.653, 1.25", "51.4275, 69.3553, 21.8049, 0.52", "51.809, 69.9655, 22.6927, 0.52", "51.8343, 70.0135, 22.7537, 0.52", "52.0338, 70.4032, 23.2254, 0.52", "52.0598, 70.4571, 23.2708, 0.52", "52.3034, 71.0108, 23.5015, 0.52", "52.3293, 71.0809, 23.5031, 0.52", "52.7129, 72.1591, 23.5612, 0.74", "53.05, 73.281, 23.6851, 1.03", "53.2435, 74.0445, 23.809, 0.52", "53.2386, 74.1311, 23.8486, 0.52", "53.0527, 74.6745, 24.2441, 0.52", "52.5725, 75.7288, 25.2478, 0.52", "52.1726, 76.5486, 26.1232, 0.52", "52.1509, 76.6062, 26.1804, 0.52", "51.8545, 77.8837, 27.3334, 0.81", "51.8099, 78.2507, 27.6091, 1.11", "51.781, 79.0774, 28.1036, 0.59", "51.7879, 79.9322, 28.5152, 0.44", "51.7902, 80.8782, 28.9486, 0.44", "51.7839, 80.9441, 28.983, 0.44", "51.6785, 81.3894, 29.2462, 0.44", "51.4901, 81.8773, 29.5688, 0.44", "51.2147, 82.3944, 29.9336, 0.66", "50.9041, 82.8834, 30.3117, 1.03", "50.362, 83.7072, 30.9665, 1.33", "50.3224, 83.7716, 31.0144, 1.33", "50.0643, 84.2253, 31.3661, 0.81", "49.7945, 84.7309, 31.7502, 0.52", "49.5344, 85.3305, 32.2756, 0.44", "49.5059, 85.413, 32.3526, 0.44", "49.4235, 85.7494, 32.6505, 0.52", "49.3196, 86.6427, 33.504, 0.74", "49.3394, 87.0649, 33.9406, 1.33", "49.5241, 88.3813, 35.2965, 1.03", "49.658, 89.0517, 35.9846, 0.74", "49.7744, 89.6771, 36.6043, 0.66", "49.9764, 90.7497, 37.6416, 0.44", "50.1538, 91.7181, 38.5191, 0.44", "50.2396, 92.3809, 39.0921, 0.29", "50.2418, 92.4522, 39.1536, 0.29", "50.1882, 93.1528, 39.8189, 0.29", "50.0692, 93.7289, 40.3871, 0.74", "50.0325, 93.8343, 40.4877, 0.74", "49.8077, 94.3888, 41.0791, 0.74", "49.3327, 95.5626, 42.4827, 0.29", "49.0837, 96.191, 43.2283, 0.29", "49.0428, 96.3008, 43.3588, 0.29", "48.8243, 96.8788, 44.0089, 0.59", "48.5431, 97.6441, 44.851, 0.74", "48.4605, 97.8706, 45.0868, 0.81", "48.1704, 98.6802, 45.736, 0.37", "48.1483, 98.7451, 45.7876, 0.37", "48.016, 99.1999, 46.1856, 0.44", "48.0041, 99.251, 46.2316, 0.44", "47.9582, 99.5663, 46.5919, 0.44", "47.939, 99.9179, 47.0666, 0.29", "47.9381, 100.624, 48.0962, 0.88", "47.9511, 101.392, 49.1578, 1.33", "47.9548, 101.438, 49.217, 1.33", "48.0981, 102.567, 50.5425, 0.74", "48.2758, 103.552, 51.6045, 0.88", "48.3544, 103.906, 51.9414, 1.03", "48.5607, 104.726, 52.5155, 0.29", "48.7691, 105.651, 52.9888, 0.22", "48.7875, 105.724, 53.0167, 0.22", "48.8905, 106.097, 53.0858, 0.22", "48.9423, 106.25, 53.0945, 0.22", "49.3726, 107.46, 53.1281, 0.22", "49.3988, 107.53, 53.1262, 0.22", "49.6565, 108.268, 53.0957, 0.22", "49.6828, 108.338, 53.0911, 0.22", "50.1767, 109.525, 52.9611, 0.22" ],
    "parent" : "dend_107",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "1.92052, -44.0309, -1.78126, 1.92", "2.79769, -44.2939, -2.38559, 1.92", "3.96703, -44.6445, -3.1912, 2.28" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "1.92052, -44.0309, -1.78126, 0.88", "2.81589, -46.8688, 0.396671, 0.88", "3.01102, -47.9045, 1.02234, 0.74", "3.06499, -48.6498, 1.37145, 0.88", "3.02836, -49.2268, 1.59935, 1.03", "2.91153, -50.0535, 1.89088, 0.74", "2.89729, -50.1186, 1.91183, 0.74", "2.40194, -51.1864, 1.97167, 0.74", "2.06685, -51.7697, 2.01461, 1.18", "1.55052, -52.5832, 2.08737, 1.03", "1.51791, -52.6314, 2.09253, 1.03", "0.968026, -53.4337, 2.19771, 0.81", "0.478525, -54.1646, 2.30336, 1.25", "0.0708601, -54.8274, 2.42695, 1.47" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-41.6715, -66.4219, 15.6295, 0.74", "-42.2807, -67.1039, 15.8639, 0.74", "-42.7422, -67.5868, 16.0548, 0.74", "-43.3443, -68.1802, 16.3225, 0.66", "-43.9405, -68.7261, 16.5939, 0.88", "-44.2452, -68.9834, 16.7328, 1.03", "-44.6191, -69.2857, 16.9141, 0.88", "-44.9035, -69.4905, 17.0652, 0.74", "-45.2648, -69.7183, 17.2745, 0.74", "-45.743, -69.9844, 17.5676, 0.74", "-46.0737, -70.1522, 17.8203, 0.74", "-46.6051, -70.3966, 18.2627, 0.52", "-46.8745, -70.5062, 18.4889, 0.52", "-47.7061, -70.8235, 19.177, 0.88", "-48.0382, -70.942, 19.4203, 1.33", "-49.1636, -71.3525, 20.0767, 0.52", "-49.6598, -71.5505, 20.2919, 0.52", "-50.1811, -71.7757, 20.4295, 0.52", "-50.6771, -72.0145, 20.5041, 0.52", "-51.3982, -72.411, 20.5182, 0.88", "-52.2089, -72.9229, 20.437, 1.18", "-52.6756, -73.2585, 20.3311, 1.18", "-53.201, -73.6881, 20.2136, 1.4", "-53.6261, -74.0718, 20.1295, 1.4", "-54.2017, -74.6368, 20.0534, 1.4", "-54.8807, -75.3518, 20.0668, 1.03", "-55.3498, -75.8483, 20.1476, 0.44", "-55.8495, -76.3807, 20.3353, 0.37", "-56.0817, -76.6317, 20.4792, 0.37", "-56.3981, -76.9811, 20.7504, 0.66", "-56.8616, -77.4748, 21.2629, 1.03", "-57.0714, -77.6846, 21.5293, 1.25", "-57.6217, -78.1964, 22.1966, 0.81", "-57.798, -78.3578, 22.38, 0.81", "-58.0251, -78.5737, 22.5939, 0.29", "-58.3383, -78.9034, 22.84, 0.29", "-58.627, -79.2545, 23.0079, 0.59", "-58.9644, -79.6943, 23.1666, 0.74", "-59.2188, -80.0227, 23.2517, 0.96", "-59.381, -80.2278, 23.302, 1.11", "-59.7783, -80.695, 23.4178, 0.74", "-60.1414, -81.1106, 23.5207, 0.59", "-60.3848, -81.3786, 23.5883, 0.66", "-60.6984, -81.7156, 23.676, 0.74", "-61.0305, -82.0848, 23.7717, 0.37", "-61.5409, -82.7221, 23.9429, 0.29", "-61.5678, -82.762, 23.9533, 0.29", "-61.825, -83.2824, 24.1175, 0.29", "-61.9733, -83.7068, 24.2608, 0.88", "-62.1077, -84.1768, 24.4289, 1.4", "-62.2798, -84.7954, 24.6851, 1.55", "-62.4482, -85.3224, 24.9259, 1.55", "-62.8103, -86.2038, 25.3728, 0.74", "-63.0678, -86.6881, 25.6548, 0.52", "-63.4571, -87.2156, 26.0274, 0.52", "-63.9852, -87.7012, 26.451, 0.52", "-64.4831, -88.0232, 26.7851, 0.74", "-64.8359, -88.198, 27.0054, 0.96", "-65.1433, -88.3249, 27.1759, 0.81", "-65.6387, -88.5368, 27.4624, 0.37", "-65.9689, -88.7211, 27.6903, 0.29", "-66.304, -89.0097, 27.9702, 0.29", "-66.6591, -89.4206, 28.3278, 0.66", "-66.8888, -89.7505, 28.6026, 0.96", "-67.1178, -90.1115, 28.8961, 1.47", "-67.472, -90.6875, 29.3948, 1.25", "-67.8641, -91.2779, 29.9625, 0.74", "-67.8931, -91.3138, 30.0017, 0.74", "-68.3089, -91.7256, 30.5003, 0.74", "-68.5869, -91.9393, 30.8159, 0.74", "-69.129, -92.2358, 31.3515, 0.74", "-69.4367, -92.365, 31.6139, 0.88", "-69.7256, -92.4711, 31.8094, 0.88", "-70.1157, -92.6162, 32.0154, 0.88", "-70.6619, -92.8214, 32.1968, 0.59", "-71.3026, -93.1056, 32.3347, 0.29", "-71.4883, -93.2006, 32.3509, 0.29", "-72.5973, -93.8216, 32.5272, 0.29", "-72.6363, -93.8461, 32.5392, 0.29", "-72.9458, -94.0545, 32.7108, 0.29", "-73.4678, -94.4049, 33.1037, 1.4", "-73.5006, -94.4261, 33.1371, 1.4", "-74.1553, -94.8252, 33.9121, 1.11", "-74.5486, -95.0555, 34.4312, 1.55", "-74.9652, -95.3006, 34.9567, 1.62", "-75.2157, -95.4498, 35.2662, 1.62", "-75.7799, -95.7924, 35.8962, 0.81", "-76.1915, -96.051, 36.2978, 0.88", "-76.3755, -96.1774, 36.4449, 0.88", "-76.9722, -96.6104, 36.8374, 0.37", "-77.0138, -96.6435, 36.8583, 0.37", "-77.6264, -97.1692, 37.1047, 0.37", "-77.932, -97.4434, 37.1941, 0.96", "-78.3209, -97.8002, 37.2872, 1.33", "-78.8838, -98.3228, 37.3922, 0.74", "-79.438, -98.8254, 37.4692, 0.59", "-79.8404, -99.1683, 37.527, 0.96", "-80.0352, -99.322, 37.5682, 0.96", "-80.0818, -99.3558, 37.5885, 0.96", "-80.555, -99.6685, 37.9599, 0.29", "-80.803, -99.8382, 38.2387, 0.29", "-81.0635, -100.027, 38.6076, 0.29", "-81.4439, -100.348, 39.2084, 0.81", "-81.9167, -100.827, 39.9875, 1.25", "-82.2101, -101.165, 40.4908, 1.62", "-82.3851, -101.397, 40.8108, 1.62", "-82.4092, -101.436, 40.8512, 1.62", "-82.7889, -102.117, 41.3722, 0.44", "-83.0316, -102.588, 41.6116, 0.74", "-83.0555, -102.637, 41.6278, 0.74", "-83.1479, -102.832, 41.6786, 0.74", "-83.4979, -103.585, 41.8562, 0.29", "-83.5196, -103.632, 41.8674, 0.29", "-83.723, -104.095, 41.9669, 1.33", "-83.8603, -104.378, 42.0442, 1.62", "-83.9951, -104.629, 42.1539, 1.62", "-84.0142, -104.658, 42.1769, 1.62", "-84.3864, -105.043, 42.7682, 0.59", "-84.4108, -105.061, 42.8097, 0.59", "-84.6832, -105.183, 43.2646, 0.44", "-85.1445, -105.302, 44.0363, 0.52", "-85.653, -105.335, 44.8343, 0.74", "-86.0728, -105.299, 45.4276, 0.88", "-86.3253, -105.244, 45.7427, 0.88", "-86.6712, -105.155, 46.1272, 0.66", "-87.1366, -105.029, 46.5739, 1.03", "-87.675, -104.906, 47.0176, 0.52", "-88.1217, -104.843, 47.3477, 0.44", "-88.5159, -104.827, 47.6335, 0.44", "-89.2938, -104.879, 48.2343, 0.96", "-89.7005, -104.938, 48.5786, 1.18", "-90.3347, -105.076, 49.1423, 0.81", "-90.8025, -105.2, 49.612, 0.81", "-91.2337, -105.306, 50.0825, 1.4", "-91.7161, -105.393, 50.6296, 1.4", "-92.2742, -105.42, 51.2542, 0.29", "-92.3089, -105.416, 51.2922, 0.29", "-92.7236, -105.275, 51.701, 0.29", "-93.1438, -105.05, 52.0641, 0.88", "-93.496, -104.822, 52.3066, 0.59", "-93.8553, -104.587, 52.4932, 0.88", "-94.108, -104.442, 52.5962, 0.88", "-94.3993, -104.315, 52.703, 0.74", "-94.8751, -104.178, 52.8591, 0.74", "-95.2364, -104.124, 52.9773, 0.44", "-95.7843, -104.083, 53.1959, 0.29", "-96.0889, -104.069, 53.3327, 0.29", "-96.7317, -104.049, 53.6458, 0.29", "-97.1447, -104.025, 53.8612, 1.11", "-97.573, -103.979, 54.0971, 1.33", "-98.5125, -103.832, 54.6259, 0.37", "-98.8739, -103.776, 54.8393, 0.37", "-98.915, -103.771, 54.8635, 0.37", "-99.4189, -103.708, 55.1377, 0.37", "-99.8751, -103.67, 55.3156, 0.37", "-100.442, -103.64, 55.5075, 0.44", "-101.271, -103.677, 55.72, 1.33", "-101.81, -103.738, 55.8529, 1.55", "-102.379, -103.831, 55.9856, 1.11", "-103.336, -104.073, 56.1854, 0.59" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-41.6715, -66.4219, 15.6295, 0.88", "-41.6328, -67.333, 15.4828, 0.88", "-41.6179, -67.9801, 15.3589, 0.88", "-41.6139, -68.6824, 15.1893, 0.88", "-41.6447, -69.4443, 14.9933, 1.25", "-41.7124, -70.2581, 14.8132, 0.66", "-41.8032, -70.9713, 14.6769, 0.66", "-41.8136, -71.0119, 14.6695, 0.66", "-42.0747, -71.6746, 14.5771, 0.52", "-42.3551, -72.1577, 14.5638, 0.52", "-42.7776, -72.7483, 14.6391, 0.88", "-42.964, -72.9905, 14.6981, 0.88", "-43.1661, -73.2779, 14.758, 0.88", "-43.3552, -73.5859, 14.7854, 0.52", "-43.6365, -74.0873, 14.7511, 0.52", "-43.8669, -74.5428, 14.5976, 0.74", "-44.1145, -75.0481, 14.3478, 1.18", "-44.3952, -75.6354, 14.0476, 1.18", "-44.6733, -76.2368, 13.7433, 0.96", "-45.0178, -77.0243, 13.3566, 1.33", "-45.4411, -78.075, 12.872, 0.96", "-45.6949, -78.7701, 12.5845, 0.52", "-46.0414, -79.8854, 12.214, 0.52", "-46.1838, -80.4535, 12.0779, 1.33", "-46.287, -81.0032, 11.9992, 1.69", "-46.3944, -81.6906, 11.9791, 1.69", "-46.4565, -82.114, 12.0142, 1.33", "-46.5548, -82.7127, 12.0876, 0.74", "-46.653, -83.1023, 12.1489, 0.37", "-46.8052, -83.464, 12.2252, 0.29", "-47.1114, -83.917, 12.353, 0.29", "-47.2838, -84.099, 12.4183, 0.96", "-47.5799, -84.3403, 12.5249, 0.96", "-47.8861, -84.527, 12.6315, 0.96", "-47.9217, -84.5451, 12.644, 0.96", "-48.1232, -84.6394, 12.716, 0.96" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "7.00177, 41.1398, -1.80571, 0.52", "7.48965, 41.0227, -2.44193, 0.52", "8.28253, 40.8689, -3.45012, 0.52", "9.47457, 40.667, -4.86495, 0.66", "11.2347, 40.4262, -6.78617, 0.88", "13.3181, 40.2175, -8.89017, 0.66", "14.4711, 40.157, -9.97541, 0.29", "14.5156, 40.1579, -10.014, 0.29", "15.2081, 40.2356, -10.5147, 0.29", "15.9567, 40.4101, -10.9137, 0.88", "16.6173, 40.6, -11.1478, 1.11", "18.1674, 41.01, -11.5383, 0.29", "18.991, 41.2301, -11.7614, 0.22", "19.0499, 41.2448, -11.7816, 0.22", "19.8121, 41.4387, -12.0866, 1.25", "21.7701, 41.8884, -12.9843, 0.22", "22.3696, 42.0201, -13.2789, 0.22", "23.1244, 42.1845, -13.654, 0.66", "24.6009, 42.513, -14.4413, 1.25", "25.0198, 42.6081, -14.6639, 1.55", "26.6911, 42.964, -15.5828, 1.25", "28.1204, 43.2797, -16.4114, 0.29", "28.4364, 43.3493, -16.5971, 0.59", "29.4133, 43.5655, -17.1495, 0.22", "30.2209, 43.7402, -17.5671, 1.69", "32.4751, 44.1777, -18.7791, 0.74", "33.6312, 44.4301, -19.4001, 0.37", "34.209, 44.5629, -19.7125, 0.22", "34.5797, 44.6502, -19.9097, 0.66", "35.8696, 44.9632, -20.5737, 1.69", "38.6793, 45.6685, -22.0721, 0.59", "39.7277, 45.9453, -22.6339, 1.55", "41.6247, 46.4501, -23.6624, 0.74", "42.0382, 46.5627, -23.894, 1.11", "42.0951, 46.5786, -23.9271, 1.11", "44.053, 47.0608, -25.0716, 0.22", "44.1018, 47.0718, -25.0976, 0.22", "44.6333, 47.1655, -25.4139, 0.52", "45.7845, 47.3581, -26.1343, 1.18", "47.3794, 47.6266, -27.1241, 1.03", "48.7858, 47.8444, -28.1043, 0.29", "49.659, 47.9701, -28.7483, 1.25", "52.2739, 48.3757, -30.7437, 1.33", "52.4138, 48.3994, -30.8554, 1.33", "52.8769, 48.4964, -31.2585, 1.33", "56.5843, 49.4959, -34.629, 0.74", "56.6317, 49.511, -34.675, 0.74", "57.4015, 49.7669, -35.4257, 0.29", "57.6638, 49.8639, -35.6726, 0.88", "59.8909, 50.7142, -37.7362, 0.29", "60.5751, 50.9639, -38.3428, 1.47", "62.9969, 51.8267, -40.3184, 0.44", "63.5091, 51.9894, -40.7233, 1.03", "64.9191, 52.3721, -41.8053, 0.52", "66.5577, 52.747, -42.9522, 1.55", "68.4529, 53.0928, -44.0748, 0.44", "68.5534, 53.1064, -44.1328, 0.44", "69.1035, 53.1559, -44.4549, 0.44", "69.2657, 53.1715, -44.5885, 0.44", "69.7543, 53.2247, -45.122, 0.59", "70.8175, 53.4256, -46.4313, 0.96", "72.3252, 53.812, -48.6062, 1.25", "73.7817, 54.2756, -50.8191, 1.11", "76.4347, 55.2238, -54.8693, 0.74", "78.5, 56.0385, -58.0088, 0.96", "79.4795, 56.4539, -59.4946, 1.11", "81.9932, 57.6215, -63.281, 1.99", "84.7418, 58.9939, -67.238, 0.81", "86.0771, 59.6906, -69.0068, 0.29", "86.8273, 60.078, -69.8637, 1.03", "87.8182, 60.5853, -70.8738, 1.25", "88.7655, 61.0498, -71.7595, 0.88", "89.5339, 61.4651, -72.3239, 0.29", "89.9576, 61.7222, -72.603, 0.66", "90.8358, 62.3023, -73.2138, 0.52", "90.873, 62.3236, -73.2398, 0.52", "91.793, 62.7571, -73.9072, 0.81", "91.8483, 62.7797, -73.9469, 0.81", "93.1176, 63.2719, -74.8638, 0.81", "95.0604, 63.9449, -76.247, 0.37", "96.5861, 64.4214, -77.2858, 1.18", "98.3504, 64.9382, -78.4628, 0.29", "98.8834, 65.0781, -78.8032, 0.96", "99.1154, 65.1361, -78.9438, 0.96", "100.429, 65.3764, -79.7304, 0.37", "100.732, 65.4288, -79.9, 0.88", "100.787, 65.4418, -79.933, 0.88", "101.305, 65.5773, -80.2314, 1.11", "101.363, 65.5922, -80.2629, 1.11", "104.263, 66.3496, -81.7161, 0.29", "104.926, 66.5291, -82.0348, 0.96", "106.163, 66.8659, -82.5975, 0.37", "107.157, 67.1623, -83.0348, 0.29", "108.018, 67.4573, -83.3896, 0.52", "109.141, 67.9125, -83.7856, 0.66", "110.548, 68.6092, -84.1522, 1.03", "111.032, 68.851, -84.2867, 1.03", "112.757, 69.7005, -84.7353, 0.29", "113.483, 70.0613, -84.951, 0.29", "114.088, 70.3848, -85.1253, 0.59", "114.415, 70.5677, -85.199, 0.88", "115.918, 71.41, -85.4299, 0.29", "116.312, 71.6329, -85.4961, 0.96", "116.373, 71.6681, -85.5042, 0.96", "117.168, 72.1159, -85.6114, 0.29", "117.808, 72.4869, -85.6906, 1.18", "118.066, 72.6492, -85.7107, 1.55", "119.252, 73.4633, -85.7781, 0.29", "119.754, 73.7934, -85.8191, 0.29", "120.179, 74.0419, -85.8499, 0.74", "120.255, 74.0801, -85.8535, 0.74", "120.71, 74.2847, -85.8524, 0.74", "121.996, 74.7171, -85.8884, 0.22", "122.437, 74.81, -85.8939, 0.22", "123.061, 74.9268, -85.9247, 1.03", "123.677, 75.0435, -85.9581, 1.25", "123.737, 75.0557, -85.9606, 1.25", "125.666, 75.4617, -85.9923, 0.29", "126.346, 75.6009, -85.9971, 0.29", "127.496, 75.8266, -86.0146, 0.29", "128.097, 75.9416, -86.04, 0.29", "128.577, 76.0486, -86.062, 0.81", "129.236, 76.2201, -86.1042, 1.11", "130.812, 76.6688, -86.1901, 0.22", "131.427, 76.8321, -86.2327, 1.11", "132.837, 77.1709, -86.3684, 0.22", "133.732, 77.3819, -86.4839, 0.22", "135.041, 77.6963, -86.6623, 0.44", "135.825, 77.897, -86.7556, 1.11", "136.472, 78.0593, -86.8064, 1.25", "138.372, 78.4718, -86.8732, 0.22", "139.337, 78.6596, -86.8358, 0.88", "139.954, 78.7477, -86.7785, 0.88", "140.873, 78.8482, -86.6424, 0.22", "141.412, 78.8952, -86.5511, 0.88", "142.464, 78.9526, -86.3264, 0.22", "143.436, 78.9145, -86.0687, 0.22", "144.21, 78.8487, -85.8764, 0.22", "144.985, 78.7858, -85.7157, 0.88", "145.399, 78.7575, -85.6423, 1.11", "145.452, 78.7555, -85.6339, 1.11", "146.767, 78.7192, -85.4685, 0.22", "146.898, 78.7149, -85.4535, 0.22", "147.823, 78.732, -85.3325, 0.22", "148.518, 78.7438, -85.2289, 0.22", "148.578, 78.7424, -85.2195, 0.22", "149.246, 78.7157, -85.0942, 1.03", "149.308, 78.7099, -85.0798, 1.03", "149.904, 78.6371, -84.9324, 1.03", "151.149, 78.465, -84.6093, 0.22", "151.869, 78.3781, -84.4106, 0.22", "152.542, 78.3187, -84.2103, 1.4", "153.31, 78.2732, -83.9604, 1.47", "154.456, 78.2737, -83.5655, 0.22", "154.807, 78.2945, -83.4342, 0.59", "154.935, 78.3072, -83.3795, 0.59", "155.369, 78.3662, -83.1937, 0.81", "155.452, 78.3797, -83.1661, 0.81", "156.23, 78.4694, -82.9509, 0.15", "156.542, 78.4822, -82.8766, 0.15", "157.1, 78.4584, -82.7705, 0.74", "157.218, 78.444, -82.7503, 0.74", "158.788, 78.1294, -82.4834, 0.22", "159.872, 77.8753, -82.3167, 0.22", "159.923, 77.8619, -82.309, 0.22", "160.7, 77.6652, -82.1887, 1.25", "161.326, 77.5124, -82.0515, 1.25", "162.145, 77.2957, -81.8154, 0.37", "163.305, 76.9183, -81.2845, 0.22", "163.857, 76.7302, -80.9641, 0.37", "163.97, 76.6887, -80.8868, 0.37", "164.947, 76.3277, -80.1005, 0.88", "165.295, 76.2018, -79.7932, 0.88", "166.321, 75.7706, -78.8244, 0.22", "166.767, 75.5509, -78.4109, 0.74", "167.109, 75.3774, -78.1529, 0.96", "167.486, 75.1851, -77.9221, 0.96", "168.139, 74.8506, -77.6107, 0.22", "169.054, 74.4096, -77.2412, 0.22", "170.354, 73.8215, -76.8318, 0.22", "171.207, 73.4411, -76.5509, 0.74", "171.544, 73.2878, -76.4337, 1.03", "171.618, 73.2551, -76.4061, 1.03", "171.936, 73.1372, -76.2791, 1.25", "172.058, 73.1102, -76.2336, 1.25", "173.291, 72.9504, -75.7896, 0.22", "173.986, 72.8786, -75.5379, 0.15", "174.456, 72.8168, -75.3709, 0.88", "174.99, 72.7301, -75.1852, 1.11", "176.392, 72.4759, -74.7112, 0.22", "176.958, 72.3711, -74.5395, 0.81", "177.351, 72.3013, -74.4353, 0.81", "178.455, 72.0998, -74.143, 0.29", "178.631, 72.0634, -74.1017, 0.29", "179.292, 71.9102, -73.9816, 0.29", "180.149, 71.7142, -73.9943, 0.96", "180.746, 71.5907, -74.0998, 0.59", "180.8, 71.5804, -74.1138, 0.59", "181.723, 71.392, -74.4269, 0.59", "182.525, 71.1996, -74.7207, 1.33", "184.756, 70.5815, -75.598, 0.22", "185.202, 70.4438, -75.779, 1.11", "185.658, 70.2939, -75.9678, 1.33", "187.132, 69.7878, -76.5599, 0.22", "187.546, 69.6307, -76.7084, 0.66", "187.756, 69.5451, -76.7741, 0.81", "187.823, 69.5125, -76.7874, 0.81", "188.513, 69.1692, -76.9119, 0.22", "188.562, 69.1443, -76.9224, 0.22", "189.211, 68.8078, -76.985, 0.22", "196.734, 70.7315, -80.1815, 0.22" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "7.00177, 41.1398, -1.80571, 0.96", "7.04249, 41.86, -2.13745, 0.96", "7.12386, 42.4772, -2.60773, 0.96", "7.1908, 43.1271, -3.16757, 0.81", "7.2439, 43.6532, -3.6658, 0.52", "7.32434, 44.5359, -4.49451, 0.52", "7.62375, 46.8766, -6.54681, 0.96", "7.85271, 47.9426, -7.4613, 0.96", "8.04101, 48.6293, -8.02074, 0.96", "8.33179, 49.5844, -8.7426, 0.52", "8.52874, 50.2706, -9.1878, 0.44", "8.76501, 51.4748, -9.73609, 0.44", "8.8575, 52.4502, -9.88165, 0.37", "8.92015, 53.2002, -9.92888, 0.66", "8.93471, 53.7088, -9.95875, 1.03", "8.87287, 54.4009, -10.0443, 1.4", "8.73909, 54.9467, -10.2069, 1.33", "8.38779, 55.9085, -10.5939, 0.96", "8.36832, 55.9568, -10.6171, 0.96", "8.14917, 56.494, -10.8957, 0.96", "7.89019, 57.1669, -11.2528, 0.81", "7.52107, 58.1959, -11.7948, 1.18", "7.23119, 59.0571, -12.2026, 1.47" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-10.5639, 29.5044, 11.5213, 0.74", "-12.2777, 28.8758, 12.2688, 0.74", "-13.3551, 28.4828, 12.8288, 0.88", "-14.0937, 28.2227, 13.2368, 0.96", "-15.2382, 27.8367, 13.8756, 0.96", "-16.074, 27.5667, 14.3689, 0.81", "-16.897, 27.3177, 14.8639, 0.74", "-17.9159, 27.0525, 15.5164, 0.74", "-18.6994, 26.8923, 16.042, 0.59", "-19.4989, 26.7541, 16.5788, 0.88", "-20.2042, 26.643, 17.0522, 0.81", "-20.8489, 26.5518, 17.453, 0.81", "-21.6873, 26.4467, 17.9385, 1.33", "-22.4053, 26.3581, 18.3144, 1.33", "-23.2684, 26.2466, 18.7609, 0.81", "-24.2137, 26.1142, 19.2249, 0.81", "-25.2471, 25.9588, 19.6456, 0.81", "-26.3109, 25.7821, 20.0135, 0.81", "-26.3981, 25.767, 20.0413, 0.81", "-26.9976, 25.6664, 20.2051, 0.74", "-27.9471, 25.528, 20.4268, 0.66", "-29.3352, 25.319, 20.6597, 0.96", "-30.4687, 25.1312, 20.8053, 0.96" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-10.5639, 29.5044, 11.5213, 1.33", "-11.7166, 30.6224, 12.8909, 1.33", "-12.288, 31.1909, 13.5504, 1.33", "-13.0552, 32.0092, 14.3623, 1.69", "-13.5446, 32.525, 14.832, 1.84", "-14.4851, 33.505, 15.7335, 1.55", "-15.5231, 34.5717, 16.7131, 1.18", "-16.2041, 35.27, 17.349, 1.18", "-17.1944, 36.303, 18.2828, 1.25", "-17.7895, 36.9342, 18.8255, 1.25", "-18.6063, 37.7952, 19.5444, 1.55", "-18.9133, 38.0963, 19.77, 1.92", "-19.9508, 39.0554, 20.5084, 2.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "3.96703, -44.6445, -3.1912, 1.18", "4.39363, -44.7392, -2.89361, 1.18", "5.07273, -44.8946, -2.40399, 0.96", "5.90341, -45.0849, -1.79811, 0.96", "7.25105, -45.3841, -0.798752, 0.96", "8.26718, -45.6037, -0.0402061, 0.74", "9.16701, -45.7735, 0.606215, 0.66", "9.47305, -45.8329, 0.838668, 0.96", "9.51399, -45.841, 0.869444, 0.96", "10.1627, -45.9516, 1.29589, 0.96", "10.2131, -45.9596, 1.31561, 0.96", "11.0485, -46.1084, 1.46592, 0.74", "11.1542, -46.1365, 1.47395, 0.74", "12.0961, -46.4871, 1.50641, 0.74", "12.5918, -46.7181, 1.51709, 0.81", "12.941, -46.9083, 1.51775, 1.18", "13.8373, -47.4315, 1.52142, 1.03", "14.4225, -47.8105, 1.52601, 1.11", "15.4096, -48.4673, 1.5363, 0.74", "16.0029, -48.8903, 1.54573, 1.11", "16.4991, -49.2558, 1.55473, 1.92" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "3.96703, -44.6445, -3.1912, 1.03", "4.2844, -45.9231, -2.88964, 1.03", "4.44701, -47.2474, -2.61651, 0.88", "4.53714, -48.4407, -2.39656, 1.18", "4.59183, -49.7046, -2.17917, 1.25", "4.62421, -50.6965, -2.01143, 1.25", "4.66022, -52.4474, -1.73151, 0.88", "4.61636, -55.1194, -1.3104, 0.88", "4.57762, -56.4831, -1.12051, 1.03", "4.56805, -57.5326, -1.03454, 1.03", "4.59696, -59.0406, -0.979616, 0.88", "4.67294, -59.9495, -0.983423, 0.88", "4.83524, -60.7402, -1.03448, 0.88", "5.29014, -61.8967, -1.19673, 0.88", "5.84519, -62.8502, -1.39775, 1.33", "5.89611, -62.9121, -1.41527, 1.33", "6.67796, -63.6695, -1.67001, 1.55", "7.61708, -64.5011, -1.95731, 1.77", "8.27281, -65.0778, -2.15062, 1.99", "8.82555, -65.5624, -2.30639, 1.99", "10.2119, -66.7907, -2.67094, 1.47", "11.5933, -68.0399, -3.03957, 1.33", "12.8156, -69.1904, -3.37482, 1.33", "13.6863, -70.0475, -3.62553, 1.69", "14.2166, -70.5904, -3.78098, 1.69" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "0.0708601, -54.8274, 2.42695, 0.96", "0.206953, -55.6041, 3.54881, 0.96", "0.22995, -57.0692, 5.4548, 0.52", "0.203474, -57.4754, 5.89804, 0.81", "-0.00770295, -58.7723, 7.06904, 0.74", "-0.283896, -59.945, 7.95856, 1.11", "-0.592506, -61.1937, 8.77564, 0.74", "-0.831182, -62.1191, 9.28316, 0.52", "-1.13945, -63.3401, 9.76387, 0.52", "-1.44991, -64.7066, 10.2369, 0.52", "-1.60474, -65.7213, 10.5078, 0.37", "-1.67459, -66.6838, 10.7552, 0.52", "-1.67353, -68.1595, 11.1532, 0.81", "-1.6306, -68.8872, 11.4269, 1.11", "-1.58485, -69.5991, 11.788, 0.44", "-1.55001, -70.51, 12.3877, 0.37", "-1.71949, -71.2218, 13.0055, 0.74", "-2.00603, -71.4761, 13.2994, 0.74", "-2.94664, -71.8929, 13.814, 0.74", "-3.86032, -72.2341, 14.1761, 0.59", "-4.59649, -72.531, 14.4029, 0.59", "-5.1793, -72.8192, 14.564, 0.88", "-5.75673, -73.2128, 14.702, 0.96", "-6.21211, -73.6853, 14.8356, 0.81", "-6.79097, -74.5537, 15.0312, 0.52", "-7.21517, -75.4132, 15.2762, 0.52", "-7.59119, -76.2692, 15.5899, 0.88", "-7.7285, -76.6009, 15.7502, 1.03", "-8.19774, -77.7422, 16.4811, 0.52", "-8.35567, -78.1159, 16.7694, 0.52", "-8.74965, -78.9742, 17.5695, 0.81", "-9.23837, -79.8589, 18.5439, 0.81", "-9.80867, -80.6961, 19.5565, 0.44", "-10.346, -81.3421, 20.3712, 0.81", "-10.3775, -81.3729, 20.411, 0.81", "-11.1676, -82.0745, 21.2499, 0.52", "-11.6509, -82.4803, 21.6986, 0.59", "-12.2399, -82.9428, 22.1456, 0.59", "-12.9637, -83.4475, 22.5028, 0.81", "-13.4886, -83.7985, 22.6622, 0.96", "-13.9731, -84.1154, 22.7616, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "0.0708601, -54.8274, 2.42695, 0.74", "-0.0154817, -56.8333, 2.28244, 0.74", "0.105427, -58.5802, 2.4877, 0.59", "0.113412, -58.6376, 2.51288, 0.59", "0.315711, -59.7944, 3.27009, 0.59", "0.3568, -60.0648, 3.41593, 0.59", "0.535592, -61.153, 3.88305, 0.59", "0.692382, -61.9048, 4.20642, 0.88", "1.12595, -63.5323, 4.80331, 0.88", "1.64323, -65.213, 5.29203, 0.66", "2.76135, -68.55, 6.02972, 1.25", "3.33488, -70.1362, 6.30478, 0.81", "3.86323, -71.4732, 6.44576, 0.74", "4.52182, -73.0259, 6.50712, 0.74", "4.95956, -73.958, 6.45608, 0.74", "4.99849, -74.0341, 6.44701, 0.74", "5.35758, -74.6904, 6.36286, 1.03", "5.76101, -75.7228, 6.26389, 0.37", "5.94827, -76.7554, 6.13669, 0.37", "5.91394, -77.1868, 6.07733, 0.81", "5.73188, -77.8986, 5.97786, 0.81", "5.46267, -78.6795, 5.87433, 0.81", "5.14748, -79.458, 5.8001, 0.66", "5.12634, -79.5122, 5.7991, 0.66", "4.90875, -80.2585, 5.81856, 0.66", "4.75761, -81.2081, 5.86385, 0.59", "4.72299, -81.9409, 5.91011, 0.81", "4.75491, -82.9485, 6.04229, 0.88", "4.84817, -84.0482, 6.23177, 1.18", "4.96239, -84.8372, 6.38778, 1.33", "5.19362, -85.8648, 6.6167, 0.59", "5.41783, -86.6309, 6.79814, 0.81", "5.86975, -87.8855, 7.09576, 0.44", "6.31772, -88.9748, 7.34189, 0.37", "6.82408, -89.983, 7.48786, 0.37", "7.19976, -90.6481, 7.51178, 0.88", "7.59922, -91.3355, 7.46261, 1.11", "8.03574, -92.1505, 7.30989, 1.11", "8.06114, -92.2099, 7.29204, 1.11", "8.54739, -93.9739, 6.68664, 0.66", "8.66357, -95.2541, 6.23758, 0.59", "8.60913, -96.1449, 5.96096, 0.59", "8.43908, -97.1196, 5.71015, 0.59", "8.18817, -98.0879, 5.51298, 1.18", "8.00698, -98.6899, 5.43574, 1.33", "7.71971, -99.4656, 5.41699, 1.33", "7.41557, -100.378, 5.43384, 0.74", "7.26795, -101.141, 5.42978, 0.59", "7.26579, -101.212, 5.42736, 0.59", "7.35775, -101.988, 5.37261, 0.44", "7.37488, -102.052, 5.36187, 0.44", "7.70883, -102.975, 5.1172, 0.81", "8.05202, -103.933, 4.75967, 1.11", "8.11265, -104.147, 4.68215, 1.11", "8.12563, -104.214, 4.66149, 1.11", "8.22278, -105.268, 4.38831, 0.37", "8.22474, -106.018, 4.22058, 0.37", "8.11915, -107.096, 4.06629, 0.74", "7.9752, -107.966, 3.99718, 1.18", "7.78938, -108.853, 3.9462, 1.18", "7.62374, -109.532, 3.9246, 1.03", "7.43048, -110.294, 3.99342, 0.59", "7.17682, -111.382, 4.18413, 0.59", "7.16333, -111.454, 4.20626, 0.59", "7.05185, -112.546, 4.64047, 0.29", "7.05407, -112.601, 4.67209, 0.29", "7.35743, -114.165, 5.73668, 0.29", "7.37184, -114.223, 5.77745, 0.29", "7.60881, -115.077, 6.34025, 0.96", "7.77442, -115.758, 6.75027, 0.96", "7.98527, -116.886, 7.35767, 0.29", "8.01882, -117.634, 7.66357, 0.29", "7.91752, -118.634, 7.91388, 0.29", "7.79096, -119.239, 8.02797, 0.52", "7.55262, -119.916, 8.12534, 0.52", "7.19728, -120.684, 8.22311, 0.29", "6.72612, -121.559, 8.33869, 0.29", "6.5523, -121.87, 8.3988, 1.18", "6.29995, -122.405, 8.52973, 1.33", "5.98392, -123.243, 8.74466, 1.33", "5.75151, -124.087, 8.94013, 1.11", "5.56711, -125.012, 9.10969, 0.52", "5.55792, -125.091, 9.12043, 0.52", "5.49671, -126.252, 9.30253, 0.29", "5.50429, -126.914, 9.41191, 0.88", "5.5301, -127.57, 9.51146, 0.88", "5.55872, -128.09, 9.59807, 0.66", "5.57047, -128.772, 9.70762, 0.44", "5.44552, -129.805, 9.88195, 0.29", "5.42311, -129.882, 9.88938, 0.29", "5.22112, -130.467, 9.78583, 0.29", "5.1956, -130.557, 9.75323, 0.29", "5.06869, -131.14, 9.52798, 0.29", "4.95066, -132.002, 9.20215, 0.88", "4.91136, -133.046, 8.85261, 1.03", "5.00496, -134.71, 8.42354, 0.37", "5.10517, -135.695, 8.30841, 0.37", "5.21826, -136.64, 8.29305, 1.11", "5.32827, -137.47, 8.36438, 1.11", "5.45366, -138.522, 8.56458, 1.03", "5.52786, -139.359, 8.80493, 1.03", "5.61769, -141.081, 9.39413, 0.29", "5.62114, -141.732, 9.59226, 0.29", "5.60023, -142.374, 9.75441, 0.74", "5.54223, -142.966, 9.88505, 1.03", "5.38883, -143.767, 10.0407, 1.33", "5.15447, -144.552, 10.1531, 1.03", "4.81799, -145.358, 10.1953, 0.29", "4.77609, -145.426, 10.2015, 0.29", "4.20816, -146.095, 10.281, 0.29", "3.55505, -146.669, 10.3869, 0.88", "2.97035, -147.041, 10.4805, 0.88", "2.33208, -147.365, 10.5925, 0.88", "1.55834, -147.74, 10.7376, 0.96", "1.15038, -147.943, 10.8155, 0.96", "1.05744, -147.995, 10.8354, 0.96", "0.393005, -148.505, 10.9837, 0.29", "-0.0163679, -149.013, 11.1101, 0.29", "-0.262222, -149.626, 11.2198, 0.29", "-0.273955, -149.691, 11.2297, 0.29", "-0.302127, -150.393, 11.37, 0.96", "-0.277761, -150.93, 11.4879, 0.96", "-0.210735, -151.556, 11.6826, 0.44", "-0.110509, -152.42, 11.9781, 0.37", "-0.0441351, -153.181, 12.2464, 1.25", "0.0141934, -154.225, 12.5713, 1.47", "0.0284004, -154.978, 12.7554, 1.18", "0.015517, -156.417, 13.0361, 0.74", "-0.0305422, -157.272, 13.1512, 0.37", "-0.148874, -158.345, 13.1896, 0.29", "-0.326017, -159.397, 13.0701, 0.29", "-0.533288, -160.277, 12.8454, 1.03", "-0.554533, -160.35, 12.8192, 1.03", "-0.719573, -160.887, 12.5588, 1.25", "-0.940984, -161.562, 12.2101, 1.18", "-1.19537, -162.296, 11.842, 0.88", "-1.37478, -162.762, 11.6682, 0.66", "-1.6707, -163.48, 11.479, 0.37", "-2.08071, -164.401, 11.3354, 0.29", "-2.1408, -164.531, 11.3279, 0.29", "-2.60413, -165.411, 11.414, 0.29", "-3.17193, -166.37, 11.6076, 0.88", "-3.49658, -166.884, 11.7427, 1.33", "-4.12005, -167.802, 12.022, 1.55", "-4.32983, -168.095, 12.1212, 1.84", "-5.18399, -169.344, 12.5167, 0.44", "-5.53457, -169.872, 12.6707, 0.81", "-6.05785, -170.741, 12.8717, 0.37", "-6.37691, -171.321, 12.9977, 0.29", "-6.40299, -171.381, 13.0084, 0.29", "-6.56538, -172.114, 13.1837, 0.29", "-6.5566, -172.178, 13.2033, 0.29", "-6.42786, -172.61, 13.3745, 0.52", "-6.37682, -172.737, 13.4299, 0.52", "-6.09989, -173.423, 13.7365, 0.37", "-5.71826, -174.578, 14.2072, 0.29", "-5.56832, -175.129, 14.3507, 0.74", "-5.4429, -175.684, 14.4392, 0.81", "-5.35808, -176.252, 14.4723, 0.52", "-5.33351, -176.717, 14.4556, 1.03", "-5.35433, -177.546, 14.3576, 1.25", "-5.45561, -178.942, 14.0673, 0.29", "-5.46574, -179.015, 14.0506, 0.29", "-5.65001, -179.847, 13.8494, 0.29", "-6.07281, -181.112, 13.6457, 0.29", "-6.10408, -181.186, 13.6416, 0.29", "-6.32479, -181.636, 13.6738, 1.11", "-6.56097, -182.095, 13.734, 1.33", "-6.83525, -182.652, 13.8031, 1.33", "-7.47617, -184.014, 13.957, 0.52", "-7.90382, -185.065, 14.0187, 0.29", "-8.26834, -186.17, 14.0498, 0.29", "-8.47636, -187.156, 14.0955, 1.11", "-8.53096, -187.836, 14.1306, 1.47", "-8.48646, -188.564, 14.1656, 1.11", "-8.2493, -189.742, 14.1959, 0.44", "-7.92657, -190.621, 14.2719, 0.44", "-7.18601, -192.013, 14.4918, 0.44", "-6.77478, -192.609, 14.6443, 0.96", "-6.39959, -193.087, 14.7916, 1.18", "-6.35119, -193.148, 14.8134, 1.18", "-5.92701, -193.731, 15.0441, 0.29", "-5.89861, -193.795, 15.0589, 0.29", "-5.81878, -194.464, 15.1087, 0.29", "-5.80456, -195.09, 15.148, 0.22", "-5.82046, -196.126, 15.2071, 0.22", "-5.81373, -196.432, 15.2243, 0.74", "-5.77085, -197.41, 15.3237, 0.59", "-5.69156, -197.991, 15.4064, 1.11", "-5.55251, -198.549, 15.5079, 1.33", "-5.52565, -198.614, 15.5227, 1.33", "-4.97326, -199.537, 15.8144, 0.74", "-4.27067, -200.433, 16.1745, 0.29", "-3.51896, -201.189, 16.5436, 0.29", "-3.10737, -201.543, 16.7634, 0.66", "-2.67579, -201.875, 17.0007, 0.37", "-1.92194, -202.424, 17.413, 0.29", "-1.2448, -202.892, 17.7919, 0.88", "-0.793268, -203.201, 18.0417, 1.25", "0.101126, -203.877, 18.5571, 0.96", "0.759319, -204.443, 18.9398, 0.74", "1.28842, -204.982, 19.2408, 0.52", "1.90054, -205.729, 19.5646, 0.29", "1.94815, -205.803, 19.5922, 0.29", "2.28817, -206.528, 19.801, 0.29", "2.32967, -206.672, 19.8277, 0.29", "2.46202, -207.65, 19.9695, 0.66", "2.47007, -208.319, 20.0734, 0.96", "2.41462, -209.188, 20.2056, 0.52", "2.35752, -209.898, 20.3245, 0.52", "2.31441, -210.292, 20.3969, 0.52", "2.30944, -210.362, 20.4106, 0.52", "2.32248, -211.58, 20.6761, 0.22", "2.38368, -212.187, 20.8128, 1.18", "2.51155, -212.834, 21.0063, 1.47", "2.79933, -214.03, 21.4767, 0.22", "2.96383, -214.681, 21.7609, 0.22", "3.1283, -215.455, 22.1077, 1.03", "3.1864, -215.851, 22.2864, 1.03", "3.22556, -217.369, 22.992, 0.37", "3.12408, -218.356, 23.4238, 0.29", "2.95578, -219.048, 23.6858, 0.29", "2.64152, -219.854, 23.8761, 0.96", "2.29874, -220.59, 23.9376, 0.96", "1.8931, -221.47, 23.8893, 0.29", "1.65364, -222.096, 23.7654, 0.29", "1.54042, -222.59, 23.654, 0.52", "1.44619, -223.614, 23.452, 0.44", "1.48222, -224.448, 23.3188, 0.37", "1.58179, -225.203, 23.2217, 0.37", "1.75803, -226.206, 23.1259, 0.37", "1.93897, -227.231, 23.0311, 1.18", "1.99816, -227.652, 22.9866, 1.18", "2.03162, -228.173, 22.9041, 1.18", "2.03297, -228.242, 22.8904, 1.11", "1.99825, -228.981, 22.7078, 0.66", "1.85123, -230.031, 22.3814, 0.52", "1.60543, -231.224, 21.927, 0.37", "1.35764, -232.274, 21.4832, 0.88" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-103.336, -104.073, 56.1854, 0.22", "-104.168, -104.272, 56.8737, 0.22", "-104.62, -104.393, 57.2361, 0.22", "-105.014, -104.494, 57.5359, 0.22", "-105.295, -104.556, 57.7703, 0.59", "-105.642, -104.642, 58.0719, 0.59", "-106.385, -104.849, 58.8252, 0.29", "-106.851, -104.997, 59.3085, 0.52", "-107.099, -105.083, 59.5846, 0.74", "-108.02, -105.367, 60.5969, 0.96", "-108.438, -105.466, 61.0322, 1.03", "-109.859, -105.698, 62.517, 0.29", "-110.287, -105.733, 62.948, 0.29", "-110.452, -105.732, 63.1061, 0.29", "-111.196, -105.701, 63.8016, 0.44", "-111.846, -105.623, 64.3441, 0.44", "-112.733, -105.411, 65.0181, 1.47", "-113.264, -105.203, 65.3413, 2.21", "-113.748, -104.971, 65.6621, 2.58" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-103.336, -104.073, 56.1854, 0.29", "-104.1, -102.318, 55.8431, 0.29", "-104.867, -100.459, 55.5194, 0.29", "-104.898, -100.356, 55.5031, 0.29", "-105.003, -99.7709, 55.3915, 0.29", "-105.056, -99.475, 55.335, 0.29", "-105.243, -98.4384, 55.1373, 0.29", "-105.246, -98.2812, 55.1156, 0.29", "-105.16, -96.8015, 54.8483, 0.29", "-105.019, -95.5226, 54.5904, 0.29" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-48.1232, -84.6394, 12.716, 0.96", "-48.7212, -86.1672, 10.2944, 0.96", "-48.8567, -86.5016, 9.80108, 0.96", "-49.1878, -87.2954, 8.68525, 0.88", "-49.4218, -87.8694, 7.91073, 1.11", "-49.9735, -89.2714, 6.09881, 0.59", "-50.2433, -89.986, 5.22353, 0.22", "-50.394, -90.3673, 4.8268, 1.4", "-50.8861, -91.6319, 3.57358, 0.22", "-51.0226, -91.995, 3.25274, 0.88", "-51.1069, -92.2655, 3.03102, 0.88", "-51.341, -93.1505, 2.41054, 0.15", "-51.5557, -93.8666, 1.97388, 1.33", "-51.6619, -94.1733, 1.81576, 1.55", "-52.1282, -95.435, 1.33684, 0.15", "-52.1435, -95.4748, 1.32411, 0.15", "-52.3211, -95.9662, 1.20171, 0.22", "-52.6337, -97.0043, 1.02584, 0.22", "-52.7359, -97.48, 0.97366, 0.22", "-52.8047, -97.9483, 0.931282, 1.18", "-52.8368, -98.3294, 0.906869, 1.47", "-52.8547, -98.9492, 0.849236, 1.25", "-52.8064, -99.9739, 0.689331, 0.22", "-52.7632, -100.659, 0.546059, 1.4", "-52.7642, -101.232, 0.408872, 1.55", "-52.802, -101.71, 0.286638, 1.11", "-52.8117, -101.767, 0.272637, 1.11", "-53.0128, -102.553, 0.108628, 0.22", "-53.2295, -103.282, 0.00514412, 0.22", "-53.3392, -103.663, -0.0457759, 0.22", "-53.4743, -104.185, -0.101182, 1.18", "-53.5959, -104.664, -0.161219, 1.4", "-53.7275, -105.186, -0.228375, 0.22", "-53.9079, -105.929, -0.318195, 0.22", "-54.1123, -106.75, -0.454459, 1.33", "-54.1836, -106.979, -0.504153, 1.47", "-54.6009, -108.064, -0.784238, 0.22", "-54.8026, -108.497, -0.910082, 0.37", "-54.9297, -108.718, -0.97709, 0.37", "-55.3658, -109.345, -1.19072, 0.22", "-55.8034, -109.92, -1.38774, 0.96", "-55.9617, -110.136, -1.45786, 1.11", "-56.1375, -110.385, -1.52833, 1.33", "-56.398, -110.759, -1.62463, 0.88", "-57.0495, -111.712, -1.87906, 0.22", "-57.3764, -112.198, -2.00846, 0.22", "-57.6971, -112.677, -2.13531, 0.22", "-58.3611, -113.651, -2.39725, 1.18", "-58.6973, -114.139, -2.52862, 1.69", "-59.1042, -114.737, -2.69234, 1.62", "-59.7196, -115.669, -2.92409, 0.22", "-59.8694, -115.914, -2.98967, 1.11", "-60.0338, -116.209, -3.07329, 1.11", "-60.0574, -116.261, -3.08872, 1.11", "-60.3529, -117.07, -3.31591, 0.22", "-60.4704, -117.435, -3.39596, 0.29", "-60.6329, -118.034, -3.57443, 0.22", "-60.6469, -118.072, -3.59354, 0.22", "-60.7887, -118.389, -3.79616, 1.18", "-60.8085, -118.428, -3.82437, 1.18", "-60.9679, -118.715, -4.04776, 1.25", "-61.3374, -119.398, -4.59829, 0.59", "-61.7784, -120.241, -5.28504, 0.15", "-61.9035, -120.504, -5.48122, 0.15", "-62.1087, -120.982, -5.81199, 1.11", "-62.1968, -121.198, -5.94792, 1.4", "-62.5179, -121.997, -6.38216, 0.22", "-62.5356, -122.04, -6.39901, 0.22", "-62.7103, -122.493, -6.53563, 0.22", "-62.9761, -123.189, -6.73385, 1.03", "-63.1101, -123.561, -6.82528, 1.25", "-63.4107, -124.444, -7.01321, 0.22", "-63.6302, -125.141, -7.12448, 0.22", "-63.8036, -125.732, -7.21399, 0.96", "-63.9025, -126.097, -7.26359, 1.18", "-64.0492, -126.622, -7.34497, 0.59", "-64.1846, -127.173, -7.44759, 0.22", "-64.2864, -127.62, -7.54059, 0.22", "-64.4131, -128.152, -7.67537, 1.18", "-64.4702, -128.368, -7.73238, 1.4", "-64.8146, -129.532, -8.0511, 0.29", "-64.9998, -130.136, -8.22138, 0.29", "-65.0171, -130.195, -8.23807, 0.29", "-65.2778, -131.088, -8.48065, 0.15", "-65.4801, -131.754, -8.63015, 0.59", "-65.5959, -132.121, -8.69836, 0.74", "-65.6111, -132.168, -8.70478, 0.74", "-65.9371, -132.937, -8.80748, 1.18", "-66.0843, -133.228, -8.84362, 1.62", "-66.4298, -133.808, -8.90979, 1.77", "-66.8626, -134.47, -8.99078, 0.22", "-67.2219, -135.014, -9.06545, 0.22", "-67.6042, -135.624, -9.17149, 0.22", "-67.8808, -136.102, -9.26951, 0.22", "-67.9005, -136.141, -9.27864, 0.22", "-68.1031, -136.596, -9.38957, 1.47", "-68.3614, -137.23, -9.54249, 1.55", "-68.7218, -138.243, -9.78462, 0.22", "-68.8612, -138.692, -9.88893, 0.22", "-68.9946, -139.131, -9.97446, 0.96", "-69.1467, -139.615, -10.0505, 0.96", "-69.424, -140.45, -10.1489, 0.15", "-69.4423, -140.5, -10.1521, 0.15", "-69.6918, -141.197, -10.1346, 0.15", "-69.8817, -141.747, -10.1007, 1.25", "-69.9549, -141.979, -10.0799, 1.4", "-69.9687, -142.036, -10.0746, 1.4", "-70.0312, -142.374, -10.0379, 1.4", "-70.1571, -143.263, -9.97807, 0.22", "-70.1615, -143.313, -9.97648, 0.22", "-70.2069, -143.767, -10.0052, 0.22", "-70.3004, -144.613, -10.125, 0.22", "-70.3064, -144.665, -10.1348, 0.22", "-70.3804, -145.232, -10.2627, 1.11", "-70.4304, -145.57, -10.3602, 1.11", "-70.6031, -146.7, -10.7279, 0.22", "-70.697, -147.35, -10.9707, 1.18", "-70.7024, -147.391, -10.9867, 1.18", "-70.7536, -147.922, -11.2042, 1.47", "-70.7888, -148.631, -11.4988, 1.25", "-70.7941, -149.743, -11.9675, 0.15", "-70.7531, -150.427, -12.2488, 1.4", "-70.7063, -150.783, -12.3988, 1.4", "-70.4829, -151.901, -12.9037, 0.22", "-70.3539, -152.347, -13.1144, 0.52", "-70.3388, -152.39, -13.1334, 0.52", "-70.24, -152.638, -13.231, 0.52", "-69.9378, -153.43, -13.4995, 0.22", "-69.8031, -153.813, -13.6172, 0.96", "-69.7052, -154.119, -13.6951, 1.11", "-69.506, -154.88, -13.8667, 0.22", "-69.4041, -155.318, -13.9231, 0.29", "-69.3548, -155.646, -13.9297, 0.29", "-69.2966, -156.348, -13.8712, 0.81", "-69.293, -156.4, -13.863, 0.81", "-69.27, -156.789, -13.7876, 1.11", "-69.2095, -157.654, -13.6014, 0.22", "-69.1612, -158.413, -13.4363, 0.22", "-69.1481, -158.567, -13.4021, 0.66", "-69.0458, -159.503, -13.1999, 0.22", "-69.0367, -159.561, -13.1905, 0.22", "-68.8939, -160.278, -13.1169, 1.11", "-68.7767, -160.727, -13.1245, 1.4", "-68.628, -161.184, -13.1641, 0.88", "-68.4281, -161.769, -13.2454, 0.22", "-68.2611, -162.274, -13.3507, 0.22", "-68.2332, -162.355, -13.3732, 0.22", "-67.9499, -163.069, -13.6173, 1.18", "-67.8294, -163.337, -13.7214, 1.18", "-67.638, -163.718, -13.8788, 0.81", "-67.2573, -164.31, -14.2289, 0.52", "-66.7454, -164.991, -14.7088, 0.22", "-66.4511, -165.355, -15.0106, 0.22", "-66.2023, -165.633, -15.2705, 1.11", "-66.013, -165.833, -15.4929, 1.11", "-65.1229, -166.718, -16.6327, 0.22", "-65.0077, -166.827, -16.7843, 0.22", "-64.3614, -167.457, -17.6623, 1.47", "-64.1582, -167.667, -17.9488, 1.77", "-63.491, -168.376, -18.8514, 1.4", "-62.9635, -168.958, -19.5071, 0.22", "-62.7643, -169.185, -19.7217, 0.66", "-62.6132, -169.379, -19.8919, 0.81", "-61.9681, -170.285, -20.624, 0.22", "-61.6853, -170.769, -20.9798, 0.22", "-61.4027, -171.378, -21.3646, 1.11", "-61.3389, -171.576, -21.4808, 1.11", "-61.0492, -172.96, -22.2465, 0.22", "-61.0436, -173.012, -22.2739, 0.22", "-61.0446, -173.422, -22.4677, 0.22", "-61.0523, -173.543, -22.5234, 0.22", "-61.1345, -174.177, -22.8158, 0.96", "-61.2109, -174.721, -23.0652, 1.33", "-61.3208, -175.493, -23.3792, 1.84", "-61.3308, -175.582, -23.4147, 1.84", "-61.3584, -175.994, -23.5858, 1.84", "-61.4327, -177.433, -24.148, 0.22", "-61.4346, -177.474, -24.164, 0.22", "-61.4616, -178.019, -24.3641, 0.66", "-61.4786, -178.382, -24.4817, 0.66", "-61.5146, -179.245, -24.735, 0.15", "-61.5147, -180.045, -24.9122, 0.15", "-61.5098, -180.104, -24.9176, 0.15", "-61.4513, -180.594, -24.9433, 0.74", "-61.4432, -180.647, -24.9443, 0.74", "-61.3903, -180.917, -24.9382, 0.74", "-61.1771, -181.738, -24.872, 0.15", "-61.0332, -182.144, -24.8435, 0.74", "-60.8772, -182.488, -24.8222, 0.74", "-60.5262, -183.081, -24.7912, 0.22", "-60.2818, -183.439, -24.7772, 1.03", "-60.2455, -183.487, -24.7794, 1.03", "-59.9554, -183.842, -24.8289, 1.33", "-59.6545, -184.192, -24.9067, 1.33", "-59.0991, -184.79, -25.083, 0.15", "-58.9092, -184.978, -25.1511, 0.44", "-58.3576, -185.543, -25.3647, 0.22", "-58.325, -185.579, -25.377, 0.22", "-57.9941, -185.982, -25.4972, 0.88", "-57.8801, -186.134, -25.5328, 0.88", "-57.8413, -186.19, -25.5384, 0.88", "-57.3897, -186.944, -25.5271, 0.22", "-57.0939, -187.518, -25.4736, 0.22", "-56.9324, -187.868, -25.4349, 0.96", "-56.7322, -188.306, -25.3771, 0.96", "-56.3556, -189.145, -25.2666, 0.22", "-56.1089, -189.698, -25.1807, 0.22", "-55.8091, -190.381, -25.0572, 0.88", "-55.6159, -190.809, -24.9689, 0.88", "-55.2649, -191.572, -24.7991, 0.22", "-55.2407, -191.625, -24.7859, 0.22", "-55.0251, -192.14, -24.6486, 0.22", "-55.0073, -192.187, -24.6356, 0.22", "-54.8818, -192.602, -24.5243, 1.03", "-54.8085, -192.906, -24.4702, 1.03", "-54.6547, -193.647, -24.3829, 0.29", "-54.5257, -194.247, -24.3461, 0.29", "-54.3853, -194.898, -24.3458, 0.22", "-54.2045, -195.753, -24.3679, 0.22", "-54.0313, -196.631, -24.4229, 1.03", "-53.9932, -196.838, -24.4403, 1.03", "-53.821, -197.863, -24.5463, 0.22", "-53.727, -198.463, -24.6078, 0.81", "-53.6881, -198.81, -24.6384, 1.03", "-53.6568, -199.408, -24.6824, 0.22", "-53.6499, -199.91, -24.7012, 0.52", "-53.6599, -200.366, -24.7183, 0.22", "-53.6806, -200.761, -24.7285, 0.74", "-53.6977, -201.028, -24.7306, 0.74", "-53.7455, -201.868, -24.7369, 0.22", "-53.7686, -202.325, -24.7342, 0.22", "-53.7867, -202.634, -24.7438, 0.66", "-53.7513, -209.833, -26.4051, 0.66" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-48.1232, -84.6394, 12.716, 0.37", "-47.7616, -85.1482, 12.7461, 0.37", "-47.2046, -86.0849, 12.7933, 0.37", "-47.176, -86.1446, 12.7966, 0.37", "-46.8405, -87.1211, 12.8627, 0.37", "-46.8243, -87.1943, 12.8674, 0.37", "-46.7206, -87.9873, 12.92, 0.37", "-46.6778, -88.8566, 12.9389, 1.03", "-46.6949, -89.579, 12.9145, 1.18", "-46.7311, -90.4211, 12.8341, 0.81", "-46.7927, -91.2883, 12.7167, 0.29", "-46.837, -92.0995, 12.5727, 0.74", "-46.8919, -93.2634, 12.3263, 1.18", "-46.9217, -94.3236, 12.083, 0.88", "-46.9393, -95.586, 11.8194, 0.59", "-46.9391, -95.6849, 11.8009, 0.59", "-46.9663, -96.8358, 11.625, 0.66", "-47.0756, -97.7611, 11.5384, 0.44", "-47.3166, -98.7215, 11.5512, 0.37", "-47.6131, -99.4954, 11.638, 0.29", "-47.6801, -99.6271, 11.65, 0.29", "-48.0413, -100.296, 11.696, 0.29", "-48.6322, -101.35, 11.781, 1.55", "-48.8547, -101.778, 11.8352, 1.84", "-48.9837, -102.069, 11.8793, 1.84", "-49.5711, -103.653, 12.1411, 0.37", "-49.8572, -104.516, 12.2795, 0.37", "-50.1217, -105.394, 12.3838, 0.74", "-50.4813, -106.462, 12.4752, 0.74", "-50.8421, -107.361, 12.5315, 0.29", "-51.2678, -108.25, 12.5585, 0.29", "-51.7931, -109.191, 12.565, 1.33", "-52.4357, -110.218, 12.5302, 1.69", "-53.1929, -111.381, 12.4627, 0.66", "-53.6365, -112.056, 12.4119, 0.88", "-54.2495, -113.007, 12.3737, 0.29", "-54.6986, -113.731, 12.3649, 0.96", "-55.2742, -114.675, 12.3875, 1.55", "-55.671, -115.314, 12.4142, 0.74", "-56.0695, -115.942, 12.4251, 0.29", "-56.4836, -116.544, 12.4179, 0.44", "-56.945, -117.155, 12.4001, 0.66", "-57.5873, -117.903, 12.3498, 0.29", "-57.9567, -118.301, 12.2917, 0.22", "-58.3609, -118.723, 12.2167, 0.22", "-58.9145, -119.308, 12.1101, 1.03", "-59.416, -119.839, 12.0221, 1.4", "-59.9779, -120.461, 11.9471, 1.55", "-60.6951, -121.265, 11.8683, 1.11", "-61.4396, -122.077, 11.7949, 0.22", "-61.487, -122.124, 11.7908, 0.22", "-62.1058, -122.65, 11.7479, 0.22", "-62.3438, -122.842, 11.7334, 0.74", "-62.9337, -123.309, 11.6945, 0.88", "-63.3358, -123.659, 11.6611, 0.88", "-63.7871, -124.131, 11.6072, 0.52", "-64.3626, -124.861, 11.5652, 0.22", "-64.9123, -125.679, 11.5482, 1.77", "-65.402, -126.495, 11.5597, 1.77", "-66.0248, -127.652, 11.6129, 0.37", "-66.4933, -128.579, 11.6885, 0.29", "-67.0498, -129.725, 11.8352, 0.22", "-67.3122, -130.257, 11.938, 1.11", "-67.6233, -130.818, 12.0705, 1.4", "-67.86, -131.196, 12.1699, 1.47", "-68.144, -131.586, 12.2702, 1.62", "-68.6476, -132.199, 12.3697, 1.62", "-69.3331, -132.991, 12.4121, 1.25", "-69.9817, -133.739, 12.4302, 0.29", "-70.4698, -134.294, 12.43, 0.22", "-70.8138, -134.684, 12.4115, 0.22", "-71.2524, -135.193, 12.3752, 0.66", "-71.6932, -135.682, 12.3371, 0.96", "-72.0099, -136.049, 12.3128, 0.96", "-72.0524, -136.107, 12.3095, 0.96", "-72.5651, -136.907, 12.2433, 0.52", "-72.9782, -137.636, 12.1847, 0.29", "-73.4433, -138.569, 12.1684, 0.22", "-73.6707, -139.058, 12.165, 0.22", "-74.2006, -140.218, 12.167, 0.96", "-74.5163, -140.915, 12.1774, 1.55", "-74.827, -141.55, 12.2035, 1.25", "-75.3558, -142.603, 12.2752, 0.22", "-75.7372, -143.418, 12.3651, 0.59", "-75.8742, -143.7, 12.4129, 0.88", "-75.9436, -143.84, 12.4461, 0.88", "-76.322, -144.751, 12.7209, 0.22", "-76.5929, -145.546, 12.9696, 0.22", "-76.7706, -146.214, 13.1724, 0.22", "-76.8607, -146.622, 13.3199, 0.66", "-76.9679, -147.116, 13.5332, 0.74", "-77.1855, -148.016, 13.9619, 0.22", "-77.4108, -148.842, 14.384, 1.25", "-77.6229, -149.367, 14.667, 1.77", "-77.9165, -149.926, 14.9636, 1.77", "-78.6323, -151.109, 15.5592, 0.29", "-78.8537, -151.454, 15.7197, 0.59", "-79.0167, -151.685, 15.8117, 0.59", "-79.5011, -152.389, 16.0891, 0.22", "-79.9738, -153.103, 16.3463, 0.59", "-80.1896, -153.49, 16.494, 0.81", "-80.4965, -154.212, 16.786, 0.22", "-80.5162, -154.274, 16.815, 0.22", "-80.7061, -155.106, 17.25, 1.33", "-80.7862, -155.549, 17.5043, 1.62", "-81.0295, -156.82, 18.2684, 0.22", "-81.1638, -157.377, 18.5825, 0.22", "-81.183, -157.447, 18.6155, 0.22", "-81.2712, -157.781, 18.7393, 0.88", "-81.4795, -158.623, 18.9498, 1.03", "-81.6387, -159.344, 19.073, 1.03", "-81.7522, -159.908, 19.1239, 0.81", "-81.8971, -160.792, 19.2018, 0.22", "-81.9787, -161.442, 19.2448, 0.22", "-82.0481, -162.057, 19.2778, 1.03", "-82.1339, -162.887, 19.3323, 1.25", "-82.2442, -163.714, 19.3994, 1.11", "-82.4264, -164.555, 19.5243, 0.74", "-82.6455, -165.273, 19.6819, 0.37", "-82.9952, -166.175, 19.9306, 0.22", "-83.2638, -166.766, 20.1278, 0.88", "-83.4476, -167.138, 20.2726, 0.88", "-83.9084, -168.184, 20.759, 0.15", "-84.1006, -168.685, 21.0224, 0.15", "-84.121, -168.744, 21.0554, 0.15", "-84.2195, -169.057, 21.2233, 0.96", "-84.3696, -169.523, 21.4996, 1.11", "-84.6994, -170.642, 22.1788, 0.22", "-84.912, -171.512, 22.6948, 1.25", "-85.0468, -172.059, 23.0497, 1.47", "-85.3724, -173.259, 23.8611, 0.44", "-85.6766, -174.164, 24.4924, 0.44", "-85.9391, -174.794, 24.952, 0.22", "-86.1908, -175.32, 25.3478, 0.22", "-86.4671, -175.918, 25.7984, 0.44", "-86.7346, -176.58, 26.2901, 0.44", "-86.9964, -177.293, 26.7742, 0.44", "-87.2502, -178.036, 27.2195, 1.25", "-87.2673, -178.094, 27.2535, 1.25", "-87.3372, -178.441, 27.4336, 1.25", "-87.4093, -179.751, 27.9985, 0.22", "-87.3726, -180.192, 28.1662, 0.96", "-87.2936, -180.647, 28.3109, 0.96", "-87.1239, -181.597, 28.5551, 0.22", "-86.9615, -182.512, 28.7682, 1.11", "-86.8591, -183.069, 28.8837, 1.4", "-86.7386, -183.701, 28.9959, 1.4", "-86.57, -184.48, 29.1435, 0.29", "-86.3584, -185.327, 29.3664, 0.22", "-86.1601, -186.089, 29.621, 0.22", "-86.1431, -186.157, 29.6489, 0.22", "-86.0752, -186.532, 29.8554, 0.88", "-86.0207, -186.963, 30.1425, 0.88", "-85.9023, -188.087, 30.9567, 0.22", "-85.8627, -188.501, 31.2549, 0.59", "-85.8697, -188.735, 31.4143, 0.74", "-85.9823, -189.697, 32.0191, 0.22", "-86.0656, -190.136, 32.2632, 0.22", "-86.2137, -190.741, 32.5544, 1.03", "-86.3157, -191.171, 32.7309, 1.18", "-86.5391, -192.306, 33.1719, 0.22", "-86.6022, -192.679, 33.3316, 0.22", "-86.6792, -193.106, 33.5357, 0.88", "-86.7677, -193.571, 33.8582, 1.11", "-86.9135, -194.359, 34.53, 0.37", "-87.0049, -194.919, 35.0633, 0.22", "-87.1568, -195.986, 36.1355, 0.88", "-87.2092, -196.504, 36.7208, 1.18", "-87.3233, -197.853, 38.3919, 0.22", "-87.326, -197.9, 38.4538, 0.22", "-87.3309, -198.184, 38.8455, 0.59", "-87.3127, -198.627, 39.5463, 1.11", "-87.1704, -199.945, 41.6531, 0.22", "-87.1648, -199.978, 41.7064, 0.22", "-87.1435, -200.102, 41.9039, 0.59", "-87.1163, -200.242, 42.1466, 0.59", "-86.852, -201.191, 44.1668, 0.29" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "7.23119, 59.0571, -12.2026, 0.37", "7.49333, 60.5052, -11.9555, 0.37", "7.9241, 61.978, -11.6855, 0.66", "8.14714, 62.5467, -11.5655, 0.81", "8.20121, 62.6851, -11.5418, 0.81", "8.70026, 63.9743, -11.3513, 0.22", "9.20149, 65.263, -11.1733, 0.96", "9.53454, 65.9917, -11.0825, 0.96", "10.1682, 67.3298, -10.9449, 0.22", "10.5573, 68.2909, -10.8677, 0.22", "10.5829, 68.3784, -10.8641, 0.22", "10.8341, 69.8606, -10.926, 0.52", "10.8858, 70.4066, -10.9772, 0.52", "10.9197, 71.1041, -11.0782, 0.52", "10.9813, 72.2162, -11.32, 0.66", "11.0478, 72.9995, -11.4975, 0.66", "11.1666, 74.2138, -11.7969, 0.96", "11.2586, 75.0909, -12.0334, 0.66", "11.4194, 76.3485, -12.3602, 0.66", "11.6395, 77.6895, -12.6718, 0.29", "11.9066, 79.097, -12.9387, 1.03", "12.0025, 79.5647, -12.9791, 1.03", "12.1237, 80.1833, -12.9676, 1.03", "12.2342, 80.8345, -12.8779, 0.37", "12.3566, 81.5686, -12.6988, 0.37", "12.5196, 82.5807, -12.3705, 0.37", "12.8307, 84.3547, -11.6429, 0.22", "13.0635, 85.5, -11.1203, 1.33", "13.3326, 86.7915, -10.5281, 1.55", "13.5263, 87.7541, -10.0953, 1.55", "13.6895, 88.7777, -9.67876, 1.47", "13.962, 90.6644, -9.05314, 0.81", "14.2268, 92.5191, -8.57241, 0.22", "14.5192, 94.5163, -8.17605, 0.37", "14.6295, 95.2008, -8.08211, 0.37", "14.9046, 96.9462, -7.86309, 1.11", "15.2257, 98.866, -7.65195, 0.22", "15.4119, 99.8264, -7.54325, 0.59", "15.5998, 100.561, -7.39619, 0.59", "15.8013, 101.106, -7.20739, 0.59", "16.3679, 102.382, -6.62183, 0.29", "16.6505, 102.947, -6.27184, 0.96", "17.1621, 103.942, -5.5413, 1.25", "17.4718, 104.53, -5.10972, 0.52", "17.9623, 105.464, -4.45631, 0.22", "18.3212, 106.196, -3.99552, 0.59", "18.7729, 107.113, -3.50441, 0.37", "19.4732, 108.579, -2.82991, 0.29", "19.9644, 109.634, -2.42357, 0.66", "20.4821, 110.678, -2.13719, 0.74", "20.8711, 111.391, -2.01762, 1.47", "21.4177, 112.32, -1.95111, 1.33", "21.982, 113.231, -1.98937, 1.18", "22.0329, 113.307, -1.9976, 1.18", "23.3422, 114.939, -2.17991, 0.29", "23.7886, 115.397, -2.20632, 0.44", "24.2026, 115.782, -2.16792, 0.44", "24.2646, 115.842, -2.15173, 0.44", "24.9861, 116.623, -1.80294, 0.44", "25.4451, 117.206, -1.47185, 0.59", "25.8028, 117.727, -1.11824, 0.37", "26.2809, 118.407, -0.656559, 0.22", "26.7323, 119.055, -0.238721, 0.22", "27.3951, 120.088, 0.36356, 0.96", "27.8605, 120.934, 0.779692, 1.11", "28.2987, 121.85, 1.15198, 0.88", "28.8321, 123.102, 1.56417, 0.22", "29.3423, 124.424, 1.94668, 0.22", "29.6241, 125.239, 2.20013, 0.22", "29.9085, 126.181, 2.49875, 0.22", "30.1928, 127.304, 2.87091, 1.11", "30.4167, 128.366, 3.23083, 1.62", "30.6951, 129.885, 3.75556, 0.29", "30.8852, 130.815, 4.1061, 0.37", "31.1363, 131.754, 4.49691, 0.37", "31.4441, 132.803, 4.96063, 0.29", "31.6152, 133.377, 5.20297, 0.88", "31.8292, 134.132, 5.51044, 1.11", "31.9887, 134.725, 5.73174, 1.11", "32.2318, 135.694, 6.0752, 0.88", "32.6487, 137.463, 6.72509, 0.22", "32.9522, 138.751, 7.22184, 0.22", "33.2386, 139.958, 7.69994, 0.88", "33.3877, 140.595, 7.95651, 1.11", "33.4098, 140.696, 7.99526, 1.11", "33.5356, 141.305, 8.20872, 1.11", "33.5572, 141.404, 8.22891, 1.11", "33.7113, 142.226, 8.29527, 1.03", "33.7326, 142.352, 8.30592, 1.03", "33.8581, 143.311, 8.46728, 0.88", "33.9711, 144.236, 8.62503, 0.29", "34.1538, 145.958, 8.92158, 0.22", "34.275, 147.227, 9.14805, 1.25", "34.4158, 148.927, 9.47742, 1.55", "34.5248, 150.286, 9.7782, 1.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "7.23119, 59.0571, -12.2026, 0.29", "6.97257, 60.2153, -13.8912, 0.29", "6.78293, 61.0183, -15.0299, 1.03", "6.49547, 62.2265, -16.65, 0.22", "6.36657, 62.7104, -17.2634, 0.66", "6.26327, 63.0736, -17.705, 0.81", "5.93403, 64.0827, -18.859, 0.37", "5.82142, 64.3908, -19.1476, 0.74", "5.65913, 64.744, -19.4438, 0.96", "5.39561, 65.2328, -19.8255, 0.44", "4.60891, 66.6176, -20.8823, 1.2", "4.12818, 67.4703, -21.4819, 0.88", "3.65825, 68.3033, -21.9959, 1.25", "3.32969, 68.9124, -22.3491, 1.25", "2.73675, 70.0405, -22.9579, 0.59", "2.29717, 70.9621, -23.4271, 0.22", "2.11099, 71.3674, -23.6081, 0.22", "1.80289, 72.0729, -23.9259, 0.96", "1.57038, 72.5886, -24.1579, 1.47", "1.36344, 73.0258, -24.3468, 1.62", "0.87409, 73.8751, -24.7047, 1.03", "0.402941, 74.4949, -25.0282, 0.29", "-0.0186824, 74.9491, -25.2929, 0.22", "-0.518063, 75.4022, -25.5833, 0.22", "-0.58129, 75.4548, -25.6175, 0.22", "-1.24953, 75.9733, -25.9469, 0.22", "-1.77293, 76.3589, -26.1786, 0.22", "-2.49433, 76.8556, -26.5141, 0.22", "-3.37936, 77.4334, -26.948, 1.11", "-3.68492, 77.6275, -27.1023, 1.4", "-4.42672, 78.0908, -27.4842, 0.74", "-5.05744, 78.472, -27.8404, 0.22", "-5.65744, 78.7916, -28.2103, 0.22", "-6.00548, 78.9441, -28.4369, 0.22", "-6.54665, 79.1595, -28.8736, 0.74", "-6.86509, 79.2808, -29.1645, 0.88", "-7.8032, 79.6447, -30.1523, 0.22", "-8.34664, 79.8586, -30.7612, 0.59", "-8.66205, 79.9983, -31.2537, 1.03", "-9.54455, 80.3818, -32.9084, 0.22", "-9.7561, 80.4618, -33.3547, 0.22", "-10.1384, 80.5996, -34.2247, 0.81", "-10.4599, 80.7088, -34.9938, 1.47", "-11.761, 81.1384, -38.1756, 0.29", "-11.9208, 81.1878, -38.5642, 0.29", "-12.2411, 81.278, -39.2698, 0.22", "-12.8822, 81.4753, -40.567, 0.96", "-13.103, 81.5497, -40.9535, 1.33", "-13.7148, 81.7906, -41.8279, 0.22", "-13.7727, 81.8146, -41.8846, 0.22", "-14.3343, 82.0679, -42.4477, 0.22", "-15.0287, 82.4038, -43.1273, 0.52", "-15.2684, 82.5259, -43.3717, 0.52", "-15.9244, 82.8568, -44.1116, 0.15", "-16.1822, 82.9745, -44.411, 0.15", "-16.872, 83.2395, -45.2063, 0.88", "-17.3817, 83.4069, -45.8039, 1.11", "-18.4495, 83.7303, -47.0369, 0.22", "-19.1598, 83.9429, -47.9704, 1.11", "-19.4706, 84.0389, -48.4082, 1.33", "-20.2998, 84.3206, -49.6397, 0.22", "-20.7884, 84.5043, -50.3786, 1.03", "-21.0501, 84.6222, -50.7817, 1.03", "-22.2125, 85.3219, -52.6418, 0.22", "-22.5305, 85.5878, -53.2046, 0.22", "-22.7911, 85.8627, -53.7054, 0.74", "-23.0119, 86.149, -54.1413, 1.18", "-23.3433, 86.5791, -54.6904, 0.96", "-23.9515, 87.3434, -55.4865, 0.22", "-23.9907, 87.389, -55.5219, 0.22", "-24.5269, 88.0041, -55.9779, 0.22", "-25.0585, 88.5827, -56.3947, 0.88", "-25.332, 88.8642, -56.599, 1.18", "-25.6222, 89.1683, -56.8451, 1.33", "-26.5179, 90.1443, -57.6902, 0.22", "-26.9178, 90.6188, -58.1685, 0.96", "-27.0976, 90.8812, -58.4765, 1.25", "-27.1211, 90.9238, -58.531, 1.25", "-27.7015, 92.1826, -60.1532, 0.22", "-27.9819, 92.9081, -61.1007, 1.55", "-28.1373, 93.4574, -61.7853, 1.33", "-28.3908, 94.585, -63.0903, 0.37", "-28.5399, 95.4008, -63.9197, 1.11", "-28.6187, 95.9112, -64.3607, 1.55", "-28.6263, 95.9803, -64.4067, 1.55", "-28.7005, 97.0991, -65.0092, 0.22", "-28.7764, 98.1591, -65.4793, 0.52", "-28.8544, 98.8773, -65.7767, 0.22", "-29.0116, 99.8593, -66.1879, 1.47", "-29.1595, 100.57, -66.5098, 1.47", "-29.6591, 102.517, -67.4137, 0.22", "-29.8578, 103.162, -67.7209, 0.88", "-30.4459, 104.847, -68.5216, 0.22", "-30.9441, 106.167, -69.1451, 1.4", "-31.3176, 107.083, -69.5612, 1.55", "-31.6996, 108.046, -70.052, 0.22", "-31.8102, 108.324, -70.2032, 0.22", "-32.0385, 108.932, -70.5609, 0.22", "-32.4899, 110.266, -71.4519, 1.11", "-32.6351, 110.732, -71.8078, 1.25", "-33.1308, 112.387, -73.1311, 0.22", "-33.3992, 113.309, -73.9064, 0.96", "-33.5877, 113.98, -74.438, 0.96", "-33.9509, 115.219, -75.317, 0.22", "-33.9678, 115.276, -75.3528, 0.59", "-34.1806, 116.014, -75.7312, 0.59", "-34.3381, 116.576, -75.934, 0.59", "-34.6271, 117.857, -76.3227, 0.22", "-34.9005, 119.131, -76.6506, 0.22", "-35.1767, 120.212, -76.8931, 0.96", "-35.3276, 120.699, -77.0229, 1.4", "-35.661, 121.665, -77.4162, 0.88", "-35.9505, 122.436, -77.8256, 0.22", "-36.1251, 122.883, -78.1141, 0.88", "-36.4256, 123.596, -78.6378, 1.11", "-36.7356, 124.251, -79.1587, 1.11", "-37.4896, 125.872, -80.5848, 0.22", "-37.5121, 125.921, -80.6291, 0.22", "-37.7263, 126.481, -81.1652, 0.22", "-37.8584, 126.978, -81.6429, 0.22", "-37.8933, 127.157, -81.8021, 0.22", "-38.0074, 127.867, -82.3973, 1.03", "-38.2257, 128.861, -83.1983, 1.25", "-38.5149, 130.078, -84.2123, 0.22", "-38.6798, 130.804, -84.8478, 0.22", "-38.8532, 131.604, -85.5313, 1.11", "-39.0039, 132.215, -86.0381, 1.03", "-39.346, 133.577, -87.1274, 0.22", "-39.4285, 133.902, -87.38, 0.81", "-39.7569, 135.044, -88.1673, 0.22", "-39.9855, 135.816, -88.6552, 1.03", "-40.1461, 136.404, -88.9936, 1.4", "-40.7955, 138.997, -90.2649, 0.22", "-40.8288, 139.157, -90.3283, 0.22", "-41.0904, 140.462, -90.7645, 0.22", "-41.2944, 141.559, -91.0426, 0.81", "-41.4261, 142.431, -91.2095, 0.96", "-41.5355, 143.325, -91.3164, 0.37", "-41.7168, 144.882, -91.3587, 0.22", "-41.7234, 144.948, -91.3594, 0.22", "-41.8321, 145.986, -91.3293, 0.22", "-41.9496, 146.859, -91.2855, 0.96", "-42.0393, 147.374, -91.2543, 1.11", "-42.1957, 148.111, -91.2047, 0.81", "-42.5061, 149.413, -91.1302, 0.22", "-42.8082, 150.616, -91.0899, 0.88", "-42.9433, 151.118, -91.0846, 1.11", "-43.092, 151.719, -91.0834, 1.11", "-43.6996, 154.464, -91.101, 0.22", "-44.0506, 156.348, -91.1546, 1.0", "-44.2248, 157.466, -91.2135, 0.22", "-44.365, 158.568, -91.2976, 0.96", "-44.4978, 159.861, -91.4011, 0.22", "-44.5791, 160.994, -91.4982, 0.52", "-44.567, 162.055, -91.6611, 0.22", "-44.5579, 162.14, -91.6827, 0.22", "-44.4662, 162.722, -91.8823, 0.88", "-44.3655, 163.364, -92.1696, 1.11", "-44.2509, 163.899, -92.5622, 1.25", "-43.835, 165.207, -93.8419, 0.37", "-43.5045, 166.12, -94.8131, 0.44", "-43.3486, 166.457, -95.2103, 0.66", "-43.1088, 166.898, -95.7677, 0.66", "-41.8084, 168.887, -98.48, 1.11", "-40.7571, 170.25, -100.387, 0.22", "-40.4762, 170.549, -100.832, 0.81", "-39.0566, 171.854, -102.792, 0.22", "-38.8831, 171.997, -103.005, 0.74", "-37.4392, 173.096, -104.597, 0.22", "-36.638, 173.677, -105.402, 1.33", "-34.0657, 175.499, -107.912, 0.22", "-33.381, 175.984, -108.588, 0.22", "-32.3205, 176.748, -109.612, 0.22", "-32.2802, 176.777, -109.651, 0.22", "-31.618, 177.224, -110.265, 0.96", "-31.2528, 177.472, -110.605, 0.96", "-29.4201, 178.724, -112.163, 0.22", "-29.1675, 178.881, -112.376, 0.52", "-28.7547, 179.114, -112.689, 0.52", "-27.5029, 179.737, -113.514, 0.52", "-26.5081, 180.154, -114.03, 0.22", "-26.4137, 180.188, -114.067, 0.22", "-25.3647, 180.525, -114.318, 1.03", "-25.2868, 180.542, -114.336, 1.03", "-24.2141, 180.703, -114.542, 0.22", "-23.4638, 180.8, -114.661, 1.11", "-22.8306, 180.91, -114.793, 1.11", "-22.7687, 180.927, -114.821, 1.11", "-21.1665, 181.503, -116.041, 0.22", "-20.6024, 181.739, -116.617, 0.96", "-19.6715, 182.224, -118.074, 0.22", "-19.2293, 182.526, -119.033, 1.18", "-18.144, 183.47, -122.05, 0.96", "-17.7001, 183.975, -123.62, 0.29", "-17.6096, 184.145, -124.097, 0.66", "-17.2291, 185.25, -126.904, 0.22", "-17.1405, 185.665, -127.9, 1.11", "-17.1355, 185.704, -127.974, 1.11", "-17.1269, 186.077, -128.447, 1.47", "-17.1633, 187.774, -129.847, 0.22", "-17.2779, 188.929, -130.468, 0.22", "-17.2902, 188.988, -130.482, 0.22", "-17.6477, 190.015, -130.569, 1.25", "-18.0702, 190.829, -130.545, 1.25", "-19.0986, 192.292, -130.285, 0.22", "-19.5986, 192.88, -130.091, 0.44", "-19.7695, 193.061, -130.019, 0.44", "-20.6439, 193.959, -129.633, 0.22", "-21.3462, 194.638, -129.306, 0.22", "-22.667, 195.945, -128.812, 0.44", "-23.6325, 204.14, -135.059, 0.44" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-30.4687, 25.1312, 20.8053, 0.44", "-33.2431, 24.5706, 20.2507, 0.44", "-34.0644, 24.3457, 20.1659, 0.52", "-34.9424, 24.1051, 20.1335, 0.52", "-35.5243, 23.9746, 20.1324, 0.66", "-36.2637, 23.8744, 20.1506, 0.37", "-36.9521, 23.8279, 20.1805, 0.29", "-37.3981, 23.8426, 20.3149, 0.29", "-37.9792, 23.9677, 20.4471, 0.66", "-38.6159, 24.1824, 20.5408, 0.44", "-39.4289, 24.52, 20.6124, 0.44", "-39.5829, 24.5719, 20.5986, 0.44", "-40.1807, 24.6131, 20.3714, 0.44", "-40.9482, 24.5393, 19.7242, 0.37", "-41.3929, 24.4807, 19.1777, 0.37", "-41.4332, 24.4752, 19.1251, 0.37", "-42.59, 24.3075, 17.6863, 0.96", "-43.4987, 24.1582, 16.543, 1.18", "-44.9894, 23.9647, 14.8214, 0.37", "-45.7349, 23.9773, 14.1619, 0.37", "-46.7698, 24.1559, 13.4156, 0.37", "-47.6785, 24.4063, 12.7412, 0.37", "-48.2225, 24.6318, 12.3252, 0.37", "-49.5211, 25.3223, 11.3065, 0.88", "-51.2971, 26.4164, 9.96439, 1.25", "-53.0452, 27.6638, 8.53249, 1.03", "-54.7064, 29.0803, 7.00601, 0.44", "-55.4449, 29.7641, 6.27384, 0.44", "-56.0982, 30.4326, 5.58618, 0.44", "-56.5493, 30.9833, 5.02934, 0.29", "-57.0541, 31.7191, 4.34008, 1.11", "-57.3387, 32.1871, 3.94625, 1.47", "-58.4093, 33.9329, 2.58762, 0.29", "-58.9767, 34.7679, 1.845, 0.59", "-59.336, 35.3054, 1.30799, 1.11", "-59.6444, 35.7813, 0.810154, 0.81", "-60.3776, 36.9991, -0.431332, 0.29", "-60.7219, 37.5924, -0.987224, 0.52", "-61.1457, 38.3806, -1.57288, 0.29", "-61.2288, 38.5088, -1.65817, 0.29", "-61.5373, 38.9959, -1.93555, 0.29", "-61.8546, 39.5128, -2.24499, 0.29", "-62.3385, 40.2873, -2.80222, 0.96", "-62.5145, 40.5989, -3.06469, 1.33", "-62.7273, 40.9836, -3.41202, 1.33", "-63.1891, 41.7966, -4.17274, 0.74", "-63.7944, 42.8203, -5.12974, 0.88", "-64.5697, 43.9603, -6.15209, 1.25", "-64.8572, 44.3281, -6.46004, 1.4", "-65.6837, 45.2622, -7.16924, 0.52", "-66.0569, 45.6651, -7.42908, 0.22", "-66.6044, 46.2585, -7.73136, 0.22", "-67.2898, 47.0577, -8.03683, 0.9", "-67.7405, 47.6223, -8.24264, 0.81", "-68.7533, 48.9639, -8.8083, 0.22", "-69.5276, 50.09, -9.31281, 1.55", "-69.678, 50.3246, -9.43923, 1.77", "-70.1281, 51.0959, -9.90469, 0.81", "-70.6537, 52.116, -10.5872, 0.22", "-70.9223, 52.6996, -10.98, 0.52", "-71.2028, 53.3719, -11.4197, 0.22", "-71.7497, 54.7445, -12.3187, 1.25", "-71.8521, 55.0043, -12.4848, 1.47", "-72.4222, 56.4849, -13.3919, 0.22", "-72.6733, 57.1508, -13.7574, 0.22", "-72.7047, 57.2287, -13.7971, 0.22", "-72.9108, 57.7343, -14.0446, 0.22", "-73.2154, 58.5016, -14.3803, 1.11", "-73.2437, 58.5667, -14.4096, 1.11", "-73.4705, 59.0525, -14.6148, 1.55", "-73.8196, 59.8024, -14.977, 0.66", "-73.8949, 59.9745, -15.0629, 0.66", "-74.2875, 60.9439, -15.7172, 0.22", "-74.3093, 61.0007, -15.7578, 0.22", "-74.5195, 61.5125, -16.1061, 0.22", "-74.834, 62.2314, -16.5727, 0.96", "-74.9667, 62.5052, -16.7418, 1.25", "-76.1165, 64.5746, -17.9352, 0.29", "-76.5503, 65.2325, -18.3108, 0.29", "-77.2792, 66.1262, -18.8464, 0.22", "-77.6121, 66.4497, -19.0442, 0.22", "-78.2926, 66.9544, -19.3449, 0.88", "-78.7685, 67.2419, -19.5053, 1.11", "-79.599, 67.6577, -19.7425, 1.11", "-80.5485, 68.1478, -20.0829, 0.22", "-81.0175, 68.4037, -20.2777, 0.22", "-82.1644, 69.0935, -20.7953, 1.77", "-82.5462, 69.3641, -20.9687, 2.14", "-84.0597, 70.611, -21.672, 0.29", "-84.6385, 71.1867, -21.9147, 0.52", "-84.7369, 71.3083, -21.9527, 0.59", "-84.8289, 71.4431, -21.9839, 0.59", "-85.2809, 72.1741, -22.1096, 0.29", "-85.322, 72.2302, -22.1152, 0.29", "-85.9062, 72.8872, -22.084, 1.18", "-86.2627, 73.2091, -22.0743, 1.33", "-86.7032, 73.6085, -22.1079, 0.74", "-87.4988, 74.3146, -22.2352, 0.29", "-88.0737, 74.8204, -22.3861, 0.74", "-88.1323, 74.8767, -22.4042, 0.74", "-88.4485, 75.219, -22.5173, 0.59", "-89.1079, 76.0641, -22.7747, 0.22", "-89.1508, 76.1272, -22.793, 0.22", "-89.341, 76.4236, -22.8306, 0.22", "-89.6423, 76.8794, -22.862, 0.66", "-90.0111, 77.3893, -22.8561, 0.96", "-90.0601, 77.4506, -22.8522, 0.96", "-90.7492, 78.2975, -22.7609, 0.22", "-91.5206, 79.3119, -22.6665, 1.47", "-91.7617, 79.6434, -22.6381, 1.77", "-92.2131, 80.2978, -22.5869, 0.74", "-92.5722, 80.8789, -22.5408, 0.29", "-93.0749, 81.7858, -22.4566, 0.22", "-93.3817, 82.3789, -22.3879, 0.52", "-93.5793, 82.7297, -22.3498, 0.52", "-93.6326, 82.8152, -22.3268, 0.52", "-94.1701, 83.5557, -22.0086, 0.22", "-94.7793, 84.263, -21.5419, 1.47", "-95.3202, 84.7818, -21.1013, 1.11", "-95.9258, 85.3049, -20.5896, 0.88", "-97.0724, 86.2459, -19.5969, 0.22", "-97.5625, 86.6222, -19.1642, 0.22", "-98.4833, 87.2494, -18.3151, 1.33", "-99.0397, 87.6064, -17.7587, 1.69", "-99.0803, 87.6336, -17.7141, 1.69" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-30.4687, 25.1312, 20.8053, 0.44", "-31.0201, 25.341, 21.1505, 0.44", "-31.5856, 25.5217, 21.4821, 0.29", "-31.645, 25.5379, 21.5244, 0.29", "-32.1354, 25.6517, 21.8896, 0.29", "-32.4733, 25.7141, 22.1656, 0.29", "-32.9658, 25.7853, 22.5824, 0.81", "-33.2894, 25.8214, 22.8865, 0.66", "-33.9298, 25.8172, 23.5065, 0.44", "-34.2256, 25.7827, 23.7721, 0.29", "-34.7366, 25.6624, 24.1936, 0.59", "-34.9, 25.6115, 24.3247, 0.59", "-35.4329, 25.4189, 24.6865, 0.29", "-35.9725, 25.2194, 24.9643, 0.29", "-36.6081, 24.9902, 25.1878, 0.66", "-37.0505, 24.8415, 25.3066, 0.96", "-37.1172, 24.8216, 25.3184, 0.96", "-38.0225, 24.5968, 25.4385, 0.37", "-38.6394, 24.4839, 25.5122, 0.37", "-38.9295, 24.4549, 25.5559, 0.66", "-39.0573, 24.4533, 25.5923, 0.66", "-39.2867, 24.4587, 25.6943, 0.66", "-39.6214, 24.4632, 25.8932, 0.66", "-40.1252, 24.4564, 26.2689, 0.29", "-40.1787, 24.4528, 26.3089, 0.29", "-40.7161, 24.4008, 26.6833, 0.29", "-41.1709, 24.3397, 26.9698, 0.29", "-41.6486, 24.2559, 27.2431, 0.81", "-42.179, 24.1456, 27.5103, 0.88", "-42.5341, 24.0615, 27.6613, 0.66", "-43.0654, 23.9195, 27.8913, 0.29", "-43.5716, 23.7835, 28.1071, 0.66", "-43.9313, 23.6957, 28.2765, 0.88", "-44.4709, 23.5853, 28.5668, 1.03", "-45.1186, 23.4973, 28.9725, 1.03", "-45.955, 23.4541, 29.5488, 0.37", "-46.2761, 23.4593, 29.7848, 0.37", "-46.7023, 23.4959, 30.1131, 0.37", "-47.2011, 23.5591, 30.5064, 0.29", "-47.7332, 23.6344, 30.9291, 0.29", "-48.2509, 23.6933, 31.2787, 0.29", "-48.7589, 23.702, 31.5222, 0.88", "-48.8292, 23.6937, 31.5466, 0.88", "-49.1592, 23.6195, 31.6266, 1.11", "-49.6227, 23.4857, 31.7104, 1.11", "-50.521, 23.2008, 31.8312, 0.59", "-51.1007, 23.0166, 31.9067, 0.29", "-51.58, 22.877, 31.9741, 0.29", "-52.1979, 22.7183, 32.0603, 0.59", "-52.6565, 22.6236, 32.1306, 0.96", "-53.0882, 22.5456, 32.2087, 0.96", "-53.4483, 22.4868, 32.2904, 0.81", "-53.9461, 22.4005, 32.3937, 0.59", "-54.348, 22.321, 32.4624, 0.29", "-55.1564, 22.1426, 32.5879, 0.22", "-55.8463, 21.9771, 32.6951, 0.74", "-56.349, 21.8569, 32.764, 1.33", "-56.9308, 21.7286, 32.832, 1.33", "-57.7109, 21.5828, 32.9009, 0.59", "-58.4518, 21.4791, 32.9608, 0.29", "-58.8956, 21.4487, 32.9882, 0.29", "-59.446, 21.4601, 33.0204, 0.59", "-60.027, 21.5157, 33.0645, 0.74", "-60.6368, 21.6176, 33.1389, 0.96", "-61.4674, 21.7901, 33.279, 1.25", "-62.0382, 21.8905, 33.3952, 0.37", "-62.3737, 21.9244, 33.4811, 0.44", "-63.0153, 21.9332, 33.684, 0.44", "-63.5291, 21.8881, 33.8811, 0.44", "-63.999, 21.7903, 34.0899, 1.25", "-64.6612, 21.5731, 34.4176, 1.25", "-65.3237, 21.2949, 34.7677, 1.33", "-65.8782, 21.0302, 35.0701, 0.74", "-66.6861, 20.6253, 35.5158, 0.29", "-67.6184, 20.1703, 36.0225, 0.96", "-68.1608, 19.942, 36.3013, 0.29", "-68.5397, 19.8233, 36.4809, 0.29", "-68.9022, 19.7465, 36.6287, 1.03", "-69.4993, 19.6898, 36.8265, 1.4", "-70.0056, 19.7009, 36.9535, 1.47", "-70.7982, 19.7878, 37.1017, 0.44", "-71.3605, 19.8539, 37.1902, 0.44", "-72.115, 19.9119, 37.2971, 0.74", "-72.5825, 19.9184, 37.366, 0.74", "-73.2553, 19.8816, 37.4739, 0.59", "-73.9445, 19.7945, 37.6003, 0.52", "-74.7761, 19.6301, 37.7941, 0.37", "-75.5117, 19.4322, 37.9877, 0.74", "-76.108, 19.242, 38.1649, 1.18", "-76.5721, 19.0773, 38.3155, 1.03", "-77.0109, 18.9112, 38.4713, 0.44", "-77.6762, 18.6417, 38.7644, 0.29", "-78.3136, 18.3925, 39.0776, 0.88", "-78.7385, 18.2379, 39.3039, 1.18", "-79.3595, 18.0181, 39.639, 0.74", "-79.4239, 17.9962, 39.6796, 0.74", "-80.0999, 17.7725, 40.172, 0.44", "-80.7028, 17.5974, 40.6483, 0.37", "-81.0597, 17.5242, 40.9523, 1.11", "-81.5084, 17.4709, 41.3571, 1.47", "-82.3472, 17.4696, 42.1272, 0.96", "-82.9379, 17.52, 42.6388, 0.37", "-83.3104, 17.5753, 42.9513, 0.37", "-83.8205, 17.6553, 43.3812, 0.37", "-84.3324, 17.7349, 43.7981, 0.29", "-84.8779, 17.8022, 44.198, 0.29", "-85.6129, 17.8485, 44.6478, 0.74", "-86.1482, 17.8421, 44.9476, 0.29", "-86.7516, 17.7814, 45.2658, 0.22", "-87.2237, 17.7045, 45.4981, 0.88", "-88.0195, 17.5542, 45.8629, 0.96", "-88.6374, 17.4519, 46.1338, 0.96", "-89.2591, 17.4073, 46.3882, 1.18", "-89.8153, 17.4135, 46.6225, 0.88", "-90.3972, 17.4594, 46.8833, 0.29", "-91.1507, 17.5474, 47.2383, 0.29", "-91.737, 17.6378, 47.5357, 0.29", "-92.3235, 17.7354, 47.8498, 0.29", "-93.2565, 17.879, 48.3588, 0.22", "-93.5827, 17.9068, 48.5364, 1.18", "-93.649, 17.9073, 48.5711, 1.18", "-94.1245, 17.8781, 48.8123, 1.18", "-94.6, 17.8235, 49.0584, 1.18", "-95.4149, 17.7044, 49.4675, 1.18", "-96.0171, 17.6216, 49.775, 1.11", "-96.5877, 17.5529, 50.1336, 1.33", "-96.6356, 17.5486, 50.1672, 1.33", "-97.319, 17.5113, 50.6922, 0.59", "-97.823, 17.5001, 51.1211, 0.52", "-98.6275, 17.4915, 51.8441, 1.18", "-99.4146, 17.4837, 52.5591, 0.22", "-99.8947, 17.4647, 52.9715, 0.66", "-100.161, 17.4501, 53.1842, 0.66", "-100.808, 17.409, 53.6503, 0.22", "-101.448, 17.3744, 54.0654, 0.59", "-101.697, 17.3602, 54.2044, 0.59", "-102.503, 17.2876, 54.5978, 0.22", "-102.558, 17.2807, 54.6253, 0.22", "-102.78, 17.2469, 54.7329, 0.22", "-103.218, 17.1467, 54.9339, 0.22", "-103.799, 16.9884, 55.2128, 0.22", "-104.228, 16.8436, 55.4238, 1.03", "-104.567, 16.7063, 55.6084, 1.47", "-104.917, 16.5559, 55.8009, 1.47", "-105.806, 16.1741, 56.3169, 0.22", "-105.857, 16.1542, 56.3465, 0.22", "-106.315, 15.9938, 56.6105, 0.22", "-107.105, 15.7546, 57.0703, 0.59", "-107.655, 15.6112, 57.3927, 1.03", "-108.419, 15.4433, 57.8369, 1.4", "-108.983, 15.3392, 58.1677, 1.69", "-109.541, 15.2345, 58.4938, 1.11", "-110.252, 15.0982, 58.8993, 0.52", "-110.36, 15.0779, 58.9622, 0.52", "-110.921, 14.9886, 59.306, 0.44", "-111.721, 14.8933, 59.8647, 0.37", "-111.774, 14.8899, 59.9057, 0.37", "-112.195, 14.8835, 60.245, 0.66", "-112.998, 14.8909, 60.9002, 0.66", "-113.653, 14.892, 61.4214, 0.66", "-114.417, 14.8867, 62.0249, 0.22", "-114.882, 14.879, 62.3795, 0.22", "-115.472, 14.8344, 62.8112, 0.66", "-115.829, 14.7814, 63.0534, 0.81", "-116.224, 14.6719, 63.2853, 0.59", "-116.823, 14.453, 63.6393, 0.22", "-116.877, 14.4334, 63.6729, 0.22", "-117.374, 14.2755, 64.0176, 0.66", "-117.856, 14.1737, 64.3675, 0.81", "-118.236, 14.1341, 64.6405, 0.96", "-119.342, 14.1633, 65.3991, 0.29", "-119.97, 14.2654, 65.8387, 1.03", "-120.361, 14.3595, 66.1112, 1.47", "-120.986, 14.5619, 66.5375, 1.99", "-121.421, 14.7057, 66.8259, 1.84", "-122.043, 14.8964, 67.2289, 1.11", "-122.838, 15.1018, 67.7079, 0.52", "-123.479, 15.2158, 68.083, 0.29", "-123.943, 15.2623, 68.4385, 0.22", "-124.464, 15.263, 68.9179, 0.22", "-124.994, 15.2247, 69.4672, 0.22", "-125.184, 15.2017, 69.6731, 1.11", "-125.461, 15.1662, 69.9669, 1.11", "-126.641, 15.0365, 71.2495, 0.37", "-127.07, 14.995, 71.7234, 0.37", "-127.525, 14.9672, 72.2038, 0.37", "-127.976, 14.9383, 72.644, 0.37", "-128.232, 14.9208, 72.8741, 0.66", "-128.601, 14.9002, 73.1629, 0.66", "-129.419, 14.8934, 73.6775, 0.29", "-129.865, 14.9148, 73.9671, 0.22", "-130.216, 14.9577, 74.1882, 0.59", "-130.508, 15.0284, 74.3788, 0.81", "-130.826, 15.1328, 74.5788, 0.52", "-131.302, 15.3114, 74.8722, 0.44", "-131.586, 15.4052, 75.036, 0.44", "-132.057, 15.5215, 75.3071, 0.37", "-132.753, 15.5996, 75.6995, 0.29", "-133.277, 15.6054, 75.9999, 0.29", "-133.99, 15.5589, 76.4082, 0.88", "-134.641, 15.4745, 76.7664, 1.18", "-135.343, 15.4011, 77.1374, 0.81", "-136.087, 15.3006, 77.4821, 0.66", "-136.645, 15.2142, 77.7017, 0.52", "-136.708, 15.2054, 77.7235, 0.52", "-137.446, 15.1118, 77.9469, 0.29", "-138.791, 14.9628, 78.3441, 1.33", "-139.864, 14.8317, 78.6888, 0.29", "-140.617, 14.738, 78.9417, 0.81", "-141.183, 14.6562, 79.1389, 1.4", "-141.666, 14.5765, 79.3234, 1.4", "-142.111, 14.4901, 79.514, 1.03", "-143.074, 14.2904, 79.9845, 0.37", "-143.165, 14.2833, 80.0339, 0.37", "-143.686, 14.2789, 80.31, 0.37", "-143.763, 14.2805, 80.3478, 0.37", "-144.118, 14.289, 80.5074, 0.29", "-144.729, 14.2966, 80.7728, 0.29", "-145.462, 14.2948, 81.0829, 0.66", "-146.028, 14.271, 81.3414, 0.96", "-146.82, 14.1841, 81.7373, 1.18", "-147.458, 14.0678, 82.0763, 1.47", "-148.035, 13.9228, 82.3999, 1.47", "-148.936, 13.6206, 82.9304, 1.47", "-149.981, 13.2089, 83.6046, 0.29", "-150.527, 12.9644, 84.0012, 0.22", "-150.926, 12.794, 84.3844, 0.22", "-150.972, 12.7758, 84.4351, 0.22", "-151.263, 12.6747, 84.8009, 0.44", "-151.853, 12.5102, 85.5988, 0.37", "-152.704, 12.3553, 86.7285, 1.69", "-153.885, 12.2409, 88.1901, 1.11", "-154.572, 12.2081, 88.9809, 0.29", "-155.159, 12.1969, 89.5917, 1.25", "-155.586, 12.2007, 89.9948, 1.4", "-156.049, 12.2153, 90.3689, 0.81", "-156.487, 12.2452, 90.6649, 0.44", "-157.178, 12.2699, 90.9944, 0.44", "-157.876, 12.3343, 91.3056, 0.37", "-157.956, 12.3416, 91.3354, 0.37", "-158.592, 12.4137, 91.5819, 0.29" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-19.9508, 39.0554, 20.5084, 0.66", "-19.0965, 40.293, 20.9438, 0.66", "-18.5255, 40.7884, 21.269, 0.66", "-17.3965, 41.6086, 21.9387, 0.52", "-16.4632, 42.1827, 22.4465, 0.96", "-16.0011, 42.4434, 22.6809, 0.96", "-14.5438, 43.2165, 23.3311, 0.81", "-12.8716, 43.9033, 23.9658, 0.59", "-12.8048, 43.927, 23.9871, 0.59", "-11.7875, 44.2733, 24.238, 0.52", "-11.4516, 44.407, 24.2968, 0.52", "-10.4139, 44.9798, 24.402, 0.44", "-9.60773, 45.613, 24.3666, 0.44", "-9.53185, 45.6928, 24.3552, 0.44", "-9.06913, 46.2587, 24.3107, 0.44", "-8.9978, 46.3638, 24.3083, 0.44", "-8.27524, 47.54, 24.343, 0.44", "-8.03173, 47.997, 24.3741, 0.88", "-7.71744, 48.6506, 24.4514, 0.88", "-7.31353, 49.5543, 24.5806, 1.03", "-7.07382, 50.1222, 24.6756, 1.03", "-6.64848, 51.1137, 24.9318, 0.37", "-6.32477, 51.776, 25.1559, 0.37", "-5.75648, 52.6888, 25.5667, 0.37", "-5.14834, 53.4068, 25.9795, 0.37", "-5.09479, 53.4476, 26.0095, 0.37", "-3.57503, 54.1249, 26.7443, 0.66", "-2.59401, 54.3696, 27.1635, 0.59", "-1.44255, 54.5555, 27.6844, 0.52", "-0.570669, 54.6711, 28.0857, 0.52", "0.101042, 54.8079, 28.4632, 0.52", "1.02249, 55.1288, 29.0547, 0.52", "1.07428, 55.1592, 29.0979, 0.52", "2.16366, 56.0643, 30.1894, 0.88", "2.56418, 56.4747, 30.6372, 1.11", "3.63479, 57.7061, 31.8915, 0.81", "4.00765, 58.1602, 32.3099, 0.88", "5.06441, 59.3922, 33.3239, 0.59", "5.73883, 60.0885, 33.826, 0.59", "5.80508, 60.1455, 33.8591, 0.59", "6.32741, 60.4989, 34.0352, 0.74", "6.95776, 60.8109, 34.1478, 0.74", "8.29809, 61.3175, 34.305, 0.59", "9.28913, 61.6017, 34.3435, 0.59", "10.4428, 61.8466, 34.3709, 0.66", "11.2842, 61.9907, 34.373, 0.66", "12.4139, 62.1584, 34.3637, 1.03", "12.8243, 62.2229, 34.3743, 0.81", "13.7935, 62.4051, 34.4337, 0.66", "14.91, 62.703, 34.5741, 0.66", "16.0501, 63.1528, 34.8315, 0.52", "17.2796, 63.8112, 35.2396, 1.03", "18.3817, 64.5949, 35.7053, 0.74", "18.9116, 65.0455, 35.9765, 0.66", "19.5214, 65.7018, 36.3778, 0.88", "20.1742, 66.5024, 36.8372, 0.74", "20.231, 66.5655, 36.8758, 0.74", "20.871, 67.0384, 37.2086, 0.59", "20.9448, 67.0669, 37.233, 0.59", "21.8981, 67.2541, 37.4958, 0.52", "23.0904, 67.353, 37.7755, 0.44", "24.6058, 67.4552, 38.0593, 0.44", "25.9632, 67.6016, 38.2837, 0.37", "26.7771, 67.7383, 38.3968, 0.74", "26.8623, 67.762, 38.4074, 0.74", "27.6509, 68.0717, 38.4841, 0.81", "28.5965, 68.6716, 38.5552, 0.52", "29.3265, 69.2929, 38.5835, 0.52", "30.121, 70.0928, 38.6235, 0.44", "30.7604, 70.7476, 38.6631, 0.88", "30.8199, 70.804, 38.6679, 0.88", "31.3907, 71.2813, 38.7151, 0.88", "32.2771, 71.9209, 38.8222, 0.44", "32.8603, 72.3067, 38.8955, 0.96", "33.5468, 72.774, 38.9877, 0.96", "34.3006, 73.3204, 39.0862, 0.66", "35.1209, 73.9678, 39.2013, 0.44", "36.2144, 74.9556, 39.3507, 0.29", "36.8409, 75.6145, 39.4254, 0.29", "37.7176, 76.5951, 39.5417, 0.29", "38.1083, 77.0903, 39.5967, 0.66", "38.5101, 77.6864, 39.6412, 0.96", "39.0397, 78.6402, 39.6862, 0.96", "39.2543, 79.1199, 39.6558, 1.33" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-19.9508, 39.0554, 20.5084, 1.11", "-20.4369, 38.9035, 21.669, 1.11", "-20.7729, 38.8751, 22.4495, 0.81", "-21.1514, 38.8922, 23.3181, 0.96", "-21.8656, 39.1532, 25.1853, 1.25", "-21.8789, 39.1641, 25.2314, 1.25", "-22.0013, 39.3747, 25.8998, 0.59", "-22.0394, 39.6891, 26.6342, 0.59", "-22.0376, 39.7092, 26.671, 0.59", "-21.8492, 40.6228, 27.9047, 0.88", "-21.6616, 41.2843, 28.5596, 1.33", "-21.4534, 41.8284, 29.1147, 1.62" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "16.4991, -49.2558, 1.55473, 0.59", "17.8378, -49.0984, 0.885855, 0.59", "18.3895, -49.1158, 0.510204, 0.81", "18.4506, -49.124, 0.463706, 0.81", "19.3808, -49.3352, -0.258999, 0.96", "20.3281, -49.6546, -1.01238, 0.81", "21.2502, -50.046, -1.73384, 1.11", "22.6338, -50.8456, -2.87765, 0.74", "23.2546, -51.2601, -3.34888, 1.03", "23.8501, -51.6609, -3.72144, 1.03", "24.6532, -52.2333, -4.10396, 0.29", "25.3246, -52.7117, -4.33546, 0.66", "25.883, -53.1012, -4.48664, 1.03", "26.9418, -53.8145, -4.74066, 0.96", "28.4151, -54.7781, -5.11674, 0.96", "29.4001, -55.4077, -5.38736, 0.44", "30.2987, -55.9899, -5.64178, 0.44", "31.6659, -56.9235, -6.06058, 0.88", "32.9831, -57.8723, -6.49036, 1.03", "33.0438, -57.9175, -6.51124, 1.03", "33.8412, -58.484, -6.7867, 1.11", "34.9195, -59.1068, -7.12619, 0.74", "35.7394, -59.4898, -7.34088, 0.29", "36.2256, -59.6586, -7.42974, 0.88", "37.0556, -59.8734, -7.5803, 0.81", "38.1179, -60.1114, -7.85514, 0.59", "39.1888, -60.3175, -8.20489, 0.59", "39.2527, -60.3276, -8.2358, 0.59", "39.9303, -60.4344, -8.6374, 0.59", "40.8355, -60.5763, -9.24832, 0.37", "41.8959, -60.7404, -10.0569, 1.25", "42.538, -60.8288, -10.5696, 1.62", "44.1229, -61.0223, -11.8447, 0.66", "44.8072, -61.0959, -12.363, 0.37", "45.1933, -61.1284, -12.6154, 0.37", "45.5559, -61.1642, -12.7821, 0.29", "46.4101, -61.2784, -12.9969, 1.03", "46.7743, -61.3581, -13.0197, 1.03", "47.2836, -61.5223, -12.962, 1.25", "48.1896, -61.8511, -12.8356, 1.03", "49.1786, -62.208, -12.7025, 0.29", "49.8646, -62.4248, -12.6363, 0.29", "50.8903, -62.7057, -12.64, 0.74", "51.6104, -62.8644, -12.6947, 1.03", "52.334, -63.0089, -12.8795, 1.03", "53.2578, -63.1916, -13.2537, 1.18", "54.5012, -63.4389, -13.9273, 0.29", "55.7115, -63.6767, -14.6975, 1.03", "56.2254, -63.7748, -15.0683, 1.33", "58.1879, -64.1509, -16.5914, 0.44", "58.8917, -64.293, -17.171, 0.44", "59.933, -64.4822, -18.0453, 0.37", "60.6425, -64.57, -18.6069, 1.03", "60.7041, -64.5716, -18.6476, 1.03", "60.9835, -64.5561, -18.7919, 1.03", "61.1887, -64.5372, -18.862, 1.03", "62.2065, -64.5624, -19.3172, 0.59", "62.9318, -64.7326, -19.7039, 0.37", "63.023, -64.7694, -19.7596, 0.37", "63.6084, -65.0195, -20.0995, 0.37", "64.8052, -65.524, -20.7355, 0.37", "65.9067, -65.9618, -21.2685, 0.37", "66.5297, -66.1685, -21.5351, 1.11", "67.3634, -66.3698, -21.8511, 0.88", "68.5231, -66.5725, -22.2304, 0.74", "69.6167, -66.6945, -22.5494, 0.74", "70.4253, -66.7448, -22.7447, 0.66", "71.671, -66.8012, -23.0179, 0.88", "72.8184, -66.8775, -23.3035, 0.29", "73.6665, -66.9488, -23.6041, 0.29", "74.1765, -67.0053, -23.8527, 0.96", "75.0186, -67.1065, -24.3708, 1.33", "75.1583, -67.1227, -24.4709, 1.33", "76.047, -67.2162, -25.191, 1.99", "77.521, -67.2363, -26.458, 0.52", "77.956, -67.1901, -26.8396, 0.52", "78.2803, -67.1214, -27.1212, 0.52", "78.8881, -66.9175, -27.6301, 0.81", "79.1348, -66.8156, -27.8139, 0.81", "79.619, -66.5761, -28.1113, 0.81", "80.0771, -66.3546, -28.3199, 0.81", "80.9239, -66.0167, -28.6918, 0.66", "81.6624, -65.8152, -29.0123, 0.44", "81.7504, -65.8001, -29.0478, 0.44", "83.0439, -65.665, -29.5255, 1.18", "83.8115, -65.6551, -29.7793, 1.55", "85.2061, -65.7168, -30.2662, 0.66", "86.2926, -65.8135, -30.6472, 0.37", "87.2337, -65.9417, -31.0191, 0.37", "87.7068, -66.0146, -31.2208, 1.33", "88.5712, -66.1732, -31.613, 1.55", "89.8734, -66.4103, -32.2675, 0.81", "89.9367, -66.4203, -32.3026, 0.81", "90.9067, -66.5194, -32.8814, 0.37", "91.7825, -66.5892, -33.4236, 0.66", "91.8445, -66.5929, -33.462, 0.66", "92.3589, -66.6095, -33.7466, 1.03", "92.4296, -66.6162, -33.7816, 1.03", "93.1126, -66.7207, -34.1442, 1.18", "93.182, -66.7356, -34.1845, 1.18", "94.2724, -67.0513, -34.8415, 1.03", "95.0323, -67.3407, -35.3365, 0.37", "96.0142, -67.7819, -35.9956, 0.66", "96.8664, -68.1991, -36.5726, 0.96", "97.8918, -68.7162, -37.2694, 0.88", "98.6256, -69.08, -37.746, 0.66", "100.132, -69.7907, -38.7011, 0.29", "100.652, -70.0073, -39.0268, 0.66", "100.775, -70.0491, -39.1008, 0.66", "101.61, -70.275, -39.5896, 0.96", "102.209, -70.3965, -39.9087, 0.96", "103.261, -70.5247, -40.5051, 0.52", "103.957, -70.5721, -40.9001, 0.52", "104.983, -70.6251, -41.4987, 1.55", "105.488, -70.6507, -41.7957, 1.77", "106.673, -70.6997, -42.481, 0.81", "108.343, -70.7274, -43.3955, 0.74", "108.446, -70.7265, -43.447, 0.74", "109.112, -70.6708, -43.8353, 1.25", "109.234, -70.6483, -43.9125, 1.25", "109.851, -70.5046, -44.3645, 1.25", "110.56, -70.3208, -44.925, 0.96", "110.616, -70.3102, -44.9715, 0.96", "112.31, -70.2198, -46.6548, 0.29", "112.689, -70.2364, -47.056, 0.29", "113.626, -70.3266, -48.0681, 0.88", "113.941, -70.3627, -48.4079, 1.33", "115.054, -70.5067, -49.5786, 1.18", "116.608, -70.6661, -51.0837, 0.59", "117.434, -70.718, -51.7865, 0.37", "117.672, -70.7193, -51.9756, 0.37", "118.465, -70.711, -52.5587, 0.37", "118.584, -70.7085, -52.6414, 0.37", "119.718, -70.6641, -53.3199, 1.84", "121.411, -70.6055, -54.1993, 0.88", "122.236, -70.5966, -54.627, 0.59", "123.629, -70.6572, -55.3091, 0.88", "123.707, -70.6654, -55.3462, 0.88", "124.339, -70.7577, -55.6541, 0.74", "125.05, -70.8802, -56.0879, 0.22", "125.857, -70.9753, -56.6648, 0.22", "126.471, -71.0043, -57.1596, 0.22", "127.427, -70.9876, -58.0478, 1.33", "128.445, -70.9473, -59.0318, 1.4", "130.326, -70.8504, -60.9693, 0.29", "131.162, -70.8017, -61.8705, 1.77", "131.97, -70.7444, -62.7739, 2.36", "133.599, -70.563, -64.6244, 0.44", "134.502, -70.439, -65.622, 0.37", "135.758, -70.2835, -66.9526, 0.37", "135.802, -70.2808, -66.9953, 0.37", "136.785, -70.3144, -67.9493, 0.81", "136.849, -70.3238, -68.0065, 0.81", "137.501, -70.5052, -68.4901, 0.81", "138.776, -70.9759, -69.3379, 0.29", "139.344, -71.1793, -69.6205, 0.29", "140.379, -71.5108, -70.0658, 1.55", "141.091, -71.7278, -70.3218, 2.14", "141.842, -71.8878, -70.5587, 2.36", "142.642, -72.0053, -70.7758, 1.62", "144.312, -72.1569, -71.1475, 0.22", "145.081, -72.2034, -71.3098, 0.96", "145.871, -72.2507, -71.4685, 0.96", "148.064, -72.4414, -71.915, 0.22", "148.936, -72.547, -72.0936, 1.11", "149.706, -72.6857, -72.248, 1.77", "150.17, -72.7924, -72.3125, 1.77", "151.588, -73.1301, -72.2996, 0.29", "152.479, -73.3478, -72.1947, 0.29", "152.607, -73.3825, -72.1664, 0.29", "153.382, -73.5803, -71.9503, 0.29", "155.271, -74.0645, -71.349, 1.25", "157.467, -74.6, -70.5974, 0.22", "158.105, -74.7395, -70.3693, 0.59", "158.207, -74.7594, -70.3366, 0.59", "158.651, -74.8417, -70.2184, 0.59", "159.567, -75.0237, -70.0686, 0.22", "160.259, -75.2124, -70.0639, 0.22", "161.104, -75.4718, -70.1546, 1.18", "161.825, -75.6929, -70.2322, 1.55", "162.276, -75.838, -70.281, 1.55", "163.677, -76.3105, -70.4343, 0.15", "164.307, -76.5409, -70.5039, 0.66", "164.696, -76.7041, -70.5886, 0.66", "164.764, -76.7374, -70.609, 0.66", "165.914, -77.3523, -71.011, 0.22", "166.638, -77.7617, -71.3082, 0.88", "167.359, -78.1827, -71.6378, 1.18", "169.027, -79.1676, -72.4647, 0.22", "170.078, -79.819, -73.0378, 0.22", "170.453, -80.0585, -73.2547, 0.22", "171.141, -80.4841, -73.6669, 1.4", "171.754, -80.8408, -74.0323, 1.77", "173.305, -81.6892, -74.9133, 0.22", "174.144, -82.0945, -75.2958, 0.74", "174.42, -82.2044, -75.4112, 0.74", "175.753, -82.7006, -75.9479, 0.22", "176.549, -82.9677, -76.2403, 1.11", "176.982, -83.0931, -76.3865, 1.4", "178.749, -83.4977, -76.8337, 0.22", "179.913, -83.7353, -77.0643, 1.92" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "16.4991, -49.2558, 1.55473, 0.74", "19.2836, -51.1118, 1.81937, 0.74", "20.7929, -52.0826, 1.87923, 0.74", "20.8653, -52.1327, 1.88296, 0.74", "21.9076, -52.9261, 1.94317, 0.52", "23.087, -53.8721, 2.01441, 0.81", "24.0614, -54.7344, 2.07521, 0.37", "25.1003, -55.7279, 2.02994, 0.74", "25.8712, -56.5684, 2.05343, 0.96", "26.4778, -57.2424, 2.15869, 1.18", "26.5353, -57.3064, 2.17568, 1.18", "27.4426, -58.2893, 2.52752, 0.81", "28.5356, -59.3188, 2.93424, 0.81", "29.6918, -60.1911, 3.31354, 0.81", "31.4064, -61.1756, 3.79302, 0.59", "32.1917, -61.5136, 3.97972, 0.81", "32.2748, -61.5403, 3.99543, 0.81", "33.6953, -61.8084, 4.17694, 1.03", "33.7954, -61.8204, 4.18189, 1.03", "35.333, -61.9794, 4.15385, 0.59", "36.3824, -62.1183, 4.08575, 0.88", "37.5938, -62.3091, 4.0684, 0.59", "39.0163, -62.566, 4.0969, 0.44", "40.5006, -62.8814, 4.17269, 0.44", "41.9237, -63.2258, 4.27644, 0.59", "43.2031, -63.5806, 4.40767, 0.96", "44.6662, -64.0887, 4.63325, 1.18", "44.7622, -64.1307, 4.65182, 1.18", "45.4167, -64.4768, 4.79666, 1.18", "46.4728, -65.0944, 5.04538, 0.44", "46.5391, -65.1343, 5.0615, 0.44", "48.3349, -66.2056, 5.4322, 0.44", "49.572, -66.9132, 5.62687, 0.44", "50.3189, -67.313, 5.74351, 0.81", "50.4528, -67.3784, 5.76353, 0.81", "51.7011, -67.9219, 5.93561, 0.81", "51.8303, -67.9698, 5.9413, 0.81", "52.8156, -68.2602, 5.83225, 0.81", "53.8636, -68.518, 5.57772, 1.18", "54.6902, -68.7043, 5.27729, 1.4", "54.8085, -68.7269, 5.22707, 1.4", "56.5385, -68.9978, 4.41935, 0.96", "57.791, -69.1553, 3.84981, 0.96", "59.1794, -69.3268, 3.28243, 0.44", "60.3857, -69.4864, 2.86772, 0.44", "61.9025, -69.7412, 2.50088, 0.44", "62.9554, -69.9766, 2.35702, 0.52", "64.0592, -70.3019, 2.33224, 1.47", "65.5351, -70.8563, 2.42466, 0.88", "66.8452, -71.5058, 2.54004, 0.59", "68.1217, -72.317, 2.61227, 0.29", "68.9703, -72.9785, 2.60351, 0.29", "69.5602, -73.5042, 2.55445, 0.96", "70.1981, -74.142, 2.45383, 1.25", "71.4065, -75.4645, 2.16239, 0.66", "72.476, -76.721, 1.86328, 0.66", "73.1682, -77.5421, 1.67711, 1.33", "73.9658, -78.4954, 1.51102, 0.59", "74.6441, -79.3252, 1.41506, 0.52", "75.5455, -80.4315, 1.32155, 0.52", "76.5672, -81.6343, 1.26501, 0.52", "77.6117, -82.8031, 1.2189, 0.88", "78.3565, -83.5411, 1.17114, 1.25", "79.2428, -84.2748, 1.09447, 1.25", "80.3021, -84.9967, 0.991744, 0.59", "81.2664, -85.5343, 0.891502, 0.29", "81.3379, -85.5675, 0.883669, 0.29", "82.5529, -86.0933, 0.684333, 0.29", "83.7382, -86.5765, 0.477362, 0.74", "84.7794, -86.9585, 0.296982, 1.03", "85.2967, -87.1448, 0.215429, 1.03", "86.1454, -87.4633, 0.081211, 1.18", "87.4018, -87.9653, -0.12498, 0.37", "88.6132, -88.4816, -0.33525, 0.29", "89.6039, -88.877, -0.517949, 0.29", "91.1715, -89.5131, -0.81045, 0.29", "91.2515, -89.5485, -0.823702, 0.29", "92.7005, -90.263, -1.01795, 1.33", "92.7835, -90.3086, -1.02536, 1.33", "93.4656, -90.7487, -1.07825, 1.69", "94.4813, -91.4769, -1.14672, 1.11", "95.6925, -92.3904, -1.21556, 0.59", "97.0719, -93.4349, -1.32053, 0.37", "97.9625, -94.119, -1.43529, 1.11", "98.9199, -94.8547, -1.60378, 1.11", "98.9892, -94.9068, -1.61929, 1.11", "99.8715, -95.5512, -1.86108, 0.88", "100.943, -96.2988, -2.20989, 0.88", "102.112, -97.0064, -2.62946, 0.59", "102.202, -97.0522, -2.66273, 0.59", "103.211, -97.4335, -3.00223, 0.37", "103.663, -97.5577, -3.13357, 0.37", "104.388, -97.658, -3.29599, 0.37", "105.397, -97.7131, -3.42774, 0.74", "105.608, -97.7266, -3.44409, 0.74", "106.743, -97.8365, -3.53095, 0.74", "106.931, -97.8701, -3.54993, 0.74", "107.666, -98.1511, -3.6433, 0.74", "108.615, -98.8391, -3.79069, 0.29", "109.33, -99.5959, -3.92069, 0.29", "109.384, -99.6645, -3.9309, 0.29", "110.072, -100.639, -4.06519, 0.52", "110.785, -101.571, -4.19515, 0.59", "111.484, -102.387, -4.31282, 0.37", "111.563, -102.455, -4.32555, 0.37", "112.539, -103.05, -4.46355, 0.37", "113.314, -103.438, -4.55867, 0.74", "114.338, -103.855, -4.66697, 1.03", "115.091, -104.142, -4.748, 1.25", "116.339, -104.638, -4.88153, 0.52", "117.482, -105.147, -5.04652, 0.29", "118.7, -105.799, -5.26276, 0.66", "118.792, -105.861, -5.28635, 0.66", "119.751, -106.654, -5.58794, 0.96", "120.395, -107.293, -5.85884, 1.33", "121.199, -108.235, -6.27451, 1.4", "121.86, -109.099, -6.67397, 0.74", "123.048, -110.782, -7.47378, 0.37", "123.845, -112.048, -8.08881, 0.37", "124.523, -113.316, -8.71696, 0.37", "124.774, -113.901, -8.98976, 1.03", "124.957, -114.393, -9.19347, 1.03", "124.988, -114.483, -9.22924, 1.03", "125.394, -115.677, -9.63334, 0.37", "125.468, -115.857, -9.6919, 0.37", "125.961, -116.621, -9.89141, 0.37", "126.79, -117.493, -10.1255, 0.22", "127.311, -117.911, -10.3228, 0.88", "127.673, -118.193, -10.4749, 1.33", "127.736, -118.241, -10.5021, 1.33", "128.28, -118.724, -10.7682, 1.47", "129.022, -119.52, -11.1895, 0.81", "130.135, -121.06, -11.9386, 0.22", "130.681, -122.012, -12.3351, 0.22", "130.891, -122.505, -12.4935, 0.96", "131.202, -123.451, -12.7242, 1.18", "131.373, -124.138, -12.838, 0.88", "131.395, -124.228, -12.8461, 0.88", "131.697, -125.199, -12.8461, 0.66", "132.192, -126.286, -12.8585, 0.52", "132.521, -126.852, -12.8706, 0.44", "133.08, -127.635, -12.8955, 0.37", "133.686, -128.385, -12.9249, 0.22", "134.159, -128.932, -12.9488, 0.22", "134.7, -129.502, -12.9775, 0.96", "135.225, -130.045, -13.0056, 1.25", "135.907, -130.728, -13.0427, 1.25", "136.521, -131.341, -13.0761, 1.25", "137.138, -131.942, -13.11, 0.96", "137.835, -132.635, -13.1481, 0.29", "138.076, -132.878, -13.1611, 0.29", "138.955, -133.853, -13.2065, 0.29", "139.068, -134.009, -13.2116, 0.29", "139.605, -135.031, -13.28, 0.29", "140.026, -136.142, -13.3796, 0.59", "140.239, -136.873, -13.4569, 1.11", "140.469, -137.855, -13.5707, 1.11", "140.687, -139.01, -13.7148, 0.66", "140.897, -140.112, -13.8671, 0.29", "140.916, -140.191, -13.8804, 0.29", "141.375, -140.988, -14.0116, 0.29", "141.442, -141.044, -14.0171, 0.29", "142.197, -141.479, -14.0132, 0.29", "142.28, -141.524, -14.0087, 0.29", "143.28, -142.135, -13.9095, 0.29", "144.194, -142.792, -13.8172, 0.66", "144.727, -143.263, -13.7637, 0.88", "145.438, -144.02, -13.6953, 0.37", "146.134, -144.902, -13.6248, 0.66", "146.645, -145.605, -13.5774, 1.18", "146.974, -146.059, -13.5684, 1.4", "147.731, -147.073, -13.5987, 1.03", "148.38, -147.896, -13.6351, 0.66", "148.933, -148.547, -13.6749, 0.52", "149.565, -149.254, -13.7288, 0.44", "150.653, -150.456, -13.8338, 0.29", "150.715, -150.524, -13.8405, 0.29", "151.141, -151.024, -13.9095, 0.29", "151.683, -151.819, -14.0258, 0.88", "152.001, -152.412, -14.1326, 1.4", "152.305, -153.113, -14.259, 1.47", "152.366, -153.268, -14.285, 1.47", "153.037, -154.917, -14.5654, 0.29", "153.605, -156.279, -14.7989, 0.29", "154.194, -157.594, -14.9567, 0.29", "154.71, -158.602, -15.0259, 0.29", "155.284, -159.595, -15.0447, 1.18", "155.785, -160.39, -15.0171, 1.62", "156.231, -161.023, -14.9735, 1.62", "157.202, -162.403, -14.8639, 0.44", "158.062, -163.699, -14.814, 0.22", "158.419, -164.255, -14.8335, 0.59", "158.852, -164.93, -14.9072, 0.74", "159.632, -166.071, -15.1225, 0.29", "160.485, -167.264, -15.4526, 0.29", "161.414, -168.475, -15.8466, 0.29", "161.908, -169.039, -15.997, 0.66", "162.452, -169.628, -16.0992, 0.88", "163.227, -170.388, -16.141, 1.18", "163.298, -170.458, -16.1334, 1.18", "164.316, -171.628, -15.9104, 0.66", "164.873, -172.623, -15.6831, 0.22", "165.212, -173.572, -15.5232, 0.22", "165.327, -174.03, -15.4684, 0.88", "165.549, -175.076, -15.3931, 0.88", "165.831, -176.444, -15.3515, 0.59", "166.164, -177.815, -15.3843, 0.74", "166.419, -178.6, -15.4122, 1.25", "166.812, -179.46, -15.4518, 1.25", "167.599, -180.86, -15.5268, 0.22", "167.683, -180.972, -15.5342, 0.22", "168.775, -182.164, -15.6263, 0.22", "169.478, -182.839, -15.6807, 1.18", "170.345, -183.618, -15.7393, 1.55", "170.431, -183.69, -15.7455, 1.55", "171.527, -184.513, -15.9492, 0.59", "172.568, -185.237, -16.2334, 0.29", "173.223, -185.656, -16.4615, 1.11", "173.31, -185.708, -16.4951, 1.11", "174.102, -186.222, -16.7525, 0.74", "176.003, -187.574, -17.2279, 0.22", "176.803, -188.185, -17.3763, 0.22", "177.638, -188.847, -17.4678, 0.96", "178.237, -189.365, -17.4891, 0.96", "179.839, -190.883, -17.4191, 0.22", "180.557, -191.643, -17.2604, 0.22", "180.862, -191.986, -17.1129, 0.81", "181.42, -192.641, -16.7952, 1.03", "181.834, -193.125, -16.4944, 0.74", "181.89, -193.188, -16.452, 0.74", "183.078, -194.425, -15.6526, 0.22", "183.895, -195.25, -15.0986, 1.11", "184.582, -195.908, -14.6644, 1.55", "186.053, -197.274, -13.7808, 0.88", "187.1, -198.155, -13.2437, 0.29", "188.506, -199.239, -12.6586, 0.29", "188.591, -199.297, -12.6355, 0.29", "189.544, -199.84, -12.5104, 0.44", "189.625, -199.876, -12.5073, 0.44", "190.895, -200.317, -12.5967, 0.44", "190.998, -200.347, -12.604, 0.44", "191.801, -200.565, -12.6621, 0.74", "192.993, -200.923, -12.7473, 1.25", "193.958, -201.253, -12.8153, 1.47", "194.997, -201.679, -12.8868, 1.55", "195.675, -202.009, -12.9322, 1.55", "196.793, -202.571, -13.0066, 0.74", "197.637, -203.038, -13.0746, 0.81", "198.214, -203.387, -13.1386, 0.81", "199.269, -204.071, -13.2815, 0.29", "200.721, -205.037, -13.5082, 0.29", "201.357, -205.467, -13.6186, 0.66", "202.409, -206.228, -13.7418, 0.29", "203.18, -206.795, -13.7879, 1.33", "203.277, -206.873, -13.7875, 1.33", "203.977, -207.517, -13.6888, 1.55", "204.047, -207.594, -13.671, 1.55", "205.384, -209.206, -13.2564, 0.22", "205.801, -209.729, -13.1051, 0.74", "206.263, -210.324, -12.9363, 1.03", "207.572, -212.027, -12.497, 0.22", "208.353, -213.07, -12.2452, 1.25", "208.768, -213.61, -12.1367, 1.62", "208.827, -213.683, -12.1294, 1.62", "209.41, -214.376, -12.0616, 0.88", "209.474, -214.452, -12.0559, 0.88" ],
    "parent" : "dend_95",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "14.2166, -70.5904, -3.78098, 0.52", "13.1624, -72.6501, -4.5473, 0.52", "12.488, -73.9307, -4.93122, 0.74", "12.1176, -74.6865, -5.12615, 0.74", "12.0886, -74.747, -5.1387, 0.74", "11.7033, -75.5541, -5.26586, 1.18", "11.6786, -75.6061, -5.27178, 1.18", "11.3203, -76.3505, -5.22789, 0.74", "10.9434, -77.2069, -5.14577, 0.44", "10.6369, -77.9225, -5.08256, 0.44", "10.3281, -78.6405, -5.03113, 1.11", "10.0567, -79.3424, -4.99181, 1.25", "9.86028, -79.8955, -4.96534, 0.81", "9.61911, -80.65, -4.93935, 0.74", "9.38446, -81.5323, -4.92101, 0.52", "9.09391, -83.2004, -4.955, 0.44", "8.94304, -84.621, -5.02862, 0.44", "8.93451, -85.157, -5.07589, 0.44", "8.9887, -85.6971, -5.13174, 1.03", "9.20278, -86.5781, -5.23599, 1.25", "9.56243, -87.4415, -5.34887, 1.47", "9.59886, -87.5002, -5.35705, 1.47", "10.1187, -88.2331, -5.4845, 1.11", "10.6631, -89.0269, -5.62305, 0.88", "10.9665, -89.5747, -5.72684, 0.66", "10.9922, -89.6465, -5.74096, 0.66", "11.0861, -90.253, -5.87425, 0.44", "11.0646, -91.0804, -6.11213, 0.29", "10.9674, -91.569, -6.26716, 0.37", "10.6158, -92.6664, -6.62568, 0.37", "10.3862, -93.2564, -6.81021, 0.88", "10.0309, -94.087, -7.0398, 1.25", "9.55541, -95.1955, -7.28723, 0.66", "9.29095, -95.8381, -7.39819, 0.37", "9.008, -96.693, -7.50809, 0.37", "8.99549, -96.7531, -7.5124, 0.37", "8.85168, -97.9522, -7.55743, 0.66", "8.85777, -99.0822, -7.545, 0.52", "8.86645, -99.1459, -7.54274, 0.52", "9.09282, -100.073, -7.53418, 1.11", "9.46525, -101.133, -7.5387, 1.11", "9.4892, -101.198, -7.54143, 1.11", "9.85926, -102.206, -7.61943, 1.11", "10.0851, -102.989, -7.69361, 0.96", "10.1944, -103.74, -7.7883, 0.96", "10.1268, -105.019, -7.97791, 0.29", "9.88086, -105.882, -8.11799, 0.29", "9.61203, -106.443, -8.20397, 0.96", "9.17941, -107.087, -8.28119, 1.11", "8.38542, -108.145, -8.3637, 1.25", "7.85439, -108.814, -8.39511, 1.03", "7.28837, -109.532, -8.42551, 0.81", "6.75105, -110.362, -8.49265, 0.37", "6.23893, -111.464, -8.67839, 0.37", "5.98579, -112.454, -8.92813, 0.44", "5.97053, -112.668, -8.99503, 0.44", "6.03103, -113.386, -9.27439, 0.81", "6.32277, -114.707, -9.98291, 1.03", "6.57101, -115.615, -10.5604, 1.77", "6.73453, -116.261, -10.9839, 1.47", "6.75275, -116.331, -11.032, 1.47", "6.89166, -116.928, -11.4292, 1.11", "7.23246, -118.664, -12.506, 0.74", "7.33006, -119.649, -13.0437, 0.74", "7.33524, -120.604, -13.5661, 0.88" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "14.2166, -70.5904, -3.78098, 0.81", "14.6029, -71.4039, -3.75622, 0.81", "14.834, -71.9921, -3.74401, 1.11", "15.0469, -72.6384, -3.73301, 1.11", "15.1647, -73.0841, -3.72679, 1.25", "15.2911, -73.78, -3.68116, 0.88", "15.3502, -74.2555, -3.61207, 0.74", "15.3368, -74.8043, -3.47217, 0.88", "15.2361, -75.3761, -3.21365, 0.96", "15.1056, -75.7818, -2.96516, 0.59", "14.8243, -76.524, -2.44803, 0.74", "14.6196, -77.0876, -2.02221, 0.96", "14.497, -77.4867, -1.73305, 0.96", "14.3547, -78.0878, -1.33619, 0.96", "14.2261, -78.7922, -0.964781, 1.11", "14.1528, -79.3762, -0.769479, 1.18", "14.1037, -80.166, -0.660405, 1.4", "14.0774, -80.9614, -0.655826, 0.74", "14.0834, -81.4246, -0.694879, 0.66", "14.1278, -82.0623, -0.794414, 0.66", "14.2105, -82.709, -0.909743, 0.66", "14.2929, -83.1957, -1.00306, 1.11", "14.4132, -83.6677, -1.07158, 1.18", "14.5709, -84.0846, -1.06311, 0.96", "14.7729, -84.5363, -0.951103, 0.81", "14.9825, -84.9594, -0.756813, 0.59", "15.1914, -85.3965, -0.496867, 0.59", "15.4392, -86.0279, -0.0385798, 1.18", "15.5954, -86.5902, 0.375854, 0.96", "15.671, -87.1556, 0.709329, 0.88", "15.6728, -87.1862, 0.724331, 0.88", "15.693, -87.7345, 0.938326, 0.96", "15.7353, -88.585, 1.17833, 0.96", "15.8123, -89.5245, 1.32657, 0.74", "16.0511, -91.1763, 1.39084, 0.74", "16.1093, -91.4575, 1.37885, 0.74", "16.2707, -92.0504, 1.31965, 0.74", "16.4875, -92.6511, 1.21846, 1.11", "16.7376, -93.1857, 1.08258, 1.4", "17.2363, -93.9976, 0.828304, 0.66", "17.5264, -94.3773, 0.692357, 1.11", "17.7848, -94.7012, 0.578467, 1.25", "18.0526, -95.0209, 0.474479, 1.25", "18.3724, -95.3806, 0.396228, 0.96", "18.8042, -95.843, 0.337621, 0.59", "19.19, -96.2406, 0.34943, 0.74", "19.4447, -96.5052, 0.380157, 1.03", "19.7523, -96.8227, 0.441575, 0.66", "20.3635, -97.4417, 0.609883, 0.37", "20.39, -97.4678, 0.619916, 0.37", "20.9466, -97.9718, 0.885587, 0.88", "21.2836, -98.2957, 1.0625, 1.25", "21.3696, -98.3873, 1.11034, 1.25", "21.5912, -98.669, 1.23591, 1.25", "21.9635, -99.3145, 1.44726, 1.33", "22.2622, -99.9684, 1.61653, 0.66", "22.465, -100.618, 1.7078, 0.37", "22.5114, -100.942, 1.72191, 0.37", "22.5106, -101.466, 1.69299, 0.74", "22.4432, -102.178, 1.60174, 0.88", "22.4355, -102.221, 1.59284, 0.88", "22.3317, -102.778, 1.47224, 0.66", "22.2804, -103.366, 1.36407, 0.52", "22.2948, -103.917, 1.28888, 0.52", "22.4377, -104.565, 1.28995, 0.88", "22.4561, -104.606, 1.2963, 0.88", "22.7741, -105.168, 1.4436, 1.18", "23.0026, -105.498, 1.56373, 1.4", "23.0421, -105.551, 1.58533, 1.4", "23.4073, -106.101, 1.79071, 0.74", "23.628, -106.55, 1.91882, 0.29", "23.6415, -106.59, 1.92655, 0.29", "23.7333, -107.081, 1.97487, 0.29", "23.7761, -107.512, 1.99945, 0.59", "23.8041, -107.999, 2.00896, 0.81", "23.8129, -108.442, 2.00187, 0.81", "23.8228, -109.054, 1.99211, 1.11", "23.8381, -109.524, 1.98451, 1.11", "23.8629, -110.146, 1.97441, 1.11", "23.9184, -110.886, 1.96207, 0.81", "23.9718, -111.359, 1.95395, 1.4", "24.0408, -111.876, 1.94495, 1.84", "24.102, -112.296, 1.93756, 2.21" ],
    "parent" : "dend_66",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-13.9731, -84.1154, 22.7616, 0.29", "-13.8546, -84.7876, 22.8185, 0.29", "-13.7207, -85.3296, 22.967, 0.29", "-13.5859, -85.7794, 23.1483, 0.29", "-13.3619, -86.2366, 23.4597, 0.59", "-13.1105, -86.6149, 23.8599, 0.59", "-12.8281, -86.9831, 24.3722, 0.52", "-12.4518, -87.3951, 25.0714, 0.44", "-12.432, -87.4179, 25.1107, 0.44", "-12.0805, -87.9195, 25.9416, 0.37", "-11.8136, -88.4831, 26.8444, 0.52", "-11.6316, -89.0795, 27.7377, 0.52", "-11.5631, -89.6454, 28.4735, 0.74", "-11.5811, -90.1116, 29.0137, 0.74", "-11.6791, -90.7144, 29.6798, 0.74", "-11.8662, -91.4061, 30.394, 0.74", "-11.8753, -91.4334, 30.4232, 0.74", "-12.06, -91.8685, 30.9059, 0.74", "-12.2523, -92.3613, 31.5671, 0.37", "-12.2139, -92.4404, 31.6894, 0.37", "-11.7625, -92.7283, 32.0845, 0.37", "-11.3409, -93.0451, 32.481, 0.37", "-11.3087, -93.0741, 32.5154, 0.37", "-11.0741, -93.3927, 32.9781, 0.59", "-10.8825, -93.8525, 33.7308, 0.37", "-10.7877, -94.2956, 34.5241, 0.37", "-10.7476, -94.8473, 35.5288, 0.66", "-10.7435, -95.0544, 35.9179, 0.81", "-10.7123, -96.0002, 37.7383, 0.52", "-10.7373, -96.256, 38.2741, 0.74", "-10.7419, -96.2744, 38.3162, 0.74", "-10.775, -96.4506, 38.7645, 0.52", "-10.7217, -96.6366, 39.2966, 0.52", "-10.6367, -96.7599, 39.6252, 0.81" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-13.9731, -84.1154, 22.7616, 0.29", "-14.403, -84.9366, 22.9795, 0.29", "-14.6816, -85.5925, 23.1358, 0.29", "-14.8127, -86.1586, 23.3559, 0.29", "-14.8994, -86.8683, 23.6925, 0.66", "-14.7567, -87.5606, 24.3433, 0.22", "-14.5756, -87.8749, 24.7192, 0.37", "-14.5439, -87.91, 24.7675, 0.37", "-13.7598, -88.7589, 25.9064, 0.29", "-13.7256, -88.7979, 25.9572, 0.29", "-12.6251, -90.1912, 27.7064, 0.29", "-12.2037, -90.8718, 28.5382, 0.29", "-11.7958, -91.9356, 29.7341, 0.29", "-11.5829, -92.8393, 30.6595, 0.29", "-11.5331, -93.3801, 31.1412, 0.29", "-11.5008, -94.36, 32.0172, 0.29", "-11.545, -95.5066, 32.995, 0.66", "-11.6245, -96.8458, 34.2315, 0.37", "-11.6274, -96.8972, 34.2821, 0.37", "-11.6352, -97.3291, 34.7588, 0.52", "-11.608, -98.5906, 36.2229, 0.59", "-11.589, -99.0155, 36.7073, 0.22", "-11.504, -99.3807, 37.1149, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "1.35764, -232.274, 21.4832, 0.29", "1.11482, -233.147, 21.4987, 0.29", "0.8881, -233.97, 21.4873, 0.29", "0.668589, -234.865, 21.4633, 0.29", "0.530503, -235.557, 21.4317, 0.29", "0.437019, -236.129, 21.4212, 1.03", "0.356796, -236.741, 21.4203, 1.33", "0.337399, -237.236, 21.4483, 1.33", "0.352017, -237.724, 21.5004, 1.18", "0.420734, -238.717, 21.6279, 0.29", "0.494183, -239.304, 21.7509, 0.59", "0.541081, -239.603, 21.8288, 0.59", "0.677584, -240.431, 22.0626, 0.22", "0.746426, -241.052, 22.2282, 0.22", "0.745872, -241.112, 22.2408, 0.22", "0.684001, -241.536, 22.2963, 1.03", "0.56401, -242.015, 22.2899, 1.25", "0.379651, -242.527, 22.2398, 1.03", "0.106607, -243.21, 22.1307, 0.37", "-0.194913, -243.962, 22.0343, 0.37", "-0.501033, -244.752, 21.9521, 0.37", "-0.826665, -245.66, 21.8786, 0.22", "-1.05691, -246.383, 21.8369, 0.22", "-1.22149, -247.058, 21.8517, 0.22", "-1.30336, -247.886, 22.0006, 1.18", "-1.3, -247.947, 22.0223, 1.18", "-1.22742, -248.417, 22.2623, 1.33", "-1.20565, -248.534, 22.3306, 1.25", "-1.05132, -249.379, 22.7585, 0.59", "-0.983788, -250.117, 23.0063, 0.22", "-0.963285, -250.768, 23.128, 0.22", "-0.967319, -251.283, 23.176, 0.96", "-1.00652, -251.906, 23.1763, 1.25", "-1.05741, -252.628, 23.1538, 0.59", "-1.11079, -253.586, 23.0717, 0.37", "-1.11297, -253.646, 23.0659, 0.37", "-1.07766, -254.275, 23.0375, 0.37", "-1.00949, -254.768, 23.0738, 1.25", "-0.864288, -255.656, 23.2884, 0.52", "-0.788341, -256.25, 23.5133, 0.52", "-0.78551, -256.303, 23.5378, 0.52", "-0.847957, -257.003, 23.8548, 0.52", "-1.06076, -257.844, 24.2267, 0.29", "-1.30739, -258.515, 24.4903, 0.29", "-1.52727, -259.001, 24.6429, 0.44", "-1.78025, -259.527, 24.7848, 0.37", "-2.10212, -260.223, 24.9477, 0.29", "-2.3935, -260.94, 25.0773, 0.74", "-2.5092, -261.453, 25.1383, 1.18", "-2.52584, -262.013, 25.1934, 1.25", "-2.46404, -262.634, 25.2622, 1.4", "-2.38228, -263.087, 25.3137, 1.33", "-2.20215, -263.903, 25.4057, 0.29", "-1.98946, -264.847, 25.5009, 0.29", "-1.84684, -265.576, 25.5496, 0.29", "-1.78151, -265.966, 25.5624, 0.88", "-1.71615, -266.486, 25.5219, 1.11", "-1.67649, -267.076, 25.4285, 0.96", "-1.67516, -267.132, 25.4166, 0.96", "-1.69156, -267.889, 25.2913, 0.44", "-1.69188, -267.946, 25.2852, 0.44", "-1.70236, -268.952, 25.2325, 0.29", "-1.7344, -269.773, 25.2408, 0.29", "-1.79222, -270.413, 25.2828, 0.29", "-1.93486, -271.3, 25.4382, 0.29", "-2.03194, -271.76, 25.5593, 0.22", "-2.14488, -272.2, 25.6822, 1.03", "-2.27102, -272.699, 25.7691, 1.4", "-2.33634, -273.004, 25.768, 1.4", "-2.45779, -274.11, 25.5518, 0.29", "-2.46046, -274.636, 25.3795, 0.44", "-2.41939, -275.221, 25.1555, 0.44", "-2.22242, -276.799, 24.5103, 1.03", "-2.11871, -277.475, 24.2162, 1.03", "-1.9465, -278.541, 23.7348, 0.52", "-1.83548, -279.291, 23.3829, 0.29", "-1.83051, -279.338, 23.3633, 0.29", "-1.76745, -280.12, 23.1069, 0.44", "-1.73308, -280.482, 23.0364, 0.81", "-1.65706, -281.018, 22.9797, 1.11", "-1.53001, -281.719, 22.9895, 0.66", "-1.27166, -282.816, 23.0753, 0.37", "-1.05717, -283.67, 23.1608, 0.37", "-0.814055, -284.624, 23.2562, 0.37", "-0.592369, -285.508, 23.3106, 0.29", "-0.430738, -286.165, 23.3317, 1.11", "-0.276699, -286.873, 23.3183, 1.55", "-0.124796, -287.805, 23.2569, 1.25", "-0.0397586, -288.605, 23.1332, 0.74", "0.0130466, -289.501, 22.9244, 0.29", "0.0539456, -290.075, 22.75, 0.29", "0.150764, -290.807, 22.5415, 0.29", "0.222195, -291.192, 22.4497, 0.29", "0.350886, -291.669, 22.3817, 0.29", "0.488478, -292.072, 22.3616, 0.96", "0.649489, -292.519, 22.3787, 0.96", "1.10898, -293.765, 22.4777, 0.15", "1.12841, -293.814, 22.4841, 0.15", "1.32884, -294.323, 22.5529, 0.15", "1.35212, -294.383, 22.5605, 0.15", "1.53864, -294.881, 22.606, 0.15", "1.68256, -295.364, 22.6278, 0.88", "1.78273, -295.811, 22.6467, 1.25", "1.83479, -296.101, 22.6657, 1.55", "1.89423, -296.697, 22.7284, 0.74", "1.93696, -297.537, 22.8347, 0.22", "1.92795, -298.239, 22.9446, 0.22", "1.89159, -298.787, 23.0379, 0.66", "1.82305, -299.45, 23.1783, 0.88", "1.63452, -300.624, 23.449, 0.22", "1.5326, -301.066, 23.5541, 0.74", "1.2697, -302.004, 23.7767, 0.96", "1.08443, -302.595, 23.9008, 1.25", "0.824311, -303.316, 23.9945, 1.25", "0.46492, -304.182, 24.0607, 0.22", "0.117798, -304.954, 24.0579, 0.22", "0.0933634, -305.014, 24.0542, 0.22", "-0.0348538, -305.411, 23.9903, 0.74", "-0.228559, -306.379, 23.786, 0.22", "-0.229862, -306.441, 23.7709, 0.22", "-0.152868, -306.841, 23.696, 0.29", "0.0994679, -307.635, 23.5934, 0.29", "0.306335, -308.214, 23.5518, 0.29", "0.473869, -308.667, 23.5443, 1.18", "0.650838, -309.211, 23.5479, 1.62", "0.71688, -309.501, 23.5282, 1.62", "0.783649, -310.091, 23.4689, 0.96", "0.788323, -310.77, 23.4043, 0.29", "0.761931, -311.387, 23.3481, 0.22", "0.710184, -312.111, 23.2712, 1.25", "0.603845, -313.197, 23.1453, 1.25", "0.520507, -313.849, 23.0647, 1.25", "0.350643, -314.913, 22.9247, 0.22", "0.221184, -315.665, 22.8274, 1.47" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "1.35764, -232.274, 21.4832, 0.29", "1.1351, -230.882, 21.7981, 0.29", "1.04075, -230.218, 21.9254, 0.29", "1.03684, -230.169, 21.9323, 0.29", "1.11291, -229.418, 22.037, 0.29", "1.13007, -229.249, 22.0606, 0.29", "1.194, -228.618, 22.1486, 0.29", "1.22027, -228.498, 22.1539, 0.29", "1.53005, -227.505, 22.2144, 0.29", "1.99668, -226.229, 22.3051, 0.29" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-113.748, -104.971, 65.6621, 0.29", "-115.26, -105.1, 67.2519, 0.29", "-115.931, -105.188, 67.935, 0.59", "-116.683, -105.323, 68.6617, 0.52", "-117.646, -105.541, 69.5683, 0.52", "-118.343, -105.732, 70.197, 0.29", "-119.128, -105.968, 70.8922, 1.47", "-119.491, -106.118, 71.2091, 1.69", "-119.95, -106.36, 71.6176, 1.47", "-120.526, -106.729, 72.092, 1.18", "-121.23, -107.247, 72.6011, 0.59", "-121.275, -107.285, 72.6329, 0.59", "-122.069, -108.009, 73.1957, 0.59", "-122.643, -108.495, 73.5986, 1.25", "-123.121, -108.866, 73.9319, 0.88", "-124.104, -109.571, 74.6004, 0.37", "-124.672, -109.94, 74.9929, 1.11", "-125.64, -110.492, 75.6492, 0.22", "-126.309, -110.824, 76.0699, 0.22", "-126.709, -111.009, 76.3075, 0.22", "-126.765, -111.034, 76.3369, 0.22", "-127.396, -111.311, 76.6375, 0.81", "-127.882, -111.554, 76.8558, 1.11", "-128.985, -112.262, 77.2994, 0.29", "-129.759, -112.826, 77.5786, 1.18", "-130.138, -113.116, 77.723, 1.62", "-130.38, -113.302, 77.8205, 1.62", "-130.437, -113.344, 77.8471, 1.62", "-130.991, -113.729, 78.1661, 1.03", "-132.01, -114.3, 78.8633, 0.29", "-132.789, -114.556, 79.4492, 0.22", "-132.842, -114.562, 79.4904, 0.22", "-133.669, -114.506, 80.15, 1.47", "-133.99, -114.45, 80.4084, 1.69", "-134.702, -114.245, 80.978, 1.69", "-135.938, -113.8, 81.9303, 0.29", "-136.712, -113.53, 82.4339, 0.29", "-137.604, -113.241, 82.9439, 0.22", "-138.036, -113.115, 83.1552, 0.66", "-138.576, -112.995, 83.3912, 0.74", "-139.137, -112.916, 83.6364, 0.74", "-140.234, -112.849, 84.1043, 0.29", "-140.64, -112.841, 84.2798, 0.74", "-141.23, -112.827, 84.5236, 0.74", "-142.212, -112.794, 84.9568, 0.22", "-143.304, -112.761, 85.4907, 0.22", "-143.754, -112.747, 85.75, 1.18", "-144.514, -112.736, 86.3145, 1.62" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-113.748, -104.971, 65.6621, 0.29", "-114.245, -103.672, 65.571, 0.29", "-114.493, -103.075, 65.524, 0.37", "-114.631, -102.731, 65.4571, 0.37", "-115.153, -101.226, 65.2214, 0.22", "-115.196, -101.093, 65.203, 0.22", "-115.51, -100.056, 65.0654, 0.59", "-115.576, -99.8443, 65.0404, 0.59", "-115.966, -98.4627, 64.8741, 0.22", "-116.385, -96.8175, 64.6518, 0.22", "-116.463, -96.4447, 64.5847, 0.59", "-116.538, -95.9797, 64.5144, 0.59" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "34.5248, 150.286, 9.7782, 0.81", "35.5949, 151.123, 10.5426, 0.81", "36.3683, 151.763, 11.1294, 0.15", "36.4111, 151.796, 11.1663, 0.15", "36.9918, 152.255, 11.7761, 0.96", "37.397, 152.576, 12.2439, 1.25", "38.3194, 153.307, 13.3639, 0.29", "38.7479, 153.656, 13.9551, 0.29", "39.4668, 154.199, 14.98, 0.22", "40.2529, 154.721, 16.0539, 0.96", "40.5928, 154.912, 16.5061, 0.96", "40.6456, 154.935, 16.574, 0.96", "41.1959, 155.11, 17.218, 0.29", "41.7001, 155.23, 17.7567, 0.22", "42.4951, 155.388, 18.6533, 0.22", "43.0518, 155.487, 19.2939, 0.96", "43.8357, 155.65, 20.2878, 0.22", "44.1132, 155.718, 20.6746, 0.96", "44.4021, 155.811, 21.1325, 1.4", "45.4884, 156.338, 23.0895, 0.52", "45.8324, 156.599, 23.7917, 0.22", "46.1019, 156.862, 24.3388, 0.22", "46.132, 156.892, 24.3891, 0.22", "46.3932, 157.084, 24.8032, 0.22", "46.7211, 157.339, 25.4329, 0.96", "46.8092, 157.408, 25.5946, 0.96", "46.8727, 157.455, 25.7141, 0.96", "47.4126, 157.775, 26.6529, 0.22", "48.2201, 158.187, 27.9546, 1.11", "49.0826, 158.628, 29.4515, 0.22", "49.3792, 158.792, 29.993, 0.52", "49.8133, 159.04, 30.7885, 0.66", "50.4981, 159.423, 31.9967, 0.22", "50.9263, 159.641, 32.6866, 1.03", "51.7803, 159.958, 33.8387, 0.52", "52.5347, 160.117, 34.7419, 0.29", "53.2934, 160.196, 35.6447, 1.11", "53.6725, 160.215, 36.102, 1.4", "54.5816, 160.239, 37.1387, 0.22", "55.0245, 160.235, 37.6103, 0.59", "55.3819, 160.219, 37.9323, 0.59", "56.0424, 160.18, 38.4905, 0.22", "56.8447, 160.142, 39.1451, 0.22", "57.3191, 160.118, 39.5397, 0.74", "57.5296, 160.11, 39.7134, 0.74", "58.3992, 160.092, 40.3903, 0.22", "58.7307, 160.082, 40.6219, 0.59", "58.9034, 160.072, 40.7258, 0.59", "59.9639, 159.963, 41.2839, 0.22", "60.1381, 159.94, 41.3743, 0.22", "61.0225, 159.82, 41.8181, 0.22", "61.6865, 159.736, 42.1332, 0.22", "62.2687, 159.687, 42.4051, 0.88", "62.9894, 159.664, 42.7271, 0.96" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "34.5248, 150.286, 9.7782, 0.29", "35.2276, 151.527, 9.61256, 0.29", "36.0757, 152.89, 9.44597, 0.29", "37.3427, 154.851, 9.16459, 0.22", "37.9295, 155.792, 9.02249, 0.88", "39.1154, 157.78, 8.71966, 0.22", "39.7423, 158.883, 8.55887, 0.22", "39.793, 158.972, 8.54684, 0.22", "40.4343, 160.189, 8.37474, 0.22", "40.8104, 161.222, 8.21793, 0.88", "40.9338, 161.744, 8.14109, 1.25", "41.0089, 162.576, 8.04871, 0.88", "41.0376, 163.378, 7.9553, 0.29", "41.0953, 164.276, 7.89421, 0.22", "41.2863, 165.394, 7.92763, 1.25", "41.323, 165.529, 7.93977, 1.25", "41.5252, 166.151, 8.01841, 1.25", "41.8907, 167.226, 8.16381, 0.88", "42.5613, 169.066, 8.44412, 0.22", "43.2615, 170.889, 8.7608, 0.22", "43.5431, 171.611, 8.90049, 0.96", "43.76, 172.149, 9.00879, 0.96", "44.4399, 173.745, 9.32152, 0.22", "44.4802, 173.837, 9.33906, 0.22", "44.9908, 175.059, 9.55289, 0.88", "45.3143, 175.888, 9.68196, 0.81", "45.7631, 177.006, 9.86331, 1.11", "46.422, 178.641, 10.0855, 0.29", "46.977, 179.999, 10.2519, 0.22", "47.2077, 180.568, 10.3122, 0.96", "47.5418, 181.364, 10.3908, 1.25", "47.9106, 182.208, 10.4738, 1.25", "48.6884, 183.698, 10.647, 0.29", "49.3977, 184.706, 10.8377, 0.22", "49.9706, 185.376, 11.0035, 0.88", "50.6649, 186.08, 11.2217, 1.03", "50.7958, 186.198, 11.2667, 1.03", "52.1533, 187.403, 11.7884, 0.22", "52.9643, 188.216, 12.1047, 0.22", "53.8106, 189.305, 12.3973, 0.59", "53.8634, 189.391, 12.4138, 0.59", "54.2089, 190.07, 12.5145, 0.88", "54.7192, 191.268, 12.6622, 1.33", "55.5025, 193.613, 12.8838, 0.22", "55.8261, 194.642, 12.9731, 0.96", "56.0915, 195.344, 13.0736, 1.11", "56.2091, 195.609, 13.1292, 1.11", "56.7316, 196.56, 13.4232, 0.81", "56.8381, 196.714, 13.4925, 0.81", "57.4921, 197.514, 13.983, 0.22", "58.4256, 198.57, 14.6658, 0.29", "58.9762, 199.183, 15.0655, 0.29", "59.3914, 199.682, 15.366, 0.29", "59.8512, 200.334, 15.6411, 0.29", "60.1838, 200.936, 15.7984, 0.96", "60.4302, 201.458, 15.8628, 1.18", "60.4704, 201.546, 15.8687, 1.18", "60.809, 202.267, 15.9091, 1.18", "61.9135, 204.413, 16.0563, 0.22", "62.6182, 205.691, 16.1713, 0.22", "63.5319, 207.296, 16.3544, 0.96", "64.0439, 208.139, 16.4862, 1.33", "64.1004, 208.223, 16.5049, 1.33", "64.6164, 208.919, 16.706, 1.33", "65.3752, 209.9, 17.0585, 1.03", "66.2093, 210.961, 17.4739, 0.88", "67.357, 212.521, 18.1334, 0.22", "68.3879, 213.987, 18.7345, 0.22", "68.4342, 214.053, 18.7616, 0.22", "68.991, 214.956, 19.0749, 1.03", "69.4425, 215.823, 19.3663, 1.25", "70.0625, 217.363, 19.8463, 0.22", "70.2725, 218.15, 20.0592, 0.22", "70.2863, 218.227, 20.0772, 0.22", "70.5677, 220.429, 20.6197, 0.37", "70.6941, 222.009, 21.0133, 0.22", "70.7465, 223.15, 21.2975, 0.88", "70.7659, 223.895, 21.4864, 1.25", "70.7877, 224.83, 21.741, 0.96", "70.8545, 226.6, 22.2229, 0.22", "70.9142, 227.422, 22.4571, 0.66", "70.9337, 227.777, 22.5158, 0.66", "70.9288, 227.963, 22.5273, 0.66", "70.8692, 228.766, 22.4936, 0.22", "70.7972, 229.571, 22.3382, 0.22", "70.7944, 229.647, 22.3102, 0.22", "70.8316, 230.642, 21.9267, 0.22", "70.9295, 231.651, 21.5379, 1.03", "71.1276, 232.565, 21.2264, 1.18", "71.4829, 233.507, 20.9413, 1.18", "72.2906, 235.107, 20.5623, 0.22", "72.7843, 235.922, 20.3909, 0.22", "72.8675, 236.046, 20.3702, 0.22", "73.6738, 237.276, 20.1414, 0.22", "74.1354, 238.143, 19.9852, 1.03", "74.45, 238.872, 19.8651, 1.25", "74.9035, 240.207, 19.6636, 1.11", "75.2445, 241.384, 19.494, 0.74", "75.7578, 243.237, 19.2746, 0.22", "76.169, 244.891, 19.1074, 0.22", "76.2141, 245.062, 19.0998, 0.22", "76.5397, 245.996, 19.0962, 0.22", "76.9655, 246.975, 19.1625, 0.88", "77.3508, 247.673, 19.2429, 1.33", "77.4034, 247.754, 19.2569, 1.33", "77.5654, 247.992, 19.289, 1.33", "78.9741, 250.189, 19.4908, 0.22", "79.5696, 251.244, 19.5234, 0.22", "79.8602, 251.843, 19.5137, 0.81", "80.0884, 252.458, 19.5048, 0.81", "80.4318, 253.799, 19.5139, 0.22", "80.4424, 253.9, 19.521, 0.22", "80.3773, 254.772, 19.6657, 0.22", "80.3649, 254.872, 19.6852, 0.22", "80.1994, 256.273, 19.9994, 0.74", "80.0755, 257.441, 20.2991, 1.33", "80.004, 258.457, 20.601, 1.33", "79.9851, 259.319, 20.8556, 0.88", "80.0267, 260.752, 21.279, 0.44", "80.0789, 261.633, 21.5087, 0.59", "80.0936, 261.754, 21.5281, 0.59", "80.1715, 262.38, 21.5688, 0.59", "80.2484, 263.171, 21.5266, 0.37", "80.2488, 263.26, 21.514, 0.37", "80.1544, 264.022, 21.3382, 0.37", "79.9237, 265.19, 21.0358, 0.37", "79.7402, 266.138, 20.8042, 1.18", "79.6065, 266.82, 20.6414, 1.62", "79.4419, 267.774, 20.4387, 0.88", "79.2681, 268.97, 20.2307, 0.22", "79.1615, 270.127, 20.1081, 0.22", "79.0967, 271.142, 20.0727, 0.81", "79.0935, 271.238, 20.0707, 0.81", "79.1013, 271.947, 20.072, 1.11", "79.1078, 272.055, 20.0749, 1.11", "79.2599, 273.632, 20.1458, 0.22", "79.3409, 275.197, 20.1812, 1.25", "79.3103, 276.176, 20.1662, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-99.0803, 87.6336, -17.7141, 0.22", "-100.517, 87.4673, -16.0012, 0.22", "-100.575, 87.4548, -15.9303, 0.22", "-100.953, 87.3398, -15.4916, 0.22", "-102.065, 86.9515, -14.2445, 1.03", "-102.687, 86.7127, -13.5815, 1.25", "-104.105, 86.1572, -12.225, 0.22", "-104.385, 86.0322, -12.0067, 0.74", "-105.138, 85.7029, -11.4749, 0.22", "-105.79, 85.4228, -11.0588, 0.88", "-106.462, 85.1564, -10.6924, 1.03", "-107.709, 84.6971, -10.1008, 0.22", "-108.609, 84.377, -9.76798, 0.22", "-109.379, 84.0769, -9.47152, 0.74", "-109.661, 83.9514, -9.35868, 1.33", "-109.734, 83.913, -9.33022, 1.33", "-110.102, 83.6908, -9.18244, 1.33", "-110.744, 83.1983, -8.83076, 0.88", "-111.51, 82.5236, -8.32768, 0.29", "-112.547, 81.4799, -7.56875, 0.22", "-113.018, 80.9517, -7.19799, 0.88", "-113.408, 80.3979, -6.7956, 1.03", "-114.132, 79.1334, -5.84759, 0.22", "-114.157, 79.0796, -5.80669, 0.22", "-114.393, 78.3457, -5.19116, 1.25", "-114.497, 77.8165, -4.67465, 1.47", "-114.809, 76.2782, -2.98145, 0.22", "-114.821, 76.2222, -2.91002, 0.22", "-114.954, 75.8644, -2.39627, 0.74", "-115.535, 74.7307, -0.540196, 0.22", "-116.212, 73.7707, 1.30799, 1.11", "-116.506, 73.4715, 1.95994, 1.33", "-117.136, 73.0112, 3.09622, 0.88", "-117.993, 72.5243, 4.36255, 0.22", "-118.556, 72.2949, 5.01745, 1.11", "-118.929, 72.1859, 5.33068, 1.25", "-119.55, 72.0257, 5.7569, 0.96", "-119.608, 72.0072, 5.79681, 0.96", "-121.033, 71.5525, 6.70568, 0.22", "-122.222, 71.1784, 7.49546, 0.66", "-122.658, 71.0412, 7.79965, 0.96", "-123.142, 70.8777, 8.15315, 0.81", "-124.149, 70.5154, 8.91861, 0.22", "-124.855, 70.2339, 9.46752, 0.52", "-125.181, 70.0477, 9.73887, 0.66", "-125.991, 69.4534, 10.4034, 0.22", "-126.54, 68.969, 10.8946, 0.74", "-126.599, 68.9073, 10.9517, 0.74", "-126.811, 68.6649, 11.1556, 0.88", "-127.912, 67.2896, 12.2792, 0.22", "-128.235, 66.8753, 12.6028, 0.96", "-128.814, 66.1274, 13.1667, 0.22", "-128.854, 66.0807, 13.2046, 0.22", "-129.385, 65.5672, 13.6759, 0.44", "-129.777, 65.2676, 13.9968, 0.44", "-130.648, 64.8308, 14.6122, 0.22", "-130.704, 64.8086, 14.653, 0.22", "-131.302, 64.5605, 15.0859, 0.22", "-131.841, 64.3279, 15.5482, 0.81", "-132.131, 64.1993, 15.8666, 1.18", "-132.531, 63.9976, 16.4034, 0.74", "-133.358, 63.4516, 17.8841, 0.22", "-133.712, 63.1275, 18.6601, 0.22", "-134.206, 62.5333, 19.9871, 0.22", "-134.664, 61.8369, 21.521, 0.88", "-135.063, 61.142, 23.1456, 1.11", "-135.478, 60.3267, 25.1172, 0.22", "-135.635, 59.9911, 25.9621, 0.74", "-135.648, 59.9666, 26.0293, 0.74", "-135.927, 59.5121, 27.3634, 1.03", "-136.485, 58.8658, 29.5574, 0.29", "-136.583, 58.788, 29.8615, 0.66", "-136.609, 58.7729, 29.9331, 0.66", "-136.87, 58.6542, 30.5907, 0.81", "-137.271, 58.4772, 31.7939, 1.03", "-137.973, 58.1003, 34.1717, 0.22", "-138.173, 57.9595, 34.9501, 0.22", "-138.69, 57.4496, 37.2933, 0.88", "-138.861, 57.2495, 38.1046, 1.18", "-139.658, 56.2318, 41.9384, 0.29", "-139.836, 56.0154, 42.7155, 0.88", "-139.98, 55.867, 43.2413, 1.11", "-140.464, 55.3633, 44.9187, 0.22", "-140.712, 55.0989, 45.6042, 0.66", "-140.983, 54.8115, 46.2624, 0.96", "-141.605, 54.2463, 47.647, 0.22", "-141.98, 53.9635, 48.5198, 0.22", "-142.73, 53.4449, 50.3652, 0.81", "-143.158, 53.1421, 51.5137, 0.81", "-143.181, 53.1226, 51.5852, 0.81", "-143.967, 52.2993, 54.3215, 0.37", "-144.24, 51.9352, 55.3527, 0.88", "-144.308, 51.8097, 55.6732, 1.11", "-144.644, 51.0432, 57.3907, 0.29", "-144.657, 51.0056, 57.4683, 0.29", "-144.917, 50.2668, 58.9509, 0.29", "-145.094, 49.7987, 59.8198, 0.52", "-145.449, 48.8373, 61.7522, 0.29", "-145.576, 48.5342, 62.3979, 0.81", "-145.66, 48.3518, 62.8011, 0.96", "-145.997, 47.745, 64.2726, 0.29", "-146.145, 47.5523, 64.8029, 0.29", "-146.176, 47.5224, 64.8981, 0.29", "-146.757, 47.0711, 66.3416, 0.22", "-146.928, 46.8863, 66.8366, 1.03", "-147.457, 46.0932, 68.6087, 0.29", "-147.539, 45.8858, 68.9544, 0.96", "-147.563, 45.7818, 69.11, 0.96", "-147.557, 45.4839, 69.5184, 1.18", "-147.34, 44.4794, 70.7705, 0.15", "-147.308, 44.4221, 70.8269, 0.15", "-146.811, 43.9122, 71.1293, 0.15", "-146.722, 43.8306, 71.175, 0.15", "-145.384, 42.7314, 71.7477, 0.15" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-99.0803, 87.6336, -17.7141, 0.29", "-100.192, 89.5085, -18.2915, 0.29", "-100.686, 90.3373, -18.5248, 0.22", "-101.606, 91.9011, -18.9414, 0.52", "-102.201, 92.9647, -19.2068, 0.22", "-102.244, 93.0408, -19.2239, 0.22", "-102.79, 94.0072, -19.416, 0.52", "-102.872, 94.163, -19.4276, 0.52", "-102.959, 94.3178, -19.4361, 0.52", "-103.378, 94.8901, -19.5007, 0.22", "-103.95, 95.6026, -19.5987, 0.81", "-104.367, 96.0944, -19.6794, 1.18", "-104.715, 96.5456, -19.7594, 0.96", "-104.757, 96.6048, -19.7736, 0.96", "-105.789, 98.0564, -20.2236, 0.22", "-106.501, 99.0691, -20.5811, 0.22", "-107.077, 100.049, -21.0141, 0.44", "-107.805, 101.214, -21.614, 0.22", "-108.545, 102.514, -22.3308, 0.22", "-109.135, 103.663, -22.9748, 1.03", "-109.308, 104.068, -23.2, 1.4", "-110.137, 106.048, -24.3723, 1.18", "-110.94, 107.887, -25.4866, 0.22", "-111.62, 109.35, -26.3631, 0.22", "-111.837, 109.861, -26.6243, 0.22", "-112.141, 110.67, -26.9896, 0.74", "-112.388, 111.346, -27.2651, 0.74", "-112.626, 111.979, -27.4671, 0.74", "-113.002, 113.131, -27.7855, 0.22", "-113.411, 114.09, -28.0299, 0.22", "-113.822, 115.024, -28.2398, 1.25", "-113.97, 115.363, -28.3052, 1.47", "-114.201, 116.033, -28.4085, 0.74", "-114.427, 116.887, -28.4881, 0.22", "-114.449, 116.973, -28.4902, 0.22", "-114.688, 117.939, -28.5061, 0.37", "-114.706, 118.026, -28.5076, 0.37", "-114.894, 119.134, -28.5598, 0.22", "-114.989, 119.814, -28.6117, 0.96", "-115.177, 120.959, -28.7537, 0.22", "-115.209, 121.062, -28.7734, 0.22", "-115.512, 121.657, -28.9067, 0.22", "-115.605, 121.794, -28.9391, 0.22", "-116.038, 122.247, -29.0734, 0.22", "-117.18, 123.199, -29.3976, 0.81", "-118.397, 124.082, -29.7076, 0.22", "-119.201, 124.621, -29.8846, 0.88", "-119.361, 124.724, -29.9129, 1.03", "-120.503, 125.455, -30.0901, 0.22", "-121.219, 125.92, -30.1745, 0.29", "-121.852, 126.335, -30.2092, 0.29", "-122.43, 126.786, -30.2243, 0.29", "-123.287, 127.543, -30.2549, 0.37", "-124.193, 128.422, -30.2761, 1.03", "-124.864, 129.151, -30.2763, 1.47", "-125.373, 129.727, -30.2827, 1.33", "-126.008, 130.428, -30.3413, 0.22", "-126.627, 131.085, -30.4627, 0.22", "-127.14, 131.63, -30.6223, 0.96", "-127.188, 131.684, -30.6419, 0.96", "-127.443, 131.974, -30.7744, 0.96", "-128.323, 133.005, -31.2718, 0.22", "-128.902, 133.637, -31.5754, 0.74", "-129.506, 134.3, -31.87, 0.22", "-129.952, 134.814, -32.0683, 0.22", "-130.001, 134.872, -32.0869, 0.22", "-130.421, 135.399, -32.2054, 1.03", "-131.202, 136.431, -32.2688, 0.22", "-131.753, 137.152, -32.2499, 0.37", "-132.108, 137.564, -32.2183, 0.22", "-132.195, 137.656, -32.2079, 0.22", "-132.823, 138.297, -32.1525, 0.22", "-133.386, 138.848, -32.1178, 0.66", "-133.675, 139.122, -32.1151, 0.96", "-134.355, 139.707, -32.1483, 0.22", "-134.879, 140.095, -32.1799, 0.22", "-135.827, 140.71, -32.2336, 0.81", "-135.904, 140.751, -32.2396, 0.81", "-136.592, 141.08, -32.3042, 0.59", "-137.253, 141.399, -32.3572, 0.59", "-137.859, 141.76, -32.3915, 0.88", "-138.34, 142.06, -32.4059, 0.52", "-139.13, 142.612, -32.3912, 0.22", "-139.195, 142.66, -32.3881, 0.22", "-139.738, 143.098, -32.3417, 0.22", "-140.823, 144.053, -32.2467, 1.33", "-141.229, 144.442, -32.2095, 0.96", "-141.809, 145.027, -32.1454, 0.22", "-142.362, 145.605, -32.0612, 0.22", "-142.817, 146.065, -31.9871, 0.22", "-143.404, 146.636, -31.883, 0.52", "-143.496, 146.727, -31.8746, 0.52", "-143.823, 147.095, -31.8756, 0.88", "-144.115, 147.468, -31.9079, 1.11", "-144.159, 147.523, -31.9203, 1.11", "-144.677, 148.13, -32.118, 0.88", "-145.65, 149.15, -32.5398, 0.22", "-146.267, 149.743, -32.8163, 1.25", "-146.558, 149.997, -32.9448, 0.96", "-147.759, 150.986, -33.4595, 0.22", "-147.809, 151.025, -33.4804, 0.22", "-148.362, 151.471, -33.6999, 0.22", "-148.441, 151.537, -33.7242, 0.22", "-148.971, 151.963, -33.8755, 0.88", "-149.258, 152.203, -33.9404, 0.88", "-149.959, 152.841, -34.0653, 0.22", "-150.716, 153.561, -34.203, 0.88", "-151.084, 153.95, -34.2589, 0.88", "-152.029, 154.999, -34.3901, 0.15", "-152.687, 155.735, -34.4692, 0.66", "-152.741, 155.794, -34.4736, 0.66", "-153.057, 156.13, -34.4828, 0.59", "-153.744, 156.806, -34.4857, 0.22", "-153.8, 156.859, -34.4896, 0.22", "-154.263, 157.285, -34.5285, 0.22", "-154.324, 157.332, -34.5375, 0.22", "-154.795, 157.678, -34.6278, 0.66", "-155.374, 158.065, -34.7508, 0.74", "-156.465, 158.833, -34.9075, 0.15", "-156.595, 158.941, -34.9109, 0.15", "-156.977, 159.282, -34.894, 0.15", "-157.625, 159.916, -34.8304, 0.88", "-157.874, 160.198, -34.7941, 1.18", "-158.699, 161.298, -34.7187, 0.22", "-159.28, 162.163, -34.6768, 0.22", "-159.793, 162.983, -34.6787, 0.22", "-160.21, 163.697, -34.7118, 0.96", "-160.546, 164.295, -34.7616, 1.18", "-161.257, 165.558, -34.9447, 0.22", "-161.59, 166.098, -35.078, 0.37", "-161.632, 166.163, -35.0943, 0.37", "-161.759, 166.344, -35.1352, 0.37", "-162.275, 166.952, -35.263, 0.22", "-162.481, 167.158, -35.2974, 0.22", "-163.124, 167.756, -35.3515, 0.66", "-163.42, 168.029, -35.3781, 0.96", "-164.122, 168.734, -35.4575, 1.03", "-164.398, 169.019, -35.5222, 1.25", "-165.135, 169.789, -35.7538, 0.22", "-165.638, 170.311, -35.9749, 0.59", "-166.354, 171.067, -36.3401, 0.22", "-166.793, 171.529, -36.5862, 0.22", "-167.848, 172.644, -37.2324, 1.18", "-168.165, 172.994, -37.4486, 1.18", "-169.336, 174.372, -38.3128, 0.22", "-169.835, 174.97, -38.6417, 0.44", "-169.93, 175.083, -38.6851, 0.44", "-169.977, 175.139, -38.6964, 0.44", "-170.73, 176.082, -38.7008, 0.22", "-171.308, 176.789, -38.6271, 0.22", "-172.079, 177.663, -38.3875, 0.22", "-172.976, 178.629, -38.0889, 1.25", "-173.354, 179.023, -37.9549, 1.18", "-173.812, 179.474, -37.7773, 0.74", "-174.368, 179.963, -37.5226, 0.22", "-174.997, 180.485, -37.2391, 0.52", "-183.162, 187.559, -39.8762, 0.52" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-158.592, 12.4137, 91.5819, 0.22", "-159.583, 12.2417, 91.9864, 0.22", "-160.129, 12.1479, 92.2167, 0.22", "-160.983, 11.9907, 92.5855, 1.11", "-161.228, 11.9498, 92.6744, 1.55", "-162.305, 11.7566, 93.027, 0.22", "-162.748, 11.6679, 93.1785, 0.66", "-162.816, 11.6538, 93.203, 0.66", "-163.226, 11.5791, 93.3604, 0.66", "-164.253, 11.4349, 93.8433, 0.22", "-164.832, 11.3854, 94.1521, 0.22", "-165.631, 11.3585, 94.6156, 0.74", "-166.083, 11.3587, 94.8938, 0.96", "-166.753, 11.3665, 95.3196, 0.96", "-167.633, 11.3636, 95.9031, 0.37", "-168.239, 11.3292, 96.3229, 0.22", "-168.692, 11.2861, 96.6099, 0.22", "-169.372, 11.1973, 96.9831, 0.88", "-170.024, 11.093, 97.3033, 1.33", "-170.84, 10.9631, 97.6454, 0.74", "-171.594, 10.8468, 97.9262, 0.22", "-172.309, 10.7351, 98.1918, 0.22", "-173.375, 10.5613, 98.5887, 0.66", "-173.875, 10.4804, 98.7745, 1.25", "-174.808, 10.3447, 99.1173, 1.55", "-176.341, 10.1422, 99.6444, 0.15", "-177.08, 10.0473, 99.8958, 1.25", "-178.006, 9.90539, 100.211, 0.81", "-178.713, 9.76365, 100.454, 0.66", "-179.402, 9.59586, 100.692, 0.88", "-179.946, 9.43328, 100.877, 1.03" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-158.592, 12.4137, 91.5819, 0.22", "-158.73, 13.1442, 91.3112, 0.22", "-158.748, 13.2082, 91.2868, 0.22", "-158.972, 13.9526, 90.9968, 0.66", "-158.99, 14.0075, 90.9709, 0.66", "-159.242, 14.8577, 90.5318, 0.22", "-159.264, 14.9353, 90.49, 0.22", "-159.392, 15.6559, 90.0474, 0.29", "-159.403, 15.7226, 90.0039, 0.29", "-159.551, 16.7226, 89.2792, 0.22", "-159.615, 17.1901, 88.9396, 0.22", "-159.62, 17.2451, 88.9006, 0.22", "-159.627, 18.0093, 88.324, 0.22" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "39.2543, 79.1199, 39.6558, 0.52", "40.5293, 78.9982, 39.242, 0.52", "41.2322, 78.9582, 39.0307, 0.74", "41.81, 78.9453, 38.879, 0.74", "41.8691, 78.9445, 38.8688, 0.74", "42.4243, 78.9479, 38.8071, 0.74", "43.0532, 78.9738, 38.7554, 0.59", "43.1086, 78.9799, 38.7546, 0.59", "43.9576, 79.0865, 38.7466, 0.44", "45.214, 79.2389, 38.7285, 0.22", "45.7897, 79.2933, 38.7086, 1.18", "46.4008, 79.3374, 38.6798, 1.18", "47.5479, 79.4004, 38.6079, 0.44", "48.2535, 79.4234, 38.56, 0.44", "49.2481, 79.4437, 38.4984, 0.37", "49.928, 79.4474, 38.452, 0.66", "49.9928, 79.4461, 38.4483, 0.66", "50.5761, 79.4375, 38.4858, 0.66", "51.5014, 79.4787, 38.6776, 0.29", "52.0343, 79.5545, 38.8523, 0.88", "52.2103, 79.5995, 38.9242, 0.88", "52.322, 79.6375, 38.9701, 0.88", "53.7501, 80.2108, 39.5008, 0.29", "54.2235, 80.4228, 39.6557, 0.29", "54.8852, 80.7245, 39.8163, 1.25", "55.324, 80.9203, 39.8868, 1.55", "56.0491, 81.2405, 39.9786, 0.88", "56.5108, 81.4389, 40.0079, 0.66", "57.268, 81.748, 39.9566, 0.44", "58.0339, 82.0473, 39.9055, 0.44", "58.553, 82.2401, 39.8671, 0.81" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "39.2543, 79.1199, 39.6558, 0.44", "39.4452, 80.2263, 40.4465, 0.44", "39.7809, 81.6859, 41.546, 0.44", "40.0622, 82.6623, 42.2886, 0.44", "40.0808, 82.7227, 42.3316, 0.44", "40.2956, 83.3936, 42.7888, 1.18", "40.8851, 85.0735, 43.8164, 0.81", "40.9257, 85.1434, 43.8605, 0.81", "41.0999, 85.4384, 44.0586, 0.37", "41.4943, 86.1123, 44.5606, 0.37", "41.5295, 86.1813, 44.6106, 0.37", "41.9021, 86.9954, 45.1885, 0.37", "42.5638, 88.6817, 46.1586, 0.37", "43.1198, 89.8546, 46.7745, 0.29", "43.1706, 89.9373, 46.8087, 0.29", "43.8928, 90.7088, 46.9334, 0.29", "43.9555, 90.761, 46.922, 0.29", "44.7051, 91.3066, 46.6383, 0.29", "45.676, 92.0929, 46.1514, 0.29", "46.7053, 92.843, 45.6166, 0.29", "47.4412, 93.3544, 45.2327, 0.29", "48.6394, 94.1303, 44.6022, 0.29", "48.8468, 94.2747, 44.4919, 0.29", "50.0836, 95.3127, 43.8191, 1.47" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-21.4534, 41.8284, 29.1147, 0.59", "-20.6022, 42.1066, 29.6428, 0.59", "-19.6575, 42.5423, 30.161, 0.52", "-19.5135, 42.6341, 30.2428, 0.52", "-18.7321, 43.3509, 30.7395, 0.81", "-18.6745, 43.4239, 30.783, 0.81", "-18.4563, 43.9749, 31.0689, 1.03", "-18.6599, 44.8354, 31.6059, 0.96", "-18.9395, 45.4007, 31.9639, 0.66", "-19.3849, 46.1107, 32.4165, 0.59", "-19.8745, 46.7248, 32.8189, 0.59", "-20.8484, 47.6321, 33.5513, 0.59", "-22.3376, 48.7491, 34.6146, 0.37", "-22.8342, 49.0835, 35.0001, 0.37", "-22.8941, 49.1233, 35.0546, 0.37", "-23.7003, 49.6824, 35.941, 0.37", "-24.6967, 50.5277, 37.3797, 0.37", "-24.7243, 50.566, 37.4407, 0.37", "-24.9009, 51.474, 38.603, 0.44", "-24.8448, 52.0282, 39.1964, 0.44", "-24.8261, 52.122, 39.2844, 0.44", "-24.6682, 52.7916, 39.8887, 0.44", "-24.4336, 54.0216, 40.9079, 0.44", "-24.3774, 54.9706, 41.6778, 0.59", "-24.4318, 55.4035, 42.0275, 0.59", "-24.7246, 56.2473, 42.8125, 0.59", "-25.1606, 57.0711, 43.8467, 0.81", "-25.3704, 57.3527, 44.4035, 0.81", "-25.4039, 57.3871, 44.5162, 0.81", "-25.5187, 57.5935, 45.6166, 1.03", "-25.4766, 57.7819, 47.0098, 0.74", "-25.2317, 58.0, 48.8653, 0.66", "-24.8371, 58.1974, 50.7557, 0.66", "-24.6371, 58.2996, 51.6478, 0.59", "-24.2336, 58.7457, 53.6837, 0.59", "-24.147, 58.9349, 54.1279, 0.44", "-24.0496, 59.402, 54.6829, 0.59", "-24.0471, 59.4633, 54.7281, 0.59", "-24.0051, 60.3849, 55.2631, 0.37", "-23.8588, 62.164, 56.3784, 0.37", "-23.7179, 63.3022, 57.1283, 0.37", "-23.5467, 64.045, 57.6862, 0.29", "-23.5277, 64.1074, 57.7414, 0.29", "-23.1444, 65.228, 58.8224, 0.29", "-22.6278, 66.4457, 60.0645, 0.88", "-22.6023, 66.5046, 60.1266, 0.88", "-22.5101, 66.8259, 60.457, 0.88", "-22.3907, 67.8516, 61.4216, 0.66", "-22.4142, 68.5459, 61.991, 0.52", "-22.5932, 69.5045, 62.6624, 0.44", "-22.7895, 70.2191, 63.0606, 0.44", "-22.8144, 70.2809, 63.0981, 0.44", "-23.369, 71.0384, 63.6399, 0.37", "-23.8867, 71.1231, 63.9369, 0.37", "-24.0405, 71.1174, 64.0301, 0.37", "-24.9727, 71.0277, 64.6956, 0.37", "-25.8917, 71.0116, 65.47, 0.59", "-26.6938, 71.1252, 66.2914, 0.59", "-27.5747, 71.4881, 67.5529, 1.03", "-27.8215, 72.1269, 68.6079, 0.29", "-27.747, 72.9517, 69.6031, 0.22", "-27.4836, 74.0931, 70.7585, 0.29", "-27.3265, 74.7385, 71.3136, 0.29", "-27.1076, 75.6242, 71.9946, 0.29", "-26.9076, 76.3453, 72.4539, 0.29", "-26.8672, 76.4705, 72.5306, 0.29", "-26.6894, 77.4046, 72.9106, 0.29", "-26.2173, 76.0136, 72.946, 0.29", "-26.1828, 75.9288, 72.9513, 0.29", "-25.5928, 74.9442, 72.9831, 0.22", "-24.7819, 74.0752, 72.9967, 0.88", "-24.3344, 73.6214, 72.9979, 1.03", "-23.1756, 72.5114, 72.989, 0.22", "-23.1091, 72.4563, 72.9882, 0.22", "-21.9725, 71.6341, 72.9559, 0.22", "-20.8697, 71.084, 72.883, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-21.4534, 41.8284, 29.1147, 0.74", "-22.5727, 40.805, 30.3447, 0.74", "-22.9199, 40.6384, 30.5812, 0.52", "-23.3101, 40.542, 30.7558, 0.37", "-24.0585, 40.4347, 31.0121, 0.37", "-24.7798, 40.3908, 31.1953, 0.37", "-25.3138, 40.4011, 31.2836, 0.37", "-26.0457, 40.4907, 31.3401, 0.59", "-26.4888, 40.5457, 31.423, 0.37", "-26.546, 40.5506, 31.4415, 0.37", "-27.0241, 40.5542, 31.6757, 0.37", "-27.8283, 40.4849, 32.3277, 0.74", "-28.4312, 40.3673, 33.0323, 0.74", "-29.0524, 40.1703, 34.1298, 0.29", "-29.3664, 40.0286, 34.9762, 0.59", "-29.5119, 39.8937, 35.7173, 0.44", "-29.5808, 39.6367, 36.9341, 0.44", "-29.5759, 39.624, 36.9889, 0.44", "-29.4402, 39.3971, 37.8194, 0.44", "-29.4354, 39.3786, 37.8645, 0.44", "-29.6106, 38.8623, 38.6262, 0.44", "-29.8654, 38.5283, 39.0778, 0.37", "-29.91, 38.4888, 39.1365, 0.37", "-30.4826, 38.1308, 39.7598, 0.66", "-31.1031, 37.8435, 40.3754, 0.66", "-31.1327, 37.8325, 40.403, 0.66", "-31.9525, 37.5975, 41.1241, 0.59", "-32.6833, 37.4314, 41.7289, 0.29", "-33.3275, 37.3428, 42.1971, 0.29", "-34.2709, 37.3274, 42.7903, 0.44", "-34.8328, 37.3934, 43.0909, 0.29", "-35.112, 37.4586, 43.2178, 0.29", "-35.5843, 37.6479, 43.4267, 0.29", "-36.1588, 37.9801, 43.6871, 0.74", "-36.3614, 38.1565, 43.7911, 1.03", "-36.8489, 38.7695, 44.0319, 0.29", "-37.1347, 39.2238, 44.2259, 0.29", "-37.6442, 40.1749, 44.7106, 0.81" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "179.913, -83.7353, -77.0643, 0.44", "182.738, -81.9868, -75.2262, 0.44", "183.967, -81.2029, -74.4556, 0.29", "185.412, -80.2702, -73.6036, 0.29", "186.701, -79.4332, -72.8766, 0.88", "187.826, -78.6702, -72.2855, 0.15", "188.273, -78.3356, -72.0615, 0.81", "188.34, -78.2756, -72.0402, 0.81", "188.751, -77.8078, -71.9237, 1.03", "188.796, -77.7459, -71.92, 1.03", "189.858, -76.3868, -71.9596, 0.22", "190.671, -75.4832, -72.0134, 0.22", "191.35, -74.8145, -72.066, 0.88", "191.415, -74.7561, -72.0717, 0.88", "192.233, -74.0705, -72.1488, 1.18", "194.482, -72.4193, -72.3985, 0.22", "195.223, -71.9712, -72.4948, 1.25", "196.567, -71.277, -72.6676, 0.22", "196.864, -71.1347, -72.7072, 0.37", "196.953, -71.0939, -72.7199, 0.37", "198.254, -70.6256, -72.8859, 0.15", "199.021, -70.4444, -73.0068, 1.03", "199.101, -70.4299, -73.0095, 1.03", "199.741, -70.344, -72.977, 1.25", "199.822, -70.3347, -72.9658, 1.25", "202.243, -70.1551, -72.467, 0.22", "203.215, -70.1495, -72.209, 0.22", "205.546, -70.2216, -71.5306, 0.22", "205.687, -70.2306, -71.4919, 0.22", "206.569, -70.3165, -71.2533, 1.18", "207.3, -70.3773, -71.0645, 0.96", "208.398, -70.432, -70.7971, 0.66", "208.747, -70.3972, -70.732, 0.66", "209.892, -70.0469, -70.7557, 0.29", "209.971, -70.0094, -70.7604, 0.29", "210.795, -69.4942, -70.845, 0.22", "211.251, -69.1502, -70.8858, 0.44", "212.405, -68.199, -70.9832, 0.22", "212.537, -68.0995, -70.98, 0.22", "213.396, -67.4805, -70.8992, 0.88", "214.208, -66.9281, -70.8051, 0.88", "214.287, -66.8761, -70.7943, 0.88", "215.093, -66.3234, -70.671, 0.88", "216.689, -65.0644, -70.4684, 0.22", "216.752, -65.0126, -70.4618, 0.22", "217.272, -64.5606, -70.4295, 0.88", "217.751, -64.14, -70.4347, 1.11", "217.822, -64.0741, -70.4415, 1.11", "219.06, -62.8963, -70.6798, 0.22", "219.819, -62.2105, -71.0316, 0.22", "220.501, -61.6101, -71.4523, 0.22", "221.191, -61.0208, -71.9466, 0.88", "221.698, -60.551, -72.3898, 1.11", "222.149, -60.0817, -72.8674, 1.11", "223.555, -58.4772, -74.5657, 0.29", "224.222, -57.696, -75.3716, 0.22", "224.271, -57.6415, -75.4273, 0.22", "225.052, -56.8893, -76.1571, 0.88", "225.108, -56.8412, -76.1993, 0.88", "226.406, -55.793, -76.9079, 0.22", "227.253, -55.1005, -77.3658, 0.22", "227.707, -54.7418, -77.6413, 0.74", "228.77, -53.8946, -78.3498, 0.22", "228.833, -53.8445, -78.3949, 0.22", "229.668, -53.133, -79.0744, 1.11", "231.709, -51.281, -80.9738, 0.22", "231.758, -51.2358, -81.0208, 0.22", "232.547, -50.5612, -81.7574, 0.96", "232.601, -50.5231, -81.8051, 0.96", "233.17, -50.2332, -82.2913, 1.11", "234.156, -49.9015, -83.0657, 0.29", "234.3, -49.8711, -83.1627, 0.29", "234.922, -49.7509, -83.6066, 0.15", "235.932, -49.5851, -84.3741, 1.18", "237.905, -49.2056, -85.8853, 0.22", "238.385, -49.1032, -86.2665, 0.74", "238.459, -49.0803, -86.3227, 0.74", "238.97, -48.879, -86.6481, 0.88", "239.107, -48.8111, -86.7211, 0.88", "239.897, -48.3381, -87.0779, 0.88", "240.042, -48.2474, -87.1322, 0.88", "241.294, -47.3726, -87.7117, 0.22", "242.35, -46.573, -88.2653, 0.22", "242.498, -46.4545, -88.3503, 0.22", "243.61, -45.6132, -89.0032, 1.11", "243.811, -45.4632, -89.1212, 1.11", "245.197, -44.4533, -89.9063, 0.22", "245.27, -44.4044, -89.9371, 0.22", "245.78, -44.0473, -90.0964, 0.59", "246.777, -43.3785, -90.3119, 0.22", "247.401, -42.9698, -90.3874, 1.03", "247.922, -42.6257, -90.4327, 1.03", "250.015, -41.2541, -90.5199, 0.22", "250.738, -40.7293, -90.5899, 0.22", "250.799, -40.6771, -90.603, 0.22", "251.248, -40.2168, -90.7649, 0.74", "251.306, -40.1568, -90.7902, 0.74", "251.599, -39.843, -90.9374, 0.74", "252.547, -38.8664, -91.49, 0.22", "253.336, -38.1514, -91.9083, 0.96", "253.816, -37.7092, -92.1897, 1.25", "254.994, -36.593, -92.8065, 0.29", "255.053, -36.5355, -92.8345, 0.29", "255.532, -36.1002, -93.0551, 0.37", "255.597, -36.0417, -93.0836, 0.37", "256.957, -34.7807, -93.7219, 0.22", "257.914, -33.8346, -94.2438, 0.81", "257.976, -33.7738, -94.2811, 0.81", "259.791, -32.1409, -95.3877, 0.22", "260.191, -31.7988, -95.6342, 0.88", "261.377, -30.9107, -96.5857, 0.22", "261.602, -30.7651, -96.8007, 0.44", "262.571, -30.1835, -97.9144, 0.22", "263.39, -29.7577, -99.0283, 0.88", "263.441, -29.7365, -99.1061, 0.88", "265.41, -29.0838, -102.248, 0.22", "265.802, -28.9907, -102.932, 0.88", "265.843, -28.9814, -103.003, 0.88", "267.166, -28.6636, -105.307, 0.22", "267.697, -28.5269, -106.161, 1.03", "267.743, -28.5148, -106.228, 1.03", "269.927, -27.7431, -109.008, 0.22", "270.465, -27.5191, -109.692, 0.74", "271.88, -26.7998, -111.425, 0.22", "272.283, -26.5398, -111.896, 0.74", "272.333, -26.5001, -111.956, 0.74", "273.67, -25.168, -113.525, 0.22", "273.709, -25.1125, -113.569, 0.22", "274.033, -24.5012, -114.008, 0.66", "274.139, -24.2515, -114.165, 0.66", "274.711, -22.7965, -115.094, 0.22", "274.938, -22.1763, -115.492, 0.52", "275.243, -21.1862, -116.13, 0.22", "275.395, -20.618, -116.501, 0.81", "285.159, -13.6352, -118.369, 0.81" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "179.913, -83.7353, -77.0643, 0.81", "180.621, -84.4032, -77.4343, 0.81", "181.482, -85.0758, -77.8227, 0.22", "182.18, -85.516, -78.1094, 0.22", "182.225, -85.5412, -78.127, 0.22", "182.821, -85.8487, -78.3524, 0.81", "183.392, -86.1297, -78.5597, 1.18", "183.998, -86.3546, -78.7668, 1.33", "185.036, -86.6825, -79.0821, 0.22", "185.365, -86.7921, -79.1861, 0.66", "185.427, -86.8131, -79.2058, 0.66", "185.873, -86.9805, -79.3419, 0.66", "185.924, -87.0046, -79.3602, 0.66", "186.629, -87.4305, -79.6425, 0.22", "186.673, -87.4631, -79.6609, 0.22", "186.915, -87.6659, -79.7652, 0.22", "187.259, -87.9796, -79.9026, 0.22", "187.774, -88.4882, -80.0902, 1.03", "187.81, -88.5331, -80.1094, 1.03", "188.065, -88.9293, -80.2889, 1.03", "188.509, -89.7364, -80.6677, 0.15", "188.802, -90.3334, -80.9437, 1.11", "188.971, -90.7036, -81.1172, 1.4", "189.593, -92.1027, -81.7624, 0.44", "189.765, -92.5082, -81.9601, 0.44", "189.971, -93.0448, -82.2355, 0.22", "190.152, -93.5636, -82.4928, 1.03", "190.167, -93.614, -82.5191, 1.03", "190.254, -93.9322, -82.6763, 1.03", "190.548, -95.0201, -83.1395, 0.22", "190.558, -95.0725, -83.1752, 0.22", "190.659, -95.7853, -83.7685, 0.22", "190.777, -96.6341, -84.5478, 1.47", "190.834, -96.9447, -84.8681, 1.4", "190.841, -96.9778, -84.9063, 1.4", "191.312, -98.5102, -87.1305, 0.22", "191.436, -98.8435, -87.6818, 1.25", "191.526, -99.0247, -88.0294, 1.25", "191.921, -99.7044, -89.4528, 0.22", "192.037, -99.8842, -89.8439, 0.59", "192.739, -101.053, -92.3255, 1.4", "192.75, -101.075, -92.3703, 1.4", "192.823, -101.323, -92.8438, 1.4", "192.971, -102.648, -95.203, 0.29", "192.97, -102.886, -95.5822, 0.66", "192.874, -103.674, -96.681, 0.22", "192.75, -104.195, -97.3272, 1.4", "191.933, -106.656, -100.213, 1.03", "191.429, -107.836, -101.516, 0.52", "190.986, -108.654, -102.349, 0.96", "190.261, -109.75, -103.444, 0.22", "189.73, -110.397, -104.063, 0.22", "189.395, -110.701, -104.33, 0.66", "189.355, -110.719, -104.342, 0.66", "188.831, -110.819, -104.424, 0.66", "187.799, -110.801, -104.555, 0.22", "187.426, -110.753, -104.612, 0.81", "186.853, -110.687, -104.717, 0.81", "186.052, -110.636, -104.864, 0.22", "185.36, -110.623, -104.975, 0.88", "184.916, -110.667, -105.049, 1.11", "183.817, -110.935, -105.25, 0.22", "183.485, -111.066, -105.317, 0.44", "182.94, -111.361, -105.42, 0.22", "182.549, -111.594, -105.508, 0.74", "181.517, -112.229, -105.792, 0.22", "180.978, -112.538, -105.938, 1.03", "180.425, -112.871, -106.138, 0.74", "179.752, -113.28, -106.434, 0.66", "178.551, -114.0, -107.006, 0.15", "178.487, -114.037, -107.037, 0.15", "177.799, -114.425, -107.405, 1.18", "176.067, -115.448, -108.418, 0.22", "175.993, -115.494, -108.466, 0.22", "175.543, -115.798, -108.763, 0.22", "175.22, -116.034, -108.949, 1.11", "173.9, -117.007, -109.591, 0.22", "173.858, -117.039, -109.608, 0.22", "173.532, -117.275, -109.683, 0.88", "173.184, -117.542, -109.755, 1.11", "172.339, -118.254, -109.894, 0.15", "171.75, -118.811, -109.913, 0.15", "171.323, -119.283, -109.832, 1.11", "171.084, -119.623, -109.765, 1.11", "171.057, -119.676, -109.753, 1.11", "170.831, -120.26, -109.627, 0.81", "170.649, -120.887, -109.501, 0.22", "170.55, -121.264, -109.432, 0.59", "170.244, -122.37, -109.242, 0.22", "170.052, -123.043, -109.15, 0.22", "169.818, -123.802, -109.068, 0.59", "169.683, -124.199, -109.037, 0.44", "169.663, -124.25, -109.034, 0.44", "169.493, -124.616, -109.018, 0.22", "169.464, -124.667, -109.015, 0.22", "169.222, -125.074, -108.973, 0.44", "168.701, -125.965, -108.776, 0.15", "168.678, -126.006, -108.766, 0.15", "168.419, -126.48, -108.653, 0.81", "166.14, -132.287, -112.973, 0.81" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "209.474, -214.452, -12.0559, 0.52", "210.976, -217.288, -9.64782, 0.52", "211.335, -217.97, -9.12326, 0.88", "211.664, -218.537, -8.70744, 0.52", "211.699, -218.587, -8.67305, 0.52", "212.248, -219.286, -8.21267, 0.37", "213.31, -220.693, -7.36665, 0.22", "213.753, -221.282, -7.12635, 1.47", "214.112, -221.824, -6.87606, 1.47", "214.857, -223.225, -6.22533, 0.22", "215.265, -224.184, -5.78236, 0.37", "215.63, -225.15, -5.34129, 0.81", "215.808, -225.734, -5.10066, 1.25", "216.146, -227.263, -4.43737, 0.66", "216.344, -228.927, -3.70435, 0.22", "216.345, -230.399, -3.03233, 0.81" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "209.474, -214.452, -12.0559, 0.29", "210.38, -214.622, -12.1617, 0.29", "211.287, -214.831, -12.1759, 0.29", "211.345, -214.846, -12.1744, 0.29", "211.805, -214.973, -12.1504, 0.96", "212.265, -215.113, -12.1195, 0.96", "212.33, -215.135, -12.115, 0.96", "213.325, -215.544, -11.9831, 0.22", "213.572, -215.668, -11.9448, 0.81", "213.618, -215.693, -11.9377, 0.81", "213.902, -215.869, -11.8961, 0.81", "214.342, -216.16, -11.8376, 0.81", "215.904, -217.22, -11.6545, 0.15", "216.63, -217.718, -11.5851, 0.15", "216.682, -217.754, -11.58, 0.15", "217.48, -218.303, -11.5021, 0.15", "217.538, -218.343, -11.4961, 0.15", "219.383, -219.648, -11.2935, 0.15" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "7.33524, -120.604, -13.5661, 0.29", "7.67328, -122.503, -13.8579, 0.29", "7.78323, -123.074, -13.93, 0.74", "7.88168, -123.53, -13.9849, 0.74", "8.16878, -124.675, -14.1882, 0.22", "8.48165, -125.768, -14.4247, 0.22", "8.73789, -126.814, -14.6847, 0.81", "8.89149, -127.417, -14.8536, 1.11", "9.06501, -128.012, -15.0793, 0.88", "9.49644, -129.259, -15.6638, 0.22", "9.65007, -129.654, -15.8835, 0.66", "10.2803, -131.117, -16.8437, 0.22", "10.9303, -132.498, -17.8592, 1.55", "11.6478, -133.816, -19.0428, 0.22", "11.9362, -134.288, -19.5358, 0.22", "11.9722, -134.336, -19.5932, 0.22", "12.4634, -134.899, -20.3764, 0.81", "12.6689, -135.082, -20.68, 0.81", "13.5428, -135.896, -22.1598, 0.22", "13.5787, -135.944, -22.2388, 0.22", "14.1197, -136.807, -23.4451, 0.22", "14.5324, -137.516, -24.3636, 0.22", "14.796, -137.983, -24.9242, 1.55", "15.2436, -138.82, -25.9115, 1.69", "15.9254, -140.153, -27.4809, 0.22", "16.4221, -141.103, -28.6623, 0.22", "16.947, -142.047, -29.892, 1.03", "17.1426, -142.36, -30.3196, 1.77", "17.7115, -143.142, -31.4715, 1.77", "19.0151, -144.6, -34.0134, 0.22", "19.097, -144.673, -34.1775, 0.66", "19.6032, -145.07, -35.2513, 0.22", "20.0519, -145.39, -36.2005, 1.47", "20.4568, -145.637, -37.0379, 1.84", "21.6088, -146.189, -39.0855, 0.44", "22.395, -146.475, -40.2787, 0.88", "22.7381, -146.603, -40.749, 0.74", "22.8614, -146.649, -40.8872, 0.74", "23.6208, -146.949, -41.5461, 0.52", "25.2576, -147.623, -42.6649, 0.22", "25.8148, -147.856, -42.9489, 0.96", "26.224, -148.026, -43.1371, 0.96", "28.0046, -148.772, -43.9716, 0.22", "28.6801, -149.067, -44.2944, 0.22", "29.3322, -149.36, -44.5855, 0.81", "29.6372, -149.494, -44.7015, 0.81", "30.6458, -149.943, -45.049, 0.22", "31.3609, -150.262, -45.252, 1.55", "31.7012, -150.413, -45.3266, 1.55", "33.5512, -151.209, -45.7144, 0.22", "34.5298, -151.65, -45.9217, 0.88", "35.0032, -151.873, -46.0295, 1.11", "35.0804, -151.911, -46.0481, 1.11", "35.7582, -152.277, -46.2332, 0.74", "36.9078, -152.939, -46.627, 0.22", "37.6964, -153.464, -46.9923, 0.22", "38.4053, -153.925, -47.3657, 0.81", "38.4682, -153.964, -47.399, 0.81", "38.938, -154.244, -47.649, 1.18", "39.7085, -154.671, -48.0252, 0.37", "41.0138, -155.308, -48.6313, 0.22", "41.8047, -155.658, -48.9906, 0.22", "42.3694, -155.899, -49.2441, 0.88", "43.0228, -156.166, -49.5343, 1.03", "44.7572, -156.776, -50.2343, 0.22", "46.062, -157.2, -50.7154, 0.22", "46.6417, -157.378, -50.9171, 1.25", "47.1514, -157.535, -51.0701, 1.55", "48.1014, -157.82, -51.3245, 0.52", "50.2295, -158.481, -51.8636, 0.22", "50.3056, -158.506, -51.8813, 0.22", "51.711, -159.007, -52.1707, 0.22", "52.611, -159.354, -52.3623, 0.96", "53.1074, -159.566, -52.4733, 0.96", "54.6754, -160.304, -52.8532, 0.22", "55.2385, -160.581, -53.0219, 0.52", "55.7246, -160.808, -53.1844, 0.52", "56.8332, -161.31, -53.5654, 0.22", "57.5547, -161.639, -53.8389, 1.11", "57.6243, -161.665, -53.8619, 1.11", "58.6208, -161.946, -54.1631, 0.22", "59.4569, -162.139, -54.4124, 0.22", "60.2052, -162.279, -54.5737, 1.11", "60.7069, -162.34, -54.6513, 1.33", "62.4606, -162.496, -54.8609, 0.22", "63.2767, -162.562, -54.9391, 0.88", "63.3603, -162.569, -54.9429, 0.88", "65.1746, -162.742, -55.014, 0.22", "65.6433, -162.8, -55.045, 0.96", "65.7202, -162.812, -55.0502, 0.96", "66.2628, -162.933, -55.1023, 0.96", "67.6645, -163.297, -55.2868, 0.15", "68.759, -163.585, -55.5124, 0.15", "69.6093, -163.814, -55.7736, 0.15", "70.0751, -163.938, -55.9254, 0.81", "70.7047, -164.1, -56.1446, 1.03", "71.1593, -164.215, -56.284, 1.25", "72.3689, -164.513, -56.6351, 0.22", "73.4114, -164.725, -56.9063, 0.22", "74.0833, -164.861, -57.0646, 0.88", "74.7938, -165.005, -57.2242, 1.03", "76.613, -165.388, -57.6052, 0.22", "76.6837, -165.403, -57.6193, 0.22", "77.9485, -165.668, -57.8088, 0.22", "78.0399, -165.685, -57.82, 0.22", "78.8369, -165.787, -57.9396, 0.52", "79.2089, -165.805, -58.0043, 0.74", "79.4018, -165.812, -58.0504, 0.74", "80.7011, -165.925, -58.3254, 0.22", "80.7769, -165.938, -58.3388, 0.22", "81.7751, -166.151, -58.446, 0.22", "82.5149, -166.36, -58.4925, 0.81", "83.2348, -166.626, -58.5353, 1.03", "83.473, -166.714, -58.5527, 1.03", "83.8849, -166.869, -58.5939, 1.03", "85.3287, -167.378, -58.7328, 0.22", "85.9062, -167.568, -58.7957, 0.88", "86.4259, -167.705, -58.8706, 0.88", "87.9649, -168.013, -59.156, 0.29", "88.2078, -168.067, -59.2129, 0.44", "88.6027, -168.19, -59.3305, 0.44", "89.3448, -168.501, -59.6144, 0.22", "89.6873, -168.681, -59.7499, 0.96", "90.153, -168.999, -59.8981, 0.96", "91.1658, -169.872, -60.172, 0.29", "92.0171, -170.67, -60.3666, 0.29", "92.3664, -171.027, -60.4306, 1.11", "92.8151, -171.525, -60.4937, 1.55", "94.105, -172.997, -60.605, 0.29", "94.715, -173.704, -60.641, 0.52", "95.0964, -174.135, -60.6629, 0.88", "96.0153, -175.157, -60.7386, 0.22", "96.3284, -175.513, -60.7759, 0.96", "97.2767, -176.608, -60.9375, 0.29", "97.9546, -177.39, -61.1103, 0.29", "98.4048, -177.923, -61.2673, 0.29", "99.1545, -178.875, -61.6372, 0.22", "99.5158, -179.365, -61.885, 0.88", "99.7809, -179.752, -62.1137, 1.33", "99.8145, -179.806, -62.1513, 1.33", "100.476, -180.944, -62.9955, 0.22", "100.759, -181.451, -63.4222, 0.81", "101.018, -181.879, -63.9421, 0.81", "101.081, -181.973, -64.0778, 0.81", "101.407, -182.479, -64.9035, 0.81", "101.428, -182.513, -64.9605, 0.81", "101.718, -182.974, -65.7753, 0.81", "102.293, -183.881, -67.6597, 0.22", "102.454, -184.15, -68.2796, 0.44", "102.921, -184.762, -69.9393, 0.96", "103.033, -184.873, -70.2894, 1.11", "103.122, -184.939, -70.5262, 1.11", "103.98, -185.42, -72.5609, 0.22", "104.012, -185.429, -72.6262, 0.22", "104.787, -185.468, -74.0416, 0.66", "105.265, -185.383, -74.733, 0.66", "105.311, -185.372, -74.7956, 0.66", "113.946, -191.059, -79.9852, 0.66" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "7.33524, -120.604, -13.5661, 0.59", "6.9347, -121.479, -13.2242, 0.59", "6.71956, -122.046, -13.031, 0.37", "6.70164, -122.102, -13.0123, 0.37", "6.41806, -123.196, -12.6738, 0.81", "6.23605, -123.96, -12.457, 1.18", "6.08707, -124.595, -12.3093, 1.33", "5.96696, -125.243, -12.1787, 1.03", "5.82136, -126.032, -12.0709, 0.66", "5.71396, -126.633, -12.024, 0.44", "5.53373, -127.784, -12.015, 0.29", "5.44986, -128.5, -12.0531, 0.96", "5.41961, -128.977, -12.1077, 1.11", "5.40981, -130.098, -12.297, 0.37", "5.46489, -130.942, -12.4648, 0.29", "5.56362, -131.595, -12.5978, 1.11", "5.78515, -132.457, -12.7825, 1.47", "6.00091, -133.102, -12.9142, 1.69", "6.2044, -133.72, -13.0928, 1.25", "6.46339, -134.634, -13.4055, 0.66", "6.57496, -135.368, -13.6824, 0.52", "6.60113, -136.086, -13.9698, 0.29", "6.56759, -136.366, -14.0874, 0.29", "6.08667, -138.082, -14.8886, 0.88", "5.7945, -138.731, -15.209, 1.11", "5.4271, -139.34, -15.5045, 1.18", "5.37102, -139.42, -15.5366, 1.18", "4.9337, -140.015, -15.718, 1.11", "4.89226, -140.075, -15.7295, 1.11", "4.55004, -140.658, -15.7492, 1.11", "4.25756, -141.207, -15.7562, 0.66", "3.77722, -142.212, -15.7315, 0.29", "3.74871, -142.28, -15.7284, 0.29", "3.52979, -142.908, -15.6757, 0.88", "3.35069, -143.531, -15.6178, 1.11", "3.12954, -144.608, -15.5143, 0.66", "3.00608, -145.521, -15.4185, 0.37", "2.98592, -146.26, -15.3464, 0.29", "3.02813, -146.782, -15.3519, 0.66", "3.14315, -147.256, -15.4204, 0.66", "3.35266, -147.824, -15.727, 0.66", "3.37604, -147.877, -15.7702, 0.66", "3.6959, -148.532, -16.4078, 0.96", "4.22236, -149.504, -17.4928, 1.62", "4.60072, -150.166, -18.2985, 1.99", "5.72251, -152.021, -20.717, 0.66", "5.74578, -152.058, -20.7679, 0.66", "6.06542, -152.542, -21.4367, 0.66", "6.57079, -153.257, -22.4144, 0.66", "6.59563, -153.29, -22.4563, 0.66", "7.10865, -153.924, -23.1261, 0.29", "7.15394, -153.975, -23.1568, 0.29", "7.58363, -154.543, -23.3942, 0.66", "8.02144, -155.287, -23.5434, 0.66", "8.05312, -155.353, -23.5461, 0.66", "8.45426, -156.365, -23.5613, 0.52", "8.47079, -156.418, -23.5603, 0.52", "8.74273, -157.535, -23.6132, 1.4", "8.89407, -158.422, -23.6965, 1.92", "8.94608, -158.812, -23.7592, 1.99", "9.07912, -159.985, -24.0169, 0.96", "9.14658, -160.807, -24.2611, 0.81", "9.23133, -161.828, -24.6059, 0.81", "9.30056, -162.551, -24.8874, 0.52", "9.37219, -163.264, -25.2002, 0.44", "9.38277, -163.364, -25.2448, 0.44", "9.46486, -164.027, -25.5162, 1.11", "9.5354, -164.53, -25.6901, 1.11", "9.62003, -165.103, -25.8217, 0.74", "9.71436, -165.996, -25.9596, 0.44", "9.75165, -166.567, -25.9995, 0.44", "9.80881, -167.197, -26.023, 1.11", "9.88619, -167.72, -26.0328, 1.18", "10.0128, -168.402, -26.0656, 1.11", "10.2084, -169.277, -26.1255, 0.52", "10.3454, -169.797, -26.1985, 0.29", "10.6202, -170.728, -26.4091, 0.29", "10.8741, -171.533, -26.6477, 0.29", "11.1146, -172.318, -26.9334, 0.96", "11.2861, -172.92, -27.1727, 1.47", "11.5389, -174.082, -27.608, 1.4", "11.5467, -174.144, -27.627, 1.4", "11.577, -174.949, -27.8066, 1.03", "11.576, -176.095, -28.066, 0.52", "11.5828, -177.027, -28.272, 0.37", "11.6009, -178.219, -28.5469, 0.29", "11.6209, -179.172, -28.7608, 1.25", "11.6434, -179.813, -28.914, 1.47", "11.7477, -181.505, -29.3306, 0.44", "11.804, -182.094, -29.4667, 0.44", "11.9038, -182.895, -29.6565, 1.25", "11.9733, -183.343, -29.7596, 1.4", "12.1144, -184.172, -29.93, 1.11", "12.305, -185.258, -30.0952, 0.37", "12.5081, -186.361, -30.1876, 0.37", "12.6744, -187.199, -30.2555, 0.37", "12.823, -187.875, -30.3063, 0.37", "13.0884, -188.926, -30.3888, 1.33", "13.2292, -189.387, -30.4323, 1.77", "13.3989, -189.832, -30.4839, 1.99", "13.7931, -190.685, -30.6006, 1.62", "14.2312, -191.537, -30.7246, 0.81", "14.6775, -192.362, -30.8432, 0.29", "15.1299, -193.21, -30.9508, 0.37", "15.4926, -193.952, -31.0343, 0.66", "15.7439, -194.569, -31.0873, 0.29", "15.9214, -195.198, -31.1271, 0.29", "15.9937, -195.677, -31.1458, 0.59", "15.9678, -196.162, -31.143, 0.74", "15.7617, -196.895, -31.1442, 0.52", "15.3601, -197.7, -31.14, 1.18", "14.9265, -198.37, -31.1361, 1.55", "14.8893, -198.419, -31.1361, 1.55", "14.3968, -199.038, -31.1442, 1.25", "13.5465, -200.072, -31.1762, 0.37", "12.9213, -200.844, -31.2109, 0.22", "12.7087, -201.108, -31.2225, 0.22", "12.5199, -201.393, -31.2285, 0.81", "12.3357, -201.814, -31.2058, 1.03", "12.3242, -201.879, -31.1972, 1.03", "12.3129, -202.54, -31.0556, 0.29", "12.3142, -202.6, -31.0406, 0.29", "12.2911, -203.504, -30.7723, 0.29", "12.1893, -204.504, -30.4355, 1.03", "12.1016, -204.939, -30.2782, 1.18", "11.9387, -205.572, -30.0504, 1.18", "11.7035, -206.376, -29.7668, 1.03", "11.5318, -206.959, -29.5785, 0.66", "11.3477, -207.588, -29.4365, 0.29", "11.129, -208.557, -29.3516, 0.22", "11.0441, -209.202, -29.356, 0.88", "11.0131, -209.674, -29.3926, 1.25", "10.9959, -210.218, -29.4631, 1.18", "10.9734, -211.436, -29.6319, 0.29", "10.9306, -212.473, -29.7673, 0.29", "10.8564, -213.237, -29.8504, 0.88", "10.7043, -214.01, -29.8956, 1.11", "10.596, -214.345, -29.8894, 1.11", "10.268, -215.047, -29.8073, 0.29", "9.94548, -215.632, -29.6766, 0.29", "9.7734, -215.937, -29.6054, 0.88", "9.58056, -216.323, -29.521, 1.18", "9.24657, -217.099, -29.3706, 1.18", "9.00103, -217.836, -29.253, 0.96", "8.78592, -218.828, -29.144, 0.29", "8.73941, -219.536, -29.1116, 0.88", "8.77396, -220.006, -29.1173, 1.25", "8.78696, -220.07, -29.1261, 1.25", "8.94633, -220.571, -29.2546, 1.25", "9.2207, -221.305, -29.4946, 0.59", "9.52724, -222.094, -29.7908, 0.37", "9.7452, -222.676, -30.0097, 0.37", "10.1083, -223.766, -30.4304, 0.88", "10.3533, -224.591, -30.7398, 1.18", "10.5192, -225.302, -30.9831, 1.18", "10.5306, -225.37, -31.0016, 1.18", "10.5803, -226.069, -31.128, 1.18", "10.581, -226.975, -31.1882, 1.25", "10.5207, -227.949, -31.1254, 0.29", "10.4287, -228.798, -31.0167, 0.22", "10.3305, -229.643, -30.8804, 1.18", "10.2621, -230.399, -30.7899, 1.18", "10.2203, -231.149, -30.7326, 0.96", "10.2007, -232.154, -30.6904, 0.29", "10.2163, -232.674, -30.6891, 0.29", "10.2863, -233.286, -30.7254, 0.44", "10.6168, -234.834, -30.9224, 0.44", "10.8569, -235.685, -31.1099, 0.44", "10.8752, -235.745, -31.1265, 0.44", "11.0822, -236.486, -31.3798, 1.11", "11.216, -237.122, -31.6007, 1.33", "11.2658, -237.91, -31.9317, 1.11", "11.1438, -239.101, -32.4406, 0.29", "10.9721, -239.908, -32.8018, 0.29", "10.7119, -240.911, -33.2243, 1.03", "10.5547, -241.445, -33.4455, 1.18", "9.95669, -243.376, -34.1643, 0.37", "9.64068, -244.453, -34.4749, 0.29", "9.53732, -244.971, -34.5362, 0.22", "9.46949, -245.923, -34.5018, 1.33", "9.52214, -246.513, -34.3719, 1.11", "9.65668, -247.142, -34.1515, 0.59", "9.92091, -247.98, -33.7576, 0.44", "10.2864, -249.03, -33.3071, 0.29", "10.3805, -249.369, -33.177, 0.81", "10.453, -249.813, -33.0318, 0.81", "10.4653, -250.304, -32.9558, 0.74", "10.4108, -251.208, -33.023, 0.29", "10.3727, -251.743, -33.1762, 0.96", "10.3745, -252.327, -33.4466, 1.11", "10.4369, -253.054, -33.8575, 1.11", "10.7604, -254.791, -35.0898, 0.44", "10.9474, -255.493, -35.6722, 1.11", "11.1283, -256.053, -36.1716, 1.18", "11.3683, -256.729, -36.7583, 1.18", "11.3849, -256.773, -36.7931, 1.18", "11.7603, -257.8, -37.474, 0.44", "12.0103, -258.562, -37.8125, 0.29", "12.1562, -259.185, -38.0473, 0.29", "12.2729, -259.916, -38.2943, 1.11", "12.3567, -260.565, -38.5021, 1.4", "12.4587, -261.167, -38.6722, 1.11", "12.4733, -261.238, -38.688, 1.11", "12.7094, -262.071, -38.8812, 0.66", "12.8738, -262.507, -38.9983, 0.52", "13.199, -263.159, -39.2002, 0.29", "13.5685, -263.741, -39.4611, 0.29", "13.599, -263.783, -39.4877, 0.29", "13.8435, -264.078, -39.7424, 1.03", "14.1414, -264.403, -40.0823, 1.4", "14.5309, -264.809, -40.5482, 1.47", "15.2569, -265.585, -41.4396, 1.25", "15.9276, -266.331, -42.306, 0.52", "16.4949, -267.146, -43.1153, 0.37", "16.5275, -267.205, -43.1668, 0.37", "16.7287, -267.841, -43.7356, 0.44", "16.8385, -268.441, -44.2843, 0.44", "16.8444, -268.489, -44.3295, 0.44", "17.0191, -270.03, -45.8272, 1.47", "17.0386, -270.319, -46.1106, 1.69", "17.149, -272.489, -48.4042, 0.59", "17.1639, -273.087, -49.1189, 0.29", "17.1797, -273.612, -49.8336, 1.25", "17.2086, -273.978, -50.399, 1.55" ],
    "parent" : "dend_88",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "24.102, -112.296, 1.93756, 0.44", "25.8672, -112.771, 2.07301, 0.44", "26.7048, -112.97, 2.11788, 0.59", "26.7871, -112.987, 2.11816, 0.59", "27.3718, -113.129, 2.10569, 0.59", "28.2579, -113.41, 2.07508, 0.59", "28.3159, -113.432, 2.07268, 0.59", "29.0549, -113.821, 2.03413, 0.44", "29.7779, -114.359, 2.02888, 0.29", "30.4847, -115.039, 2.05948, 0.29", "30.9768, -115.637, 2.10649, 0.59", "31.3134, -116.131, 2.15692, 0.81", "31.8263, -116.948, 2.26118, 0.37", "32.2455, -117.673, 2.36959, 1.25", "32.5853, -118.277, 2.47082, 1.62", "32.897, -118.773, 2.5532, 1.47", "33.384, -119.441, 2.64127, 0.96", "33.7737, -119.941, 2.65238, 0.74", "34.3929, -120.707, 2.5528, 0.59", "34.4537, -120.786, 2.53443, 0.59", "34.997, -121.52, 2.32544, 0.59", "35.6228, -122.417, 2.03572, 0.44", "36.3314, -123.505, 1.65792, 0.44", "36.9938, -124.574, 1.28578, 0.44", "37.2636, -125.018, 1.14367, 0.96", "37.4974, -125.388, 1.04214, 0.96", "37.5785, -125.512, 1.01431, 0.96", "38.0381, -126.101, 0.993197, 0.66", "38.6593, -126.703, 1.17779, 0.52", "39.1882, -127.129, 1.49145, 1.18", "39.6295, -127.434, 1.79353, 1.4", "39.6904, -127.473, 1.83578, 1.4", "40.6931, -128.121, 2.49594, 0.96", "41.4838, -128.656, 3.01483, 0.74", "42.4294, -129.367, 3.6196, 1.11", "43.184, -129.991, 4.04245, 0.59", "44.0585, -130.794, 4.4526, 0.52", "45.1078, -131.845, 4.76146, 0.52", "45.5533, -132.329, 4.82067, 1.18", "46.1148, -132.955, 4.82767, 1.47", "46.7795, -133.694, 4.78388, 1.11", "47.3417, -134.32, 4.75836, 0.66", "48.3415, -135.396, 4.73547, 0.52", "49.0808, -136.136, 4.73853, 0.52", "49.8437, -136.854, 4.7712, 0.81", "50.6568, -137.598, 4.85154, 1.4", "51.2764, -138.184, 4.94988, 1.25", "51.651, -138.547, 5.02545, 1.25", "52.0871, -138.98, 5.09683, 0.96", "52.6498, -139.555, 5.16062, 0.44", "53.2202, -140.146, 5.21926, 0.29", "53.808, -140.738, 5.26642, 0.29", "53.864, -140.786, 5.2748, 0.29", "55.0402, -141.659, 5.54796, 0.29", "56.0548, -142.331, 5.84436, 0.74", "56.3825, -142.524, 5.95439, 1.03", "56.8284, -142.76, 6.12058, 1.03", "58.1912, -143.444, 6.6778, 0.22", "58.9607, -143.843, 6.99833, 0.22", "59.0194, -143.876, 7.01572, 0.22", "59.4595, -144.17, 6.98458, 0.88", "59.9444, -144.556, 6.83328, 1.11", "60.0157, -144.621, 6.79631, 1.11", "60.5441, -145.158, 6.41865, 1.11", "61.7519, -146.469, 5.60083, 0.22", "62.5306, -147.353, 5.1147, 0.22", "62.8542, -147.732, 4.94926, 1.03", "63.296, -148.239, 4.7934, 1.18", "63.3401, -148.286, 4.78667, 1.18", "64.2961, -149.259, 4.87965, 0.52", "64.3755, -149.325, 4.90838, 0.52", "65.2149, -149.845, 5.22916, 0.88", "65.7854, -150.113, 5.41384, 1.18", "66.3416, -150.312, 5.55725, 1.33", "66.3986, -150.329, 5.56879, 1.33", "67.3262, -150.574, 5.69736, 1.11", "68.3009, -150.866, 5.81452, 0.66", "68.8478, -151.062, 5.8642, 0.74", "69.6656, -151.443, 5.93788, 0.29", "69.7366, -151.486, 5.94552, 0.29", "70.4393, -152.042, 6.03939, 0.29", "70.7194, -152.33, 6.08469, 1.18", "71.1605, -152.843, 6.16429, 1.4", "71.5358, -153.297, 6.23646, 1.4", "72.1129, -153.965, 6.35153, 0.88", "72.7537, -154.591, 6.47376, 0.37", "72.8202, -154.64, 6.48687, 0.37", "73.6609, -155.11, 6.65037, 0.37", "73.7358, -155.144, 6.66447, 0.37", "74.1507, -155.321, 6.73651, 0.81", "74.7812, -155.573, 6.83552, 0.66", "75.7075, -155.974, 6.97946, 0.37", "76.4378, -156.327, 7.09496, 0.37", "77.2665, -156.784, 7.22891, 1.18", "77.9289, -157.202, 7.33417, 1.4", "77.9823, -157.24, 7.34245, 1.4", "78.6387, -157.773, 7.43251, 1.47", "78.7008, -157.828, 7.4363, 1.47", "79.3597, -158.415, 7.47842, 1.03", "79.6555, -158.678, 7.49707, 0.81", "79.8289, -158.832, 7.50859, 0.81", "80.3959, -159.341, 7.5466, 0.66", "81.0598, -159.954, 7.65569, 0.37", "81.7075, -160.569, 7.81547, 0.29", "81.9695, -160.819, 7.90154, 0.59", "82.2914, -161.103, 8.02821, 0.59", "82.3572, -161.155, 8.05732, 0.59", "83.3345, -161.756, 8.52214, 0.22", "83.5649, -161.853, 8.6513, 0.22", "83.8019, -161.907, 8.77209, 0.22", "84.2434, -161.95, 8.97399, 1.25", "84.9207, -161.984, 9.24433, 1.55", "85.5417, -162.023, 9.45983, 1.55", "86.7843, -162.144, 9.82625, 0.59", "87.6873, -162.304, 10.0874, 0.29", "88.6009, -162.573, 10.3556, 0.29", "89.3896, -162.923, 10.5812, 0.29", "90.0186, -163.308, 10.7454, 0.29", "90.5742, -163.717, 10.8812, 0.66", "91.0263, -164.073, 10.9703, 0.37", "91.6028, -164.541, 11.1194, 0.29", "92.1424, -164.96, 11.2819, 0.44", "92.7902, -165.399, 11.4884, 0.44", "93.6747, -165.917, 11.7644, 0.29", "94.5455, -166.402, 12.0463, 0.29", "95.3588, -166.875, 12.3095, 0.96", "95.416, -166.912, 12.3249, 0.96", "96.0738, -167.402, 12.481, 1.47", "96.6137, -167.862, 12.578, 1.62", "97.3751, -168.53, 12.6536, 1.25", "97.9629, -169.014, 12.6843, 0.66", "98.7485, -169.552, 12.6924, 0.29", "98.8092, -169.585, 12.6931, 0.29", "99.6147, -169.926, 12.7046, 0.29", "100.489, -170.232, 12.7221, 0.74", "101.104, -170.433, 12.7378, 1.4", "101.802, -170.669, 12.7735, 1.62", "102.747, -171.031, 12.8474, 0.81", "103.575, -171.416, 12.9095, 0.37", "104.609, -172.027, 12.9683, 0.37", "105.486, -172.681, 13.0009, 0.37", "105.824, -172.982, 13.0069, 0.74", "106.235, -173.423, 13.0046, 0.37", "106.713, -174.023, 12.9627, 0.37", "107.173, -174.673, 12.8841, 1.18", "107.466, -175.112, 12.8157, 1.4", "107.51, -175.182, 12.8176, 1.4", "107.813, -175.682, 12.8994, 1.18", "108.373, -176.623, 13.1528, 1.03", "108.809, -177.37, 13.4164, 0.81", "109.241, -178.144, 13.7879, 1.11", "110.338, -180.199, 14.8919, 0.29", "110.538, -180.579, 15.1087, 0.81", "110.567, -180.637, 15.1445, 0.81", "110.917, -181.34, 15.6037, 0.81", "111.544, -182.486, 16.3526, 0.44", "111.897, -183.059, 16.685, 0.81", "112.225, -183.521, 16.8859, 0.96", "112.308, -183.633, 16.9329, 0.96", "112.716, -184.159, 17.1405, 0.96", "113.357, -184.958, 17.4322, 0.96", "113.82, -185.52, 17.5917, 1.25", "113.866, -185.576, 17.6072, 1.25", "114.426, -186.267, 17.7878, 0.96", "115.146, -187.176, 17.9971, 0.52", "115.191, -187.234, 18.0072, 0.52", "115.624, -187.831, 18.0659, 0.52", "116.06, -188.454, 18.1151, 1.03", "116.104, -188.518, 18.1167, 1.03", "116.402, -188.937, 18.1072, 1.03", "116.997, -189.74, 18.056, 0.29", "117.43, -190.301, 18.0157, 0.29", "117.858, -190.821, 17.9742, 0.88", "118.538, -191.572, 17.9106, 0.29", "118.995, -192.033, 17.8716, 0.96", "119.458, -192.468, 17.8319, 1.18", "119.585, -192.574, 17.8216, 1.18", "120.025, -192.885, 17.7924, 1.18", "120.582, -193.221, 17.771, 1.18", "120.676, -193.269, 17.7754, 1.18" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "24.102, -112.296, 1.93756, 0.44", "24.1643, -114.003, 2.27327, 0.44", "24.2799, -114.921, 2.42768, 0.44", "24.4956, -116.033, 2.62342, 0.74", "24.6642, -116.91, 2.78343, 1.11", "24.8719, -118.156, 3.01773, 0.74", "25.0049, -119.228, 3.22687, 0.52", "25.1342, -120.293, 3.46595, 0.52", "25.1725, -121.411, 3.75304, 0.37", "25.0426, -122.099, 3.96343, 0.37", "24.7456, -122.626, 4.19031, 1.11", "24.2336, -123.176, 4.4744, 1.4", "23.4581, -123.888, 4.94121, 1.47", "22.9369, -124.37, 5.30973, 1.47", "22.2888, -124.995, 5.82875, 1.03", "21.5867, -125.891, 6.59602, 0.52", "21.1059, -126.844, 7.40168, 0.29", "20.8661, -127.995, 8.31537, 0.37", "20.9532, -129.059, 9.06408, 0.37", "20.9739, -129.122, 9.10164, 0.37", "21.5987, -130.324, 9.67753, 1.11", "21.9728, -130.926, 9.88567, 1.47", "22.3458, -131.517, 10.0255, 1.47", "22.678, -132.164, 10.094, 1.25", "23.0118, -133.139, 10.1351, 0.66", "23.2048, -134.005, 10.1531, 0.52", "23.2322, -134.745, 10.1566, 0.81", "23.1152, -135.469, 10.1603, 0.81", "22.8218, -136.418, 10.1713, 0.74", "22.405, -137.443, 10.1943, 0.59", "22.3683, -137.519, 10.1964, 0.59", "21.9198, -138.413, 10.2196, 0.44", "21.4329, -139.595, 10.2869, 0.29", "21.2419, -140.229, 10.3422, 0.29", "21.1914, -141.113, 10.4482, 1.03", "21.2127, -141.195, 10.4617, 1.03", "21.4455, -141.682, 10.5437, 1.25", "22.3227, -142.896, 10.7793, 0.74", "22.3885, -142.973, 10.7953, 0.66", "23.2427, -143.922, 10.9913, 0.66", "23.7632, -144.51, 11.0965, 1.03", "24.2534, -145.132, 11.1631, 0.66", "24.735, -145.847, 11.1892, 0.44", "25.0411, -146.398, 11.1648, 0.37", "25.0776, -146.483, 11.157, 0.37", "25.3319, -147.324, 11.1013, 0.37", "25.5717, -148.281, 11.0906, 1.18", "25.7116, -148.885, 11.1442, 1.18", "25.7263, -148.955, 11.1547, 1.18", "26.0113, -150.361, 11.4461, 0.44", "26.236, -151.529, 11.7348, 0.96", "26.4084, -152.651, 12.0583, 1.33", "26.5436, -153.791, 12.3907, 0.59", "26.6007, -154.517, 12.5782, 0.44", "26.6268, -155.222, 12.7428, 0.74", "26.6215, -155.731, 12.8457, 0.74", "26.5637, -156.55, 12.941, 0.59", "26.4746, -157.595, 13.0487, 1.18", "26.4613, -158.308, 13.1217, 1.18", "26.5783, -159.232, 13.2998, 0.59", "26.6874, -159.667, 13.4163, 0.37", "26.7132, -159.742, 13.4434, 0.37", "27.1436, -160.861, 13.9236, 0.66", "27.4125, -161.634, 14.2953, 0.66", "27.7456, -162.779, 14.9134, 0.44", "27.8598, -163.415, 15.28, 1.03", "27.9181, -164.319, 15.8059, 1.03", "27.885, -165.111, 16.24, 0.74", "27.7679, -165.947, 16.6569, 1.03", "27.5829, -166.966, 17.1239, 1.03", "27.4301, -168.009, 17.5161, 0.29", "27.3913, -168.785, 17.7635, 0.29", "27.4436, -169.744, 17.9952, 1.03", "27.5605, -170.376, 18.1025, 1.25", "27.7684, -171.141, 18.1794, 0.96", "28.1816, -172.413, 18.2186, 0.59", "28.4564, -173.196, 18.2291, 1.03", "28.6071, -173.653, 18.253, 1.33", "28.8529, -174.624, 18.4092, 0.22", "28.9118, -175.169, 18.5706, 0.22", "28.9074, -175.232, 18.5987, 0.22", "28.7174, -176.163, 19.1982, 0.22", "28.5776, -177.039, 19.8177, 0.22", "28.5985, -178.064, 20.5004, 1.03", "28.7046, -178.612, 20.8429, 1.4", "28.7353, -178.695, 20.8812, 1.4", "29.0816, -179.495, 21.1544, 0.81", "29.4507, -180.25, 21.3384, 0.29", "29.9422, -181.229, 21.487, 0.29", "29.9734, -181.294, 21.4931, 0.29", "30.4689, -182.365, 21.5812, 0.29", "30.8441, -183.229, 21.6246, 1.11", "31.0531, -183.765, 21.6324, 1.47", "31.0753, -183.825, 21.6333, 1.47", "31.3392, -184.489, 21.6302, 1.62", "31.3655, -184.548, 21.6285, 1.62", "31.8186, -185.46, 21.5745, 1.62", "31.8481, -185.518, 21.5698, 1.62", "32.3177, -186.431, 21.4934, 0.88", "32.6981, -187.179, 21.4343, 0.59", "33.1418, -188.07, 21.365, 0.52", "33.4569, -188.714, 21.3145, 1.11", "33.7903, -189.419, 21.2669, 1.11" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-10.6367, -96.7599, 39.6252, 0.29", "-10.4379, -97.6223, 39.8227, 0.29", "-10.3283, -98.3393, 40.0326, 0.29", "-10.286, -98.9534, 40.3233, 0.29", "-10.2853, -99.0056, 40.3538, 0.29", "-10.3186, -99.3957, 40.6699, 0.29", "-10.4783, -100.102, 41.3328, 0.59", "-10.6028, -100.36, 41.667, 0.59", "-10.992, -100.803, 42.4205, 0.81", "-11.0235, -100.831, 42.4721, 0.81", "-11.5559, -101.233, 43.2663, 0.22", "-11.9514, -101.499, 43.7705, 0.22", "-11.9911, -101.523, 43.8155, 0.22", "-12.3213, -101.736, 44.1769, 0.22", "-12.8065, -102.081, 44.5964, 0.22", "-12.8522, -102.116, 44.6331, 0.22", "-13.308, -102.514, 44.8899, 0.52" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-10.6367, -96.7599, 39.6252, 0.22", "-9.78561, -96.5146, 39.5705, 0.22", "-9.71101, -96.493, 39.5657, 0.22", "-9.07551, -96.3099, 39.5249, 0.22", "-8.20629, -96.0593, 39.469, 0.22", "-8.07284, -96.0209, 39.4605, 0.22", "-6.51765, -95.5726, 39.3606, 0.22" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "0.221184, -315.665, 22.8274, 0.22", "-0.381535, -317.044, 23.1777, 0.22", "-0.615137, -317.689, 23.3235, 0.59", "-0.706404, -318.025, 23.3891, 0.81", "-1.01015, -319.278, 23.5997, 0.22", "-1.19342, -320.09, 23.7252, 0.22", "-1.3366, -320.812, 23.8245, 1.11", "-1.3829, -321.389, 23.8911, 1.33", "-1.42713, -322.269, 23.9663, 1.03", "-1.45391, -322.906, 23.9931, 0.29", "-1.45432, -322.978, 23.9927, 0.29", "-1.3552, -323.863, 24.0491, 0.22", "-1.24466, -324.345, 24.1167, 0.52", "-1.18888, -324.503, 24.1597, 0.52", "-1.15652, -324.57, 24.1845, 0.52", "-0.750226, -325.123, 24.4335, 0.22", "-0.167143, -325.699, 24.7246, 0.59", "0.161084, -325.964, 24.835, 0.59", "1.02268, -326.642, 25.0524, 0.22", "1.6398, -327.127, 25.1419, 0.88", "2.74484, -327.994, 25.212, 0.15", "3.58612, -328.661, 25.1917, 0.15", "5.07235, -329.815, 25.0684, 0.15", "5.83075, -330.397, 24.9809, 0.44", "6.63873, -330.981, 24.8606, 1.18", "7.13682, -331.347, 24.8001, 1.55", "8.20478, -332.222, 24.7059, 0.29", "8.78698, -332.713, 24.7273, 0.52", "8.84275, -332.759, 24.7394, 0.52", "9.3183, -333.141, 24.9026, 0.52", "10.1308, -333.887, 25.3019, 0.22", "10.6133, -334.436, 25.5818, 0.22", "11.15, -335.189, 25.9495, 0.66", "11.4224, -335.647, 26.1421, 0.66", "11.4641, -335.725, 26.1692, 0.66", "11.9291, -336.737, 26.4361, 0.15", "12.3149, -337.628, 26.5793, 0.37", "12.3738, -337.77, 26.5956, 0.37", "12.4623, -337.995, 26.6035, 0.37", "12.7484, -338.735, 26.6293, 0.15", "12.8343, -338.954, 26.637, 0.44", "13.0312, -339.384, 26.6547, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "0.221184, -315.665, 22.8274, 0.22", "2.30873, -315.853, 23.3868, 0.22", "3.75591, -315.982, 23.7745, 0.22", "5.07171, -316.1, 24.1271, 0.37", "6.72175, -316.248, 24.5692, 0.15", "7.19935, -316.291, 24.6972, 0.44", "7.92963, -316.356, 24.8929, 0.44" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-144.514, -112.736, 86.3145, 0.22", "-144.67, -112.007, 87.9385, 0.22", "-144.71, -111.969, 88.0406, 0.22", "-144.908, -111.782, 88.5358, 0.88", "-144.938, -111.753, 88.6126, 0.88", "-145.115, -111.586, 89.0565, 0.88", "-145.382, -111.335, 89.7258, 0.66", "-146.186, -110.925, 90.7137, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-144.514, -112.736, 86.3145, 0.22", "-144.874, -113.067, 87.1782, 0.22", "-145.118, -113.29, 87.7611, 0.22", "-145.137, -113.308, 87.8068, 0.22" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "62.9894, 159.664, 42.7271, 0.22", "63.6671, 158.961, 43.9836, 0.22", "64.0439, 158.649, 44.5884, 0.22", "64.0722, 158.63, 44.6384, 0.22", "64.7914, 158.201, 45.9649, 0.22", "64.831, 158.186, 46.0353, 0.22", "65.2424, 158.085, 46.856, 0.22", "65.4419, 158.068, 47.2836, 0.74", "65.8122, 158.108, 48.2186, 0.59", "65.8421, 158.114, 48.294, 0.59", "66.3565, 158.256, 49.5052, 0.22", "66.7651, 158.335, 50.638, 0.81", "66.9832, 158.359, 51.3346, 0.96", "67.3402, 158.375, 52.5144, 0.81", "67.7559, 158.359, 53.7974, 0.22", "67.9427, 158.334, 54.378, 0.59", "68.417, 158.199, 55.8397, 1.03", "68.442, 158.192, 55.9108, 1.03", "68.5214, 158.165, 56.1437, 1.03", "69.0037, 157.957, 57.3533, 0.22", "69.1796, 157.866, 57.8401, 0.52", "69.3467, 157.775, 58.2655, 0.52" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "62.9894, 159.664, 42.7271, 0.22", "62.9854, 161.158, 43.6178, 0.22", "62.9744, 161.919, 44.0418, 0.74", "62.962, 163.122, 44.6613, 0.22", "62.9597, 163.64, 44.9166, 0.22", "62.9698, 164.809, 45.4637, 0.22", "63.0006, 165.681, 45.8371, 0.22", "63.0051, 165.754, 45.8569, 0.22", "63.0965, 166.4, 45.9785, 0.59", "63.1176, 166.467, 45.9782, 0.59", "63.2669, 166.795, 45.9482, 0.44", "63.6149, 167.422, 45.8513, 0.15", "63.9763, 168.098, 45.7808, 0.22", "64.2218, 168.622, 45.7434, 0.59", "64.8579, 170.152, 45.771, 0.22", "64.8839, 170.223, 45.7771, 0.22", "65.2045, 171.196, 45.918, 0.22", "65.4905, 172.144, 46.1408, 0.29", "65.6594, 172.74, 46.3195, 0.29", "66.0846, 174.347, 46.8885, 0.22", "66.2696, 174.943, 47.1501, 0.52", "66.296, 175.016, 47.1836, 0.52", "66.9234, 176.432, 47.8477, 0.22", "67.1951, 176.967, 48.1169, 0.88", "67.3537, 177.264, 48.3111, 0.74", "67.947, 178.289, 49.1828, 0.22", "68.2041, 178.738, 49.6738, 0.29", "68.4843, 179.21, 50.274, 0.29", "68.8993, 179.894, 51.2921, 0.88", "69.4189, 180.744, 52.6096, 0.66", "69.9045, 181.545, 53.8784, 0.29", "70.5414, 182.545, 55.5485, 0.52", "70.7381, 182.81, 56.0222, 0.44", "71.2453, 183.416, 57.1261, 0.22", "71.6769, 183.854, 57.8902, 0.29", "71.7197, 183.895, 57.9521, 0.29", "72.2, 184.339, 58.5839, 0.29", "72.6917, 184.726, 59.1013, 0.44", "73.1736, 185.144, 59.597, 0.44", "73.2161, 185.184, 59.6377, 0.44", "73.8365, 185.97, 60.2652, 0.22", "73.8769, 186.033, 60.3051, 0.22", "74.1739, 186.593, 60.5895, 0.22", "74.7053, 187.751, 61.0392, 0.22", "74.9051, 188.246, 61.1995, 0.59", "75.4783, 189.782, 61.4925, 0.22", "75.8143, 190.788, 61.5667, 0.22", "75.9845, 191.518, 61.5823, 0.22", "76.1228, 192.496, 61.5473, 0.88", "76.1387, 192.813, 61.5147, 0.88", "76.0608, 194.736, 61.2313, 0.22", "75.9941, 195.171, 61.1411, 0.37", "75.5497, 196.835, 60.7644, 0.15", "75.5162, 196.936, 60.7443, 0.15", "75.3465, 197.41, 60.7032, 0.37", "75.128, 197.999, 60.7032, 0.37", "75.1054, 198.065, 60.7107, 0.37", "74.9593, 198.668, 60.7806, 0.29", "74.8781, 199.631, 60.9059, 0.29", "74.8785, 200.933, 61.1083, 0.22", "74.8875, 201.085, 61.1332, 0.22", "75.0003, 202.225, 61.3254, 0.22", "75.0145, 202.322, 61.3421, 0.22", "75.2103, 203.279, 61.5132, 0.22", "75.4157, 204.097, 61.6492, 0.29", "75.7223, 205.149, 61.791, 0.29", "75.742, 205.216, 61.8001, 0.29", "75.93, 205.968, 61.9013, 0.22", "75.9483, 206.049, 61.9126, 0.22", "76.0857, 206.689, 62.0063, 0.29", "76.1142, 206.797, 62.0207, 0.29", "76.3722, 207.679, 62.1224, 0.59", "76.7219, 208.927, 62.1642, 0.22", "76.9351, 209.726, 62.1428, 0.59", "77.0709, 210.232, 62.1128, 0.59", "77.4245, 211.497, 61.9979, 0.22", "77.5718, 211.995, 61.9399, 0.44", "77.9312, 213.109, 61.7613, 0.22", "78.1294, 213.629, 61.649, 0.22", "78.2527, 213.913, 61.5943, 0.59", "78.2923, 213.992, 61.5831, 0.59", "78.4724, 214.288, 61.5739, 0.59", "78.538, 214.372, 61.5813, 0.59", "79.3752, 215.357, 61.7626, 0.22", "80.1554, 216.289, 61.9312, 0.37", "80.1989, 216.344, 61.9407, 0.37", "80.4267, 216.686, 62.0067, 0.37", "81.0134, 217.71, 62.2231, 0.22", "81.3163, 218.304, 62.3739, 0.22", "81.5027, 218.731, 62.5155, 0.52", "81.6026, 219.035, 62.6158, 0.52", "81.8906, 220.224, 62.9739, 0.22", "81.9093, 220.327, 63.0025, 0.22", "82.0802, 221.671, 63.393, 0.22", "82.2519, 223.135, 63.832, 0.22", "82.3653, 224.18, 64.1421, 0.22", "82.5113, 225.701, 64.5736, 0.22", "82.6324, 227.002, 64.922, 0.88", "82.7099, 228.091, 65.202, 0.44", "82.7474, 228.895, 65.397, 0.22", "82.772, 229.305, 65.4914, 0.37", "82.8311, 229.772, 65.6048, 0.37", "83.0251, 230.873, 65.8856, 0.22", "83.0404, 230.945, 65.9016, 0.22", "83.2222, 231.628, 66.0193, 0.22", "83.2679, 231.778, 66.0468, 0.22", "83.5897, 232.765, 66.2463, 0.22", "83.6095, 232.831, 66.2589, 0.22", "83.7795, 233.453, 66.3682, 0.22", "84.0081, 234.44, 66.5258, 0.52", "84.2503, 235.651, 66.7087, 0.22", "84.5251, 237.2, 66.9305, 0.22", "84.7907, 238.94, 67.1645, 0.22", "84.8189, 239.161, 67.1915, 0.22", "84.9615, 240.481, 67.3296, 0.22", "84.9778, 240.671, 67.3461, 0.22", "85.0666, 241.781, 67.4276, 0.22", "85.09, 241.942, 67.4375, 0.22", "85.3289, 243.182, 67.5629, 0.22", "85.796, 245.321, 67.832, 0.22", "85.8469, 245.547, 67.8653, 0.22", "86.091, 246.648, 68.0406, 0.96", "86.5598, 248.843, 68.4136, 0.22", "86.9183, 250.927, 68.8467, 0.22", "86.9272, 251.052, 68.8792, 0.22", "86.8815, 252.39, 69.3058, 0.74", "86.8723, 252.46, 69.3301, 0.74", "86.7443, 252.945, 69.5121, 0.74", "86.1496, 254.342, 70.0654, 0.66", "85.3858, 255.889, 70.636, 0.15", "85.348, 255.963, 70.6608, 0.15", "84.7727, 257.034, 70.9883, 0.15", "84.7418, 257.091, 71.0031, 0.15", "84.4595, 257.63, 71.0957, 0.15", "84.3938, 257.771, 71.0991, 0.15", "84.1102, 258.36, 71.0797, 0.15", "84.0718, 258.431, 71.0793, 0.15", "83.4573, 259.443, 71.0947, 0.37", "82.9191, 260.307, 71.111, 0.15", "82.4518, 261.008, 71.1443, 0.66", "82.2273, 261.321, 71.1758, 0.81", "81.3826, 262.407, 71.3632, 0.15", "81.3344, 262.472, 71.3804, 0.15", "80.9597, 262.984, 71.554, 0.37", "80.2993, 263.964, 71.9621, 0.15", "79.5369, 265.292, 72.5767, 0.44", "79.0913, 266.205, 73.0511, 0.81", "78.4987, 267.674, 73.8778, 0.22", "78.4773, 267.74, 73.9178, 0.22", "78.2853, 268.613, 74.4776, 0.22", "78.2099, 269.324, 74.929, 0.22", "78.1813, 270.551, 75.6827, 0.81", "78.1808, 270.763, 75.8062, 0.81", "78.0993, 271.673, 76.3405, 0.22", "78.0037, 272.235, 76.6652, 0.22", "77.8569, 272.695, 76.9268, 0.52", "77.7844, 272.827, 77.0171, 0.66", "77.752, 272.871, 77.0495, 0.66", "77.1493, 273.532, 77.593, 0.52", "76.683, 273.994, 78.0071, 0.22", "76.2882, 274.442, 78.3873, 0.59", "75.3645, 275.926, 79.4438, 0.15", "75.1501, 276.416, 79.756, 0.15", "75.1158, 276.521, 79.8171, 0.15", "74.9146, 277.351, 80.2444, 0.15", "74.662, 278.746, 80.9143, 0.15", "74.4218, 280.355, 81.5517, 0.15", "74.2805, 281.604, 81.9352, 0.15", "74.2691, 281.676, 81.9545, 0.15", "74.111, 282.307, 82.0846, 0.15", "74.0124, 282.534, 82.1143, 0.15", "73.3081, 283.534, 82.1641, 0.29", "73.2394, 283.607, 82.158, 0.29", "72.7516, 284.019, 82.1808, 0.29", "72.175, 284.468, 82.2664, 0.29", "71.3776, 285.07, 82.4212, 0.22", "70.976, 285.356, 82.5121, 0.52", "70.493, 285.694, 82.6333, 0.74", "67.8339, 287.481, 83.2832, 0.15", "67.7778, 287.517, 83.2964, 0.15", "66.807, 288.122, 83.4869, 0.15", "66.1091, 288.544, 83.5943, 0.37", "65.5614, 288.844, 83.6429, 0.37", "65.3035, 288.955, 83.6327, 0.37", "64.7415, 289.12, 83.5431, 0.29", "63.8726, 289.292, 83.4261, 0.29", "62.9135, 289.365, 83.3, 0.15", "61.6617, 289.376, 83.1286, 0.15", "60.0937, 289.266, 82.906, 0.22", "58.5981, 289.103, 82.6571, 0.22", "57.9116, 289.015, 82.549, 0.22", "56.8153, 288.867, 82.372, 0.22", "56.7203, 288.86, 82.3632, 0.22", "55.7599, 288.908, 82.4458, 0.22", "55.1061, 289.015, 82.5661, 0.44", "53.8632, 289.361, 82.8372, 0.22", "53.225, 289.645, 83.0524, 0.66", "51.442, 290.547, 83.7515, 0.22", "50.0962, 291.274, 84.3275, 0.29", "49.3224, 291.733, 84.7095, 0.22", "48.4414, 292.264, 85.1878, 0.44", "47.2693, 293.069, 85.852, 0.22" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "79.3103, 276.176, 20.1662, 0.66", "78.4881, 277.199, 19.6461, 0.66", "77.7701, 278.273, 19.1674, 0.29", "77.6836, 278.438, 19.1081, 0.29", "77.08, 279.84, 18.6876, 0.66", "76.7621, 280.739, 18.495, 0.66", "76.5042, 281.552, 18.3583, 0.29", "76.4588, 281.746, 18.3517, 0.29", "76.3805, 282.301, 18.3727, 0.29", "76.3708, 282.391, 18.3752, 0.29", "76.3021, 283.387, 18.4007, 0.29", "76.2921, 283.476, 18.4031, 0.29", "76.1248, 284.914, 18.4416, 1.03", "76.0789, 285.682, 18.5803, 1.25", "76.0591, 286.395, 18.7966, 1.47", "76.0447, 286.872, 18.9817, 1.47", "76.0041, 287.812, 19.4756, 1.47", "75.9992, 287.882, 19.5206, 1.47", "75.7119, 289.692, 20.9002, 0.22", "75.5276, 290.315, 21.4312, 0.44", "75.3606, 290.745, 21.8126, 0.44", "75.0583, 291.378, 22.3577, 0.22", "75.0282, 291.432, 22.4001, 0.22", "74.5047, 292.325, 22.9552, 0.81", "73.8859, 293.333, 23.4168, 0.22", "73.5214, 293.993, 23.6932, 1.03", "73.2359, 294.571, 23.9094, 1.18", "72.6437, 295.949, 24.3506, 0.22", "72.2743, 296.926, 24.655, 0.22", "72.0876, 297.533, 24.8338, 0.81", "71.8934, 298.246, 25.0222, 1.03", "71.8691, 298.38, 25.0603, 1.03", "71.8172, 298.972, 25.2245, 1.03", "71.7797, 299.935, 25.4756, 0.66", "71.7344, 300.774, 25.6878, 0.52", "71.6315, 302.105, 26.1107, 0.22", "71.5636, 302.863, 26.3785, 0.59", "71.4376, 304.56, 27.0077, 0.22", "71.4029, 305.112, 27.219, 0.81", "71.3608, 306.133, 27.6187, 1.03", "71.3841, 308.226, 28.5361, 0.22", "71.4522, 308.865, 28.8453, 0.88", "71.6147, 309.656, 29.2684, 1.11", "71.6799, 309.817, 29.3668, 1.11", "71.9261, 310.264, 29.644, 1.11", "72.6699, 311.369, 30.3055, 0.22", "73.2156, 312.141, 30.695, 0.74", "73.4509, 312.495, 30.8658, 0.74", "74.3068, 313.741, 31.4421, 0.22", "74.5792, 314.127, 31.6217, 0.88", "74.9103, 314.595, 31.8347, 1.03", "75.3412, 315.302, 32.1152, 0.52", "75.7838, 316.136, 32.4245, 0.22", "76.285, 317.043, 32.7438, 0.22", "76.8551, 318.024, 33.059, 1.25", "76.9039, 318.108, 33.0842, 1.25", "77.5772, 319.29, 33.4087, 0.22", "78.0661, 320.175, 33.6235, 0.22", "78.5294, 321.062, 33.8101, 0.22", "78.9332, 321.879, 33.9579, 0.22", "79.2643, 322.581, 34.0638, 0.96", "79.7007, 323.5, 34.1952, 1.11", "80.4322, 325.022, 34.4032, 0.22", "80.8271, 325.919, 34.4921, 1.11", "80.8647, 326.018, 34.4992, 1.11", "81.3955, 327.541, 34.5788, 0.22", "81.6871, 328.575, 34.6182, 1.03", "81.7699, 328.977, 34.6231, 1.03", "81.947, 330.535, 34.6041, 0.22", "81.9951, 331.379, 34.5844, 0.22", "81.9998, 331.545, 34.5809, 0.22", "82.0552, 332.913, 34.5341, 0.22", "82.0614, 333.007, 34.5323, 0.22", "82.1325, 333.451, 34.5345, 0.22", "82.1538, 333.527, 34.5382, 0.22", "82.4974, 334.229, 34.5805, 0.52", "83.1641, 335.284, 34.6622, 0.22", "83.5463, 335.809, 34.7116, 0.81", "83.8767, 336.286, 34.7626, 0.81", "84.0924, 336.615, 34.7946, 0.81", "84.9515, 338.044, 34.9291, 0.22", "85.1956, 338.518, 34.9854, 0.74", "85.5017, 339.192, 35.0843, 1.03", "85.8145, 340.024, 35.2076, 1.18", "86.1398, 341.049, 35.3605, 1.11", "86.2892, 341.593, 35.4433, 0.81", "86.7127, 343.372, 35.7226, 0.29", "86.9964, 344.517, 35.9099, 0.81", "87.3589, 346.01, 36.135, 0.22", "87.4023, 346.202, 36.1619, 0.22", "87.5903, 347.28, 36.3022, 0.22", "87.6352, 347.809, 36.3557, 0.22", "87.6109, 348.554, 36.399, 0.22", "87.3889, 350.09, 36.4579, 1.11", "87.1893, 350.933, 36.4805, 1.62", "86.8498, 351.881, 36.529, 1.47", "86.1829, 353.236, 36.6218, 0.37", "85.68, 354.051, 36.6912, 0.66", "85.2431, 354.67, 36.7765, 0.66", "84.5683, 355.622, 36.9964, 0.29", "83.7628, 356.8, 37.3381, 1.18", "83.3535, 357.479, 37.5669, 0.74", "82.9133, 358.395, 37.9134, 0.29", "82.5437, 359.359, 38.3229, 0.29", "82.1646, 360.815, 38.9529, 0.22", "82.1543, 360.884, 38.9803, 0.22", "82.0871, 361.704, 39.2466, 0.74", "82.0487, 362.337, 39.4079, 1.03", "82.007, 362.998, 39.532, 1.18", "81.9124, 364.03, 39.6413, 0.22", "81.8104, 365.291, 39.6961, 0.22", "81.7713, 366.118, 39.7228, 0.22", "81.7585, 367.028, 39.7416, 0.88", "81.7591, 367.117, 39.7412, 0.88", "81.7947, 368.026, 39.7114, 0.88", "81.8514, 369.833, 39.6863, 0.22", "81.8886, 370.553, 39.7027, 0.74", "81.894, 370.652, 39.7096, 0.74", "81.9153, 371.182, 39.7699, 0.96", "81.9139, 371.369, 39.7946, 0.96", "81.8334, 372.838, 40.0242, 0.15", "81.7773, 373.543, 40.176, 0.29", "81.7576, 373.986, 40.2756, 0.29", "81.7429, 374.555, 40.4045, 0.22", "81.7676, 375.384, 40.5958, 0.59", "79.5651, 387.598, 41.0017, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "79.3103, 276.176, 20.1662, 0.22", "80.5266, 277.563, 21.3861, 0.22", "80.5731, 277.619, 21.43, 0.22", "81.0502, 278.203, 21.8634, 0.96", "81.7408, 279.065, 22.4697, 0.22", "82.1876, 279.624, 22.835, 0.66", "82.7, 280.276, 23.2331, 0.22", "83.0773, 280.703, 23.463, 0.52", "83.1357, 280.775, 23.5031, 0.52", "83.3576, 281.094, 23.6761, 0.52", "83.815, 281.825, 24.0577, 0.22", "84.0332, 282.198, 24.2649, 0.59", "84.2149, 282.554, 24.5041, 0.59", "84.731, 283.829, 25.3982, 0.22", "84.8854, 284.439, 25.7788, 0.96", "84.9075, 284.509, 25.8197, 0.96", "85.0263, 284.86, 26.014, 0.96", "85.4605, 285.969, 26.5952, 0.66", "85.8639, 286.906, 27.0507, 0.22", "86.445, 288.191, 27.6097, 0.22", "87.613, 290.512, 28.6247, 0.22", "87.6952, 290.663, 28.6888, 0.22", "88.0712, 291.253, 28.9273, 0.59", "88.1258, 291.32, 28.9504, 0.59", "94.234, 300.69, 32.472, 0.59" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-179.946, 9.43328, 100.877, 0.22", "-181.274, 9.03663, 101.796, 0.22", "-181.732, 8.92381, 102.109, 0.22", "-182.295, 8.73907, 102.591, 0.66", "-182.538, 8.65036, 102.807, 0.88", "-182.809, 8.48363, 103.111, 0.59", "-182.853, 8.44588, 103.166, 0.59", "-183.345, 7.87534, 103.889, 0.29", "-183.826, 6.95151, 104.813, 1.33", "-183.899, 6.66255, 105.024, 1.33", "-183.981, 4.98396, 105.873, 0.37", "-183.886, 4.17637, 106.114, 0.37", "-183.872, 4.11109, 106.121, 0.29", "-183.612, 3.23187, 106.062, 0.29", "-183.306, 2.38028, 105.895, 0.37", "-182.993, 1.59622, 105.675, 0.37", "-182.832, 1.21569, 105.501, 0.29", "-182.476, 0.320428, 105.1, 0.22", "-182.34, -0.0663934, 104.934, 0.22" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-179.946, 9.43328, 100.877, 0.22", "-180.766, 8.73261, 101.074, 0.22", "-181.401, 8.24903, 101.235, 0.22", "-181.451, 8.21838, 101.248, 0.22", "-182.058, 7.9171, 101.433, 0.22", "-182.721, 7.67917, 101.649, 0.37", "-182.893, 7.64162, 101.715, 0.37", "-183.276, 7.64296, 101.896, 0.37", "-183.826, 7.70316, 102.174, 0.22", "-184.288, 7.76609, 102.427, 0.29", "-184.768, 7.84852, 102.709, 0.29", "-185.447, 7.96399, 103.116, 0.22", "-185.938, 8.02907, 103.404, 0.52", "-186.308, 8.06229, 103.614, 0.59", "-186.778, 8.07798, 103.87, 0.29", "-187.249, 8.04983, 104.098, 0.22", "-187.484, 8.01357, 104.202, 0.59", "-187.924, 7.92236, 104.369, 0.22", "-188.364, 7.84899, 104.523, 0.59", "-188.423, 7.84071, 104.542, 0.59", "-189.065, 7.76285, 104.733, 0.52", "-189.383, 7.71748, 104.827, 0.81", "-189.438, 7.7088, 104.843, 0.81", "-190.344, 7.53567, 105.114, 0.29", "-190.42, 7.52203, 105.137, 0.29", "-190.671, 7.49436, 105.228, 0.52", "-191.067, 7.50923, 105.378, 0.88", "-191.119, 7.52136, 105.4, 0.88", "-191.558, 7.68634, 105.61, 1.25", "-191.96, 7.92832, 105.836, 1.4", "-192.926, 8.56976, 106.392, 0.22", "-193.451, 8.979, 106.713, 0.22", "-194.229, 9.72313, 107.219, 0.29", "-194.264, 9.7628, 107.243, 0.29", "-194.488, 10.1416, 107.431, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "58.553, 82.2401, 39.8671, 0.22", "58.8094, 82.8165, 39.3401, 0.22", "58.963, 83.1619, 39.0244, 0.22", "59.4205, 84.1908, 38.0839, 0.22", "59.4394, 84.2333, 38.0451, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "58.553, 82.2401, 39.8671, 0.29", "59.9873, 82.1004, 39.2742, 0.29", "61.1431, 82.0483, 38.7677, 0.37", "61.2642, 82.0476, 38.715, 0.37", "61.9014, 82.0656, 38.4432, 0.52", "62.6572, 82.1233, 38.0199, 0.44", "62.7361, 82.1313, 37.9727, 0.44", "63.6058, 82.257, 37.442, 0.44", "64.2978, 82.358, 36.9999, 0.74", "64.8641, 82.4198, 36.6534, 0.96", "66.6146, 82.5551, 35.6156, 0.22", "67.6708, 82.6245, 35.0397, 0.22", "68.6499, 82.7186, 34.5327, 0.44", "68.7596, 82.7341, 34.481, 0.44", "69.5068, 82.8814, 34.1827, 0.44", "69.5804, 82.9009, 34.161, 0.44", "70.4854, 83.2236, 34.043, 0.29", "71.4176, 83.6684, 33.901, 0.59", "72.0004, 83.9894, 33.7834, 0.81", "72.5974, 84.3161, 33.6343, 0.81", "72.9012, 84.4736, 33.5454, 0.81", "73.0067, 84.5216, 33.5039, 0.81", "73.9073, 84.8909, 33.0759, 0.37", "74.4372, 85.0881, 32.806, 0.81", "74.9256, 85.2546, 32.542, 1.03", "75.4888, 85.4389, 32.2336, 0.88", "76.7265, 85.8467, 31.5593, 0.22", "77.4805, 86.1084, 31.1587, 0.22", "78.2873, 86.4113, 30.7575, 0.22" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-37.6442, 40.1749, 44.7106, 0.29", "-37.7711, 39.5152, 45.5034, 0.29", "-37.9328, 39.2994, 45.675, 0.29", "-38.6669, 38.6712, 45.8817, 0.29", "-38.7781, 38.5931, 45.9275, 0.29", "-40.3487, 37.7863, 46.5907, 0.29", "-41.0276, 37.4887, 47.1129, 0.29", "-41.8038, 37.17, 47.6733, 0.29", "-42.7222, 36.8497, 48.3141, 0.29", "-43.9881, 36.4858, 49.1644, 1.18", "-44.599, 36.3415, 49.5994, 1.18", "-46.8251, 36.1403, 51.3897, 1.4" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-37.6442, 40.1749, 44.7106, 0.29", "-38.7112, 40.2579, 44.2367, 0.29", "-39.5216, 40.321, 43.8768, 0.29", "-40.5443, 40.4006, 43.4227, 0.22", "-41.1856, 40.4506, 43.1378, 0.59", "-41.4669, 40.4725, 43.0129, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "216.345, -230.399, -3.03233, 0.52", "217.026, -231.102, -3.00566, 0.52", "217.759, -231.986, -2.93121, 0.52", "218.296, -232.677, -2.85954, 0.74", "218.986, -233.543, -2.76239, 0.15", "219.062, -233.634, -2.75207, 0.15", "219.981, -234.728, -2.67511, 0.15", "220.768, -235.719, -2.6806, 1.4", "221.066, -236.097, -2.69767, 1.4", "222.051, -237.301, -2.78914, 0.29", "222.852, -238.163, -2.85526, 0.29", "223.653, -238.937, -2.88834, 0.22", "224.363, -239.529, -2.89415, 0.96", "224.839, -239.879, -2.89915, 1.25", "225.314, -240.203, -2.88926, 1.25", "226.809, -241.215, -2.75881, 0.22", "227.461, -241.661, -2.66327, 1.03", "228.061, -242.076, -2.54069, 1.33", "229.079, -242.815, -2.31095, 0.22", "229.914, -243.527, -2.09165, 0.22", "230.652, -244.266, -1.87643, 0.88", "231.029, -244.698, -1.76061, 1.03", "231.125, -244.817, -1.73154, 1.03", "231.439, -245.249, -1.62194, 1.03", "232.195, -246.442, -1.31793, 0.29", "232.238, -246.513, -1.30266, 0.29", "232.892, -247.505, -1.14263, 0.29", "233.305, -248.089, -1.03797, 0.22", "233.693, -248.593, -0.946373, 0.74", "234.047, -249.01, -0.829822, 0.74", "234.695, -249.708, -0.594022, 0.22", "235.317, -250.306, -0.32089, 0.81", "235.91, -250.822, -0.0300431, 0.81", "236.282, -251.11, 0.154719, 0.81", "237.65, -252.099, 0.808444, 0.22", "237.713, -252.14, 0.833007, 0.22", "238.706, -252.682, 1.14882, 0.22", "239.55, -253.106, 1.35907, 1.11", "240.059, -253.332, 1.4251, 1.33", "240.73, -253.595, 1.45331, 1.25", "242.115, -254.078, 1.32951, 0.22", "243.409, -254.502, 1.14473, 0.22", "243.477, -254.524, 1.12747, 0.22", "244.543, -254.854, 0.782203, 0.22", "244.601, -254.876, 0.759103, 0.22", "245.296, -255.234, 0.4261, 0.52", "245.452, -255.337, 0.335544, 0.52", "246.504, -256.184, -0.371904, 0.29", "247.093, -256.687, -0.766212, 0.29", "247.706, -257.283, -1.17236, 1.62", "248.129, -257.705, -1.43312, 1.62" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "216.345, -230.399, -3.03233, 0.22", "215.308, -231.552, -3.16913, 0.22", "214.637, -232.298, -3.25763, 0.22", "213.334, -233.746, -3.42943, 0.22", "212.685, -234.468, -3.51503, 0.22", "212.27, -234.93, -3.56977, 0.22", "211.488, -235.798, -3.67279, 0.22" ],
    "parent" : "dend_98",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "17.2086, -273.978, -50.399, 0.22", "17.0782, -275.127, -50.2512, 0.22", "16.9888, -275.595, -50.1495, 0.74", "16.8984, -275.994, -50.0488, 0.96", "16.7723, -276.562, -49.9032, 0.59", "16.5708, -277.548, -49.6545, 0.22", "16.4395, -278.231, -49.4844, 0.22", "16.2429, -279.315, -49.2151, 0.22", "16.2302, -279.382, -49.2004, 0.22", "16.0972, -280.093, -49.072, 0.22", "16.0319, -280.398, -49.0314, 0.52", "16.0172, -280.462, -49.0277, 0.52", "15.8072, -281.405, -49.0109, 0.22", "15.6462, -281.952, -49.0072, 0.81", "15.5319, -282.254, -48.9948, 1.03", "15.3092, -282.714, -48.9592, 0.74", "14.8862, -283.542, -48.9071, 0.22", "14.6464, -284.033, -48.8794, 0.52", "14.2269, -284.904, -48.8269, 0.22", "14.0555, -285.305, -48.8124, 0.96", "13.9088, -285.738, -48.808, 1.11", "13.6088, -286.958, -48.8294, 0.22", "13.513, -287.61, -48.8633, 1.03", "13.5108, -287.672, -48.8663, 1.03", "13.5489, -288.251, -48.8871, 1.25", "13.6199, -289.008, -48.8881, 0.88", "13.6282, -289.259, -48.8736, 0.74", "13.6243, -289.345, -48.8622, 0.74", "13.5472, -290.13, -48.7498, 0.22", "13.4433, -290.917, -48.6348, 0.22", "13.4137, -291.102, -48.6075, 0.22", "13.2392, -292.088, -48.3771, 0.22", "13.1139, -292.877, -48.1639, 0.22", "13.0073, -293.737, -47.924, 1.18", "12.9603, -294.268, -47.7764, 1.4", "12.9512, -294.698, -47.6369, 1.4", "13.0353, -296.255, -47.0315, 0.22", "13.1525, -297.069, -46.6161, 0.22", "13.2767, -297.779, -46.1794, 0.52", "13.3158, -298.0, -46.0261, 0.52", "13.5119, -299.074, -45.1973, 0.22", "13.672, -299.934, -44.4716, 0.96", "13.9083, -301.035, -43.4918, 0.22", "13.9179, -301.081, -43.4453, 0.22", "14.0167, -301.655, -42.8435, 0.22", "14.1156, -302.309, -42.2324, 0.22", "14.1214, -302.36, -42.1994, 0.22", "14.1847, -302.895, -42.0201, 1.4", "14.196, -302.967, -42.0098, 1.4", "14.2828, -303.331, -41.9507, 1.4", "14.6783, -304.241, -41.651, 0.22", "15.0424, -304.917, -41.2886, 0.22", "15.2171, -305.227, -41.0667, 0.52", "15.2476, -305.279, -41.0219, 0.52", "15.7038, -306.046, -40.2431, 1.4", "16.396, -307.222, -38.9359, 0.59", "16.742, -307.867, -38.1595, 0.22", "17.0481, -308.525, -37.2583, 0.22", "17.0701, -308.583, -37.1739, 0.22", "17.3127, -309.525, -35.8038, 1.18", "17.4074, -310.331, -34.6291, 0.22", "17.3656, -311.036, -33.6609, 0.88", "17.183, -312.142, -32.1388, 0.22", "17.1245, -312.339, -31.8674, 1.03", "17.0087, -312.616, -31.5092, 1.03", "16.9865, -312.655, -31.4643, 1.03", "16.5579, -313.307, -30.7931, 0.22", "16.26, -313.782, -30.4029, 0.22", "15.7033, -314.662, -29.82, 1.11", "15.5462, -314.889, -29.6746, 1.11", "14.8159, -315.879, -29.0818, 0.22", "14.5126, -316.243, -28.8761, 0.88", "14.1791, -316.583, -28.6848, 0.96", "13.6441, -317.104, -28.4143, 0.96", "12.8935, -317.868, -28.0907, 0.22", "12.4152, -318.45, -27.8399, 0.22", "12.0282, -318.994, -27.6092, 0.22", "11.4789, -320.033, -27.162, 0.96", "11.314, -320.537, -26.9445, 1.25", "11.2249, -321.116, -26.698, 1.18", "11.2229, -322.625, -25.9986, 0.22", "11.2336, -322.748, -25.9391, 0.22", "11.3751, -323.543, -25.5155, 0.22", "11.5276, -324.307, -25.0915, 0.88", "11.572, -324.598, -24.9195, 0.88", "11.6987, -325.793, -24.1898, 0.22", "11.702, -325.85, -24.1561, 0.22", "11.7393, -327.181, -23.3576, 0.22", "11.703, -327.766, -23.0113, 1.25", "11.6374, -328.157, -22.7986, 1.25", "11.6242, -328.212, -22.7742, 1.25", "11.5075, -328.582, -22.6624, 1.25", "11.3784, -329.002, -22.574, 0.66", "11.0543, -329.934, -22.4898, 0.15", "11.0368, -329.989, -22.4852, 0.15", "10.8471, -330.612, -22.4339, 0.15", "10.817, -330.732, -22.4234, 0.15", "10.6758, -331.414, -22.3629, 0.15", "10.5511, -332.154, -22.2981, 0.15", "10.4395, -332.958, -22.2273, 0.96", "10.3862, -333.419, -22.1874, 1.18", "10.2915, -334.447, -22.058, 0.22", "10.2453, -335.108, -21.9584, 0.22", "10.2246, -335.766, -21.8115, 0.88", "10.2397, -336.763, -21.54, 0.22", "10.2557, -337.194, -21.405, 0.22", "10.3008, -338.313, -21.0122, 0.96", "10.3322, -338.75, -20.8442, 1.25", "10.5193, -340.309, -20.2022, 0.22", "10.5302, -340.366, -20.1712, 0.22", "10.6066, -340.706, -19.9669, 0.22", "10.6176, -340.754, -19.9362, 0.22", "10.7821, -341.314, -19.5651, 0.22", "10.8804, -341.583, -19.3603, 0.88", "11.6693, -343.039, -18.0586, 0.22" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "17.2086, -273.978, -50.399, 0.29", "17.6946, -275.111, -52.2224, 0.29", "18.5576, -276.892, -54.6757, 0.59", "18.9292, -277.637, -55.5985, 1.11", "19.2685, -278.28, -56.3485, 1.33", "19.6798, -278.987, -57.1911, 1.33", "19.7178, -279.047, -57.2609, 1.33", "20.2332, -279.804, -57.9797, 0.88", "21.3392, -281.232, -59.1673, 0.37", "21.5807, -281.572, -59.4653, 0.37", "22.0776, -282.349, -60.1037, 0.37", "22.8086, -283.525, -60.9901, 0.88", "23.1223, -284.05, -61.3381, 1.62", "23.3713, -284.486, -61.5995, 1.62", "24.2204, -286.002, -62.3467, 0.37", "24.6975, -286.866, -62.7606, 0.29", "25.1391, -287.712, -63.1308, 0.96", "25.5821, -288.603, -63.5367, 0.96", "25.8522, -289.268, -63.9354, 1.33", "26.0516, -289.833, -64.3292, 1.11", "26.4573, -291.128, -65.2889, 0.37", "26.5812, -292.023, -66.0708, 1.11", "26.5777, -292.851, -66.8322, 1.11", "26.2997, -295.402, -69.2236, 0.66", "26.2885, -295.467, -69.2829, 0.66", "26.0362, -296.543, -70.2238, 0.88", "25.2977, -299.016, -72.2835, 0.29", "25.1425, -299.501, -72.6852, 1.25", "25.007, -299.995, -73.0562, 1.55", "24.89, -300.641, -73.4941, 1.25", "24.8148, -301.694, -74.2454, 0.88", "24.8215, -301.761, -74.2987, 0.88", "25.3889, -303.253, -75.542, 0.37", "25.7819, -303.998, -76.2689, 0.37", "26.3905, -304.913, -77.2809, 1.33", "26.8346, -305.456, -77.9359, 1.47", "27.6645, -306.266, -78.9305, 0.52", "28.2713, -306.796, -79.5958, 0.22", "28.5122, -306.973, -79.816, 0.22", "29.0193, -307.306, -80.254, 1.18", "29.5655, -307.642, -80.6859, 1.47", "30.476, -308.189, -81.4435, 1.62", "31.9765, -309.026, -82.654, 0.74", "32.99, -309.581, -83.4956, 0.22", "33.5829, -309.932, -84.1378, 0.22", "33.6371, -309.97, -84.2126, 0.22", "34.1347, -310.373, -85.0085, 1.25", "34.6374, -310.864, -85.9078, 1.47", "34.6841, -310.916, -85.9931, 1.47", "36.2043, -312.904, -89.0175, 0.22", "36.7515, -313.678, -90.0777, 0.22", "37.3019, -314.439, -90.9865, 0.22", "37.7287, -315.043, -91.5992, 0.81", "38.0281, -315.464, -91.9735, 1.03", "38.1316, -315.595, -92.0694, 1.03", "38.7512, -316.209, -92.3411, 1.03", "39.6351, -316.973, -92.6867, 0.59", "39.7019, -317.025, -92.7145, 0.59", "40.9612, -317.806, -93.2458, 0.22", "41.0364, -317.841, -93.2788, 0.22", "42.0622, -318.111, -93.8016, 0.22", "42.1347, -318.123, -93.841, 0.22", "43.061, -318.263, -94.3454, 0.96", "43.4757, -318.326, -94.5607, 1.33", "44.2944, -318.462, -94.9511, 1.33", "45.9427, -318.824, -95.7181, 0.22", "47.2311, -319.149, -96.3049, 0.22", "48.1831, -319.423, -96.72, 0.29", "48.2489, -319.445, -96.747, 0.29", "49.2815, -319.822, -97.1467, 0.29", "50.3601, -320.28, -97.5239, 0.29", "50.895, -320.518, -97.6849, 1.03", "51.4836, -320.783, -97.8623, 1.25", "52.3608, -321.188, -98.1635, 0.96", "53.3369, -321.667, -98.528, 0.29", "54.6683, -322.374, -99.094, 0.29", "55.6553, -322.945, -99.5512, 0.88", "56.3094, -323.366, -99.8684, 1.18", "57.1299, -323.925, -100.275, 1.11", "58.2022, -324.661, -100.812, 0.44", "58.9826, -325.221, -101.203, 0.66", "59.6277, -325.702, -101.525, 0.81", "60.4908, -326.404, -101.932, 0.52", "61.2858, -327.09, -102.266, 0.22", "61.7158, -327.489, -102.407, 0.52", "62.3955, -328.147, -102.635, 0.22", "62.5183, -328.271, -102.684, 0.22", "63.0586, -328.823, -102.946, 0.22", "63.2308, -329.008, -103.039, 0.22", "64.0408, -330.008, -103.496, 0.22", "64.6372, -330.738, -103.827, 1.33", "65.4179, -331.652, -104.243, 1.47", "65.9537, -332.289, -104.522, 1.47", "66.9313, -333.478, -105.02, 0.22", "67.849, -334.593, -105.5, 0.22", "68.5045, -335.385, -105.836, 0.22", "69.1866, -336.184, -106.155, 0.88", "69.4855, -336.511, -106.285, 1.18", "69.6648, -336.692, -106.389, 1.18", "70.7303, -337.653, -107.127, 0.22", "71.2092, -338.072, -107.5, 0.96", "71.836, -338.659, -108.041, 1.25", "71.9067, -338.726, -108.106, 1.25", "73.4165, -340.158, -109.518, 0.22", "73.484, -340.223, -109.582, 0.22", "73.9116, -340.662, -109.999, 0.22", "73.9605, -340.709, -110.046, 0.22", "74.5616, -341.222, -110.561, 0.59", "74.6901, -341.336, -110.692, 0.59", "74.8719, -341.515, -110.886, 0.59", "74.9133, -341.559, -110.936, 0.59", "75.3248, -342.099, -111.534, 0.15", "75.6298, -342.558, -112.026, 1.33", "76.5834, -344.097, -113.677, 1.25", "76.9696, -344.737, -114.322, 0.88", "77.0067, -344.803, -114.386, 0.88", "77.5526, -346.105, -115.666, 0.22", "77.5925, -346.231, -115.791, 0.22", "77.9114, -347.362, -116.957, 0.88", "78.2775, -348.56, -118.191, 0.22", "78.5115, -349.217, -118.94, 1.18", "79.1683, -350.668, -121.004, 0.74", "79.1895, -350.706, -121.07, 0.74", "79.7067, -351.482, -122.649, 0.59", "80.1185, -351.936, -123.836, 1.03", "80.6039, -352.256, -125.026, 1.03", "81.9227, -352.739, -127.58, 0.22", "81.9718, -352.746, -127.655, 0.22", "82.2203, -352.761, -128.024, 0.44", "82.5067, -352.756, -128.419, 0.44", "82.8255, -352.766, -128.824, 0.44", "82.882, -352.785, -128.883, 0.44", "83.6752, -353.168, -129.548, 0.22", "83.7474, -353.197, -129.62, 0.22", "84.5952, -353.493, -130.521, 1.03", "85.0876, -353.63, -131.05, 1.4", "86.8954, -354.024, -132.988, 0.22", "87.167, -354.066, -133.269, 0.66", "88.7166, -354.219, -134.82, 0.22", "89.2044, -354.229, -135.286, 0.88", "89.7686, -354.2, -135.768, 1.03", "89.8826, -354.191, -135.852, 1.03", "90.3996, -354.155, -136.175, 1.03", "90.4743, -354.156, -136.224, 1.03", "91.6218, -354.293, -136.968, 0.29", "92.6735, -354.578, -137.983, 0.29", "92.7291, -354.601, -138.049, 0.29", "93.9935, -355.173, -139.684, 0.29", "94.5904, -355.457, -140.499, 0.88", "95.2902, -355.796, -141.471, 1.18", "97.2712, -356.836, -144.394, 0.22", "97.6541, -357.047, -144.95, 0.81", "98.4954, -357.514, -146.059, 0.59", "98.9431, -357.788, -146.548, 0.81", "99.4916, -358.087, -147.011, 1.18", "99.5711, -358.124, -147.059, 1.18", "100.358, -358.439, -147.345, 0.81", "100.422, -358.476, -147.382, 0.81", "101.28, -359.157, -148.036, 0.22", "101.658, -359.494, -148.446, 0.44", "101.818, -359.633, -148.642, 0.44", "102.642, -360.318, -149.701, 0.29", "103.447, -361.025, -150.884, 1.33", "103.801, -361.345, -151.425, 1.47", "104.992, -362.449, -153.339, 0.29", "105.425, -362.873, -154.074, 0.29", "105.463, -362.91, -154.138, 0.29", "106.712, -364.061, -156.126, 1.25", "107.139, -364.443, -156.797, 1.25", "107.196, -364.492, -156.885, 1.25", "107.875, -365.082, -157.939, 1.03", "108.253, -365.436, -158.582, 0.66", "109.338, -366.419, -160.363, 0.29", "109.391, -366.463, -160.443, 0.29", "110.015, -366.981, -161.324, 0.29", "110.836, -367.645, -162.362, 0.22", "111.634, -368.275, -163.248, 0.81", "112.231, -368.754, -163.87, 0.88", "113.119, -369.439, -164.655, 0.74", "114.079, -370.106, -165.389, 0.22", "114.682, -370.436, -165.748, 0.88", "115.134, -370.617, -165.951, 1.11", "115.214, -370.642, -165.981, 1.11", "115.977, -370.829, -166.245, 0.88", "117.564, -371.151, -166.729, 0.29", "119.66, -371.532, -167.325, 0.29", "119.795, -371.554, -167.365, 0.29", "120.413, -371.633, -167.569, 0.52", "121.455, -371.74, -167.937, 0.22", "122.307, -371.813, -168.256, 1.03", "123.203, -371.878, -168.612, 1.11", "125.208, -372.081, -169.424, 0.22", "126.706, -372.265, -170.061, 0.22", "127.162, -372.327, -170.264, 1.03", "127.494, -372.378, -170.417, 1.03", "127.581, -372.394, -170.465, 1.03", "129.121, -372.812, -171.552, 0.22", "130.11, -373.193, -172.381, 0.74", "130.173, -373.221, -172.439, 0.74", "130.853, -373.54, -173.154, 0.74", "132.287, -374.214, -174.765, 0.22", "133.212, -374.638, -175.851, 1.33", "133.695, -374.862, -176.425, 1.33", "133.753, -374.892, -176.486, 1.33", "135.538, -375.867, -178.236, 0.22", "135.987, -376.128, -178.641, 0.81", "136.386, -376.355, -178.938, 0.81", "137.415, -376.965, -179.677, 0.22", "138.597, -377.759, -180.593, 0.22", "139.221, -378.221, -181.084, 0.74", "139.301, -378.276, -181.125, 0.74", "139.634, -378.48, -181.245, 0.74", "141.469, -379.488, -181.697, 0.22", "142.585, -379.987, -181.641, 0.88", "143.201, -380.222, -181.463, 1.18", "146.52, -381.389, -180.139, 0.22", "147.059, -381.564, -179.886, 0.88", "147.271, -381.624, -179.77, 0.88", "150.033, -382.333, -178.095, 0.22", "151.458, -382.698, -177.21, 0.88", "151.756, -382.777, -177.041, 0.88", "151.853, -382.807, -176.996, 0.88", "153.282, -383.233, -176.432, 0.22", "154.408, -383.533, -176.135, 0.22", "154.52, -383.554, -176.123, 0.22", "156.047, -383.812, -175.989, 0.74", "156.223, -383.843, -175.978, 0.74", "157.195, -383.992, -175.909, 0.96", "158.011, -384.09, -175.857, 1.11", "160.743, -384.226, -175.654, 0.22", "161.472, -384.238, -175.597, 0.52", "163.152, -384.155, -175.483, 0.22", "164.232, -384.043, -175.413, 0.74", "164.867, -383.926, -175.387, 0.74", "166.588, -383.517, -175.314, 0.22", "166.756, -383.464, -175.311, 0.22", "168.072, -382.972, -175.272, 0.22", "168.241, -382.902, -175.265, 0.22", "169.705, -382.33, -175.241, 0.96", "171.929, -381.571, -175.203, 0.22", "172.117, -381.515, -175.203, 0.22", "173.157, -381.239, -175.222, 1.25", "173.238, -381.219, -175.225, 1.25", "174.458, -380.897, -175.312, 0.37", "175.262, -380.659, -175.412, 0.29", "176.046, -380.448, -175.548, 0.66", "176.912, -380.276, -175.676, 0.81", "177.354, -380.243, -175.723, 0.81", "178.178, -380.243, -175.74, 0.81", "178.267, -380.247, -175.732, 0.81", "180.396, -380.384, -175.387, 0.15", "181.279, -380.445, -175.214, 0.37", "183.124, -380.602, -174.769, 0.22", "185.057, -380.785, -174.245, 1.03", "186.292, -380.906, -173.867, 0.81", "186.378, -380.916, -173.84, 0.81", "187.859, -381.078, -173.336, 0.22", "189.623, -381.315, -172.785, 0.22", "189.695, -381.326, -172.766, 0.22", "190.721, -381.496, -172.619, 1.11", "191.722, -381.685, -172.548, 1.4", "191.811, -381.697, -172.539, 1.4", "193.61, -381.888, -172.317, 0.29", "193.787, -381.877, -172.295, 0.29", "194.835, -381.676, -172.08, 0.22", "194.928, -381.649, -172.056, 0.22", "196.732, -380.937, -171.534, 0.22", "196.798, -380.908, -171.514, 0.22", "197.784, -380.403, -171.207, 1.18", "199.84, -379.378, -170.679, 0.22", "199.944, -379.328, -170.656, 0.22", "200.896, -378.917, -170.541, 0.22", "200.973, -378.886, -170.54, 0.22", "202.032, -378.555, -170.608, 0.74", "202.824, -378.389, -170.724, 0.96", "202.91, -378.376, -170.742, 0.96", "204.785, -378.198, -171.127, 0.22", "204.873, -378.197, -171.146, 0.22", "206.135, -378.181, -171.442, 0.22", "206.913, -378.168, -171.64, 0.74", "206.999, -378.164, -171.663, 0.74", "207.742, -378.064, -171.899, 0.74", "209.46, -377.63, -172.548, 0.22", "210.251, -377.38, -172.865, 0.37", "210.639, -377.221, -173.034, 0.37", "210.708, -377.189, -173.065, 0.37", "211.681, -376.713, -173.512, 0.22", "211.937, -376.572, -173.575, 0.37", "212.095, -376.477, -173.594, 0.37", "212.454, -376.283, -173.572, 0.29", "213.199, -375.815, -173.41, 0.22", "213.677, -375.487, -173.264, 0.66", "215.48, -374.181, -172.629, 0.22", "216.125, -373.687, -172.393, 0.66", "217.184, -372.803, -171.936, 0.96", "219.146, -371.078, -170.837, 0.22", "219.212, -371.017, -170.795, 0.22", "219.875, -370.406, -170.363, 0.22", "219.993, -370.309, -170.27, 0.22", "221.975, -368.774, -168.529, 0.88", "223.856, -367.375, -166.838, 0.22", "224.337, -367.041, -166.368, 1.25", "224.393, -367.002, -166.31, 1.25", "227.565, -364.911, -162.826, 0.22", "228.208, -364.515, -162.092, 0.74", "238.032, -369.492, -167.744, 0.74" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "120.676, -193.269, 17.7754, 0.37", "121.444, -193.658, 18.002, 0.37", "122.022, -193.973, 18.1772, 0.29", "122.781, -194.417, 18.343, 0.59", "123.061, -194.586, 18.3614, 0.96", "123.43, -194.825, 18.3416, 1.25", "123.977, -195.213, 18.2766, 1.25", "124.456, -195.605, 18.1736, 1.03", "125.094, -196.212, 17.975, 0.29", "125.781, -196.954, 17.7039, 0.29", "126.278, -197.532, 17.4769, 0.88", "126.649, -197.995, 17.284, 0.81", "127.052, -198.492, 17.0708, 0.81", "127.419, -198.917, 16.9027, 1.25", "127.793, -199.312, 16.7775, 1.62", "128.299, -199.827, 16.6546, 1.62", "128.345, -199.868, 16.6445, 1.62", "129.22, -200.523, 16.4382, 0.29", "129.671, -200.798, 16.3296, 0.96", "129.985, -200.95, 16.2587, 1.25" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "120.676, -193.269, 17.7754, 0.22", "120.104, -194.168, 18.0853, 0.22", "120.072, -194.224, 18.106, 0.22", "119.563, -195.156, 18.4677, 0.22", "119.441, -195.4, 18.5186, 0.52", "119.014, -196.293, 18.6348, 0.15", "118.993, -196.349, 18.6379, 0.15", "118.802, -197.099, 18.6135, 0.15", "118.791, -197.158, 18.6066, 0.15", "118.472, -198.908, 18.1765, 0.15", "118.46, -198.959, 18.1608, 0.15", "118.175, -200.139, 17.722, 0.15", "118.163, -200.187, 17.7034, 0.15", "117.887, -201.266, 17.2353, 0.29", "117.544, -202.502, 16.7156, 0.22", "117.386, -202.961, 16.5485, 0.44" ],
    "parent" : "dend_79",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "33.7903, -189.419, 21.2669, 0.22", "35.4485, -191.14, 20.7155, 0.22", "36.5784, -192.202, 20.3739, 0.37", "37.2397, -192.776, 20.1862, 0.37", "38.5455, -193.733, 19.8546, 0.22", "38.627, -193.771, 19.8371, 0.22", "39.5108, -193.957, 19.6751, 0.37", "39.6121, -193.915, 19.6668, 0.37", "39.8546, -193.777, 19.6405, 0.37", "41.1403, -192.943, 19.4775, 0.22", "42.3922, -192.018, 19.2992, 0.22", "42.4577, -191.971, 19.2893, 0.22", "43.8494, -191.02, 19.059, 0.22", "44.4921, -190.618, 18.9474, 0.37", "44.5717, -190.576, 18.9322, 0.37" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "33.7903, -189.419, 21.2669, 0.22", "33.2603, -190.056, 21.0123, 0.22", "33.2373, -190.096, 20.9999, 0.22", "32.9976, -190.746, 20.8445, 0.37", "32.9215, -191.113, 20.7732, 0.37", "32.8562, -191.698, 20.7189, 0.22", "32.8369, -192.257, 20.7436, 0.81", "32.8744, -192.771, 20.8591, 0.81", "32.9419, -193.228, 20.9679, 0.66", "33.0612, -193.676, 21.0687, 0.52", "33.2855, -194.271, 21.1847, 0.66", "33.6522, -195.075, 21.3284, 0.29", "34.0993, -195.923, 21.456, 1.18", "34.579, -196.75, 21.5515, 0.81", "35.2279, -197.743, 21.6232, 0.44", "35.7545, -198.465, 21.6381, 0.44", "35.9827, -198.747, 21.6249, 1.55", "36.424, -199.272, 21.5793, 1.84", "36.7577, -199.687, 21.5451, 1.62", "37.2523, -200.37, 21.5253, 0.81", "37.6279, -200.995, 21.5133, 0.52", "38.0227, -201.777, 21.4963, 0.44", "38.3597, -202.553, 21.4532, 0.66", "38.6453, -203.4, 21.384, 0.52", "38.7226, -203.72, 21.3362, 0.66", "38.8551, -204.512, 21.1713, 0.44", "38.9321, -205.199, 20.9927, 1.33", "39.0052, -206.013, 20.7431, 0.59", "39.075, -206.611, 20.5423, 0.22", "39.2364, -207.579, 20.2745, 0.22", "39.3606, -208.086, 20.2065, 0.22", "39.3794, -208.145, 20.2081, 0.22", "39.5839, -208.68, 20.3183, 1.03", "39.8127, -209.201, 20.4708, 1.4", "40.2826, -210.201, 20.7848, 0.88", "40.6139, -210.949, 20.9998, 0.22", "40.6361, -211.009, 21.01, 0.22", "40.7797, -211.431, 21.0376, 0.22", "41.0322, -212.278, 21.0117, 1.33", "41.1445, -212.644, 20.9768, 1.69", "41.4147, -213.389, 20.8674, 1.33", "41.6993, -214.023, 20.8133, 0.52", "42.0496, -214.712, 20.8727, 0.29", "42.0743, -214.759, 20.8838, 0.29", "42.511, -215.563, 21.1844, 1.03", "42.7818, -216.084, 21.4182, 1.18", "43.0579, -216.672, 21.7271, 1.4", "43.4647, -217.734, 22.3044, 0.29", "43.5552, -218.147, 22.5068, 0.22", "43.5576, -218.201, 22.5274, 0.22", "43.5063, -218.671, 22.6501, 0.96", "43.4593, -219.026, 22.7121, 1.33", "43.4088, -219.423, 22.7488, 1.33", "43.3535, -220.194, 22.7789, 0.81", "43.3666, -221.11, 22.8241, 0.29", "43.4553, -221.77, 22.896, 0.29", "43.6651, -222.621, 23.0304, 0.96", "43.6833, -222.675, 23.0411, 0.96", "43.8195, -223.019, 23.1277, 1.4", "44.0137, -223.44, 23.26, 1.4", "44.4983, -224.55, 23.6535, 0.37", "44.6013, -224.882, 23.7783, 0.74", "44.6052, -224.937, 23.7951, 0.74", "44.5475, -225.533, 23.8866, 0.29", "44.4658, -225.893, 23.8927, 0.74", "44.287, -226.444, 23.8399, 1.11", "44.1602, -226.813, 23.7615, 0.96", "43.9503, -227.869, 23.5178, 0.29", "43.9188, -228.638, 23.3372, 0.59", "43.9746, -229.05, 23.2449, 0.81", "43.9966, -229.134, 23.2295, 0.81", "44.219, -229.775, 23.1662, 0.37", "44.5932, -230.703, 23.1999, 0.88", "44.82, -231.209, 23.3129, 1.18", "45.1633, -231.994, 23.587, 1.18", "45.4169, -232.569, 23.8642, 1.25", "45.7194, -233.197, 24.2941, 0.96", "46.1334, -233.974, 24.9901, 0.44", "46.6041, -234.7, 25.8094, 0.37", "46.6357, -234.737, 25.8593, 0.37", "47.089, -235.167, 26.5072, 0.52", "47.8242, -235.802, 27.4454, 0.29", "48.0404, -235.99, 27.6973, 0.66", "48.3121, -236.257, 27.9783, 0.66", "48.6913, -236.844, 28.3985, 0.22", "48.8206, -237.189, 28.5823, 0.96", "48.9618, -237.953, 28.8744, 0.22", "49.0149, -238.684, 29.106, 1.03", "49.0192, -239.031, 29.2236, 1.03", "48.9594, -240.207, 29.6441, 0.29", "48.9029, -240.643, 29.8075, 0.22", "48.8652, -240.863, 29.8989, 0.22", "48.7852, -241.446, 30.1774, 0.22", "48.7921, -241.557, 30.2246, 0.22", "49.1855, -241.412, 30.2376, 0.22", "49.2409, -241.391, 30.2397, 0.22" ],
    "parent" : "dend_68",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-145.137, -113.308, 87.8068, 0.22", "-145.625, -113.176, 87.9969, 0.22", "-146.28, -112.94, 88.2222, 0.22", "-147.012, -112.676, 88.4741, 0.66", "-147.478, -112.508, 88.6341, 0.66", "-148.088, -112.288, 88.8438, 0.88", "-148.644, -112.088, 89.0349, 1.11", "-149.433, -111.753, 89.2887, 1.4" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-145.137, -113.308, 87.8068, 0.29", "-145.665, -112.727, 88.4813, 0.29", "-146.124, -112.222, 89.067, 0.22", "-146.538, -111.767, 89.5958, 0.22" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "69.3467, 157.775, 58.2655, 0.22", "68.7267, 158.44, 59.7263, 0.22", "68.4085, 158.781, 60.476, 0.22", "68.2746, 158.925, 60.7915, 0.52" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "69.3467, 157.775, 58.2655, 0.22", "69.9611, 157.437, 58.7098, 0.22", "70.237, 157.285, 58.9093, 0.44", "70.2738, 157.264, 58.9359, 0.44", "70.6356, 157.065, 59.1976, 0.29" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "47.2693, 293.069, 85.852, 0.22", "46.2627, 293.444, 86.0016, 0.22", "45.4664, 293.746, 86.1191, 0.22", "44.432, 294.151, 86.276, 0.22", "44.247, 294.225, 86.305, 0.22", "43.1069, 294.726, 86.4824, 0.22", "41.8806, 295.392, 86.6948, 0.22", "41.8212, 295.435, 86.7068, 0.22", "41.286, 295.94, 86.8346, 0.59", "41.2331, 296.011, 86.8469, 0.59", "40.9413, 296.568, 86.9281, 0.37", "40.4939, 297.849, 87.0659, 0.22", "40.4196, 298.089, 87.0735, 0.22", "40.1928, 298.696, 87.0095, 0.22", "40.1025, 298.91, 86.959, 0.22", "39.87, 299.436, 86.7938, 0.22", "39.5425, 300.18, 86.4658, 0.29", "39.1171, 300.952, 85.9783, 0.29", "38.6131, 301.786, 85.3837, 0.22", "38.5606, 301.863, 85.3192, 0.22", "38.0939, 302.62, 84.6627, 0.22", "37.9421, 303.022, 84.3347, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "47.2693, 293.069, 85.852, 0.15", "48.109, 292.847, 86.2139, 0.15", "48.8101, 292.662, 86.5161, 0.29" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "248.129, -257.705, -1.43312, 0.22", "247.192, -257.519, -1.72955, 0.22", "246.314, -257.222, -2.01501, 0.22", "245.672, -256.95, -2.22564, 0.22", "245.599, -256.92, -2.24955, 0.22", "245.158, -256.732, -2.39437, 0.22", "244.319, -256.377, -2.66956, 0.44", "244.244, -256.317, -2.6892, 0.44", "244.208, -256.272, -2.69613, 0.44" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "248.129, -257.705, -1.43312, 0.22", "248.988, -258.588, -0.353623, 0.22", "249.41, -258.954, 0.226501, 0.22", "250.09, -259.371, 1.09831, 1.18", "250.513, -259.567, 1.61016, 1.18", "250.552, -259.582, 1.65562, 1.18", "251.772, -259.971, 2.97565, 0.29", "252.364, -260.052, 3.58638, 0.22", "253.136, -260.075, 4.33133, 0.22", "253.441, -260.049, 4.58444, 0.22", "253.482, -260.039, 4.61434, 0.22", "254.099, -259.852, 5.01269, 0.22", "254.807, -259.556, 5.30819, 0.22", "254.86, -259.532, 5.32711, 0.22", "255.349, -259.289, 5.49918, 0.22", "256.482, -258.58, 5.88036, 0.22" ],
    "parent" : "dend_100",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "11.6693, -343.039, -18.0586, 0.66", "10.9785, -343.59, -17.2271, 0.66", "10.5334, -343.999, -16.6128, 0.15", "10.4647, -344.069, -16.5209, 0.29", "9.86201, -344.727, -15.7473, 0.59", "9.60212, -345.017, -15.4372, 0.88", "8.98773, -345.848, -14.5164, 0.59", "8.97118, -345.885, -14.4755, 0.59", "8.81043, -346.385, -13.9197, 0.22", "8.74545, -346.62, -13.6512, 0.59", "8.69054, -346.844, -13.3839, 0.52", "8.33383, -348.241, -11.6868, 0.22", "8.09215, -349.073, -10.7433, 1.18", "8.03571, -349.267, -10.5221, 1.18", "7.72702, -350.448, -9.18202, 0.22", "7.54815, -351.047, -8.4181, 0.66", "7.45332, -351.302, -8.07003, 0.44", "7.13996, -351.878, -7.24511, 0.22", "6.64408, -352.573, -6.15639, 0.59", "6.42593, -352.833, -5.71221, 0.81", "4.99099, -354.312, -3.05961, 0.66", "4.37268, -354.914, -1.98266, 0.22", "3.71808, -355.53, -0.874461, 0.88", "3.07277, -356.09, 0.118244, 0.22", "2.63156, -356.434, 0.683022, 0.22", "2.18585, -356.762, 1.16715, 0.74", "1.87715, -357.006, 1.42665, 0.88", "0.872693, -357.865, 2.31798, 0.22", "0.424927, -358.323, 2.76663, 0.22", "0.311397, -358.451, 2.88445, 0.22", "0.0928552, -358.72, 3.12225, 0.22", "-0.455815, -359.431, 3.76543, 0.88", "-1.08325, -360.316, 4.52587, 0.52", "-1.60853, -361.143, 5.19941, 0.22", "-1.79294, -361.467, 5.47263, 0.29", "-2.00514, -361.869, 5.80553, 0.22", "-2.25141, -362.372, 6.20841, 0.81", "-2.44847, -362.764, 6.46566, 0.88" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "11.6693, -343.039, -18.0586, 0.29", "12.2819, -343.454, -17.7975, 0.29", "12.3256, -343.484, -17.7789, 0.29", "13.0338, -343.964, -17.477, 0.29", "13.5242, -344.296, -17.268, 0.44", "19.0812, -347.799, -14.3961, 0.44" ],
    "parent" : "dend_91",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "129.985, -200.95, 16.2587, 0.29", "129.977, -201.698, 16.2472, 0.29", "129.941, -202.1, 16.2086, 0.22", "129.881, -202.62, 16.143, 0.96", "129.849, -202.945, 16.0748, 1.18", "129.828, -203.444, 15.9192, 1.03", "129.835, -203.973, 15.7287, 0.29", "129.861, -204.618, 15.4417, 0.29", "129.928, -205.026, 15.2424, 0.52", "130.155, -205.764, 14.8655, 0.37", "130.464, -206.498, 14.4817, 0.22", "130.677, -206.913, 14.2713, 1.33", "130.815, -207.153, 14.1693, 1.69", "131.344, -207.961, 13.8563, 0.29", "131.589, -208.315, 13.7383, 0.29", "131.617, -208.355, 13.7307, 0.29", "131.989, -208.938, 13.6952, 0.29", "132.391, -209.627, 13.6715, 1.55" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "129.985, -200.95, 16.2587, 0.22", "130.428, -201.216, 17.244, 0.22", "130.783, -201.478, 17.9581, 0.22", "130.809, -201.498, 18.0015, 0.22", "131.075, -201.677, 18.3316, 0.44", "131.126, -201.704, 18.3733, 0.44", "131.624, -201.945, 18.7194, 0.22", "131.68, -201.966, 18.7429, 0.22", "132.048, -202.05, 18.8594, 0.22", "132.753, -202.136, 19.0328, 0.59", "133.897, -202.224, 19.2899, 0.22", "133.969, -202.227, 19.305, 0.22", "135.041, -202.222, 19.5048, 0.29", "135.615, -202.208, 19.6052, 0.29", "136.608, -202.137, 19.7578, 0.22" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "49.2409, -241.391, 30.2397, 1.03", "49.6382, -241.994, 30.8045, 1.03", "50.2236, -242.957, 31.6946, 1.03", "50.7519, -243.838, 32.4678, 0.96", "51.2682, -244.701, 33.1888, 0.59", "51.5785, -245.217, 33.5945, 0.59", "52.1855, -246.215, 34.3525, 0.44", "52.7355, -247.074, 34.9566, 0.29", "53.0963, -247.595, 35.2685, 0.29", "53.3253, -247.914, 35.4332, 1.11", "53.671, -248.375, 35.6518, 1.47", "53.7124, -248.426, 35.6743, 1.47", "54.5347, -249.254, 35.8942, 1.11", "55.2841, -249.879, 36.0046, 0.29" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "49.2409, -241.391, 30.2397, 0.22", "50.4423, -241.852, 29.9945, 0.22", "51.1556, -242.086, 29.8653, 0.22", "51.2242, -242.109, 29.8529, 0.22", "52.5458, -242.544, 29.6135, 0.22", "53.7609, -242.945, 29.3934, 0.22", "54.799, -243.287, 29.2054, 0.22", "55.4465, -243.511, 29.1153, 0.44" ],
    "parent" : "dend_69",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-149.433, -111.753, 89.2887, 0.22", "-149.046, -110.728, 89.0258, 0.22", "-149.027, -110.676, 89.0126, 0.22", "-148.69, -109.785, 88.784, 0.22" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-149.433, -111.753, 89.2887, 0.29", "-150.556, -111.745, 89.2862, 0.29", "-151.642, -111.797, 89.2553, 0.29", "-151.711, -111.791, 89.2402, 0.29", "-152.506, -111.648, 88.9687, 0.29", "-152.689, -111.584, 88.8849, 0.29", "-153.14, -111.36, 88.6348, 0.29", "-153.247, -111.27, 88.529, 0.29", "-153.934, -110.124, 87.4081, 0.22", "-153.955, -110.076, 87.3624, 0.22", "-154.135, -109.424, 86.7735, 0.22", "-154.151, -109.341, 86.7059, 0.22" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "132.391, -209.627, 13.6715, 1.62", "133.42, -209.934, 13.6987, 1.62", "134.293, -210.247, 13.7928, 1.62", "134.345, -210.27, 13.8012, 1.62", "135.33, -210.825, 14.0907, 0.59", "136.043, -211.324, 14.4066, 0.44", "136.711, -211.878, 14.7667, 0.29", "137.364, -212.586, 15.206, 0.66", "137.708, -213.048, 15.508, 0.66", "138.299, -213.987, 16.1397, 0.22", "138.758, -214.892, 16.7369, 0.59", "138.95, -215.344, 17.0341, 1.47", "139.146, -215.835, 17.3517, 1.47", "139.174, -215.893, 17.3849, 1.47", "139.58, -216.576, 17.7473, 1.47", "140.081, -217.354, 18.0438, 0.59" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "132.391, -209.627, 13.6715, 0.15", "131.346, -210.093, 13.2061, 0.15", "131.261, -210.131, 13.1683, 0.15", "130.328, -210.483, 12.7652, 0.15", "129.528, -210.741, 12.4736, 0.15", "129.394, -210.773, 12.4392, 0.15", "128.548, -210.974, 12.222, 0.15", "128.483, -210.985, 12.2075, 0.15", "127.434, -211.167, 11.9951, 0.15", "126.083, -211.39, 11.7799, 0.15", "124.432, -211.57, 11.5892, 0.15" ],
    "parent" : "dend_83",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "55.2841, -249.879, 36.0046, 0.37", "54.6264, -251.067, 36.5722, 0.37", "54.2658, -251.795, 36.8492, 0.52", "54.0411, -252.304, 37.0024, 0.66", "53.613, -253.377, 37.2786, 0.29", "53.3941, -253.995, 37.4165, 0.59", "53.232, -254.533, 37.5164, 0.52", "53.0182, -255.451, 37.6266, 0.37", "52.875, -256.314, 37.7226, 0.66", "52.8101, -256.781, 37.779, 0.96", "52.7102, -257.389, 37.8537, 0.52", "52.4951, -258.51, 38.0174, 0.52", "52.2968, -259.576, 38.1607, 1.03", "52.1989, -260.198, 38.2377, 1.18", "52.0315, -261.602, 38.3904, 0.66", "51.8556, -262.969, 38.5328, 0.96", "51.8432, -263.058, 38.5414, 0.96", "51.6619, -264.391, 38.633, 0.29", "51.597, -265.157, 38.621, 0.29", "51.6331, -265.645, 38.5808, 0.29" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "55.2841, -249.879, 36.0046, 0.52", "56.1546, -250.351, 36.0917, 0.52", "56.7054, -250.649, 36.1469, 0.52", "57.6066, -251.138, 36.2371, 0.22", "58.8873, -251.832, 36.3652, 0.22", "59.4503, -252.137, 36.4216, 0.22" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "140.081, -217.354, 18.0438, 0.29", "140.747, -217.249, 18.8441, 0.29", "140.839, -217.267, 18.9567, 0.29", "141.305, -217.463, 19.542, 0.22", "141.357, -217.488, 19.608, 0.22", "142.17, -217.9, 20.5256, 0.22", "142.793, -218.217, 21.1679, 0.22", "143.523, -218.632, 21.8827, 0.44", "144.261, -219.076, 22.578, 0.22", "144.323, -219.126, 22.6517, 0.22", "144.752, -219.557, 23.3045, 0.22", "144.955, -219.781, 23.6387, 0.96", "144.989, -219.819, 23.7029, 0.96", "145.282, -220.143, 24.2808, 1.25", "146.289, -221.182, 26.3682, 0.29", "146.866, -221.691, 27.5922, 0.66", "147.149, -221.894, 28.2514, 0.22", "147.383, -222.052, 28.8083, 0.59", "147.413, -222.069, 28.8751, 0.59", "148.148, -222.308, 30.3605, 0.22", "148.616, -222.193, 30.984, 0.22", "149.16, -221.895, 31.6722, 0.22" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "140.081, -217.354, 18.0438, 0.22", "141.475, -218.318, 17.8484, 0.22", "141.598, -218.398, 17.8102, 0.22", "142.463, -219.06, 17.4494, 0.22", "142.517, -219.11, 17.4211, 0.22", "143.337, -219.874, 16.9914, 0.22", "143.911, -220.408, 16.6909, 0.22", "144.802, -221.294, 16.0732, 0.22", "145.554, -222.041, 15.4791, 0.22", "145.933, -222.518, 14.9684, 0.22" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "51.6331, -265.645, 38.5808, 0.22", "51.0907, -267.0, 38.5598, 0.22", "50.7767, -267.785, 38.5476, 1.03", "50.2998, -268.976, 38.5291, 0.22", "50.0088, -269.703, 38.5178, 0.96", "49.7995, -270.226, 38.5097, 1.33", "49.3197, -271.425, 38.4911, 0.59" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "51.6331, -265.645, 38.5808, 0.22", "51.8799, -265.907, 38.3338, 0.22", "51.9209, -265.952, 38.2901, 0.44", "52.0719, -266.093, 38.1483, 0.44", "52.4042, -266.383, 37.8556, 0.22", "52.4739, -266.428, 37.8024, 0.22", "53.0633, -266.734, 37.3896, 0.22", "53.0987, -266.751, 37.3644, 0.22", "53.5464, -266.938, 37.0548, 0.22", "53.6022, -266.955, 37.0189, 0.22", "54.2889, -267.078, 36.6538, 0.22", "54.4309, -267.088, 36.5883, 0.22" ],
    "parent" : "dend_73",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "49.3197, -271.425, 38.4911, 0.29", "49.4208, -272.298, 39.2697, 0.29", "49.4793, -273.193, 40.0941, 0.66", "49.493, -273.746, 40.581, 0.81", "49.4953, -273.808, 40.6299, 0.81", "49.5822, -274.893, 41.4188, 0.44", "49.6859, -275.841, 42.0683, 1.11", "49.8026, -276.67, 42.6105, 0.88", "50.0149, -277.824, 43.288, 0.29", "50.2711, -278.789, 43.8209, 0.29", "50.5545, -279.434, 44.1809, 0.29", "50.6736, -279.634, 44.284, 0.29", "51.1609, -280.252, 44.574, 0.22", "51.2056, -280.294, 44.592, 0.22", "51.8118, -280.648, 44.7913, 0.22", "53.0385, -281.103, 45.2778, 0.22" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "49.3197, -271.425, 38.4911, 0.22", "48.0045, -271.687, 38.5178, 0.22", "47.2311, -271.894, 38.4621, 0.22", "46.5089, -272.126, 38.3601, 0.22", "46.3705, -272.176, 38.3339, 0.22", "45.8213, -272.403, 38.1966, 0.22", "44.8245, -272.763, 38.012, 0.22", "45.3767, -273.098, 37.56, 0.22", "45.4366, -273.133, 37.514, 0.22", "46.2783, -273.576, 36.9291, 0.22", "46.318, -273.595, 36.9057, 0.22", "47.0893, -273.894, 36.5449, 0.22", "47.596, -274.034, 36.3989, 0.37", "47.6565, -274.043, 36.3831, 0.37" ],
    "parent" : "dend_75",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_37", "dend_0", "dend_110", "dend_107", "dend_53", "dend_38", "dend_22", "dend_1", "dend_109", "dend_108", "dend_65", "dend_54", "dend_42", "dend_39", "dend_36", "dend_23", "dend_13", "dend_2", "dend_95", "dend_66", "dend_60", "dend_55", "dend_44", "dend_43", "dend_41", "dend_40", "dend_25", "dend_24", "dend_19", "dend_14", "dend_8", "dend_3", "dend_103", "dend_96", "dend_88", "dend_67", "dend_62", "dend_61", "dend_57", "dend_56", "dend_46", "dend_45", "dend_29", "dend_26", "dend_21", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_105", "dend_104", "dend_98", "dend_97", "dend_94", "dend_89", "dend_79", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_52", "dend_47", "dend_33", "dend_30", "dend_28", "dend_27", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_100", "dend_99", "dend_91", "dend_90", "dend_81", "dend_80", "dend_78", "dend_69", "dend_49", "dend_48", "dend_35", "dend_34", "dend_32", "dend_31", "dend_102", "dend_101", "dend_93", "dend_92", "dend_83", "dend_82", "dend_71", "dend_70", "dend_51", "dend_50", "dend_85", "dend_84", "dend_73", "dend_72", "dend_87", "dend_86", "dend_75", "dend_74", "dend_77", "dend_76" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_106", "dend_37", "dend_0", "dend_110", "dend_107", "dend_53", "dend_38", "dend_22", "dend_1", "dend_109", "dend_108", "dend_65", "dend_54", "dend_42", "dend_39", "dend_36", "dend_23", "dend_13", "dend_2", "dend_95", "dend_66", "dend_60", "dend_55", "dend_44", "dend_43", "dend_41", "dend_40", "dend_25", "dend_24", "dend_19", "dend_14", "dend_8", "dend_3", "dend_103", "dend_96", "dend_88", "dend_67", "dend_62", "dend_61", "dend_57", "dend_56", "dend_46", "dend_45", "dend_29", "dend_26", "dend_21", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_105", "dend_104", "dend_98", "dend_97", "dend_94", "dend_89", "dend_79", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_52", "dend_47", "dend_33", "dend_30", "dend_28", "dend_27", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_100", "dend_99", "dend_91", "dend_90", "dend_81", "dend_80", "dend_78", "dend_69", "dend_49", "dend_48", "dend_35", "dend_34", "dend_32", "dend_31", "dend_102", "dend_101", "dend_93", "dend_92", "dend_83", "dend_82", "dend_71", "dend_70", "dend_51", "dend_50", "dend_85", "dend_84", "dend_73", "dend_72", "dend_87", "dend_86", "dend_75", "dend_74", "dend_77", "dend_76" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_106", "dend_37", "dend_0", "axon_0", "dend_110", "dend_107", "dend_53", "dend_38", "dend_22", "dend_1", "axon_1", "dend_109", "dend_108", "dend_65", "dend_54", "dend_42", "dend_39", "dend_36", "dend_23", "dend_13", "dend_2", "dend_95", "dend_66", "dend_60", "dend_55", "dend_44", "dend_43", "dend_41", "dend_40", "dend_25", "dend_24", "dend_19", "dend_14", "dend_8", "dend_3", "dend_103", "dend_96", "dend_88", "dend_67", "dend_62", "dend_61", "dend_57", "dend_56", "dend_46", "dend_45", "dend_29", "dend_26", "dend_21", "dend_20", "dend_16", "dend_15", "dend_10", "dend_9", "dend_7", "dend_4", "dend_105", "dend_104", "dend_98", "dend_97", "dend_94", "dend_89", "dend_79", "dend_68", "dend_64", "dend_63", "dend_59", "dend_58", "dend_52", "dend_47", "dend_33", "dend_30", "dend_28", "dend_27", "dend_18", "dend_17", "dend_12", "dend_11", "dend_6", "dend_5", "dend_100", "dend_99", "dend_91", "dend_90", "dend_81", "dend_80", "dend_78", "dend_69", "dend_49", "dend_48", "dend_35", "dend_34", "dend_32", "dend_31", "dend_102", "dend_101", "dend_93", "dend_92", "dend_83", "dend_82", "dend_71", "dend_70", "dend_51", "dend_50", "dend_85", "dend_84", "dend_73", "dend_72", "dend_87", "dend_86", "dend_75", "dend_74", "dend_77", "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_110", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_65", "dend_65", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_98", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_47", "dend_47", "dend_47", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_78", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_51", "dend_51", "dend_51", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L5_SBC_3ba116236f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_106, id: dend_106, parent: soma_0
create dend_106
public dend_106
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_110, id: dend_110, parent: dend_106
create dend_110
public dend_110
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_53, id: dend_53, parent: dend_37
create dend_53
public dend_53
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_22, id: dend_22, parent: dend_0
create dend_22
public dend_22
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_109, id: dend_109, parent: dend_107
create dend_109
public dend_109
// Section: dend_108, id: dend_108, parent: dend_107
create dend_108
public dend_108
// Section: dend_65, id: dend_65, parent: dend_53
create dend_65
public dend_65
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_42, id: dend_42, parent: dend_38
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_22
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_13, id: dend_13, parent: dend_1
create dend_13
public dend_13
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_95, id: dend_95, parent: dend_65
create dend_95
public dend_95
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_60, id: dend_60, parent: dend_54
create dend_60
public dend_60
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_42
create dend_44
public dend_44
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_19, id: dend_19, parent: dend_13
create dend_19
public dend_19
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_103, id: dend_103, parent: dend_95
create dend_103
public dend_103
// Section: dend_96, id: dend_96, parent: dend_95
create dend_96
public dend_96
// Section: dend_88, id: dend_88, parent: dend_66
create dend_88
public dend_88
// Section: dend_67, id: dend_67, parent: dend_66
create dend_67
public dend_67
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_29, id: dend_29, parent: dend_25
create dend_29
public dend_29
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_105, id: dend_105, parent: dend_103
create dend_105
public dend_105
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_98, id: dend_98, parent: dend_96
create dend_98
public dend_98
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_94, id: dend_94, parent: dend_88
create dend_94
public dend_94
// Section: dend_89, id: dend_89, parent: dend_88
create dend_89
public dend_89
// Section: dend_79, id: dend_79, parent: dend_67
create dend_79
public dend_79
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_64, id: dend_64, parent: dend_62
create dend_64
public dend_64
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_52, id: dend_52, parent: dend_46
create dend_52
public dend_52
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_100, id: dend_100, parent: dend_98
create dend_100
public dend_100
// Section: dend_99, id: dend_99, parent: dend_98
create dend_99
public dend_99
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_81, id: dend_81, parent: dend_79
create dend_81
public dend_81
// Section: dend_80, id: dend_80, parent: dend_79
create dend_80
public dend_80
// Section: dend_78, id: dend_78, parent: dend_68
create dend_78
public dend_78
// Section: dend_69, id: dend_69, parent: dend_68
create dend_69
public dend_69
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_102, id: dend_102, parent: dend_100
create dend_102
public dend_102
// Section: dend_101, id: dend_101, parent: dend_100
create dend_101
public dend_101
// Section: dend_93, id: dend_93, parent: dend_91
create dend_93
public dend_93
// Section: dend_92, id: dend_92, parent: dend_91
create dend_92
public dend_92
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_71, id: dend_71, parent: dend_69
create dend_71
public dend_71
// Section: dend_70, id: dend_70, parent: dend_69
create dend_70
public dend_70
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_85, id: dend_85, parent: dend_83
create dend_85
public dend_85
// Section: dend_84, id: dend_84, parent: dend_83
create dend_84
public dend_84
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_87, id: dend_87, parent: dend_85
create dend_87
public dend_87
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_75, id: dend_75, parent: dend_73
create dend_75
public dend_75
// Section: dend_74, id: dend_74, parent: dend_73
create dend_74
public dend_74
// Section: dend_77, id: dend_77, parent: dend_75
create dend_77
public dend_77
// Section: dend_76, id: dend_76, parent: dend_75
create dend_76
public dend_76

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_106, dend_37, dend_0, axon_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, axon_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_97
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_65, dend_65, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_106(0), soma_0(0.4500001888841101)
    connect dend_37(0), soma_0(0.4500001888841101)
    connect dend_0(0), soma_0(0.4500001888841101)
    connect axon_0(0), soma_0(1.0)
    connect dend_110(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_53(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_22(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_109(0), dend_107(1.0)
    connect dend_108(0), dend_107(1.0)
    connect dend_65(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_42(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_36(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_13(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_95(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_60(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_44(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_19(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_103(0), dend_95(1.0)
    connect dend_96(0), dend_95(1.0)
    connect dend_88(0), dend_66(1.0)
    connect dend_67(0), dend_66(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_29(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_105(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_98(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_94(0), dend_88(1.0)
    connect dend_89(0), dend_88(1.0)
    connect dend_79(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_64(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_52(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_100(0), dend_98(1.0)
    connect dend_99(0), dend_98(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_81(0), dend_79(1.0)
    connect dend_80(0), dend_79(1.0)
    connect dend_78(0), dend_68(1.0)
    connect dend_69(0), dend_68(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_102(0), dend_100(1.0)
    connect dend_101(0), dend_100(1.0)
    connect dend_93(0), dend_91(1.0)
    connect dend_92(0), dend_91(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_71(0), dend_69(1.0)
    connect dend_70(0), dend_69(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_85(0), dend_83(1.0)
    connect dend_84(0), dend_83(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_87(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_75(0), dend_73(1.0)
    connect dend_74(0), dend_73(1.0)
    connect dend_77(0), dend_75(1.0)
    connect dend_76(0), dend_75(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.23899, -15.0556, -0.519658, 3.66989 ) }
    soma_0 { pt3dadd( -1.17536, -13.7023, -0.469772, 6.06288 ) }
    soma_0 { pt3dadd( -1.11173, -12.349, -0.419887, 7.06144 ) }
    soma_0 { pt3dadd( -1.0481, -10.9958, -0.370002, 7.9923 ) }
    soma_0 { pt3dadd( -0.984469, -9.64252, -0.320117, 9.33711 ) }
    soma_0 { pt3dadd( -0.920839, -8.28926, -0.270232, 10.6845 ) }
    soma_0 { pt3dadd( -0.85721, -6.936, -0.220347, 11.7558 ) }
    soma_0 { pt3dadd( -0.793581, -5.58274, -0.170462, 12.5063 ) }
    soma_0 { pt3dadd( -0.729952, -4.22947, -0.120577, 13.1759 ) }
    soma_0 { pt3dadd( -0.666322, -2.87621, -0.0706922, 13.3814 ) }
    soma_0 { pt3dadd( -0.602693, -1.52295, -0.0208072, 13.1588 ) }
    soma_0 { pt3dadd( -0.539064, -0.169689, 0.0290779, 13.1475 ) }
    soma_0 { pt3dadd( -0.475434, 1.18357, 0.0789629, 12.911 ) }
    soma_0 { pt3dadd( -0.411805, 2.53683, 0.128848, 12.361 ) }
    soma_0 { pt3dadd( -0.348176, 3.8901, 0.178733, 11.3572 ) }
    soma_0 { pt3dadd( -0.284546, 5.24336, 0.228618, 10.1252 ) }
    soma_0 { pt3dadd( -0.220917, 6.59662, 0.278503, 9.00977 ) }
    soma_0 { pt3dadd( -0.157288, 7.94988, 0.328388, 8.0324 ) }
    soma_0 { pt3dadd( -0.0936586, 9.30314, 0.378273, 7.2911 ) }
    soma_0 { pt3dadd( -0.0300293, 10.6564, 0.428158, 4.83974 ) }
    soma_0 { pt3dadd( 0.0336, 12.0097, 0.478043, 3.67414 ) }
    // Section: dend_106, id: dend_106, parent: soma_0 (entry count 21/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( 3.4463, 9.23739, 0.091561, 1.47 ) }
    dend_106 { pt3dadd( 3.4463, 9.23739, 0.091561, 1.47 ) }
    dend_106 { pt3dadd( 3.79277, 9.80303, 0.191395, 0.81 ) }
    dend_106 { pt3dadd( 4.17462, 10.5774, 0.319276, 0.59 ) }
    dend_106 { pt3dadd( 4.5057, 11.3357, 0.440096, 0.88 ) }
    dend_106 { pt3dadd( 4.71661, 11.8847, 0.543233, 1.11 ) }
    dend_106 { pt3dadd( 4.94915, 12.5822, 0.710961, 1.33 ) }
    dend_106 { pt3dadd( 4.96533, 12.6477, 0.734647, 1.33 ) }
    dend_106 { pt3dadd( 5.11468, 13.5087, 1.07259, 1.11 ) }
    dend_106 { pt3dadd( 5.12216, 13.5727, 1.10051, 1.11 ) }
    dend_106 { pt3dadd( 5.20551, 14.3011, 1.45681, 1.25 ) }
    dend_106 { pt3dadd( 5.33295, 15.2701, 1.95713, 1.55 ) }
    dend_106 { pt3dadd( 5.52612, 16.5576, 2.73869, 1.55 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 34/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -2.0737, -14.0554, -0.098439, 4.79 ) }
    dend_37 { pt3dadd( -2.0737, -14.0554, -0.098439, 4.79 ) }
    dend_37 { pt3dadd( -2.06388, -15.5433, 0.267158, 3.83 ) }
    dend_37 { pt3dadd( -2.00091, -17.2478, 0.690635, 3.32 ) }
    dend_37 { pt3dadd( -1.94854, -18.6656, 1.04289, 2.65 ) }
    dend_37 { pt3dadd( -1.89391, -20.1447, 1.41035, 2.95 ) }
    dend_37 { pt3dadd( -1.84596, -21.4426, 1.7328, 3.39 ) }
    dend_37 { pt3dadd( -1.76941, -22.8091, 2.08843, 3.76 ) }
    dend_37 { pt3dadd( -1.72209, -23.2518, 2.21751, 3.76 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 43/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.0537, 11.1191, 1.47156, 3.02 ) }
    dend_0 { pt3dadd( -1.15435, 11.8633, 1.88057, 3.02 ) }
    dend_0 { pt3dadd( -1.25505, 12.7974, 2.33822, 3.02 ) }
    dend_0 { pt3dadd( -1.39463, 14.0921, 2.97253, 2.95 ) }
    dend_0 { pt3dadd( -1.5264, 15.3144, 3.57133, 2.8 ) }
    dend_0 { pt3dadd( -1.66393, 16.5901, 4.19633, 2.8 ) }
    dend_0 { pt3dadd( -1.77702, 17.6391, 4.71027, 3.24 ) }
    dend_0 { pt3dadd( -1.97809, 19.6617, 5.77062, 3.24 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 51/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 0.0336, 12.0097, 0.478043, 0.49712 ) }
    axon_0 { pt3dadd( 0.73811, 26.9931, 0.478043, 0.49712 ) }
    axon_0 { pt3dadd( 1.44262, 41.9766, 0.478043, 0.49712 ) }
    // Section: dend_110, id: dend_110, parent: dend_106 (entry count 54/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( 5.52612, 16.5576, 2.73869, 0.66 ) }
    dend_110 { pt3dadd( 4.57684, 18.1034, 0.262038, 0.66 ) }
    dend_110 { pt3dadd( 4.42457, 18.6158, -0.468705, 0.29 ) }
    dend_110 { pt3dadd( 4.45807, 18.6852, -0.516627, 0.29 ) }
    dend_110 { pt3dadd( 5.08916, 19.1416, -0.268204, 0.29 ) }
    dend_110 { pt3dadd( 5.46875, 19.4765, -0.116458, 0.59 ) }
    dend_110 { pt3dadd( 5.59008, 19.5908, -0.0668411, 0.59 ) }
    dend_110 { pt3dadd( 6.04742, 20.022, 0.140222, 0.59 ) }
    dend_110 { pt3dadd( 7.19258, 21.0424, 0.563234, 0.29 ) }
    dend_110 { pt3dadd( 7.85313, 21.6179, 0.740109, 0.88 ) }
    dend_110 { pt3dadd( 8.46289, 22.1328, 0.846905, 1.11 ) }
    dend_110 { pt3dadd( 8.51918, 22.1795, 0.852554, 1.11 ) }
    dend_110 { pt3dadd( 9.77563, 23.233, 0.756649, 0.37 ) }
    dend_110 { pt3dadd( 10.7916, 24.0946, 0.523884, 0.37 ) }
    dend_110 { pt3dadd( 11.6307, 24.8356, 0.168841, 0.88 ) }
    dend_110 { pt3dadd( 12.3137, 25.4474, -0.189489, 0.88 ) }
    dend_110 { pt3dadd( 12.4156, 25.5466, -0.252242, 0.88 ) }
    dend_110 { pt3dadd( 13.6918, 26.9307, -1.15457, 0.29 ) }
    dend_110 { pt3dadd( 13.736, 26.9884, -1.19235, 0.29 ) }
    dend_110 { pt3dadd( 14.4398, 28.1806, -1.91542, 0.88 ) }
    dend_110 { pt3dadd( 14.4677, 28.2383, -1.94734, 0.88 ) }
    dend_110 { pt3dadd( 15.0281, 29.4949, -2.6024, 0.88 ) }
    dend_110 { pt3dadd( 15.1034, 29.6509, -2.68601, 0.88 ) }
    dend_110 { pt3dadd( 15.5141, 30.4251, -3.11556, 1.03 ) }
    dend_110 { pt3dadd( 16.0528, 31.311, -3.68235, 0.29 ) }
    dend_110 { pt3dadd( 16.0956, 31.3728, -3.72713, 0.29 ) }
    dend_110 { pt3dadd( 16.5179, 31.9337, -4.15285, 0.29 ) }
    dend_110 { pt3dadd( 17.1208, 32.6459, -4.74216, 0.88 ) }
    dend_110 { pt3dadd( 17.6768, 33.2763, -5.23966, 0.29 ) }
    dend_110 { pt3dadd( 17.721, 33.3236, -5.27574, 0.29 ) }
    dend_110 { pt3dadd( 18.2579, 33.9254, -5.59498, 0.44 ) }
    dend_110 { pt3dadd( 18.5889, 34.3477, -5.74749, 0.59 ) }
    dend_110 { pt3dadd( 18.6292, 34.4076, -5.75777, 0.59 ) }
    dend_110 { pt3dadd( 19.1158, 35.2656, -5.77277, 0.44 ) }
    dend_110 { pt3dadd( 19.1503, 35.3238, -5.77111, 0.44 ) }
    dend_110 { pt3dadd( 19.6858, 36.198, -5.74495, 0.96 ) }
    dend_110 { pt3dadd( 19.8868, 36.4919, -5.74522, 1.11 ) }
    dend_110 { pt3dadd( 20.4579, 37.1938, -5.81664, 0.81 ) }
    dend_110 { pt3dadd( 21.4557, 38.202, -6.04177, 0.29 ) }
    dend_110 { pt3dadd( 22.1792, 38.796, -6.26126, 0.29 ) }
    dend_110 { pt3dadd( 22.2418, 38.8426, -6.2874, 0.29 ) }
    dend_110 { pt3dadd( 22.9575, 39.324, -6.6469, 0.59 ) }
    dend_110 { pt3dadd( 23.9852, 39.9962, -7.22641, 0.37 ) }
    dend_110 { pt3dadd( 24.7171, 40.4682, -7.68407, 1.11 ) }
    dend_110 { pt3dadd( 25.2633, 40.8183, -8.05245, 1.33 ) }
    dend_110 { pt3dadd( 26.446, 41.7933, -8.88543, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_110 { pt3dadd( 26.5083, 41.8624, -8.92788, 0.22 ) }
    dend_110 { pt3dadd( 27.0164, 42.6021, -9.24435, 1.03 ) }
    dend_110 { pt3dadd( 27.1574, 42.8372, -9.3158, 1.11 ) }
    dend_110 { pt3dadd( 27.1935, 42.8993, -9.33169, 1.11 ) }
    dend_110 { pt3dadd( 28.0091, 44.0391, -9.55624, 0.22 ) }
    dend_110 { pt3dadd( 28.8708, 45.017, -9.68304, 1.11 ) }
    dend_110 { pt3dadd( 29.3813, 45.5447, -9.7412, 0.88 ) }
    dend_110 { pt3dadd( 30.2508, 46.3691, -9.77799, 0.22 ) }
    dend_110 { pt3dadd( 30.303, 46.4184, -9.77852, 0.22 ) }
    dend_110 { pt3dadd( 31.6405, 47.6343, -9.76816, 0.22 ) }
    dend_110 { pt3dadd( 31.8689, 47.8212, -9.7642, 0.22 ) }
    dend_110 { pt3dadd( 33.0378, 48.7599, -9.72456, 0.88 ) }
    dend_110 { pt3dadd( 33.7128, 49.312, -9.70061, 1.03 ) }
    dend_110 { pt3dadd( 34.5291, 50.0016, -9.67403, 0.66 ) }
    dend_110 { pt3dadd( 35.426, 50.7858, -9.66721, 0.22 ) }
    dend_110 { pt3dadd( 35.8102, 51.1397, -9.68091, 0.22 ) }
    dend_110 { pt3dadd( 35.875, 51.1901, -9.68339, 0.22 ) }
    dend_110 { pt3dadd( 36.4876, 51.5648, -9.7175, 0.37 ) }
    dend_110 { pt3dadd( 36.5452, 51.5956, -9.72246, 0.37 ) }
    dend_110 { pt3dadd( 37.3195, 51.9543, -9.75426, 1.11 ) }
    dend_110 { pt3dadd( 37.8682, 52.2103, -9.76121, 1.47 ) }
    dend_110 { pt3dadd( 38.6957, 52.6015, -9.7431, 0.88 ) }
    dend_110 { pt3dadd( 38.7578, 52.6306, -9.74056, 0.88 ) }
    dend_110 { pt3dadd( 40.125, 53.283, -9.66292, 0.22 ) }
    dend_110 { pt3dadd( 41.1095, 53.7553, -9.60444, 0.59 ) }
    dend_110 { pt3dadd( 41.6779, 54.027, -9.56764, 0.74 ) }
    dend_110 { pt3dadd( 42.7508, 54.6138, -9.52607, 0.22 ) }
    dend_110 { pt3dadd( 42.8152, 54.6571, -9.52904, 0.22 ) }
    dend_110 { pt3dadd( 43.1339, 54.9058, -9.56202, 0.74 ) }
    dend_110 { pt3dadd( 43.4093, 55.1639, -9.61875, 0.74 ) }
    dend_110 { pt3dadd( 43.4632, 55.2228, -9.63696, 0.74 ) }
    dend_110 { pt3dadd( 44.2475, 56.1722, -9.94627, 0.22 ) }
    dend_110 { pt3dadd( 45.0568, 57.1583, -10.32, 1.03 ) }
    dend_110 { pt3dadd( 45.3312, 57.4818, -10.4574, 1.4 ) }
    dend_110 { pt3dadd( 45.8992, 58.1494, -10.7536, 1.77 ) }
    dend_110 { pt3dadd( 47.2208, 59.6565, -11.4654, 0.22 ) }
    dend_110 { pt3dadd( 47.8473, 60.3437, -11.7667, 0.22 ) }
    dend_110 { pt3dadd( 48.7349, 61.2813, -12.1509, 0.22 ) }
    dend_110 { pt3dadd( 49.6214, 62.1297, -12.4544, 1.33 ) }
    dend_110 { pt3dadd( 50.0562, 62.51, -12.5733, 1.55 ) }
    dend_110 { pt3dadd( 51.1609, 63.3555, -12.8013, 0.29 ) }
    dend_110 { pt3dadd( 52.2564, 64.0508, -12.8997, 1.33 ) }
    dend_110 { pt3dadd( 52.511, 64.1992, -12.9011, 1.47 ) }
    dend_110 { pt3dadd( 54.3771, 65.2498, -12.7469, 0.29 ) }
    dend_110 { pt3dadd( 55.102, 65.6544, -12.6473, 1.03 ) }
    dend_110 { pt3dadd( 55.6725, 65.9672, -12.5634, 0.81 ) }
    dend_110 { pt3dadd( 56.8526, 66.6289, -12.3856, 0.22 ) }
    dend_110 { pt3dadd( 57.4631, 66.9761, -12.3326, 0.22 ) }
    dend_110 { pt3dadd( 57.5379, 67.021, -12.332, 0.22 ) }
    dend_110 { pt3dadd( 58.2762, 67.543, -12.4166, 0.81 ) }
    dend_110 { pt3dadd( 58.5682, 67.7616, -12.4818, 0.96 ) }
    dend_110 { pt3dadd( 59.0762, 68.1995, -12.6555, 0.59 ) }
    dend_110 { pt3dadd( 59.7384, 68.8109, -12.9756, 0.15 ) }
    dend_110 { pt3dadd( 60.6845, 69.6736, -13.4416, 1.33 ) }
    dend_110 { pt3dadd( 61.2904, 70.2413, -13.7428, 0.22 ) }
    dend_110 { pt3dadd( 61.3415, 70.2878, -13.7679, 0.22 ) }
    dend_110 { pt3dadd( 61.8316, 70.7191, -13.9708, 0.22 ) }
    dend_110 { pt3dadd( 62.5174, 71.2764, -14.1989, 0.66 ) }
    dend_110 { pt3dadd( 63.0116, 71.6434, -14.2811, 0.81 ) }
    dend_110 { pt3dadd( 63.125, 71.728, -14.284, 0.81 ) }
    dend_110 { pt3dadd( 63.8279, 72.2751, -14.2796, 0.52 ) }
    dend_110 { pt3dadd( 64.5078, 72.8695, -14.2572, 1.33 ) }
    dend_110 { pt3dadd( 64.8982, 73.2335, -14.2442, 1.55 ) }
    dend_110 { pt3dadd( 66.029, 74.334, -14.2183, 0.22 ) }
    dend_110 { pt3dadd( 66.7096, 75.006, -14.2189, 0.37 ) }
    dend_110 { pt3dadd( 67.1628, 75.4546, -14.2319, 0.96 ) }
    dend_110 { pt3dadd( 67.6499, 75.9169, -14.2402, 1.33 ) }
    dend_110 { pt3dadd( 68.8918, 77.0246, -14.2722, 0.22 ) }
    dend_110 { pt3dadd( 69.8307, 77.7642, -14.272, 0.22 ) }
    dend_110 { pt3dadd( 70.4669, 78.1855, -14.271, 0.88 ) }
    dend_110 { pt3dadd( 70.9285, 78.4378, -14.2645, 0.96 ) }
    dend_110 { pt3dadd( 72.3576, 79.1309, -14.2253, 0.22 ) }
    dend_110 { pt3dadd( 72.4238, 79.1599, -14.2228, 0.22 ) }
    dend_110 { pt3dadd( 73.6201, 79.6717, -14.1382, 1.4 ) }
    dend_110 { pt3dadd( 74.2283, 79.9375, -14.0913, 1.99 ) }
    dend_110 { pt3dadd( 75.3404, 80.4126, -14.025, 0.29 ) }
    dend_110 { pt3dadd( 75.4083, 80.4415, -14.024, 0.29 ) }
    dend_110 { pt3dadd( 75.9806, 80.6913, -14.0677, 0.22 ) }
    dend_110 { pt3dadd( 76.0474, 80.7218, -14.0755, 0.22 ) }
    dend_110 { pt3dadd( 76.5777, 80.9965, -14.1954, 0.29 ) }
    dend_110 { pt3dadd( 76.639, 81.0341, -14.2113, 0.29 ) }
    dend_110 { pt3dadd( 76.996, 81.2866, -14.3138, 0.88 ) }
    dend_110 { pt3dadd( 77.3471, 81.5447, -14.4171, 1.18 ) }
    dend_110 { pt3dadd( 77.6109, 81.7486, -14.496, 1.18 ) }
    dend_110 { pt3dadd( 78.5525, 82.4891, -14.7794, 0.22 ) }
    dend_110 { pt3dadd( 78.9084, 82.7558, -14.8851, 0.66 ) }
    dend_110 { pt3dadd( 79.251, 82.997, -14.9839, 0.66 ) }
    dend_110 { pt3dadd( 79.3068, 83.0336, -14.9995, 0.66 ) }
    dend_110 { pt3dadd( 79.6939, 83.2719, -15.1021, 0.66 ) }
    dend_110 { pt3dadd( 79.7618, 83.3106, -15.1189, 0.66 ) }
    dend_110 { pt3dadd( 80.731, 83.7996, -15.3349, 0.22 ) }
    dend_110 { pt3dadd( 81.1332, 83.972, -15.427, 0.74 ) }
    dend_110 { pt3dadd( 81.6319, 84.1679, -15.5598, 1.11 ) }
    dend_110 { pt3dadd( 81.9555, 84.2868, -15.6529, 0.88 ) }
    dend_110 { pt3dadd( 82.0264, 84.3114, -15.6745, 0.88 ) }
    dend_110 { pt3dadd( 83.2407, 84.7399, -16.0557, 0.22 ) }
    dend_110 { pt3dadd( 84.2577, 85.1404, -16.4077, 0.22 ) }
    dend_110 { pt3dadd( 84.9367, 85.4238, -16.6555, 0.88 ) }
    dend_110 { pt3dadd( 85.3488, 85.6045, -16.8181, 1.11 ) }
    dend_110 { pt3dadd( 85.4238, 85.6387, -16.8493, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_110 { pt3dadd( 86.0513, 85.9497, -17.1178, 0.44 ) }
    dend_110 { pt3dadd( 87.3856, 86.6866, -17.7057, 0.22 ) }
    dend_110 { pt3dadd( 87.4455, 86.7192, -17.734, 0.22 ) }
    dend_110 { pt3dadd( 88.3162, 87.1572, -18.141, 1.11 ) }
    dend_110 { pt3dadd( 88.4425, 87.2152, -18.2008, 1.11 ) }
    dend_110 { pt3dadd( 89.0131, 87.446, -18.466, 1.69 ) }
    dend_110 { pt3dadd( 89.5375, 87.6292, -18.7315, 1.69 ) }
    dend_110 { pt3dadd( 91.3219, 88.1543, -19.6488, 0.22 ) }
    dend_110 { pt3dadd( 92.057, 88.3773, -20.0141, 0.88 ) }
    dend_110 { pt3dadd( 92.4154, 88.4881, -20.1873, 1.4 ) }
    dend_110 { pt3dadd( 93.1249, 88.7119, -20.529, 1.18 ) }
    dend_110 { pt3dadd( 94.1002, 89.0464, -20.9896, 0.59 ) }
    dend_110 { pt3dadd( 95.288, 89.5292, -21.5165, 0.29 ) }
    dend_110 { pt3dadd( 96.9184, 90.3959, -22.1613, 0.22 ) }
    dend_110 { pt3dadd( 97.1603, 90.5609, -22.2522, 0.59 ) }
    dend_110 { pt3dadd( 97.2051, 90.5995, -22.2675, 0.59 ) }
    dend_110 { pt3dadd( 97.8458, 91.2746, -22.4117, 0.74 ) }
    dend_110 { pt3dadd( 98.3644, 91.9198, -22.4532, 0.22 ) }
    dend_110 { pt3dadd( 98.8399, 92.6152, -22.4535, 0.22 ) }
    dend_110 { pt3dadd( 99.3836, 93.3866, -22.3936, 1.11 ) }
    dend_110 { pt3dadd( 99.6082, 93.6802, -22.3622, 1.4 ) }
    dend_110 { pt3dadd( 100.471, 94.7151, -22.2329, 0.22 ) }
    dend_110 { pt3dadd( 100.794, 95.0685, -22.1819, 0.96 ) }
    dend_110 { pt3dadd( 101.22, 95.4872, -22.1173, 1.25 ) }
    dend_110 { pt3dadd( 102.302, 96.4452, -21.9707, 0.29 ) }
    dend_110 { pt3dadd( 102.783, 96.855, -21.9325, 0.81 ) }
    dend_110 { pt3dadd( 103.144, 97.1565, -21.936, 0.81 ) }
    dend_110 { pt3dadd( 103.268, 97.2629, -21.9492, 0.81 ) }
    dend_110 { pt3dadd( 103.851, 97.7948, -22.0352, 0.37 ) }
    dend_110 { pt3dadd( 104.334, 98.2566, -22.1241, 0.29 ) }
    dend_110 { pt3dadd( 105.087, 98.9744, -22.2723, 0.15 ) }
    dend_110 { pt3dadd( 105.792, 99.647, -22.3412, 1.03 ) }
    dend_110 { pt3dadd( 106.194, 100.027, -22.358, 1.62 ) }
    dend_110 { pt3dadd( 108.225, 101.728, -22.2939, 0.15 ) }
    dend_110 { pt3dadd( 109.256, 102.507, -22.2091, 0.44 ) }
    dend_110 { pt3dadd( 110.088, 103.099, -22.1002, 0.37 ) }
    dend_110 { pt3dadd( 111.773, 104.187, -21.7585, 1.62 ) }
    dend_110 { pt3dadd( 112.045, 104.347, -21.6919, 1.77 ) }
    dend_110 { pt3dadd( 114.051, 105.365, -21.1569, 0.22 ) }
    dend_110 { pt3dadd( 114.506, 105.543, -21.0319, 0.66 ) }
    dend_110 { pt3dadd( 115.375, 105.834, -20.8064, 0.59 ) }
    dend_110 { pt3dadd( 116.915, 106.249, -20.4741, 0.37 ) }
    dend_110 { pt3dadd( 116.987, 106.265, -20.4637, 0.37 ) }
    dend_110 { pt3dadd( 117.527, 106.402, -20.3892, 0.29 ) }
    dend_110 { pt3dadd( 118.505, 106.724, -20.2806, 0.44 ) }
    dend_110 { pt3dadd( 118.567, 106.745, -20.2736, 0.44 ) }
    dend_110 { pt3dadd( 119.549, 107.097, -20.1266, 0.59 ) }
    dend_110 { pt3dadd( 120.47, 107.565, -19.8614, 0.22 ) }
    dend_110 { pt3dadd( 120.534, 107.607, -19.8305, 0.22 ) }
    dend_110 { pt3dadd( 121.1, 108.093, -19.4337, 0.22 ) }
    dend_110 { pt3dadd( 121.136, 108.133, -19.4063, 0.22 ) }
    dend_110 { pt3dadd( 121.855, 109.031, -18.8739, 0.59 ) }
    dend_110 { pt3dadd( 122.536, 109.943, -18.3984, 0.81 ) }
    dend_110 { pt3dadd( 122.59, 110.0, -18.3622, 0.81 ) }
    dend_110 { pt3dadd( 123.052, 110.37, -18.1032, 0.81 ) }
    dend_110 { pt3dadd( 124.49, 110.972, -17.2092, 0.22 ) }
    dend_110 { pt3dadd( 124.541, 110.982, -17.1765, 0.22 ) }
    dend_110 { pt3dadd( 124.998, 110.978, -16.8594, 0.59 ) }
    dend_110 { pt3dadd( 126.562, 110.834, -15.7814, 0.81 ) }
    dend_110 { pt3dadd( 127.119, 110.739, -15.363, 0.96 ) }
    dend_110 { pt3dadd( 129.236, 110.121, -13.5803, 0.37 ) }
    dend_110 { pt3dadd( 129.343, 110.075, -13.4768, 0.37 ) }
    dend_110 { pt3dadd( 130.389, 109.588, -12.4192, 0.66 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 63/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( 5.52612, 16.5576, 2.73869, 0.88 ) }
    dend_107 { pt3dadd( 6.48472, 17.307, 3.12242, 0.88 ) }
    dend_107 { pt3dadd( 8.19794, 18.5356, 3.66045, 0.66 ) }
    dend_107 { pt3dadd( 9.54506, 19.4638, 3.98933, 0.66 ) }
    dend_107 { pt3dadd( 11.2449, 20.5852, 4.31596, 0.66 ) }
    dend_107 { pt3dadd( 12.3096, 21.2559, 4.4371, 0.66 ) }
    dend_107 { pt3dadd( 13.6526, 22.0947, 4.51261, 0.88 ) }
    dend_107 { pt3dadd( 13.7358, 22.1428, 4.50673, 0.88 ) }
    dend_107 { pt3dadd( 14.7134, 22.712, 4.30506, 1.47 ) }
    dend_107 { pt3dadd( 15.338, 23.1082, 4.12618, 1.47 ) }
    dend_107 { pt3dadd( 16.6033, 24.0194, 3.74331, 1.03 ) }
    dend_107 { pt3dadd( 17.5541, 24.7745, 3.4758, 0.88 ) }
    dend_107 { pt3dadd( 18.2866, 25.4172, 3.30051, 1.03 ) }
    dend_107 { pt3dadd( 19.52, 26.5913, 3.06146, 1.03 ) }
    dend_107 { pt3dadd( 20.7114, 27.8485, 2.9481, 0.88 ) }
    dend_107 { pt3dadd( 21.4857, 28.7836, 2.96171, 0.74 ) }
    dend_107 { pt3dadd( 22.0768, 29.5416, 3.10159, 0.88 ) }
    dend_107 { pt3dadd( 22.9907, 30.6772, 3.46764, 1.4 ) }
    dend_107 { pt3dadd( 23.6042, 31.3958, 3.81179, 1.33 ) }
    dend_107 { pt3dadd( 24.5082, 32.4152, 4.4168, 0.88 ) }
    dend_107 { pt3dadd( 25.0416, 32.9848, 4.79948, 0.59 ) }
    dend_107 { pt3dadd( 26.3416, 34.3118, 5.65577, 0.52 ) }
    dend_107 { pt3dadd( 27.0564, 34.9994, 5.99859, 0.52 ) }
    dend_107 { pt3dadd( 28.047, 35.9205, 6.31265, 0.81 ) }
    dend_107 { pt3dadd( 29.0321, 36.8475, 6.51501, 1.03 ) }
    dend_107 { pt3dadd( 29.6772, 37.4684, 6.55684, 1.33 ) }
    dend_107 { pt3dadd( 30.5533, 38.4031, 6.46592, 1.33 ) }
    dend_107 { pt3dadd( 31.5887, 39.7551, 6.13107, 0.81 ) }
    dend_107 { pt3dadd( 32.117, 40.5725, 5.87784, 0.81 ) }
    dend_107 { pt3dadd( 32.1582, 40.6494, 5.85473, 0.81 ) }
    dend_107 { pt3dadd( 32.4428, 41.2268, 5.77454, 0.88 ) }
    dend_107 { pt3dadd( 33.1688, 42.7923, 5.80996, 0.74 ) }
    dend_107 { pt3dadd( 33.5853, 43.6575, 5.9993, 0.59 ) }
    dend_107 { pt3dadd( 34.0078, 44.4226, 6.3129, 0.59 ) }
    dend_107 { pt3dadd( 34.9531, 45.8161, 7.19541, 1.03 ) }
    dend_107 { pt3dadd( 36.4424, 47.494, 8.69704, 1.03 ) }
    dend_107 { pt3dadd( 36.4975, 47.5465, 8.75583, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_107 { pt3dadd( 36.9574, 47.9171, 9.25994, 1.18 ) }
    dend_107 { pt3dadd( 37.6009, 48.3659, 9.89828, 1.33 ) }
    dend_107 { pt3dadd( 38.7944, 49.106, 10.9172, 1.47 ) }
    dend_107 { pt3dadd( 39.9711, 49.7761, 11.6857, 1.11 ) }
    dend_107 { pt3dadd( 40.7738, 50.3099, 12.067, 1.11 ) }
    dend_107 { pt3dadd( 41.0265, 50.5114, 12.1673, 1.11 ) }
    dend_107 { pt3dadd( 41.6126, 51.1268, 12.3132, 1.4 ) }
    dend_107 { pt3dadd( 41.895, 51.5022, 12.3357, 1.62 ) }
    dend_107 { pt3dadd( 41.9476, 51.5814, 12.3294, 1.62 ) }
    dend_107 { pt3dadd( 42.4295, 52.4384, 12.2386, 1.18 ) }
    dend_107 { pt3dadd( 43.0725, 53.6361, 12.1971, 0.81 ) }
    dend_107 { pt3dadd( 43.6768, 54.8123, 12.2112, 0.66 ) }
    dend_107 { pt3dadd( 44.339, 56.1251, 12.2752, 0.59 ) }
    dend_107 { pt3dadd( 44.3741, 56.1955, 12.2808, 0.59 ) }
    dend_107 { pt3dadd( 45.1884, 57.8822, 12.4646, 1.03 ) }
    dend_107 { pt3dadd( 45.7678, 59.181, 12.692, 0.88 ) }
    dend_107 { pt3dadd( 45.8384, 59.3405, 12.73, 0.88 ) }
    dend_107 { pt3dadd( 46.203, 60.1712, 12.9621, 1.03 ) }
    dend_107 { pt3dadd( 46.2358, 60.2522, 12.9832, 1.03 ) }
    dend_107 { pt3dadd( 46.6135, 61.1923, 13.2341, 0.96 ) }
    dend_107 { pt3dadd( 47.2172, 62.6525, 13.6539, 1.25 ) }
    // Section: dend_53, id: dend_53, parent: dend_37 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -1.72209, -23.2518, 2.21751, 2.58 ) }
    dend_53 { pt3dadd( -1.36437, -24.1092, 2.20708, 2.58 ) }
    dend_53 { pt3dadd( -1.22235, -24.5275, 2.16287, 2.58 ) }
    dend_53 { pt3dadd( -0.962991, -25.4624, 2.00231, 1.99 ) }
    dend_53 { pt3dadd( -0.734153, -26.4594, 1.7619, 1.99 ) }
    dend_53 { pt3dadd( -0.568314, -27.3134, 1.52194, 1.84 ) }
    dend_53 { pt3dadd( -0.416839, -28.2329, 1.2409, 1.84 ) }
    dend_53 { pt3dadd( -0.280732, -29.4705, 0.801953, 1.84 ) }
    dend_53 { pt3dadd( -0.216124, -30.4057, 0.438256, 1.92 ) }
    dend_53 { pt3dadd( -0.180008, -31.628, -0.0766997, 1.92 ) }
    dend_53 { pt3dadd( -0.213348, -33.0827, -0.710963, 1.92 ) }
    dend_53 { pt3dadd( -0.258016, -34.1256, -1.14698, 2.5 ) }
    dend_53 { pt3dadd( -0.278468, -35.2031, -1.53203, 2.95 ) }
    dend_53 { pt3dadd( -0.273339, -35.6021, -1.65081, 3.24 ) }
    dend_53 { pt3dadd( -0.226454, -36.661, -1.92187, 2.58 ) }
    dend_53 { pt3dadd( -0.108082, -37.9509, -2.14503, 1.99 ) }
    dend_53 { pt3dadd( 0.11001, -39.1632, -2.23836, 1.99 ) }
    dend_53 { pt3dadd( 0.53588, -41.0446, -2.29104, 1.92 ) }
    dend_53 { pt3dadd( 0.645671, -41.4349, -2.28094, 1.92 ) }
    dend_53 { pt3dadd( 0.779831, -41.8259, -2.25404, 2.36 ) }
    dend_53 { pt3dadd( 1.30212, -43.0074, -2.06914, 1.99 ) }
    dend_53 { pt3dadd( 1.92052, -44.0309, -1.78126, 1.99 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 43/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -1.72209, -23.2518, 2.21751, 1.25 ) }
    dend_38 { pt3dadd( -3.40336, -24.4749, 2.89045, 1.25 ) }
    dend_38 { pt3dadd( -4.41682, -25.1946, 3.26819, 0.88 ) }
    dend_38 { pt3dadd( -5.62224, -26.0279, 3.69477, 0.88 ) }
    dend_38 { pt3dadd( -6.50799, -26.6159, 3.96891, 1.11 ) }
    dend_38 { pt3dadd( -7.12501, -27.0095, 4.14383, 1.47 ) }
    dend_38 { pt3dadd( -7.4721, -27.2275, 4.23586, 1.47 ) }
    dend_38 { pt3dadd( -7.88606, -27.4745, 4.30325, 1.77 ) }
    dend_38 { pt3dadd( -8.54622, -27.8679, 4.37987, 1.62 ) }
    dend_38 { pt3dadd( -9.40834, -28.3848, 4.46145, 1.47 ) }
    dend_38 { pt3dadd( -10.0831, -28.7865, 4.53607, 1.62 ) }
    dend_38 { pt3dadd( -10.6399, -29.1191, 4.6195, 1.62 ) }
    dend_38 { pt3dadd( -11.0763, -29.3797, 4.69533, 1.33 ) }
    dend_38 { pt3dadd( -12.2074, -30.06, 4.91775, 1.33 ) }
    dend_38 { pt3dadd( -13.1049, -30.637, 5.10822, 1.25 ) }
    dend_38 { pt3dadd( -14.0263, -31.269, 5.32522, 1.25 ) }
    dend_38 { pt3dadd( -15.3717, -32.226, 5.65105, 1.25 ) }
    dend_38 { pt3dadd( -16.2944, -32.9068, 5.91832, 1.03 ) }
    dend_38 { pt3dadd( -16.883, -33.3683, 6.11437, 0.88 ) }
    dend_38 { pt3dadd( -17.7614, -34.1555, 6.49049, 0.88 ) }
    dend_38 { pt3dadd( -18.2839, -34.7176, 6.77231, 1.11 ) }
    dend_38 { pt3dadd( -18.3224, -34.7672, 6.80006, 1.11 ) }
    dend_38 { pt3dadd( -19.0164, -35.8118, 7.44283, 1.11 ) }
    dend_38 { pt3dadd( -19.4283, -36.5101, 7.93626, 1.62 ) }
    dend_38 { pt3dadd( -19.9942, -37.5008, 8.71259, 1.77 ) }
    dend_38 { pt3dadd( -20.589, -38.4389, 9.51214, 1.92 ) }
    dend_38 { pt3dadd( -21.0972, -39.1424, 10.1012, 1.55 ) }
    dend_38 { pt3dadd( -21.1333, -39.1845, 10.1332, 1.55 ) }
    dend_38 { pt3dadd( -22.1626, -40.1122, 10.7059, 0.66 ) }
    dend_38 { pt3dadd( -22.922, -40.5763, 10.8881, 0.66 ) }
    dend_38 { pt3dadd( -24.0581, -41.0498, 10.8959, 1.25 ) }
    dend_38 { pt3dadd( -25.082, -41.4112, 10.8003, 1.55 ) }
    dend_38 { pt3dadd( -26.1744, -41.7962, 10.6583, 1.4 ) }
    dend_38 { pt3dadd( -27.1492, -42.1753, 10.5305, 1.18 ) }
    dend_38 { pt3dadd( -28.1891, -42.6617, 10.409, 0.96 ) }
    dend_38 { pt3dadd( -29.0852, -43.2403, 10.3789, 0.96 ) }
    dend_38 { pt3dadd( -29.8321, -43.9658, 10.4954, 1.03 ) }
    dend_38 { pt3dadd( -30.2891, -44.607, 10.6741, 1.4 ) }
    dend_38 { pt3dadd( -30.73, -45.5355, 10.9899, 1.4 ) }
    dend_38 { pt3dadd( -31.1782, -46.9533, 11.4783, 1.33 ) }
    dend_38 { pt3dadd( -31.3855, -47.9189, 11.7955, 1.4 ) }
    dend_38 { pt3dadd( -31.5569, -49.1458, 12.1504, 1.62 ) }
    dend_38 { pt3dadd( -31.6466, -50.0657, 12.379, 1.47 ) }
    dend_38 { pt3dadd( -31.7814, -51.501, 12.6858, 1.25 ) }
    dend_38 { pt3dadd( -31.9076, -52.6806, 12.9039, 1.4 ) }
    dend_38 { pt3dadd( -32.0263, -53.3583, 13.0123, 1.4 ) }
    dend_38 { pt3dadd( -32.3115, -54.3982, 13.1791, 1.4 ) }
    dend_38 { pt3dadd( -32.841, -55.6419, 13.357, 0.88 ) }
    dend_38 { pt3dadd( -33.3686, -56.4856, 13.499, 0.66 ) }
    dend_38 { pt3dadd( -33.8093, -56.9601, 13.5858, 0.96 ) }
    dend_38 { pt3dadd( -34.6901, -57.6499, 13.7464, 1.25 ) }
    dend_38 { pt3dadd( -35.3383, -58.0646, 13.861, 1.33 ) }
    dend_38 { pt3dadd( -36.2545, -58.6042, 14.0239, 1.4 ) }
    dend_38 { pt3dadd( -36.839, -58.9901, 14.1277, 1.11 ) }
    dend_38 { pt3dadd( -37.474, -59.535, 14.2477, 1.11 ) }
    dend_38 { pt3dadd( -38.0756, -60.2113, 14.3921, 1.11 ) }
    dend_38 { pt3dadd( -38.8115, -61.16, 14.5802, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_38 { pt3dadd( -39.629, -62.3689, 14.8163, 1.11 ) }
    dend_38 { pt3dadd( -40.5554, -63.9774, 15.144, 1.11 ) }
    dend_38 { pt3dadd( -41.2019, -65.2846, 15.4006, 1.11 ) }
    dend_38 { pt3dadd( -41.6715, -66.4219, 15.6295, 2.14 ) }
    // Section: dend_22, id: dend_22, parent: dend_0 (entry count 4/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.97809, 19.6617, 5.77062, 0.96 ) }
    dend_22 { pt3dadd( -0.921472, 20.9817, 4.3217, 0.96 ) }
    dend_22 { pt3dadd( -0.0373905, 22.3534, 3.05041, 0.96 ) }
    dend_22 { pt3dadd( 1.09089, 24.4169, 1.33576, 1.18 ) }
    dend_22 { pt3dadd( 1.66151, 25.6285, 0.400617, 1.18 ) }
    dend_22 { pt3dadd( 2.19403, 26.8861, -0.524098, 0.9 ) }
    dend_22 { pt3dadd( 2.58463, 27.9978, -1.28198, 0.9 ) }
    dend_22 { pt3dadd( 2.83212, 29.3007, -2.12583, 0.81 ) }
    dend_22 { pt3dadd( 2.84404, 29.8258, -2.35955, 0.81 ) }
    dend_22 { pt3dadd( 2.7926, 30.3907, -2.49312, 0.81 ) }
    dend_22 { pt3dadd( 2.78178, 30.4814, -2.50334, 0.81 ) }
    dend_22 { pt3dadd( 2.62403, 31.9737, -2.52953, 0.81 ) }
    dend_22 { pt3dadd( 2.62157, 32.1187, -2.5249, 0.81 ) }
    dend_22 { pt3dadd( 2.77854, 33.3126, -2.40349, 0.74 ) }
    dend_22 { pt3dadd( 2.86973, 33.659, -2.34842, 0.74 ) }
    dend_22 { pt3dadd( 3.3473, 34.924, -2.20686, 0.96 ) }
    dend_22 { pt3dadd( 3.85158, 36.0196, -2.11955, 0.96 ) }
    dend_22 { pt3dadd( 4.34185, 36.9388, -2.04015, 0.81 ) }
    dend_22 { pt3dadd( 5.1597, 38.3828, -1.92721, 0.59 ) }
    dend_22 { pt3dadd( 5.76545, 39.3453, -1.86688, 0.96 ) }
    dend_22 { pt3dadd( 6.93847, 41.0582, -1.8027, 0.96 ) }
    dend_22 { pt3dadd( 7.00177, 41.1398, -1.80571, 0.96 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 26/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.97809, 19.6617, 5.77062, 2.73 ) }
    dend_1 { pt3dadd( -2.61345, 20.3644, 6.53034, 2.73 ) }
    dend_1 { pt3dadd( -3.14069, 20.9565, 7.12763, 2.43 ) }
    dend_1 { pt3dadd( -3.84163, 21.7421, 7.84818, 2.5 ) }
    dend_1 { pt3dadd( -4.40163, 22.3687, 8.38045, 1.47 ) }
    dend_1 { pt3dadd( -5.26991, 23.3316, 9.13861, 1.42 ) }
    dend_1 { pt3dadd( -5.83315, 23.964, 9.5971, 1.42 ) }
    dend_1 { pt3dadd( -6.25956, 24.4622, 9.89653, 1.42 ) }
    dend_1 { pt3dadd( -6.82822, 25.1277, 10.2361, 1.42 ) }
    dend_1 { pt3dadd( -7.48874, 25.8921, 10.5481, 1.42 ) }
    dend_1 { pt3dadd( -7.99133, 26.4837, 10.761, 1.62 ) }
    dend_1 { pt3dadd( -8.71535, 27.3092, 10.9905, 2.06 ) }
    dend_1 { pt3dadd( -9.22292, 27.899, 11.1379, 2.28 ) }
    dend_1 { pt3dadd( -9.97359, 28.787, 11.357, 2.28 ) }
    dend_1 { pt3dadd( -10.5639, 29.5044, 11.5213, 2.28 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 41/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 1.44262, 41.9766, 0.478043, 0.15 ) }
    axon_1 { pt3dadd( 2.14713, 56.96, 0.478043, 0.15 ) }
    axon_1 { pt3dadd( 2.85164, 71.9435, 0.478043, 0.15 ) }
    // Section: dend_109, id: dend_109, parent: dend_107 (entry count 44/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( 47.2172, 62.6525, 13.6539, 0.59 ) }
    dend_109 { pt3dadd( 48.1527, 63.2141, 14.6251, 0.59 ) }
    dend_109 { pt3dadd( 49.7312, 64.1749, 16.0682, 0.59 ) }
    dend_109 { pt3dadd( 49.7753, 64.1979, 16.1076, 0.59 ) }
    dend_109 { pt3dadd( 50.8856, 64.5829, 17.0021, 1.03 ) }
    dend_109 { pt3dadd( 50.9331, 64.5972, 17.0419, 1.03 ) }
    dend_109 { pt3dadd( 51.9859, 64.8967, 17.9389, 0.44 ) }
    dend_109 { pt3dadd( 52.6258, 65.0488, 18.4604, 0.74 ) }
    dend_109 { pt3dadd( 53.9705, 65.3984, 19.6137, 0.44 ) }
    dend_109 { pt3dadd( 55.158, 65.8647, 21.0079, 0.37 ) }
    dend_109 { pt3dadd( 56.0065, 66.3707, 22.4492, 0.37 ) }
    dend_109 { pt3dadd( 56.0378, 66.3947, 22.525, 0.37 ) }
    dend_109 { pt3dadd( 56.2759, 66.6403, 23.3772, 0.37 ) }
    dend_109 { pt3dadd( 56.6371, 67.0921, 24.9651, 0.59 ) }
    dend_109 { pt3dadd( 56.9518, 67.8341, 27.0432, 0.59 ) }
    dend_109 { pt3dadd( 56.9569, 67.8587, 27.1014, 0.59 ) }
    dend_109 { pt3dadd( 57.1511, 68.7525, 29.1804, 0.96 ) }
    dend_109 { pt3dadd( 57.2014, 68.9462, 29.5967, 0.96 ) }
    dend_109 { pt3dadd( 57.4428, 69.6264, 30.9896, 0.22 ) }
    dend_109 { pt3dadd( 57.6834, 70.0485, 31.6001, 0.44 ) }
    dend_109 { pt3dadd( 58.0553, 70.5728, 32.1452, 0.37 ) }
    dend_109 { pt3dadd( 58.0904, 70.6318, 32.1945, 0.37 ) }
    dend_109 { pt3dadd( 58.3029, 71.1634, 32.6614, 0.37 ) }
    dend_109 { pt3dadd( 58.3206, 71.2181, 32.7238, 0.37 ) }
    dend_109 { pt3dadd( 58.4196, 71.6132, 33.2904, 0.37 ) }
    dend_109 { pt3dadd( 58.6724, 72.6974, 34.8247, 0.52 ) }
    dend_109 { pt3dadd( 58.6859, 72.7391, 34.884, 0.52 ) }
    dend_109 { pt3dadd( 59.0961, 74.0339, 36.7969, 0.22 ) }
    dend_109 { pt3dadd( 59.1728, 74.292, 37.199, 0.52 ) }
    dend_109 { pt3dadd( 59.2325, 74.5557, 37.6018, 0.81 ) }
    dend_109 { pt3dadd( 59.3845, 76.0184, 39.735, 0.29 ) }
    dend_109 { pt3dadd( 59.3813, 76.6854, 40.4938, 0.29 ) }
    // Section: dend_108, id: dend_108, parent: dend_107 (entry count 76/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( 47.2172, 62.6525, 13.6539, 0.37 ) }
    dend_108 { pt3dadd( 47.8459, 63.8166, 14.6454, 0.37 ) }
    dend_108 { pt3dadd( 48.0743, 64.162, 15.0077, 0.74 ) }
    dend_108 { pt3dadd( 49.2465, 65.936, 17.139, 0.59 ) }
    dend_108 { pt3dadd( 49.7137, 66.646, 18.048, 1.11 ) }
    dend_108 { pt3dadd( 50.1945, 67.4154, 19.0464, 1.11 ) }
    dend_108 { pt3dadd( 50.4736, 67.88, 19.653, 1.25 ) }
    dend_108 { pt3dadd( 51.4275, 69.3553, 21.8049, 0.52 ) }
    dend_108 { pt3dadd( 51.809, 69.9655, 22.6927, 0.52 ) }
    dend_108 { pt3dadd( 51.8343, 70.0135, 22.7537, 0.52 ) }
    dend_108 { pt3dadd( 52.0338, 70.4032, 23.2254, 0.52 ) }
    dend_108 { pt3dadd( 52.0598, 70.4571, 23.2708, 0.52 ) }
    dend_108 { pt3dadd( 52.3034, 71.0108, 23.5015, 0.52 ) }
    dend_108 { pt3dadd( 52.3293, 71.0809, 23.5031, 0.52 ) }
    dend_108 { pt3dadd( 52.7129, 72.1591, 23.5612, 0.74 ) }
    dend_108 { pt3dadd( 53.05, 73.281, 23.6851, 1.03 ) }
    dend_108 { pt3dadd( 53.2435, 74.0445, 23.809, 0.52 ) }
    dend_108 { pt3dadd( 53.2386, 74.1311, 23.8486, 0.52 ) }
    dend_108 { pt3dadd( 53.0527, 74.6745, 24.2441, 0.52 ) }
    dend_108 { pt3dadd( 52.5725, 75.7288, 25.2478, 0.52 ) }
    dend_108 { pt3dadd( 52.1726, 76.5486, 26.1232, 0.52 ) }
    dend_108 { pt3dadd( 52.1509, 76.6062, 26.1804, 0.52 ) }
    dend_108 { pt3dadd( 51.8545, 77.8837, 27.3334, 0.81 ) }
    dend_108 { pt3dadd( 51.8099, 78.2507, 27.6091, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_108 { pt3dadd( 51.781, 79.0774, 28.1036, 0.59 ) }
    dend_108 { pt3dadd( 51.7879, 79.9322, 28.5152, 0.44 ) }
    dend_108 { pt3dadd( 51.7902, 80.8782, 28.9486, 0.44 ) }
    dend_108 { pt3dadd( 51.7839, 80.9441, 28.983, 0.44 ) }
    dend_108 { pt3dadd( 51.6785, 81.3894, 29.2462, 0.44 ) }
    dend_108 { pt3dadd( 51.4901, 81.8773, 29.5688, 0.44 ) }
    dend_108 { pt3dadd( 51.2147, 82.3944, 29.9336, 0.66 ) }
    dend_108 { pt3dadd( 50.9041, 82.8834, 30.3117, 1.03 ) }
    dend_108 { pt3dadd( 50.362, 83.7072, 30.9665, 1.33 ) }
    dend_108 { pt3dadd( 50.3224, 83.7716, 31.0144, 1.33 ) }
    dend_108 { pt3dadd( 50.0643, 84.2253, 31.3661, 0.81 ) }
    dend_108 { pt3dadd( 49.7945, 84.7309, 31.7502, 0.52 ) }
    dend_108 { pt3dadd( 49.5344, 85.3305, 32.2756, 0.44 ) }
    dend_108 { pt3dadd( 49.5059, 85.413, 32.3526, 0.44 ) }
    dend_108 { pt3dadd( 49.4235, 85.7494, 32.6505, 0.52 ) }
    dend_108 { pt3dadd( 49.3196, 86.6427, 33.504, 0.74 ) }
    dend_108 { pt3dadd( 49.3394, 87.0649, 33.9406, 1.33 ) }
    dend_108 { pt3dadd( 49.5241, 88.3813, 35.2965, 1.03 ) }
    dend_108 { pt3dadd( 49.658, 89.0517, 35.9846, 0.74 ) }
    dend_108 { pt3dadd( 49.7744, 89.6771, 36.6043, 0.66 ) }
    dend_108 { pt3dadd( 49.9764, 90.7497, 37.6416, 0.44 ) }
    dend_108 { pt3dadd( 50.1538, 91.7181, 38.5191, 0.44 ) }
    dend_108 { pt3dadd( 50.2396, 92.3809, 39.0921, 0.29 ) }
    dend_108 { pt3dadd( 50.2418, 92.4522, 39.1536, 0.29 ) }
    dend_108 { pt3dadd( 50.1882, 93.1528, 39.8189, 0.29 ) }
    dend_108 { pt3dadd( 50.0692, 93.7289, 40.3871, 0.74 ) }
    dend_108 { pt3dadd( 50.0325, 93.8343, 40.4877, 0.74 ) }
    dend_108 { pt3dadd( 49.8077, 94.3888, 41.0791, 0.74 ) }
    dend_108 { pt3dadd( 49.3327, 95.5626, 42.4827, 0.29 ) }
    dend_108 { pt3dadd( 49.0837, 96.191, 43.2283, 0.29 ) }
    dend_108 { pt3dadd( 49.0428, 96.3008, 43.3588, 0.29 ) }
    dend_108 { pt3dadd( 48.8243, 96.8788, 44.0089, 0.59 ) }
    dend_108 { pt3dadd( 48.5431, 97.6441, 44.851, 0.74 ) }
    dend_108 { pt3dadd( 48.4605, 97.8706, 45.0868, 0.81 ) }
    dend_108 { pt3dadd( 48.1704, 98.6802, 45.736, 0.37 ) }
    dend_108 { pt3dadd( 48.1483, 98.7451, 45.7876, 0.37 ) }
    dend_108 { pt3dadd( 48.016, 99.1999, 46.1856, 0.44 ) }
    dend_108 { pt3dadd( 48.0041, 99.251, 46.2316, 0.44 ) }
    dend_108 { pt3dadd( 47.9582, 99.5663, 46.5919, 0.44 ) }
    dend_108 { pt3dadd( 47.939, 99.9179, 47.0666, 0.29 ) }
    dend_108 { pt3dadd( 47.9381, 100.624, 48.0962, 0.88 ) }
    dend_108 { pt3dadd( 47.9511, 101.392, 49.1578, 1.33 ) }
    dend_108 { pt3dadd( 47.9548, 101.438, 49.217, 1.33 ) }
    dend_108 { pt3dadd( 48.0981, 102.567, 50.5425, 0.74 ) }
    dend_108 { pt3dadd( 48.2758, 103.552, 51.6045, 0.88 ) }
    dend_108 { pt3dadd( 48.3544, 103.906, 51.9414, 1.03 ) }
    dend_108 { pt3dadd( 48.5607, 104.726, 52.5155, 0.29 ) }
    dend_108 { pt3dadd( 48.7691, 105.651, 52.9888, 0.22 ) }
    dend_108 { pt3dadd( 48.7875, 105.724, 53.0167, 0.22 ) }
    dend_108 { pt3dadd( 48.8905, 106.097, 53.0858, 0.22 ) }
    dend_108 { pt3dadd( 48.9423, 106.25, 53.0945, 0.22 ) }
    dend_108 { pt3dadd( 49.3726, 107.46, 53.1281, 0.22 ) }
    dend_108 { pt3dadd( 49.3988, 107.53, 53.1262, 0.22 ) }
    dend_108 { pt3dadd( 49.6565, 108.268, 53.0957, 0.22 ) }
    dend_108 { pt3dadd( 49.6828, 108.338, 53.0911, 0.22 ) }
    dend_108 { pt3dadd( 50.1767, 109.525, 52.9611, 0.22 ) }
    // Section: dend_65, id: dend_65, parent: dend_53 (entry count 56/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 1.92052, -44.0309, -1.78126, 1.92 ) }
    dend_65 { pt3dadd( 2.79769, -44.2939, -2.38559, 1.92 ) }
    dend_65 { pt3dadd( 3.96703, -44.6445, -3.1912, 2.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 59/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 1.92052, -44.0309, -1.78126, 0.88 ) }
    dend_54 { pt3dadd( 2.81589, -46.8688, 0.396671, 0.88 ) }
    dend_54 { pt3dadd( 3.01102, -47.9045, 1.02234, 0.74 ) }
    dend_54 { pt3dadd( 3.06499, -48.6498, 1.37145, 0.88 ) }
    dend_54 { pt3dadd( 3.02836, -49.2268, 1.59935, 1.03 ) }
    dend_54 { pt3dadd( 2.91153, -50.0535, 1.89088, 0.74 ) }
    dend_54 { pt3dadd( 2.89729, -50.1186, 1.91183, 0.74 ) }
    dend_54 { pt3dadd( 2.40194, -51.1864, 1.97167, 0.74 ) }
    dend_54 { pt3dadd( 2.06685, -51.7697, 2.01461, 1.18 ) }
    dend_54 { pt3dadd( 1.55052, -52.5832, 2.08737, 1.03 ) }
    dend_54 { pt3dadd( 1.51791, -52.6314, 2.09253, 1.03 ) }
    dend_54 { pt3dadd( 0.968026, -53.4337, 2.19771, 0.81 ) }
    dend_54 { pt3dadd( 0.478525, -54.1646, 2.30336, 1.25 ) }
    dend_54 { pt3dadd( 0.0708601, -54.8274, 2.42695, 1.47 ) }
    // Section: dend_42, id: dend_42, parent: dend_38 (entry count 73/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -41.6715, -66.4219, 15.6295, 0.74 ) }
    dend_42 { pt3dadd( -42.2807, -67.1039, 15.8639, 0.74 ) }
    dend_42 { pt3dadd( -42.7422, -67.5868, 16.0548, 0.74 ) }
    dend_42 { pt3dadd( -43.3443, -68.1802, 16.3225, 0.66 ) }
    dend_42 { pt3dadd( -43.9405, -68.7261, 16.5939, 0.88 ) }
    dend_42 { pt3dadd( -44.2452, -68.9834, 16.7328, 1.03 ) }
    dend_42 { pt3dadd( -44.6191, -69.2857, 16.9141, 0.88 ) }
    dend_42 { pt3dadd( -44.9035, -69.4905, 17.0652, 0.74 ) }
    dend_42 { pt3dadd( -45.2648, -69.7183, 17.2745, 0.74 ) }
    dend_42 { pt3dadd( -45.743, -69.9844, 17.5676, 0.74 ) }
    dend_42 { pt3dadd( -46.0737, -70.1522, 17.8203, 0.74 ) }
    dend_42 { pt3dadd( -46.6051, -70.3966, 18.2627, 0.52 ) }
    dend_42 { pt3dadd( -46.8745, -70.5062, 18.4889, 0.52 ) }
    dend_42 { pt3dadd( -47.7061, -70.8235, 19.177, 0.88 ) }
    dend_42 { pt3dadd( -48.0382, -70.942, 19.4203, 1.33 ) }
    dend_42 { pt3dadd( -49.1636, -71.3525, 20.0767, 0.52 ) }
    dend_42 { pt3dadd( -49.6598, -71.5505, 20.2919, 0.52 ) }
    dend_42 { pt3dadd( -50.1811, -71.7757, 20.4295, 0.52 ) }
    dend_42 { pt3dadd( -50.6771, -72.0145, 20.5041, 0.52 ) }
    dend_42 { pt3dadd( -51.3982, -72.411, 20.5182, 0.88 ) }
    dend_42 { pt3dadd( -52.2089, -72.9229, 20.437, 1.18 ) }
    dend_42 { pt3dadd( -52.6756, -73.2585, 20.3311, 1.18 ) }
    dend_42 { pt3dadd( -53.201, -73.6881, 20.2136, 1.4 ) }
    dend_42 { pt3dadd( -53.6261, -74.0718, 20.1295, 1.4 ) }
    dend_42 { pt3dadd( -54.2017, -74.6368, 20.0534, 1.4 ) }
    dend_42 { pt3dadd( -54.8807, -75.3518, 20.0668, 1.03 ) }
    dend_42 { pt3dadd( -55.3498, -75.8483, 20.1476, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_42 { pt3dadd( -55.8495, -76.3807, 20.3353, 0.37 ) }
    dend_42 { pt3dadd( -56.0817, -76.6317, 20.4792, 0.37 ) }
    dend_42 { pt3dadd( -56.3981, -76.9811, 20.7504, 0.66 ) }
    dend_42 { pt3dadd( -56.8616, -77.4748, 21.2629, 1.03 ) }
    dend_42 { pt3dadd( -57.0714, -77.6846, 21.5293, 1.25 ) }
    dend_42 { pt3dadd( -57.6217, -78.1964, 22.1966, 0.81 ) }
    dend_42 { pt3dadd( -57.798, -78.3578, 22.38, 0.81 ) }
    dend_42 { pt3dadd( -58.0251, -78.5737, 22.5939, 0.29 ) }
    dend_42 { pt3dadd( -58.3383, -78.9034, 22.84, 0.29 ) }
    dend_42 { pt3dadd( -58.627, -79.2545, 23.0079, 0.59 ) }
    dend_42 { pt3dadd( -58.9644, -79.6943, 23.1666, 0.74 ) }
    dend_42 { pt3dadd( -59.2188, -80.0227, 23.2517, 0.96 ) }
    dend_42 { pt3dadd( -59.381, -80.2278, 23.302, 1.11 ) }
    dend_42 { pt3dadd( -59.7783, -80.695, 23.4178, 0.74 ) }
    dend_42 { pt3dadd( -60.1414, -81.1106, 23.5207, 0.59 ) }
    dend_42 { pt3dadd( -60.3848, -81.3786, 23.5883, 0.66 ) }
    dend_42 { pt3dadd( -60.6984, -81.7156, 23.676, 0.74 ) }
    dend_42 { pt3dadd( -61.0305, -82.0848, 23.7717, 0.37 ) }
    dend_42 { pt3dadd( -61.5409, -82.7221, 23.9429, 0.29 ) }
    dend_42 { pt3dadd( -61.5678, -82.762, 23.9533, 0.29 ) }
    dend_42 { pt3dadd( -61.825, -83.2824, 24.1175, 0.29 ) }
    dend_42 { pt3dadd( -61.9733, -83.7068, 24.2608, 0.88 ) }
    dend_42 { pt3dadd( -62.1077, -84.1768, 24.4289, 1.4 ) }
    dend_42 { pt3dadd( -62.2798, -84.7954, 24.6851, 1.55 ) }
    dend_42 { pt3dadd( -62.4482, -85.3224, 24.9259, 1.55 ) }
    dend_42 { pt3dadd( -62.8103, -86.2038, 25.3728, 0.74 ) }
    dend_42 { pt3dadd( -63.0678, -86.6881, 25.6548, 0.52 ) }
    dend_42 { pt3dadd( -63.4571, -87.2156, 26.0274, 0.52 ) }
    dend_42 { pt3dadd( -63.9852, -87.7012, 26.451, 0.52 ) }
    dend_42 { pt3dadd( -64.4831, -88.0232, 26.7851, 0.74 ) }
    dend_42 { pt3dadd( -64.8359, -88.198, 27.0054, 0.96 ) }
    dend_42 { pt3dadd( -65.1433, -88.3249, 27.1759, 0.81 ) }
    dend_42 { pt3dadd( -65.6387, -88.5368, 27.4624, 0.37 ) }
    dend_42 { pt3dadd( -65.9689, -88.7211, 27.6903, 0.29 ) }
    dend_42 { pt3dadd( -66.304, -89.0097, 27.9702, 0.29 ) }
    dend_42 { pt3dadd( -66.6591, -89.4206, 28.3278, 0.66 ) }
    dend_42 { pt3dadd( -66.8888, -89.7505, 28.6026, 0.96 ) }
    dend_42 { pt3dadd( -67.1178, -90.1115, 28.8961, 1.47 ) }
    dend_42 { pt3dadd( -67.472, -90.6875, 29.3948, 1.25 ) }
    dend_42 { pt3dadd( -67.8641, -91.2779, 29.9625, 0.74 ) }
    dend_42 { pt3dadd( -67.8931, -91.3138, 30.0017, 0.74 ) }
    dend_42 { pt3dadd( -68.3089, -91.7256, 30.5003, 0.74 ) }
    dend_42 { pt3dadd( -68.5869, -91.9393, 30.8159, 0.74 ) }
    dend_42 { pt3dadd( -69.129, -92.2358, 31.3515, 0.74 ) }
    dend_42 { pt3dadd( -69.4367, -92.365, 31.6139, 0.88 ) }
    dend_42 { pt3dadd( -69.7256, -92.4711, 31.8094, 0.88 ) }
    dend_42 { pt3dadd( -70.1157, -92.6162, 32.0154, 0.88 ) }
    dend_42 { pt3dadd( -70.6619, -92.8214, 32.1968, 0.59 ) }
    dend_42 { pt3dadd( -71.3026, -93.1056, 32.3347, 0.29 ) }
    dend_42 { pt3dadd( -71.4883, -93.2006, 32.3509, 0.29 ) }
    dend_42 { pt3dadd( -72.5973, -93.8216, 32.5272, 0.29 ) }
    dend_42 { pt3dadd( -72.6363, -93.8461, 32.5392, 0.29 ) }
    dend_42 { pt3dadd( -72.9458, -94.0545, 32.7108, 0.29 ) }
    dend_42 { pt3dadd( -73.4678, -94.4049, 33.1037, 1.4 ) }
    dend_42 { pt3dadd( -73.5006, -94.4261, 33.1371, 1.4 ) }
    dend_42 { pt3dadd( -74.1553, -94.8252, 33.9121, 1.11 ) }
    dend_42 { pt3dadd( -74.5486, -95.0555, 34.4312, 1.55 ) }
    dend_42 { pt3dadd( -74.9652, -95.3006, 34.9567, 1.62 ) }
    dend_42 { pt3dadd( -75.2157, -95.4498, 35.2662, 1.62 ) }
    dend_42 { pt3dadd( -75.7799, -95.7924, 35.8962, 0.81 ) }
    dend_42 { pt3dadd( -76.1915, -96.051, 36.2978, 0.88 ) }
    dend_42 { pt3dadd( -76.3755, -96.1774, 36.4449, 0.88 ) }
    dend_42 { pt3dadd( -76.9722, -96.6104, 36.8374, 0.37 ) }
    dend_42 { pt3dadd( -77.0138, -96.6435, 36.8583, 0.37 ) }
    dend_42 { pt3dadd( -77.6264, -97.1692, 37.1047, 0.37 ) }
    dend_42 { pt3dadd( -77.932, -97.4434, 37.1941, 0.96 ) }
    dend_42 { pt3dadd( -78.3209, -97.8002, 37.2872, 1.33 ) }
    dend_42 { pt3dadd( -78.8838, -98.3228, 37.3922, 0.74 ) }
    dend_42 { pt3dadd( -79.438, -98.8254, 37.4692, 0.59 ) }
    dend_42 { pt3dadd( -79.8404, -99.1683, 37.527, 0.96 ) }
    dend_42 { pt3dadd( -80.0352, -99.322, 37.5682, 0.96 ) }
    dend_42 { pt3dadd( -80.0818, -99.3558, 37.5885, 0.96 ) }
    dend_42 { pt3dadd( -80.555, -99.6685, 37.9599, 0.29 ) }
    dend_42 { pt3dadd( -80.803, -99.8382, 38.2387, 0.29 ) }
    dend_42 { pt3dadd( -81.0635, -100.027, 38.6076, 0.29 ) }
    dend_42 { pt3dadd( -81.4439, -100.348, 39.2084, 0.81 ) }
    dend_42 { pt3dadd( -81.9167, -100.827, 39.9875, 1.25 ) }
    dend_42 { pt3dadd( -82.2101, -101.165, 40.4908, 1.62 ) }
    dend_42 { pt3dadd( -82.3851, -101.397, 40.8108, 1.62 ) }
    dend_42 { pt3dadd( -82.4092, -101.436, 40.8512, 1.62 ) }
    dend_42 { pt3dadd( -82.7889, -102.117, 41.3722, 0.44 ) }
    dend_42 { pt3dadd( -83.0316, -102.588, 41.6116, 0.74 ) }
    dend_42 { pt3dadd( -83.0555, -102.637, 41.6278, 0.74 ) }
    dend_42 { pt3dadd( -83.1479, -102.832, 41.6786, 0.74 ) }
    dend_42 { pt3dadd( -83.4979, -103.585, 41.8562, 0.29 ) }
    dend_42 { pt3dadd( -83.5196, -103.632, 41.8674, 0.29 ) }
    dend_42 { pt3dadd( -83.723, -104.095, 41.9669, 1.33 ) }
    dend_42 { pt3dadd( -83.8603, -104.378, 42.0442, 1.62 ) }
    dend_42 { pt3dadd( -83.9951, -104.629, 42.1539, 1.62 ) }
    dend_42 { pt3dadd( -84.0142, -104.658, 42.1769, 1.62 ) }
    dend_42 { pt3dadd( -84.3864, -105.043, 42.7682, 0.59 ) }
    dend_42 { pt3dadd( -84.4108, -105.061, 42.8097, 0.59 ) }
    dend_42 { pt3dadd( -84.6832, -105.183, 43.2646, 0.44 ) }
    dend_42 { pt3dadd( -85.1445, -105.302, 44.0363, 0.52 ) }
    dend_42 { pt3dadd( -85.653, -105.335, 44.8343, 0.74 ) }
    dend_42 { pt3dadd( -86.0728, -105.299, 45.4276, 0.88 ) }
    dend_42 { pt3dadd( -86.3253, -105.244, 45.7427, 0.88 ) }
    dend_42 { pt3dadd( -86.6712, -105.155, 46.1272, 0.66 ) }
    dend_42 { pt3dadd( -87.1366, -105.029, 46.5739, 1.03 ) }
    dend_42 { pt3dadd( -87.675, -104.906, 47.0176, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_42 { pt3dadd( -88.1217, -104.843, 47.3477, 0.44 ) }
    dend_42 { pt3dadd( -88.5159, -104.827, 47.6335, 0.44 ) }
    dend_42 { pt3dadd( -89.2938, -104.879, 48.2343, 0.96 ) }
    dend_42 { pt3dadd( -89.7005, -104.938, 48.5786, 1.18 ) }
    dend_42 { pt3dadd( -90.3347, -105.076, 49.1423, 0.81 ) }
    dend_42 { pt3dadd( -90.8025, -105.2, 49.612, 0.81 ) }
    dend_42 { pt3dadd( -91.2337, -105.306, 50.0825, 1.4 ) }
    dend_42 { pt3dadd( -91.7161, -105.393, 50.6296, 1.4 ) }
    dend_42 { pt3dadd( -92.2742, -105.42, 51.2542, 0.29 ) }
    dend_42 { pt3dadd( -92.3089, -105.416, 51.2922, 0.29 ) }
    dend_42 { pt3dadd( -92.7236, -105.275, 51.701, 0.29 ) }
    dend_42 { pt3dadd( -93.1438, -105.05, 52.0641, 0.88 ) }
    dend_42 { pt3dadd( -93.496, -104.822, 52.3066, 0.59 ) }
    dend_42 { pt3dadd( -93.8553, -104.587, 52.4932, 0.88 ) }
    dend_42 { pt3dadd( -94.108, -104.442, 52.5962, 0.88 ) }
    dend_42 { pt3dadd( -94.3993, -104.315, 52.703, 0.74 ) }
    dend_42 { pt3dadd( -94.8751, -104.178, 52.8591, 0.74 ) }
    dend_42 { pt3dadd( -95.2364, -104.124, 52.9773, 0.44 ) }
    dend_42 { pt3dadd( -95.7843, -104.083, 53.1959, 0.29 ) }
    dend_42 { pt3dadd( -96.0889, -104.069, 53.3327, 0.29 ) }
    dend_42 { pt3dadd( -96.7317, -104.049, 53.6458, 0.29 ) }
    dend_42 { pt3dadd( -97.1447, -104.025, 53.8612, 1.11 ) }
    dend_42 { pt3dadd( -97.573, -103.979, 54.0971, 1.33 ) }
    dend_42 { pt3dadd( -98.5125, -103.832, 54.6259, 0.37 ) }
    dend_42 { pt3dadd( -98.8739, -103.776, 54.8393, 0.37 ) }
    dend_42 { pt3dadd( -98.915, -103.771, 54.8635, 0.37 ) }
    dend_42 { pt3dadd( -99.4189, -103.708, 55.1377, 0.37 ) }
    dend_42 { pt3dadd( -99.8751, -103.67, 55.3156, 0.37 ) }
    dend_42 { pt3dadd( -100.442, -103.64, 55.5075, 0.44 ) }
    dend_42 { pt3dadd( -101.271, -103.677, 55.72, 1.33 ) }
    dend_42 { pt3dadd( -101.81, -103.738, 55.8529, 1.55 ) }
    dend_42 { pt3dadd( -102.379, -103.831, 55.9856, 1.11 ) }
    dend_42 { pt3dadd( -103.336, -104.073, 56.1854, 0.59 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 33/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -41.6715, -66.4219, 15.6295, 0.88 ) }
    dend_39 { pt3dadd( -41.6328, -67.333, 15.4828, 0.88 ) }
    dend_39 { pt3dadd( -41.6179, -67.9801, 15.3589, 0.88 ) }
    dend_39 { pt3dadd( -41.6139, -68.6824, 15.1893, 0.88 ) }
    dend_39 { pt3dadd( -41.6447, -69.4443, 14.9933, 1.25 ) }
    dend_39 { pt3dadd( -41.7124, -70.2581, 14.8132, 0.66 ) }
    dend_39 { pt3dadd( -41.8032, -70.9713, 14.6769, 0.66 ) }
    dend_39 { pt3dadd( -41.8136, -71.0119, 14.6695, 0.66 ) }
    dend_39 { pt3dadd( -42.0747, -71.6746, 14.5771, 0.52 ) }
    dend_39 { pt3dadd( -42.3551, -72.1577, 14.5638, 0.52 ) }
    dend_39 { pt3dadd( -42.7776, -72.7483, 14.6391, 0.88 ) }
    dend_39 { pt3dadd( -42.964, -72.9905, 14.6981, 0.88 ) }
    dend_39 { pt3dadd( -43.1661, -73.2779, 14.758, 0.88 ) }
    dend_39 { pt3dadd( -43.3552, -73.5859, 14.7854, 0.52 ) }
    dend_39 { pt3dadd( -43.6365, -74.0873, 14.7511, 0.52 ) }
    dend_39 { pt3dadd( -43.8669, -74.5428, 14.5976, 0.74 ) }
    dend_39 { pt3dadd( -44.1145, -75.0481, 14.3478, 1.18 ) }
    dend_39 { pt3dadd( -44.3952, -75.6354, 14.0476, 1.18 ) }
    dend_39 { pt3dadd( -44.6733, -76.2368, 13.7433, 0.96 ) }
    dend_39 { pt3dadd( -45.0178, -77.0243, 13.3566, 1.33 ) }
    dend_39 { pt3dadd( -45.4411, -78.075, 12.872, 0.96 ) }
    dend_39 { pt3dadd( -45.6949, -78.7701, 12.5845, 0.52 ) }
    dend_39 { pt3dadd( -46.0414, -79.8854, 12.214, 0.52 ) }
    dend_39 { pt3dadd( -46.1838, -80.4535, 12.0779, 1.33 ) }
    dend_39 { pt3dadd( -46.287, -81.0032, 11.9992, 1.69 ) }
    dend_39 { pt3dadd( -46.3944, -81.6906, 11.9791, 1.69 ) }
    dend_39 { pt3dadd( -46.4565, -82.114, 12.0142, 1.33 ) }
    dend_39 { pt3dadd( -46.5548, -82.7127, 12.0876, 0.74 ) }
    dend_39 { pt3dadd( -46.653, -83.1023, 12.1489, 0.37 ) }
    dend_39 { pt3dadd( -46.8052, -83.464, 12.2252, 0.29 ) }
    dend_39 { pt3dadd( -47.1114, -83.917, 12.353, 0.29 ) }
    dend_39 { pt3dadd( -47.2838, -84.099, 12.4183, 0.96 ) }
    dend_39 { pt3dadd( -47.5799, -84.3403, 12.5249, 0.96 ) }
    dend_39 { pt3dadd( -47.8861, -84.527, 12.6315, 0.96 ) }
    dend_39 { pt3dadd( -47.9217, -84.5451, 12.644, 0.96 ) }
    dend_39 { pt3dadd( -48.1232, -84.6394, 12.716, 0.96 ) }
    // Section: dend_36, id: dend_36, parent: dend_22 (entry count 69/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 7.00177, 41.1398, -1.80571, 0.52 ) }
    dend_36 { pt3dadd( 7.48965, 41.0227, -2.44193, 0.52 ) }
    dend_36 { pt3dadd( 8.28253, 40.8689, -3.45012, 0.52 ) }
    dend_36 { pt3dadd( 9.47457, 40.667, -4.86495, 0.66 ) }
    dend_36 { pt3dadd( 11.2347, 40.4262, -6.78617, 0.88 ) }
    dend_36 { pt3dadd( 13.3181, 40.2175, -8.89017, 0.66 ) }
    dend_36 { pt3dadd( 14.4711, 40.157, -9.97541, 0.29 ) }
    dend_36 { pt3dadd( 14.5156, 40.1579, -10.014, 0.29 ) }
    dend_36 { pt3dadd( 15.2081, 40.2356, -10.5147, 0.29 ) }
    dend_36 { pt3dadd( 15.9567, 40.4101, -10.9137, 0.88 ) }
    dend_36 { pt3dadd( 16.6173, 40.6, -11.1478, 1.11 ) }
    dend_36 { pt3dadd( 18.1674, 41.01, -11.5383, 0.29 ) }
    dend_36 { pt3dadd( 18.991, 41.2301, -11.7614, 0.22 ) }
    dend_36 { pt3dadd( 19.0499, 41.2448, -11.7816, 0.22 ) }
    dend_36 { pt3dadd( 19.8121, 41.4387, -12.0866, 1.25 ) }
    dend_36 { pt3dadd( 21.7701, 41.8884, -12.9843, 0.22 ) }
    dend_36 { pt3dadd( 22.3696, 42.0201, -13.2789, 0.22 ) }
    dend_36 { pt3dadd( 23.1244, 42.1845, -13.654, 0.66 ) }
    dend_36 { pt3dadd( 24.6009, 42.513, -14.4413, 1.25 ) }
    dend_36 { pt3dadd( 25.0198, 42.6081, -14.6639, 1.55 ) }
    dend_36 { pt3dadd( 26.6911, 42.964, -15.5828, 1.25 ) }
    dend_36 { pt3dadd( 28.1204, 43.2797, -16.4114, 0.29 ) }
    dend_36 { pt3dadd( 28.4364, 43.3493, -16.5971, 0.59 ) }
    dend_36 { pt3dadd( 29.4133, 43.5655, -17.1495, 0.22 ) }
    dend_36 { pt3dadd( 30.2209, 43.7402, -17.5671, 1.69 ) }
    dend_36 { pt3dadd( 32.4751, 44.1777, -18.7791, 0.74 ) }
    dend_36 { pt3dadd( 33.6312, 44.4301, -19.4001, 0.37 ) }
    dend_36 { pt3dadd( 34.209, 44.5629, -19.7125, 0.22 ) }
    dend_36 { pt3dadd( 34.5797, 44.6502, -19.9097, 0.66 ) }
    dend_36 { pt3dadd( 35.8696, 44.9632, -20.5737, 1.69 ) }
    dend_36 { pt3dadd( 38.6793, 45.6685, -22.0721, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_36 { pt3dadd( 39.7277, 45.9453, -22.6339, 1.55 ) }
    dend_36 { pt3dadd( 41.6247, 46.4501, -23.6624, 0.74 ) }
    dend_36 { pt3dadd( 42.0382, 46.5627, -23.894, 1.11 ) }
    dend_36 { pt3dadd( 42.0951, 46.5786, -23.9271, 1.11 ) }
    dend_36 { pt3dadd( 44.053, 47.0608, -25.0716, 0.22 ) }
    dend_36 { pt3dadd( 44.1018, 47.0718, -25.0976, 0.22 ) }
    dend_36 { pt3dadd( 44.6333, 47.1655, -25.4139, 0.52 ) }
    dend_36 { pt3dadd( 45.7845, 47.3581, -26.1343, 1.18 ) }
    dend_36 { pt3dadd( 47.3794, 47.6266, -27.1241, 1.03 ) }
    dend_36 { pt3dadd( 48.7858, 47.8444, -28.1043, 0.29 ) }
    dend_36 { pt3dadd( 49.659, 47.9701, -28.7483, 1.25 ) }
    dend_36 { pt3dadd( 52.2739, 48.3757, -30.7437, 1.33 ) }
    dend_36 { pt3dadd( 52.4138, 48.3994, -30.8554, 1.33 ) }
    dend_36 { pt3dadd( 52.8769, 48.4964, -31.2585, 1.33 ) }
    dend_36 { pt3dadd( 56.5843, 49.4959, -34.629, 0.74 ) }
    dend_36 { pt3dadd( 56.6317, 49.511, -34.675, 0.74 ) }
    dend_36 { pt3dadd( 57.4015, 49.7669, -35.4257, 0.29 ) }
    dend_36 { pt3dadd( 57.6638, 49.8639, -35.6726, 0.88 ) }
    dend_36 { pt3dadd( 59.8909, 50.7142, -37.7362, 0.29 ) }
    dend_36 { pt3dadd( 60.5751, 50.9639, -38.3428, 1.47 ) }
    dend_36 { pt3dadd( 62.9969, 51.8267, -40.3184, 0.44 ) }
    dend_36 { pt3dadd( 63.5091, 51.9894, -40.7233, 1.03 ) }
    dend_36 { pt3dadd( 64.9191, 52.3721, -41.8053, 0.52 ) }
    dend_36 { pt3dadd( 66.5577, 52.747, -42.9522, 1.55 ) }
    dend_36 { pt3dadd( 68.4529, 53.0928, -44.0748, 0.44 ) }
    dend_36 { pt3dadd( 68.5534, 53.1064, -44.1328, 0.44 ) }
    dend_36 { pt3dadd( 69.1035, 53.1559, -44.4549, 0.44 ) }
    dend_36 { pt3dadd( 69.2657, 53.1715, -44.5885, 0.44 ) }
    dend_36 { pt3dadd( 69.7543, 53.2247, -45.122, 0.59 ) }
    dend_36 { pt3dadd( 70.8175, 53.4256, -46.4313, 0.96 ) }
    dend_36 { pt3dadd( 72.3252, 53.812, -48.6062, 1.25 ) }
    dend_36 { pt3dadd( 73.7817, 54.2756, -50.8191, 1.11 ) }
    dend_36 { pt3dadd( 76.4347, 55.2238, -54.8693, 0.74 ) }
    dend_36 { pt3dadd( 78.5, 56.0385, -58.0088, 0.96 ) }
    dend_36 { pt3dadd( 79.4795, 56.4539, -59.4946, 1.11 ) }
    dend_36 { pt3dadd( 81.9932, 57.6215, -63.281, 1.99 ) }
    dend_36 { pt3dadd( 84.7418, 58.9939, -67.238, 0.81 ) }
    dend_36 { pt3dadd( 86.0771, 59.6906, -69.0068, 0.29 ) }
    dend_36 { pt3dadd( 86.8273, 60.078, -69.8637, 1.03 ) }
    dend_36 { pt3dadd( 87.8182, 60.5853, -70.8738, 1.25 ) }
    dend_36 { pt3dadd( 88.7655, 61.0498, -71.7595, 0.88 ) }
    dend_36 { pt3dadd( 89.5339, 61.4651, -72.3239, 0.29 ) }
    dend_36 { pt3dadd( 89.9576, 61.7222, -72.603, 0.66 ) }
    dend_36 { pt3dadd( 90.8358, 62.3023, -73.2138, 0.52 ) }
    dend_36 { pt3dadd( 90.873, 62.3236, -73.2398, 0.52 ) }
    dend_36 { pt3dadd( 91.793, 62.7571, -73.9072, 0.81 ) }
    dend_36 { pt3dadd( 91.8483, 62.7797, -73.9469, 0.81 ) }
    dend_36 { pt3dadd( 93.1176, 63.2719, -74.8638, 0.81 ) }
    dend_36 { pt3dadd( 95.0604, 63.9449, -76.247, 0.37 ) }
    dend_36 { pt3dadd( 96.5861, 64.4214, -77.2858, 1.18 ) }
    dend_36 { pt3dadd( 98.3504, 64.9382, -78.4628, 0.29 ) }
    dend_36 { pt3dadd( 98.8834, 65.0781, -78.8032, 0.96 ) }
    dend_36 { pt3dadd( 99.1154, 65.1361, -78.9438, 0.96 ) }
    dend_36 { pt3dadd( 100.429, 65.3764, -79.7304, 0.37 ) }
    dend_36 { pt3dadd( 100.732, 65.4288, -79.9, 0.88 ) }
    dend_36 { pt3dadd( 100.787, 65.4418, -79.933, 0.88 ) }
    dend_36 { pt3dadd( 101.305, 65.5773, -80.2314, 1.11 ) }
    dend_36 { pt3dadd( 101.363, 65.5922, -80.2629, 1.11 ) }
    dend_36 { pt3dadd( 104.263, 66.3496, -81.7161, 0.29 ) }
    dend_36 { pt3dadd( 104.926, 66.5291, -82.0348, 0.96 ) }
    dend_36 { pt3dadd( 106.163, 66.8659, -82.5975, 0.37 ) }
    dend_36 { pt3dadd( 107.157, 67.1623, -83.0348, 0.29 ) }
    dend_36 { pt3dadd( 108.018, 67.4573, -83.3896, 0.52 ) }
    dend_36 { pt3dadd( 109.141, 67.9125, -83.7856, 0.66 ) }
    dend_36 { pt3dadd( 110.548, 68.6092, -84.1522, 1.03 ) }
    dend_36 { pt3dadd( 111.032, 68.851, -84.2867, 1.03 ) }
    dend_36 { pt3dadd( 112.757, 69.7005, -84.7353, 0.29 ) }
    dend_36 { pt3dadd( 113.483, 70.0613, -84.951, 0.29 ) }
    dend_36 { pt3dadd( 114.088, 70.3848, -85.1253, 0.59 ) }
    dend_36 { pt3dadd( 114.415, 70.5677, -85.199, 0.88 ) }
    dend_36 { pt3dadd( 115.918, 71.41, -85.4299, 0.29 ) }
    dend_36 { pt3dadd( 116.312, 71.6329, -85.4961, 0.96 ) }
    dend_36 { pt3dadd( 116.373, 71.6681, -85.5042, 0.96 ) }
    dend_36 { pt3dadd( 117.168, 72.1159, -85.6114, 0.29 ) }
    dend_36 { pt3dadd( 117.808, 72.4869, -85.6906, 1.18 ) }
    dend_36 { pt3dadd( 118.066, 72.6492, -85.7107, 1.55 ) }
    dend_36 { pt3dadd( 119.252, 73.4633, -85.7781, 0.29 ) }
    dend_36 { pt3dadd( 119.754, 73.7934, -85.8191, 0.29 ) }
    dend_36 { pt3dadd( 120.179, 74.0419, -85.8499, 0.74 ) }
    dend_36 { pt3dadd( 120.255, 74.0801, -85.8535, 0.74 ) }
    dend_36 { pt3dadd( 120.71, 74.2847, -85.8524, 0.74 ) }
    dend_36 { pt3dadd( 121.996, 74.7171, -85.8884, 0.22 ) }
    dend_36 { pt3dadd( 122.437, 74.81, -85.8939, 0.22 ) }
    dend_36 { pt3dadd( 123.061, 74.9268, -85.9247, 1.03 ) }
    dend_36 { pt3dadd( 123.677, 75.0435, -85.9581, 1.25 ) }
    dend_36 { pt3dadd( 123.737, 75.0557, -85.9606, 1.25 ) }
    dend_36 { pt3dadd( 125.666, 75.4617, -85.9923, 0.29 ) }
    dend_36 { pt3dadd( 126.346, 75.6009, -85.9971, 0.29 ) }
    dend_36 { pt3dadd( 127.496, 75.8266, -86.0146, 0.29 ) }
    dend_36 { pt3dadd( 128.097, 75.9416, -86.04, 0.29 ) }
    dend_36 { pt3dadd( 128.577, 76.0486, -86.062, 0.81 ) }
    dend_36 { pt3dadd( 129.236, 76.2201, -86.1042, 1.11 ) }
    dend_36 { pt3dadd( 130.812, 76.6688, -86.1901, 0.22 ) }
    dend_36 { pt3dadd( 131.427, 76.8321, -86.2327, 1.11 ) }
    dend_36 { pt3dadd( 132.837, 77.1709, -86.3684, 0.22 ) }
    dend_36 { pt3dadd( 133.732, 77.3819, -86.4839, 0.22 ) }
    dend_36 { pt3dadd( 135.041, 77.6963, -86.6623, 0.44 ) }
    dend_36 { pt3dadd( 135.825, 77.897, -86.7556, 1.11 ) }
    dend_36 { pt3dadd( 136.472, 78.0593, -86.8064, 1.25 ) }
    dend_36 { pt3dadd( 138.372, 78.4718, -86.8732, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_36 { pt3dadd( 139.337, 78.6596, -86.8358, 0.88 ) }
    dend_36 { pt3dadd( 139.954, 78.7477, -86.7785, 0.88 ) }
    dend_36 { pt3dadd( 140.873, 78.8482, -86.6424, 0.22 ) }
    dend_36 { pt3dadd( 141.412, 78.8952, -86.5511, 0.88 ) }
    dend_36 { pt3dadd( 142.464, 78.9526, -86.3264, 0.22 ) }
    dend_36 { pt3dadd( 143.436, 78.9145, -86.0687, 0.22 ) }
    dend_36 { pt3dadd( 144.21, 78.8487, -85.8764, 0.22 ) }
    dend_36 { pt3dadd( 144.985, 78.7858, -85.7157, 0.88 ) }
    dend_36 { pt3dadd( 145.399, 78.7575, -85.6423, 1.11 ) }
    dend_36 { pt3dadd( 145.452, 78.7555, -85.6339, 1.11 ) }
    dend_36 { pt3dadd( 146.767, 78.7192, -85.4685, 0.22 ) }
    dend_36 { pt3dadd( 146.898, 78.7149, -85.4535, 0.22 ) }
    dend_36 { pt3dadd( 147.823, 78.732, -85.3325, 0.22 ) }
    dend_36 { pt3dadd( 148.518, 78.7438, -85.2289, 0.22 ) }
    dend_36 { pt3dadd( 148.578, 78.7424, -85.2195, 0.22 ) }
    dend_36 { pt3dadd( 149.246, 78.7157, -85.0942, 1.03 ) }
    dend_36 { pt3dadd( 149.308, 78.7099, -85.0798, 1.03 ) }
    dend_36 { pt3dadd( 149.904, 78.6371, -84.9324, 1.03 ) }
    dend_36 { pt3dadd( 151.149, 78.465, -84.6093, 0.22 ) }
    dend_36 { pt3dadd( 151.869, 78.3781, -84.4106, 0.22 ) }
    dend_36 { pt3dadd( 152.542, 78.3187, -84.2103, 1.4 ) }
    dend_36 { pt3dadd( 153.31, 78.2732, -83.9604, 1.47 ) }
    dend_36 { pt3dadd( 154.456, 78.2737, -83.5655, 0.22 ) }
    dend_36 { pt3dadd( 154.807, 78.2945, -83.4342, 0.59 ) }
    dend_36 { pt3dadd( 154.935, 78.3072, -83.3795, 0.59 ) }
    dend_36 { pt3dadd( 155.369, 78.3662, -83.1937, 0.81 ) }
    dend_36 { pt3dadd( 155.452, 78.3797, -83.1661, 0.81 ) }
    dend_36 { pt3dadd( 156.23, 78.4694, -82.9509, 0.15 ) }
    dend_36 { pt3dadd( 156.542, 78.4822, -82.8766, 0.15 ) }
    dend_36 { pt3dadd( 157.1, 78.4584, -82.7705, 0.74 ) }
    dend_36 { pt3dadd( 157.218, 78.444, -82.7503, 0.74 ) }
    dend_36 { pt3dadd( 158.788, 78.1294, -82.4834, 0.22 ) }
    dend_36 { pt3dadd( 159.872, 77.8753, -82.3167, 0.22 ) }
    dend_36 { pt3dadd( 159.923, 77.8619, -82.309, 0.22 ) }
    dend_36 { pt3dadd( 160.7, 77.6652, -82.1887, 1.25 ) }
    dend_36 { pt3dadd( 161.326, 77.5124, -82.0515, 1.25 ) }
    dend_36 { pt3dadd( 162.145, 77.2957, -81.8154, 0.37 ) }
    dend_36 { pt3dadd( 163.305, 76.9183, -81.2845, 0.22 ) }
    dend_36 { pt3dadd( 163.857, 76.7302, -80.9641, 0.37 ) }
    dend_36 { pt3dadd( 163.97, 76.6887, -80.8868, 0.37 ) }
    dend_36 { pt3dadd( 164.947, 76.3277, -80.1005, 0.88 ) }
    dend_36 { pt3dadd( 165.295, 76.2018, -79.7932, 0.88 ) }
    dend_36 { pt3dadd( 166.321, 75.7706, -78.8244, 0.22 ) }
    dend_36 { pt3dadd( 166.767, 75.5509, -78.4109, 0.74 ) }
    dend_36 { pt3dadd( 167.109, 75.3774, -78.1529, 0.96 ) }
    dend_36 { pt3dadd( 167.486, 75.1851, -77.9221, 0.96 ) }
    dend_36 { pt3dadd( 168.139, 74.8506, -77.6107, 0.22 ) }
    dend_36 { pt3dadd( 169.054, 74.4096, -77.2412, 0.22 ) }
    dend_36 { pt3dadd( 170.354, 73.8215, -76.8318, 0.22 ) }
    dend_36 { pt3dadd( 171.207, 73.4411, -76.5509, 0.74 ) }
    dend_36 { pt3dadd( 171.544, 73.2878, -76.4337, 1.03 ) }
    dend_36 { pt3dadd( 171.618, 73.2551, -76.4061, 1.03 ) }
    dend_36 { pt3dadd( 171.936, 73.1372, -76.2791, 1.25 ) }
    dend_36 { pt3dadd( 172.058, 73.1102, -76.2336, 1.25 ) }
    dend_36 { pt3dadd( 173.291, 72.9504, -75.7896, 0.22 ) }
    dend_36 { pt3dadd( 173.986, 72.8786, -75.5379, 0.15 ) }
    dend_36 { pt3dadd( 174.456, 72.8168, -75.3709, 0.88 ) }
    dend_36 { pt3dadd( 174.99, 72.7301, -75.1852, 1.11 ) }
    dend_36 { pt3dadd( 176.392, 72.4759, -74.7112, 0.22 ) }
    dend_36 { pt3dadd( 176.958, 72.3711, -74.5395, 0.81 ) }
    dend_36 { pt3dadd( 177.351, 72.3013, -74.4353, 0.81 ) }
    dend_36 { pt3dadd( 178.455, 72.0998, -74.143, 0.29 ) }
    dend_36 { pt3dadd( 178.631, 72.0634, -74.1017, 0.29 ) }
    dend_36 { pt3dadd( 179.292, 71.9102, -73.9816, 0.29 ) }
    dend_36 { pt3dadd( 180.149, 71.7142, -73.9943, 0.96 ) }
    dend_36 { pt3dadd( 180.746, 71.5907, -74.0998, 0.59 ) }
    dend_36 { pt3dadd( 180.8, 71.5804, -74.1138, 0.59 ) }
    dend_36 { pt3dadd( 181.723, 71.392, -74.4269, 0.59 ) }
    dend_36 { pt3dadd( 182.525, 71.1996, -74.7207, 1.33 ) }
    dend_36 { pt3dadd( 184.756, 70.5815, -75.598, 0.22 ) }
    dend_36 { pt3dadd( 185.202, 70.4438, -75.779, 1.11 ) }
    dend_36 { pt3dadd( 185.658, 70.2939, -75.9678, 1.33 ) }
    dend_36 { pt3dadd( 187.132, 69.7878, -76.5599, 0.22 ) }
    dend_36 { pt3dadd( 187.546, 69.6307, -76.7084, 0.66 ) }
    dend_36 { pt3dadd( 187.756, 69.5451, -76.7741, 0.81 ) }
    dend_36 { pt3dadd( 187.823, 69.5125, -76.7874, 0.81 ) }
    dend_36 { pt3dadd( 188.513, 69.1692, -76.9119, 0.22 ) }
    dend_36 { pt3dadd( 188.562, 69.1443, -76.9224, 0.22 ) }
    dend_36 { pt3dadd( 189.211, 68.8078, -76.985, 0.22 ) }
    dend_36 { pt3dadd( 196.734, 70.7315, -80.1815, 0.22 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 7.00177, 41.1398, -1.80571, 0.96 ) }
    dend_23 { pt3dadd( 7.04249, 41.86, -2.13745, 0.96 ) }
    dend_23 { pt3dadd( 7.12386, 42.4772, -2.60773, 0.96 ) }
    dend_23 { pt3dadd( 7.1908, 43.1271, -3.16757, 0.81 ) }
    dend_23 { pt3dadd( 7.2439, 43.6532, -3.6658, 0.52 ) }
    dend_23 { pt3dadd( 7.32434, 44.5359, -4.49451, 0.52 ) }
    dend_23 { pt3dadd( 7.62375, 46.8766, -6.54681, 0.96 ) }
    dend_23 { pt3dadd( 7.85271, 47.9426, -7.4613, 0.96 ) }
    dend_23 { pt3dadd( 8.04101, 48.6293, -8.02074, 0.96 ) }
    dend_23 { pt3dadd( 8.33179, 49.5844, -8.7426, 0.52 ) }
    dend_23 { pt3dadd( 8.52874, 50.2706, -9.1878, 0.44 ) }
    dend_23 { pt3dadd( 8.76501, 51.4748, -9.73609, 0.44 ) }
    dend_23 { pt3dadd( 8.8575, 52.4502, -9.88165, 0.37 ) }
    dend_23 { pt3dadd( 8.92015, 53.2002, -9.92888, 0.66 ) }
    dend_23 { pt3dadd( 8.93471, 53.7088, -9.95875, 1.03 ) }
    dend_23 { pt3dadd( 8.87287, 54.4009, -10.0443, 1.4 ) }
    dend_23 { pt3dadd( 8.73909, 54.9467, -10.2069, 1.33 ) }
    dend_23 { pt3dadd( 8.38779, 55.9085, -10.5939, 0.96 ) }
    dend_23 { pt3dadd( 8.36832, 55.9568, -10.6171, 0.96 ) }
    dend_23 { pt3dadd( 8.14917, 56.494, -10.8957, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_23 { pt3dadd( 7.89019, 57.1669, -11.2528, 0.81 ) }
    dend_23 { pt3dadd( 7.52107, 58.1959, -11.7948, 1.18 ) }
    dend_23 { pt3dadd( 7.23119, 59.0571, -12.2026, 1.47 ) }
    // Section: dend_13, id: dend_13, parent: dend_1 (entry count 3/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -10.5639, 29.5044, 11.5213, 0.74 ) }
    dend_13 { pt3dadd( -12.2777, 28.8758, 12.2688, 0.74 ) }
    dend_13 { pt3dadd( -13.3551, 28.4828, 12.8288, 0.88 ) }
    dend_13 { pt3dadd( -14.0937, 28.2227, 13.2368, 0.96 ) }
    dend_13 { pt3dadd( -15.2382, 27.8367, 13.8756, 0.96 ) }
    dend_13 { pt3dadd( -16.074, 27.5667, 14.3689, 0.81 ) }
    dend_13 { pt3dadd( -16.897, 27.3177, 14.8639, 0.74 ) }
    dend_13 { pt3dadd( -17.9159, 27.0525, 15.5164, 0.74 ) }
    dend_13 { pt3dadd( -18.6994, 26.8923, 16.042, 0.59 ) }
    dend_13 { pt3dadd( -19.4989, 26.7541, 16.5788, 0.88 ) }
    dend_13 { pt3dadd( -20.2042, 26.643, 17.0522, 0.81 ) }
    dend_13 { pt3dadd( -20.8489, 26.5518, 17.453, 0.81 ) }
    dend_13 { pt3dadd( -21.6873, 26.4467, 17.9385, 1.33 ) }
    dend_13 { pt3dadd( -22.4053, 26.3581, 18.3144, 1.33 ) }
    dend_13 { pt3dadd( -23.2684, 26.2466, 18.7609, 0.81 ) }
    dend_13 { pt3dadd( -24.2137, 26.1142, 19.2249, 0.81 ) }
    dend_13 { pt3dadd( -25.2471, 25.9588, 19.6456, 0.81 ) }
    dend_13 { pt3dadd( -26.3109, 25.7821, 20.0135, 0.81 ) }
    dend_13 { pt3dadd( -26.3981, 25.767, 20.0413, 0.81 ) }
    dend_13 { pt3dadd( -26.9976, 25.6664, 20.2051, 0.74 ) }
    dend_13 { pt3dadd( -27.9471, 25.528, 20.4268, 0.66 ) }
    dend_13 { pt3dadd( -29.3352, 25.319, 20.6597, 0.96 ) }
    dend_13 { pt3dadd( -30.4687, 25.1312, 20.8053, 0.96 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 26/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -10.5639, 29.5044, 11.5213, 1.33 ) }
    dend_2 { pt3dadd( -11.7166, 30.6224, 12.8909, 1.33 ) }
    dend_2 { pt3dadd( -12.288, 31.1909, 13.5504, 1.33 ) }
    dend_2 { pt3dadd( -13.0552, 32.0092, 14.3623, 1.69 ) }
    dend_2 { pt3dadd( -13.5446, 32.525, 14.832, 1.84 ) }
    dend_2 { pt3dadd( -14.4851, 33.505, 15.7335, 1.55 ) }
    dend_2 { pt3dadd( -15.5231, 34.5717, 16.7131, 1.18 ) }
    dend_2 { pt3dadd( -16.2041, 35.27, 17.349, 1.18 ) }
    dend_2 { pt3dadd( -17.1944, 36.303, 18.2828, 1.25 ) }
    dend_2 { pt3dadd( -17.7895, 36.9342, 18.8255, 1.25 ) }
    dend_2 { pt3dadd( -18.6063, 37.7952, 19.5444, 1.55 ) }
    dend_2 { pt3dadd( -18.9133, 38.0963, 19.77, 1.92 ) }
    dend_2 { pt3dadd( -19.9508, 39.0554, 20.5084, 2.28 ) }
    // Section: dend_95, id: dend_95, parent: dend_65 (entry count 39/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( 3.96703, -44.6445, -3.1912, 1.18 ) }
    dend_95 { pt3dadd( 4.39363, -44.7392, -2.89361, 1.18 ) }
    dend_95 { pt3dadd( 5.07273, -44.8946, -2.40399, 0.96 ) }
    dend_95 { pt3dadd( 5.90341, -45.0849, -1.79811, 0.96 ) }
    dend_95 { pt3dadd( 7.25105, -45.3841, -0.798752, 0.96 ) }
    dend_95 { pt3dadd( 8.26718, -45.6037, -0.0402061, 0.74 ) }
    dend_95 { pt3dadd( 9.16701, -45.7735, 0.606215, 0.66 ) }
    dend_95 { pt3dadd( 9.47305, -45.8329, 0.838668, 0.96 ) }
    dend_95 { pt3dadd( 9.51399, -45.841, 0.869444, 0.96 ) }
    dend_95 { pt3dadd( 10.1627, -45.9516, 1.29589, 0.96 ) }
    dend_95 { pt3dadd( 10.2131, -45.9596, 1.31561, 0.96 ) }
    dend_95 { pt3dadd( 11.0485, -46.1084, 1.46592, 0.74 ) }
    dend_95 { pt3dadd( 11.1542, -46.1365, 1.47395, 0.74 ) }
    dend_95 { pt3dadd( 12.0961, -46.4871, 1.50641, 0.74 ) }
    dend_95 { pt3dadd( 12.5918, -46.7181, 1.51709, 0.81 ) }
    dend_95 { pt3dadd( 12.941, -46.9083, 1.51775, 1.18 ) }
    dend_95 { pt3dadd( 13.8373, -47.4315, 1.52142, 1.03 ) }
    dend_95 { pt3dadd( 14.4225, -47.8105, 1.52601, 1.11 ) }
    dend_95 { pt3dadd( 15.4096, -48.4673, 1.5363, 0.74 ) }
    dend_95 { pt3dadd( 16.0029, -48.8903, 1.54573, 1.11 ) }
    dend_95 { pt3dadd( 16.4991, -49.2558, 1.55473, 1.92 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 60/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 3.96703, -44.6445, -3.1912, 1.03 ) }
    dend_66 { pt3dadd( 4.2844, -45.9231, -2.88964, 1.03 ) }
    dend_66 { pt3dadd( 4.44701, -47.2474, -2.61651, 0.88 ) }
    dend_66 { pt3dadd( 4.53714, -48.4407, -2.39656, 1.18 ) }
    dend_66 { pt3dadd( 4.59183, -49.7046, -2.17917, 1.25 ) }
    dend_66 { pt3dadd( 4.62421, -50.6965, -2.01143, 1.25 ) }
    dend_66 { pt3dadd( 4.66022, -52.4474, -1.73151, 0.88 ) }
    dend_66 { pt3dadd( 4.61636, -55.1194, -1.3104, 0.88 ) }
    dend_66 { pt3dadd( 4.57762, -56.4831, -1.12051, 1.03 ) }
    dend_66 { pt3dadd( 4.56805, -57.5326, -1.03454, 1.03 ) }
    dend_66 { pt3dadd( 4.59696, -59.0406, -0.979616, 0.88 ) }
    dend_66 { pt3dadd( 4.67294, -59.9495, -0.983423, 0.88 ) }
    dend_66 { pt3dadd( 4.83524, -60.7402, -1.03448, 0.88 ) }
    dend_66 { pt3dadd( 5.29014, -61.8967, -1.19673, 0.88 ) }
    dend_66 { pt3dadd( 5.84519, -62.8502, -1.39775, 1.33 ) }
    dend_66 { pt3dadd( 5.89611, -62.9121, -1.41527, 1.33 ) }
    dend_66 { pt3dadd( 6.67796, -63.6695, -1.67001, 1.55 ) }
    dend_66 { pt3dadd( 7.61708, -64.5011, -1.95731, 1.77 ) }
    dend_66 { pt3dadd( 8.27281, -65.0778, -2.15062, 1.99 ) }
    dend_66 { pt3dadd( 8.82555, -65.5624, -2.30639, 1.99 ) }
    dend_66 { pt3dadd( 10.2119, -66.7907, -2.67094, 1.47 ) }
    dend_66 { pt3dadd( 11.5933, -68.0399, -3.03957, 1.33 ) }
    dend_66 { pt3dadd( 12.8156, -69.1904, -3.37482, 1.33 ) }
    dend_66 { pt3dadd( 13.6863, -70.0475, -3.62553, 1.69 ) }
    dend_66 { pt3dadd( 14.2166, -70.5904, -3.78098, 1.69 ) }
    // Section: dend_60, id: dend_60, parent: dend_54 (entry count 85/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 0.0708601, -54.8274, 2.42695, 0.96 ) }
    dend_60 { pt3dadd( 0.206953, -55.6041, 3.54881, 0.96 ) }
    dend_60 { pt3dadd( 0.22995, -57.0692, 5.4548, 0.52 ) }
    dend_60 { pt3dadd( 0.203474, -57.4754, 5.89804, 0.81 ) }
    dend_60 { pt3dadd( -0.00770295, -58.7723, 7.06904, 0.74 ) }
    dend_60 { pt3dadd( -0.283896, -59.945, 7.95856, 1.11 ) }
    dend_60 { pt3dadd( -0.592506, -61.1937, 8.77564, 0.74 ) }
    dend_60 { pt3dadd( -0.831182, -62.1191, 9.28316, 0.52 ) }
    dend_60 { pt3dadd( -1.13945, -63.3401, 9.76387, 0.52 ) }
    dend_60 { pt3dadd( -1.44991, -64.7066, 10.2369, 0.52 ) }
    dend_60 { pt3dadd( -1.60474, -65.7213, 10.5078, 0.37 ) }
    dend_60 { pt3dadd( -1.67459, -66.6838, 10.7552, 0.52 ) }
    dend_60 { pt3dadd( -1.67353, -68.1595, 11.1532, 0.81 ) }
    dend_60 { pt3dadd( -1.6306, -68.8872, 11.4269, 1.11 ) }
    dend_60 { pt3dadd( -1.58485, -69.5991, 11.788, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_60 { pt3dadd( -1.55001, -70.51, 12.3877, 0.37 ) }
    dend_60 { pt3dadd( -1.71949, -71.2218, 13.0055, 0.74 ) }
    dend_60 { pt3dadd( -2.00603, -71.4761, 13.2994, 0.74 ) }
    dend_60 { pt3dadd( -2.94664, -71.8929, 13.814, 0.74 ) }
    dend_60 { pt3dadd( -3.86032, -72.2341, 14.1761, 0.59 ) }
    dend_60 { pt3dadd( -4.59649, -72.531, 14.4029, 0.59 ) }
    dend_60 { pt3dadd( -5.1793, -72.8192, 14.564, 0.88 ) }
    dend_60 { pt3dadd( -5.75673, -73.2128, 14.702, 0.96 ) }
    dend_60 { pt3dadd( -6.21211, -73.6853, 14.8356, 0.81 ) }
    dend_60 { pt3dadd( -6.79097, -74.5537, 15.0312, 0.52 ) }
    dend_60 { pt3dadd( -7.21517, -75.4132, 15.2762, 0.52 ) }
    dend_60 { pt3dadd( -7.59119, -76.2692, 15.5899, 0.88 ) }
    dend_60 { pt3dadd( -7.7285, -76.6009, 15.7502, 1.03 ) }
    dend_60 { pt3dadd( -8.19774, -77.7422, 16.4811, 0.52 ) }
    dend_60 { pt3dadd( -8.35567, -78.1159, 16.7694, 0.52 ) }
    dend_60 { pt3dadd( -8.74965, -78.9742, 17.5695, 0.81 ) }
    dend_60 { pt3dadd( -9.23837, -79.8589, 18.5439, 0.81 ) }
    dend_60 { pt3dadd( -9.80867, -80.6961, 19.5565, 0.44 ) }
    dend_60 { pt3dadd( -10.346, -81.3421, 20.3712, 0.81 ) }
    dend_60 { pt3dadd( -10.3775, -81.3729, 20.411, 0.81 ) }
    dend_60 { pt3dadd( -11.1676, -82.0745, 21.2499, 0.52 ) }
    dend_60 { pt3dadd( -11.6509, -82.4803, 21.6986, 0.59 ) }
    dend_60 { pt3dadd( -12.2399, -82.9428, 22.1456, 0.59 ) }
    dend_60 { pt3dadd( -12.9637, -83.4475, 22.5028, 0.81 ) }
    dend_60 { pt3dadd( -13.4886, -83.7985, 22.6622, 0.96 ) }
    dend_60 { pt3dadd( -13.9731, -84.1154, 22.7616, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 26/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 0.0708601, -54.8274, 2.42695, 0.74 ) }
    dend_55 { pt3dadd( -0.0154817, -56.8333, 2.28244, 0.74 ) }
    dend_55 { pt3dadd( 0.105427, -58.5802, 2.4877, 0.59 ) }
    dend_55 { pt3dadd( 0.113412, -58.6376, 2.51288, 0.59 ) }
    dend_55 { pt3dadd( 0.315711, -59.7944, 3.27009, 0.59 ) }
    dend_55 { pt3dadd( 0.3568, -60.0648, 3.41593, 0.59 ) }
    dend_55 { pt3dadd( 0.535592, -61.153, 3.88305, 0.59 ) }
    dend_55 { pt3dadd( 0.692382, -61.9048, 4.20642, 0.88 ) }
    dend_55 { pt3dadd( 1.12595, -63.5323, 4.80331, 0.88 ) }
    dend_55 { pt3dadd( 1.64323, -65.213, 5.29203, 0.66 ) }
    dend_55 { pt3dadd( 2.76135, -68.55, 6.02972, 1.25 ) }
    dend_55 { pt3dadd( 3.33488, -70.1362, 6.30478, 0.81 ) }
    dend_55 { pt3dadd( 3.86323, -71.4732, 6.44576, 0.74 ) }
    dend_55 { pt3dadd( 4.52182, -73.0259, 6.50712, 0.74 ) }
    dend_55 { pt3dadd( 4.95956, -73.958, 6.45608, 0.74 ) }
    dend_55 { pt3dadd( 4.99849, -74.0341, 6.44701, 0.74 ) }
    dend_55 { pt3dadd( 5.35758, -74.6904, 6.36286, 1.03 ) }
    dend_55 { pt3dadd( 5.76101, -75.7228, 6.26389, 0.37 ) }
    dend_55 { pt3dadd( 5.94827, -76.7554, 6.13669, 0.37 ) }
    dend_55 { pt3dadd( 5.91394, -77.1868, 6.07733, 0.81 ) }
    dend_55 { pt3dadd( 5.73188, -77.8986, 5.97786, 0.81 ) }
    dend_55 { pt3dadd( 5.46267, -78.6795, 5.87433, 0.81 ) }
    dend_55 { pt3dadd( 5.14748, -79.458, 5.8001, 0.66 ) }
    dend_55 { pt3dadd( 5.12634, -79.5122, 5.7991, 0.66 ) }
    dend_55 { pt3dadd( 4.90875, -80.2585, 5.81856, 0.66 ) }
    dend_55 { pt3dadd( 4.75761, -81.2081, 5.86385, 0.59 ) }
    dend_55 { pt3dadd( 4.72299, -81.9409, 5.91011, 0.81 ) }
    dend_55 { pt3dadd( 4.75491, -82.9485, 6.04229, 0.88 ) }
    dend_55 { pt3dadd( 4.84817, -84.0482, 6.23177, 1.18 ) }
    dend_55 { pt3dadd( 4.96239, -84.8372, 6.38778, 1.33 ) }
    dend_55 { pt3dadd( 5.19362, -85.8648, 6.6167, 0.59 ) }
    dend_55 { pt3dadd( 5.41783, -86.6309, 6.79814, 0.81 ) }
    dend_55 { pt3dadd( 5.86975, -87.8855, 7.09576, 0.44 ) }
    dend_55 { pt3dadd( 6.31772, -88.9748, 7.34189, 0.37 ) }
    dend_55 { pt3dadd( 6.82408, -89.983, 7.48786, 0.37 ) }
    dend_55 { pt3dadd( 7.19976, -90.6481, 7.51178, 0.88 ) }
    dend_55 { pt3dadd( 7.59922, -91.3355, 7.46261, 1.11 ) }
    dend_55 { pt3dadd( 8.03574, -92.1505, 7.30989, 1.11 ) }
    dend_55 { pt3dadd( 8.06114, -92.2099, 7.29204, 1.11 ) }
    dend_55 { pt3dadd( 8.54739, -93.9739, 6.68664, 0.66 ) }
    dend_55 { pt3dadd( 8.66357, -95.2541, 6.23758, 0.59 ) }
    dend_55 { pt3dadd( 8.60913, -96.1449, 5.96096, 0.59 ) }
    dend_55 { pt3dadd( 8.43908, -97.1196, 5.71015, 0.59 ) }
    dend_55 { pt3dadd( 8.18817, -98.0879, 5.51298, 1.18 ) }
    dend_55 { pt3dadd( 8.00698, -98.6899, 5.43574, 1.33 ) }
    dend_55 { pt3dadd( 7.71971, -99.4656, 5.41699, 1.33 ) }
    dend_55 { pt3dadd( 7.41557, -100.378, 5.43384, 0.74 ) }
    dend_55 { pt3dadd( 7.26795, -101.141, 5.42978, 0.59 ) }
    dend_55 { pt3dadd( 7.26579, -101.212, 5.42736, 0.59 ) }
    dend_55 { pt3dadd( 7.35775, -101.988, 5.37261, 0.44 ) }
    dend_55 { pt3dadd( 7.37488, -102.052, 5.36187, 0.44 ) }
    dend_55 { pt3dadd( 7.70883, -102.975, 5.1172, 0.81 ) }
    dend_55 { pt3dadd( 8.05202, -103.933, 4.75967, 1.11 ) }
    dend_55 { pt3dadd( 8.11265, -104.147, 4.68215, 1.11 ) }
    dend_55 { pt3dadd( 8.12563, -104.214, 4.66149, 1.11 ) }
    dend_55 { pt3dadd( 8.22278, -105.268, 4.38831, 0.37 ) }
    dend_55 { pt3dadd( 8.22474, -106.018, 4.22058, 0.37 ) }
    dend_55 { pt3dadd( 8.11915, -107.096, 4.06629, 0.74 ) }
    dend_55 { pt3dadd( 7.9752, -107.966, 3.99718, 1.18 ) }
    dend_55 { pt3dadd( 7.78938, -108.853, 3.9462, 1.18 ) }
    dend_55 { pt3dadd( 7.62374, -109.532, 3.9246, 1.03 ) }
    dend_55 { pt3dadd( 7.43048, -110.294, 3.99342, 0.59 ) }
    dend_55 { pt3dadd( 7.17682, -111.382, 4.18413, 0.59 ) }
    dend_55 { pt3dadd( 7.16333, -111.454, 4.20626, 0.59 ) }
    dend_55 { pt3dadd( 7.05185, -112.546, 4.64047, 0.29 ) }
    dend_55 { pt3dadd( 7.05407, -112.601, 4.67209, 0.29 ) }
    dend_55 { pt3dadd( 7.35743, -114.165, 5.73668, 0.29 ) }
    dend_55 { pt3dadd( 7.37184, -114.223, 5.77745, 0.29 ) }
    dend_55 { pt3dadd( 7.60881, -115.077, 6.34025, 0.96 ) }
    dend_55 { pt3dadd( 7.77442, -115.758, 6.75027, 0.96 ) }
    dend_55 { pt3dadd( 7.98527, -116.886, 7.35767, 0.29 ) }
    dend_55 { pt3dadd( 8.01882, -117.634, 7.66357, 0.29 ) }
    dend_55 { pt3dadd( 7.91752, -118.634, 7.91388, 0.29 ) }
    dend_55 { pt3dadd( 7.79096, -119.239, 8.02797, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_55 { pt3dadd( 7.55262, -119.916, 8.12534, 0.52 ) }
    dend_55 { pt3dadd( 7.19728, -120.684, 8.22311, 0.29 ) }
    dend_55 { pt3dadd( 6.72612, -121.559, 8.33869, 0.29 ) }
    dend_55 { pt3dadd( 6.5523, -121.87, 8.3988, 1.18 ) }
    dend_55 { pt3dadd( 6.29995, -122.405, 8.52973, 1.33 ) }
    dend_55 { pt3dadd( 5.98392, -123.243, 8.74466, 1.33 ) }
    dend_55 { pt3dadd( 5.75151, -124.087, 8.94013, 1.11 ) }
    dend_55 { pt3dadd( 5.56711, -125.012, 9.10969, 0.52 ) }
    dend_55 { pt3dadd( 5.55792, -125.091, 9.12043, 0.52 ) }
    dend_55 { pt3dadd( 5.49671, -126.252, 9.30253, 0.29 ) }
    dend_55 { pt3dadd( 5.50429, -126.914, 9.41191, 0.88 ) }
    dend_55 { pt3dadd( 5.5301, -127.57, 9.51146, 0.88 ) }
    dend_55 { pt3dadd( 5.55872, -128.09, 9.59807, 0.66 ) }
    dend_55 { pt3dadd( 5.57047, -128.772, 9.70762, 0.44 ) }
    dend_55 { pt3dadd( 5.44552, -129.805, 9.88195, 0.29 ) }
    dend_55 { pt3dadd( 5.42311, -129.882, 9.88938, 0.29 ) }
    dend_55 { pt3dadd( 5.22112, -130.467, 9.78583, 0.29 ) }
    dend_55 { pt3dadd( 5.1956, -130.557, 9.75323, 0.29 ) }
    dend_55 { pt3dadd( 5.06869, -131.14, 9.52798, 0.29 ) }
    dend_55 { pt3dadd( 4.95066, -132.002, 9.20215, 0.88 ) }
    dend_55 { pt3dadd( 4.91136, -133.046, 8.85261, 1.03 ) }
    dend_55 { pt3dadd( 5.00496, -134.71, 8.42354, 0.37 ) }
    dend_55 { pt3dadd( 5.10517, -135.695, 8.30841, 0.37 ) }
    dend_55 { pt3dadd( 5.21826, -136.64, 8.29305, 1.11 ) }
    dend_55 { pt3dadd( 5.32827, -137.47, 8.36438, 1.11 ) }
    dend_55 { pt3dadd( 5.45366, -138.522, 8.56458, 1.03 ) }
    dend_55 { pt3dadd( 5.52786, -139.359, 8.80493, 1.03 ) }
    dend_55 { pt3dadd( 5.61769, -141.081, 9.39413, 0.29 ) }
    dend_55 { pt3dadd( 5.62114, -141.732, 9.59226, 0.29 ) }
    dend_55 { pt3dadd( 5.60023, -142.374, 9.75441, 0.74 ) }
    dend_55 { pt3dadd( 5.54223, -142.966, 9.88505, 1.03 ) }
    dend_55 { pt3dadd( 5.38883, -143.767, 10.0407, 1.33 ) }
    dend_55 { pt3dadd( 5.15447, -144.552, 10.1531, 1.03 ) }
    dend_55 { pt3dadd( 4.81799, -145.358, 10.1953, 0.29 ) }
    dend_55 { pt3dadd( 4.77609, -145.426, 10.2015, 0.29 ) }
    dend_55 { pt3dadd( 4.20816, -146.095, 10.281, 0.29 ) }
    dend_55 { pt3dadd( 3.55505, -146.669, 10.3869, 0.88 ) }
    dend_55 { pt3dadd( 2.97035, -147.041, 10.4805, 0.88 ) }
    dend_55 { pt3dadd( 2.33208, -147.365, 10.5925, 0.88 ) }
    dend_55 { pt3dadd( 1.55834, -147.74, 10.7376, 0.96 ) }
    dend_55 { pt3dadd( 1.15038, -147.943, 10.8155, 0.96 ) }
    dend_55 { pt3dadd( 1.05744, -147.995, 10.8354, 0.96 ) }
    dend_55 { pt3dadd( 0.393005, -148.505, 10.9837, 0.29 ) }
    dend_55 { pt3dadd( -0.0163679, -149.013, 11.1101, 0.29 ) }
    dend_55 { pt3dadd( -0.262222, -149.626, 11.2198, 0.29 ) }
    dend_55 { pt3dadd( -0.273955, -149.691, 11.2297, 0.29 ) }
    dend_55 { pt3dadd( -0.302127, -150.393, 11.37, 0.96 ) }
    dend_55 { pt3dadd( -0.277761, -150.93, 11.4879, 0.96 ) }
    dend_55 { pt3dadd( -0.210735, -151.556, 11.6826, 0.44 ) }
    dend_55 { pt3dadd( -0.110509, -152.42, 11.9781, 0.37 ) }
    dend_55 { pt3dadd( -0.0441351, -153.181, 12.2464, 1.25 ) }
    dend_55 { pt3dadd( 0.0141934, -154.225, 12.5713, 1.47 ) }
    dend_55 { pt3dadd( 0.0284004, -154.978, 12.7554, 1.18 ) }
    dend_55 { pt3dadd( 0.015517, -156.417, 13.0361, 0.74 ) }
    dend_55 { pt3dadd( -0.0305422, -157.272, 13.1512, 0.37 ) }
    dend_55 { pt3dadd( -0.148874, -158.345, 13.1896, 0.29 ) }
    dend_55 { pt3dadd( -0.326017, -159.397, 13.0701, 0.29 ) }
    dend_55 { pt3dadd( -0.533288, -160.277, 12.8454, 1.03 ) }
    dend_55 { pt3dadd( -0.554533, -160.35, 12.8192, 1.03 ) }
    dend_55 { pt3dadd( -0.719573, -160.887, 12.5588, 1.25 ) }
    dend_55 { pt3dadd( -0.940984, -161.562, 12.2101, 1.18 ) }
    dend_55 { pt3dadd( -1.19537, -162.296, 11.842, 0.88 ) }
    dend_55 { pt3dadd( -1.37478, -162.762, 11.6682, 0.66 ) }
    dend_55 { pt3dadd( -1.6707, -163.48, 11.479, 0.37 ) }
    dend_55 { pt3dadd( -2.08071, -164.401, 11.3354, 0.29 ) }
    dend_55 { pt3dadd( -2.1408, -164.531, 11.3279, 0.29 ) }
    dend_55 { pt3dadd( -2.60413, -165.411, 11.414, 0.29 ) }
    dend_55 { pt3dadd( -3.17193, -166.37, 11.6076, 0.88 ) }
    dend_55 { pt3dadd( -3.49658, -166.884, 11.7427, 1.33 ) }
    dend_55 { pt3dadd( -4.12005, -167.802, 12.022, 1.55 ) }
    dend_55 { pt3dadd( -4.32983, -168.095, 12.1212, 1.84 ) }
    dend_55 { pt3dadd( -5.18399, -169.344, 12.5167, 0.44 ) }
    dend_55 { pt3dadd( -5.53457, -169.872, 12.6707, 0.81 ) }
    dend_55 { pt3dadd( -6.05785, -170.741, 12.8717, 0.37 ) }
    dend_55 { pt3dadd( -6.37691, -171.321, 12.9977, 0.29 ) }
    dend_55 { pt3dadd( -6.40299, -171.381, 13.0084, 0.29 ) }
    dend_55 { pt3dadd( -6.56538, -172.114, 13.1837, 0.29 ) }
    dend_55 { pt3dadd( -6.5566, -172.178, 13.2033, 0.29 ) }
    dend_55 { pt3dadd( -6.42786, -172.61, 13.3745, 0.52 ) }
    dend_55 { pt3dadd( -6.37682, -172.737, 13.4299, 0.52 ) }
    dend_55 { pt3dadd( -6.09989, -173.423, 13.7365, 0.37 ) }
    dend_55 { pt3dadd( -5.71826, -174.578, 14.2072, 0.29 ) }
    dend_55 { pt3dadd( -5.56832, -175.129, 14.3507, 0.74 ) }
    dend_55 { pt3dadd( -5.4429, -175.684, 14.4392, 0.81 ) }
    dend_55 { pt3dadd( -5.35808, -176.252, 14.4723, 0.52 ) }
    dend_55 { pt3dadd( -5.33351, -176.717, 14.4556, 1.03 ) }
    dend_55 { pt3dadd( -5.35433, -177.546, 14.3576, 1.25 ) }
    dend_55 { pt3dadd( -5.45561, -178.942, 14.0673, 0.29 ) }
    dend_55 { pt3dadd( -5.46574, -179.015, 14.0506, 0.29 ) }
    dend_55 { pt3dadd( -5.65001, -179.847, 13.8494, 0.29 ) }
    dend_55 { pt3dadd( -6.07281, -181.112, 13.6457, 0.29 ) }
    dend_55 { pt3dadd( -6.10408, -181.186, 13.6416, 0.29 ) }
    dend_55 { pt3dadd( -6.32479, -181.636, 13.6738, 1.11 ) }
    dend_55 { pt3dadd( -6.56097, -182.095, 13.734, 1.33 ) }
    dend_55 { pt3dadd( -6.83525, -182.652, 13.8031, 1.33 ) }
    dend_55 { pt3dadd( -7.47617, -184.014, 13.957, 0.52 ) }
    dend_55 { pt3dadd( -7.90382, -185.065, 14.0187, 0.29 ) }
    dend_55 { pt3dadd( -8.26834, -186.17, 14.0498, 0.29 ) }
    dend_55 { pt3dadd( -8.47636, -187.156, 14.0955, 1.11 ) }
    dend_55 { pt3dadd( -8.53096, -187.836, 14.1306, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_55 { pt3dadd( -8.48646, -188.564, 14.1656, 1.11 ) }
    dend_55 { pt3dadd( -8.2493, -189.742, 14.1959, 0.44 ) }
    dend_55 { pt3dadd( -7.92657, -190.621, 14.2719, 0.44 ) }
    dend_55 { pt3dadd( -7.18601, -192.013, 14.4918, 0.44 ) }
    dend_55 { pt3dadd( -6.77478, -192.609, 14.6443, 0.96 ) }
    dend_55 { pt3dadd( -6.39959, -193.087, 14.7916, 1.18 ) }
    dend_55 { pt3dadd( -6.35119, -193.148, 14.8134, 1.18 ) }
    dend_55 { pt3dadd( -5.92701, -193.731, 15.0441, 0.29 ) }
    dend_55 { pt3dadd( -5.89861, -193.795, 15.0589, 0.29 ) }
    dend_55 { pt3dadd( -5.81878, -194.464, 15.1087, 0.29 ) }
    dend_55 { pt3dadd( -5.80456, -195.09, 15.148, 0.22 ) }
    dend_55 { pt3dadd( -5.82046, -196.126, 15.2071, 0.22 ) }
    dend_55 { pt3dadd( -5.81373, -196.432, 15.2243, 0.74 ) }
    dend_55 { pt3dadd( -5.77085, -197.41, 15.3237, 0.59 ) }
    dend_55 { pt3dadd( -5.69156, -197.991, 15.4064, 1.11 ) }
    dend_55 { pt3dadd( -5.55251, -198.549, 15.5079, 1.33 ) }
    dend_55 { pt3dadd( -5.52565, -198.614, 15.5227, 1.33 ) }
    dend_55 { pt3dadd( -4.97326, -199.537, 15.8144, 0.74 ) }
    dend_55 { pt3dadd( -4.27067, -200.433, 16.1745, 0.29 ) }
    dend_55 { pt3dadd( -3.51896, -201.189, 16.5436, 0.29 ) }
    dend_55 { pt3dadd( -3.10737, -201.543, 16.7634, 0.66 ) }
    dend_55 { pt3dadd( -2.67579, -201.875, 17.0007, 0.37 ) }
    dend_55 { pt3dadd( -1.92194, -202.424, 17.413, 0.29 ) }
    dend_55 { pt3dadd( -1.2448, -202.892, 17.7919, 0.88 ) }
    dend_55 { pt3dadd( -0.793268, -203.201, 18.0417, 1.25 ) }
    dend_55 { pt3dadd( 0.101126, -203.877, 18.5571, 0.96 ) }
    dend_55 { pt3dadd( 0.759319, -204.443, 18.9398, 0.74 ) }
    dend_55 { pt3dadd( 1.28842, -204.982, 19.2408, 0.52 ) }
    dend_55 { pt3dadd( 1.90054, -205.729, 19.5646, 0.29 ) }
    dend_55 { pt3dadd( 1.94815, -205.803, 19.5922, 0.29 ) }
    dend_55 { pt3dadd( 2.28817, -206.528, 19.801, 0.29 ) }
    dend_55 { pt3dadd( 2.32967, -206.672, 19.8277, 0.29 ) }
    dend_55 { pt3dadd( 2.46202, -207.65, 19.9695, 0.66 ) }
    dend_55 { pt3dadd( 2.47007, -208.319, 20.0734, 0.96 ) }
    dend_55 { pt3dadd( 2.41462, -209.188, 20.2056, 0.52 ) }
    dend_55 { pt3dadd( 2.35752, -209.898, 20.3245, 0.52 ) }
    dend_55 { pt3dadd( 2.31441, -210.292, 20.3969, 0.52 ) }
    dend_55 { pt3dadd( 2.30944, -210.362, 20.4106, 0.52 ) }
    dend_55 { pt3dadd( 2.32248, -211.58, 20.6761, 0.22 ) }
    dend_55 { pt3dadd( 2.38368, -212.187, 20.8128, 1.18 ) }
    dend_55 { pt3dadd( 2.51155, -212.834, 21.0063, 1.47 ) }
    dend_55 { pt3dadd( 2.79933, -214.03, 21.4767, 0.22 ) }
    dend_55 { pt3dadd( 2.96383, -214.681, 21.7609, 0.22 ) }
    dend_55 { pt3dadd( 3.1283, -215.455, 22.1077, 1.03 ) }
    dend_55 { pt3dadd( 3.1864, -215.851, 22.2864, 1.03 ) }
    dend_55 { pt3dadd( 3.22556, -217.369, 22.992, 0.37 ) }
    dend_55 { pt3dadd( 3.12408, -218.356, 23.4238, 0.29 ) }
    dend_55 { pt3dadd( 2.95578, -219.048, 23.6858, 0.29 ) }
    dend_55 { pt3dadd( 2.64152, -219.854, 23.8761, 0.96 ) }
    dend_55 { pt3dadd( 2.29874, -220.59, 23.9376, 0.96 ) }
    dend_55 { pt3dadd( 1.8931, -221.47, 23.8893, 0.29 ) }
    dend_55 { pt3dadd( 1.65364, -222.096, 23.7654, 0.29 ) }
    dend_55 { pt3dadd( 1.54042, -222.59, 23.654, 0.52 ) }
    dend_55 { pt3dadd( 1.44619, -223.614, 23.452, 0.44 ) }
    dend_55 { pt3dadd( 1.48222, -224.448, 23.3188, 0.37 ) }
    dend_55 { pt3dadd( 1.58179, -225.203, 23.2217, 0.37 ) }
    dend_55 { pt3dadd( 1.75803, -226.206, 23.1259, 0.37 ) }
    dend_55 { pt3dadd( 1.93897, -227.231, 23.0311, 1.18 ) }
    dend_55 { pt3dadd( 1.99816, -227.652, 22.9866, 1.18 ) }
    dend_55 { pt3dadd( 2.03162, -228.173, 22.9041, 1.18 ) }
    dend_55 { pt3dadd( 2.03297, -228.242, 22.8904, 1.11 ) }
    dend_55 { pt3dadd( 1.99825, -228.981, 22.7078, 0.66 ) }
    dend_55 { pt3dadd( 1.85123, -230.031, 22.3814, 0.52 ) }
    dend_55 { pt3dadd( 1.60543, -231.224, 21.927, 0.37 ) }
    dend_55 { pt3dadd( 1.35764, -232.274, 21.4832, 0.88 ) }
    // Section: dend_44, id: dend_44, parent: dend_42 (entry count 65/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -103.336, -104.073, 56.1854, 0.22 ) }
    dend_44 { pt3dadd( -104.168, -104.272, 56.8737, 0.22 ) }
    dend_44 { pt3dadd( -104.62, -104.393, 57.2361, 0.22 ) }
    dend_44 { pt3dadd( -105.014, -104.494, 57.5359, 0.22 ) }
    dend_44 { pt3dadd( -105.295, -104.556, 57.7703, 0.59 ) }
    dend_44 { pt3dadd( -105.642, -104.642, 58.0719, 0.59 ) }
    dend_44 { pt3dadd( -106.385, -104.849, 58.8252, 0.29 ) }
    dend_44 { pt3dadd( -106.851, -104.997, 59.3085, 0.52 ) }
    dend_44 { pt3dadd( -107.099, -105.083, 59.5846, 0.74 ) }
    dend_44 { pt3dadd( -108.02, -105.367, 60.5969, 0.96 ) }
    dend_44 { pt3dadd( -108.438, -105.466, 61.0322, 1.03 ) }
    dend_44 { pt3dadd( -109.859, -105.698, 62.517, 0.29 ) }
    dend_44 { pt3dadd( -110.287, -105.733, 62.948, 0.29 ) }
    dend_44 { pt3dadd( -110.452, -105.732, 63.1061, 0.29 ) }
    dend_44 { pt3dadd( -111.196, -105.701, 63.8016, 0.44 ) }
    dend_44 { pt3dadd( -111.846, -105.623, 64.3441, 0.44 ) }
    dend_44 { pt3dadd( -112.733, -105.411, 65.0181, 1.47 ) }
    dend_44 { pt3dadd( -113.264, -105.203, 65.3413, 2.21 ) }
    dend_44 { pt3dadd( -113.748, -104.971, 65.6621, 2.58 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 84/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -103.336, -104.073, 56.1854, 0.29 ) }
    dend_43 { pt3dadd( -104.1, -102.318, 55.8431, 0.29 ) }
    dend_43 { pt3dadd( -104.867, -100.459, 55.5194, 0.29 ) }
    dend_43 { pt3dadd( -104.898, -100.356, 55.5031, 0.29 ) }
    dend_43 { pt3dadd( -105.003, -99.7709, 55.3915, 0.29 ) }
    dend_43 { pt3dadd( -105.056, -99.475, 55.335, 0.29 ) }
    dend_43 { pt3dadd( -105.243, -98.4384, 55.1373, 0.29 ) }
    dend_43 { pt3dadd( -105.246, -98.2812, 55.1156, 0.29 ) }
    dend_43 { pt3dadd( -105.16, -96.8015, 54.8483, 0.29 ) }
    dend_43 { pt3dadd( -105.019, -95.5226, 54.5904, 0.29 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 94/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -48.1232, -84.6394, 12.716, 0.96 ) }
    dend_41 { pt3dadd( -48.7212, -86.1672, 10.2944, 0.96 ) }
    dend_41 { pt3dadd( -48.8567, -86.5016, 9.80108, 0.96 ) }
    dend_41 { pt3dadd( -49.1878, -87.2954, 8.68525, 0.88 ) }
    dend_41 { pt3dadd( -49.4218, -87.8694, 7.91073, 1.11 ) }
    dend_41 { pt3dadd( -49.9735, -89.2714, 6.09881, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_41 { pt3dadd( -50.2433, -89.986, 5.22353, 0.22 ) }
    dend_41 { pt3dadd( -50.394, -90.3673, 4.8268, 1.4 ) }
    dend_41 { pt3dadd( -50.8861, -91.6319, 3.57358, 0.22 ) }
    dend_41 { pt3dadd( -51.0226, -91.995, 3.25274, 0.88 ) }
    dend_41 { pt3dadd( -51.1069, -92.2655, 3.03102, 0.88 ) }
    dend_41 { pt3dadd( -51.341, -93.1505, 2.41054, 0.15 ) }
    dend_41 { pt3dadd( -51.5557, -93.8666, 1.97388, 1.33 ) }
    dend_41 { pt3dadd( -51.6619, -94.1733, 1.81576, 1.55 ) }
    dend_41 { pt3dadd( -52.1282, -95.435, 1.33684, 0.15 ) }
    dend_41 { pt3dadd( -52.1435, -95.4748, 1.32411, 0.15 ) }
    dend_41 { pt3dadd( -52.3211, -95.9662, 1.20171, 0.22 ) }
    dend_41 { pt3dadd( -52.6337, -97.0043, 1.02584, 0.22 ) }
    dend_41 { pt3dadd( -52.7359, -97.48, 0.97366, 0.22 ) }
    dend_41 { pt3dadd( -52.8047, -97.9483, 0.931282, 1.18 ) }
    dend_41 { pt3dadd( -52.8368, -98.3294, 0.906869, 1.47 ) }
    dend_41 { pt3dadd( -52.8547, -98.9492, 0.849236, 1.25 ) }
    dend_41 { pt3dadd( -52.8064, -99.9739, 0.689331, 0.22 ) }
    dend_41 { pt3dadd( -52.7632, -100.659, 0.546059, 1.4 ) }
    dend_41 { pt3dadd( -52.7642, -101.232, 0.408872, 1.55 ) }
    dend_41 { pt3dadd( -52.802, -101.71, 0.286638, 1.11 ) }
    dend_41 { pt3dadd( -52.8117, -101.767, 0.272637, 1.11 ) }
    dend_41 { pt3dadd( -53.0128, -102.553, 0.108628, 0.22 ) }
    dend_41 { pt3dadd( -53.2295, -103.282, 0.00514412, 0.22 ) }
    dend_41 { pt3dadd( -53.3392, -103.663, -0.0457759, 0.22 ) }
    dend_41 { pt3dadd( -53.4743, -104.185, -0.101182, 1.18 ) }
    dend_41 { pt3dadd( -53.5959, -104.664, -0.161219, 1.4 ) }
    dend_41 { pt3dadd( -53.7275, -105.186, -0.228375, 0.22 ) }
    dend_41 { pt3dadd( -53.9079, -105.929, -0.318195, 0.22 ) }
    dend_41 { pt3dadd( -54.1123, -106.75, -0.454459, 1.33 ) }
    dend_41 { pt3dadd( -54.1836, -106.979, -0.504153, 1.47 ) }
    dend_41 { pt3dadd( -54.6009, -108.064, -0.784238, 0.22 ) }
    dend_41 { pt3dadd( -54.8026, -108.497, -0.910082, 0.37 ) }
    dend_41 { pt3dadd( -54.9297, -108.718, -0.97709, 0.37 ) }
    dend_41 { pt3dadd( -55.3658, -109.345, -1.19072, 0.22 ) }
    dend_41 { pt3dadd( -55.8034, -109.92, -1.38774, 0.96 ) }
    dend_41 { pt3dadd( -55.9617, -110.136, -1.45786, 1.11 ) }
    dend_41 { pt3dadd( -56.1375, -110.385, -1.52833, 1.33 ) }
    dend_41 { pt3dadd( -56.398, -110.759, -1.62463, 0.88 ) }
    dend_41 { pt3dadd( -57.0495, -111.712, -1.87906, 0.22 ) }
    dend_41 { pt3dadd( -57.3764, -112.198, -2.00846, 0.22 ) }
    dend_41 { pt3dadd( -57.6971, -112.677, -2.13531, 0.22 ) }
    dend_41 { pt3dadd( -58.3611, -113.651, -2.39725, 1.18 ) }
    dend_41 { pt3dadd( -58.6973, -114.139, -2.52862, 1.69 ) }
    dend_41 { pt3dadd( -59.1042, -114.737, -2.69234, 1.62 ) }
    dend_41 { pt3dadd( -59.7196, -115.669, -2.92409, 0.22 ) }
    dend_41 { pt3dadd( -59.8694, -115.914, -2.98967, 1.11 ) }
    dend_41 { pt3dadd( -60.0338, -116.209, -3.07329, 1.11 ) }
    dend_41 { pt3dadd( -60.0574, -116.261, -3.08872, 1.11 ) }
    dend_41 { pt3dadd( -60.3529, -117.07, -3.31591, 0.22 ) }
    dend_41 { pt3dadd( -60.4704, -117.435, -3.39596, 0.29 ) }
    dend_41 { pt3dadd( -60.6329, -118.034, -3.57443, 0.22 ) }
    dend_41 { pt3dadd( -60.6469, -118.072, -3.59354, 0.22 ) }
    dend_41 { pt3dadd( -60.7887, -118.389, -3.79616, 1.18 ) }
    dend_41 { pt3dadd( -60.8085, -118.428, -3.82437, 1.18 ) }
    dend_41 { pt3dadd( -60.9679, -118.715, -4.04776, 1.25 ) }
    dend_41 { pt3dadd( -61.3374, -119.398, -4.59829, 0.59 ) }
    dend_41 { pt3dadd( -61.7784, -120.241, -5.28504, 0.15 ) }
    dend_41 { pt3dadd( -61.9035, -120.504, -5.48122, 0.15 ) }
    dend_41 { pt3dadd( -62.1087, -120.982, -5.81199, 1.11 ) }
    dend_41 { pt3dadd( -62.1968, -121.198, -5.94792, 1.4 ) }
    dend_41 { pt3dadd( -62.5179, -121.997, -6.38216, 0.22 ) }
    dend_41 { pt3dadd( -62.5356, -122.04, -6.39901, 0.22 ) }
    dend_41 { pt3dadd( -62.7103, -122.493, -6.53563, 0.22 ) }
    dend_41 { pt3dadd( -62.9761, -123.189, -6.73385, 1.03 ) }
    dend_41 { pt3dadd( -63.1101, -123.561, -6.82528, 1.25 ) }
    dend_41 { pt3dadd( -63.4107, -124.444, -7.01321, 0.22 ) }
    dend_41 { pt3dadd( -63.6302, -125.141, -7.12448, 0.22 ) }
    dend_41 { pt3dadd( -63.8036, -125.732, -7.21399, 0.96 ) }
    dend_41 { pt3dadd( -63.9025, -126.097, -7.26359, 1.18 ) }
    dend_41 { pt3dadd( -64.0492, -126.622, -7.34497, 0.59 ) }
    dend_41 { pt3dadd( -64.1846, -127.173, -7.44759, 0.22 ) }
    dend_41 { pt3dadd( -64.2864, -127.62, -7.54059, 0.22 ) }
    dend_41 { pt3dadd( -64.4131, -128.152, -7.67537, 1.18 ) }
    dend_41 { pt3dadd( -64.4702, -128.368, -7.73238, 1.4 ) }
    dend_41 { pt3dadd( -64.8146, -129.532, -8.0511, 0.29 ) }
    dend_41 { pt3dadd( -64.9998, -130.136, -8.22138, 0.29 ) }
    dend_41 { pt3dadd( -65.0171, -130.195, -8.23807, 0.29 ) }
    dend_41 { pt3dadd( -65.2778, -131.088, -8.48065, 0.15 ) }
    dend_41 { pt3dadd( -65.4801, -131.754, -8.63015, 0.59 ) }
    dend_41 { pt3dadd( -65.5959, -132.121, -8.69836, 0.74 ) }
    dend_41 { pt3dadd( -65.6111, -132.168, -8.70478, 0.74 ) }
    dend_41 { pt3dadd( -65.9371, -132.937, -8.80748, 1.18 ) }
    dend_41 { pt3dadd( -66.0843, -133.228, -8.84362, 1.62 ) }
    dend_41 { pt3dadd( -66.4298, -133.808, -8.90979, 1.77 ) }
    dend_41 { pt3dadd( -66.8626, -134.47, -8.99078, 0.22 ) }
    dend_41 { pt3dadd( -67.2219, -135.014, -9.06545, 0.22 ) }
    dend_41 { pt3dadd( -67.6042, -135.624, -9.17149, 0.22 ) }
    dend_41 { pt3dadd( -67.8808, -136.102, -9.26951, 0.22 ) }
    dend_41 { pt3dadd( -67.9005, -136.141, -9.27864, 0.22 ) }
    dend_41 { pt3dadd( -68.1031, -136.596, -9.38957, 1.47 ) }
    dend_41 { pt3dadd( -68.3614, -137.23, -9.54249, 1.55 ) }
    dend_41 { pt3dadd( -68.7218, -138.243, -9.78462, 0.22 ) }
    dend_41 { pt3dadd( -68.8612, -138.692, -9.88893, 0.22 ) }
    dend_41 { pt3dadd( -68.9946, -139.131, -9.97446, 0.96 ) }
    dend_41 { pt3dadd( -69.1467, -139.615, -10.0505, 0.96 ) }
    dend_41 { pt3dadd( -69.424, -140.45, -10.1489, 0.15 ) }
    dend_41 { pt3dadd( -69.4423, -140.5, -10.1521, 0.15 ) }
    dend_41 { pt3dadd( -69.6918, -141.197, -10.1346, 0.15 ) }
    dend_41 { pt3dadd( -69.8817, -141.747, -10.1007, 1.25 ) }
    dend_41 { pt3dadd( -69.9549, -141.979, -10.0799, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_41 { pt3dadd( -69.9687, -142.036, -10.0746, 1.4 ) }
    dend_41 { pt3dadd( -70.0312, -142.374, -10.0379, 1.4 ) }
    dend_41 { pt3dadd( -70.1571, -143.263, -9.97807, 0.22 ) }
    dend_41 { pt3dadd( -70.1615, -143.313, -9.97648, 0.22 ) }
    dend_41 { pt3dadd( -70.2069, -143.767, -10.0052, 0.22 ) }
    dend_41 { pt3dadd( -70.3004, -144.613, -10.125, 0.22 ) }
    dend_41 { pt3dadd( -70.3064, -144.665, -10.1348, 0.22 ) }
    dend_41 { pt3dadd( -70.3804, -145.232, -10.2627, 1.11 ) }
    dend_41 { pt3dadd( -70.4304, -145.57, -10.3602, 1.11 ) }
    dend_41 { pt3dadd( -70.6031, -146.7, -10.7279, 0.22 ) }
    dend_41 { pt3dadd( -70.697, -147.35, -10.9707, 1.18 ) }
    dend_41 { pt3dadd( -70.7024, -147.391, -10.9867, 1.18 ) }
    dend_41 { pt3dadd( -70.7536, -147.922, -11.2042, 1.47 ) }
    dend_41 { pt3dadd( -70.7888, -148.631, -11.4988, 1.25 ) }
    dend_41 { pt3dadd( -70.7941, -149.743, -11.9675, 0.15 ) }
    dend_41 { pt3dadd( -70.7531, -150.427, -12.2488, 1.4 ) }
    dend_41 { pt3dadd( -70.7063, -150.783, -12.3988, 1.4 ) }
    dend_41 { pt3dadd( -70.4829, -151.901, -12.9037, 0.22 ) }
    dend_41 { pt3dadd( -70.3539, -152.347, -13.1144, 0.52 ) }
    dend_41 { pt3dadd( -70.3388, -152.39, -13.1334, 0.52 ) }
    dend_41 { pt3dadd( -70.24, -152.638, -13.231, 0.52 ) }
    dend_41 { pt3dadd( -69.9378, -153.43, -13.4995, 0.22 ) }
    dend_41 { pt3dadd( -69.8031, -153.813, -13.6172, 0.96 ) }
    dend_41 { pt3dadd( -69.7052, -154.119, -13.6951, 1.11 ) }
    dend_41 { pt3dadd( -69.506, -154.88, -13.8667, 0.22 ) }
    dend_41 { pt3dadd( -69.4041, -155.318, -13.9231, 0.29 ) }
    dend_41 { pt3dadd( -69.3548, -155.646, -13.9297, 0.29 ) }
    dend_41 { pt3dadd( -69.2966, -156.348, -13.8712, 0.81 ) }
    dend_41 { pt3dadd( -69.293, -156.4, -13.863, 0.81 ) }
    dend_41 { pt3dadd( -69.27, -156.789, -13.7876, 1.11 ) }
    dend_41 { pt3dadd( -69.2095, -157.654, -13.6014, 0.22 ) }
    dend_41 { pt3dadd( -69.1612, -158.413, -13.4363, 0.22 ) }
    dend_41 { pt3dadd( -69.1481, -158.567, -13.4021, 0.66 ) }
    dend_41 { pt3dadd( -69.0458, -159.503, -13.1999, 0.22 ) }
    dend_41 { pt3dadd( -69.0367, -159.561, -13.1905, 0.22 ) }
    dend_41 { pt3dadd( -68.8939, -160.278, -13.1169, 1.11 ) }
    dend_41 { pt3dadd( -68.7767, -160.727, -13.1245, 1.4 ) }
    dend_41 { pt3dadd( -68.628, -161.184, -13.1641, 0.88 ) }
    dend_41 { pt3dadd( -68.4281, -161.769, -13.2454, 0.22 ) }
    dend_41 { pt3dadd( -68.2611, -162.274, -13.3507, 0.22 ) }
    dend_41 { pt3dadd( -68.2332, -162.355, -13.3732, 0.22 ) }
    dend_41 { pt3dadd( -67.9499, -163.069, -13.6173, 1.18 ) }
    dend_41 { pt3dadd( -67.8294, -163.337, -13.7214, 1.18 ) }
    dend_41 { pt3dadd( -67.638, -163.718, -13.8788, 0.81 ) }
    dend_41 { pt3dadd( -67.2573, -164.31, -14.2289, 0.52 ) }
    dend_41 { pt3dadd( -66.7454, -164.991, -14.7088, 0.22 ) }
    dend_41 { pt3dadd( -66.4511, -165.355, -15.0106, 0.22 ) }
    dend_41 { pt3dadd( -66.2023, -165.633, -15.2705, 1.11 ) }
    dend_41 { pt3dadd( -66.013, -165.833, -15.4929, 1.11 ) }
    dend_41 { pt3dadd( -65.1229, -166.718, -16.6327, 0.22 ) }
    dend_41 { pt3dadd( -65.0077, -166.827, -16.7843, 0.22 ) }
    dend_41 { pt3dadd( -64.3614, -167.457, -17.6623, 1.47 ) }
    dend_41 { pt3dadd( -64.1582, -167.667, -17.9488, 1.77 ) }
    dend_41 { pt3dadd( -63.491, -168.376, -18.8514, 1.4 ) }
    dend_41 { pt3dadd( -62.9635, -168.958, -19.5071, 0.22 ) }
    dend_41 { pt3dadd( -62.7643, -169.185, -19.7217, 0.66 ) }
    dend_41 { pt3dadd( -62.6132, -169.379, -19.8919, 0.81 ) }
    dend_41 { pt3dadd( -61.9681, -170.285, -20.624, 0.22 ) }
    dend_41 { pt3dadd( -61.6853, -170.769, -20.9798, 0.22 ) }
    dend_41 { pt3dadd( -61.4027, -171.378, -21.3646, 1.11 ) }
    dend_41 { pt3dadd( -61.3389, -171.576, -21.4808, 1.11 ) }
    dend_41 { pt3dadd( -61.0492, -172.96, -22.2465, 0.22 ) }
    dend_41 { pt3dadd( -61.0436, -173.012, -22.2739, 0.22 ) }
    dend_41 { pt3dadd( -61.0446, -173.422, -22.4677, 0.22 ) }
    dend_41 { pt3dadd( -61.0523, -173.543, -22.5234, 0.22 ) }
    dend_41 { pt3dadd( -61.1345, -174.177, -22.8158, 0.96 ) }
    dend_41 { pt3dadd( -61.2109, -174.721, -23.0652, 1.33 ) }
    dend_41 { pt3dadd( -61.3208, -175.493, -23.3792, 1.84 ) }
    dend_41 { pt3dadd( -61.3308, -175.582, -23.4147, 1.84 ) }
    dend_41 { pt3dadd( -61.3584, -175.994, -23.5858, 1.84 ) }
    dend_41 { pt3dadd( -61.4327, -177.433, -24.148, 0.22 ) }
    dend_41 { pt3dadd( -61.4346, -177.474, -24.164, 0.22 ) }
    dend_41 { pt3dadd( -61.4616, -178.019, -24.3641, 0.66 ) }
    dend_41 { pt3dadd( -61.4786, -178.382, -24.4817, 0.66 ) }
    dend_41 { pt3dadd( -61.5146, -179.245, -24.735, 0.15 ) }
    dend_41 { pt3dadd( -61.5147, -180.045, -24.9122, 0.15 ) }
    dend_41 { pt3dadd( -61.5098, -180.104, -24.9176, 0.15 ) }
    dend_41 { pt3dadd( -61.4513, -180.594, -24.9433, 0.74 ) }
    dend_41 { pt3dadd( -61.4432, -180.647, -24.9443, 0.74 ) }
    dend_41 { pt3dadd( -61.3903, -180.917, -24.9382, 0.74 ) }
    dend_41 { pt3dadd( -61.1771, -181.738, -24.872, 0.15 ) }
    dend_41 { pt3dadd( -61.0332, -182.144, -24.8435, 0.74 ) }
    dend_41 { pt3dadd( -60.8772, -182.488, -24.8222, 0.74 ) }
    dend_41 { pt3dadd( -60.5262, -183.081, -24.7912, 0.22 ) }
    dend_41 { pt3dadd( -60.2818, -183.439, -24.7772, 1.03 ) }
    dend_41 { pt3dadd( -60.2455, -183.487, -24.7794, 1.03 ) }
    dend_41 { pt3dadd( -59.9554, -183.842, -24.8289, 1.33 ) }
    dend_41 { pt3dadd( -59.6545, -184.192, -24.9067, 1.33 ) }
    dend_41 { pt3dadd( -59.0991, -184.79, -25.083, 0.15 ) }
    dend_41 { pt3dadd( -58.9092, -184.978, -25.1511, 0.44 ) }
    dend_41 { pt3dadd( -58.3576, -185.543, -25.3647, 0.22 ) }
    dend_41 { pt3dadd( -58.325, -185.579, -25.377, 0.22 ) }
    dend_41 { pt3dadd( -57.9941, -185.982, -25.4972, 0.88 ) }
    dend_41 { pt3dadd( -57.8801, -186.134, -25.5328, 0.88 ) }
    dend_41 { pt3dadd( -57.8413, -186.19, -25.5384, 0.88 ) }
    dend_41 { pt3dadd( -57.3897, -186.944, -25.5271, 0.22 ) }
    dend_41 { pt3dadd( -57.0939, -187.518, -25.4736, 0.22 ) }
    dend_41 { pt3dadd( -56.9324, -187.868, -25.4349, 0.96 ) }
    dend_41 { pt3dadd( -56.7322, -188.306, -25.3771, 0.96 ) }
    dend_41 { pt3dadd( -56.3556, -189.145, -25.2666, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_41 { pt3dadd( -56.1089, -189.698, -25.1807, 0.22 ) }
    dend_41 { pt3dadd( -55.8091, -190.381, -25.0572, 0.88 ) }
    dend_41 { pt3dadd( -55.6159, -190.809, -24.9689, 0.88 ) }
    dend_41 { pt3dadd( -55.2649, -191.572, -24.7991, 0.22 ) }
    dend_41 { pt3dadd( -55.2407, -191.625, -24.7859, 0.22 ) }
    dend_41 { pt3dadd( -55.0251, -192.14, -24.6486, 0.22 ) }
    dend_41 { pt3dadd( -55.0073, -192.187, -24.6356, 0.22 ) }
    dend_41 { pt3dadd( -54.8818, -192.602, -24.5243, 1.03 ) }
    dend_41 { pt3dadd( -54.8085, -192.906, -24.4702, 1.03 ) }
    dend_41 { pt3dadd( -54.6547, -193.647, -24.3829, 0.29 ) }
    dend_41 { pt3dadd( -54.5257, -194.247, -24.3461, 0.29 ) }
    dend_41 { pt3dadd( -54.3853, -194.898, -24.3458, 0.22 ) }
    dend_41 { pt3dadd( -54.2045, -195.753, -24.3679, 0.22 ) }
    dend_41 { pt3dadd( -54.0313, -196.631, -24.4229, 1.03 ) }
    dend_41 { pt3dadd( -53.9932, -196.838, -24.4403, 1.03 ) }
    dend_41 { pt3dadd( -53.821, -197.863, -24.5463, 0.22 ) }
    dend_41 { pt3dadd( -53.727, -198.463, -24.6078, 0.81 ) }
    dend_41 { pt3dadd( -53.6881, -198.81, -24.6384, 1.03 ) }
    dend_41 { pt3dadd( -53.6568, -199.408, -24.6824, 0.22 ) }
    dend_41 { pt3dadd( -53.6499, -199.91, -24.7012, 0.52 ) }
    dend_41 { pt3dadd( -53.6599, -200.366, -24.7183, 0.22 ) }
    dend_41 { pt3dadd( -53.6806, -200.761, -24.7285, 0.74 ) }
    dend_41 { pt3dadd( -53.6977, -201.028, -24.7306, 0.74 ) }
    dend_41 { pt3dadd( -53.7455, -201.868, -24.7369, 0.22 ) }
    dend_41 { pt3dadd( -53.7686, -202.325, -24.7342, 0.22 ) }
    dend_41 { pt3dadd( -53.7867, -202.634, -24.7438, 0.66 ) }
    dend_41 { pt3dadd( -53.7513, -209.833, -26.4051, 0.66 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 27/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -48.1232, -84.6394, 12.716, 0.37 ) }
    dend_40 { pt3dadd( -47.7616, -85.1482, 12.7461, 0.37 ) }
    dend_40 { pt3dadd( -47.2046, -86.0849, 12.7933, 0.37 ) }
    dend_40 { pt3dadd( -47.176, -86.1446, 12.7966, 0.37 ) }
    dend_40 { pt3dadd( -46.8405, -87.1211, 12.8627, 0.37 ) }
    dend_40 { pt3dadd( -46.8243, -87.1943, 12.8674, 0.37 ) }
    dend_40 { pt3dadd( -46.7206, -87.9873, 12.92, 0.37 ) }
    dend_40 { pt3dadd( -46.6778, -88.8566, 12.9389, 1.03 ) }
    dend_40 { pt3dadd( -46.6949, -89.579, 12.9145, 1.18 ) }
    dend_40 { pt3dadd( -46.7311, -90.4211, 12.8341, 0.81 ) }
    dend_40 { pt3dadd( -46.7927, -91.2883, 12.7167, 0.29 ) }
    dend_40 { pt3dadd( -46.837, -92.0995, 12.5727, 0.74 ) }
    dend_40 { pt3dadd( -46.8919, -93.2634, 12.3263, 1.18 ) }
    dend_40 { pt3dadd( -46.9217, -94.3236, 12.083, 0.88 ) }
    dend_40 { pt3dadd( -46.9393, -95.586, 11.8194, 0.59 ) }
    dend_40 { pt3dadd( -46.9391, -95.6849, 11.8009, 0.59 ) }
    dend_40 { pt3dadd( -46.9663, -96.8358, 11.625, 0.66 ) }
    dend_40 { pt3dadd( -47.0756, -97.7611, 11.5384, 0.44 ) }
    dend_40 { pt3dadd( -47.3166, -98.7215, 11.5512, 0.37 ) }
    dend_40 { pt3dadd( -47.6131, -99.4954, 11.638, 0.29 ) }
    dend_40 { pt3dadd( -47.6801, -99.6271, 11.65, 0.29 ) }
    dend_40 { pt3dadd( -48.0413, -100.296, 11.696, 0.29 ) }
    dend_40 { pt3dadd( -48.6322, -101.35, 11.781, 1.55 ) }
    dend_40 { pt3dadd( -48.8547, -101.778, 11.8352, 1.84 ) }
    dend_40 { pt3dadd( -48.9837, -102.069, 11.8793, 1.84 ) }
    dend_40 { pt3dadd( -49.5711, -103.653, 12.1411, 0.37 ) }
    dend_40 { pt3dadd( -49.8572, -104.516, 12.2795, 0.37 ) }
    dend_40 { pt3dadd( -50.1217, -105.394, 12.3838, 0.74 ) }
    dend_40 { pt3dadd( -50.4813, -106.462, 12.4752, 0.74 ) }
    dend_40 { pt3dadd( -50.8421, -107.361, 12.5315, 0.29 ) }
    dend_40 { pt3dadd( -51.2678, -108.25, 12.5585, 0.29 ) }
    dend_40 { pt3dadd( -51.7931, -109.191, 12.565, 1.33 ) }
    dend_40 { pt3dadd( -52.4357, -110.218, 12.5302, 1.69 ) }
    dend_40 { pt3dadd( -53.1929, -111.381, 12.4627, 0.66 ) }
    dend_40 { pt3dadd( -53.6365, -112.056, 12.4119, 0.88 ) }
    dend_40 { pt3dadd( -54.2495, -113.007, 12.3737, 0.29 ) }
    dend_40 { pt3dadd( -54.6986, -113.731, 12.3649, 0.96 ) }
    dend_40 { pt3dadd( -55.2742, -114.675, 12.3875, 1.55 ) }
    dend_40 { pt3dadd( -55.671, -115.314, 12.4142, 0.74 ) }
    dend_40 { pt3dadd( -56.0695, -115.942, 12.4251, 0.29 ) }
    dend_40 { pt3dadd( -56.4836, -116.544, 12.4179, 0.44 ) }
    dend_40 { pt3dadd( -56.945, -117.155, 12.4001, 0.66 ) }
    dend_40 { pt3dadd( -57.5873, -117.903, 12.3498, 0.29 ) }
    dend_40 { pt3dadd( -57.9567, -118.301, 12.2917, 0.22 ) }
    dend_40 { pt3dadd( -58.3609, -118.723, 12.2167, 0.22 ) }
    dend_40 { pt3dadd( -58.9145, -119.308, 12.1101, 1.03 ) }
    dend_40 { pt3dadd( -59.416, -119.839, 12.0221, 1.4 ) }
    dend_40 { pt3dadd( -59.9779, -120.461, 11.9471, 1.55 ) }
    dend_40 { pt3dadd( -60.6951, -121.265, 11.8683, 1.11 ) }
    dend_40 { pt3dadd( -61.4396, -122.077, 11.7949, 0.22 ) }
    dend_40 { pt3dadd( -61.487, -122.124, 11.7908, 0.22 ) }
    dend_40 { pt3dadd( -62.1058, -122.65, 11.7479, 0.22 ) }
    dend_40 { pt3dadd( -62.3438, -122.842, 11.7334, 0.74 ) }
    dend_40 { pt3dadd( -62.9337, -123.309, 11.6945, 0.88 ) }
    dend_40 { pt3dadd( -63.3358, -123.659, 11.6611, 0.88 ) }
    dend_40 { pt3dadd( -63.7871, -124.131, 11.6072, 0.52 ) }
    dend_40 { pt3dadd( -64.3626, -124.861, 11.5652, 0.22 ) }
    dend_40 { pt3dadd( -64.9123, -125.679, 11.5482, 1.77 ) }
    dend_40 { pt3dadd( -65.402, -126.495, 11.5597, 1.77 ) }
    dend_40 { pt3dadd( -66.0248, -127.652, 11.6129, 0.37 ) }
    dend_40 { pt3dadd( -66.4933, -128.579, 11.6885, 0.29 ) }
    dend_40 { pt3dadd( -67.0498, -129.725, 11.8352, 0.22 ) }
    dend_40 { pt3dadd( -67.3122, -130.257, 11.938, 1.11 ) }
    dend_40 { pt3dadd( -67.6233, -130.818, 12.0705, 1.4 ) }
    dend_40 { pt3dadd( -67.86, -131.196, 12.1699, 1.47 ) }
    dend_40 { pt3dadd( -68.144, -131.586, 12.2702, 1.62 ) }
    dend_40 { pt3dadd( -68.6476, -132.199, 12.3697, 1.62 ) }
    dend_40 { pt3dadd( -69.3331, -132.991, 12.4121, 1.25 ) }
    dend_40 { pt3dadd( -69.9817, -133.739, 12.4302, 0.29 ) }
    dend_40 { pt3dadd( -70.4698, -134.294, 12.43, 0.22 ) }
    dend_40 { pt3dadd( -70.8138, -134.684, 12.4115, 0.22 ) }
    dend_40 { pt3dadd( -71.2524, -135.193, 12.3752, 0.66 ) }
    dend_40 { pt3dadd( -71.6932, -135.682, 12.3371, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_40 { pt3dadd( -72.0099, -136.049, 12.3128, 0.96 ) }
    dend_40 { pt3dadd( -72.0524, -136.107, 12.3095, 0.96 ) }
    dend_40 { pt3dadd( -72.5651, -136.907, 12.2433, 0.52 ) }
    dend_40 { pt3dadd( -72.9782, -137.636, 12.1847, 0.29 ) }
    dend_40 { pt3dadd( -73.4433, -138.569, 12.1684, 0.22 ) }
    dend_40 { pt3dadd( -73.6707, -139.058, 12.165, 0.22 ) }
    dend_40 { pt3dadd( -74.2006, -140.218, 12.167, 0.96 ) }
    dend_40 { pt3dadd( -74.5163, -140.915, 12.1774, 1.55 ) }
    dend_40 { pt3dadd( -74.827, -141.55, 12.2035, 1.25 ) }
    dend_40 { pt3dadd( -75.3558, -142.603, 12.2752, 0.22 ) }
    dend_40 { pt3dadd( -75.7372, -143.418, 12.3651, 0.59 ) }
    dend_40 { pt3dadd( -75.8742, -143.7, 12.4129, 0.88 ) }
    dend_40 { pt3dadd( -75.9436, -143.84, 12.4461, 0.88 ) }
    dend_40 { pt3dadd( -76.322, -144.751, 12.7209, 0.22 ) }
    dend_40 { pt3dadd( -76.5929, -145.546, 12.9696, 0.22 ) }
    dend_40 { pt3dadd( -76.7706, -146.214, 13.1724, 0.22 ) }
    dend_40 { pt3dadd( -76.8607, -146.622, 13.3199, 0.66 ) }
    dend_40 { pt3dadd( -76.9679, -147.116, 13.5332, 0.74 ) }
    dend_40 { pt3dadd( -77.1855, -148.016, 13.9619, 0.22 ) }
    dend_40 { pt3dadd( -77.4108, -148.842, 14.384, 1.25 ) }
    dend_40 { pt3dadd( -77.6229, -149.367, 14.667, 1.77 ) }
    dend_40 { pt3dadd( -77.9165, -149.926, 14.9636, 1.77 ) }
    dend_40 { pt3dadd( -78.6323, -151.109, 15.5592, 0.29 ) }
    dend_40 { pt3dadd( -78.8537, -151.454, 15.7197, 0.59 ) }
    dend_40 { pt3dadd( -79.0167, -151.685, 15.8117, 0.59 ) }
    dend_40 { pt3dadd( -79.5011, -152.389, 16.0891, 0.22 ) }
    dend_40 { pt3dadd( -79.9738, -153.103, 16.3463, 0.59 ) }
    dend_40 { pt3dadd( -80.1896, -153.49, 16.494, 0.81 ) }
    dend_40 { pt3dadd( -80.4965, -154.212, 16.786, 0.22 ) }
    dend_40 { pt3dadd( -80.5162, -154.274, 16.815, 0.22 ) }
    dend_40 { pt3dadd( -80.7061, -155.106, 17.25, 1.33 ) }
    dend_40 { pt3dadd( -80.7862, -155.549, 17.5043, 1.62 ) }
    dend_40 { pt3dadd( -81.0295, -156.82, 18.2684, 0.22 ) }
    dend_40 { pt3dadd( -81.1638, -157.377, 18.5825, 0.22 ) }
    dend_40 { pt3dadd( -81.183, -157.447, 18.6155, 0.22 ) }
    dend_40 { pt3dadd( -81.2712, -157.781, 18.7393, 0.88 ) }
    dend_40 { pt3dadd( -81.4795, -158.623, 18.9498, 1.03 ) }
    dend_40 { pt3dadd( -81.6387, -159.344, 19.073, 1.03 ) }
    dend_40 { pt3dadd( -81.7522, -159.908, 19.1239, 0.81 ) }
    dend_40 { pt3dadd( -81.8971, -160.792, 19.2018, 0.22 ) }
    dend_40 { pt3dadd( -81.9787, -161.442, 19.2448, 0.22 ) }
    dend_40 { pt3dadd( -82.0481, -162.057, 19.2778, 1.03 ) }
    dend_40 { pt3dadd( -82.1339, -162.887, 19.3323, 1.25 ) }
    dend_40 { pt3dadd( -82.2442, -163.714, 19.3994, 1.11 ) }
    dend_40 { pt3dadd( -82.4264, -164.555, 19.5243, 0.74 ) }
    dend_40 { pt3dadd( -82.6455, -165.273, 19.6819, 0.37 ) }
    dend_40 { pt3dadd( -82.9952, -166.175, 19.9306, 0.22 ) }
    dend_40 { pt3dadd( -83.2638, -166.766, 20.1278, 0.88 ) }
    dend_40 { pt3dadd( -83.4476, -167.138, 20.2726, 0.88 ) }
    dend_40 { pt3dadd( -83.9084, -168.184, 20.759, 0.15 ) }
    dend_40 { pt3dadd( -84.1006, -168.685, 21.0224, 0.15 ) }
    dend_40 { pt3dadd( -84.121, -168.744, 21.0554, 0.15 ) }
    dend_40 { pt3dadd( -84.2195, -169.057, 21.2233, 0.96 ) }
    dend_40 { pt3dadd( -84.3696, -169.523, 21.4996, 1.11 ) }
    dend_40 { pt3dadd( -84.6994, -170.642, 22.1788, 0.22 ) }
    dend_40 { pt3dadd( -84.912, -171.512, 22.6948, 1.25 ) }
    dend_40 { pt3dadd( -85.0468, -172.059, 23.0497, 1.47 ) }
    dend_40 { pt3dadd( -85.3724, -173.259, 23.8611, 0.44 ) }
    dend_40 { pt3dadd( -85.6766, -174.164, 24.4924, 0.44 ) }
    dend_40 { pt3dadd( -85.9391, -174.794, 24.952, 0.22 ) }
    dend_40 { pt3dadd( -86.1908, -175.32, 25.3478, 0.22 ) }
    dend_40 { pt3dadd( -86.4671, -175.918, 25.7984, 0.44 ) }
    dend_40 { pt3dadd( -86.7346, -176.58, 26.2901, 0.44 ) }
    dend_40 { pt3dadd( -86.9964, -177.293, 26.7742, 0.44 ) }
    dend_40 { pt3dadd( -87.2502, -178.036, 27.2195, 1.25 ) }
    dend_40 { pt3dadd( -87.2673, -178.094, 27.2535, 1.25 ) }
    dend_40 { pt3dadd( -87.3372, -178.441, 27.4336, 1.25 ) }
    dend_40 { pt3dadd( -87.4093, -179.751, 27.9985, 0.22 ) }
    dend_40 { pt3dadd( -87.3726, -180.192, 28.1662, 0.96 ) }
    dend_40 { pt3dadd( -87.2936, -180.647, 28.3109, 0.96 ) }
    dend_40 { pt3dadd( -87.1239, -181.597, 28.5551, 0.22 ) }
    dend_40 { pt3dadd( -86.9615, -182.512, 28.7682, 1.11 ) }
    dend_40 { pt3dadd( -86.8591, -183.069, 28.8837, 1.4 ) }
    dend_40 { pt3dadd( -86.7386, -183.701, 28.9959, 1.4 ) }
    dend_40 { pt3dadd( -86.57, -184.48, 29.1435, 0.29 ) }
    dend_40 { pt3dadd( -86.3584, -185.327, 29.3664, 0.22 ) }
    dend_40 { pt3dadd( -86.1601, -186.089, 29.621, 0.22 ) }
    dend_40 { pt3dadd( -86.1431, -186.157, 29.6489, 0.22 ) }
    dend_40 { pt3dadd( -86.0752, -186.532, 29.8554, 0.88 ) }
    dend_40 { pt3dadd( -86.0207, -186.963, 30.1425, 0.88 ) }
    dend_40 { pt3dadd( -85.9023, -188.087, 30.9567, 0.22 ) }
    dend_40 { pt3dadd( -85.8627, -188.501, 31.2549, 0.59 ) }
    dend_40 { pt3dadd( -85.8697, -188.735, 31.4143, 0.74 ) }
    dend_40 { pt3dadd( -85.9823, -189.697, 32.0191, 0.22 ) }
    dend_40 { pt3dadd( -86.0656, -190.136, 32.2632, 0.22 ) }
    dend_40 { pt3dadd( -86.2137, -190.741, 32.5544, 1.03 ) }
    dend_40 { pt3dadd( -86.3157, -191.171, 32.7309, 1.18 ) }
    dend_40 { pt3dadd( -86.5391, -192.306, 33.1719, 0.22 ) }
    dend_40 { pt3dadd( -86.6022, -192.679, 33.3316, 0.22 ) }
    dend_40 { pt3dadd( -86.6792, -193.106, 33.5357, 0.88 ) }
    dend_40 { pt3dadd( -86.7677, -193.571, 33.8582, 1.11 ) }
    dend_40 { pt3dadd( -86.9135, -194.359, 34.53, 0.37 ) }
    dend_40 { pt3dadd( -87.0049, -194.919, 35.0633, 0.22 ) }
    dend_40 { pt3dadd( -87.1568, -195.986, 36.1355, 0.88 ) }
    dend_40 { pt3dadd( -87.2092, -196.504, 36.7208, 1.18 ) }
    dend_40 { pt3dadd( -87.3233, -197.853, 38.3919, 0.22 ) }
    dend_40 { pt3dadd( -87.326, -197.9, 38.4538, 0.22 ) }
    dend_40 { pt3dadd( -87.3309, -198.184, 38.8455, 0.59 ) }
    dend_40 { pt3dadd( -87.3127, -198.627, 39.5463, 1.11 ) }
    dend_40 { pt3dadd( -87.1704, -199.945, 41.6531, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_40 { pt3dadd( -87.1648, -199.978, 41.7064, 0.22 ) }
    dend_40 { pt3dadd( -87.1435, -200.102, 41.9039, 0.59 ) }
    dend_40 { pt3dadd( -87.1163, -200.242, 42.1466, 0.59 ) }
    dend_40 { pt3dadd( -86.852, -201.191, 44.1668, 0.29 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 7.23119, 59.0571, -12.2026, 0.37 ) }
    dend_25 { pt3dadd( 7.49333, 60.5052, -11.9555, 0.37 ) }
    dend_25 { pt3dadd( 7.9241, 61.978, -11.6855, 0.66 ) }
    dend_25 { pt3dadd( 8.14714, 62.5467, -11.5655, 0.81 ) }
    dend_25 { pt3dadd( 8.20121, 62.6851, -11.5418, 0.81 ) }
    dend_25 { pt3dadd( 8.70026, 63.9743, -11.3513, 0.22 ) }
    dend_25 { pt3dadd( 9.20149, 65.263, -11.1733, 0.96 ) }
    dend_25 { pt3dadd( 9.53454, 65.9917, -11.0825, 0.96 ) }
    dend_25 { pt3dadd( 10.1682, 67.3298, -10.9449, 0.22 ) }
    dend_25 { pt3dadd( 10.5573, 68.2909, -10.8677, 0.22 ) }
    dend_25 { pt3dadd( 10.5829, 68.3784, -10.8641, 0.22 ) }
    dend_25 { pt3dadd( 10.8341, 69.8606, -10.926, 0.52 ) }
    dend_25 { pt3dadd( 10.8858, 70.4066, -10.9772, 0.52 ) }
    dend_25 { pt3dadd( 10.9197, 71.1041, -11.0782, 0.52 ) }
    dend_25 { pt3dadd( 10.9813, 72.2162, -11.32, 0.66 ) }
    dend_25 { pt3dadd( 11.0478, 72.9995, -11.4975, 0.66 ) }
    dend_25 { pt3dadd( 11.1666, 74.2138, -11.7969, 0.96 ) }
    dend_25 { pt3dadd( 11.2586, 75.0909, -12.0334, 0.66 ) }
    dend_25 { pt3dadd( 11.4194, 76.3485, -12.3602, 0.66 ) }
    dend_25 { pt3dadd( 11.6395, 77.6895, -12.6718, 0.29 ) }
    dend_25 { pt3dadd( 11.9066, 79.097, -12.9387, 1.03 ) }
    dend_25 { pt3dadd( 12.0025, 79.5647, -12.9791, 1.03 ) }
    dend_25 { pt3dadd( 12.1237, 80.1833, -12.9676, 1.03 ) }
    dend_25 { pt3dadd( 12.2342, 80.8345, -12.8779, 0.37 ) }
    dend_25 { pt3dadd( 12.3566, 81.5686, -12.6988, 0.37 ) }
    dend_25 { pt3dadd( 12.5196, 82.5807, -12.3705, 0.37 ) }
    dend_25 { pt3dadd( 12.8307, 84.3547, -11.6429, 0.22 ) }
    dend_25 { pt3dadd( 13.0635, 85.5, -11.1203, 1.33 ) }
    dend_25 { pt3dadd( 13.3326, 86.7915, -10.5281, 1.55 ) }
    dend_25 { pt3dadd( 13.5263, 87.7541, -10.0953, 1.55 ) }
    dend_25 { pt3dadd( 13.6895, 88.7777, -9.67876, 1.47 ) }
    dend_25 { pt3dadd( 13.962, 90.6644, -9.05314, 0.81 ) }
    dend_25 { pt3dadd( 14.2268, 92.5191, -8.57241, 0.22 ) }
    dend_25 { pt3dadd( 14.5192, 94.5163, -8.17605, 0.37 ) }
    dend_25 { pt3dadd( 14.6295, 95.2008, -8.08211, 0.37 ) }
    dend_25 { pt3dadd( 14.9046, 96.9462, -7.86309, 1.11 ) }
    dend_25 { pt3dadd( 15.2257, 98.866, -7.65195, 0.22 ) }
    dend_25 { pt3dadd( 15.4119, 99.8264, -7.54325, 0.59 ) }
    dend_25 { pt3dadd( 15.5998, 100.561, -7.39619, 0.59 ) }
    dend_25 { pt3dadd( 15.8013, 101.106, -7.20739, 0.59 ) }
    dend_25 { pt3dadd( 16.3679, 102.382, -6.62183, 0.29 ) }
    dend_25 { pt3dadd( 16.6505, 102.947, -6.27184, 0.96 ) }
    dend_25 { pt3dadd( 17.1621, 103.942, -5.5413, 1.25 ) }
    dend_25 { pt3dadd( 17.4718, 104.53, -5.10972, 0.52 ) }
    dend_25 { pt3dadd( 17.9623, 105.464, -4.45631, 0.22 ) }
    dend_25 { pt3dadd( 18.3212, 106.196, -3.99552, 0.59 ) }
    dend_25 { pt3dadd( 18.7729, 107.113, -3.50441, 0.37 ) }
    dend_25 { pt3dadd( 19.4732, 108.579, -2.82991, 0.29 ) }
    dend_25 { pt3dadd( 19.9644, 109.634, -2.42357, 0.66 ) }
    dend_25 { pt3dadd( 20.4821, 110.678, -2.13719, 0.74 ) }
    dend_25 { pt3dadd( 20.8711, 111.391, -2.01762, 1.47 ) }
    dend_25 { pt3dadd( 21.4177, 112.32, -1.95111, 1.33 ) }
    dend_25 { pt3dadd( 21.982, 113.231, -1.98937, 1.18 ) }
    dend_25 { pt3dadd( 22.0329, 113.307, -1.9976, 1.18 ) }
    dend_25 { pt3dadd( 23.3422, 114.939, -2.17991, 0.29 ) }
    dend_25 { pt3dadd( 23.7886, 115.397, -2.20632, 0.44 ) }
    dend_25 { pt3dadd( 24.2026, 115.782, -2.16792, 0.44 ) }
    dend_25 { pt3dadd( 24.2646, 115.842, -2.15173, 0.44 ) }
    dend_25 { pt3dadd( 24.9861, 116.623, -1.80294, 0.44 ) }
    dend_25 { pt3dadd( 25.4451, 117.206, -1.47185, 0.59 ) }
    dend_25 { pt3dadd( 25.8028, 117.727, -1.11824, 0.37 ) }
    dend_25 { pt3dadd( 26.2809, 118.407, -0.656559, 0.22 ) }
    dend_25 { pt3dadd( 26.7323, 119.055, -0.238721, 0.22 ) }
    dend_25 { pt3dadd( 27.3951, 120.088, 0.36356, 0.96 ) }
    dend_25 { pt3dadd( 27.8605, 120.934, 0.779692, 1.11 ) }
    dend_25 { pt3dadd( 28.2987, 121.85, 1.15198, 0.88 ) }
    dend_25 { pt3dadd( 28.8321, 123.102, 1.56417, 0.22 ) }
    dend_25 { pt3dadd( 29.3423, 124.424, 1.94668, 0.22 ) }
    dend_25 { pt3dadd( 29.6241, 125.239, 2.20013, 0.22 ) }
    dend_25 { pt3dadd( 29.9085, 126.181, 2.49875, 0.22 ) }
    dend_25 { pt3dadd( 30.1928, 127.304, 2.87091, 1.11 ) }
    dend_25 { pt3dadd( 30.4167, 128.366, 3.23083, 1.62 ) }
    dend_25 { pt3dadd( 30.6951, 129.885, 3.75556, 0.29 ) }
    dend_25 { pt3dadd( 30.8852, 130.815, 4.1061, 0.37 ) }
    dend_25 { pt3dadd( 31.1363, 131.754, 4.49691, 0.37 ) }
    dend_25 { pt3dadd( 31.4441, 132.803, 4.96063, 0.29 ) }
    dend_25 { pt3dadd( 31.6152, 133.377, 5.20297, 0.88 ) }
    dend_25 { pt3dadd( 31.8292, 134.132, 5.51044, 1.11 ) }
    dend_25 { pt3dadd( 31.9887, 134.725, 5.73174, 1.11 ) }
    dend_25 { pt3dadd( 32.2318, 135.694, 6.0752, 0.88 ) }
    dend_25 { pt3dadd( 32.6487, 137.463, 6.72509, 0.22 ) }
    dend_25 { pt3dadd( 32.9522, 138.751, 7.22184, 0.22 ) }
    dend_25 { pt3dadd( 33.2386, 139.958, 7.69994, 0.88 ) }
    dend_25 { pt3dadd( 33.3877, 140.595, 7.95651, 1.11 ) }
    dend_25 { pt3dadd( 33.4098, 140.696, 7.99526, 1.11 ) }
    dend_25 { pt3dadd( 33.5356, 141.305, 8.20872, 1.11 ) }
    dend_25 { pt3dadd( 33.5572, 141.404, 8.22891, 1.11 ) }
    dend_25 { pt3dadd( 33.7113, 142.226, 8.29527, 1.03 ) }
    dend_25 { pt3dadd( 33.7326, 142.352, 8.30592, 1.03 ) }
    dend_25 { pt3dadd( 33.8581, 143.311, 8.46728, 0.88 ) }
    dend_25 { pt3dadd( 33.9711, 144.236, 8.62503, 0.29 ) }
    dend_25 { pt3dadd( 34.1538, 145.958, 8.92158, 0.22 ) }
    dend_25 { pt3dadd( 34.275, 147.227, 9.14805, 1.25 ) }
    dend_25 { pt3dadd( 34.4158, 148.927, 9.47742, 1.55 ) }
    dend_25 { pt3dadd( 34.5248, 150.286, 9.7782, 1.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 99/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 7.23119, 59.0571, -12.2026, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_24 { pt3dadd( 6.97257, 60.2153, -13.8912, 0.29 ) }
    dend_24 { pt3dadd( 6.78293, 61.0183, -15.0299, 1.03 ) }
    dend_24 { pt3dadd( 6.49547, 62.2265, -16.65, 0.22 ) }
    dend_24 { pt3dadd( 6.36657, 62.7104, -17.2634, 0.66 ) }
    dend_24 { pt3dadd( 6.26327, 63.0736, -17.705, 0.81 ) }
    dend_24 { pt3dadd( 5.93403, 64.0827, -18.859, 0.37 ) }
    dend_24 { pt3dadd( 5.82142, 64.3908, -19.1476, 0.74 ) }
    dend_24 { pt3dadd( 5.65913, 64.744, -19.4438, 0.96 ) }
    dend_24 { pt3dadd( 5.39561, 65.2328, -19.8255, 0.44 ) }
    dend_24 { pt3dadd( 4.60891, 66.6176, -20.8823, 1.2 ) }
    dend_24 { pt3dadd( 4.12818, 67.4703, -21.4819, 0.88 ) }
    dend_24 { pt3dadd( 3.65825, 68.3033, -21.9959, 1.25 ) }
    dend_24 { pt3dadd( 3.32969, 68.9124, -22.3491, 1.25 ) }
    dend_24 { pt3dadd( 2.73675, 70.0405, -22.9579, 0.59 ) }
    dend_24 { pt3dadd( 2.29717, 70.9621, -23.4271, 0.22 ) }
    dend_24 { pt3dadd( 2.11099, 71.3674, -23.6081, 0.22 ) }
    dend_24 { pt3dadd( 1.80289, 72.0729, -23.9259, 0.96 ) }
    dend_24 { pt3dadd( 1.57038, 72.5886, -24.1579, 1.47 ) }
    dend_24 { pt3dadd( 1.36344, 73.0258, -24.3468, 1.62 ) }
    dend_24 { pt3dadd( 0.87409, 73.8751, -24.7047, 1.03 ) }
    dend_24 { pt3dadd( 0.402941, 74.4949, -25.0282, 0.29 ) }
    dend_24 { pt3dadd( -0.0186824, 74.9491, -25.2929, 0.22 ) }
    dend_24 { pt3dadd( -0.518063, 75.4022, -25.5833, 0.22 ) }
    dend_24 { pt3dadd( -0.58129, 75.4548, -25.6175, 0.22 ) }
    dend_24 { pt3dadd( -1.24953, 75.9733, -25.9469, 0.22 ) }
    dend_24 { pt3dadd( -1.77293, 76.3589, -26.1786, 0.22 ) }
    dend_24 { pt3dadd( -2.49433, 76.8556, -26.5141, 0.22 ) }
    dend_24 { pt3dadd( -3.37936, 77.4334, -26.948, 1.11 ) }
    dend_24 { pt3dadd( -3.68492, 77.6275, -27.1023, 1.4 ) }
    dend_24 { pt3dadd( -4.42672, 78.0908, -27.4842, 0.74 ) }
    dend_24 { pt3dadd( -5.05744, 78.472, -27.8404, 0.22 ) }
    dend_24 { pt3dadd( -5.65744, 78.7916, -28.2103, 0.22 ) }
    dend_24 { pt3dadd( -6.00548, 78.9441, -28.4369, 0.22 ) }
    dend_24 { pt3dadd( -6.54665, 79.1595, -28.8736, 0.74 ) }
    dend_24 { pt3dadd( -6.86509, 79.2808, -29.1645, 0.88 ) }
    dend_24 { pt3dadd( -7.8032, 79.6447, -30.1523, 0.22 ) }
    dend_24 { pt3dadd( -8.34664, 79.8586, -30.7612, 0.59 ) }
    dend_24 { pt3dadd( -8.66205, 79.9983, -31.2537, 1.03 ) }
    dend_24 { pt3dadd( -9.54455, 80.3818, -32.9084, 0.22 ) }
    dend_24 { pt3dadd( -9.7561, 80.4618, -33.3547, 0.22 ) }
    dend_24 { pt3dadd( -10.1384, 80.5996, -34.2247, 0.81 ) }
    dend_24 { pt3dadd( -10.4599, 80.7088, -34.9938, 1.47 ) }
    dend_24 { pt3dadd( -11.761, 81.1384, -38.1756, 0.29 ) }
    dend_24 { pt3dadd( -11.9208, 81.1878, -38.5642, 0.29 ) }
    dend_24 { pt3dadd( -12.2411, 81.278, -39.2698, 0.22 ) }
    dend_24 { pt3dadd( -12.8822, 81.4753, -40.567, 0.96 ) }
    dend_24 { pt3dadd( -13.103, 81.5497, -40.9535, 1.33 ) }
    dend_24 { pt3dadd( -13.7148, 81.7906, -41.8279, 0.22 ) }
    dend_24 { pt3dadd( -13.7727, 81.8146, -41.8846, 0.22 ) }
    dend_24 { pt3dadd( -14.3343, 82.0679, -42.4477, 0.22 ) }
    dend_24 { pt3dadd( -15.0287, 82.4038, -43.1273, 0.52 ) }
    dend_24 { pt3dadd( -15.2684, 82.5259, -43.3717, 0.52 ) }
    dend_24 { pt3dadd( -15.9244, 82.8568, -44.1116, 0.15 ) }
    dend_24 { pt3dadd( -16.1822, 82.9745, -44.411, 0.15 ) }
    dend_24 { pt3dadd( -16.872, 83.2395, -45.2063, 0.88 ) }
    dend_24 { pt3dadd( -17.3817, 83.4069, -45.8039, 1.11 ) }
    dend_24 { pt3dadd( -18.4495, 83.7303, -47.0369, 0.22 ) }
    dend_24 { pt3dadd( -19.1598, 83.9429, -47.9704, 1.11 ) }
    dend_24 { pt3dadd( -19.4706, 84.0389, -48.4082, 1.33 ) }
    dend_24 { pt3dadd( -20.2998, 84.3206, -49.6397, 0.22 ) }
    dend_24 { pt3dadd( -20.7884, 84.5043, -50.3786, 1.03 ) }
    dend_24 { pt3dadd( -21.0501, 84.6222, -50.7817, 1.03 ) }
    dend_24 { pt3dadd( -22.2125, 85.3219, -52.6418, 0.22 ) }
    dend_24 { pt3dadd( -22.5305, 85.5878, -53.2046, 0.22 ) }
    dend_24 { pt3dadd( -22.7911, 85.8627, -53.7054, 0.74 ) }
    dend_24 { pt3dadd( -23.0119, 86.149, -54.1413, 1.18 ) }
    dend_24 { pt3dadd( -23.3433, 86.5791, -54.6904, 0.96 ) }
    dend_24 { pt3dadd( -23.9515, 87.3434, -55.4865, 0.22 ) }
    dend_24 { pt3dadd( -23.9907, 87.389, -55.5219, 0.22 ) }
    dend_24 { pt3dadd( -24.5269, 88.0041, -55.9779, 0.22 ) }
    dend_24 { pt3dadd( -25.0585, 88.5827, -56.3947, 0.88 ) }
    dend_24 { pt3dadd( -25.332, 88.8642, -56.599, 1.18 ) }
    dend_24 { pt3dadd( -25.6222, 89.1683, -56.8451, 1.33 ) }
    dend_24 { pt3dadd( -26.5179, 90.1443, -57.6902, 0.22 ) }
    dend_24 { pt3dadd( -26.9178, 90.6188, -58.1685, 0.96 ) }
    dend_24 { pt3dadd( -27.0976, 90.8812, -58.4765, 1.25 ) }
    dend_24 { pt3dadd( -27.1211, 90.9238, -58.531, 1.25 ) }
    dend_24 { pt3dadd( -27.7015, 92.1826, -60.1532, 0.22 ) }
    dend_24 { pt3dadd( -27.9819, 92.9081, -61.1007, 1.55 ) }
    dend_24 { pt3dadd( -28.1373, 93.4574, -61.7853, 1.33 ) }
    dend_24 { pt3dadd( -28.3908, 94.585, -63.0903, 0.37 ) }
    dend_24 { pt3dadd( -28.5399, 95.4008, -63.9197, 1.11 ) }
    dend_24 { pt3dadd( -28.6187, 95.9112, -64.3607, 1.55 ) }
    dend_24 { pt3dadd( -28.6263, 95.9803, -64.4067, 1.55 ) }
    dend_24 { pt3dadd( -28.7005, 97.0991, -65.0092, 0.22 ) }
    dend_24 { pt3dadd( -28.7764, 98.1591, -65.4793, 0.52 ) }
    dend_24 { pt3dadd( -28.8544, 98.8773, -65.7767, 0.22 ) }
    dend_24 { pt3dadd( -29.0116, 99.8593, -66.1879, 1.47 ) }
    dend_24 { pt3dadd( -29.1595, 100.57, -66.5098, 1.47 ) }
    dend_24 { pt3dadd( -29.6591, 102.517, -67.4137, 0.22 ) }
    dend_24 { pt3dadd( -29.8578, 103.162, -67.7209, 0.88 ) }
    dend_24 { pt3dadd( -30.4459, 104.847, -68.5216, 0.22 ) }
    dend_24 { pt3dadd( -30.9441, 106.167, -69.1451, 1.4 ) }
    dend_24 { pt3dadd( -31.3176, 107.083, -69.5612, 1.55 ) }
    dend_24 { pt3dadd( -31.6996, 108.046, -70.052, 0.22 ) }
    dend_24 { pt3dadd( -31.8102, 108.324, -70.2032, 0.22 ) }
    dend_24 { pt3dadd( -32.0385, 108.932, -70.5609, 0.22 ) }
    dend_24 { pt3dadd( -32.4899, 110.266, -71.4519, 1.11 ) }
    dend_24 { pt3dadd( -32.6351, 110.732, -71.8078, 1.25 ) }
    dend_24 { pt3dadd( -33.1308, 112.387, -73.1311, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_24 { pt3dadd( -33.3992, 113.309, -73.9064, 0.96 ) }
    dend_24 { pt3dadd( -33.5877, 113.98, -74.438, 0.96 ) }
    dend_24 { pt3dadd( -33.9509, 115.219, -75.317, 0.22 ) }
    dend_24 { pt3dadd( -33.9678, 115.276, -75.3528, 0.59 ) }
    dend_24 { pt3dadd( -34.1806, 116.014, -75.7312, 0.59 ) }
    dend_24 { pt3dadd( -34.3381, 116.576, -75.934, 0.59 ) }
    dend_24 { pt3dadd( -34.6271, 117.857, -76.3227, 0.22 ) }
    dend_24 { pt3dadd( -34.9005, 119.131, -76.6506, 0.22 ) }
    dend_24 { pt3dadd( -35.1767, 120.212, -76.8931, 0.96 ) }
    dend_24 { pt3dadd( -35.3276, 120.699, -77.0229, 1.4 ) }
    dend_24 { pt3dadd( -35.661, 121.665, -77.4162, 0.88 ) }
    dend_24 { pt3dadd( -35.9505, 122.436, -77.8256, 0.22 ) }
    dend_24 { pt3dadd( -36.1251, 122.883, -78.1141, 0.88 ) }
    dend_24 { pt3dadd( -36.4256, 123.596, -78.6378, 1.11 ) }
    dend_24 { pt3dadd( -36.7356, 124.251, -79.1587, 1.11 ) }
    dend_24 { pt3dadd( -37.4896, 125.872, -80.5848, 0.22 ) }
    dend_24 { pt3dadd( -37.5121, 125.921, -80.6291, 0.22 ) }
    dend_24 { pt3dadd( -37.7263, 126.481, -81.1652, 0.22 ) }
    dend_24 { pt3dadd( -37.8584, 126.978, -81.6429, 0.22 ) }
    dend_24 { pt3dadd( -37.8933, 127.157, -81.8021, 0.22 ) }
    dend_24 { pt3dadd( -38.0074, 127.867, -82.3973, 1.03 ) }
    dend_24 { pt3dadd( -38.2257, 128.861, -83.1983, 1.25 ) }
    dend_24 { pt3dadd( -38.5149, 130.078, -84.2123, 0.22 ) }
    dend_24 { pt3dadd( -38.6798, 130.804, -84.8478, 0.22 ) }
    dend_24 { pt3dadd( -38.8532, 131.604, -85.5313, 1.11 ) }
    dend_24 { pt3dadd( -39.0039, 132.215, -86.0381, 1.03 ) }
    dend_24 { pt3dadd( -39.346, 133.577, -87.1274, 0.22 ) }
    dend_24 { pt3dadd( -39.4285, 133.902, -87.38, 0.81 ) }
    dend_24 { pt3dadd( -39.7569, 135.044, -88.1673, 0.22 ) }
    dend_24 { pt3dadd( -39.9855, 135.816, -88.6552, 1.03 ) }
    dend_24 { pt3dadd( -40.1461, 136.404, -88.9936, 1.4 ) }
    dend_24 { pt3dadd( -40.7955, 138.997, -90.2649, 0.22 ) }
    dend_24 { pt3dadd( -40.8288, 139.157, -90.3283, 0.22 ) }
    dend_24 { pt3dadd( -41.0904, 140.462, -90.7645, 0.22 ) }
    dend_24 { pt3dadd( -41.2944, 141.559, -91.0426, 0.81 ) }
    dend_24 { pt3dadd( -41.4261, 142.431, -91.2095, 0.96 ) }
    dend_24 { pt3dadd( -41.5355, 143.325, -91.3164, 0.37 ) }
    dend_24 { pt3dadd( -41.7168, 144.882, -91.3587, 0.22 ) }
    dend_24 { pt3dadd( -41.7234, 144.948, -91.3594, 0.22 ) }
    dend_24 { pt3dadd( -41.8321, 145.986, -91.3293, 0.22 ) }
    dend_24 { pt3dadd( -41.9496, 146.859, -91.2855, 0.96 ) }
    dend_24 { pt3dadd( -42.0393, 147.374, -91.2543, 1.11 ) }
    dend_24 { pt3dadd( -42.1957, 148.111, -91.2047, 0.81 ) }
    dend_24 { pt3dadd( -42.5061, 149.413, -91.1302, 0.22 ) }
    dend_24 { pt3dadd( -42.8082, 150.616, -91.0899, 0.88 ) }
    dend_24 { pt3dadd( -42.9433, 151.118, -91.0846, 1.11 ) }
    dend_24 { pt3dadd( -43.092, 151.719, -91.0834, 1.11 ) }
    dend_24 { pt3dadd( -43.6996, 154.464, -91.101, 0.22 ) }
    dend_24 { pt3dadd( -44.0506, 156.348, -91.1546, 1.0 ) }
    dend_24 { pt3dadd( -44.2248, 157.466, -91.2135, 0.22 ) }
    dend_24 { pt3dadd( -44.365, 158.568, -91.2976, 0.96 ) }
    dend_24 { pt3dadd( -44.4978, 159.861, -91.4011, 0.22 ) }
    dend_24 { pt3dadd( -44.5791, 160.994, -91.4982, 0.52 ) }
    dend_24 { pt3dadd( -44.567, 162.055, -91.6611, 0.22 ) }
    dend_24 { pt3dadd( -44.5579, 162.14, -91.6827, 0.22 ) }
    dend_24 { pt3dadd( -44.4662, 162.722, -91.8823, 0.88 ) }
    dend_24 { pt3dadd( -44.3655, 163.364, -92.1696, 1.11 ) }
    dend_24 { pt3dadd( -44.2509, 163.899, -92.5622, 1.25 ) }
    dend_24 { pt3dadd( -43.835, 165.207, -93.8419, 0.37 ) }
    dend_24 { pt3dadd( -43.5045, 166.12, -94.8131, 0.44 ) }
    dend_24 { pt3dadd( -43.3486, 166.457, -95.2103, 0.66 ) }
    dend_24 { pt3dadd( -43.1088, 166.898, -95.7677, 0.66 ) }
    dend_24 { pt3dadd( -41.8084, 168.887, -98.48, 1.11 ) }
    dend_24 { pt3dadd( -40.7571, 170.25, -100.387, 0.22 ) }
    dend_24 { pt3dadd( -40.4762, 170.549, -100.832, 0.81 ) }
    dend_24 { pt3dadd( -39.0566, 171.854, -102.792, 0.22 ) }
    dend_24 { pt3dadd( -38.8831, 171.997, -103.005, 0.74 ) }
    dend_24 { pt3dadd( -37.4392, 173.096, -104.597, 0.22 ) }
    dend_24 { pt3dadd( -36.638, 173.677, -105.402, 1.33 ) }
    dend_24 { pt3dadd( -34.0657, 175.499, -107.912, 0.22 ) }
    dend_24 { pt3dadd( -33.381, 175.984, -108.588, 0.22 ) }
    dend_24 { pt3dadd( -32.3205, 176.748, -109.612, 0.22 ) }
    dend_24 { pt3dadd( -32.2802, 176.777, -109.651, 0.22 ) }
    dend_24 { pt3dadd( -31.618, 177.224, -110.265, 0.96 ) }
    dend_24 { pt3dadd( -31.2528, 177.472, -110.605, 0.96 ) }
    dend_24 { pt3dadd( -29.4201, 178.724, -112.163, 0.22 ) }
    dend_24 { pt3dadd( -29.1675, 178.881, -112.376, 0.52 ) }
    dend_24 { pt3dadd( -28.7547, 179.114, -112.689, 0.52 ) }
    dend_24 { pt3dadd( -27.5029, 179.737, -113.514, 0.52 ) }
    dend_24 { pt3dadd( -26.5081, 180.154, -114.03, 0.22 ) }
    dend_24 { pt3dadd( -26.4137, 180.188, -114.067, 0.22 ) }
    dend_24 { pt3dadd( -25.3647, 180.525, -114.318, 1.03 ) }
    dend_24 { pt3dadd( -25.2868, 180.542, -114.336, 1.03 ) }
    dend_24 { pt3dadd( -24.2141, 180.703, -114.542, 0.22 ) }
    dend_24 { pt3dadd( -23.4638, 180.8, -114.661, 1.11 ) }
    dend_24 { pt3dadd( -22.8306, 180.91, -114.793, 1.11 ) }
    dend_24 { pt3dadd( -22.7687, 180.927, -114.821, 1.11 ) }
    dend_24 { pt3dadd( -21.1665, 181.503, -116.041, 0.22 ) }
    dend_24 { pt3dadd( -20.6024, 181.739, -116.617, 0.96 ) }
    dend_24 { pt3dadd( -19.6715, 182.224, -118.074, 0.22 ) }
    dend_24 { pt3dadd( -19.2293, 182.526, -119.033, 1.18 ) }
    dend_24 { pt3dadd( -18.144, 183.47, -122.05, 0.96 ) }
    dend_24 { pt3dadd( -17.7001, 183.975, -123.62, 0.29 ) }
    dend_24 { pt3dadd( -17.6096, 184.145, -124.097, 0.66 ) }
    dend_24 { pt3dadd( -17.2291, 185.25, -126.904, 0.22 ) }
    dend_24 { pt3dadd( -17.1405, 185.665, -127.9, 1.11 ) }
    dend_24 { pt3dadd( -17.1355, 185.704, -127.974, 1.11 ) }
    dend_24 { pt3dadd( -17.1269, 186.077, -128.447, 1.47 ) }
    dend_24 { pt3dadd( -17.1633, 187.774, -129.847, 0.22 ) }
    dend_24 { pt3dadd( -17.2779, 188.929, -130.468, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_24 { pt3dadd( -17.2902, 188.988, -130.482, 0.22 ) }
    dend_24 { pt3dadd( -17.6477, 190.015, -130.569, 1.25 ) }
    dend_24 { pt3dadd( -18.0702, 190.829, -130.545, 1.25 ) }
    dend_24 { pt3dadd( -19.0986, 192.292, -130.285, 0.22 ) }
    dend_24 { pt3dadd( -19.5986, 192.88, -130.091, 0.44 ) }
    dend_24 { pt3dadd( -19.7695, 193.061, -130.019, 0.44 ) }
    dend_24 { pt3dadd( -20.6439, 193.959, -129.633, 0.22 ) }
    dend_24 { pt3dadd( -21.3462, 194.638, -129.306, 0.22 ) }
    dend_24 { pt3dadd( -22.667, 195.945, -128.812, 0.44 ) }
    dend_24 { pt3dadd( -23.6325, 204.14, -135.059, 0.44 ) }
    // Section: dend_19, id: dend_19, parent: dend_13 (entry count 10/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -30.4687, 25.1312, 20.8053, 0.44 ) }
    dend_19 { pt3dadd( -33.2431, 24.5706, 20.2507, 0.44 ) }
    dend_19 { pt3dadd( -34.0644, 24.3457, 20.1659, 0.52 ) }
    dend_19 { pt3dadd( -34.9424, 24.1051, 20.1335, 0.52 ) }
    dend_19 { pt3dadd( -35.5243, 23.9746, 20.1324, 0.66 ) }
    dend_19 { pt3dadd( -36.2637, 23.8744, 20.1506, 0.37 ) }
    dend_19 { pt3dadd( -36.9521, 23.8279, 20.1805, 0.29 ) }
    dend_19 { pt3dadd( -37.3981, 23.8426, 20.3149, 0.29 ) }
    dend_19 { pt3dadd( -37.9792, 23.9677, 20.4471, 0.66 ) }
    dend_19 { pt3dadd( -38.6159, 24.1824, 20.5408, 0.44 ) }
    dend_19 { pt3dadd( -39.4289, 24.52, 20.6124, 0.44 ) }
    dend_19 { pt3dadd( -39.5829, 24.5719, 20.5986, 0.44 ) }
    dend_19 { pt3dadd( -40.1807, 24.6131, 20.3714, 0.44 ) }
    dend_19 { pt3dadd( -40.9482, 24.5393, 19.7242, 0.37 ) }
    dend_19 { pt3dadd( -41.3929, 24.4807, 19.1777, 0.37 ) }
    dend_19 { pt3dadd( -41.4332, 24.4752, 19.1251, 0.37 ) }
    dend_19 { pt3dadd( -42.59, 24.3075, 17.6863, 0.96 ) }
    dend_19 { pt3dadd( -43.4987, 24.1582, 16.543, 1.18 ) }
    dend_19 { pt3dadd( -44.9894, 23.9647, 14.8214, 0.37 ) }
    dend_19 { pt3dadd( -45.7349, 23.9773, 14.1619, 0.37 ) }
    dend_19 { pt3dadd( -46.7698, 24.1559, 13.4156, 0.37 ) }
    dend_19 { pt3dadd( -47.6785, 24.4063, 12.7412, 0.37 ) }
    dend_19 { pt3dadd( -48.2225, 24.6318, 12.3252, 0.37 ) }
    dend_19 { pt3dadd( -49.5211, 25.3223, 11.3065, 0.88 ) }
    dend_19 { pt3dadd( -51.2971, 26.4164, 9.96439, 1.25 ) }
    dend_19 { pt3dadd( -53.0452, 27.6638, 8.53249, 1.03 ) }
    dend_19 { pt3dadd( -54.7064, 29.0803, 7.00601, 0.44 ) }
    dend_19 { pt3dadd( -55.4449, 29.7641, 6.27384, 0.44 ) }
    dend_19 { pt3dadd( -56.0982, 30.4326, 5.58618, 0.44 ) }
    dend_19 { pt3dadd( -56.5493, 30.9833, 5.02934, 0.29 ) }
    dend_19 { pt3dadd( -57.0541, 31.7191, 4.34008, 1.11 ) }
    dend_19 { pt3dadd( -57.3387, 32.1871, 3.94625, 1.47 ) }
    dend_19 { pt3dadd( -58.4093, 33.9329, 2.58762, 0.29 ) }
    dend_19 { pt3dadd( -58.9767, 34.7679, 1.845, 0.59 ) }
    dend_19 { pt3dadd( -59.336, 35.3054, 1.30799, 1.11 ) }
    dend_19 { pt3dadd( -59.6444, 35.7813, 0.810154, 0.81 ) }
    dend_19 { pt3dadd( -60.3776, 36.9991, -0.431332, 0.29 ) }
    dend_19 { pt3dadd( -60.7219, 37.5924, -0.987224, 0.52 ) }
    dend_19 { pt3dadd( -61.1457, 38.3806, -1.57288, 0.29 ) }
    dend_19 { pt3dadd( -61.2288, 38.5088, -1.65817, 0.29 ) }
    dend_19 { pt3dadd( -61.5373, 38.9959, -1.93555, 0.29 ) }
    dend_19 { pt3dadd( -61.8546, 39.5128, -2.24499, 0.29 ) }
    dend_19 { pt3dadd( -62.3385, 40.2873, -2.80222, 0.96 ) }
    dend_19 { pt3dadd( -62.5145, 40.5989, -3.06469, 1.33 ) }
    dend_19 { pt3dadd( -62.7273, 40.9836, -3.41202, 1.33 ) }
    dend_19 { pt3dadd( -63.1891, 41.7966, -4.17274, 0.74 ) }
    dend_19 { pt3dadd( -63.7944, 42.8203, -5.12974, 0.88 ) }
    dend_19 { pt3dadd( -64.5697, 43.9603, -6.15209, 1.25 ) }
    dend_19 { pt3dadd( -64.8572, 44.3281, -6.46004, 1.4 ) }
    dend_19 { pt3dadd( -65.6837, 45.2622, -7.16924, 0.52 ) }
    dend_19 { pt3dadd( -66.0569, 45.6651, -7.42908, 0.22 ) }
    dend_19 { pt3dadd( -66.6044, 46.2585, -7.73136, 0.22 ) }
    dend_19 { pt3dadd( -67.2898, 47.0577, -8.03683, 0.9 ) }
    dend_19 { pt3dadd( -67.7405, 47.6223, -8.24264, 0.81 ) }
    dend_19 { pt3dadd( -68.7533, 48.9639, -8.8083, 0.22 ) }
    dend_19 { pt3dadd( -69.5276, 50.09, -9.31281, 1.55 ) }
    dend_19 { pt3dadd( -69.678, 50.3246, -9.43923, 1.77 ) }
    dend_19 { pt3dadd( -70.1281, 51.0959, -9.90469, 0.81 ) }
    dend_19 { pt3dadd( -70.6537, 52.116, -10.5872, 0.22 ) }
    dend_19 { pt3dadd( -70.9223, 52.6996, -10.98, 0.52 ) }
    dend_19 { pt3dadd( -71.2028, 53.3719, -11.4197, 0.22 ) }
    dend_19 { pt3dadd( -71.7497, 54.7445, -12.3187, 1.25 ) }
    dend_19 { pt3dadd( -71.8521, 55.0043, -12.4848, 1.47 ) }
    dend_19 { pt3dadd( -72.4222, 56.4849, -13.3919, 0.22 ) }
    dend_19 { pt3dadd( -72.6733, 57.1508, -13.7574, 0.22 ) }
    dend_19 { pt3dadd( -72.7047, 57.2287, -13.7971, 0.22 ) }
    dend_19 { pt3dadd( -72.9108, 57.7343, -14.0446, 0.22 ) }
    dend_19 { pt3dadd( -73.2154, 58.5016, -14.3803, 1.11 ) }
    dend_19 { pt3dadd( -73.2437, 58.5667, -14.4096, 1.11 ) }
    dend_19 { pt3dadd( -73.4705, 59.0525, -14.6148, 1.55 ) }
    dend_19 { pt3dadd( -73.8196, 59.8024, -14.977, 0.66 ) }
    dend_19 { pt3dadd( -73.8949, 59.9745, -15.0629, 0.66 ) }
    dend_19 { pt3dadd( -74.2875, 60.9439, -15.7172, 0.22 ) }
    dend_19 { pt3dadd( -74.3093, 61.0007, -15.7578, 0.22 ) }
    dend_19 { pt3dadd( -74.5195, 61.5125, -16.1061, 0.22 ) }
    dend_19 { pt3dadd( -74.834, 62.2314, -16.5727, 0.96 ) }
    dend_19 { pt3dadd( -74.9667, 62.5052, -16.7418, 1.25 ) }
    dend_19 { pt3dadd( -76.1165, 64.5746, -17.9352, 0.29 ) }
    dend_19 { pt3dadd( -76.5503, 65.2325, -18.3108, 0.29 ) }
    dend_19 { pt3dadd( -77.2792, 66.1262, -18.8464, 0.22 ) }
    dend_19 { pt3dadd( -77.6121, 66.4497, -19.0442, 0.22 ) }
    dend_19 { pt3dadd( -78.2926, 66.9544, -19.3449, 0.88 ) }
    dend_19 { pt3dadd( -78.7685, 67.2419, -19.5053, 1.11 ) }
    dend_19 { pt3dadd( -79.599, 67.6577, -19.7425, 1.11 ) }
    dend_19 { pt3dadd( -80.5485, 68.1478, -20.0829, 0.22 ) }
    dend_19 { pt3dadd( -81.0175, 68.4037, -20.2777, 0.22 ) }
    dend_19 { pt3dadd( -82.1644, 69.0935, -20.7953, 1.77 ) }
    dend_19 { pt3dadd( -82.5462, 69.3641, -20.9687, 2.14 ) }
    dend_19 { pt3dadd( -84.0597, 70.611, -21.672, 0.29 ) }
    dend_19 { pt3dadd( -84.6385, 71.1867, -21.9147, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_19 { pt3dadd( -84.7369, 71.3083, -21.9527, 0.59 ) }
    dend_19 { pt3dadd( -84.8289, 71.4431, -21.9839, 0.59 ) }
    dend_19 { pt3dadd( -85.2809, 72.1741, -22.1096, 0.29 ) }
    dend_19 { pt3dadd( -85.322, 72.2302, -22.1152, 0.29 ) }
    dend_19 { pt3dadd( -85.9062, 72.8872, -22.084, 1.18 ) }
    dend_19 { pt3dadd( -86.2627, 73.2091, -22.0743, 1.33 ) }
    dend_19 { pt3dadd( -86.7032, 73.6085, -22.1079, 0.74 ) }
    dend_19 { pt3dadd( -87.4988, 74.3146, -22.2352, 0.29 ) }
    dend_19 { pt3dadd( -88.0737, 74.8204, -22.3861, 0.74 ) }
    dend_19 { pt3dadd( -88.1323, 74.8767, -22.4042, 0.74 ) }
    dend_19 { pt3dadd( -88.4485, 75.219, -22.5173, 0.59 ) }
    dend_19 { pt3dadd( -89.1079, 76.0641, -22.7747, 0.22 ) }
    dend_19 { pt3dadd( -89.1508, 76.1272, -22.793, 0.22 ) }
    dend_19 { pt3dadd( -89.341, 76.4236, -22.8306, 0.22 ) }
    dend_19 { pt3dadd( -89.6423, 76.8794, -22.862, 0.66 ) }
    dend_19 { pt3dadd( -90.0111, 77.3893, -22.8561, 0.96 ) }
    dend_19 { pt3dadd( -90.0601, 77.4506, -22.8522, 0.96 ) }
    dend_19 { pt3dadd( -90.7492, 78.2975, -22.7609, 0.22 ) }
    dend_19 { pt3dadd( -91.5206, 79.3119, -22.6665, 1.47 ) }
    dend_19 { pt3dadd( -91.7617, 79.6434, -22.6381, 1.77 ) }
    dend_19 { pt3dadd( -92.2131, 80.2978, -22.5869, 0.74 ) }
    dend_19 { pt3dadd( -92.5722, 80.8789, -22.5408, 0.29 ) }
    dend_19 { pt3dadd( -93.0749, 81.7858, -22.4566, 0.22 ) }
    dend_19 { pt3dadd( -93.3817, 82.3789, -22.3879, 0.52 ) }
    dend_19 { pt3dadd( -93.5793, 82.7297, -22.3498, 0.52 ) }
    dend_19 { pt3dadd( -93.6326, 82.8152, -22.3268, 0.52 ) }
    dend_19 { pt3dadd( -94.1701, 83.5557, -22.0086, 0.22 ) }
    dend_19 { pt3dadd( -94.7793, 84.263, -21.5419, 1.47 ) }
    dend_19 { pt3dadd( -95.3202, 84.7818, -21.1013, 1.11 ) }
    dend_19 { pt3dadd( -95.9258, 85.3049, -20.5896, 0.88 ) }
    dend_19 { pt3dadd( -97.0724, 86.2459, -19.5969, 0.22 ) }
    dend_19 { pt3dadd( -97.5625, 86.6222, -19.1642, 0.22 ) }
    dend_19 { pt3dadd( -98.4833, 87.2494, -18.3151, 1.33 ) }
    dend_19 { pt3dadd( -99.0397, 87.6064, -17.7587, 1.69 ) }
    dend_19 { pt3dadd( -99.0803, 87.6336, -17.7141, 1.69 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 35/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -30.4687, 25.1312, 20.8053, 0.44 ) }
    dend_14 { pt3dadd( -31.0201, 25.341, 21.1505, 0.44 ) }
    dend_14 { pt3dadd( -31.5856, 25.5217, 21.4821, 0.29 ) }
    dend_14 { pt3dadd( -31.645, 25.5379, 21.5244, 0.29 ) }
    dend_14 { pt3dadd( -32.1354, 25.6517, 21.8896, 0.29 ) }
    dend_14 { pt3dadd( -32.4733, 25.7141, 22.1656, 0.29 ) }
    dend_14 { pt3dadd( -32.9658, 25.7853, 22.5824, 0.81 ) }
    dend_14 { pt3dadd( -33.2894, 25.8214, 22.8865, 0.66 ) }
    dend_14 { pt3dadd( -33.9298, 25.8172, 23.5065, 0.44 ) }
    dend_14 { pt3dadd( -34.2256, 25.7827, 23.7721, 0.29 ) }
    dend_14 { pt3dadd( -34.7366, 25.6624, 24.1936, 0.59 ) }
    dend_14 { pt3dadd( -34.9, 25.6115, 24.3247, 0.59 ) }
    dend_14 { pt3dadd( -35.4329, 25.4189, 24.6865, 0.29 ) }
    dend_14 { pt3dadd( -35.9725, 25.2194, 24.9643, 0.29 ) }
    dend_14 { pt3dadd( -36.6081, 24.9902, 25.1878, 0.66 ) }
    dend_14 { pt3dadd( -37.0505, 24.8415, 25.3066, 0.96 ) }
    dend_14 { pt3dadd( -37.1172, 24.8216, 25.3184, 0.96 ) }
    dend_14 { pt3dadd( -38.0225, 24.5968, 25.4385, 0.37 ) }
    dend_14 { pt3dadd( -38.6394, 24.4839, 25.5122, 0.37 ) }
    dend_14 { pt3dadd( -38.9295, 24.4549, 25.5559, 0.66 ) }
    dend_14 { pt3dadd( -39.0573, 24.4533, 25.5923, 0.66 ) }
    dend_14 { pt3dadd( -39.2867, 24.4587, 25.6943, 0.66 ) }
    dend_14 { pt3dadd( -39.6214, 24.4632, 25.8932, 0.66 ) }
    dend_14 { pt3dadd( -40.1252, 24.4564, 26.2689, 0.29 ) }
    dend_14 { pt3dadd( -40.1787, 24.4528, 26.3089, 0.29 ) }
    dend_14 { pt3dadd( -40.7161, 24.4008, 26.6833, 0.29 ) }
    dend_14 { pt3dadd( -41.1709, 24.3397, 26.9698, 0.29 ) }
    dend_14 { pt3dadd( -41.6486, 24.2559, 27.2431, 0.81 ) }
    dend_14 { pt3dadd( -42.179, 24.1456, 27.5103, 0.88 ) }
    dend_14 { pt3dadd( -42.5341, 24.0615, 27.6613, 0.66 ) }
    dend_14 { pt3dadd( -43.0654, 23.9195, 27.8913, 0.29 ) }
    dend_14 { pt3dadd( -43.5716, 23.7835, 28.1071, 0.66 ) }
    dend_14 { pt3dadd( -43.9313, 23.6957, 28.2765, 0.88 ) }
    dend_14 { pt3dadd( -44.4709, 23.5853, 28.5668, 1.03 ) }
    dend_14 { pt3dadd( -45.1186, 23.4973, 28.9725, 1.03 ) }
    dend_14 { pt3dadd( -45.955, 23.4541, 29.5488, 0.37 ) }
    dend_14 { pt3dadd( -46.2761, 23.4593, 29.7848, 0.37 ) }
    dend_14 { pt3dadd( -46.7023, 23.4959, 30.1131, 0.37 ) }
    dend_14 { pt3dadd( -47.2011, 23.5591, 30.5064, 0.29 ) }
    dend_14 { pt3dadd( -47.7332, 23.6344, 30.9291, 0.29 ) }
    dend_14 { pt3dadd( -48.2509, 23.6933, 31.2787, 0.29 ) }
    dend_14 { pt3dadd( -48.7589, 23.702, 31.5222, 0.88 ) }
    dend_14 { pt3dadd( -48.8292, 23.6937, 31.5466, 0.88 ) }
    dend_14 { pt3dadd( -49.1592, 23.6195, 31.6266, 1.11 ) }
    dend_14 { pt3dadd( -49.6227, 23.4857, 31.7104, 1.11 ) }
    dend_14 { pt3dadd( -50.521, 23.2008, 31.8312, 0.59 ) }
    dend_14 { pt3dadd( -51.1007, 23.0166, 31.9067, 0.29 ) }
    dend_14 { pt3dadd( -51.58, 22.877, 31.9741, 0.29 ) }
    dend_14 { pt3dadd( -52.1979, 22.7183, 32.0603, 0.59 ) }
    dend_14 { pt3dadd( -52.6565, 22.6236, 32.1306, 0.96 ) }
    dend_14 { pt3dadd( -53.0882, 22.5456, 32.2087, 0.96 ) }
    dend_14 { pt3dadd( -53.4483, 22.4868, 32.2904, 0.81 ) }
    dend_14 { pt3dadd( -53.9461, 22.4005, 32.3937, 0.59 ) }
    dend_14 { pt3dadd( -54.348, 22.321, 32.4624, 0.29 ) }
    dend_14 { pt3dadd( -55.1564, 22.1426, 32.5879, 0.22 ) }
    dend_14 { pt3dadd( -55.8463, 21.9771, 32.6951, 0.74 ) }
    dend_14 { pt3dadd( -56.349, 21.8569, 32.764, 1.33 ) }
    dend_14 { pt3dadd( -56.9308, 21.7286, 32.832, 1.33 ) }
    dend_14 { pt3dadd( -57.7109, 21.5828, 32.9009, 0.59 ) }
    dend_14 { pt3dadd( -58.4518, 21.4791, 32.9608, 0.29 ) }
    dend_14 { pt3dadd( -58.8956, 21.4487, 32.9882, 0.29 ) }
    dend_14 { pt3dadd( -59.446, 21.4601, 33.0204, 0.59 ) }
    dend_14 { pt3dadd( -60.027, 21.5157, 33.0645, 0.74 ) }
    dend_14 { pt3dadd( -60.6368, 21.6176, 33.1389, 0.96 ) }
    dend_14 { pt3dadd( -61.4674, 21.7901, 33.279, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_14 { pt3dadd( -62.0382, 21.8905, 33.3952, 0.37 ) }
    dend_14 { pt3dadd( -62.3737, 21.9244, 33.4811, 0.44 ) }
    dend_14 { pt3dadd( -63.0153, 21.9332, 33.684, 0.44 ) }
    dend_14 { pt3dadd( -63.5291, 21.8881, 33.8811, 0.44 ) }
    dend_14 { pt3dadd( -63.999, 21.7903, 34.0899, 1.25 ) }
    dend_14 { pt3dadd( -64.6612, 21.5731, 34.4176, 1.25 ) }
    dend_14 { pt3dadd( -65.3237, 21.2949, 34.7677, 1.33 ) }
    dend_14 { pt3dadd( -65.8782, 21.0302, 35.0701, 0.74 ) }
    dend_14 { pt3dadd( -66.6861, 20.6253, 35.5158, 0.29 ) }
    dend_14 { pt3dadd( -67.6184, 20.1703, 36.0225, 0.96 ) }
    dend_14 { pt3dadd( -68.1608, 19.942, 36.3013, 0.29 ) }
    dend_14 { pt3dadd( -68.5397, 19.8233, 36.4809, 0.29 ) }
    dend_14 { pt3dadd( -68.9022, 19.7465, 36.6287, 1.03 ) }
    dend_14 { pt3dadd( -69.4993, 19.6898, 36.8265, 1.4 ) }
    dend_14 { pt3dadd( -70.0056, 19.7009, 36.9535, 1.47 ) }
    dend_14 { pt3dadd( -70.7982, 19.7878, 37.1017, 0.44 ) }
    dend_14 { pt3dadd( -71.3605, 19.8539, 37.1902, 0.44 ) }
    dend_14 { pt3dadd( -72.115, 19.9119, 37.2971, 0.74 ) }
    dend_14 { pt3dadd( -72.5825, 19.9184, 37.366, 0.74 ) }
    dend_14 { pt3dadd( -73.2553, 19.8816, 37.4739, 0.59 ) }
    dend_14 { pt3dadd( -73.9445, 19.7945, 37.6003, 0.52 ) }
    dend_14 { pt3dadd( -74.7761, 19.6301, 37.7941, 0.37 ) }
    dend_14 { pt3dadd( -75.5117, 19.4322, 37.9877, 0.74 ) }
    dend_14 { pt3dadd( -76.108, 19.242, 38.1649, 1.18 ) }
    dend_14 { pt3dadd( -76.5721, 19.0773, 38.3155, 1.03 ) }
    dend_14 { pt3dadd( -77.0109, 18.9112, 38.4713, 0.44 ) }
    dend_14 { pt3dadd( -77.6762, 18.6417, 38.7644, 0.29 ) }
    dend_14 { pt3dadd( -78.3136, 18.3925, 39.0776, 0.88 ) }
    dend_14 { pt3dadd( -78.7385, 18.2379, 39.3039, 1.18 ) }
    dend_14 { pt3dadd( -79.3595, 18.0181, 39.639, 0.74 ) }
    dend_14 { pt3dadd( -79.4239, 17.9962, 39.6796, 0.74 ) }
    dend_14 { pt3dadd( -80.0999, 17.7725, 40.172, 0.44 ) }
    dend_14 { pt3dadd( -80.7028, 17.5974, 40.6483, 0.37 ) }
    dend_14 { pt3dadd( -81.0597, 17.5242, 40.9523, 1.11 ) }
    dend_14 { pt3dadd( -81.5084, 17.4709, 41.3571, 1.47 ) }
    dend_14 { pt3dadd( -82.3472, 17.4696, 42.1272, 0.96 ) }
    dend_14 { pt3dadd( -82.9379, 17.52, 42.6388, 0.37 ) }
    dend_14 { pt3dadd( -83.3104, 17.5753, 42.9513, 0.37 ) }
    dend_14 { pt3dadd( -83.8205, 17.6553, 43.3812, 0.37 ) }
    dend_14 { pt3dadd( -84.3324, 17.7349, 43.7981, 0.29 ) }
    dend_14 { pt3dadd( -84.8779, 17.8022, 44.198, 0.29 ) }
    dend_14 { pt3dadd( -85.6129, 17.8485, 44.6478, 0.74 ) }
    dend_14 { pt3dadd( -86.1482, 17.8421, 44.9476, 0.29 ) }
    dend_14 { pt3dadd( -86.7516, 17.7814, 45.2658, 0.22 ) }
    dend_14 { pt3dadd( -87.2237, 17.7045, 45.4981, 0.88 ) }
    dend_14 { pt3dadd( -88.0195, 17.5542, 45.8629, 0.96 ) }
    dend_14 { pt3dadd( -88.6374, 17.4519, 46.1338, 0.96 ) }
    dend_14 { pt3dadd( -89.2591, 17.4073, 46.3882, 1.18 ) }
    dend_14 { pt3dadd( -89.8153, 17.4135, 46.6225, 0.88 ) }
    dend_14 { pt3dadd( -90.3972, 17.4594, 46.8833, 0.29 ) }
    dend_14 { pt3dadd( -91.1507, 17.5474, 47.2383, 0.29 ) }
    dend_14 { pt3dadd( -91.737, 17.6378, 47.5357, 0.29 ) }
    dend_14 { pt3dadd( -92.3235, 17.7354, 47.8498, 0.29 ) }
    dend_14 { pt3dadd( -93.2565, 17.879, 48.3588, 0.22 ) }
    dend_14 { pt3dadd( -93.5827, 17.9068, 48.5364, 1.18 ) }
    dend_14 { pt3dadd( -93.649, 17.9073, 48.5711, 1.18 ) }
    dend_14 { pt3dadd( -94.1245, 17.8781, 48.8123, 1.18 ) }
    dend_14 { pt3dadd( -94.6, 17.8235, 49.0584, 1.18 ) }
    dend_14 { pt3dadd( -95.4149, 17.7044, 49.4675, 1.18 ) }
    dend_14 { pt3dadd( -96.0171, 17.6216, 49.775, 1.11 ) }
    dend_14 { pt3dadd( -96.5877, 17.5529, 50.1336, 1.33 ) }
    dend_14 { pt3dadd( -96.6356, 17.5486, 50.1672, 1.33 ) }
    dend_14 { pt3dadd( -97.319, 17.5113, 50.6922, 0.59 ) }
    dend_14 { pt3dadd( -97.823, 17.5001, 51.1211, 0.52 ) }
    dend_14 { pt3dadd( -98.6275, 17.4915, 51.8441, 1.18 ) }
    dend_14 { pt3dadd( -99.4146, 17.4837, 52.5591, 0.22 ) }
    dend_14 { pt3dadd( -99.8947, 17.4647, 52.9715, 0.66 ) }
    dend_14 { pt3dadd( -100.161, 17.4501, 53.1842, 0.66 ) }
    dend_14 { pt3dadd( -100.808, 17.409, 53.6503, 0.22 ) }
    dend_14 { pt3dadd( -101.448, 17.3744, 54.0654, 0.59 ) }
    dend_14 { pt3dadd( -101.697, 17.3602, 54.2044, 0.59 ) }
    dend_14 { pt3dadd( -102.503, 17.2876, 54.5978, 0.22 ) }
    dend_14 { pt3dadd( -102.558, 17.2807, 54.6253, 0.22 ) }
    dend_14 { pt3dadd( -102.78, 17.2469, 54.7329, 0.22 ) }
    dend_14 { pt3dadd( -103.218, 17.1467, 54.9339, 0.22 ) }
    dend_14 { pt3dadd( -103.799, 16.9884, 55.2128, 0.22 ) }
    dend_14 { pt3dadd( -104.228, 16.8436, 55.4238, 1.03 ) }
    dend_14 { pt3dadd( -104.567, 16.7063, 55.6084, 1.47 ) }
    dend_14 { pt3dadd( -104.917, 16.5559, 55.8009, 1.47 ) }
    dend_14 { pt3dadd( -105.806, 16.1741, 56.3169, 0.22 ) }
    dend_14 { pt3dadd( -105.857, 16.1542, 56.3465, 0.22 ) }
    dend_14 { pt3dadd( -106.315, 15.9938, 56.6105, 0.22 ) }
    dend_14 { pt3dadd( -107.105, 15.7546, 57.0703, 0.59 ) }
    dend_14 { pt3dadd( -107.655, 15.6112, 57.3927, 1.03 ) }
    dend_14 { pt3dadd( -108.419, 15.4433, 57.8369, 1.4 ) }
    dend_14 { pt3dadd( -108.983, 15.3392, 58.1677, 1.69 ) }
    dend_14 { pt3dadd( -109.541, 15.2345, 58.4938, 1.11 ) }
    dend_14 { pt3dadd( -110.252, 15.0982, 58.8993, 0.52 ) }
    dend_14 { pt3dadd( -110.36, 15.0779, 58.9622, 0.52 ) }
    dend_14 { pt3dadd( -110.921, 14.9886, 59.306, 0.44 ) }
    dend_14 { pt3dadd( -111.721, 14.8933, 59.8647, 0.37 ) }
    dend_14 { pt3dadd( -111.774, 14.8899, 59.9057, 0.37 ) }
    dend_14 { pt3dadd( -112.195, 14.8835, 60.245, 0.66 ) }
    dend_14 { pt3dadd( -112.998, 14.8909, 60.9002, 0.66 ) }
    dend_14 { pt3dadd( -113.653, 14.892, 61.4214, 0.66 ) }
    dend_14 { pt3dadd( -114.417, 14.8867, 62.0249, 0.22 ) }
    dend_14 { pt3dadd( -114.882, 14.879, 62.3795, 0.22 ) }
    dend_14 { pt3dadd( -115.472, 14.8344, 62.8112, 0.66 ) }
    dend_14 { pt3dadd( -115.829, 14.7814, 63.0534, 0.81 ) }
    dend_14 { pt3dadd( -116.224, 14.6719, 63.2853, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_14 { pt3dadd( -116.823, 14.453, 63.6393, 0.22 ) }
    dend_14 { pt3dadd( -116.877, 14.4334, 63.6729, 0.22 ) }
    dend_14 { pt3dadd( -117.374, 14.2755, 64.0176, 0.66 ) }
    dend_14 { pt3dadd( -117.856, 14.1737, 64.3675, 0.81 ) }
    dend_14 { pt3dadd( -118.236, 14.1341, 64.6405, 0.96 ) }
    dend_14 { pt3dadd( -119.342, 14.1633, 65.3991, 0.29 ) }
    dend_14 { pt3dadd( -119.97, 14.2654, 65.8387, 1.03 ) }
    dend_14 { pt3dadd( -120.361, 14.3595, 66.1112, 1.47 ) }
    dend_14 { pt3dadd( -120.986, 14.5619, 66.5375, 1.99 ) }
    dend_14 { pt3dadd( -121.421, 14.7057, 66.8259, 1.84 ) }
    dend_14 { pt3dadd( -122.043, 14.8964, 67.2289, 1.11 ) }
    dend_14 { pt3dadd( -122.838, 15.1018, 67.7079, 0.52 ) }
    dend_14 { pt3dadd( -123.479, 15.2158, 68.083, 0.29 ) }
    dend_14 { pt3dadd( -123.943, 15.2623, 68.4385, 0.22 ) }
    dend_14 { pt3dadd( -124.464, 15.263, 68.9179, 0.22 ) }
    dend_14 { pt3dadd( -124.994, 15.2247, 69.4672, 0.22 ) }
    dend_14 { pt3dadd( -125.184, 15.2017, 69.6731, 1.11 ) }
    dend_14 { pt3dadd( -125.461, 15.1662, 69.9669, 1.11 ) }
    dend_14 { pt3dadd( -126.641, 15.0365, 71.2495, 0.37 ) }
    dend_14 { pt3dadd( -127.07, 14.995, 71.7234, 0.37 ) }
    dend_14 { pt3dadd( -127.525, 14.9672, 72.2038, 0.37 ) }
    dend_14 { pt3dadd( -127.976, 14.9383, 72.644, 0.37 ) }
    dend_14 { pt3dadd( -128.232, 14.9208, 72.8741, 0.66 ) }
    dend_14 { pt3dadd( -128.601, 14.9002, 73.1629, 0.66 ) }
    dend_14 { pt3dadd( -129.419, 14.8934, 73.6775, 0.29 ) }
    dend_14 { pt3dadd( -129.865, 14.9148, 73.9671, 0.22 ) }
    dend_14 { pt3dadd( -130.216, 14.9577, 74.1882, 0.59 ) }
    dend_14 { pt3dadd( -130.508, 15.0284, 74.3788, 0.81 ) }
    dend_14 { pt3dadd( -130.826, 15.1328, 74.5788, 0.52 ) }
    dend_14 { pt3dadd( -131.302, 15.3114, 74.8722, 0.44 ) }
    dend_14 { pt3dadd( -131.586, 15.4052, 75.036, 0.44 ) }
    dend_14 { pt3dadd( -132.057, 15.5215, 75.3071, 0.37 ) }
    dend_14 { pt3dadd( -132.753, 15.5996, 75.6995, 0.29 ) }
    dend_14 { pt3dadd( -133.277, 15.6054, 75.9999, 0.29 ) }
    dend_14 { pt3dadd( -133.99, 15.5589, 76.4082, 0.88 ) }
    dend_14 { pt3dadd( -134.641, 15.4745, 76.7664, 1.18 ) }
    dend_14 { pt3dadd( -135.343, 15.4011, 77.1374, 0.81 ) }
    dend_14 { pt3dadd( -136.087, 15.3006, 77.4821, 0.66 ) }
    dend_14 { pt3dadd( -136.645, 15.2142, 77.7017, 0.52 ) }
    dend_14 { pt3dadd( -136.708, 15.2054, 77.7235, 0.52 ) }
    dend_14 { pt3dadd( -137.446, 15.1118, 77.9469, 0.29 ) }
    dend_14 { pt3dadd( -138.791, 14.9628, 78.3441, 1.33 ) }
    dend_14 { pt3dadd( -139.864, 14.8317, 78.6888, 0.29 ) }
    dend_14 { pt3dadd( -140.617, 14.738, 78.9417, 0.81 ) }
    dend_14 { pt3dadd( -141.183, 14.6562, 79.1389, 1.4 ) }
    dend_14 { pt3dadd( -141.666, 14.5765, 79.3234, 1.4 ) }
    dend_14 { pt3dadd( -142.111, 14.4901, 79.514, 1.03 ) }
    dend_14 { pt3dadd( -143.074, 14.2904, 79.9845, 0.37 ) }
    dend_14 { pt3dadd( -143.165, 14.2833, 80.0339, 0.37 ) }
    dend_14 { pt3dadd( -143.686, 14.2789, 80.31, 0.37 ) }
    dend_14 { pt3dadd( -143.763, 14.2805, 80.3478, 0.37 ) }
    dend_14 { pt3dadd( -144.118, 14.289, 80.5074, 0.29 ) }
    dend_14 { pt3dadd( -144.729, 14.2966, 80.7728, 0.29 ) }
    dend_14 { pt3dadd( -145.462, 14.2948, 81.0829, 0.66 ) }
    dend_14 { pt3dadd( -146.028, 14.271, 81.3414, 0.96 ) }
    dend_14 { pt3dadd( -146.82, 14.1841, 81.7373, 1.18 ) }
    dend_14 { pt3dadd( -147.458, 14.0678, 82.0763, 1.47 ) }
    dend_14 { pt3dadd( -148.035, 13.9228, 82.3999, 1.47 ) }
    dend_14 { pt3dadd( -148.936, 13.6206, 82.9304, 1.47 ) }
    dend_14 { pt3dadd( -149.981, 13.2089, 83.6046, 0.29 ) }
    dend_14 { pt3dadd( -150.527, 12.9644, 84.0012, 0.22 ) }
    dend_14 { pt3dadd( -150.926, 12.794, 84.3844, 0.22 ) }
    dend_14 { pt3dadd( -150.972, 12.7758, 84.4351, 0.22 ) }
    dend_14 { pt3dadd( -151.263, 12.6747, 84.8009, 0.44 ) }
    dend_14 { pt3dadd( -151.853, 12.5102, 85.5988, 0.37 ) }
    dend_14 { pt3dadd( -152.704, 12.3553, 86.7285, 1.69 ) }
    dend_14 { pt3dadd( -153.885, 12.2409, 88.1901, 1.11 ) }
    dend_14 { pt3dadd( -154.572, 12.2081, 88.9809, 0.29 ) }
    dend_14 { pt3dadd( -155.159, 12.1969, 89.5917, 1.25 ) }
    dend_14 { pt3dadd( -155.586, 12.2007, 89.9948, 1.4 ) }
    dend_14 { pt3dadd( -156.049, 12.2153, 90.3689, 0.81 ) }
    dend_14 { pt3dadd( -156.487, 12.2452, 90.6649, 0.44 ) }
    dend_14 { pt3dadd( -157.178, 12.2699, 90.9944, 0.44 ) }
    dend_14 { pt3dadd( -157.876, 12.3343, 91.3056, 0.37 ) }
    dend_14 { pt3dadd( -157.956, 12.3416, 91.3354, 0.37 ) }
    dend_14 { pt3dadd( -158.592, 12.4137, 91.5819, 0.29 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 76/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -19.9508, 39.0554, 20.5084, 0.66 ) }
    dend_8 { pt3dadd( -19.0965, 40.293, 20.9438, 0.66 ) }
    dend_8 { pt3dadd( -18.5255, 40.7884, 21.269, 0.66 ) }
    dend_8 { pt3dadd( -17.3965, 41.6086, 21.9387, 0.52 ) }
    dend_8 { pt3dadd( -16.4632, 42.1827, 22.4465, 0.96 ) }
    dend_8 { pt3dadd( -16.0011, 42.4434, 22.6809, 0.96 ) }
    dend_8 { pt3dadd( -14.5438, 43.2165, 23.3311, 0.81 ) }
    dend_8 { pt3dadd( -12.8716, 43.9033, 23.9658, 0.59 ) }
    dend_8 { pt3dadd( -12.8048, 43.927, 23.9871, 0.59 ) }
    dend_8 { pt3dadd( -11.7875, 44.2733, 24.238, 0.52 ) }
    dend_8 { pt3dadd( -11.4516, 44.407, 24.2968, 0.52 ) }
    dend_8 { pt3dadd( -10.4139, 44.9798, 24.402, 0.44 ) }
    dend_8 { pt3dadd( -9.60773, 45.613, 24.3666, 0.44 ) }
    dend_8 { pt3dadd( -9.53185, 45.6928, 24.3552, 0.44 ) }
    dend_8 { pt3dadd( -9.06913, 46.2587, 24.3107, 0.44 ) }
    dend_8 { pt3dadd( -8.9978, 46.3638, 24.3083, 0.44 ) }
    dend_8 { pt3dadd( -8.27524, 47.54, 24.343, 0.44 ) }
    dend_8 { pt3dadd( -8.03173, 47.997, 24.3741, 0.88 ) }
    dend_8 { pt3dadd( -7.71744, 48.6506, 24.4514, 0.88 ) }
    dend_8 { pt3dadd( -7.31353, 49.5543, 24.5806, 1.03 ) }
    dend_8 { pt3dadd( -7.07382, 50.1222, 24.6756, 1.03 ) }
    dend_8 { pt3dadd( -6.64848, 51.1137, 24.9318, 0.37 ) }
    dend_8 { pt3dadd( -6.32477, 51.776, 25.1559, 0.37 ) }
    dend_8 { pt3dadd( -5.75648, 52.6888, 25.5667, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_8 { pt3dadd( -5.14834, 53.4068, 25.9795, 0.37 ) }
    dend_8 { pt3dadd( -5.09479, 53.4476, 26.0095, 0.37 ) }
    dend_8 { pt3dadd( -3.57503, 54.1249, 26.7443, 0.66 ) }
    dend_8 { pt3dadd( -2.59401, 54.3696, 27.1635, 0.59 ) }
    dend_8 { pt3dadd( -1.44255, 54.5555, 27.6844, 0.52 ) }
    dend_8 { pt3dadd( -0.570669, 54.6711, 28.0857, 0.52 ) }
    dend_8 { pt3dadd( 0.101042, 54.8079, 28.4632, 0.52 ) }
    dend_8 { pt3dadd( 1.02249, 55.1288, 29.0547, 0.52 ) }
    dend_8 { pt3dadd( 1.07428, 55.1592, 29.0979, 0.52 ) }
    dend_8 { pt3dadd( 2.16366, 56.0643, 30.1894, 0.88 ) }
    dend_8 { pt3dadd( 2.56418, 56.4747, 30.6372, 1.11 ) }
    dend_8 { pt3dadd( 3.63479, 57.7061, 31.8915, 0.81 ) }
    dend_8 { pt3dadd( 4.00765, 58.1602, 32.3099, 0.88 ) }
    dend_8 { pt3dadd( 5.06441, 59.3922, 33.3239, 0.59 ) }
    dend_8 { pt3dadd( 5.73883, 60.0885, 33.826, 0.59 ) }
    dend_8 { pt3dadd( 5.80508, 60.1455, 33.8591, 0.59 ) }
    dend_8 { pt3dadd( 6.32741, 60.4989, 34.0352, 0.74 ) }
    dend_8 { pt3dadd( 6.95776, 60.8109, 34.1478, 0.74 ) }
    dend_8 { pt3dadd( 8.29809, 61.3175, 34.305, 0.59 ) }
    dend_8 { pt3dadd( 9.28913, 61.6017, 34.3435, 0.59 ) }
    dend_8 { pt3dadd( 10.4428, 61.8466, 34.3709, 0.66 ) }
    dend_8 { pt3dadd( 11.2842, 61.9907, 34.373, 0.66 ) }
    dend_8 { pt3dadd( 12.4139, 62.1584, 34.3637, 1.03 ) }
    dend_8 { pt3dadd( 12.8243, 62.2229, 34.3743, 0.81 ) }
    dend_8 { pt3dadd( 13.7935, 62.4051, 34.4337, 0.66 ) }
    dend_8 { pt3dadd( 14.91, 62.703, 34.5741, 0.66 ) }
    dend_8 { pt3dadd( 16.0501, 63.1528, 34.8315, 0.52 ) }
    dend_8 { pt3dadd( 17.2796, 63.8112, 35.2396, 1.03 ) }
    dend_8 { pt3dadd( 18.3817, 64.5949, 35.7053, 0.74 ) }
    dend_8 { pt3dadd( 18.9116, 65.0455, 35.9765, 0.66 ) }
    dend_8 { pt3dadd( 19.5214, 65.7018, 36.3778, 0.88 ) }
    dend_8 { pt3dadd( 20.1742, 66.5024, 36.8372, 0.74 ) }
    dend_8 { pt3dadd( 20.231, 66.5655, 36.8758, 0.74 ) }
    dend_8 { pt3dadd( 20.871, 67.0384, 37.2086, 0.59 ) }
    dend_8 { pt3dadd( 20.9448, 67.0669, 37.233, 0.59 ) }
    dend_8 { pt3dadd( 21.8981, 67.2541, 37.4958, 0.52 ) }
    dend_8 { pt3dadd( 23.0904, 67.353, 37.7755, 0.44 ) }
    dend_8 { pt3dadd( 24.6058, 67.4552, 38.0593, 0.44 ) }
    dend_8 { pt3dadd( 25.9632, 67.6016, 38.2837, 0.37 ) }
    dend_8 { pt3dadd( 26.7771, 67.7383, 38.3968, 0.74 ) }
    dend_8 { pt3dadd( 26.8623, 67.762, 38.4074, 0.74 ) }
    dend_8 { pt3dadd( 27.6509, 68.0717, 38.4841, 0.81 ) }
    dend_8 { pt3dadd( 28.5965, 68.6716, 38.5552, 0.52 ) }
    dend_8 { pt3dadd( 29.3265, 69.2929, 38.5835, 0.52 ) }
    dend_8 { pt3dadd( 30.121, 70.0928, 38.6235, 0.44 ) }
    dend_8 { pt3dadd( 30.7604, 70.7476, 38.6631, 0.88 ) }
    dend_8 { pt3dadd( 30.8199, 70.804, 38.6679, 0.88 ) }
    dend_8 { pt3dadd( 31.3907, 71.2813, 38.7151, 0.88 ) }
    dend_8 { pt3dadd( 32.2771, 71.9209, 38.8222, 0.44 ) }
    dend_8 { pt3dadd( 32.8603, 72.3067, 38.8955, 0.96 ) }
    dend_8 { pt3dadd( 33.5468, 72.774, 38.9877, 0.96 ) }
    dend_8 { pt3dadd( 34.3006, 73.3204, 39.0862, 0.66 ) }
    dend_8 { pt3dadd( 35.1209, 73.9678, 39.2013, 0.44 ) }
    dend_8 { pt3dadd( 36.2144, 74.9556, 39.3507, 0.29 ) }
    dend_8 { pt3dadd( 36.8409, 75.6145, 39.4254, 0.29 ) }
    dend_8 { pt3dadd( 37.7176, 76.5951, 39.5417, 0.29 ) }
    dend_8 { pt3dadd( 38.1083, 77.0903, 39.5967, 0.66 ) }
    dend_8 { pt3dadd( 38.5101, 77.6864, 39.6412, 0.96 ) }
    dend_8 { pt3dadd( 39.0397, 78.6402, 39.6862, 0.96 ) }
    dend_8 { pt3dadd( 39.2543, 79.1199, 39.6558, 1.33 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 60/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -19.9508, 39.0554, 20.5084, 1.11 ) }
    dend_3 { pt3dadd( -20.4369, 38.9035, 21.669, 1.11 ) }
    dend_3 { pt3dadd( -20.7729, 38.8751, 22.4495, 0.81 ) }
    dend_3 { pt3dadd( -21.1514, 38.8922, 23.3181, 0.96 ) }
    dend_3 { pt3dadd( -21.8656, 39.1532, 25.1853, 1.25 ) }
    dend_3 { pt3dadd( -21.8789, 39.1641, 25.2314, 1.25 ) }
    dend_3 { pt3dadd( -22.0013, 39.3747, 25.8998, 0.59 ) }
    dend_3 { pt3dadd( -22.0394, 39.6891, 26.6342, 0.59 ) }
    dend_3 { pt3dadd( -22.0376, 39.7092, 26.671, 0.59 ) }
    dend_3 { pt3dadd( -21.8492, 40.6228, 27.9047, 0.88 ) }
    dend_3 { pt3dadd( -21.6616, 41.2843, 28.5596, 1.33 ) }
    dend_3 { pt3dadd( -21.4534, 41.8284, 29.1147, 1.62 ) }
    // Section: dend_103, id: dend_103, parent: dend_95 (entry count 72/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( 16.4991, -49.2558, 1.55473, 0.59 ) }
    dend_103 { pt3dadd( 17.8378, -49.0984, 0.885855, 0.59 ) }
    dend_103 { pt3dadd( 18.3895, -49.1158, 0.510204, 0.81 ) }
    dend_103 { pt3dadd( 18.4506, -49.124, 0.463706, 0.81 ) }
    dend_103 { pt3dadd( 19.3808, -49.3352, -0.258999, 0.96 ) }
    dend_103 { pt3dadd( 20.3281, -49.6546, -1.01238, 0.81 ) }
    dend_103 { pt3dadd( 21.2502, -50.046, -1.73384, 1.11 ) }
    dend_103 { pt3dadd( 22.6338, -50.8456, -2.87765, 0.74 ) }
    dend_103 { pt3dadd( 23.2546, -51.2601, -3.34888, 1.03 ) }
    dend_103 { pt3dadd( 23.8501, -51.6609, -3.72144, 1.03 ) }
    dend_103 { pt3dadd( 24.6532, -52.2333, -4.10396, 0.29 ) }
    dend_103 { pt3dadd( 25.3246, -52.7117, -4.33546, 0.66 ) }
    dend_103 { pt3dadd( 25.883, -53.1012, -4.48664, 1.03 ) }
    dend_103 { pt3dadd( 26.9418, -53.8145, -4.74066, 0.96 ) }
    dend_103 { pt3dadd( 28.4151, -54.7781, -5.11674, 0.96 ) }
    dend_103 { pt3dadd( 29.4001, -55.4077, -5.38736, 0.44 ) }
    dend_103 { pt3dadd( 30.2987, -55.9899, -5.64178, 0.44 ) }
    dend_103 { pt3dadd( 31.6659, -56.9235, -6.06058, 0.88 ) }
    dend_103 { pt3dadd( 32.9831, -57.8723, -6.49036, 1.03 ) }
    dend_103 { pt3dadd( 33.0438, -57.9175, -6.51124, 1.03 ) }
    dend_103 { pt3dadd( 33.8412, -58.484, -6.7867, 1.11 ) }
    dend_103 { pt3dadd( 34.9195, -59.1068, -7.12619, 0.74 ) }
    dend_103 { pt3dadd( 35.7394, -59.4898, -7.34088, 0.29 ) }
    dend_103 { pt3dadd( 36.2256, -59.6586, -7.42974, 0.88 ) }
    dend_103 { pt3dadd( 37.0556, -59.8734, -7.5803, 0.81 ) }
    dend_103 { pt3dadd( 38.1179, -60.1114, -7.85514, 0.59 ) }
    dend_103 { pt3dadd( 39.1888, -60.3175, -8.20489, 0.59 ) }
    dend_103 { pt3dadd( 39.2527, -60.3276, -8.2358, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_103 { pt3dadd( 39.9303, -60.4344, -8.6374, 0.59 ) }
    dend_103 { pt3dadd( 40.8355, -60.5763, -9.24832, 0.37 ) }
    dend_103 { pt3dadd( 41.8959, -60.7404, -10.0569, 1.25 ) }
    dend_103 { pt3dadd( 42.538, -60.8288, -10.5696, 1.62 ) }
    dend_103 { pt3dadd( 44.1229, -61.0223, -11.8447, 0.66 ) }
    dend_103 { pt3dadd( 44.8072, -61.0959, -12.363, 0.37 ) }
    dend_103 { pt3dadd( 45.1933, -61.1284, -12.6154, 0.37 ) }
    dend_103 { pt3dadd( 45.5559, -61.1642, -12.7821, 0.29 ) }
    dend_103 { pt3dadd( 46.4101, -61.2784, -12.9969, 1.03 ) }
    dend_103 { pt3dadd( 46.7743, -61.3581, -13.0197, 1.03 ) }
    dend_103 { pt3dadd( 47.2836, -61.5223, -12.962, 1.25 ) }
    dend_103 { pt3dadd( 48.1896, -61.8511, -12.8356, 1.03 ) }
    dend_103 { pt3dadd( 49.1786, -62.208, -12.7025, 0.29 ) }
    dend_103 { pt3dadd( 49.8646, -62.4248, -12.6363, 0.29 ) }
    dend_103 { pt3dadd( 50.8903, -62.7057, -12.64, 0.74 ) }
    dend_103 { pt3dadd( 51.6104, -62.8644, -12.6947, 1.03 ) }
    dend_103 { pt3dadd( 52.334, -63.0089, -12.8795, 1.03 ) }
    dend_103 { pt3dadd( 53.2578, -63.1916, -13.2537, 1.18 ) }
    dend_103 { pt3dadd( 54.5012, -63.4389, -13.9273, 0.29 ) }
    dend_103 { pt3dadd( 55.7115, -63.6767, -14.6975, 1.03 ) }
    dend_103 { pt3dadd( 56.2254, -63.7748, -15.0683, 1.33 ) }
    dend_103 { pt3dadd( 58.1879, -64.1509, -16.5914, 0.44 ) }
    dend_103 { pt3dadd( 58.8917, -64.293, -17.171, 0.44 ) }
    dend_103 { pt3dadd( 59.933, -64.4822, -18.0453, 0.37 ) }
    dend_103 { pt3dadd( 60.6425, -64.57, -18.6069, 1.03 ) }
    dend_103 { pt3dadd( 60.7041, -64.5716, -18.6476, 1.03 ) }
    dend_103 { pt3dadd( 60.9835, -64.5561, -18.7919, 1.03 ) }
    dend_103 { pt3dadd( 61.1887, -64.5372, -18.862, 1.03 ) }
    dend_103 { pt3dadd( 62.2065, -64.5624, -19.3172, 0.59 ) }
    dend_103 { pt3dadd( 62.9318, -64.7326, -19.7039, 0.37 ) }
    dend_103 { pt3dadd( 63.023, -64.7694, -19.7596, 0.37 ) }
    dend_103 { pt3dadd( 63.6084, -65.0195, -20.0995, 0.37 ) }
    dend_103 { pt3dadd( 64.8052, -65.524, -20.7355, 0.37 ) }
    dend_103 { pt3dadd( 65.9067, -65.9618, -21.2685, 0.37 ) }
    dend_103 { pt3dadd( 66.5297, -66.1685, -21.5351, 1.11 ) }
    dend_103 { pt3dadd( 67.3634, -66.3698, -21.8511, 0.88 ) }
    dend_103 { pt3dadd( 68.5231, -66.5725, -22.2304, 0.74 ) }
    dend_103 { pt3dadd( 69.6167, -66.6945, -22.5494, 0.74 ) }
    dend_103 { pt3dadd( 70.4253, -66.7448, -22.7447, 0.66 ) }
    dend_103 { pt3dadd( 71.671, -66.8012, -23.0179, 0.88 ) }
    dend_103 { pt3dadd( 72.8184, -66.8775, -23.3035, 0.29 ) }
    dend_103 { pt3dadd( 73.6665, -66.9488, -23.6041, 0.29 ) }
    dend_103 { pt3dadd( 74.1765, -67.0053, -23.8527, 0.96 ) }
    dend_103 { pt3dadd( 75.0186, -67.1065, -24.3708, 1.33 ) }
    dend_103 { pt3dadd( 75.1583, -67.1227, -24.4709, 1.33 ) }
    dend_103 { pt3dadd( 76.047, -67.2162, -25.191, 1.99 ) }
    dend_103 { pt3dadd( 77.521, -67.2363, -26.458, 0.52 ) }
    dend_103 { pt3dadd( 77.956, -67.1901, -26.8396, 0.52 ) }
    dend_103 { pt3dadd( 78.2803, -67.1214, -27.1212, 0.52 ) }
    dend_103 { pt3dadd( 78.8881, -66.9175, -27.6301, 0.81 ) }
    dend_103 { pt3dadd( 79.1348, -66.8156, -27.8139, 0.81 ) }
    dend_103 { pt3dadd( 79.619, -66.5761, -28.1113, 0.81 ) }
    dend_103 { pt3dadd( 80.0771, -66.3546, -28.3199, 0.81 ) }
    dend_103 { pt3dadd( 80.9239, -66.0167, -28.6918, 0.66 ) }
    dend_103 { pt3dadd( 81.6624, -65.8152, -29.0123, 0.44 ) }
    dend_103 { pt3dadd( 81.7504, -65.8001, -29.0478, 0.44 ) }
    dend_103 { pt3dadd( 83.0439, -65.665, -29.5255, 1.18 ) }
    dend_103 { pt3dadd( 83.8115, -65.6551, -29.7793, 1.55 ) }
    dend_103 { pt3dadd( 85.2061, -65.7168, -30.2662, 0.66 ) }
    dend_103 { pt3dadd( 86.2926, -65.8135, -30.6472, 0.37 ) }
    dend_103 { pt3dadd( 87.2337, -65.9417, -31.0191, 0.37 ) }
    dend_103 { pt3dadd( 87.7068, -66.0146, -31.2208, 1.33 ) }
    dend_103 { pt3dadd( 88.5712, -66.1732, -31.613, 1.55 ) }
    dend_103 { pt3dadd( 89.8734, -66.4103, -32.2675, 0.81 ) }
    dend_103 { pt3dadd( 89.9367, -66.4203, -32.3026, 0.81 ) }
    dend_103 { pt3dadd( 90.9067, -66.5194, -32.8814, 0.37 ) }
    dend_103 { pt3dadd( 91.7825, -66.5892, -33.4236, 0.66 ) }
    dend_103 { pt3dadd( 91.8445, -66.5929, -33.462, 0.66 ) }
    dend_103 { pt3dadd( 92.3589, -66.6095, -33.7466, 1.03 ) }
    dend_103 { pt3dadd( 92.4296, -66.6162, -33.7816, 1.03 ) }
    dend_103 { pt3dadd( 93.1126, -66.7207, -34.1442, 1.18 ) }
    dend_103 { pt3dadd( 93.182, -66.7356, -34.1845, 1.18 ) }
    dend_103 { pt3dadd( 94.2724, -67.0513, -34.8415, 1.03 ) }
    dend_103 { pt3dadd( 95.0323, -67.3407, -35.3365, 0.37 ) }
    dend_103 { pt3dadd( 96.0142, -67.7819, -35.9956, 0.66 ) }
    dend_103 { pt3dadd( 96.8664, -68.1991, -36.5726, 0.96 ) }
    dend_103 { pt3dadd( 97.8918, -68.7162, -37.2694, 0.88 ) }
    dend_103 { pt3dadd( 98.6256, -69.08, -37.746, 0.66 ) }
    dend_103 { pt3dadd( 100.132, -69.7907, -38.7011, 0.29 ) }
    dend_103 { pt3dadd( 100.652, -70.0073, -39.0268, 0.66 ) }
    dend_103 { pt3dadd( 100.775, -70.0491, -39.1008, 0.66 ) }
    dend_103 { pt3dadd( 101.61, -70.275, -39.5896, 0.96 ) }
    dend_103 { pt3dadd( 102.209, -70.3965, -39.9087, 0.96 ) }
    dend_103 { pt3dadd( 103.261, -70.5247, -40.5051, 0.52 ) }
    dend_103 { pt3dadd( 103.957, -70.5721, -40.9001, 0.52 ) }
    dend_103 { pt3dadd( 104.983, -70.6251, -41.4987, 1.55 ) }
    dend_103 { pt3dadd( 105.488, -70.6507, -41.7957, 1.77 ) }
    dend_103 { pt3dadd( 106.673, -70.6997, -42.481, 0.81 ) }
    dend_103 { pt3dadd( 108.343, -70.7274, -43.3955, 0.74 ) }
    dend_103 { pt3dadd( 108.446, -70.7265, -43.447, 0.74 ) }
    dend_103 { pt3dadd( 109.112, -70.6708, -43.8353, 1.25 ) }
    dend_103 { pt3dadd( 109.234, -70.6483, -43.9125, 1.25 ) }
    dend_103 { pt3dadd( 109.851, -70.5046, -44.3645, 1.25 ) }
    dend_103 { pt3dadd( 110.56, -70.3208, -44.925, 0.96 ) }
    dend_103 { pt3dadd( 110.616, -70.3102, -44.9715, 0.96 ) }
    dend_103 { pt3dadd( 112.31, -70.2198, -46.6548, 0.29 ) }
    dend_103 { pt3dadd( 112.689, -70.2364, -47.056, 0.29 ) }
    dend_103 { pt3dadd( 113.626, -70.3266, -48.0681, 0.88 ) }
    dend_103 { pt3dadd( 113.941, -70.3627, -48.4079, 1.33 ) }
    dend_103 { pt3dadd( 115.054, -70.5067, -49.5786, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_103 { pt3dadd( 116.608, -70.6661, -51.0837, 0.59 ) }
    dend_103 { pt3dadd( 117.434, -70.718, -51.7865, 0.37 ) }
    dend_103 { pt3dadd( 117.672, -70.7193, -51.9756, 0.37 ) }
    dend_103 { pt3dadd( 118.465, -70.711, -52.5587, 0.37 ) }
    dend_103 { pt3dadd( 118.584, -70.7085, -52.6414, 0.37 ) }
    dend_103 { pt3dadd( 119.718, -70.6641, -53.3199, 1.84 ) }
    dend_103 { pt3dadd( 121.411, -70.6055, -54.1993, 0.88 ) }
    dend_103 { pt3dadd( 122.236, -70.5966, -54.627, 0.59 ) }
    dend_103 { pt3dadd( 123.629, -70.6572, -55.3091, 0.88 ) }
    dend_103 { pt3dadd( 123.707, -70.6654, -55.3462, 0.88 ) }
    dend_103 { pt3dadd( 124.339, -70.7577, -55.6541, 0.74 ) }
    dend_103 { pt3dadd( 125.05, -70.8802, -56.0879, 0.22 ) }
    dend_103 { pt3dadd( 125.857, -70.9753, -56.6648, 0.22 ) }
    dend_103 { pt3dadd( 126.471, -71.0043, -57.1596, 0.22 ) }
    dend_103 { pt3dadd( 127.427, -70.9876, -58.0478, 1.33 ) }
    dend_103 { pt3dadd( 128.445, -70.9473, -59.0318, 1.4 ) }
    dend_103 { pt3dadd( 130.326, -70.8504, -60.9693, 0.29 ) }
    dend_103 { pt3dadd( 131.162, -70.8017, -61.8705, 1.77 ) }
    dend_103 { pt3dadd( 131.97, -70.7444, -62.7739, 2.36 ) }
    dend_103 { pt3dadd( 133.599, -70.563, -64.6244, 0.44 ) }
    dend_103 { pt3dadd( 134.502, -70.439, -65.622, 0.37 ) }
    dend_103 { pt3dadd( 135.758, -70.2835, -66.9526, 0.37 ) }
    dend_103 { pt3dadd( 135.802, -70.2808, -66.9953, 0.37 ) }
    dend_103 { pt3dadd( 136.785, -70.3144, -67.9493, 0.81 ) }
    dend_103 { pt3dadd( 136.849, -70.3238, -68.0065, 0.81 ) }
    dend_103 { pt3dadd( 137.501, -70.5052, -68.4901, 0.81 ) }
    dend_103 { pt3dadd( 138.776, -70.9759, -69.3379, 0.29 ) }
    dend_103 { pt3dadd( 139.344, -71.1793, -69.6205, 0.29 ) }
    dend_103 { pt3dadd( 140.379, -71.5108, -70.0658, 1.55 ) }
    dend_103 { pt3dadd( 141.091, -71.7278, -70.3218, 2.14 ) }
    dend_103 { pt3dadd( 141.842, -71.8878, -70.5587, 2.36 ) }
    dend_103 { pt3dadd( 142.642, -72.0053, -70.7758, 1.62 ) }
    dend_103 { pt3dadd( 144.312, -72.1569, -71.1475, 0.22 ) }
    dend_103 { pt3dadd( 145.081, -72.2034, -71.3098, 0.96 ) }
    dend_103 { pt3dadd( 145.871, -72.2507, -71.4685, 0.96 ) }
    dend_103 { pt3dadd( 148.064, -72.4414, -71.915, 0.22 ) }
    dend_103 { pt3dadd( 148.936, -72.547, -72.0936, 1.11 ) }
    dend_103 { pt3dadd( 149.706, -72.6857, -72.248, 1.77 ) }
    dend_103 { pt3dadd( 150.17, -72.7924, -72.3125, 1.77 ) }
    dend_103 { pt3dadd( 151.588, -73.1301, -72.2996, 0.29 ) }
    dend_103 { pt3dadd( 152.479, -73.3478, -72.1947, 0.29 ) }
    dend_103 { pt3dadd( 152.607, -73.3825, -72.1664, 0.29 ) }
    dend_103 { pt3dadd( 153.382, -73.5803, -71.9503, 0.29 ) }
    dend_103 { pt3dadd( 155.271, -74.0645, -71.349, 1.25 ) }
    dend_103 { pt3dadd( 157.467, -74.6, -70.5974, 0.22 ) }
    dend_103 { pt3dadd( 158.105, -74.7395, -70.3693, 0.59 ) }
    dend_103 { pt3dadd( 158.207, -74.7594, -70.3366, 0.59 ) }
    dend_103 { pt3dadd( 158.651, -74.8417, -70.2184, 0.59 ) }
    dend_103 { pt3dadd( 159.567, -75.0237, -70.0686, 0.22 ) }
    dend_103 { pt3dadd( 160.259, -75.2124, -70.0639, 0.22 ) }
    dend_103 { pt3dadd( 161.104, -75.4718, -70.1546, 1.18 ) }
    dend_103 { pt3dadd( 161.825, -75.6929, -70.2322, 1.55 ) }
    dend_103 { pt3dadd( 162.276, -75.838, -70.281, 1.55 ) }
    dend_103 { pt3dadd( 163.677, -76.3105, -70.4343, 0.15 ) }
    dend_103 { pt3dadd( 164.307, -76.5409, -70.5039, 0.66 ) }
    dend_103 { pt3dadd( 164.696, -76.7041, -70.5886, 0.66 ) }
    dend_103 { pt3dadd( 164.764, -76.7374, -70.609, 0.66 ) }
    dend_103 { pt3dadd( 165.914, -77.3523, -71.011, 0.22 ) }
    dend_103 { pt3dadd( 166.638, -77.7617, -71.3082, 0.88 ) }
    dend_103 { pt3dadd( 167.359, -78.1827, -71.6378, 1.18 ) }
    dend_103 { pt3dadd( 169.027, -79.1676, -72.4647, 0.22 ) }
    dend_103 { pt3dadd( 170.078, -79.819, -73.0378, 0.22 ) }
    dend_103 { pt3dadd( 170.453, -80.0585, -73.2547, 0.22 ) }
    dend_103 { pt3dadd( 171.141, -80.4841, -73.6669, 1.4 ) }
    dend_103 { pt3dadd( 171.754, -80.8408, -74.0323, 1.77 ) }
    dend_103 { pt3dadd( 173.305, -81.6892, -74.9133, 0.22 ) }
    dend_103 { pt3dadd( 174.144, -82.0945, -75.2958, 0.74 ) }
    dend_103 { pt3dadd( 174.42, -82.2044, -75.4112, 0.74 ) }
    dend_103 { pt3dadd( 175.753, -82.7006, -75.9479, 0.22 ) }
    dend_103 { pt3dadd( 176.549, -82.9677, -76.2403, 1.11 ) }
    dend_103 { pt3dadd( 176.982, -83.0931, -76.3865, 1.4 ) }
    dend_103 { pt3dadd( 178.749, -83.4977, -76.8337, 0.22 ) }
    dend_103 { pt3dadd( 179.913, -83.7353, -77.0643, 1.92 ) }
    // Section: dend_96, id: dend_96, parent: dend_95 (entry count 73/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( 16.4991, -49.2558, 1.55473, 0.74 ) }
    dend_96 { pt3dadd( 19.2836, -51.1118, 1.81937, 0.74 ) }
    dend_96 { pt3dadd( 20.7929, -52.0826, 1.87923, 0.74 ) }
    dend_96 { pt3dadd( 20.8653, -52.1327, 1.88296, 0.74 ) }
    dend_96 { pt3dadd( 21.9076, -52.9261, 1.94317, 0.52 ) }
    dend_96 { pt3dadd( 23.087, -53.8721, 2.01441, 0.81 ) }
    dend_96 { pt3dadd( 24.0614, -54.7344, 2.07521, 0.37 ) }
    dend_96 { pt3dadd( 25.1003, -55.7279, 2.02994, 0.74 ) }
    dend_96 { pt3dadd( 25.8712, -56.5684, 2.05343, 0.96 ) }
    dend_96 { pt3dadd( 26.4778, -57.2424, 2.15869, 1.18 ) }
    dend_96 { pt3dadd( 26.5353, -57.3064, 2.17568, 1.18 ) }
    dend_96 { pt3dadd( 27.4426, -58.2893, 2.52752, 0.81 ) }
    dend_96 { pt3dadd( 28.5356, -59.3188, 2.93424, 0.81 ) }
    dend_96 { pt3dadd( 29.6918, -60.1911, 3.31354, 0.81 ) }
    dend_96 { pt3dadd( 31.4064, -61.1756, 3.79302, 0.59 ) }
    dend_96 { pt3dadd( 32.1917, -61.5136, 3.97972, 0.81 ) }
    dend_96 { pt3dadd( 32.2748, -61.5403, 3.99543, 0.81 ) }
    dend_96 { pt3dadd( 33.6953, -61.8084, 4.17694, 1.03 ) }
    dend_96 { pt3dadd( 33.7954, -61.8204, 4.18189, 1.03 ) }
    dend_96 { pt3dadd( 35.333, -61.9794, 4.15385, 0.59 ) }
    dend_96 { pt3dadd( 36.3824, -62.1183, 4.08575, 0.88 ) }
    dend_96 { pt3dadd( 37.5938, -62.3091, 4.0684, 0.59 ) }
    dend_96 { pt3dadd( 39.0163, -62.566, 4.0969, 0.44 ) }
    dend_96 { pt3dadd( 40.5006, -62.8814, 4.17269, 0.44 ) }
    dend_96 { pt3dadd( 41.9237, -63.2258, 4.27644, 0.59 ) }
    dend_96 { pt3dadd( 43.2031, -63.5806, 4.40767, 0.96 ) }
    dend_96 { pt3dadd( 44.6662, -64.0887, 4.63325, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_96 { pt3dadd( 44.7622, -64.1307, 4.65182, 1.18 ) }
    dend_96 { pt3dadd( 45.4167, -64.4768, 4.79666, 1.18 ) }
    dend_96 { pt3dadd( 46.4728, -65.0944, 5.04538, 0.44 ) }
    dend_96 { pt3dadd( 46.5391, -65.1343, 5.0615, 0.44 ) }
    dend_96 { pt3dadd( 48.3349, -66.2056, 5.4322, 0.44 ) }
    dend_96 { pt3dadd( 49.572, -66.9132, 5.62687, 0.44 ) }
    dend_96 { pt3dadd( 50.3189, -67.313, 5.74351, 0.81 ) }
    dend_96 { pt3dadd( 50.4528, -67.3784, 5.76353, 0.81 ) }
    dend_96 { pt3dadd( 51.7011, -67.9219, 5.93561, 0.81 ) }
    dend_96 { pt3dadd( 51.8303, -67.9698, 5.9413, 0.81 ) }
    dend_96 { pt3dadd( 52.8156, -68.2602, 5.83225, 0.81 ) }
    dend_96 { pt3dadd( 53.8636, -68.518, 5.57772, 1.18 ) }
    dend_96 { pt3dadd( 54.6902, -68.7043, 5.27729, 1.4 ) }
    dend_96 { pt3dadd( 54.8085, -68.7269, 5.22707, 1.4 ) }
    dend_96 { pt3dadd( 56.5385, -68.9978, 4.41935, 0.96 ) }
    dend_96 { pt3dadd( 57.791, -69.1553, 3.84981, 0.96 ) }
    dend_96 { pt3dadd( 59.1794, -69.3268, 3.28243, 0.44 ) }
    dend_96 { pt3dadd( 60.3857, -69.4864, 2.86772, 0.44 ) }
    dend_96 { pt3dadd( 61.9025, -69.7412, 2.50088, 0.44 ) }
    dend_96 { pt3dadd( 62.9554, -69.9766, 2.35702, 0.52 ) }
    dend_96 { pt3dadd( 64.0592, -70.3019, 2.33224, 1.47 ) }
    dend_96 { pt3dadd( 65.5351, -70.8563, 2.42466, 0.88 ) }
    dend_96 { pt3dadd( 66.8452, -71.5058, 2.54004, 0.59 ) }
    dend_96 { pt3dadd( 68.1217, -72.317, 2.61227, 0.29 ) }
    dend_96 { pt3dadd( 68.9703, -72.9785, 2.60351, 0.29 ) }
    dend_96 { pt3dadd( 69.5602, -73.5042, 2.55445, 0.96 ) }
    dend_96 { pt3dadd( 70.1981, -74.142, 2.45383, 1.25 ) }
    dend_96 { pt3dadd( 71.4065, -75.4645, 2.16239, 0.66 ) }
    dend_96 { pt3dadd( 72.476, -76.721, 1.86328, 0.66 ) }
    dend_96 { pt3dadd( 73.1682, -77.5421, 1.67711, 1.33 ) }
    dend_96 { pt3dadd( 73.9658, -78.4954, 1.51102, 0.59 ) }
    dend_96 { pt3dadd( 74.6441, -79.3252, 1.41506, 0.52 ) }
    dend_96 { pt3dadd( 75.5455, -80.4315, 1.32155, 0.52 ) }
    dend_96 { pt3dadd( 76.5672, -81.6343, 1.26501, 0.52 ) }
    dend_96 { pt3dadd( 77.6117, -82.8031, 1.2189, 0.88 ) }
    dend_96 { pt3dadd( 78.3565, -83.5411, 1.17114, 1.25 ) }
    dend_96 { pt3dadd( 79.2428, -84.2748, 1.09447, 1.25 ) }
    dend_96 { pt3dadd( 80.3021, -84.9967, 0.991744, 0.59 ) }
    dend_96 { pt3dadd( 81.2664, -85.5343, 0.891502, 0.29 ) }
    dend_96 { pt3dadd( 81.3379, -85.5675, 0.883669, 0.29 ) }
    dend_96 { pt3dadd( 82.5529, -86.0933, 0.684333, 0.29 ) }
    dend_96 { pt3dadd( 83.7382, -86.5765, 0.477362, 0.74 ) }
    dend_96 { pt3dadd( 84.7794, -86.9585, 0.296982, 1.03 ) }
    dend_96 { pt3dadd( 85.2967, -87.1448, 0.215429, 1.03 ) }
    dend_96 { pt3dadd( 86.1454, -87.4633, 0.081211, 1.18 ) }
    dend_96 { pt3dadd( 87.4018, -87.9653, -0.12498, 0.37 ) }
    dend_96 { pt3dadd( 88.6132, -88.4816, -0.33525, 0.29 ) }
    dend_96 { pt3dadd( 89.6039, -88.877, -0.517949, 0.29 ) }
    dend_96 { pt3dadd( 91.1715, -89.5131, -0.81045, 0.29 ) }
    dend_96 { pt3dadd( 91.2515, -89.5485, -0.823702, 0.29 ) }
    dend_96 { pt3dadd( 92.7005, -90.263, -1.01795, 1.33 ) }
    dend_96 { pt3dadd( 92.7835, -90.3086, -1.02536, 1.33 ) }
    dend_96 { pt3dadd( 93.4656, -90.7487, -1.07825, 1.69 ) }
    dend_96 { pt3dadd( 94.4813, -91.4769, -1.14672, 1.11 ) }
    dend_96 { pt3dadd( 95.6925, -92.3904, -1.21556, 0.59 ) }
    dend_96 { pt3dadd( 97.0719, -93.4349, -1.32053, 0.37 ) }
    dend_96 { pt3dadd( 97.9625, -94.119, -1.43529, 1.11 ) }
    dend_96 { pt3dadd( 98.9199, -94.8547, -1.60378, 1.11 ) }
    dend_96 { pt3dadd( 98.9892, -94.9068, -1.61929, 1.11 ) }
    dend_96 { pt3dadd( 99.8715, -95.5512, -1.86108, 0.88 ) }
    dend_96 { pt3dadd( 100.943, -96.2988, -2.20989, 0.88 ) }
    dend_96 { pt3dadd( 102.112, -97.0064, -2.62946, 0.59 ) }
    dend_96 { pt3dadd( 102.202, -97.0522, -2.66273, 0.59 ) }
    dend_96 { pt3dadd( 103.211, -97.4335, -3.00223, 0.37 ) }
    dend_96 { pt3dadd( 103.663, -97.5577, -3.13357, 0.37 ) }
    dend_96 { pt3dadd( 104.388, -97.658, -3.29599, 0.37 ) }
    dend_96 { pt3dadd( 105.397, -97.7131, -3.42774, 0.74 ) }
    dend_96 { pt3dadd( 105.608, -97.7266, -3.44409, 0.74 ) }
    dend_96 { pt3dadd( 106.743, -97.8365, -3.53095, 0.74 ) }
    dend_96 { pt3dadd( 106.931, -97.8701, -3.54993, 0.74 ) }
    dend_96 { pt3dadd( 107.666, -98.1511, -3.6433, 0.74 ) }
    dend_96 { pt3dadd( 108.615, -98.8391, -3.79069, 0.29 ) }
    dend_96 { pt3dadd( 109.33, -99.5959, -3.92069, 0.29 ) }
    dend_96 { pt3dadd( 109.384, -99.6645, -3.9309, 0.29 ) }
    dend_96 { pt3dadd( 110.072, -100.639, -4.06519, 0.52 ) }
    dend_96 { pt3dadd( 110.785, -101.571, -4.19515, 0.59 ) }
    dend_96 { pt3dadd( 111.484, -102.387, -4.31282, 0.37 ) }
    dend_96 { pt3dadd( 111.563, -102.455, -4.32555, 0.37 ) }
    dend_96 { pt3dadd( 112.539, -103.05, -4.46355, 0.37 ) }
    dend_96 { pt3dadd( 113.314, -103.438, -4.55867, 0.74 ) }
    dend_96 { pt3dadd( 114.338, -103.855, -4.66697, 1.03 ) }
    dend_96 { pt3dadd( 115.091, -104.142, -4.748, 1.25 ) }
    dend_96 { pt3dadd( 116.339, -104.638, -4.88153, 0.52 ) }
    dend_96 { pt3dadd( 117.482, -105.147, -5.04652, 0.29 ) }
    dend_96 { pt3dadd( 118.7, -105.799, -5.26276, 0.66 ) }
    dend_96 { pt3dadd( 118.792, -105.861, -5.28635, 0.66 ) }
    dend_96 { pt3dadd( 119.751, -106.654, -5.58794, 0.96 ) }
    dend_96 { pt3dadd( 120.395, -107.293, -5.85884, 1.33 ) }
    dend_96 { pt3dadd( 121.199, -108.235, -6.27451, 1.4 ) }
    dend_96 { pt3dadd( 121.86, -109.099, -6.67397, 0.74 ) }
    dend_96 { pt3dadd( 123.048, -110.782, -7.47378, 0.37 ) }
    dend_96 { pt3dadd( 123.845, -112.048, -8.08881, 0.37 ) }
    dend_96 { pt3dadd( 124.523, -113.316, -8.71696, 0.37 ) }
    dend_96 { pt3dadd( 124.774, -113.901, -8.98976, 1.03 ) }
    dend_96 { pt3dadd( 124.957, -114.393, -9.19347, 1.03 ) }
    dend_96 { pt3dadd( 124.988, -114.483, -9.22924, 1.03 ) }
    dend_96 { pt3dadd( 125.394, -115.677, -9.63334, 0.37 ) }
    dend_96 { pt3dadd( 125.468, -115.857, -9.6919, 0.37 ) }
    dend_96 { pt3dadd( 125.961, -116.621, -9.89141, 0.37 ) }
    dend_96 { pt3dadd( 126.79, -117.493, -10.1255, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_96 { pt3dadd( 127.311, -117.911, -10.3228, 0.88 ) }
    dend_96 { pt3dadd( 127.673, -118.193, -10.4749, 1.33 ) }
    dend_96 { pt3dadd( 127.736, -118.241, -10.5021, 1.33 ) }
    dend_96 { pt3dadd( 128.28, -118.724, -10.7682, 1.47 ) }
    dend_96 { pt3dadd( 129.022, -119.52, -11.1895, 0.81 ) }
    dend_96 { pt3dadd( 130.135, -121.06, -11.9386, 0.22 ) }
    dend_96 { pt3dadd( 130.681, -122.012, -12.3351, 0.22 ) }
    dend_96 { pt3dadd( 130.891, -122.505, -12.4935, 0.96 ) }
    dend_96 { pt3dadd( 131.202, -123.451, -12.7242, 1.18 ) }
    dend_96 { pt3dadd( 131.373, -124.138, -12.838, 0.88 ) }
    dend_96 { pt3dadd( 131.395, -124.228, -12.8461, 0.88 ) }
    dend_96 { pt3dadd( 131.697, -125.199, -12.8461, 0.66 ) }
    dend_96 { pt3dadd( 132.192, -126.286, -12.8585, 0.52 ) }
    dend_96 { pt3dadd( 132.521, -126.852, -12.8706, 0.44 ) }
    dend_96 { pt3dadd( 133.08, -127.635, -12.8955, 0.37 ) }
    dend_96 { pt3dadd( 133.686, -128.385, -12.9249, 0.22 ) }
    dend_96 { pt3dadd( 134.159, -128.932, -12.9488, 0.22 ) }
    dend_96 { pt3dadd( 134.7, -129.502, -12.9775, 0.96 ) }
    dend_96 { pt3dadd( 135.225, -130.045, -13.0056, 1.25 ) }
    dend_96 { pt3dadd( 135.907, -130.728, -13.0427, 1.25 ) }
    dend_96 { pt3dadd( 136.521, -131.341, -13.0761, 1.25 ) }
    dend_96 { pt3dadd( 137.138, -131.942, -13.11, 0.96 ) }
    dend_96 { pt3dadd( 137.835, -132.635, -13.1481, 0.29 ) }
    dend_96 { pt3dadd( 138.076, -132.878, -13.1611, 0.29 ) }
    dend_96 { pt3dadd( 138.955, -133.853, -13.2065, 0.29 ) }
    dend_96 { pt3dadd( 139.068, -134.009, -13.2116, 0.29 ) }
    dend_96 { pt3dadd( 139.605, -135.031, -13.28, 0.29 ) }
    dend_96 { pt3dadd( 140.026, -136.142, -13.3796, 0.59 ) }
    dend_96 { pt3dadd( 140.239, -136.873, -13.4569, 1.11 ) }
    dend_96 { pt3dadd( 140.469, -137.855, -13.5707, 1.11 ) }
    dend_96 { pt3dadd( 140.687, -139.01, -13.7148, 0.66 ) }
    dend_96 { pt3dadd( 140.897, -140.112, -13.8671, 0.29 ) }
    dend_96 { pt3dadd( 140.916, -140.191, -13.8804, 0.29 ) }
    dend_96 { pt3dadd( 141.375, -140.988, -14.0116, 0.29 ) }
    dend_96 { pt3dadd( 141.442, -141.044, -14.0171, 0.29 ) }
    dend_96 { pt3dadd( 142.197, -141.479, -14.0132, 0.29 ) }
    dend_96 { pt3dadd( 142.28, -141.524, -14.0087, 0.29 ) }
    dend_96 { pt3dadd( 143.28, -142.135, -13.9095, 0.29 ) }
    dend_96 { pt3dadd( 144.194, -142.792, -13.8172, 0.66 ) }
    dend_96 { pt3dadd( 144.727, -143.263, -13.7637, 0.88 ) }
    dend_96 { pt3dadd( 145.438, -144.02, -13.6953, 0.37 ) }
    dend_96 { pt3dadd( 146.134, -144.902, -13.6248, 0.66 ) }
    dend_96 { pt3dadd( 146.645, -145.605, -13.5774, 1.18 ) }
    dend_96 { pt3dadd( 146.974, -146.059, -13.5684, 1.4 ) }
    dend_96 { pt3dadd( 147.731, -147.073, -13.5987, 1.03 ) }
    dend_96 { pt3dadd( 148.38, -147.896, -13.6351, 0.66 ) }
    dend_96 { pt3dadd( 148.933, -148.547, -13.6749, 0.52 ) }
    dend_96 { pt3dadd( 149.565, -149.254, -13.7288, 0.44 ) }
    dend_96 { pt3dadd( 150.653, -150.456, -13.8338, 0.29 ) }
    dend_96 { pt3dadd( 150.715, -150.524, -13.8405, 0.29 ) }
    dend_96 { pt3dadd( 151.141, -151.024, -13.9095, 0.29 ) }
    dend_96 { pt3dadd( 151.683, -151.819, -14.0258, 0.88 ) }
    dend_96 { pt3dadd( 152.001, -152.412, -14.1326, 1.4 ) }
    dend_96 { pt3dadd( 152.305, -153.113, -14.259, 1.47 ) }
    dend_96 { pt3dadd( 152.366, -153.268, -14.285, 1.47 ) }
    dend_96 { pt3dadd( 153.037, -154.917, -14.5654, 0.29 ) }
    dend_96 { pt3dadd( 153.605, -156.279, -14.7989, 0.29 ) }
    dend_96 { pt3dadd( 154.194, -157.594, -14.9567, 0.29 ) }
    dend_96 { pt3dadd( 154.71, -158.602, -15.0259, 0.29 ) }
    dend_96 { pt3dadd( 155.284, -159.595, -15.0447, 1.18 ) }
    dend_96 { pt3dadd( 155.785, -160.39, -15.0171, 1.62 ) }
    dend_96 { pt3dadd( 156.231, -161.023, -14.9735, 1.62 ) }
    dend_96 { pt3dadd( 157.202, -162.403, -14.8639, 0.44 ) }
    dend_96 { pt3dadd( 158.062, -163.699, -14.814, 0.22 ) }
    dend_96 { pt3dadd( 158.419, -164.255, -14.8335, 0.59 ) }
    dend_96 { pt3dadd( 158.852, -164.93, -14.9072, 0.74 ) }
    dend_96 { pt3dadd( 159.632, -166.071, -15.1225, 0.29 ) }
    dend_96 { pt3dadd( 160.485, -167.264, -15.4526, 0.29 ) }
    dend_96 { pt3dadd( 161.414, -168.475, -15.8466, 0.29 ) }
    dend_96 { pt3dadd( 161.908, -169.039, -15.997, 0.66 ) }
    dend_96 { pt3dadd( 162.452, -169.628, -16.0992, 0.88 ) }
    dend_96 { pt3dadd( 163.227, -170.388, -16.141, 1.18 ) }
    dend_96 { pt3dadd( 163.298, -170.458, -16.1334, 1.18 ) }
    dend_96 { pt3dadd( 164.316, -171.628, -15.9104, 0.66 ) }
    dend_96 { pt3dadd( 164.873, -172.623, -15.6831, 0.22 ) }
    dend_96 { pt3dadd( 165.212, -173.572, -15.5232, 0.22 ) }
    dend_96 { pt3dadd( 165.327, -174.03, -15.4684, 0.88 ) }
    dend_96 { pt3dadd( 165.549, -175.076, -15.3931, 0.88 ) }
    dend_96 { pt3dadd( 165.831, -176.444, -15.3515, 0.59 ) }
    dend_96 { pt3dadd( 166.164, -177.815, -15.3843, 0.74 ) }
    dend_96 { pt3dadd( 166.419, -178.6, -15.4122, 1.25 ) }
    dend_96 { pt3dadd( 166.812, -179.46, -15.4518, 1.25 ) }
    dend_96 { pt3dadd( 167.599, -180.86, -15.5268, 0.22 ) }
    dend_96 { pt3dadd( 167.683, -180.972, -15.5342, 0.22 ) }
    dend_96 { pt3dadd( 168.775, -182.164, -15.6263, 0.22 ) }
    dend_96 { pt3dadd( 169.478, -182.839, -15.6807, 1.18 ) }
    dend_96 { pt3dadd( 170.345, -183.618, -15.7393, 1.55 ) }
    dend_96 { pt3dadd( 170.431, -183.69, -15.7455, 1.55 ) }
    dend_96 { pt3dadd( 171.527, -184.513, -15.9492, 0.59 ) }
    dend_96 { pt3dadd( 172.568, -185.237, -16.2334, 0.29 ) }
    dend_96 { pt3dadd( 173.223, -185.656, -16.4615, 1.11 ) }
    dend_96 { pt3dadd( 173.31, -185.708, -16.4951, 1.11 ) }
    dend_96 { pt3dadd( 174.102, -186.222, -16.7525, 0.74 ) }
    dend_96 { pt3dadd( 176.003, -187.574, -17.2279, 0.22 ) }
    dend_96 { pt3dadd( 176.803, -188.185, -17.3763, 0.22 ) }
    dend_96 { pt3dadd( 177.638, -188.847, -17.4678, 0.96 ) }
    dend_96 { pt3dadd( 178.237, -189.365, -17.4891, 0.96 ) }
    dend_96 { pt3dadd( 179.839, -190.883, -17.4191, 0.22 ) }
    dend_96 { pt3dadd( 180.557, -191.643, -17.2604, 0.22 ) }
    dend_96 { pt3dadd( 180.862, -191.986, -17.1129, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_96 { pt3dadd( 181.42, -192.641, -16.7952, 1.03 ) }
    dend_96 { pt3dadd( 181.834, -193.125, -16.4944, 0.74 ) }
    dend_96 { pt3dadd( 181.89, -193.188, -16.452, 0.74 ) }
    dend_96 { pt3dadd( 183.078, -194.425, -15.6526, 0.22 ) }
    dend_96 { pt3dadd( 183.895, -195.25, -15.0986, 1.11 ) }
    dend_96 { pt3dadd( 184.582, -195.908, -14.6644, 1.55 ) }
    dend_96 { pt3dadd( 186.053, -197.274, -13.7808, 0.88 ) }
    dend_96 { pt3dadd( 187.1, -198.155, -13.2437, 0.29 ) }
    dend_96 { pt3dadd( 188.506, -199.239, -12.6586, 0.29 ) }
    dend_96 { pt3dadd( 188.591, -199.297, -12.6355, 0.29 ) }
    dend_96 { pt3dadd( 189.544, -199.84, -12.5104, 0.44 ) }
    dend_96 { pt3dadd( 189.625, -199.876, -12.5073, 0.44 ) }
    dend_96 { pt3dadd( 190.895, -200.317, -12.5967, 0.44 ) }
    dend_96 { pt3dadd( 190.998, -200.347, -12.604, 0.44 ) }
    dend_96 { pt3dadd( 191.801, -200.565, -12.6621, 0.74 ) }
    dend_96 { pt3dadd( 192.993, -200.923, -12.7473, 1.25 ) }
    dend_96 { pt3dadd( 193.958, -201.253, -12.8153, 1.47 ) }
    dend_96 { pt3dadd( 194.997, -201.679, -12.8868, 1.55 ) }
    dend_96 { pt3dadd( 195.675, -202.009, -12.9322, 1.55 ) }
    dend_96 { pt3dadd( 196.793, -202.571, -13.0066, 0.74 ) }
    dend_96 { pt3dadd( 197.637, -203.038, -13.0746, 0.81 ) }
    dend_96 { pt3dadd( 198.214, -203.387, -13.1386, 0.81 ) }
    dend_96 { pt3dadd( 199.269, -204.071, -13.2815, 0.29 ) }
    dend_96 { pt3dadd( 200.721, -205.037, -13.5082, 0.29 ) }
    dend_96 { pt3dadd( 201.357, -205.467, -13.6186, 0.66 ) }
    dend_96 { pt3dadd( 202.409, -206.228, -13.7418, 0.29 ) }
    dend_96 { pt3dadd( 203.18, -206.795, -13.7879, 1.33 ) }
    dend_96 { pt3dadd( 203.277, -206.873, -13.7875, 1.33 ) }
    dend_96 { pt3dadd( 203.977, -207.517, -13.6888, 1.55 ) }
    dend_96 { pt3dadd( 204.047, -207.594, -13.671, 1.55 ) }
    dend_96 { pt3dadd( 205.384, -209.206, -13.2564, 0.22 ) }
    dend_96 { pt3dadd( 205.801, -209.729, -13.1051, 0.74 ) }
    dend_96 { pt3dadd( 206.263, -210.324, -12.9363, 1.03 ) }
    dend_96 { pt3dadd( 207.572, -212.027, -12.497, 0.22 ) }
    dend_96 { pt3dadd( 208.353, -213.07, -12.2452, 1.25 ) }
    dend_96 { pt3dadd( 208.768, -213.61, -12.1367, 1.62 ) }
    dend_96 { pt3dadd( 208.827, -213.683, -12.1294, 1.62 ) }
    dend_96 { pt3dadd( 209.41, -214.376, -12.0616, 0.88 ) }
    dend_96 { pt3dadd( 209.474, -214.452, -12.0559, 0.88 ) }
    // Section: dend_88, id: dend_88, parent: dend_66 (entry count 39/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 14.2166, -70.5904, -3.78098, 0.52 ) }
    dend_88 { pt3dadd( 13.1624, -72.6501, -4.5473, 0.52 ) }
    dend_88 { pt3dadd( 12.488, -73.9307, -4.93122, 0.74 ) }
    dend_88 { pt3dadd( 12.1176, -74.6865, -5.12615, 0.74 ) }
    dend_88 { pt3dadd( 12.0886, -74.747, -5.1387, 0.74 ) }
    dend_88 { pt3dadd( 11.7033, -75.5541, -5.26586, 1.18 ) }
    dend_88 { pt3dadd( 11.6786, -75.6061, -5.27178, 1.18 ) }
    dend_88 { pt3dadd( 11.3203, -76.3505, -5.22789, 0.74 ) }
    dend_88 { pt3dadd( 10.9434, -77.2069, -5.14577, 0.44 ) }
    dend_88 { pt3dadd( 10.6369, -77.9225, -5.08256, 0.44 ) }
    dend_88 { pt3dadd( 10.3281, -78.6405, -5.03113, 1.11 ) }
    dend_88 { pt3dadd( 10.0567, -79.3424, -4.99181, 1.25 ) }
    dend_88 { pt3dadd( 9.86028, -79.8955, -4.96534, 0.81 ) }
    dend_88 { pt3dadd( 9.61911, -80.65, -4.93935, 0.74 ) }
    dend_88 { pt3dadd( 9.38446, -81.5323, -4.92101, 0.52 ) }
    dend_88 { pt3dadd( 9.09391, -83.2004, -4.955, 0.44 ) }
    dend_88 { pt3dadd( 8.94304, -84.621, -5.02862, 0.44 ) }
    dend_88 { pt3dadd( 8.93451, -85.157, -5.07589, 0.44 ) }
    dend_88 { pt3dadd( 8.9887, -85.6971, -5.13174, 1.03 ) }
    dend_88 { pt3dadd( 9.20278, -86.5781, -5.23599, 1.25 ) }
    dend_88 { pt3dadd( 9.56243, -87.4415, -5.34887, 1.47 ) }
    dend_88 { pt3dadd( 9.59886, -87.5002, -5.35705, 1.47 ) }
    dend_88 { pt3dadd( 10.1187, -88.2331, -5.4845, 1.11 ) }
    dend_88 { pt3dadd( 10.6631, -89.0269, -5.62305, 0.88 ) }
    dend_88 { pt3dadd( 10.9665, -89.5747, -5.72684, 0.66 ) }
    dend_88 { pt3dadd( 10.9922, -89.6465, -5.74096, 0.66 ) }
    dend_88 { pt3dadd( 11.0861, -90.253, -5.87425, 0.44 ) }
    dend_88 { pt3dadd( 11.0646, -91.0804, -6.11213, 0.29 ) }
    dend_88 { pt3dadd( 10.9674, -91.569, -6.26716, 0.37 ) }
    dend_88 { pt3dadd( 10.6158, -92.6664, -6.62568, 0.37 ) }
    dend_88 { pt3dadd( 10.3862, -93.2564, -6.81021, 0.88 ) }
    dend_88 { pt3dadd( 10.0309, -94.087, -7.0398, 1.25 ) }
    dend_88 { pt3dadd( 9.55541, -95.1955, -7.28723, 0.66 ) }
    dend_88 { pt3dadd( 9.29095, -95.8381, -7.39819, 0.37 ) }
    dend_88 { pt3dadd( 9.008, -96.693, -7.50809, 0.37 ) }
    dend_88 { pt3dadd( 8.99549, -96.7531, -7.5124, 0.37 ) }
    dend_88 { pt3dadd( 8.85168, -97.9522, -7.55743, 0.66 ) }
    dend_88 { pt3dadd( 8.85777, -99.0822, -7.545, 0.52 ) }
    dend_88 { pt3dadd( 8.86645, -99.1459, -7.54274, 0.52 ) }
    dend_88 { pt3dadd( 9.09282, -100.073, -7.53418, 1.11 ) }
    dend_88 { pt3dadd( 9.46525, -101.133, -7.5387, 1.11 ) }
    dend_88 { pt3dadd( 9.4892, -101.198, -7.54143, 1.11 ) }
    dend_88 { pt3dadd( 9.85926, -102.206, -7.61943, 1.11 ) }
    dend_88 { pt3dadd( 10.0851, -102.989, -7.69361, 0.96 ) }
    dend_88 { pt3dadd( 10.1944, -103.74, -7.7883, 0.96 ) }
    dend_88 { pt3dadd( 10.1268, -105.019, -7.97791, 0.29 ) }
    dend_88 { pt3dadd( 9.88086, -105.882, -8.11799, 0.29 ) }
    dend_88 { pt3dadd( 9.61203, -106.443, -8.20397, 0.96 ) }
    dend_88 { pt3dadd( 9.17941, -107.087, -8.28119, 1.11 ) }
    dend_88 { pt3dadd( 8.38542, -108.145, -8.3637, 1.25 ) }
    dend_88 { pt3dadd( 7.85439, -108.814, -8.39511, 1.03 ) }
    dend_88 { pt3dadd( 7.28837, -109.532, -8.42551, 0.81 ) }
    dend_88 { pt3dadd( 6.75105, -110.362, -8.49265, 0.37 ) }
    dend_88 { pt3dadd( 6.23893, -111.464, -8.67839, 0.37 ) }
    dend_88 { pt3dadd( 5.98579, -112.454, -8.92813, 0.44 ) }
    dend_88 { pt3dadd( 5.97053, -112.668, -8.99503, 0.44 ) }
    dend_88 { pt3dadd( 6.03103, -113.386, -9.27439, 0.81 ) }
    dend_88 { pt3dadd( 6.32277, -114.707, -9.98291, 1.03 ) }
    dend_88 { pt3dadd( 6.57101, -115.615, -10.5604, 1.77 ) }
    dend_88 { pt3dadd( 6.73453, -116.261, -10.9839, 1.47 ) }
    dend_88 { pt3dadd( 6.75275, -116.331, -11.032, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_88 { pt3dadd( 6.89166, -116.928, -11.4292, 1.11 ) }
    dend_88 { pt3dadd( 7.23246, -118.664, -12.506, 0.74 ) }
    dend_88 { pt3dadd( 7.33006, -119.649, -13.0437, 0.74 ) }
    dend_88 { pt3dadd( 7.33524, -120.604, -13.5661, 0.88 ) }
    // Section: dend_67, id: dend_67, parent: dend_66 (entry count 4/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 14.2166, -70.5904, -3.78098, 0.81 ) }
    dend_67 { pt3dadd( 14.6029, -71.4039, -3.75622, 0.81 ) }
    dend_67 { pt3dadd( 14.834, -71.9921, -3.74401, 1.11 ) }
    dend_67 { pt3dadd( 15.0469, -72.6384, -3.73301, 1.11 ) }
    dend_67 { pt3dadd( 15.1647, -73.0841, -3.72679, 1.25 ) }
    dend_67 { pt3dadd( 15.2911, -73.78, -3.68116, 0.88 ) }
    dend_67 { pt3dadd( 15.3502, -74.2555, -3.61207, 0.74 ) }
    dend_67 { pt3dadd( 15.3368, -74.8043, -3.47217, 0.88 ) }
    dend_67 { pt3dadd( 15.2361, -75.3761, -3.21365, 0.96 ) }
    dend_67 { pt3dadd( 15.1056, -75.7818, -2.96516, 0.59 ) }
    dend_67 { pt3dadd( 14.8243, -76.524, -2.44803, 0.74 ) }
    dend_67 { pt3dadd( 14.6196, -77.0876, -2.02221, 0.96 ) }
    dend_67 { pt3dadd( 14.497, -77.4867, -1.73305, 0.96 ) }
    dend_67 { pt3dadd( 14.3547, -78.0878, -1.33619, 0.96 ) }
    dend_67 { pt3dadd( 14.2261, -78.7922, -0.964781, 1.11 ) }
    dend_67 { pt3dadd( 14.1528, -79.3762, -0.769479, 1.18 ) }
    dend_67 { pt3dadd( 14.1037, -80.166, -0.660405, 1.4 ) }
    dend_67 { pt3dadd( 14.0774, -80.9614, -0.655826, 0.74 ) }
    dend_67 { pt3dadd( 14.0834, -81.4246, -0.694879, 0.66 ) }
    dend_67 { pt3dadd( 14.1278, -82.0623, -0.794414, 0.66 ) }
    dend_67 { pt3dadd( 14.2105, -82.709, -0.909743, 0.66 ) }
    dend_67 { pt3dadd( 14.2929, -83.1957, -1.00306, 1.11 ) }
    dend_67 { pt3dadd( 14.4132, -83.6677, -1.07158, 1.18 ) }
    dend_67 { pt3dadd( 14.5709, -84.0846, -1.06311, 0.96 ) }
    dend_67 { pt3dadd( 14.7729, -84.5363, -0.951103, 0.81 ) }
    dend_67 { pt3dadd( 14.9825, -84.9594, -0.756813, 0.59 ) }
    dend_67 { pt3dadd( 15.1914, -85.3965, -0.496867, 0.59 ) }
    dend_67 { pt3dadd( 15.4392, -86.0279, -0.0385798, 1.18 ) }
    dend_67 { pt3dadd( 15.5954, -86.5902, 0.375854, 0.96 ) }
    dend_67 { pt3dadd( 15.671, -87.1556, 0.709329, 0.88 ) }
    dend_67 { pt3dadd( 15.6728, -87.1862, 0.724331, 0.88 ) }
    dend_67 { pt3dadd( 15.693, -87.7345, 0.938326, 0.96 ) }
    dend_67 { pt3dadd( 15.7353, -88.585, 1.17833, 0.96 ) }
    dend_67 { pt3dadd( 15.8123, -89.5245, 1.32657, 0.74 ) }
    dend_67 { pt3dadd( 16.0511, -91.1763, 1.39084, 0.74 ) }
    dend_67 { pt3dadd( 16.1093, -91.4575, 1.37885, 0.74 ) }
    dend_67 { pt3dadd( 16.2707, -92.0504, 1.31965, 0.74 ) }
    dend_67 { pt3dadd( 16.4875, -92.6511, 1.21846, 1.11 ) }
    dend_67 { pt3dadd( 16.7376, -93.1857, 1.08258, 1.4 ) }
    dend_67 { pt3dadd( 17.2363, -93.9976, 0.828304, 0.66 ) }
    dend_67 { pt3dadd( 17.5264, -94.3773, 0.692357, 1.11 ) }
    dend_67 { pt3dadd( 17.7848, -94.7012, 0.578467, 1.25 ) }
    dend_67 { pt3dadd( 18.0526, -95.0209, 0.474479, 1.25 ) }
    dend_67 { pt3dadd( 18.3724, -95.3806, 0.396228, 0.96 ) }
    dend_67 { pt3dadd( 18.8042, -95.843, 0.337621, 0.59 ) }
    dend_67 { pt3dadd( 19.19, -96.2406, 0.34943, 0.74 ) }
    dend_67 { pt3dadd( 19.4447, -96.5052, 0.380157, 1.03 ) }
    dend_67 { pt3dadd( 19.7523, -96.8227, 0.441575, 0.66 ) }
    dend_67 { pt3dadd( 20.3635, -97.4417, 0.609883, 0.37 ) }
    dend_67 { pt3dadd( 20.39, -97.4678, 0.619916, 0.37 ) }
    dend_67 { pt3dadd( 20.9466, -97.9718, 0.885587, 0.88 ) }
    dend_67 { pt3dadd( 21.2836, -98.2957, 1.0625, 1.25 ) }
    dend_67 { pt3dadd( 21.3696, -98.3873, 1.11034, 1.25 ) }
    dend_67 { pt3dadd( 21.5912, -98.669, 1.23591, 1.25 ) }
    dend_67 { pt3dadd( 21.9635, -99.3145, 1.44726, 1.33 ) }
    dend_67 { pt3dadd( 22.2622, -99.9684, 1.61653, 0.66 ) }
    dend_67 { pt3dadd( 22.465, -100.618, 1.7078, 0.37 ) }
    dend_67 { pt3dadd( 22.5114, -100.942, 1.72191, 0.37 ) }
    dend_67 { pt3dadd( 22.5106, -101.466, 1.69299, 0.74 ) }
    dend_67 { pt3dadd( 22.4432, -102.178, 1.60174, 0.88 ) }
    dend_67 { pt3dadd( 22.4355, -102.221, 1.59284, 0.88 ) }
    dend_67 { pt3dadd( 22.3317, -102.778, 1.47224, 0.66 ) }
    dend_67 { pt3dadd( 22.2804, -103.366, 1.36407, 0.52 ) }
    dend_67 { pt3dadd( 22.2948, -103.917, 1.28888, 0.52 ) }
    dend_67 { pt3dadd( 22.4377, -104.565, 1.28995, 0.88 ) }
    dend_67 { pt3dadd( 22.4561, -104.606, 1.2963, 0.88 ) }
    dend_67 { pt3dadd( 22.7741, -105.168, 1.4436, 1.18 ) }
    dend_67 { pt3dadd( 23.0026, -105.498, 1.56373, 1.4 ) }
    dend_67 { pt3dadd( 23.0421, -105.551, 1.58533, 1.4 ) }
    dend_67 { pt3dadd( 23.4073, -106.101, 1.79071, 0.74 ) }
    dend_67 { pt3dadd( 23.628, -106.55, 1.91882, 0.29 ) }
    dend_67 { pt3dadd( 23.6415, -106.59, 1.92655, 0.29 ) }
    dend_67 { pt3dadd( 23.7333, -107.081, 1.97487, 0.29 ) }
    dend_67 { pt3dadd( 23.7761, -107.512, 1.99945, 0.59 ) }
    dend_67 { pt3dadd( 23.8041, -107.999, 2.00896, 0.81 ) }
    dend_67 { pt3dadd( 23.8129, -108.442, 2.00187, 0.81 ) }
    dend_67 { pt3dadd( 23.8228, -109.054, 1.99211, 1.11 ) }
    dend_67 { pt3dadd( 23.8381, -109.524, 1.98451, 1.11 ) }
    dend_67 { pt3dadd( 23.8629, -110.146, 1.97441, 1.11 ) }
    dend_67 { pt3dadd( 23.9184, -110.886, 1.96207, 0.81 ) }
    dend_67 { pt3dadd( 23.9718, -111.359, 1.95395, 1.4 ) }
    dend_67 { pt3dadd( 24.0408, -111.876, 1.94495, 1.84 ) }
    dend_67 { pt3dadd( 24.102, -112.296, 1.93756, 2.21 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 87/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -13.9731, -84.1154, 22.7616, 0.29 ) }
    dend_62 { pt3dadd( -13.8546, -84.7876, 22.8185, 0.29 ) }
    dend_62 { pt3dadd( -13.7207, -85.3296, 22.967, 0.29 ) }
    dend_62 { pt3dadd( -13.5859, -85.7794, 23.1483, 0.29 ) }
    dend_62 { pt3dadd( -13.3619, -86.2366, 23.4597, 0.59 ) }
    dend_62 { pt3dadd( -13.1105, -86.6149, 23.8599, 0.59 ) }
    dend_62 { pt3dadd( -12.8281, -86.9831, 24.3722, 0.52 ) }
    dend_62 { pt3dadd( -12.4518, -87.3951, 25.0714, 0.44 ) }
    dend_62 { pt3dadd( -12.432, -87.4179, 25.1107, 0.44 ) }
    dend_62 { pt3dadd( -12.0805, -87.9195, 25.9416, 0.37 ) }
    dend_62 { pt3dadd( -11.8136, -88.4831, 26.8444, 0.52 ) }
    dend_62 { pt3dadd( -11.6316, -89.0795, 27.7377, 0.52 ) }
    dend_62 { pt3dadd( -11.5631, -89.6454, 28.4735, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_62 { pt3dadd( -11.5811, -90.1116, 29.0137, 0.74 ) }
    dend_62 { pt3dadd( -11.6791, -90.7144, 29.6798, 0.74 ) }
    dend_62 { pt3dadd( -11.8662, -91.4061, 30.394, 0.74 ) }
    dend_62 { pt3dadd( -11.8753, -91.4334, 30.4232, 0.74 ) }
    dend_62 { pt3dadd( -12.06, -91.8685, 30.9059, 0.74 ) }
    dend_62 { pt3dadd( -12.2523, -92.3613, 31.5671, 0.37 ) }
    dend_62 { pt3dadd( -12.2139, -92.4404, 31.6894, 0.37 ) }
    dend_62 { pt3dadd( -11.7625, -92.7283, 32.0845, 0.37 ) }
    dend_62 { pt3dadd( -11.3409, -93.0451, 32.481, 0.37 ) }
    dend_62 { pt3dadd( -11.3087, -93.0741, 32.5154, 0.37 ) }
    dend_62 { pt3dadd( -11.0741, -93.3927, 32.9781, 0.59 ) }
    dend_62 { pt3dadd( -10.8825, -93.8525, 33.7308, 0.37 ) }
    dend_62 { pt3dadd( -10.7877, -94.2956, 34.5241, 0.37 ) }
    dend_62 { pt3dadd( -10.7476, -94.8473, 35.5288, 0.66 ) }
    dend_62 { pt3dadd( -10.7435, -95.0544, 35.9179, 0.81 ) }
    dend_62 { pt3dadd( -10.7123, -96.0002, 37.7383, 0.52 ) }
    dend_62 { pt3dadd( -10.7373, -96.256, 38.2741, 0.74 ) }
    dend_62 { pt3dadd( -10.7419, -96.2744, 38.3162, 0.74 ) }
    dend_62 { pt3dadd( -10.775, -96.4506, 38.7645, 0.52 ) }
    dend_62 { pt3dadd( -10.7217, -96.6366, 39.2966, 0.52 ) }
    dend_62 { pt3dadd( -10.6367, -96.7599, 39.6252, 0.81 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 21/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -13.9731, -84.1154, 22.7616, 0.29 ) }
    dend_61 { pt3dadd( -14.403, -84.9366, 22.9795, 0.29 ) }
    dend_61 { pt3dadd( -14.6816, -85.5925, 23.1358, 0.29 ) }
    dend_61 { pt3dadd( -14.8127, -86.1586, 23.3559, 0.29 ) }
    dend_61 { pt3dadd( -14.8994, -86.8683, 23.6925, 0.66 ) }
    dend_61 { pt3dadd( -14.7567, -87.5606, 24.3433, 0.22 ) }
    dend_61 { pt3dadd( -14.5756, -87.8749, 24.7192, 0.37 ) }
    dend_61 { pt3dadd( -14.5439, -87.91, 24.7675, 0.37 ) }
    dend_61 { pt3dadd( -13.7598, -88.7589, 25.9064, 0.29 ) }
    dend_61 { pt3dadd( -13.7256, -88.7979, 25.9572, 0.29 ) }
    dend_61 { pt3dadd( -12.6251, -90.1912, 27.7064, 0.29 ) }
    dend_61 { pt3dadd( -12.2037, -90.8718, 28.5382, 0.29 ) }
    dend_61 { pt3dadd( -11.7958, -91.9356, 29.7341, 0.29 ) }
    dend_61 { pt3dadd( -11.5829, -92.8393, 30.6595, 0.29 ) }
    dend_61 { pt3dadd( -11.5331, -93.3801, 31.1412, 0.29 ) }
    dend_61 { pt3dadd( -11.5008, -94.36, 32.0172, 0.29 ) }
    dend_61 { pt3dadd( -11.545, -95.5066, 32.995, 0.66 ) }
    dend_61 { pt3dadd( -11.6245, -96.8458, 34.2315, 0.37 ) }
    dend_61 { pt3dadd( -11.6274, -96.8972, 34.2821, 0.37 ) }
    dend_61 { pt3dadd( -11.6352, -97.3291, 34.7588, 0.52 ) }
    dend_61 { pt3dadd( -11.608, -98.5906, 36.2229, 0.59 ) }
    dend_61 { pt3dadd( -11.589, -99.0155, 36.7073, 0.22 ) }
    dend_61 { pt3dadd( -11.504, -99.3807, 37.1149, 0.66 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 44/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 1.35764, -232.274, 21.4832, 0.29 ) }
    dend_57 { pt3dadd( 1.11482, -233.147, 21.4987, 0.29 ) }
    dend_57 { pt3dadd( 0.8881, -233.97, 21.4873, 0.29 ) }
    dend_57 { pt3dadd( 0.668589, -234.865, 21.4633, 0.29 ) }
    dend_57 { pt3dadd( 0.530503, -235.557, 21.4317, 0.29 ) }
    dend_57 { pt3dadd( 0.437019, -236.129, 21.4212, 1.03 ) }
    dend_57 { pt3dadd( 0.356796, -236.741, 21.4203, 1.33 ) }
    dend_57 { pt3dadd( 0.337399, -237.236, 21.4483, 1.33 ) }
    dend_57 { pt3dadd( 0.352017, -237.724, 21.5004, 1.18 ) }
    dend_57 { pt3dadd( 0.420734, -238.717, 21.6279, 0.29 ) }
    dend_57 { pt3dadd( 0.494183, -239.304, 21.7509, 0.59 ) }
    dend_57 { pt3dadd( 0.541081, -239.603, 21.8288, 0.59 ) }
    dend_57 { pt3dadd( 0.677584, -240.431, 22.0626, 0.22 ) }
    dend_57 { pt3dadd( 0.746426, -241.052, 22.2282, 0.22 ) }
    dend_57 { pt3dadd( 0.745872, -241.112, 22.2408, 0.22 ) }
    dend_57 { pt3dadd( 0.684001, -241.536, 22.2963, 1.03 ) }
    dend_57 { pt3dadd( 0.56401, -242.015, 22.2899, 1.25 ) }
    dend_57 { pt3dadd( 0.379651, -242.527, 22.2398, 1.03 ) }
    dend_57 { pt3dadd( 0.106607, -243.21, 22.1307, 0.37 ) }
    dend_57 { pt3dadd( -0.194913, -243.962, 22.0343, 0.37 ) }
    dend_57 { pt3dadd( -0.501033, -244.752, 21.9521, 0.37 ) }
    dend_57 { pt3dadd( -0.826665, -245.66, 21.8786, 0.22 ) }
    dend_57 { pt3dadd( -1.05691, -246.383, 21.8369, 0.22 ) }
    dend_57 { pt3dadd( -1.22149, -247.058, 21.8517, 0.22 ) }
    dend_57 { pt3dadd( -1.30336, -247.886, 22.0006, 1.18 ) }
    dend_57 { pt3dadd( -1.3, -247.947, 22.0223, 1.18 ) }
    dend_57 { pt3dadd( -1.22742, -248.417, 22.2623, 1.33 ) }
    dend_57 { pt3dadd( -1.20565, -248.534, 22.3306, 1.25 ) }
    dend_57 { pt3dadd( -1.05132, -249.379, 22.7585, 0.59 ) }
    dend_57 { pt3dadd( -0.983788, -250.117, 23.0063, 0.22 ) }
    dend_57 { pt3dadd( -0.963285, -250.768, 23.128, 0.22 ) }
    dend_57 { pt3dadd( -0.967319, -251.283, 23.176, 0.96 ) }
    dend_57 { pt3dadd( -1.00652, -251.906, 23.1763, 1.25 ) }
    dend_57 { pt3dadd( -1.05741, -252.628, 23.1538, 0.59 ) }
    dend_57 { pt3dadd( -1.11079, -253.586, 23.0717, 0.37 ) }
    dend_57 { pt3dadd( -1.11297, -253.646, 23.0659, 0.37 ) }
    dend_57 { pt3dadd( -1.07766, -254.275, 23.0375, 0.37 ) }
    dend_57 { pt3dadd( -1.00949, -254.768, 23.0738, 1.25 ) }
    dend_57 { pt3dadd( -0.864288, -255.656, 23.2884, 0.52 ) }
    dend_57 { pt3dadd( -0.788341, -256.25, 23.5133, 0.52 ) }
    dend_57 { pt3dadd( -0.78551, -256.303, 23.5378, 0.52 ) }
    dend_57 { pt3dadd( -0.847957, -257.003, 23.8548, 0.52 ) }
    dend_57 { pt3dadd( -1.06076, -257.844, 24.2267, 0.29 ) }
    dend_57 { pt3dadd( -1.30739, -258.515, 24.4903, 0.29 ) }
    dend_57 { pt3dadd( -1.52727, -259.001, 24.6429, 0.44 ) }
    dend_57 { pt3dadd( -1.78025, -259.527, 24.7848, 0.37 ) }
    dend_57 { pt3dadd( -2.10212, -260.223, 24.9477, 0.29 ) }
    dend_57 { pt3dadd( -2.3935, -260.94, 25.0773, 0.74 ) }
    dend_57 { pt3dadd( -2.5092, -261.453, 25.1383, 1.18 ) }
    dend_57 { pt3dadd( -2.52584, -262.013, 25.1934, 1.25 ) }
    dend_57 { pt3dadd( -2.46404, -262.634, 25.2622, 1.4 ) }
    dend_57 { pt3dadd( -2.38228, -263.087, 25.3137, 1.33 ) }
    dend_57 { pt3dadd( -2.20215, -263.903, 25.4057, 0.29 ) }
    dend_57 { pt3dadd( -1.98946, -264.847, 25.5009, 0.29 ) }
    dend_57 { pt3dadd( -1.84684, -265.576, 25.5496, 0.29 ) }
    dend_57 { pt3dadd( -1.78151, -265.966, 25.5624, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_57 { pt3dadd( -1.71615, -266.486, 25.5219, 1.11 ) }
    dend_57 { pt3dadd( -1.67649, -267.076, 25.4285, 0.96 ) }
    dend_57 { pt3dadd( -1.67516, -267.132, 25.4166, 0.96 ) }
    dend_57 { pt3dadd( -1.69156, -267.889, 25.2913, 0.44 ) }
    dend_57 { pt3dadd( -1.69188, -267.946, 25.2852, 0.44 ) }
    dend_57 { pt3dadd( -1.70236, -268.952, 25.2325, 0.29 ) }
    dend_57 { pt3dadd( -1.7344, -269.773, 25.2408, 0.29 ) }
    dend_57 { pt3dadd( -1.79222, -270.413, 25.2828, 0.29 ) }
    dend_57 { pt3dadd( -1.93486, -271.3, 25.4382, 0.29 ) }
    dend_57 { pt3dadd( -2.03194, -271.76, 25.5593, 0.22 ) }
    dend_57 { pt3dadd( -2.14488, -272.2, 25.6822, 1.03 ) }
    dend_57 { pt3dadd( -2.27102, -272.699, 25.7691, 1.4 ) }
    dend_57 { pt3dadd( -2.33634, -273.004, 25.768, 1.4 ) }
    dend_57 { pt3dadd( -2.45779, -274.11, 25.5518, 0.29 ) }
    dend_57 { pt3dadd( -2.46046, -274.636, 25.3795, 0.44 ) }
    dend_57 { pt3dadd( -2.41939, -275.221, 25.1555, 0.44 ) }
    dend_57 { pt3dadd( -2.22242, -276.799, 24.5103, 1.03 ) }
    dend_57 { pt3dadd( -2.11871, -277.475, 24.2162, 1.03 ) }
    dend_57 { pt3dadd( -1.9465, -278.541, 23.7348, 0.52 ) }
    dend_57 { pt3dadd( -1.83548, -279.291, 23.3829, 0.29 ) }
    dend_57 { pt3dadd( -1.83051, -279.338, 23.3633, 0.29 ) }
    dend_57 { pt3dadd( -1.76745, -280.12, 23.1069, 0.44 ) }
    dend_57 { pt3dadd( -1.73308, -280.482, 23.0364, 0.81 ) }
    dend_57 { pt3dadd( -1.65706, -281.018, 22.9797, 1.11 ) }
    dend_57 { pt3dadd( -1.53001, -281.719, 22.9895, 0.66 ) }
    dend_57 { pt3dadd( -1.27166, -282.816, 23.0753, 0.37 ) }
    dend_57 { pt3dadd( -1.05717, -283.67, 23.1608, 0.37 ) }
    dend_57 { pt3dadd( -0.814055, -284.624, 23.2562, 0.37 ) }
    dend_57 { pt3dadd( -0.592369, -285.508, 23.3106, 0.29 ) }
    dend_57 { pt3dadd( -0.430738, -286.165, 23.3317, 1.11 ) }
    dend_57 { pt3dadd( -0.276699, -286.873, 23.3183, 1.55 ) }
    dend_57 { pt3dadd( -0.124796, -287.805, 23.2569, 1.25 ) }
    dend_57 { pt3dadd( -0.0397586, -288.605, 23.1332, 0.74 ) }
    dend_57 { pt3dadd( 0.0130466, -289.501, 22.9244, 0.29 ) }
    dend_57 { pt3dadd( 0.0539456, -290.075, 22.75, 0.29 ) }
    dend_57 { pt3dadd( 0.150764, -290.807, 22.5415, 0.29 ) }
    dend_57 { pt3dadd( 0.222195, -291.192, 22.4497, 0.29 ) }
    dend_57 { pt3dadd( 0.350886, -291.669, 22.3817, 0.29 ) }
    dend_57 { pt3dadd( 0.488478, -292.072, 22.3616, 0.96 ) }
    dend_57 { pt3dadd( 0.649489, -292.519, 22.3787, 0.96 ) }
    dend_57 { pt3dadd( 1.10898, -293.765, 22.4777, 0.15 ) }
    dend_57 { pt3dadd( 1.12841, -293.814, 22.4841, 0.15 ) }
    dend_57 { pt3dadd( 1.32884, -294.323, 22.5529, 0.15 ) }
    dend_57 { pt3dadd( 1.35212, -294.383, 22.5605, 0.15 ) }
    dend_57 { pt3dadd( 1.53864, -294.881, 22.606, 0.15 ) }
    dend_57 { pt3dadd( 1.68256, -295.364, 22.6278, 0.88 ) }
    dend_57 { pt3dadd( 1.78273, -295.811, 22.6467, 1.25 ) }
    dend_57 { pt3dadd( 1.83479, -296.101, 22.6657, 1.55 ) }
    dend_57 { pt3dadd( 1.89423, -296.697, 22.7284, 0.74 ) }
    dend_57 { pt3dadd( 1.93696, -297.537, 22.8347, 0.22 ) }
    dend_57 { pt3dadd( 1.92795, -298.239, 22.9446, 0.22 ) }
    dend_57 { pt3dadd( 1.89159, -298.787, 23.0379, 0.66 ) }
    dend_57 { pt3dadd( 1.82305, -299.45, 23.1783, 0.88 ) }
    dend_57 { pt3dadd( 1.63452, -300.624, 23.449, 0.22 ) }
    dend_57 { pt3dadd( 1.5326, -301.066, 23.5541, 0.74 ) }
    dend_57 { pt3dadd( 1.2697, -302.004, 23.7767, 0.96 ) }
    dend_57 { pt3dadd( 1.08443, -302.595, 23.9008, 1.25 ) }
    dend_57 { pt3dadd( 0.824311, -303.316, 23.9945, 1.25 ) }
    dend_57 { pt3dadd( 0.46492, -304.182, 24.0607, 0.22 ) }
    dend_57 { pt3dadd( 0.117798, -304.954, 24.0579, 0.22 ) }
    dend_57 { pt3dadd( 0.0933634, -305.014, 24.0542, 0.22 ) }
    dend_57 { pt3dadd( -0.0348538, -305.411, 23.9903, 0.74 ) }
    dend_57 { pt3dadd( -0.228559, -306.379, 23.786, 0.22 ) }
    dend_57 { pt3dadd( -0.229862, -306.441, 23.7709, 0.22 ) }
    dend_57 { pt3dadd( -0.152868, -306.841, 23.696, 0.29 ) }
    dend_57 { pt3dadd( 0.0994679, -307.635, 23.5934, 0.29 ) }
    dend_57 { pt3dadd( 0.306335, -308.214, 23.5518, 0.29 ) }
    dend_57 { pt3dadd( 0.473869, -308.667, 23.5443, 1.18 ) }
    dend_57 { pt3dadd( 0.650838, -309.211, 23.5479, 1.62 ) }
    dend_57 { pt3dadd( 0.71688, -309.501, 23.5282, 1.62 ) }
    dend_57 { pt3dadd( 0.783649, -310.091, 23.4689, 0.96 ) }
    dend_57 { pt3dadd( 0.788323, -310.77, 23.4043, 0.29 ) }
    dend_57 { pt3dadd( 0.761931, -311.387, 23.3481, 0.22 ) }
    dend_57 { pt3dadd( 0.710184, -312.111, 23.2712, 1.25 ) }
    dend_57 { pt3dadd( 0.603845, -313.197, 23.1453, 1.25 ) }
    dend_57 { pt3dadd( 0.520507, -313.849, 23.0647, 1.25 ) }
    dend_57 { pt3dadd( 0.350643, -314.913, 22.9247, 0.22 ) }
    dend_57 { pt3dadd( 0.221184, -315.665, 22.8274, 1.47 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 78/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 1.35764, -232.274, 21.4832, 0.29 ) }
    dend_56 { pt3dadd( 1.1351, -230.882, 21.7981, 0.29 ) }
    dend_56 { pt3dadd( 1.04075, -230.218, 21.9254, 0.29 ) }
    dend_56 { pt3dadd( 1.03684, -230.169, 21.9323, 0.29 ) }
    dend_56 { pt3dadd( 1.11291, -229.418, 22.037, 0.29 ) }
    dend_56 { pt3dadd( 1.13007, -229.249, 22.0606, 0.29 ) }
    dend_56 { pt3dadd( 1.194, -228.618, 22.1486, 0.29 ) }
    dend_56 { pt3dadd( 1.22027, -228.498, 22.1539, 0.29 ) }
    dend_56 { pt3dadd( 1.53005, -227.505, 22.2144, 0.29 ) }
    dend_56 { pt3dadd( 1.99668, -226.229, 22.3051, 0.29 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 88/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -113.748, -104.971, 65.6621, 0.29 ) }
    dend_46 { pt3dadd( -115.26, -105.1, 67.2519, 0.29 ) }
    dend_46 { pt3dadd( -115.931, -105.188, 67.935, 0.59 ) }
    dend_46 { pt3dadd( -116.683, -105.323, 68.6617, 0.52 ) }
    dend_46 { pt3dadd( -117.646, -105.541, 69.5683, 0.52 ) }
    dend_46 { pt3dadd( -118.343, -105.732, 70.197, 0.29 ) }
    dend_46 { pt3dadd( -119.128, -105.968, 70.8922, 1.47 ) }
    dend_46 { pt3dadd( -119.491, -106.118, 71.2091, 1.69 ) }
    dend_46 { pt3dadd( -119.95, -106.36, 71.6176, 1.47 ) }
    dend_46 { pt3dadd( -120.526, -106.729, 72.092, 1.18 ) }
    dend_46 { pt3dadd( -121.23, -107.247, 72.6011, 0.59 ) }
    dend_46 { pt3dadd( -121.275, -107.285, 72.6329, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_46 { pt3dadd( -122.069, -108.009, 73.1957, 0.59 ) }
    dend_46 { pt3dadd( -122.643, -108.495, 73.5986, 1.25 ) }
    dend_46 { pt3dadd( -123.121, -108.866, 73.9319, 0.88 ) }
    dend_46 { pt3dadd( -124.104, -109.571, 74.6004, 0.37 ) }
    dend_46 { pt3dadd( -124.672, -109.94, 74.9929, 1.11 ) }
    dend_46 { pt3dadd( -125.64, -110.492, 75.6492, 0.22 ) }
    dend_46 { pt3dadd( -126.309, -110.824, 76.0699, 0.22 ) }
    dend_46 { pt3dadd( -126.709, -111.009, 76.3075, 0.22 ) }
    dend_46 { pt3dadd( -126.765, -111.034, 76.3369, 0.22 ) }
    dend_46 { pt3dadd( -127.396, -111.311, 76.6375, 0.81 ) }
    dend_46 { pt3dadd( -127.882, -111.554, 76.8558, 1.11 ) }
    dend_46 { pt3dadd( -128.985, -112.262, 77.2994, 0.29 ) }
    dend_46 { pt3dadd( -129.759, -112.826, 77.5786, 1.18 ) }
    dend_46 { pt3dadd( -130.138, -113.116, 77.723, 1.62 ) }
    dend_46 { pt3dadd( -130.38, -113.302, 77.8205, 1.62 ) }
    dend_46 { pt3dadd( -130.437, -113.344, 77.8471, 1.62 ) }
    dend_46 { pt3dadd( -130.991, -113.729, 78.1661, 1.03 ) }
    dend_46 { pt3dadd( -132.01, -114.3, 78.8633, 0.29 ) }
    dend_46 { pt3dadd( -132.789, -114.556, 79.4492, 0.22 ) }
    dend_46 { pt3dadd( -132.842, -114.562, 79.4904, 0.22 ) }
    dend_46 { pt3dadd( -133.669, -114.506, 80.15, 1.47 ) }
    dend_46 { pt3dadd( -133.99, -114.45, 80.4084, 1.69 ) }
    dend_46 { pt3dadd( -134.702, -114.245, 80.978, 1.69 ) }
    dend_46 { pt3dadd( -135.938, -113.8, 81.9303, 0.29 ) }
    dend_46 { pt3dadd( -136.712, -113.53, 82.4339, 0.29 ) }
    dend_46 { pt3dadd( -137.604, -113.241, 82.9439, 0.22 ) }
    dend_46 { pt3dadd( -138.036, -113.115, 83.1552, 0.66 ) }
    dend_46 { pt3dadd( -138.576, -112.995, 83.3912, 0.74 ) }
    dend_46 { pt3dadd( -139.137, -112.916, 83.6364, 0.74 ) }
    dend_46 { pt3dadd( -140.234, -112.849, 84.1043, 0.29 ) }
    dend_46 { pt3dadd( -140.64, -112.841, 84.2798, 0.74 ) }
    dend_46 { pt3dadd( -141.23, -112.827, 84.5236, 0.74 ) }
    dend_46 { pt3dadd( -142.212, -112.794, 84.9568, 0.22 ) }
    dend_46 { pt3dadd( -143.304, -112.761, 85.4907, 0.22 ) }
    dend_46 { pt3dadd( -143.754, -112.747, 85.75, 1.18 ) }
    dend_46 { pt3dadd( -144.514, -112.736, 86.3145, 1.62 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 36/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -113.748, -104.971, 65.6621, 0.29 ) }
    dend_45 { pt3dadd( -114.245, -103.672, 65.571, 0.29 ) }
    dend_45 { pt3dadd( -114.493, -103.075, 65.524, 0.37 ) }
    dend_45 { pt3dadd( -114.631, -102.731, 65.4571, 0.37 ) }
    dend_45 { pt3dadd( -115.153, -101.226, 65.2214, 0.22 ) }
    dend_45 { pt3dadd( -115.196, -101.093, 65.203, 0.22 ) }
    dend_45 { pt3dadd( -115.51, -100.056, 65.0654, 0.59 ) }
    dend_45 { pt3dadd( -115.576, -99.8443, 65.0404, 0.59 ) }
    dend_45 { pt3dadd( -115.966, -98.4627, 64.8741, 0.22 ) }
    dend_45 { pt3dadd( -116.385, -96.8175, 64.6518, 0.22 ) }
    dend_45 { pt3dadd( -116.463, -96.4447, 64.5847, 0.59 ) }
    dend_45 { pt3dadd( -116.538, -95.9797, 64.5144, 0.59 ) }
    // Section: dend_29, id: dend_29, parent: dend_25 (entry count 48/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 34.5248, 150.286, 9.7782, 0.81 ) }
    dend_29 { pt3dadd( 35.5949, 151.123, 10.5426, 0.81 ) }
    dend_29 { pt3dadd( 36.3683, 151.763, 11.1294, 0.15 ) }
    dend_29 { pt3dadd( 36.4111, 151.796, 11.1663, 0.15 ) }
    dend_29 { pt3dadd( 36.9918, 152.255, 11.7761, 0.96 ) }
    dend_29 { pt3dadd( 37.397, 152.576, 12.2439, 1.25 ) }
    dend_29 { pt3dadd( 38.3194, 153.307, 13.3639, 0.29 ) }
    dend_29 { pt3dadd( 38.7479, 153.656, 13.9551, 0.29 ) }
    dend_29 { pt3dadd( 39.4668, 154.199, 14.98, 0.22 ) }
    dend_29 { pt3dadd( 40.2529, 154.721, 16.0539, 0.96 ) }
    dend_29 { pt3dadd( 40.5928, 154.912, 16.5061, 0.96 ) }
    dend_29 { pt3dadd( 40.6456, 154.935, 16.574, 0.96 ) }
    dend_29 { pt3dadd( 41.1959, 155.11, 17.218, 0.29 ) }
    dend_29 { pt3dadd( 41.7001, 155.23, 17.7567, 0.22 ) }
    dend_29 { pt3dadd( 42.4951, 155.388, 18.6533, 0.22 ) }
    dend_29 { pt3dadd( 43.0518, 155.487, 19.2939, 0.96 ) }
    dend_29 { pt3dadd( 43.8357, 155.65, 20.2878, 0.22 ) }
    dend_29 { pt3dadd( 44.1132, 155.718, 20.6746, 0.96 ) }
    dend_29 { pt3dadd( 44.4021, 155.811, 21.1325, 1.4 ) }
    dend_29 { pt3dadd( 45.4884, 156.338, 23.0895, 0.52 ) }
    dend_29 { pt3dadd( 45.8324, 156.599, 23.7917, 0.22 ) }
    dend_29 { pt3dadd( 46.1019, 156.862, 24.3388, 0.22 ) }
    dend_29 { pt3dadd( 46.132, 156.892, 24.3891, 0.22 ) }
    dend_29 { pt3dadd( 46.3932, 157.084, 24.8032, 0.22 ) }
    dend_29 { pt3dadd( 46.7211, 157.339, 25.4329, 0.96 ) }
    dend_29 { pt3dadd( 46.8092, 157.408, 25.5946, 0.96 ) }
    dend_29 { pt3dadd( 46.8727, 157.455, 25.7141, 0.96 ) }
    dend_29 { pt3dadd( 47.4126, 157.775, 26.6529, 0.22 ) }
    dend_29 { pt3dadd( 48.2201, 158.187, 27.9546, 1.11 ) }
    dend_29 { pt3dadd( 49.0826, 158.628, 29.4515, 0.22 ) }
    dend_29 { pt3dadd( 49.3792, 158.792, 29.993, 0.52 ) }
    dend_29 { pt3dadd( 49.8133, 159.04, 30.7885, 0.66 ) }
    dend_29 { pt3dadd( 50.4981, 159.423, 31.9967, 0.22 ) }
    dend_29 { pt3dadd( 50.9263, 159.641, 32.6866, 1.03 ) }
    dend_29 { pt3dadd( 51.7803, 159.958, 33.8387, 0.52 ) }
    dend_29 { pt3dadd( 52.5347, 160.117, 34.7419, 0.29 ) }
    dend_29 { pt3dadd( 53.2934, 160.196, 35.6447, 1.11 ) }
    dend_29 { pt3dadd( 53.6725, 160.215, 36.102, 1.4 ) }
    dend_29 { pt3dadd( 54.5816, 160.239, 37.1387, 0.22 ) }
    dend_29 { pt3dadd( 55.0245, 160.235, 37.6103, 0.59 ) }
    dend_29 { pt3dadd( 55.3819, 160.219, 37.9323, 0.59 ) }
    dend_29 { pt3dadd( 56.0424, 160.18, 38.4905, 0.22 ) }
    dend_29 { pt3dadd( 56.8447, 160.142, 39.1451, 0.22 ) }
    dend_29 { pt3dadd( 57.3191, 160.118, 39.5397, 0.74 ) }
    dend_29 { pt3dadd( 57.5296, 160.11, 39.7134, 0.74 ) }
    dend_29 { pt3dadd( 58.3992, 160.092, 40.3903, 0.22 ) }
    dend_29 { pt3dadd( 58.7307, 160.082, 40.6219, 0.59 ) }
    dend_29 { pt3dadd( 58.9034, 160.072, 40.7258, 0.59 ) }
    dend_29 { pt3dadd( 59.9639, 159.963, 41.2839, 0.22 ) }
    dend_29 { pt3dadd( 60.1381, 159.94, 41.3743, 0.22 ) }
    dend_29 { pt3dadd( 61.0225, 159.82, 41.8181, 0.22 ) }
    dend_29 { pt3dadd( 61.6865, 159.736, 42.1332, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_29 { pt3dadd( 62.2687, 159.687, 42.4051, 0.88 ) }
    dend_29 { pt3dadd( 62.9894, 159.664, 42.7271, 0.96 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 2/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 34.5248, 150.286, 9.7782, 0.29 ) }
    dend_26 { pt3dadd( 35.2276, 151.527, 9.61256, 0.29 ) }
    dend_26 { pt3dadd( 36.0757, 152.89, 9.44597, 0.29 ) }
    dend_26 { pt3dadd( 37.3427, 154.851, 9.16459, 0.22 ) }
    dend_26 { pt3dadd( 37.9295, 155.792, 9.02249, 0.88 ) }
    dend_26 { pt3dadd( 39.1154, 157.78, 8.71966, 0.22 ) }
    dend_26 { pt3dadd( 39.7423, 158.883, 8.55887, 0.22 ) }
    dend_26 { pt3dadd( 39.793, 158.972, 8.54684, 0.22 ) }
    dend_26 { pt3dadd( 40.4343, 160.189, 8.37474, 0.22 ) }
    dend_26 { pt3dadd( 40.8104, 161.222, 8.21793, 0.88 ) }
    dend_26 { pt3dadd( 40.9338, 161.744, 8.14109, 1.25 ) }
    dend_26 { pt3dadd( 41.0089, 162.576, 8.04871, 0.88 ) }
    dend_26 { pt3dadd( 41.0376, 163.378, 7.9553, 0.29 ) }
    dend_26 { pt3dadd( 41.0953, 164.276, 7.89421, 0.22 ) }
    dend_26 { pt3dadd( 41.2863, 165.394, 7.92763, 1.25 ) }
    dend_26 { pt3dadd( 41.323, 165.529, 7.93977, 1.25 ) }
    dend_26 { pt3dadd( 41.5252, 166.151, 8.01841, 1.25 ) }
    dend_26 { pt3dadd( 41.8907, 167.226, 8.16381, 0.88 ) }
    dend_26 { pt3dadd( 42.5613, 169.066, 8.44412, 0.22 ) }
    dend_26 { pt3dadd( 43.2615, 170.889, 8.7608, 0.22 ) }
    dend_26 { pt3dadd( 43.5431, 171.611, 8.90049, 0.96 ) }
    dend_26 { pt3dadd( 43.76, 172.149, 9.00879, 0.96 ) }
    dend_26 { pt3dadd( 44.4399, 173.745, 9.32152, 0.22 ) }
    dend_26 { pt3dadd( 44.4802, 173.837, 9.33906, 0.22 ) }
    dend_26 { pt3dadd( 44.9908, 175.059, 9.55289, 0.88 ) }
    dend_26 { pt3dadd( 45.3143, 175.888, 9.68196, 0.81 ) }
    dend_26 { pt3dadd( 45.7631, 177.006, 9.86331, 1.11 ) }
    dend_26 { pt3dadd( 46.422, 178.641, 10.0855, 0.29 ) }
    dend_26 { pt3dadd( 46.977, 179.999, 10.2519, 0.22 ) }
    dend_26 { pt3dadd( 47.2077, 180.568, 10.3122, 0.96 ) }
    dend_26 { pt3dadd( 47.5418, 181.364, 10.3908, 1.25 ) }
    dend_26 { pt3dadd( 47.9106, 182.208, 10.4738, 1.25 ) }
    dend_26 { pt3dadd( 48.6884, 183.698, 10.647, 0.29 ) }
    dend_26 { pt3dadd( 49.3977, 184.706, 10.8377, 0.22 ) }
    dend_26 { pt3dadd( 49.9706, 185.376, 11.0035, 0.88 ) }
    dend_26 { pt3dadd( 50.6649, 186.08, 11.2217, 1.03 ) }
    dend_26 { pt3dadd( 50.7958, 186.198, 11.2667, 1.03 ) }
    dend_26 { pt3dadd( 52.1533, 187.403, 11.7884, 0.22 ) }
    dend_26 { pt3dadd( 52.9643, 188.216, 12.1047, 0.22 ) }
    dend_26 { pt3dadd( 53.8106, 189.305, 12.3973, 0.59 ) }
    dend_26 { pt3dadd( 53.8634, 189.391, 12.4138, 0.59 ) }
    dend_26 { pt3dadd( 54.2089, 190.07, 12.5145, 0.88 ) }
    dend_26 { pt3dadd( 54.7192, 191.268, 12.6622, 1.33 ) }
    dend_26 { pt3dadd( 55.5025, 193.613, 12.8838, 0.22 ) }
    dend_26 { pt3dadd( 55.8261, 194.642, 12.9731, 0.96 ) }
    dend_26 { pt3dadd( 56.0915, 195.344, 13.0736, 1.11 ) }
    dend_26 { pt3dadd( 56.2091, 195.609, 13.1292, 1.11 ) }
    dend_26 { pt3dadd( 56.7316, 196.56, 13.4232, 0.81 ) }
    dend_26 { pt3dadd( 56.8381, 196.714, 13.4925, 0.81 ) }
    dend_26 { pt3dadd( 57.4921, 197.514, 13.983, 0.22 ) }
    dend_26 { pt3dadd( 58.4256, 198.57, 14.6658, 0.29 ) }
    dend_26 { pt3dadd( 58.9762, 199.183, 15.0655, 0.29 ) }
    dend_26 { pt3dadd( 59.3914, 199.682, 15.366, 0.29 ) }
    dend_26 { pt3dadd( 59.8512, 200.334, 15.6411, 0.29 ) }
    dend_26 { pt3dadd( 60.1838, 200.936, 15.7984, 0.96 ) }
    dend_26 { pt3dadd( 60.4302, 201.458, 15.8628, 1.18 ) }
    dend_26 { pt3dadd( 60.4704, 201.546, 15.8687, 1.18 ) }
    dend_26 { pt3dadd( 60.809, 202.267, 15.9091, 1.18 ) }
    dend_26 { pt3dadd( 61.9135, 204.413, 16.0563, 0.22 ) }
    dend_26 { pt3dadd( 62.6182, 205.691, 16.1713, 0.22 ) }
    dend_26 { pt3dadd( 63.5319, 207.296, 16.3544, 0.96 ) }
    dend_26 { pt3dadd( 64.0439, 208.139, 16.4862, 1.33 ) }
    dend_26 { pt3dadd( 64.1004, 208.223, 16.5049, 1.33 ) }
    dend_26 { pt3dadd( 64.6164, 208.919, 16.706, 1.33 ) }
    dend_26 { pt3dadd( 65.3752, 209.9, 17.0585, 1.03 ) }
    dend_26 { pt3dadd( 66.2093, 210.961, 17.4739, 0.88 ) }
    dend_26 { pt3dadd( 67.357, 212.521, 18.1334, 0.22 ) }
    dend_26 { pt3dadd( 68.3879, 213.987, 18.7345, 0.22 ) }
    dend_26 { pt3dadd( 68.4342, 214.053, 18.7616, 0.22 ) }
    dend_26 { pt3dadd( 68.991, 214.956, 19.0749, 1.03 ) }
    dend_26 { pt3dadd( 69.4425, 215.823, 19.3663, 1.25 ) }
    dend_26 { pt3dadd( 70.0625, 217.363, 19.8463, 0.22 ) }
    dend_26 { pt3dadd( 70.2725, 218.15, 20.0592, 0.22 ) }
    dend_26 { pt3dadd( 70.2863, 218.227, 20.0772, 0.22 ) }
    dend_26 { pt3dadd( 70.5677, 220.429, 20.6197, 0.37 ) }
    dend_26 { pt3dadd( 70.6941, 222.009, 21.0133, 0.22 ) }
    dend_26 { pt3dadd( 70.7465, 223.15, 21.2975, 0.88 ) }
    dend_26 { pt3dadd( 70.7659, 223.895, 21.4864, 1.25 ) }
    dend_26 { pt3dadd( 70.7877, 224.83, 21.741, 0.96 ) }
    dend_26 { pt3dadd( 70.8545, 226.6, 22.2229, 0.22 ) }
    dend_26 { pt3dadd( 70.9142, 227.422, 22.4571, 0.66 ) }
    dend_26 { pt3dadd( 70.9337, 227.777, 22.5158, 0.66 ) }
    dend_26 { pt3dadd( 70.9288, 227.963, 22.5273, 0.66 ) }
    dend_26 { pt3dadd( 70.8692, 228.766, 22.4936, 0.22 ) }
    dend_26 { pt3dadd( 70.7972, 229.571, 22.3382, 0.22 ) }
    dend_26 { pt3dadd( 70.7944, 229.647, 22.3102, 0.22 ) }
    dend_26 { pt3dadd( 70.8316, 230.642, 21.9267, 0.22 ) }
    dend_26 { pt3dadd( 70.9295, 231.651, 21.5379, 1.03 ) }
    dend_26 { pt3dadd( 71.1276, 232.565, 21.2264, 1.18 ) }
    dend_26 { pt3dadd( 71.4829, 233.507, 20.9413, 1.18 ) }
    dend_26 { pt3dadd( 72.2906, 235.107, 20.5623, 0.22 ) }
    dend_26 { pt3dadd( 72.7843, 235.922, 20.3909, 0.22 ) }
    dend_26 { pt3dadd( 72.8675, 236.046, 20.3702, 0.22 ) }
    dend_26 { pt3dadd( 73.6738, 237.276, 20.1414, 0.22 ) }
    dend_26 { pt3dadd( 74.1354, 238.143, 19.9852, 1.03 ) }
    dend_26 { pt3dadd( 74.45, 238.872, 19.8651, 1.25 ) }
    dend_26 { pt3dadd( 74.9035, 240.207, 19.6636, 1.11 ) }
    dend_26 { pt3dadd( 75.2445, 241.384, 19.494, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_26 { pt3dadd( 75.7578, 243.237, 19.2746, 0.22 ) }
    dend_26 { pt3dadd( 76.169, 244.891, 19.1074, 0.22 ) }
    dend_26 { pt3dadd( 76.2141, 245.062, 19.0998, 0.22 ) }
    dend_26 { pt3dadd( 76.5397, 245.996, 19.0962, 0.22 ) }
    dend_26 { pt3dadd( 76.9655, 246.975, 19.1625, 0.88 ) }
    dend_26 { pt3dadd( 77.3508, 247.673, 19.2429, 1.33 ) }
    dend_26 { pt3dadd( 77.4034, 247.754, 19.2569, 1.33 ) }
    dend_26 { pt3dadd( 77.5654, 247.992, 19.289, 1.33 ) }
    dend_26 { pt3dadd( 78.9741, 250.189, 19.4908, 0.22 ) }
    dend_26 { pt3dadd( 79.5696, 251.244, 19.5234, 0.22 ) }
    dend_26 { pt3dadd( 79.8602, 251.843, 19.5137, 0.81 ) }
    dend_26 { pt3dadd( 80.0884, 252.458, 19.5048, 0.81 ) }
    dend_26 { pt3dadd( 80.4318, 253.799, 19.5139, 0.22 ) }
    dend_26 { pt3dadd( 80.4424, 253.9, 19.521, 0.22 ) }
    dend_26 { pt3dadd( 80.3773, 254.772, 19.6657, 0.22 ) }
    dend_26 { pt3dadd( 80.3649, 254.872, 19.6852, 0.22 ) }
    dend_26 { pt3dadd( 80.1994, 256.273, 19.9994, 0.74 ) }
    dend_26 { pt3dadd( 80.0755, 257.441, 20.2991, 1.33 ) }
    dend_26 { pt3dadd( 80.004, 258.457, 20.601, 1.33 ) }
    dend_26 { pt3dadd( 79.9851, 259.319, 20.8556, 0.88 ) }
    dend_26 { pt3dadd( 80.0267, 260.752, 21.279, 0.44 ) }
    dend_26 { pt3dadd( 80.0789, 261.633, 21.5087, 0.59 ) }
    dend_26 { pt3dadd( 80.0936, 261.754, 21.5281, 0.59 ) }
    dend_26 { pt3dadd( 80.1715, 262.38, 21.5688, 0.59 ) }
    dend_26 { pt3dadd( 80.2484, 263.171, 21.5266, 0.37 ) }
    dend_26 { pt3dadd( 80.2488, 263.26, 21.514, 0.37 ) }
    dend_26 { pt3dadd( 80.1544, 264.022, 21.3382, 0.37 ) }
    dend_26 { pt3dadd( 79.9237, 265.19, 21.0358, 0.37 ) }
    dend_26 { pt3dadd( 79.7402, 266.138, 20.8042, 1.18 ) }
    dend_26 { pt3dadd( 79.6065, 266.82, 20.6414, 1.62 ) }
    dend_26 { pt3dadd( 79.4419, 267.774, 20.4387, 0.88 ) }
    dend_26 { pt3dadd( 79.2681, 268.97, 20.2307, 0.22 ) }
    dend_26 { pt3dadd( 79.1615, 270.127, 20.1081, 0.22 ) }
    dend_26 { pt3dadd( 79.0967, 271.142, 20.0727, 0.81 ) }
    dend_26 { pt3dadd( 79.0935, 271.238, 20.0707, 0.81 ) }
    dend_26 { pt3dadd( 79.1013, 271.947, 20.072, 1.11 ) }
    dend_26 { pt3dadd( 79.1078, 272.055, 20.0749, 1.11 ) }
    dend_26 { pt3dadd( 79.2599, 273.632, 20.1458, 0.22 ) }
    dend_26 { pt3dadd( 79.3409, 275.197, 20.1812, 1.25 ) }
    dend_26 { pt3dadd( 79.3103, 276.176, 20.1662, 1.62 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 40/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -99.0803, 87.6336, -17.7141, 0.22 ) }
    dend_21 { pt3dadd( -100.517, 87.4673, -16.0012, 0.22 ) }
    dend_21 { pt3dadd( -100.575, 87.4548, -15.9303, 0.22 ) }
    dend_21 { pt3dadd( -100.953, 87.3398, -15.4916, 0.22 ) }
    dend_21 { pt3dadd( -102.065, 86.9515, -14.2445, 1.03 ) }
    dend_21 { pt3dadd( -102.687, 86.7127, -13.5815, 1.25 ) }
    dend_21 { pt3dadd( -104.105, 86.1572, -12.225, 0.22 ) }
    dend_21 { pt3dadd( -104.385, 86.0322, -12.0067, 0.74 ) }
    dend_21 { pt3dadd( -105.138, 85.7029, -11.4749, 0.22 ) }
    dend_21 { pt3dadd( -105.79, 85.4228, -11.0588, 0.88 ) }
    dend_21 { pt3dadd( -106.462, 85.1564, -10.6924, 1.03 ) }
    dend_21 { pt3dadd( -107.709, 84.6971, -10.1008, 0.22 ) }
    dend_21 { pt3dadd( -108.609, 84.377, -9.76798, 0.22 ) }
    dend_21 { pt3dadd( -109.379, 84.0769, -9.47152, 0.74 ) }
    dend_21 { pt3dadd( -109.661, 83.9514, -9.35868, 1.33 ) }
    dend_21 { pt3dadd( -109.734, 83.913, -9.33022, 1.33 ) }
    dend_21 { pt3dadd( -110.102, 83.6908, -9.18244, 1.33 ) }
    dend_21 { pt3dadd( -110.744, 83.1983, -8.83076, 0.88 ) }
    dend_21 { pt3dadd( -111.51, 82.5236, -8.32768, 0.29 ) }
    dend_21 { pt3dadd( -112.547, 81.4799, -7.56875, 0.22 ) }
    dend_21 { pt3dadd( -113.018, 80.9517, -7.19799, 0.88 ) }
    dend_21 { pt3dadd( -113.408, 80.3979, -6.7956, 1.03 ) }
    dend_21 { pt3dadd( -114.132, 79.1334, -5.84759, 0.22 ) }
    dend_21 { pt3dadd( -114.157, 79.0796, -5.80669, 0.22 ) }
    dend_21 { pt3dadd( -114.393, 78.3457, -5.19116, 1.25 ) }
    dend_21 { pt3dadd( -114.497, 77.8165, -4.67465, 1.47 ) }
    dend_21 { pt3dadd( -114.809, 76.2782, -2.98145, 0.22 ) }
    dend_21 { pt3dadd( -114.821, 76.2222, -2.91002, 0.22 ) }
    dend_21 { pt3dadd( -114.954, 75.8644, -2.39627, 0.74 ) }
    dend_21 { pt3dadd( -115.535, 74.7307, -0.540196, 0.22 ) }
    dend_21 { pt3dadd( -116.212, 73.7707, 1.30799, 1.11 ) }
    dend_21 { pt3dadd( -116.506, 73.4715, 1.95994, 1.33 ) }
    dend_21 { pt3dadd( -117.136, 73.0112, 3.09622, 0.88 ) }
    dend_21 { pt3dadd( -117.993, 72.5243, 4.36255, 0.22 ) }
    dend_21 { pt3dadd( -118.556, 72.2949, 5.01745, 1.11 ) }
    dend_21 { pt3dadd( -118.929, 72.1859, 5.33068, 1.25 ) }
    dend_21 { pt3dadd( -119.55, 72.0257, 5.7569, 0.96 ) }
    dend_21 { pt3dadd( -119.608, 72.0072, 5.79681, 0.96 ) }
    dend_21 { pt3dadd( -121.033, 71.5525, 6.70568, 0.22 ) }
    dend_21 { pt3dadd( -122.222, 71.1784, 7.49546, 0.66 ) }
    dend_21 { pt3dadd( -122.658, 71.0412, 7.79965, 0.96 ) }
    dend_21 { pt3dadd( -123.142, 70.8777, 8.15315, 0.81 ) }
    dend_21 { pt3dadd( -124.149, 70.5154, 8.91861, 0.22 ) }
    dend_21 { pt3dadd( -124.855, 70.2339, 9.46752, 0.52 ) }
    dend_21 { pt3dadd( -125.181, 70.0477, 9.73887, 0.66 ) }
    dend_21 { pt3dadd( -125.991, 69.4534, 10.4034, 0.22 ) }
    dend_21 { pt3dadd( -126.54, 68.969, 10.8946, 0.74 ) }
    dend_21 { pt3dadd( -126.599, 68.9073, 10.9517, 0.74 ) }
    dend_21 { pt3dadd( -126.811, 68.6649, 11.1556, 0.88 ) }
    dend_21 { pt3dadd( -127.912, 67.2896, 12.2792, 0.22 ) }
    dend_21 { pt3dadd( -128.235, 66.8753, 12.6028, 0.96 ) }
    dend_21 { pt3dadd( -128.814, 66.1274, 13.1667, 0.22 ) }
    dend_21 { pt3dadd( -128.854, 66.0807, 13.2046, 0.22 ) }
    dend_21 { pt3dadd( -129.385, 65.5672, 13.6759, 0.44 ) }
    dend_21 { pt3dadd( -129.777, 65.2676, 13.9968, 0.44 ) }
    dend_21 { pt3dadd( -130.648, 64.8308, 14.6122, 0.22 ) }
    dend_21 { pt3dadd( -130.704, 64.8086, 14.653, 0.22 ) }
    dend_21 { pt3dadd( -131.302, 64.5605, 15.0859, 0.22 ) }
    dend_21 { pt3dadd( -131.841, 64.3279, 15.5482, 0.81 ) }
    dend_21 { pt3dadd( -132.131, 64.1993, 15.8666, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_21 { pt3dadd( -132.531, 63.9976, 16.4034, 0.74 ) }
    dend_21 { pt3dadd( -133.358, 63.4516, 17.8841, 0.22 ) }
    dend_21 { pt3dadd( -133.712, 63.1275, 18.6601, 0.22 ) }
    dend_21 { pt3dadd( -134.206, 62.5333, 19.9871, 0.22 ) }
    dend_21 { pt3dadd( -134.664, 61.8369, 21.521, 0.88 ) }
    dend_21 { pt3dadd( -135.063, 61.142, 23.1456, 1.11 ) }
    dend_21 { pt3dadd( -135.478, 60.3267, 25.1172, 0.22 ) }
    dend_21 { pt3dadd( -135.635, 59.9911, 25.9621, 0.74 ) }
    dend_21 { pt3dadd( -135.648, 59.9666, 26.0293, 0.74 ) }
    dend_21 { pt3dadd( -135.927, 59.5121, 27.3634, 1.03 ) }
    dend_21 { pt3dadd( -136.485, 58.8658, 29.5574, 0.29 ) }
    dend_21 { pt3dadd( -136.583, 58.788, 29.8615, 0.66 ) }
    dend_21 { pt3dadd( -136.609, 58.7729, 29.9331, 0.66 ) }
    dend_21 { pt3dadd( -136.87, 58.6542, 30.5907, 0.81 ) }
    dend_21 { pt3dadd( -137.271, 58.4772, 31.7939, 1.03 ) }
    dend_21 { pt3dadd( -137.973, 58.1003, 34.1717, 0.22 ) }
    dend_21 { pt3dadd( -138.173, 57.9595, 34.9501, 0.22 ) }
    dend_21 { pt3dadd( -138.69, 57.4496, 37.2933, 0.88 ) }
    dend_21 { pt3dadd( -138.861, 57.2495, 38.1046, 1.18 ) }
    dend_21 { pt3dadd( -139.658, 56.2318, 41.9384, 0.29 ) }
    dend_21 { pt3dadd( -139.836, 56.0154, 42.7155, 0.88 ) }
    dend_21 { pt3dadd( -139.98, 55.867, 43.2413, 1.11 ) }
    dend_21 { pt3dadd( -140.464, 55.3633, 44.9187, 0.22 ) }
    dend_21 { pt3dadd( -140.712, 55.0989, 45.6042, 0.66 ) }
    dend_21 { pt3dadd( -140.983, 54.8115, 46.2624, 0.96 ) }
    dend_21 { pt3dadd( -141.605, 54.2463, 47.647, 0.22 ) }
    dend_21 { pt3dadd( -141.98, 53.9635, 48.5198, 0.22 ) }
    dend_21 { pt3dadd( -142.73, 53.4449, 50.3652, 0.81 ) }
    dend_21 { pt3dadd( -143.158, 53.1421, 51.5137, 0.81 ) }
    dend_21 { pt3dadd( -143.181, 53.1226, 51.5852, 0.81 ) }
    dend_21 { pt3dadd( -143.967, 52.2993, 54.3215, 0.37 ) }
    dend_21 { pt3dadd( -144.24, 51.9352, 55.3527, 0.88 ) }
    dend_21 { pt3dadd( -144.308, 51.8097, 55.6732, 1.11 ) }
    dend_21 { pt3dadd( -144.644, 51.0432, 57.3907, 0.29 ) }
    dend_21 { pt3dadd( -144.657, 51.0056, 57.4683, 0.29 ) }
    dend_21 { pt3dadd( -144.917, 50.2668, 58.9509, 0.29 ) }
    dend_21 { pt3dadd( -145.094, 49.7987, 59.8198, 0.52 ) }
    dend_21 { pt3dadd( -145.449, 48.8373, 61.7522, 0.29 ) }
    dend_21 { pt3dadd( -145.576, 48.5342, 62.3979, 0.81 ) }
    dend_21 { pt3dadd( -145.66, 48.3518, 62.8011, 0.96 ) }
    dend_21 { pt3dadd( -145.997, 47.745, 64.2726, 0.29 ) }
    dend_21 { pt3dadd( -146.145, 47.5523, 64.8029, 0.29 ) }
    dend_21 { pt3dadd( -146.176, 47.5224, 64.8981, 0.29 ) }
    dend_21 { pt3dadd( -146.757, 47.0711, 66.3416, 0.22 ) }
    dend_21 { pt3dadd( -146.928, 46.8863, 66.8366, 1.03 ) }
    dend_21 { pt3dadd( -147.457, 46.0932, 68.6087, 0.29 ) }
    dend_21 { pt3dadd( -147.539, 45.8858, 68.9544, 0.96 ) }
    dend_21 { pt3dadd( -147.563, 45.7818, 69.11, 0.96 ) }
    dend_21 { pt3dadd( -147.557, 45.4839, 69.5184, 1.18 ) }
    dend_21 { pt3dadd( -147.34, 44.4794, 70.7705, 0.15 ) }
    dend_21 { pt3dadd( -147.308, 44.4221, 70.8269, 0.15 ) }
    dend_21 { pt3dadd( -146.811, 43.9122, 71.1293, 0.15 ) }
    dend_21 { pt3dadd( -146.722, 43.8306, 71.175, 0.15 ) }
    dend_21 { pt3dadd( -145.384, 42.7314, 71.7477, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 54/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -99.0803, 87.6336, -17.7141, 0.29 ) }
    dend_20 { pt3dadd( -100.192, 89.5085, -18.2915, 0.29 ) }
    dend_20 { pt3dadd( -100.686, 90.3373, -18.5248, 0.22 ) }
    dend_20 { pt3dadd( -101.606, 91.9011, -18.9414, 0.52 ) }
    dend_20 { pt3dadd( -102.201, 92.9647, -19.2068, 0.22 ) }
    dend_20 { pt3dadd( -102.244, 93.0408, -19.2239, 0.22 ) }
    dend_20 { pt3dadd( -102.79, 94.0072, -19.416, 0.52 ) }
    dend_20 { pt3dadd( -102.872, 94.163, -19.4276, 0.52 ) }
    dend_20 { pt3dadd( -102.959, 94.3178, -19.4361, 0.52 ) }
    dend_20 { pt3dadd( -103.378, 94.8901, -19.5007, 0.22 ) }
    dend_20 { pt3dadd( -103.95, 95.6026, -19.5987, 0.81 ) }
    dend_20 { pt3dadd( -104.367, 96.0944, -19.6794, 1.18 ) }
    dend_20 { pt3dadd( -104.715, 96.5456, -19.7594, 0.96 ) }
    dend_20 { pt3dadd( -104.757, 96.6048, -19.7736, 0.96 ) }
    dend_20 { pt3dadd( -105.789, 98.0564, -20.2236, 0.22 ) }
    dend_20 { pt3dadd( -106.501, 99.0691, -20.5811, 0.22 ) }
    dend_20 { pt3dadd( -107.077, 100.049, -21.0141, 0.44 ) }
    dend_20 { pt3dadd( -107.805, 101.214, -21.614, 0.22 ) }
    dend_20 { pt3dadd( -108.545, 102.514, -22.3308, 0.22 ) }
    dend_20 { pt3dadd( -109.135, 103.663, -22.9748, 1.03 ) }
    dend_20 { pt3dadd( -109.308, 104.068, -23.2, 1.4 ) }
    dend_20 { pt3dadd( -110.137, 106.048, -24.3723, 1.18 ) }
    dend_20 { pt3dadd( -110.94, 107.887, -25.4866, 0.22 ) }
    dend_20 { pt3dadd( -111.62, 109.35, -26.3631, 0.22 ) }
    dend_20 { pt3dadd( -111.837, 109.861, -26.6243, 0.22 ) }
    dend_20 { pt3dadd( -112.141, 110.67, -26.9896, 0.74 ) }
    dend_20 { pt3dadd( -112.388, 111.346, -27.2651, 0.74 ) }
    dend_20 { pt3dadd( -112.626, 111.979, -27.4671, 0.74 ) }
    dend_20 { pt3dadd( -113.002, 113.131, -27.7855, 0.22 ) }
    dend_20 { pt3dadd( -113.411, 114.09, -28.0299, 0.22 ) }
    dend_20 { pt3dadd( -113.822, 115.024, -28.2398, 1.25 ) }
    dend_20 { pt3dadd( -113.97, 115.363, -28.3052, 1.47 ) }
    dend_20 { pt3dadd( -114.201, 116.033, -28.4085, 0.74 ) }
    dend_20 { pt3dadd( -114.427, 116.887, -28.4881, 0.22 ) }
    dend_20 { pt3dadd( -114.449, 116.973, -28.4902, 0.22 ) }
    dend_20 { pt3dadd( -114.688, 117.939, -28.5061, 0.37 ) }
    dend_20 { pt3dadd( -114.706, 118.026, -28.5076, 0.37 ) }
    dend_20 { pt3dadd( -114.894, 119.134, -28.5598, 0.22 ) }
    dend_20 { pt3dadd( -114.989, 119.814, -28.6117, 0.96 ) }
    dend_20 { pt3dadd( -115.177, 120.959, -28.7537, 0.22 ) }
    dend_20 { pt3dadd( -115.209, 121.062, -28.7734, 0.22 ) }
    dend_20 { pt3dadd( -115.512, 121.657, -28.9067, 0.22 ) }
    dend_20 { pt3dadd( -115.605, 121.794, -28.9391, 0.22 ) }
    dend_20 { pt3dadd( -116.038, 122.247, -29.0734, 0.22 ) }
    dend_20 { pt3dadd( -117.18, 123.199, -29.3976, 0.81 ) }
    dend_20 { pt3dadd( -118.397, 124.082, -29.7076, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_20 { pt3dadd( -119.201, 124.621, -29.8846, 0.88 ) }
    dend_20 { pt3dadd( -119.361, 124.724, -29.9129, 1.03 ) }
    dend_20 { pt3dadd( -120.503, 125.455, -30.0901, 0.22 ) }
    dend_20 { pt3dadd( -121.219, 125.92, -30.1745, 0.29 ) }
    dend_20 { pt3dadd( -121.852, 126.335, -30.2092, 0.29 ) }
    dend_20 { pt3dadd( -122.43, 126.786, -30.2243, 0.29 ) }
    dend_20 { pt3dadd( -123.287, 127.543, -30.2549, 0.37 ) }
    dend_20 { pt3dadd( -124.193, 128.422, -30.2761, 1.03 ) }
    dend_20 { pt3dadd( -124.864, 129.151, -30.2763, 1.47 ) }
    dend_20 { pt3dadd( -125.373, 129.727, -30.2827, 1.33 ) }
    dend_20 { pt3dadd( -126.008, 130.428, -30.3413, 0.22 ) }
    dend_20 { pt3dadd( -126.627, 131.085, -30.4627, 0.22 ) }
    dend_20 { pt3dadd( -127.14, 131.63, -30.6223, 0.96 ) }
    dend_20 { pt3dadd( -127.188, 131.684, -30.6419, 0.96 ) }
    dend_20 { pt3dadd( -127.443, 131.974, -30.7744, 0.96 ) }
    dend_20 { pt3dadd( -128.323, 133.005, -31.2718, 0.22 ) }
    dend_20 { pt3dadd( -128.902, 133.637, -31.5754, 0.74 ) }
    dend_20 { pt3dadd( -129.506, 134.3, -31.87, 0.22 ) }
    dend_20 { pt3dadd( -129.952, 134.814, -32.0683, 0.22 ) }
    dend_20 { pt3dadd( -130.001, 134.872, -32.0869, 0.22 ) }
    dend_20 { pt3dadd( -130.421, 135.399, -32.2054, 1.03 ) }
    dend_20 { pt3dadd( -131.202, 136.431, -32.2688, 0.22 ) }
    dend_20 { pt3dadd( -131.753, 137.152, -32.2499, 0.37 ) }
    dend_20 { pt3dadd( -132.108, 137.564, -32.2183, 0.22 ) }
    dend_20 { pt3dadd( -132.195, 137.656, -32.2079, 0.22 ) }
    dend_20 { pt3dadd( -132.823, 138.297, -32.1525, 0.22 ) }
    dend_20 { pt3dadd( -133.386, 138.848, -32.1178, 0.66 ) }
    dend_20 { pt3dadd( -133.675, 139.122, -32.1151, 0.96 ) }
    dend_20 { pt3dadd( -134.355, 139.707, -32.1483, 0.22 ) }
    dend_20 { pt3dadd( -134.879, 140.095, -32.1799, 0.22 ) }
    dend_20 { pt3dadd( -135.827, 140.71, -32.2336, 0.81 ) }
    dend_20 { pt3dadd( -135.904, 140.751, -32.2396, 0.81 ) }
    dend_20 { pt3dadd( -136.592, 141.08, -32.3042, 0.59 ) }
    dend_20 { pt3dadd( -137.253, 141.399, -32.3572, 0.59 ) }
    dend_20 { pt3dadd( -137.859, 141.76, -32.3915, 0.88 ) }
    dend_20 { pt3dadd( -138.34, 142.06, -32.4059, 0.52 ) }
    dend_20 { pt3dadd( -139.13, 142.612, -32.3912, 0.22 ) }
    dend_20 { pt3dadd( -139.195, 142.66, -32.3881, 0.22 ) }
    dend_20 { pt3dadd( -139.738, 143.098, -32.3417, 0.22 ) }
    dend_20 { pt3dadd( -140.823, 144.053, -32.2467, 1.33 ) }
    dend_20 { pt3dadd( -141.229, 144.442, -32.2095, 0.96 ) }
    dend_20 { pt3dadd( -141.809, 145.027, -32.1454, 0.22 ) }
    dend_20 { pt3dadd( -142.362, 145.605, -32.0612, 0.22 ) }
    dend_20 { pt3dadd( -142.817, 146.065, -31.9871, 0.22 ) }
    dend_20 { pt3dadd( -143.404, 146.636, -31.883, 0.52 ) }
    dend_20 { pt3dadd( -143.496, 146.727, -31.8746, 0.52 ) }
    dend_20 { pt3dadd( -143.823, 147.095, -31.8756, 0.88 ) }
    dend_20 { pt3dadd( -144.115, 147.468, -31.9079, 1.11 ) }
    dend_20 { pt3dadd( -144.159, 147.523, -31.9203, 1.11 ) }
    dend_20 { pt3dadd( -144.677, 148.13, -32.118, 0.88 ) }
    dend_20 { pt3dadd( -145.65, 149.15, -32.5398, 0.22 ) }
    dend_20 { pt3dadd( -146.267, 149.743, -32.8163, 1.25 ) }
    dend_20 { pt3dadd( -146.558, 149.997, -32.9448, 0.96 ) }
    dend_20 { pt3dadd( -147.759, 150.986, -33.4595, 0.22 ) }
    dend_20 { pt3dadd( -147.809, 151.025, -33.4804, 0.22 ) }
    dend_20 { pt3dadd( -148.362, 151.471, -33.6999, 0.22 ) }
    dend_20 { pt3dadd( -148.441, 151.537, -33.7242, 0.22 ) }
    dend_20 { pt3dadd( -148.971, 151.963, -33.8755, 0.88 ) }
    dend_20 { pt3dadd( -149.258, 152.203, -33.9404, 0.88 ) }
    dend_20 { pt3dadd( -149.959, 152.841, -34.0653, 0.22 ) }
    dend_20 { pt3dadd( -150.716, 153.561, -34.203, 0.88 ) }
    dend_20 { pt3dadd( -151.084, 153.95, -34.2589, 0.88 ) }
    dend_20 { pt3dadd( -152.029, 154.999, -34.3901, 0.15 ) }
    dend_20 { pt3dadd( -152.687, 155.735, -34.4692, 0.66 ) }
    dend_20 { pt3dadd( -152.741, 155.794, -34.4736, 0.66 ) }
    dend_20 { pt3dadd( -153.057, 156.13, -34.4828, 0.59 ) }
    dend_20 { pt3dadd( -153.744, 156.806, -34.4857, 0.22 ) }
    dend_20 { pt3dadd( -153.8, 156.859, -34.4896, 0.22 ) }
    dend_20 { pt3dadd( -154.263, 157.285, -34.5285, 0.22 ) }
    dend_20 { pt3dadd( -154.324, 157.332, -34.5375, 0.22 ) }
    dend_20 { pt3dadd( -154.795, 157.678, -34.6278, 0.66 ) }
    dend_20 { pt3dadd( -155.374, 158.065, -34.7508, 0.74 ) }
    dend_20 { pt3dadd( -156.465, 158.833, -34.9075, 0.15 ) }
    dend_20 { pt3dadd( -156.595, 158.941, -34.9109, 0.15 ) }
    dend_20 { pt3dadd( -156.977, 159.282, -34.894, 0.15 ) }
    dend_20 { pt3dadd( -157.625, 159.916, -34.8304, 0.88 ) }
    dend_20 { pt3dadd( -157.874, 160.198, -34.7941, 1.18 ) }
    dend_20 { pt3dadd( -158.699, 161.298, -34.7187, 0.22 ) }
    dend_20 { pt3dadd( -159.28, 162.163, -34.6768, 0.22 ) }
    dend_20 { pt3dadd( -159.793, 162.983, -34.6787, 0.22 ) }
    dend_20 { pt3dadd( -160.21, 163.697, -34.7118, 0.96 ) }
    dend_20 { pt3dadd( -160.546, 164.295, -34.7616, 1.18 ) }
    dend_20 { pt3dadd( -161.257, 165.558, -34.9447, 0.22 ) }
    dend_20 { pt3dadd( -161.59, 166.098, -35.078, 0.37 ) }
    dend_20 { pt3dadd( -161.632, 166.163, -35.0943, 0.37 ) }
    dend_20 { pt3dadd( -161.759, 166.344, -35.1352, 0.37 ) }
    dend_20 { pt3dadd( -162.275, 166.952, -35.263, 0.22 ) }
    dend_20 { pt3dadd( -162.481, 167.158, -35.2974, 0.22 ) }
    dend_20 { pt3dadd( -163.124, 167.756, -35.3515, 0.66 ) }
    dend_20 { pt3dadd( -163.42, 168.029, -35.3781, 0.96 ) }
    dend_20 { pt3dadd( -164.122, 168.734, -35.4575, 1.03 ) }
    dend_20 { pt3dadd( -164.398, 169.019, -35.5222, 1.25 ) }
    dend_20 { pt3dadd( -165.135, 169.789, -35.7538, 0.22 ) }
    dend_20 { pt3dadd( -165.638, 170.311, -35.9749, 0.59 ) }
    dend_20 { pt3dadd( -166.354, 171.067, -36.3401, 0.22 ) }
    dend_20 { pt3dadd( -166.793, 171.529, -36.5862, 0.22 ) }
    dend_20 { pt3dadd( -167.848, 172.644, -37.2324, 1.18 ) }
    dend_20 { pt3dadd( -168.165, 172.994, -37.4486, 1.18 ) }
    dend_20 { pt3dadd( -169.336, 174.372, -38.3128, 0.22 ) }
    dend_20 { pt3dadd( -169.835, 174.97, -38.6417, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_20 { pt3dadd( -169.93, 175.083, -38.6851, 0.44 ) }
    dend_20 { pt3dadd( -169.977, 175.139, -38.6964, 0.44 ) }
    dend_20 { pt3dadd( -170.73, 176.082, -38.7008, 0.22 ) }
    dend_20 { pt3dadd( -171.308, 176.789, -38.6271, 0.22 ) }
    dend_20 { pt3dadd( -172.079, 177.663, -38.3875, 0.22 ) }
    dend_20 { pt3dadd( -172.976, 178.629, -38.0889, 1.25 ) }
    dend_20 { pt3dadd( -173.354, 179.023, -37.9549, 1.18 ) }
    dend_20 { pt3dadd( -173.812, 179.474, -37.7773, 0.74 ) }
    dend_20 { pt3dadd( -174.368, 179.963, -37.5226, 0.22 ) }
    dend_20 { pt3dadd( -174.997, 180.485, -37.2391, 0.52 ) }
    dend_20 { pt3dadd( -183.162, 187.559, -39.8762, 0.52 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 11/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -158.592, 12.4137, 91.5819, 0.22 ) }
    dend_16 { pt3dadd( -159.583, 12.2417, 91.9864, 0.22 ) }
    dend_16 { pt3dadd( -160.129, 12.1479, 92.2167, 0.22 ) }
    dend_16 { pt3dadd( -160.983, 11.9907, 92.5855, 1.11 ) }
    dend_16 { pt3dadd( -161.228, 11.9498, 92.6744, 1.55 ) }
    dend_16 { pt3dadd( -162.305, 11.7566, 93.027, 0.22 ) }
    dend_16 { pt3dadd( -162.748, 11.6679, 93.1785, 0.66 ) }
    dend_16 { pt3dadd( -162.816, 11.6538, 93.203, 0.66 ) }
    dend_16 { pt3dadd( -163.226, 11.5791, 93.3604, 0.66 ) }
    dend_16 { pt3dadd( -164.253, 11.4349, 93.8433, 0.22 ) }
    dend_16 { pt3dadd( -164.832, 11.3854, 94.1521, 0.22 ) }
    dend_16 { pt3dadd( -165.631, 11.3585, 94.6156, 0.74 ) }
    dend_16 { pt3dadd( -166.083, 11.3587, 94.8938, 0.96 ) }
    dend_16 { pt3dadd( -166.753, 11.3665, 95.3196, 0.96 ) }
    dend_16 { pt3dadd( -167.633, 11.3636, 95.9031, 0.37 ) }
    dend_16 { pt3dadd( -168.239, 11.3292, 96.3229, 0.22 ) }
    dend_16 { pt3dadd( -168.692, 11.2861, 96.6099, 0.22 ) }
    dend_16 { pt3dadd( -169.372, 11.1973, 96.9831, 0.88 ) }
    dend_16 { pt3dadd( -170.024, 11.093, 97.3033, 1.33 ) }
    dend_16 { pt3dadd( -170.84, 10.9631, 97.6454, 0.74 ) }
    dend_16 { pt3dadd( -171.594, 10.8468, 97.9262, 0.22 ) }
    dend_16 { pt3dadd( -172.309, 10.7351, 98.1918, 0.22 ) }
    dend_16 { pt3dadd( -173.375, 10.5613, 98.5887, 0.66 ) }
    dend_16 { pt3dadd( -173.875, 10.4804, 98.7745, 1.25 ) }
    dend_16 { pt3dadd( -174.808, 10.3447, 99.1173, 1.55 ) }
    dend_16 { pt3dadd( -176.341, 10.1422, 99.6444, 0.15 ) }
    dend_16 { pt3dadd( -177.08, 10.0473, 99.8958, 1.25 ) }
    dend_16 { pt3dadd( -178.006, 9.90539, 100.211, 0.81 ) }
    dend_16 { pt3dadd( -178.713, 9.76365, 100.454, 0.66 ) }
    dend_16 { pt3dadd( -179.402, 9.59586, 100.692, 0.88 ) }
    dend_16 { pt3dadd( -179.946, 9.43328, 100.877, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 42/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -158.592, 12.4137, 91.5819, 0.22 ) }
    dend_15 { pt3dadd( -158.73, 13.1442, 91.3112, 0.22 ) }
    dend_15 { pt3dadd( -158.748, 13.2082, 91.2868, 0.22 ) }
    dend_15 { pt3dadd( -158.972, 13.9526, 90.9968, 0.66 ) }
    dend_15 { pt3dadd( -158.99, 14.0075, 90.9709, 0.66 ) }
    dend_15 { pt3dadd( -159.242, 14.8577, 90.5318, 0.22 ) }
    dend_15 { pt3dadd( -159.264, 14.9353, 90.49, 0.22 ) }
    dend_15 { pt3dadd( -159.392, 15.6559, 90.0474, 0.29 ) }
    dend_15 { pt3dadd( -159.403, 15.7226, 90.0039, 0.29 ) }
    dend_15 { pt3dadd( -159.551, 16.7226, 89.2792, 0.22 ) }
    dend_15 { pt3dadd( -159.615, 17.1901, 88.9396, 0.22 ) }
    dend_15 { pt3dadd( -159.62, 17.2451, 88.9006, 0.22 ) }
    dend_15 { pt3dadd( -159.627, 18.0093, 88.324, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 39.2543, 79.1199, 39.6558, 0.52 ) }
    dend_10 { pt3dadd( 40.5293, 78.9982, 39.242, 0.52 ) }
    dend_10 { pt3dadd( 41.2322, 78.9582, 39.0307, 0.74 ) }
    dend_10 { pt3dadd( 41.81, 78.9453, 38.879, 0.74 ) }
    dend_10 { pt3dadd( 41.8691, 78.9445, 38.8688, 0.74 ) }
    dend_10 { pt3dadd( 42.4243, 78.9479, 38.8071, 0.74 ) }
    dend_10 { pt3dadd( 43.0532, 78.9738, 38.7554, 0.59 ) }
    dend_10 { pt3dadd( 43.1086, 78.9799, 38.7546, 0.59 ) }
    dend_10 { pt3dadd( 43.9576, 79.0865, 38.7466, 0.44 ) }
    dend_10 { pt3dadd( 45.214, 79.2389, 38.7285, 0.22 ) }
    dend_10 { pt3dadd( 45.7897, 79.2933, 38.7086, 1.18 ) }
    dend_10 { pt3dadd( 46.4008, 79.3374, 38.6798, 1.18 ) }
    dend_10 { pt3dadd( 47.5479, 79.4004, 38.6079, 0.44 ) }
    dend_10 { pt3dadd( 48.2535, 79.4234, 38.56, 0.44 ) }
    dend_10 { pt3dadd( 49.2481, 79.4437, 38.4984, 0.37 ) }
    dend_10 { pt3dadd( 49.928, 79.4474, 38.452, 0.66 ) }
    dend_10 { pt3dadd( 49.9928, 79.4461, 38.4483, 0.66 ) }
    dend_10 { pt3dadd( 50.5761, 79.4375, 38.4858, 0.66 ) }
    dend_10 { pt3dadd( 51.5014, 79.4787, 38.6776, 0.29 ) }
    dend_10 { pt3dadd( 52.0343, 79.5545, 38.8523, 0.88 ) }
    dend_10 { pt3dadd( 52.2103, 79.5995, 38.9242, 0.88 ) }
    dend_10 { pt3dadd( 52.322, 79.6375, 38.9701, 0.88 ) }
    dend_10 { pt3dadd( 53.7501, 80.2108, 39.5008, 0.29 ) }
    dend_10 { pt3dadd( 54.2235, 80.4228, 39.6557, 0.29 ) }
    dend_10 { pt3dadd( 54.8852, 80.7245, 39.8163, 1.25 ) }
    dend_10 { pt3dadd( 55.324, 80.9203, 39.8868, 1.55 ) }
    dend_10 { pt3dadd( 56.0491, 81.2405, 39.9786, 0.88 ) }
    dend_10 { pt3dadd( 56.5108, 81.4389, 40.0079, 0.66 ) }
    dend_10 { pt3dadd( 57.268, 81.748, 39.9566, 0.44 ) }
    dend_10 { pt3dadd( 58.0339, 82.0473, 39.9055, 0.44 ) }
    dend_10 { pt3dadd( 58.553, 82.2401, 39.8671, 0.81 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 86/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 39.2543, 79.1199, 39.6558, 0.44 ) }
    dend_9 { pt3dadd( 39.4452, 80.2263, 40.4465, 0.44 ) }
    dend_9 { pt3dadd( 39.7809, 81.6859, 41.546, 0.44 ) }
    dend_9 { pt3dadd( 40.0622, 82.6623, 42.2886, 0.44 ) }
    dend_9 { pt3dadd( 40.0808, 82.7227, 42.3316, 0.44 ) }
    dend_9 { pt3dadd( 40.2956, 83.3936, 42.7888, 1.18 ) }
    dend_9 { pt3dadd( 40.8851, 85.0735, 43.8164, 0.81 ) }
    dend_9 { pt3dadd( 40.9257, 85.1434, 43.8605, 0.81 ) }
    dend_9 { pt3dadd( 41.0999, 85.4384, 44.0586, 0.37 ) }
    dend_9 { pt3dadd( 41.4943, 86.1123, 44.5606, 0.37 ) }
    dend_9 { pt3dadd( 41.5295, 86.1813, 44.6106, 0.37 ) }
    dend_9 { pt3dadd( 41.9021, 86.9954, 45.1885, 0.37 ) }
    dend_9 { pt3dadd( 42.5638, 88.6817, 46.1586, 0.37 ) }
    dend_9 { pt3dadd( 43.1198, 89.8546, 46.7745, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_9 { pt3dadd( 43.1706, 89.9373, 46.8087, 0.29 ) }
    dend_9 { pt3dadd( 43.8928, 90.7088, 46.9334, 0.29 ) }
    dend_9 { pt3dadd( 43.9555, 90.761, 46.922, 0.29 ) }
    dend_9 { pt3dadd( 44.7051, 91.3066, 46.6383, 0.29 ) }
    dend_9 { pt3dadd( 45.676, 92.0929, 46.1514, 0.29 ) }
    dend_9 { pt3dadd( 46.7053, 92.843, 45.6166, 0.29 ) }
    dend_9 { pt3dadd( 47.4412, 93.3544, 45.2327, 0.29 ) }
    dend_9 { pt3dadd( 48.6394, 94.1303, 44.6022, 0.29 ) }
    dend_9 { pt3dadd( 48.8468, 94.2747, 44.4919, 0.29 ) }
    dend_9 { pt3dadd( 50.0836, 95.3127, 43.8191, 1.47 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 10/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -21.4534, 41.8284, 29.1147, 0.59 ) }
    dend_7 { pt3dadd( -20.6022, 42.1066, 29.6428, 0.59 ) }
    dend_7 { pt3dadd( -19.6575, 42.5423, 30.161, 0.52 ) }
    dend_7 { pt3dadd( -19.5135, 42.6341, 30.2428, 0.52 ) }
    dend_7 { pt3dadd( -18.7321, 43.3509, 30.7395, 0.81 ) }
    dend_7 { pt3dadd( -18.6745, 43.4239, 30.783, 0.81 ) }
    dend_7 { pt3dadd( -18.4563, 43.9749, 31.0689, 1.03 ) }
    dend_7 { pt3dadd( -18.6599, 44.8354, 31.6059, 0.96 ) }
    dend_7 { pt3dadd( -18.9395, 45.4007, 31.9639, 0.66 ) }
    dend_7 { pt3dadd( -19.3849, 46.1107, 32.4165, 0.59 ) }
    dend_7 { pt3dadd( -19.8745, 46.7248, 32.8189, 0.59 ) }
    dend_7 { pt3dadd( -20.8484, 47.6321, 33.5513, 0.59 ) }
    dend_7 { pt3dadd( -22.3376, 48.7491, 34.6146, 0.37 ) }
    dend_7 { pt3dadd( -22.8342, 49.0835, 35.0001, 0.37 ) }
    dend_7 { pt3dadd( -22.8941, 49.1233, 35.0546, 0.37 ) }
    dend_7 { pt3dadd( -23.7003, 49.6824, 35.941, 0.37 ) }
    dend_7 { pt3dadd( -24.6967, 50.5277, 37.3797, 0.37 ) }
    dend_7 { pt3dadd( -24.7243, 50.566, 37.4407, 0.37 ) }
    dend_7 { pt3dadd( -24.9009, 51.474, 38.603, 0.44 ) }
    dend_7 { pt3dadd( -24.8448, 52.0282, 39.1964, 0.44 ) }
    dend_7 { pt3dadd( -24.8261, 52.122, 39.2844, 0.44 ) }
    dend_7 { pt3dadd( -24.6682, 52.7916, 39.8887, 0.44 ) }
    dend_7 { pt3dadd( -24.4336, 54.0216, 40.9079, 0.44 ) }
    dend_7 { pt3dadd( -24.3774, 54.9706, 41.6778, 0.59 ) }
    dend_7 { pt3dadd( -24.4318, 55.4035, 42.0275, 0.59 ) }
    dend_7 { pt3dadd( -24.7246, 56.2473, 42.8125, 0.59 ) }
    dend_7 { pt3dadd( -25.1606, 57.0711, 43.8467, 0.81 ) }
    dend_7 { pt3dadd( -25.3704, 57.3527, 44.4035, 0.81 ) }
    dend_7 { pt3dadd( -25.4039, 57.3871, 44.5162, 0.81 ) }
    dend_7 { pt3dadd( -25.5187, 57.5935, 45.6166, 1.03 ) }
    dend_7 { pt3dadd( -25.4766, 57.7819, 47.0098, 0.74 ) }
    dend_7 { pt3dadd( -25.2317, 58.0, 48.8653, 0.66 ) }
    dend_7 { pt3dadd( -24.8371, 58.1974, 50.7557, 0.66 ) }
    dend_7 { pt3dadd( -24.6371, 58.2996, 51.6478, 0.59 ) }
    dend_7 { pt3dadd( -24.2336, 58.7457, 53.6837, 0.59 ) }
    dend_7 { pt3dadd( -24.147, 58.9349, 54.1279, 0.44 ) }
    dend_7 { pt3dadd( -24.0496, 59.402, 54.6829, 0.59 ) }
    dend_7 { pt3dadd( -24.0471, 59.4633, 54.7281, 0.59 ) }
    dend_7 { pt3dadd( -24.0051, 60.3849, 55.2631, 0.37 ) }
    dend_7 { pt3dadd( -23.8588, 62.164, 56.3784, 0.37 ) }
    dend_7 { pt3dadd( -23.7179, 63.3022, 57.1283, 0.37 ) }
    dend_7 { pt3dadd( -23.5467, 64.045, 57.6862, 0.29 ) }
    dend_7 { pt3dadd( -23.5277, 64.1074, 57.7414, 0.29 ) }
    dend_7 { pt3dadd( -23.1444, 65.228, 58.8224, 0.29 ) }
    dend_7 { pt3dadd( -22.6278, 66.4457, 60.0645, 0.88 ) }
    dend_7 { pt3dadd( -22.6023, 66.5046, 60.1266, 0.88 ) }
    dend_7 { pt3dadd( -22.5101, 66.8259, 60.457, 0.88 ) }
    dend_7 { pt3dadd( -22.3907, 67.8516, 61.4216, 0.66 ) }
    dend_7 { pt3dadd( -22.4142, 68.5459, 61.991, 0.52 ) }
    dend_7 { pt3dadd( -22.5932, 69.5045, 62.6624, 0.44 ) }
    dend_7 { pt3dadd( -22.7895, 70.2191, 63.0606, 0.44 ) }
    dend_7 { pt3dadd( -22.8144, 70.2809, 63.0981, 0.44 ) }
    dend_7 { pt3dadd( -23.369, 71.0384, 63.6399, 0.37 ) }
    dend_7 { pt3dadd( -23.8867, 71.1231, 63.9369, 0.37 ) }
    dend_7 { pt3dadd( -24.0405, 71.1174, 64.0301, 0.37 ) }
    dend_7 { pt3dadd( -24.9727, 71.0277, 64.6956, 0.37 ) }
    dend_7 { pt3dadd( -25.8917, 71.0116, 65.47, 0.59 ) }
    dend_7 { pt3dadd( -26.6938, 71.1252, 66.2914, 0.59 ) }
    dend_7 { pt3dadd( -27.5747, 71.4881, 67.5529, 1.03 ) }
    dend_7 { pt3dadd( -27.8215, 72.1269, 68.6079, 0.29 ) }
    dend_7 { pt3dadd( -27.747, 72.9517, 69.6031, 0.22 ) }
    dend_7 { pt3dadd( -27.4836, 74.0931, 70.7585, 0.29 ) }
    dend_7 { pt3dadd( -27.3265, 74.7385, 71.3136, 0.29 ) }
    dend_7 { pt3dadd( -27.1076, 75.6242, 71.9946, 0.29 ) }
    dend_7 { pt3dadd( -26.9076, 76.3453, 72.4539, 0.29 ) }
    dend_7 { pt3dadd( -26.8672, 76.4705, 72.5306, 0.29 ) }
    dend_7 { pt3dadd( -26.6894, 77.4046, 72.9106, 0.29 ) }
    dend_7 { pt3dadd( -26.2173, 76.0136, 72.946, 0.29 ) }
    dend_7 { pt3dadd( -26.1828, 75.9288, 72.9513, 0.29 ) }
    dend_7 { pt3dadd( -25.5928, 74.9442, 72.9831, 0.22 ) }
    dend_7 { pt3dadd( -24.7819, 74.0752, 72.9967, 0.88 ) }
    dend_7 { pt3dadd( -24.3344, 73.6214, 72.9979, 1.03 ) }
    dend_7 { pt3dadd( -23.1756, 72.5114, 72.989, 0.22 ) }
    dend_7 { pt3dadd( -23.1091, 72.4563, 72.9882, 0.22 ) }
    dend_7 { pt3dadd( -21.9725, 71.6341, 72.9559, 0.22 ) }
    dend_7 { pt3dadd( -20.8697, 71.084, 72.883, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 86/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -21.4534, 41.8284, 29.1147, 0.74 ) }
    dend_4 { pt3dadd( -22.5727, 40.805, 30.3447, 0.74 ) }
    dend_4 { pt3dadd( -22.9199, 40.6384, 30.5812, 0.52 ) }
    dend_4 { pt3dadd( -23.3101, 40.542, 30.7558, 0.37 ) }
    dend_4 { pt3dadd( -24.0585, 40.4347, 31.0121, 0.37 ) }
    dend_4 { pt3dadd( -24.7798, 40.3908, 31.1953, 0.37 ) }
    dend_4 { pt3dadd( -25.3138, 40.4011, 31.2836, 0.37 ) }
    dend_4 { pt3dadd( -26.0457, 40.4907, 31.3401, 0.59 ) }
    dend_4 { pt3dadd( -26.4888, 40.5457, 31.423, 0.37 ) }
    dend_4 { pt3dadd( -26.546, 40.5506, 31.4415, 0.37 ) }
    dend_4 { pt3dadd( -27.0241, 40.5542, 31.6757, 0.37 ) }
    dend_4 { pt3dadd( -27.8283, 40.4849, 32.3277, 0.74 ) }
    dend_4 { pt3dadd( -28.4312, 40.3673, 33.0323, 0.74 ) }
    dend_4 { pt3dadd( -29.0524, 40.1703, 34.1298, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_4 { pt3dadd( -29.3664, 40.0286, 34.9762, 0.59 ) }
    dend_4 { pt3dadd( -29.5119, 39.8937, 35.7173, 0.44 ) }
    dend_4 { pt3dadd( -29.5808, 39.6367, 36.9341, 0.44 ) }
    dend_4 { pt3dadd( -29.5759, 39.624, 36.9889, 0.44 ) }
    dend_4 { pt3dadd( -29.4402, 39.3971, 37.8194, 0.44 ) }
    dend_4 { pt3dadd( -29.4354, 39.3786, 37.8645, 0.44 ) }
    dend_4 { pt3dadd( -29.6106, 38.8623, 38.6262, 0.44 ) }
    dend_4 { pt3dadd( -29.8654, 38.5283, 39.0778, 0.37 ) }
    dend_4 { pt3dadd( -29.91, 38.4888, 39.1365, 0.37 ) }
    dend_4 { pt3dadd( -30.4826, 38.1308, 39.7598, 0.66 ) }
    dend_4 { pt3dadd( -31.1031, 37.8435, 40.3754, 0.66 ) }
    dend_4 { pt3dadd( -31.1327, 37.8325, 40.403, 0.66 ) }
    dend_4 { pt3dadd( -31.9525, 37.5975, 41.1241, 0.59 ) }
    dend_4 { pt3dadd( -32.6833, 37.4314, 41.7289, 0.29 ) }
    dend_4 { pt3dadd( -33.3275, 37.3428, 42.1971, 0.29 ) }
    dend_4 { pt3dadd( -34.2709, 37.3274, 42.7903, 0.44 ) }
    dend_4 { pt3dadd( -34.8328, 37.3934, 43.0909, 0.29 ) }
    dend_4 { pt3dadd( -35.112, 37.4586, 43.2178, 0.29 ) }
    dend_4 { pt3dadd( -35.5843, 37.6479, 43.4267, 0.29 ) }
    dend_4 { pt3dadd( -36.1588, 37.9801, 43.6871, 0.74 ) }
    dend_4 { pt3dadd( -36.3614, 38.1565, 43.7911, 1.03 ) }
    dend_4 { pt3dadd( -36.8489, 38.7695, 44.0319, 0.29 ) }
    dend_4 { pt3dadd( -37.1347, 39.2238, 44.2259, 0.29 ) }
    dend_4 { pt3dadd( -37.6442, 40.1749, 44.7106, 0.81 ) }
    // Section: dend_105, id: dend_105, parent: dend_103 (entry count 24/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( 179.913, -83.7353, -77.0643, 0.44 ) }
    dend_105 { pt3dadd( 182.738, -81.9868, -75.2262, 0.44 ) }
    dend_105 { pt3dadd( 183.967, -81.2029, -74.4556, 0.29 ) }
    dend_105 { pt3dadd( 185.412, -80.2702, -73.6036, 0.29 ) }
    dend_105 { pt3dadd( 186.701, -79.4332, -72.8766, 0.88 ) }
    dend_105 { pt3dadd( 187.826, -78.6702, -72.2855, 0.15 ) }
    dend_105 { pt3dadd( 188.273, -78.3356, -72.0615, 0.81 ) }
    dend_105 { pt3dadd( 188.34, -78.2756, -72.0402, 0.81 ) }
    dend_105 { pt3dadd( 188.751, -77.8078, -71.9237, 1.03 ) }
    dend_105 { pt3dadd( 188.796, -77.7459, -71.92, 1.03 ) }
    dend_105 { pt3dadd( 189.858, -76.3868, -71.9596, 0.22 ) }
    dend_105 { pt3dadd( 190.671, -75.4832, -72.0134, 0.22 ) }
    dend_105 { pt3dadd( 191.35, -74.8145, -72.066, 0.88 ) }
    dend_105 { pt3dadd( 191.415, -74.7561, -72.0717, 0.88 ) }
    dend_105 { pt3dadd( 192.233, -74.0705, -72.1488, 1.18 ) }
    dend_105 { pt3dadd( 194.482, -72.4193, -72.3985, 0.22 ) }
    dend_105 { pt3dadd( 195.223, -71.9712, -72.4948, 1.25 ) }
    dend_105 { pt3dadd( 196.567, -71.277, -72.6676, 0.22 ) }
    dend_105 { pt3dadd( 196.864, -71.1347, -72.7072, 0.37 ) }
    dend_105 { pt3dadd( 196.953, -71.0939, -72.7199, 0.37 ) }
    dend_105 { pt3dadd( 198.254, -70.6256, -72.8859, 0.15 ) }
    dend_105 { pt3dadd( 199.021, -70.4444, -73.0068, 1.03 ) }
    dend_105 { pt3dadd( 199.101, -70.4299, -73.0095, 1.03 ) }
    dend_105 { pt3dadd( 199.741, -70.344, -72.977, 1.25 ) }
    dend_105 { pt3dadd( 199.822, -70.3347, -72.9658, 1.25 ) }
    dend_105 { pt3dadd( 202.243, -70.1551, -72.467, 0.22 ) }
    dend_105 { pt3dadd( 203.215, -70.1495, -72.209, 0.22 ) }
    dend_105 { pt3dadd( 205.546, -70.2216, -71.5306, 0.22 ) }
    dend_105 { pt3dadd( 205.687, -70.2306, -71.4919, 0.22 ) }
    dend_105 { pt3dadd( 206.569, -70.3165, -71.2533, 1.18 ) }
    dend_105 { pt3dadd( 207.3, -70.3773, -71.0645, 0.96 ) }
    dend_105 { pt3dadd( 208.398, -70.432, -70.7971, 0.66 ) }
    dend_105 { pt3dadd( 208.747, -70.3972, -70.732, 0.66 ) }
    dend_105 { pt3dadd( 209.892, -70.0469, -70.7557, 0.29 ) }
    dend_105 { pt3dadd( 209.971, -70.0094, -70.7604, 0.29 ) }
    dend_105 { pt3dadd( 210.795, -69.4942, -70.845, 0.22 ) }
    dend_105 { pt3dadd( 211.251, -69.1502, -70.8858, 0.44 ) }
    dend_105 { pt3dadd( 212.405, -68.199, -70.9832, 0.22 ) }
    dend_105 { pt3dadd( 212.537, -68.0995, -70.98, 0.22 ) }
    dend_105 { pt3dadd( 213.396, -67.4805, -70.8992, 0.88 ) }
    dend_105 { pt3dadd( 214.208, -66.9281, -70.8051, 0.88 ) }
    dend_105 { pt3dadd( 214.287, -66.8761, -70.7943, 0.88 ) }
    dend_105 { pt3dadd( 215.093, -66.3234, -70.671, 0.88 ) }
    dend_105 { pt3dadd( 216.689, -65.0644, -70.4684, 0.22 ) }
    dend_105 { pt3dadd( 216.752, -65.0126, -70.4618, 0.22 ) }
    dend_105 { pt3dadd( 217.272, -64.5606, -70.4295, 0.88 ) }
    dend_105 { pt3dadd( 217.751, -64.14, -70.4347, 1.11 ) }
    dend_105 { pt3dadd( 217.822, -64.0741, -70.4415, 1.11 ) }
    dend_105 { pt3dadd( 219.06, -62.8963, -70.6798, 0.22 ) }
    dend_105 { pt3dadd( 219.819, -62.2105, -71.0316, 0.22 ) }
    dend_105 { pt3dadd( 220.501, -61.6101, -71.4523, 0.22 ) }
    dend_105 { pt3dadd( 221.191, -61.0208, -71.9466, 0.88 ) }
    dend_105 { pt3dadd( 221.698, -60.551, -72.3898, 1.11 ) }
    dend_105 { pt3dadd( 222.149, -60.0817, -72.8674, 1.11 ) }
    dend_105 { pt3dadd( 223.555, -58.4772, -74.5657, 0.29 ) }
    dend_105 { pt3dadd( 224.222, -57.696, -75.3716, 0.22 ) }
    dend_105 { pt3dadd( 224.271, -57.6415, -75.4273, 0.22 ) }
    dend_105 { pt3dadd( 225.052, -56.8893, -76.1571, 0.88 ) }
    dend_105 { pt3dadd( 225.108, -56.8412, -76.1993, 0.88 ) }
    dend_105 { pt3dadd( 226.406, -55.793, -76.9079, 0.22 ) }
    dend_105 { pt3dadd( 227.253, -55.1005, -77.3658, 0.22 ) }
    dend_105 { pt3dadd( 227.707, -54.7418, -77.6413, 0.74 ) }
    dend_105 { pt3dadd( 228.77, -53.8946, -78.3498, 0.22 ) }
    dend_105 { pt3dadd( 228.833, -53.8445, -78.3949, 0.22 ) }
    dend_105 { pt3dadd( 229.668, -53.133, -79.0744, 1.11 ) }
    dend_105 { pt3dadd( 231.709, -51.281, -80.9738, 0.22 ) }
    dend_105 { pt3dadd( 231.758, -51.2358, -81.0208, 0.22 ) }
    dend_105 { pt3dadd( 232.547, -50.5612, -81.7574, 0.96 ) }
    dend_105 { pt3dadd( 232.601, -50.5231, -81.8051, 0.96 ) }
    dend_105 { pt3dadd( 233.17, -50.2332, -82.2913, 1.11 ) }
    dend_105 { pt3dadd( 234.156, -49.9015, -83.0657, 0.29 ) }
    dend_105 { pt3dadd( 234.3, -49.8711, -83.1627, 0.29 ) }
    dend_105 { pt3dadd( 234.922, -49.7509, -83.6066, 0.15 ) }
    dend_105 { pt3dadd( 235.932, -49.5851, -84.3741, 1.18 ) }
    dend_105 { pt3dadd( 237.905, -49.2056, -85.8853, 0.22 ) }
    dend_105 { pt3dadd( 238.385, -49.1032, -86.2665, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_105 { pt3dadd( 238.459, -49.0803, -86.3227, 0.74 ) }
    dend_105 { pt3dadd( 238.97, -48.879, -86.6481, 0.88 ) }
    dend_105 { pt3dadd( 239.107, -48.8111, -86.7211, 0.88 ) }
    dend_105 { pt3dadd( 239.897, -48.3381, -87.0779, 0.88 ) }
    dend_105 { pt3dadd( 240.042, -48.2474, -87.1322, 0.88 ) }
    dend_105 { pt3dadd( 241.294, -47.3726, -87.7117, 0.22 ) }
    dend_105 { pt3dadd( 242.35, -46.573, -88.2653, 0.22 ) }
    dend_105 { pt3dadd( 242.498, -46.4545, -88.3503, 0.22 ) }
    dend_105 { pt3dadd( 243.61, -45.6132, -89.0032, 1.11 ) }
    dend_105 { pt3dadd( 243.811, -45.4632, -89.1212, 1.11 ) }
    dend_105 { pt3dadd( 245.197, -44.4533, -89.9063, 0.22 ) }
    dend_105 { pt3dadd( 245.27, -44.4044, -89.9371, 0.22 ) }
    dend_105 { pt3dadd( 245.78, -44.0473, -90.0964, 0.59 ) }
    dend_105 { pt3dadd( 246.777, -43.3785, -90.3119, 0.22 ) }
    dend_105 { pt3dadd( 247.401, -42.9698, -90.3874, 1.03 ) }
    dend_105 { pt3dadd( 247.922, -42.6257, -90.4327, 1.03 ) }
    dend_105 { pt3dadd( 250.015, -41.2541, -90.5199, 0.22 ) }
    dend_105 { pt3dadd( 250.738, -40.7293, -90.5899, 0.22 ) }
    dend_105 { pt3dadd( 250.799, -40.6771, -90.603, 0.22 ) }
    dend_105 { pt3dadd( 251.248, -40.2168, -90.7649, 0.74 ) }
    dend_105 { pt3dadd( 251.306, -40.1568, -90.7902, 0.74 ) }
    dend_105 { pt3dadd( 251.599, -39.843, -90.9374, 0.74 ) }
    dend_105 { pt3dadd( 252.547, -38.8664, -91.49, 0.22 ) }
    dend_105 { pt3dadd( 253.336, -38.1514, -91.9083, 0.96 ) }
    dend_105 { pt3dadd( 253.816, -37.7092, -92.1897, 1.25 ) }
    dend_105 { pt3dadd( 254.994, -36.593, -92.8065, 0.29 ) }
    dend_105 { pt3dadd( 255.053, -36.5355, -92.8345, 0.29 ) }
    dend_105 { pt3dadd( 255.532, -36.1002, -93.0551, 0.37 ) }
    dend_105 { pt3dadd( 255.597, -36.0417, -93.0836, 0.37 ) }
    dend_105 { pt3dadd( 256.957, -34.7807, -93.7219, 0.22 ) }
    dend_105 { pt3dadd( 257.914, -33.8346, -94.2438, 0.81 ) }
    dend_105 { pt3dadd( 257.976, -33.7738, -94.2811, 0.81 ) }
    dend_105 { pt3dadd( 259.791, -32.1409, -95.3877, 0.22 ) }
    dend_105 { pt3dadd( 260.191, -31.7988, -95.6342, 0.88 ) }
    dend_105 { pt3dadd( 261.377, -30.9107, -96.5857, 0.22 ) }
    dend_105 { pt3dadd( 261.602, -30.7651, -96.8007, 0.44 ) }
    dend_105 { pt3dadd( 262.571, -30.1835, -97.9144, 0.22 ) }
    dend_105 { pt3dadd( 263.39, -29.7577, -99.0283, 0.88 ) }
    dend_105 { pt3dadd( 263.441, -29.7365, -99.1061, 0.88 ) }
    dend_105 { pt3dadd( 265.41, -29.0838, -102.248, 0.22 ) }
    dend_105 { pt3dadd( 265.802, -28.9907, -102.932, 0.88 ) }
    dend_105 { pt3dadd( 265.843, -28.9814, -103.003, 0.88 ) }
    dend_105 { pt3dadd( 267.166, -28.6636, -105.307, 0.22 ) }
    dend_105 { pt3dadd( 267.697, -28.5269, -106.161, 1.03 ) }
    dend_105 { pt3dadd( 267.743, -28.5148, -106.228, 1.03 ) }
    dend_105 { pt3dadd( 269.927, -27.7431, -109.008, 0.22 ) }
    dend_105 { pt3dadd( 270.465, -27.5191, -109.692, 0.74 ) }
    dend_105 { pt3dadd( 271.88, -26.7998, -111.425, 0.22 ) }
    dend_105 { pt3dadd( 272.283, -26.5398, -111.896, 0.74 ) }
    dend_105 { pt3dadd( 272.333, -26.5001, -111.956, 0.74 ) }
    dend_105 { pt3dadd( 273.67, -25.168, -113.525, 0.22 ) }
    dend_105 { pt3dadd( 273.709, -25.1125, -113.569, 0.22 ) }
    dend_105 { pt3dadd( 274.033, -24.5012, -114.008, 0.66 ) }
    dend_105 { pt3dadd( 274.139, -24.2515, -114.165, 0.66 ) }
    dend_105 { pt3dadd( 274.711, -22.7965, -115.094, 0.22 ) }
    dend_105 { pt3dadd( 274.938, -22.1763, -115.492, 0.52 ) }
    dend_105 { pt3dadd( 275.243, -21.1862, -116.13, 0.22 ) }
    dend_105 { pt3dadd( 275.395, -20.618, -116.501, 0.81 ) }
    dend_105 { pt3dadd( 285.159, -13.6352, -118.369, 0.81 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 59/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( 179.913, -83.7353, -77.0643, 0.81 ) }
    dend_104 { pt3dadd( 180.621, -84.4032, -77.4343, 0.81 ) }
    dend_104 { pt3dadd( 181.482, -85.0758, -77.8227, 0.22 ) }
    dend_104 { pt3dadd( 182.18, -85.516, -78.1094, 0.22 ) }
    dend_104 { pt3dadd( 182.225, -85.5412, -78.127, 0.22 ) }
    dend_104 { pt3dadd( 182.821, -85.8487, -78.3524, 0.81 ) }
    dend_104 { pt3dadd( 183.392, -86.1297, -78.5597, 1.18 ) }
    dend_104 { pt3dadd( 183.998, -86.3546, -78.7668, 1.33 ) }
    dend_104 { pt3dadd( 185.036, -86.6825, -79.0821, 0.22 ) }
    dend_104 { pt3dadd( 185.365, -86.7921, -79.1861, 0.66 ) }
    dend_104 { pt3dadd( 185.427, -86.8131, -79.2058, 0.66 ) }
    dend_104 { pt3dadd( 185.873, -86.9805, -79.3419, 0.66 ) }
    dend_104 { pt3dadd( 185.924, -87.0046, -79.3602, 0.66 ) }
    dend_104 { pt3dadd( 186.629, -87.4305, -79.6425, 0.22 ) }
    dend_104 { pt3dadd( 186.673, -87.4631, -79.6609, 0.22 ) }
    dend_104 { pt3dadd( 186.915, -87.6659, -79.7652, 0.22 ) }
    dend_104 { pt3dadd( 187.259, -87.9796, -79.9026, 0.22 ) }
    dend_104 { pt3dadd( 187.774, -88.4882, -80.0902, 1.03 ) }
    dend_104 { pt3dadd( 187.81, -88.5331, -80.1094, 1.03 ) }
    dend_104 { pt3dadd( 188.065, -88.9293, -80.2889, 1.03 ) }
    dend_104 { pt3dadd( 188.509, -89.7364, -80.6677, 0.15 ) }
    dend_104 { pt3dadd( 188.802, -90.3334, -80.9437, 1.11 ) }
    dend_104 { pt3dadd( 188.971, -90.7036, -81.1172, 1.4 ) }
    dend_104 { pt3dadd( 189.593, -92.1027, -81.7624, 0.44 ) }
    dend_104 { pt3dadd( 189.765, -92.5082, -81.9601, 0.44 ) }
    dend_104 { pt3dadd( 189.971, -93.0448, -82.2355, 0.22 ) }
    dend_104 { pt3dadd( 190.152, -93.5636, -82.4928, 1.03 ) }
    dend_104 { pt3dadd( 190.167, -93.614, -82.5191, 1.03 ) }
    dend_104 { pt3dadd( 190.254, -93.9322, -82.6763, 1.03 ) }
    dend_104 { pt3dadd( 190.548, -95.0201, -83.1395, 0.22 ) }
    dend_104 { pt3dadd( 190.558, -95.0725, -83.1752, 0.22 ) }
    dend_104 { pt3dadd( 190.659, -95.7853, -83.7685, 0.22 ) }
    dend_104 { pt3dadd( 190.777, -96.6341, -84.5478, 1.47 ) }
    dend_104 { pt3dadd( 190.834, -96.9447, -84.8681, 1.4 ) }
    dend_104 { pt3dadd( 190.841, -96.9778, -84.9063, 1.4 ) }
    dend_104 { pt3dadd( 191.312, -98.5102, -87.1305, 0.22 ) }
    dend_104 { pt3dadd( 191.436, -98.8435, -87.6818, 1.25 ) }
    dend_104 { pt3dadd( 191.526, -99.0247, -88.0294, 1.25 ) }
    dend_104 { pt3dadd( 191.921, -99.7044, -89.4528, 0.22 ) }
    dend_104 { pt3dadd( 192.037, -99.8842, -89.8439, 0.59 ) }
    dend_104 { pt3dadd( 192.739, -101.053, -92.3255, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_104 { pt3dadd( 192.75, -101.075, -92.3703, 1.4 ) }
    dend_104 { pt3dadd( 192.823, -101.323, -92.8438, 1.4 ) }
    dend_104 { pt3dadd( 192.971, -102.648, -95.203, 0.29 ) }
    dend_104 { pt3dadd( 192.97, -102.886, -95.5822, 0.66 ) }
    dend_104 { pt3dadd( 192.874, -103.674, -96.681, 0.22 ) }
    dend_104 { pt3dadd( 192.75, -104.195, -97.3272, 1.4 ) }
    dend_104 { pt3dadd( 191.933, -106.656, -100.213, 1.03 ) }
    dend_104 { pt3dadd( 191.429, -107.836, -101.516, 0.52 ) }
    dend_104 { pt3dadd( 190.986, -108.654, -102.349, 0.96 ) }
    dend_104 { pt3dadd( 190.261, -109.75, -103.444, 0.22 ) }
    dend_104 { pt3dadd( 189.73, -110.397, -104.063, 0.22 ) }
    dend_104 { pt3dadd( 189.395, -110.701, -104.33, 0.66 ) }
    dend_104 { pt3dadd( 189.355, -110.719, -104.342, 0.66 ) }
    dend_104 { pt3dadd( 188.831, -110.819, -104.424, 0.66 ) }
    dend_104 { pt3dadd( 187.799, -110.801, -104.555, 0.22 ) }
    dend_104 { pt3dadd( 187.426, -110.753, -104.612, 0.81 ) }
    dend_104 { pt3dadd( 186.853, -110.687, -104.717, 0.81 ) }
    dend_104 { pt3dadd( 186.052, -110.636, -104.864, 0.22 ) }
    dend_104 { pt3dadd( 185.36, -110.623, -104.975, 0.88 ) }
    dend_104 { pt3dadd( 184.916, -110.667, -105.049, 1.11 ) }
    dend_104 { pt3dadd( 183.817, -110.935, -105.25, 0.22 ) }
    dend_104 { pt3dadd( 183.485, -111.066, -105.317, 0.44 ) }
    dend_104 { pt3dadd( 182.94, -111.361, -105.42, 0.22 ) }
    dend_104 { pt3dadd( 182.549, -111.594, -105.508, 0.74 ) }
    dend_104 { pt3dadd( 181.517, -112.229, -105.792, 0.22 ) }
    dend_104 { pt3dadd( 180.978, -112.538, -105.938, 1.03 ) }
    dend_104 { pt3dadd( 180.425, -112.871, -106.138, 0.74 ) }
    dend_104 { pt3dadd( 179.752, -113.28, -106.434, 0.66 ) }
    dend_104 { pt3dadd( 178.551, -114.0, -107.006, 0.15 ) }
    dend_104 { pt3dadd( 178.487, -114.037, -107.037, 0.15 ) }
    dend_104 { pt3dadd( 177.799, -114.425, -107.405, 1.18 ) }
    dend_104 { pt3dadd( 176.067, -115.448, -108.418, 0.22 ) }
    dend_104 { pt3dadd( 175.993, -115.494, -108.466, 0.22 ) }
    dend_104 { pt3dadd( 175.543, -115.798, -108.763, 0.22 ) }
    dend_104 { pt3dadd( 175.22, -116.034, -108.949, 1.11 ) }
    dend_104 { pt3dadd( 173.9, -117.007, -109.591, 0.22 ) }
    dend_104 { pt3dadd( 173.858, -117.039, -109.608, 0.22 ) }
    dend_104 { pt3dadd( 173.532, -117.275, -109.683, 0.88 ) }
    dend_104 { pt3dadd( 173.184, -117.542, -109.755, 1.11 ) }
    dend_104 { pt3dadd( 172.339, -118.254, -109.894, 0.15 ) }
    dend_104 { pt3dadd( 171.75, -118.811, -109.913, 0.15 ) }
    dend_104 { pt3dadd( 171.323, -119.283, -109.832, 1.11 ) }
    dend_104 { pt3dadd( 171.084, -119.623, -109.765, 1.11 ) }
    dend_104 { pt3dadd( 171.057, -119.676, -109.753, 1.11 ) }
    dend_104 { pt3dadd( 170.831, -120.26, -109.627, 0.81 ) }
    dend_104 { pt3dadd( 170.649, -120.887, -109.501, 0.22 ) }
    dend_104 { pt3dadd( 170.55, -121.264, -109.432, 0.59 ) }
    dend_104 { pt3dadd( 170.244, -122.37, -109.242, 0.22 ) }
    dend_104 { pt3dadd( 170.052, -123.043, -109.15, 0.22 ) }
    dend_104 { pt3dadd( 169.818, -123.802, -109.068, 0.59 ) }
    dend_104 { pt3dadd( 169.683, -124.199, -109.037, 0.44 ) }
    dend_104 { pt3dadd( 169.663, -124.25, -109.034, 0.44 ) }
    dend_104 { pt3dadd( 169.493, -124.616, -109.018, 0.22 ) }
    dend_104 { pt3dadd( 169.464, -124.667, -109.015, 0.22 ) }
    dend_104 { pt3dadd( 169.222, -125.074, -108.973, 0.44 ) }
    dend_104 { pt3dadd( 168.701, -125.965, -108.776, 0.15 ) }
    dend_104 { pt3dadd( 168.678, -126.006, -108.766, 0.15 ) }
    dend_104 { pt3dadd( 168.419, -126.48, -108.653, 0.81 ) }
    dend_104 { pt3dadd( 166.14, -132.287, -112.973, 0.81 ) }
    // Section: dend_98, id: dend_98, parent: dend_96 (entry count 59/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( 209.474, -214.452, -12.0559, 0.52 ) }
    dend_98 { pt3dadd( 210.976, -217.288, -9.64782, 0.52 ) }
    dend_98 { pt3dadd( 211.335, -217.97, -9.12326, 0.88 ) }
    dend_98 { pt3dadd( 211.664, -218.537, -8.70744, 0.52 ) }
    dend_98 { pt3dadd( 211.699, -218.587, -8.67305, 0.52 ) }
    dend_98 { pt3dadd( 212.248, -219.286, -8.21267, 0.37 ) }
    dend_98 { pt3dadd( 213.31, -220.693, -7.36665, 0.22 ) }
    dend_98 { pt3dadd( 213.753, -221.282, -7.12635, 1.47 ) }
    dend_98 { pt3dadd( 214.112, -221.824, -6.87606, 1.47 ) }
    dend_98 { pt3dadd( 214.857, -223.225, -6.22533, 0.22 ) }
    dend_98 { pt3dadd( 215.265, -224.184, -5.78236, 0.37 ) }
    dend_98 { pt3dadd( 215.63, -225.15, -5.34129, 0.81 ) }
    dend_98 { pt3dadd( 215.808, -225.734, -5.10066, 1.25 ) }
    dend_98 { pt3dadd( 216.146, -227.263, -4.43737, 0.66 ) }
    dend_98 { pt3dadd( 216.344, -228.927, -3.70435, 0.22 ) }
    dend_98 { pt3dadd( 216.345, -230.399, -3.03233, 0.81 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 75/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( 209.474, -214.452, -12.0559, 0.29 ) }
    dend_97 { pt3dadd( 210.38, -214.622, -12.1617, 0.29 ) }
    dend_97 { pt3dadd( 211.287, -214.831, -12.1759, 0.29 ) }
    dend_97 { pt3dadd( 211.345, -214.846, -12.1744, 0.29 ) }
    dend_97 { pt3dadd( 211.805, -214.973, -12.1504, 0.96 ) }
    dend_97 { pt3dadd( 212.265, -215.113, -12.1195, 0.96 ) }
    dend_97 { pt3dadd( 212.33, -215.135, -12.115, 0.96 ) }
    dend_97 { pt3dadd( 213.325, -215.544, -11.9831, 0.22 ) }
    dend_97 { pt3dadd( 213.572, -215.668, -11.9448, 0.81 ) }
    dend_97 { pt3dadd( 213.618, -215.693, -11.9377, 0.81 ) }
    dend_97 { pt3dadd( 213.902, -215.869, -11.8961, 0.81 ) }
    dend_97 { pt3dadd( 214.342, -216.16, -11.8376, 0.81 ) }
    dend_97 { pt3dadd( 215.904, -217.22, -11.6545, 0.15 ) }
    dend_97 { pt3dadd( 216.63, -217.718, -11.5851, 0.15 ) }
    dend_97 { pt3dadd( 216.682, -217.754, -11.58, 0.15 ) }
    dend_97 { pt3dadd( 217.48, -218.303, -11.5021, 0.15 ) }
    dend_97 { pt3dadd( 217.538, -218.343, -11.4961, 0.15 ) }
    dend_97 { pt3dadd( 219.383, -219.648, -11.2935, 0.15 ) }
    // Section: dend_94, id: dend_94, parent: dend_88 (entry count 93/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( 7.33524, -120.604, -13.5661, 0.29 ) }
    dend_94 { pt3dadd( 7.67328, -122.503, -13.8579, 0.29 ) }
    dend_94 { pt3dadd( 7.78323, -123.074, -13.93, 0.74 ) }
    dend_94 { pt3dadd( 7.88168, -123.53, -13.9849, 0.74 ) }
    dend_94 { pt3dadd( 8.16878, -124.675, -14.1882, 0.22 ) }
    dend_94 { pt3dadd( 8.48165, -125.768, -14.4247, 0.22 ) }
    dend_94 { pt3dadd( 8.73789, -126.814, -14.6847, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_94 { pt3dadd( 8.89149, -127.417, -14.8536, 1.11 ) }
    dend_94 { pt3dadd( 9.06501, -128.012, -15.0793, 0.88 ) }
    dend_94 { pt3dadd( 9.49644, -129.259, -15.6638, 0.22 ) }
    dend_94 { pt3dadd( 9.65007, -129.654, -15.8835, 0.66 ) }
    dend_94 { pt3dadd( 10.2803, -131.117, -16.8437, 0.22 ) }
    dend_94 { pt3dadd( 10.9303, -132.498, -17.8592, 1.55 ) }
    dend_94 { pt3dadd( 11.6478, -133.816, -19.0428, 0.22 ) }
    dend_94 { pt3dadd( 11.9362, -134.288, -19.5358, 0.22 ) }
    dend_94 { pt3dadd( 11.9722, -134.336, -19.5932, 0.22 ) }
    dend_94 { pt3dadd( 12.4634, -134.899, -20.3764, 0.81 ) }
    dend_94 { pt3dadd( 12.6689, -135.082, -20.68, 0.81 ) }
    dend_94 { pt3dadd( 13.5428, -135.896, -22.1598, 0.22 ) }
    dend_94 { pt3dadd( 13.5787, -135.944, -22.2388, 0.22 ) }
    dend_94 { pt3dadd( 14.1197, -136.807, -23.4451, 0.22 ) }
    dend_94 { pt3dadd( 14.5324, -137.516, -24.3636, 0.22 ) }
    dend_94 { pt3dadd( 14.796, -137.983, -24.9242, 1.55 ) }
    dend_94 { pt3dadd( 15.2436, -138.82, -25.9115, 1.69 ) }
    dend_94 { pt3dadd( 15.9254, -140.153, -27.4809, 0.22 ) }
    dend_94 { pt3dadd( 16.4221, -141.103, -28.6623, 0.22 ) }
    dend_94 { pt3dadd( 16.947, -142.047, -29.892, 1.03 ) }
    dend_94 { pt3dadd( 17.1426, -142.36, -30.3196, 1.77 ) }
    dend_94 { pt3dadd( 17.7115, -143.142, -31.4715, 1.77 ) }
    dend_94 { pt3dadd( 19.0151, -144.6, -34.0134, 0.22 ) }
    dend_94 { pt3dadd( 19.097, -144.673, -34.1775, 0.66 ) }
    dend_94 { pt3dadd( 19.6032, -145.07, -35.2513, 0.22 ) }
    dend_94 { pt3dadd( 20.0519, -145.39, -36.2005, 1.47 ) }
    dend_94 { pt3dadd( 20.4568, -145.637, -37.0379, 1.84 ) }
    dend_94 { pt3dadd( 21.6088, -146.189, -39.0855, 0.44 ) }
    dend_94 { pt3dadd( 22.395, -146.475, -40.2787, 0.88 ) }
    dend_94 { pt3dadd( 22.7381, -146.603, -40.749, 0.74 ) }
    dend_94 { pt3dadd( 22.8614, -146.649, -40.8872, 0.74 ) }
    dend_94 { pt3dadd( 23.6208, -146.949, -41.5461, 0.52 ) }
    dend_94 { pt3dadd( 25.2576, -147.623, -42.6649, 0.22 ) }
    dend_94 { pt3dadd( 25.8148, -147.856, -42.9489, 0.96 ) }
    dend_94 { pt3dadd( 26.224, -148.026, -43.1371, 0.96 ) }
    dend_94 { pt3dadd( 28.0046, -148.772, -43.9716, 0.22 ) }
    dend_94 { pt3dadd( 28.6801, -149.067, -44.2944, 0.22 ) }
    dend_94 { pt3dadd( 29.3322, -149.36, -44.5855, 0.81 ) }
    dend_94 { pt3dadd( 29.6372, -149.494, -44.7015, 0.81 ) }
    dend_94 { pt3dadd( 30.6458, -149.943, -45.049, 0.22 ) }
    dend_94 { pt3dadd( 31.3609, -150.262, -45.252, 1.55 ) }
    dend_94 { pt3dadd( 31.7012, -150.413, -45.3266, 1.55 ) }
    dend_94 { pt3dadd( 33.5512, -151.209, -45.7144, 0.22 ) }
    dend_94 { pt3dadd( 34.5298, -151.65, -45.9217, 0.88 ) }
    dend_94 { pt3dadd( 35.0032, -151.873, -46.0295, 1.11 ) }
    dend_94 { pt3dadd( 35.0804, -151.911, -46.0481, 1.11 ) }
    dend_94 { pt3dadd( 35.7582, -152.277, -46.2332, 0.74 ) }
    dend_94 { pt3dadd( 36.9078, -152.939, -46.627, 0.22 ) }
    dend_94 { pt3dadd( 37.6964, -153.464, -46.9923, 0.22 ) }
    dend_94 { pt3dadd( 38.4053, -153.925, -47.3657, 0.81 ) }
    dend_94 { pt3dadd( 38.4682, -153.964, -47.399, 0.81 ) }
    dend_94 { pt3dadd( 38.938, -154.244, -47.649, 1.18 ) }
    dend_94 { pt3dadd( 39.7085, -154.671, -48.0252, 0.37 ) }
    dend_94 { pt3dadd( 41.0138, -155.308, -48.6313, 0.22 ) }
    dend_94 { pt3dadd( 41.8047, -155.658, -48.9906, 0.22 ) }
    dend_94 { pt3dadd( 42.3694, -155.899, -49.2441, 0.88 ) }
    dend_94 { pt3dadd( 43.0228, -156.166, -49.5343, 1.03 ) }
    dend_94 { pt3dadd( 44.7572, -156.776, -50.2343, 0.22 ) }
    dend_94 { pt3dadd( 46.062, -157.2, -50.7154, 0.22 ) }
    dend_94 { pt3dadd( 46.6417, -157.378, -50.9171, 1.25 ) }
    dend_94 { pt3dadd( 47.1514, -157.535, -51.0701, 1.55 ) }
    dend_94 { pt3dadd( 48.1014, -157.82, -51.3245, 0.52 ) }
    dend_94 { pt3dadd( 50.2295, -158.481, -51.8636, 0.22 ) }
    dend_94 { pt3dadd( 50.3056, -158.506, -51.8813, 0.22 ) }
    dend_94 { pt3dadd( 51.711, -159.007, -52.1707, 0.22 ) }
    dend_94 { pt3dadd( 52.611, -159.354, -52.3623, 0.96 ) }
    dend_94 { pt3dadd( 53.1074, -159.566, -52.4733, 0.96 ) }
    dend_94 { pt3dadd( 54.6754, -160.304, -52.8532, 0.22 ) }
    dend_94 { pt3dadd( 55.2385, -160.581, -53.0219, 0.52 ) }
    dend_94 { pt3dadd( 55.7246, -160.808, -53.1844, 0.52 ) }
    dend_94 { pt3dadd( 56.8332, -161.31, -53.5654, 0.22 ) }
    dend_94 { pt3dadd( 57.5547, -161.639, -53.8389, 1.11 ) }
    dend_94 { pt3dadd( 57.6243, -161.665, -53.8619, 1.11 ) }
    dend_94 { pt3dadd( 58.6208, -161.946, -54.1631, 0.22 ) }
    dend_94 { pt3dadd( 59.4569, -162.139, -54.4124, 0.22 ) }
    dend_94 { pt3dadd( 60.2052, -162.279, -54.5737, 1.11 ) }
    dend_94 { pt3dadd( 60.7069, -162.34, -54.6513, 1.33 ) }
    dend_94 { pt3dadd( 62.4606, -162.496, -54.8609, 0.22 ) }
    dend_94 { pt3dadd( 63.2767, -162.562, -54.9391, 0.88 ) }
    dend_94 { pt3dadd( 63.3603, -162.569, -54.9429, 0.88 ) }
    dend_94 { pt3dadd( 65.1746, -162.742, -55.014, 0.22 ) }
    dend_94 { pt3dadd( 65.6433, -162.8, -55.045, 0.96 ) }
    dend_94 { pt3dadd( 65.7202, -162.812, -55.0502, 0.96 ) }
    dend_94 { pt3dadd( 66.2628, -162.933, -55.1023, 0.96 ) }
    dend_94 { pt3dadd( 67.6645, -163.297, -55.2868, 0.15 ) }
    dend_94 { pt3dadd( 68.759, -163.585, -55.5124, 0.15 ) }
    dend_94 { pt3dadd( 69.6093, -163.814, -55.7736, 0.15 ) }
    dend_94 { pt3dadd( 70.0751, -163.938, -55.9254, 0.81 ) }
    dend_94 { pt3dadd( 70.7047, -164.1, -56.1446, 1.03 ) }
    dend_94 { pt3dadd( 71.1593, -164.215, -56.284, 1.25 ) }
    dend_94 { pt3dadd( 72.3689, -164.513, -56.6351, 0.22 ) }
    dend_94 { pt3dadd( 73.4114, -164.725, -56.9063, 0.22 ) }
    dend_94 { pt3dadd( 74.0833, -164.861, -57.0646, 0.88 ) }
    dend_94 { pt3dadd( 74.7938, -165.005, -57.2242, 1.03 ) }
    dend_94 { pt3dadd( 76.613, -165.388, -57.6052, 0.22 ) }
    dend_94 { pt3dadd( 76.6837, -165.403, -57.6193, 0.22 ) }
    dend_94 { pt3dadd( 77.9485, -165.668, -57.8088, 0.22 ) }
    dend_94 { pt3dadd( 78.0399, -165.685, -57.82, 0.22 ) }
    dend_94 { pt3dadd( 78.8369, -165.787, -57.9396, 0.52 ) }
    dend_94 { pt3dadd( 79.2089, -165.805, -58.0043, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_94 { pt3dadd( 79.4018, -165.812, -58.0504, 0.74 ) }
    dend_94 { pt3dadd( 80.7011, -165.925, -58.3254, 0.22 ) }
    dend_94 { pt3dadd( 80.7769, -165.938, -58.3388, 0.22 ) }
    dend_94 { pt3dadd( 81.7751, -166.151, -58.446, 0.22 ) }
    dend_94 { pt3dadd( 82.5149, -166.36, -58.4925, 0.81 ) }
    dend_94 { pt3dadd( 83.2348, -166.626, -58.5353, 1.03 ) }
    dend_94 { pt3dadd( 83.473, -166.714, -58.5527, 1.03 ) }
    dend_94 { pt3dadd( 83.8849, -166.869, -58.5939, 1.03 ) }
    dend_94 { pt3dadd( 85.3287, -167.378, -58.7328, 0.22 ) }
    dend_94 { pt3dadd( 85.9062, -167.568, -58.7957, 0.88 ) }
    dend_94 { pt3dadd( 86.4259, -167.705, -58.8706, 0.88 ) }
    dend_94 { pt3dadd( 87.9649, -168.013, -59.156, 0.29 ) }
    dend_94 { pt3dadd( 88.2078, -168.067, -59.2129, 0.44 ) }
    dend_94 { pt3dadd( 88.6027, -168.19, -59.3305, 0.44 ) }
    dend_94 { pt3dadd( 89.3448, -168.501, -59.6144, 0.22 ) }
    dend_94 { pt3dadd( 89.6873, -168.681, -59.7499, 0.96 ) }
    dend_94 { pt3dadd( 90.153, -168.999, -59.8981, 0.96 ) }
    dend_94 { pt3dadd( 91.1658, -169.872, -60.172, 0.29 ) }
    dend_94 { pt3dadd( 92.0171, -170.67, -60.3666, 0.29 ) }
    dend_94 { pt3dadd( 92.3664, -171.027, -60.4306, 1.11 ) }
    dend_94 { pt3dadd( 92.8151, -171.525, -60.4937, 1.55 ) }
    dend_94 { pt3dadd( 94.105, -172.997, -60.605, 0.29 ) }
    dend_94 { pt3dadd( 94.715, -173.704, -60.641, 0.52 ) }
    dend_94 { pt3dadd( 95.0964, -174.135, -60.6629, 0.88 ) }
    dend_94 { pt3dadd( 96.0153, -175.157, -60.7386, 0.22 ) }
    dend_94 { pt3dadd( 96.3284, -175.513, -60.7759, 0.96 ) }
    dend_94 { pt3dadd( 97.2767, -176.608, -60.9375, 0.29 ) }
    dend_94 { pt3dadd( 97.9546, -177.39, -61.1103, 0.29 ) }
    dend_94 { pt3dadd( 98.4048, -177.923, -61.2673, 0.29 ) }
    dend_94 { pt3dadd( 99.1545, -178.875, -61.6372, 0.22 ) }
    dend_94 { pt3dadd( 99.5158, -179.365, -61.885, 0.88 ) }
    dend_94 { pt3dadd( 99.7809, -179.752, -62.1137, 1.33 ) }
    dend_94 { pt3dadd( 99.8145, -179.806, -62.1513, 1.33 ) }
    dend_94 { pt3dadd( 100.476, -180.944, -62.9955, 0.22 ) }
    dend_94 { pt3dadd( 100.759, -181.451, -63.4222, 0.81 ) }
    dend_94 { pt3dadd( 101.018, -181.879, -63.9421, 0.81 ) }
    dend_94 { pt3dadd( 101.081, -181.973, -64.0778, 0.81 ) }
    dend_94 { pt3dadd( 101.407, -182.479, -64.9035, 0.81 ) }
    dend_94 { pt3dadd( 101.428, -182.513, -64.9605, 0.81 ) }
    dend_94 { pt3dadd( 101.718, -182.974, -65.7753, 0.81 ) }
    dend_94 { pt3dadd( 102.293, -183.881, -67.6597, 0.22 ) }
    dend_94 { pt3dadd( 102.454, -184.15, -68.2796, 0.44 ) }
    dend_94 { pt3dadd( 102.921, -184.762, -69.9393, 0.96 ) }
    dend_94 { pt3dadd( 103.033, -184.873, -70.2894, 1.11 ) }
    dend_94 { pt3dadd( 103.122, -184.939, -70.5262, 1.11 ) }
    dend_94 { pt3dadd( 103.98, -185.42, -72.5609, 0.22 ) }
    dend_94 { pt3dadd( 104.012, -185.429, -72.6262, 0.22 ) }
    dend_94 { pt3dadd( 104.787, -185.468, -74.0416, 0.66 ) }
    dend_94 { pt3dadd( 105.265, -185.383, -74.733, 0.66 ) }
    dend_94 { pt3dadd( 105.311, -185.372, -74.7956, 0.66 ) }
    dend_94 { pt3dadd( 113.946, -191.059, -79.9852, 0.66 ) }
    // Section: dend_89, id: dend_89, parent: dend_88 (entry count 51/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 7.33524, -120.604, -13.5661, 0.59 ) }
    dend_89 { pt3dadd( 6.9347, -121.479, -13.2242, 0.59 ) }
    dend_89 { pt3dadd( 6.71956, -122.046, -13.031, 0.37 ) }
    dend_89 { pt3dadd( 6.70164, -122.102, -13.0123, 0.37 ) }
    dend_89 { pt3dadd( 6.41806, -123.196, -12.6738, 0.81 ) }
    dend_89 { pt3dadd( 6.23605, -123.96, -12.457, 1.18 ) }
    dend_89 { pt3dadd( 6.08707, -124.595, -12.3093, 1.33 ) }
    dend_89 { pt3dadd( 5.96696, -125.243, -12.1787, 1.03 ) }
    dend_89 { pt3dadd( 5.82136, -126.032, -12.0709, 0.66 ) }
    dend_89 { pt3dadd( 5.71396, -126.633, -12.024, 0.44 ) }
    dend_89 { pt3dadd( 5.53373, -127.784, -12.015, 0.29 ) }
    dend_89 { pt3dadd( 5.44986, -128.5, -12.0531, 0.96 ) }
    dend_89 { pt3dadd( 5.41961, -128.977, -12.1077, 1.11 ) }
    dend_89 { pt3dadd( 5.40981, -130.098, -12.297, 0.37 ) }
    dend_89 { pt3dadd( 5.46489, -130.942, -12.4648, 0.29 ) }
    dend_89 { pt3dadd( 5.56362, -131.595, -12.5978, 1.11 ) }
    dend_89 { pt3dadd( 5.78515, -132.457, -12.7825, 1.47 ) }
    dend_89 { pt3dadd( 6.00091, -133.102, -12.9142, 1.69 ) }
    dend_89 { pt3dadd( 6.2044, -133.72, -13.0928, 1.25 ) }
    dend_89 { pt3dadd( 6.46339, -134.634, -13.4055, 0.66 ) }
    dend_89 { pt3dadd( 6.57496, -135.368, -13.6824, 0.52 ) }
    dend_89 { pt3dadd( 6.60113, -136.086, -13.9698, 0.29 ) }
    dend_89 { pt3dadd( 6.56759, -136.366, -14.0874, 0.29 ) }
    dend_89 { pt3dadd( 6.08667, -138.082, -14.8886, 0.88 ) }
    dend_89 { pt3dadd( 5.7945, -138.731, -15.209, 1.11 ) }
    dend_89 { pt3dadd( 5.4271, -139.34, -15.5045, 1.18 ) }
    dend_89 { pt3dadd( 5.37102, -139.42, -15.5366, 1.18 ) }
    dend_89 { pt3dadd( 4.9337, -140.015, -15.718, 1.11 ) }
    dend_89 { pt3dadd( 4.89226, -140.075, -15.7295, 1.11 ) }
    dend_89 { pt3dadd( 4.55004, -140.658, -15.7492, 1.11 ) }
    dend_89 { pt3dadd( 4.25756, -141.207, -15.7562, 0.66 ) }
    dend_89 { pt3dadd( 3.77722, -142.212, -15.7315, 0.29 ) }
    dend_89 { pt3dadd( 3.74871, -142.28, -15.7284, 0.29 ) }
    dend_89 { pt3dadd( 3.52979, -142.908, -15.6757, 0.88 ) }
    dend_89 { pt3dadd( 3.35069, -143.531, -15.6178, 1.11 ) }
    dend_89 { pt3dadd( 3.12954, -144.608, -15.5143, 0.66 ) }
    dend_89 { pt3dadd( 3.00608, -145.521, -15.4185, 0.37 ) }
    dend_89 { pt3dadd( 2.98592, -146.26, -15.3464, 0.29 ) }
    dend_89 { pt3dadd( 3.02813, -146.782, -15.3519, 0.66 ) }
    dend_89 { pt3dadd( 3.14315, -147.256, -15.4204, 0.66 ) }
    dend_89 { pt3dadd( 3.35266, -147.824, -15.727, 0.66 ) }
    dend_89 { pt3dadd( 3.37604, -147.877, -15.7702, 0.66 ) }
    dend_89 { pt3dadd( 3.6959, -148.532, -16.4078, 0.96 ) }
    dend_89 { pt3dadd( 4.22236, -149.504, -17.4928, 1.62 ) }
    dend_89 { pt3dadd( 4.60072, -150.166, -18.2985, 1.99 ) }
    dend_89 { pt3dadd( 5.72251, -152.021, -20.717, 0.66 ) }
    dend_89 { pt3dadd( 5.74578, -152.058, -20.7679, 0.66 ) }
    dend_89 { pt3dadd( 6.06542, -152.542, -21.4367, 0.66 ) }
    dend_89 { pt3dadd( 6.57079, -153.257, -22.4144, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_89 { pt3dadd( 6.59563, -153.29, -22.4563, 0.66 ) }
    dend_89 { pt3dadd( 7.10865, -153.924, -23.1261, 0.29 ) }
    dend_89 { pt3dadd( 7.15394, -153.975, -23.1568, 0.29 ) }
    dend_89 { pt3dadd( 7.58363, -154.543, -23.3942, 0.66 ) }
    dend_89 { pt3dadd( 8.02144, -155.287, -23.5434, 0.66 ) }
    dend_89 { pt3dadd( 8.05312, -155.353, -23.5461, 0.66 ) }
    dend_89 { pt3dadd( 8.45426, -156.365, -23.5613, 0.52 ) }
    dend_89 { pt3dadd( 8.47079, -156.418, -23.5603, 0.52 ) }
    dend_89 { pt3dadd( 8.74273, -157.535, -23.6132, 1.4 ) }
    dend_89 { pt3dadd( 8.89407, -158.422, -23.6965, 1.92 ) }
    dend_89 { pt3dadd( 8.94608, -158.812, -23.7592, 1.99 ) }
    dend_89 { pt3dadd( 9.07912, -159.985, -24.0169, 0.96 ) }
    dend_89 { pt3dadd( 9.14658, -160.807, -24.2611, 0.81 ) }
    dend_89 { pt3dadd( 9.23133, -161.828, -24.6059, 0.81 ) }
    dend_89 { pt3dadd( 9.30056, -162.551, -24.8874, 0.52 ) }
    dend_89 { pt3dadd( 9.37219, -163.264, -25.2002, 0.44 ) }
    dend_89 { pt3dadd( 9.38277, -163.364, -25.2448, 0.44 ) }
    dend_89 { pt3dadd( 9.46486, -164.027, -25.5162, 1.11 ) }
    dend_89 { pt3dadd( 9.5354, -164.53, -25.6901, 1.11 ) }
    dend_89 { pt3dadd( 9.62003, -165.103, -25.8217, 0.74 ) }
    dend_89 { pt3dadd( 9.71436, -165.996, -25.9596, 0.44 ) }
    dend_89 { pt3dadd( 9.75165, -166.567, -25.9995, 0.44 ) }
    dend_89 { pt3dadd( 9.80881, -167.197, -26.023, 1.11 ) }
    dend_89 { pt3dadd( 9.88619, -167.72, -26.0328, 1.18 ) }
    dend_89 { pt3dadd( 10.0128, -168.402, -26.0656, 1.11 ) }
    dend_89 { pt3dadd( 10.2084, -169.277, -26.1255, 0.52 ) }
    dend_89 { pt3dadd( 10.3454, -169.797, -26.1985, 0.29 ) }
    dend_89 { pt3dadd( 10.6202, -170.728, -26.4091, 0.29 ) }
    dend_89 { pt3dadd( 10.8741, -171.533, -26.6477, 0.29 ) }
    dend_89 { pt3dadd( 11.1146, -172.318, -26.9334, 0.96 ) }
    dend_89 { pt3dadd( 11.2861, -172.92, -27.1727, 1.47 ) }
    dend_89 { pt3dadd( 11.5389, -174.082, -27.608, 1.4 ) }
    dend_89 { pt3dadd( 11.5467, -174.144, -27.627, 1.4 ) }
    dend_89 { pt3dadd( 11.577, -174.949, -27.8066, 1.03 ) }
    dend_89 { pt3dadd( 11.576, -176.095, -28.066, 0.52 ) }
    dend_89 { pt3dadd( 11.5828, -177.027, -28.272, 0.37 ) }
    dend_89 { pt3dadd( 11.6009, -178.219, -28.5469, 0.29 ) }
    dend_89 { pt3dadd( 11.6209, -179.172, -28.7608, 1.25 ) }
    dend_89 { pt3dadd( 11.6434, -179.813, -28.914, 1.47 ) }
    dend_89 { pt3dadd( 11.7477, -181.505, -29.3306, 0.44 ) }
    dend_89 { pt3dadd( 11.804, -182.094, -29.4667, 0.44 ) }
    dend_89 { pt3dadd( 11.9038, -182.895, -29.6565, 1.25 ) }
    dend_89 { pt3dadd( 11.9733, -183.343, -29.7596, 1.4 ) }
    dend_89 { pt3dadd( 12.1144, -184.172, -29.93, 1.11 ) }
    dend_89 { pt3dadd( 12.305, -185.258, -30.0952, 0.37 ) }
    dend_89 { pt3dadd( 12.5081, -186.361, -30.1876, 0.37 ) }
    dend_89 { pt3dadd( 12.6744, -187.199, -30.2555, 0.37 ) }
    dend_89 { pt3dadd( 12.823, -187.875, -30.3063, 0.37 ) }
    dend_89 { pt3dadd( 13.0884, -188.926, -30.3888, 1.33 ) }
    dend_89 { pt3dadd( 13.2292, -189.387, -30.4323, 1.77 ) }
    dend_89 { pt3dadd( 13.3989, -189.832, -30.4839, 1.99 ) }
    dend_89 { pt3dadd( 13.7931, -190.685, -30.6006, 1.62 ) }
    dend_89 { pt3dadd( 14.2312, -191.537, -30.7246, 0.81 ) }
    dend_89 { pt3dadd( 14.6775, -192.362, -30.8432, 0.29 ) }
    dend_89 { pt3dadd( 15.1299, -193.21, -30.9508, 0.37 ) }
    dend_89 { pt3dadd( 15.4926, -193.952, -31.0343, 0.66 ) }
    dend_89 { pt3dadd( 15.7439, -194.569, -31.0873, 0.29 ) }
    dend_89 { pt3dadd( 15.9214, -195.198, -31.1271, 0.29 ) }
    dend_89 { pt3dadd( 15.9937, -195.677, -31.1458, 0.59 ) }
    dend_89 { pt3dadd( 15.9678, -196.162, -31.143, 0.74 ) }
    dend_89 { pt3dadd( 15.7617, -196.895, -31.1442, 0.52 ) }
    dend_89 { pt3dadd( 15.3601, -197.7, -31.14, 1.18 ) }
    dend_89 { pt3dadd( 14.9265, -198.37, -31.1361, 1.55 ) }
    dend_89 { pt3dadd( 14.8893, -198.419, -31.1361, 1.55 ) }
    dend_89 { pt3dadd( 14.3968, -199.038, -31.1442, 1.25 ) }
    dend_89 { pt3dadd( 13.5465, -200.072, -31.1762, 0.37 ) }
    dend_89 { pt3dadd( 12.9213, -200.844, -31.2109, 0.22 ) }
    dend_89 { pt3dadd( 12.7087, -201.108, -31.2225, 0.22 ) }
    dend_89 { pt3dadd( 12.5199, -201.393, -31.2285, 0.81 ) }
    dend_89 { pt3dadd( 12.3357, -201.814, -31.2058, 1.03 ) }
    dend_89 { pt3dadd( 12.3242, -201.879, -31.1972, 1.03 ) }
    dend_89 { pt3dadd( 12.3129, -202.54, -31.0556, 0.29 ) }
    dend_89 { pt3dadd( 12.3142, -202.6, -31.0406, 0.29 ) }
    dend_89 { pt3dadd( 12.2911, -203.504, -30.7723, 0.29 ) }
    dend_89 { pt3dadd( 12.1893, -204.504, -30.4355, 1.03 ) }
    dend_89 { pt3dadd( 12.1016, -204.939, -30.2782, 1.18 ) }
    dend_89 { pt3dadd( 11.9387, -205.572, -30.0504, 1.18 ) }
    dend_89 { pt3dadd( 11.7035, -206.376, -29.7668, 1.03 ) }
    dend_89 { pt3dadd( 11.5318, -206.959, -29.5785, 0.66 ) }
    dend_89 { pt3dadd( 11.3477, -207.588, -29.4365, 0.29 ) }
    dend_89 { pt3dadd( 11.129, -208.557, -29.3516, 0.22 ) }
    dend_89 { pt3dadd( 11.0441, -209.202, -29.356, 0.88 ) }
    dend_89 { pt3dadd( 11.0131, -209.674, -29.3926, 1.25 ) }
    dend_89 { pt3dadd( 10.9959, -210.218, -29.4631, 1.18 ) }
    dend_89 { pt3dadd( 10.9734, -211.436, -29.6319, 0.29 ) }
    dend_89 { pt3dadd( 10.9306, -212.473, -29.7673, 0.29 ) }
    dend_89 { pt3dadd( 10.8564, -213.237, -29.8504, 0.88 ) }
    dend_89 { pt3dadd( 10.7043, -214.01, -29.8956, 1.11 ) }
    dend_89 { pt3dadd( 10.596, -214.345, -29.8894, 1.11 ) }
    dend_89 { pt3dadd( 10.268, -215.047, -29.8073, 0.29 ) }
    dend_89 { pt3dadd( 9.94548, -215.632, -29.6766, 0.29 ) }
    dend_89 { pt3dadd( 9.7734, -215.937, -29.6054, 0.88 ) }
    dend_89 { pt3dadd( 9.58056, -216.323, -29.521, 1.18 ) }
    dend_89 { pt3dadd( 9.24657, -217.099, -29.3706, 1.18 ) }
    dend_89 { pt3dadd( 9.00103, -217.836, -29.253, 0.96 ) }
    dend_89 { pt3dadd( 8.78592, -218.828, -29.144, 0.29 ) }
    dend_89 { pt3dadd( 8.73941, -219.536, -29.1116, 0.88 ) }
    dend_89 { pt3dadd( 8.77396, -220.006, -29.1173, 1.25 ) }
    dend_89 { pt3dadd( 8.78696, -220.07, -29.1261, 1.25 ) }
    dend_89 { pt3dadd( 8.94633, -220.571, -29.2546, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_89 { pt3dadd( 9.2207, -221.305, -29.4946, 0.59 ) }
    dend_89 { pt3dadd( 9.52724, -222.094, -29.7908, 0.37 ) }
    dend_89 { pt3dadd( 9.7452, -222.676, -30.0097, 0.37 ) }
    dend_89 { pt3dadd( 10.1083, -223.766, -30.4304, 0.88 ) }
    dend_89 { pt3dadd( 10.3533, -224.591, -30.7398, 1.18 ) }
    dend_89 { pt3dadd( 10.5192, -225.302, -30.9831, 1.18 ) }
    dend_89 { pt3dadd( 10.5306, -225.37, -31.0016, 1.18 ) }
    dend_89 { pt3dadd( 10.5803, -226.069, -31.128, 1.18 ) }
    dend_89 { pt3dadd( 10.581, -226.975, -31.1882, 1.25 ) }
    dend_89 { pt3dadd( 10.5207, -227.949, -31.1254, 0.29 ) }
    dend_89 { pt3dadd( 10.4287, -228.798, -31.0167, 0.22 ) }
    dend_89 { pt3dadd( 10.3305, -229.643, -30.8804, 1.18 ) }
    dend_89 { pt3dadd( 10.2621, -230.399, -30.7899, 1.18 ) }
    dend_89 { pt3dadd( 10.2203, -231.149, -30.7326, 0.96 ) }
    dend_89 { pt3dadd( 10.2007, -232.154, -30.6904, 0.29 ) }
    dend_89 { pt3dadd( 10.2163, -232.674, -30.6891, 0.29 ) }
    dend_89 { pt3dadd( 10.2863, -233.286, -30.7254, 0.44 ) }
    dend_89 { pt3dadd( 10.6168, -234.834, -30.9224, 0.44 ) }
    dend_89 { pt3dadd( 10.8569, -235.685, -31.1099, 0.44 ) }
    dend_89 { pt3dadd( 10.8752, -235.745, -31.1265, 0.44 ) }
    dend_89 { pt3dadd( 11.0822, -236.486, -31.3798, 1.11 ) }
    dend_89 { pt3dadd( 11.216, -237.122, -31.6007, 1.33 ) }
    dend_89 { pt3dadd( 11.2658, -237.91, -31.9317, 1.11 ) }
    dend_89 { pt3dadd( 11.1438, -239.101, -32.4406, 0.29 ) }
    dend_89 { pt3dadd( 10.9721, -239.908, -32.8018, 0.29 ) }
    dend_89 { pt3dadd( 10.7119, -240.911, -33.2243, 1.03 ) }
    dend_89 { pt3dadd( 10.5547, -241.445, -33.4455, 1.18 ) }
    dend_89 { pt3dadd( 9.95669, -243.376, -34.1643, 0.37 ) }
    dend_89 { pt3dadd( 9.64068, -244.453, -34.4749, 0.29 ) }
    dend_89 { pt3dadd( 9.53732, -244.971, -34.5362, 0.22 ) }
    dend_89 { pt3dadd( 9.46949, -245.923, -34.5018, 1.33 ) }
    dend_89 { pt3dadd( 9.52214, -246.513, -34.3719, 1.11 ) }
    dend_89 { pt3dadd( 9.65668, -247.142, -34.1515, 0.59 ) }
    dend_89 { pt3dadd( 9.92091, -247.98, -33.7576, 0.44 ) }
    dend_89 { pt3dadd( 10.2864, -249.03, -33.3071, 0.29 ) }
    dend_89 { pt3dadd( 10.3805, -249.369, -33.177, 0.81 ) }
    dend_89 { pt3dadd( 10.453, -249.813, -33.0318, 0.81 ) }
    dend_89 { pt3dadd( 10.4653, -250.304, -32.9558, 0.74 ) }
    dend_89 { pt3dadd( 10.4108, -251.208, -33.023, 0.29 ) }
    dend_89 { pt3dadd( 10.3727, -251.743, -33.1762, 0.96 ) }
    dend_89 { pt3dadd( 10.3745, -252.327, -33.4466, 1.11 ) }
    dend_89 { pt3dadd( 10.4369, -253.054, -33.8575, 1.11 ) }
    dend_89 { pt3dadd( 10.7604, -254.791, -35.0898, 0.44 ) }
    dend_89 { pt3dadd( 10.9474, -255.493, -35.6722, 1.11 ) }
    dend_89 { pt3dadd( 11.1283, -256.053, -36.1716, 1.18 ) }
    dend_89 { pt3dadd( 11.3683, -256.729, -36.7583, 1.18 ) }
    dend_89 { pt3dadd( 11.3849, -256.773, -36.7931, 1.18 ) }
    dend_89 { pt3dadd( 11.7603, -257.8, -37.474, 0.44 ) }
    dend_89 { pt3dadd( 12.0103, -258.562, -37.8125, 0.29 ) }
    dend_89 { pt3dadd( 12.1562, -259.185, -38.0473, 0.29 ) }
    dend_89 { pt3dadd( 12.2729, -259.916, -38.2943, 1.11 ) }
    dend_89 { pt3dadd( 12.3567, -260.565, -38.5021, 1.4 ) }
    dend_89 { pt3dadd( 12.4587, -261.167, -38.6722, 1.11 ) }
    dend_89 { pt3dadd( 12.4733, -261.238, -38.688, 1.11 ) }
    dend_89 { pt3dadd( 12.7094, -262.071, -38.8812, 0.66 ) }
    dend_89 { pt3dadd( 12.8738, -262.507, -38.9983, 0.52 ) }
    dend_89 { pt3dadd( 13.199, -263.159, -39.2002, 0.29 ) }
    dend_89 { pt3dadd( 13.5685, -263.741, -39.4611, 0.29 ) }
    dend_89 { pt3dadd( 13.599, -263.783, -39.4877, 0.29 ) }
    dend_89 { pt3dadd( 13.8435, -264.078, -39.7424, 1.03 ) }
    dend_89 { pt3dadd( 14.1414, -264.403, -40.0823, 1.4 ) }
    dend_89 { pt3dadd( 14.5309, -264.809, -40.5482, 1.47 ) }
    dend_89 { pt3dadd( 15.2569, -265.585, -41.4396, 1.25 ) }
    dend_89 { pt3dadd( 15.9276, -266.331, -42.306, 0.52 ) }
    dend_89 { pt3dadd( 16.4949, -267.146, -43.1153, 0.37 ) }
    dend_89 { pt3dadd( 16.5275, -267.205, -43.1668, 0.37 ) }
    dend_89 { pt3dadd( 16.7287, -267.841, -43.7356, 0.44 ) }
    dend_89 { pt3dadd( 16.8385, -268.441, -44.2843, 0.44 ) }
    dend_89 { pt3dadd( 16.8444, -268.489, -44.3295, 0.44 ) }
    dend_89 { pt3dadd( 17.0191, -270.03, -45.8272, 1.47 ) }
    dend_89 { pt3dadd( 17.0386, -270.319, -46.1106, 1.69 ) }
    dend_89 { pt3dadd( 17.149, -272.489, -48.4042, 0.59 ) }
    dend_89 { pt3dadd( 17.1639, -273.087, -49.1189, 0.29 ) }
    dend_89 { pt3dadd( 17.1797, -273.612, -49.8336, 1.25 ) }
    dend_89 { pt3dadd( 17.2086, -273.978, -50.399, 1.55 ) }
    // Section: dend_79, id: dend_79, parent: dend_67 (entry count 75/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( 24.102, -112.296, 1.93756, 0.44 ) }
    dend_79 { pt3dadd( 25.8672, -112.771, 2.07301, 0.44 ) }
    dend_79 { pt3dadd( 26.7048, -112.97, 2.11788, 0.59 ) }
    dend_79 { pt3dadd( 26.7871, -112.987, 2.11816, 0.59 ) }
    dend_79 { pt3dadd( 27.3718, -113.129, 2.10569, 0.59 ) }
    dend_79 { pt3dadd( 28.2579, -113.41, 2.07508, 0.59 ) }
    dend_79 { pt3dadd( 28.3159, -113.432, 2.07268, 0.59 ) }
    dend_79 { pt3dadd( 29.0549, -113.821, 2.03413, 0.44 ) }
    dend_79 { pt3dadd( 29.7779, -114.359, 2.02888, 0.29 ) }
    dend_79 { pt3dadd( 30.4847, -115.039, 2.05948, 0.29 ) }
    dend_79 { pt3dadd( 30.9768, -115.637, 2.10649, 0.59 ) }
    dend_79 { pt3dadd( 31.3134, -116.131, 2.15692, 0.81 ) }
    dend_79 { pt3dadd( 31.8263, -116.948, 2.26118, 0.37 ) }
    dend_79 { pt3dadd( 32.2455, -117.673, 2.36959, 1.25 ) }
    dend_79 { pt3dadd( 32.5853, -118.277, 2.47082, 1.62 ) }
    dend_79 { pt3dadd( 32.897, -118.773, 2.5532, 1.47 ) }
    dend_79 { pt3dadd( 33.384, -119.441, 2.64127, 0.96 ) }
    dend_79 { pt3dadd( 33.7737, -119.941, 2.65238, 0.74 ) }
    dend_79 { pt3dadd( 34.3929, -120.707, 2.5528, 0.59 ) }
    dend_79 { pt3dadd( 34.4537, -120.786, 2.53443, 0.59 ) }
    dend_79 { pt3dadd( 34.997, -121.52, 2.32544, 0.59 ) }
    dend_79 { pt3dadd( 35.6228, -122.417, 2.03572, 0.44 ) }
    dend_79 { pt3dadd( 36.3314, -123.505, 1.65792, 0.44 ) }
    dend_79 { pt3dadd( 36.9938, -124.574, 1.28578, 0.44 ) }
    dend_79 { pt3dadd( 37.2636, -125.018, 1.14367, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_79 { pt3dadd( 37.4974, -125.388, 1.04214, 0.96 ) }
    dend_79 { pt3dadd( 37.5785, -125.512, 1.01431, 0.96 ) }
    dend_79 { pt3dadd( 38.0381, -126.101, 0.993197, 0.66 ) }
    dend_79 { pt3dadd( 38.6593, -126.703, 1.17779, 0.52 ) }
    dend_79 { pt3dadd( 39.1882, -127.129, 1.49145, 1.18 ) }
    dend_79 { pt3dadd( 39.6295, -127.434, 1.79353, 1.4 ) }
    dend_79 { pt3dadd( 39.6904, -127.473, 1.83578, 1.4 ) }
    dend_79 { pt3dadd( 40.6931, -128.121, 2.49594, 0.96 ) }
    dend_79 { pt3dadd( 41.4838, -128.656, 3.01483, 0.74 ) }
    dend_79 { pt3dadd( 42.4294, -129.367, 3.6196, 1.11 ) }
    dend_79 { pt3dadd( 43.184, -129.991, 4.04245, 0.59 ) }
    dend_79 { pt3dadd( 44.0585, -130.794, 4.4526, 0.52 ) }
    dend_79 { pt3dadd( 45.1078, -131.845, 4.76146, 0.52 ) }
    dend_79 { pt3dadd( 45.5533, -132.329, 4.82067, 1.18 ) }
    dend_79 { pt3dadd( 46.1148, -132.955, 4.82767, 1.47 ) }
    dend_79 { pt3dadd( 46.7795, -133.694, 4.78388, 1.11 ) }
    dend_79 { pt3dadd( 47.3417, -134.32, 4.75836, 0.66 ) }
    dend_79 { pt3dadd( 48.3415, -135.396, 4.73547, 0.52 ) }
    dend_79 { pt3dadd( 49.0808, -136.136, 4.73853, 0.52 ) }
    dend_79 { pt3dadd( 49.8437, -136.854, 4.7712, 0.81 ) }
    dend_79 { pt3dadd( 50.6568, -137.598, 4.85154, 1.4 ) }
    dend_79 { pt3dadd( 51.2764, -138.184, 4.94988, 1.25 ) }
    dend_79 { pt3dadd( 51.651, -138.547, 5.02545, 1.25 ) }
    dend_79 { pt3dadd( 52.0871, -138.98, 5.09683, 0.96 ) }
    dend_79 { pt3dadd( 52.6498, -139.555, 5.16062, 0.44 ) }
    dend_79 { pt3dadd( 53.2202, -140.146, 5.21926, 0.29 ) }
    dend_79 { pt3dadd( 53.808, -140.738, 5.26642, 0.29 ) }
    dend_79 { pt3dadd( 53.864, -140.786, 5.2748, 0.29 ) }
    dend_79 { pt3dadd( 55.0402, -141.659, 5.54796, 0.29 ) }
    dend_79 { pt3dadd( 56.0548, -142.331, 5.84436, 0.74 ) }
    dend_79 { pt3dadd( 56.3825, -142.524, 5.95439, 1.03 ) }
    dend_79 { pt3dadd( 56.8284, -142.76, 6.12058, 1.03 ) }
    dend_79 { pt3dadd( 58.1912, -143.444, 6.6778, 0.22 ) }
    dend_79 { pt3dadd( 58.9607, -143.843, 6.99833, 0.22 ) }
    dend_79 { pt3dadd( 59.0194, -143.876, 7.01572, 0.22 ) }
    dend_79 { pt3dadd( 59.4595, -144.17, 6.98458, 0.88 ) }
    dend_79 { pt3dadd( 59.9444, -144.556, 6.83328, 1.11 ) }
    dend_79 { pt3dadd( 60.0157, -144.621, 6.79631, 1.11 ) }
    dend_79 { pt3dadd( 60.5441, -145.158, 6.41865, 1.11 ) }
    dend_79 { pt3dadd( 61.7519, -146.469, 5.60083, 0.22 ) }
    dend_79 { pt3dadd( 62.5306, -147.353, 5.1147, 0.22 ) }
    dend_79 { pt3dadd( 62.8542, -147.732, 4.94926, 1.03 ) }
    dend_79 { pt3dadd( 63.296, -148.239, 4.7934, 1.18 ) }
    dend_79 { pt3dadd( 63.3401, -148.286, 4.78667, 1.18 ) }
    dend_79 { pt3dadd( 64.2961, -149.259, 4.87965, 0.52 ) }
    dend_79 { pt3dadd( 64.3755, -149.325, 4.90838, 0.52 ) }
    dend_79 { pt3dadd( 65.2149, -149.845, 5.22916, 0.88 ) }
    dend_79 { pt3dadd( 65.7854, -150.113, 5.41384, 1.18 ) }
    dend_79 { pt3dadd( 66.3416, -150.312, 5.55725, 1.33 ) }
    dend_79 { pt3dadd( 66.3986, -150.329, 5.56879, 1.33 ) }
    dend_79 { pt3dadd( 67.3262, -150.574, 5.69736, 1.11 ) }
    dend_79 { pt3dadd( 68.3009, -150.866, 5.81452, 0.66 ) }
    dend_79 { pt3dadd( 68.8478, -151.062, 5.8642, 0.74 ) }
    dend_79 { pt3dadd( 69.6656, -151.443, 5.93788, 0.29 ) }
    dend_79 { pt3dadd( 69.7366, -151.486, 5.94552, 0.29 ) }
    dend_79 { pt3dadd( 70.4393, -152.042, 6.03939, 0.29 ) }
    dend_79 { pt3dadd( 70.7194, -152.33, 6.08469, 1.18 ) }
    dend_79 { pt3dadd( 71.1605, -152.843, 6.16429, 1.4 ) }
    dend_79 { pt3dadd( 71.5358, -153.297, 6.23646, 1.4 ) }
    dend_79 { pt3dadd( 72.1129, -153.965, 6.35153, 0.88 ) }
    dend_79 { pt3dadd( 72.7537, -154.591, 6.47376, 0.37 ) }
    dend_79 { pt3dadd( 72.8202, -154.64, 6.48687, 0.37 ) }
    dend_79 { pt3dadd( 73.6609, -155.11, 6.65037, 0.37 ) }
    dend_79 { pt3dadd( 73.7358, -155.144, 6.66447, 0.37 ) }
    dend_79 { pt3dadd( 74.1507, -155.321, 6.73651, 0.81 ) }
    dend_79 { pt3dadd( 74.7812, -155.573, 6.83552, 0.66 ) }
    dend_79 { pt3dadd( 75.7075, -155.974, 6.97946, 0.37 ) }
    dend_79 { pt3dadd( 76.4378, -156.327, 7.09496, 0.37 ) }
    dend_79 { pt3dadd( 77.2665, -156.784, 7.22891, 1.18 ) }
    dend_79 { pt3dadd( 77.9289, -157.202, 7.33417, 1.4 ) }
    dend_79 { pt3dadd( 77.9823, -157.24, 7.34245, 1.4 ) }
    dend_79 { pt3dadd( 78.6387, -157.773, 7.43251, 1.47 ) }
    dend_79 { pt3dadd( 78.7008, -157.828, 7.4363, 1.47 ) }
    dend_79 { pt3dadd( 79.3597, -158.415, 7.47842, 1.03 ) }
    dend_79 { pt3dadd( 79.6555, -158.678, 7.49707, 0.81 ) }
    dend_79 { pt3dadd( 79.8289, -158.832, 7.50859, 0.81 ) }
    dend_79 { pt3dadd( 80.3959, -159.341, 7.5466, 0.66 ) }
    dend_79 { pt3dadd( 81.0598, -159.954, 7.65569, 0.37 ) }
    dend_79 { pt3dadd( 81.7075, -160.569, 7.81547, 0.29 ) }
    dend_79 { pt3dadd( 81.9695, -160.819, 7.90154, 0.59 ) }
    dend_79 { pt3dadd( 82.2914, -161.103, 8.02821, 0.59 ) }
    dend_79 { pt3dadd( 82.3572, -161.155, 8.05732, 0.59 ) }
    dend_79 { pt3dadd( 83.3345, -161.756, 8.52214, 0.22 ) }
    dend_79 { pt3dadd( 83.5649, -161.853, 8.6513, 0.22 ) }
    dend_79 { pt3dadd( 83.8019, -161.907, 8.77209, 0.22 ) }
    dend_79 { pt3dadd( 84.2434, -161.95, 8.97399, 1.25 ) }
    dend_79 { pt3dadd( 84.9207, -161.984, 9.24433, 1.55 ) }
    dend_79 { pt3dadd( 85.5417, -162.023, 9.45983, 1.55 ) }
    dend_79 { pt3dadd( 86.7843, -162.144, 9.82625, 0.59 ) }
    dend_79 { pt3dadd( 87.6873, -162.304, 10.0874, 0.29 ) }
    dend_79 { pt3dadd( 88.6009, -162.573, 10.3556, 0.29 ) }
    dend_79 { pt3dadd( 89.3896, -162.923, 10.5812, 0.29 ) }
    dend_79 { pt3dadd( 90.0186, -163.308, 10.7454, 0.29 ) }
    dend_79 { pt3dadd( 90.5742, -163.717, 10.8812, 0.66 ) }
    dend_79 { pt3dadd( 91.0263, -164.073, 10.9703, 0.37 ) }
    dend_79 { pt3dadd( 91.6028, -164.541, 11.1194, 0.29 ) }
    dend_79 { pt3dadd( 92.1424, -164.96, 11.2819, 0.44 ) }
    dend_79 { pt3dadd( 92.7902, -165.399, 11.4884, 0.44 ) }
    dend_79 { pt3dadd( 93.6747, -165.917, 11.7644, 0.29 ) }
    dend_79 { pt3dadd( 94.5455, -166.402, 12.0463, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_79 { pt3dadd( 95.3588, -166.875, 12.3095, 0.96 ) }
    dend_79 { pt3dadd( 95.416, -166.912, 12.3249, 0.96 ) }
    dend_79 { pt3dadd( 96.0738, -167.402, 12.481, 1.47 ) }
    dend_79 { pt3dadd( 96.6137, -167.862, 12.578, 1.62 ) }
    dend_79 { pt3dadd( 97.3751, -168.53, 12.6536, 1.25 ) }
    dend_79 { pt3dadd( 97.9629, -169.014, 12.6843, 0.66 ) }
    dend_79 { pt3dadd( 98.7485, -169.552, 12.6924, 0.29 ) }
    dend_79 { pt3dadd( 98.8092, -169.585, 12.6931, 0.29 ) }
    dend_79 { pt3dadd( 99.6147, -169.926, 12.7046, 0.29 ) }
    dend_79 { pt3dadd( 100.489, -170.232, 12.7221, 0.74 ) }
    dend_79 { pt3dadd( 101.104, -170.433, 12.7378, 1.4 ) }
    dend_79 { pt3dadd( 101.802, -170.669, 12.7735, 1.62 ) }
    dend_79 { pt3dadd( 102.747, -171.031, 12.8474, 0.81 ) }
    dend_79 { pt3dadd( 103.575, -171.416, 12.9095, 0.37 ) }
    dend_79 { pt3dadd( 104.609, -172.027, 12.9683, 0.37 ) }
    dend_79 { pt3dadd( 105.486, -172.681, 13.0009, 0.37 ) }
    dend_79 { pt3dadd( 105.824, -172.982, 13.0069, 0.74 ) }
    dend_79 { pt3dadd( 106.235, -173.423, 13.0046, 0.37 ) }
    dend_79 { pt3dadd( 106.713, -174.023, 12.9627, 0.37 ) }
    dend_79 { pt3dadd( 107.173, -174.673, 12.8841, 1.18 ) }
    dend_79 { pt3dadd( 107.466, -175.112, 12.8157, 1.4 ) }
    dend_79 { pt3dadd( 107.51, -175.182, 12.8176, 1.4 ) }
    dend_79 { pt3dadd( 107.813, -175.682, 12.8994, 1.18 ) }
    dend_79 { pt3dadd( 108.373, -176.623, 13.1528, 1.03 ) }
    dend_79 { pt3dadd( 108.809, -177.37, 13.4164, 0.81 ) }
    dend_79 { pt3dadd( 109.241, -178.144, 13.7879, 1.11 ) }
    dend_79 { pt3dadd( 110.338, -180.199, 14.8919, 0.29 ) }
    dend_79 { pt3dadd( 110.538, -180.579, 15.1087, 0.81 ) }
    dend_79 { pt3dadd( 110.567, -180.637, 15.1445, 0.81 ) }
    dend_79 { pt3dadd( 110.917, -181.34, 15.6037, 0.81 ) }
    dend_79 { pt3dadd( 111.544, -182.486, 16.3526, 0.44 ) }
    dend_79 { pt3dadd( 111.897, -183.059, 16.685, 0.81 ) }
    dend_79 { pt3dadd( 112.225, -183.521, 16.8859, 0.96 ) }
    dend_79 { pt3dadd( 112.308, -183.633, 16.9329, 0.96 ) }
    dend_79 { pt3dadd( 112.716, -184.159, 17.1405, 0.96 ) }
    dend_79 { pt3dadd( 113.357, -184.958, 17.4322, 0.96 ) }
    dend_79 { pt3dadd( 113.82, -185.52, 17.5917, 1.25 ) }
    dend_79 { pt3dadd( 113.866, -185.576, 17.6072, 1.25 ) }
    dend_79 { pt3dadd( 114.426, -186.267, 17.7878, 0.96 ) }
    dend_79 { pt3dadd( 115.146, -187.176, 17.9971, 0.52 ) }
    dend_79 { pt3dadd( 115.191, -187.234, 18.0072, 0.52 ) }
    dend_79 { pt3dadd( 115.624, -187.831, 18.0659, 0.52 ) }
    dend_79 { pt3dadd( 116.06, -188.454, 18.1151, 1.03 ) }
    dend_79 { pt3dadd( 116.104, -188.518, 18.1167, 1.03 ) }
    dend_79 { pt3dadd( 116.402, -188.937, 18.1072, 1.03 ) }
    dend_79 { pt3dadd( 116.997, -189.74, 18.056, 0.29 ) }
    dend_79 { pt3dadd( 117.43, -190.301, 18.0157, 0.29 ) }
    dend_79 { pt3dadd( 117.858, -190.821, 17.9742, 0.88 ) }
    dend_79 { pt3dadd( 118.538, -191.572, 17.9106, 0.29 ) }
    dend_79 { pt3dadd( 118.995, -192.033, 17.8716, 0.96 ) }
    dend_79 { pt3dadd( 119.458, -192.468, 17.8319, 1.18 ) }
    dend_79 { pt3dadd( 119.585, -192.574, 17.8216, 1.18 ) }
    dend_79 { pt3dadd( 120.025, -192.885, 17.7924, 1.18 ) }
    dend_79 { pt3dadd( 120.582, -193.221, 17.771, 1.18 ) }
    dend_79 { pt3dadd( 120.676, -193.269, 17.7754, 1.18 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 55/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( 24.102, -112.296, 1.93756, 0.44 ) }
    dend_68 { pt3dadd( 24.1643, -114.003, 2.27327, 0.44 ) }
    dend_68 { pt3dadd( 24.2799, -114.921, 2.42768, 0.44 ) }
    dend_68 { pt3dadd( 24.4956, -116.033, 2.62342, 0.74 ) }
    dend_68 { pt3dadd( 24.6642, -116.91, 2.78343, 1.11 ) }
    dend_68 { pt3dadd( 24.8719, -118.156, 3.01773, 0.74 ) }
    dend_68 { pt3dadd( 25.0049, -119.228, 3.22687, 0.52 ) }
    dend_68 { pt3dadd( 25.1342, -120.293, 3.46595, 0.52 ) }
    dend_68 { pt3dadd( 25.1725, -121.411, 3.75304, 0.37 ) }
    dend_68 { pt3dadd( 25.0426, -122.099, 3.96343, 0.37 ) }
    dend_68 { pt3dadd( 24.7456, -122.626, 4.19031, 1.11 ) }
    dend_68 { pt3dadd( 24.2336, -123.176, 4.4744, 1.4 ) }
    dend_68 { pt3dadd( 23.4581, -123.888, 4.94121, 1.47 ) }
    dend_68 { pt3dadd( 22.9369, -124.37, 5.30973, 1.47 ) }
    dend_68 { pt3dadd( 22.2888, -124.995, 5.82875, 1.03 ) }
    dend_68 { pt3dadd( 21.5867, -125.891, 6.59602, 0.52 ) }
    dend_68 { pt3dadd( 21.1059, -126.844, 7.40168, 0.29 ) }
    dend_68 { pt3dadd( 20.8661, -127.995, 8.31537, 0.37 ) }
    dend_68 { pt3dadd( 20.9532, -129.059, 9.06408, 0.37 ) }
    dend_68 { pt3dadd( 20.9739, -129.122, 9.10164, 0.37 ) }
    dend_68 { pt3dadd( 21.5987, -130.324, 9.67753, 1.11 ) }
    dend_68 { pt3dadd( 21.9728, -130.926, 9.88567, 1.47 ) }
    dend_68 { pt3dadd( 22.3458, -131.517, 10.0255, 1.47 ) }
    dend_68 { pt3dadd( 22.678, -132.164, 10.094, 1.25 ) }
    dend_68 { pt3dadd( 23.0118, -133.139, 10.1351, 0.66 ) }
    dend_68 { pt3dadd( 23.2048, -134.005, 10.1531, 0.52 ) }
    dend_68 { pt3dadd( 23.2322, -134.745, 10.1566, 0.81 ) }
    dend_68 { pt3dadd( 23.1152, -135.469, 10.1603, 0.81 ) }
    dend_68 { pt3dadd( 22.8218, -136.418, 10.1713, 0.74 ) }
    dend_68 { pt3dadd( 22.405, -137.443, 10.1943, 0.59 ) }
    dend_68 { pt3dadd( 22.3683, -137.519, 10.1964, 0.59 ) }
    dend_68 { pt3dadd( 21.9198, -138.413, 10.2196, 0.44 ) }
    dend_68 { pt3dadd( 21.4329, -139.595, 10.2869, 0.29 ) }
    dend_68 { pt3dadd( 21.2419, -140.229, 10.3422, 0.29 ) }
    dend_68 { pt3dadd( 21.1914, -141.113, 10.4482, 1.03 ) }
    dend_68 { pt3dadd( 21.2127, -141.195, 10.4617, 1.03 ) }
    dend_68 { pt3dadd( 21.4455, -141.682, 10.5437, 1.25 ) }
    dend_68 { pt3dadd( 22.3227, -142.896, 10.7793, 0.74 ) }
    dend_68 { pt3dadd( 22.3885, -142.973, 10.7953, 0.66 ) }
    dend_68 { pt3dadd( 23.2427, -143.922, 10.9913, 0.66 ) }
    dend_68 { pt3dadd( 23.7632, -144.51, 11.0965, 1.03 ) }
    dend_68 { pt3dadd( 24.2534, -145.132, 11.1631, 0.66 ) }
    dend_68 { pt3dadd( 24.735, -145.847, 11.1892, 0.44 ) }
    dend_68 { pt3dadd( 25.0411, -146.398, 11.1648, 0.37 ) }
    dend_68 { pt3dadd( 25.0776, -146.483, 11.157, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_68 { pt3dadd( 25.3319, -147.324, 11.1013, 0.37 ) }
    dend_68 { pt3dadd( 25.5717, -148.281, 11.0906, 1.18 ) }
    dend_68 { pt3dadd( 25.7116, -148.885, 11.1442, 1.18 ) }
    dend_68 { pt3dadd( 25.7263, -148.955, 11.1547, 1.18 ) }
    dend_68 { pt3dadd( 26.0113, -150.361, 11.4461, 0.44 ) }
    dend_68 { pt3dadd( 26.236, -151.529, 11.7348, 0.96 ) }
    dend_68 { pt3dadd( 26.4084, -152.651, 12.0583, 1.33 ) }
    dend_68 { pt3dadd( 26.5436, -153.791, 12.3907, 0.59 ) }
    dend_68 { pt3dadd( 26.6007, -154.517, 12.5782, 0.44 ) }
    dend_68 { pt3dadd( 26.6268, -155.222, 12.7428, 0.74 ) }
    dend_68 { pt3dadd( 26.6215, -155.731, 12.8457, 0.74 ) }
    dend_68 { pt3dadd( 26.5637, -156.55, 12.941, 0.59 ) }
    dend_68 { pt3dadd( 26.4746, -157.595, 13.0487, 1.18 ) }
    dend_68 { pt3dadd( 26.4613, -158.308, 13.1217, 1.18 ) }
    dend_68 { pt3dadd( 26.5783, -159.232, 13.2998, 0.59 ) }
    dend_68 { pt3dadd( 26.6874, -159.667, 13.4163, 0.37 ) }
    dend_68 { pt3dadd( 26.7132, -159.742, 13.4434, 0.37 ) }
    dend_68 { pt3dadd( 27.1436, -160.861, 13.9236, 0.66 ) }
    dend_68 { pt3dadd( 27.4125, -161.634, 14.2953, 0.66 ) }
    dend_68 { pt3dadd( 27.7456, -162.779, 14.9134, 0.44 ) }
    dend_68 { pt3dadd( 27.8598, -163.415, 15.28, 1.03 ) }
    dend_68 { pt3dadd( 27.9181, -164.319, 15.8059, 1.03 ) }
    dend_68 { pt3dadd( 27.885, -165.111, 16.24, 0.74 ) }
    dend_68 { pt3dadd( 27.7679, -165.947, 16.6569, 1.03 ) }
    dend_68 { pt3dadd( 27.5829, -166.966, 17.1239, 1.03 ) }
    dend_68 { pt3dadd( 27.4301, -168.009, 17.5161, 0.29 ) }
    dend_68 { pt3dadd( 27.3913, -168.785, 17.7635, 0.29 ) }
    dend_68 { pt3dadd( 27.4436, -169.744, 17.9952, 1.03 ) }
    dend_68 { pt3dadd( 27.5605, -170.376, 18.1025, 1.25 ) }
    dend_68 { pt3dadd( 27.7684, -171.141, 18.1794, 0.96 ) }
    dend_68 { pt3dadd( 28.1816, -172.413, 18.2186, 0.59 ) }
    dend_68 { pt3dadd( 28.4564, -173.196, 18.2291, 1.03 ) }
    dend_68 { pt3dadd( 28.6071, -173.653, 18.253, 1.33 ) }
    dend_68 { pt3dadd( 28.8529, -174.624, 18.4092, 0.22 ) }
    dend_68 { pt3dadd( 28.9118, -175.169, 18.5706, 0.22 ) }
    dend_68 { pt3dadd( 28.9074, -175.232, 18.5987, 0.22 ) }
    dend_68 { pt3dadd( 28.7174, -176.163, 19.1982, 0.22 ) }
    dend_68 { pt3dadd( 28.5776, -177.039, 19.8177, 0.22 ) }
    dend_68 { pt3dadd( 28.5985, -178.064, 20.5004, 1.03 ) }
    dend_68 { pt3dadd( 28.7046, -178.612, 20.8429, 1.4 ) }
    dend_68 { pt3dadd( 28.7353, -178.695, 20.8812, 1.4 ) }
    dend_68 { pt3dadd( 29.0816, -179.495, 21.1544, 0.81 ) }
    dend_68 { pt3dadd( 29.4507, -180.25, 21.3384, 0.29 ) }
    dend_68 { pt3dadd( 29.9422, -181.229, 21.487, 0.29 ) }
    dend_68 { pt3dadd( 29.9734, -181.294, 21.4931, 0.29 ) }
    dend_68 { pt3dadd( 30.4689, -182.365, 21.5812, 0.29 ) }
    dend_68 { pt3dadd( 30.8441, -183.229, 21.6246, 1.11 ) }
    dend_68 { pt3dadd( 31.0531, -183.765, 21.6324, 1.47 ) }
    dend_68 { pt3dadd( 31.0753, -183.825, 21.6333, 1.47 ) }
    dend_68 { pt3dadd( 31.3392, -184.489, 21.6302, 1.62 ) }
    dend_68 { pt3dadd( 31.3655, -184.548, 21.6285, 1.62 ) }
    dend_68 { pt3dadd( 31.8186, -185.46, 21.5745, 1.62 ) }
    dend_68 { pt3dadd( 31.8481, -185.518, 21.5698, 1.62 ) }
    dend_68 { pt3dadd( 32.3177, -186.431, 21.4934, 0.88 ) }
    dend_68 { pt3dadd( 32.6981, -187.179, 21.4343, 0.59 ) }
    dend_68 { pt3dadd( 33.1418, -188.07, 21.365, 0.52 ) }
    dend_68 { pt3dadd( 33.4569, -188.714, 21.3145, 1.11 ) }
    dend_68 { pt3dadd( 33.7903, -189.419, 21.2669, 1.11 ) }
    // Section: dend_64, id: dend_64, parent: dend_62 (entry count 58/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -10.6367, -96.7599, 39.6252, 0.29 ) }
    dend_64 { pt3dadd( -10.4379, -97.6223, 39.8227, 0.29 ) }
    dend_64 { pt3dadd( -10.3283, -98.3393, 40.0326, 0.29 ) }
    dend_64 { pt3dadd( -10.286, -98.9534, 40.3233, 0.29 ) }
    dend_64 { pt3dadd( -10.2853, -99.0056, 40.3538, 0.29 ) }
    dend_64 { pt3dadd( -10.3186, -99.3957, 40.6699, 0.29 ) }
    dend_64 { pt3dadd( -10.4783, -100.102, 41.3328, 0.59 ) }
    dend_64 { pt3dadd( -10.6028, -100.36, 41.667, 0.59 ) }
    dend_64 { pt3dadd( -10.992, -100.803, 42.4205, 0.81 ) }
    dend_64 { pt3dadd( -11.0235, -100.831, 42.4721, 0.81 ) }
    dend_64 { pt3dadd( -11.5559, -101.233, 43.2663, 0.22 ) }
    dend_64 { pt3dadd( -11.9514, -101.499, 43.7705, 0.22 ) }
    dend_64 { pt3dadd( -11.9911, -101.523, 43.8155, 0.22 ) }
    dend_64 { pt3dadd( -12.3213, -101.736, 44.1769, 0.22 ) }
    dend_64 { pt3dadd( -12.8065, -102.081, 44.5964, 0.22 ) }
    dend_64 { pt3dadd( -12.8522, -102.116, 44.6331, 0.22 ) }
    dend_64 { pt3dadd( -13.308, -102.514, 44.8899, 0.52 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 75/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -10.6367, -96.7599, 39.6252, 0.22 ) }
    dend_63 { pt3dadd( -9.78561, -96.5146, 39.5705, 0.22 ) }
    dend_63 { pt3dadd( -9.71101, -96.493, 39.5657, 0.22 ) }
    dend_63 { pt3dadd( -9.07551, -96.3099, 39.5249, 0.22 ) }
    dend_63 { pt3dadd( -8.20629, -96.0593, 39.469, 0.22 ) }
    dend_63 { pt3dadd( -8.07284, -96.0209, 39.4605, 0.22 ) }
    dend_63 { pt3dadd( -6.51765, -95.5726, 39.3606, 0.22 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 82/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 0.221184, -315.665, 22.8274, 0.22 ) }
    dend_59 { pt3dadd( -0.381535, -317.044, 23.1777, 0.22 ) }
    dend_59 { pt3dadd( -0.615137, -317.689, 23.3235, 0.59 ) }
    dend_59 { pt3dadd( -0.706404, -318.025, 23.3891, 0.81 ) }
    dend_59 { pt3dadd( -1.01015, -319.278, 23.5997, 0.22 ) }
    dend_59 { pt3dadd( -1.19342, -320.09, 23.7252, 0.22 ) }
    dend_59 { pt3dadd( -1.3366, -320.812, 23.8245, 1.11 ) }
    dend_59 { pt3dadd( -1.3829, -321.389, 23.8911, 1.33 ) }
    dend_59 { pt3dadd( -1.42713, -322.269, 23.9663, 1.03 ) }
    dend_59 { pt3dadd( -1.45391, -322.906, 23.9931, 0.29 ) }
    dend_59 { pt3dadd( -1.45432, -322.978, 23.9927, 0.29 ) }
    dend_59 { pt3dadd( -1.3552, -323.863, 24.0491, 0.22 ) }
    dend_59 { pt3dadd( -1.24466, -324.345, 24.1167, 0.52 ) }
    dend_59 { pt3dadd( -1.18888, -324.503, 24.1597, 0.52 ) }
    dend_59 { pt3dadd( -1.15652, -324.57, 24.1845, 0.52 ) }
    dend_59 { pt3dadd( -0.750226, -325.123, 24.4335, 0.22 ) }
    dend_59 { pt3dadd( -0.167143, -325.699, 24.7246, 0.59 ) }
    dend_59 { pt3dadd( 0.161084, -325.964, 24.835, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_59 { pt3dadd( 1.02268, -326.642, 25.0524, 0.22 ) }
    dend_59 { pt3dadd( 1.6398, -327.127, 25.1419, 0.88 ) }
    dend_59 { pt3dadd( 2.74484, -327.994, 25.212, 0.15 ) }
    dend_59 { pt3dadd( 3.58612, -328.661, 25.1917, 0.15 ) }
    dend_59 { pt3dadd( 5.07235, -329.815, 25.0684, 0.15 ) }
    dend_59 { pt3dadd( 5.83075, -330.397, 24.9809, 0.44 ) }
    dend_59 { pt3dadd( 6.63873, -330.981, 24.8606, 1.18 ) }
    dend_59 { pt3dadd( 7.13682, -331.347, 24.8001, 1.55 ) }
    dend_59 { pt3dadd( 8.20478, -332.222, 24.7059, 0.29 ) }
    dend_59 { pt3dadd( 8.78698, -332.713, 24.7273, 0.52 ) }
    dend_59 { pt3dadd( 8.84275, -332.759, 24.7394, 0.52 ) }
    dend_59 { pt3dadd( 9.3183, -333.141, 24.9026, 0.52 ) }
    dend_59 { pt3dadd( 10.1308, -333.887, 25.3019, 0.22 ) }
    dend_59 { pt3dadd( 10.6133, -334.436, 25.5818, 0.22 ) }
    dend_59 { pt3dadd( 11.15, -335.189, 25.9495, 0.66 ) }
    dend_59 { pt3dadd( 11.4224, -335.647, 26.1421, 0.66 ) }
    dend_59 { pt3dadd( 11.4641, -335.725, 26.1692, 0.66 ) }
    dend_59 { pt3dadd( 11.9291, -336.737, 26.4361, 0.15 ) }
    dend_59 { pt3dadd( 12.3149, -337.628, 26.5793, 0.37 ) }
    dend_59 { pt3dadd( 12.3738, -337.77, 26.5956, 0.37 ) }
    dend_59 { pt3dadd( 12.4623, -337.995, 26.6035, 0.37 ) }
    dend_59 { pt3dadd( 12.7484, -338.735, 26.6293, 0.15 ) }
    dend_59 { pt3dadd( 12.8343, -338.954, 26.637, 0.44 ) }
    dend_59 { pt3dadd( 13.0312, -339.384, 26.6547, 0.44 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 24/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 0.221184, -315.665, 22.8274, 0.22 ) }
    dend_58 { pt3dadd( 2.30873, -315.853, 23.3868, 0.22 ) }
    dend_58 { pt3dadd( 3.75591, -315.982, 23.7745, 0.22 ) }
    dend_58 { pt3dadd( 5.07171, -316.1, 24.1271, 0.37 ) }
    dend_58 { pt3dadd( 6.72175, -316.248, 24.5692, 0.15 ) }
    dend_58 { pt3dadd( 7.19935, -316.291, 24.6972, 0.44 ) }
    dend_58 { pt3dadd( 7.92963, -316.356, 24.8929, 0.44 ) }
    // Section: dend_52, id: dend_52, parent: dend_46 (entry count 31/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -144.514, -112.736, 86.3145, 0.22 ) }
    dend_52 { pt3dadd( -144.67, -112.007, 87.9385, 0.22 ) }
    dend_52 { pt3dadd( -144.71, -111.969, 88.0406, 0.22 ) }
    dend_52 { pt3dadd( -144.908, -111.782, 88.5358, 0.88 ) }
    dend_52 { pt3dadd( -144.938, -111.753, 88.6126, 0.88 ) }
    dend_52 { pt3dadd( -145.115, -111.586, 89.0565, 0.88 ) }
    dend_52 { pt3dadd( -145.382, -111.335, 89.7258, 0.66 ) }
    dend_52 { pt3dadd( -146.186, -110.925, 90.7137, 0.22 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 39/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -144.514, -112.736, 86.3145, 0.22 ) }
    dend_47 { pt3dadd( -144.874, -113.067, 87.1782, 0.22 ) }
    dend_47 { pt3dadd( -145.118, -113.29, 87.7611, 0.22 ) }
    dend_47 { pt3dadd( -145.137, -113.308, 87.8068, 0.22 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 43/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 62.9894, 159.664, 42.7271, 0.22 ) }
    dend_33 { pt3dadd( 63.6671, 158.961, 43.9836, 0.22 ) }
    dend_33 { pt3dadd( 64.0439, 158.649, 44.5884, 0.22 ) }
    dend_33 { pt3dadd( 64.0722, 158.63, 44.6384, 0.22 ) }
    dend_33 { pt3dadd( 64.7914, 158.201, 45.9649, 0.22 ) }
    dend_33 { pt3dadd( 64.831, 158.186, 46.0353, 0.22 ) }
    dend_33 { pt3dadd( 65.2424, 158.085, 46.856, 0.22 ) }
    dend_33 { pt3dadd( 65.4419, 158.068, 47.2836, 0.74 ) }
    dend_33 { pt3dadd( 65.8122, 158.108, 48.2186, 0.59 ) }
    dend_33 { pt3dadd( 65.8421, 158.114, 48.294, 0.59 ) }
    dend_33 { pt3dadd( 66.3565, 158.256, 49.5052, 0.22 ) }
    dend_33 { pt3dadd( 66.7651, 158.335, 50.638, 0.81 ) }
    dend_33 { pt3dadd( 66.9832, 158.359, 51.3346, 0.96 ) }
    dend_33 { pt3dadd( 67.3402, 158.375, 52.5144, 0.81 ) }
    dend_33 { pt3dadd( 67.7559, 158.359, 53.7974, 0.22 ) }
    dend_33 { pt3dadd( 67.9427, 158.334, 54.378, 0.59 ) }
    dend_33 { pt3dadd( 68.417, 158.199, 55.8397, 1.03 ) }
    dend_33 { pt3dadd( 68.442, 158.192, 55.9108, 1.03 ) }
    dend_33 { pt3dadd( 68.5214, 158.165, 56.1437, 1.03 ) }
    dend_33 { pt3dadd( 69.0037, 157.957, 57.3533, 0.22 ) }
    dend_33 { pt3dadd( 69.1796, 157.866, 57.8401, 0.52 ) }
    dend_33 { pt3dadd( 69.3467, 157.775, 58.2655, 0.52 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 65/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 62.9894, 159.664, 42.7271, 0.22 ) }
    dend_30 { pt3dadd( 62.9854, 161.158, 43.6178, 0.22 ) }
    dend_30 { pt3dadd( 62.9744, 161.919, 44.0418, 0.74 ) }
    dend_30 { pt3dadd( 62.962, 163.122, 44.6613, 0.22 ) }
    dend_30 { pt3dadd( 62.9597, 163.64, 44.9166, 0.22 ) }
    dend_30 { pt3dadd( 62.9698, 164.809, 45.4637, 0.22 ) }
    dend_30 { pt3dadd( 63.0006, 165.681, 45.8371, 0.22 ) }
    dend_30 { pt3dadd( 63.0051, 165.754, 45.8569, 0.22 ) }
    dend_30 { pt3dadd( 63.0965, 166.4, 45.9785, 0.59 ) }
    dend_30 { pt3dadd( 63.1176, 166.467, 45.9782, 0.59 ) }
    dend_30 { pt3dadd( 63.2669, 166.795, 45.9482, 0.44 ) }
    dend_30 { pt3dadd( 63.6149, 167.422, 45.8513, 0.15 ) }
    dend_30 { pt3dadd( 63.9763, 168.098, 45.7808, 0.22 ) }
    dend_30 { pt3dadd( 64.2218, 168.622, 45.7434, 0.59 ) }
    dend_30 { pt3dadd( 64.8579, 170.152, 45.771, 0.22 ) }
    dend_30 { pt3dadd( 64.8839, 170.223, 45.7771, 0.22 ) }
    dend_30 { pt3dadd( 65.2045, 171.196, 45.918, 0.22 ) }
    dend_30 { pt3dadd( 65.4905, 172.144, 46.1408, 0.29 ) }
    dend_30 { pt3dadd( 65.6594, 172.74, 46.3195, 0.29 ) }
    dend_30 { pt3dadd( 66.0846, 174.347, 46.8885, 0.22 ) }
    dend_30 { pt3dadd( 66.2696, 174.943, 47.1501, 0.52 ) }
    dend_30 { pt3dadd( 66.296, 175.016, 47.1836, 0.52 ) }
    dend_30 { pt3dadd( 66.9234, 176.432, 47.8477, 0.22 ) }
    dend_30 { pt3dadd( 67.1951, 176.967, 48.1169, 0.88 ) }
    dend_30 { pt3dadd( 67.3537, 177.264, 48.3111, 0.74 ) }
    dend_30 { pt3dadd( 67.947, 178.289, 49.1828, 0.22 ) }
    dend_30 { pt3dadd( 68.2041, 178.738, 49.6738, 0.29 ) }
    dend_30 { pt3dadd( 68.4843, 179.21, 50.274, 0.29 ) }
    dend_30 { pt3dadd( 68.8993, 179.894, 51.2921, 0.88 ) }
    dend_30 { pt3dadd( 69.4189, 180.744, 52.6096, 0.66 ) }
    dend_30 { pt3dadd( 69.9045, 181.545, 53.8784, 0.29 ) }
    dend_30 { pt3dadd( 70.5414, 182.545, 55.5485, 0.52 ) }
    dend_30 { pt3dadd( 70.7381, 182.81, 56.0222, 0.44 ) }
    dend_30 { pt3dadd( 71.2453, 183.416, 57.1261, 0.22 ) }
    dend_30 { pt3dadd( 71.6769, 183.854, 57.8902, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_30 { pt3dadd( 71.7197, 183.895, 57.9521, 0.29 ) }
    dend_30 { pt3dadd( 72.2, 184.339, 58.5839, 0.29 ) }
    dend_30 { pt3dadd( 72.6917, 184.726, 59.1013, 0.44 ) }
    dend_30 { pt3dadd( 73.1736, 185.144, 59.597, 0.44 ) }
    dend_30 { pt3dadd( 73.2161, 185.184, 59.6377, 0.44 ) }
    dend_30 { pt3dadd( 73.8365, 185.97, 60.2652, 0.22 ) }
    dend_30 { pt3dadd( 73.8769, 186.033, 60.3051, 0.22 ) }
    dend_30 { pt3dadd( 74.1739, 186.593, 60.5895, 0.22 ) }
    dend_30 { pt3dadd( 74.7053, 187.751, 61.0392, 0.22 ) }
    dend_30 { pt3dadd( 74.9051, 188.246, 61.1995, 0.59 ) }
    dend_30 { pt3dadd( 75.4783, 189.782, 61.4925, 0.22 ) }
    dend_30 { pt3dadd( 75.8143, 190.788, 61.5667, 0.22 ) }
    dend_30 { pt3dadd( 75.9845, 191.518, 61.5823, 0.22 ) }
    dend_30 { pt3dadd( 76.1228, 192.496, 61.5473, 0.88 ) }
    dend_30 { pt3dadd( 76.1387, 192.813, 61.5147, 0.88 ) }
    dend_30 { pt3dadd( 76.0608, 194.736, 61.2313, 0.22 ) }
    dend_30 { pt3dadd( 75.9941, 195.171, 61.1411, 0.37 ) }
    dend_30 { pt3dadd( 75.5497, 196.835, 60.7644, 0.15 ) }
    dend_30 { pt3dadd( 75.5162, 196.936, 60.7443, 0.15 ) }
    dend_30 { pt3dadd( 75.3465, 197.41, 60.7032, 0.37 ) }
    dend_30 { pt3dadd( 75.128, 197.999, 60.7032, 0.37 ) }
    dend_30 { pt3dadd( 75.1054, 198.065, 60.7107, 0.37 ) }
    dend_30 { pt3dadd( 74.9593, 198.668, 60.7806, 0.29 ) }
    dend_30 { pt3dadd( 74.8781, 199.631, 60.9059, 0.29 ) }
    dend_30 { pt3dadd( 74.8785, 200.933, 61.1083, 0.22 ) }
    dend_30 { pt3dadd( 74.8875, 201.085, 61.1332, 0.22 ) }
    dend_30 { pt3dadd( 75.0003, 202.225, 61.3254, 0.22 ) }
    dend_30 { pt3dadd( 75.0145, 202.322, 61.3421, 0.22 ) }
    dend_30 { pt3dadd( 75.2103, 203.279, 61.5132, 0.22 ) }
    dend_30 { pt3dadd( 75.4157, 204.097, 61.6492, 0.29 ) }
    dend_30 { pt3dadd( 75.7223, 205.149, 61.791, 0.29 ) }
    dend_30 { pt3dadd( 75.742, 205.216, 61.8001, 0.29 ) }
    dend_30 { pt3dadd( 75.93, 205.968, 61.9013, 0.22 ) }
    dend_30 { pt3dadd( 75.9483, 206.049, 61.9126, 0.22 ) }
    dend_30 { pt3dadd( 76.0857, 206.689, 62.0063, 0.29 ) }
    dend_30 { pt3dadd( 76.1142, 206.797, 62.0207, 0.29 ) }
    dend_30 { pt3dadd( 76.3722, 207.679, 62.1224, 0.59 ) }
    dend_30 { pt3dadd( 76.7219, 208.927, 62.1642, 0.22 ) }
    dend_30 { pt3dadd( 76.9351, 209.726, 62.1428, 0.59 ) }
    dend_30 { pt3dadd( 77.0709, 210.232, 62.1128, 0.59 ) }
    dend_30 { pt3dadd( 77.4245, 211.497, 61.9979, 0.22 ) }
    dend_30 { pt3dadd( 77.5718, 211.995, 61.9399, 0.44 ) }
    dend_30 { pt3dadd( 77.9312, 213.109, 61.7613, 0.22 ) }
    dend_30 { pt3dadd( 78.1294, 213.629, 61.649, 0.22 ) }
    dend_30 { pt3dadd( 78.2527, 213.913, 61.5943, 0.59 ) }
    dend_30 { pt3dadd( 78.2923, 213.992, 61.5831, 0.59 ) }
    dend_30 { pt3dadd( 78.4724, 214.288, 61.5739, 0.59 ) }
    dend_30 { pt3dadd( 78.538, 214.372, 61.5813, 0.59 ) }
    dend_30 { pt3dadd( 79.3752, 215.357, 61.7626, 0.22 ) }
    dend_30 { pt3dadd( 80.1554, 216.289, 61.9312, 0.37 ) }
    dend_30 { pt3dadd( 80.1989, 216.344, 61.9407, 0.37 ) }
    dend_30 { pt3dadd( 80.4267, 216.686, 62.0067, 0.37 ) }
    dend_30 { pt3dadd( 81.0134, 217.71, 62.2231, 0.22 ) }
    dend_30 { pt3dadd( 81.3163, 218.304, 62.3739, 0.22 ) }
    dend_30 { pt3dadd( 81.5027, 218.731, 62.5155, 0.52 ) }
    dend_30 { pt3dadd( 81.6026, 219.035, 62.6158, 0.52 ) }
    dend_30 { pt3dadd( 81.8906, 220.224, 62.9739, 0.22 ) }
    dend_30 { pt3dadd( 81.9093, 220.327, 63.0025, 0.22 ) }
    dend_30 { pt3dadd( 82.0802, 221.671, 63.393, 0.22 ) }
    dend_30 { pt3dadd( 82.2519, 223.135, 63.832, 0.22 ) }
    dend_30 { pt3dadd( 82.3653, 224.18, 64.1421, 0.22 ) }
    dend_30 { pt3dadd( 82.5113, 225.701, 64.5736, 0.22 ) }
    dend_30 { pt3dadd( 82.6324, 227.002, 64.922, 0.88 ) }
    dend_30 { pt3dadd( 82.7099, 228.091, 65.202, 0.44 ) }
    dend_30 { pt3dadd( 82.7474, 228.895, 65.397, 0.22 ) }
    dend_30 { pt3dadd( 82.772, 229.305, 65.4914, 0.37 ) }
    dend_30 { pt3dadd( 82.8311, 229.772, 65.6048, 0.37 ) }
    dend_30 { pt3dadd( 83.0251, 230.873, 65.8856, 0.22 ) }
    dend_30 { pt3dadd( 83.0404, 230.945, 65.9016, 0.22 ) }
    dend_30 { pt3dadd( 83.2222, 231.628, 66.0193, 0.22 ) }
    dend_30 { pt3dadd( 83.2679, 231.778, 66.0468, 0.22 ) }
    dend_30 { pt3dadd( 83.5897, 232.765, 66.2463, 0.22 ) }
    dend_30 { pt3dadd( 83.6095, 232.831, 66.2589, 0.22 ) }
    dend_30 { pt3dadd( 83.7795, 233.453, 66.3682, 0.22 ) }
    dend_30 { pt3dadd( 84.0081, 234.44, 66.5258, 0.52 ) }
    dend_30 { pt3dadd( 84.2503, 235.651, 66.7087, 0.22 ) }
    dend_30 { pt3dadd( 84.5251, 237.2, 66.9305, 0.22 ) }
    dend_30 { pt3dadd( 84.7907, 238.94, 67.1645, 0.22 ) }
    dend_30 { pt3dadd( 84.8189, 239.161, 67.1915, 0.22 ) }
    dend_30 { pt3dadd( 84.9615, 240.481, 67.3296, 0.22 ) }
    dend_30 { pt3dadd( 84.9778, 240.671, 67.3461, 0.22 ) }
    dend_30 { pt3dadd( 85.0666, 241.781, 67.4276, 0.22 ) }
    dend_30 { pt3dadd( 85.09, 241.942, 67.4375, 0.22 ) }
    dend_30 { pt3dadd( 85.3289, 243.182, 67.5629, 0.22 ) }
    dend_30 { pt3dadd( 85.796, 245.321, 67.832, 0.22 ) }
    dend_30 { pt3dadd( 85.8469, 245.547, 67.8653, 0.22 ) }
    dend_30 { pt3dadd( 86.091, 246.648, 68.0406, 0.96 ) }
    dend_30 { pt3dadd( 86.5598, 248.843, 68.4136, 0.22 ) }
    dend_30 { pt3dadd( 86.9183, 250.927, 68.8467, 0.22 ) }
    dend_30 { pt3dadd( 86.9272, 251.052, 68.8792, 0.22 ) }
    dend_30 { pt3dadd( 86.8815, 252.39, 69.3058, 0.74 ) }
    dend_30 { pt3dadd( 86.8723, 252.46, 69.3301, 0.74 ) }
    dend_30 { pt3dadd( 86.7443, 252.945, 69.5121, 0.74 ) }
    dend_30 { pt3dadd( 86.1496, 254.342, 70.0654, 0.66 ) }
    dend_30 { pt3dadd( 85.3858, 255.889, 70.636, 0.15 ) }
    dend_30 { pt3dadd( 85.348, 255.963, 70.6608, 0.15 ) }
    dend_30 { pt3dadd( 84.7727, 257.034, 70.9883, 0.15 ) }
    dend_30 { pt3dadd( 84.7418, 257.091, 71.0031, 0.15 ) }
    dend_30 { pt3dadd( 84.4595, 257.63, 71.0957, 0.15 ) }
    dend_30 { pt3dadd( 84.3938, 257.771, 71.0991, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_30 { pt3dadd( 84.1102, 258.36, 71.0797, 0.15 ) }
    dend_30 { pt3dadd( 84.0718, 258.431, 71.0793, 0.15 ) }
    dend_30 { pt3dadd( 83.4573, 259.443, 71.0947, 0.37 ) }
    dend_30 { pt3dadd( 82.9191, 260.307, 71.111, 0.15 ) }
    dend_30 { pt3dadd( 82.4518, 261.008, 71.1443, 0.66 ) }
    dend_30 { pt3dadd( 82.2273, 261.321, 71.1758, 0.81 ) }
    dend_30 { pt3dadd( 81.3826, 262.407, 71.3632, 0.15 ) }
    dend_30 { pt3dadd( 81.3344, 262.472, 71.3804, 0.15 ) }
    dend_30 { pt3dadd( 80.9597, 262.984, 71.554, 0.37 ) }
    dend_30 { pt3dadd( 80.2993, 263.964, 71.9621, 0.15 ) }
    dend_30 { pt3dadd( 79.5369, 265.292, 72.5767, 0.44 ) }
    dend_30 { pt3dadd( 79.0913, 266.205, 73.0511, 0.81 ) }
    dend_30 { pt3dadd( 78.4987, 267.674, 73.8778, 0.22 ) }
    dend_30 { pt3dadd( 78.4773, 267.74, 73.9178, 0.22 ) }
    dend_30 { pt3dadd( 78.2853, 268.613, 74.4776, 0.22 ) }
    dend_30 { pt3dadd( 78.2099, 269.324, 74.929, 0.22 ) }
    dend_30 { pt3dadd( 78.1813, 270.551, 75.6827, 0.81 ) }
    dend_30 { pt3dadd( 78.1808, 270.763, 75.8062, 0.81 ) }
    dend_30 { pt3dadd( 78.0993, 271.673, 76.3405, 0.22 ) }
    dend_30 { pt3dadd( 78.0037, 272.235, 76.6652, 0.22 ) }
    dend_30 { pt3dadd( 77.8569, 272.695, 76.9268, 0.52 ) }
    dend_30 { pt3dadd( 77.7844, 272.827, 77.0171, 0.66 ) }
    dend_30 { pt3dadd( 77.752, 272.871, 77.0495, 0.66 ) }
    dend_30 { pt3dadd( 77.1493, 273.532, 77.593, 0.52 ) }
    dend_30 { pt3dadd( 76.683, 273.994, 78.0071, 0.22 ) }
    dend_30 { pt3dadd( 76.2882, 274.442, 78.3873, 0.59 ) }
    dend_30 { pt3dadd( 75.3645, 275.926, 79.4438, 0.15 ) }
    dend_30 { pt3dadd( 75.1501, 276.416, 79.756, 0.15 ) }
    dend_30 { pt3dadd( 75.1158, 276.521, 79.8171, 0.15 ) }
    dend_30 { pt3dadd( 74.9146, 277.351, 80.2444, 0.15 ) }
    dend_30 { pt3dadd( 74.662, 278.746, 80.9143, 0.15 ) }
    dend_30 { pt3dadd( 74.4218, 280.355, 81.5517, 0.15 ) }
    dend_30 { pt3dadd( 74.2805, 281.604, 81.9352, 0.15 ) }
    dend_30 { pt3dadd( 74.2691, 281.676, 81.9545, 0.15 ) }
    dend_30 { pt3dadd( 74.111, 282.307, 82.0846, 0.15 ) }
    dend_30 { pt3dadd( 74.0124, 282.534, 82.1143, 0.15 ) }
    dend_30 { pt3dadd( 73.3081, 283.534, 82.1641, 0.29 ) }
    dend_30 { pt3dadd( 73.2394, 283.607, 82.158, 0.29 ) }
    dend_30 { pt3dadd( 72.7516, 284.019, 82.1808, 0.29 ) }
    dend_30 { pt3dadd( 72.175, 284.468, 82.2664, 0.29 ) }
    dend_30 { pt3dadd( 71.3776, 285.07, 82.4212, 0.22 ) }
    dend_30 { pt3dadd( 70.976, 285.356, 82.5121, 0.52 ) }
    dend_30 { pt3dadd( 70.493, 285.694, 82.6333, 0.74 ) }
    dend_30 { pt3dadd( 67.8339, 287.481, 83.2832, 0.15 ) }
    dend_30 { pt3dadd( 67.7778, 287.517, 83.2964, 0.15 ) }
    dend_30 { pt3dadd( 66.807, 288.122, 83.4869, 0.15 ) }
    dend_30 { pt3dadd( 66.1091, 288.544, 83.5943, 0.37 ) }
    dend_30 { pt3dadd( 65.5614, 288.844, 83.6429, 0.37 ) }
    dend_30 { pt3dadd( 65.3035, 288.955, 83.6327, 0.37 ) }
    dend_30 { pt3dadd( 64.7415, 289.12, 83.5431, 0.29 ) }
    dend_30 { pt3dadd( 63.8726, 289.292, 83.4261, 0.29 ) }
    dend_30 { pt3dadd( 62.9135, 289.365, 83.3, 0.15 ) }
    dend_30 { pt3dadd( 61.6617, 289.376, 83.1286, 0.15 ) }
    dend_30 { pt3dadd( 60.0937, 289.266, 82.906, 0.22 ) }
    dend_30 { pt3dadd( 58.5981, 289.103, 82.6571, 0.22 ) }
    dend_30 { pt3dadd( 57.9116, 289.015, 82.549, 0.22 ) }
    dend_30 { pt3dadd( 56.8153, 288.867, 82.372, 0.22 ) }
    dend_30 { pt3dadd( 56.7203, 288.86, 82.3632, 0.22 ) }
    dend_30 { pt3dadd( 55.7599, 288.908, 82.4458, 0.22 ) }
    dend_30 { pt3dadd( 55.1061, 289.015, 82.5661, 0.44 ) }
    dend_30 { pt3dadd( 53.8632, 289.361, 82.8372, 0.22 ) }
    dend_30 { pt3dadd( 53.225, 289.645, 83.0524, 0.66 ) }
    dend_30 { pt3dadd( 51.442, 290.547, 83.7515, 0.22 ) }
    dend_30 { pt3dadd( 50.0962, 291.274, 84.3275, 0.29 ) }
    dend_30 { pt3dadd( 49.3224, 291.733, 84.7095, 0.22 ) }
    dend_30 { pt3dadd( 48.4414, 292.264, 85.1878, 0.44 ) }
    dend_30 { pt3dadd( 47.2693, 293.069, 85.852, 0.22 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 67/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 79.3103, 276.176, 20.1662, 0.66 ) }
    dend_28 { pt3dadd( 78.4881, 277.199, 19.6461, 0.66 ) }
    dend_28 { pt3dadd( 77.7701, 278.273, 19.1674, 0.29 ) }
    dend_28 { pt3dadd( 77.6836, 278.438, 19.1081, 0.29 ) }
    dend_28 { pt3dadd( 77.08, 279.84, 18.6876, 0.66 ) }
    dend_28 { pt3dadd( 76.7621, 280.739, 18.495, 0.66 ) }
    dend_28 { pt3dadd( 76.5042, 281.552, 18.3583, 0.29 ) }
    dend_28 { pt3dadd( 76.4588, 281.746, 18.3517, 0.29 ) }
    dend_28 { pt3dadd( 76.3805, 282.301, 18.3727, 0.29 ) }
    dend_28 { pt3dadd( 76.3708, 282.391, 18.3752, 0.29 ) }
    dend_28 { pt3dadd( 76.3021, 283.387, 18.4007, 0.29 ) }
    dend_28 { pt3dadd( 76.2921, 283.476, 18.4031, 0.29 ) }
    dend_28 { pt3dadd( 76.1248, 284.914, 18.4416, 1.03 ) }
    dend_28 { pt3dadd( 76.0789, 285.682, 18.5803, 1.25 ) }
    dend_28 { pt3dadd( 76.0591, 286.395, 18.7966, 1.47 ) }
    dend_28 { pt3dadd( 76.0447, 286.872, 18.9817, 1.47 ) }
    dend_28 { pt3dadd( 76.0041, 287.812, 19.4756, 1.47 ) }
    dend_28 { pt3dadd( 75.9992, 287.882, 19.5206, 1.47 ) }
    dend_28 { pt3dadd( 75.7119, 289.692, 20.9002, 0.22 ) }
    dend_28 { pt3dadd( 75.5276, 290.315, 21.4312, 0.44 ) }
    dend_28 { pt3dadd( 75.3606, 290.745, 21.8126, 0.44 ) }
    dend_28 { pt3dadd( 75.0583, 291.378, 22.3577, 0.22 ) }
    dend_28 { pt3dadd( 75.0282, 291.432, 22.4001, 0.22 ) }
    dend_28 { pt3dadd( 74.5047, 292.325, 22.9552, 0.81 ) }
    dend_28 { pt3dadd( 73.8859, 293.333, 23.4168, 0.22 ) }
    dend_28 { pt3dadd( 73.5214, 293.993, 23.6932, 1.03 ) }
    dend_28 { pt3dadd( 73.2359, 294.571, 23.9094, 1.18 ) }
    dend_28 { pt3dadd( 72.6437, 295.949, 24.3506, 0.22 ) }
    dend_28 { pt3dadd( 72.2743, 296.926, 24.655, 0.22 ) }
    dend_28 { pt3dadd( 72.0876, 297.533, 24.8338, 0.81 ) }
    dend_28 { pt3dadd( 71.8934, 298.246, 25.0222, 1.03 ) }
    dend_28 { pt3dadd( 71.8691, 298.38, 25.0603, 1.03 ) }
    dend_28 { pt3dadd( 71.8172, 298.972, 25.2245, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_28 { pt3dadd( 71.7797, 299.935, 25.4756, 0.66 ) }
    dend_28 { pt3dadd( 71.7344, 300.774, 25.6878, 0.52 ) }
    dend_28 { pt3dadd( 71.6315, 302.105, 26.1107, 0.22 ) }
    dend_28 { pt3dadd( 71.5636, 302.863, 26.3785, 0.59 ) }
    dend_28 { pt3dadd( 71.4376, 304.56, 27.0077, 0.22 ) }
    dend_28 { pt3dadd( 71.4029, 305.112, 27.219, 0.81 ) }
    dend_28 { pt3dadd( 71.3608, 306.133, 27.6187, 1.03 ) }
    dend_28 { pt3dadd( 71.3841, 308.226, 28.5361, 0.22 ) }
    dend_28 { pt3dadd( 71.4522, 308.865, 28.8453, 0.88 ) }
    dend_28 { pt3dadd( 71.6147, 309.656, 29.2684, 1.11 ) }
    dend_28 { pt3dadd( 71.6799, 309.817, 29.3668, 1.11 ) }
    dend_28 { pt3dadd( 71.9261, 310.264, 29.644, 1.11 ) }
    dend_28 { pt3dadd( 72.6699, 311.369, 30.3055, 0.22 ) }
    dend_28 { pt3dadd( 73.2156, 312.141, 30.695, 0.74 ) }
    dend_28 { pt3dadd( 73.4509, 312.495, 30.8658, 0.74 ) }
    dend_28 { pt3dadd( 74.3068, 313.741, 31.4421, 0.22 ) }
    dend_28 { pt3dadd( 74.5792, 314.127, 31.6217, 0.88 ) }
    dend_28 { pt3dadd( 74.9103, 314.595, 31.8347, 1.03 ) }
    dend_28 { pt3dadd( 75.3412, 315.302, 32.1152, 0.52 ) }
    dend_28 { pt3dadd( 75.7838, 316.136, 32.4245, 0.22 ) }
    dend_28 { pt3dadd( 76.285, 317.043, 32.7438, 0.22 ) }
    dend_28 { pt3dadd( 76.8551, 318.024, 33.059, 1.25 ) }
    dend_28 { pt3dadd( 76.9039, 318.108, 33.0842, 1.25 ) }
    dend_28 { pt3dadd( 77.5772, 319.29, 33.4087, 0.22 ) }
    dend_28 { pt3dadd( 78.0661, 320.175, 33.6235, 0.22 ) }
    dend_28 { pt3dadd( 78.5294, 321.062, 33.8101, 0.22 ) }
    dend_28 { pt3dadd( 78.9332, 321.879, 33.9579, 0.22 ) }
    dend_28 { pt3dadd( 79.2643, 322.581, 34.0638, 0.96 ) }
    dend_28 { pt3dadd( 79.7007, 323.5, 34.1952, 1.11 ) }
    dend_28 { pt3dadd( 80.4322, 325.022, 34.4032, 0.22 ) }
    dend_28 { pt3dadd( 80.8271, 325.919, 34.4921, 1.11 ) }
    dend_28 { pt3dadd( 80.8647, 326.018, 34.4992, 1.11 ) }
    dend_28 { pt3dadd( 81.3955, 327.541, 34.5788, 0.22 ) }
    dend_28 { pt3dadd( 81.6871, 328.575, 34.6182, 1.03 ) }
    dend_28 { pt3dadd( 81.7699, 328.977, 34.6231, 1.03 ) }
    dend_28 { pt3dadd( 81.947, 330.535, 34.6041, 0.22 ) }
    dend_28 { pt3dadd( 81.9951, 331.379, 34.5844, 0.22 ) }
    dend_28 { pt3dadd( 81.9998, 331.545, 34.5809, 0.22 ) }
    dend_28 { pt3dadd( 82.0552, 332.913, 34.5341, 0.22 ) }
    dend_28 { pt3dadd( 82.0614, 333.007, 34.5323, 0.22 ) }
    dend_28 { pt3dadd( 82.1325, 333.451, 34.5345, 0.22 ) }
    dend_28 { pt3dadd( 82.1538, 333.527, 34.5382, 0.22 ) }
    dend_28 { pt3dadd( 82.4974, 334.229, 34.5805, 0.52 ) }
    dend_28 { pt3dadd( 83.1641, 335.284, 34.6622, 0.22 ) }
    dend_28 { pt3dadd( 83.5463, 335.809, 34.7116, 0.81 ) }
    dend_28 { pt3dadd( 83.8767, 336.286, 34.7626, 0.81 ) }
    dend_28 { pt3dadd( 84.0924, 336.615, 34.7946, 0.81 ) }
    dend_28 { pt3dadd( 84.9515, 338.044, 34.9291, 0.22 ) }
    dend_28 { pt3dadd( 85.1956, 338.518, 34.9854, 0.74 ) }
    dend_28 { pt3dadd( 85.5017, 339.192, 35.0843, 1.03 ) }
    dend_28 { pt3dadd( 85.8145, 340.024, 35.2076, 1.18 ) }
    dend_28 { pt3dadd( 86.1398, 341.049, 35.3605, 1.11 ) }
    dend_28 { pt3dadd( 86.2892, 341.593, 35.4433, 0.81 ) }
    dend_28 { pt3dadd( 86.7127, 343.372, 35.7226, 0.29 ) }
    dend_28 { pt3dadd( 86.9964, 344.517, 35.9099, 0.81 ) }
    dend_28 { pt3dadd( 87.3589, 346.01, 36.135, 0.22 ) }
    dend_28 { pt3dadd( 87.4023, 346.202, 36.1619, 0.22 ) }
    dend_28 { pt3dadd( 87.5903, 347.28, 36.3022, 0.22 ) }
    dend_28 { pt3dadd( 87.6352, 347.809, 36.3557, 0.22 ) }
    dend_28 { pt3dadd( 87.6109, 348.554, 36.399, 0.22 ) }
    dend_28 { pt3dadd( 87.3889, 350.09, 36.4579, 1.11 ) }
    dend_28 { pt3dadd( 87.1893, 350.933, 36.4805, 1.62 ) }
    dend_28 { pt3dadd( 86.8498, 351.881, 36.529, 1.47 ) }
    dend_28 { pt3dadd( 86.1829, 353.236, 36.6218, 0.37 ) }
    dend_28 { pt3dadd( 85.68, 354.051, 36.6912, 0.66 ) }
    dend_28 { pt3dadd( 85.2431, 354.67, 36.7765, 0.66 ) }
    dend_28 { pt3dadd( 84.5683, 355.622, 36.9964, 0.29 ) }
    dend_28 { pt3dadd( 83.7628, 356.8, 37.3381, 1.18 ) }
    dend_28 { pt3dadd( 83.3535, 357.479, 37.5669, 0.74 ) }
    dend_28 { pt3dadd( 82.9133, 358.395, 37.9134, 0.29 ) }
    dend_28 { pt3dadd( 82.5437, 359.359, 38.3229, 0.29 ) }
    dend_28 { pt3dadd( 82.1646, 360.815, 38.9529, 0.22 ) }
    dend_28 { pt3dadd( 82.1543, 360.884, 38.9803, 0.22 ) }
    dend_28 { pt3dadd( 82.0871, 361.704, 39.2466, 0.74 ) }
    dend_28 { pt3dadd( 82.0487, 362.337, 39.4079, 1.03 ) }
    dend_28 { pt3dadd( 82.007, 362.998, 39.532, 1.18 ) }
    dend_28 { pt3dadd( 81.9124, 364.03, 39.6413, 0.22 ) }
    dend_28 { pt3dadd( 81.8104, 365.291, 39.6961, 0.22 ) }
    dend_28 { pt3dadd( 81.7713, 366.118, 39.7228, 0.22 ) }
    dend_28 { pt3dadd( 81.7585, 367.028, 39.7416, 0.88 ) }
    dend_28 { pt3dadd( 81.7591, 367.117, 39.7412, 0.88 ) }
    dend_28 { pt3dadd( 81.7947, 368.026, 39.7114, 0.88 ) }
    dend_28 { pt3dadd( 81.8514, 369.833, 39.6863, 0.22 ) }
    dend_28 { pt3dadd( 81.8886, 370.553, 39.7027, 0.74 ) }
    dend_28 { pt3dadd( 81.894, 370.652, 39.7096, 0.74 ) }
    dend_28 { pt3dadd( 81.9153, 371.182, 39.7699, 0.96 ) }
    dend_28 { pt3dadd( 81.9139, 371.369, 39.7946, 0.96 ) }
    dend_28 { pt3dadd( 81.8334, 372.838, 40.0242, 0.15 ) }
    dend_28 { pt3dadd( 81.7773, 373.543, 40.176, 0.29 ) }
    dend_28 { pt3dadd( 81.7576, 373.986, 40.2756, 0.29 ) }
    dend_28 { pt3dadd( 81.7429, 374.555, 40.4045, 0.22 ) }
    dend_28 { pt3dadd( 81.7676, 375.384, 40.5958, 0.59 ) }
    dend_28 { pt3dadd( 79.5651, 387.598, 41.0017, 0.59 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 93/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 79.3103, 276.176, 20.1662, 0.22 ) }
    dend_27 { pt3dadd( 80.5266, 277.563, 21.3861, 0.22 ) }
    dend_27 { pt3dadd( 80.5731, 277.619, 21.43, 0.22 ) }
    dend_27 { pt3dadd( 81.0502, 278.203, 21.8634, 0.96 ) }
    dend_27 { pt3dadd( 81.7408, 279.065, 22.4697, 0.22 ) }
    dend_27 { pt3dadd( 82.1876, 279.624, 22.835, 0.66 ) }
    dend_27 { pt3dadd( 82.7, 280.276, 23.2331, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_27 { pt3dadd( 83.0773, 280.703, 23.463, 0.52 ) }
    dend_27 { pt3dadd( 83.1357, 280.775, 23.5031, 0.52 ) }
    dend_27 { pt3dadd( 83.3576, 281.094, 23.6761, 0.52 ) }
    dend_27 { pt3dadd( 83.815, 281.825, 24.0577, 0.22 ) }
    dend_27 { pt3dadd( 84.0332, 282.198, 24.2649, 0.59 ) }
    dend_27 { pt3dadd( 84.2149, 282.554, 24.5041, 0.59 ) }
    dend_27 { pt3dadd( 84.731, 283.829, 25.3982, 0.22 ) }
    dend_27 { pt3dadd( 84.8854, 284.439, 25.7788, 0.96 ) }
    dend_27 { pt3dadd( 84.9075, 284.509, 25.8197, 0.96 ) }
    dend_27 { pt3dadd( 85.0263, 284.86, 26.014, 0.96 ) }
    dend_27 { pt3dadd( 85.4605, 285.969, 26.5952, 0.66 ) }
    dend_27 { pt3dadd( 85.8639, 286.906, 27.0507, 0.22 ) }
    dend_27 { pt3dadd( 86.445, 288.191, 27.6097, 0.22 ) }
    dend_27 { pt3dadd( 87.613, 290.512, 28.6247, 0.22 ) }
    dend_27 { pt3dadd( 87.6952, 290.663, 28.6888, 0.22 ) }
    dend_27 { pt3dadd( 88.0712, 291.253, 28.9273, 0.59 ) }
    dend_27 { pt3dadd( 88.1258, 291.32, 28.9504, 0.59 ) }
    dend_27 { pt3dadd( 94.234, 300.69, 32.472, 0.59 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 18/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -179.946, 9.43328, 100.877, 0.22 ) }
    dend_18 { pt3dadd( -181.274, 9.03663, 101.796, 0.22 ) }
    dend_18 { pt3dadd( -181.732, 8.92381, 102.109, 0.22 ) }
    dend_18 { pt3dadd( -182.295, 8.73907, 102.591, 0.66 ) }
    dend_18 { pt3dadd( -182.538, 8.65036, 102.807, 0.88 ) }
    dend_18 { pt3dadd( -182.809, 8.48363, 103.111, 0.59 ) }
    dend_18 { pt3dadd( -182.853, 8.44588, 103.166, 0.59 ) }
    dend_18 { pt3dadd( -183.345, 7.87534, 103.889, 0.29 ) }
    dend_18 { pt3dadd( -183.826, 6.95151, 104.813, 1.33 ) }
    dend_18 { pt3dadd( -183.899, 6.66255, 105.024, 1.33 ) }
    dend_18 { pt3dadd( -183.981, 4.98396, 105.873, 0.37 ) }
    dend_18 { pt3dadd( -183.886, 4.17637, 106.114, 0.37 ) }
    dend_18 { pt3dadd( -183.872, 4.11109, 106.121, 0.29 ) }
    dend_18 { pt3dadd( -183.612, 3.23187, 106.062, 0.29 ) }
    dend_18 { pt3dadd( -183.306, 2.38028, 105.895, 0.37 ) }
    dend_18 { pt3dadd( -182.993, 1.59622, 105.675, 0.37 ) }
    dend_18 { pt3dadd( -182.832, 1.21569, 105.501, 0.29 ) }
    dend_18 { pt3dadd( -182.476, 0.320428, 105.1, 0.22 ) }
    dend_18 { pt3dadd( -182.34, -0.0663934, 104.934, 0.22 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 37/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -179.946, 9.43328, 100.877, 0.22 ) }
    dend_17 { pt3dadd( -180.766, 8.73261, 101.074, 0.22 ) }
    dend_17 { pt3dadd( -181.401, 8.24903, 101.235, 0.22 ) }
    dend_17 { pt3dadd( -181.451, 8.21838, 101.248, 0.22 ) }
    dend_17 { pt3dadd( -182.058, 7.9171, 101.433, 0.22 ) }
    dend_17 { pt3dadd( -182.721, 7.67917, 101.649, 0.37 ) }
    dend_17 { pt3dadd( -182.893, 7.64162, 101.715, 0.37 ) }
    dend_17 { pt3dadd( -183.276, 7.64296, 101.896, 0.37 ) }
    dend_17 { pt3dadd( -183.826, 7.70316, 102.174, 0.22 ) }
    dend_17 { pt3dadd( -184.288, 7.76609, 102.427, 0.29 ) }
    dend_17 { pt3dadd( -184.768, 7.84852, 102.709, 0.29 ) }
    dend_17 { pt3dadd( -185.447, 7.96399, 103.116, 0.22 ) }
    dend_17 { pt3dadd( -185.938, 8.02907, 103.404, 0.52 ) }
    dend_17 { pt3dadd( -186.308, 8.06229, 103.614, 0.59 ) }
    dend_17 { pt3dadd( -186.778, 8.07798, 103.87, 0.29 ) }
    dend_17 { pt3dadd( -187.249, 8.04983, 104.098, 0.22 ) }
    dend_17 { pt3dadd( -187.484, 8.01357, 104.202, 0.59 ) }
    dend_17 { pt3dadd( -187.924, 7.92236, 104.369, 0.22 ) }
    dend_17 { pt3dadd( -188.364, 7.84899, 104.523, 0.59 ) }
    dend_17 { pt3dadd( -188.423, 7.84071, 104.542, 0.59 ) }
    dend_17 { pt3dadd( -189.065, 7.76285, 104.733, 0.52 ) }
    dend_17 { pt3dadd( -189.383, 7.71748, 104.827, 0.81 ) }
    dend_17 { pt3dadd( -189.438, 7.7088, 104.843, 0.81 ) }
    dend_17 { pt3dadd( -190.344, 7.53567, 105.114, 0.29 ) }
    dend_17 { pt3dadd( -190.42, 7.52203, 105.137, 0.29 ) }
    dend_17 { pt3dadd( -190.671, 7.49436, 105.228, 0.52 ) }
    dend_17 { pt3dadd( -191.067, 7.50923, 105.378, 0.88 ) }
    dend_17 { pt3dadd( -191.119, 7.52136, 105.4, 0.88 ) }
    dend_17 { pt3dadd( -191.558, 7.68634, 105.61, 1.25 ) }
    dend_17 { pt3dadd( -191.96, 7.92832, 105.836, 1.4 ) }
    dend_17 { pt3dadd( -192.926, 8.56976, 106.392, 0.22 ) }
    dend_17 { pt3dadd( -193.451, 8.979, 106.713, 0.22 ) }
    dend_17 { pt3dadd( -194.229, 9.72313, 107.219, 0.29 ) }
    dend_17 { pt3dadd( -194.264, 9.7628, 107.243, 0.29 ) }
    dend_17 { pt3dadd( -194.488, 10.1416, 107.431, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 72/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 58.553, 82.2401, 39.8671, 0.22 ) }
    dend_12 { pt3dadd( 58.8094, 82.8165, 39.3401, 0.22 ) }
    dend_12 { pt3dadd( 58.963, 83.1619, 39.0244, 0.22 ) }
    dend_12 { pt3dadd( 59.4205, 84.1908, 38.0839, 0.22 ) }
    dend_12 { pt3dadd( 59.4394, 84.2333, 38.0451, 0.22 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 77/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 58.553, 82.2401, 39.8671, 0.29 ) }
    dend_11 { pt3dadd( 59.9873, 82.1004, 39.2742, 0.29 ) }
    dend_11 { pt3dadd( 61.1431, 82.0483, 38.7677, 0.37 ) }
    dend_11 { pt3dadd( 61.2642, 82.0476, 38.715, 0.37 ) }
    dend_11 { pt3dadd( 61.9014, 82.0656, 38.4432, 0.52 ) }
    dend_11 { pt3dadd( 62.6572, 82.1233, 38.0199, 0.44 ) }
    dend_11 { pt3dadd( 62.7361, 82.1313, 37.9727, 0.44 ) }
    dend_11 { pt3dadd( 63.6058, 82.257, 37.442, 0.44 ) }
    dend_11 { pt3dadd( 64.2978, 82.358, 36.9999, 0.74 ) }
    dend_11 { pt3dadd( 64.8641, 82.4198, 36.6534, 0.96 ) }
    dend_11 { pt3dadd( 66.6146, 82.5551, 35.6156, 0.22 ) }
    dend_11 { pt3dadd( 67.6708, 82.6245, 35.0397, 0.22 ) }
    dend_11 { pt3dadd( 68.6499, 82.7186, 34.5327, 0.44 ) }
    dend_11 { pt3dadd( 68.7596, 82.7341, 34.481, 0.44 ) }
    dend_11 { pt3dadd( 69.5068, 82.8814, 34.1827, 0.44 ) }
    dend_11 { pt3dadd( 69.5804, 82.9009, 34.161, 0.44 ) }
    dend_11 { pt3dadd( 70.4854, 83.2236, 34.043, 0.29 ) }
    dend_11 { pt3dadd( 71.4176, 83.6684, 33.901, 0.59 ) }
    dend_11 { pt3dadd( 72.0004, 83.9894, 33.7834, 0.81 ) }
    dend_11 { pt3dadd( 72.5974, 84.3161, 33.6343, 0.81 ) }
    dend_11 { pt3dadd( 72.9012, 84.4736, 33.5454, 0.81 ) }
    dend_11 { pt3dadd( 73.0067, 84.5216, 33.5039, 0.81 ) }
    dend_11 { pt3dadd( 73.9073, 84.8909, 33.0759, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_11 { pt3dadd( 74.4372, 85.0881, 32.806, 0.81 ) }
    dend_11 { pt3dadd( 74.9256, 85.2546, 32.542, 1.03 ) }
    dend_11 { pt3dadd( 75.4888, 85.4389, 32.2336, 0.88 ) }
    dend_11 { pt3dadd( 76.7265, 85.8467, 31.5593, 0.22 ) }
    dend_11 { pt3dadd( 77.4805, 86.1084, 31.1587, 0.22 ) }
    dend_11 { pt3dadd( 78.2873, 86.4113, 30.7575, 0.22 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 6/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -37.6442, 40.1749, 44.7106, 0.29 ) }
    dend_6 { pt3dadd( -37.7711, 39.5152, 45.5034, 0.29 ) }
    dend_6 { pt3dadd( -37.9328, 39.2994, 45.675, 0.29 ) }
    dend_6 { pt3dadd( -38.6669, 38.6712, 45.8817, 0.29 ) }
    dend_6 { pt3dadd( -38.7781, 38.5931, 45.9275, 0.29 ) }
    dend_6 { pt3dadd( -40.3487, 37.7863, 46.5907, 0.29 ) }
    dend_6 { pt3dadd( -41.0276, 37.4887, 47.1129, 0.29 ) }
    dend_6 { pt3dadd( -41.8038, 37.17, 47.6733, 0.29 ) }
    dend_6 { pt3dadd( -42.7222, 36.8497, 48.3141, 0.29 ) }
    dend_6 { pt3dadd( -43.9881, 36.4858, 49.1644, 1.18 ) }
    dend_6 { pt3dadd( -44.599, 36.3415, 49.5994, 1.18 ) }
    dend_6 { pt3dadd( -46.8251, 36.1403, 51.3897, 1.4 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 18/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -37.6442, 40.1749, 44.7106, 0.29 ) }
    dend_5 { pt3dadd( -38.7112, 40.2579, 44.2367, 0.29 ) }
    dend_5 { pt3dadd( -39.5216, 40.321, 43.8768, 0.29 ) }
    dend_5 { pt3dadd( -40.5443, 40.4006, 43.4227, 0.22 ) }
    dend_5 { pt3dadd( -41.1856, 40.4506, 43.1378, 0.59 ) }
    dend_5 { pt3dadd( -41.4669, 40.4725, 43.0129, 0.59 ) }
    // Section: dend_100, id: dend_100, parent: dend_98 (entry count 24/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( 216.345, -230.399, -3.03233, 0.52 ) }
    dend_100 { pt3dadd( 217.026, -231.102, -3.00566, 0.52 ) }
    dend_100 { pt3dadd( 217.759, -231.986, -2.93121, 0.52 ) }
    dend_100 { pt3dadd( 218.296, -232.677, -2.85954, 0.74 ) }
    dend_100 { pt3dadd( 218.986, -233.543, -2.76239, 0.15 ) }
    dend_100 { pt3dadd( 219.062, -233.634, -2.75207, 0.15 ) }
    dend_100 { pt3dadd( 219.981, -234.728, -2.67511, 0.15 ) }
    dend_100 { pt3dadd( 220.768, -235.719, -2.6806, 1.4 ) }
    dend_100 { pt3dadd( 221.066, -236.097, -2.69767, 1.4 ) }
    dend_100 { pt3dadd( 222.051, -237.301, -2.78914, 0.29 ) }
    dend_100 { pt3dadd( 222.852, -238.163, -2.85526, 0.29 ) }
    dend_100 { pt3dadd( 223.653, -238.937, -2.88834, 0.22 ) }
    dend_100 { pt3dadd( 224.363, -239.529, -2.89415, 0.96 ) }
    dend_100 { pt3dadd( 224.839, -239.879, -2.89915, 1.25 ) }
    dend_100 { pt3dadd( 225.314, -240.203, -2.88926, 1.25 ) }
    dend_100 { pt3dadd( 226.809, -241.215, -2.75881, 0.22 ) }
    dend_100 { pt3dadd( 227.461, -241.661, -2.66327, 1.03 ) }
    dend_100 { pt3dadd( 228.061, -242.076, -2.54069, 1.33 ) }
    dend_100 { pt3dadd( 229.079, -242.815, -2.31095, 0.22 ) }
    dend_100 { pt3dadd( 229.914, -243.527, -2.09165, 0.22 ) }
    dend_100 { pt3dadd( 230.652, -244.266, -1.87643, 0.88 ) }
    dend_100 { pt3dadd( 231.029, -244.698, -1.76061, 1.03 ) }
    dend_100 { pt3dadd( 231.125, -244.817, -1.73154, 1.03 ) }
    dend_100 { pt3dadd( 231.439, -245.249, -1.62194, 1.03 ) }
    dend_100 { pt3dadd( 232.195, -246.442, -1.31793, 0.29 ) }
    dend_100 { pt3dadd( 232.238, -246.513, -1.30266, 0.29 ) }
    dend_100 { pt3dadd( 232.892, -247.505, -1.14263, 0.29 ) }
    dend_100 { pt3dadd( 233.305, -248.089, -1.03797, 0.22 ) }
    dend_100 { pt3dadd( 233.693, -248.593, -0.946373, 0.74 ) }
    dend_100 { pt3dadd( 234.047, -249.01, -0.829822, 0.74 ) }
    dend_100 { pt3dadd( 234.695, -249.708, -0.594022, 0.22 ) }
    dend_100 { pt3dadd( 235.317, -250.306, -0.32089, 0.81 ) }
    dend_100 { pt3dadd( 235.91, -250.822, -0.0300431, 0.81 ) }
    dend_100 { pt3dadd( 236.282, -251.11, 0.154719, 0.81 ) }
    dend_100 { pt3dadd( 237.65, -252.099, 0.808444, 0.22 ) }
    dend_100 { pt3dadd( 237.713, -252.14, 0.833007, 0.22 ) }
    dend_100 { pt3dadd( 238.706, -252.682, 1.14882, 0.22 ) }
    dend_100 { pt3dadd( 239.55, -253.106, 1.35907, 1.11 ) }
    dend_100 { pt3dadd( 240.059, -253.332, 1.4251, 1.33 ) }
    dend_100 { pt3dadd( 240.73, -253.595, 1.45331, 1.25 ) }
    dend_100 { pt3dadd( 242.115, -254.078, 1.32951, 0.22 ) }
    dend_100 { pt3dadd( 243.409, -254.502, 1.14473, 0.22 ) }
    dend_100 { pt3dadd( 243.477, -254.524, 1.12747, 0.22 ) }
    dend_100 { pt3dadd( 244.543, -254.854, 0.782203, 0.22 ) }
    dend_100 { pt3dadd( 244.601, -254.876, 0.759103, 0.22 ) }
    dend_100 { pt3dadd( 245.296, -255.234, 0.4261, 0.52 ) }
    dend_100 { pt3dadd( 245.452, -255.337, 0.335544, 0.52 ) }
    dend_100 { pt3dadd( 246.504, -256.184, -0.371904, 0.29 ) }
    dend_100 { pt3dadd( 247.093, -256.687, -0.766212, 0.29 ) }
    dend_100 { pt3dadd( 247.706, -257.283, -1.17236, 1.62 ) }
    dend_100 { pt3dadd( 248.129, -257.705, -1.43312, 1.62 ) }
    // Section: dend_99, id: dend_99, parent: dend_98 (entry count 75/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( 216.345, -230.399, -3.03233, 0.22 ) }
    dend_99 { pt3dadd( 215.308, -231.552, -3.16913, 0.22 ) }
    dend_99 { pt3dadd( 214.637, -232.298, -3.25763, 0.22 ) }
    dend_99 { pt3dadd( 213.334, -233.746, -3.42943, 0.22 ) }
    dend_99 { pt3dadd( 212.685, -234.468, -3.51503, 0.22 ) }
    dend_99 { pt3dadd( 212.27, -234.93, -3.56977, 0.22 ) }
    dend_99 { pt3dadd( 211.488, -235.798, -3.67279, 0.22 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 82/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 17.2086, -273.978, -50.399, 0.22 ) }
    dend_91 { pt3dadd( 17.0782, -275.127, -50.2512, 0.22 ) }
    dend_91 { pt3dadd( 16.9888, -275.595, -50.1495, 0.74 ) }
    dend_91 { pt3dadd( 16.8984, -275.994, -50.0488, 0.96 ) }
    dend_91 { pt3dadd( 16.7723, -276.562, -49.9032, 0.59 ) }
    dend_91 { pt3dadd( 16.5708, -277.548, -49.6545, 0.22 ) }
    dend_91 { pt3dadd( 16.4395, -278.231, -49.4844, 0.22 ) }
    dend_91 { pt3dadd( 16.2429, -279.315, -49.2151, 0.22 ) }
    dend_91 { pt3dadd( 16.2302, -279.382, -49.2004, 0.22 ) }
    dend_91 { pt3dadd( 16.0972, -280.093, -49.072, 0.22 ) }
    dend_91 { pt3dadd( 16.0319, -280.398, -49.0314, 0.52 ) }
    dend_91 { pt3dadd( 16.0172, -280.462, -49.0277, 0.52 ) }
    dend_91 { pt3dadd( 15.8072, -281.405, -49.0109, 0.22 ) }
    dend_91 { pt3dadd( 15.6462, -281.952, -49.0072, 0.81 ) }
    dend_91 { pt3dadd( 15.5319, -282.254, -48.9948, 1.03 ) }
    dend_91 { pt3dadd( 15.3092, -282.714, -48.9592, 0.74 ) }
    dend_91 { pt3dadd( 14.8862, -283.542, -48.9071, 0.22 ) }
    dend_91 { pt3dadd( 14.6464, -284.033, -48.8794, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_91 { pt3dadd( 14.2269, -284.904, -48.8269, 0.22 ) }
    dend_91 { pt3dadd( 14.0555, -285.305, -48.8124, 0.96 ) }
    dend_91 { pt3dadd( 13.9088, -285.738, -48.808, 1.11 ) }
    dend_91 { pt3dadd( 13.6088, -286.958, -48.8294, 0.22 ) }
    dend_91 { pt3dadd( 13.513, -287.61, -48.8633, 1.03 ) }
    dend_91 { pt3dadd( 13.5108, -287.672, -48.8663, 1.03 ) }
    dend_91 { pt3dadd( 13.5489, -288.251, -48.8871, 1.25 ) }
    dend_91 { pt3dadd( 13.6199, -289.008, -48.8881, 0.88 ) }
    dend_91 { pt3dadd( 13.6282, -289.259, -48.8736, 0.74 ) }
    dend_91 { pt3dadd( 13.6243, -289.345, -48.8622, 0.74 ) }
    dend_91 { pt3dadd( 13.5472, -290.13, -48.7498, 0.22 ) }
    dend_91 { pt3dadd( 13.4433, -290.917, -48.6348, 0.22 ) }
    dend_91 { pt3dadd( 13.4137, -291.102, -48.6075, 0.22 ) }
    dend_91 { pt3dadd( 13.2392, -292.088, -48.3771, 0.22 ) }
    dend_91 { pt3dadd( 13.1139, -292.877, -48.1639, 0.22 ) }
    dend_91 { pt3dadd( 13.0073, -293.737, -47.924, 1.18 ) }
    dend_91 { pt3dadd( 12.9603, -294.268, -47.7764, 1.4 ) }
    dend_91 { pt3dadd( 12.9512, -294.698, -47.6369, 1.4 ) }
    dend_91 { pt3dadd( 13.0353, -296.255, -47.0315, 0.22 ) }
    dend_91 { pt3dadd( 13.1525, -297.069, -46.6161, 0.22 ) }
    dend_91 { pt3dadd( 13.2767, -297.779, -46.1794, 0.52 ) }
    dend_91 { pt3dadd( 13.3158, -298.0, -46.0261, 0.52 ) }
    dend_91 { pt3dadd( 13.5119, -299.074, -45.1973, 0.22 ) }
    dend_91 { pt3dadd( 13.672, -299.934, -44.4716, 0.96 ) }
    dend_91 { pt3dadd( 13.9083, -301.035, -43.4918, 0.22 ) }
    dend_91 { pt3dadd( 13.9179, -301.081, -43.4453, 0.22 ) }
    dend_91 { pt3dadd( 14.0167, -301.655, -42.8435, 0.22 ) }
    dend_91 { pt3dadd( 14.1156, -302.309, -42.2324, 0.22 ) }
    dend_91 { pt3dadd( 14.1214, -302.36, -42.1994, 0.22 ) }
    dend_91 { pt3dadd( 14.1847, -302.895, -42.0201, 1.4 ) }
    dend_91 { pt3dadd( 14.196, -302.967, -42.0098, 1.4 ) }
    dend_91 { pt3dadd( 14.2828, -303.331, -41.9507, 1.4 ) }
    dend_91 { pt3dadd( 14.6783, -304.241, -41.651, 0.22 ) }
    dend_91 { pt3dadd( 15.0424, -304.917, -41.2886, 0.22 ) }
    dend_91 { pt3dadd( 15.2171, -305.227, -41.0667, 0.52 ) }
    dend_91 { pt3dadd( 15.2476, -305.279, -41.0219, 0.52 ) }
    dend_91 { pt3dadd( 15.7038, -306.046, -40.2431, 1.4 ) }
    dend_91 { pt3dadd( 16.396, -307.222, -38.9359, 0.59 ) }
    dend_91 { pt3dadd( 16.742, -307.867, -38.1595, 0.22 ) }
    dend_91 { pt3dadd( 17.0481, -308.525, -37.2583, 0.22 ) }
    dend_91 { pt3dadd( 17.0701, -308.583, -37.1739, 0.22 ) }
    dend_91 { pt3dadd( 17.3127, -309.525, -35.8038, 1.18 ) }
    dend_91 { pt3dadd( 17.4074, -310.331, -34.6291, 0.22 ) }
    dend_91 { pt3dadd( 17.3656, -311.036, -33.6609, 0.88 ) }
    dend_91 { pt3dadd( 17.183, -312.142, -32.1388, 0.22 ) }
    dend_91 { pt3dadd( 17.1245, -312.339, -31.8674, 1.03 ) }
    dend_91 { pt3dadd( 17.0087, -312.616, -31.5092, 1.03 ) }
    dend_91 { pt3dadd( 16.9865, -312.655, -31.4643, 1.03 ) }
    dend_91 { pt3dadd( 16.5579, -313.307, -30.7931, 0.22 ) }
    dend_91 { pt3dadd( 16.26, -313.782, -30.4029, 0.22 ) }
    dend_91 { pt3dadd( 15.7033, -314.662, -29.82, 1.11 ) }
    dend_91 { pt3dadd( 15.5462, -314.889, -29.6746, 1.11 ) }
    dend_91 { pt3dadd( 14.8159, -315.879, -29.0818, 0.22 ) }
    dend_91 { pt3dadd( 14.5126, -316.243, -28.8761, 0.88 ) }
    dend_91 { pt3dadd( 14.1791, -316.583, -28.6848, 0.96 ) }
    dend_91 { pt3dadd( 13.6441, -317.104, -28.4143, 0.96 ) }
    dend_91 { pt3dadd( 12.8935, -317.868, -28.0907, 0.22 ) }
    dend_91 { pt3dadd( 12.4152, -318.45, -27.8399, 0.22 ) }
    dend_91 { pt3dadd( 12.0282, -318.994, -27.6092, 0.22 ) }
    dend_91 { pt3dadd( 11.4789, -320.033, -27.162, 0.96 ) }
    dend_91 { pt3dadd( 11.314, -320.537, -26.9445, 1.25 ) }
    dend_91 { pt3dadd( 11.2249, -321.116, -26.698, 1.18 ) }
    dend_91 { pt3dadd( 11.2229, -322.625, -25.9986, 0.22 ) }
    dend_91 { pt3dadd( 11.2336, -322.748, -25.9391, 0.22 ) }
    dend_91 { pt3dadd( 11.3751, -323.543, -25.5155, 0.22 ) }
    dend_91 { pt3dadd( 11.5276, -324.307, -25.0915, 0.88 ) }
    dend_91 { pt3dadd( 11.572, -324.598, -24.9195, 0.88 ) }
    dend_91 { pt3dadd( 11.6987, -325.793, -24.1898, 0.22 ) }
    dend_91 { pt3dadd( 11.702, -325.85, -24.1561, 0.22 ) }
    dend_91 { pt3dadd( 11.7393, -327.181, -23.3576, 0.22 ) }
    dend_91 { pt3dadd( 11.703, -327.766, -23.0113, 1.25 ) }
    dend_91 { pt3dadd( 11.6374, -328.157, -22.7986, 1.25 ) }
    dend_91 { pt3dadd( 11.6242, -328.212, -22.7742, 1.25 ) }
    dend_91 { pt3dadd( 11.5075, -328.582, -22.6624, 1.25 ) }
    dend_91 { pt3dadd( 11.3784, -329.002, -22.574, 0.66 ) }
    dend_91 { pt3dadd( 11.0543, -329.934, -22.4898, 0.15 ) }
    dend_91 { pt3dadd( 11.0368, -329.989, -22.4852, 0.15 ) }
    dend_91 { pt3dadd( 10.8471, -330.612, -22.4339, 0.15 ) }
    dend_91 { pt3dadd( 10.817, -330.732, -22.4234, 0.15 ) }
    dend_91 { pt3dadd( 10.6758, -331.414, -22.3629, 0.15 ) }
    dend_91 { pt3dadd( 10.5511, -332.154, -22.2981, 0.15 ) }
    dend_91 { pt3dadd( 10.4395, -332.958, -22.2273, 0.96 ) }
    dend_91 { pt3dadd( 10.3862, -333.419, -22.1874, 1.18 ) }
    dend_91 { pt3dadd( 10.2915, -334.447, -22.058, 0.22 ) }
    dend_91 { pt3dadd( 10.2453, -335.108, -21.9584, 0.22 ) }
    dend_91 { pt3dadd( 10.2246, -335.766, -21.8115, 0.88 ) }
    dend_91 { pt3dadd( 10.2397, -336.763, -21.54, 0.22 ) }
    dend_91 { pt3dadd( 10.2557, -337.194, -21.405, 0.22 ) }
    dend_91 { pt3dadd( 10.3008, -338.313, -21.0122, 0.96 ) }
    dend_91 { pt3dadd( 10.3322, -338.75, -20.8442, 1.25 ) }
    dend_91 { pt3dadd( 10.5193, -340.309, -20.2022, 0.22 ) }
    dend_91 { pt3dadd( 10.5302, -340.366, -20.1712, 0.22 ) }
    dend_91 { pt3dadd( 10.6066, -340.706, -19.9669, 0.22 ) }
    dend_91 { pt3dadd( 10.6176, -340.754, -19.9362, 0.22 ) }
    dend_91 { pt3dadd( 10.7821, -341.314, -19.5651, 0.22 ) }
    dend_91 { pt3dadd( 10.8804, -341.583, -19.3603, 0.88 ) }
    dend_91 { pt3dadd( 11.6693, -343.039, -18.0586, 0.22 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 97/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 17.2086, -273.978, -50.399, 0.29 ) }
    dend_90 { pt3dadd( 17.6946, -275.111, -52.2224, 0.29 ) }
    dend_90 { pt3dadd( 18.5576, -276.892, -54.6757, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_90 { pt3dadd( 18.9292, -277.637, -55.5985, 1.11 ) }
    dend_90 { pt3dadd( 19.2685, -278.28, -56.3485, 1.33 ) }
    dend_90 { pt3dadd( 19.6798, -278.987, -57.1911, 1.33 ) }
    dend_90 { pt3dadd( 19.7178, -279.047, -57.2609, 1.33 ) }
    dend_90 { pt3dadd( 20.2332, -279.804, -57.9797, 0.88 ) }
    dend_90 { pt3dadd( 21.3392, -281.232, -59.1673, 0.37 ) }
    dend_90 { pt3dadd( 21.5807, -281.572, -59.4653, 0.37 ) }
    dend_90 { pt3dadd( 22.0776, -282.349, -60.1037, 0.37 ) }
    dend_90 { pt3dadd( 22.8086, -283.525, -60.9901, 0.88 ) }
    dend_90 { pt3dadd( 23.1223, -284.05, -61.3381, 1.62 ) }
    dend_90 { pt3dadd( 23.3713, -284.486, -61.5995, 1.62 ) }
    dend_90 { pt3dadd( 24.2204, -286.002, -62.3467, 0.37 ) }
    dend_90 { pt3dadd( 24.6975, -286.866, -62.7606, 0.29 ) }
    dend_90 { pt3dadd( 25.1391, -287.712, -63.1308, 0.96 ) }
    dend_90 { pt3dadd( 25.5821, -288.603, -63.5367, 0.96 ) }
    dend_90 { pt3dadd( 25.8522, -289.268, -63.9354, 1.33 ) }
    dend_90 { pt3dadd( 26.0516, -289.833, -64.3292, 1.11 ) }
    dend_90 { pt3dadd( 26.4573, -291.128, -65.2889, 0.37 ) }
    dend_90 { pt3dadd( 26.5812, -292.023, -66.0708, 1.11 ) }
    dend_90 { pt3dadd( 26.5777, -292.851, -66.8322, 1.11 ) }
    dend_90 { pt3dadd( 26.2997, -295.402, -69.2236, 0.66 ) }
    dend_90 { pt3dadd( 26.2885, -295.467, -69.2829, 0.66 ) }
    dend_90 { pt3dadd( 26.0362, -296.543, -70.2238, 0.88 ) }
    dend_90 { pt3dadd( 25.2977, -299.016, -72.2835, 0.29 ) }
    dend_90 { pt3dadd( 25.1425, -299.501, -72.6852, 1.25 ) }
    dend_90 { pt3dadd( 25.007, -299.995, -73.0562, 1.55 ) }
    dend_90 { pt3dadd( 24.89, -300.641, -73.4941, 1.25 ) }
    dend_90 { pt3dadd( 24.8148, -301.694, -74.2454, 0.88 ) }
    dend_90 { pt3dadd( 24.8215, -301.761, -74.2987, 0.88 ) }
    dend_90 { pt3dadd( 25.3889, -303.253, -75.542, 0.37 ) }
    dend_90 { pt3dadd( 25.7819, -303.998, -76.2689, 0.37 ) }
    dend_90 { pt3dadd( 26.3905, -304.913, -77.2809, 1.33 ) }
    dend_90 { pt3dadd( 26.8346, -305.456, -77.9359, 1.47 ) }
    dend_90 { pt3dadd( 27.6645, -306.266, -78.9305, 0.52 ) }
    dend_90 { pt3dadd( 28.2713, -306.796, -79.5958, 0.22 ) }
    dend_90 { pt3dadd( 28.5122, -306.973, -79.816, 0.22 ) }
    dend_90 { pt3dadd( 29.0193, -307.306, -80.254, 1.18 ) }
    dend_90 { pt3dadd( 29.5655, -307.642, -80.6859, 1.47 ) }
    dend_90 { pt3dadd( 30.476, -308.189, -81.4435, 1.62 ) }
    dend_90 { pt3dadd( 31.9765, -309.026, -82.654, 0.74 ) }
    dend_90 { pt3dadd( 32.99, -309.581, -83.4956, 0.22 ) }
    dend_90 { pt3dadd( 33.5829, -309.932, -84.1378, 0.22 ) }
    dend_90 { pt3dadd( 33.6371, -309.97, -84.2126, 0.22 ) }
    dend_90 { pt3dadd( 34.1347, -310.373, -85.0085, 1.25 ) }
    dend_90 { pt3dadd( 34.6374, -310.864, -85.9078, 1.47 ) }
    dend_90 { pt3dadd( 34.6841, -310.916, -85.9931, 1.47 ) }
    dend_90 { pt3dadd( 36.2043, -312.904, -89.0175, 0.22 ) }
    dend_90 { pt3dadd( 36.7515, -313.678, -90.0777, 0.22 ) }
    dend_90 { pt3dadd( 37.3019, -314.439, -90.9865, 0.22 ) }
    dend_90 { pt3dadd( 37.7287, -315.043, -91.5992, 0.81 ) }
    dend_90 { pt3dadd( 38.0281, -315.464, -91.9735, 1.03 ) }
    dend_90 { pt3dadd( 38.1316, -315.595, -92.0694, 1.03 ) }
    dend_90 { pt3dadd( 38.7512, -316.209, -92.3411, 1.03 ) }
    dend_90 { pt3dadd( 39.6351, -316.973, -92.6867, 0.59 ) }
    dend_90 { pt3dadd( 39.7019, -317.025, -92.7145, 0.59 ) }
    dend_90 { pt3dadd( 40.9612, -317.806, -93.2458, 0.22 ) }
    dend_90 { pt3dadd( 41.0364, -317.841, -93.2788, 0.22 ) }
    dend_90 { pt3dadd( 42.0622, -318.111, -93.8016, 0.22 ) }
    dend_90 { pt3dadd( 42.1347, -318.123, -93.841, 0.22 ) }
    dend_90 { pt3dadd( 43.061, -318.263, -94.3454, 0.96 ) }
    dend_90 { pt3dadd( 43.4757, -318.326, -94.5607, 1.33 ) }
    dend_90 { pt3dadd( 44.2944, -318.462, -94.9511, 1.33 ) }
    dend_90 { pt3dadd( 45.9427, -318.824, -95.7181, 0.22 ) }
    dend_90 { pt3dadd( 47.2311, -319.149, -96.3049, 0.22 ) }
    dend_90 { pt3dadd( 48.1831, -319.423, -96.72, 0.29 ) }
    dend_90 { pt3dadd( 48.2489, -319.445, -96.747, 0.29 ) }
    dend_90 { pt3dadd( 49.2815, -319.822, -97.1467, 0.29 ) }
    dend_90 { pt3dadd( 50.3601, -320.28, -97.5239, 0.29 ) }
    dend_90 { pt3dadd( 50.895, -320.518, -97.6849, 1.03 ) }
    dend_90 { pt3dadd( 51.4836, -320.783, -97.8623, 1.25 ) }
    dend_90 { pt3dadd( 52.3608, -321.188, -98.1635, 0.96 ) }
    dend_90 { pt3dadd( 53.3369, -321.667, -98.528, 0.29 ) }
    dend_90 { pt3dadd( 54.6683, -322.374, -99.094, 0.29 ) }
    dend_90 { pt3dadd( 55.6553, -322.945, -99.5512, 0.88 ) }
    dend_90 { pt3dadd( 56.3094, -323.366, -99.8684, 1.18 ) }
    dend_90 { pt3dadd( 57.1299, -323.925, -100.275, 1.11 ) }
    dend_90 { pt3dadd( 58.2022, -324.661, -100.812, 0.44 ) }
    dend_90 { pt3dadd( 58.9826, -325.221, -101.203, 0.66 ) }
    dend_90 { pt3dadd( 59.6277, -325.702, -101.525, 0.81 ) }
    dend_90 { pt3dadd( 60.4908, -326.404, -101.932, 0.52 ) }
    dend_90 { pt3dadd( 61.2858, -327.09, -102.266, 0.22 ) }
    dend_90 { pt3dadd( 61.7158, -327.489, -102.407, 0.52 ) }
    dend_90 { pt3dadd( 62.3955, -328.147, -102.635, 0.22 ) }
    dend_90 { pt3dadd( 62.5183, -328.271, -102.684, 0.22 ) }
    dend_90 { pt3dadd( 63.0586, -328.823, -102.946, 0.22 ) }
    dend_90 { pt3dadd( 63.2308, -329.008, -103.039, 0.22 ) }
    dend_90 { pt3dadd( 64.0408, -330.008, -103.496, 0.22 ) }
    dend_90 { pt3dadd( 64.6372, -330.738, -103.827, 1.33 ) }
    dend_90 { pt3dadd( 65.4179, -331.652, -104.243, 1.47 ) }
    dend_90 { pt3dadd( 65.9537, -332.289, -104.522, 1.47 ) }
    dend_90 { pt3dadd( 66.9313, -333.478, -105.02, 0.22 ) }
    dend_90 { pt3dadd( 67.849, -334.593, -105.5, 0.22 ) }
    dend_90 { pt3dadd( 68.5045, -335.385, -105.836, 0.22 ) }
    dend_90 { pt3dadd( 69.1866, -336.184, -106.155, 0.88 ) }
    dend_90 { pt3dadd( 69.4855, -336.511, -106.285, 1.18 ) }
    dend_90 { pt3dadd( 69.6648, -336.692, -106.389, 1.18 ) }
    dend_90 { pt3dadd( 70.7303, -337.653, -107.127, 0.22 ) }
    dend_90 { pt3dadd( 71.2092, -338.072, -107.5, 0.96 ) }
    dend_90 { pt3dadd( 71.836, -338.659, -108.041, 1.25 ) }
    dend_90 { pt3dadd( 71.9067, -338.726, -108.106, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_90 { pt3dadd( 73.4165, -340.158, -109.518, 0.22 ) }
    dend_90 { pt3dadd( 73.484, -340.223, -109.582, 0.22 ) }
    dend_90 { pt3dadd( 73.9116, -340.662, -109.999, 0.22 ) }
    dend_90 { pt3dadd( 73.9605, -340.709, -110.046, 0.22 ) }
    dend_90 { pt3dadd( 74.5616, -341.222, -110.561, 0.59 ) }
    dend_90 { pt3dadd( 74.6901, -341.336, -110.692, 0.59 ) }
    dend_90 { pt3dadd( 74.8719, -341.515, -110.886, 0.59 ) }
    dend_90 { pt3dadd( 74.9133, -341.559, -110.936, 0.59 ) }
    dend_90 { pt3dadd( 75.3248, -342.099, -111.534, 0.15 ) }
    dend_90 { pt3dadd( 75.6298, -342.558, -112.026, 1.33 ) }
    dend_90 { pt3dadd( 76.5834, -344.097, -113.677, 1.25 ) }
    dend_90 { pt3dadd( 76.9696, -344.737, -114.322, 0.88 ) }
    dend_90 { pt3dadd( 77.0067, -344.803, -114.386, 0.88 ) }
    dend_90 { pt3dadd( 77.5526, -346.105, -115.666, 0.22 ) }
    dend_90 { pt3dadd( 77.5925, -346.231, -115.791, 0.22 ) }
    dend_90 { pt3dadd( 77.9114, -347.362, -116.957, 0.88 ) }
    dend_90 { pt3dadd( 78.2775, -348.56, -118.191, 0.22 ) }
    dend_90 { pt3dadd( 78.5115, -349.217, -118.94, 1.18 ) }
    dend_90 { pt3dadd( 79.1683, -350.668, -121.004, 0.74 ) }
    dend_90 { pt3dadd( 79.1895, -350.706, -121.07, 0.74 ) }
    dend_90 { pt3dadd( 79.7067, -351.482, -122.649, 0.59 ) }
    dend_90 { pt3dadd( 80.1185, -351.936, -123.836, 1.03 ) }
    dend_90 { pt3dadd( 80.6039, -352.256, -125.026, 1.03 ) }
    dend_90 { pt3dadd( 81.9227, -352.739, -127.58, 0.22 ) }
    dend_90 { pt3dadd( 81.9718, -352.746, -127.655, 0.22 ) }
    dend_90 { pt3dadd( 82.2203, -352.761, -128.024, 0.44 ) }
    dend_90 { pt3dadd( 82.5067, -352.756, -128.419, 0.44 ) }
    dend_90 { pt3dadd( 82.8255, -352.766, -128.824, 0.44 ) }
    dend_90 { pt3dadd( 82.882, -352.785, -128.883, 0.44 ) }
    dend_90 { pt3dadd( 83.6752, -353.168, -129.548, 0.22 ) }
    dend_90 { pt3dadd( 83.7474, -353.197, -129.62, 0.22 ) }
    dend_90 { pt3dadd( 84.5952, -353.493, -130.521, 1.03 ) }
    dend_90 { pt3dadd( 85.0876, -353.63, -131.05, 1.4 ) }
    dend_90 { pt3dadd( 86.8954, -354.024, -132.988, 0.22 ) }
    dend_90 { pt3dadd( 87.167, -354.066, -133.269, 0.66 ) }
    dend_90 { pt3dadd( 88.7166, -354.219, -134.82, 0.22 ) }
    dend_90 { pt3dadd( 89.2044, -354.229, -135.286, 0.88 ) }
    dend_90 { pt3dadd( 89.7686, -354.2, -135.768, 1.03 ) }
    dend_90 { pt3dadd( 89.8826, -354.191, -135.852, 1.03 ) }
    dend_90 { pt3dadd( 90.3996, -354.155, -136.175, 1.03 ) }
    dend_90 { pt3dadd( 90.4743, -354.156, -136.224, 1.03 ) }
    dend_90 { pt3dadd( 91.6218, -354.293, -136.968, 0.29 ) }
    dend_90 { pt3dadd( 92.6735, -354.578, -137.983, 0.29 ) }
    dend_90 { pt3dadd( 92.7291, -354.601, -138.049, 0.29 ) }
    dend_90 { pt3dadd( 93.9935, -355.173, -139.684, 0.29 ) }
    dend_90 { pt3dadd( 94.5904, -355.457, -140.499, 0.88 ) }
    dend_90 { pt3dadd( 95.2902, -355.796, -141.471, 1.18 ) }
    dend_90 { pt3dadd( 97.2712, -356.836, -144.394, 0.22 ) }
    dend_90 { pt3dadd( 97.6541, -357.047, -144.95, 0.81 ) }
    dend_90 { pt3dadd( 98.4954, -357.514, -146.059, 0.59 ) }
    dend_90 { pt3dadd( 98.9431, -357.788, -146.548, 0.81 ) }
    dend_90 { pt3dadd( 99.4916, -358.087, -147.011, 1.18 ) }
    dend_90 { pt3dadd( 99.5711, -358.124, -147.059, 1.18 ) }
    dend_90 { pt3dadd( 100.358, -358.439, -147.345, 0.81 ) }
    dend_90 { pt3dadd( 100.422, -358.476, -147.382, 0.81 ) }
    dend_90 { pt3dadd( 101.28, -359.157, -148.036, 0.22 ) }
    dend_90 { pt3dadd( 101.658, -359.494, -148.446, 0.44 ) }
    dend_90 { pt3dadd( 101.818, -359.633, -148.642, 0.44 ) }
    dend_90 { pt3dadd( 102.642, -360.318, -149.701, 0.29 ) }
    dend_90 { pt3dadd( 103.447, -361.025, -150.884, 1.33 ) }
    dend_90 { pt3dadd( 103.801, -361.345, -151.425, 1.47 ) }
    dend_90 { pt3dadd( 104.992, -362.449, -153.339, 0.29 ) }
    dend_90 { pt3dadd( 105.425, -362.873, -154.074, 0.29 ) }
    dend_90 { pt3dadd( 105.463, -362.91, -154.138, 0.29 ) }
    dend_90 { pt3dadd( 106.712, -364.061, -156.126, 1.25 ) }
    dend_90 { pt3dadd( 107.139, -364.443, -156.797, 1.25 ) }
    dend_90 { pt3dadd( 107.196, -364.492, -156.885, 1.25 ) }
    dend_90 { pt3dadd( 107.875, -365.082, -157.939, 1.03 ) }
    dend_90 { pt3dadd( 108.253, -365.436, -158.582, 0.66 ) }
    dend_90 { pt3dadd( 109.338, -366.419, -160.363, 0.29 ) }
    dend_90 { pt3dadd( 109.391, -366.463, -160.443, 0.29 ) }
    dend_90 { pt3dadd( 110.015, -366.981, -161.324, 0.29 ) }
    dend_90 { pt3dadd( 110.836, -367.645, -162.362, 0.22 ) }
    dend_90 { pt3dadd( 111.634, -368.275, -163.248, 0.81 ) }
    dend_90 { pt3dadd( 112.231, -368.754, -163.87, 0.88 ) }
    dend_90 { pt3dadd( 113.119, -369.439, -164.655, 0.74 ) }
    dend_90 { pt3dadd( 114.079, -370.106, -165.389, 0.22 ) }
    dend_90 { pt3dadd( 114.682, -370.436, -165.748, 0.88 ) }
    dend_90 { pt3dadd( 115.134, -370.617, -165.951, 1.11 ) }
    dend_90 { pt3dadd( 115.214, -370.642, -165.981, 1.11 ) }
    dend_90 { pt3dadd( 115.977, -370.829, -166.245, 0.88 ) }
    dend_90 { pt3dadd( 117.564, -371.151, -166.729, 0.29 ) }
    dend_90 { pt3dadd( 119.66, -371.532, -167.325, 0.29 ) }
    dend_90 { pt3dadd( 119.795, -371.554, -167.365, 0.29 ) }
    dend_90 { pt3dadd( 120.413, -371.633, -167.569, 0.52 ) }
    dend_90 { pt3dadd( 121.455, -371.74, -167.937, 0.22 ) }
    dend_90 { pt3dadd( 122.307, -371.813, -168.256, 1.03 ) }
    dend_90 { pt3dadd( 123.203, -371.878, -168.612, 1.11 ) }
    dend_90 { pt3dadd( 125.208, -372.081, -169.424, 0.22 ) }
    dend_90 { pt3dadd( 126.706, -372.265, -170.061, 0.22 ) }
    dend_90 { pt3dadd( 127.162, -372.327, -170.264, 1.03 ) }
    dend_90 { pt3dadd( 127.494, -372.378, -170.417, 1.03 ) }
    dend_90 { pt3dadd( 127.581, -372.394, -170.465, 1.03 ) }
    dend_90 { pt3dadd( 129.121, -372.812, -171.552, 0.22 ) }
    dend_90 { pt3dadd( 130.11, -373.193, -172.381, 0.74 ) }
    dend_90 { pt3dadd( 130.173, -373.221, -172.439, 0.74 ) }
    dend_90 { pt3dadd( 130.853, -373.54, -173.154, 0.74 ) }
    dend_90 { pt3dadd( 132.287, -374.214, -174.765, 0.22 ) }
    dend_90 { pt3dadd( 133.212, -374.638, -175.851, 1.33 ) }
    dend_90 { pt3dadd( 133.695, -374.862, -176.425, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_90 { pt3dadd( 133.753, -374.892, -176.486, 1.33 ) }
    dend_90 { pt3dadd( 135.538, -375.867, -178.236, 0.22 ) }
    dend_90 { pt3dadd( 135.987, -376.128, -178.641, 0.81 ) }
    dend_90 { pt3dadd( 136.386, -376.355, -178.938, 0.81 ) }
    dend_90 { pt3dadd( 137.415, -376.965, -179.677, 0.22 ) }
    dend_90 { pt3dadd( 138.597, -377.759, -180.593, 0.22 ) }
    dend_90 { pt3dadd( 139.221, -378.221, -181.084, 0.74 ) }
    dend_90 { pt3dadd( 139.301, -378.276, -181.125, 0.74 ) }
    dend_90 { pt3dadd( 139.634, -378.48, -181.245, 0.74 ) }
    dend_90 { pt3dadd( 141.469, -379.488, -181.697, 0.22 ) }
    dend_90 { pt3dadd( 142.585, -379.987, -181.641, 0.88 ) }
    dend_90 { pt3dadd( 143.201, -380.222, -181.463, 1.18 ) }
    dend_90 { pt3dadd( 146.52, -381.389, -180.139, 0.22 ) }
    dend_90 { pt3dadd( 147.059, -381.564, -179.886, 0.88 ) }
    dend_90 { pt3dadd( 147.271, -381.624, -179.77, 0.88 ) }
    dend_90 { pt3dadd( 150.033, -382.333, -178.095, 0.22 ) }
    dend_90 { pt3dadd( 151.458, -382.698, -177.21, 0.88 ) }
    dend_90 { pt3dadd( 151.756, -382.777, -177.041, 0.88 ) }
    dend_90 { pt3dadd( 151.853, -382.807, -176.996, 0.88 ) }
    dend_90 { pt3dadd( 153.282, -383.233, -176.432, 0.22 ) }
    dend_90 { pt3dadd( 154.408, -383.533, -176.135, 0.22 ) }
    dend_90 { pt3dadd( 154.52, -383.554, -176.123, 0.22 ) }
    dend_90 { pt3dadd( 156.047, -383.812, -175.989, 0.74 ) }
    dend_90 { pt3dadd( 156.223, -383.843, -175.978, 0.74 ) }
    dend_90 { pt3dadd( 157.195, -383.992, -175.909, 0.96 ) }
    dend_90 { pt3dadd( 158.011, -384.09, -175.857, 1.11 ) }
    dend_90 { pt3dadd( 160.743, -384.226, -175.654, 0.22 ) }
    dend_90 { pt3dadd( 161.472, -384.238, -175.597, 0.52 ) }
    dend_90 { pt3dadd( 163.152, -384.155, -175.483, 0.22 ) }
    dend_90 { pt3dadd( 164.232, -384.043, -175.413, 0.74 ) }
    dend_90 { pt3dadd( 164.867, -383.926, -175.387, 0.74 ) }
    dend_90 { pt3dadd( 166.588, -383.517, -175.314, 0.22 ) }
    dend_90 { pt3dadd( 166.756, -383.464, -175.311, 0.22 ) }
    dend_90 { pt3dadd( 168.072, -382.972, -175.272, 0.22 ) }
    dend_90 { pt3dadd( 168.241, -382.902, -175.265, 0.22 ) }
    dend_90 { pt3dadd( 169.705, -382.33, -175.241, 0.96 ) }
    dend_90 { pt3dadd( 171.929, -381.571, -175.203, 0.22 ) }
    dend_90 { pt3dadd( 172.117, -381.515, -175.203, 0.22 ) }
    dend_90 { pt3dadd( 173.157, -381.239, -175.222, 1.25 ) }
    dend_90 { pt3dadd( 173.238, -381.219, -175.225, 1.25 ) }
    dend_90 { pt3dadd( 174.458, -380.897, -175.312, 0.37 ) }
    dend_90 { pt3dadd( 175.262, -380.659, -175.412, 0.29 ) }
    dend_90 { pt3dadd( 176.046, -380.448, -175.548, 0.66 ) }
    dend_90 { pt3dadd( 176.912, -380.276, -175.676, 0.81 ) }
    dend_90 { pt3dadd( 177.354, -380.243, -175.723, 0.81 ) }
    dend_90 { pt3dadd( 178.178, -380.243, -175.74, 0.81 ) }
    dend_90 { pt3dadd( 178.267, -380.247, -175.732, 0.81 ) }
    dend_90 { pt3dadd( 180.396, -380.384, -175.387, 0.15 ) }
    dend_90 { pt3dadd( 181.279, -380.445, -175.214, 0.37 ) }
    dend_90 { pt3dadd( 183.124, -380.602, -174.769, 0.22 ) }
    dend_90 { pt3dadd( 185.057, -380.785, -174.245, 1.03 ) }
    dend_90 { pt3dadd( 186.292, -380.906, -173.867, 0.81 ) }
    dend_90 { pt3dadd( 186.378, -380.916, -173.84, 0.81 ) }
    dend_90 { pt3dadd( 187.859, -381.078, -173.336, 0.22 ) }
    dend_90 { pt3dadd( 189.623, -381.315, -172.785, 0.22 ) }
    dend_90 { pt3dadd( 189.695, -381.326, -172.766, 0.22 ) }
    dend_90 { pt3dadd( 190.721, -381.496, -172.619, 1.11 ) }
    dend_90 { pt3dadd( 191.722, -381.685, -172.548, 1.4 ) }
    dend_90 { pt3dadd( 191.811, -381.697, -172.539, 1.4 ) }
    dend_90 { pt3dadd( 193.61, -381.888, -172.317, 0.29 ) }
    dend_90 { pt3dadd( 193.787, -381.877, -172.295, 0.29 ) }
    dend_90 { pt3dadd( 194.835, -381.676, -172.08, 0.22 ) }
    dend_90 { pt3dadd( 194.928, -381.649, -172.056, 0.22 ) }
    dend_90 { pt3dadd( 196.732, -380.937, -171.534, 0.22 ) }
    dend_90 { pt3dadd( 196.798, -380.908, -171.514, 0.22 ) }
    dend_90 { pt3dadd( 197.784, -380.403, -171.207, 1.18 ) }
    dend_90 { pt3dadd( 199.84, -379.378, -170.679, 0.22 ) }
    dend_90 { pt3dadd( 199.944, -379.328, -170.656, 0.22 ) }
    dend_90 { pt3dadd( 200.896, -378.917, -170.541, 0.22 ) }
    dend_90 { pt3dadd( 200.973, -378.886, -170.54, 0.22 ) }
    dend_90 { pt3dadd( 202.032, -378.555, -170.608, 0.74 ) }
    dend_90 { pt3dadd( 202.824, -378.389, -170.724, 0.96 ) }
    dend_90 { pt3dadd( 202.91, -378.376, -170.742, 0.96 ) }
    dend_90 { pt3dadd( 204.785, -378.198, -171.127, 0.22 ) }
    dend_90 { pt3dadd( 204.873, -378.197, -171.146, 0.22 ) }
    dend_90 { pt3dadd( 206.135, -378.181, -171.442, 0.22 ) }
    dend_90 { pt3dadd( 206.913, -378.168, -171.64, 0.74 ) }
    dend_90 { pt3dadd( 206.999, -378.164, -171.663, 0.74 ) }
    dend_90 { pt3dadd( 207.742, -378.064, -171.899, 0.74 ) }
    dend_90 { pt3dadd( 209.46, -377.63, -172.548, 0.22 ) }
    dend_90 { pt3dadd( 210.251, -377.38, -172.865, 0.37 ) }
    dend_90 { pt3dadd( 210.639, -377.221, -173.034, 0.37 ) }
    dend_90 { pt3dadd( 210.708, -377.189, -173.065, 0.37 ) }
    dend_90 { pt3dadd( 211.681, -376.713, -173.512, 0.22 ) }
    dend_90 { pt3dadd( 211.937, -376.572, -173.575, 0.37 ) }
    dend_90 { pt3dadd( 212.095, -376.477, -173.594, 0.37 ) }
    dend_90 { pt3dadd( 212.454, -376.283, -173.572, 0.29 ) }
    dend_90 { pt3dadd( 213.199, -375.815, -173.41, 0.22 ) }
    dend_90 { pt3dadd( 213.677, -375.487, -173.264, 0.66 ) }
    dend_90 { pt3dadd( 215.48, -374.181, -172.629, 0.22 ) }
    dend_90 { pt3dadd( 216.125, -373.687, -172.393, 0.66 ) }
    dend_90 { pt3dadd( 217.184, -372.803, -171.936, 0.96 ) }
    dend_90 { pt3dadd( 219.146, -371.078, -170.837, 0.22 ) }
    dend_90 { pt3dadd( 219.212, -371.017, -170.795, 0.22 ) }
    dend_90 { pt3dadd( 219.875, -370.406, -170.363, 0.22 ) }
    dend_90 { pt3dadd( 219.993, -370.309, -170.27, 0.22 ) }
    dend_90 { pt3dadd( 221.975, -368.774, -168.529, 0.88 ) }
    dend_90 { pt3dadd( 223.856, -367.375, -166.838, 0.22 ) }
    dend_90 { pt3dadd( 224.337, -367.041, -166.368, 1.25 ) }
    dend_90 { pt3dadd( 224.393, -367.002, -166.31, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_90 { pt3dadd( 227.565, -364.911, -162.826, 0.22 ) }
    dend_90 { pt3dadd( 228.208, -364.515, -162.092, 0.74 ) }
    dend_90 { pt3dadd( 238.032, -369.492, -167.744, 0.74 ) }
    // Section: dend_81, id: dend_81, parent: dend_79 (entry count 3/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( 120.676, -193.269, 17.7754, 0.37 ) }
    dend_81 { pt3dadd( 121.444, -193.658, 18.002, 0.37 ) }
    dend_81 { pt3dadd( 122.022, -193.973, 18.1772, 0.29 ) }
    dend_81 { pt3dadd( 122.781, -194.417, 18.343, 0.59 ) }
    dend_81 { pt3dadd( 123.061, -194.586, 18.3614, 0.96 ) }
    dend_81 { pt3dadd( 123.43, -194.825, 18.3416, 1.25 ) }
    dend_81 { pt3dadd( 123.977, -195.213, 18.2766, 1.25 ) }
    dend_81 { pt3dadd( 124.456, -195.605, 18.1736, 1.03 ) }
    dend_81 { pt3dadd( 125.094, -196.212, 17.975, 0.29 ) }
    dend_81 { pt3dadd( 125.781, -196.954, 17.7039, 0.29 ) }
    dend_81 { pt3dadd( 126.278, -197.532, 17.4769, 0.88 ) }
    dend_81 { pt3dadd( 126.649, -197.995, 17.284, 0.81 ) }
    dend_81 { pt3dadd( 127.052, -198.492, 17.0708, 0.81 ) }
    dend_81 { pt3dadd( 127.419, -198.917, 16.9027, 1.25 ) }
    dend_81 { pt3dadd( 127.793, -199.312, 16.7775, 1.62 ) }
    dend_81 { pt3dadd( 128.299, -199.827, 16.6546, 1.62 ) }
    dend_81 { pt3dadd( 128.345, -199.868, 16.6445, 1.62 ) }
    dend_81 { pt3dadd( 129.22, -200.523, 16.4382, 0.29 ) }
    dend_81 { pt3dadd( 129.671, -200.798, 16.3296, 0.96 ) }
    dend_81 { pt3dadd( 129.985, -200.95, 16.2587, 1.25 ) }
    // Section: dend_80, id: dend_80, parent: dend_79 (entry count 23/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( 120.676, -193.269, 17.7754, 0.22 ) }
    dend_80 { pt3dadd( 120.104, -194.168, 18.0853, 0.22 ) }
    dend_80 { pt3dadd( 120.072, -194.224, 18.106, 0.22 ) }
    dend_80 { pt3dadd( 119.563, -195.156, 18.4677, 0.22 ) }
    dend_80 { pt3dadd( 119.441, -195.4, 18.5186, 0.52 ) }
    dend_80 { pt3dadd( 119.014, -196.293, 18.6348, 0.15 ) }
    dend_80 { pt3dadd( 118.993, -196.349, 18.6379, 0.15 ) }
    dend_80 { pt3dadd( 118.802, -197.099, 18.6135, 0.15 ) }
    dend_80 { pt3dadd( 118.791, -197.158, 18.6066, 0.15 ) }
    dend_80 { pt3dadd( 118.472, -198.908, 18.1765, 0.15 ) }
    dend_80 { pt3dadd( 118.46, -198.959, 18.1608, 0.15 ) }
    dend_80 { pt3dadd( 118.175, -200.139, 17.722, 0.15 ) }
    dend_80 { pt3dadd( 118.163, -200.187, 17.7034, 0.15 ) }
    dend_80 { pt3dadd( 117.887, -201.266, 17.2353, 0.29 ) }
    dend_80 { pt3dadd( 117.544, -202.502, 16.7156, 0.22 ) }
    dend_80 { pt3dadd( 117.386, -202.961, 16.5485, 0.44 ) }
    // Section: dend_78, id: dend_78, parent: dend_68 (entry count 39/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( 33.7903, -189.419, 21.2669, 0.22 ) }
    dend_78 { pt3dadd( 35.4485, -191.14, 20.7155, 0.22 ) }
    dend_78 { pt3dadd( 36.5784, -192.202, 20.3739, 0.37 ) }
    dend_78 { pt3dadd( 37.2397, -192.776, 20.1862, 0.37 ) }
    dend_78 { pt3dadd( 38.5455, -193.733, 19.8546, 0.22 ) }
    dend_78 { pt3dadd( 38.627, -193.771, 19.8371, 0.22 ) }
    dend_78 { pt3dadd( 39.5108, -193.957, 19.6751, 0.37 ) }
    dend_78 { pt3dadd( 39.6121, -193.915, 19.6668, 0.37 ) }
    dend_78 { pt3dadd( 39.8546, -193.777, 19.6405, 0.37 ) }
    dend_78 { pt3dadd( 41.1403, -192.943, 19.4775, 0.22 ) }
    dend_78 { pt3dadd( 42.3922, -192.018, 19.2992, 0.22 ) }
    dend_78 { pt3dadd( 42.4577, -191.971, 19.2893, 0.22 ) }
    dend_78 { pt3dadd( 43.8494, -191.02, 19.059, 0.22 ) }
    dend_78 { pt3dadd( 44.4921, -190.618, 18.9474, 0.37 ) }
    dend_78 { pt3dadd( 44.5717, -190.576, 18.9322, 0.37 ) }
    // Section: dend_69, id: dend_69, parent: dend_68 (entry count 54/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( 33.7903, -189.419, 21.2669, 0.22 ) }
    dend_69 { pt3dadd( 33.2603, -190.056, 21.0123, 0.22 ) }
    dend_69 { pt3dadd( 33.2373, -190.096, 20.9999, 0.22 ) }
    dend_69 { pt3dadd( 32.9976, -190.746, 20.8445, 0.37 ) }
    dend_69 { pt3dadd( 32.9215, -191.113, 20.7732, 0.37 ) }
    dend_69 { pt3dadd( 32.8562, -191.698, 20.7189, 0.22 ) }
    dend_69 { pt3dadd( 32.8369, -192.257, 20.7436, 0.81 ) }
    dend_69 { pt3dadd( 32.8744, -192.771, 20.8591, 0.81 ) }
    dend_69 { pt3dadd( 32.9419, -193.228, 20.9679, 0.66 ) }
    dend_69 { pt3dadd( 33.0612, -193.676, 21.0687, 0.52 ) }
    dend_69 { pt3dadd( 33.2855, -194.271, 21.1847, 0.66 ) }
    dend_69 { pt3dadd( 33.6522, -195.075, 21.3284, 0.29 ) }
    dend_69 { pt3dadd( 34.0993, -195.923, 21.456, 1.18 ) }
    dend_69 { pt3dadd( 34.579, -196.75, 21.5515, 0.81 ) }
    dend_69 { pt3dadd( 35.2279, -197.743, 21.6232, 0.44 ) }
    dend_69 { pt3dadd( 35.7545, -198.465, 21.6381, 0.44 ) }
    dend_69 { pt3dadd( 35.9827, -198.747, 21.6249, 1.55 ) }
    dend_69 { pt3dadd( 36.424, -199.272, 21.5793, 1.84 ) }
    dend_69 { pt3dadd( 36.7577, -199.687, 21.5451, 1.62 ) }
    dend_69 { pt3dadd( 37.2523, -200.37, 21.5253, 0.81 ) }
    dend_69 { pt3dadd( 37.6279, -200.995, 21.5133, 0.52 ) }
    dend_69 { pt3dadd( 38.0227, -201.777, 21.4963, 0.44 ) }
    dend_69 { pt3dadd( 38.3597, -202.553, 21.4532, 0.66 ) }
    dend_69 { pt3dadd( 38.6453, -203.4, 21.384, 0.52 ) }
    dend_69 { pt3dadd( 38.7226, -203.72, 21.3362, 0.66 ) }
    dend_69 { pt3dadd( 38.8551, -204.512, 21.1713, 0.44 ) }
    dend_69 { pt3dadd( 38.9321, -205.199, 20.9927, 1.33 ) }
    dend_69 { pt3dadd( 39.0052, -206.013, 20.7431, 0.59 ) }
    dend_69 { pt3dadd( 39.075, -206.611, 20.5423, 0.22 ) }
    dend_69 { pt3dadd( 39.2364, -207.579, 20.2745, 0.22 ) }
    dend_69 { pt3dadd( 39.3606, -208.086, 20.2065, 0.22 ) }
    dend_69 { pt3dadd( 39.3794, -208.145, 20.2081, 0.22 ) }
    dend_69 { pt3dadd( 39.5839, -208.68, 20.3183, 1.03 ) }
    dend_69 { pt3dadd( 39.8127, -209.201, 20.4708, 1.4 ) }
    dend_69 { pt3dadd( 40.2826, -210.201, 20.7848, 0.88 ) }
    dend_69 { pt3dadd( 40.6139, -210.949, 20.9998, 0.22 ) }
    dend_69 { pt3dadd( 40.6361, -211.009, 21.01, 0.22 ) }
    dend_69 { pt3dadd( 40.7797, -211.431, 21.0376, 0.22 ) }
    dend_69 { pt3dadd( 41.0322, -212.278, 21.0117, 1.33 ) }
    dend_69 { pt3dadd( 41.1445, -212.644, 20.9768, 1.69 ) }
    dend_69 { pt3dadd( 41.4147, -213.389, 20.8674, 1.33 ) }
    dend_69 { pt3dadd( 41.6993, -214.023, 20.8133, 0.52 ) }
    dend_69 { pt3dadd( 42.0496, -214.712, 20.8727, 0.29 ) }
    dend_69 { pt3dadd( 42.0743, -214.759, 20.8838, 0.29 ) }
    dend_69 { pt3dadd( 42.511, -215.563, 21.1844, 1.03 ) }
    dend_69 { pt3dadd( 42.7818, -216.084, 21.4182, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_69 { pt3dadd( 43.0579, -216.672, 21.7271, 1.4 ) }
    dend_69 { pt3dadd( 43.4647, -217.734, 22.3044, 0.29 ) }
    dend_69 { pt3dadd( 43.5552, -218.147, 22.5068, 0.22 ) }
    dend_69 { pt3dadd( 43.5576, -218.201, 22.5274, 0.22 ) }
    dend_69 { pt3dadd( 43.5063, -218.671, 22.6501, 0.96 ) }
    dend_69 { pt3dadd( 43.4593, -219.026, 22.7121, 1.33 ) }
    dend_69 { pt3dadd( 43.4088, -219.423, 22.7488, 1.33 ) }
    dend_69 { pt3dadd( 43.3535, -220.194, 22.7789, 0.81 ) }
    dend_69 { pt3dadd( 43.3666, -221.11, 22.8241, 0.29 ) }
    dend_69 { pt3dadd( 43.4553, -221.77, 22.896, 0.29 ) }
    dend_69 { pt3dadd( 43.6651, -222.621, 23.0304, 0.96 ) }
    dend_69 { pt3dadd( 43.6833, -222.675, 23.0411, 0.96 ) }
    dend_69 { pt3dadd( 43.8195, -223.019, 23.1277, 1.4 ) }
    dend_69 { pt3dadd( 44.0137, -223.44, 23.26, 1.4 ) }
    dend_69 { pt3dadd( 44.4983, -224.55, 23.6535, 0.37 ) }
    dend_69 { pt3dadd( 44.6013, -224.882, 23.7783, 0.74 ) }
    dend_69 { pt3dadd( 44.6052, -224.937, 23.7951, 0.74 ) }
    dend_69 { pt3dadd( 44.5475, -225.533, 23.8866, 0.29 ) }
    dend_69 { pt3dadd( 44.4658, -225.893, 23.8927, 0.74 ) }
    dend_69 { pt3dadd( 44.287, -226.444, 23.8399, 1.11 ) }
    dend_69 { pt3dadd( 44.1602, -226.813, 23.7615, 0.96 ) }
    dend_69 { pt3dadd( 43.9503, -227.869, 23.5178, 0.29 ) }
    dend_69 { pt3dadd( 43.9188, -228.638, 23.3372, 0.59 ) }
    dend_69 { pt3dadd( 43.9746, -229.05, 23.2449, 0.81 ) }
    dend_69 { pt3dadd( 43.9966, -229.134, 23.2295, 0.81 ) }
    dend_69 { pt3dadd( 44.219, -229.775, 23.1662, 0.37 ) }
    dend_69 { pt3dadd( 44.5932, -230.703, 23.1999, 0.88 ) }
    dend_69 { pt3dadd( 44.82, -231.209, 23.3129, 1.18 ) }
    dend_69 { pt3dadd( 45.1633, -231.994, 23.587, 1.18 ) }
    dend_69 { pt3dadd( 45.4169, -232.569, 23.8642, 1.25 ) }
    dend_69 { pt3dadd( 45.7194, -233.197, 24.2941, 0.96 ) }
    dend_69 { pt3dadd( 46.1334, -233.974, 24.9901, 0.44 ) }
    dend_69 { pt3dadd( 46.6041, -234.7, 25.8094, 0.37 ) }
    dend_69 { pt3dadd( 46.6357, -234.737, 25.8593, 0.37 ) }
    dend_69 { pt3dadd( 47.089, -235.167, 26.5072, 0.52 ) }
    dend_69 { pt3dadd( 47.8242, -235.802, 27.4454, 0.29 ) }
    dend_69 { pt3dadd( 48.0404, -235.99, 27.6973, 0.66 ) }
    dend_69 { pt3dadd( 48.3121, -236.257, 27.9783, 0.66 ) }
    dend_69 { pt3dadd( 48.6913, -236.844, 28.3985, 0.22 ) }
    dend_69 { pt3dadd( 48.8206, -237.189, 28.5823, 0.96 ) }
    dend_69 { pt3dadd( 48.9618, -237.953, 28.8744, 0.22 ) }
    dend_69 { pt3dadd( 49.0149, -238.684, 29.106, 1.03 ) }
    dend_69 { pt3dadd( 49.0192, -239.031, 29.2236, 1.03 ) }
    dend_69 { pt3dadd( 48.9594, -240.207, 29.6441, 0.29 ) }
    dend_69 { pt3dadd( 48.9029, -240.643, 29.8075, 0.22 ) }
    dend_69 { pt3dadd( 48.8652, -240.863, 29.8989, 0.22 ) }
    dend_69 { pt3dadd( 48.7852, -241.446, 30.1774, 0.22 ) }
    dend_69 { pt3dadd( 48.7921, -241.557, 30.2246, 0.22 ) }
    dend_69 { pt3dadd( 49.1855, -241.412, 30.2376, 0.22 ) }
    dend_69 { pt3dadd( 49.2409, -241.391, 30.2397, 0.22 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 50/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -145.137, -113.308, 87.8068, 0.22 ) }
    dend_49 { pt3dadd( -145.625, -113.176, 87.9969, 0.22 ) }
    dend_49 { pt3dadd( -146.28, -112.94, 88.2222, 0.22 ) }
    dend_49 { pt3dadd( -147.012, -112.676, 88.4741, 0.66 ) }
    dend_49 { pt3dadd( -147.478, -112.508, 88.6341, 0.66 ) }
    dend_49 { pt3dadd( -148.088, -112.288, 88.8438, 0.88 ) }
    dend_49 { pt3dadd( -148.644, -112.088, 89.0349, 1.11 ) }
    dend_49 { pt3dadd( -149.433, -111.753, 89.2887, 1.4 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 58/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -145.137, -113.308, 87.8068, 0.29 ) }
    dend_48 { pt3dadd( -145.665, -112.727, 88.4813, 0.29 ) }
    dend_48 { pt3dadd( -146.124, -112.222, 89.067, 0.22 ) }
    dend_48 { pt3dadd( -146.538, -111.767, 89.5958, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 62/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 69.3467, 157.775, 58.2655, 0.22 ) }
    dend_35 { pt3dadd( 68.7267, 158.44, 59.7263, 0.22 ) }
    dend_35 { pt3dadd( 68.4085, 158.781, 60.476, 0.22 ) }
    dend_35 { pt3dadd( 68.2746, 158.925, 60.7915, 0.52 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 66/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 69.3467, 157.775, 58.2655, 0.22 ) }
    dend_34 { pt3dadd( 69.9611, 157.437, 58.7098, 0.22 ) }
    dend_34 { pt3dadd( 70.237, 157.285, 58.9093, 0.44 ) }
    dend_34 { pt3dadd( 70.2738, 157.264, 58.9359, 0.44 ) }
    dend_34 { pt3dadd( 70.6356, 157.065, 59.1976, 0.29 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 71/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 47.2693, 293.069, 85.852, 0.22 ) }
    dend_32 { pt3dadd( 46.2627, 293.444, 86.0016, 0.22 ) }
    dend_32 { pt3dadd( 45.4664, 293.746, 86.1191, 0.22 ) }
    dend_32 { pt3dadd( 44.432, 294.151, 86.276, 0.22 ) }
    dend_32 { pt3dadd( 44.247, 294.225, 86.305, 0.22 ) }
    dend_32 { pt3dadd( 43.1069, 294.726, 86.4824, 0.22 ) }
    dend_32 { pt3dadd( 41.8806, 295.392, 86.6948, 0.22 ) }
    dend_32 { pt3dadd( 41.8212, 295.435, 86.7068, 0.22 ) }
    dend_32 { pt3dadd( 41.286, 295.94, 86.8346, 0.59 ) }
    dend_32 { pt3dadd( 41.2331, 296.011, 86.8469, 0.59 ) }
    dend_32 { pt3dadd( 40.9413, 296.568, 86.9281, 0.37 ) }
    dend_32 { pt3dadd( 40.4939, 297.849, 87.0659, 0.22 ) }
    dend_32 { pt3dadd( 40.4196, 298.089, 87.0735, 0.22 ) }
    dend_32 { pt3dadd( 40.1928, 298.696, 87.0095, 0.22 ) }
    dend_32 { pt3dadd( 40.1025, 298.91, 86.959, 0.22 ) }
    dend_32 { pt3dadd( 39.87, 299.436, 86.7938, 0.22 ) }
    dend_32 { pt3dadd( 39.5425, 300.18, 86.4658, 0.29 ) }
    dend_32 { pt3dadd( 39.1171, 300.952, 85.9783, 0.29 ) }
    dend_32 { pt3dadd( 38.6131, 301.786, 85.3837, 0.22 ) }
    dend_32 { pt3dadd( 38.5606, 301.863, 85.3192, 0.22 ) }
    dend_32 { pt3dadd( 38.0939, 302.62, 84.6627, 0.22 ) }
    dend_32 { pt3dadd( 37.9421, 303.022, 84.3347, 0.29 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 93/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 47.2693, 293.069, 85.852, 0.15 ) }
    dend_31 { pt3dadd( 48.109, 292.847, 86.2139, 0.15 ) }
    dend_31 { pt3dadd( 48.8101, 292.662, 86.5161, 0.29 ) }
    // Section: dend_102, id: dend_102, parent: dend_100 (entry count 96/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( 248.129, -257.705, -1.43312, 0.22 ) }
    dend_102 { pt3dadd( 247.192, -257.519, -1.72955, 0.22 ) }
    dend_102 { pt3dadd( 246.314, -257.222, -2.01501, 0.22 ) }
    dend_102 { pt3dadd( 245.672, -256.95, -2.22564, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_62()
}

proc basic_shape_62() {
    dend_102 { pt3dadd( 245.599, -256.92, -2.24955, 0.22 ) }
    dend_102 { pt3dadd( 245.158, -256.732, -2.39437, 0.22 ) }
    dend_102 { pt3dadd( 244.319, -256.377, -2.66956, 0.44 ) }
    dend_102 { pt3dadd( 244.244, -256.317, -2.6892, 0.44 ) }
    dend_102 { pt3dadd( 244.208, -256.272, -2.69613, 0.44 ) }
    // Section: dend_101, id: dend_101, parent: dend_100 (entry count 5/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( 248.129, -257.705, -1.43312, 0.22 ) }
    dend_101 { pt3dadd( 248.988, -258.588, -0.353623, 0.22 ) }
    dend_101 { pt3dadd( 249.41, -258.954, 0.226501, 0.22 ) }
    dend_101 { pt3dadd( 250.09, -259.371, 1.09831, 1.18 ) }
    dend_101 { pt3dadd( 250.513, -259.567, 1.61016, 1.18 ) }
    dend_101 { pt3dadd( 250.552, -259.582, 1.65562, 1.18 ) }
    dend_101 { pt3dadd( 251.772, -259.971, 2.97565, 0.29 ) }
    dend_101 { pt3dadd( 252.364, -260.052, 3.58638, 0.22 ) }
    dend_101 { pt3dadd( 253.136, -260.075, 4.33133, 0.22 ) }
    dend_101 { pt3dadd( 253.441, -260.049, 4.58444, 0.22 ) }
    dend_101 { pt3dadd( 253.482, -260.039, 4.61434, 0.22 ) }
    dend_101 { pt3dadd( 254.099, -259.852, 5.01269, 0.22 ) }
    dend_101 { pt3dadd( 254.807, -259.556, 5.30819, 0.22 ) }
    dend_101 { pt3dadd( 254.86, -259.532, 5.32711, 0.22 ) }
    dend_101 { pt3dadd( 255.349, -259.289, 5.49918, 0.22 ) }
    dend_101 { pt3dadd( 256.482, -258.58, 5.88036, 0.22 ) }
    // Section: dend_93, id: dend_93, parent: dend_91 (entry count 21/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 11.6693, -343.039, -18.0586, 0.66 ) }
    dend_93 { pt3dadd( 10.9785, -343.59, -17.2271, 0.66 ) }
    dend_93 { pt3dadd( 10.5334, -343.999, -16.6128, 0.15 ) }
    dend_93 { pt3dadd( 10.4647, -344.069, -16.5209, 0.29 ) }
    dend_93 { pt3dadd( 9.86201, -344.727, -15.7473, 0.59 ) }
    dend_93 { pt3dadd( 9.60212, -345.017, -15.4372, 0.88 ) }
    dend_93 { pt3dadd( 8.98773, -345.848, -14.5164, 0.59 ) }
    dend_93 { pt3dadd( 8.97118, -345.885, -14.4755, 0.59 ) }
    dend_93 { pt3dadd( 8.81043, -346.385, -13.9197, 0.22 ) }
    dend_93 { pt3dadd( 8.74545, -346.62, -13.6512, 0.59 ) }
    dend_93 { pt3dadd( 8.69054, -346.844, -13.3839, 0.52 ) }
    dend_93 { pt3dadd( 8.33383, -348.241, -11.6868, 0.22 ) }
    dend_93 { pt3dadd( 8.09215, -349.073, -10.7433, 1.18 ) }
    dend_93 { pt3dadd( 8.03571, -349.267, -10.5221, 1.18 ) }
    dend_93 { pt3dadd( 7.72702, -350.448, -9.18202, 0.22 ) }
    dend_93 { pt3dadd( 7.54815, -351.047, -8.4181, 0.66 ) }
    dend_93 { pt3dadd( 7.45332, -351.302, -8.07003, 0.44 ) }
    dend_93 { pt3dadd( 7.13996, -351.878, -7.24511, 0.22 ) }
    dend_93 { pt3dadd( 6.64408, -352.573, -6.15639, 0.59 ) }
    dend_93 { pt3dadd( 6.42593, -352.833, -5.71221, 0.81 ) }
    dend_93 { pt3dadd( 4.99099, -354.312, -3.05961, 0.66 ) }
    dend_93 { pt3dadd( 4.37268, -354.914, -1.98266, 0.22 ) }
    dend_93 { pt3dadd( 3.71808, -355.53, -0.874461, 0.88 ) }
    dend_93 { pt3dadd( 3.07277, -356.09, 0.118244, 0.22 ) }
    dend_93 { pt3dadd( 2.63156, -356.434, 0.683022, 0.22 ) }
    dend_93 { pt3dadd( 2.18585, -356.762, 1.16715, 0.74 ) }
    dend_93 { pt3dadd( 1.87715, -357.006, 1.42665, 0.88 ) }
    dend_93 { pt3dadd( 0.872693, -357.865, 2.31798, 0.22 ) }
    dend_93 { pt3dadd( 0.424927, -358.323, 2.76663, 0.22 ) }
    dend_93 { pt3dadd( 0.311397, -358.451, 2.88445, 0.22 ) }
    dend_93 { pt3dadd( 0.0928552, -358.72, 3.12225, 0.22 ) }
    dend_93 { pt3dadd( -0.455815, -359.431, 3.76543, 0.88 ) }
    dend_93 { pt3dadd( -1.08325, -360.316, 4.52587, 0.52 ) }
    dend_93 { pt3dadd( -1.60853, -361.143, 5.19941, 0.22 ) }
    dend_93 { pt3dadd( -1.79294, -361.467, 5.47263, 0.29 ) }
    dend_93 { pt3dadd( -2.00514, -361.869, 5.80553, 0.22 ) }
    dend_93 { pt3dadd( -2.25141, -362.372, 6.20841, 0.81 ) }
    dend_93 { pt3dadd( -2.44847, -362.764, 6.46566, 0.88 ) }
    // Section: dend_92, id: dend_92, parent: dend_91 (entry count 59/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 11.6693, -343.039, -18.0586, 0.29 ) }
    dend_92 { pt3dadd( 12.2819, -343.454, -17.7975, 0.29 ) }
    dend_92 { pt3dadd( 12.3256, -343.484, -17.7789, 0.29 ) }
    dend_92 { pt3dadd( 13.0338, -343.964, -17.477, 0.29 ) }
    dend_92 { pt3dadd( 13.5242, -344.296, -17.268, 0.44 ) }
    dend_92 { pt3dadd( 19.0812, -347.799, -14.3961, 0.44 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 65/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( 129.985, -200.95, 16.2587, 0.29 ) }
    dend_83 { pt3dadd( 129.977, -201.698, 16.2472, 0.29 ) }
    dend_83 { pt3dadd( 129.941, -202.1, 16.2086, 0.22 ) }
    dend_83 { pt3dadd( 129.881, -202.62, 16.143, 0.96 ) }
    dend_83 { pt3dadd( 129.849, -202.945, 16.0748, 1.18 ) }
    dend_83 { pt3dadd( 129.828, -203.444, 15.9192, 1.03 ) }
    dend_83 { pt3dadd( 129.835, -203.973, 15.7287, 0.29 ) }
    dend_83 { pt3dadd( 129.861, -204.618, 15.4417, 0.29 ) }
    dend_83 { pt3dadd( 129.928, -205.026, 15.2424, 0.52 ) }
    dend_83 { pt3dadd( 130.155, -205.764, 14.8655, 0.37 ) }
    dend_83 { pt3dadd( 130.464, -206.498, 14.4817, 0.22 ) }
    dend_83 { pt3dadd( 130.677, -206.913, 14.2713, 1.33 ) }
    dend_83 { pt3dadd( 130.815, -207.153, 14.1693, 1.69 ) }
    dend_83 { pt3dadd( 131.344, -207.961, 13.8563, 0.29 ) }
    dend_83 { pt3dadd( 131.589, -208.315, 13.7383, 0.29 ) }
    dend_83 { pt3dadd( 131.617, -208.355, 13.7307, 0.29 ) }
    dend_83 { pt3dadd( 131.989, -208.938, 13.6952, 0.29 ) }
    dend_83 { pt3dadd( 132.391, -209.627, 13.6715, 1.55 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 83/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( 129.985, -200.95, 16.2587, 0.22 ) }
    dend_82 { pt3dadd( 130.428, -201.216, 17.244, 0.22 ) }
    dend_82 { pt3dadd( 130.783, -201.478, 17.9581, 0.22 ) }
    dend_82 { pt3dadd( 130.809, -201.498, 18.0015, 0.22 ) }
    dend_82 { pt3dadd( 131.075, -201.677, 18.3316, 0.44 ) }
    dend_82 { pt3dadd( 131.126, -201.704, 18.3733, 0.44 ) }
    dend_82 { pt3dadd( 131.624, -201.945, 18.7194, 0.22 ) }
    dend_82 { pt3dadd( 131.68, -201.966, 18.7429, 0.22 ) }
    dend_82 { pt3dadd( 132.048, -202.05, 18.8594, 0.22 ) }
    dend_82 { pt3dadd( 132.753, -202.136, 19.0328, 0.59 ) }
    dend_82 { pt3dadd( 133.897, -202.224, 19.2899, 0.22 ) }
    dend_82 { pt3dadd( 133.969, -202.227, 19.305, 0.22 ) }
    dend_82 { pt3dadd( 135.041, -202.222, 19.5048, 0.29 ) }
    dend_82 { pt3dadd( 135.615, -202.208, 19.6052, 0.29 ) }
    dend_82 { pt3dadd( 136.608, -202.137, 19.7578, 0.22 ) }
    // Section: dend_71, id: dend_71, parent: dend_69 (entry count 98/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( 49.2409, -241.391, 30.2397, 1.03 ) }
    dend_71 { pt3dadd( 49.6382, -241.994, 30.8045, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_63()
}

proc basic_shape_63() {
    dend_71 { pt3dadd( 50.2236, -242.957, 31.6946, 1.03 ) }
    dend_71 { pt3dadd( 50.7519, -243.838, 32.4678, 0.96 ) }
    dend_71 { pt3dadd( 51.2682, -244.701, 33.1888, 0.59 ) }
    dend_71 { pt3dadd( 51.5785, -245.217, 33.5945, 0.59 ) }
    dend_71 { pt3dadd( 52.1855, -246.215, 34.3525, 0.44 ) }
    dend_71 { pt3dadd( 52.7355, -247.074, 34.9566, 0.29 ) }
    dend_71 { pt3dadd( 53.0963, -247.595, 35.2685, 0.29 ) }
    dend_71 { pt3dadd( 53.3253, -247.914, 35.4332, 1.11 ) }
    dend_71 { pt3dadd( 53.671, -248.375, 35.6518, 1.47 ) }
    dend_71 { pt3dadd( 53.7124, -248.426, 35.6743, 1.47 ) }
    dend_71 { pt3dadd( 54.5347, -249.254, 35.8942, 1.11 ) }
    dend_71 { pt3dadd( 55.2841, -249.879, 36.0046, 0.29 ) }
    // Section: dend_70, id: dend_70, parent: dend_69 (entry count 12/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( 49.2409, -241.391, 30.2397, 0.22 ) }
    dend_70 { pt3dadd( 50.4423, -241.852, 29.9945, 0.22 ) }
    dend_70 { pt3dadd( 51.1556, -242.086, 29.8653, 0.22 ) }
    dend_70 { pt3dadd( 51.2242, -242.109, 29.8529, 0.22 ) }
    dend_70 { pt3dadd( 52.5458, -242.544, 29.6135, 0.22 ) }
    dend_70 { pt3dadd( 53.7609, -242.945, 29.3934, 0.22 ) }
    dend_70 { pt3dadd( 54.799, -243.287, 29.2054, 0.22 ) }
    dend_70 { pt3dadd( 55.4465, -243.511, 29.1153, 0.44 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 20/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -149.433, -111.753, 89.2887, 0.22 ) }
    dend_51 { pt3dadd( -149.046, -110.728, 89.0258, 0.22 ) }
    dend_51 { pt3dadd( -149.027, -110.676, 89.0126, 0.22 ) }
    dend_51 { pt3dadd( -148.69, -109.785, 88.784, 0.22 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 24/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -149.433, -111.753, 89.2887, 0.29 ) }
    dend_50 { pt3dadd( -150.556, -111.745, 89.2862, 0.29 ) }
    dend_50 { pt3dadd( -151.642, -111.797, 89.2553, 0.29 ) }
    dend_50 { pt3dadd( -151.711, -111.791, 89.2402, 0.29 ) }
    dend_50 { pt3dadd( -152.506, -111.648, 88.9687, 0.29 ) }
    dend_50 { pt3dadd( -152.689, -111.584, 88.8849, 0.29 ) }
    dend_50 { pt3dadd( -153.14, -111.36, 88.6348, 0.29 ) }
    dend_50 { pt3dadd( -153.247, -111.27, 88.529, 0.29 ) }
    dend_50 { pt3dadd( -153.934, -110.124, 87.4081, 0.22 ) }
    dend_50 { pt3dadd( -153.955, -110.076, 87.3624, 0.22 ) }
    dend_50 { pt3dadd( -154.135, -109.424, 86.7735, 0.22 ) }
    dend_50 { pt3dadd( -154.151, -109.341, 86.7059, 0.22 ) }
    // Section: dend_85, id: dend_85, parent: dend_83 (entry count 36/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 132.391, -209.627, 13.6715, 1.62 ) }
    dend_85 { pt3dadd( 133.42, -209.934, 13.6987, 1.62 ) }
    dend_85 { pt3dadd( 134.293, -210.247, 13.7928, 1.62 ) }
    dend_85 { pt3dadd( 134.345, -210.27, 13.8012, 1.62 ) }
    dend_85 { pt3dadd( 135.33, -210.825, 14.0907, 0.59 ) }
    dend_85 { pt3dadd( 136.043, -211.324, 14.4066, 0.44 ) }
    dend_85 { pt3dadd( 136.711, -211.878, 14.7667, 0.29 ) }
    dend_85 { pt3dadd( 137.364, -212.586, 15.206, 0.66 ) }
    dend_85 { pt3dadd( 137.708, -213.048, 15.508, 0.66 ) }
    dend_85 { pt3dadd( 138.299, -213.987, 16.1397, 0.22 ) }
    dend_85 { pt3dadd( 138.758, -214.892, 16.7369, 0.59 ) }
    dend_85 { pt3dadd( 138.95, -215.344, 17.0341, 1.47 ) }
    dend_85 { pt3dadd( 139.146, -215.835, 17.3517, 1.47 ) }
    dend_85 { pt3dadd( 139.174, -215.893, 17.3849, 1.47 ) }
    dend_85 { pt3dadd( 139.58, -216.576, 17.7473, 1.47 ) }
    dend_85 { pt3dadd( 140.081, -217.354, 18.0438, 0.59 ) }
    // Section: dend_84, id: dend_84, parent: dend_83 (entry count 52/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 132.391, -209.627, 13.6715, 0.15 ) }
    dend_84 { pt3dadd( 131.346, -210.093, 13.2061, 0.15 ) }
    dend_84 { pt3dadd( 131.261, -210.131, 13.1683, 0.15 ) }
    dend_84 { pt3dadd( 130.328, -210.483, 12.7652, 0.15 ) }
    dend_84 { pt3dadd( 129.528, -210.741, 12.4736, 0.15 ) }
    dend_84 { pt3dadd( 129.394, -210.773, 12.4392, 0.15 ) }
    dend_84 { pt3dadd( 128.548, -210.974, 12.222, 0.15 ) }
    dend_84 { pt3dadd( 128.483, -210.985, 12.2075, 0.15 ) }
    dend_84 { pt3dadd( 127.434, -211.167, 11.9951, 0.15 ) }
    dend_84 { pt3dadd( 126.083, -211.39, 11.7799, 0.15 ) }
    dend_84 { pt3dadd( 124.432, -211.57, 11.5892, 0.15 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 63/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( 55.2841, -249.879, 36.0046, 0.37 ) }
    dend_73 { pt3dadd( 54.6264, -251.067, 36.5722, 0.37 ) }
    dend_73 { pt3dadd( 54.2658, -251.795, 36.8492, 0.52 ) }
    dend_73 { pt3dadd( 54.0411, -252.304, 37.0024, 0.66 ) }
    dend_73 { pt3dadd( 53.613, -253.377, 37.2786, 0.29 ) }
    dend_73 { pt3dadd( 53.3941, -253.995, 37.4165, 0.59 ) }
    dend_73 { pt3dadd( 53.232, -254.533, 37.5164, 0.52 ) }
    dend_73 { pt3dadd( 53.0182, -255.451, 37.6266, 0.37 ) }
    dend_73 { pt3dadd( 52.875, -256.314, 37.7226, 0.66 ) }
    dend_73 { pt3dadd( 52.8101, -256.781, 37.779, 0.96 ) }
    dend_73 { pt3dadd( 52.7102, -257.389, 37.8537, 0.52 ) }
    dend_73 { pt3dadd( 52.4951, -258.51, 38.0174, 0.52 ) }
    dend_73 { pt3dadd( 52.2968, -259.576, 38.1607, 1.03 ) }
    dend_73 { pt3dadd( 52.1989, -260.198, 38.2377, 1.18 ) }
    dend_73 { pt3dadd( 52.0315, -261.602, 38.3904, 0.66 ) }
    dend_73 { pt3dadd( 51.8556, -262.969, 38.5328, 0.96 ) }
    dend_73 { pt3dadd( 51.8432, -263.058, 38.5414, 0.96 ) }
    dend_73 { pt3dadd( 51.6619, -264.391, 38.633, 0.29 ) }
    dend_73 { pt3dadd( 51.597, -265.157, 38.621, 0.29 ) }
    dend_73 { pt3dadd( 51.6331, -265.645, 38.5808, 0.29 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 83/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( 55.2841, -249.879, 36.0046, 0.52 ) }
    dend_72 { pt3dadd( 56.1546, -250.351, 36.0917, 0.52 ) }
    dend_72 { pt3dadd( 56.7054, -250.649, 36.1469, 0.52 ) }
    dend_72 { pt3dadd( 57.6066, -251.138, 36.2371, 0.22 ) }
    dend_72 { pt3dadd( 58.8873, -251.832, 36.3652, 0.22 ) }
    dend_72 { pt3dadd( 59.4503, -252.137, 36.4216, 0.22 ) }
    // Section: dend_87, id: dend_87, parent: dend_85 (entry count 89/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 140.081, -217.354, 18.0438, 0.29 ) }
    dend_87 { pt3dadd( 140.747, -217.249, 18.8441, 0.29 ) }
    dend_87 { pt3dadd( 140.839, -217.267, 18.9567, 0.29 ) }
    dend_87 { pt3dadd( 141.305, -217.463, 19.542, 0.22 ) }
    dend_87 { pt3dadd( 141.357, -217.488, 19.608, 0.22 ) }
    dend_87 { pt3dadd( 142.17, -217.9, 20.5256, 0.22 ) }
    dend_87 { pt3dadd( 142.793, -218.217, 21.1679, 0.22 ) }
    dend_87 { pt3dadd( 143.523, -218.632, 21.8827, 0.44 ) }
    dend_87 { pt3dadd( 144.261, -219.076, 22.578, 0.22 ) }
    dend_87 { pt3dadd( 144.323, -219.126, 22.6517, 0.22 ) }
    dend_87 { pt3dadd( 144.752, -219.557, 23.3045, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_64()
}

proc basic_shape_64() {
    dend_87 { pt3dadd( 144.955, -219.781, 23.6387, 0.96 ) }
    dend_87 { pt3dadd( 144.989, -219.819, 23.7029, 0.96 ) }
    dend_87 { pt3dadd( 145.282, -220.143, 24.2808, 1.25 ) }
    dend_87 { pt3dadd( 146.289, -221.182, 26.3682, 0.29 ) }
    dend_87 { pt3dadd( 146.866, -221.691, 27.5922, 0.66 ) }
    dend_87 { pt3dadd( 147.149, -221.894, 28.2514, 0.22 ) }
    dend_87 { pt3dadd( 147.383, -222.052, 28.8083, 0.59 ) }
    dend_87 { pt3dadd( 147.413, -222.069, 28.8751, 0.59 ) }
    dend_87 { pt3dadd( 148.148, -222.308, 30.3605, 0.22 ) }
    dend_87 { pt3dadd( 148.616, -222.193, 30.984, 0.22 ) }
    dend_87 { pt3dadd( 149.16, -221.895, 31.6722, 0.22 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 11/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 140.081, -217.354, 18.0438, 0.22 ) }
    dend_86 { pt3dadd( 141.475, -218.318, 17.8484, 0.22 ) }
    dend_86 { pt3dadd( 141.598, -218.398, 17.8102, 0.22 ) }
    dend_86 { pt3dadd( 142.463, -219.06, 17.4494, 0.22 ) }
    dend_86 { pt3dadd( 142.517, -219.11, 17.4211, 0.22 ) }
    dend_86 { pt3dadd( 143.337, -219.874, 16.9914, 0.22 ) }
    dend_86 { pt3dadd( 143.911, -220.408, 16.6909, 0.22 ) }
    dend_86 { pt3dadd( 144.802, -221.294, 16.0732, 0.22 ) }
    dend_86 { pt3dadd( 145.554, -222.041, 15.4791, 0.22 ) }
    dend_86 { pt3dadd( 145.933, -222.518, 14.9684, 0.22 ) }
    // Section: dend_75, id: dend_75, parent: dend_73 (entry count 21/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( 51.6331, -265.645, 38.5808, 0.22 ) }
    dend_75 { pt3dadd( 51.0907, -267.0, 38.5598, 0.22 ) }
    dend_75 { pt3dadd( 50.7767, -267.785, 38.5476, 1.03 ) }
    dend_75 { pt3dadd( 50.2998, -268.976, 38.5291, 0.22 ) }
    dend_75 { pt3dadd( 50.0088, -269.703, 38.5178, 0.96 ) }
    dend_75 { pt3dadd( 49.7995, -270.226, 38.5097, 1.33 ) }
    dend_75 { pt3dadd( 49.3197, -271.425, 38.4911, 0.59 ) }
    // Section: dend_74, id: dend_74, parent: dend_73 (entry count 28/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( 51.6331, -265.645, 38.5808, 0.22 ) }
    dend_74 { pt3dadd( 51.8799, -265.907, 38.3338, 0.22 ) }
    dend_74 { pt3dadd( 51.9209, -265.952, 38.2901, 0.44 ) }
    dend_74 { pt3dadd( 52.0719, -266.093, 38.1483, 0.44 ) }
    dend_74 { pt3dadd( 52.4042, -266.383, 37.8556, 0.22 ) }
    dend_74 { pt3dadd( 52.4739, -266.428, 37.8024, 0.22 ) }
    dend_74 { pt3dadd( 53.0633, -266.734, 37.3896, 0.22 ) }
    dend_74 { pt3dadd( 53.0987, -266.751, 37.3644, 0.22 ) }
    dend_74 { pt3dadd( 53.5464, -266.938, 37.0548, 0.22 ) }
    dend_74 { pt3dadd( 53.6022, -266.955, 37.0189, 0.22 ) }
    dend_74 { pt3dadd( 54.2889, -267.078, 36.6538, 0.22 ) }
    dend_74 { pt3dadd( 54.4309, -267.088, 36.5883, 0.22 ) }
    // Section: dend_77, id: dend_77, parent: dend_75 (entry count 40/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( 49.3197, -271.425, 38.4911, 0.29 ) }
    dend_77 { pt3dadd( 49.4208, -272.298, 39.2697, 0.29 ) }
    dend_77 { pt3dadd( 49.4793, -273.193, 40.0941, 0.66 ) }
    dend_77 { pt3dadd( 49.493, -273.746, 40.581, 0.81 ) }
    dend_77 { pt3dadd( 49.4953, -273.808, 40.6299, 0.81 ) }
    dend_77 { pt3dadd( 49.5822, -274.893, 41.4188, 0.44 ) }
    dend_77 { pt3dadd( 49.6859, -275.841, 42.0683, 1.11 ) }
    dend_77 { pt3dadd( 49.8026, -276.67, 42.6105, 0.88 ) }
    dend_77 { pt3dadd( 50.0149, -277.824, 43.288, 0.29 ) }
    dend_77 { pt3dadd( 50.2711, -278.789, 43.8209, 0.29 ) }
    dend_77 { pt3dadd( 50.5545, -279.434, 44.1809, 0.29 ) }
    dend_77 { pt3dadd( 50.6736, -279.634, 44.284, 0.29 ) }
    dend_77 { pt3dadd( 51.1609, -280.252, 44.574, 0.22 ) }
    dend_77 { pt3dadd( 51.2056, -280.294, 44.592, 0.22 ) }
    dend_77 { pt3dadd( 51.8118, -280.648, 44.7913, 0.22 ) }
    dend_77 { pt3dadd( 53.0385, -281.103, 45.2778, 0.22 ) }
    // Section: dend_76, id: dend_76, parent: dend_75 (entry count 56/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( 49.3197, -271.425, 38.4911, 0.22 ) }
    dend_76 { pt3dadd( 48.0045, -271.687, 38.5178, 0.22 ) }
    dend_76 { pt3dadd( 47.2311, -271.894, 38.4621, 0.22 ) }
    dend_76 { pt3dadd( 46.5089, -272.126, 38.3601, 0.22 ) }
    dend_76 { pt3dadd( 46.3705, -272.176, 38.3339, 0.22 ) }
    dend_76 { pt3dadd( 45.8213, -272.403, 38.1966, 0.22 ) }
    dend_76 { pt3dadd( 44.8245, -272.763, 38.012, 0.22 ) }
    dend_76 { pt3dadd( 45.3767, -273.098, 37.56, 0.22 ) }
    dend_76 { pt3dadd( 45.4366, -273.133, 37.514, 0.22 ) }
    dend_76 { pt3dadd( 46.2783, -273.576, 36.9291, 0.22 ) }
    dend_76 { pt3dadd( 46.318, -273.595, 36.9057, 0.22 ) }
    dend_76 { pt3dadd( 47.0893, -273.894, 36.5449, 0.22 ) }
    dend_76 { pt3dadd( 47.596, -274.034, 36.3989, 0.37 ) }
    dend_76 { pt3dadd( 47.6565, -274.043, 36.3831, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
    ModelViewParmSubset_2 = new SectionList()
    dend_106 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_71 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_106, dend_37, dend_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_78 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_106, dend_37, dend_0, axon_0, dend_110, dend_107, dend_53, dend_38, dend_22, dend_1, axon_1, dend_109, dend_108, dend_65, dend_54, dend_42, dend_39, dend_36, dend_23, dend_13, dend_2, dend_95, dend_66, dend_60, dend_55, dend_44, dend_43, dend_41, dend_40, dend_25, dend_24, dend_19, dend_14, dend_8, dend_3, dend_103, dend_96, dend_88, dend_67, dend_62, dend_61, dend_57, dend_56, dend_46, dend_45, dend_29, dend_26, dend_21, dend_20, dend_16, dend_15, dend_10, dend_9, dend_7, dend_4, dend_105, dend_104, dend_98, dend_97, dend_94, dend_89, dend_79, dend_68, dend_64, dend_63, dend_59, dend_58, dend_52, dend_47, dend_33, dend_30, dend_28, dend_27, dend_18, dend_17, dend_12, dend_11, dend_6, dend_5, dend_100, dend_99, dend_91, dend_90, dend_81, dend_80, dend_78, dend_69, dend_49, dend_48, dend_35, dend_34, dend_32, dend_31, dend_102, dend_101, dend_93, dend_92, dend_83, dend_82, dend_71, dend_70, dend_51, dend_50, dend_85, dend_84, dend_73, dend_72, dend_87, dend_86, dend_75, dend_74, dend_77, dend_76]}
    ModelViewParmSubset_5 = new SectionList()
    dend_106 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_110 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_110 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_107 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_38 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_108 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_42 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_36 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_60 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_55 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_41 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_40 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_14 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_8 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_103 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_96 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_88 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_67 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_57 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_29 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_26 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_21 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_20 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_7 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_105 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_104 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_94 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_89 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_79 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_68 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_30 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_28 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_100 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_91 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_90 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_69 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_106 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_37 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_53 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_65 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_22 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_54 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_13 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_95 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_66 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_4 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_5 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_6 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_61 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_62 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_109 OneSecGrp_SectionRef_13.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_63 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_64 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_10 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_12 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_11 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_43 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_44 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_15 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_78 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_46 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_47 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_16 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_33 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_34 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_48 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_52 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_35 OneSecGrp_SectionRef_91.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_49 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_51 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_50 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_18 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_17 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_56 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_80 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_81 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_70 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_82 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_83 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_71 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_72 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_84 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_85 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_73 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_86 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_74 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_75 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_87 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_76 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_77 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_97 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_27 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_58 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_98 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_99 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_59 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_31 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_92 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_102 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_32 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_101 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_93 OneSecGrp_SectionRef_97.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_110, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_65, dend_65, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_98, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_47, dend_47, dend_47, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_78, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_92, dend_92, dend_92, dend_92, dend_92, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_82, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_51, dend_51, dend_51, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_109 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_64()
}

proc subsets_64() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_65()
}

proc subsets_65() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_66()
}

proc subsets_66() {
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_67()
}

proc subsets_67() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_68()
}

proc subsets_68() {
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_69()
}

proc subsets_69() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_110 nseg = 9
    dend_107 nseg = 3
    dend_38 nseg = 3
    dend_108 nseg = 3
    dend_42 nseg = 5
    dend_36 nseg = 11
    dend_60 nseg = 3
    dend_55 nseg = 9
    dend_41 nseg = 7
    dend_40 nseg = 7
    dend_25 nseg = 5
    dend_24 nseg = 11
    dend_19 nseg = 5
    dend_14 nseg = 7
    dend_8 nseg = 3
    dend_103 nseg = 9
    dend_96 nseg = 13
    dend_88 nseg = 3
    dend_67 nseg = 3
    dend_57 nseg = 5
    dend_29 nseg = 3
    dend_26 nseg = 7
    dend_21 nseg = 5
    dend_20 nseg = 7
    dend_7 nseg = 3
    dend_105 nseg = 7
    dend_104 nseg = 5
    dend_94 nseg = 7
    dend_89 nseg = 9
    dend_79 nseg = 7
    dend_68 nseg = 5
    dend_30 nseg = 9
    dend_28 nseg = 7
    dend_100 nseg = 3
    dend_91 nseg = 5
    dend_90 nseg = 17
    dend_69 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L5_SBC_3ba116236f_0_0


