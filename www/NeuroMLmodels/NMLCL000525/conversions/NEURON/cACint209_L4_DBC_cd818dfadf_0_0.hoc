// Cell: cACint209_L4_DBC_cd818dfadf_0_0
/*
{
  "id" : "cACint209_L4_DBC_cd818dfadf_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-3.29752, -10.9202, 0.0, 2.7473", "-3.02947, -9.86122, 0.0, 4.90547", "-2.76143, -8.80223, 0.0, 7.1195", "-2.49339, -7.74324, 0.0, 9.06693", "-2.22534, -6.68425, 0.0, 10.5477", "-1.9573, -5.62526, 0.0, 11.7638", "-1.68926, -4.56627, 0.0, 12.6703", "-1.42121, -3.50728, 0.0, 13.5724", "-1.15317, -2.44829, 0.0, 13.9606", "-0.885125, -1.3893, 0.0, 14.249", "-0.617082, -0.330312, 0.0, 14.4914", "-0.349039, 0.728678, 0.0, 14.572", "-0.0809953, 1.78767, 0.0, 14.5168", "0.187048, 2.84666, 0.0, 14.1167", "0.455092, 3.90565, 0.0, 13.6161", "0.723135, 4.96464, 0.0, 12.8986", "0.991178, 6.02363, 0.0, 12.0703", "1.25922, 7.08262, 0.0, 10.8368", "1.52727, 8.14161, 0.0, 9.27498", "1.79531, 9.2006, 0.0, 7.02436", "2.06335, 10.2596, 0.0, 4.05122" ]
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.851454, 9.85172, 1.7, 1.62", "0.851454, 9.85172, 1.7, 1.62", "0.780075, 11.3154, 1.65369, 0.96", "0.718899, 12.5698, 1.614, 1.25", "0.633548, 14.3199, 1.55862, 1.55", "0.553668, 15.9578, 1.5068, 1.84", "0.473163, 17.6085, 1.45457, 2.14" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-2.23855, -9.19973, -9.03, 1.18", "-1.81267, -9.30403, -9.10483, 1.18", "-0.761136, -9.67387, -9.30633, 1.18", "1.00638, -10.4975, -9.69626, 1.03", "1.91256, -10.9915, -9.91591, 0.96", "2.69562, -11.3282, -10.0753, 0.81", "1.81072, -11.5458, -10.0907, 0.74", "1.16332, -11.9698, -10.2224, 0.74", "0.305462, -12.5265, -10.4502, 0.96", "-0.742913, -13.1528, -10.7643, 1.18", "-2.25771, -13.9666, -11.2653, 0.88", "-3.53028, -14.586, -11.7442, 0.96", "-4.85853, -15.1782, -12.2621, 1.25", "-5.78353, -15.5736, -12.6511, 1.99", "-6.69034, -15.9642, -13.079, 2.95", "-7.57115, -16.3815, -13.5836, 3.54", "-8.31466, -16.7881, -14.1285, 3.54" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-1.90855, -11.3838, 1.23, 0.81", "-1.80699, -11.9324, 1.20726, 0.81", "-1.64018, -12.6043, 1.17951, 0.96", "-1.44441, -13.2752, 1.1531, 1.18", "-1.23331, -13.9249, 1.12905, 1.18", "-0.981613, -14.645, 1.1264, 0.81", "-0.820326, -15.0849, 1.14116, 1.03", "-0.574709, -15.7014, 1.20599, 1.47", "-0.403492, -16.1429, 1.28956, 2.06", "-0.269484, -16.5411, 1.397, 2.14", "-0.0903698, -17.2814, 1.65062, 1.33", "0.014636, -18.2293, 2.02502, 0.96", "-0.0209059, -19.0734, 2.38011, 0.96", "-0.15663, -19.6765, 2.64051, 1.18", "-0.32106, -20.1223, 2.83593, 1.99", "-0.583965, -20.6726, 3.07337, 2.88", "-0.931704, -21.2975, 3.32643, 3.02", "-1.41904, -22.1374, 3.63862, 1.77", "-2.08493, -23.3752, 4.03801, 0.81", "-2.41362, -24.0966, 4.24384, 0.81", "-2.59138, -24.6097, 4.37043, 0.81", "-2.73264, -25.2331, 4.50862, 0.81", "-2.81631, -25.9127, 4.65655, 0.81", "-2.835, -26.4834, 4.7768, 1.03", "-2.82441, -27.047, 4.88851, 1.25", "-2.77372, -28.0977, 5.08705, 0.81", "-2.72966, -28.9351, 5.25285, 1.03", "-2.70749, -29.6036, 5.3991, 1.62", "-2.71658, -30.1552, 5.53629, 2.73", "-2.77488, -30.9328, 5.752, 4.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "6.51145, 6.15652, 5.69, 0.59", "7.11082, 6.47575, 5.56479, 0.44", "7.69486, 6.82258, 5.61875, 0.44", "8.18324, 7.1276, 5.79609, 0.44", "8.70635, 7.45284, 6.08734, 0.37", "9.09688, 7.68383, 6.34972, 1.03", "9.71049, 8.02829, 6.82018, 1.33", "10.3585, 8.37713, 7.46593, 1.47", "10.803, 8.59571, 8.00133, 1.25", "11.2869, 8.77528, 8.66205, 0.29", "11.5984, 8.82943, 9.11979, 0.22", "11.8384, 8.82271, 9.45401, 0.22", "11.9917, 8.77069, 9.62918, 0.22", "12.1745, 8.68818, 9.81626, 0.22", "12.4595, 8.56597, 10.0942, 1.03", "13.0645, 8.35082, 10.702, 2.21", "13.3997, 8.29708, 11.0438, 3.02", "14.4591, 8.39873, 12.1487, 0.29", "14.9465, 8.58565, 12.6857, 0.29", "15.2207, 8.76556, 12.9971, 0.44", "15.4875, 9.0113, 13.3134, 0.66", "15.8986, 9.50071, 13.8179, 1.11", "16.2756, 10.0098, 14.3011, 0.52", "16.5754, 10.4546, 14.6567, 0.22", "16.7675, 10.6524, 14.8534, 0.22", "16.956, 10.7156, 15.0299, 0.22", "17.1398, 10.6462, 15.1873, 0.22", "17.5608, 10.3818, 15.5289, 0.66", "17.9864, 10.0905, 15.8558, 1.7", "18.4085, 9.80302, 16.1921, 2.21", "18.807, 9.56207, 16.5407, 1.7", "19.356, 9.33406, 17.0995, 0.29", "19.8608, 9.2641, 17.7348, 0.22", "20.0661, 9.31957, 18.0676, 0.22", "20.2711, 9.51894, 18.5891, 0.22", "20.384, 9.81192, 19.1603, 0.96", "20.4372, 10.3377, 20.0564, 0.74", "20.4084, 10.7124, 20.6803, 0.74", "20.3669, 10.9197, 21.0515, 0.74", "20.3236, 11.1987, 21.6615, 0.74", "20.3417, 11.3576, 22.065, 0.74", "20.3843, 11.3968, 22.2064, 0.74", "20.692, 11.4792, 22.6645, 0.74", "21.0152, 11.5423, 23.0296, 1.18", "21.5839, 11.6398, 23.6167, 0.44", "22.1021, 11.7308, 24.0966, 1.25", "22.8212, 11.8745, 24.7218, 2.73", "23.5895, 12.0546, 25.378, 3.54", "24.0198, 12.1715, 25.7318, 2.8" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.64855, 6.75127, 5.52, 0.88", "-5.02297, 7.16683, 5.69494, 0.74", "-5.61518, 7.76597, 6.03671, 0.22", "-6.00689, 8.13069, 6.28835, 0.22", "-6.52532, 8.57284, 6.61951, 0.44", "-6.95719, 8.90377, 6.88562, 0.44", "-7.52218, 9.27034, 7.22415, 0.22", "-8.11959, 9.55955, 7.58686, 0.22", "-8.42645, 9.66992, 7.76617, 0.22", "-8.85769, 9.78982, 8.00244, 0.96", "-9.53305, 9.93452, 8.37557, 1.47", "-10.7475, 10.1521, 9.1055, 0.15", "-11.2899, 10.2467, 9.42078, 0.15", "-11.6744, 10.3328, 9.61255, 0.15", "-12.2482, 10.4745, 9.87625, 0.88", "-13.2661, 10.746, 10.3294, 0.37", "-14.3569, 11.0612, 10.8069, 1.55", "-15.2315, 11.3411, 11.1855, 2.95", "-17.4679, 12.1011, 12.1373, 0.07", "-17.8855, 12.2418, 12.311, 0.88", "-18.7515, 12.532, 12.6433, 0.07", "-19.5608, 12.8025, 12.8916, 0.22", "-20.119, 12.988, 13.039, 0.22", "-21.3598, 13.3776, 13.3481, 0.15", "-21.745, 13.4829, 13.438, 0.96", "-22.2981, 13.6228, 13.5385, 1.84", "-24.2723, 14.0706, 13.7794, 0.15", "-24.7108, 14.1494, 13.8163, 0.66", "-25.406, 14.248, 13.8618, 1.18", "-27.0977, 14.4321, 13.9516, 0.15", "-27.7272, 14.4769, 13.9731, 1.33", "-28.5688, 14.5058, 13.9923, 2.51", "-30.9423, 14.4944, 14.0188, 0.15", "-31.3258, 14.4832, 14.0069, 0.52", "-32.0254, 14.4454, 13.9523, 0.81", "-33.1194, 14.3654, 13.8104, 0.15", "-33.673, 14.321, 13.7307, 0.15", "-34.0947, 14.2893, 13.6581, 0.66", "-35.3828, 14.2123, 13.3946, 1.84", "-36.6517, 14.1764, 13.1534, 0.22", "-37.2987, 14.177, 13.0496, 0.37", "-37.5791, 14.1851, 13.0132, 0.88", "-38.6314, 14.2313, 12.9301, 0.15", "-39.2094, 14.2705, 12.9115, 0.15", "-39.8432, 14.3302, 12.9313, 0.74", "-41.7236, 14.5361, 13.1219, 0.07", "-42.0779, 14.5814, 13.1743, 0.52", "-43.2911, 14.7692, 13.4051, 0.15", "-43.8647, 14.873, 13.5409, 0.96", "-44.5826, 15.0166, 13.7351, 1.92", "-46.1292, 15.4016, 14.1934, 0.15", "-46.7721, 15.5994, 14.3932, 0.22", "-47.5354, 15.8601, 14.6133, 0.07", "-48.038, 16.0642, 14.742, 1.03", "-48.5583, 16.2949, 14.8646, 1.77", "-50.1275, 17.0438, 15.191, 0.07", "-50.7671, 17.3747, 15.3096, 0.07", "-51.207, 17.6002, 15.4003, 0.74", "-52.4029, 18.2192, 15.6574, 0.07", "-52.7721, 18.4076, 15.7381, 0.52", "-53.7797, 18.8518, 15.9771, 0.07", "-54.4016, 19.0615, 16.1378, 0.22", "-55.0877, 19.2173, 16.3147, 0.15", "-55.3727, 19.2444, 16.3832, 0.96", "-56.0668, 19.223, 16.5336, 1.92", "-57.4839, 19.0813, 16.8061, 0.07", "-58.1757, 18.9679, 16.9104, 0.29", "-58.934, 18.8498, 16.9871, 0.07", "-59.6734, 18.7777, 17.0288, 0.07", "-59.9629, 18.7673, 17.0415, 0.07", "-60.2379, 18.7704, 17.0476, 0.44", "-60.8187, 18.8097, 17.0427, 0.74", "-62.2508, 18.9253, 17.0201, 0.07", "-63.3871, 19.0192, 17.0073, 0.15", "-64.1762, 19.0802, 16.9994, 0.96", "-65.1501, 19.1147, 16.9982, 0.07", "-65.9344, 19.1079, 17.0006, 0.59", "-66.688, 19.0556, 17.0086, 0.15", "-67.0453, 19.0057, 17.0138, 0.74", "-67.5851, 18.9036, 17.0208, 1.18", "-69.2711, 18.5482, 16.9814, 0.15", "-69.8285, 18.433, 16.9549, 0.81", "-70.6715, 18.2625, 16.8905, 0.15", "-71.1663, 18.1648, 16.8413, 0.22", "-72.443, 17.9146, 16.69, 0.07", "-73.2345, 17.7594, 16.5829, 1.03", "-73.7888, 17.66, 16.4973, 1.84", "-75.6326, 17.39, 16.2192, 0.07", "-76.0019, 17.3544, 16.1658, 0.22", "-77.7385, 17.2774, 15.9497, 0.07", "-77.9627, 17.2754, 15.9275, 0.66", "-78.4629, 17.2805, 15.9053, 1.25", "-79.3064, 17.3073, 15.8835, 0.15", "-79.9871, 17.3601, 15.8809, 0.74", "-81.103, 17.4403, 15.917, 0.07", "-81.8525, 17.4897, 15.9669, 0.07", "-82.622, 17.5282, 16.0291, 0.07", "-82.7746, 17.5375, 16.0476, 0.07", "-83.3996, 17.5946, 16.1474, 0.74", "-84.5972, 17.7317, 16.4142, 0.07", "-84.9303, 17.7877, 16.5088, 1.11", "-85.6343, 17.9259, 16.7446, 1.62", "-86.9092, 18.1142, 17.2227, 0.07", "-87.5727, 18.1851, 17.4872, 0.81", "-88.6247, 18.2533, 17.9231, 0.15", "-89.4779, 18.2644, 18.3, 0.15", "-90.3691, 18.2264, 18.7071, 1.11", "-92.3722, 18.0217, 19.6342, 0.15", "-92.8327, 17.9505, 19.8421, 1.03", "-93.6739, 17.7976, 20.2135, 1.84", "-95.1139, 17.5005, 20.8068, 0.22", "-95.3731, 17.4402, 20.9135, 0.22", "-95.8999, 17.3158, 21.1327, 0.07", "-96.2857, 17.2275, 21.3004, 0.59", "-97.091, 17.0369, 21.6727, 0.07", "-97.6175, 16.9014, 21.9221, 0.29", "-98.1461, 16.7407, 22.1716, 0.07", "-98.7522, 16.5265, 22.4603, 0.37", "-99.6129, 16.1857, 22.8714, 0.07", "-100.235, 15.9066, 23.1688, 0.66", "-100.923, 15.5108, 23.4699, 0.07", "-101.547, 15.0834, 23.7222, 0.96", "-102.61, 14.2031, 24.104, 0.07", "-103.179, 13.6032, 24.2679, 0.07", "-103.548, 13.098, 24.3368, 1.03", "-104.505, 11.2817, 24.4221, 0.15", "-104.747, 10.6859, 24.4097, 0.15", "-104.993, 9.91062, 24.3556, 1.11", "-105.308, 8.61895, 24.223, 0.15", "-105.538, 7.51381, 24.0896, 1.84", "-105.961, 5.35546, 23.8137, 0.15", "-106.05, 4.8805, 23.7542, 0.59", "-106.206, 4.14334, 23.687, 1.03", "-106.612, 2.53202, 23.6305, 0.15", "-106.771, 2.00406, 23.6694, 0.52", "-107.112, 1.00627, 23.8331, 0.15", "-107.321, 0.417444, 23.9885, 0.66", "-107.615, -0.491566, 24.3088, 0.15", "-107.894, -1.52794, 24.75, 1.62", "-108.174, -3.02616, 25.4764, 0.07", "-108.231, -3.58321, 25.7448, 0.29", "-108.252, -4.60429, 26.1946, 0.07", "-108.221, -5.16014, 26.3951, 0.96", "-108.135, -6.04853, 26.5818, 2.21", "-108.045, -6.82364, 26.649, 1.33", "-107.95, -7.91432, 26.6278, 0.07", "-107.907, -8.88855, 26.5501, 0.07", "-107.913, -9.62933, 26.4532, 1.03", "-107.961, -11.3928, 26.1808, 0.07", "-107.995, -11.9597, 26.0828, 0.88", "-108.115, -13.3308, 25.8329, 0.07", "-108.161, -13.8295, 25.7384, 0.66", "-108.192, -14.1702, 25.6794, 1.25", "-108.298, -15.2324, 25.5185, 0.29" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999950122992937,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.06335, 10.2596, 0.0, 0.588322", "5.74396, 24.801, 0.0, 0.588322", "9.42458, 39.3425, 0.0, 0.588322" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "0.473163, 17.6085, 1.45457, 0.37", "1.37623, 18.5253, 2.02457, 0.37", "1.66037, 18.7815, 2.21275, 0.37", "2.18877, 19.2751, 2.61934, 0.37", "2.81748, 20.0069, 3.21357, 0.22", "2.97067, 20.2844, 3.44638, 0.22", "2.98917, 20.6124, 3.75978, 0.22", "2.87356, 20.8081, 4.0028, 0.22", "2.62816, 21.1201, 4.3751, 0.22", "2.19643, 21.6403, 5.00661, 0.22", "1.92584, 21.9751, 5.42176, 0.22", "1.50659, 22.5931, 6.1569, 0.66", "1.1346, 23.3249, 6.9971, 1.03", "0.767582, 24.2505, 8.09066, 0.22", "0.573602, 24.8911, 8.9119, 0.22", "0.491137, 25.3413, 9.56113, 0.88", "0.455744, 25.8033, 10.3069, 1.47", "0.486718, 26.526, 11.6433, 0.15", "0.566125, 27.1031, 12.7353, 0.15", "0.667918, 27.6963, 13.8063, 0.15", "0.697358, 28.273, 14.7409, 0.15", "0.637747, 28.8486, 15.6352, 0.15", "0.413807, 29.5349, 16.6558, 0.15", "-0.193521, 30.5912, 18.0418, 0.96", "-0.628162, 31.1877, 18.7424, 2.06", "-1.47519, 32.1447, 19.7246, 0.22", "-1.8377, 32.5364, 20.081, 0.22", "-2.20093, 32.8905, 20.4042, 0.22", "-2.76547, 33.3733, 20.9233, 0.22", "-3.39587, 33.8516, 21.6291, 0.22", "-3.79398, 34.1519, 22.1192, 1.33", "-4.33392, 34.7466, 23.0083, 2.95" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "0.473163, 17.6085, 1.45457, 1.25", "-0.0163791, 18.736, 1.35064, 1.25", "-0.604514, 20.194, 1.31859, 0.81", "-1.03022, 21.4397, 1.40717, 0.81", "-1.35494, 22.6419, 1.5822, 1.11", "-1.56413, 23.7598, 1.81435, 1.4", "-1.64239, 24.7155, 2.06477, 0.59", "-1.54786, 25.6266, 2.457, 0.59", "-1.19806, 26.6988, 3.08199, 0.52", "-0.865571, 27.3417, 3.51371, 0.59", "-0.467868, 27.989, 3.98102, 0.59", "0.056193, 28.8401, 4.61364, 0.44", "0.326767, 29.3664, 4.9962, 0.44", "0.394227, 29.6664, 5.17474, 0.44", "0.334351, 30.2044, 5.45328, 0.52", "0.080974, 31.0191, 5.90164, 0.66", "-0.198373, 31.6904, 6.29385, 0.29", "-0.422437, 32.184, 6.61247, 0.29", "-0.666011, 32.819, 7.02729, 0.37", "-0.926038, 33.6422, 7.55329, 0.88", "-1.16964, 34.4931, 8.08885, 1.62", "-1.36355, 35.2792, 8.57065, 2.43", "-1.54382, 36.1703, 9.10456, 2.43", "-1.78038, 37.6569, 9.96854, 0.22", "-1.85992, 38.3578, 10.3663, 0.52", "-1.91581, 39.0654, 10.7318, 0.22", "-1.93302, 39.4409, 10.8935, 0.22", "-1.94094, 39.9225, 11.0653, 0.22", "-1.94088, 40.5086, 11.2121, 0.22", "-1.94314, 40.9002, 11.2845, 0.22", "-1.94959, 41.1572, 11.321, 0.22", "-2.0153, 42.074, 11.3877, 0.37", "-2.10887, 42.8538, 11.3969, 0.37", "-2.22604, 43.5985, 11.3657, 0.52", "-2.35058, 44.3517, 11.3097, 0.96", "-2.48156, 45.2533, 11.2059, 0.96", "-2.62739, 46.6304, 10.9685, 0.44", "-2.64781, 47.5271, 10.7595, 0.44", "-2.63856, 48.4575, 10.5037, 1.47", "-2.61575, 49.4281, 10.2066, 2.8", "-2.59261, 50.3244, 9.90246, 3.61", "-2.56999, 51.254, 9.54844, 3.02", "-2.51023, 53.4294, 8.62109, 0.22", "-2.50109, 54.0938, 8.31419, 0.29", "-2.49849, 54.4551, 8.14353, 0.29", "-2.50748, 55.1604, 7.79403, 0.22", "-2.54003, 56.0064, 7.36968, 0.52", "-2.58728, 56.7107, 7.01038, 1.33", "-2.67049, 57.5934, 6.49289, 2.43", "-2.66142, 58.4102, 6.00827, 2.43" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-8.31466, -16.7881, -14.1285, 0.44", "-10.2549, -17.7759, -15.4784, 0.44", "-10.3573, -18.1855, -15.8129, 0.44", "-10.4217, -18.6231, -16.1772, 0.44", "-10.5264, -19.0877, -16.5849, 0.44", "-10.7053, -19.6163, -17.0912, 0.59", "-11.0176, -20.3243, -17.8595, 0.74", "-11.2078, -20.815, -18.4517, 1.11", "-11.4693, -21.3495, -19.2114, 1.47", "-11.7823, -21.8183, -20.029, 1.47", "-12.303, -22.3512, -21.2314, 0.59", "-12.7443, -22.6101, -22.1426, 0.52", "-13.0818, -22.6715, -22.7794, 0.52", "-13.4785, -22.635, -23.439, 0.44", "-13.9399, -22.5129, -24.0437, 0.44", "-14.195, -22.4307, -24.3174, 0.44", "-14.8596, -22.2396, -24.8829, 0.96", "-15.502, -22.0842, -25.3647, 0.96", "-16.2721, -21.9438, -25.8892, 1.4", "-17.2745, -21.8176, -26.5258, 2.36", "-18.1022, -21.7559, -27.0239, 3.32", "-19.072, -21.7027, -27.6221, 3.61" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-8.31466, -16.7881, -14.1285, 0.29", "-7.88607, -18.8877, -15.0225, 0.29", "-7.69662, -19.6021, -15.3457, 0.29", "-7.44636, -20.5363, -15.7938, 0.29", "-7.25668, -21.3134, -16.2091, 0.81", "-7.07145, -22.1468, -16.6964, 1.11", "-6.84877, -23.3429, -17.4837, 0.22", "-6.64831, -24.2058, -18.1891, 0.22", "-6.59584, -24.6976, -18.6692, 0.22", "-6.60545, -25.3651, -19.4121, 0.22", "-6.59545, -25.7392, -19.7321, 0.37", "-6.54061, -26.4632, -20.2673, 0.37", "-6.46432, -27.0555, -20.6376, 0.81", "-6.31687, -27.9172, -21.0832, 1.7", "-6.1073, -29.1261, -21.669, 2.29", "-5.63239, -31.7645, -22.8534, 0.29", "-5.45927, -32.6639, -23.213, 0.96", "-5.33036, -33.268, -23.4248, 0.96", "-4.98483, -34.6705, -23.8714, 0.15", "-4.71542, -35.5644, -24.1, 0.15", "-4.51163, -36.1661, -24.2282, 0.59", "-4.03896, -37.3203, -24.4211, 0.29", "-3.70046, -38.057, -24.5022, 1.4", "-3.1584, -39.159, -24.5858, 2.73", "-1.82633, -41.7096, -24.6807, 0.15", "-1.61776, -42.0994, -24.6878, 0.74", "-1.23585, -42.8056, -24.718, 0.74", "-0.621412, -43.886, -24.7967, 0.15", "-0.0565747, -44.8593, -24.8843, 0.15", "0.421341, -45.707, -24.9762, 0.15", "0.834268, -46.4625, -25.1016, 1.25", "1.39832, -47.5961, -25.3592, 0.22", "1.70696, -48.3739, -25.5937, 0.22", "1.80685, -48.7779, -25.7348, 0.22", "1.85532, -49.366, -25.9271, 0.22", "1.83799, -50.4443, -26.2426, 0.44", "1.76247, -51.4639, -26.5084, 1.62", "1.66463, -52.5586, -26.7726, 3.02", "1.56421, -53.8827, -27.077, 3.02", "1.41181, -56.8435, -27.7613, 0.29", "1.38822, -57.9306, -28.0028, 0.81", "1.39786, -58.8767, -28.1937, 1.03", "1.44086, -59.8594, -28.3861, 0.37", "1.49515, -60.6212, -28.5123, 1.18", "1.66762, -62.157, -28.737, 0.22", "1.77816, -62.7418, -28.8066, 0.74", "1.90375, -63.221, -28.8425, 0.74", "2.07598, -63.7325, -28.8493, 0.15", "2.57851, -65.1184, -28.7701, 0.44", "2.73237, -65.4631, -28.7325, 0.44", "3.27415, -66.5169, -28.591, 0.22", "3.59532, -67.136, -28.528, 1.11", "3.83258, -67.6615, -28.4929, 1.62", "4.18201, -68.5403, -28.4591, 1.62", "4.82586, -70.5622, -28.4922, 0.22", "5.03346, -71.5898, -28.5185, 0.96", "5.0739, -72.6597, -28.553, 1.18", "4.87218, -74.5583, -28.654, 0.15", "4.76007, -75.1957, -28.6966, 0.22", "4.32894, -76.6683, -28.8332, 0.07", "3.98547, -77.3176, -28.9247, 0.22", "3.05324, -78.5983, -29.1383, 0.07", "2.62579, -79.027, -29.2259, 0.15", "3.5324, -90.259, -32.383, 0.15", "2.70358, -101.595, -35.1556, 0.15", "4.48159, -112.89, -37.6348, 0.15", "7.21313, -123.8, -40.9151, 0.15", "9.93832, -134.297, -45.3988, 0.15" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-2.77488, -30.9328, 5.752, 1.99", "-3.14751, -32.2935, 5.73157, 1.99", "-3.58818, -34.1794, 5.71048, 0.59", "-3.80104, -35.256, 5.70116, 0.59", "-4.00413, -36.5478, 5.7064, 0.59", "-4.07429, -37.181, 5.71465, 1.11", "-4.14595, -38.3337, 5.75326, 2.58", "-4.1169, -38.9003, 5.78323, 2.88", "-4.05035, -39.3905, 5.82337, 2.65", "-3.94849, -40.1417, 5.91468, 1.55", "-3.81673, -41.198, 6.08429, 0.74", "-3.73045, -42.2049, 6.26027, 0.44", "-3.70507, -43.086, 6.42233, 0.29", "-3.72798, -43.7678, 6.55592, 0.29", "-3.80531, -44.6371, 6.74368, 0.29", "-3.82947, -44.9123, 6.80566, 0.29", "-3.88025, -45.4204, 6.92403, 0.44", "-3.9415, -45.9231, 7.03337, 1.11", "-4.01162, -46.4914, 7.16471, 2.36", "-4.12937, -47.6737, 7.43526, 2.73", "-4.26754, -49.8776, 7.93695, 0.44", "-4.28779, -50.3119, 8.04496, 0.44", "-4.32242, -51.1496, 8.26955, 0.59", "-4.3476, -51.9556, 8.50003, 0.29", "-4.35951, -52.4599, 8.64753, 0.29", "-4.34065, -52.9302, 8.77856, 0.29", "-4.28152, -53.4183, 8.93526, 0.29", "-4.19646, -53.7956, 9.07333, 0.88", "-4.0265, -54.3243, 9.28681, 1.84", "-3.8303, -54.8284, 9.49934, 2.14", "-3.23995, -56.2683, 10.1465, 0.44", "-2.98255, -56.9129, 10.4446, 0.66", "-2.67715, -57.6773, 10.8278, 0.29", "-2.56327, -57.9516, 10.9878, 0.29", "-2.45113, -58.2359, 11.1885, 0.29", "-2.39809, -58.4172, 11.349, 0.29", "-2.42321, -58.6094, 11.5306, 0.29", "-2.55548, -59.0288, 11.7421, 0.29", "-2.65635, -59.3484, 11.8401, 0.29", "-2.76128, -59.729, 11.9317, 0.29", "-2.91706, -60.337, 12.0561, 1.18", "-3.05757, -60.9604, 12.1936, 2.43", "-3.19216, -61.6837, 12.3682, 2.88", "-3.35215, -62.803, 12.6656, 1.55", "-3.48197, -64.2262, 13.1057, 0.52", "-3.5232, -65.1272, 13.4339, 0.29", "-3.53763, -65.8466, 13.7337, 0.29", "-3.53191, -66.4325, 14.0034, 0.66", "-3.51468, -66.9081, 14.2355, 0.96", "-3.47344, -67.5338, 14.5143, 0.22", "-3.4317, -68.1249, 14.7002, 0.22", "-3.39886, -68.7595, 14.7991, 0.29", "-3.36959, -69.3401, 14.8247, 0.59", "-3.33488, -70.2644, 14.8144, 1.33", "-3.30457, -71.3049, 14.7706, 2.21", "-3.27809, -72.1344, 14.7212, 3.24", "-3.20394, -73.5921, 14.6254, 1.77", "-3.12569, -74.8099, 14.5565, 0.44", "-3.06945, -75.6708, 14.5178, 0.37", "-3.01566, -76.6449, 14.4889, 0.37", "-2.98683, -77.2787, 14.4833, 0.88", "-2.98078, -77.5675, 14.4829, 1.77", "-3.00191, -78.4928, 14.4782, 3.1", "-3.13453, -79.9255, 14.4646, 1.33", "-3.30358, -80.9061, 14.451, 0.74", "-3.60404, -82.0507, 14.43, 0.22", "-3.7627, -82.517, 14.4197, 0.22", "-3.89669, -82.8525, 14.4124, 0.52", "-4.27827, -83.6508, 14.3958, 0.81", "-4.75292, -84.5131, 14.4113, 0.29", "-4.89713, -84.7741, 14.4235, 0.37", "-5.20435, -85.3921, 14.4632, 0.37", "-5.50222, -86.1342, 14.5757, 0.44", "-5.77705, -86.9889, 14.7729, 0.81", "-6.0201, -88.0061, 15.077, 0.81", "-6.16102, -88.8016, 15.3519, 0.81", "-6.33319, -89.8194, 15.733, 0.37", "-6.54548, -91.0466, 16.2512, 0.37", "-6.6457, -91.6661, 16.5507, 1.18", "-6.71194, -92.2659, 16.8836, 2.8", "-6.73087, -92.776, 17.1995, 3.32" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-2.77488, -30.9328, 5.752, 0.66", "-1.54971, -31.9234, 6.26697, 0.66", "-0.762262, -32.655, 6.60003, 0.44", "-0.224015, -33.238, 6.8282, 0.88", "0.131984, -33.6893, 6.98037, 0.44", "0.413342, -34.1087, 7.09515, 0.22", "0.674923, -34.5791, 7.20265, 0.22", "0.81108, -35.0738, 7.2531, 0.22", "0.885018, -35.5328, 7.2872, 0.22", "0.91251, -35.946, 7.32843, 0.59", "0.92734, -36.5498, 7.4252, 1.7", "0.92504, -37.3447, 7.58864, 1.47", "0.91596, -38.7193, 7.92329, 0.44", "0.9327, -39.4563, 8.11913, 0.29", "0.94621, -39.9253, 8.24841, 0.22", "0.96943, -40.4535, 8.38545, 0.22", "0.99377, -40.827, 8.48204, 0.96", "1.06249, -41.5484, 8.64723, 2.51", "1.17321, -42.3529, 8.82275, 3.39", "1.31006, -43.1144, 8.96712, 3.1", "1.55436, -44.1351, 9.16269, 1.03", "1.82433, -45.1131, 9.35569, 0.29", "2.04239, -45.81, 9.51441, 0.22", "2.19667, -46.2617, 9.63183, 0.22", "2.28587, -46.5192, 9.7088, 0.22", "2.42255, -46.895, 9.82952, 0.29", "2.56856, -47.3131, 9.95632, 0.22", "2.70703, -47.8181, 10.0387, 0.29", "2.76888, -48.0831, 10.0598, 0.81", "2.93592, -48.8659, 10.0687, 1.55", "3.06593, -49.5063, 10.0492, 2.29", "3.18299, -50.0708, 10.0162, 2.06", "3.46273, -51.2573, 9.94614, 0.22", "3.57906, -51.6527, 9.93655, 0.22", "3.68449, -51.9395, 9.94776, 0.22", "3.74179, -52.0668, 9.96364, 0.22", "3.94353, -52.4593, 10.0516, 0.81", "4.26028, -53.0418, 10.2199, 1.84", "4.56958, -53.6344, 10.4306, 2.8", "4.87972, -54.3248, 10.7083, 1.77", "5.11157, -54.9626, 10.9718, 0.81", "5.36544, -55.7852, 11.3183, 0.22", "5.49727, -56.2605, 11.5145, 0.29", "5.60637, -56.73, 11.7079, 0.29", "5.73427, -57.5614, 12.0574, 0.59", "5.79114, -58.3232, 12.4, 1.47", "5.79044, -58.7097, 12.5927, 1.92" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "24.0198, 12.1715, 25.7318, 0.22", "25.0477, 12.5875, 27.2166, 0.22", "25.741, 12.8681, 28.2182, 0.22", "26.7111, 13.2607, 29.6196, 1.47", "27.0895, 13.4138, 30.1663, 1.25" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "24.0198, 12.1715, 25.7318, 0.29", "25.7163, 11.3331, 26.6538, 0.29", "26.7352, 10.737, 27.1798, 0.15", "27.1516, 10.4946, 27.3726, 0.22", "27.9873, 10.0177, 27.7249, 0.22", "28.9823, 9.43021, 28.1392, 0.22", "29.7575, 8.98413, 28.4357, 0.22", "30.822, 8.3499, 28.797, 0.22", "31.8783, 7.71935, 29.1194, 0.22", "32.9745, 7.11101, 29.4153, 0.22", "34.322, 6.46444, 29.7003, 0.15", "35.5459, 5.96285, 29.8842, 0.15", "36.1468, 5.75104, 29.9532, 0.15", "36.8768, 5.49407, 30.0155, 0.66", "37.6112, 5.22731, 30.0561, 1.25", "38.8149, 4.80394, 30.0798, 0.15", "39.4235, 4.59943, 30.0787, 0.15", "40.427, 4.26963, 30.06, 0.88", "41.8085, 3.83014, 30.0145, 0.15", "42.3837, 3.65717, 29.9869, 0.44", "43.1354, 3.43265, 29.9607, 1.18", "44.676, 2.97177, 29.9391, 0.07", "45.8091, 2.65954, 29.9431, 0.07", "46.6973, 2.41359, 29.9786, 1.47", "47.2108, 2.28111, 30.0219, 1.47", "48.8838, 1.82753, 30.2116, 0.15", "49.6098, 1.6032, 30.3326, 1.11", "50.2057, 1.38991, 30.4628, 1.47", "52.0408, 0.644403, 30.949, 0.07", "53.0199, 0.17528, 31.2376, 0.15", "53.7224, -0.209904, 31.4628, 0.22", "54.695, -0.812075, 31.8275, 0.07", "55.2612, -1.18115, 32.0683, 1.18", "55.9208, -1.60812, 32.3696, 1.77", "57.4327, -2.57008, 33.0747, 0.07", "58.2805, -3.00772, 33.4269, 0.15", "59.7995, -3.57039, 34.0038, 0.74", "60.9762, -3.82441, 34.3992, 0.15", "61.7084, -3.86506, 34.624, 0.81", "62.4491, -3.79912, 34.8325, 2.14", "65.0746, -3.17448, 35.4924, 0.15", "65.9773, -2.85212, 35.7188, 0.15", "66.6871, -2.5258, 35.9072, 0.37", "67.967, -1.84359, 36.3313, 0.07", "68.4711, -1.54642, 36.559, 0.88", "68.9145, -1.24446, 36.8228, 1.25", "70.0195, -0.330472, 37.7866, 0.07", "70.541, 0.16289, 38.3789, 1.11", "70.9696, 0.621336, 39.0156, 1.55", "71.5284, 1.20307, 40.027, 0.07", "71.7921, 1.45161, 40.5521, 0.74", "72.2732, 1.87793, 41.6208, 0.15", "72.6538, 2.20765, 42.5582, 0.81", "73.0673, 2.542, 43.5984, 1.25", "73.7511, 3.02477, 45.2937, 0.22", "74.0537, 3.19672, 46.0302, 0.22", "74.225, 3.25864, 46.4045, 0.22", "74.6438, 3.33008, 47.1825, 0.15", "75.0732, 3.34555, 47.897, 0.81", "76.0723, 3.26385, 49.3059, 0.22", "76.9018, 3.15981, 50.3368, 0.22", "77.6479, 3.02072, 51.1297, 1.62", "78.4987, 2.81844, 51.9306, 0.15", "79.1347, 2.64977, 52.4639, 0.96", "80.7303, 2.2538, 53.5904, 0.07", "81.7718, 2.02682, 54.2365, 0.59", "83.1583, 1.78823, 55.0698, 0.07", "84.1536, 1.65823, 55.6834, 0.07", "84.7806, 1.59471, 56.0759, 1.25", "86.7043, 1.50891, 57.2696, 0.07", "87.6932, 1.53968, 57.8549, 0.81", "89.2506, 1.70268, 58.7669, 0.07", "89.7245, 1.8004, 59.0581, 0.07", "90.2995, 1.97158, 59.4312, 1.03", "91.4998, 2.39071, 60.2467, 0.07", "92.5904, 2.88283, 61.0374, 0.07", "93.7525, 3.48787, 61.8617, 0.07", "94.4619, 3.93207, 62.3559, 0.66", "94.9534, 4.25662, 62.7129, 1.03" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.42458, 39.3425, 0.0, 0.181547", "13.1052, 53.8839, 0.0, 0.181547", "16.7858, 68.4253, 0.0, 0.181547" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-4.33392, 34.7466, 23.0083, 0.22", "-5.78842, 35.2512, 24.7946, 0.22", "-6.34213, 35.5614, 25.4763, 0.22", "-6.75383, 35.9486, 26.1088, 0.15", "-7.0695, 36.3592, 26.7294, 0.15", "-7.28575, 36.6773, 27.1599, 0.15", "-7.61978, 37.3444, 27.9482, 0.66", "-7.87064, 37.9616, 28.6134, 0.22", "-8.27635, 38.9121, 29.6688, 0.22", "-8.59353, 39.6514, 30.5081, 1.62", "-8.96337, 40.5497, 31.5704, 3.1", "-9.94448, 42.7935, 34.4031, 0.29", "-10.3543, 43.6364, 35.5573, 0.22", "-10.5589, 44.0036, 36.0744, 0.22", "-10.6169, 44.1025, 36.2088, 0.22", "-10.8674, 44.529, 36.794, 0.22", "-11.1307, 44.9671, 37.4592, 0.22", "-11.5623, 45.4684, 38.3664, 0.22", "-11.9973, 46.0599, 39.3172, 0.88", "-12.2391, 46.4056, 39.8159, 1.11" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-4.33392, 34.7466, 23.0083, 0.22", "-2.3972, 35.4665, 23.1343, 0.22", "-1.50008, 35.7999, 23.1927, 0.37", "-0.720705, 36.0896, 23.2434, 0.88" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-2.66142, 58.4102, 6.00827, 0.15", "-3.20023, 59.619, 6.08506, 0.15", "-3.4746, 60.2586, 6.15735, 0.81", "-3.69361, 60.7487, 6.19263, 1.18", "-4.15765, 61.7634, 6.24738, 0.22", "-4.3977, 62.3152, 6.26895, 0.81", "-4.53856, 62.6707, 6.28892, 0.81", "-4.77562, 63.4525, 6.38319, 0.07", "-4.9771, 64.2915, 6.48998, 0.07", "-5.06097, 64.7352, 6.53948, 0.96", "-5.17148, 65.4282, 6.59907, 1.92", "-5.32582, 66.3615, 6.69354, 0.22", "-5.3931, 66.861, 6.75978, 0.22", "-5.44077, 67.3138, 6.83389, 0.22", "-5.4761, 67.7403, 6.92518, 0.81", "-5.52568, 68.2514, 7.03919, 1.11", "-5.67977, 69.3643, 7.28708, 0.15", "-5.81804, 70.1857, 7.44494, 0.15", "-5.88107, 70.5358, 7.50563, 0.74", "-5.98878, 71.2594, 7.61594, 1.92", "-6.0265, 71.5977, 7.65767, 2.88", "-6.07851, 72.3386, 7.74691, 1.84", "-6.10997, 73.4998, 7.88686, 0.22", "-6.11912, 74.2555, 7.97807, 0.59", "-6.11279, 74.7685, 8.03448, 0.59", "-6.09198, 75.4288, 8.08895, 0.22", "-6.0562, 76.1641, 8.12384, 0.22", "-6.03008, 76.7046, 8.12191, 0.22", "-6.05338, 77.2642, 8.0862, 0.15", "-6.16772, 77.9654, 7.99467, 0.15", "-6.31885, 78.5187, 7.88099, 0.88", "-6.5624, 79.2237, 7.68517, 1.77", "-6.76492, 79.7473, 7.51742, 1.77", "-7.22832, 80.7738, 7.19116, 0.15", "-7.47621, 81.2732, 7.04303, 0.37", "-7.70442, 81.7288, 6.92774, 0.96", "-7.96411, 82.2825, 6.83437, 1.77", "-8.34318, 83.1878, 6.75556, 0.29", "-8.66897, 84.1243, 6.72999, 0.15", "-8.73187, 84.3736, 6.73331, 0.52", "-8.86485, 84.9205, 6.75657, 1.18", "-9.08905, 85.8278, 6.82345, 0.15", "-9.2232, 86.3803, 6.87461, 0.15", "-9.3197, 86.8761, 6.92944, 1.03", "-9.41967, 87.8332, 7.05436, 2.8" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-2.66142, 58.4102, 6.00827, 0.22", "-2.38904, 59.2965, 6.44975, 0.22", "-2.13867, 60.1462, 6.89064, 0.22", "-1.94259, 60.7988, 7.22553, 0.96", "-1.78314, 61.276, 7.46588, 1.18", "-1.46132, 62.122, 7.87312, 0.15", "-1.23539, 62.6299, 8.11547, 0.15", "-1.05102, 62.9795, 8.26642, 0.15", "-0.837402, 63.3771, 8.40225, 0.15", "-0.621829, 63.8349, 8.50585, 0.15", "-0.396337, 64.378, 8.57287, 1.33", "-0.130018, 65.0835, 8.58913, 2.73", "0.0717002, 65.7388, 8.57051, 3.1", "0.469946, 67.6259, 8.44246, 0.22", "0.587229, 68.4775, 8.36625, 0.15", "0.633229, 69.0653, 8.30659, 0.52", "0.657777, 69.6095, 8.24696, 0.74", "0.684748, 70.7274, 8.11598, 0.22", "0.70197, 71.3811, 8.05078, 1.18", "0.729191, 71.9723, 8.01487, 2.58", "0.834422, 73.4358, 8.00532, 0.22", "0.885344, 74.0452, 8.02125, 0.22", "0.93675, 74.6855, 8.04918, 0.81", "1.01345, 75.7282, 8.10788, 2.51", "1.11272, 77.5212, 8.22723, 0.22", "1.12413, 78.2869, 8.28323, 0.29", "1.08513, 79.1343, 8.34792, 0.15", "1.00838, 79.9941, 8.41033, 0.15", "0.91395, 80.6706, 8.45516, 1.03", "0.792116, 81.2518, 8.48698, 1.99", "0.58978, 81.8904, 8.5101, 1.99", "0.0249182, 83.3112, 8.53599, 0.15", "-0.251628, 83.894, 8.53629, 0.15", "-0.51874, 84.3964, 8.52039, 0.15", "-0.740927, 84.7684, 8.49712, 0.44", "-1.39836, 85.7191, 8.41305, 0.15", "-1.96039, 86.4213, 8.33291, 1.47", "-2.47991, 86.9638, 8.25971, 2.51", "-3.36747, 87.7978, 8.14485, 0.37", "-3.86895, 88.2353, 8.07765, 0.22", "-4.32586, 88.5938, 8.01257, 0.07", "-4.76641, 88.891, 7.96002, 0.29", "-5.60356, 89.377, 7.89023, 0.07", "-6.31778, 89.7657, 7.8492, 0.44", "-7.31337, 90.2732, 7.80482, 0.07", "-8.13332, 90.6858, 7.75635, 0.15", "-8.68205, 90.9547, 7.68482, 0.74", "-9.41104, 91.296, 7.5784, 1.84", "-10.5655, 91.7928, 7.38775, 0.15", "-11.1943, 92.0478, 7.27394, 0.59", "-11.6954, 92.2426, 7.17584, 0.29", "-12.8028, 92.6941, 6.89524, 1.03" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-19.072, -21.7027, -27.6221, 1.47", "-20.8649, -21.9033, -28.426, 1.47", "-22.6649, -22.2786, -29.5121, 0.52", "-23.5026, -22.5571, -30.1197, 0.52", "-24.3073, -22.8246, -30.7032, 1.11", "-25.1977, -23.1205, -31.3489, 2.21", "-26.0168, -23.3928, -31.9429, 1.11", "-27.347, -24.0821, -33.1749, 0.44", "-28.0927, -24.6803, -34.0296, 1.47", "-38.476, -27.2037, -38.6482, 1.47" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-19.072, -21.7027, -27.6221, 0.22", "-19.4199, -23.698, -28.0583, 0.22", "-19.5461, -24.3557, -28.2173, 0.22", "-19.7044, -25.1477, -28.4024, 0.96", "-19.9174, -26.2996, -28.6922, 0.22", "-20.0388, -27.0963, -28.914, 0.22", "-20.1343, -27.7227, -29.0883, 0.81", "-20.2318, -28.3718, -29.2902, 1.92", "-20.3448, -29.1521, -29.5291, 0.81", "-20.4565, -30.1524, -29.8744, 0.15", "-20.5041, -30.9188, -30.1777, 0.66", "-20.851, -39.266, -33.7187, 0.66", "-22.6636, -47.8137, -36.0262, 0.66", "-24.4425, -56.1259, -39.1419, 0.66", "-27.6266, -64.2495, -41.4942, 0.66", "-31.5153, -71.9718, -44.1562, 0.66", "-34.2401, -80.5019, -45.2031, 0.66", "-36.4912, -89.1899, -44.4968, 0.66", "-39.6239, -97.4123, -42.593, 0.66" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-6.73087, -92.776, 17.1995, 0.37", "-5.83217, -93.8899, 17.473, 0.37", "-5.37621, -94.6208, 17.6728, 0.22", "-5.16831, -95.0508, 17.8052, 0.22", "-4.96445, -95.5805, 17.9821, 0.22", "-4.81037, -96.065, 18.143, 0.29", "-4.66684, -96.6757, 18.3295, 0.29", "-4.65666, -97.1931, 18.4813, 0.22", "-4.68865, -97.6911, 18.6241, 0.81", "-4.72973, -98.1669, 18.7617, 1.77", "-4.77037, -98.652, 18.8965, 2.43", "-4.81759, -99.6208, 19.1266, 0.96", "-4.84357, -100.981, 19.4244, 0.22", "-4.86258, -101.512, 19.5388, 1.18", "-4.90861, -102.113, 19.6698, 1.7", "-4.93849, -102.368, 19.7274, 1.7", "-5.06842, -103.194, 19.943, 0.74", "-5.21721, -103.994, 20.1696, 0.29", "-5.37188, -104.751, 20.379, 0.29", "-5.47348, -105.323, 20.5417, 0.29", "-5.56906, -105.791, 20.6792, 0.66", "-5.6843, -106.321, 20.847, 1.47", "-5.78881, -106.794, 21.0119, 2.73", "-5.85204, -107.232, 21.1598, 2.88", "-5.82623, -108.369, 21.5213, 1.84" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-6.73087, -92.776, 17.1995, 0.22", "-8.20699, -93.4679, 17.2365, 0.22", "-8.98069, -93.8457, 17.2271, 0.22", "-9.32563, -94.0456, 17.2113, 0.22", "-9.58609, -94.2162, 17.1945, 0.22", "-9.9923, -94.4986, 17.1765, 0.29", "-10.3016, -94.7147, 17.1645, 0.96", "-10.9463, -95.1837, 17.0945, 1.84", "-11.8575, -95.8623, 16.9413, 0.22", "-12.3982, -96.2555, 16.8389, 0.22", "-12.9989, -96.6446, 16.716, 0.96", "-13.7366, -97.0326, 16.5683, 0.22", "-14.4693, -97.2792, 16.4152, 0.22", "-14.7581, -97.3255, 16.3528, 0.22", "-15.3791, -97.3528, 16.2252, 0.22", "-16.1322, -97.3735, 16.0809, 0.29", "-16.6569, -97.408, 15.9882, 1.25", "-17.593, -97.5225, 15.8602, 2.88", "-17.9874, -97.5854, 15.8187, 2.73", "-19.5782, -97.948, 15.6494, 0.29", "-20.198, -98.1463, 15.5823, 0.66", "-21.0216, -98.4591, 15.4882, 0.29", "-21.5052, -98.652, 15.4185, 0.22", "-22.1445, -98.8988, 15.3174, 0.22", "-22.803, -99.1226, 15.1935, 0.22", "-23.8218, -99.406, 14.9666, 0.22", "-24.2736, -99.487, 14.8446, 0.37", "-25.0496, -99.5866, 14.6155, 0.37", "-25.7611, -99.6509, 14.3867, 0.66", "-26.2308, -99.6758, 14.2257, 1.62", "-26.7783, -99.6405, 14.0213, 2.51", "-27.7218, -99.46, 13.6336, 2.73" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "5.79044, -58.7097, 12.5927, 3.24", "5.98394, -59.8521, 12.6149, 3.24", "6.17601, -60.8361, 12.6318, 3.24", "6.61151, -62.8428, 12.6637, 0.22", "6.91254, -64.1221, 12.6822, 0.29", "7.08257, -64.8039, 12.6912, 0.22", "7.30066, -65.6317, 12.701, 0.22", "7.45449, -66.147, 12.6964, 0.22", "7.57985, -66.5351, 12.6944, 0.22", "7.78492, -67.1571, 12.6922, 0.74", "7.90923, -67.5869, 12.6893, 0.74", "8.04251, -68.3277, 12.6965, 0.22", "8.10127, -68.9835, 12.7201, 0.22", "8.17734, -69.8949, 12.7491, 0.22", "8.23965, -70.4902, 12.737, 0.22", "8.35183, -71.3196, 12.6904, 0.22", "8.51518, -72.1756, 12.6209, 1.33", "8.77963, -73.2787, 12.5009, 3.02", "9.21649, -74.6868, 12.3152, 0.88", "9.6945, -76.0292, 12.1457, 0.22", "9.95062, -76.7082, 12.0679, 0.22", "10.3056, -77.6271, 11.978, 0.22", "10.5125, -78.189, 11.9414, 1.18", "10.8866, -79.3098, 11.9457, 2.06", "11.3287, -80.8934, 12.1095, 0.22", "11.4734, -81.6476, 12.2612, 0.52", "11.5558, -82.2976, 12.4244, 0.52", "11.6745, -83.5318, 12.7843, 0.22", "11.7209, -84.073, 12.961, 0.22", "11.8104, -85.2866, 13.3931, 1.99", "11.999, -87.3537, 14.1451, 0.29", "12.0554, -88.025, 14.3857, 0.22", "12.1474, -89.1573, 14.7787, 0.22", "12.2017, -89.7314, 14.9606, 1.03", "12.2697, -90.4077, 15.1557, 2.14", "12.3431, -91.0453, 15.327, 2.06", "12.535, -92.6292, 15.7332, 0.22", "12.5972, -93.3319, 15.9022, 0.66", "12.6857, -94.7993, 16.2317, 0.22", "12.7336, -95.7457, 16.4258, 0.22", "12.7707, -96.3654, 16.5278, 0.66", "12.8382, -97.2937, 16.652, 0.22", "12.9143, -98.1281, 16.7411, 1.55", "12.9761, -98.8164, 16.8025, 2.8", "13.042, -99.5092, 16.8478, 2.58", "13.3319, -101.835, 16.9185, 0.22", "13.4025, -102.558, 16.9405, 0.22", "13.4507, -103.181, 16.9495, 0.59", "13.4894, -103.742, 16.9616, 0.29", "13.5292, -104.467, 16.98, 1.03", "13.5703, -105.336, 16.9931, 2.06", "13.6054, -107.089, 16.9851, 0.15", "13.618, -107.53, 16.9717, 0.15", "13.6681, -108.502, 16.9175, 0.29", "13.7106, -109.163, 16.8749, 0.15", "13.7652, -109.916, 16.8207, 0.15", "13.8246, -110.553, 16.7862, 0.96", "13.9056, -111.217, 16.7502, 2.06", "13.999, -112.13, 16.7349, 2.14", "14.1574, -114.29, 16.7616, 0.22", "14.1776, -114.99, 16.8114, 0.22", "14.1776, -115.96, 16.9316, 0.22", "14.1724, -116.246, 16.981, 0.59", "14.1415, -116.96, 17.1309, 1.4", "14.1035, -117.708, 17.3069, 0.66", "14.0365, -119.245, 17.7039, 0.22", "13.9791, -119.995, 17.8756, 0.22", "13.925, -120.561, 17.9842, 0.22", "13.8732, -121.176, 18.093, 1.03", "13.8265, -122.102, 18.2339, 2.21", "13.7978, -124.068, 18.5141, 0.15", "13.8319, -125.248, 18.6533, 0.15", "13.8529, -125.731, 18.7076, 0.81", "13.8863, -126.42, 18.7808, 1.33", "13.9348, -127.45, 18.8896, 0.22", "13.9811, -128.486, 18.9921, 0.22", "14.0146, -129.128, 19.0489, 0.88", "14.0453, -129.695, 19.1094, 0.66", "14.1093, -130.975, 19.2811, 0.15", "14.1625, -131.916, 19.4265, 0.15", "14.1913, -132.269, 19.4874, 0.74", "14.2731, -132.979, 19.6128, 1.18", "14.4867, -134.409, 19.8845, 0.22", "14.6549, -135.234, 20.063, 0.22", "14.8004, -135.747, 20.1745, 0.22", "14.9756, -136.266, 20.2908, 0.22", "15.2097, -136.912, 20.43, 0.22", "15.4598, -137.627, 20.5717, 1.33", "15.7242, -138.457, 20.7198, 2.21", "16.1395, -139.936, 20.9518, 0.15", "16.3257, -140.542, 21.0558, 0.29", "16.427, -140.835, 21.1098, 0.29", "16.7869, -141.763, 21.2985, 0.15", "16.8911, -142.035, 21.3544, 0.15", "17.0998, -142.641, 21.4661, 0.66", "17.4389, -143.715, 21.6832, 0.15", "17.5632, -144.14, 21.7608, 0.15", "17.6617, -144.448, 21.8278, 0.15", "17.9092, -145.163, 22.0155, 0.15", "18.0587, -145.618, 22.1417, 0.37", "18.254, -146.276, 22.3194, 1.03", "18.4503, -146.98, 22.5076, 0.22", "18.7464, -147.969, 22.7733, 0.22", "19.0219, -148.813, 22.9955, 1.4", "19.2793, -149.549, 23.1777, 2.14", "19.5516, -150.347, 23.3665, 1.4", "20.0185, -151.863, 23.6894, 0.22", "20.1456, -152.339, 23.7784, 0.81", "20.2763, -152.942, 23.8731, 1.55", "20.4902, -154.114, 24.0418, 0.29", "20.6476, -155.146, 24.1895, 0.22", "20.7345, -155.848, 24.2823, 0.22", "20.7881, -156.562, 24.3527, 0.29", "20.8224, -157.378, 24.4352, 0.15", "20.8385, -158.001, 24.4966, 0.96", "20.8473, -158.431, 24.5339, 1.47", "20.8725, -159.073, 24.572, 1.47", "20.9636, -160.199, 24.6321, 0.22", "21.1025, -161.303, 24.6944, 0.22", "21.2092, -161.921, 24.7233, 0.88", "21.3887, -162.746, 24.7608, 0.88", "21.716, -164.032, 24.8276, 0.15", "21.987, -164.904, 24.8805, 0.15", "22.2134, -165.53, 24.92, 0.81", "22.5972, -166.532, 25.016, 0.15", "22.8442, -167.179, 25.1045, 0.81", "23.1325, -167.957, 25.2364, 0.52", "23.3642, -168.659, 25.3716, 1.62", "23.5548, -169.39, 25.5221, 1.62", "23.8515, -170.883, 25.8081, 0.22", "23.9799, -171.717, 25.9528, 0.22", "24.0404, -172.214, 26.0183, 0.74", "24.0944, -172.772, 26.0731, 0.29", "24.1506, -173.579, 26.1401, 1.47", "24.1933, -174.138, 26.18, 1.47", "24.2883, -175.457, 26.2363, 0.15", "24.3596, -176.099, 26.2963, 0.52", "24.4928, -176.996, 26.4114, 0.15", "24.6139, -177.671, 26.5146, 0.15", "24.6853, -178.046, 26.5775, 0.66", "24.8193, -178.732, 26.7015, 1.47", "25.1253, -180.257, 26.9854, 0.22", "25.3007, -181.09, 27.1254, 0.15", "25.4214, -181.633, 27.1916, 0.15", "25.5739, -182.324, 27.2631, 0.74", "25.7846, -183.367, 27.3535, 0.15", "25.9226, -184.057, 27.4033, 0.15", "26.1128, -185.173, 27.4623, 0.22", "26.2273, -185.912, 27.5123, 1.18", "26.3531, -186.777, 27.5829, 1.7", "26.621, -188.58, 27.7602, 0.22", "26.7281, -189.28, 27.8359, 0.22", "26.8386, -189.937, 27.9146, 0.15", "27.0061, -190.879, 28.0456, 0.15", "27.0846, -191.42, 28.1336, 0.44", "27.2622, -192.915, 28.3843, 0.15", "27.2995, -193.393, 28.4782, 0.88", "27.3265, -194.07, 28.6175, 1.7", "27.3403, -194.824, 28.7714, 1.4", "27.3319, -196.576, 29.1021, 0.15", "27.3269, -196.93, 29.1639, 0.22", "27.2943, -198.171, 29.3619, 0.07", "27.2837, -198.802, 29.4511, 1.33", "27.2787, -199.357, 29.5204, 1.33", "27.308, -200.374, 29.6356, 0.07", "27.3791, -201.118, 29.6982, 0.15", "27.4476, -201.615, 29.732, 0.15", "27.538, -202.114, 29.7569, 0.22", "27.7196, -203.065, 29.8021, 0.07", "27.7821, -203.413, 29.8178, 0.66", "27.8716, -203.974, 29.838, 0.29", "28.0672, -205.294, 29.8703, 0.15", "28.1241, -205.635, 29.8801, 0.22", "28.241, -206.333, 29.908, 0.07", "28.3438, -206.957, 29.9448, 0.74", "28.4854, -207.935, 30.027, 0.15", "28.5441, -208.415, 30.0774, 0.59", "28.6658, -209.711, 30.2218, 0.15", "28.7113, -210.261, 30.2966, 0.29", "28.7591, -210.949, 30.3876, 0.15", "28.7871, -211.504, 30.4584, 0.88", "28.8007, -211.986, 30.5152, 1.92", "28.8206, -214.082, 30.7367, 0.22", "28.8208, -215.157, 30.8321, 1.7", "28.8255, -217.521, 31.0123, 0.15", "28.8191, -218.522, 31.073, 0.15", "28.8077, -219.146, 31.1059, 0.81", "28.7682, -220.556, 31.1634, 0.22", "28.7464, -221.356, 31.1827, 1.25", "28.7387, -221.791, 31.1879, 1.84", "28.7283, -223.763, 31.2361, 0.15", "28.7369, -224.272, 31.2508, 0.29", "28.7836, -225.18, 31.3049, 0.07", "28.822, -225.742, 31.3513, 0.15", "28.9259, -227.075, 31.4908, 0.15", "28.9598, -227.432, 31.5346, 0.52", "29.0184, -227.941, 31.6056, 1.4", "29.1302, -229.408, 31.8431, 0.07", "29.1693, -230.454, 32.0281, 0.15", "29.1599, -230.938, 32.1267, 0.74", "29.133, -231.426, 32.2336, 1.92", "29.0815, -232.171, 32.4213, 1.92", "28.9369, -234.113, 32.9688, 0.15", "28.89, -234.794, 33.1998, 0.59", "28.86, -235.912, 33.6583, 0.07", "28.8622, -236.171, 33.7794, 0.15", "28.9049, -237.037, 34.2178, 0.15", "28.9592, -237.64, 34.5357, 0.37", "29.0704, -238.392, 34.9214, 0.96", "29.2191, -239.076, 35.2292, 1.47", "29.5488, -240.26, 35.7127, 0.15", "29.7514, -240.929, 35.9595, 0.15", "29.9133, -241.442, 36.1203, 1.11", "30.0815, -241.971, 36.2608, 1.7", "30.5615, -243.561, 36.5831, 0.15", "30.7248, -244.124, 36.6773, 0.81", "30.9217, -244.788, 36.7685, 1.03", "31.4445, -246.374, 36.9791, 0.15", "31.6618, -246.969, 37.0632, 0.22", "31.9513, -247.758, 37.1666, 0.07", "32.1317, -248.286, 37.2257, 0.88", "32.3353, -248.91, 37.2958, 1.62", "32.8285, -250.378, 37.4868, 0.15", "33.0996, -251.098, 37.5864, 1.33", "33.6413, -252.457, 37.7901, 0.07", "33.7967, -252.873, 37.859, 0.22", "34.229, -254.199, 38.1032, 0.07", "34.3787, -254.718, 38.2164, 0.96", "34.7226, -256.101, 38.5489, 0.15", "34.8794, -256.722, 38.7138, 1.11", "35.3918, -258.62, 39.257, 0.15", "35.6286, -259.449, 39.4816, 1.11", "35.8463, -260.2, 39.6658, 1.47", "36.3304, -261.988, 40.0606, 0.15", "36.5021, -262.623, 40.1796, 0.88", "36.7243, -263.394, 40.2839, 1.33", "37.2302, -265.114, 40.385, 0.15", "37.4755, -266.023, 40.3667, 0.96", "37.8647, -267.754, 40.2006, 0.15", "37.9669, -268.46, 40.0906, 0.15", "38.0177, -269.215, 39.963, 0.74", "37.9741, -270.367, 39.7615, 0.44", "37.8668, -271.153, 39.6209, 1.11", "37.741, -271.75, 39.5193, 1.7", "37.1858, -273.886, 39.1975, 0.15", "36.8599, -274.986, 39.0636, 1.33", "36.5222, -276.037, 38.9728, 0.15", "36.3845, -276.45, 38.9557, 0.74", "36.2164, -276.955, 38.9623, 1.4", "36.0003, -277.618, 38.9951, 0.74" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "5.79044, -58.7097, 12.5927, 1.03", "8.13185, -59.8197, 17.6409, 1.03", "8.65535, -60.0019, 18.6787, 1.03", "9.16963, -60.1394, 19.6186, 1.03", "9.68454, -60.2761, 20.517, 1.03", "10.0942, -60.3835, 21.1688, 1.03", "10.6842, -60.5437, 22.0263, 1.03", "11.2091, -60.6495, 22.4342, 0.88", "11.6652, -60.7645, 22.8026, 0.88", "12.225, -61.0155, 23.3826, 0.44", "12.695, -61.4636, 24.0485, 0.59", "12.9858, -61.8392, 24.5503, 0.22", "13.68, -62.5748, 25.7562, 0.22", "14.2582, -63.0548, 26.7378, 0.44", "14.6255, -63.2583, 27.3261, 1.4", "15.3442, -63.4774, 28.3764, 2.14", "16.504, -63.5972, 29.8252, 0.59", "18.4653, -63.5324, 31.831, 0.59", "19.2119, -63.4424, 32.4002, 0.44", "20.6033, -63.1936, 33.222, 0.81", "21.7928, -62.9158, 33.8063, 1.99", "23.6059, -62.4164, 34.4807, 0.22", "24.4745, -62.1773, 34.7058, 1.03", "25.7342, -61.8653, 34.918, 0.22", "27.1481, -61.5713, 35.1344, 0.96", "28.0703, -61.4013, 35.2664, 1.92", "30.2212, -61.0535, 35.7379, 0.22", "31.1131, -60.8983, 36.0128, 0.22", "31.6328, -60.8008, 36.1979, 0.22", "32.5379, -60.6187, 36.5436, 1.11", "33.6921, -60.3721, 36.9828, 2.58", "35.9394, -59.8282, 37.8431, 1.11", "37.0096, -59.5329, 38.2631, 0.44", "37.9699, -59.2829, 38.6533, 0.44", "38.5567, -59.1534, 38.9152, 0.22", "39.0739, -59.0764, 39.1536, 0.22", "39.5812, -59.0437, 39.3927, 0.22", "40.4304, -59.063, 39.8281, 1.4", "41.9196, -59.2306, 40.8056, 0.37", "43.035, -59.443, 41.8172, 0.29", "43.824, -59.6986, 42.7317, 0.29", "43.964, -59.7694, 42.9265, 0.29", "44.3662, -60.1274, 43.6622, 0.29", "44.6731, -60.556, 44.3918, 0.29", "45.0731, -61.3243, 45.5023, 0.59", "45.3145, -61.9442, 46.287, 1.84", "45.496, -62.5285, 46.9829, 2.06", "45.8524, -63.88, 48.4962, 0.52", "46.007, -64.6953, 49.3227, 0.22", "46.0951, -65.4484, 50.0327, 0.22", "46.097, -65.94, 50.4724, 0.22", "46.0372, -66.2565, 50.7971, 0.52", "45.8626, -66.6393, 51.286, 0.81", "45.2464, -67.3327, 52.5498, 0.22", "44.7761, -67.6577, 53.4401, 1.47", "44.4591, -67.8007, 54.0436, 1.92", "43.7689, -67.9901, 55.4261, 0.44", "43.4501, -68.0174, 56.0927, 0.22", "43.095, -67.9392, 56.8716, 0.81", "42.5513, -67.6549, 58.1353, 0.22", "42.2785, -67.4794, 58.7895, 0.22", "42.1442, -67.3926, 59.1361, 0.22", "41.8993, -67.2698, 59.8004, 0.59", "41.4054, -67.1072, 61.2212, 0.37", "41.1107, -67.0532, 62.1456, 0.37", "40.9192, -67.0204, 62.9564, 0.37", "40.8387, -67.0088, 63.6202, 0.37", "40.8487, -67.0772, 64.4808, 0.37", "40.9458, -67.234, 65.1182, 0.37", "41.0715, -67.4363, 65.6708, 0.37", "41.2383, -67.6578, 66.3913, 0.37", "41.2463, -67.7246, 67.1968, 0.37", "40.9502, -67.7412, 68.0027, 0.37", "40.4511, -67.7212, 68.7669, 0.37", "39.9007, -67.6403, 69.3902, 0.37", "39.5836, -67.5696, 69.6732, 0.37", "38.267, -67.1259, 70.7086, 0.29", "36.9375, -66.4389, 71.6741, 0.22", "36.5176, -66.1791, 71.9654, 0.22", "35.6832, -65.6113, 72.5787, 0.15", "35.1125, -65.2191, 73.0478, 0.59", "34.5815, -64.8566, 73.5119, 0.29", "34.114, -64.5612, 73.9655, 0.88", "33.3719, -64.1435, 74.7774, 0.96", "32.2911, -63.6892, 75.9358, 0.22", "31.6351, -63.4985, 76.6189, 1.33", "31.1935, -63.4115, 77.0622, 1.4", "30.1024, -63.3046, 78.0846, 0.15", "29.8114, -63.3108, 78.3668, 0.15", "29.4256, -63.3513, 78.7606, 0.15", "29.1401, -63.4145, 79.0546, 0.15", "28.9534, -63.4585, 79.2556, 0.81", "28.6723, -63.4836, 79.5786, 0.81", "27.7468, -63.4293, 80.7132, 0.22", "27.2294, -63.3175, 81.3383, 0.22", "26.7296, -63.1617, 81.9263, 1.11", "26.2425, -62.9613, 82.4772, 1.62", "25.1466, -62.3955, 83.6333, 0.22", "24.5001, -61.9758, 84.2533, 1.11", "23.6195, -61.3114, 84.9797, 0.22", "22.9945, -60.8319, 85.4383, 0.22", "22.6824, -60.5862, 85.6469, 1.03", "22.0684, -60.1016, 86.0107, 1.03", "21.2203, -59.4311, 86.4442, 0.22", "20.3704, -58.7272, 86.8325, 0.52", "19.4413, -57.8968, 87.2419, 0.15", "19.107, -57.5635, 87.3828, 0.15", "18.8714, -57.293, 87.501, 0.52", "18.55, -56.8751, 87.6818, 1.18", "17.6504, -55.5536, 88.2381, 0.22", "17.2455, -54.8228, 88.4694, 1.03", "17.021, -54.334, 88.5765, 1.99", "16.234, -52.3538, 88.8706, 0.29", "16.0443, -51.7983, 88.8991, 0.96", "15.7995, -50.9478, 88.8583, 1.7", "15.4363, -49.189, 88.5705, 0.22", "15.3093, -48.3525, 88.3383, 0.22", "15.2429, -47.6632, 88.0634, 0.96", "15.2278, -46.4865, 87.4377, 0.07", "15.2579, -45.7781, 87.013, 0.74", "15.3678, -44.8474, 86.3841, 0.22", "15.5749, -43.9348, 85.7324, 0.22", "15.9449, -43.156, 85.1391, 0.66", "16.6521, -42.2067, 84.3737, 0.07", "17.2003, -41.692, 83.9381, 0.22", "18.0139, -41.1024, 83.4423, 0.07", "18.8633, -40.5838, 82.9982, 1.11", "21.2428, -39.3623, 81.9922, 0.07", "21.808, -39.1165, 81.8012, 0.07", "22.2241, -38.9654, 81.6931, 0.29", "23.3658, -38.5867, 81.4766, 0.07" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "27.0895, 13.4138, 30.1663, 0.22", "27.3072, 13.7349, 30.8063, 0.22", "27.5412, 13.9792, 31.3723, 0.22", "27.7583, 14.1568, 31.829, 0.52", "28.0745, 14.3892, 32.4294, 1.7", "28.3789, 14.5645, 32.9046, 2.06", "29.0464, 14.8765, 33.8505, 0.52", "29.5543, 15.0814, 34.5269, 0.66", "30.0175, 15.2581, 35.1071, 2.14", "30.2912, 15.3647, 35.4426, 2.65", "31.2487, 15.7668, 36.6101, 0.29", "31.6776, 15.9403, 37.1649, 0.22", "32.1511, 16.1181, 37.8006, 0.22", "32.522, 16.2348, 38.316, 1.25", "33.0752, 16.3794, 39.107, 0.15", "33.5971, 16.5045, 39.8611, 0.81", "34.2242, 16.6782, 40.7097, 1.4", "34.668, 16.8086, 41.2281, 2.21", "35.7977, 17.1245, 42.3445, 0.22", "36.3409, 17.2709, 42.7994, 0.88", "36.8412, 17.4071, 43.1523, 1.18", "37.8719, 17.7349, 43.7508, 0.22", "38.3313, 17.9167, 43.9651, 0.59", "38.7494, 18.1084, 44.1236, 1.11", "39.4233, 18.4367, 44.3272, 0.15", "39.6925, 18.5657, 44.415, 0.15", "39.9394, 18.6915, 44.5253, 0.15", "40.1649, 18.8128, 44.6685, 0.37", "40.4797, 19.007, 44.9396, 0.66", "41.1949, 19.4809, 45.6622, 0.15", "41.698, 19.8137, 46.2377, 1.62", "42.2164, 20.1303, 46.861, 0.29", "42.7701, 20.4333, 47.5545, 1.18", "43.5481, 20.7901, 48.549, 0.22", "44.082, 20.9851, 49.2299, 0.52", "44.7572, 21.1695, 50.0583, 1.25", "45.2977, 21.2726, 50.7069, 2.14", "46.2323, 21.3505, 51.7854, 0.59", "46.8358, 21.3501, 52.4612, 0.59", "47.436, 21.3111, 53.0971, 0.22", "48.1329, 21.2575, 53.8322, 1.55", "48.4775, 21.2404, 54.1995, 1.55", "49.3731, 21.2692, 55.2193, 0.22", "49.6393, 21.306, 55.5523, 0.22", "49.9927, 21.4165, 55.9939, 0.22", "50.3247, 21.564, 56.4371, 0.96", "50.6697, 21.7831, 56.9334, 1.25", "51.2476, 22.2852, 57.803, 0.22", "51.6647, 22.7962, 58.4625, 0.22", "52.1199, 23.3733, 59.1789, 2.73" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "27.0895, 13.4138, 30.1663, 0.22", "27.6227, 11.8183, 30.8674, 0.22", "27.8912, 11.1168, 31.1241, 0.37", "28.3611, 10.0556, 31.4992, 0.66", "28.9012, 8.87823, 32.0032, 0.66", "29.3863, 7.83476, 32.5386, 0.15", "29.7892, 6.95818, 33.0549, 1.47", "30.309, 5.7855, 33.7276, 3.24", "30.6513, 5.05852, 34.1826, 3.24", "31.7769, 2.90168, 35.7082, 0.29", "32.2209, 2.07499, 36.3713, 0.44", "32.7857, 0.991373, 37.3052, 2.14" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-12.2391, 46.4056, 39.8159, 0.22", "-13.2919, 47.2218, 40.0275, 0.22", "-13.7906, 47.6118, 40.1239, 1.55", "-14.492, 48.1313, 40.1889, 3.1", "-15.7898, 49.0525, 40.213, 0.15", "-16.2495, 49.3645, 40.1918, 0.66", "-17.0152, 49.8587, 40.1218, 0.15", "-17.6152, 50.1939, 40.0104, 1.18", "-18.7436, 50.7373, 39.7263, 0.07", "-19.3817, 50.9983, 39.5347, 0.07", "-19.9079, 51.1895, 39.3578, 0.07", "-20.49, 51.3756, 39.1712, 0.96", "-21.6268, 51.7011, 38.8368, 0.15", "-22.5132, 51.9559, 38.6161, 0.15", "-23.0451, 52.1146, 38.5331, 1.03", "-23.5979, 52.2756, 38.4774, 1.99", "-24.6676, 52.5715, 38.4738, 0.15", "-25.1285, 52.6873, 38.5057, 0.15", "-25.4568, 52.7572, 38.5504, 0.15", "-25.9855, 52.852, 38.65, 0.88", "-26.6383, 52.9339, 38.7728, 1.62", "-28.0177, 53.0467, 39.0432, 0.15", "-28.5531, 53.0683, 39.1494, 0.15", "-29.1551, 53.0744, 39.2597, 0.44", "-29.8313, 53.049, 39.3652, 0.15", "-30.7611, 52.9784, 39.5295, 0.22", "-31.6436, 52.8748, 39.7072, 0.15", "-31.8526, 52.8377, 39.7564, 0.74", "-32.6006, 52.6809, 39.9635, 1.25", "-33.7899, 52.4013, 40.3353, 0.22", "-34.8268, 52.123, 40.6995, 1.11", "-35.2933, 51.975, 40.8776, 1.84", "-36.2886, 51.5357, 41.3055, 0.15", "-36.6161, 51.348, 41.4676, 0.15", "-36.9519, 51.13, 41.65, 0.15", "-37.1841, 50.9609, 41.7847, 0.81", "-37.8075, 50.436, 42.1179, 2.14", "-38.7937, 49.4356, 42.7243, 0.22", "-39.2141, 48.8747, 43.0258, 1.47" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-12.2391, 46.4056, 39.8159, 0.22", "-12.8613, 47.936, 41.5056, 0.22", "-13.3383, 49.0505, 42.6501, 0.22", "-14.0782, 50.6642, 44.2517, 0.37", "-14.403, 51.2995, 44.8995, 0.37", "-14.8228, 52.068, 45.6987, 0.96", "-15.2259, 52.8068, 46.4567, 0.15", "-15.4169, 53.1704, 46.8068, 0.15", "-15.5449, 53.3779, 47.0083, 0.22", "-16.0541, 54.0591, 47.6496, 0.15", "-16.4794, 54.5855, 48.1969, 1.03", "-17.0159, 55.2937, 48.9887, 1.99", "-17.7018, 56.4338, 50.2842, 0.22", "-18.0321, 57.2285, 51.0816, 0.15", "-18.1263, 57.5768, 51.3999, 0.15", "-18.2368, 58.3029, 52.0032, 1.18", "-18.3317, 59.4332, 52.8915, 0.15", "-18.3618, 60.1112, 53.4172, 0.52", "-18.3848, 61.0423, 54.0972, 0.22", "-18.436, 61.9527, 54.7587, 1.33", "-18.567, 62.9626, 55.538, 2.88", "-18.9955, 64.7433, 57.0261, 0.22", "-19.2649, 65.3877, 57.6091, 0.22", "-19.6496, 66.08, 58.2865, 0.74", "-20.1378, 66.8338, 59.1006, 0.15", "-20.5501, 67.4328, 59.7805, 0.15", "-20.9125, 67.9185, 60.4011, 0.15", "-21.3097, 68.4159, 61.2345, 0.74", "-21.6076, 68.8388, 62.1175, 0.74", "-21.75, 69.056, 62.8776, 0.74", "-21.832, 69.1715, 63.6874, 0.74", "-21.8688, 69.1884, 64.0016, 0.74", "-22.0524, 69.1984, 65.2884, 0.74", "-22.1085, 69.1883, 65.7338, 0.74", "-22.2539, 69.1554, 66.9429, 0.74", "-22.3042, 69.1739, 67.7227, 0.74", "-22.2697, 69.3315, 69.1844, 0.96", "-22.1368, 69.5467, 70.2414, 0.96", "-21.9752, 69.7785, 70.9779, 0.96", "-21.6936, 70.1476, 71.991, 0.96", "-21.2962, 70.6718, 73.227, 0.66", "-20.8642, 71.2433, 74.4782, 0.88", "-20.4617, 71.8848, 75.8211, 1.55", "-20.1431, 72.6483, 77.368, 0.37", "-20.0725, 73.0262, 78.0703, 0.37", "-20.0354, 73.7597, 79.2505, 1.4", "-20.053, 74.1814, 79.8559, 1.62", "-20.1243, 75.2697, 81.2205, 0.44", "-20.1636, 76.0343, 82.0685, 0.44", "-20.1436, 76.8628, 82.8764, 1.18", "-20.0132, 78.0415, 83.9086, 0.22", "-19.8782, 78.6525, 84.3953, 0.22", "-19.6456, 79.3825, 84.9331, 1.25", "-19.362, 80.1511, 85.4758, 1.92", "-18.8081, 81.7763, 86.7059, 0.15", "-18.6323, 82.4076, 87.2421, 0.88", "-18.4903, 83.1877, 87.9642, 1.92", "-18.3626, 84.714, 89.5174, 0.22", "-18.3617, 85.5115, 90.4404, 0.74", "-18.4177, 86.5688, 91.7934, 1.7", "-18.4646, 87.3269, 92.8662, 0.07", "-18.4566, 87.7118, 93.4371, 0.96", "-18.3703, 88.6912, 94.9678, 0.07", "-18.2469, 89.3035, 95.9637, 0.07", "-18.0767, 89.7665, 96.7177, 0.07", "-17.7102, 90.4566, 97.9419, 0.37", "-17.3551, 91.027, 99.1808, 0.59", "-17.1786, 91.3033, 99.9024, 0.59", "-17.0763, 91.4918, 100.523, 0.59", "-17.0619, 91.6006, 100.9, 0.59", "-17.1652, 92.0684, 102.271, 0.15", "-17.3023, 92.4856, 103.175, 0.07", "-17.3674, 92.8368, 103.742, 0.07", "-17.4117, 93.1766, 104.203, 0.07", "-17.5134, 93.7626, 104.909, 0.88", "-17.7221, 94.7053, 106.038, 0.22", "-17.9374, 95.4796, 107.079, 0.22", "-18.1911, 96.1491, 108.139, 1.62", "-18.5339, 96.7236, 109.304, 2.21", "-19.1872, 97.4597, 111.348, 0.37", "-19.6328, 97.7906, 112.771, 0.37", "-20.2599, 98.0046, 114.913, 1.33", "-20.4222, 97.9794, 115.615, 1.77", "-20.6413, 97.7351, 117.149, 0.29", "-20.7216, 97.3545, 118.488, 0.29", "-20.778, 96.938, 119.585, 0.59", "-20.8687, 96.4834, 120.704, 1.18", "-21.088, 95.7641, 122.502, 0.37", "-21.3885, 95.0283, 124.373, 1.03", "-21.7282, 94.449, 125.838, 1.4", "-22.6766, 93.3085, 128.661, 0.07", "-23.2448, 92.8034, 129.911, 0.59", "-23.9769, 92.3764, 131.063, 0.15", "-24.5542, 92.1553, 131.717, 0.15", "-25.5155, 91.8803, 132.578, 0.15", "-25.9995, 91.7786, 132.95, 1.03", "-26.5143, 91.6849, 133.272, 1.4", "-28.4051, 91.3569, 134.357, 0.15", "-29.0949, 91.2472, 134.757, 0.15", "-30.3, 91.0548, 135.551, 0.15", "-30.899, 90.9451, 136.005, 1.11", "-31.4548, 90.8328, 136.481, 1.62", "-32.7559, 90.5599, 137.728, 0.29", "-33.5405, 90.4051, 138.556, 0.07", "-34.2914, 90.3208, 139.327, 0.07", "-34.7606, 90.2964, 139.801, 0.88", "-35.8497, 90.2838, 140.95, 0.07", "-36.3699, 90.3098, 141.539, 0.22", "-37.2404, 90.4425, 142.604, 0.07", "-37.8683, 90.5993, 143.328, 1.77" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-0.720705, 36.0896, 23.2434, 0.52", "2.23981, 35.4704, 20.6906, 0.52", "2.96899, 35.2529, 20.1334, 2.21", "4.28203, 34.7554, 19.2006, 2.88", "6.50156, 33.743, 17.6913, 0.96", "8.08869, 32.8859, 16.5808, 0.15", "8.95551, 32.3421, 15.9081, 0.59", "9.82783, 31.6373, 15.3285, 0.15", "10.4015, 31.0989, 14.9392, 0.22", "10.8302, 30.5815, 14.6124, 0.22", "11.5402, 29.4399, 13.8889, 0.22", "12.3526, 27.7981, 12.8785, 1.11", "12.7138, 26.8832, 12.3247, 2.29", "12.8999, 26.3014, 11.9687, 2.58", "13.3993, 24.4343, 10.8384, 0.15", "13.6285, 23.308, 10.2232, 0.15", "13.7391, 22.2684, 9.76684, 0.29", "13.759, 21.502, 9.48976, 1.03", "13.7436, 20.7066, 9.21861, 1.99", "13.7263, 20.1285, 9.04417, 2.29", "13.6631, 18.2156, 8.63174, 0.44", "13.664, 16.8571, 8.40982, 0.29", "13.6856, 16.124, 8.32393, 0.44", "13.723, 15.4205, 8.26217, 0.52", "13.8156, 14.1515, 8.21316, 0.22", "13.9116, 13.3048, 8.21658, 0.22", "14.0441, 12.3914, 8.27248, 1.33", "14.1942, 11.5006, 8.35748, 2.29", "14.3095, 10.7649, 8.44784, 2.29", "14.6341, 8.71886, 8.74501, 0.15", "14.7574, 7.85143, 8.88259, 0.15", "14.8519, 7.15193, 8.98795, 0.15", "14.9336, 6.48083, 9.09095, 0.66", "15.0527, 5.4253, 9.22759, 1.33", "15.1325, 4.60195, 9.26623, 1.03", "15.2465, 2.84553, 9.15984, 0.22", "15.2848, 2.00012, 9.04057, 0.22", "15.3091, 1.17467, 8.85945, 0.66", "15.3425, -0.0158721, 8.543, 0.22", "15.3398, -1.5476, 8.07115, 0.29", "15.3231, -2.52165, 7.77573, 0.59", "15.3098, -3.26382, 7.52383, 1.33", "15.2726, -4.32865, 7.14297, 2.14", "15.1929, -6.15766, 6.47016, 0.22", "15.1249, -7.41038, 6.04891, 0.22", "15.0681, -8.47203, 5.82325, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-0.720705, 36.0896, 23.2434, 0.52", "-0.513041, 36.6652, 24.2186, 0.52", "-0.231145, 37.0204, 25.0786, 0.52", "0.219094, 37.318, 26.1552, 0.52", "0.489662, 37.4041, 26.7157, 0.52", "1.17568, 37.5507, 28.0064, 0.81", "1.71066, 37.668, 28.9438, 1.18", "2.5102, 37.7471, 30.0885, 0.96", "3.12062, 37.7697, 30.8753, 1.25", "3.81056, 37.7543, 31.6993, 0.37", "4.23936, 37.7603, 32.1617, 0.37", "4.77076, 37.7739, 32.7034, 0.15", "5.43208, 37.831, 33.3282, 0.15", "6.17582, 38.0176, 33.975, 1.18", "6.61101, 38.1912, 34.3568, 2.43", "7.36594, 38.5369, 34.983, 2.65" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-9.41967, 87.8332, 7.05436, 0.59", "-9.65951, 88.6457, 7.02069, 0.59", "-9.91637, 89.359, 6.99101, 0.29", "-10.1896, 90.0279, 6.96894, 0.96", "-10.4112, 90.5362, 6.9618, 0.07", "-10.6738, 91.0813, 6.97002, 0.07", "-10.8275, 91.3901, 6.97947, 0.22", "-11.0487, 91.7628, 7.01241, 0.88", "-11.176, 91.984, 7.03992, 1.47", "-11.5106, 92.6134, 7.08347, 0.07", "-11.6995, 93.0333, 7.0706, 0.07", "-11.7753, 93.2557, 7.05561, 0.22", "-11.8268, 93.4248, 7.04565, 0.22", "-11.9541, 93.8927, 7.02565, 0.07", "-12.0457, 94.3176, 7.00025, 0.07", "-12.0968, 94.5963, 6.97043, 0.66", "-12.1572, 94.9097, 6.92211, 0.66", "-12.2696, 95.4158, 6.83073, 0.15", "-12.3599, 95.8092, 6.75183, 1.03", "-12.4547, 96.2223, 6.66262, 1.77", "-12.6086, 96.9965, 6.48993, 0.15", "-12.7048, 97.5178, 6.37839, 0.22", "-12.7463, 97.7305, 6.33116, 0.66", "-12.7999, 97.9786, 6.28791, 0.37", "-12.9099, 98.4075, 6.25384, 1.11", "-13.0154, 98.7436, 6.26565, 1.11", "-13.2944, 99.5313, 6.38855, 0.22", "-13.4867, 99.992, 6.49893, 1.03", "-13.7432, 100.523, 6.6513, 1.62", "-14.0077, 101.011, 6.81582, 1.99", "-14.2848, 101.462, 6.95073, 0.52", "-14.6907, 102.054, 7.08876, 0.22", "-15.1248, 102.64, 7.16508, 0.22", "-15.3547, 102.932, 7.16451, 0.88", "-15.7203, 103.361, 7.06896, 1.55", "-16.5073, 104.201, 6.75025, 0.15", "-16.8324, 104.544, 6.59142, 0.22", "-17.1116, 104.851, 6.43934, 0.07", "-17.5454, 105.36, 6.18446, 1.33", "-18.1565, 106.13, 5.86197, 0.07", "-18.3497, 106.38, 5.76055, 0.37", "-18.6969, 106.895, 5.65105, 0.07", "-19.0418, 107.485, 5.61974, 0.22", "-19.3044, 108.043, 5.71354, 1.55", "-19.4226, 108.512, 5.93884, 1.55", "-21.2968, 113.418, 4.89336, 1.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-9.41967, 87.8332, 7.05436, 0.22", "-10.381, 89.022, 7.44171, 0.22", "-10.8283, 89.5969, 7.60799, 0.07", "-11.3264, 90.2649, 7.77388, 1.11", "-12.0724, 91.3618, 7.99394, 0.07", "-12.3911, 91.8851, 8.07573, 0.07", "-12.5471, 92.1652, 8.11189, 0.52", "-12.7842, 92.7164, 8.13487, 1.47", "-13.0422, 93.4225, 8.14231, 0.07", "-13.2439, 94.0539, 8.13364, 0.15", "-13.3972, 94.6731, 8.11717, 0.88", "-13.5174, 95.2764, 8.10515, 1.4", "-13.684, 96.2267, 8.07697, 0.07", "-13.7549, 96.6799, 8.06586, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-39.6239, -97.4123, -42.593, 0.15", "-42.0421, -107.594, -44.8652, 0.15", "-44.4568, -117.962, -45.8575, 0.15", "-45.9001, -128.213, -48.6377, 0.15", "-45.0368, -138.642, -51.0088, 0.15", "-42.9719, -148.779, -53.9574, 0.15", "-40.7277, -158.976, -56.5358, 0.15", "-37.6194, -168.813, -59.6644, 0.15", "-34.7138, -179.021, -61.4093, 0.15", "-30.4366, -188.664, -63.6946, 0.15", "-25.7269, -198.159, -65.773, 0.15", "-21.6776, -208.133, -65.6108, 0.15", "-18.1606, -218.287, -65.2389, 0.15", "-14.6121, -228.424, -65.882, 0.15", "-11.8633, -238.654, -67.734, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-39.6239, -97.4123, -42.593, 1.03", "-42.0894, -107.847, -44.8392, 0.15", "-46.2961, -117.9, -45.8607, 0.15", "-51.6051, -127.43, -46.896, 0.15", "-58.8663, -135.677, -46.8706, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-5.82623, -108.369, 21.5213, 0.22", "-5.33914, -109.837, 21.4156, 0.22", "-5.07498, -110.758, 21.4002, 0.22", "-4.93762, -111.436, 21.4272, 0.88", "-4.79909, -112.42, 21.5028, 1.25", "-4.62981, -113.928, 21.6595, 0.15", "-4.54032, -115.064, 21.7954, 0.15", "-4.52407, -115.978, 21.9531, 0.66", "-4.57001, -117.328, 22.213, 0.15", "-4.60796, -117.939, 22.3366, 0.44", "-4.6443, -118.383, 22.4182, 0.44", "-4.72617, -119.623, 22.5942, 0.15", "-4.77042, -120.524, 22.6893, 0.15", "-4.78208, -121.217, 22.7382, 1.18", "-4.76369, -121.913, 22.7581, 2.14", "-4.72769, -122.95, 22.7656, 1.03", "-4.70497, -123.951, 22.7597, 0.15", "-4.67759, -124.738, 22.7392, 0.15", "-4.6653, -125.362, 22.7177, 0.37", "-4.66971, -126.138, 22.6792, 0.22", "-4.69518, -126.551, 22.6498, 0.66", "-4.75219, -127.102, 22.5976, 0.81", "-4.89451, -128.27, 22.4449, 0.22", "-4.96553, -128.837, 22.3637, 1.03", "-5.12185, -129.851, 22.2193, 1.84", "-5.37902, -131.318, 22.0191, 0.22", "-5.46286, -131.797, 21.9603, 0.22", "-5.55389, -132.357, 21.903, 0.22", "-5.63196, -132.906, 21.8601, 0.22", "-5.69266, -133.718, 21.7976, 0.96", "-5.69961, -135.428, 21.6633, 0.15", "-5.65869, -136.037, 21.6113, 0.15", "-5.59642, -136.685, 21.5625, 0.96", "-5.5137, -137.433, 21.5185, 1.92", "-5.28803, -139.109, 21.4304, 0.22", "-5.19095, -139.702, 21.4018, 0.22", "-5.09397, -140.228, 21.3677, 0.15", "-4.9189, -141.171, 21.299, 0.15", "-4.82531, -141.728, 21.2651, 0.81", "-4.74204, -142.292, 21.2618, 1.62", "-4.60021, -143.414, 21.3264, 0.15", "-4.49668, -144.288, 21.3918, 0.15", "-4.42897, -144.774, 21.4213, 0.15", "-4.30855, -145.54, 21.4575, 0.88", "-4.14805, -146.682, 21.5185, 0.15", "-4.07744, -147.266, 21.5499, 0.96", "-3.97805, -148.325, 21.6117, 2.21", "-3.8274, -150.306, 21.7266, 0.15", "-3.77065, -151.134, 21.7604, 0.96", "-3.62211, -152.815, 21.8113, 0.22", "-3.53377, -153.623, 21.8214, 0.88", "-3.47954, -154.056, 21.8293, 0.88", "-3.27518, -155.437, 21.8693, 0.07", "-3.22074, -155.73, 21.8786, 0.29", "-3.07639, -156.361, 21.9028, 0.29", "-2.91709, -156.978, 21.9291, 0.15", "-2.80043, -157.471, 21.9722, 0.15", "-2.63653, -158.277, 22.0583, 0.15", "-2.55049, -158.836, 22.1181, 0.74", "-2.45062, -159.625, 22.2135, 1.77", "-2.40037, -160.122, 22.2877, 1.33", "-2.28434, -161.35, 22.5096, 0.07", "-2.25219, -161.756, 22.5937, 0.37", "-2.15921, -163.013, 22.8912, 0.07", "-2.10725, -163.683, 23.0524, 0.59", "-2.00572, -164.773, 23.2954, 0.15", "-1.94919, -165.337, 23.4068, 0.22", "-1.86107, -166.198, 23.5593, 1.33", "-1.74069, -167.461, 23.7784, 0.07", "-1.70776, -167.947, 23.8652, 0.88", "-1.60322, -169.357, 24.0796, 0.15", "-1.5472, -170.005, 24.1614, 0.15", "-1.49033, -170.567, 24.2254, 0.15", "-1.41311, -171.19, 24.2963, 0.74", "-1.30765, -172.079, 24.4111, 2.14", "-1.14647, -173.681, 24.6605, 0.15", "-1.12987, -174.177, 24.7546, 0.44", "-1.16062, -175.435, 25.0257, 0.07", "-1.20614, -175.944, 25.1538, 0.15", "-1.29656, -176.52, 25.3239, 0.07", "-1.4523, -177.208, 25.5619, 1.11", "-1.93179, -178.791, 26.1787, 0.15", "-2.15396, -179.46, 26.4518, 1.03", "-2.58811, -180.655, 26.948, 0.15", "-2.77656, -181.197, 27.1462, 0.44", "-3.06841, -182.191, 27.4369, 0.15", "-3.25198, -182.982, 27.6139, 1.62", "-3.31858, -183.398, 27.672, 1.77", "-3.38585, -184.033, 27.7065, 1.03", "-3.48971, -185.656, 27.6792, 0.15", "-3.54307, -187.206, 27.586, 0.15", "-3.5428, -187.721, 27.5395, 0.88", "-3.51087, -188.416, 27.4793, 1.18", "-3.35547, -190.231, 27.3175, 0.07", "-3.31275, -190.597, 27.284, 0.15", "-3.14976, -191.748, 27.1928, 0.07", "-2.95428, -193.005, 27.1059, 0.15", "-2.79469, -194.085, 27.0499, 1.33", "-2.54736, -195.846, 26.9848, 0.15", "-2.45251, -196.573, 26.9774, 0.22", "-2.35898, -197.741, 26.9853, 0.07", "-2.35045, -198.099, 26.9935, 0.22", "-2.41928, -199.785, 27.0486, 0.07", "-2.4464, -200.114, 27.0618, 0.81", "-2.58528, -201.299, 27.1274, 1.92", "-2.80014, -202.738, 27.1662, 0.15", "-2.93886, -203.489, 27.1523, 0.88", "-3.27367, -205.128, 27.0548, 0.15", "-3.37363, -205.564, 27.0102, 0.44", "-3.69956, -206.918, 26.8416, 0.07", "-3.95804, -208.04, 26.6721, 0.07", "-4.10763, -208.777, 26.581, 0.15", "-4.20834, -209.35, 26.5306, 0.74", "-4.28301, -209.873, 26.5129, 0.74", "-4.31781, -211.061, 26.5604, 0.07", "-4.21832, -211.892, 26.645, 0.07", "-4.03588, -212.713, 26.7917, 0.07", "-3.85167, -213.394, 26.9366, 1.25", "-3.69704, -213.942, 27.0591, 1.99", "-3.19762, -215.812, 27.4618, 0.15", "-2.95128, -216.83, 27.6731, 0.96", "-2.66324, -218.285, 27.9618, 0.07", "-2.48878, -219.423, 28.169, 0.07", "-2.41203, -220.252, 28.3067, 0.81", "-2.3414, -222.445, 28.6142, 0.15", "-2.36521, -222.994, 28.6805, 0.29", "-2.46617, -224.062, 28.7851, 0.07", "-2.5812, -224.954, 28.8391, 1.47", "-2.88842, -226.948, 28.915, 0.07", "-3.02654, -227.814, 28.9599, 0.07", "-3.15262, -228.45, 28.9961, 1.11", "-3.53723, -230.087, 29.0742, 0.07", "-3.72726, -230.777, 29.097, 0.74", "-3.92899, -231.401, 29.1055, 1.92", "-4.55812, -233.098, 29.113, 0.15", "-5.07011, -234.396, 29.1151, 0.22", "-5.66382, -235.892, 29.1203, 0.22", "-5.93769, -236.546, 29.1213, 0.81", "-6.29189, -237.391, 29.1276, 1.84", "-6.98143, -239.218, 29.1875, 0.07", "-7.16461, -239.76, 29.2155, 0.29", "-7.47326, -241.145, 29.4084, 0.07", "-7.62697, -242.033, 29.5777, 0.07", "-7.75879, -243.045, 29.8078, 1.55", "-7.86713, -244.61, 30.2241, 0.07", "-7.87154, -245.172, 30.391, 0.07", "-7.81201, -246.65, 30.8452, 1.47" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-5.82623, -108.369, 21.5213, 0.22", "-6.10258, -109.258, 22.3015, 0.22", "-6.30907, -110.123, 22.9265, 0.44", "-6.38745, -110.539, 23.1877, 0.15", "-6.44219, -110.887, 23.3962, 0.15", "-6.47071, -111.048, 23.4965, 0.37", "-6.57578, -111.512, 23.8031, 0.44", "-6.68871, -111.903, 24.0685, 0.15", "-6.73546, -112.061, 24.1972, 0.22", "-6.78934, -112.322, 24.4532, 0.22", "-6.83994, -112.661, 24.8282, 0.22", "-6.86745, -112.972, 25.1888, 0.81", "-6.88531, -113.542, 25.8401, 0.22", "-6.87182, -114.203, 26.5555, 0.96", "-6.84213, -114.863, 27.2176, 2.21", "-6.75596, -116.178, 28.4124, 0.22", "-6.69639, -116.756, 28.8979, 0.22", "-6.64627, -117.16, 29.21, 0.22", "-6.6108, -117.471, 29.4261, 0.22", "-6.59232, -117.955, 29.7355, 0.22", "-6.61183, -118.326, 29.9806, 0.22", "-6.66172, -118.686, 30.2412, 0.88", "-6.74814, -119.119, 30.6096, 1.4", "-6.88761, -119.684, 31.202, 2.14", "-7.13163, -120.587, 32.3022, 0.52", "-7.3063, -121.196, 33.1375, 0.22", "-7.40706, -121.518, 33.6097, 0.22", "-7.55589, -121.928, 34.2518, 1.11", "-7.7988, -122.505, 35.2914, 1.99", "-7.92753, -122.758, 35.8392, 1.99", "-7.96695, -122.825, 36.0355, 1.99" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-27.7218, -99.46, 13.6336, 0.22", "-29.1018, -100.617, 14.0015, 0.22", "-29.838, -101.27, 14.2002, 0.22", "-30.4823, -101.831, 14.3695, 1.33", "-31.6703, -102.86, 14.6727, 0.15", "-32.0969, -103.24, 14.779, 0.15", "-32.4062, -103.526, 14.8547, 0.37", "-32.8885, -104.049, 14.9982, 0.37", "-33.5902, -104.899, 15.1935, 0.22", "-33.9103, -105.295, 15.2665, 0.15", "-34.1521, -105.597, 15.3082, 0.15", "-34.3216, -105.826, 15.3458, 0.15", "-34.7075, -106.38, 15.4403, 0.15", "-35.0892, -106.977, 15.5393, 0.74", "-35.7074, -107.964, 15.6994, 0.15", "-36.1499, -108.552, 15.7639, 0.15", "-36.842, -109.342, 15.8202, 0.15", "-37.1188, -109.621, 15.8199, 0.15", "-37.7574, -110.206, 15.7749, 1.33", "-38.3544, -110.715, 15.7535, 2.14", "-39.9461, -111.943, 15.7773, 0.15", "-40.7333, -112.48, 15.8357, 1.25", "-41.9008, -113.208, 15.9635, 0.07", "-42.3444, -113.486, 16.0361, 0.22", "-43.7212, -114.34, 16.3227, 0.22", "-44.4019, -114.751, 16.5032, 1.25", "-44.8297, -115.007, 16.6464, 1.25", "-46.2222, -115.936, 17.0439, 0.07", "-47.168, -116.654, 17.2544, 0.07", "-47.8326, -117.244, 17.3036, 0.07", "-48.447, -117.863, 17.1945, 0.07", "-48.7737, -118.225, 17.0938, 1.18", "-49.9229, -119.592, 16.6114, 0.07", "-50.1629, -119.9, 16.4883, 0.88", "-50.7872, -120.758, 16.1288, 1.92", "-51.8448, -122.268, 15.4987, 0.15", "-52.1726, -122.752, 15.2966, 0.22", "-52.7123, -123.506, 14.9955, 0.07", "-53.0058, -123.914, 14.8428, 0.07", "-53.4312, -124.575, 14.6163, 0.29", "-54.189, -125.958, 14.2275, 0.07", "-54.7728, -127.204, 13.9732, 0.22", "-55.16, -128.076, 13.8344, 1.55", "-55.8283, -129.671, 13.71, 0.22", "-56.2323, -130.66, 13.7056, 0.07", "-56.571, -131.55, 13.7478, 0.07", "-56.7668, -132.159, 13.843, 0.07", "-56.9401, -132.721, 14.011, 0.15", "-57.1881, -133.568, 14.3905, 0.07", "-57.3507, -133.945, 14.6971, 0.88" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-27.7218, -99.46, 13.6336, 0.29", "-29.5755, -99.0281, 13.3428, 0.29", "-30.4935, -98.7852, 13.1078, 0.22", "-31.0737, -98.6258, 12.916, 0.74", "-31.7696, -98.427, 12.6595, 0.96", "-32.5929, -98.2, 12.3438, 0.29", "-33.4447, -97.9659, 12.0057, 0.15", "-34.3658, -97.7063, 11.6014, 0.15", "-35.1494, -97.5108, 11.2892, 1.03", "-36.1372, -97.2889, 10.933, 0.29", "-37.4945, -97.0049, 10.4945, 0.22", "-38.244, -96.8626, 10.2818, 1.11", "-39.4456, -96.6623, 9.99973, 2.14", "-41.7066, -96.314, 9.56139, 0.22", "-42.28, -96.2315, 9.46398, 0.81", "-43.4287, -96.0793, 9.27572, 1.7", "-44.9841, -95.8649, 9.03665, 0.22", "-45.6395, -95.7752, 8.92383, 0.88", "-46.631, -95.6456, 8.72503, 1.55", "-47.3681, -95.5438, 8.55405, 0.59", "-48.7561, -95.3592, 8.20703, 0.15", "-49.7753, -95.2481, 7.91237, 0.88", "-50.7963, -95.1419, 7.56946, 0.15", "-51.6102, -95.0401, 7.25796, 0.22", "-52.3281, -94.9369, 6.95349, 0.81", "-53.3955, -94.786, 6.47634, 1.99", "-54.8948, -94.6183, 5.7436, 0.22", "-55.6269, -94.5496, 5.3718, 0.22", "-56.3692, -94.4715, 4.98372, 0.52", "-57.1385, -94.3824, 4.56524, 1.18", "-58.3515, -94.2199, 3.89503, 1.99", "-59.9096, -93.9839, 2.9877, 0.15", "-60.4871, -93.8886, 2.64828, 0.29", "-61.4261, -93.7651, 2.08443, 0.07", "-62.0644, -93.7062, 1.66019, 0.22", "-62.544, -93.6681, 1.27891, 0.22", "-62.9594, -93.6584, 0.834944, 0.22", "-63.1141, -93.6743, 0.630362, 0.22", "-63.475, -93.8179, 0.0211844, 0.22", "-63.8225, -94.1303, -0.695051, 0.22", "-64.0577, -94.4103, -1.23164, 0.22", "-64.6137, -95.1004, -2.39379, 1.84" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "52.1199, 23.3733, 59.1789, 0.22", "53.7498, 23.4715, 60.8191, 0.22", "54.1161, 23.464, 61.1843, 0.22", "54.9842, 23.479, 62.006, 0.59", "55.7997, 23.5425, 62.7161, 0.44", "56.2539, 23.5865, 63.0735, 0.44", "56.8466, 23.6389, 63.4619, 0.15", "57.4655, 23.7206, 63.7518, 0.15", "58.2867, 23.7838, 64.0311, 0.15", "58.9608, 23.802, 64.1745, 0.96", "59.8754, 23.8153, 64.3094, 1.55", "61.1528, 23.8926, 64.4944, 0.22", "62.0735, 23.954, 64.6183, 0.37", "62.7945, 23.9739, 64.6984, 0.22", "63.395, 23.9645, 64.7639, 0.22", "64.0747, 23.9521, 64.8447, 0.37", "65.3569, 23.9385, 65.0449, 0.22", "66.0675, 23.9484, 65.2015, 0.22", "66.9927, 24.0011, 65.4594, 0.22", "67.5864, 24.0522, 65.6495, 0.96", "68.597, 24.1516, 66.0167, 1.99", "70.2535, 24.2861, 66.6698, 0.22", "71.2944, 24.3213, 67.114, 0.15", "72.3049, 24.3448, 67.6022, 0.15", "72.6395, 24.347, 67.7793, 0.15", "73.1104, 24.3267, 68.0312, 0.15", "73.5643, 24.2886, 68.2397, 0.15", "74.4194, 24.1973, 68.5387, 0.15", "74.9621, 24.0928, 68.6842, 0.81", "75.6096, 23.9163, 68.84, 1.47", "76.0873, 23.775, 68.9542, 1.47", "77.5216, 23.3435, 69.2663, 0.15", "77.8815, 23.2448, 69.357, 0.22", "78.8341, 22.9581, 69.6169, 0.37", "79.7922, 22.628, 69.8938, 1.03", "80.7213, 22.29, 70.2644, 1.77", "81.2139, 22.1129, 70.5256, 1.77", "82.6687, 21.6037, 71.4779, 0.22", "83.208, 21.4606, 71.8734, 0.22", "84.0463, 21.3323, 72.5199, 1.11", "85.7344, 21.1972, 73.8947, 0.22", "86.4262, 21.1519, 74.5088, 0.22", "87.0884, 21.105, 75.1335, 0.66", "88.016, 21.0377, 76.0002, 0.88", "88.6508, 21.0116, 76.5832, 1.7", "89.9892, 21.014, 77.8184, 0.44", "90.9851, 21.0523, 78.6982, 0.74", "91.7221, 21.1218, 79.3529, 1.25", "92.9275, 21.3544, 80.4731, 0.22", "93.3442, 21.4729, 80.8745, 0.22", "94.0496, 21.7636, 81.5828, 0.37", "94.5318, 22.0209, 82.0343, 0.37", "95.3179, 22.4816, 82.6891, 1.47", "96.2839, 23.0361, 83.4398, 0.29", "96.7531, 23.2928, 83.776, 0.29", "97.0135, 23.4249, 83.9594, 0.29", "97.8539, 23.8256, 84.6032, 0.15", "98.377, 24.0875, 85.0909, 0.22", "98.7712, 24.3024, 85.5409, 0.74", "99.2026, 24.5857, 86.1715, 1.25", "99.8725, 25.1439, 87.4112, 0.22", "100.363, 25.6224, 88.4683, 0.96", "100.788, 26.0587, 89.4647, 0.96", "101.143, 26.3668, 90.2757, 0.29", "101.601, 26.6739, 91.2957, 0.29", "102.002, 26.862, 92.1929, 0.29", "102.393, 26.975, 93.0603, 0.29", "102.728, 27.0492, 93.9757, 0.29", "102.932, 27.0795, 94.8436, 0.29", "103.025, 27.0742, 95.7061, 0.29", "103.052, 27.0613, 96.2564, 0.29", "103.068, 27.0582, 96.9909, 0.29", "103.07, 27.09, 98.4048, 0.59", "103.072, 27.1412, 99.4777, 0.59", "103.116, 27.2172, 100.812, 0.59", "103.202, 27.2583, 101.749, 0.59", "103.411, 27.2716, 102.905, 0.59", "103.641, 27.2453, 103.7, 0.59", "103.771, 27.2283, 104.002, 0.59", "104.235, 27.1621, 104.78, 0.59", "104.486, 27.107, 105.085, 0.59", "105.147, 26.9245, 105.696, 0.22", "105.687, 26.7657, 106.064, 0.22", "106.431, 26.604, 106.591, 0.22", "106.957, 26.5478, 107.02, 0.22", "107.776, 26.5656, 107.717, 0.22", "108.351, 26.6542, 108.272, 0.22", "108.948, 26.8179, 108.957, 1.11", "110.016, 27.2203, 110.371, 0.22", "110.591, 27.4698, 111.224, 0.22", "111.259, 27.8033, 112.31, 0.22", "111.777, 28.021, 113.135, 0.22", "112.211, 28.0673, 113.804, 0.22", "112.438, 27.9876, 114.109, 0.22", "112.922, 27.6796, 114.643, 0.59", "113.692, 27.1232, 115.393, 0.59", "114.598, 26.4822, 116.24, 0.15", "115.479, 25.8725, 117.035, 0.66", "116.411, 25.2607, 117.895, 0.15", "117.157, 24.8065, 118.618, 0.66", "117.769, 24.4895, 119.228, 1.03", "118.943, 23.9744, 120.346, 0.22", "119.931, 23.6053, 121.225, 0.15", "120.924, 23.3075, 122.054, 0.66", "121.538, 23.1875, 122.573, 1.25", "122.842, 23.0417, 123.677, 0.22", "123.8, 22.9841, 124.476, 0.15", "124.642, 22.9882, 125.12, 0.37", "125.149, 23.0277, 125.476, 0.59", "126.439, 23.1605, 126.329, 0.15", "127.226, 23.2245, 126.857, 0.88", "128.577, 23.3099, 127.81, 0.22", "129.109, 23.3578, 128.202, 0.96", "129.55, 23.4062, 128.537, 0.66", "130.476, 23.5177, 129.22, 0.15", "131.391, 23.6673, 129.93, 0.81", "131.995, 23.8289, 130.473, 1.25", "132.788, 24.1456, 131.241, 0.15", "133.754, 24.5851, 132.225, 0.15", "134.044, 24.7291, 132.535, 0.29", "134.742, 25.1403, 133.328, 0.15", "135.075, 25.3573, 133.728, 0.96", "135.702, 25.7205, 134.509, 0.29", "136.557, 26.0936, 135.532, 0.74", "137.408, 26.3995, 136.474, 0.15", "137.988, 26.5872, 137.092, 0.37", "138.338, 26.6993, 137.432, 0.37", "138.947, 26.9144, 138.034, 0.22", "139.633, 27.1827, 138.692, 0.22", "140.206, 27.3763, 139.159, 0.37", "140.885, 27.5868, 139.645, 0.37", "141.652, 27.828, 140.128, 1.33", "143.131, 28.361, 140.969, 0.22", "144.095, 28.7943, 141.493, 1.03", "145.273, 29.4015, 142.097, 0.15", "145.672, 29.6414, 142.292, 0.15", "146.675, 30.3912, 142.772, 0.15", "147.358, 31.0428, 143.14, 1.03", "147.886, 31.7268, 143.466, 0.15", "148.228, 32.2749, 143.722, 0.15", "148.685, 33.1108, 144.174, 0.15", "149.174, 33.9418, 144.752, 0.88", "149.66, 34.7251, 145.412, 0.29", "150.029, 35.2813, 145.941, 0.81", "150.213, 35.5394, 146.198, 0.81", "150.896, 36.6586, 147.238, 0.22", "151.314, 37.5114, 147.963, 0.07", "151.536, 38.2232, 148.488, 0.15", "151.593, 38.6063, 148.734, 0.66", "151.61, 39.3998, 149.193, 1.55", "151.522, 41.4017, 150.247, 0.15", "151.401, 42.3613, 150.662, 0.15", "151.215, 43.2401, 151.018, 0.66", "151.038, 43.8783, 151.287, 0.15", "150.911, 44.2523, 151.452, 0.37" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "52.1199, 23.3733, 59.1789, 0.29", "51.1668, 24.1517, 61.0519, 0.29", "50.4093, 24.7825, 62.3457, 0.29", "49.605, 25.5014, 63.642, 0.81", "49.1462, 25.8904, 64.3374, 1.4", "48.0023, 26.7592, 65.9717, 0.07", "47.3861, 27.1897, 66.802, 1.03", "46.1566, 27.9391, 68.2304, 0.15", "45.1097, 28.6065, 69.3907, 1.55", "44.134, 29.2864, 70.4997, 0.22", "43.4944, 29.7888, 71.2797, 0.22", "42.8298, 30.3923, 72.1571, 0.81", "42.1577, 31.086, 73.0974, 0.07", "41.6255, 31.7949, 73.9465, 0.59", "41.2609, 32.5366, 74.6536, 0.07", "41.1274, 33.0202, 75.0412, 0.52", "40.9083, 34.6865, 76.2861, 0.07", "40.9087, 35.2488, 76.692, 0.96", "40.9745, 35.7793, 77.081, 0.96", "41.2951, 37.1959, 78.1698, 0.22", "41.6696, 38.1893, 78.9464, 0.22", "42.1329, 39.0319, 79.6511, 0.96", "42.7352, 39.9124, 80.4281, 1.77", "43.6035, 41.0957, 81.5618, 0.22", "44.157, 41.8038, 82.2733, 0.15", "44.6374, 42.4029, 82.8478, 0.15", "44.8801, 42.7274, 83.1502, 0.15", "45.6168, 43.8559, 84.1727, 0.88", "46.2348, 45.1556, 85.3506, 0.22", "46.4735, 45.8808, 86.0166, 0.81", "46.7881, 47.1078, 87.1647, 0.15", "46.9864, 47.9893, 87.9905, 0.66", "47.1849, 48.9629, 88.8959, 1.84", "47.5885, 50.7796, 90.575, 0.15", "47.8053, 51.8163, 91.5039, 0.15", "47.9798, 52.6612, 92.2445, 0.15", "48.1512, 53.3484, 92.8393, 0.66", "48.5733, 54.6689, 93.8715, 0.15", "49.078, 55.9046, 94.7505, 0.15", "49.3756, 56.5314, 95.1485, 0.66", "49.6316, 57.1423, 95.5012, 0.22", "49.9543, 58.1214, 96.0577, 0.22", "50.1066, 58.7038, 96.3784, 0.81", "50.1841, 59.172, 96.6222, 0.81", "50.2198, 60.4754, 97.3126, 0.07", "50.1552, 61.2549, 97.7512, 0.66", "49.8003, 62.8705, 98.7394, 0.15", "49.4395, 63.9394, 99.4268, 1.4", "48.8092, 65.405, 100.442, 0.15", "48.3042, 66.3682, 101.157, 0.15", "47.7881, 67.1628, 101.79, 1.18", "46.7805, 68.345, 102.88, 0.22", "45.8803, 69.145, 103.72, 0.15", "45.311, 69.592, 104.226, 0.15", "44.7388, 70.0213, 104.724, 0.74", "44.0443, 70.5568, 105.31, 1.25", "42.6313, 71.696, 106.515, 0.22", "41.8862, 72.33, 107.176, 1.11", "40.6121, 73.4677, 108.402, 0.22", "39.9196, 74.1356, 109.116, 1.47", "39.2571, 74.8147, 109.826, 0.96", "38.3787, 75.7873, 110.821, 0.22", "37.6303, 76.6832, 111.717, 0.74", "36.7277, 77.7902, 112.867, 0.15", "36.3398, 78.2556, 113.388, 0.15", "35.9297, 78.7631, 113.978, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "32.7857, 0.991373, 37.3052, 0.15", "34.5503, -0.385778, 40.169, 0.15", "35.1845, -0.771308, 40.8465, 0.22", "35.7086, -1.05062, 41.3196, 0.88", "36.6679, -1.52353, 42.0978, 0.15", "37.3028, -1.81827, 42.5782, 1.18", "38.0088, -2.14042, 43.1023, 2.58", "39.7128, -2.81327, 44.062, 0.29", "40.5007, -3.11427, 44.4904, 0.96", "41.0894, -3.33625, 44.8215, 1.18", "42.7507, -3.93729, 45.8584, 0.07", "43.3615, -4.13592, 46.3025, 0.07", "43.6529, -4.22942, 46.5448, 0.07", "44.1706, -4.4172, 47.0674, 0.74", "44.5795, -4.59623, 47.548, 1.03", "45.4842, -5.0666, 48.7742, 0.15", "46.1974, -5.54172, 49.8909, 1.18", "46.4591, -5.76476, 50.3522, 1.4", "46.9642, -6.3091, 51.3728, 0.15", "47.2852, -6.78415, 52.1302, 0.15", "47.4418, -7.07685, 52.5462, 0.88", "47.6113, -7.45657, 53.0592, 0.29", "47.8904, -8.15406, 54.0101, 0.15", "48.0656, -8.62341, 54.7236, 0.81", "48.2321, -9.11811, 55.5578, 1.62", "48.4582, -10.0728, 57.2642, 0.15", "48.5337, -10.5717, 58.1969, 0.15", "48.566, -11.0167, 59.0323, 0.22", "48.5458, -11.5707, 60.0586, 0.22", "48.5024, -11.9367, 60.7101, 0.22", "48.4601, -12.2824, 61.3432, 1.18", "48.4207, -12.7226, 62.1062, 1.62", "48.5047, -13.5503, 63.4264, 0.22", "48.6665, -13.9609, 64.1095, 0.22", "48.8242, -14.1777, 64.5098, 0.44", "49.3192, -14.6283, 65.4764, 0.15", "49.7276, -14.8959, 66.1381, 1.33", "50.5954, -15.3769, 67.3965, 0.15", "51.5305, -15.847, 68.6202, 0.22", "52.0333, -16.13, 69.2296, 0.22", "52.2933, -16.2917, 69.5302, 0.22", "52.7412, -16.6239, 70.02, 0.74", "53.217, -17.0101, 70.485, 1.25", "53.6236, -17.3505, 70.8029, 1.25", "54.923, -18.5494, 71.6696, 0.22", "55.4894, -19.0892, 72.0565, 0.22", "55.9607, -19.5493, 72.3958, 1.03", "56.5519, -20.1299, 72.8257, 1.84", "58.0562, -21.5954, 73.8947, 0.22", "58.7054, -22.253, 74.347, 1.11", "59.6132, -23.2559, 75.0021, 0.22", "60.1866, -23.9275, 75.4528, 0.15", "60.5945, -24.4064, 75.7988, 0.15", "61.1861, -25.1122, 76.3474, 1.03", "62.0041, -26.1443, 77.1985, 0.22", "62.3937, -26.6137, 77.6614, 0.96", "63.0798, -27.4228, 78.5503, 0.15", "63.5311, -27.9572, 79.2246, 0.15", "63.8448, -28.3556, 79.8041, 0.96", "64.2515, -28.8686, 80.7031, 1.92", "65.2424, -29.9545, 83.095, 0.22", "65.5698, -30.2579, 83.8858, 0.44", "66.0701, -30.7142, 85.1762, 1.18", "66.6386, -31.2543, 86.8367, 0.22", "67.1567, -31.7624, 88.6385, 0.52", "67.5222, -32.1261, 90.2917, 0.81", "67.6829, -32.2926, 91.4459, 0.81", "67.8461, -32.4109, 93.4141, 0.52", "67.834, -32.3565, 94.5049, 0.52", "67.6694, -32.109, 95.5528, 0.52", "67.332, -31.663, 96.4454, 0.52", "66.9528, -31.1514, 97.0697, 1.25", "66.5917, -30.5817, 97.555, 1.25", "66.1886, -29.7607, 98.1054, 0.37", "65.7296, -28.5333, 98.8905, 0.66", "65.5057, -27.6891, 99.4224, 0.37", "65.3964, -26.8189, 100.023, 0.66", "65.4129, -25.8776, 100.839, 0.15", "65.5124, -25.3146, 101.459, 0.15", "65.627, -25.0183, 101.877, 0.15", "65.8612, -24.5795, 102.603, 1.62", "66.3217, -23.7768, 104.036, 0.22", "66.8091, -22.9026, 105.697, 0.88", "67.1647, -22.2152, 107.139, 1.4", "67.435, -21.6197, 108.474, 1.4", "67.7269, -20.8063, 110.341, 0.66", "67.8973, -20.0993, 112.032, 0.29", "67.9322, -19.7744, 112.898, 0.29", "67.9256, -19.4876, 113.774, 0.29", "67.8735, -19.3363, 114.362, 0.29", "67.6238, -19.1321, 115.754, 0.29", "67.3625, -19.1232, 116.727, 0.29", "67.0252, -19.1891, 117.834, 0.29", "66.7544, -19.1903, 118.642, 0.29", "66.5181, -19.1111, 119.219, 0.29", "66.339, -19.0056, 119.586, 0.29", "65.8816, -18.5906, 120.252, 0.88", "65.4007, -18.0199, 120.821, 1.25", "64.9589, -17.4101, 121.322, 0.59", "64.3717, -16.5697, 121.933, 1.25", "63.9761, -15.9785, 122.34, 1.4", "62.7604, -14.1654, 123.535, 0.15", "62.2856, -13.479, 123.958, 0.74", "61.402, -12.2388, 124.672, 0.22", "60.7812, -11.3835, 125.163, 1.03", "60.3449, -10.7837, 125.519, 0.52" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "32.7857, 0.991373, 37.3052, 0.15", "31.0027, 0.923953, 38.171, 0.15", "30.2746, 0.876683, 38.5093, 0.07", "29.4002, 0.808273, 38.895, 1.03", "28.1824, 0.699823, 39.3972, 0.07", "26.9752, 0.590896, 39.87, 0.07", "26.2934, 0.533574, 40.1215, 0.66", "24.9082, 0.348156, 40.494, 0.07", "24.1904, 0.225463, 40.6567, 0.07", "23.1464, 0.020674, 40.8633, 0.07", "22.8345, -0.053638, 40.9041, 0.29", "22.2356, -0.226589, 40.9514, 0.81", "20.5783, -0.765106, 41.0148, 0.07", "19.4369, -1.17903, 41.019, 0.07", "18.6468, -1.4937, 40.9918, 0.15", "17.0472, -2.18215, 40.8978, 0.07", "16.0532, -2.64673, 40.8335, 0.07", "15.4785, -2.93785, 40.7976, 0.22", "15.0405, -3.17338, 40.7696, 0.22", "13.7366, -3.87088, 40.668, 0.15", "12.9772, -4.28039, 40.6177, 0.15", "12.0806, -4.78206, 40.5888, 0.07", "11.5969, -5.06424, 40.5761, 0.15", "10.4448, -5.72449, 40.5628, 0.07", "9.78038, -6.08094, 40.5501, 0.59", "8.64077, -6.60664, 40.4833, 0.07", "8.04111, -6.84724, 40.3905, 0.07", "7.60951, -6.99323, 40.2831, 0.22", "6.71973, -7.25085, 40.0185, 0.22", "5.64136, -7.51925, 39.6989, 0.07", "4.36297, -7.79899, 39.341, 0.07", "3.76075, -7.89765, 39.1758, 0.07", "3.03564, -7.95682, 38.9863, 0.07", "1.90556, -7.9334, 38.7288, 0.29", "0.263373, -7.70171, 38.4396, 0.07", "-0.432121, -7.4992, 38.3742, 0.29", "-1.03347, -7.26102, 38.3692, 0.29", "-2.16898, -6.76151, 38.4203, 0.07", "-3.23814, -6.22671, 38.4956, 0.07", "-3.67327, -5.97851, 38.5209, 0.22", "-4.30616, -5.5834, 38.5277, 0.37", "-5.16736, -5.08486, 38.4952, 0.29", "-6.26269, -4.58395, 38.3225, 0.07", "-6.66163, -4.4457, 38.2075, 0.37", "-7.24214, -4.25603, 37.9796, 0.59", "-8.31744, -3.86384, 37.4333, 0.07", "-8.83622, -3.65265, 37.1099, 0.15", "-10.0654, -3.09244, 36.2191, 0.07", "-10.8502, -2.71551, 35.5966, 0.07", "-11.5512, -2.40818, 35.0642, 0.15", "-12.5248, -2.0436, 34.4117, 0.07", "-13.0658, -1.88224, 34.1218, 0.07", "-13.391, -1.79867, 33.9878, 0.29", "-13.8029, -1.70321, 33.8751, 0.29", "-14.9994, -1.48021, 33.6442, 0.07", "-16.1458, -1.29536, 33.4881, 0.07", "-17.1808, -1.13818, 33.3786, 0.07", "-17.5674, -1.08122, 33.3267, 0.07", "-17.7661, -1.0542, 33.2897, 0.15", "-18.0782, -1.01227, 33.2014, 0.15", "-18.6441, -0.918089, 32.9321, 0.15", "-19.3491, -0.762837, 32.4268, 0.15", "-20.0393, -0.604617, 31.7821, 0.15", "-20.4386, -0.510258, 31.3804, 0.15", "-20.8668, -0.408155, 30.9415, 0.15", "-21.2897, -0.309217, 30.4972, 0.15", "-21.6107, -0.238112, 30.1507, 0.15", "-21.9676, -0.138034, 29.7462, 0.15", "-22.6251, 0.094268, 28.9328, 0.07", "-23.0544, 0.262905, 28.4105, 0.07", "-23.6851, 0.499909, 27.7511, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-39.2141, 48.8747, 43.0258, 0.07", "-40.5172, 48.1221, 44.0877, 0.07", "-41.2865, 47.5899, 44.8208, 0.88", "-42.2246, 46.8301, 45.8439, 0.22", "-42.8733, 46.3146, 46.5427, 0.88", "-43.7472, 45.6295, 47.4645, 1.84", "-45.3976, 44.2973, 49.2018, 0.22", "-46.0575, 43.653, 49.9199, 0.22", "-46.5816, 43.07, 50.4522, 0.22", "-47.4694, 42.0133, 51.269, 0.15", "-48.0939, 41.2354, 51.7956, 0.15", "-48.5918, 40.6228, 52.1316, 0.29", "-49.6416, 39.3519, 52.6553, 1.25", "-51.248, 37.4445, 53.3171, 0.07", "-51.7892, 36.7963, 53.5164, 0.88", "-52.076, 36.4338, 53.6246, 1.18", "-53.2119, 35.0416, 54.042, 0.07", "-53.785, 34.3696, 54.2622, 0.74", "-54.8287, 33.1715, 54.7855, 0.07", "-55.2612, 32.6364, 55.0992, 0.29", "-55.8124, 31.829, 55.6923, 0.07", "-56.1962, 31.1124, 56.3521, 1.03", "-56.4002, 30.605, 56.9323, 1.47", "-56.7569, 29.453, 58.4389, 0.22", "-56.9496, 28.6233, 59.6441, 0.22", "-57.1334, 27.8417, 60.8863, 0.22", "-57.3237, 27.2715, 61.8626, 0.22", "-57.4717, 26.9373, 62.4292, 0.22", "-57.776, 26.4488, 63.103, 0.22", "-58.083, 26.0521, 63.5451, 0.22", "-58.6676, 25.429, 64.138, 0.22", "-59.5438, 24.4979, 64.8425, 1.03", "-60.3589, 23.5676, 65.4385, 1.47", "-61.8253, 21.7304, 66.4925, 0.07", "-62.2116, 21.2437, 66.76, 1.25", "-62.7839, 20.5463, 67.139, 1.4", "-63.9603, 19.1679, 67.8548, 0.29", "-64.7418, 18.3223, 68.2811, 0.15", "-65.428, 17.6716, 68.6032, 0.81", "-66.943, 16.3697, 69.2246, 0.15", "-67.8376, 15.6941, 69.512, 0.15", "-68.5045, 15.2371, 69.6987, 0.37", "-69.6385, 14.5727, 69.8803, 0.15", "-70.2409, 14.2465, 69.9145, 0.88", "-70.8378, 13.9365, 69.9039, 1.55", "-73.1896, 12.765, 69.7675, 0.22", "-73.7985, 12.4772, 69.7409, 0.22", "-75.2666, 11.8403, 69.7325, 0.81", "-77.1923, 11.0748, 69.8125, 0.07", "-77.9408, 10.8087, 69.9039, 0.74", "-79.1025, 10.4394, 70.1696, 0.22", "-80.3834, 10.0551, 70.6377, 0.37", "-81.252, 9.79742, 71.0526, 0.22", "-82.6241, 9.35973, 71.8988, 1.03", "-84.0515, 8.80791, 72.9763, 0.07", "-85.1056, 8.30274, 73.9156, 0.88", "-85.9749, 7.80598, 74.7635, 1.25", "-87.5429, 6.7714, 76.2486, 0.15", "-88.3002, 6.21504, 76.9155, 0.74", "-89.7413, 5.0714, 78.0257, 0.22", "-91.1177, 3.93315, 78.8863, 1.11", "-91.9673, 3.24496, 79.3052, 2.06", "-94.1015, 1.60092, 80.1341, 0.15", "-94.9078, 1.0146, 80.3871, 0.29", "-96.6992, -0.172563, 80.8673, 0.07", "-97.5687, -0.664978, 81.086, 0.22", "-99.2096, -1.46655, 81.5592, 0.07", "-100.115, -1.83671, 81.9174, 1.4", "-102.192, -2.54599, 82.9684, 0.07", "-103.211, -2.8577, 83.5371, 0.81", "-104.912, -3.30529, 84.6258, 0.07", "-105.957, -3.54488, 85.374, 0.96", "-107.893, -3.89513, 86.8448, 0.07", "-108.617, -3.99589, 87.3953, 0.07", "-109.546, -4.09907, 88.0913, 1.25", "-111.655, -4.31085, 89.577, 0.22", "-113.098, -4.46245, 90.5003, 0.88", "-114.041, -4.52417, 91.026, 1.18", "-116.773, -4.61315, 92.3333, 0.15", "-117.618, -4.62961, 92.6794, 0.81", "-118.949, -4.64673, 93.1236, 0.15", "-120.21, -4.65386, 93.4213, 1.18", "-122.211, -4.58875, 93.7867, 0.07", "-123.066, -4.51516, 93.9171, 0.07", "-124.236, -4.25874, 94.0156, 0.07", "-124.837, -4.07483, 94.0422, 0.88", "-125.721, -3.76257, 94.0659, 1.33", "-128.107, -2.76292, 94.0801, 0.07", "-129.209, -2.23367, 94.0539, 1.33", "-131.861, -0.760366, 93.9598, 0.07", "-132.301, -0.481279, 93.9361, 0.15" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.2141, 48.8747, 43.0258, 0.15", "-39.0721, 47.2559, 42.4317, 0.15", "-38.9864, 46.5952, 42.14, 0.29", "-38.8339, 45.607, 41.6863, 0.15", "-38.7612, 45.2254, 41.5028, 0.52", "-38.6014, 44.4575, 41.1297, 1.33", "-38.3188, 42.975, 40.4192, 0.07", "-38.1752, 42.1933, 40.0031, 0.07", "-38.0717, 41.5175, 39.6744, 0.37", "-37.9282, 40.3287, 39.2709, 0.07", "-37.8966, 39.9526, 39.1954, 0.15", "-37.8378, 38.1811, 39.0418, 0.15", "-37.8389, 37.747, 39.0539, 0.74", "-37.8837, 36.7653, 39.139, 1.25", "-38.1206, 34.3428, 39.4592, 0.15", "-38.3252, 32.9049, 39.7015, 0.15", "-38.4289, 32.2575, 39.8159, 0.15", "-38.5721, 31.4583, 39.9447, 0.15", "-38.7702, 30.4528, 40.0503, 1.25", "-39.1664, 28.756, 40.0752, 0.07", "-39.3547, 28.0814, 40.0167, 0.96", "-39.5263, 27.5011, 39.9201, 1.25", "-40.0888, 25.5702, 39.5222, 0.15", "-40.3075, 24.7774, 39.3227, 0.96", "-40.676, 23.2677, 38.8858, 0.07", "-40.8288, 22.5474, 38.6477, 0.29", "-41.237, 20.443, 37.8751, 0.07", "-41.3206, 19.9788, 37.6924, 0.29", "-41.5491, 18.532, 37.0847, 0.07", "-41.6283, 17.8625, 36.8025, 1.03", "-41.679, 17.2029, 36.5355, 1.47", "-41.7772, 14.8037, 35.634, 0.07", "-41.7775, 14.2371, 35.4448, 0.59", "-41.7692, 13.4361, 35.2034, 0.07", "-41.7741, 12.6702, 35.0105, 0.07", "-41.7969, 11.6284, 34.7873, 0.07", "-41.8568, 10.6989, 34.6195, 1.18", "-42.0951, 8.28621, 34.255, 0.07", "-42.2005, 7.60015, 34.1456, 0.74", "-42.5676, 5.80038, 33.8354, 0.07", "-42.6976, 5.29699, 33.7366, 0.44", "-43.2254, 3.60519, 33.3957, 0.07", "-43.5407, 2.75144, 33.2229, 1.47", "-44.274, 1.02228, 32.8643, 0.07", "-44.5149, 0.494987, 32.7424, 0.37", "-45.0199, -0.54094, 32.4667, 0.07", "-45.7298, -1.91795, 32.1165, 0.07", "-46.203, -2.80394, 31.8972, 0.07", "-46.4448, -3.27183, 31.7982, 0.37", "-47.0193, -4.44432, 31.5919, 0.15", "-47.3737, -5.18261, 31.4958, 0.81", "-47.974, -6.47796, 31.3825, 0.15", "-48.4527, -7.55659, 31.3362, 1.55", "-49.2355, -9.34403, 31.3435, 0.07", "-49.4728, -9.88702, 31.3817, 0.66", "-50.0913, -11.4012, 31.6039, 0.07", "-50.273, -11.953, 31.7158, 0.29", "-50.4852, -12.7956, 31.925, 0.07", "-50.6146, -13.3261, 32.0825, 0.74", "-50.932, -14.702, 32.5432, 0.15", "-51.149, -15.9077, 32.9622, 1.18", "-51.3514, -18.3398, 33.8404, 0.15", "-51.3798, -19.1627, 34.139, 0.66" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-37.8683, 90.5993, 143.328, 0.07", "-38.4446, 89.2707, 143.449, 0.07", "-38.613, 88.7332, 143.481, 0.07", "-38.7845, 88.1857, 143.515, 0.22", "-39.1084, 87.1521, 143.577, 0.07", "-39.2401, 86.7317, 143.603, 0.52", "-39.462, 86.0233, 143.646, 0.07", "-39.4908, 85.6754, 143.666, 0.22" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-37.8683, 90.5993, 143.328, 0.29", "-37.724, 90.8247, 145.147, 0.29", "-37.6145, 90.8702, 146.48, 0.29", "-37.5522, 90.8251, 147.985, 0.59", "-37.537, 90.7361, 149.991, 0.74", "-37.5645, 90.7045, 150.955, 1.03", "-37.6436, 90.7222, 152.086, 1.03", "-37.8044, 90.7973, 153.525, 0.15", "-38.0004, 90.9566, 154.615, 0.44", "-38.3125, 91.2308, 155.963, 0.81", "-38.5869, 91.4868, 156.813, 1.03", "-39.1469, 92.0918, 158.334, 0.15", "-39.6844, 92.7754, 159.659, 0.74", "-40.2163, 93.6708, 160.976, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "15.0681, -8.47203, 5.82325, 0.22", "15.0195, -9.97793, 3.54042, 0.22", "15.0547, -10.6774, 2.65432, 0.37", "15.1117, -11.1089, 2.15216, 0.59", "15.2172, -11.9065, 1.22379, 0.22", "15.3322, -12.7756, 0.212286, 1.47", "15.4494, -13.6614, -0.818808, 0.29", "15.6531, -14.5603, -1.5709, 0.15", "15.8925, -15.4171, -2.20129, 1.03", "15.7558, -22.0464, -10.1349, 1.03" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "15.0681, -8.47203, 5.82325, 0.22", "15.4277, -9.10053, 6.04155, 0.22", "15.7218, -9.70742, 6.19813, 1.4", "16.0873, -10.7276, 6.37225, 2.65", "16.7737, -13.3457, 6.68604, 0.22", "16.8775, -13.8747, 6.72585, 0.22", "16.9965, -14.6951, 6.7586, 0.96", "17.0438, -15.7029, 6.74075, 2.06", "16.9738, -17.3227, 6.61476, 0.22", "16.8328, -18.2322, 6.45316, 0.15", "16.6668, -18.9224, 6.24521, 0.29", "16.4699, -19.6305, 6.01925, 0.15", "16.2818, -20.3742, 5.76147, 1.18", "16.188, -20.8144, 5.59762, 1.7", "15.8682, -22.7262, 4.85354, 0.22", "15.7776, -23.4996, 4.55323, 0.81", "15.7445, -24.0064, 4.36651, 1.4", "15.7222, -25.7439, 3.76634, 0.15", "15.7601, -26.1984, 3.62849, 0.15", "15.9375, -27.1102, 3.38795, 0.15", "16.1055, -27.7039, 3.25872, 0.37", "16.2652, -28.2973, 3.14136, 1.33", "16.4157, -28.9991, 3.00934, 1.84", "16.616, -31.2766, 2.62582, 0.22", "16.5911, -32.51, 2.41655, 0.07", "16.5665, -33.0321, 2.32834, 0.96", "16.4483, -34.1479, 2.14597, 0.22", "16.2763, -35.0053, 2.00304, 1.33", "15.7316, -36.4849, 1.75474, 0.22", "15.1586, -37.2386, 1.63292, 1.18" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "7.36594, 38.5369, 34.983, 0.44", "6.57543, 38.3476, 35.7406, 0.44", "5.91114, 38.2919, 36.2543, 0.44", "5.23578, 38.3062, 36.7609, 0.44", "4.9409, 38.3259, 36.9907, 0.44", "4.466, 38.362, 37.3598, 0.96", "4.16528, 38.3836, 37.588, 1.18", "3.33176, 38.4263, 38.1224, 0.15", "2.92391, 38.4718, 38.4021, 0.15", "2.55839, 38.5191, 38.6964, 0.15", "2.02268, 38.5583, 39.1722, 0.15", "1.72755, 38.5378, 39.4427, 1.33", "1.11836, 38.4172, 39.9911, 1.92", "0.0445781, 38.0822, 40.9279, 0.22", "-0.658557, 37.7984, 41.4993, 0.59", "-1.02167, 37.602, 41.8055, 1.03", "-1.84783, 37.0227, 42.5661, 0.15", "-2.28238, 36.6352, 43.0137, 0.15", "-2.47385, 36.4127, 43.23, 0.88", "-2.8233, 35.8746, 43.6465, 1.92", "-3.49887, 34.6173, 44.5173, 0.22", "-3.66612, 34.2797, 44.7608, 0.22", "-3.85469, 33.8351, 45.0497, 0.22", "-3.96444, 33.5818, 45.2101, 0.22", "-4.26773, 32.98, 45.5924, 0.22", "-4.53911, 32.5325, 45.8807, 1.11", "-5.02853, 31.8907, 46.2926, 2.58", "-5.97431, 30.8028, 47.0176, 0.52", "-6.71033, 29.9813, 47.5972, 0.15", "-7.01498, 29.6418, 47.8571, 0.15", "-7.43606, 29.1863, 48.249, 0.29", "-7.83043, 28.7769, 48.6352, 0.96", "-8.45447, 28.1262, 49.2689, 0.22", "-8.86642, 27.7282, 49.7129, 0.22", "-9.23514, 27.3357, 50.1106, 0.44", "-9.60706, 26.8842, 50.5535, 1.62", "-9.94092, 26.4428, 50.9976, 1.99" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "7.36594, 38.5369, 34.983, 1.47", "8.57883, 39.0054, 35.3654, 1.47" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-7.96695, -122.825, 36.0355, 0.22", "-7.58583, -122.096, 36.4287, 0.22", "-7.16544, -121.263, 36.8431, 0.22", "-6.8295, -120.6, 37.1297, 0.22", "-6.45046, -119.853, 37.4079, 0.66", "-6.15322, -119.292, 37.6071, 0.81", "-5.56061, -118.241, 37.9339, 0.15", "-5.1932, -117.61, 38.0682, 1.18", "-4.82613, -116.991, 38.1617, 1.4", "-3.99614, -115.642, 38.3002, 0.15", "-3.68936, -115.179, 38.3227, 0.15", "-3.02, -114.28, 38.3231, 1.7", "-2.35918, -113.484, 38.2551, 0.22", "-1.82681, -112.881, 38.1656, 0.88", "-1.39318, -112.406, 38.0752, 0.22", "-0.936436, -111.909, 37.955, 0.07", "-0.409804, -111.291, 37.8132, 0.07", "0.285133, -110.424, 37.6436, 0.66", "0.9666, -109.506, 37.4947, 0.07", "1.212, -109.149, 37.4529, 0.37", "1.51142, -108.671, 37.4145, 0.66", "2.38295, -107.145, 37.3671, 0.07", "2.74192, -106.478, 37.3751, 1.03", "3.36418, -105.23, 37.4545, 0.15", "3.62267, -104.675, 37.5181, 0.88", "3.83076, -104.197, 37.5896, 1.18", "4.43711, -102.644, 37.8999, 0.15", "4.59216, -102.128, 38.0386, 0.15", "4.70076, -101.553, 38.2273, 0.22", "4.71068, -101.119, 38.4018, 0.07", "4.64634, -100.597, 38.623, 0.29", "4.52709, -100.108, 38.8369, 0.07", "4.38369, -99.705, 39.0054, 0.59", "4.11438, -99.0494, 39.2718, 0.15", "3.74062, -98.2023, 39.608, 1.62", "3.35756, -97.3447, 39.9414, 0.15", "3.08971, -96.7413, 40.1831, 0.29", "2.66415, -95.7609, 40.5766, 0.07", "2.38012, -94.97, 40.8958, 0.07", "2.25071, -94.5203, 41.0774, 0.66", "2.0479, -93.7179, 41.4055, 0.15", "1.90681, -93.1103, 41.6637, 1.03", "1.75126, -92.4076, 41.9922, 1.62", "1.38459, -90.4668, 43.021, 0.07", "1.24853, -89.6044, 43.5046, 0.59", "1.15954, -88.9908, 43.8657, 0.15", "1.05723, -88.2047, 44.338, 0.88", "0.95596, -87.0547, 45.0205, 0.15", "0.876245, -86.0116, 45.671, 0.15", "0.822525, -85.1929, 46.2138, 1.33", "0.784908, -84.1556, 46.9105, 0.15", "0.801903, -83.2992, 47.4701, 0.15", "0.867729, -82.5573, 47.904, 1.33" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-7.96695, -122.825, 36.0355, 0.15", "-8.32563, -123.813, 36.3822, 0.15", "-8.58073, -124.377, 36.7285, 0.15", "-8.78197, -124.757, 37.0659, 0.15", "-8.9681, -125.054, 37.3762, 0.74", "-9.27979, -125.517, 37.8849, 0.15", "-9.5153, -125.882, 38.2753, 1.4", "-9.8769, -126.461, 39.0006, 0.15", "-10.2089, -127.01, 39.7177, 0.66", "-10.406, -127.491, 40.3455, 0.07", "-10.4438, -127.73, 40.6759, 0.07", "-10.4622, -128.039, 41.0921, 0.29", "-10.4294, -128.577, 41.8029, 0.07", "-10.3301, -129.025, 42.3638, 1.25", "-10.005, -129.89, 43.4426, 0.29", "-9.52144, -130.815, 44.6761, 1.62" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-64.6137, -95.1004, -2.39379, 0.59", "-66.1355, -94.9191, -3.79551, 0.59", "-66.5864, -94.8438, -4.27087, 0.07", "-67.1696, -94.7411, -5.00336, 0.07", "-67.5559, -94.6686, -5.54533, 0.37", "-68.1778, -94.5315, -6.51247, 0.07", "-68.6247, -94.4105, -7.31789, 0.15", "-69.1601, -94.2674, -8.56717, 1.62", "-69.5807, -94.0328, -10.3412, 0.22", "-69.6239, -93.9256, -11.1689, 0.22", "-69.5957, -93.835, -11.8959, 0.59", "-69.4239, -93.7055, -12.9463, 0.59", "-69.0958, -93.5926, -14.0289, 0.59", "-68.386, -93.5141, -15.336, 1.18", "-67.8566, -93.4927, -15.9494, 1.18", "-69.8413, -92.0849, -26.8008, 1.18" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-64.6137, -95.1004, -2.39379, 0.22", "-65.7703, -95.7589, -2.77479, 0.22", "-66.4114, -96.1094, -2.99702, 0.15", "-67.3548, -96.5541, -3.38379, 0.15", "-68.1822, -96.9098, -3.76685, 1.25", "-69.1335, -97.2824, -4.20815, 0.15", "-69.9496, -97.5754, -4.56878, 0.15", "-71.0823, -97.9239, -5.06174, 1.62", "-72.3417, -98.2882, -5.56146, 0.22", "-73.1146, -98.5281, -5.85899, 0.22", "-74.0233, -98.8207, -6.21107, 1.33", "-74.9186, -99.1033, -6.54185, 1.11", "-76.4315, -99.5609, -7.05277, 0.15", "-76.9651, -99.7306, -7.20482, 0.15", "-78.1663, -100.162, -7.44985, 0.15", "-78.8559, -100.427, -7.52934, 0.15", "-79.5567, -100.713, -7.51404, 0.66", "-80.5438, -101.073, -7.24279, 0.07", "-81.1373, -101.228, -6.88509, 0.88", "-81.9315, -101.315, -6.22379, 0.15", "-82.7308, -101.284, -5.44802, 0.59", "-83.7037, -101.099, -4.37191, 1.4", "-84.9696, -100.638, -2.9123, 0.22", "-85.8543, -100.15, -1.84689, 1.25", "-86.8982, -99.3968, -0.539876, 0.44", "-87.4469, -98.897, 0.14834, 0.52", "-88.058, -98.2082, 0.951549, 1.11", "-88.7059, -97.3199, 1.89186, 0.37", "-89.3952, -96.2429, 3.03623, 0.07", "-89.7662, -95.6537, 3.71128, 0.07", "-90.008, -95.2419, 4.2357, 0.22", "-90.3055, -94.6928, 5.03263, 0.96", "-90.547, -94.1908, 5.83162, 2.06", "-90.9227, -93.1304, 7.72694, 0.22", "-91.0933, -92.4535, 9.12248, 0.74", "-91.1746, -92.0754, 10.1145, 0.74", "-91.2197, -91.7812, 11.2046, 0.74", "-91.2127, -91.7085, 11.686, 0.74", "-91.1118, -91.6508, 12.8364, 0.74", "-90.8629, -91.6716, 14.0269, 0.74", "-90.69, -91.6832, 14.7284, 0.74", "-90.5917, -91.6446, 15.1294, 0.74", "-90.345, -91.3582, 16.0477, 0.74", "-90.059, -90.9317, 16.7818, 0.74", "-89.51, -90.0561, 17.8947, 0.29", "-89.2016, -89.5371, 18.4456, 0.29", "-88.7501, -88.7936, 19.1515, 0.07", "-88.4521, -88.3356, 19.5593, 0.44", "-87.6682, -87.1905, 20.5033, 0.07", "-87.2025, -86.5734, 21.0047, 0.07", "-86.731, -85.9848, 21.4903, 0.07", "-86.4452, -85.6527, 21.7777, 0.29", "-85.9097, -85.0473, 22.2898, 0.07", "-85.4708, -84.5477, 22.7508, 0.37", "-84.9682, -84.0194, 23.2939, 0.22", "-84.7597, -83.8334, 23.5398, 0.81", "-84.3803, -83.5453, 24.0924, 0.37", "-83.8713, -83.2211, 25.0965, 0.88", "-83.3297, -82.9046, 26.3491, 0.88", "-83.1372, -82.8052, 26.8805, 0.88", "-82.8216, -82.6626, 27.9472, 0.88", "-82.5654, -82.591, 28.9008, 0.88", "-82.216, -82.617, 30.3301, 0.88" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "15.1586, -37.2386, 1.63292, 0.29", "15.1769, -38.6875, 1.67483, 0.29", "15.2047, -39.4137, 1.7008, 0.15", "15.2501, -40.1134, 1.72635, 1.03", "15.3526, -41.4224, 1.76621, 0.15", "15.4217, -42.3053, 1.7931, 1.4", "15.5791, -44.3158, 1.85433, 0.07", "15.6, -44.6204, 1.86341, 0.81", "15.7017, -45.656, 1.88007, 0.07", "15.8047, -46.396, 1.89834, 1.62" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "15.1586, -37.2386, 1.63292, 1.92", "14.7907, -37.8619, 1.83451, 1.92", "14.4022, -38.4877, 2.03678, 2.06", "13.4632, -39.8456, 2.48258, 0.22", "13.1463, -40.2799, 2.63499, 0.66", "12.6684, -40.8371, 2.82912, 0.22", "12.3036, -41.2063, 2.947, 0.96", "12.0767, -41.4188, 3.01674, 1.47", "11.1174, -42.2124, 3.27354, 0.52", "10.532, -42.593, 3.39707, 0.66", "9.32238, -43.332, 3.598, 0.15", "8.64997, -43.7482, 3.6902, 0.37" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-9.94092, 26.4428, 50.9976, 0.07", "-11.1951, 26.4429, 51.5045, 0.07", "-11.7774, 26.4429, 51.7399, 0.96", "-12.5585, 26.443, 52.0556, 0.07", "-12.9711, 26.443, 52.2223, 0.29", "-13.6564, 26.4431, 52.4993, 0.07", "-14.4, 26.4432, 52.7998, 0.07" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.94092, 26.4428, 50.9976, 0.44", "-10.087, 25.4552, 51.8395, 0.44", "-10.1103, 24.6391, 52.6107, 0.96", "-10.0835, 24.0628, 53.2037, 0.66", "-10.0493, 23.4619, 53.831, 0.15", "-10.0727, 23.1288, 54.1505, 0.15", "-10.134, 22.6252, 54.6047, 0.29", "-10.2337, 21.9, 55.2195, 0.29", "-10.3247, 21.4368, 55.5629, 0.74", "-10.4345, 20.8085, 55.9705, 1.62", "-10.6509, 19.2152, 56.8824, 0.22", "-10.7408, 18.587, 57.2068, 1.18", "-10.8045, 18.2393, 57.3702, 1.55", "-10.983, 17.3027, 57.7709, 0.29", "-11.1171, 16.4631, 58.129, 0.22", "-11.1942, 15.5279, 58.5597, 0.22", "-11.166, 14.8811, 58.9009, 0.22", "-11.1424, 14.2988, 59.253, 0.52", "-11.1205, 14.075, 59.4173, 0.52", "-11.0496, 13.6426, 59.8087, 0.52", "-10.9978, 13.3388, 60.0909, 0.52", "-10.9256, 12.9656, 60.3944, 0.52", "-10.7909, 12.3331, 60.8664, 0.15", "-10.6945, 11.9233, 61.1505, 0.15", "-10.6204, 11.6077, 61.3539, 0.44", "-10.4945, 11.0809, 61.6757, 1.11", "-10.2507, 10.0918, 62.1986, 0.15", "-10.1578, 9.69642, 62.381, 0.15", "-9.9733, 8.8542, 62.7486, 0.22", "-9.82118, 8.18434, 63.026, 1.25", "-9.6425, 7.55523, 63.2948, 1.99", "-9.1302, 6.17458, 63.9101, 0.15", "-8.87084, 5.62085, 64.1392, 1.03", "-8.56014, 5.07789, 64.3591, 1.03", "-7.81927, 4.16528, 64.7203, 0.15", "-7.20592, 3.60796, 64.9368, 0.15", "-6.61117, 3.19555, 65.0833, 0.15", "-5.88099, 2.81448, 65.1994, 0.81", "-5.13349, 2.43752, 65.2717, 1.33", "-3.68324, 1.64056, 65.3201, 0.15", "-3.24314, 1.32085, 65.3149, 1.25", "-2.52093, 0.603734, 65.2816, 0.29", "-1.8808, -0.277217, 65.2261, 0.22", "-1.50352, -0.994366, 65.1673, 0.15", "-1.19775, -1.86438, 65.0532, 1.77", "-0.809069, -3.65725, 64.7255, 0.07", "-0.726771, -4.19795, 64.6097, 0.81", "-0.641752, -5.16737, 64.3875, 0.07", "-0.608779, -5.98686, 64.1949, 0.96", "-0.587648, -6.74957, 63.9971, 2.06", "-0.509463, -8.52425, 63.5103, 0.07", "-0.445094, -9.37286, 63.2733, 0.22", "-0.369721, -10.3592, 63.0426, 0.15", "-0.310711, -11.1742, 62.8936, 1.47", "-0.271, -12.0753, 62.7572, 0.66", "-0.271934, -12.9859, 62.6354, 0.66", "-0.296746, -13.5642, 62.5755, 1.77", "-0.369235, -14.7985, 62.4564, 0.07", "-0.403688, -15.1455, 62.4291, 0.22", "-0.513879, -15.9066, 62.3842, 0.22", "-0.644124, -16.5495, 62.3626, 1.55", "-0.985528, -17.8291, 62.3194, 0.15", "-1.1637, -18.3945, 62.2827, 0.59", "-1.39294, -19.0912, 62.2036, 0.15", "-1.57999, -19.6677, 62.1235, 0.15", "-1.74715, -20.1917, 62.0415, 0.74", "-1.95316, -20.8287, 61.9187, 1.25", "-2.38233, -21.981, 61.6877, 0.07", "-2.62642, -22.6126, 61.5638, 0.15", "-2.8384, -23.1603, 61.4826, 0.74", "-3.03813, -23.6502, 61.4425, 1.4", "-3.38736, -24.4744, 61.4338, 0.15", "-3.74037, -25.2423, 61.5208, 0.07", "-3.93154, -25.5995, 61.6159, 0.29", "-4.51014, -26.4793, 61.9401, 0.07", "-4.81943, -26.9118, 62.1271, 0.88", "-5.0336, -27.1853, 62.2606, 1.33", "-5.70827, -27.9679, 62.6964, 0.22", "-6.15498, -28.4786, 62.9882, 0.22", "-6.58659, -28.9428, 63.2695, 1.33" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "8.57883, 39.0054, 35.3654, 0.15", "9.14003, 40.5805, 35.9565, 0.15", "9.32855, 41.1382, 36.2205, 0.22", "9.61486, 42.0417, 36.7443, 0.15", "9.7693, 42.5881, 37.0868, 0.96", "9.95812, 43.3364, 37.5685, 0.29", "10.1083, 43.914, 37.9368, 0.29", "10.2658, 44.5706, 38.4132, 0.29", "10.4353, 45.2116, 38.8398, 0.29", "10.6158, 45.824, 39.2075, 1.25", "10.6973, 46.0624, 39.3399, 1.25", "11.2296, 47.4001, 40.0484, 0.15", "11.7015, 48.3862, 40.5135, 1.33", "12.4485, 49.7359, 41.084, 0.07", "12.9094, 50.4383, 41.3606, 0.59", "13.592, 51.3608, 41.7168, 0.15", "14.2179, 52.1669, 42.0248, 1.11", "14.7268, 52.8927, 42.2896, 2.14", "14.9745, 53.3073, 42.4328, 1.84", "15.5567, 54.8203, 42.9696, 0.15", "15.6982, 55.7201, 43.2788, 1.4", "15.676, 56.4621, 43.5394, 0.96", "15.4088, 58.3803, 44.2936, 0.15", "15.2399, 59.1549, 44.6404, 0.96", "14.8112, 60.6975, 45.4673, 0.15", "14.6412, 61.1998, 45.7895, 1.18", "14.3518, 62.1377, 46.4993, 0.15", "14.1688, 63.0421, 47.3145, 0.59", "14.1536, 63.3377, 47.6321, 0.88", "14.226, 64.3371, 48.7987, 0.22", "14.3602, 64.9992, 49.6063, 0.88", "14.5018, 65.5658, 50.3065, 1.77", "14.8125, 66.6472, 51.5819, 0.29", "15.003, 67.1858, 52.1648, 0.81", "15.4062, 68.1738, 53.1611, 0.22", "15.7376, 68.8976, 53.8333, 0.37", "15.9291, 69.2843, 54.1691, 0.37", "16.4269, 70.2276, 54.937, 1.55", "17.1265, 71.4753, 55.8547, 0.07", "17.6854, 72.4621, 56.5094, 0.22", "18.0636, 73.1301, 56.9116, 0.22", "18.3952, 73.7272, 57.2531, 0.22", "18.7728, 74.4473, 57.6434, 0.07", "19.0808, 75.1005, 57.9755, 1.11", "19.243, 75.4783, 58.1437, 1.4", "19.8089, 76.774, 58.6435, 0.07", "20.1598, 77.576, 58.9385, 0.74", "20.3621, 78.0836, 59.1287, 0.74", "20.6767, 78.936, 59.4564, 0.22", "21.036, 79.9464, 59.8435, 0.22", "21.2724, 80.6169, 60.0925, 0.96", "21.4282, 81.074, 60.2571, 0.96", "21.9711, 82.8144, 60.8753, 0.15", "22.2511, 83.7794, 61.2246, 0.15", "22.3581, 84.2114, 61.38, 0.22", "22.5679, 85.413, 61.7946, 0.07", "22.6501, 86.0343, 62.0129, 0.07", "22.7365, 87.0432, 62.3635, 0.96", "22.7725, 87.8676, 62.6436, 0.22", "22.7718, 88.7867, 62.9492, 1.25", "22.7169, 90.7941, 63.6221, 0.15", "22.6695, 91.7782, 63.9476, 1.33", "22.5813, 93.3543, 64.4652, 0.15", "22.549, 93.8458, 64.6336, 0.22", "22.4599, 94.9235, 65.011, 0.15", "22.3838, 95.6588, 65.2707, 0.81", "22.3667, 95.7932, 65.3166, 0.81" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "8.57883, 39.0054, 35.3654, 0.29", "9.59776, 39.7819, 36.6029, 0.29", "10.532, 40.6233, 37.7954, 0.52", "11.0372, 41.1421, 38.4614, 1.25", "11.943, 42.1404, 39.6575, 0.15", "12.3584, 42.606, 40.1985, 0.15", "12.6681, 42.9661, 40.612, 0.15", "13.1353, 43.6167, 41.2528, 0.15", "13.4859, 44.1023, 41.6883, 0.81", "13.9723, 44.7271, 42.2613, 1.33", "14.8021, 45.732, 43.2231, 0.22", "15.2678, 46.2116, 43.7392, 0.22", "15.8194, 46.6663, 44.2833, 1.11", "16.2872, 46.9892, 44.711, 1.7", "17.1617, 47.5714, 45.4959, 0.22", "17.6142, 47.8591, 45.8994, 0.88", "18.4924, 48.3507, 46.6331, 0.15", "18.9956, 48.5797, 47.0174, 0.29", "19.4474, 48.7408, 47.3524, 0.29", "20.0336, 48.9391, 47.803, 0.15", "20.6901, 49.1865, 48.353, 0.15", "21.2058, 49.4167, 48.8179, 0.96", "21.8271, 49.7147, 49.408, 0.66", "22.6865, 49.9839, 50.2259, 0.15", "23.2703, 50.1321, 50.7898, 0.15", "24.0545, 50.3186, 51.5882, 0.81", "25.2054, 50.6253, 52.8307, 2.14", "25.7815, 50.8004, 53.4883, 2.14", "27.4574, 51.4198, 55.4316, 0.15", "28.0585, 51.6526, 56.1079, 0.15", "28.9566, 51.9684, 57.0746, 0.29", "29.5938, 52.1677, 57.7366, 1.33", "30.1385, 52.3445, 58.3017, 1.62", "31.1945, 52.7621, 59.3995, 0.15", "31.534, 52.9607, 59.7871, 0.15", "32.0574, 53.2685, 60.4099, 0.15", "32.3536, 53.4462, 60.7848, 0.15", "32.7294, 53.6479, 61.2935, 0.29", "33.2723, 53.9045, 62.1278, 0.66", "33.968, 54.2443, 63.3904, 0.15", "34.3192, 54.4733, 64.1212, 0.15", "34.5697, 54.6968, 64.7051, 0.15", "34.8391, 55.0435, 65.4167, 0.66", "35.2873, 55.8445, 66.814, 0.22", "35.551, 56.4256, 67.693, 0.22", "35.7864, 56.9672, 68.4524, 1.33", "36.0759, 57.6453, 69.3531, 1.92", "36.699, 59.1034, 71.2308, 0.37", "37.0363, 59.9221, 72.2599, 0.22", "37.3995, 60.8242, 73.3728, 0.22", "37.5709, 61.2611, 73.9595, 0.22", "37.6726, 61.6173, 74.52, 0.22", "37.7054, 61.9006, 75.1085, 0.22", "37.7146, 62.1015, 75.6797, 0.22", "37.7242, 62.3452, 76.3649, 0.52", "37.7427, 63.0059, 77.9552, 1.18", "37.797, 63.7062, 79.4809, 1.4", "37.9644, 64.9033, 81.9204, 0.81", "38.1597, 65.6192, 83.3653, 0.81", "38.5023, 66.3796, 84.9667, 1.7", "39.3697, 67.6677, 87.8312, 0.29", "39.9148, 68.2824, 89.2294, 0.29", "40.26, 68.6147, 89.9722, 1.03", "41.0395, 69.3367, 91.5246, 0.22", "41.6756, 69.9172, 92.7717, 1.11", "42.4742, 70.5307, 94.2808, 0.29", "43.0098, 70.8595, 95.2989, 0.29", "43.2786, 71.0191, 95.8771, 0.52", "43.6624, 71.21, 96.8868, 0.52", "43.7825, 71.274, 97.2764, 0.52", "43.9675, 71.3339, 97.8817, 0.52", "44.3817, 71.3046, 98.8628, 0.52", "44.8326, 71.2492, 99.4869, 0.52", "45.7879, 71.2024, 100.51, 0.22", "46.6932, 71.2539, 101.333, 0.15", "47.0461, 71.3509, 101.668, 0.15", "47.6612, 71.6488, 102.258, 0.81", "48.7129, 72.3439, 103.289, 0.29", "49.4768, 72.9726, 104.07, 0.81", "50.0767, 73.5968, 104.704, 1.7", "51.4569, 75.291, 106.254, 0.22", "52.1284, 76.2681, 107.027, 0.44", "52.4028, 76.8306, 107.369, 0.15", "52.6899, 77.6227, 107.727, 0.88", "53.1543, 79.2596, 108.264, 0.22", "53.3638, 80.0516, 108.466, 0.88", "53.5354, 80.6903, 108.59, 1.47", "54.216, 83.1647, 109.076, 0.22", "54.3856, 83.7105, 109.186, 0.22", "54.6838, 84.439, 109.36, 0.37", "55.5172, 85.9636, 109.857, 0.22", "55.9158, 86.5769, 110.118, 0.22", "56.3398, 87.1477, 110.448, 0.96", "56.7484, 87.5892, 110.783, 1.55", "58.0694, 88.8614, 111.887, 0.15", "59.0295, 89.6644, 112.672, 1.25", "59.9091, 90.3652, 113.402, 1.25", "60.9353, 91.1177, 114.242, 0.74", "62.143, 91.8928, 115.229, 0.15", "62.9501, 92.3527, 115.889, 0.29", "63.4991, 92.6107, 116.31, 0.29", "64.4567, 92.9675, 116.892, 0.29", "65.4358, 93.291, 117.373, 0.81", "66.849, 93.8058, 117.974, 0.15", "67.6296, 94.1492, 118.304, 1.11", "68.0295, 94.3529, 118.472, 1.77", "70.1443, 95.4786, 119.331, 0.22", "70.9029, 95.8616, 119.601, 0.22", "71.8537, 96.3697, 119.896, 0.22", "72.7042, 96.8218, 120.1, 0.22", "73.156, 97.0769, 120.198, 0.44", "74.0505, 97.6187, 120.382, 0.44", "75.204, 98.3443, 120.615, 1.55", "76.4457, 99.0462, 120.85, 0.66", "78.0677, 99.779, 121.155, 0.15", "78.712, 100.023, 121.293, 0.15", "79.5114, 100.29, 121.503, 0.37", "80.7583, 100.666, 121.881, 0.15", "81.585, 100.898, 122.177, 0.81", "83.1152, 101.282, 122.789, 0.22", "83.9044, 101.468, 123.108, 0.22", "84.7403, 101.651, 123.426, 1.25", "85.143, 101.748, 123.57, 1.25", "86.6172, 102.134, 124.021, 0.07", "87.5815, 102.413, 124.266, 0.96", "89.5037, 103.005, 124.659, 0.22", "90.4526, 103.276, 124.822, 1.03", "91.4076, 103.53, 124.963, 1.77", "93.334, 104.067, 125.219, 0.15", "94.4007, 104.367, 125.339, 0.22", "95.6623, 104.736, 125.476, 0.15", "96.5862, 105.033, 125.588, 1.03", "97.7552, 105.424, 125.746, 0.22", "99.103, 105.89, 125.95, 0.22", "100.513, 106.438, 126.187, 0.15", "101.475, 106.829, 126.349, 0.15", "102.487, 107.252, 126.53, 0.81", "102.825, 107.391, 126.592, 1.77", "104.249, 107.927, 126.792, 0.07", "105.334, 108.306, 126.877, 0.59", "107.648, 109.118, 126.891, 0.22", "108.146, 109.289, 126.873, 0.59", "109.098, 109.592, 126.807, 0.66", "111.006, 110.183, 126.629, 0.07", "111.774, 110.405, 126.516, 0.07", "112.245, 110.516, 126.415, 0.52" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.4, 26.4432, 52.7998, 0.15", "-15.6603, 27.116, 53.5089, 0.15", "-16.6081, 27.7138, 53.7818, 0.15", "-17.6638, 28.4633, 53.8597, 0.07", "-18.1756, 28.8511, 53.7869, 0.07", "-19.3239, 29.7256, 53.4368, 0.07", "-20.2088, 30.3861, 53.0541, 0.07", "-20.5964, 30.6957, 52.7367, 0.07", "-20.9282, 30.9962, 52.3239, 0.29", "-21.3455, 31.4224, 51.6082, 0.29", "-21.5733, 31.664, 51.1493, 0.29", "-21.7771, 31.8822, 50.7095, 0.29", "-22.0286, 32.1489, 50.1312, 0.29", "-22.5249, 32.6012, 49.0567, 0.22", "-22.9017, 32.873, 48.3137, 0.22", "-23.5656, 33.2776, 47.119, 0.88", "-24.1582, 33.5947, 46.0998, 0.22", "-24.4402, 33.7249, 45.647, 0.22", "-24.9118, 33.9124, 44.9364, 0.15", "-25.4816, 34.1201, 44.1608, 0.15", "-26.0584, 34.329, 43.3744, 0.15", "-26.5573, 34.5241, 42.6667, 0.15", "-26.9648, 34.7138, 42.0563, 0.74", "-27.3134, 34.8981, 41.5306, 0.74", "-27.8194, 35.195, 40.7083, 0.15", "-28.4062, 35.5428, 39.6641, 0.22", "-28.6511, 35.6761, 39.1863, 0.22", "-29.0145, 35.8665, 38.3493, 0.22", "-29.1523, 35.9355, 37.9697, 0.22", "-29.3841, 36.0326, 37.2546, 0.22", "-29.5754, 36.0626, 36.506, 0.22", "-29.6736, 36.0315, 35.9639, 0.22", "-29.7661, 35.9509, 35.2764, 0.22", "-29.8252, 35.8718, 34.6605, 0.22", "-29.9519, 35.7583, 33.7325, 0.22", "-30.1818, 35.5742, 32.4724, 0.44", "-30.3566, 35.4282, 31.705, 0.44", "-30.4255, 35.3625, 31.4308, 0.44", "-30.6134, 35.1202, 30.6118, 0.44", "-30.7377, 34.8265, 29.7232, 0.44" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-14.4, 26.4432, 52.7998, 1.03", "-14.8464, 26.8089, 53.3115, 1.03", "-15.8636, 27.8443, 54.7414, 0.07", "-16.1956, 28.2377, 55.281, 0.07", "-16.4284, 28.6108, 55.7208, 0.22", "-16.7721, 29.2931, 56.4565, 0.07", "-17.0169, 29.8273, 57.0036, 0.37", "-17.3785, 30.7818, 57.9441, 0.15", "-17.6343, 31.6426, 58.7576, 1.33", "-18.197, 33.6484, 60.6419, 0.07", "-18.5213, 34.857, 61.7798, 0.07", "-18.6913, 35.5068, 62.3856, 0.66", "-18.8717, 36.2221, 63.0222, 0.66" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-6.58659, -28.9428, 63.2695, 0.07", "-7.52995, -29.9017, 63.5408, 0.07", "-8.12351, -30.5051, 63.7115, 0.37", "-8.79273, -31.1854, 63.9039, 0.22", "-9.48458, -31.8887, 64.1029, 0.88", "-9.94414, -32.3559, 64.2351, 0.44" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-6.58659, -28.9428, 63.2695, 0.07", "-7.15682, -26.6535, 63.0844, 0.07", "-7.38661, -25.731, 63.0098, 0.44", "-7.65571, -24.6506, 62.9224, 0.15", "-7.95224, -23.4602, 62.8261, 0.74", "-8.3479, -21.8717, 62.6977, 0.07" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_32", "dend_25", "dend_10", "dend_1", "dend_0", "axon_0", "dend_38", "dend_33", "dend_27", "dend_26", "dend_14", "dend_11", "dend_3", "dend_2", "axon_1", "dend_56", "dend_39", "dend_35", "dend_34", "dend_31", "dend_28", "dend_20", "dend_15", "dend_13", "dend_12", "dend_7", "dend_4", "dend_60", "dend_57", "dend_51", "dend_40", "dend_37", "dend_36", "dend_30", "dend_29", "dend_24", "dend_21", "dend_19", "dend_16", "dend_9", "dend_8", "dend_6", "dend_5", "dend_62", "dend_61", "dend_59", "dend_58", "dend_55", "dend_52", "dend_44", "dend_41", "dend_23", "dend_22", "dend_18", "dend_17", "dend_54", "dend_53", "dend_48", "dend_45", "dend_43", "dend_42", "dend_50", "dend_49", "dend_47", "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_DBC_cd818dfadf_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: soma_0
create dend_25
public dend_25
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: dend_32
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_14, id: dend_14, parent: dend_10
create dend_14
public dend_14
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_56, id: dend_56, parent: dend_38
create dend_56
public dend_56
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_20, id: dend_20, parent: dend_14
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_51, id: dend_51, parent: dend_39
create dend_51
public dend_51
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_24, id: dend_24, parent: dend_20
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_51
create dend_55
public dend_55
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, axon_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, axon_1, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_48
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_32(0), soma_0(0.49999950122992937)
    connect dend_25(0), soma_0(0.49999950122992937)
    connect dend_10(0), soma_0(0.49999950122992937)
    connect dend_1(0), soma_0(0.49999950122992937)
    connect dend_0(0), soma_0(0.49999950122992937)
    connect axon_0(0), soma_0(1.0)
    connect dend_38(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_14(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_56(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_20(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_51(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_24(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -3.29752, -10.9202, 0.0, 2.7473 ) }
    soma_0 { pt3dadd( -3.02947, -9.86122, 0.0, 4.90547 ) }
    soma_0 { pt3dadd( -2.76143, -8.80223, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( -2.49339, -7.74324, 0.0, 9.06693 ) }
    soma_0 { pt3dadd( -2.22534, -6.68425, 0.0, 10.5477 ) }
    soma_0 { pt3dadd( -1.9573, -5.62526, 0.0, 11.7638 ) }
    soma_0 { pt3dadd( -1.68926, -4.56627, 0.0, 12.6703 ) }
    soma_0 { pt3dadd( -1.42121, -3.50728, 0.0, 13.5724 ) }
    soma_0 { pt3dadd( -1.15317, -2.44829, 0.0, 13.9606 ) }
    soma_0 { pt3dadd( -0.885125, -1.3893, 0.0, 14.249 ) }
    soma_0 { pt3dadd( -0.617082, -0.330312, 0.0, 14.4914 ) }
    soma_0 { pt3dadd( -0.349039, 0.728678, 0.0, 14.572 ) }
    soma_0 { pt3dadd( -0.0809953, 1.78767, 0.0, 14.5168 ) }
    soma_0 { pt3dadd( 0.187048, 2.84666, 0.0, 14.1167 ) }
    soma_0 { pt3dadd( 0.455092, 3.90565, 0.0, 13.6161 ) }
    soma_0 { pt3dadd( 0.723135, 4.96464, 0.0, 12.8986 ) }
    soma_0 { pt3dadd( 0.991178, 6.02363, 0.0, 12.0703 ) }
    soma_0 { pt3dadd( 1.25922, 7.08262, 0.0, 10.8368 ) }
    soma_0 { pt3dadd( 1.52727, 8.14161, 0.0, 9.27498 ) }
    soma_0 { pt3dadd( 1.79531, 9.2006, 0.0, 7.02436 ) }
    soma_0 { pt3dadd( 2.06335, 10.2596, 0.0, 4.05122 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 21/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.851454, 9.85172, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.851454, 9.85172, 1.7, 1.62 ) }
    dend_32 { pt3dadd( 0.780075, 11.3154, 1.65369, 0.96 ) }
    dend_32 { pt3dadd( 0.718899, 12.5698, 1.614, 1.25 ) }
    dend_32 { pt3dadd( 0.633548, 14.3199, 1.55862, 1.55 ) }
    dend_32 { pt3dadd( 0.553668, 15.9578, 1.5068, 1.84 ) }
    dend_32 { pt3dadd( 0.473163, 17.6085, 1.45457, 2.14 ) }
    // Section: dend_25, id: dend_25, parent: soma_0 (entry count 28/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -2.23855, -9.19973, -9.03, 1.18 ) }
    dend_25 { pt3dadd( -1.81267, -9.30403, -9.10483, 1.18 ) }
    dend_25 { pt3dadd( -0.761136, -9.67387, -9.30633, 1.18 ) }
    dend_25 { pt3dadd( 1.00638, -10.4975, -9.69626, 1.03 ) }
    dend_25 { pt3dadd( 1.91256, -10.9915, -9.91591, 0.96 ) }
    dend_25 { pt3dadd( 2.69562, -11.3282, -10.0753, 0.81 ) }
    dend_25 { pt3dadd( 1.81072, -11.5458, -10.0907, 0.74 ) }
    dend_25 { pt3dadd( 1.16332, -11.9698, -10.2224, 0.74 ) }
    dend_25 { pt3dadd( 0.305462, -12.5265, -10.4502, 0.96 ) }
    dend_25 { pt3dadd( -0.742913, -13.1528, -10.7643, 1.18 ) }
    dend_25 { pt3dadd( -2.25771, -13.9666, -11.2653, 0.88 ) }
    dend_25 { pt3dadd( -3.53028, -14.586, -11.7442, 0.96 ) }
    dend_25 { pt3dadd( -4.85853, -15.1782, -12.2621, 1.25 ) }
    dend_25 { pt3dadd( -5.78353, -15.5736, -12.6511, 1.99 ) }
    dend_25 { pt3dadd( -6.69034, -15.9642, -13.079, 2.95 ) }
    dend_25 { pt3dadd( -7.57115, -16.3815, -13.5836, 3.54 ) }
    dend_25 { pt3dadd( -8.31466, -16.7881, -14.1285, 3.54 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -1.90855, -11.3838, 1.23, 0.81 ) }
    dend_10 { pt3dadd( -1.80699, -11.9324, 1.20726, 0.81 ) }
    dend_10 { pt3dadd( -1.64018, -12.6043, 1.17951, 0.96 ) }
    dend_10 { pt3dadd( -1.44441, -13.2752, 1.1531, 1.18 ) }
    dend_10 { pt3dadd( -1.23331, -13.9249, 1.12905, 1.18 ) }
    dend_10 { pt3dadd( -0.981613, -14.645, 1.1264, 0.81 ) }
    dend_10 { pt3dadd( -0.820326, -15.0849, 1.14116, 1.03 ) }
    dend_10 { pt3dadd( -0.574709, -15.7014, 1.20599, 1.47 ) }
    dend_10 { pt3dadd( -0.403492, -16.1429, 1.28956, 2.06 ) }
    dend_10 { pt3dadd( -0.269484, -16.5411, 1.397, 2.14 ) }
    dend_10 { pt3dadd( -0.0903698, -17.2814, 1.65062, 1.33 ) }
    dend_10 { pt3dadd( 0.014636, -18.2293, 2.02502, 0.96 ) }
    dend_10 { pt3dadd( -0.0209059, -19.0734, 2.38011, 0.96 ) }
    dend_10 { pt3dadd( -0.15663, -19.6765, 2.64051, 1.18 ) }
    dend_10 { pt3dadd( -0.32106, -20.1223, 2.83593, 1.99 ) }
    dend_10 { pt3dadd( -0.583965, -20.6726, 3.07337, 2.88 ) }
    dend_10 { pt3dadd( -0.931704, -21.2975, 3.32643, 3.02 ) }
    dend_10 { pt3dadd( -1.41904, -22.1374, 3.63862, 1.77 ) }
    dend_10 { pt3dadd( -2.08493, -23.3752, 4.03801, 0.81 ) }
    dend_10 { pt3dadd( -2.41362, -24.0966, 4.24384, 0.81 ) }
    dend_10 { pt3dadd( -2.59138, -24.6097, 4.37043, 0.81 ) }
    dend_10 { pt3dadd( -2.73264, -25.2331, 4.50862, 0.81 ) }
    dend_10 { pt3dadd( -2.81631, -25.9127, 4.65655, 0.81 ) }
    dend_10 { pt3dadd( -2.835, -26.4834, 4.7768, 1.03 ) }
    dend_10 { pt3dadd( -2.82441, -27.047, 4.88851, 1.25 ) }
    dend_10 { pt3dadd( -2.77372, -28.0977, 5.08705, 0.81 ) }
    dend_10 { pt3dadd( -2.72966, -28.9351, 5.25285, 1.03 ) }
    dend_10 { pt3dadd( -2.70749, -29.6036, 5.3991, 1.62 ) }
    dend_10 { pt3dadd( -2.71658, -30.1552, 5.53629, 2.73 ) }
    dend_10 { pt3dadd( -2.77488, -30.9328, 5.752, 4.06 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 75/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 6.51145, 6.15652, 5.69, 0.59 ) }
    dend_1 { pt3dadd( 7.11082, 6.47575, 5.56479, 0.44 ) }
    dend_1 { pt3dadd( 7.69486, 6.82258, 5.61875, 0.44 ) }
    dend_1 { pt3dadd( 8.18324, 7.1276, 5.79609, 0.44 ) }
    dend_1 { pt3dadd( 8.70635, 7.45284, 6.08734, 0.37 ) }
    dend_1 { pt3dadd( 9.09688, 7.68383, 6.34972, 1.03 ) }
    dend_1 { pt3dadd( 9.71049, 8.02829, 6.82018, 1.33 ) }
    dend_1 { pt3dadd( 10.3585, 8.37713, 7.46593, 1.47 ) }
    dend_1 { pt3dadd( 10.803, 8.59571, 8.00133, 1.25 ) }
    dend_1 { pt3dadd( 11.2869, 8.77528, 8.66205, 0.29 ) }
    dend_1 { pt3dadd( 11.5984, 8.82943, 9.11979, 0.22 ) }
    dend_1 { pt3dadd( 11.8384, 8.82271, 9.45401, 0.22 ) }
    dend_1 { pt3dadd( 11.9917, 8.77069, 9.62918, 0.22 ) }
    dend_1 { pt3dadd( 12.1745, 8.68818, 9.81626, 0.22 ) }
    dend_1 { pt3dadd( 12.4595, 8.56597, 10.0942, 1.03 ) }
    dend_1 { pt3dadd( 13.0645, 8.35082, 10.702, 2.21 ) }
    dend_1 { pt3dadd( 13.3997, 8.29708, 11.0438, 3.02 ) }
    dend_1 { pt3dadd( 14.4591, 8.39873, 12.1487, 0.29 ) }
    dend_1 { pt3dadd( 14.9465, 8.58565, 12.6857, 0.29 ) }
    dend_1 { pt3dadd( 15.2207, 8.76556, 12.9971, 0.44 ) }
    dend_1 { pt3dadd( 15.4875, 9.0113, 13.3134, 0.66 ) }
    dend_1 { pt3dadd( 15.8986, 9.50071, 13.8179, 1.11 ) }
    dend_1 { pt3dadd( 16.2756, 10.0098, 14.3011, 0.52 ) }
    dend_1 { pt3dadd( 16.5754, 10.4546, 14.6567, 0.22 ) }
    dend_1 { pt3dadd( 16.7675, 10.6524, 14.8534, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_1 { pt3dadd( 16.956, 10.7156, 15.0299, 0.22 ) }
    dend_1 { pt3dadd( 17.1398, 10.6462, 15.1873, 0.22 ) }
    dend_1 { pt3dadd( 17.5608, 10.3818, 15.5289, 0.66 ) }
    dend_1 { pt3dadd( 17.9864, 10.0905, 15.8558, 1.7 ) }
    dend_1 { pt3dadd( 18.4085, 9.80302, 16.1921, 2.21 ) }
    dend_1 { pt3dadd( 18.807, 9.56207, 16.5407, 1.7 ) }
    dend_1 { pt3dadd( 19.356, 9.33406, 17.0995, 0.29 ) }
    dend_1 { pt3dadd( 19.8608, 9.2641, 17.7348, 0.22 ) }
    dend_1 { pt3dadd( 20.0661, 9.31957, 18.0676, 0.22 ) }
    dend_1 { pt3dadd( 20.2711, 9.51894, 18.5891, 0.22 ) }
    dend_1 { pt3dadd( 20.384, 9.81192, 19.1603, 0.96 ) }
    dend_1 { pt3dadd( 20.4372, 10.3377, 20.0564, 0.74 ) }
    dend_1 { pt3dadd( 20.4084, 10.7124, 20.6803, 0.74 ) }
    dend_1 { pt3dadd( 20.3669, 10.9197, 21.0515, 0.74 ) }
    dend_1 { pt3dadd( 20.3236, 11.1987, 21.6615, 0.74 ) }
    dend_1 { pt3dadd( 20.3417, 11.3576, 22.065, 0.74 ) }
    dend_1 { pt3dadd( 20.3843, 11.3968, 22.2064, 0.74 ) }
    dend_1 { pt3dadd( 20.692, 11.4792, 22.6645, 0.74 ) }
    dend_1 { pt3dadd( 21.0152, 11.5423, 23.0296, 1.18 ) }
    dend_1 { pt3dadd( 21.5839, 11.6398, 23.6167, 0.44 ) }
    dend_1 { pt3dadd( 22.1021, 11.7308, 24.0966, 1.25 ) }
    dend_1 { pt3dadd( 22.8212, 11.8745, 24.7218, 2.73 ) }
    dend_1 { pt3dadd( 23.5895, 12.0546, 25.378, 3.54 ) }
    dend_1 { pt3dadd( 24.0198, 12.1715, 25.7318, 2.8 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 24/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.64855, 6.75127, 5.52, 0.88 ) }
    dend_0 { pt3dadd( -5.02297, 7.16683, 5.69494, 0.74 ) }
    dend_0 { pt3dadd( -5.61518, 7.76597, 6.03671, 0.22 ) }
    dend_0 { pt3dadd( -6.00689, 8.13069, 6.28835, 0.22 ) }
    dend_0 { pt3dadd( -6.52532, 8.57284, 6.61951, 0.44 ) }
    dend_0 { pt3dadd( -6.95719, 8.90377, 6.88562, 0.44 ) }
    dend_0 { pt3dadd( -7.52218, 9.27034, 7.22415, 0.22 ) }
    dend_0 { pt3dadd( -8.11959, 9.55955, 7.58686, 0.22 ) }
    dend_0 { pt3dadd( -8.42645, 9.66992, 7.76617, 0.22 ) }
    dend_0 { pt3dadd( -8.85769, 9.78982, 8.00244, 0.96 ) }
    dend_0 { pt3dadd( -9.53305, 9.93452, 8.37557, 1.47 ) }
    dend_0 { pt3dadd( -10.7475, 10.1521, 9.1055, 0.15 ) }
    dend_0 { pt3dadd( -11.2899, 10.2467, 9.42078, 0.15 ) }
    dend_0 { pt3dadd( -11.6744, 10.3328, 9.61255, 0.15 ) }
    dend_0 { pt3dadd( -12.2482, 10.4745, 9.87625, 0.88 ) }
    dend_0 { pt3dadd( -13.2661, 10.746, 10.3294, 0.37 ) }
    dend_0 { pt3dadd( -14.3569, 11.0612, 10.8069, 1.55 ) }
    dend_0 { pt3dadd( -15.2315, 11.3411, 11.1855, 2.95 ) }
    dend_0 { pt3dadd( -17.4679, 12.1011, 12.1373, 0.07 ) }
    dend_0 { pt3dadd( -17.8855, 12.2418, 12.311, 0.88 ) }
    dend_0 { pt3dadd( -18.7515, 12.532, 12.6433, 0.07 ) }
    dend_0 { pt3dadd( -19.5608, 12.8025, 12.8916, 0.22 ) }
    dend_0 { pt3dadd( -20.119, 12.988, 13.039, 0.22 ) }
    dend_0 { pt3dadd( -21.3598, 13.3776, 13.3481, 0.15 ) }
    dend_0 { pt3dadd( -21.745, 13.4829, 13.438, 0.96 ) }
    dend_0 { pt3dadd( -22.2981, 13.6228, 13.5385, 1.84 ) }
    dend_0 { pt3dadd( -24.2723, 14.0706, 13.7794, 0.15 ) }
    dend_0 { pt3dadd( -24.7108, 14.1494, 13.8163, 0.66 ) }
    dend_0 { pt3dadd( -25.406, 14.248, 13.8618, 1.18 ) }
    dend_0 { pt3dadd( -27.0977, 14.4321, 13.9516, 0.15 ) }
    dend_0 { pt3dadd( -27.7272, 14.4769, 13.9731, 1.33 ) }
    dend_0 { pt3dadd( -28.5688, 14.5058, 13.9923, 2.51 ) }
    dend_0 { pt3dadd( -30.9423, 14.4944, 14.0188, 0.15 ) }
    dend_0 { pt3dadd( -31.3258, 14.4832, 14.0069, 0.52 ) }
    dend_0 { pt3dadd( -32.0254, 14.4454, 13.9523, 0.81 ) }
    dend_0 { pt3dadd( -33.1194, 14.3654, 13.8104, 0.15 ) }
    dend_0 { pt3dadd( -33.673, 14.321, 13.7307, 0.15 ) }
    dend_0 { pt3dadd( -34.0947, 14.2893, 13.6581, 0.66 ) }
    dend_0 { pt3dadd( -35.3828, 14.2123, 13.3946, 1.84 ) }
    dend_0 { pt3dadd( -36.6517, 14.1764, 13.1534, 0.22 ) }
    dend_0 { pt3dadd( -37.2987, 14.177, 13.0496, 0.37 ) }
    dend_0 { pt3dadd( -37.5791, 14.1851, 13.0132, 0.88 ) }
    dend_0 { pt3dadd( -38.6314, 14.2313, 12.9301, 0.15 ) }
    dend_0 { pt3dadd( -39.2094, 14.2705, 12.9115, 0.15 ) }
    dend_0 { pt3dadd( -39.8432, 14.3302, 12.9313, 0.74 ) }
    dend_0 { pt3dadd( -41.7236, 14.5361, 13.1219, 0.07 ) }
    dend_0 { pt3dadd( -42.0779, 14.5814, 13.1743, 0.52 ) }
    dend_0 { pt3dadd( -43.2911, 14.7692, 13.4051, 0.15 ) }
    dend_0 { pt3dadd( -43.8647, 14.873, 13.5409, 0.96 ) }
    dend_0 { pt3dadd( -44.5826, 15.0166, 13.7351, 1.92 ) }
    dend_0 { pt3dadd( -46.1292, 15.4016, 14.1934, 0.15 ) }
    dend_0 { pt3dadd( -46.7721, 15.5994, 14.3932, 0.22 ) }
    dend_0 { pt3dadd( -47.5354, 15.8601, 14.6133, 0.07 ) }
    dend_0 { pt3dadd( -48.038, 16.0642, 14.742, 1.03 ) }
    dend_0 { pt3dadd( -48.5583, 16.2949, 14.8646, 1.77 ) }
    dend_0 { pt3dadd( -50.1275, 17.0438, 15.191, 0.07 ) }
    dend_0 { pt3dadd( -50.7671, 17.3747, 15.3096, 0.07 ) }
    dend_0 { pt3dadd( -51.207, 17.6002, 15.4003, 0.74 ) }
    dend_0 { pt3dadd( -52.4029, 18.2192, 15.6574, 0.07 ) }
    dend_0 { pt3dadd( -52.7721, 18.4076, 15.7381, 0.52 ) }
    dend_0 { pt3dadd( -53.7797, 18.8518, 15.9771, 0.07 ) }
    dend_0 { pt3dadd( -54.4016, 19.0615, 16.1378, 0.22 ) }
    dend_0 { pt3dadd( -55.0877, 19.2173, 16.3147, 0.15 ) }
    dend_0 { pt3dadd( -55.3727, 19.2444, 16.3832, 0.96 ) }
    dend_0 { pt3dadd( -56.0668, 19.223, 16.5336, 1.92 ) }
    dend_0 { pt3dadd( -57.4839, 19.0813, 16.8061, 0.07 ) }
    dend_0 { pt3dadd( -58.1757, 18.9679, 16.9104, 0.29 ) }
    dend_0 { pt3dadd( -58.934, 18.8498, 16.9871, 0.07 ) }
    dend_0 { pt3dadd( -59.6734, 18.7777, 17.0288, 0.07 ) }
    dend_0 { pt3dadd( -59.9629, 18.7673, 17.0415, 0.07 ) }
    dend_0 { pt3dadd( -60.2379, 18.7704, 17.0476, 0.44 ) }
    dend_0 { pt3dadd( -60.8187, 18.8097, 17.0427, 0.74 ) }
    dend_0 { pt3dadd( -62.2508, 18.9253, 17.0201, 0.07 ) }
    dend_0 { pt3dadd( -63.3871, 19.0192, 17.0073, 0.15 ) }
    dend_0 { pt3dadd( -64.1762, 19.0802, 16.9994, 0.96 ) }
    dend_0 { pt3dadd( -65.1501, 19.1147, 16.9982, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_0 { pt3dadd( -65.9344, 19.1079, 17.0006, 0.59 ) }
    dend_0 { pt3dadd( -66.688, 19.0556, 17.0086, 0.15 ) }
    dend_0 { pt3dadd( -67.0453, 19.0057, 17.0138, 0.74 ) }
    dend_0 { pt3dadd( -67.5851, 18.9036, 17.0208, 1.18 ) }
    dend_0 { pt3dadd( -69.2711, 18.5482, 16.9814, 0.15 ) }
    dend_0 { pt3dadd( -69.8285, 18.433, 16.9549, 0.81 ) }
    dend_0 { pt3dadd( -70.6715, 18.2625, 16.8905, 0.15 ) }
    dend_0 { pt3dadd( -71.1663, 18.1648, 16.8413, 0.22 ) }
    dend_0 { pt3dadd( -72.443, 17.9146, 16.69, 0.07 ) }
    dend_0 { pt3dadd( -73.2345, 17.7594, 16.5829, 1.03 ) }
    dend_0 { pt3dadd( -73.7888, 17.66, 16.4973, 1.84 ) }
    dend_0 { pt3dadd( -75.6326, 17.39, 16.2192, 0.07 ) }
    dend_0 { pt3dadd( -76.0019, 17.3544, 16.1658, 0.22 ) }
    dend_0 { pt3dadd( -77.7385, 17.2774, 15.9497, 0.07 ) }
    dend_0 { pt3dadd( -77.9627, 17.2754, 15.9275, 0.66 ) }
    dend_0 { pt3dadd( -78.4629, 17.2805, 15.9053, 1.25 ) }
    dend_0 { pt3dadd( -79.3064, 17.3073, 15.8835, 0.15 ) }
    dend_0 { pt3dadd( -79.9871, 17.3601, 15.8809, 0.74 ) }
    dend_0 { pt3dadd( -81.103, 17.4403, 15.917, 0.07 ) }
    dend_0 { pt3dadd( -81.8525, 17.4897, 15.9669, 0.07 ) }
    dend_0 { pt3dadd( -82.622, 17.5282, 16.0291, 0.07 ) }
    dend_0 { pt3dadd( -82.7746, 17.5375, 16.0476, 0.07 ) }
    dend_0 { pt3dadd( -83.3996, 17.5946, 16.1474, 0.74 ) }
    dend_0 { pt3dadd( -84.5972, 17.7317, 16.4142, 0.07 ) }
    dend_0 { pt3dadd( -84.9303, 17.7877, 16.5088, 1.11 ) }
    dend_0 { pt3dadd( -85.6343, 17.9259, 16.7446, 1.62 ) }
    dend_0 { pt3dadd( -86.9092, 18.1142, 17.2227, 0.07 ) }
    dend_0 { pt3dadd( -87.5727, 18.1851, 17.4872, 0.81 ) }
    dend_0 { pt3dadd( -88.6247, 18.2533, 17.9231, 0.15 ) }
    dend_0 { pt3dadd( -89.4779, 18.2644, 18.3, 0.15 ) }
    dend_0 { pt3dadd( -90.3691, 18.2264, 18.7071, 1.11 ) }
    dend_0 { pt3dadd( -92.3722, 18.0217, 19.6342, 0.15 ) }
    dend_0 { pt3dadd( -92.8327, 17.9505, 19.8421, 1.03 ) }
    dend_0 { pt3dadd( -93.6739, 17.7976, 20.2135, 1.84 ) }
    dend_0 { pt3dadd( -95.1139, 17.5005, 20.8068, 0.22 ) }
    dend_0 { pt3dadd( -95.3731, 17.4402, 20.9135, 0.22 ) }
    dend_0 { pt3dadd( -95.8999, 17.3158, 21.1327, 0.07 ) }
    dend_0 { pt3dadd( -96.2857, 17.2275, 21.3004, 0.59 ) }
    dend_0 { pt3dadd( -97.091, 17.0369, 21.6727, 0.07 ) }
    dend_0 { pt3dadd( -97.6175, 16.9014, 21.9221, 0.29 ) }
    dend_0 { pt3dadd( -98.1461, 16.7407, 22.1716, 0.07 ) }
    dend_0 { pt3dadd( -98.7522, 16.5265, 22.4603, 0.37 ) }
    dend_0 { pt3dadd( -99.6129, 16.1857, 22.8714, 0.07 ) }
    dend_0 { pt3dadd( -100.235, 15.9066, 23.1688, 0.66 ) }
    dend_0 { pt3dadd( -100.923, 15.5108, 23.4699, 0.07 ) }
    dend_0 { pt3dadd( -101.547, 15.0834, 23.7222, 0.96 ) }
    dend_0 { pt3dadd( -102.61, 14.2031, 24.104, 0.07 ) }
    dend_0 { pt3dadd( -103.179, 13.6032, 24.2679, 0.07 ) }
    dend_0 { pt3dadd( -103.548, 13.098, 24.3368, 1.03 ) }
    dend_0 { pt3dadd( -104.505, 11.2817, 24.4221, 0.15 ) }
    dend_0 { pt3dadd( -104.747, 10.6859, 24.4097, 0.15 ) }
    dend_0 { pt3dadd( -104.993, 9.91062, 24.3556, 1.11 ) }
    dend_0 { pt3dadd( -105.308, 8.61895, 24.223, 0.15 ) }
    dend_0 { pt3dadd( -105.538, 7.51381, 24.0896, 1.84 ) }
    dend_0 { pt3dadd( -105.961, 5.35546, 23.8137, 0.15 ) }
    dend_0 { pt3dadd( -106.05, 4.8805, 23.7542, 0.59 ) }
    dend_0 { pt3dadd( -106.206, 4.14334, 23.687, 1.03 ) }
    dend_0 { pt3dadd( -106.612, 2.53202, 23.6305, 0.15 ) }
    dend_0 { pt3dadd( -106.771, 2.00406, 23.6694, 0.52 ) }
    dend_0 { pt3dadd( -107.112, 1.00627, 23.8331, 0.15 ) }
    dend_0 { pt3dadd( -107.321, 0.417444, 23.9885, 0.66 ) }
    dend_0 { pt3dadd( -107.615, -0.491566, 24.3088, 0.15 ) }
    dend_0 { pt3dadd( -107.894, -1.52794, 24.75, 1.62 ) }
    dend_0 { pt3dadd( -108.174, -3.02616, 25.4764, 0.07 ) }
    dend_0 { pt3dadd( -108.231, -3.58321, 25.7448, 0.29 ) }
    dend_0 { pt3dadd( -108.252, -4.60429, 26.1946, 0.07 ) }
    dend_0 { pt3dadd( -108.221, -5.16014, 26.3951, 0.96 ) }
    dend_0 { pt3dadd( -108.135, -6.04853, 26.5818, 2.21 ) }
    dend_0 { pt3dadd( -108.045, -6.82364, 26.649, 1.33 ) }
    dend_0 { pt3dadd( -107.95, -7.91432, 26.6278, 0.07 ) }
    dend_0 { pt3dadd( -107.907, -8.88855, 26.5501, 0.07 ) }
    dend_0 { pt3dadd( -107.913, -9.62933, 26.4532, 1.03 ) }
    dend_0 { pt3dadd( -107.961, -11.3928, 26.1808, 0.07 ) }
    dend_0 { pt3dadd( -107.995, -11.9597, 26.0828, 0.88 ) }
    dend_0 { pt3dadd( -108.115, -13.3308, 25.8329, 0.07 ) }
    dend_0 { pt3dadd( -108.161, -13.8295, 25.7384, 0.66 ) }
    dend_0 { pt3dadd( -108.192, -14.1702, 25.6794, 1.25 ) }
    dend_0 { pt3dadd( -108.298, -15.2324, 25.5185, 0.29 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.06335, 10.2596, 0.0, 0.588322 ) }
    axon_0 { pt3dadd( 5.74396, 24.801, 0.0, 0.588322 ) }
    axon_0 { pt3dadd( 9.42458, 39.3425, 0.0, 0.588322 ) }
    // Section: dend_38, id: dend_38, parent: dend_32 (entry count 81/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 0.473163, 17.6085, 1.45457, 0.37 ) }
    dend_38 { pt3dadd( 1.37623, 18.5253, 2.02457, 0.37 ) }
    dend_38 { pt3dadd( 1.66037, 18.7815, 2.21275, 0.37 ) }
    dend_38 { pt3dadd( 2.18877, 19.2751, 2.61934, 0.37 ) }
    dend_38 { pt3dadd( 2.81748, 20.0069, 3.21357, 0.22 ) }
    dend_38 { pt3dadd( 2.97067, 20.2844, 3.44638, 0.22 ) }
    dend_38 { pt3dadd( 2.98917, 20.6124, 3.75978, 0.22 ) }
    dend_38 { pt3dadd( 2.87356, 20.8081, 4.0028, 0.22 ) }
    dend_38 { pt3dadd( 2.62816, 21.1201, 4.3751, 0.22 ) }
    dend_38 { pt3dadd( 2.19643, 21.6403, 5.00661, 0.22 ) }
    dend_38 { pt3dadd( 1.92584, 21.9751, 5.42176, 0.22 ) }
    dend_38 { pt3dadd( 1.50659, 22.5931, 6.1569, 0.66 ) }
    dend_38 { pt3dadd( 1.1346, 23.3249, 6.9971, 1.03 ) }
    dend_38 { pt3dadd( 0.767582, 24.2505, 8.09066, 0.22 ) }
    dend_38 { pt3dadd( 0.573602, 24.8911, 8.9119, 0.22 ) }
    dend_38 { pt3dadd( 0.491137, 25.3413, 9.56113, 0.88 ) }
    dend_38 { pt3dadd( 0.455744, 25.8033, 10.3069, 1.47 ) }
    dend_38 { pt3dadd( 0.486718, 26.526, 11.6433, 0.15 ) }
    dend_38 { pt3dadd( 0.566125, 27.1031, 12.7353, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_38 { pt3dadd( 0.667918, 27.6963, 13.8063, 0.15 ) }
    dend_38 { pt3dadd( 0.697358, 28.273, 14.7409, 0.15 ) }
    dend_38 { pt3dadd( 0.637747, 28.8486, 15.6352, 0.15 ) }
    dend_38 { pt3dadd( 0.413807, 29.5349, 16.6558, 0.15 ) }
    dend_38 { pt3dadd( -0.193521, 30.5912, 18.0418, 0.96 ) }
    dend_38 { pt3dadd( -0.628162, 31.1877, 18.7424, 2.06 ) }
    dend_38 { pt3dadd( -1.47519, 32.1447, 19.7246, 0.22 ) }
    dend_38 { pt3dadd( -1.8377, 32.5364, 20.081, 0.22 ) }
    dend_38 { pt3dadd( -2.20093, 32.8905, 20.4042, 0.22 ) }
    dend_38 { pt3dadd( -2.76547, 33.3733, 20.9233, 0.22 ) }
    dend_38 { pt3dadd( -3.39587, 33.8516, 21.6291, 0.22 ) }
    dend_38 { pt3dadd( -3.79398, 34.1519, 22.1192, 1.33 ) }
    dend_38 { pt3dadd( -4.33392, 34.7466, 23.0083, 2.95 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 13/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 0.473163, 17.6085, 1.45457, 1.25 ) }
    dend_33 { pt3dadd( -0.0163791, 18.736, 1.35064, 1.25 ) }
    dend_33 { pt3dadd( -0.604514, 20.194, 1.31859, 0.81 ) }
    dend_33 { pt3dadd( -1.03022, 21.4397, 1.40717, 0.81 ) }
    dend_33 { pt3dadd( -1.35494, 22.6419, 1.5822, 1.11 ) }
    dend_33 { pt3dadd( -1.56413, 23.7598, 1.81435, 1.4 ) }
    dend_33 { pt3dadd( -1.64239, 24.7155, 2.06477, 0.59 ) }
    dend_33 { pt3dadd( -1.54786, 25.6266, 2.457, 0.59 ) }
    dend_33 { pt3dadd( -1.19806, 26.6988, 3.08199, 0.52 ) }
    dend_33 { pt3dadd( -0.865571, 27.3417, 3.51371, 0.59 ) }
    dend_33 { pt3dadd( -0.467868, 27.989, 3.98102, 0.59 ) }
    dend_33 { pt3dadd( 0.056193, 28.8401, 4.61364, 0.44 ) }
    dend_33 { pt3dadd( 0.326767, 29.3664, 4.9962, 0.44 ) }
    dend_33 { pt3dadd( 0.394227, 29.6664, 5.17474, 0.44 ) }
    dend_33 { pt3dadd( 0.334351, 30.2044, 5.45328, 0.52 ) }
    dend_33 { pt3dadd( 0.080974, 31.0191, 5.90164, 0.66 ) }
    dend_33 { pt3dadd( -0.198373, 31.6904, 6.29385, 0.29 ) }
    dend_33 { pt3dadd( -0.422437, 32.184, 6.61247, 0.29 ) }
    dend_33 { pt3dadd( -0.666011, 32.819, 7.02729, 0.37 ) }
    dend_33 { pt3dadd( -0.926038, 33.6422, 7.55329, 0.88 ) }
    dend_33 { pt3dadd( -1.16964, 34.4931, 8.08885, 1.62 ) }
    dend_33 { pt3dadd( -1.36355, 35.2792, 8.57065, 2.43 ) }
    dend_33 { pt3dadd( -1.54382, 36.1703, 9.10456, 2.43 ) }
    dend_33 { pt3dadd( -1.78038, 37.6569, 9.96854, 0.22 ) }
    dend_33 { pt3dadd( -1.85992, 38.3578, 10.3663, 0.52 ) }
    dend_33 { pt3dadd( -1.91581, 39.0654, 10.7318, 0.22 ) }
    dend_33 { pt3dadd( -1.93302, 39.4409, 10.8935, 0.22 ) }
    dend_33 { pt3dadd( -1.94094, 39.9225, 11.0653, 0.22 ) }
    dend_33 { pt3dadd( -1.94088, 40.5086, 11.2121, 0.22 ) }
    dend_33 { pt3dadd( -1.94314, 40.9002, 11.2845, 0.22 ) }
    dend_33 { pt3dadd( -1.94959, 41.1572, 11.321, 0.22 ) }
    dend_33 { pt3dadd( -2.0153, 42.074, 11.3877, 0.37 ) }
    dend_33 { pt3dadd( -2.10887, 42.8538, 11.3969, 0.37 ) }
    dend_33 { pt3dadd( -2.22604, 43.5985, 11.3657, 0.52 ) }
    dend_33 { pt3dadd( -2.35058, 44.3517, 11.3097, 0.96 ) }
    dend_33 { pt3dadd( -2.48156, 45.2533, 11.2059, 0.96 ) }
    dend_33 { pt3dadd( -2.62739, 46.6304, 10.9685, 0.44 ) }
    dend_33 { pt3dadd( -2.64781, 47.5271, 10.7595, 0.44 ) }
    dend_33 { pt3dadd( -2.63856, 48.4575, 10.5037, 1.47 ) }
    dend_33 { pt3dadd( -2.61575, 49.4281, 10.2066, 2.8 ) }
    dend_33 { pt3dadd( -2.59261, 50.3244, 9.90246, 3.61 ) }
    dend_33 { pt3dadd( -2.56999, 51.254, 9.54844, 3.02 ) }
    dend_33 { pt3dadd( -2.51023, 53.4294, 8.62109, 0.22 ) }
    dend_33 { pt3dadd( -2.50109, 54.0938, 8.31419, 0.29 ) }
    dend_33 { pt3dadd( -2.49849, 54.4551, 8.14353, 0.29 ) }
    dend_33 { pt3dadd( -2.50748, 55.1604, 7.79403, 0.22 ) }
    dend_33 { pt3dadd( -2.54003, 56.0064, 7.36968, 0.52 ) }
    dend_33 { pt3dadd( -2.58728, 56.7107, 7.01038, 1.33 ) }
    dend_33 { pt3dadd( -2.67049, 57.5934, 6.49289, 2.43 ) }
    dend_33 { pt3dadd( -2.66142, 58.4102, 6.00827, 2.43 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -8.31466, -16.7881, -14.1285, 0.44 ) }
    dend_27 { pt3dadd( -10.2549, -17.7759, -15.4784, 0.44 ) }
    dend_27 { pt3dadd( -10.3573, -18.1855, -15.8129, 0.44 ) }
    dend_27 { pt3dadd( -10.4217, -18.6231, -16.1772, 0.44 ) }
    dend_27 { pt3dadd( -10.5264, -19.0877, -16.5849, 0.44 ) }
    dend_27 { pt3dadd( -10.7053, -19.6163, -17.0912, 0.59 ) }
    dend_27 { pt3dadd( -11.0176, -20.3243, -17.8595, 0.74 ) }
    dend_27 { pt3dadd( -11.2078, -20.815, -18.4517, 1.11 ) }
    dend_27 { pt3dadd( -11.4693, -21.3495, -19.2114, 1.47 ) }
    dend_27 { pt3dadd( -11.7823, -21.8183, -20.029, 1.47 ) }
    dend_27 { pt3dadd( -12.303, -22.3512, -21.2314, 0.59 ) }
    dend_27 { pt3dadd( -12.7443, -22.6101, -22.1426, 0.52 ) }
    dend_27 { pt3dadd( -13.0818, -22.6715, -22.7794, 0.52 ) }
    dend_27 { pt3dadd( -13.4785, -22.635, -23.439, 0.44 ) }
    dend_27 { pt3dadd( -13.9399, -22.5129, -24.0437, 0.44 ) }
    dend_27 { pt3dadd( -14.195, -22.4307, -24.3174, 0.44 ) }
    dend_27 { pt3dadd( -14.8596, -22.2396, -24.8829, 0.96 ) }
    dend_27 { pt3dadd( -15.502, -22.0842, -25.3647, 0.96 ) }
    dend_27 { pt3dadd( -16.2721, -21.9438, -25.8892, 1.4 ) }
    dend_27 { pt3dadd( -17.2745, -21.8176, -26.5258, 2.36 ) }
    dend_27 { pt3dadd( -18.1022, -21.7559, -27.0239, 3.32 ) }
    dend_27 { pt3dadd( -19.072, -21.7027, -27.6221, 3.61 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 85/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -8.31466, -16.7881, -14.1285, 0.29 ) }
    dend_26 { pt3dadd( -7.88607, -18.8877, -15.0225, 0.29 ) }
    dend_26 { pt3dadd( -7.69662, -19.6021, -15.3457, 0.29 ) }
    dend_26 { pt3dadd( -7.44636, -20.5363, -15.7938, 0.29 ) }
    dend_26 { pt3dadd( -7.25668, -21.3134, -16.2091, 0.81 ) }
    dend_26 { pt3dadd( -7.07145, -22.1468, -16.6964, 1.11 ) }
    dend_26 { pt3dadd( -6.84877, -23.3429, -17.4837, 0.22 ) }
    dend_26 { pt3dadd( -6.64831, -24.2058, -18.1891, 0.22 ) }
    dend_26 { pt3dadd( -6.59584, -24.6976, -18.6692, 0.22 ) }
    dend_26 { pt3dadd( -6.60545, -25.3651, -19.4121, 0.22 ) }
    dend_26 { pt3dadd( -6.59545, -25.7392, -19.7321, 0.37 ) }
    dend_26 { pt3dadd( -6.54061, -26.4632, -20.2673, 0.37 ) }
    dend_26 { pt3dadd( -6.46432, -27.0555, -20.6376, 0.81 ) }
    dend_26 { pt3dadd( -6.31687, -27.9172, -21.0832, 1.7 ) }
    dend_26 { pt3dadd( -6.1073, -29.1261, -21.669, 2.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_26 { pt3dadd( -5.63239, -31.7645, -22.8534, 0.29 ) }
    dend_26 { pt3dadd( -5.45927, -32.6639, -23.213, 0.96 ) }
    dend_26 { pt3dadd( -5.33036, -33.268, -23.4248, 0.96 ) }
    dend_26 { pt3dadd( -4.98483, -34.6705, -23.8714, 0.15 ) }
    dend_26 { pt3dadd( -4.71542, -35.5644, -24.1, 0.15 ) }
    dend_26 { pt3dadd( -4.51163, -36.1661, -24.2282, 0.59 ) }
    dend_26 { pt3dadd( -4.03896, -37.3203, -24.4211, 0.29 ) }
    dend_26 { pt3dadd( -3.70046, -38.057, -24.5022, 1.4 ) }
    dend_26 { pt3dadd( -3.1584, -39.159, -24.5858, 2.73 ) }
    dend_26 { pt3dadd( -1.82633, -41.7096, -24.6807, 0.15 ) }
    dend_26 { pt3dadd( -1.61776, -42.0994, -24.6878, 0.74 ) }
    dend_26 { pt3dadd( -1.23585, -42.8056, -24.718, 0.74 ) }
    dend_26 { pt3dadd( -0.621412, -43.886, -24.7967, 0.15 ) }
    dend_26 { pt3dadd( -0.0565747, -44.8593, -24.8843, 0.15 ) }
    dend_26 { pt3dadd( 0.421341, -45.707, -24.9762, 0.15 ) }
    dend_26 { pt3dadd( 0.834268, -46.4625, -25.1016, 1.25 ) }
    dend_26 { pt3dadd( 1.39832, -47.5961, -25.3592, 0.22 ) }
    dend_26 { pt3dadd( 1.70696, -48.3739, -25.5937, 0.22 ) }
    dend_26 { pt3dadd( 1.80685, -48.7779, -25.7348, 0.22 ) }
    dend_26 { pt3dadd( 1.85532, -49.366, -25.9271, 0.22 ) }
    dend_26 { pt3dadd( 1.83799, -50.4443, -26.2426, 0.44 ) }
    dend_26 { pt3dadd( 1.76247, -51.4639, -26.5084, 1.62 ) }
    dend_26 { pt3dadd( 1.66463, -52.5586, -26.7726, 3.02 ) }
    dend_26 { pt3dadd( 1.56421, -53.8827, -27.077, 3.02 ) }
    dend_26 { pt3dadd( 1.41181, -56.8435, -27.7613, 0.29 ) }
    dend_26 { pt3dadd( 1.38822, -57.9306, -28.0028, 0.81 ) }
    dend_26 { pt3dadd( 1.39786, -58.8767, -28.1937, 1.03 ) }
    dend_26 { pt3dadd( 1.44086, -59.8594, -28.3861, 0.37 ) }
    dend_26 { pt3dadd( 1.49515, -60.6212, -28.5123, 1.18 ) }
    dend_26 { pt3dadd( 1.66762, -62.157, -28.737, 0.22 ) }
    dend_26 { pt3dadd( 1.77816, -62.7418, -28.8066, 0.74 ) }
    dend_26 { pt3dadd( 1.90375, -63.221, -28.8425, 0.74 ) }
    dend_26 { pt3dadd( 2.07598, -63.7325, -28.8493, 0.15 ) }
    dend_26 { pt3dadd( 2.57851, -65.1184, -28.7701, 0.44 ) }
    dend_26 { pt3dadd( 2.73237, -65.4631, -28.7325, 0.44 ) }
    dend_26 { pt3dadd( 3.27415, -66.5169, -28.591, 0.22 ) }
    dend_26 { pt3dadd( 3.59532, -67.136, -28.528, 1.11 ) }
    dend_26 { pt3dadd( 3.83258, -67.6615, -28.4929, 1.62 ) }
    dend_26 { pt3dadd( 4.18201, -68.5403, -28.4591, 1.62 ) }
    dend_26 { pt3dadd( 4.82586, -70.5622, -28.4922, 0.22 ) }
    dend_26 { pt3dadd( 5.03346, -71.5898, -28.5185, 0.96 ) }
    dend_26 { pt3dadd( 5.0739, -72.6597, -28.553, 1.18 ) }
    dend_26 { pt3dadd( 4.87218, -74.5583, -28.654, 0.15 ) }
    dend_26 { pt3dadd( 4.76007, -75.1957, -28.6966, 0.22 ) }
    dend_26 { pt3dadd( 4.32894, -76.6683, -28.8332, 0.07 ) }
    dend_26 { pt3dadd( 3.98547, -77.3176, -28.9247, 0.22 ) }
    dend_26 { pt3dadd( 3.05324, -78.5983, -29.1383, 0.07 ) }
    dend_26 { pt3dadd( 2.62579, -79.027, -29.2259, 0.15 ) }
    dend_26 { pt3dadd( 3.5324, -90.259, -32.383, 0.15 ) }
    dend_26 { pt3dadd( 2.70358, -101.595, -35.1556, 0.15 ) }
    dend_26 { pt3dadd( 4.48159, -112.89, -37.6348, 0.15 ) }
    dend_26 { pt3dadd( 7.21313, -123.8, -40.9151, 0.15 ) }
    dend_26 { pt3dadd( 9.93832, -134.297, -45.3988, 0.15 ) }
    // Section: dend_14, id: dend_14, parent: dend_10 (entry count 53/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -2.77488, -30.9328, 5.752, 1.99 ) }
    dend_14 { pt3dadd( -3.14751, -32.2935, 5.73157, 1.99 ) }
    dend_14 { pt3dadd( -3.58818, -34.1794, 5.71048, 0.59 ) }
    dend_14 { pt3dadd( -3.80104, -35.256, 5.70116, 0.59 ) }
    dend_14 { pt3dadd( -4.00413, -36.5478, 5.7064, 0.59 ) }
    dend_14 { pt3dadd( -4.07429, -37.181, 5.71465, 1.11 ) }
    dend_14 { pt3dadd( -4.14595, -38.3337, 5.75326, 2.58 ) }
    dend_14 { pt3dadd( -4.1169, -38.9003, 5.78323, 2.88 ) }
    dend_14 { pt3dadd( -4.05035, -39.3905, 5.82337, 2.65 ) }
    dend_14 { pt3dadd( -3.94849, -40.1417, 5.91468, 1.55 ) }
    dend_14 { pt3dadd( -3.81673, -41.198, 6.08429, 0.74 ) }
    dend_14 { pt3dadd( -3.73045, -42.2049, 6.26027, 0.44 ) }
    dend_14 { pt3dadd( -3.70507, -43.086, 6.42233, 0.29 ) }
    dend_14 { pt3dadd( -3.72798, -43.7678, 6.55592, 0.29 ) }
    dend_14 { pt3dadd( -3.80531, -44.6371, 6.74368, 0.29 ) }
    dend_14 { pt3dadd( -3.82947, -44.9123, 6.80566, 0.29 ) }
    dend_14 { pt3dadd( -3.88025, -45.4204, 6.92403, 0.44 ) }
    dend_14 { pt3dadd( -3.9415, -45.9231, 7.03337, 1.11 ) }
    dend_14 { pt3dadd( -4.01162, -46.4914, 7.16471, 2.36 ) }
    dend_14 { pt3dadd( -4.12937, -47.6737, 7.43526, 2.73 ) }
    dend_14 { pt3dadd( -4.26754, -49.8776, 7.93695, 0.44 ) }
    dend_14 { pt3dadd( -4.28779, -50.3119, 8.04496, 0.44 ) }
    dend_14 { pt3dadd( -4.32242, -51.1496, 8.26955, 0.59 ) }
    dend_14 { pt3dadd( -4.3476, -51.9556, 8.50003, 0.29 ) }
    dend_14 { pt3dadd( -4.35951, -52.4599, 8.64753, 0.29 ) }
    dend_14 { pt3dadd( -4.34065, -52.9302, 8.77856, 0.29 ) }
    dend_14 { pt3dadd( -4.28152, -53.4183, 8.93526, 0.29 ) }
    dend_14 { pt3dadd( -4.19646, -53.7956, 9.07333, 0.88 ) }
    dend_14 { pt3dadd( -4.0265, -54.3243, 9.28681, 1.84 ) }
    dend_14 { pt3dadd( -3.8303, -54.8284, 9.49934, 2.14 ) }
    dend_14 { pt3dadd( -3.23995, -56.2683, 10.1465, 0.44 ) }
    dend_14 { pt3dadd( -2.98255, -56.9129, 10.4446, 0.66 ) }
    dend_14 { pt3dadd( -2.67715, -57.6773, 10.8278, 0.29 ) }
    dend_14 { pt3dadd( -2.56327, -57.9516, 10.9878, 0.29 ) }
    dend_14 { pt3dadd( -2.45113, -58.2359, 11.1885, 0.29 ) }
    dend_14 { pt3dadd( -2.39809, -58.4172, 11.349, 0.29 ) }
    dend_14 { pt3dadd( -2.42321, -58.6094, 11.5306, 0.29 ) }
    dend_14 { pt3dadd( -2.55548, -59.0288, 11.7421, 0.29 ) }
    dend_14 { pt3dadd( -2.65635, -59.3484, 11.8401, 0.29 ) }
    dend_14 { pt3dadd( -2.76128, -59.729, 11.9317, 0.29 ) }
    dend_14 { pt3dadd( -2.91706, -60.337, 12.0561, 1.18 ) }
    dend_14 { pt3dadd( -3.05757, -60.9604, 12.1936, 2.43 ) }
    dend_14 { pt3dadd( -3.19216, -61.6837, 12.3682, 2.88 ) }
    dend_14 { pt3dadd( -3.35215, -62.803, 12.6656, 1.55 ) }
    dend_14 { pt3dadd( -3.48197, -64.2262, 13.1057, 0.52 ) }
    dend_14 { pt3dadd( -3.5232, -65.1272, 13.4339, 0.29 ) }
    dend_14 { pt3dadd( -3.53763, -65.8466, 13.7337, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_14 { pt3dadd( -3.53191, -66.4325, 14.0034, 0.66 ) }
    dend_14 { pt3dadd( -3.51468, -66.9081, 14.2355, 0.96 ) }
    dend_14 { pt3dadd( -3.47344, -67.5338, 14.5143, 0.22 ) }
    dend_14 { pt3dadd( -3.4317, -68.1249, 14.7002, 0.22 ) }
    dend_14 { pt3dadd( -3.39886, -68.7595, 14.7991, 0.29 ) }
    dend_14 { pt3dadd( -3.36959, -69.3401, 14.8247, 0.59 ) }
    dend_14 { pt3dadd( -3.33488, -70.2644, 14.8144, 1.33 ) }
    dend_14 { pt3dadd( -3.30457, -71.3049, 14.7706, 2.21 ) }
    dend_14 { pt3dadd( -3.27809, -72.1344, 14.7212, 3.24 ) }
    dend_14 { pt3dadd( -3.20394, -73.5921, 14.6254, 1.77 ) }
    dend_14 { pt3dadd( -3.12569, -74.8099, 14.5565, 0.44 ) }
    dend_14 { pt3dadd( -3.06945, -75.6708, 14.5178, 0.37 ) }
    dend_14 { pt3dadd( -3.01566, -76.6449, 14.4889, 0.37 ) }
    dend_14 { pt3dadd( -2.98683, -77.2787, 14.4833, 0.88 ) }
    dend_14 { pt3dadd( -2.98078, -77.5675, 14.4829, 1.77 ) }
    dend_14 { pt3dadd( -3.00191, -78.4928, 14.4782, 3.1 ) }
    dend_14 { pt3dadd( -3.13453, -79.9255, 14.4646, 1.33 ) }
    dend_14 { pt3dadd( -3.30358, -80.9061, 14.451, 0.74 ) }
    dend_14 { pt3dadd( -3.60404, -82.0507, 14.43, 0.22 ) }
    dend_14 { pt3dadd( -3.7627, -82.517, 14.4197, 0.22 ) }
    dend_14 { pt3dadd( -3.89669, -82.8525, 14.4124, 0.52 ) }
    dend_14 { pt3dadd( -4.27827, -83.6508, 14.3958, 0.81 ) }
    dend_14 { pt3dadd( -4.75292, -84.5131, 14.4113, 0.29 ) }
    dend_14 { pt3dadd( -4.89713, -84.7741, 14.4235, 0.37 ) }
    dend_14 { pt3dadd( -5.20435, -85.3921, 14.4632, 0.37 ) }
    dend_14 { pt3dadd( -5.50222, -86.1342, 14.5757, 0.44 ) }
    dend_14 { pt3dadd( -5.77705, -86.9889, 14.7729, 0.81 ) }
    dend_14 { pt3dadd( -6.0201, -88.0061, 15.077, 0.81 ) }
    dend_14 { pt3dadd( -6.16102, -88.8016, 15.3519, 0.81 ) }
    dend_14 { pt3dadd( -6.33319, -89.8194, 15.733, 0.37 ) }
    dend_14 { pt3dadd( -6.54548, -91.0466, 16.2512, 0.37 ) }
    dend_14 { pt3dadd( -6.6457, -91.6661, 16.5507, 1.18 ) }
    dend_14 { pt3dadd( -6.71194, -92.2659, 16.8836, 2.8 ) }
    dend_14 { pt3dadd( -6.73087, -92.776, 17.1995, 3.32 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 34/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -2.77488, -30.9328, 5.752, 0.66 ) }
    dend_11 { pt3dadd( -1.54971, -31.9234, 6.26697, 0.66 ) }
    dend_11 { pt3dadd( -0.762262, -32.655, 6.60003, 0.44 ) }
    dend_11 { pt3dadd( -0.224015, -33.238, 6.8282, 0.88 ) }
    dend_11 { pt3dadd( 0.131984, -33.6893, 6.98037, 0.44 ) }
    dend_11 { pt3dadd( 0.413342, -34.1087, 7.09515, 0.22 ) }
    dend_11 { pt3dadd( 0.674923, -34.5791, 7.20265, 0.22 ) }
    dend_11 { pt3dadd( 0.81108, -35.0738, 7.2531, 0.22 ) }
    dend_11 { pt3dadd( 0.885018, -35.5328, 7.2872, 0.22 ) }
    dend_11 { pt3dadd( 0.91251, -35.946, 7.32843, 0.59 ) }
    dend_11 { pt3dadd( 0.92734, -36.5498, 7.4252, 1.7 ) }
    dend_11 { pt3dadd( 0.92504, -37.3447, 7.58864, 1.47 ) }
    dend_11 { pt3dadd( 0.91596, -38.7193, 7.92329, 0.44 ) }
    dend_11 { pt3dadd( 0.9327, -39.4563, 8.11913, 0.29 ) }
    dend_11 { pt3dadd( 0.94621, -39.9253, 8.24841, 0.22 ) }
    dend_11 { pt3dadd( 0.96943, -40.4535, 8.38545, 0.22 ) }
    dend_11 { pt3dadd( 0.99377, -40.827, 8.48204, 0.96 ) }
    dend_11 { pt3dadd( 1.06249, -41.5484, 8.64723, 2.51 ) }
    dend_11 { pt3dadd( 1.17321, -42.3529, 8.82275, 3.39 ) }
    dend_11 { pt3dadd( 1.31006, -43.1144, 8.96712, 3.1 ) }
    dend_11 { pt3dadd( 1.55436, -44.1351, 9.16269, 1.03 ) }
    dend_11 { pt3dadd( 1.82433, -45.1131, 9.35569, 0.29 ) }
    dend_11 { pt3dadd( 2.04239, -45.81, 9.51441, 0.22 ) }
    dend_11 { pt3dadd( 2.19667, -46.2617, 9.63183, 0.22 ) }
    dend_11 { pt3dadd( 2.28587, -46.5192, 9.7088, 0.22 ) }
    dend_11 { pt3dadd( 2.42255, -46.895, 9.82952, 0.29 ) }
    dend_11 { pt3dadd( 2.56856, -47.3131, 9.95632, 0.22 ) }
    dend_11 { pt3dadd( 2.70703, -47.8181, 10.0387, 0.29 ) }
    dend_11 { pt3dadd( 2.76888, -48.0831, 10.0598, 0.81 ) }
    dend_11 { pt3dadd( 2.93592, -48.8659, 10.0687, 1.55 ) }
    dend_11 { pt3dadd( 3.06593, -49.5063, 10.0492, 2.29 ) }
    dend_11 { pt3dadd( 3.18299, -50.0708, 10.0162, 2.06 ) }
    dend_11 { pt3dadd( 3.46273, -51.2573, 9.94614, 0.22 ) }
    dend_11 { pt3dadd( 3.57906, -51.6527, 9.93655, 0.22 ) }
    dend_11 { pt3dadd( 3.68449, -51.9395, 9.94776, 0.22 ) }
    dend_11 { pt3dadd( 3.74179, -52.0668, 9.96364, 0.22 ) }
    dend_11 { pt3dadd( 3.94353, -52.4593, 10.0516, 0.81 ) }
    dend_11 { pt3dadd( 4.26028, -53.0418, 10.2199, 1.84 ) }
    dend_11 { pt3dadd( 4.56958, -53.6344, 10.4306, 2.8 ) }
    dend_11 { pt3dadd( 4.87972, -54.3248, 10.7083, 1.77 ) }
    dend_11 { pt3dadd( 5.11157, -54.9626, 10.9718, 0.81 ) }
    dend_11 { pt3dadd( 5.36544, -55.7852, 11.3183, 0.22 ) }
    dend_11 { pt3dadd( 5.49727, -56.2605, 11.5145, 0.29 ) }
    dend_11 { pt3dadd( 5.60637, -56.73, 11.7079, 0.29 ) }
    dend_11 { pt3dadd( 5.73427, -57.5614, 12.0574, 0.59 ) }
    dend_11 { pt3dadd( 5.79114, -58.3232, 12.4, 1.47 ) }
    dend_11 { pt3dadd( 5.79044, -58.7097, 12.5927, 1.92 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 81/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 24.0198, 12.1715, 25.7318, 0.22 ) }
    dend_3 { pt3dadd( 25.0477, 12.5875, 27.2166, 0.22 ) }
    dend_3 { pt3dadd( 25.741, 12.8681, 28.2182, 0.22 ) }
    dend_3 { pt3dadd( 26.7111, 13.2607, 29.6196, 1.47 ) }
    dend_3 { pt3dadd( 27.0895, 13.4138, 30.1663, 1.25 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 86/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 24.0198, 12.1715, 25.7318, 0.29 ) }
    dend_2 { pt3dadd( 25.7163, 11.3331, 26.6538, 0.29 ) }
    dend_2 { pt3dadd( 26.7352, 10.737, 27.1798, 0.15 ) }
    dend_2 { pt3dadd( 27.1516, 10.4946, 27.3726, 0.22 ) }
    dend_2 { pt3dadd( 27.9873, 10.0177, 27.7249, 0.22 ) }
    dend_2 { pt3dadd( 28.9823, 9.43021, 28.1392, 0.22 ) }
    dend_2 { pt3dadd( 29.7575, 8.98413, 28.4357, 0.22 ) }
    dend_2 { pt3dadd( 30.822, 8.3499, 28.797, 0.22 ) }
    dend_2 { pt3dadd( 31.8783, 7.71935, 29.1194, 0.22 ) }
    dend_2 { pt3dadd( 32.9745, 7.11101, 29.4153, 0.22 ) }
    dend_2 { pt3dadd( 34.322, 6.46444, 29.7003, 0.15 ) }
    dend_2 { pt3dadd( 35.5459, 5.96285, 29.8842, 0.15 ) }
    dend_2 { pt3dadd( 36.1468, 5.75104, 29.9532, 0.15 ) }
    dend_2 { pt3dadd( 36.8768, 5.49407, 30.0155, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_2 { pt3dadd( 37.6112, 5.22731, 30.0561, 1.25 ) }
    dend_2 { pt3dadd( 38.8149, 4.80394, 30.0798, 0.15 ) }
    dend_2 { pt3dadd( 39.4235, 4.59943, 30.0787, 0.15 ) }
    dend_2 { pt3dadd( 40.427, 4.26963, 30.06, 0.88 ) }
    dend_2 { pt3dadd( 41.8085, 3.83014, 30.0145, 0.15 ) }
    dend_2 { pt3dadd( 42.3837, 3.65717, 29.9869, 0.44 ) }
    dend_2 { pt3dadd( 43.1354, 3.43265, 29.9607, 1.18 ) }
    dend_2 { pt3dadd( 44.676, 2.97177, 29.9391, 0.07 ) }
    dend_2 { pt3dadd( 45.8091, 2.65954, 29.9431, 0.07 ) }
    dend_2 { pt3dadd( 46.6973, 2.41359, 29.9786, 1.47 ) }
    dend_2 { pt3dadd( 47.2108, 2.28111, 30.0219, 1.47 ) }
    dend_2 { pt3dadd( 48.8838, 1.82753, 30.2116, 0.15 ) }
    dend_2 { pt3dadd( 49.6098, 1.6032, 30.3326, 1.11 ) }
    dend_2 { pt3dadd( 50.2057, 1.38991, 30.4628, 1.47 ) }
    dend_2 { pt3dadd( 52.0408, 0.644403, 30.949, 0.07 ) }
    dend_2 { pt3dadd( 53.0199, 0.17528, 31.2376, 0.15 ) }
    dend_2 { pt3dadd( 53.7224, -0.209904, 31.4628, 0.22 ) }
    dend_2 { pt3dadd( 54.695, -0.812075, 31.8275, 0.07 ) }
    dend_2 { pt3dadd( 55.2612, -1.18115, 32.0683, 1.18 ) }
    dend_2 { pt3dadd( 55.9208, -1.60812, 32.3696, 1.77 ) }
    dend_2 { pt3dadd( 57.4327, -2.57008, 33.0747, 0.07 ) }
    dend_2 { pt3dadd( 58.2805, -3.00772, 33.4269, 0.15 ) }
    dend_2 { pt3dadd( 59.7995, -3.57039, 34.0038, 0.74 ) }
    dend_2 { pt3dadd( 60.9762, -3.82441, 34.3992, 0.15 ) }
    dend_2 { pt3dadd( 61.7084, -3.86506, 34.624, 0.81 ) }
    dend_2 { pt3dadd( 62.4491, -3.79912, 34.8325, 2.14 ) }
    dend_2 { pt3dadd( 65.0746, -3.17448, 35.4924, 0.15 ) }
    dend_2 { pt3dadd( 65.9773, -2.85212, 35.7188, 0.15 ) }
    dend_2 { pt3dadd( 66.6871, -2.5258, 35.9072, 0.37 ) }
    dend_2 { pt3dadd( 67.967, -1.84359, 36.3313, 0.07 ) }
    dend_2 { pt3dadd( 68.4711, -1.54642, 36.559, 0.88 ) }
    dend_2 { pt3dadd( 68.9145, -1.24446, 36.8228, 1.25 ) }
    dend_2 { pt3dadd( 70.0195, -0.330472, 37.7866, 0.07 ) }
    dend_2 { pt3dadd( 70.541, 0.16289, 38.3789, 1.11 ) }
    dend_2 { pt3dadd( 70.9696, 0.621336, 39.0156, 1.55 ) }
    dend_2 { pt3dadd( 71.5284, 1.20307, 40.027, 0.07 ) }
    dend_2 { pt3dadd( 71.7921, 1.45161, 40.5521, 0.74 ) }
    dend_2 { pt3dadd( 72.2732, 1.87793, 41.6208, 0.15 ) }
    dend_2 { pt3dadd( 72.6538, 2.20765, 42.5582, 0.81 ) }
    dend_2 { pt3dadd( 73.0673, 2.542, 43.5984, 1.25 ) }
    dend_2 { pt3dadd( 73.7511, 3.02477, 45.2937, 0.22 ) }
    dend_2 { pt3dadd( 74.0537, 3.19672, 46.0302, 0.22 ) }
    dend_2 { pt3dadd( 74.225, 3.25864, 46.4045, 0.22 ) }
    dend_2 { pt3dadd( 74.6438, 3.33008, 47.1825, 0.15 ) }
    dend_2 { pt3dadd( 75.0732, 3.34555, 47.897, 0.81 ) }
    dend_2 { pt3dadd( 76.0723, 3.26385, 49.3059, 0.22 ) }
    dend_2 { pt3dadd( 76.9018, 3.15981, 50.3368, 0.22 ) }
    dend_2 { pt3dadd( 77.6479, 3.02072, 51.1297, 1.62 ) }
    dend_2 { pt3dadd( 78.4987, 2.81844, 51.9306, 0.15 ) }
    dend_2 { pt3dadd( 79.1347, 2.64977, 52.4639, 0.96 ) }
    dend_2 { pt3dadd( 80.7303, 2.2538, 53.5904, 0.07 ) }
    dend_2 { pt3dadd( 81.7718, 2.02682, 54.2365, 0.59 ) }
    dend_2 { pt3dadd( 83.1583, 1.78823, 55.0698, 0.07 ) }
    dend_2 { pt3dadd( 84.1536, 1.65823, 55.6834, 0.07 ) }
    dend_2 { pt3dadd( 84.7806, 1.59471, 56.0759, 1.25 ) }
    dend_2 { pt3dadd( 86.7043, 1.50891, 57.2696, 0.07 ) }
    dend_2 { pt3dadd( 87.6932, 1.53968, 57.8549, 0.81 ) }
    dend_2 { pt3dadd( 89.2506, 1.70268, 58.7669, 0.07 ) }
    dend_2 { pt3dadd( 89.7245, 1.8004, 59.0581, 0.07 ) }
    dend_2 { pt3dadd( 90.2995, 1.97158, 59.4312, 1.03 ) }
    dend_2 { pt3dadd( 91.4998, 2.39071, 60.2467, 0.07 ) }
    dend_2 { pt3dadd( 92.5904, 2.88283, 61.0374, 0.07 ) }
    dend_2 { pt3dadd( 93.7525, 3.48787, 61.8617, 0.07 ) }
    dend_2 { pt3dadd( 94.4619, 3.93207, 62.3559, 0.66 ) }
    dend_2 { pt3dadd( 94.9534, 4.25662, 62.7129, 1.03 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 65/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.42458, 39.3425, 0.0, 0.181547 ) }
    axon_1 { pt3dadd( 13.1052, 53.8839, 0.0, 0.181547 ) }
    axon_1 { pt3dadd( 16.7858, 68.4253, 0.0, 0.181547 ) }
    // Section: dend_56, id: dend_56, parent: dend_38 (entry count 68/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -4.33392, 34.7466, 23.0083, 0.22 ) }
    dend_56 { pt3dadd( -5.78842, 35.2512, 24.7946, 0.22 ) }
    dend_56 { pt3dadd( -6.34213, 35.5614, 25.4763, 0.22 ) }
    dend_56 { pt3dadd( -6.75383, 35.9486, 26.1088, 0.15 ) }
    dend_56 { pt3dadd( -7.0695, 36.3592, 26.7294, 0.15 ) }
    dend_56 { pt3dadd( -7.28575, 36.6773, 27.1599, 0.15 ) }
    dend_56 { pt3dadd( -7.61978, 37.3444, 27.9482, 0.66 ) }
    dend_56 { pt3dadd( -7.87064, 37.9616, 28.6134, 0.22 ) }
    dend_56 { pt3dadd( -8.27635, 38.9121, 29.6688, 0.22 ) }
    dend_56 { pt3dadd( -8.59353, 39.6514, 30.5081, 1.62 ) }
    dend_56 { pt3dadd( -8.96337, 40.5497, 31.5704, 3.1 ) }
    dend_56 { pt3dadd( -9.94448, 42.7935, 34.4031, 0.29 ) }
    dend_56 { pt3dadd( -10.3543, 43.6364, 35.5573, 0.22 ) }
    dend_56 { pt3dadd( -10.5589, 44.0036, 36.0744, 0.22 ) }
    dend_56 { pt3dadd( -10.6169, 44.1025, 36.2088, 0.22 ) }
    dend_56 { pt3dadd( -10.8674, 44.529, 36.794, 0.22 ) }
    dend_56 { pt3dadd( -11.1307, 44.9671, 37.4592, 0.22 ) }
    dend_56 { pt3dadd( -11.5623, 45.4684, 38.3664, 0.22 ) }
    dend_56 { pt3dadd( -11.9973, 46.0599, 39.3172, 0.88 ) }
    dend_56 { pt3dadd( -12.2391, 46.4056, 39.8159, 1.11 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 88/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -4.33392, 34.7466, 23.0083, 0.22 ) }
    dend_39 { pt3dadd( -2.3972, 35.4665, 23.1343, 0.22 ) }
    dend_39 { pt3dadd( -1.50008, 35.7999, 23.1927, 0.37 ) }
    dend_39 { pt3dadd( -0.720705, 36.0896, 23.2434, 0.88 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 92/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -2.66142, 58.4102, 6.00827, 0.15 ) }
    dend_35 { pt3dadd( -3.20023, 59.619, 6.08506, 0.15 ) }
    dend_35 { pt3dadd( -3.4746, 60.2586, 6.15735, 0.81 ) }
    dend_35 { pt3dadd( -3.69361, 60.7487, 6.19263, 1.18 ) }
    dend_35 { pt3dadd( -4.15765, 61.7634, 6.24738, 0.22 ) }
    dend_35 { pt3dadd( -4.3977, 62.3152, 6.26895, 0.81 ) }
    dend_35 { pt3dadd( -4.53856, 62.6707, 6.28892, 0.81 ) }
    dend_35 { pt3dadd( -4.77562, 63.4525, 6.38319, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_35 { pt3dadd( -4.9771, 64.2915, 6.48998, 0.07 ) }
    dend_35 { pt3dadd( -5.06097, 64.7352, 6.53948, 0.96 ) }
    dend_35 { pt3dadd( -5.17148, 65.4282, 6.59907, 1.92 ) }
    dend_35 { pt3dadd( -5.32582, 66.3615, 6.69354, 0.22 ) }
    dend_35 { pt3dadd( -5.3931, 66.861, 6.75978, 0.22 ) }
    dend_35 { pt3dadd( -5.44077, 67.3138, 6.83389, 0.22 ) }
    dend_35 { pt3dadd( -5.4761, 67.7403, 6.92518, 0.81 ) }
    dend_35 { pt3dadd( -5.52568, 68.2514, 7.03919, 1.11 ) }
    dend_35 { pt3dadd( -5.67977, 69.3643, 7.28708, 0.15 ) }
    dend_35 { pt3dadd( -5.81804, 70.1857, 7.44494, 0.15 ) }
    dend_35 { pt3dadd( -5.88107, 70.5358, 7.50563, 0.74 ) }
    dend_35 { pt3dadd( -5.98878, 71.2594, 7.61594, 1.92 ) }
    dend_35 { pt3dadd( -6.0265, 71.5977, 7.65767, 2.88 ) }
    dend_35 { pt3dadd( -6.07851, 72.3386, 7.74691, 1.84 ) }
    dend_35 { pt3dadd( -6.10997, 73.4998, 7.88686, 0.22 ) }
    dend_35 { pt3dadd( -6.11912, 74.2555, 7.97807, 0.59 ) }
    dend_35 { pt3dadd( -6.11279, 74.7685, 8.03448, 0.59 ) }
    dend_35 { pt3dadd( -6.09198, 75.4288, 8.08895, 0.22 ) }
    dend_35 { pt3dadd( -6.0562, 76.1641, 8.12384, 0.22 ) }
    dend_35 { pt3dadd( -6.03008, 76.7046, 8.12191, 0.22 ) }
    dend_35 { pt3dadd( -6.05338, 77.2642, 8.0862, 0.15 ) }
    dend_35 { pt3dadd( -6.16772, 77.9654, 7.99467, 0.15 ) }
    dend_35 { pt3dadd( -6.31885, 78.5187, 7.88099, 0.88 ) }
    dend_35 { pt3dadd( -6.5624, 79.2237, 7.68517, 1.77 ) }
    dend_35 { pt3dadd( -6.76492, 79.7473, 7.51742, 1.77 ) }
    dend_35 { pt3dadd( -7.22832, 80.7738, 7.19116, 0.15 ) }
    dend_35 { pt3dadd( -7.47621, 81.2732, 7.04303, 0.37 ) }
    dend_35 { pt3dadd( -7.70442, 81.7288, 6.92774, 0.96 ) }
    dend_35 { pt3dadd( -7.96411, 82.2825, 6.83437, 1.77 ) }
    dend_35 { pt3dadd( -8.34318, 83.1878, 6.75556, 0.29 ) }
    dend_35 { pt3dadd( -8.66897, 84.1243, 6.72999, 0.15 ) }
    dend_35 { pt3dadd( -8.73187, 84.3736, 6.73331, 0.52 ) }
    dend_35 { pt3dadd( -8.86485, 84.9205, 6.75657, 1.18 ) }
    dend_35 { pt3dadd( -9.08905, 85.8278, 6.82345, 0.15 ) }
    dend_35 { pt3dadd( -9.2232, 86.3803, 6.87461, 0.15 ) }
    dend_35 { pt3dadd( -9.3197, 86.8761, 6.92944, 1.03 ) }
    dend_35 { pt3dadd( -9.41967, 87.8332, 7.05436, 2.8 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 37/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -2.66142, 58.4102, 6.00827, 0.22 ) }
    dend_34 { pt3dadd( -2.38904, 59.2965, 6.44975, 0.22 ) }
    dend_34 { pt3dadd( -2.13867, 60.1462, 6.89064, 0.22 ) }
    dend_34 { pt3dadd( -1.94259, 60.7988, 7.22553, 0.96 ) }
    dend_34 { pt3dadd( -1.78314, 61.276, 7.46588, 1.18 ) }
    dend_34 { pt3dadd( -1.46132, 62.122, 7.87312, 0.15 ) }
    dend_34 { pt3dadd( -1.23539, 62.6299, 8.11547, 0.15 ) }
    dend_34 { pt3dadd( -1.05102, 62.9795, 8.26642, 0.15 ) }
    dend_34 { pt3dadd( -0.837402, 63.3771, 8.40225, 0.15 ) }
    dend_34 { pt3dadd( -0.621829, 63.8349, 8.50585, 0.15 ) }
    dend_34 { pt3dadd( -0.396337, 64.378, 8.57287, 1.33 ) }
    dend_34 { pt3dadd( -0.130018, 65.0835, 8.58913, 2.73 ) }
    dend_34 { pt3dadd( 0.0717002, 65.7388, 8.57051, 3.1 ) }
    dend_34 { pt3dadd( 0.469946, 67.6259, 8.44246, 0.22 ) }
    dend_34 { pt3dadd( 0.587229, 68.4775, 8.36625, 0.15 ) }
    dend_34 { pt3dadd( 0.633229, 69.0653, 8.30659, 0.52 ) }
    dend_34 { pt3dadd( 0.657777, 69.6095, 8.24696, 0.74 ) }
    dend_34 { pt3dadd( 0.684748, 70.7274, 8.11598, 0.22 ) }
    dend_34 { pt3dadd( 0.70197, 71.3811, 8.05078, 1.18 ) }
    dend_34 { pt3dadd( 0.729191, 71.9723, 8.01487, 2.58 ) }
    dend_34 { pt3dadd( 0.834422, 73.4358, 8.00532, 0.22 ) }
    dend_34 { pt3dadd( 0.885344, 74.0452, 8.02125, 0.22 ) }
    dend_34 { pt3dadd( 0.93675, 74.6855, 8.04918, 0.81 ) }
    dend_34 { pt3dadd( 1.01345, 75.7282, 8.10788, 2.51 ) }
    dend_34 { pt3dadd( 1.11272, 77.5212, 8.22723, 0.22 ) }
    dend_34 { pt3dadd( 1.12413, 78.2869, 8.28323, 0.29 ) }
    dend_34 { pt3dadd( 1.08513, 79.1343, 8.34792, 0.15 ) }
    dend_34 { pt3dadd( 1.00838, 79.9941, 8.41033, 0.15 ) }
    dend_34 { pt3dadd( 0.91395, 80.6706, 8.45516, 1.03 ) }
    dend_34 { pt3dadd( 0.792116, 81.2518, 8.48698, 1.99 ) }
    dend_34 { pt3dadd( 0.58978, 81.8904, 8.5101, 1.99 ) }
    dend_34 { pt3dadd( 0.0249182, 83.3112, 8.53599, 0.15 ) }
    dend_34 { pt3dadd( -0.251628, 83.894, 8.53629, 0.15 ) }
    dend_34 { pt3dadd( -0.51874, 84.3964, 8.52039, 0.15 ) }
    dend_34 { pt3dadd( -0.740927, 84.7684, 8.49712, 0.44 ) }
    dend_34 { pt3dadd( -1.39836, 85.7191, 8.41305, 0.15 ) }
    dend_34 { pt3dadd( -1.96039, 86.4213, 8.33291, 1.47 ) }
    dend_34 { pt3dadd( -2.47991, 86.9638, 8.25971, 2.51 ) }
    dend_34 { pt3dadd( -3.36747, 87.7978, 8.14485, 0.37 ) }
    dend_34 { pt3dadd( -3.86895, 88.2353, 8.07765, 0.22 ) }
    dend_34 { pt3dadd( -4.32586, 88.5938, 8.01257, 0.07 ) }
    dend_34 { pt3dadd( -4.76641, 88.891, 7.96002, 0.29 ) }
    dend_34 { pt3dadd( -5.60356, 89.377, 7.89023, 0.07 ) }
    dend_34 { pt3dadd( -6.31778, 89.7657, 7.8492, 0.44 ) }
    dend_34 { pt3dadd( -7.31337, 90.2732, 7.80482, 0.07 ) }
    dend_34 { pt3dadd( -8.13332, 90.6858, 7.75635, 0.15 ) }
    dend_34 { pt3dadd( -8.68205, 90.9547, 7.68482, 0.74 ) }
    dend_34 { pt3dadd( -9.41104, 91.296, 7.5784, 1.84 ) }
    dend_34 { pt3dadd( -10.5655, 91.7928, 7.38775, 0.15 ) }
    dend_34 { pt3dadd( -11.1943, 92.0478, 7.27394, 0.59 ) }
    dend_34 { pt3dadd( -11.6954, 92.2426, 7.17584, 0.29 ) }
    dend_34 { pt3dadd( -12.8028, 92.6941, 6.89524, 1.03 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 89/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -19.072, -21.7027, -27.6221, 1.47 ) }
    dend_31 { pt3dadd( -20.8649, -21.9033, -28.426, 1.47 ) }
    dend_31 { pt3dadd( -22.6649, -22.2786, -29.5121, 0.52 ) }
    dend_31 { pt3dadd( -23.5026, -22.5571, -30.1197, 0.52 ) }
    dend_31 { pt3dadd( -24.3073, -22.8246, -30.7032, 1.11 ) }
    dend_31 { pt3dadd( -25.1977, -23.1205, -31.3489, 2.21 ) }
    dend_31 { pt3dadd( -26.0168, -23.3928, -31.9429, 1.11 ) }
    dend_31 { pt3dadd( -27.347, -24.0821, -33.1749, 0.44 ) }
    dend_31 { pt3dadd( -28.0927, -24.6803, -34.0296, 1.47 ) }
    dend_31 { pt3dadd( -38.476, -27.2037, -38.6482, 1.47 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 99/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -19.072, -21.7027, -27.6221, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_28 { pt3dadd( -19.4199, -23.698, -28.0583, 0.22 ) }
    dend_28 { pt3dadd( -19.5461, -24.3557, -28.2173, 0.22 ) }
    dend_28 { pt3dadd( -19.7044, -25.1477, -28.4024, 0.96 ) }
    dend_28 { pt3dadd( -19.9174, -26.2996, -28.6922, 0.22 ) }
    dend_28 { pt3dadd( -20.0388, -27.0963, -28.914, 0.22 ) }
    dend_28 { pt3dadd( -20.1343, -27.7227, -29.0883, 0.81 ) }
    dend_28 { pt3dadd( -20.2318, -28.3718, -29.2902, 1.92 ) }
    dend_28 { pt3dadd( -20.3448, -29.1521, -29.5291, 0.81 ) }
    dend_28 { pt3dadd( -20.4565, -30.1524, -29.8744, 0.15 ) }
    dend_28 { pt3dadd( -20.5041, -30.9188, -30.1777, 0.66 ) }
    dend_28 { pt3dadd( -20.851, -39.266, -33.7187, 0.66 ) }
    dend_28 { pt3dadd( -22.6636, -47.8137, -36.0262, 0.66 ) }
    dend_28 { pt3dadd( -24.4425, -56.1259, -39.1419, 0.66 ) }
    dend_28 { pt3dadd( -27.6266, -64.2495, -41.4942, 0.66 ) }
    dend_28 { pt3dadd( -31.5153, -71.9718, -44.1562, 0.66 ) }
    dend_28 { pt3dadd( -34.2401, -80.5019, -45.2031, 0.66 ) }
    dend_28 { pt3dadd( -36.4912, -89.1899, -44.4968, 0.66 ) }
    dend_28 { pt3dadd( -39.6239, -97.4123, -42.593, 0.66 ) }
    // Section: dend_20, id: dend_20, parent: dend_14 (entry count 18/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -6.73087, -92.776, 17.1995, 0.37 ) }
    dend_20 { pt3dadd( -5.83217, -93.8899, 17.473, 0.37 ) }
    dend_20 { pt3dadd( -5.37621, -94.6208, 17.6728, 0.22 ) }
    dend_20 { pt3dadd( -5.16831, -95.0508, 17.8052, 0.22 ) }
    dend_20 { pt3dadd( -4.96445, -95.5805, 17.9821, 0.22 ) }
    dend_20 { pt3dadd( -4.81037, -96.065, 18.143, 0.29 ) }
    dend_20 { pt3dadd( -4.66684, -96.6757, 18.3295, 0.29 ) }
    dend_20 { pt3dadd( -4.65666, -97.1931, 18.4813, 0.22 ) }
    dend_20 { pt3dadd( -4.68865, -97.6911, 18.6241, 0.81 ) }
    dend_20 { pt3dadd( -4.72973, -98.1669, 18.7617, 1.77 ) }
    dend_20 { pt3dadd( -4.77037, -98.652, 18.8965, 2.43 ) }
    dend_20 { pt3dadd( -4.81759, -99.6208, 19.1266, 0.96 ) }
    dend_20 { pt3dadd( -4.84357, -100.981, 19.4244, 0.22 ) }
    dend_20 { pt3dadd( -4.86258, -101.512, 19.5388, 1.18 ) }
    dend_20 { pt3dadd( -4.90861, -102.113, 19.6698, 1.7 ) }
    dend_20 { pt3dadd( -4.93849, -102.368, 19.7274, 1.7 ) }
    dend_20 { pt3dadd( -5.06842, -103.194, 19.943, 0.74 ) }
    dend_20 { pt3dadd( -5.21721, -103.994, 20.1696, 0.29 ) }
    dend_20 { pt3dadd( -5.37188, -104.751, 20.379, 0.29 ) }
    dend_20 { pt3dadd( -5.47348, -105.323, 20.5417, 0.29 ) }
    dend_20 { pt3dadd( -5.56906, -105.791, 20.6792, 0.66 ) }
    dend_20 { pt3dadd( -5.6843, -106.321, 20.847, 1.47 ) }
    dend_20 { pt3dadd( -5.78881, -106.794, 21.0119, 2.73 ) }
    dend_20 { pt3dadd( -5.85204, -107.232, 21.1598, 2.88 ) }
    dend_20 { pt3dadd( -5.82623, -108.369, 21.5213, 1.84 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 43/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -6.73087, -92.776, 17.1995, 0.22 ) }
    dend_15 { pt3dadd( -8.20699, -93.4679, 17.2365, 0.22 ) }
    dend_15 { pt3dadd( -8.98069, -93.8457, 17.2271, 0.22 ) }
    dend_15 { pt3dadd( -9.32563, -94.0456, 17.2113, 0.22 ) }
    dend_15 { pt3dadd( -9.58609, -94.2162, 17.1945, 0.22 ) }
    dend_15 { pt3dadd( -9.9923, -94.4986, 17.1765, 0.29 ) }
    dend_15 { pt3dadd( -10.3016, -94.7147, 17.1645, 0.96 ) }
    dend_15 { pt3dadd( -10.9463, -95.1837, 17.0945, 1.84 ) }
    dend_15 { pt3dadd( -11.8575, -95.8623, 16.9413, 0.22 ) }
    dend_15 { pt3dadd( -12.3982, -96.2555, 16.8389, 0.22 ) }
    dend_15 { pt3dadd( -12.9989, -96.6446, 16.716, 0.96 ) }
    dend_15 { pt3dadd( -13.7366, -97.0326, 16.5683, 0.22 ) }
    dend_15 { pt3dadd( -14.4693, -97.2792, 16.4152, 0.22 ) }
    dend_15 { pt3dadd( -14.7581, -97.3255, 16.3528, 0.22 ) }
    dend_15 { pt3dadd( -15.3791, -97.3528, 16.2252, 0.22 ) }
    dend_15 { pt3dadd( -16.1322, -97.3735, 16.0809, 0.29 ) }
    dend_15 { pt3dadd( -16.6569, -97.408, 15.9882, 1.25 ) }
    dend_15 { pt3dadd( -17.593, -97.5225, 15.8602, 2.88 ) }
    dend_15 { pt3dadd( -17.9874, -97.5854, 15.8187, 2.73 ) }
    dend_15 { pt3dadd( -19.5782, -97.948, 15.6494, 0.29 ) }
    dend_15 { pt3dadd( -20.198, -98.1463, 15.5823, 0.66 ) }
    dend_15 { pt3dadd( -21.0216, -98.4591, 15.4882, 0.29 ) }
    dend_15 { pt3dadd( -21.5052, -98.652, 15.4185, 0.22 ) }
    dend_15 { pt3dadd( -22.1445, -98.8988, 15.3174, 0.22 ) }
    dend_15 { pt3dadd( -22.803, -99.1226, 15.1935, 0.22 ) }
    dend_15 { pt3dadd( -23.8218, -99.406, 14.9666, 0.22 ) }
    dend_15 { pt3dadd( -24.2736, -99.487, 14.8446, 0.37 ) }
    dend_15 { pt3dadd( -25.0496, -99.5866, 14.6155, 0.37 ) }
    dend_15 { pt3dadd( -25.7611, -99.6509, 14.3867, 0.66 ) }
    dend_15 { pt3dadd( -26.2308, -99.6758, 14.2257, 1.62 ) }
    dend_15 { pt3dadd( -26.7783, -99.6405, 14.0213, 2.51 ) }
    dend_15 { pt3dadd( -27.7218, -99.46, 13.6336, 2.73 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 75/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 5.79044, -58.7097, 12.5927, 3.24 ) }
    dend_13 { pt3dadd( 5.98394, -59.8521, 12.6149, 3.24 ) }
    dend_13 { pt3dadd( 6.17601, -60.8361, 12.6318, 3.24 ) }
    dend_13 { pt3dadd( 6.61151, -62.8428, 12.6637, 0.22 ) }
    dend_13 { pt3dadd( 6.91254, -64.1221, 12.6822, 0.29 ) }
    dend_13 { pt3dadd( 7.08257, -64.8039, 12.6912, 0.22 ) }
    dend_13 { pt3dadd( 7.30066, -65.6317, 12.701, 0.22 ) }
    dend_13 { pt3dadd( 7.45449, -66.147, 12.6964, 0.22 ) }
    dend_13 { pt3dadd( 7.57985, -66.5351, 12.6944, 0.22 ) }
    dend_13 { pt3dadd( 7.78492, -67.1571, 12.6922, 0.74 ) }
    dend_13 { pt3dadd( 7.90923, -67.5869, 12.6893, 0.74 ) }
    dend_13 { pt3dadd( 8.04251, -68.3277, 12.6965, 0.22 ) }
    dend_13 { pt3dadd( 8.10127, -68.9835, 12.7201, 0.22 ) }
    dend_13 { pt3dadd( 8.17734, -69.8949, 12.7491, 0.22 ) }
    dend_13 { pt3dadd( 8.23965, -70.4902, 12.737, 0.22 ) }
    dend_13 { pt3dadd( 8.35183, -71.3196, 12.6904, 0.22 ) }
    dend_13 { pt3dadd( 8.51518, -72.1756, 12.6209, 1.33 ) }
    dend_13 { pt3dadd( 8.77963, -73.2787, 12.5009, 3.02 ) }
    dend_13 { pt3dadd( 9.21649, -74.6868, 12.3152, 0.88 ) }
    dend_13 { pt3dadd( 9.6945, -76.0292, 12.1457, 0.22 ) }
    dend_13 { pt3dadd( 9.95062, -76.7082, 12.0679, 0.22 ) }
    dend_13 { pt3dadd( 10.3056, -77.6271, 11.978, 0.22 ) }
    dend_13 { pt3dadd( 10.5125, -78.189, 11.9414, 1.18 ) }
    dend_13 { pt3dadd( 10.8866, -79.3098, 11.9457, 2.06 ) }
    dend_13 { pt3dadd( 11.3287, -80.8934, 12.1095, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_13 { pt3dadd( 11.4734, -81.6476, 12.2612, 0.52 ) }
    dend_13 { pt3dadd( 11.5558, -82.2976, 12.4244, 0.52 ) }
    dend_13 { pt3dadd( 11.6745, -83.5318, 12.7843, 0.22 ) }
    dend_13 { pt3dadd( 11.7209, -84.073, 12.961, 0.22 ) }
    dend_13 { pt3dadd( 11.8104, -85.2866, 13.3931, 1.99 ) }
    dend_13 { pt3dadd( 11.999, -87.3537, 14.1451, 0.29 ) }
    dend_13 { pt3dadd( 12.0554, -88.025, 14.3857, 0.22 ) }
    dend_13 { pt3dadd( 12.1474, -89.1573, 14.7787, 0.22 ) }
    dend_13 { pt3dadd( 12.2017, -89.7314, 14.9606, 1.03 ) }
    dend_13 { pt3dadd( 12.2697, -90.4077, 15.1557, 2.14 ) }
    dend_13 { pt3dadd( 12.3431, -91.0453, 15.327, 2.06 ) }
    dend_13 { pt3dadd( 12.535, -92.6292, 15.7332, 0.22 ) }
    dend_13 { pt3dadd( 12.5972, -93.3319, 15.9022, 0.66 ) }
    dend_13 { pt3dadd( 12.6857, -94.7993, 16.2317, 0.22 ) }
    dend_13 { pt3dadd( 12.7336, -95.7457, 16.4258, 0.22 ) }
    dend_13 { pt3dadd( 12.7707, -96.3654, 16.5278, 0.66 ) }
    dend_13 { pt3dadd( 12.8382, -97.2937, 16.652, 0.22 ) }
    dend_13 { pt3dadd( 12.9143, -98.1281, 16.7411, 1.55 ) }
    dend_13 { pt3dadd( 12.9761, -98.8164, 16.8025, 2.8 ) }
    dend_13 { pt3dadd( 13.042, -99.5092, 16.8478, 2.58 ) }
    dend_13 { pt3dadd( 13.3319, -101.835, 16.9185, 0.22 ) }
    dend_13 { pt3dadd( 13.4025, -102.558, 16.9405, 0.22 ) }
    dend_13 { pt3dadd( 13.4507, -103.181, 16.9495, 0.59 ) }
    dend_13 { pt3dadd( 13.4894, -103.742, 16.9616, 0.29 ) }
    dend_13 { pt3dadd( 13.5292, -104.467, 16.98, 1.03 ) }
    dend_13 { pt3dadd( 13.5703, -105.336, 16.9931, 2.06 ) }
    dend_13 { pt3dadd( 13.6054, -107.089, 16.9851, 0.15 ) }
    dend_13 { pt3dadd( 13.618, -107.53, 16.9717, 0.15 ) }
    dend_13 { pt3dadd( 13.6681, -108.502, 16.9175, 0.29 ) }
    dend_13 { pt3dadd( 13.7106, -109.163, 16.8749, 0.15 ) }
    dend_13 { pt3dadd( 13.7652, -109.916, 16.8207, 0.15 ) }
    dend_13 { pt3dadd( 13.8246, -110.553, 16.7862, 0.96 ) }
    dend_13 { pt3dadd( 13.9056, -111.217, 16.7502, 2.06 ) }
    dend_13 { pt3dadd( 13.999, -112.13, 16.7349, 2.14 ) }
    dend_13 { pt3dadd( 14.1574, -114.29, 16.7616, 0.22 ) }
    dend_13 { pt3dadd( 14.1776, -114.99, 16.8114, 0.22 ) }
    dend_13 { pt3dadd( 14.1776, -115.96, 16.9316, 0.22 ) }
    dend_13 { pt3dadd( 14.1724, -116.246, 16.981, 0.59 ) }
    dend_13 { pt3dadd( 14.1415, -116.96, 17.1309, 1.4 ) }
    dend_13 { pt3dadd( 14.1035, -117.708, 17.3069, 0.66 ) }
    dend_13 { pt3dadd( 14.0365, -119.245, 17.7039, 0.22 ) }
    dend_13 { pt3dadd( 13.9791, -119.995, 17.8756, 0.22 ) }
    dend_13 { pt3dadd( 13.925, -120.561, 17.9842, 0.22 ) }
    dend_13 { pt3dadd( 13.8732, -121.176, 18.093, 1.03 ) }
    dend_13 { pt3dadd( 13.8265, -122.102, 18.2339, 2.21 ) }
    dend_13 { pt3dadd( 13.7978, -124.068, 18.5141, 0.15 ) }
    dend_13 { pt3dadd( 13.8319, -125.248, 18.6533, 0.15 ) }
    dend_13 { pt3dadd( 13.8529, -125.731, 18.7076, 0.81 ) }
    dend_13 { pt3dadd( 13.8863, -126.42, 18.7808, 1.33 ) }
    dend_13 { pt3dadd( 13.9348, -127.45, 18.8896, 0.22 ) }
    dend_13 { pt3dadd( 13.9811, -128.486, 18.9921, 0.22 ) }
    dend_13 { pt3dadd( 14.0146, -129.128, 19.0489, 0.88 ) }
    dend_13 { pt3dadd( 14.0453, -129.695, 19.1094, 0.66 ) }
    dend_13 { pt3dadd( 14.1093, -130.975, 19.2811, 0.15 ) }
    dend_13 { pt3dadd( 14.1625, -131.916, 19.4265, 0.15 ) }
    dend_13 { pt3dadd( 14.1913, -132.269, 19.4874, 0.74 ) }
    dend_13 { pt3dadd( 14.2731, -132.979, 19.6128, 1.18 ) }
    dend_13 { pt3dadd( 14.4867, -134.409, 19.8845, 0.22 ) }
    dend_13 { pt3dadd( 14.6549, -135.234, 20.063, 0.22 ) }
    dend_13 { pt3dadd( 14.8004, -135.747, 20.1745, 0.22 ) }
    dend_13 { pt3dadd( 14.9756, -136.266, 20.2908, 0.22 ) }
    dend_13 { pt3dadd( 15.2097, -136.912, 20.43, 0.22 ) }
    dend_13 { pt3dadd( 15.4598, -137.627, 20.5717, 1.33 ) }
    dend_13 { pt3dadd( 15.7242, -138.457, 20.7198, 2.21 ) }
    dend_13 { pt3dadd( 16.1395, -139.936, 20.9518, 0.15 ) }
    dend_13 { pt3dadd( 16.3257, -140.542, 21.0558, 0.29 ) }
    dend_13 { pt3dadd( 16.427, -140.835, 21.1098, 0.29 ) }
    dend_13 { pt3dadd( 16.7869, -141.763, 21.2985, 0.15 ) }
    dend_13 { pt3dadd( 16.8911, -142.035, 21.3544, 0.15 ) }
    dend_13 { pt3dadd( 17.0998, -142.641, 21.4661, 0.66 ) }
    dend_13 { pt3dadd( 17.4389, -143.715, 21.6832, 0.15 ) }
    dend_13 { pt3dadd( 17.5632, -144.14, 21.7608, 0.15 ) }
    dend_13 { pt3dadd( 17.6617, -144.448, 21.8278, 0.15 ) }
    dend_13 { pt3dadd( 17.9092, -145.163, 22.0155, 0.15 ) }
    dend_13 { pt3dadd( 18.0587, -145.618, 22.1417, 0.37 ) }
    dend_13 { pt3dadd( 18.254, -146.276, 22.3194, 1.03 ) }
    dend_13 { pt3dadd( 18.4503, -146.98, 22.5076, 0.22 ) }
    dend_13 { pt3dadd( 18.7464, -147.969, 22.7733, 0.22 ) }
    dend_13 { pt3dadd( 19.0219, -148.813, 22.9955, 1.4 ) }
    dend_13 { pt3dadd( 19.2793, -149.549, 23.1777, 2.14 ) }
    dend_13 { pt3dadd( 19.5516, -150.347, 23.3665, 1.4 ) }
    dend_13 { pt3dadd( 20.0185, -151.863, 23.6894, 0.22 ) }
    dend_13 { pt3dadd( 20.1456, -152.339, 23.7784, 0.81 ) }
    dend_13 { pt3dadd( 20.2763, -152.942, 23.8731, 1.55 ) }
    dend_13 { pt3dadd( 20.4902, -154.114, 24.0418, 0.29 ) }
    dend_13 { pt3dadd( 20.6476, -155.146, 24.1895, 0.22 ) }
    dend_13 { pt3dadd( 20.7345, -155.848, 24.2823, 0.22 ) }
    dend_13 { pt3dadd( 20.7881, -156.562, 24.3527, 0.29 ) }
    dend_13 { pt3dadd( 20.8224, -157.378, 24.4352, 0.15 ) }
    dend_13 { pt3dadd( 20.8385, -158.001, 24.4966, 0.96 ) }
    dend_13 { pt3dadd( 20.8473, -158.431, 24.5339, 1.47 ) }
    dend_13 { pt3dadd( 20.8725, -159.073, 24.572, 1.47 ) }
    dend_13 { pt3dadd( 20.9636, -160.199, 24.6321, 0.22 ) }
    dend_13 { pt3dadd( 21.1025, -161.303, 24.6944, 0.22 ) }
    dend_13 { pt3dadd( 21.2092, -161.921, 24.7233, 0.88 ) }
    dend_13 { pt3dadd( 21.3887, -162.746, 24.7608, 0.88 ) }
    dend_13 { pt3dadd( 21.716, -164.032, 24.8276, 0.15 ) }
    dend_13 { pt3dadd( 21.987, -164.904, 24.8805, 0.15 ) }
    dend_13 { pt3dadd( 22.2134, -165.53, 24.92, 0.81 ) }
    dend_13 { pt3dadd( 22.5972, -166.532, 25.016, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_13 { pt3dadd( 22.8442, -167.179, 25.1045, 0.81 ) }
    dend_13 { pt3dadd( 23.1325, -167.957, 25.2364, 0.52 ) }
    dend_13 { pt3dadd( 23.3642, -168.659, 25.3716, 1.62 ) }
    dend_13 { pt3dadd( 23.5548, -169.39, 25.5221, 1.62 ) }
    dend_13 { pt3dadd( 23.8515, -170.883, 25.8081, 0.22 ) }
    dend_13 { pt3dadd( 23.9799, -171.717, 25.9528, 0.22 ) }
    dend_13 { pt3dadd( 24.0404, -172.214, 26.0183, 0.74 ) }
    dend_13 { pt3dadd( 24.0944, -172.772, 26.0731, 0.29 ) }
    dend_13 { pt3dadd( 24.1506, -173.579, 26.1401, 1.47 ) }
    dend_13 { pt3dadd( 24.1933, -174.138, 26.18, 1.47 ) }
    dend_13 { pt3dadd( 24.2883, -175.457, 26.2363, 0.15 ) }
    dend_13 { pt3dadd( 24.3596, -176.099, 26.2963, 0.52 ) }
    dend_13 { pt3dadd( 24.4928, -176.996, 26.4114, 0.15 ) }
    dend_13 { pt3dadd( 24.6139, -177.671, 26.5146, 0.15 ) }
    dend_13 { pt3dadd( 24.6853, -178.046, 26.5775, 0.66 ) }
    dend_13 { pt3dadd( 24.8193, -178.732, 26.7015, 1.47 ) }
    dend_13 { pt3dadd( 25.1253, -180.257, 26.9854, 0.22 ) }
    dend_13 { pt3dadd( 25.3007, -181.09, 27.1254, 0.15 ) }
    dend_13 { pt3dadd( 25.4214, -181.633, 27.1916, 0.15 ) }
    dend_13 { pt3dadd( 25.5739, -182.324, 27.2631, 0.74 ) }
    dend_13 { pt3dadd( 25.7846, -183.367, 27.3535, 0.15 ) }
    dend_13 { pt3dadd( 25.9226, -184.057, 27.4033, 0.15 ) }
    dend_13 { pt3dadd( 26.1128, -185.173, 27.4623, 0.22 ) }
    dend_13 { pt3dadd( 26.2273, -185.912, 27.5123, 1.18 ) }
    dend_13 { pt3dadd( 26.3531, -186.777, 27.5829, 1.7 ) }
    dend_13 { pt3dadd( 26.621, -188.58, 27.7602, 0.22 ) }
    dend_13 { pt3dadd( 26.7281, -189.28, 27.8359, 0.22 ) }
    dend_13 { pt3dadd( 26.8386, -189.937, 27.9146, 0.15 ) }
    dend_13 { pt3dadd( 27.0061, -190.879, 28.0456, 0.15 ) }
    dend_13 { pt3dadd( 27.0846, -191.42, 28.1336, 0.44 ) }
    dend_13 { pt3dadd( 27.2622, -192.915, 28.3843, 0.15 ) }
    dend_13 { pt3dadd( 27.2995, -193.393, 28.4782, 0.88 ) }
    dend_13 { pt3dadd( 27.3265, -194.07, 28.6175, 1.7 ) }
    dend_13 { pt3dadd( 27.3403, -194.824, 28.7714, 1.4 ) }
    dend_13 { pt3dadd( 27.3319, -196.576, 29.1021, 0.15 ) }
    dend_13 { pt3dadd( 27.3269, -196.93, 29.1639, 0.22 ) }
    dend_13 { pt3dadd( 27.2943, -198.171, 29.3619, 0.07 ) }
    dend_13 { pt3dadd( 27.2837, -198.802, 29.4511, 1.33 ) }
    dend_13 { pt3dadd( 27.2787, -199.357, 29.5204, 1.33 ) }
    dend_13 { pt3dadd( 27.308, -200.374, 29.6356, 0.07 ) }
    dend_13 { pt3dadd( 27.3791, -201.118, 29.6982, 0.15 ) }
    dend_13 { pt3dadd( 27.4476, -201.615, 29.732, 0.15 ) }
    dend_13 { pt3dadd( 27.538, -202.114, 29.7569, 0.22 ) }
    dend_13 { pt3dadd( 27.7196, -203.065, 29.8021, 0.07 ) }
    dend_13 { pt3dadd( 27.7821, -203.413, 29.8178, 0.66 ) }
    dend_13 { pt3dadd( 27.8716, -203.974, 29.838, 0.29 ) }
    dend_13 { pt3dadd( 28.0672, -205.294, 29.8703, 0.15 ) }
    dend_13 { pt3dadd( 28.1241, -205.635, 29.8801, 0.22 ) }
    dend_13 { pt3dadd( 28.241, -206.333, 29.908, 0.07 ) }
    dend_13 { pt3dadd( 28.3438, -206.957, 29.9448, 0.74 ) }
    dend_13 { pt3dadd( 28.4854, -207.935, 30.027, 0.15 ) }
    dend_13 { pt3dadd( 28.5441, -208.415, 30.0774, 0.59 ) }
    dend_13 { pt3dadd( 28.6658, -209.711, 30.2218, 0.15 ) }
    dend_13 { pt3dadd( 28.7113, -210.261, 30.2966, 0.29 ) }
    dend_13 { pt3dadd( 28.7591, -210.949, 30.3876, 0.15 ) }
    dend_13 { pt3dadd( 28.7871, -211.504, 30.4584, 0.88 ) }
    dend_13 { pt3dadd( 28.8007, -211.986, 30.5152, 1.92 ) }
    dend_13 { pt3dadd( 28.8206, -214.082, 30.7367, 0.22 ) }
    dend_13 { pt3dadd( 28.8208, -215.157, 30.8321, 1.7 ) }
    dend_13 { pt3dadd( 28.8255, -217.521, 31.0123, 0.15 ) }
    dend_13 { pt3dadd( 28.8191, -218.522, 31.073, 0.15 ) }
    dend_13 { pt3dadd( 28.8077, -219.146, 31.1059, 0.81 ) }
    dend_13 { pt3dadd( 28.7682, -220.556, 31.1634, 0.22 ) }
    dend_13 { pt3dadd( 28.7464, -221.356, 31.1827, 1.25 ) }
    dend_13 { pt3dadd( 28.7387, -221.791, 31.1879, 1.84 ) }
    dend_13 { pt3dadd( 28.7283, -223.763, 31.2361, 0.15 ) }
    dend_13 { pt3dadd( 28.7369, -224.272, 31.2508, 0.29 ) }
    dend_13 { pt3dadd( 28.7836, -225.18, 31.3049, 0.07 ) }
    dend_13 { pt3dadd( 28.822, -225.742, 31.3513, 0.15 ) }
    dend_13 { pt3dadd( 28.9259, -227.075, 31.4908, 0.15 ) }
    dend_13 { pt3dadd( 28.9598, -227.432, 31.5346, 0.52 ) }
    dend_13 { pt3dadd( 29.0184, -227.941, 31.6056, 1.4 ) }
    dend_13 { pt3dadd( 29.1302, -229.408, 31.8431, 0.07 ) }
    dend_13 { pt3dadd( 29.1693, -230.454, 32.0281, 0.15 ) }
    dend_13 { pt3dadd( 29.1599, -230.938, 32.1267, 0.74 ) }
    dend_13 { pt3dadd( 29.133, -231.426, 32.2336, 1.92 ) }
    dend_13 { pt3dadd( 29.0815, -232.171, 32.4213, 1.92 ) }
    dend_13 { pt3dadd( 28.9369, -234.113, 32.9688, 0.15 ) }
    dend_13 { pt3dadd( 28.89, -234.794, 33.1998, 0.59 ) }
    dend_13 { pt3dadd( 28.86, -235.912, 33.6583, 0.07 ) }
    dend_13 { pt3dadd( 28.8622, -236.171, 33.7794, 0.15 ) }
    dend_13 { pt3dadd( 28.9049, -237.037, 34.2178, 0.15 ) }
    dend_13 { pt3dadd( 28.9592, -237.64, 34.5357, 0.37 ) }
    dend_13 { pt3dadd( 29.0704, -238.392, 34.9214, 0.96 ) }
    dend_13 { pt3dadd( 29.2191, -239.076, 35.2292, 1.47 ) }
    dend_13 { pt3dadd( 29.5488, -240.26, 35.7127, 0.15 ) }
    dend_13 { pt3dadd( 29.7514, -240.929, 35.9595, 0.15 ) }
    dend_13 { pt3dadd( 29.9133, -241.442, 36.1203, 1.11 ) }
    dend_13 { pt3dadd( 30.0815, -241.971, 36.2608, 1.7 ) }
    dend_13 { pt3dadd( 30.5615, -243.561, 36.5831, 0.15 ) }
    dend_13 { pt3dadd( 30.7248, -244.124, 36.6773, 0.81 ) }
    dend_13 { pt3dadd( 30.9217, -244.788, 36.7685, 1.03 ) }
    dend_13 { pt3dadd( 31.4445, -246.374, 36.9791, 0.15 ) }
    dend_13 { pt3dadd( 31.6618, -246.969, 37.0632, 0.22 ) }
    dend_13 { pt3dadd( 31.9513, -247.758, 37.1666, 0.07 ) }
    dend_13 { pt3dadd( 32.1317, -248.286, 37.2257, 0.88 ) }
    dend_13 { pt3dadd( 32.3353, -248.91, 37.2958, 1.62 ) }
    dend_13 { pt3dadd( 32.8285, -250.378, 37.4868, 0.15 ) }
    dend_13 { pt3dadd( 33.0996, -251.098, 37.5864, 1.33 ) }
    dend_13 { pt3dadd( 33.6413, -252.457, 37.7901, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 33.7967, -252.873, 37.859, 0.22 ) }
    dend_13 { pt3dadd( 34.229, -254.199, 38.1032, 0.07 ) }
    dend_13 { pt3dadd( 34.3787, -254.718, 38.2164, 0.96 ) }
    dend_13 { pt3dadd( 34.7226, -256.101, 38.5489, 0.15 ) }
    dend_13 { pt3dadd( 34.8794, -256.722, 38.7138, 1.11 ) }
    dend_13 { pt3dadd( 35.3918, -258.62, 39.257, 0.15 ) }
    dend_13 { pt3dadd( 35.6286, -259.449, 39.4816, 1.11 ) }
    dend_13 { pt3dadd( 35.8463, -260.2, 39.6658, 1.47 ) }
    dend_13 { pt3dadd( 36.3304, -261.988, 40.0606, 0.15 ) }
    dend_13 { pt3dadd( 36.5021, -262.623, 40.1796, 0.88 ) }
    dend_13 { pt3dadd( 36.7243, -263.394, 40.2839, 1.33 ) }
    dend_13 { pt3dadd( 37.2302, -265.114, 40.385, 0.15 ) }
    dend_13 { pt3dadd( 37.4755, -266.023, 40.3667, 0.96 ) }
    dend_13 { pt3dadd( 37.8647, -267.754, 40.2006, 0.15 ) }
    dend_13 { pt3dadd( 37.9669, -268.46, 40.0906, 0.15 ) }
    dend_13 { pt3dadd( 38.0177, -269.215, 39.963, 0.74 ) }
    dend_13 { pt3dadd( 37.9741, -270.367, 39.7615, 0.44 ) }
    dend_13 { pt3dadd( 37.8668, -271.153, 39.6209, 1.11 ) }
    dend_13 { pt3dadd( 37.741, -271.75, 39.5193, 1.7 ) }
    dend_13 { pt3dadd( 37.1858, -273.886, 39.1975, 0.15 ) }
    dend_13 { pt3dadd( 36.8599, -274.986, 39.0636, 1.33 ) }
    dend_13 { pt3dadd( 36.5222, -276.037, 38.9728, 0.15 ) }
    dend_13 { pt3dadd( 36.3845, -276.45, 38.9557, 0.74 ) }
    dend_13 { pt3dadd( 36.2164, -276.955, 38.9623, 1.4 ) }
    dend_13 { pt3dadd( 36.0003, -277.618, 38.9951, 0.74 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 5.79044, -58.7097, 12.5927, 1.03 ) }
    dend_12 { pt3dadd( 8.13185, -59.8197, 17.6409, 1.03 ) }
    dend_12 { pt3dadd( 8.65535, -60.0019, 18.6787, 1.03 ) }
    dend_12 { pt3dadd( 9.16963, -60.1394, 19.6186, 1.03 ) }
    dend_12 { pt3dadd( 9.68454, -60.2761, 20.517, 1.03 ) }
    dend_12 { pt3dadd( 10.0942, -60.3835, 21.1688, 1.03 ) }
    dend_12 { pt3dadd( 10.6842, -60.5437, 22.0263, 1.03 ) }
    dend_12 { pt3dadd( 11.2091, -60.6495, 22.4342, 0.88 ) }
    dend_12 { pt3dadd( 11.6652, -60.7645, 22.8026, 0.88 ) }
    dend_12 { pt3dadd( 12.225, -61.0155, 23.3826, 0.44 ) }
    dend_12 { pt3dadd( 12.695, -61.4636, 24.0485, 0.59 ) }
    dend_12 { pt3dadd( 12.9858, -61.8392, 24.5503, 0.22 ) }
    dend_12 { pt3dadd( 13.68, -62.5748, 25.7562, 0.22 ) }
    dend_12 { pt3dadd( 14.2582, -63.0548, 26.7378, 0.44 ) }
    dend_12 { pt3dadd( 14.6255, -63.2583, 27.3261, 1.4 ) }
    dend_12 { pt3dadd( 15.3442, -63.4774, 28.3764, 2.14 ) }
    dend_12 { pt3dadd( 16.504, -63.5972, 29.8252, 0.59 ) }
    dend_12 { pt3dadd( 18.4653, -63.5324, 31.831, 0.59 ) }
    dend_12 { pt3dadd( 19.2119, -63.4424, 32.4002, 0.44 ) }
    dend_12 { pt3dadd( 20.6033, -63.1936, 33.222, 0.81 ) }
    dend_12 { pt3dadd( 21.7928, -62.9158, 33.8063, 1.99 ) }
    dend_12 { pt3dadd( 23.6059, -62.4164, 34.4807, 0.22 ) }
    dend_12 { pt3dadd( 24.4745, -62.1773, 34.7058, 1.03 ) }
    dend_12 { pt3dadd( 25.7342, -61.8653, 34.918, 0.22 ) }
    dend_12 { pt3dadd( 27.1481, -61.5713, 35.1344, 0.96 ) }
    dend_12 { pt3dadd( 28.0703, -61.4013, 35.2664, 1.92 ) }
    dend_12 { pt3dadd( 30.2212, -61.0535, 35.7379, 0.22 ) }
    dend_12 { pt3dadd( 31.1131, -60.8983, 36.0128, 0.22 ) }
    dend_12 { pt3dadd( 31.6328, -60.8008, 36.1979, 0.22 ) }
    dend_12 { pt3dadd( 32.5379, -60.6187, 36.5436, 1.11 ) }
    dend_12 { pt3dadd( 33.6921, -60.3721, 36.9828, 2.58 ) }
    dend_12 { pt3dadd( 35.9394, -59.8282, 37.8431, 1.11 ) }
    dend_12 { pt3dadd( 37.0096, -59.5329, 38.2631, 0.44 ) }
    dend_12 { pt3dadd( 37.9699, -59.2829, 38.6533, 0.44 ) }
    dend_12 { pt3dadd( 38.5567, -59.1534, 38.9152, 0.22 ) }
    dend_12 { pt3dadd( 39.0739, -59.0764, 39.1536, 0.22 ) }
    dend_12 { pt3dadd( 39.5812, -59.0437, 39.3927, 0.22 ) }
    dend_12 { pt3dadd( 40.4304, -59.063, 39.8281, 1.4 ) }
    dend_12 { pt3dadd( 41.9196, -59.2306, 40.8056, 0.37 ) }
    dend_12 { pt3dadd( 43.035, -59.443, 41.8172, 0.29 ) }
    dend_12 { pt3dadd( 43.824, -59.6986, 42.7317, 0.29 ) }
    dend_12 { pt3dadd( 43.964, -59.7694, 42.9265, 0.29 ) }
    dend_12 { pt3dadd( 44.3662, -60.1274, 43.6622, 0.29 ) }
    dend_12 { pt3dadd( 44.6731, -60.556, 44.3918, 0.29 ) }
    dend_12 { pt3dadd( 45.0731, -61.3243, 45.5023, 0.59 ) }
    dend_12 { pt3dadd( 45.3145, -61.9442, 46.287, 1.84 ) }
    dend_12 { pt3dadd( 45.496, -62.5285, 46.9829, 2.06 ) }
    dend_12 { pt3dadd( 45.8524, -63.88, 48.4962, 0.52 ) }
    dend_12 { pt3dadd( 46.007, -64.6953, 49.3227, 0.22 ) }
    dend_12 { pt3dadd( 46.0951, -65.4484, 50.0327, 0.22 ) }
    dend_12 { pt3dadd( 46.097, -65.94, 50.4724, 0.22 ) }
    dend_12 { pt3dadd( 46.0372, -66.2565, 50.7971, 0.52 ) }
    dend_12 { pt3dadd( 45.8626, -66.6393, 51.286, 0.81 ) }
    dend_12 { pt3dadd( 45.2464, -67.3327, 52.5498, 0.22 ) }
    dend_12 { pt3dadd( 44.7761, -67.6577, 53.4401, 1.47 ) }
    dend_12 { pt3dadd( 44.4591, -67.8007, 54.0436, 1.92 ) }
    dend_12 { pt3dadd( 43.7689, -67.9901, 55.4261, 0.44 ) }
    dend_12 { pt3dadd( 43.4501, -68.0174, 56.0927, 0.22 ) }
    dend_12 { pt3dadd( 43.095, -67.9392, 56.8716, 0.81 ) }
    dend_12 { pt3dadd( 42.5513, -67.6549, 58.1353, 0.22 ) }
    dend_12 { pt3dadd( 42.2785, -67.4794, 58.7895, 0.22 ) }
    dend_12 { pt3dadd( 42.1442, -67.3926, 59.1361, 0.22 ) }
    dend_12 { pt3dadd( 41.8993, -67.2698, 59.8004, 0.59 ) }
    dend_12 { pt3dadd( 41.4054, -67.1072, 61.2212, 0.37 ) }
    dend_12 { pt3dadd( 41.1107, -67.0532, 62.1456, 0.37 ) }
    dend_12 { pt3dadd( 40.9192, -67.0204, 62.9564, 0.37 ) }
    dend_12 { pt3dadd( 40.8387, -67.0088, 63.6202, 0.37 ) }
    dend_12 { pt3dadd( 40.8487, -67.0772, 64.4808, 0.37 ) }
    dend_12 { pt3dadd( 40.9458, -67.234, 65.1182, 0.37 ) }
    dend_12 { pt3dadd( 41.0715, -67.4363, 65.6708, 0.37 ) }
    dend_12 { pt3dadd( 41.2383, -67.6578, 66.3913, 0.37 ) }
    dend_12 { pt3dadd( 41.2463, -67.7246, 67.1968, 0.37 ) }
    dend_12 { pt3dadd( 40.9502, -67.7412, 68.0027, 0.37 ) }
    dend_12 { pt3dadd( 40.4511, -67.7212, 68.7669, 0.37 ) }
    dend_12 { pt3dadd( 39.9007, -67.6403, 69.3902, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_12 { pt3dadd( 39.5836, -67.5696, 69.6732, 0.37 ) }
    dend_12 { pt3dadd( 38.267, -67.1259, 70.7086, 0.29 ) }
    dend_12 { pt3dadd( 36.9375, -66.4389, 71.6741, 0.22 ) }
    dend_12 { pt3dadd( 36.5176, -66.1791, 71.9654, 0.22 ) }
    dend_12 { pt3dadd( 35.6832, -65.6113, 72.5787, 0.15 ) }
    dend_12 { pt3dadd( 35.1125, -65.2191, 73.0478, 0.59 ) }
    dend_12 { pt3dadd( 34.5815, -64.8566, 73.5119, 0.29 ) }
    dend_12 { pt3dadd( 34.114, -64.5612, 73.9655, 0.88 ) }
    dend_12 { pt3dadd( 33.3719, -64.1435, 74.7774, 0.96 ) }
    dend_12 { pt3dadd( 32.2911, -63.6892, 75.9358, 0.22 ) }
    dend_12 { pt3dadd( 31.6351, -63.4985, 76.6189, 1.33 ) }
    dend_12 { pt3dadd( 31.1935, -63.4115, 77.0622, 1.4 ) }
    dend_12 { pt3dadd( 30.1024, -63.3046, 78.0846, 0.15 ) }
    dend_12 { pt3dadd( 29.8114, -63.3108, 78.3668, 0.15 ) }
    dend_12 { pt3dadd( 29.4256, -63.3513, 78.7606, 0.15 ) }
    dend_12 { pt3dadd( 29.1401, -63.4145, 79.0546, 0.15 ) }
    dend_12 { pt3dadd( 28.9534, -63.4585, 79.2556, 0.81 ) }
    dend_12 { pt3dadd( 28.6723, -63.4836, 79.5786, 0.81 ) }
    dend_12 { pt3dadd( 27.7468, -63.4293, 80.7132, 0.22 ) }
    dend_12 { pt3dadd( 27.2294, -63.3175, 81.3383, 0.22 ) }
    dend_12 { pt3dadd( 26.7296, -63.1617, 81.9263, 1.11 ) }
    dend_12 { pt3dadd( 26.2425, -62.9613, 82.4772, 1.62 ) }
    dend_12 { pt3dadd( 25.1466, -62.3955, 83.6333, 0.22 ) }
    dend_12 { pt3dadd( 24.5001, -61.9758, 84.2533, 1.11 ) }
    dend_12 { pt3dadd( 23.6195, -61.3114, 84.9797, 0.22 ) }
    dend_12 { pt3dadd( 22.9945, -60.8319, 85.4383, 0.22 ) }
    dend_12 { pt3dadd( 22.6824, -60.5862, 85.6469, 1.03 ) }
    dend_12 { pt3dadd( 22.0684, -60.1016, 86.0107, 1.03 ) }
    dend_12 { pt3dadd( 21.2203, -59.4311, 86.4442, 0.22 ) }
    dend_12 { pt3dadd( 20.3704, -58.7272, 86.8325, 0.52 ) }
    dend_12 { pt3dadd( 19.4413, -57.8968, 87.2419, 0.15 ) }
    dend_12 { pt3dadd( 19.107, -57.5635, 87.3828, 0.15 ) }
    dend_12 { pt3dadd( 18.8714, -57.293, 87.501, 0.52 ) }
    dend_12 { pt3dadd( 18.55, -56.8751, 87.6818, 1.18 ) }
    dend_12 { pt3dadd( 17.6504, -55.5536, 88.2381, 0.22 ) }
    dend_12 { pt3dadd( 17.2455, -54.8228, 88.4694, 1.03 ) }
    dend_12 { pt3dadd( 17.021, -54.334, 88.5765, 1.99 ) }
    dend_12 { pt3dadd( 16.234, -52.3538, 88.8706, 0.29 ) }
    dend_12 { pt3dadd( 16.0443, -51.7983, 88.8991, 0.96 ) }
    dend_12 { pt3dadd( 15.7995, -50.9478, 88.8583, 1.7 ) }
    dend_12 { pt3dadd( 15.4363, -49.189, 88.5705, 0.22 ) }
    dend_12 { pt3dadd( 15.3093, -48.3525, 88.3383, 0.22 ) }
    dend_12 { pt3dadd( 15.2429, -47.6632, 88.0634, 0.96 ) }
    dend_12 { pt3dadd( 15.2278, -46.4865, 87.4377, 0.07 ) }
    dend_12 { pt3dadd( 15.2579, -45.7781, 87.013, 0.74 ) }
    dend_12 { pt3dadd( 15.3678, -44.8474, 86.3841, 0.22 ) }
    dend_12 { pt3dadd( 15.5749, -43.9348, 85.7324, 0.22 ) }
    dend_12 { pt3dadd( 15.9449, -43.156, 85.1391, 0.66 ) }
    dend_12 { pt3dadd( 16.6521, -42.2067, 84.3737, 0.07 ) }
    dend_12 { pt3dadd( 17.2003, -41.692, 83.9381, 0.22 ) }
    dend_12 { pt3dadd( 18.0139, -41.1024, 83.4423, 0.07 ) }
    dend_12 { pt3dadd( 18.8633, -40.5838, 82.9982, 1.11 ) }
    dend_12 { pt3dadd( 21.2428, -39.3623, 81.9922, 0.07 ) }
    dend_12 { pt3dadd( 21.808, -39.1165, 81.8012, 0.07 ) }
    dend_12 { pt3dadd( 22.2241, -38.9654, 81.6931, 0.29 ) }
    dend_12 { pt3dadd( 23.3658, -38.5867, 81.4766, 0.07 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 56/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 27.0895, 13.4138, 30.1663, 0.22 ) }
    dend_7 { pt3dadd( 27.3072, 13.7349, 30.8063, 0.22 ) }
    dend_7 { pt3dadd( 27.5412, 13.9792, 31.3723, 0.22 ) }
    dend_7 { pt3dadd( 27.7583, 14.1568, 31.829, 0.52 ) }
    dend_7 { pt3dadd( 28.0745, 14.3892, 32.4294, 1.7 ) }
    dend_7 { pt3dadd( 28.3789, 14.5645, 32.9046, 2.06 ) }
    dend_7 { pt3dadd( 29.0464, 14.8765, 33.8505, 0.52 ) }
    dend_7 { pt3dadd( 29.5543, 15.0814, 34.5269, 0.66 ) }
    dend_7 { pt3dadd( 30.0175, 15.2581, 35.1071, 2.14 ) }
    dend_7 { pt3dadd( 30.2912, 15.3647, 35.4426, 2.65 ) }
    dend_7 { pt3dadd( 31.2487, 15.7668, 36.6101, 0.29 ) }
    dend_7 { pt3dadd( 31.6776, 15.9403, 37.1649, 0.22 ) }
    dend_7 { pt3dadd( 32.1511, 16.1181, 37.8006, 0.22 ) }
    dend_7 { pt3dadd( 32.522, 16.2348, 38.316, 1.25 ) }
    dend_7 { pt3dadd( 33.0752, 16.3794, 39.107, 0.15 ) }
    dend_7 { pt3dadd( 33.5971, 16.5045, 39.8611, 0.81 ) }
    dend_7 { pt3dadd( 34.2242, 16.6782, 40.7097, 1.4 ) }
    dend_7 { pt3dadd( 34.668, 16.8086, 41.2281, 2.21 ) }
    dend_7 { pt3dadd( 35.7977, 17.1245, 42.3445, 0.22 ) }
    dend_7 { pt3dadd( 36.3409, 17.2709, 42.7994, 0.88 ) }
    dend_7 { pt3dadd( 36.8412, 17.4071, 43.1523, 1.18 ) }
    dend_7 { pt3dadd( 37.8719, 17.7349, 43.7508, 0.22 ) }
    dend_7 { pt3dadd( 38.3313, 17.9167, 43.9651, 0.59 ) }
    dend_7 { pt3dadd( 38.7494, 18.1084, 44.1236, 1.11 ) }
    dend_7 { pt3dadd( 39.4233, 18.4367, 44.3272, 0.15 ) }
    dend_7 { pt3dadd( 39.6925, 18.5657, 44.415, 0.15 ) }
    dend_7 { pt3dadd( 39.9394, 18.6915, 44.5253, 0.15 ) }
    dend_7 { pt3dadd( 40.1649, 18.8128, 44.6685, 0.37 ) }
    dend_7 { pt3dadd( 40.4797, 19.007, 44.9396, 0.66 ) }
    dend_7 { pt3dadd( 41.1949, 19.4809, 45.6622, 0.15 ) }
    dend_7 { pt3dadd( 41.698, 19.8137, 46.2377, 1.62 ) }
    dend_7 { pt3dadd( 42.2164, 20.1303, 46.861, 0.29 ) }
    dend_7 { pt3dadd( 42.7701, 20.4333, 47.5545, 1.18 ) }
    dend_7 { pt3dadd( 43.5481, 20.7901, 48.549, 0.22 ) }
    dend_7 { pt3dadd( 44.082, 20.9851, 49.2299, 0.52 ) }
    dend_7 { pt3dadd( 44.7572, 21.1695, 50.0583, 1.25 ) }
    dend_7 { pt3dadd( 45.2977, 21.2726, 50.7069, 2.14 ) }
    dend_7 { pt3dadd( 46.2323, 21.3505, 51.7854, 0.59 ) }
    dend_7 { pt3dadd( 46.8358, 21.3501, 52.4612, 0.59 ) }
    dend_7 { pt3dadd( 47.436, 21.3111, 53.0971, 0.22 ) }
    dend_7 { pt3dadd( 48.1329, 21.2575, 53.8322, 1.55 ) }
    dend_7 { pt3dadd( 48.4775, 21.2404, 54.1995, 1.55 ) }
    dend_7 { pt3dadd( 49.3731, 21.2692, 55.2193, 0.22 ) }
    dend_7 { pt3dadd( 49.6393, 21.306, 55.5523, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_7 { pt3dadd( 49.9927, 21.4165, 55.9939, 0.22 ) }
    dend_7 { pt3dadd( 50.3247, 21.564, 56.4371, 0.96 ) }
    dend_7 { pt3dadd( 50.6697, 21.7831, 56.9334, 1.25 ) }
    dend_7 { pt3dadd( 51.2476, 22.2852, 57.803, 0.22 ) }
    dend_7 { pt3dadd( 51.6647, 22.7962, 58.4625, 0.22 ) }
    dend_7 { pt3dadd( 52.1199, 23.3733, 59.1789, 2.73 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 6/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 27.0895, 13.4138, 30.1663, 0.22 ) }
    dend_4 { pt3dadd( 27.6227, 11.8183, 30.8674, 0.22 ) }
    dend_4 { pt3dadd( 27.8912, 11.1168, 31.1241, 0.37 ) }
    dend_4 { pt3dadd( 28.3611, 10.0556, 31.4992, 0.66 ) }
    dend_4 { pt3dadd( 28.9012, 8.87823, 32.0032, 0.66 ) }
    dend_4 { pt3dadd( 29.3863, 7.83476, 32.5386, 0.15 ) }
    dend_4 { pt3dadd( 29.7892, 6.95818, 33.0549, 1.47 ) }
    dend_4 { pt3dadd( 30.309, 5.7855, 33.7276, 3.24 ) }
    dend_4 { pt3dadd( 30.6513, 5.05852, 34.1826, 3.24 ) }
    dend_4 { pt3dadd( 31.7769, 2.90168, 35.7082, 0.29 ) }
    dend_4 { pt3dadd( 32.2209, 2.07499, 36.3713, 0.44 ) }
    dend_4 { pt3dadd( 32.7857, 0.991373, 37.3052, 2.14 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 18/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -12.2391, 46.4056, 39.8159, 0.22 ) }
    dend_60 { pt3dadd( -13.2919, 47.2218, 40.0275, 0.22 ) }
    dend_60 { pt3dadd( -13.7906, 47.6118, 40.1239, 1.55 ) }
    dend_60 { pt3dadd( -14.492, 48.1313, 40.1889, 3.1 ) }
    dend_60 { pt3dadd( -15.7898, 49.0525, 40.213, 0.15 ) }
    dend_60 { pt3dadd( -16.2495, 49.3645, 40.1918, 0.66 ) }
    dend_60 { pt3dadd( -17.0152, 49.8587, 40.1218, 0.15 ) }
    dend_60 { pt3dadd( -17.6152, 50.1939, 40.0104, 1.18 ) }
    dend_60 { pt3dadd( -18.7436, 50.7373, 39.7263, 0.07 ) }
    dend_60 { pt3dadd( -19.3817, 50.9983, 39.5347, 0.07 ) }
    dend_60 { pt3dadd( -19.9079, 51.1895, 39.3578, 0.07 ) }
    dend_60 { pt3dadd( -20.49, 51.3756, 39.1712, 0.96 ) }
    dend_60 { pt3dadd( -21.6268, 51.7011, 38.8368, 0.15 ) }
    dend_60 { pt3dadd( -22.5132, 51.9559, 38.6161, 0.15 ) }
    dend_60 { pt3dadd( -23.0451, 52.1146, 38.5331, 1.03 ) }
    dend_60 { pt3dadd( -23.5979, 52.2756, 38.4774, 1.99 ) }
    dend_60 { pt3dadd( -24.6676, 52.5715, 38.4738, 0.15 ) }
    dend_60 { pt3dadd( -25.1285, 52.6873, 38.5057, 0.15 ) }
    dend_60 { pt3dadd( -25.4568, 52.7572, 38.5504, 0.15 ) }
    dend_60 { pt3dadd( -25.9855, 52.852, 38.65, 0.88 ) }
    dend_60 { pt3dadd( -26.6383, 52.9339, 38.7728, 1.62 ) }
    dend_60 { pt3dadd( -28.0177, 53.0467, 39.0432, 0.15 ) }
    dend_60 { pt3dadd( -28.5531, 53.0683, 39.1494, 0.15 ) }
    dend_60 { pt3dadd( -29.1551, 53.0744, 39.2597, 0.44 ) }
    dend_60 { pt3dadd( -29.8313, 53.049, 39.3652, 0.15 ) }
    dend_60 { pt3dadd( -30.7611, 52.9784, 39.5295, 0.22 ) }
    dend_60 { pt3dadd( -31.6436, 52.8748, 39.7072, 0.15 ) }
    dend_60 { pt3dadd( -31.8526, 52.8377, 39.7564, 0.74 ) }
    dend_60 { pt3dadd( -32.6006, 52.6809, 39.9635, 1.25 ) }
    dend_60 { pt3dadd( -33.7899, 52.4013, 40.3353, 0.22 ) }
    dend_60 { pt3dadd( -34.8268, 52.123, 40.6995, 1.11 ) }
    dend_60 { pt3dadd( -35.2933, 51.975, 40.8776, 1.84 ) }
    dend_60 { pt3dadd( -36.2886, 51.5357, 41.3055, 0.15 ) }
    dend_60 { pt3dadd( -36.6161, 51.348, 41.4676, 0.15 ) }
    dend_60 { pt3dadd( -36.9519, 51.13, 41.65, 0.15 ) }
    dend_60 { pt3dadd( -37.1841, 50.9609, 41.7847, 0.81 ) }
    dend_60 { pt3dadd( -37.8075, 50.436, 42.1179, 2.14 ) }
    dend_60 { pt3dadd( -38.7937, 49.4356, 42.7243, 0.22 ) }
    dend_60 { pt3dadd( -39.2141, 48.8747, 43.0258, 1.47 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 57/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -12.2391, 46.4056, 39.8159, 0.22 ) }
    dend_57 { pt3dadd( -12.8613, 47.936, 41.5056, 0.22 ) }
    dend_57 { pt3dadd( -13.3383, 49.0505, 42.6501, 0.22 ) }
    dend_57 { pt3dadd( -14.0782, 50.6642, 44.2517, 0.37 ) }
    dend_57 { pt3dadd( -14.403, 51.2995, 44.8995, 0.37 ) }
    dend_57 { pt3dadd( -14.8228, 52.068, 45.6987, 0.96 ) }
    dend_57 { pt3dadd( -15.2259, 52.8068, 46.4567, 0.15 ) }
    dend_57 { pt3dadd( -15.4169, 53.1704, 46.8068, 0.15 ) }
    dend_57 { pt3dadd( -15.5449, 53.3779, 47.0083, 0.22 ) }
    dend_57 { pt3dadd( -16.0541, 54.0591, 47.6496, 0.15 ) }
    dend_57 { pt3dadd( -16.4794, 54.5855, 48.1969, 1.03 ) }
    dend_57 { pt3dadd( -17.0159, 55.2937, 48.9887, 1.99 ) }
    dend_57 { pt3dadd( -17.7018, 56.4338, 50.2842, 0.22 ) }
    dend_57 { pt3dadd( -18.0321, 57.2285, 51.0816, 0.15 ) }
    dend_57 { pt3dadd( -18.1263, 57.5768, 51.3999, 0.15 ) }
    dend_57 { pt3dadd( -18.2368, 58.3029, 52.0032, 1.18 ) }
    dend_57 { pt3dadd( -18.3317, 59.4332, 52.8915, 0.15 ) }
    dend_57 { pt3dadd( -18.3618, 60.1112, 53.4172, 0.52 ) }
    dend_57 { pt3dadd( -18.3848, 61.0423, 54.0972, 0.22 ) }
    dend_57 { pt3dadd( -18.436, 61.9527, 54.7587, 1.33 ) }
    dend_57 { pt3dadd( -18.567, 62.9626, 55.538, 2.88 ) }
    dend_57 { pt3dadd( -18.9955, 64.7433, 57.0261, 0.22 ) }
    dend_57 { pt3dadd( -19.2649, 65.3877, 57.6091, 0.22 ) }
    dend_57 { pt3dadd( -19.6496, 66.08, 58.2865, 0.74 ) }
    dend_57 { pt3dadd( -20.1378, 66.8338, 59.1006, 0.15 ) }
    dend_57 { pt3dadd( -20.5501, 67.4328, 59.7805, 0.15 ) }
    dend_57 { pt3dadd( -20.9125, 67.9185, 60.4011, 0.15 ) }
    dend_57 { pt3dadd( -21.3097, 68.4159, 61.2345, 0.74 ) }
    dend_57 { pt3dadd( -21.6076, 68.8388, 62.1175, 0.74 ) }
    dend_57 { pt3dadd( -21.75, 69.056, 62.8776, 0.74 ) }
    dend_57 { pt3dadd( -21.832, 69.1715, 63.6874, 0.74 ) }
    dend_57 { pt3dadd( -21.8688, 69.1884, 64.0016, 0.74 ) }
    dend_57 { pt3dadd( -22.0524, 69.1984, 65.2884, 0.74 ) }
    dend_57 { pt3dadd( -22.1085, 69.1883, 65.7338, 0.74 ) }
    dend_57 { pt3dadd( -22.2539, 69.1554, 66.9429, 0.74 ) }
    dend_57 { pt3dadd( -22.3042, 69.1739, 67.7227, 0.74 ) }
    dend_57 { pt3dadd( -22.2697, 69.3315, 69.1844, 0.96 ) }
    dend_57 { pt3dadd( -22.1368, 69.5467, 70.2414, 0.96 ) }
    dend_57 { pt3dadd( -21.9752, 69.7785, 70.9779, 0.96 ) }
    dend_57 { pt3dadd( -21.6936, 70.1476, 71.991, 0.96 ) }
    dend_57 { pt3dadd( -21.2962, 70.6718, 73.227, 0.66 ) }
    dend_57 { pt3dadd( -20.8642, 71.2433, 74.4782, 0.88 ) }
    dend_57 { pt3dadd( -20.4617, 71.8848, 75.8211, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_57 { pt3dadd( -20.1431, 72.6483, 77.368, 0.37 ) }
    dend_57 { pt3dadd( -20.0725, 73.0262, 78.0703, 0.37 ) }
    dend_57 { pt3dadd( -20.0354, 73.7597, 79.2505, 1.4 ) }
    dend_57 { pt3dadd( -20.053, 74.1814, 79.8559, 1.62 ) }
    dend_57 { pt3dadd( -20.1243, 75.2697, 81.2205, 0.44 ) }
    dend_57 { pt3dadd( -20.1636, 76.0343, 82.0685, 0.44 ) }
    dend_57 { pt3dadd( -20.1436, 76.8628, 82.8764, 1.18 ) }
    dend_57 { pt3dadd( -20.0132, 78.0415, 83.9086, 0.22 ) }
    dend_57 { pt3dadd( -19.8782, 78.6525, 84.3953, 0.22 ) }
    dend_57 { pt3dadd( -19.6456, 79.3825, 84.9331, 1.25 ) }
    dend_57 { pt3dadd( -19.362, 80.1511, 85.4758, 1.92 ) }
    dend_57 { pt3dadd( -18.8081, 81.7763, 86.7059, 0.15 ) }
    dend_57 { pt3dadd( -18.6323, 82.4076, 87.2421, 0.88 ) }
    dend_57 { pt3dadd( -18.4903, 83.1877, 87.9642, 1.92 ) }
    dend_57 { pt3dadd( -18.3626, 84.714, 89.5174, 0.22 ) }
    dend_57 { pt3dadd( -18.3617, 85.5115, 90.4404, 0.74 ) }
    dend_57 { pt3dadd( -18.4177, 86.5688, 91.7934, 1.7 ) }
    dend_57 { pt3dadd( -18.4646, 87.3269, 92.8662, 0.07 ) }
    dend_57 { pt3dadd( -18.4566, 87.7118, 93.4371, 0.96 ) }
    dend_57 { pt3dadd( -18.3703, 88.6912, 94.9678, 0.07 ) }
    dend_57 { pt3dadd( -18.2469, 89.3035, 95.9637, 0.07 ) }
    dend_57 { pt3dadd( -18.0767, 89.7665, 96.7177, 0.07 ) }
    dend_57 { pt3dadd( -17.7102, 90.4566, 97.9419, 0.37 ) }
    dend_57 { pt3dadd( -17.3551, 91.027, 99.1808, 0.59 ) }
    dend_57 { pt3dadd( -17.1786, 91.3033, 99.9024, 0.59 ) }
    dend_57 { pt3dadd( -17.0763, 91.4918, 100.523, 0.59 ) }
    dend_57 { pt3dadd( -17.0619, 91.6006, 100.9, 0.59 ) }
    dend_57 { pt3dadd( -17.1652, 92.0684, 102.271, 0.15 ) }
    dend_57 { pt3dadd( -17.3023, 92.4856, 103.175, 0.07 ) }
    dend_57 { pt3dadd( -17.3674, 92.8368, 103.742, 0.07 ) }
    dend_57 { pt3dadd( -17.4117, 93.1766, 104.203, 0.07 ) }
    dend_57 { pt3dadd( -17.5134, 93.7626, 104.909, 0.88 ) }
    dend_57 { pt3dadd( -17.7221, 94.7053, 106.038, 0.22 ) }
    dend_57 { pt3dadd( -17.9374, 95.4796, 107.079, 0.22 ) }
    dend_57 { pt3dadd( -18.1911, 96.1491, 108.139, 1.62 ) }
    dend_57 { pt3dadd( -18.5339, 96.7236, 109.304, 2.21 ) }
    dend_57 { pt3dadd( -19.1872, 97.4597, 111.348, 0.37 ) }
    dend_57 { pt3dadd( -19.6328, 97.7906, 112.771, 0.37 ) }
    dend_57 { pt3dadd( -20.2599, 98.0046, 114.913, 1.33 ) }
    dend_57 { pt3dadd( -20.4222, 97.9794, 115.615, 1.77 ) }
    dend_57 { pt3dadd( -20.6413, 97.7351, 117.149, 0.29 ) }
    dend_57 { pt3dadd( -20.7216, 97.3545, 118.488, 0.29 ) }
    dend_57 { pt3dadd( -20.778, 96.938, 119.585, 0.59 ) }
    dend_57 { pt3dadd( -20.8687, 96.4834, 120.704, 1.18 ) }
    dend_57 { pt3dadd( -21.088, 95.7641, 122.502, 0.37 ) }
    dend_57 { pt3dadd( -21.3885, 95.0283, 124.373, 1.03 ) }
    dend_57 { pt3dadd( -21.7282, 94.449, 125.838, 1.4 ) }
    dend_57 { pt3dadd( -22.6766, 93.3085, 128.661, 0.07 ) }
    dend_57 { pt3dadd( -23.2448, 92.8034, 129.911, 0.59 ) }
    dend_57 { pt3dadd( -23.9769, 92.3764, 131.063, 0.15 ) }
    dend_57 { pt3dadd( -24.5542, 92.1553, 131.717, 0.15 ) }
    dend_57 { pt3dadd( -25.5155, 91.8803, 132.578, 0.15 ) }
    dend_57 { pt3dadd( -25.9995, 91.7786, 132.95, 1.03 ) }
    dend_57 { pt3dadd( -26.5143, 91.6849, 133.272, 1.4 ) }
    dend_57 { pt3dadd( -28.4051, 91.3569, 134.357, 0.15 ) }
    dend_57 { pt3dadd( -29.0949, 91.2472, 134.757, 0.15 ) }
    dend_57 { pt3dadd( -30.3, 91.0548, 135.551, 0.15 ) }
    dend_57 { pt3dadd( -30.899, 90.9451, 136.005, 1.11 ) }
    dend_57 { pt3dadd( -31.4548, 90.8328, 136.481, 1.62 ) }
    dend_57 { pt3dadd( -32.7559, 90.5599, 137.728, 0.29 ) }
    dend_57 { pt3dadd( -33.5405, 90.4051, 138.556, 0.07 ) }
    dend_57 { pt3dadd( -34.2914, 90.3208, 139.327, 0.07 ) }
    dend_57 { pt3dadd( -34.7606, 90.2964, 139.801, 0.88 ) }
    dend_57 { pt3dadd( -35.8497, 90.2838, 140.95, 0.07 ) }
    dend_57 { pt3dadd( -36.3699, 90.3098, 141.539, 0.22 ) }
    dend_57 { pt3dadd( -37.2404, 90.4425, 142.604, 0.07 ) }
    dend_57 { pt3dadd( -37.8683, 90.5993, 143.328, 1.77 ) }
    // Section: dend_51, id: dend_51, parent: dend_39 (entry count 67/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -0.720705, 36.0896, 23.2434, 0.52 ) }
    dend_51 { pt3dadd( 2.23981, 35.4704, 20.6906, 0.52 ) }
    dend_51 { pt3dadd( 2.96899, 35.2529, 20.1334, 2.21 ) }
    dend_51 { pt3dadd( 4.28203, 34.7554, 19.2006, 2.88 ) }
    dend_51 { pt3dadd( 6.50156, 33.743, 17.6913, 0.96 ) }
    dend_51 { pt3dadd( 8.08869, 32.8859, 16.5808, 0.15 ) }
    dend_51 { pt3dadd( 8.95551, 32.3421, 15.9081, 0.59 ) }
    dend_51 { pt3dadd( 9.82783, 31.6373, 15.3285, 0.15 ) }
    dend_51 { pt3dadd( 10.4015, 31.0989, 14.9392, 0.22 ) }
    dend_51 { pt3dadd( 10.8302, 30.5815, 14.6124, 0.22 ) }
    dend_51 { pt3dadd( 11.5402, 29.4399, 13.8889, 0.22 ) }
    dend_51 { pt3dadd( 12.3526, 27.7981, 12.8785, 1.11 ) }
    dend_51 { pt3dadd( 12.7138, 26.8832, 12.3247, 2.29 ) }
    dend_51 { pt3dadd( 12.8999, 26.3014, 11.9687, 2.58 ) }
    dend_51 { pt3dadd( 13.3993, 24.4343, 10.8384, 0.15 ) }
    dend_51 { pt3dadd( 13.6285, 23.308, 10.2232, 0.15 ) }
    dend_51 { pt3dadd( 13.7391, 22.2684, 9.76684, 0.29 ) }
    dend_51 { pt3dadd( 13.759, 21.502, 9.48976, 1.03 ) }
    dend_51 { pt3dadd( 13.7436, 20.7066, 9.21861, 1.99 ) }
    dend_51 { pt3dadd( 13.7263, 20.1285, 9.04417, 2.29 ) }
    dend_51 { pt3dadd( 13.6631, 18.2156, 8.63174, 0.44 ) }
    dend_51 { pt3dadd( 13.664, 16.8571, 8.40982, 0.29 ) }
    dend_51 { pt3dadd( 13.6856, 16.124, 8.32393, 0.44 ) }
    dend_51 { pt3dadd( 13.723, 15.4205, 8.26217, 0.52 ) }
    dend_51 { pt3dadd( 13.8156, 14.1515, 8.21316, 0.22 ) }
    dend_51 { pt3dadd( 13.9116, 13.3048, 8.21658, 0.22 ) }
    dend_51 { pt3dadd( 14.0441, 12.3914, 8.27248, 1.33 ) }
    dend_51 { pt3dadd( 14.1942, 11.5006, 8.35748, 2.29 ) }
    dend_51 { pt3dadd( 14.3095, 10.7649, 8.44784, 2.29 ) }
    dend_51 { pt3dadd( 14.6341, 8.71886, 8.74501, 0.15 ) }
    dend_51 { pt3dadd( 14.7574, 7.85143, 8.88259, 0.15 ) }
    dend_51 { pt3dadd( 14.8519, 7.15193, 8.98795, 0.15 ) }
    dend_51 { pt3dadd( 14.9336, 6.48083, 9.09095, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_51 { pt3dadd( 15.0527, 5.4253, 9.22759, 1.33 ) }
    dend_51 { pt3dadd( 15.1325, 4.60195, 9.26623, 1.03 ) }
    dend_51 { pt3dadd( 15.2465, 2.84553, 9.15984, 0.22 ) }
    dend_51 { pt3dadd( 15.2848, 2.00012, 9.04057, 0.22 ) }
    dend_51 { pt3dadd( 15.3091, 1.17467, 8.85945, 0.66 ) }
    dend_51 { pt3dadd( 15.3425, -0.0158721, 8.543, 0.22 ) }
    dend_51 { pt3dadd( 15.3398, -1.5476, 8.07115, 0.29 ) }
    dend_51 { pt3dadd( 15.3231, -2.52165, 7.77573, 0.59 ) }
    dend_51 { pt3dadd( 15.3098, -3.26382, 7.52383, 1.33 ) }
    dend_51 { pt3dadd( 15.2726, -4.32865, 7.14297, 2.14 ) }
    dend_51 { pt3dadd( 15.1929, -6.15766, 6.47016, 0.22 ) }
    dend_51 { pt3dadd( 15.1249, -7.41038, 6.04891, 0.22 ) }
    dend_51 { pt3dadd( 15.0681, -8.47203, 5.82325, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 13/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -0.720705, 36.0896, 23.2434, 0.52 ) }
    dend_40 { pt3dadd( -0.513041, 36.6652, 24.2186, 0.52 ) }
    dend_40 { pt3dadd( -0.231145, 37.0204, 25.0786, 0.52 ) }
    dend_40 { pt3dadd( 0.219094, 37.318, 26.1552, 0.52 ) }
    dend_40 { pt3dadd( 0.489662, 37.4041, 26.7157, 0.52 ) }
    dend_40 { pt3dadd( 1.17568, 37.5507, 28.0064, 0.81 ) }
    dend_40 { pt3dadd( 1.71066, 37.668, 28.9438, 1.18 ) }
    dend_40 { pt3dadd( 2.5102, 37.7471, 30.0885, 0.96 ) }
    dend_40 { pt3dadd( 3.12062, 37.7697, 30.8753, 1.25 ) }
    dend_40 { pt3dadd( 3.81056, 37.7543, 31.6993, 0.37 ) }
    dend_40 { pt3dadd( 4.23936, 37.7603, 32.1617, 0.37 ) }
    dend_40 { pt3dadd( 4.77076, 37.7739, 32.7034, 0.15 ) }
    dend_40 { pt3dadd( 5.43208, 37.831, 33.3282, 0.15 ) }
    dend_40 { pt3dadd( 6.17582, 38.0176, 33.975, 1.18 ) }
    dend_40 { pt3dadd( 6.61101, 38.1912, 34.3568, 2.43 ) }
    dend_40 { pt3dadd( 7.36594, 38.5369, 34.983, 2.65 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 29/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -9.41967, 87.8332, 7.05436, 0.59 ) }
    dend_37 { pt3dadd( -9.65951, 88.6457, 7.02069, 0.59 ) }
    dend_37 { pt3dadd( -9.91637, 89.359, 6.99101, 0.29 ) }
    dend_37 { pt3dadd( -10.1896, 90.0279, 6.96894, 0.96 ) }
    dend_37 { pt3dadd( -10.4112, 90.5362, 6.9618, 0.07 ) }
    dend_37 { pt3dadd( -10.6738, 91.0813, 6.97002, 0.07 ) }
    dend_37 { pt3dadd( -10.8275, 91.3901, 6.97947, 0.22 ) }
    dend_37 { pt3dadd( -11.0487, 91.7628, 7.01241, 0.88 ) }
    dend_37 { pt3dadd( -11.176, 91.984, 7.03992, 1.47 ) }
    dend_37 { pt3dadd( -11.5106, 92.6134, 7.08347, 0.07 ) }
    dend_37 { pt3dadd( -11.6995, 93.0333, 7.0706, 0.07 ) }
    dend_37 { pt3dadd( -11.7753, 93.2557, 7.05561, 0.22 ) }
    dend_37 { pt3dadd( -11.8268, 93.4248, 7.04565, 0.22 ) }
    dend_37 { pt3dadd( -11.9541, 93.8927, 7.02565, 0.07 ) }
    dend_37 { pt3dadd( -12.0457, 94.3176, 7.00025, 0.07 ) }
    dend_37 { pt3dadd( -12.0968, 94.5963, 6.97043, 0.66 ) }
    dend_37 { pt3dadd( -12.1572, 94.9097, 6.92211, 0.66 ) }
    dend_37 { pt3dadd( -12.2696, 95.4158, 6.83073, 0.15 ) }
    dend_37 { pt3dadd( -12.3599, 95.8092, 6.75183, 1.03 ) }
    dend_37 { pt3dadd( -12.4547, 96.2223, 6.66262, 1.77 ) }
    dend_37 { pt3dadd( -12.6086, 96.9965, 6.48993, 0.15 ) }
    dend_37 { pt3dadd( -12.7048, 97.5178, 6.37839, 0.22 ) }
    dend_37 { pt3dadd( -12.7463, 97.7305, 6.33116, 0.66 ) }
    dend_37 { pt3dadd( -12.7999, 97.9786, 6.28791, 0.37 ) }
    dend_37 { pt3dadd( -12.9099, 98.4075, 6.25384, 1.11 ) }
    dend_37 { pt3dadd( -13.0154, 98.7436, 6.26565, 1.11 ) }
    dend_37 { pt3dadd( -13.2944, 99.5313, 6.38855, 0.22 ) }
    dend_37 { pt3dadd( -13.4867, 99.992, 6.49893, 1.03 ) }
    dend_37 { pt3dadd( -13.7432, 100.523, 6.6513, 1.62 ) }
    dend_37 { pt3dadd( -14.0077, 101.011, 6.81582, 1.99 ) }
    dend_37 { pt3dadd( -14.2848, 101.462, 6.95073, 0.52 ) }
    dend_37 { pt3dadd( -14.6907, 102.054, 7.08876, 0.22 ) }
    dend_37 { pt3dadd( -15.1248, 102.64, 7.16508, 0.22 ) }
    dend_37 { pt3dadd( -15.3547, 102.932, 7.16451, 0.88 ) }
    dend_37 { pt3dadd( -15.7203, 103.361, 7.06896, 1.55 ) }
    dend_37 { pt3dadd( -16.5073, 104.201, 6.75025, 0.15 ) }
    dend_37 { pt3dadd( -16.8324, 104.544, 6.59142, 0.22 ) }
    dend_37 { pt3dadd( -17.1116, 104.851, 6.43934, 0.07 ) }
    dend_37 { pt3dadd( -17.5454, 105.36, 6.18446, 1.33 ) }
    dend_37 { pt3dadd( -18.1565, 106.13, 5.86197, 0.07 ) }
    dend_37 { pt3dadd( -18.3497, 106.38, 5.76055, 0.37 ) }
    dend_37 { pt3dadd( -18.6969, 106.895, 5.65105, 0.07 ) }
    dend_37 { pt3dadd( -19.0418, 107.485, 5.61974, 0.22 ) }
    dend_37 { pt3dadd( -19.3044, 108.043, 5.71354, 1.55 ) }
    dend_37 { pt3dadd( -19.4226, 108.512, 5.93884, 1.55 ) }
    dend_37 { pt3dadd( -21.2968, 113.418, 4.89336, 1.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 75/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -9.41967, 87.8332, 7.05436, 0.22 ) }
    dend_36 { pt3dadd( -10.381, 89.022, 7.44171, 0.22 ) }
    dend_36 { pt3dadd( -10.8283, 89.5969, 7.60799, 0.07 ) }
    dend_36 { pt3dadd( -11.3264, 90.2649, 7.77388, 1.11 ) }
    dend_36 { pt3dadd( -12.0724, 91.3618, 7.99394, 0.07 ) }
    dend_36 { pt3dadd( -12.3911, 91.8851, 8.07573, 0.07 ) }
    dend_36 { pt3dadd( -12.5471, 92.1652, 8.11189, 0.52 ) }
    dend_36 { pt3dadd( -12.7842, 92.7164, 8.13487, 1.47 ) }
    dend_36 { pt3dadd( -13.0422, 93.4225, 8.14231, 0.07 ) }
    dend_36 { pt3dadd( -13.2439, 94.0539, 8.13364, 0.15 ) }
    dend_36 { pt3dadd( -13.3972, 94.6731, 8.11717, 0.88 ) }
    dend_36 { pt3dadd( -13.5174, 95.2764, 8.10515, 1.4 ) }
    dend_36 { pt3dadd( -13.684, 96.2267, 8.07697, 0.07 ) }
    dend_36 { pt3dadd( -13.7549, 96.6799, 8.06586, 0.74 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 89/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -39.6239, -97.4123, -42.593, 0.15 ) }
    dend_30 { pt3dadd( -42.0421, -107.594, -44.8652, 0.15 ) }
    dend_30 { pt3dadd( -44.4568, -117.962, -45.8575, 0.15 ) }
    dend_30 { pt3dadd( -45.9001, -128.213, -48.6377, 0.15 ) }
    dend_30 { pt3dadd( -45.0368, -138.642, -51.0088, 0.15 ) }
    dend_30 { pt3dadd( -42.9719, -148.779, -53.9574, 0.15 ) }
    dend_30 { pt3dadd( -40.7277, -158.976, -56.5358, 0.15 ) }
    dend_30 { pt3dadd( -37.6194, -168.813, -59.6644, 0.15 ) }
    dend_30 { pt3dadd( -34.7138, -179.021, -61.4093, 0.15 ) }
    dend_30 { pt3dadd( -30.4366, -188.664, -63.6946, 0.15 ) }
    dend_30 { pt3dadd( -25.7269, -198.159, -65.773, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_30 { pt3dadd( -21.6776, -208.133, -65.6108, 0.15 ) }
    dend_30 { pt3dadd( -18.1606, -218.287, -65.2389, 0.15 ) }
    dend_30 { pt3dadd( -14.6121, -228.424, -65.882, 0.15 ) }
    dend_30 { pt3dadd( -11.8633, -238.654, -67.734, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 4/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -39.6239, -97.4123, -42.593, 1.03 ) }
    dend_29 { pt3dadd( -42.0894, -107.847, -44.8392, 0.15 ) }
    dend_29 { pt3dadd( -46.2961, -117.9, -45.8607, 0.15 ) }
    dend_29 { pt3dadd( -51.6051, -127.43, -46.896, 0.15 ) }
    dend_29 { pt3dadd( -58.8663, -135.677, -46.8706, 0.15 ) }
    // Section: dend_24, id: dend_24, parent: dend_20 (entry count 9/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -5.82623, -108.369, 21.5213, 0.22 ) }
    dend_24 { pt3dadd( -5.33914, -109.837, 21.4156, 0.22 ) }
    dend_24 { pt3dadd( -5.07498, -110.758, 21.4002, 0.22 ) }
    dend_24 { pt3dadd( -4.93762, -111.436, 21.4272, 0.88 ) }
    dend_24 { pt3dadd( -4.79909, -112.42, 21.5028, 1.25 ) }
    dend_24 { pt3dadd( -4.62981, -113.928, 21.6595, 0.15 ) }
    dend_24 { pt3dadd( -4.54032, -115.064, 21.7954, 0.15 ) }
    dend_24 { pt3dadd( -4.52407, -115.978, 21.9531, 0.66 ) }
    dend_24 { pt3dadd( -4.57001, -117.328, 22.213, 0.15 ) }
    dend_24 { pt3dadd( -4.60796, -117.939, 22.3366, 0.44 ) }
    dend_24 { pt3dadd( -4.6443, -118.383, 22.4182, 0.44 ) }
    dend_24 { pt3dadd( -4.72617, -119.623, 22.5942, 0.15 ) }
    dend_24 { pt3dadd( -4.77042, -120.524, 22.6893, 0.15 ) }
    dend_24 { pt3dadd( -4.78208, -121.217, 22.7382, 1.18 ) }
    dend_24 { pt3dadd( -4.76369, -121.913, 22.7581, 2.14 ) }
    dend_24 { pt3dadd( -4.72769, -122.95, 22.7656, 1.03 ) }
    dend_24 { pt3dadd( -4.70497, -123.951, 22.7597, 0.15 ) }
    dend_24 { pt3dadd( -4.67759, -124.738, 22.7392, 0.15 ) }
    dend_24 { pt3dadd( -4.6653, -125.362, 22.7177, 0.37 ) }
    dend_24 { pt3dadd( -4.66971, -126.138, 22.6792, 0.22 ) }
    dend_24 { pt3dadd( -4.69518, -126.551, 22.6498, 0.66 ) }
    dend_24 { pt3dadd( -4.75219, -127.102, 22.5976, 0.81 ) }
    dend_24 { pt3dadd( -4.89451, -128.27, 22.4449, 0.22 ) }
    dend_24 { pt3dadd( -4.96553, -128.837, 22.3637, 1.03 ) }
    dend_24 { pt3dadd( -5.12185, -129.851, 22.2193, 1.84 ) }
    dend_24 { pt3dadd( -5.37902, -131.318, 22.0191, 0.22 ) }
    dend_24 { pt3dadd( -5.46286, -131.797, 21.9603, 0.22 ) }
    dend_24 { pt3dadd( -5.55389, -132.357, 21.903, 0.22 ) }
    dend_24 { pt3dadd( -5.63196, -132.906, 21.8601, 0.22 ) }
    dend_24 { pt3dadd( -5.69266, -133.718, 21.7976, 0.96 ) }
    dend_24 { pt3dadd( -5.69961, -135.428, 21.6633, 0.15 ) }
    dend_24 { pt3dadd( -5.65869, -136.037, 21.6113, 0.15 ) }
    dend_24 { pt3dadd( -5.59642, -136.685, 21.5625, 0.96 ) }
    dend_24 { pt3dadd( -5.5137, -137.433, 21.5185, 1.92 ) }
    dend_24 { pt3dadd( -5.28803, -139.109, 21.4304, 0.22 ) }
    dend_24 { pt3dadd( -5.19095, -139.702, 21.4018, 0.22 ) }
    dend_24 { pt3dadd( -5.09397, -140.228, 21.3677, 0.15 ) }
    dend_24 { pt3dadd( -4.9189, -141.171, 21.299, 0.15 ) }
    dend_24 { pt3dadd( -4.82531, -141.728, 21.2651, 0.81 ) }
    dend_24 { pt3dadd( -4.74204, -142.292, 21.2618, 1.62 ) }
    dend_24 { pt3dadd( -4.60021, -143.414, 21.3264, 0.15 ) }
    dend_24 { pt3dadd( -4.49668, -144.288, 21.3918, 0.15 ) }
    dend_24 { pt3dadd( -4.42897, -144.774, 21.4213, 0.15 ) }
    dend_24 { pt3dadd( -4.30855, -145.54, 21.4575, 0.88 ) }
    dend_24 { pt3dadd( -4.14805, -146.682, 21.5185, 0.15 ) }
    dend_24 { pt3dadd( -4.07744, -147.266, 21.5499, 0.96 ) }
    dend_24 { pt3dadd( -3.97805, -148.325, 21.6117, 2.21 ) }
    dend_24 { pt3dadd( -3.8274, -150.306, 21.7266, 0.15 ) }
    dend_24 { pt3dadd( -3.77065, -151.134, 21.7604, 0.96 ) }
    dend_24 { pt3dadd( -3.62211, -152.815, 21.8113, 0.22 ) }
    dend_24 { pt3dadd( -3.53377, -153.623, 21.8214, 0.88 ) }
    dend_24 { pt3dadd( -3.47954, -154.056, 21.8293, 0.88 ) }
    dend_24 { pt3dadd( -3.27518, -155.437, 21.8693, 0.07 ) }
    dend_24 { pt3dadd( -3.22074, -155.73, 21.8786, 0.29 ) }
    dend_24 { pt3dadd( -3.07639, -156.361, 21.9028, 0.29 ) }
    dend_24 { pt3dadd( -2.91709, -156.978, 21.9291, 0.15 ) }
    dend_24 { pt3dadd( -2.80043, -157.471, 21.9722, 0.15 ) }
    dend_24 { pt3dadd( -2.63653, -158.277, 22.0583, 0.15 ) }
    dend_24 { pt3dadd( -2.55049, -158.836, 22.1181, 0.74 ) }
    dend_24 { pt3dadd( -2.45062, -159.625, 22.2135, 1.77 ) }
    dend_24 { pt3dadd( -2.40037, -160.122, 22.2877, 1.33 ) }
    dend_24 { pt3dadd( -2.28434, -161.35, 22.5096, 0.07 ) }
    dend_24 { pt3dadd( -2.25219, -161.756, 22.5937, 0.37 ) }
    dend_24 { pt3dadd( -2.15921, -163.013, 22.8912, 0.07 ) }
    dend_24 { pt3dadd( -2.10725, -163.683, 23.0524, 0.59 ) }
    dend_24 { pt3dadd( -2.00572, -164.773, 23.2954, 0.15 ) }
    dend_24 { pt3dadd( -1.94919, -165.337, 23.4068, 0.22 ) }
    dend_24 { pt3dadd( -1.86107, -166.198, 23.5593, 1.33 ) }
    dend_24 { pt3dadd( -1.74069, -167.461, 23.7784, 0.07 ) }
    dend_24 { pt3dadd( -1.70776, -167.947, 23.8652, 0.88 ) }
    dend_24 { pt3dadd( -1.60322, -169.357, 24.0796, 0.15 ) }
    dend_24 { pt3dadd( -1.5472, -170.005, 24.1614, 0.15 ) }
    dend_24 { pt3dadd( -1.49033, -170.567, 24.2254, 0.15 ) }
    dend_24 { pt3dadd( -1.41311, -171.19, 24.2963, 0.74 ) }
    dend_24 { pt3dadd( -1.30765, -172.079, 24.4111, 2.14 ) }
    dend_24 { pt3dadd( -1.14647, -173.681, 24.6605, 0.15 ) }
    dend_24 { pt3dadd( -1.12987, -174.177, 24.7546, 0.44 ) }
    dend_24 { pt3dadd( -1.16062, -175.435, 25.0257, 0.07 ) }
    dend_24 { pt3dadd( -1.20614, -175.944, 25.1538, 0.15 ) }
    dend_24 { pt3dadd( -1.29656, -176.52, 25.3239, 0.07 ) }
    dend_24 { pt3dadd( -1.4523, -177.208, 25.5619, 1.11 ) }
    dend_24 { pt3dadd( -1.93179, -178.791, 26.1787, 0.15 ) }
    dend_24 { pt3dadd( -2.15396, -179.46, 26.4518, 1.03 ) }
    dend_24 { pt3dadd( -2.58811, -180.655, 26.948, 0.15 ) }
    dend_24 { pt3dadd( -2.77656, -181.197, 27.1462, 0.44 ) }
    dend_24 { pt3dadd( -3.06841, -182.191, 27.4369, 0.15 ) }
    dend_24 { pt3dadd( -3.25198, -182.982, 27.6139, 1.62 ) }
    dend_24 { pt3dadd( -3.31858, -183.398, 27.672, 1.77 ) }
    dend_24 { pt3dadd( -3.38585, -184.033, 27.7065, 1.03 ) }
    dend_24 { pt3dadd( -3.48971, -185.656, 27.6792, 0.15 ) }
    dend_24 { pt3dadd( -3.54307, -187.206, 27.586, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_24 { pt3dadd( -3.5428, -187.721, 27.5395, 0.88 ) }
    dend_24 { pt3dadd( -3.51087, -188.416, 27.4793, 1.18 ) }
    dend_24 { pt3dadd( -3.35547, -190.231, 27.3175, 0.07 ) }
    dend_24 { pt3dadd( -3.31275, -190.597, 27.284, 0.15 ) }
    dend_24 { pt3dadd( -3.14976, -191.748, 27.1928, 0.07 ) }
    dend_24 { pt3dadd( -2.95428, -193.005, 27.1059, 0.15 ) }
    dend_24 { pt3dadd( -2.79469, -194.085, 27.0499, 1.33 ) }
    dend_24 { pt3dadd( -2.54736, -195.846, 26.9848, 0.15 ) }
    dend_24 { pt3dadd( -2.45251, -196.573, 26.9774, 0.22 ) }
    dend_24 { pt3dadd( -2.35898, -197.741, 26.9853, 0.07 ) }
    dend_24 { pt3dadd( -2.35045, -198.099, 26.9935, 0.22 ) }
    dend_24 { pt3dadd( -2.41928, -199.785, 27.0486, 0.07 ) }
    dend_24 { pt3dadd( -2.4464, -200.114, 27.0618, 0.81 ) }
    dend_24 { pt3dadd( -2.58528, -201.299, 27.1274, 1.92 ) }
    dend_24 { pt3dadd( -2.80014, -202.738, 27.1662, 0.15 ) }
    dend_24 { pt3dadd( -2.93886, -203.489, 27.1523, 0.88 ) }
    dend_24 { pt3dadd( -3.27367, -205.128, 27.0548, 0.15 ) }
    dend_24 { pt3dadd( -3.37363, -205.564, 27.0102, 0.44 ) }
    dend_24 { pt3dadd( -3.69956, -206.918, 26.8416, 0.07 ) }
    dend_24 { pt3dadd( -3.95804, -208.04, 26.6721, 0.07 ) }
    dend_24 { pt3dadd( -4.10763, -208.777, 26.581, 0.15 ) }
    dend_24 { pt3dadd( -4.20834, -209.35, 26.5306, 0.74 ) }
    dend_24 { pt3dadd( -4.28301, -209.873, 26.5129, 0.74 ) }
    dend_24 { pt3dadd( -4.31781, -211.061, 26.5604, 0.07 ) }
    dend_24 { pt3dadd( -4.21832, -211.892, 26.645, 0.07 ) }
    dend_24 { pt3dadd( -4.03588, -212.713, 26.7917, 0.07 ) }
    dend_24 { pt3dadd( -3.85167, -213.394, 26.9366, 1.25 ) }
    dend_24 { pt3dadd( -3.69704, -213.942, 27.0591, 1.99 ) }
    dend_24 { pt3dadd( -3.19762, -215.812, 27.4618, 0.15 ) }
    dend_24 { pt3dadd( -2.95128, -216.83, 27.6731, 0.96 ) }
    dend_24 { pt3dadd( -2.66324, -218.285, 27.9618, 0.07 ) }
    dend_24 { pt3dadd( -2.48878, -219.423, 28.169, 0.07 ) }
    dend_24 { pt3dadd( -2.41203, -220.252, 28.3067, 0.81 ) }
    dend_24 { pt3dadd( -2.3414, -222.445, 28.6142, 0.15 ) }
    dend_24 { pt3dadd( -2.36521, -222.994, 28.6805, 0.29 ) }
    dend_24 { pt3dadd( -2.46617, -224.062, 28.7851, 0.07 ) }
    dend_24 { pt3dadd( -2.5812, -224.954, 28.8391, 1.47 ) }
    dend_24 { pt3dadd( -2.88842, -226.948, 28.915, 0.07 ) }
    dend_24 { pt3dadd( -3.02654, -227.814, 28.9599, 0.07 ) }
    dend_24 { pt3dadd( -3.15262, -228.45, 28.9961, 1.11 ) }
    dend_24 { pt3dadd( -3.53723, -230.087, 29.0742, 0.07 ) }
    dend_24 { pt3dadd( -3.72726, -230.777, 29.097, 0.74 ) }
    dend_24 { pt3dadd( -3.92899, -231.401, 29.1055, 1.92 ) }
    dend_24 { pt3dadd( -4.55812, -233.098, 29.113, 0.15 ) }
    dend_24 { pt3dadd( -5.07011, -234.396, 29.1151, 0.22 ) }
    dend_24 { pt3dadd( -5.66382, -235.892, 29.1203, 0.22 ) }
    dend_24 { pt3dadd( -5.93769, -236.546, 29.1213, 0.81 ) }
    dend_24 { pt3dadd( -6.29189, -237.391, 29.1276, 1.84 ) }
    dend_24 { pt3dadd( -6.98143, -239.218, 29.1875, 0.07 ) }
    dend_24 { pt3dadd( -7.16461, -239.76, 29.2155, 0.29 ) }
    dend_24 { pt3dadd( -7.47326, -241.145, 29.4084, 0.07 ) }
    dend_24 { pt3dadd( -7.62697, -242.033, 29.5777, 0.07 ) }
    dend_24 { pt3dadd( -7.75879, -243.045, 29.8078, 1.55 ) }
    dend_24 { pt3dadd( -7.86713, -244.61, 30.2241, 0.07 ) }
    dend_24 { pt3dadd( -7.87154, -245.172, 30.391, 0.07 ) }
    dend_24 { pt3dadd( -7.81201, -246.65, 30.8452, 1.47 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 56/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -5.82623, -108.369, 21.5213, 0.22 ) }
    dend_21 { pt3dadd( -6.10258, -109.258, 22.3015, 0.22 ) }
    dend_21 { pt3dadd( -6.30907, -110.123, 22.9265, 0.44 ) }
    dend_21 { pt3dadd( -6.38745, -110.539, 23.1877, 0.15 ) }
    dend_21 { pt3dadd( -6.44219, -110.887, 23.3962, 0.15 ) }
    dend_21 { pt3dadd( -6.47071, -111.048, 23.4965, 0.37 ) }
    dend_21 { pt3dadd( -6.57578, -111.512, 23.8031, 0.44 ) }
    dend_21 { pt3dadd( -6.68871, -111.903, 24.0685, 0.15 ) }
    dend_21 { pt3dadd( -6.73546, -112.061, 24.1972, 0.22 ) }
    dend_21 { pt3dadd( -6.78934, -112.322, 24.4532, 0.22 ) }
    dend_21 { pt3dadd( -6.83994, -112.661, 24.8282, 0.22 ) }
    dend_21 { pt3dadd( -6.86745, -112.972, 25.1888, 0.81 ) }
    dend_21 { pt3dadd( -6.88531, -113.542, 25.8401, 0.22 ) }
    dend_21 { pt3dadd( -6.87182, -114.203, 26.5555, 0.96 ) }
    dend_21 { pt3dadd( -6.84213, -114.863, 27.2176, 2.21 ) }
    dend_21 { pt3dadd( -6.75596, -116.178, 28.4124, 0.22 ) }
    dend_21 { pt3dadd( -6.69639, -116.756, 28.8979, 0.22 ) }
    dend_21 { pt3dadd( -6.64627, -117.16, 29.21, 0.22 ) }
    dend_21 { pt3dadd( -6.6108, -117.471, 29.4261, 0.22 ) }
    dend_21 { pt3dadd( -6.59232, -117.955, 29.7355, 0.22 ) }
    dend_21 { pt3dadd( -6.61183, -118.326, 29.9806, 0.22 ) }
    dend_21 { pt3dadd( -6.66172, -118.686, 30.2412, 0.88 ) }
    dend_21 { pt3dadd( -6.74814, -119.119, 30.6096, 1.4 ) }
    dend_21 { pt3dadd( -6.88761, -119.684, 31.202, 2.14 ) }
    dend_21 { pt3dadd( -7.13163, -120.587, 32.3022, 0.52 ) }
    dend_21 { pt3dadd( -7.3063, -121.196, 33.1375, 0.22 ) }
    dend_21 { pt3dadd( -7.40706, -121.518, 33.6097, 0.22 ) }
    dend_21 { pt3dadd( -7.55589, -121.928, 34.2518, 1.11 ) }
    dend_21 { pt3dadd( -7.7988, -122.505, 35.2914, 1.99 ) }
    dend_21 { pt3dadd( -7.92753, -122.758, 35.8392, 1.99 ) }
    dend_21 { pt3dadd( -7.96695, -122.825, 36.0355, 1.99 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 87/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -27.7218, -99.46, 13.6336, 0.22 ) }
    dend_19 { pt3dadd( -29.1018, -100.617, 14.0015, 0.22 ) }
    dend_19 { pt3dadd( -29.838, -101.27, 14.2002, 0.22 ) }
    dend_19 { pt3dadd( -30.4823, -101.831, 14.3695, 1.33 ) }
    dend_19 { pt3dadd( -31.6703, -102.86, 14.6727, 0.15 ) }
    dend_19 { pt3dadd( -32.0969, -103.24, 14.779, 0.15 ) }
    dend_19 { pt3dadd( -32.4062, -103.526, 14.8547, 0.37 ) }
    dend_19 { pt3dadd( -32.8885, -104.049, 14.9982, 0.37 ) }
    dend_19 { pt3dadd( -33.5902, -104.899, 15.1935, 0.22 ) }
    dend_19 { pt3dadd( -33.9103, -105.295, 15.2665, 0.15 ) }
    dend_19 { pt3dadd( -34.1521, -105.597, 15.3082, 0.15 ) }
    dend_19 { pt3dadd( -34.3216, -105.826, 15.3458, 0.15 ) }
    dend_19 { pt3dadd( -34.7075, -106.38, 15.4403, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_19 { pt3dadd( -35.0892, -106.977, 15.5393, 0.74 ) }
    dend_19 { pt3dadd( -35.7074, -107.964, 15.6994, 0.15 ) }
    dend_19 { pt3dadd( -36.1499, -108.552, 15.7639, 0.15 ) }
    dend_19 { pt3dadd( -36.842, -109.342, 15.8202, 0.15 ) }
    dend_19 { pt3dadd( -37.1188, -109.621, 15.8199, 0.15 ) }
    dend_19 { pt3dadd( -37.7574, -110.206, 15.7749, 1.33 ) }
    dend_19 { pt3dadd( -38.3544, -110.715, 15.7535, 2.14 ) }
    dend_19 { pt3dadd( -39.9461, -111.943, 15.7773, 0.15 ) }
    dend_19 { pt3dadd( -40.7333, -112.48, 15.8357, 1.25 ) }
    dend_19 { pt3dadd( -41.9008, -113.208, 15.9635, 0.07 ) }
    dend_19 { pt3dadd( -42.3444, -113.486, 16.0361, 0.22 ) }
    dend_19 { pt3dadd( -43.7212, -114.34, 16.3227, 0.22 ) }
    dend_19 { pt3dadd( -44.4019, -114.751, 16.5032, 1.25 ) }
    dend_19 { pt3dadd( -44.8297, -115.007, 16.6464, 1.25 ) }
    dend_19 { pt3dadd( -46.2222, -115.936, 17.0439, 0.07 ) }
    dend_19 { pt3dadd( -47.168, -116.654, 17.2544, 0.07 ) }
    dend_19 { pt3dadd( -47.8326, -117.244, 17.3036, 0.07 ) }
    dend_19 { pt3dadd( -48.447, -117.863, 17.1945, 0.07 ) }
    dend_19 { pt3dadd( -48.7737, -118.225, 17.0938, 1.18 ) }
    dend_19 { pt3dadd( -49.9229, -119.592, 16.6114, 0.07 ) }
    dend_19 { pt3dadd( -50.1629, -119.9, 16.4883, 0.88 ) }
    dend_19 { pt3dadd( -50.7872, -120.758, 16.1288, 1.92 ) }
    dend_19 { pt3dadd( -51.8448, -122.268, 15.4987, 0.15 ) }
    dend_19 { pt3dadd( -52.1726, -122.752, 15.2966, 0.22 ) }
    dend_19 { pt3dadd( -52.7123, -123.506, 14.9955, 0.07 ) }
    dend_19 { pt3dadd( -53.0058, -123.914, 14.8428, 0.07 ) }
    dend_19 { pt3dadd( -53.4312, -124.575, 14.6163, 0.29 ) }
    dend_19 { pt3dadd( -54.189, -125.958, 14.2275, 0.07 ) }
    dend_19 { pt3dadd( -54.7728, -127.204, 13.9732, 0.22 ) }
    dend_19 { pt3dadd( -55.16, -128.076, 13.8344, 1.55 ) }
    dend_19 { pt3dadd( -55.8283, -129.671, 13.71, 0.22 ) }
    dend_19 { pt3dadd( -56.2323, -130.66, 13.7056, 0.07 ) }
    dend_19 { pt3dadd( -56.571, -131.55, 13.7478, 0.07 ) }
    dend_19 { pt3dadd( -56.7668, -132.159, 13.843, 0.07 ) }
    dend_19 { pt3dadd( -56.9401, -132.721, 14.011, 0.15 ) }
    dend_19 { pt3dadd( -57.1881, -133.568, 14.3905, 0.07 ) }
    dend_19 { pt3dadd( -57.3507, -133.945, 14.6971, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 37/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -27.7218, -99.46, 13.6336, 0.29 ) }
    dend_16 { pt3dadd( -29.5755, -99.0281, 13.3428, 0.29 ) }
    dend_16 { pt3dadd( -30.4935, -98.7852, 13.1078, 0.22 ) }
    dend_16 { pt3dadd( -31.0737, -98.6258, 12.916, 0.74 ) }
    dend_16 { pt3dadd( -31.7696, -98.427, 12.6595, 0.96 ) }
    dend_16 { pt3dadd( -32.5929, -98.2, 12.3438, 0.29 ) }
    dend_16 { pt3dadd( -33.4447, -97.9659, 12.0057, 0.15 ) }
    dend_16 { pt3dadd( -34.3658, -97.7063, 11.6014, 0.15 ) }
    dend_16 { pt3dadd( -35.1494, -97.5108, 11.2892, 1.03 ) }
    dend_16 { pt3dadd( -36.1372, -97.2889, 10.933, 0.29 ) }
    dend_16 { pt3dadd( -37.4945, -97.0049, 10.4945, 0.22 ) }
    dend_16 { pt3dadd( -38.244, -96.8626, 10.2818, 1.11 ) }
    dend_16 { pt3dadd( -39.4456, -96.6623, 9.99973, 2.14 ) }
    dend_16 { pt3dadd( -41.7066, -96.314, 9.56139, 0.22 ) }
    dend_16 { pt3dadd( -42.28, -96.2315, 9.46398, 0.81 ) }
    dend_16 { pt3dadd( -43.4287, -96.0793, 9.27572, 1.7 ) }
    dend_16 { pt3dadd( -44.9841, -95.8649, 9.03665, 0.22 ) }
    dend_16 { pt3dadd( -45.6395, -95.7752, 8.92383, 0.88 ) }
    dend_16 { pt3dadd( -46.631, -95.6456, 8.72503, 1.55 ) }
    dend_16 { pt3dadd( -47.3681, -95.5438, 8.55405, 0.59 ) }
    dend_16 { pt3dadd( -48.7561, -95.3592, 8.20703, 0.15 ) }
    dend_16 { pt3dadd( -49.7753, -95.2481, 7.91237, 0.88 ) }
    dend_16 { pt3dadd( -50.7963, -95.1419, 7.56946, 0.15 ) }
    dend_16 { pt3dadd( -51.6102, -95.0401, 7.25796, 0.22 ) }
    dend_16 { pt3dadd( -52.3281, -94.9369, 6.95349, 0.81 ) }
    dend_16 { pt3dadd( -53.3955, -94.786, 6.47634, 1.99 ) }
    dend_16 { pt3dadd( -54.8948, -94.6183, 5.7436, 0.22 ) }
    dend_16 { pt3dadd( -55.6269, -94.5496, 5.3718, 0.22 ) }
    dend_16 { pt3dadd( -56.3692, -94.4715, 4.98372, 0.52 ) }
    dend_16 { pt3dadd( -57.1385, -94.3824, 4.56524, 1.18 ) }
    dend_16 { pt3dadd( -58.3515, -94.2199, 3.89503, 1.99 ) }
    dend_16 { pt3dadd( -59.9096, -93.9839, 2.9877, 0.15 ) }
    dend_16 { pt3dadd( -60.4871, -93.8886, 2.64828, 0.29 ) }
    dend_16 { pt3dadd( -61.4261, -93.7651, 2.08443, 0.07 ) }
    dend_16 { pt3dadd( -62.0644, -93.7062, 1.66019, 0.22 ) }
    dend_16 { pt3dadd( -62.544, -93.6681, 1.27891, 0.22 ) }
    dend_16 { pt3dadd( -62.9594, -93.6584, 0.834944, 0.22 ) }
    dend_16 { pt3dadd( -63.1141, -93.6743, 0.630362, 0.22 ) }
    dend_16 { pt3dadd( -63.475, -93.8179, 0.0211844, 0.22 ) }
    dend_16 { pt3dadd( -63.8225, -94.1303, -0.695051, 0.22 ) }
    dend_16 { pt3dadd( -64.0577, -94.4103, -1.23164, 0.22 ) }
    dend_16 { pt3dadd( -64.6137, -95.1004, -2.39379, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 79/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 52.1199, 23.3733, 59.1789, 0.22 ) }
    dend_9 { pt3dadd( 53.7498, 23.4715, 60.8191, 0.22 ) }
    dend_9 { pt3dadd( 54.1161, 23.464, 61.1843, 0.22 ) }
    dend_9 { pt3dadd( 54.9842, 23.479, 62.006, 0.59 ) }
    dend_9 { pt3dadd( 55.7997, 23.5425, 62.7161, 0.44 ) }
    dend_9 { pt3dadd( 56.2539, 23.5865, 63.0735, 0.44 ) }
    dend_9 { pt3dadd( 56.8466, 23.6389, 63.4619, 0.15 ) }
    dend_9 { pt3dadd( 57.4655, 23.7206, 63.7518, 0.15 ) }
    dend_9 { pt3dadd( 58.2867, 23.7838, 64.0311, 0.15 ) }
    dend_9 { pt3dadd( 58.9608, 23.802, 64.1745, 0.96 ) }
    dend_9 { pt3dadd( 59.8754, 23.8153, 64.3094, 1.55 ) }
    dend_9 { pt3dadd( 61.1528, 23.8926, 64.4944, 0.22 ) }
    dend_9 { pt3dadd( 62.0735, 23.954, 64.6183, 0.37 ) }
    dend_9 { pt3dadd( 62.7945, 23.9739, 64.6984, 0.22 ) }
    dend_9 { pt3dadd( 63.395, 23.9645, 64.7639, 0.22 ) }
    dend_9 { pt3dadd( 64.0747, 23.9521, 64.8447, 0.37 ) }
    dend_9 { pt3dadd( 65.3569, 23.9385, 65.0449, 0.22 ) }
    dend_9 { pt3dadd( 66.0675, 23.9484, 65.2015, 0.22 ) }
    dend_9 { pt3dadd( 66.9927, 24.0011, 65.4594, 0.22 ) }
    dend_9 { pt3dadd( 67.5864, 24.0522, 65.6495, 0.96 ) }
    dend_9 { pt3dadd( 68.597, 24.1516, 66.0167, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_9 { pt3dadd( 70.2535, 24.2861, 66.6698, 0.22 ) }
    dend_9 { pt3dadd( 71.2944, 24.3213, 67.114, 0.15 ) }
    dend_9 { pt3dadd( 72.3049, 24.3448, 67.6022, 0.15 ) }
    dend_9 { pt3dadd( 72.6395, 24.347, 67.7793, 0.15 ) }
    dend_9 { pt3dadd( 73.1104, 24.3267, 68.0312, 0.15 ) }
    dend_9 { pt3dadd( 73.5643, 24.2886, 68.2397, 0.15 ) }
    dend_9 { pt3dadd( 74.4194, 24.1973, 68.5387, 0.15 ) }
    dend_9 { pt3dadd( 74.9621, 24.0928, 68.6842, 0.81 ) }
    dend_9 { pt3dadd( 75.6096, 23.9163, 68.84, 1.47 ) }
    dend_9 { pt3dadd( 76.0873, 23.775, 68.9542, 1.47 ) }
    dend_9 { pt3dadd( 77.5216, 23.3435, 69.2663, 0.15 ) }
    dend_9 { pt3dadd( 77.8815, 23.2448, 69.357, 0.22 ) }
    dend_9 { pt3dadd( 78.8341, 22.9581, 69.6169, 0.37 ) }
    dend_9 { pt3dadd( 79.7922, 22.628, 69.8938, 1.03 ) }
    dend_9 { pt3dadd( 80.7213, 22.29, 70.2644, 1.77 ) }
    dend_9 { pt3dadd( 81.2139, 22.1129, 70.5256, 1.77 ) }
    dend_9 { pt3dadd( 82.6687, 21.6037, 71.4779, 0.22 ) }
    dend_9 { pt3dadd( 83.208, 21.4606, 71.8734, 0.22 ) }
    dend_9 { pt3dadd( 84.0463, 21.3323, 72.5199, 1.11 ) }
    dend_9 { pt3dadd( 85.7344, 21.1972, 73.8947, 0.22 ) }
    dend_9 { pt3dadd( 86.4262, 21.1519, 74.5088, 0.22 ) }
    dend_9 { pt3dadd( 87.0884, 21.105, 75.1335, 0.66 ) }
    dend_9 { pt3dadd( 88.016, 21.0377, 76.0002, 0.88 ) }
    dend_9 { pt3dadd( 88.6508, 21.0116, 76.5832, 1.7 ) }
    dend_9 { pt3dadd( 89.9892, 21.014, 77.8184, 0.44 ) }
    dend_9 { pt3dadd( 90.9851, 21.0523, 78.6982, 0.74 ) }
    dend_9 { pt3dadd( 91.7221, 21.1218, 79.3529, 1.25 ) }
    dend_9 { pt3dadd( 92.9275, 21.3544, 80.4731, 0.22 ) }
    dend_9 { pt3dadd( 93.3442, 21.4729, 80.8745, 0.22 ) }
    dend_9 { pt3dadd( 94.0496, 21.7636, 81.5828, 0.37 ) }
    dend_9 { pt3dadd( 94.5318, 22.0209, 82.0343, 0.37 ) }
    dend_9 { pt3dadd( 95.3179, 22.4816, 82.6891, 1.47 ) }
    dend_9 { pt3dadd( 96.2839, 23.0361, 83.4398, 0.29 ) }
    dend_9 { pt3dadd( 96.7531, 23.2928, 83.776, 0.29 ) }
    dend_9 { pt3dadd( 97.0135, 23.4249, 83.9594, 0.29 ) }
    dend_9 { pt3dadd( 97.8539, 23.8256, 84.6032, 0.15 ) }
    dend_9 { pt3dadd( 98.377, 24.0875, 85.0909, 0.22 ) }
    dend_9 { pt3dadd( 98.7712, 24.3024, 85.5409, 0.74 ) }
    dend_9 { pt3dadd( 99.2026, 24.5857, 86.1715, 1.25 ) }
    dend_9 { pt3dadd( 99.8725, 25.1439, 87.4112, 0.22 ) }
    dend_9 { pt3dadd( 100.363, 25.6224, 88.4683, 0.96 ) }
    dend_9 { pt3dadd( 100.788, 26.0587, 89.4647, 0.96 ) }
    dend_9 { pt3dadd( 101.143, 26.3668, 90.2757, 0.29 ) }
    dend_9 { pt3dadd( 101.601, 26.6739, 91.2957, 0.29 ) }
    dend_9 { pt3dadd( 102.002, 26.862, 92.1929, 0.29 ) }
    dend_9 { pt3dadd( 102.393, 26.975, 93.0603, 0.29 ) }
    dend_9 { pt3dadd( 102.728, 27.0492, 93.9757, 0.29 ) }
    dend_9 { pt3dadd( 102.932, 27.0795, 94.8436, 0.29 ) }
    dend_9 { pt3dadd( 103.025, 27.0742, 95.7061, 0.29 ) }
    dend_9 { pt3dadd( 103.052, 27.0613, 96.2564, 0.29 ) }
    dend_9 { pt3dadd( 103.068, 27.0582, 96.9909, 0.29 ) }
    dend_9 { pt3dadd( 103.07, 27.09, 98.4048, 0.59 ) }
    dend_9 { pt3dadd( 103.072, 27.1412, 99.4777, 0.59 ) }
    dend_9 { pt3dadd( 103.116, 27.2172, 100.812, 0.59 ) }
    dend_9 { pt3dadd( 103.202, 27.2583, 101.749, 0.59 ) }
    dend_9 { pt3dadd( 103.411, 27.2716, 102.905, 0.59 ) }
    dend_9 { pt3dadd( 103.641, 27.2453, 103.7, 0.59 ) }
    dend_9 { pt3dadd( 103.771, 27.2283, 104.002, 0.59 ) }
    dend_9 { pt3dadd( 104.235, 27.1621, 104.78, 0.59 ) }
    dend_9 { pt3dadd( 104.486, 27.107, 105.085, 0.59 ) }
    dend_9 { pt3dadd( 105.147, 26.9245, 105.696, 0.22 ) }
    dend_9 { pt3dadd( 105.687, 26.7657, 106.064, 0.22 ) }
    dend_9 { pt3dadd( 106.431, 26.604, 106.591, 0.22 ) }
    dend_9 { pt3dadd( 106.957, 26.5478, 107.02, 0.22 ) }
    dend_9 { pt3dadd( 107.776, 26.5656, 107.717, 0.22 ) }
    dend_9 { pt3dadd( 108.351, 26.6542, 108.272, 0.22 ) }
    dend_9 { pt3dadd( 108.948, 26.8179, 108.957, 1.11 ) }
    dend_9 { pt3dadd( 110.016, 27.2203, 110.371, 0.22 ) }
    dend_9 { pt3dadd( 110.591, 27.4698, 111.224, 0.22 ) }
    dend_9 { pt3dadd( 111.259, 27.8033, 112.31, 0.22 ) }
    dend_9 { pt3dadd( 111.777, 28.021, 113.135, 0.22 ) }
    dend_9 { pt3dadd( 112.211, 28.0673, 113.804, 0.22 ) }
    dend_9 { pt3dadd( 112.438, 27.9876, 114.109, 0.22 ) }
    dend_9 { pt3dadd( 112.922, 27.6796, 114.643, 0.59 ) }
    dend_9 { pt3dadd( 113.692, 27.1232, 115.393, 0.59 ) }
    dend_9 { pt3dadd( 114.598, 26.4822, 116.24, 0.15 ) }
    dend_9 { pt3dadd( 115.479, 25.8725, 117.035, 0.66 ) }
    dend_9 { pt3dadd( 116.411, 25.2607, 117.895, 0.15 ) }
    dend_9 { pt3dadd( 117.157, 24.8065, 118.618, 0.66 ) }
    dend_9 { pt3dadd( 117.769, 24.4895, 119.228, 1.03 ) }
    dend_9 { pt3dadd( 118.943, 23.9744, 120.346, 0.22 ) }
    dend_9 { pt3dadd( 119.931, 23.6053, 121.225, 0.15 ) }
    dend_9 { pt3dadd( 120.924, 23.3075, 122.054, 0.66 ) }
    dend_9 { pt3dadd( 121.538, 23.1875, 122.573, 1.25 ) }
    dend_9 { pt3dadd( 122.842, 23.0417, 123.677, 0.22 ) }
    dend_9 { pt3dadd( 123.8, 22.9841, 124.476, 0.15 ) }
    dend_9 { pt3dadd( 124.642, 22.9882, 125.12, 0.37 ) }
    dend_9 { pt3dadd( 125.149, 23.0277, 125.476, 0.59 ) }
    dend_9 { pt3dadd( 126.439, 23.1605, 126.329, 0.15 ) }
    dend_9 { pt3dadd( 127.226, 23.2245, 126.857, 0.88 ) }
    dend_9 { pt3dadd( 128.577, 23.3099, 127.81, 0.22 ) }
    dend_9 { pt3dadd( 129.109, 23.3578, 128.202, 0.96 ) }
    dend_9 { pt3dadd( 129.55, 23.4062, 128.537, 0.66 ) }
    dend_9 { pt3dadd( 130.476, 23.5177, 129.22, 0.15 ) }
    dend_9 { pt3dadd( 131.391, 23.6673, 129.93, 0.81 ) }
    dend_9 { pt3dadd( 131.995, 23.8289, 130.473, 1.25 ) }
    dend_9 { pt3dadd( 132.788, 24.1456, 131.241, 0.15 ) }
    dend_9 { pt3dadd( 133.754, 24.5851, 132.225, 0.15 ) }
    dend_9 { pt3dadd( 134.044, 24.7291, 132.535, 0.29 ) }
    dend_9 { pt3dadd( 134.742, 25.1403, 133.328, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_9 { pt3dadd( 135.075, 25.3573, 133.728, 0.96 ) }
    dend_9 { pt3dadd( 135.702, 25.7205, 134.509, 0.29 ) }
    dend_9 { pt3dadd( 136.557, 26.0936, 135.532, 0.74 ) }
    dend_9 { pt3dadd( 137.408, 26.3995, 136.474, 0.15 ) }
    dend_9 { pt3dadd( 137.988, 26.5872, 137.092, 0.37 ) }
    dend_9 { pt3dadd( 138.338, 26.6993, 137.432, 0.37 ) }
    dend_9 { pt3dadd( 138.947, 26.9144, 138.034, 0.22 ) }
    dend_9 { pt3dadd( 139.633, 27.1827, 138.692, 0.22 ) }
    dend_9 { pt3dadd( 140.206, 27.3763, 139.159, 0.37 ) }
    dend_9 { pt3dadd( 140.885, 27.5868, 139.645, 0.37 ) }
    dend_9 { pt3dadd( 141.652, 27.828, 140.128, 1.33 ) }
    dend_9 { pt3dadd( 143.131, 28.361, 140.969, 0.22 ) }
    dend_9 { pt3dadd( 144.095, 28.7943, 141.493, 1.03 ) }
    dend_9 { pt3dadd( 145.273, 29.4015, 142.097, 0.15 ) }
    dend_9 { pt3dadd( 145.672, 29.6414, 142.292, 0.15 ) }
    dend_9 { pt3dadd( 146.675, 30.3912, 142.772, 0.15 ) }
    dend_9 { pt3dadd( 147.358, 31.0428, 143.14, 1.03 ) }
    dend_9 { pt3dadd( 147.886, 31.7268, 143.466, 0.15 ) }
    dend_9 { pt3dadd( 148.228, 32.2749, 143.722, 0.15 ) }
    dend_9 { pt3dadd( 148.685, 33.1108, 144.174, 0.15 ) }
    dend_9 { pt3dadd( 149.174, 33.9418, 144.752, 0.88 ) }
    dend_9 { pt3dadd( 149.66, 34.7251, 145.412, 0.29 ) }
    dend_9 { pt3dadd( 150.029, 35.2813, 145.941, 0.81 ) }
    dend_9 { pt3dadd( 150.213, 35.5394, 146.198, 0.81 ) }
    dend_9 { pt3dadd( 150.896, 36.6586, 147.238, 0.22 ) }
    dend_9 { pt3dadd( 151.314, 37.5114, 147.963, 0.07 ) }
    dend_9 { pt3dadd( 151.536, 38.2232, 148.488, 0.15 ) }
    dend_9 { pt3dadd( 151.593, 38.6063, 148.734, 0.66 ) }
    dend_9 { pt3dadd( 151.61, 39.3998, 149.193, 1.55 ) }
    dend_9 { pt3dadd( 151.522, 41.4017, 150.247, 0.15 ) }
    dend_9 { pt3dadd( 151.401, 42.3613, 150.662, 0.15 ) }
    dend_9 { pt3dadd( 151.215, 43.2401, 151.018, 0.66 ) }
    dend_9 { pt3dadd( 151.038, 43.8783, 151.287, 0.15 ) }
    dend_9 { pt3dadd( 150.911, 44.2523, 151.452, 0.37 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 34/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 52.1199, 23.3733, 59.1789, 0.29 ) }
    dend_8 { pt3dadd( 51.1668, 24.1517, 61.0519, 0.29 ) }
    dend_8 { pt3dadd( 50.4093, 24.7825, 62.3457, 0.29 ) }
    dend_8 { pt3dadd( 49.605, 25.5014, 63.642, 0.81 ) }
    dend_8 { pt3dadd( 49.1462, 25.8904, 64.3374, 1.4 ) }
    dend_8 { pt3dadd( 48.0023, 26.7592, 65.9717, 0.07 ) }
    dend_8 { pt3dadd( 47.3861, 27.1897, 66.802, 1.03 ) }
    dend_8 { pt3dadd( 46.1566, 27.9391, 68.2304, 0.15 ) }
    dend_8 { pt3dadd( 45.1097, 28.6065, 69.3907, 1.55 ) }
    dend_8 { pt3dadd( 44.134, 29.2864, 70.4997, 0.22 ) }
    dend_8 { pt3dadd( 43.4944, 29.7888, 71.2797, 0.22 ) }
    dend_8 { pt3dadd( 42.8298, 30.3923, 72.1571, 0.81 ) }
    dend_8 { pt3dadd( 42.1577, 31.086, 73.0974, 0.07 ) }
    dend_8 { pt3dadd( 41.6255, 31.7949, 73.9465, 0.59 ) }
    dend_8 { pt3dadd( 41.2609, 32.5366, 74.6536, 0.07 ) }
    dend_8 { pt3dadd( 41.1274, 33.0202, 75.0412, 0.52 ) }
    dend_8 { pt3dadd( 40.9083, 34.6865, 76.2861, 0.07 ) }
    dend_8 { pt3dadd( 40.9087, 35.2488, 76.692, 0.96 ) }
    dend_8 { pt3dadd( 40.9745, 35.7793, 77.081, 0.96 ) }
    dend_8 { pt3dadd( 41.2951, 37.1959, 78.1698, 0.22 ) }
    dend_8 { pt3dadd( 41.6696, 38.1893, 78.9464, 0.22 ) }
    dend_8 { pt3dadd( 42.1329, 39.0319, 79.6511, 0.96 ) }
    dend_8 { pt3dadd( 42.7352, 39.9124, 80.4281, 1.77 ) }
    dend_8 { pt3dadd( 43.6035, 41.0957, 81.5618, 0.22 ) }
    dend_8 { pt3dadd( 44.157, 41.8038, 82.2733, 0.15 ) }
    dend_8 { pt3dadd( 44.6374, 42.4029, 82.8478, 0.15 ) }
    dend_8 { pt3dadd( 44.8801, 42.7274, 83.1502, 0.15 ) }
    dend_8 { pt3dadd( 45.6168, 43.8559, 84.1727, 0.88 ) }
    dend_8 { pt3dadd( 46.2348, 45.1556, 85.3506, 0.22 ) }
    dend_8 { pt3dadd( 46.4735, 45.8808, 86.0166, 0.81 ) }
    dend_8 { pt3dadd( 46.7881, 47.1078, 87.1647, 0.15 ) }
    dend_8 { pt3dadd( 46.9864, 47.9893, 87.9905, 0.66 ) }
    dend_8 { pt3dadd( 47.1849, 48.9629, 88.8959, 1.84 ) }
    dend_8 { pt3dadd( 47.5885, 50.7796, 90.575, 0.15 ) }
    dend_8 { pt3dadd( 47.8053, 51.8163, 91.5039, 0.15 ) }
    dend_8 { pt3dadd( 47.9798, 52.6612, 92.2445, 0.15 ) }
    dend_8 { pt3dadd( 48.1512, 53.3484, 92.8393, 0.66 ) }
    dend_8 { pt3dadd( 48.5733, 54.6689, 93.8715, 0.15 ) }
    dend_8 { pt3dadd( 49.078, 55.9046, 94.7505, 0.15 ) }
    dend_8 { pt3dadd( 49.3756, 56.5314, 95.1485, 0.66 ) }
    dend_8 { pt3dadd( 49.6316, 57.1423, 95.5012, 0.22 ) }
    dend_8 { pt3dadd( 49.9543, 58.1214, 96.0577, 0.22 ) }
    dend_8 { pt3dadd( 50.1066, 58.7038, 96.3784, 0.81 ) }
    dend_8 { pt3dadd( 50.1841, 59.172, 96.6222, 0.81 ) }
    dend_8 { pt3dadd( 50.2198, 60.4754, 97.3126, 0.07 ) }
    dend_8 { pt3dadd( 50.1552, 61.2549, 97.7512, 0.66 ) }
    dend_8 { pt3dadd( 49.8003, 62.8705, 98.7394, 0.15 ) }
    dend_8 { pt3dadd( 49.4395, 63.9394, 99.4268, 1.4 ) }
    dend_8 { pt3dadd( 48.8092, 65.405, 100.442, 0.15 ) }
    dend_8 { pt3dadd( 48.3042, 66.3682, 101.157, 0.15 ) }
    dend_8 { pt3dadd( 47.7881, 67.1628, 101.79, 1.18 ) }
    dend_8 { pt3dadd( 46.7805, 68.345, 102.88, 0.22 ) }
    dend_8 { pt3dadd( 45.8803, 69.145, 103.72, 0.15 ) }
    dend_8 { pt3dadd( 45.311, 69.592, 104.226, 0.15 ) }
    dend_8 { pt3dadd( 44.7388, 70.0213, 104.724, 0.74 ) }
    dend_8 { pt3dadd( 44.0443, 70.5568, 105.31, 1.25 ) }
    dend_8 { pt3dadd( 42.6313, 71.696, 106.515, 0.22 ) }
    dend_8 { pt3dadd( 41.8862, 72.33, 107.176, 1.11 ) }
    dend_8 { pt3dadd( 40.6121, 73.4677, 108.402, 0.22 ) }
    dend_8 { pt3dadd( 39.9196, 74.1356, 109.116, 1.47 ) }
    dend_8 { pt3dadd( 39.2571, 74.8147, 109.826, 0.96 ) }
    dend_8 { pt3dadd( 38.3787, 75.7873, 110.821, 0.22 ) }
    dend_8 { pt3dadd( 37.6303, 76.6832, 111.717, 0.74 ) }
    dend_8 { pt3dadd( 36.7277, 77.7902, 112.867, 0.15 ) }
    dend_8 { pt3dadd( 36.3398, 78.2556, 113.388, 0.15 ) }
    dend_8 { pt3dadd( 35.9297, 78.7631, 113.978, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 0/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 32.7857, 0.991373, 37.3052, 0.15 ) }
    dend_6 { pt3dadd( 34.5503, -0.385778, 40.169, 0.15 ) }
    dend_6 { pt3dadd( 35.1845, -0.771308, 40.8465, 0.22 ) }
    dend_6 { pt3dadd( 35.7086, -1.05062, 41.3196, 0.88 ) }
    dend_6 { pt3dadd( 36.6679, -1.52353, 42.0978, 0.15 ) }
    dend_6 { pt3dadd( 37.3028, -1.81827, 42.5782, 1.18 ) }
    dend_6 { pt3dadd( 38.0088, -2.14042, 43.1023, 2.58 ) }
    dend_6 { pt3dadd( 39.7128, -2.81327, 44.062, 0.29 ) }
    dend_6 { pt3dadd( 40.5007, -3.11427, 44.4904, 0.96 ) }
    dend_6 { pt3dadd( 41.0894, -3.33625, 44.8215, 1.18 ) }
    dend_6 { pt3dadd( 42.7507, -3.93729, 45.8584, 0.07 ) }
    dend_6 { pt3dadd( 43.3615, -4.13592, 46.3025, 0.07 ) }
    dend_6 { pt3dadd( 43.6529, -4.22942, 46.5448, 0.07 ) }
    dend_6 { pt3dadd( 44.1706, -4.4172, 47.0674, 0.74 ) }
    dend_6 { pt3dadd( 44.5795, -4.59623, 47.548, 1.03 ) }
    dend_6 { pt3dadd( 45.4842, -5.0666, 48.7742, 0.15 ) }
    dend_6 { pt3dadd( 46.1974, -5.54172, 49.8909, 1.18 ) }
    dend_6 { pt3dadd( 46.4591, -5.76476, 50.3522, 1.4 ) }
    dend_6 { pt3dadd( 46.9642, -6.3091, 51.3728, 0.15 ) }
    dend_6 { pt3dadd( 47.2852, -6.78415, 52.1302, 0.15 ) }
    dend_6 { pt3dadd( 47.4418, -7.07685, 52.5462, 0.88 ) }
    dend_6 { pt3dadd( 47.6113, -7.45657, 53.0592, 0.29 ) }
    dend_6 { pt3dadd( 47.8904, -8.15406, 54.0101, 0.15 ) }
    dend_6 { pt3dadd( 48.0656, -8.62341, 54.7236, 0.81 ) }
    dend_6 { pt3dadd( 48.2321, -9.11811, 55.5578, 1.62 ) }
    dend_6 { pt3dadd( 48.4582, -10.0728, 57.2642, 0.15 ) }
    dend_6 { pt3dadd( 48.5337, -10.5717, 58.1969, 0.15 ) }
    dend_6 { pt3dadd( 48.566, -11.0167, 59.0323, 0.22 ) }
    dend_6 { pt3dadd( 48.5458, -11.5707, 60.0586, 0.22 ) }
    dend_6 { pt3dadd( 48.5024, -11.9367, 60.7101, 0.22 ) }
    dend_6 { pt3dadd( 48.4601, -12.2824, 61.3432, 1.18 ) }
    dend_6 { pt3dadd( 48.4207, -12.7226, 62.1062, 1.62 ) }
    dend_6 { pt3dadd( 48.5047, -13.5503, 63.4264, 0.22 ) }
    dend_6 { pt3dadd( 48.6665, -13.9609, 64.1095, 0.22 ) }
    dend_6 { pt3dadd( 48.8242, -14.1777, 64.5098, 0.44 ) }
    dend_6 { pt3dadd( 49.3192, -14.6283, 65.4764, 0.15 ) }
    dend_6 { pt3dadd( 49.7276, -14.8959, 66.1381, 1.33 ) }
    dend_6 { pt3dadd( 50.5954, -15.3769, 67.3965, 0.15 ) }
    dend_6 { pt3dadd( 51.5305, -15.847, 68.6202, 0.22 ) }
    dend_6 { pt3dadd( 52.0333, -16.13, 69.2296, 0.22 ) }
    dend_6 { pt3dadd( 52.2933, -16.2917, 69.5302, 0.22 ) }
    dend_6 { pt3dadd( 52.7412, -16.6239, 70.02, 0.74 ) }
    dend_6 { pt3dadd( 53.217, -17.0101, 70.485, 1.25 ) }
    dend_6 { pt3dadd( 53.6236, -17.3505, 70.8029, 1.25 ) }
    dend_6 { pt3dadd( 54.923, -18.5494, 71.6696, 0.22 ) }
    dend_6 { pt3dadd( 55.4894, -19.0892, 72.0565, 0.22 ) }
    dend_6 { pt3dadd( 55.9607, -19.5493, 72.3958, 1.03 ) }
    dend_6 { pt3dadd( 56.5519, -20.1299, 72.8257, 1.84 ) }
    dend_6 { pt3dadd( 58.0562, -21.5954, 73.8947, 0.22 ) }
    dend_6 { pt3dadd( 58.7054, -22.253, 74.347, 1.11 ) }
    dend_6 { pt3dadd( 59.6132, -23.2559, 75.0021, 0.22 ) }
    dend_6 { pt3dadd( 60.1866, -23.9275, 75.4528, 0.15 ) }
    dend_6 { pt3dadd( 60.5945, -24.4064, 75.7988, 0.15 ) }
    dend_6 { pt3dadd( 61.1861, -25.1122, 76.3474, 1.03 ) }
    dend_6 { pt3dadd( 62.0041, -26.1443, 77.1985, 0.22 ) }
    dend_6 { pt3dadd( 62.3937, -26.6137, 77.6614, 0.96 ) }
    dend_6 { pt3dadd( 63.0798, -27.4228, 78.5503, 0.15 ) }
    dend_6 { pt3dadd( 63.5311, -27.9572, 79.2246, 0.15 ) }
    dend_6 { pt3dadd( 63.8448, -28.3556, 79.8041, 0.96 ) }
    dend_6 { pt3dadd( 64.2515, -28.8686, 80.7031, 1.92 ) }
    dend_6 { pt3dadd( 65.2424, -29.9545, 83.095, 0.22 ) }
    dend_6 { pt3dadd( 65.5698, -30.2579, 83.8858, 0.44 ) }
    dend_6 { pt3dadd( 66.0701, -30.7142, 85.1762, 1.18 ) }
    dend_6 { pt3dadd( 66.6386, -31.2543, 86.8367, 0.22 ) }
    dend_6 { pt3dadd( 67.1567, -31.7624, 88.6385, 0.52 ) }
    dend_6 { pt3dadd( 67.5222, -32.1261, 90.2917, 0.81 ) }
    dend_6 { pt3dadd( 67.6829, -32.2926, 91.4459, 0.81 ) }
    dend_6 { pt3dadd( 67.8461, -32.4109, 93.4141, 0.52 ) }
    dend_6 { pt3dadd( 67.834, -32.3565, 94.5049, 0.52 ) }
    dend_6 { pt3dadd( 67.6694, -32.109, 95.5528, 0.52 ) }
    dend_6 { pt3dadd( 67.332, -31.663, 96.4454, 0.52 ) }
    dend_6 { pt3dadd( 66.9528, -31.1514, 97.0697, 1.25 ) }
    dend_6 { pt3dadd( 66.5917, -30.5817, 97.555, 1.25 ) }
    dend_6 { pt3dadd( 66.1886, -29.7607, 98.1054, 0.37 ) }
    dend_6 { pt3dadd( 65.7296, -28.5333, 98.8905, 0.66 ) }
    dend_6 { pt3dadd( 65.5057, -27.6891, 99.4224, 0.37 ) }
    dend_6 { pt3dadd( 65.3964, -26.8189, 100.023, 0.66 ) }
    dend_6 { pt3dadd( 65.4129, -25.8776, 100.839, 0.15 ) }
    dend_6 { pt3dadd( 65.5124, -25.3146, 101.459, 0.15 ) }
    dend_6 { pt3dadd( 65.627, -25.0183, 101.877, 0.15 ) }
    dend_6 { pt3dadd( 65.8612, -24.5795, 102.603, 1.62 ) }
    dend_6 { pt3dadd( 66.3217, -23.7768, 104.036, 0.22 ) }
    dend_6 { pt3dadd( 66.8091, -22.9026, 105.697, 0.88 ) }
    dend_6 { pt3dadd( 67.1647, -22.2152, 107.139, 1.4 ) }
    dend_6 { pt3dadd( 67.435, -21.6197, 108.474, 1.4 ) }
    dend_6 { pt3dadd( 67.7269, -20.8063, 110.341, 0.66 ) }
    dend_6 { pt3dadd( 67.8973, -20.0993, 112.032, 0.29 ) }
    dend_6 { pt3dadd( 67.9322, -19.7744, 112.898, 0.29 ) }
    dend_6 { pt3dadd( 67.9256, -19.4876, 113.774, 0.29 ) }
    dend_6 { pt3dadd( 67.8735, -19.3363, 114.362, 0.29 ) }
    dend_6 { pt3dadd( 67.6238, -19.1321, 115.754, 0.29 ) }
    dend_6 { pt3dadd( 67.3625, -19.1232, 116.727, 0.29 ) }
    dend_6 { pt3dadd( 67.0252, -19.1891, 117.834, 0.29 ) }
    dend_6 { pt3dadd( 66.7544, -19.1903, 118.642, 0.29 ) }
    dend_6 { pt3dadd( 66.5181, -19.1111, 119.219, 0.29 ) }
    dend_6 { pt3dadd( 66.339, -19.0056, 119.586, 0.29 ) }
    dend_6 { pt3dadd( 65.8816, -18.5906, 120.252, 0.88 ) }
    dend_6 { pt3dadd( 65.4007, -18.0199, 120.821, 1.25 ) }
    dend_6 { pt3dadd( 64.9589, -17.4101, 121.322, 0.59 ) }
    dend_6 { pt3dadd( 64.3717, -16.5697, 121.933, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_6 { pt3dadd( 63.9761, -15.9785, 122.34, 1.4 ) }
    dend_6 { pt3dadd( 62.7604, -14.1654, 123.535, 0.15 ) }
    dend_6 { pt3dadd( 62.2856, -13.479, 123.958, 0.74 ) }
    dend_6 { pt3dadd( 61.402, -12.2388, 124.672, 0.22 ) }
    dend_6 { pt3dadd( 60.7812, -11.3835, 125.163, 1.03 ) }
    dend_6 { pt3dadd( 60.3449, -10.7837, 125.519, 0.52 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 6/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 32.7857, 0.991373, 37.3052, 0.15 ) }
    dend_5 { pt3dadd( 31.0027, 0.923953, 38.171, 0.15 ) }
    dend_5 { pt3dadd( 30.2746, 0.876683, 38.5093, 0.07 ) }
    dend_5 { pt3dadd( 29.4002, 0.808273, 38.895, 1.03 ) }
    dend_5 { pt3dadd( 28.1824, 0.699823, 39.3972, 0.07 ) }
    dend_5 { pt3dadd( 26.9752, 0.590896, 39.87, 0.07 ) }
    dend_5 { pt3dadd( 26.2934, 0.533574, 40.1215, 0.66 ) }
    dend_5 { pt3dadd( 24.9082, 0.348156, 40.494, 0.07 ) }
    dend_5 { pt3dadd( 24.1904, 0.225463, 40.6567, 0.07 ) }
    dend_5 { pt3dadd( 23.1464, 0.020674, 40.8633, 0.07 ) }
    dend_5 { pt3dadd( 22.8345, -0.053638, 40.9041, 0.29 ) }
    dend_5 { pt3dadd( 22.2356, -0.226589, 40.9514, 0.81 ) }
    dend_5 { pt3dadd( 20.5783, -0.765106, 41.0148, 0.07 ) }
    dend_5 { pt3dadd( 19.4369, -1.17903, 41.019, 0.07 ) }
    dend_5 { pt3dadd( 18.6468, -1.4937, 40.9918, 0.15 ) }
    dend_5 { pt3dadd( 17.0472, -2.18215, 40.8978, 0.07 ) }
    dend_5 { pt3dadd( 16.0532, -2.64673, 40.8335, 0.07 ) }
    dend_5 { pt3dadd( 15.4785, -2.93785, 40.7976, 0.22 ) }
    dend_5 { pt3dadd( 15.0405, -3.17338, 40.7696, 0.22 ) }
    dend_5 { pt3dadd( 13.7366, -3.87088, 40.668, 0.15 ) }
    dend_5 { pt3dadd( 12.9772, -4.28039, 40.6177, 0.15 ) }
    dend_5 { pt3dadd( 12.0806, -4.78206, 40.5888, 0.07 ) }
    dend_5 { pt3dadd( 11.5969, -5.06424, 40.5761, 0.15 ) }
    dend_5 { pt3dadd( 10.4448, -5.72449, 40.5628, 0.07 ) }
    dend_5 { pt3dadd( 9.78038, -6.08094, 40.5501, 0.59 ) }
    dend_5 { pt3dadd( 8.64077, -6.60664, 40.4833, 0.07 ) }
    dend_5 { pt3dadd( 8.04111, -6.84724, 40.3905, 0.07 ) }
    dend_5 { pt3dadd( 7.60951, -6.99323, 40.2831, 0.22 ) }
    dend_5 { pt3dadd( 6.71973, -7.25085, 40.0185, 0.22 ) }
    dend_5 { pt3dadd( 5.64136, -7.51925, 39.6989, 0.07 ) }
    dend_5 { pt3dadd( 4.36297, -7.79899, 39.341, 0.07 ) }
    dend_5 { pt3dadd( 3.76075, -7.89765, 39.1758, 0.07 ) }
    dend_5 { pt3dadd( 3.03564, -7.95682, 38.9863, 0.07 ) }
    dend_5 { pt3dadd( 1.90556, -7.9334, 38.7288, 0.29 ) }
    dend_5 { pt3dadd( 0.263373, -7.70171, 38.4396, 0.07 ) }
    dend_5 { pt3dadd( -0.432121, -7.4992, 38.3742, 0.29 ) }
    dend_5 { pt3dadd( -1.03347, -7.26102, 38.3692, 0.29 ) }
    dend_5 { pt3dadd( -2.16898, -6.76151, 38.4203, 0.07 ) }
    dend_5 { pt3dadd( -3.23814, -6.22671, 38.4956, 0.07 ) }
    dend_5 { pt3dadd( -3.67327, -5.97851, 38.5209, 0.22 ) }
    dend_5 { pt3dadd( -4.30616, -5.5834, 38.5277, 0.37 ) }
    dend_5 { pt3dadd( -5.16736, -5.08486, 38.4952, 0.29 ) }
    dend_5 { pt3dadd( -6.26269, -4.58395, 38.3225, 0.07 ) }
    dend_5 { pt3dadd( -6.66163, -4.4457, 38.2075, 0.37 ) }
    dend_5 { pt3dadd( -7.24214, -4.25603, 37.9796, 0.59 ) }
    dend_5 { pt3dadd( -8.31744, -3.86384, 37.4333, 0.07 ) }
    dend_5 { pt3dadd( -8.83622, -3.65265, 37.1099, 0.15 ) }
    dend_5 { pt3dadd( -10.0654, -3.09244, 36.2191, 0.07 ) }
    dend_5 { pt3dadd( -10.8502, -2.71551, 35.5966, 0.07 ) }
    dend_5 { pt3dadd( -11.5512, -2.40818, 35.0642, 0.15 ) }
    dend_5 { pt3dadd( -12.5248, -2.0436, 34.4117, 0.07 ) }
    dend_5 { pt3dadd( -13.0658, -1.88224, 34.1218, 0.07 ) }
    dend_5 { pt3dadd( -13.391, -1.79867, 33.9878, 0.29 ) }
    dend_5 { pt3dadd( -13.8029, -1.70321, 33.8751, 0.29 ) }
    dend_5 { pt3dadd( -14.9994, -1.48021, 33.6442, 0.07 ) }
    dend_5 { pt3dadd( -16.1458, -1.29536, 33.4881, 0.07 ) }
    dend_5 { pt3dadd( -17.1808, -1.13818, 33.3786, 0.07 ) }
    dend_5 { pt3dadd( -17.5674, -1.08122, 33.3267, 0.07 ) }
    dend_5 { pt3dadd( -17.7661, -1.0542, 33.2897, 0.15 ) }
    dend_5 { pt3dadd( -18.0782, -1.01227, 33.2014, 0.15 ) }
    dend_5 { pt3dadd( -18.6441, -0.918089, 32.9321, 0.15 ) }
    dend_5 { pt3dadd( -19.3491, -0.762837, 32.4268, 0.15 ) }
    dend_5 { pt3dadd( -20.0393, -0.604617, 31.7821, 0.15 ) }
    dend_5 { pt3dadd( -20.4386, -0.510258, 31.3804, 0.15 ) }
    dend_5 { pt3dadd( -20.8668, -0.408155, 30.9415, 0.15 ) }
    dend_5 { pt3dadd( -21.2897, -0.309217, 30.4972, 0.15 ) }
    dend_5 { pt3dadd( -21.6107, -0.238112, 30.1507, 0.15 ) }
    dend_5 { pt3dadd( -21.9676, -0.138034, 29.7462, 0.15 ) }
    dend_5 { pt3dadd( -22.6251, 0.094268, 28.9328, 0.07 ) }
    dend_5 { pt3dadd( -23.0544, 0.262905, 28.4105, 0.07 ) }
    dend_5 { pt3dadd( -23.6851, 0.499909, 27.7511, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 77/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -39.2141, 48.8747, 43.0258, 0.07 ) }
    dend_62 { pt3dadd( -40.5172, 48.1221, 44.0877, 0.07 ) }
    dend_62 { pt3dadd( -41.2865, 47.5899, 44.8208, 0.88 ) }
    dend_62 { pt3dadd( -42.2246, 46.8301, 45.8439, 0.22 ) }
    dend_62 { pt3dadd( -42.8733, 46.3146, 46.5427, 0.88 ) }
    dend_62 { pt3dadd( -43.7472, 45.6295, 47.4645, 1.84 ) }
    dend_62 { pt3dadd( -45.3976, 44.2973, 49.2018, 0.22 ) }
    dend_62 { pt3dadd( -46.0575, 43.653, 49.9199, 0.22 ) }
    dend_62 { pt3dadd( -46.5816, 43.07, 50.4522, 0.22 ) }
    dend_62 { pt3dadd( -47.4694, 42.0133, 51.269, 0.15 ) }
    dend_62 { pt3dadd( -48.0939, 41.2354, 51.7956, 0.15 ) }
    dend_62 { pt3dadd( -48.5918, 40.6228, 52.1316, 0.29 ) }
    dend_62 { pt3dadd( -49.6416, 39.3519, 52.6553, 1.25 ) }
    dend_62 { pt3dadd( -51.248, 37.4445, 53.3171, 0.07 ) }
    dend_62 { pt3dadd( -51.7892, 36.7963, 53.5164, 0.88 ) }
    dend_62 { pt3dadd( -52.076, 36.4338, 53.6246, 1.18 ) }
    dend_62 { pt3dadd( -53.2119, 35.0416, 54.042, 0.07 ) }
    dend_62 { pt3dadd( -53.785, 34.3696, 54.2622, 0.74 ) }
    dend_62 { pt3dadd( -54.8287, 33.1715, 54.7855, 0.07 ) }
    dend_62 { pt3dadd( -55.2612, 32.6364, 55.0992, 0.29 ) }
    dend_62 { pt3dadd( -55.8124, 31.829, 55.6923, 0.07 ) }
    dend_62 { pt3dadd( -56.1962, 31.1124, 56.3521, 1.03 ) }
    dend_62 { pt3dadd( -56.4002, 30.605, 56.9323, 1.47 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_62 { pt3dadd( -56.7569, 29.453, 58.4389, 0.22 ) }
    dend_62 { pt3dadd( -56.9496, 28.6233, 59.6441, 0.22 ) }
    dend_62 { pt3dadd( -57.1334, 27.8417, 60.8863, 0.22 ) }
    dend_62 { pt3dadd( -57.3237, 27.2715, 61.8626, 0.22 ) }
    dend_62 { pt3dadd( -57.4717, 26.9373, 62.4292, 0.22 ) }
    dend_62 { pt3dadd( -57.776, 26.4488, 63.103, 0.22 ) }
    dend_62 { pt3dadd( -58.083, 26.0521, 63.5451, 0.22 ) }
    dend_62 { pt3dadd( -58.6676, 25.429, 64.138, 0.22 ) }
    dend_62 { pt3dadd( -59.5438, 24.4979, 64.8425, 1.03 ) }
    dend_62 { pt3dadd( -60.3589, 23.5676, 65.4385, 1.47 ) }
    dend_62 { pt3dadd( -61.8253, 21.7304, 66.4925, 0.07 ) }
    dend_62 { pt3dadd( -62.2116, 21.2437, 66.76, 1.25 ) }
    dend_62 { pt3dadd( -62.7839, 20.5463, 67.139, 1.4 ) }
    dend_62 { pt3dadd( -63.9603, 19.1679, 67.8548, 0.29 ) }
    dend_62 { pt3dadd( -64.7418, 18.3223, 68.2811, 0.15 ) }
    dend_62 { pt3dadd( -65.428, 17.6716, 68.6032, 0.81 ) }
    dend_62 { pt3dadd( -66.943, 16.3697, 69.2246, 0.15 ) }
    dend_62 { pt3dadd( -67.8376, 15.6941, 69.512, 0.15 ) }
    dend_62 { pt3dadd( -68.5045, 15.2371, 69.6987, 0.37 ) }
    dend_62 { pt3dadd( -69.6385, 14.5727, 69.8803, 0.15 ) }
    dend_62 { pt3dadd( -70.2409, 14.2465, 69.9145, 0.88 ) }
    dend_62 { pt3dadd( -70.8378, 13.9365, 69.9039, 1.55 ) }
    dend_62 { pt3dadd( -73.1896, 12.765, 69.7675, 0.22 ) }
    dend_62 { pt3dadd( -73.7985, 12.4772, 69.7409, 0.22 ) }
    dend_62 { pt3dadd( -75.2666, 11.8403, 69.7325, 0.81 ) }
    dend_62 { pt3dadd( -77.1923, 11.0748, 69.8125, 0.07 ) }
    dend_62 { pt3dadd( -77.9408, 10.8087, 69.9039, 0.74 ) }
    dend_62 { pt3dadd( -79.1025, 10.4394, 70.1696, 0.22 ) }
    dend_62 { pt3dadd( -80.3834, 10.0551, 70.6377, 0.37 ) }
    dend_62 { pt3dadd( -81.252, 9.79742, 71.0526, 0.22 ) }
    dend_62 { pt3dadd( -82.6241, 9.35973, 71.8988, 1.03 ) }
    dend_62 { pt3dadd( -84.0515, 8.80791, 72.9763, 0.07 ) }
    dend_62 { pt3dadd( -85.1056, 8.30274, 73.9156, 0.88 ) }
    dend_62 { pt3dadd( -85.9749, 7.80598, 74.7635, 1.25 ) }
    dend_62 { pt3dadd( -87.5429, 6.7714, 76.2486, 0.15 ) }
    dend_62 { pt3dadd( -88.3002, 6.21504, 76.9155, 0.74 ) }
    dend_62 { pt3dadd( -89.7413, 5.0714, 78.0257, 0.22 ) }
    dend_62 { pt3dadd( -91.1177, 3.93315, 78.8863, 1.11 ) }
    dend_62 { pt3dadd( -91.9673, 3.24496, 79.3052, 2.06 ) }
    dend_62 { pt3dadd( -94.1015, 1.60092, 80.1341, 0.15 ) }
    dend_62 { pt3dadd( -94.9078, 1.0146, 80.3871, 0.29 ) }
    dend_62 { pt3dadd( -96.6992, -0.172563, 80.8673, 0.07 ) }
    dend_62 { pt3dadd( -97.5687, -0.664978, 81.086, 0.22 ) }
    dend_62 { pt3dadd( -99.2096, -1.46655, 81.5592, 0.07 ) }
    dend_62 { pt3dadd( -100.115, -1.83671, 81.9174, 1.4 ) }
    dend_62 { pt3dadd( -102.192, -2.54599, 82.9684, 0.07 ) }
    dend_62 { pt3dadd( -103.211, -2.8577, 83.5371, 0.81 ) }
    dend_62 { pt3dadd( -104.912, -3.30529, 84.6258, 0.07 ) }
    dend_62 { pt3dadd( -105.957, -3.54488, 85.374, 0.96 ) }
    dend_62 { pt3dadd( -107.893, -3.89513, 86.8448, 0.07 ) }
    dend_62 { pt3dadd( -108.617, -3.99589, 87.3953, 0.07 ) }
    dend_62 { pt3dadd( -109.546, -4.09907, 88.0913, 1.25 ) }
    dend_62 { pt3dadd( -111.655, -4.31085, 89.577, 0.22 ) }
    dend_62 { pt3dadd( -113.098, -4.46245, 90.5003, 0.88 ) }
    dend_62 { pt3dadd( -114.041, -4.52417, 91.026, 1.18 ) }
    dend_62 { pt3dadd( -116.773, -4.61315, 92.3333, 0.15 ) }
    dend_62 { pt3dadd( -117.618, -4.62961, 92.6794, 0.81 ) }
    dend_62 { pt3dadd( -118.949, -4.64673, 93.1236, 0.15 ) }
    dend_62 { pt3dadd( -120.21, -4.65386, 93.4213, 1.18 ) }
    dend_62 { pt3dadd( -122.211, -4.58875, 93.7867, 0.07 ) }
    dend_62 { pt3dadd( -123.066, -4.51516, 93.9171, 0.07 ) }
    dend_62 { pt3dadd( -124.236, -4.25874, 94.0156, 0.07 ) }
    dend_62 { pt3dadd( -124.837, -4.07483, 94.0422, 0.88 ) }
    dend_62 { pt3dadd( -125.721, -3.76257, 94.0659, 1.33 ) }
    dend_62 { pt3dadd( -128.107, -2.76292, 94.0801, 0.07 ) }
    dend_62 { pt3dadd( -129.209, -2.23367, 94.0539, 1.33 ) }
    dend_62 { pt3dadd( -131.861, -0.760366, 93.9598, 0.07 ) }
    dend_62 { pt3dadd( -132.301, -0.481279, 93.9361, 0.15 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 68/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.2141, 48.8747, 43.0258, 0.15 ) }
    dend_61 { pt3dadd( -39.0721, 47.2559, 42.4317, 0.15 ) }
    dend_61 { pt3dadd( -38.9864, 46.5952, 42.14, 0.29 ) }
    dend_61 { pt3dadd( -38.8339, 45.607, 41.6863, 0.15 ) }
    dend_61 { pt3dadd( -38.7612, 45.2254, 41.5028, 0.52 ) }
    dend_61 { pt3dadd( -38.6014, 44.4575, 41.1297, 1.33 ) }
    dend_61 { pt3dadd( -38.3188, 42.975, 40.4192, 0.07 ) }
    dend_61 { pt3dadd( -38.1752, 42.1933, 40.0031, 0.07 ) }
    dend_61 { pt3dadd( -38.0717, 41.5175, 39.6744, 0.37 ) }
    dend_61 { pt3dadd( -37.9282, 40.3287, 39.2709, 0.07 ) }
    dend_61 { pt3dadd( -37.8966, 39.9526, 39.1954, 0.15 ) }
    dend_61 { pt3dadd( -37.8378, 38.1811, 39.0418, 0.15 ) }
    dend_61 { pt3dadd( -37.8389, 37.747, 39.0539, 0.74 ) }
    dend_61 { pt3dadd( -37.8837, 36.7653, 39.139, 1.25 ) }
    dend_61 { pt3dadd( -38.1206, 34.3428, 39.4592, 0.15 ) }
    dend_61 { pt3dadd( -38.3252, 32.9049, 39.7015, 0.15 ) }
    dend_61 { pt3dadd( -38.4289, 32.2575, 39.8159, 0.15 ) }
    dend_61 { pt3dadd( -38.5721, 31.4583, 39.9447, 0.15 ) }
    dend_61 { pt3dadd( -38.7702, 30.4528, 40.0503, 1.25 ) }
    dend_61 { pt3dadd( -39.1664, 28.756, 40.0752, 0.07 ) }
    dend_61 { pt3dadd( -39.3547, 28.0814, 40.0167, 0.96 ) }
    dend_61 { pt3dadd( -39.5263, 27.5011, 39.9201, 1.25 ) }
    dend_61 { pt3dadd( -40.0888, 25.5702, 39.5222, 0.15 ) }
    dend_61 { pt3dadd( -40.3075, 24.7774, 39.3227, 0.96 ) }
    dend_61 { pt3dadd( -40.676, 23.2677, 38.8858, 0.07 ) }
    dend_61 { pt3dadd( -40.8288, 22.5474, 38.6477, 0.29 ) }
    dend_61 { pt3dadd( -41.237, 20.443, 37.8751, 0.07 ) }
    dend_61 { pt3dadd( -41.3206, 19.9788, 37.6924, 0.29 ) }
    dend_61 { pt3dadd( -41.5491, 18.532, 37.0847, 0.07 ) }
    dend_61 { pt3dadd( -41.6283, 17.8625, 36.8025, 1.03 ) }
    dend_61 { pt3dadd( -41.679, 17.2029, 36.5355, 1.47 ) }
    dend_61 { pt3dadd( -41.7772, 14.8037, 35.634, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_61 { pt3dadd( -41.7775, 14.2371, 35.4448, 0.59 ) }
    dend_61 { pt3dadd( -41.7692, 13.4361, 35.2034, 0.07 ) }
    dend_61 { pt3dadd( -41.7741, 12.6702, 35.0105, 0.07 ) }
    dend_61 { pt3dadd( -41.7969, 11.6284, 34.7873, 0.07 ) }
    dend_61 { pt3dadd( -41.8568, 10.6989, 34.6195, 1.18 ) }
    dend_61 { pt3dadd( -42.0951, 8.28621, 34.255, 0.07 ) }
    dend_61 { pt3dadd( -42.2005, 7.60015, 34.1456, 0.74 ) }
    dend_61 { pt3dadd( -42.5676, 5.80038, 33.8354, 0.07 ) }
    dend_61 { pt3dadd( -42.6976, 5.29699, 33.7366, 0.44 ) }
    dend_61 { pt3dadd( -43.2254, 3.60519, 33.3957, 0.07 ) }
    dend_61 { pt3dadd( -43.5407, 2.75144, 33.2229, 1.47 ) }
    dend_61 { pt3dadd( -44.274, 1.02228, 32.8643, 0.07 ) }
    dend_61 { pt3dadd( -44.5149, 0.494987, 32.7424, 0.37 ) }
    dend_61 { pt3dadd( -45.0199, -0.54094, 32.4667, 0.07 ) }
    dend_61 { pt3dadd( -45.7298, -1.91795, 32.1165, 0.07 ) }
    dend_61 { pt3dadd( -46.203, -2.80394, 31.8972, 0.07 ) }
    dend_61 { pt3dadd( -46.4448, -3.27183, 31.7982, 0.37 ) }
    dend_61 { pt3dadd( -47.0193, -4.44432, 31.5919, 0.15 ) }
    dend_61 { pt3dadd( -47.3737, -5.18261, 31.4958, 0.81 ) }
    dend_61 { pt3dadd( -47.974, -6.47796, 31.3825, 0.15 ) }
    dend_61 { pt3dadd( -48.4527, -7.55659, 31.3362, 1.55 ) }
    dend_61 { pt3dadd( -49.2355, -9.34403, 31.3435, 0.07 ) }
    dend_61 { pt3dadd( -49.4728, -9.88702, 31.3817, 0.66 ) }
    dend_61 { pt3dadd( -50.0913, -11.4012, 31.6039, 0.07 ) }
    dend_61 { pt3dadd( -50.273, -11.953, 31.7158, 0.29 ) }
    dend_61 { pt3dadd( -50.4852, -12.7956, 31.925, 0.07 ) }
    dend_61 { pt3dadd( -50.6146, -13.3261, 32.0825, 0.74 ) }
    dend_61 { pt3dadd( -50.932, -14.702, 32.5432, 0.15 ) }
    dend_61 { pt3dadd( -51.149, -15.9077, 32.9622, 1.18 ) }
    dend_61 { pt3dadd( -51.3514, -18.3398, 33.8404, 0.15 ) }
    dend_61 { pt3dadd( -51.3798, -19.1627, 34.139, 0.66 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -37.8683, 90.5993, 143.328, 0.07 ) }
    dend_59 { pt3dadd( -38.4446, 89.2707, 143.449, 0.07 ) }
    dend_59 { pt3dadd( -38.613, 88.7332, 143.481, 0.07 ) }
    dend_59 { pt3dadd( -38.7845, 88.1857, 143.515, 0.22 ) }
    dend_59 { pt3dadd( -39.1084, 87.1521, 143.577, 0.07 ) }
    dend_59 { pt3dadd( -39.2401, 86.7317, 143.603, 0.52 ) }
    dend_59 { pt3dadd( -39.462, 86.0233, 143.646, 0.07 ) }
    dend_59 { pt3dadd( -39.4908, 85.6754, 143.666, 0.22 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 39/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -37.8683, 90.5993, 143.328, 0.29 ) }
    dend_58 { pt3dadd( -37.724, 90.8247, 145.147, 0.29 ) }
    dend_58 { pt3dadd( -37.6145, 90.8702, 146.48, 0.29 ) }
    dend_58 { pt3dadd( -37.5522, 90.8251, 147.985, 0.59 ) }
    dend_58 { pt3dadd( -37.537, 90.7361, 149.991, 0.74 ) }
    dend_58 { pt3dadd( -37.5645, 90.7045, 150.955, 1.03 ) }
    dend_58 { pt3dadd( -37.6436, 90.7222, 152.086, 1.03 ) }
    dend_58 { pt3dadd( -37.8044, 90.7973, 153.525, 0.15 ) }
    dend_58 { pt3dadd( -38.0004, 90.9566, 154.615, 0.44 ) }
    dend_58 { pt3dadd( -38.3125, 91.2308, 155.963, 0.81 ) }
    dend_58 { pt3dadd( -38.5869, 91.4868, 156.813, 1.03 ) }
    dend_58 { pt3dadd( -39.1469, 92.0918, 158.334, 0.15 ) }
    dend_58 { pt3dadd( -39.6844, 92.7754, 159.659, 0.74 ) }
    dend_58 { pt3dadd( -40.2163, 93.6708, 160.976, 0.37 ) }
    // Section: dend_55, id: dend_55, parent: dend_51 (entry count 53/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 15.0681, -8.47203, 5.82325, 0.22 ) }
    dend_55 { pt3dadd( 15.0195, -9.97793, 3.54042, 0.22 ) }
    dend_55 { pt3dadd( 15.0547, -10.6774, 2.65432, 0.37 ) }
    dend_55 { pt3dadd( 15.1117, -11.1089, 2.15216, 0.59 ) }
    dend_55 { pt3dadd( 15.2172, -11.9065, 1.22379, 0.22 ) }
    dend_55 { pt3dadd( 15.3322, -12.7756, 0.212286, 1.47 ) }
    dend_55 { pt3dadd( 15.4494, -13.6614, -0.818808, 0.29 ) }
    dend_55 { pt3dadd( 15.6531, -14.5603, -1.5709, 0.15 ) }
    dend_55 { pt3dadd( 15.8925, -15.4171, -2.20129, 1.03 ) }
    dend_55 { pt3dadd( 15.7558, -22.0464, -10.1349, 1.03 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 63/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 15.0681, -8.47203, 5.82325, 0.22 ) }
    dend_52 { pt3dadd( 15.4277, -9.10053, 6.04155, 0.22 ) }
    dend_52 { pt3dadd( 15.7218, -9.70742, 6.19813, 1.4 ) }
    dend_52 { pt3dadd( 16.0873, -10.7276, 6.37225, 2.65 ) }
    dend_52 { pt3dadd( 16.7737, -13.3457, 6.68604, 0.22 ) }
    dend_52 { pt3dadd( 16.8775, -13.8747, 6.72585, 0.22 ) }
    dend_52 { pt3dadd( 16.9965, -14.6951, 6.7586, 0.96 ) }
    dend_52 { pt3dadd( 17.0438, -15.7029, 6.74075, 2.06 ) }
    dend_52 { pt3dadd( 16.9738, -17.3227, 6.61476, 0.22 ) }
    dend_52 { pt3dadd( 16.8328, -18.2322, 6.45316, 0.15 ) }
    dend_52 { pt3dadd( 16.6668, -18.9224, 6.24521, 0.29 ) }
    dend_52 { pt3dadd( 16.4699, -19.6305, 6.01925, 0.15 ) }
    dend_52 { pt3dadd( 16.2818, -20.3742, 5.76147, 1.18 ) }
    dend_52 { pt3dadd( 16.188, -20.8144, 5.59762, 1.7 ) }
    dend_52 { pt3dadd( 15.8682, -22.7262, 4.85354, 0.22 ) }
    dend_52 { pt3dadd( 15.7776, -23.4996, 4.55323, 0.81 ) }
    dend_52 { pt3dadd( 15.7445, -24.0064, 4.36651, 1.4 ) }
    dend_52 { pt3dadd( 15.7222, -25.7439, 3.76634, 0.15 ) }
    dend_52 { pt3dadd( 15.7601, -26.1984, 3.62849, 0.15 ) }
    dend_52 { pt3dadd( 15.9375, -27.1102, 3.38795, 0.15 ) }
    dend_52 { pt3dadd( 16.1055, -27.7039, 3.25872, 0.37 ) }
    dend_52 { pt3dadd( 16.2652, -28.2973, 3.14136, 1.33 ) }
    dend_52 { pt3dadd( 16.4157, -28.9991, 3.00934, 1.84 ) }
    dend_52 { pt3dadd( 16.616, -31.2766, 2.62582, 0.22 ) }
    dend_52 { pt3dadd( 16.5911, -32.51, 2.41655, 0.07 ) }
    dend_52 { pt3dadd( 16.5665, -33.0321, 2.32834, 0.96 ) }
    dend_52 { pt3dadd( 16.4483, -34.1479, 2.14597, 0.22 ) }
    dend_52 { pt3dadd( 16.2763, -35.0053, 2.00304, 1.33 ) }
    dend_52 { pt3dadd( 15.7316, -36.4849, 1.75474, 0.22 ) }
    dend_52 { pt3dadd( 15.1586, -37.2386, 1.63292, 1.18 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 93/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 7.36594, 38.5369, 34.983, 0.44 ) }
    dend_44 { pt3dadd( 6.57543, 38.3476, 35.7406, 0.44 ) }
    dend_44 { pt3dadd( 5.91114, 38.2919, 36.2543, 0.44 ) }
    dend_44 { pt3dadd( 5.23578, 38.3062, 36.7609, 0.44 ) }
    dend_44 { pt3dadd( 4.9409, 38.3259, 36.9907, 0.44 ) }
    dend_44 { pt3dadd( 4.466, 38.362, 37.3598, 0.96 ) }
    dend_44 { pt3dadd( 4.16528, 38.3836, 37.588, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_44 { pt3dadd( 3.33176, 38.4263, 38.1224, 0.15 ) }
    dend_44 { pt3dadd( 2.92391, 38.4718, 38.4021, 0.15 ) }
    dend_44 { pt3dadd( 2.55839, 38.5191, 38.6964, 0.15 ) }
    dend_44 { pt3dadd( 2.02268, 38.5583, 39.1722, 0.15 ) }
    dend_44 { pt3dadd( 1.72755, 38.5378, 39.4427, 1.33 ) }
    dend_44 { pt3dadd( 1.11836, 38.4172, 39.9911, 1.92 ) }
    dend_44 { pt3dadd( 0.0445781, 38.0822, 40.9279, 0.22 ) }
    dend_44 { pt3dadd( -0.658557, 37.7984, 41.4993, 0.59 ) }
    dend_44 { pt3dadd( -1.02167, 37.602, 41.8055, 1.03 ) }
    dend_44 { pt3dadd( -1.84783, 37.0227, 42.5661, 0.15 ) }
    dend_44 { pt3dadd( -2.28238, 36.6352, 43.0137, 0.15 ) }
    dend_44 { pt3dadd( -2.47385, 36.4127, 43.23, 0.88 ) }
    dend_44 { pt3dadd( -2.8233, 35.8746, 43.6465, 1.92 ) }
    dend_44 { pt3dadd( -3.49887, 34.6173, 44.5173, 0.22 ) }
    dend_44 { pt3dadd( -3.66612, 34.2797, 44.7608, 0.22 ) }
    dend_44 { pt3dadd( -3.85469, 33.8351, 45.0497, 0.22 ) }
    dend_44 { pt3dadd( -3.96444, 33.5818, 45.2101, 0.22 ) }
    dend_44 { pt3dadd( -4.26773, 32.98, 45.5924, 0.22 ) }
    dend_44 { pt3dadd( -4.53911, 32.5325, 45.8807, 1.11 ) }
    dend_44 { pt3dadd( -5.02853, 31.8907, 46.2926, 2.58 ) }
    dend_44 { pt3dadd( -5.97431, 30.8028, 47.0176, 0.52 ) }
    dend_44 { pt3dadd( -6.71033, 29.9813, 47.5972, 0.15 ) }
    dend_44 { pt3dadd( -7.01498, 29.6418, 47.8571, 0.15 ) }
    dend_44 { pt3dadd( -7.43606, 29.1863, 48.249, 0.29 ) }
    dend_44 { pt3dadd( -7.83043, 28.7769, 48.6352, 0.96 ) }
    dend_44 { pt3dadd( -8.45447, 28.1262, 49.2689, 0.22 ) }
    dend_44 { pt3dadd( -8.86642, 27.7282, 49.7129, 0.22 ) }
    dend_44 { pt3dadd( -9.23514, 27.3357, 50.1106, 0.44 ) }
    dend_44 { pt3dadd( -9.60706, 26.8842, 50.5535, 1.62 ) }
    dend_44 { pt3dadd( -9.94092, 26.4428, 50.9976, 1.99 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 7.36594, 38.5369, 34.983, 1.47 ) }
    dend_41 { pt3dadd( 8.57883, 39.0054, 35.3654, 1.47 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -7.96695, -122.825, 36.0355, 0.22 ) }
    dend_23 { pt3dadd( -7.58583, -122.096, 36.4287, 0.22 ) }
    dend_23 { pt3dadd( -7.16544, -121.263, 36.8431, 0.22 ) }
    dend_23 { pt3dadd( -6.8295, -120.6, 37.1297, 0.22 ) }
    dend_23 { pt3dadd( -6.45046, -119.853, 37.4079, 0.66 ) }
    dend_23 { pt3dadd( -6.15322, -119.292, 37.6071, 0.81 ) }
    dend_23 { pt3dadd( -5.56061, -118.241, 37.9339, 0.15 ) }
    dend_23 { pt3dadd( -5.1932, -117.61, 38.0682, 1.18 ) }
    dend_23 { pt3dadd( -4.82613, -116.991, 38.1617, 1.4 ) }
    dend_23 { pt3dadd( -3.99614, -115.642, 38.3002, 0.15 ) }
    dend_23 { pt3dadd( -3.68936, -115.179, 38.3227, 0.15 ) }
    dend_23 { pt3dadd( -3.02, -114.28, 38.3231, 1.7 ) }
    dend_23 { pt3dadd( -2.35918, -113.484, 38.2551, 0.22 ) }
    dend_23 { pt3dadd( -1.82681, -112.881, 38.1656, 0.88 ) }
    dend_23 { pt3dadd( -1.39318, -112.406, 38.0752, 0.22 ) }
    dend_23 { pt3dadd( -0.936436, -111.909, 37.955, 0.07 ) }
    dend_23 { pt3dadd( -0.409804, -111.291, 37.8132, 0.07 ) }
    dend_23 { pt3dadd( 0.285133, -110.424, 37.6436, 0.66 ) }
    dend_23 { pt3dadd( 0.9666, -109.506, 37.4947, 0.07 ) }
    dend_23 { pt3dadd( 1.212, -109.149, 37.4529, 0.37 ) }
    dend_23 { pt3dadd( 1.51142, -108.671, 37.4145, 0.66 ) }
    dend_23 { pt3dadd( 2.38295, -107.145, 37.3671, 0.07 ) }
    dend_23 { pt3dadd( 2.74192, -106.478, 37.3751, 1.03 ) }
    dend_23 { pt3dadd( 3.36418, -105.23, 37.4545, 0.15 ) }
    dend_23 { pt3dadd( 3.62267, -104.675, 37.5181, 0.88 ) }
    dend_23 { pt3dadd( 3.83076, -104.197, 37.5896, 1.18 ) }
    dend_23 { pt3dadd( 4.43711, -102.644, 37.8999, 0.15 ) }
    dend_23 { pt3dadd( 4.59216, -102.128, 38.0386, 0.15 ) }
    dend_23 { pt3dadd( 4.70076, -101.553, 38.2273, 0.22 ) }
    dend_23 { pt3dadd( 4.71068, -101.119, 38.4018, 0.07 ) }
    dend_23 { pt3dadd( 4.64634, -100.597, 38.623, 0.29 ) }
    dend_23 { pt3dadd( 4.52709, -100.108, 38.8369, 0.07 ) }
    dend_23 { pt3dadd( 4.38369, -99.705, 39.0054, 0.59 ) }
    dend_23 { pt3dadd( 4.11438, -99.0494, 39.2718, 0.15 ) }
    dend_23 { pt3dadd( 3.74062, -98.2023, 39.608, 1.62 ) }
    dend_23 { pt3dadd( 3.35756, -97.3447, 39.9414, 0.15 ) }
    dend_23 { pt3dadd( 3.08971, -96.7413, 40.1831, 0.29 ) }
    dend_23 { pt3dadd( 2.66415, -95.7609, 40.5766, 0.07 ) }
    dend_23 { pt3dadd( 2.38012, -94.97, 40.8958, 0.07 ) }
    dend_23 { pt3dadd( 2.25071, -94.5203, 41.0774, 0.66 ) }
    dend_23 { pt3dadd( 2.0479, -93.7179, 41.4055, 0.15 ) }
    dend_23 { pt3dadd( 1.90681, -93.1103, 41.6637, 1.03 ) }
    dend_23 { pt3dadd( 1.75126, -92.4076, 41.9922, 1.62 ) }
    dend_23 { pt3dadd( 1.38459, -90.4668, 43.021, 0.07 ) }
    dend_23 { pt3dadd( 1.24853, -89.6044, 43.5046, 0.59 ) }
    dend_23 { pt3dadd( 1.15954, -88.9908, 43.8657, 0.15 ) }
    dend_23 { pt3dadd( 1.05723, -88.2047, 44.338, 0.88 ) }
    dend_23 { pt3dadd( 0.95596, -87.0547, 45.0205, 0.15 ) }
    dend_23 { pt3dadd( 0.876245, -86.0116, 45.671, 0.15 ) }
    dend_23 { pt3dadd( 0.822525, -85.1929, 46.2138, 1.33 ) }
    dend_23 { pt3dadd( 0.784908, -84.1556, 46.9105, 0.15 ) }
    dend_23 { pt3dadd( 0.801903, -83.2992, 47.4701, 0.15 ) }
    dend_23 { pt3dadd( 0.867729, -82.5573, 47.904, 1.33 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 85/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -7.96695, -122.825, 36.0355, 0.15 ) }
    dend_22 { pt3dadd( -8.32563, -123.813, 36.3822, 0.15 ) }
    dend_22 { pt3dadd( -8.58073, -124.377, 36.7285, 0.15 ) }
    dend_22 { pt3dadd( -8.78197, -124.757, 37.0659, 0.15 ) }
    dend_22 { pt3dadd( -8.9681, -125.054, 37.3762, 0.74 ) }
    dend_22 { pt3dadd( -9.27979, -125.517, 37.8849, 0.15 ) }
    dend_22 { pt3dadd( -9.5153, -125.882, 38.2753, 1.4 ) }
    dend_22 { pt3dadd( -9.8769, -126.461, 39.0006, 0.15 ) }
    dend_22 { pt3dadd( -10.2089, -127.01, 39.7177, 0.66 ) }
    dend_22 { pt3dadd( -10.406, -127.491, 40.3455, 0.07 ) }
    dend_22 { pt3dadd( -10.4438, -127.73, 40.6759, 0.07 ) }
    dend_22 { pt3dadd( -10.4622, -128.039, 41.0921, 0.29 ) }
    dend_22 { pt3dadd( -10.4294, -128.577, 41.8029, 0.07 ) }
    dend_22 { pt3dadd( -10.3301, -129.025, 42.3638, 1.25 ) }
    dend_22 { pt3dadd( -10.005, -129.89, 43.4426, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_22 { pt3dadd( -9.52144, -130.815, 44.6761, 1.62 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 1/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -64.6137, -95.1004, -2.39379, 0.59 ) }
    dend_18 { pt3dadd( -66.1355, -94.9191, -3.79551, 0.59 ) }
    dend_18 { pt3dadd( -66.5864, -94.8438, -4.27087, 0.07 ) }
    dend_18 { pt3dadd( -67.1696, -94.7411, -5.00336, 0.07 ) }
    dend_18 { pt3dadd( -67.5559, -94.6686, -5.54533, 0.37 ) }
    dend_18 { pt3dadd( -68.1778, -94.5315, -6.51247, 0.07 ) }
    dend_18 { pt3dadd( -68.6247, -94.4105, -7.31789, 0.15 ) }
    dend_18 { pt3dadd( -69.1601, -94.2674, -8.56717, 1.62 ) }
    dend_18 { pt3dadd( -69.5807, -94.0328, -10.3412, 0.22 ) }
    dend_18 { pt3dadd( -69.6239, -93.9256, -11.1689, 0.22 ) }
    dend_18 { pt3dadd( -69.5957, -93.835, -11.8959, 0.59 ) }
    dend_18 { pt3dadd( -69.4239, -93.7055, -12.9463, 0.59 ) }
    dend_18 { pt3dadd( -69.0958, -93.5926, -14.0289, 0.59 ) }
    dend_18 { pt3dadd( -68.386, -93.5141, -15.336, 1.18 ) }
    dend_18 { pt3dadd( -67.8566, -93.4927, -15.9494, 1.18 ) }
    dend_18 { pt3dadd( -69.8413, -92.0849, -26.8008, 1.18 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 17/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -64.6137, -95.1004, -2.39379, 0.22 ) }
    dend_17 { pt3dadd( -65.7703, -95.7589, -2.77479, 0.22 ) }
    dend_17 { pt3dadd( -66.4114, -96.1094, -2.99702, 0.15 ) }
    dend_17 { pt3dadd( -67.3548, -96.5541, -3.38379, 0.15 ) }
    dend_17 { pt3dadd( -68.1822, -96.9098, -3.76685, 1.25 ) }
    dend_17 { pt3dadd( -69.1335, -97.2824, -4.20815, 0.15 ) }
    dend_17 { pt3dadd( -69.9496, -97.5754, -4.56878, 0.15 ) }
    dend_17 { pt3dadd( -71.0823, -97.9239, -5.06174, 1.62 ) }
    dend_17 { pt3dadd( -72.3417, -98.2882, -5.56146, 0.22 ) }
    dend_17 { pt3dadd( -73.1146, -98.5281, -5.85899, 0.22 ) }
    dend_17 { pt3dadd( -74.0233, -98.8207, -6.21107, 1.33 ) }
    dend_17 { pt3dadd( -74.9186, -99.1033, -6.54185, 1.11 ) }
    dend_17 { pt3dadd( -76.4315, -99.5609, -7.05277, 0.15 ) }
    dend_17 { pt3dadd( -76.9651, -99.7306, -7.20482, 0.15 ) }
    dend_17 { pt3dadd( -78.1663, -100.162, -7.44985, 0.15 ) }
    dend_17 { pt3dadd( -78.8559, -100.427, -7.52934, 0.15 ) }
    dend_17 { pt3dadd( -79.5567, -100.713, -7.51404, 0.66 ) }
    dend_17 { pt3dadd( -80.5438, -101.073, -7.24279, 0.07 ) }
    dend_17 { pt3dadd( -81.1373, -101.228, -6.88509, 0.88 ) }
    dend_17 { pt3dadd( -81.9315, -101.315, -6.22379, 0.15 ) }
    dend_17 { pt3dadd( -82.7308, -101.284, -5.44802, 0.59 ) }
    dend_17 { pt3dadd( -83.7037, -101.099, -4.37191, 1.4 ) }
    dend_17 { pt3dadd( -84.9696, -100.638, -2.9123, 0.22 ) }
    dend_17 { pt3dadd( -85.8543, -100.15, -1.84689, 1.25 ) }
    dend_17 { pt3dadd( -86.8982, -99.3968, -0.539876, 0.44 ) }
    dend_17 { pt3dadd( -87.4469, -98.897, 0.14834, 0.52 ) }
    dend_17 { pt3dadd( -88.058, -98.2082, 0.951549, 1.11 ) }
    dend_17 { pt3dadd( -88.7059, -97.3199, 1.89186, 0.37 ) }
    dend_17 { pt3dadd( -89.3952, -96.2429, 3.03623, 0.07 ) }
    dend_17 { pt3dadd( -89.7662, -95.6537, 3.71128, 0.07 ) }
    dend_17 { pt3dadd( -90.008, -95.2419, 4.2357, 0.22 ) }
    dend_17 { pt3dadd( -90.3055, -94.6928, 5.03263, 0.96 ) }
    dend_17 { pt3dadd( -90.547, -94.1908, 5.83162, 2.06 ) }
    dend_17 { pt3dadd( -90.9227, -93.1304, 7.72694, 0.22 ) }
    dend_17 { pt3dadd( -91.0933, -92.4535, 9.12248, 0.74 ) }
    dend_17 { pt3dadd( -91.1746, -92.0754, 10.1145, 0.74 ) }
    dend_17 { pt3dadd( -91.2197, -91.7812, 11.2046, 0.74 ) }
    dend_17 { pt3dadd( -91.2127, -91.7085, 11.686, 0.74 ) }
    dend_17 { pt3dadd( -91.1118, -91.6508, 12.8364, 0.74 ) }
    dend_17 { pt3dadd( -90.8629, -91.6716, 14.0269, 0.74 ) }
    dend_17 { pt3dadd( -90.69, -91.6832, 14.7284, 0.74 ) }
    dend_17 { pt3dadd( -90.5917, -91.6446, 15.1294, 0.74 ) }
    dend_17 { pt3dadd( -90.345, -91.3582, 16.0477, 0.74 ) }
    dend_17 { pt3dadd( -90.059, -90.9317, 16.7818, 0.74 ) }
    dend_17 { pt3dadd( -89.51, -90.0561, 17.8947, 0.29 ) }
    dend_17 { pt3dadd( -89.2016, -89.5371, 18.4456, 0.29 ) }
    dend_17 { pt3dadd( -88.7501, -88.7936, 19.1515, 0.07 ) }
    dend_17 { pt3dadd( -88.4521, -88.3356, 19.5593, 0.44 ) }
    dend_17 { pt3dadd( -87.6682, -87.1905, 20.5033, 0.07 ) }
    dend_17 { pt3dadd( -87.2025, -86.5734, 21.0047, 0.07 ) }
    dend_17 { pt3dadd( -86.731, -85.9848, 21.4903, 0.07 ) }
    dend_17 { pt3dadd( -86.4452, -85.6527, 21.7777, 0.29 ) }
    dend_17 { pt3dadd( -85.9097, -85.0473, 22.2898, 0.07 ) }
    dend_17 { pt3dadd( -85.4708, -84.5477, 22.7508, 0.37 ) }
    dend_17 { pt3dadd( -84.9682, -84.0194, 23.2939, 0.22 ) }
    dend_17 { pt3dadd( -84.7597, -83.8334, 23.5398, 0.81 ) }
    dend_17 { pt3dadd( -84.3803, -83.5453, 24.0924, 0.37 ) }
    dend_17 { pt3dadd( -83.8713, -83.2211, 25.0965, 0.88 ) }
    dend_17 { pt3dadd( -83.3297, -82.9046, 26.3491, 0.88 ) }
    dend_17 { pt3dadd( -83.1372, -82.8052, 26.8805, 0.88 ) }
    dend_17 { pt3dadd( -82.8216, -82.6626, 27.9472, 0.88 ) }
    dend_17 { pt3dadd( -82.5654, -82.591, 28.9008, 0.88 ) }
    dend_17 { pt3dadd( -82.216, -82.617, 30.3301, 0.88 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 80/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 15.1586, -37.2386, 1.63292, 0.29 ) }
    dend_54 { pt3dadd( 15.1769, -38.6875, 1.67483, 0.29 ) }
    dend_54 { pt3dadd( 15.2047, -39.4137, 1.7008, 0.15 ) }
    dend_54 { pt3dadd( 15.2501, -40.1134, 1.72635, 1.03 ) }
    dend_54 { pt3dadd( 15.3526, -41.4224, 1.76621, 0.15 ) }
    dend_54 { pt3dadd( 15.4217, -42.3053, 1.7931, 1.4 ) }
    dend_54 { pt3dadd( 15.5791, -44.3158, 1.85433, 0.07 ) }
    dend_54 { pt3dadd( 15.6, -44.6204, 1.86341, 0.81 ) }
    dend_54 { pt3dadd( 15.7017, -45.656, 1.88007, 0.07 ) }
    dend_54 { pt3dadd( 15.8047, -46.396, 1.89834, 1.62 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 90/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 15.1586, -37.2386, 1.63292, 1.92 ) }
    dend_53 { pt3dadd( 14.7907, -37.8619, 1.83451, 1.92 ) }
    dend_53 { pt3dadd( 14.4022, -38.4877, 2.03678, 2.06 ) }
    dend_53 { pt3dadd( 13.4632, -39.8456, 2.48258, 0.22 ) }
    dend_53 { pt3dadd( 13.1463, -40.2799, 2.63499, 0.66 ) }
    dend_53 { pt3dadd( 12.6684, -40.8371, 2.82912, 0.22 ) }
    dend_53 { pt3dadd( 12.3036, -41.2063, 2.947, 0.96 ) }
    dend_53 { pt3dadd( 12.0767, -41.4188, 3.01674, 1.47 ) }
    dend_53 { pt3dadd( 11.1174, -42.2124, 3.27354, 0.52 ) }
    dend_53 { pt3dadd( 10.532, -42.593, 3.39707, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_53 { pt3dadd( 9.32238, -43.332, 3.598, 0.15 ) }
    dend_53 { pt3dadd( 8.64997, -43.7482, 3.6902, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 2/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -9.94092, 26.4428, 50.9976, 0.07 ) }
    dend_48 { pt3dadd( -11.1951, 26.4429, 51.5045, 0.07 ) }
    dend_48 { pt3dadd( -11.7774, 26.4429, 51.7399, 0.96 ) }
    dend_48 { pt3dadd( -12.5585, 26.443, 52.0556, 0.07 ) }
    dend_48 { pt3dadd( -12.9711, 26.443, 52.2223, 0.29 ) }
    dend_48 { pt3dadd( -13.6564, 26.4431, 52.4993, 0.07 ) }
    dend_48 { pt3dadd( -14.4, 26.4432, 52.7998, 0.07 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 9/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.94092, 26.4428, 50.9976, 0.44 ) }
    dend_45 { pt3dadd( -10.087, 25.4552, 51.8395, 0.44 ) }
    dend_45 { pt3dadd( -10.1103, 24.6391, 52.6107, 0.96 ) }
    dend_45 { pt3dadd( -10.0835, 24.0628, 53.2037, 0.66 ) }
    dend_45 { pt3dadd( -10.0493, 23.4619, 53.831, 0.15 ) }
    dend_45 { pt3dadd( -10.0727, 23.1288, 54.1505, 0.15 ) }
    dend_45 { pt3dadd( -10.134, 22.6252, 54.6047, 0.29 ) }
    dend_45 { pt3dadd( -10.2337, 21.9, 55.2195, 0.29 ) }
    dend_45 { pt3dadd( -10.3247, 21.4368, 55.5629, 0.74 ) }
    dend_45 { pt3dadd( -10.4345, 20.8085, 55.9705, 1.62 ) }
    dend_45 { pt3dadd( -10.6509, 19.2152, 56.8824, 0.22 ) }
    dend_45 { pt3dadd( -10.7408, 18.587, 57.2068, 1.18 ) }
    dend_45 { pt3dadd( -10.8045, 18.2393, 57.3702, 1.55 ) }
    dend_45 { pt3dadd( -10.983, 17.3027, 57.7709, 0.29 ) }
    dend_45 { pt3dadd( -11.1171, 16.4631, 58.129, 0.22 ) }
    dend_45 { pt3dadd( -11.1942, 15.5279, 58.5597, 0.22 ) }
    dend_45 { pt3dadd( -11.166, 14.8811, 58.9009, 0.22 ) }
    dend_45 { pt3dadd( -11.1424, 14.2988, 59.253, 0.52 ) }
    dend_45 { pt3dadd( -11.1205, 14.075, 59.4173, 0.52 ) }
    dend_45 { pt3dadd( -11.0496, 13.6426, 59.8087, 0.52 ) }
    dend_45 { pt3dadd( -10.9978, 13.3388, 60.0909, 0.52 ) }
    dend_45 { pt3dadd( -10.9256, 12.9656, 60.3944, 0.52 ) }
    dend_45 { pt3dadd( -10.7909, 12.3331, 60.8664, 0.15 ) }
    dend_45 { pt3dadd( -10.6945, 11.9233, 61.1505, 0.15 ) }
    dend_45 { pt3dadd( -10.6204, 11.6077, 61.3539, 0.44 ) }
    dend_45 { pt3dadd( -10.4945, 11.0809, 61.6757, 1.11 ) }
    dend_45 { pt3dadd( -10.2507, 10.0918, 62.1986, 0.15 ) }
    dend_45 { pt3dadd( -10.1578, 9.69642, 62.381, 0.15 ) }
    dend_45 { pt3dadd( -9.9733, 8.8542, 62.7486, 0.22 ) }
    dend_45 { pt3dadd( -9.82118, 8.18434, 63.026, 1.25 ) }
    dend_45 { pt3dadd( -9.6425, 7.55523, 63.2948, 1.99 ) }
    dend_45 { pt3dadd( -9.1302, 6.17458, 63.9101, 0.15 ) }
    dend_45 { pt3dadd( -8.87084, 5.62085, 64.1392, 1.03 ) }
    dend_45 { pt3dadd( -8.56014, 5.07789, 64.3591, 1.03 ) }
    dend_45 { pt3dadd( -7.81927, 4.16528, 64.7203, 0.15 ) }
    dend_45 { pt3dadd( -7.20592, 3.60796, 64.9368, 0.15 ) }
    dend_45 { pt3dadd( -6.61117, 3.19555, 65.0833, 0.15 ) }
    dend_45 { pt3dadd( -5.88099, 2.81448, 65.1994, 0.81 ) }
    dend_45 { pt3dadd( -5.13349, 2.43752, 65.2717, 1.33 ) }
    dend_45 { pt3dadd( -3.68324, 1.64056, 65.3201, 0.15 ) }
    dend_45 { pt3dadd( -3.24314, 1.32085, 65.3149, 1.25 ) }
    dend_45 { pt3dadd( -2.52093, 0.603734, 65.2816, 0.29 ) }
    dend_45 { pt3dadd( -1.8808, -0.277217, 65.2261, 0.22 ) }
    dend_45 { pt3dadd( -1.50352, -0.994366, 65.1673, 0.15 ) }
    dend_45 { pt3dadd( -1.19775, -1.86438, 65.0532, 1.77 ) }
    dend_45 { pt3dadd( -0.809069, -3.65725, 64.7255, 0.07 ) }
    dend_45 { pt3dadd( -0.726771, -4.19795, 64.6097, 0.81 ) }
    dend_45 { pt3dadd( -0.641752, -5.16737, 64.3875, 0.07 ) }
    dend_45 { pt3dadd( -0.608779, -5.98686, 64.1949, 0.96 ) }
    dend_45 { pt3dadd( -0.587648, -6.74957, 63.9971, 2.06 ) }
    dend_45 { pt3dadd( -0.509463, -8.52425, 63.5103, 0.07 ) }
    dend_45 { pt3dadd( -0.445094, -9.37286, 63.2733, 0.22 ) }
    dend_45 { pt3dadd( -0.369721, -10.3592, 63.0426, 0.15 ) }
    dend_45 { pt3dadd( -0.310711, -11.1742, 62.8936, 1.47 ) }
    dend_45 { pt3dadd( -0.271, -12.0753, 62.7572, 0.66 ) }
    dend_45 { pt3dadd( -0.271934, -12.9859, 62.6354, 0.66 ) }
    dend_45 { pt3dadd( -0.296746, -13.5642, 62.5755, 1.77 ) }
    dend_45 { pt3dadd( -0.369235, -14.7985, 62.4564, 0.07 ) }
    dend_45 { pt3dadd( -0.403688, -15.1455, 62.4291, 0.22 ) }
    dend_45 { pt3dadd( -0.513879, -15.9066, 62.3842, 0.22 ) }
    dend_45 { pt3dadd( -0.644124, -16.5495, 62.3626, 1.55 ) }
    dend_45 { pt3dadd( -0.985528, -17.8291, 62.3194, 0.15 ) }
    dend_45 { pt3dadd( -1.1637, -18.3945, 62.2827, 0.59 ) }
    dend_45 { pt3dadd( -1.39294, -19.0912, 62.2036, 0.15 ) }
    dend_45 { pt3dadd( -1.57999, -19.6677, 62.1235, 0.15 ) }
    dend_45 { pt3dadd( -1.74715, -20.1917, 62.0415, 0.74 ) }
    dend_45 { pt3dadd( -1.95316, -20.8287, 61.9187, 1.25 ) }
    dend_45 { pt3dadd( -2.38233, -21.981, 61.6877, 0.07 ) }
    dend_45 { pt3dadd( -2.62642, -22.6126, 61.5638, 0.15 ) }
    dend_45 { pt3dadd( -2.8384, -23.1603, 61.4826, 0.74 ) }
    dend_45 { pt3dadd( -3.03813, -23.6502, 61.4425, 1.4 ) }
    dend_45 { pt3dadd( -3.38736, -24.4744, 61.4338, 0.15 ) }
    dend_45 { pt3dadd( -3.74037, -25.2423, 61.5208, 0.07 ) }
    dend_45 { pt3dadd( -3.93154, -25.5995, 61.6159, 0.29 ) }
    dend_45 { pt3dadd( -4.51014, -26.4793, 61.9401, 0.07 ) }
    dend_45 { pt3dadd( -4.81943, -26.9118, 62.1271, 0.88 ) }
    dend_45 { pt3dadd( -5.0336, -27.1853, 62.2606, 1.33 ) }
    dend_45 { pt3dadd( -5.70827, -27.9679, 62.6964, 0.22 ) }
    dend_45 { pt3dadd( -6.15498, -28.4786, 62.9882, 0.22 ) }
    dend_45 { pt3dadd( -6.58659, -28.9428, 63.2695, 1.33 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 89/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 8.57883, 39.0054, 35.3654, 0.15 ) }
    dend_43 { pt3dadd( 9.14003, 40.5805, 35.9565, 0.15 ) }
    dend_43 { pt3dadd( 9.32855, 41.1382, 36.2205, 0.22 ) }
    dend_43 { pt3dadd( 9.61486, 42.0417, 36.7443, 0.15 ) }
    dend_43 { pt3dadd( 9.7693, 42.5881, 37.0868, 0.96 ) }
    dend_43 { pt3dadd( 9.95812, 43.3364, 37.5685, 0.29 ) }
    dend_43 { pt3dadd( 10.1083, 43.914, 37.9368, 0.29 ) }
    dend_43 { pt3dadd( 10.2658, 44.5706, 38.4132, 0.29 ) }
    dend_43 { pt3dadd( 10.4353, 45.2116, 38.8398, 0.29 ) }
    dend_43 { pt3dadd( 10.6158, 45.824, 39.2075, 1.25 ) }
    dend_43 { pt3dadd( 10.6973, 46.0624, 39.3399, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_43 { pt3dadd( 11.2296, 47.4001, 40.0484, 0.15 ) }
    dend_43 { pt3dadd( 11.7015, 48.3862, 40.5135, 1.33 ) }
    dend_43 { pt3dadd( 12.4485, 49.7359, 41.084, 0.07 ) }
    dend_43 { pt3dadd( 12.9094, 50.4383, 41.3606, 0.59 ) }
    dend_43 { pt3dadd( 13.592, 51.3608, 41.7168, 0.15 ) }
    dend_43 { pt3dadd( 14.2179, 52.1669, 42.0248, 1.11 ) }
    dend_43 { pt3dadd( 14.7268, 52.8927, 42.2896, 2.14 ) }
    dend_43 { pt3dadd( 14.9745, 53.3073, 42.4328, 1.84 ) }
    dend_43 { pt3dadd( 15.5567, 54.8203, 42.9696, 0.15 ) }
    dend_43 { pt3dadd( 15.6982, 55.7201, 43.2788, 1.4 ) }
    dend_43 { pt3dadd( 15.676, 56.4621, 43.5394, 0.96 ) }
    dend_43 { pt3dadd( 15.4088, 58.3803, 44.2936, 0.15 ) }
    dend_43 { pt3dadd( 15.2399, 59.1549, 44.6404, 0.96 ) }
    dend_43 { pt3dadd( 14.8112, 60.6975, 45.4673, 0.15 ) }
    dend_43 { pt3dadd( 14.6412, 61.1998, 45.7895, 1.18 ) }
    dend_43 { pt3dadd( 14.3518, 62.1377, 46.4993, 0.15 ) }
    dend_43 { pt3dadd( 14.1688, 63.0421, 47.3145, 0.59 ) }
    dend_43 { pt3dadd( 14.1536, 63.3377, 47.6321, 0.88 ) }
    dend_43 { pt3dadd( 14.226, 64.3371, 48.7987, 0.22 ) }
    dend_43 { pt3dadd( 14.3602, 64.9992, 49.6063, 0.88 ) }
    dend_43 { pt3dadd( 14.5018, 65.5658, 50.3065, 1.77 ) }
    dend_43 { pt3dadd( 14.8125, 66.6472, 51.5819, 0.29 ) }
    dend_43 { pt3dadd( 15.003, 67.1858, 52.1648, 0.81 ) }
    dend_43 { pt3dadd( 15.4062, 68.1738, 53.1611, 0.22 ) }
    dend_43 { pt3dadd( 15.7376, 68.8976, 53.8333, 0.37 ) }
    dend_43 { pt3dadd( 15.9291, 69.2843, 54.1691, 0.37 ) }
    dend_43 { pt3dadd( 16.4269, 70.2276, 54.937, 1.55 ) }
    dend_43 { pt3dadd( 17.1265, 71.4753, 55.8547, 0.07 ) }
    dend_43 { pt3dadd( 17.6854, 72.4621, 56.5094, 0.22 ) }
    dend_43 { pt3dadd( 18.0636, 73.1301, 56.9116, 0.22 ) }
    dend_43 { pt3dadd( 18.3952, 73.7272, 57.2531, 0.22 ) }
    dend_43 { pt3dadd( 18.7728, 74.4473, 57.6434, 0.07 ) }
    dend_43 { pt3dadd( 19.0808, 75.1005, 57.9755, 1.11 ) }
    dend_43 { pt3dadd( 19.243, 75.4783, 58.1437, 1.4 ) }
    dend_43 { pt3dadd( 19.8089, 76.774, 58.6435, 0.07 ) }
    dend_43 { pt3dadd( 20.1598, 77.576, 58.9385, 0.74 ) }
    dend_43 { pt3dadd( 20.3621, 78.0836, 59.1287, 0.74 ) }
    dend_43 { pt3dadd( 20.6767, 78.936, 59.4564, 0.22 ) }
    dend_43 { pt3dadd( 21.036, 79.9464, 59.8435, 0.22 ) }
    dend_43 { pt3dadd( 21.2724, 80.6169, 60.0925, 0.96 ) }
    dend_43 { pt3dadd( 21.4282, 81.074, 60.2571, 0.96 ) }
    dend_43 { pt3dadd( 21.9711, 82.8144, 60.8753, 0.15 ) }
    dend_43 { pt3dadd( 22.2511, 83.7794, 61.2246, 0.15 ) }
    dend_43 { pt3dadd( 22.3581, 84.2114, 61.38, 0.22 ) }
    dend_43 { pt3dadd( 22.5679, 85.413, 61.7946, 0.07 ) }
    dend_43 { pt3dadd( 22.6501, 86.0343, 62.0129, 0.07 ) }
    dend_43 { pt3dadd( 22.7365, 87.0432, 62.3635, 0.96 ) }
    dend_43 { pt3dadd( 22.7725, 87.8676, 62.6436, 0.22 ) }
    dend_43 { pt3dadd( 22.7718, 88.7867, 62.9492, 1.25 ) }
    dend_43 { pt3dadd( 22.7169, 90.7941, 63.6221, 0.15 ) }
    dend_43 { pt3dadd( 22.6695, 91.7782, 63.9476, 1.33 ) }
    dend_43 { pt3dadd( 22.5813, 93.3543, 64.4652, 0.15 ) }
    dend_43 { pt3dadd( 22.549, 93.8458, 64.6336, 0.22 ) }
    dend_43 { pt3dadd( 22.4599, 94.9235, 65.011, 0.15 ) }
    dend_43 { pt3dadd( 22.3838, 95.6588, 65.2707, 0.81 ) }
    dend_43 { pt3dadd( 22.3667, 95.7932, 65.3166, 0.81 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 56/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 8.57883, 39.0054, 35.3654, 0.29 ) }
    dend_42 { pt3dadd( 9.59776, 39.7819, 36.6029, 0.29 ) }
    dend_42 { pt3dadd( 10.532, 40.6233, 37.7954, 0.52 ) }
    dend_42 { pt3dadd( 11.0372, 41.1421, 38.4614, 1.25 ) }
    dend_42 { pt3dadd( 11.943, 42.1404, 39.6575, 0.15 ) }
    dend_42 { pt3dadd( 12.3584, 42.606, 40.1985, 0.15 ) }
    dend_42 { pt3dadd( 12.6681, 42.9661, 40.612, 0.15 ) }
    dend_42 { pt3dadd( 13.1353, 43.6167, 41.2528, 0.15 ) }
    dend_42 { pt3dadd( 13.4859, 44.1023, 41.6883, 0.81 ) }
    dend_42 { pt3dadd( 13.9723, 44.7271, 42.2613, 1.33 ) }
    dend_42 { pt3dadd( 14.8021, 45.732, 43.2231, 0.22 ) }
    dend_42 { pt3dadd( 15.2678, 46.2116, 43.7392, 0.22 ) }
    dend_42 { pt3dadd( 15.8194, 46.6663, 44.2833, 1.11 ) }
    dend_42 { pt3dadd( 16.2872, 46.9892, 44.711, 1.7 ) }
    dend_42 { pt3dadd( 17.1617, 47.5714, 45.4959, 0.22 ) }
    dend_42 { pt3dadd( 17.6142, 47.8591, 45.8994, 0.88 ) }
    dend_42 { pt3dadd( 18.4924, 48.3507, 46.6331, 0.15 ) }
    dend_42 { pt3dadd( 18.9956, 48.5797, 47.0174, 0.29 ) }
    dend_42 { pt3dadd( 19.4474, 48.7408, 47.3524, 0.29 ) }
    dend_42 { pt3dadd( 20.0336, 48.9391, 47.803, 0.15 ) }
    dend_42 { pt3dadd( 20.6901, 49.1865, 48.353, 0.15 ) }
    dend_42 { pt3dadd( 21.2058, 49.4167, 48.8179, 0.96 ) }
    dend_42 { pt3dadd( 21.8271, 49.7147, 49.408, 0.66 ) }
    dend_42 { pt3dadd( 22.6865, 49.9839, 50.2259, 0.15 ) }
    dend_42 { pt3dadd( 23.2703, 50.1321, 50.7898, 0.15 ) }
    dend_42 { pt3dadd( 24.0545, 50.3186, 51.5882, 0.81 ) }
    dend_42 { pt3dadd( 25.2054, 50.6253, 52.8307, 2.14 ) }
    dend_42 { pt3dadd( 25.7815, 50.8004, 53.4883, 2.14 ) }
    dend_42 { pt3dadd( 27.4574, 51.4198, 55.4316, 0.15 ) }
    dend_42 { pt3dadd( 28.0585, 51.6526, 56.1079, 0.15 ) }
    dend_42 { pt3dadd( 28.9566, 51.9684, 57.0746, 0.29 ) }
    dend_42 { pt3dadd( 29.5938, 52.1677, 57.7366, 1.33 ) }
    dend_42 { pt3dadd( 30.1385, 52.3445, 58.3017, 1.62 ) }
    dend_42 { pt3dadd( 31.1945, 52.7621, 59.3995, 0.15 ) }
    dend_42 { pt3dadd( 31.534, 52.9607, 59.7871, 0.15 ) }
    dend_42 { pt3dadd( 32.0574, 53.2685, 60.4099, 0.15 ) }
    dend_42 { pt3dadd( 32.3536, 53.4462, 60.7848, 0.15 ) }
    dend_42 { pt3dadd( 32.7294, 53.6479, 61.2935, 0.29 ) }
    dend_42 { pt3dadd( 33.2723, 53.9045, 62.1278, 0.66 ) }
    dend_42 { pt3dadd( 33.968, 54.2443, 63.3904, 0.15 ) }
    dend_42 { pt3dadd( 34.3192, 54.4733, 64.1212, 0.15 ) }
    dend_42 { pt3dadd( 34.5697, 54.6968, 64.7051, 0.15 ) }
    dend_42 { pt3dadd( 34.8391, 55.0435, 65.4167, 0.66 ) }
    dend_42 { pt3dadd( 35.2873, 55.8445, 66.814, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_42 { pt3dadd( 35.551, 56.4256, 67.693, 0.22 ) }
    dend_42 { pt3dadd( 35.7864, 56.9672, 68.4524, 1.33 ) }
    dend_42 { pt3dadd( 36.0759, 57.6453, 69.3531, 1.92 ) }
    dend_42 { pt3dadd( 36.699, 59.1034, 71.2308, 0.37 ) }
    dend_42 { pt3dadd( 37.0363, 59.9221, 72.2599, 0.22 ) }
    dend_42 { pt3dadd( 37.3995, 60.8242, 73.3728, 0.22 ) }
    dend_42 { pt3dadd( 37.5709, 61.2611, 73.9595, 0.22 ) }
    dend_42 { pt3dadd( 37.6726, 61.6173, 74.52, 0.22 ) }
    dend_42 { pt3dadd( 37.7054, 61.9006, 75.1085, 0.22 ) }
    dend_42 { pt3dadd( 37.7146, 62.1015, 75.6797, 0.22 ) }
    dend_42 { pt3dadd( 37.7242, 62.3452, 76.3649, 0.52 ) }
    dend_42 { pt3dadd( 37.7427, 63.0059, 77.9552, 1.18 ) }
    dend_42 { pt3dadd( 37.797, 63.7062, 79.4809, 1.4 ) }
    dend_42 { pt3dadd( 37.9644, 64.9033, 81.9204, 0.81 ) }
    dend_42 { pt3dadd( 38.1597, 65.6192, 83.3653, 0.81 ) }
    dend_42 { pt3dadd( 38.5023, 66.3796, 84.9667, 1.7 ) }
    dend_42 { pt3dadd( 39.3697, 67.6677, 87.8312, 0.29 ) }
    dend_42 { pt3dadd( 39.9148, 68.2824, 89.2294, 0.29 ) }
    dend_42 { pt3dadd( 40.26, 68.6147, 89.9722, 1.03 ) }
    dend_42 { pt3dadd( 41.0395, 69.3367, 91.5246, 0.22 ) }
    dend_42 { pt3dadd( 41.6756, 69.9172, 92.7717, 1.11 ) }
    dend_42 { pt3dadd( 42.4742, 70.5307, 94.2808, 0.29 ) }
    dend_42 { pt3dadd( 43.0098, 70.8595, 95.2989, 0.29 ) }
    dend_42 { pt3dadd( 43.2786, 71.0191, 95.8771, 0.52 ) }
    dend_42 { pt3dadd( 43.6624, 71.21, 96.8868, 0.52 ) }
    dend_42 { pt3dadd( 43.7825, 71.274, 97.2764, 0.52 ) }
    dend_42 { pt3dadd( 43.9675, 71.3339, 97.8817, 0.52 ) }
    dend_42 { pt3dadd( 44.3817, 71.3046, 98.8628, 0.52 ) }
    dend_42 { pt3dadd( 44.8326, 71.2492, 99.4869, 0.52 ) }
    dend_42 { pt3dadd( 45.7879, 71.2024, 100.51, 0.22 ) }
    dend_42 { pt3dadd( 46.6932, 71.2539, 101.333, 0.15 ) }
    dend_42 { pt3dadd( 47.0461, 71.3509, 101.668, 0.15 ) }
    dend_42 { pt3dadd( 47.6612, 71.6488, 102.258, 0.81 ) }
    dend_42 { pt3dadd( 48.7129, 72.3439, 103.289, 0.29 ) }
    dend_42 { pt3dadd( 49.4768, 72.9726, 104.07, 0.81 ) }
    dend_42 { pt3dadd( 50.0767, 73.5968, 104.704, 1.7 ) }
    dend_42 { pt3dadd( 51.4569, 75.291, 106.254, 0.22 ) }
    dend_42 { pt3dadd( 52.1284, 76.2681, 107.027, 0.44 ) }
    dend_42 { pt3dadd( 52.4028, 76.8306, 107.369, 0.15 ) }
    dend_42 { pt3dadd( 52.6899, 77.6227, 107.727, 0.88 ) }
    dend_42 { pt3dadd( 53.1543, 79.2596, 108.264, 0.22 ) }
    dend_42 { pt3dadd( 53.3638, 80.0516, 108.466, 0.88 ) }
    dend_42 { pt3dadd( 53.5354, 80.6903, 108.59, 1.47 ) }
    dend_42 { pt3dadd( 54.216, 83.1647, 109.076, 0.22 ) }
    dend_42 { pt3dadd( 54.3856, 83.7105, 109.186, 0.22 ) }
    dend_42 { pt3dadd( 54.6838, 84.439, 109.36, 0.37 ) }
    dend_42 { pt3dadd( 55.5172, 85.9636, 109.857, 0.22 ) }
    dend_42 { pt3dadd( 55.9158, 86.5769, 110.118, 0.22 ) }
    dend_42 { pt3dadd( 56.3398, 87.1477, 110.448, 0.96 ) }
    dend_42 { pt3dadd( 56.7484, 87.5892, 110.783, 1.55 ) }
    dend_42 { pt3dadd( 58.0694, 88.8614, 111.887, 0.15 ) }
    dend_42 { pt3dadd( 59.0295, 89.6644, 112.672, 1.25 ) }
    dend_42 { pt3dadd( 59.9091, 90.3652, 113.402, 1.25 ) }
    dend_42 { pt3dadd( 60.9353, 91.1177, 114.242, 0.74 ) }
    dend_42 { pt3dadd( 62.143, 91.8928, 115.229, 0.15 ) }
    dend_42 { pt3dadd( 62.9501, 92.3527, 115.889, 0.29 ) }
    dend_42 { pt3dadd( 63.4991, 92.6107, 116.31, 0.29 ) }
    dend_42 { pt3dadd( 64.4567, 92.9675, 116.892, 0.29 ) }
    dend_42 { pt3dadd( 65.4358, 93.291, 117.373, 0.81 ) }
    dend_42 { pt3dadd( 66.849, 93.8058, 117.974, 0.15 ) }
    dend_42 { pt3dadd( 67.6296, 94.1492, 118.304, 1.11 ) }
    dend_42 { pt3dadd( 68.0295, 94.3529, 118.472, 1.77 ) }
    dend_42 { pt3dadd( 70.1443, 95.4786, 119.331, 0.22 ) }
    dend_42 { pt3dadd( 70.9029, 95.8616, 119.601, 0.22 ) }
    dend_42 { pt3dadd( 71.8537, 96.3697, 119.896, 0.22 ) }
    dend_42 { pt3dadd( 72.7042, 96.8218, 120.1, 0.22 ) }
    dend_42 { pt3dadd( 73.156, 97.0769, 120.198, 0.44 ) }
    dend_42 { pt3dadd( 74.0505, 97.6187, 120.382, 0.44 ) }
    dend_42 { pt3dadd( 75.204, 98.3443, 120.615, 1.55 ) }
    dend_42 { pt3dadd( 76.4457, 99.0462, 120.85, 0.66 ) }
    dend_42 { pt3dadd( 78.0677, 99.779, 121.155, 0.15 ) }
    dend_42 { pt3dadd( 78.712, 100.023, 121.293, 0.15 ) }
    dend_42 { pt3dadd( 79.5114, 100.29, 121.503, 0.37 ) }
    dend_42 { pt3dadd( 80.7583, 100.666, 121.881, 0.15 ) }
    dend_42 { pt3dadd( 81.585, 100.898, 122.177, 0.81 ) }
    dend_42 { pt3dadd( 83.1152, 101.282, 122.789, 0.22 ) }
    dend_42 { pt3dadd( 83.9044, 101.468, 123.108, 0.22 ) }
    dend_42 { pt3dadd( 84.7403, 101.651, 123.426, 1.25 ) }
    dend_42 { pt3dadd( 85.143, 101.748, 123.57, 1.25 ) }
    dend_42 { pt3dadd( 86.6172, 102.134, 124.021, 0.07 ) }
    dend_42 { pt3dadd( 87.5815, 102.413, 124.266, 0.96 ) }
    dend_42 { pt3dadd( 89.5037, 103.005, 124.659, 0.22 ) }
    dend_42 { pt3dadd( 90.4526, 103.276, 124.822, 1.03 ) }
    dend_42 { pt3dadd( 91.4076, 103.53, 124.963, 1.77 ) }
    dend_42 { pt3dadd( 93.334, 104.067, 125.219, 0.15 ) }
    dend_42 { pt3dadd( 94.4007, 104.367, 125.339, 0.22 ) }
    dend_42 { pt3dadd( 95.6623, 104.736, 125.476, 0.15 ) }
    dend_42 { pt3dadd( 96.5862, 105.033, 125.588, 1.03 ) }
    dend_42 { pt3dadd( 97.7552, 105.424, 125.746, 0.22 ) }
    dend_42 { pt3dadd( 99.103, 105.89, 125.95, 0.22 ) }
    dend_42 { pt3dadd( 100.513, 106.438, 126.187, 0.15 ) }
    dend_42 { pt3dadd( 101.475, 106.829, 126.349, 0.15 ) }
    dend_42 { pt3dadd( 102.487, 107.252, 126.53, 0.81 ) }
    dend_42 { pt3dadd( 102.825, 107.391, 126.592, 1.77 ) }
    dend_42 { pt3dadd( 104.249, 107.927, 126.792, 0.07 ) }
    dend_42 { pt3dadd( 105.334, 108.306, 126.877, 0.59 ) }
    dend_42 { pt3dadd( 107.648, 109.118, 126.891, 0.22 ) }
    dend_42 { pt3dadd( 108.146, 109.289, 126.873, 0.59 ) }
    dend_42 { pt3dadd( 109.098, 109.592, 126.807, 0.66 ) }
    dend_42 { pt3dadd( 111.006, 110.183, 126.629, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_42 { pt3dadd( 111.774, 110.405, 126.516, 0.07 ) }
    dend_42 { pt3dadd( 112.245, 110.516, 126.415, 0.52 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 2/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.4, 26.4432, 52.7998, 0.15 ) }
    dend_50 { pt3dadd( -15.6603, 27.116, 53.5089, 0.15 ) }
    dend_50 { pt3dadd( -16.6081, 27.7138, 53.7818, 0.15 ) }
    dend_50 { pt3dadd( -17.6638, 28.4633, 53.8597, 0.07 ) }
    dend_50 { pt3dadd( -18.1756, 28.8511, 53.7869, 0.07 ) }
    dend_50 { pt3dadd( -19.3239, 29.7256, 53.4368, 0.07 ) }
    dend_50 { pt3dadd( -20.2088, 30.3861, 53.0541, 0.07 ) }
    dend_50 { pt3dadd( -20.5964, 30.6957, 52.7367, 0.07 ) }
    dend_50 { pt3dadd( -20.9282, 30.9962, 52.3239, 0.29 ) }
    dend_50 { pt3dadd( -21.3455, 31.4224, 51.6082, 0.29 ) }
    dend_50 { pt3dadd( -21.5733, 31.664, 51.1493, 0.29 ) }
    dend_50 { pt3dadd( -21.7771, 31.8822, 50.7095, 0.29 ) }
    dend_50 { pt3dadd( -22.0286, 32.1489, 50.1312, 0.29 ) }
    dend_50 { pt3dadd( -22.5249, 32.6012, 49.0567, 0.22 ) }
    dend_50 { pt3dadd( -22.9017, 32.873, 48.3137, 0.22 ) }
    dend_50 { pt3dadd( -23.5656, 33.2776, 47.119, 0.88 ) }
    dend_50 { pt3dadd( -24.1582, 33.5947, 46.0998, 0.22 ) }
    dend_50 { pt3dadd( -24.4402, 33.7249, 45.647, 0.22 ) }
    dend_50 { pt3dadd( -24.9118, 33.9124, 44.9364, 0.15 ) }
    dend_50 { pt3dadd( -25.4816, 34.1201, 44.1608, 0.15 ) }
    dend_50 { pt3dadd( -26.0584, 34.329, 43.3744, 0.15 ) }
    dend_50 { pt3dadd( -26.5573, 34.5241, 42.6667, 0.15 ) }
    dend_50 { pt3dadd( -26.9648, 34.7138, 42.0563, 0.74 ) }
    dend_50 { pt3dadd( -27.3134, 34.8981, 41.5306, 0.74 ) }
    dend_50 { pt3dadd( -27.8194, 35.195, 40.7083, 0.15 ) }
    dend_50 { pt3dadd( -28.4062, 35.5428, 39.6641, 0.22 ) }
    dend_50 { pt3dadd( -28.6511, 35.6761, 39.1863, 0.22 ) }
    dend_50 { pt3dadd( -29.0145, 35.8665, 38.3493, 0.22 ) }
    dend_50 { pt3dadd( -29.1523, 35.9355, 37.9697, 0.22 ) }
    dend_50 { pt3dadd( -29.3841, 36.0326, 37.2546, 0.22 ) }
    dend_50 { pt3dadd( -29.5754, 36.0626, 36.506, 0.22 ) }
    dend_50 { pt3dadd( -29.6736, 36.0315, 35.9639, 0.22 ) }
    dend_50 { pt3dadd( -29.7661, 35.9509, 35.2764, 0.22 ) }
    dend_50 { pt3dadd( -29.8252, 35.8718, 34.6605, 0.22 ) }
    dend_50 { pt3dadd( -29.9519, 35.7583, 33.7325, 0.22 ) }
    dend_50 { pt3dadd( -30.1818, 35.5742, 32.4724, 0.44 ) }
    dend_50 { pt3dadd( -30.3566, 35.4282, 31.705, 0.44 ) }
    dend_50 { pt3dadd( -30.4255, 35.3625, 31.4308, 0.44 ) }
    dend_50 { pt3dadd( -30.6134, 35.1202, 30.6118, 0.44 ) }
    dend_50 { pt3dadd( -30.7377, 34.8265, 29.7232, 0.44 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 42/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -14.4, 26.4432, 52.7998, 1.03 ) }
    dend_49 { pt3dadd( -14.8464, 26.8089, 53.3115, 1.03 ) }
    dend_49 { pt3dadd( -15.8636, 27.8443, 54.7414, 0.07 ) }
    dend_49 { pt3dadd( -16.1956, 28.2377, 55.281, 0.07 ) }
    dend_49 { pt3dadd( -16.4284, 28.6108, 55.7208, 0.22 ) }
    dend_49 { pt3dadd( -16.7721, 29.2931, 56.4565, 0.07 ) }
    dend_49 { pt3dadd( -17.0169, 29.8273, 57.0036, 0.37 ) }
    dend_49 { pt3dadd( -17.3785, 30.7818, 57.9441, 0.15 ) }
    dend_49 { pt3dadd( -17.6343, 31.6426, 58.7576, 1.33 ) }
    dend_49 { pt3dadd( -18.197, 33.6484, 60.6419, 0.07 ) }
    dend_49 { pt3dadd( -18.5213, 34.857, 61.7798, 0.07 ) }
    dend_49 { pt3dadd( -18.6913, 35.5068, 62.3856, 0.66 ) }
    dend_49 { pt3dadd( -18.8717, 36.2221, 63.0222, 0.66 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 55/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -6.58659, -28.9428, 63.2695, 0.07 ) }
    dend_47 { pt3dadd( -7.52995, -29.9017, 63.5408, 0.07 ) }
    dend_47 { pt3dadd( -8.12351, -30.5051, 63.7115, 0.37 ) }
    dend_47 { pt3dadd( -8.79273, -31.1854, 63.9039, 0.22 ) }
    dend_47 { pt3dadd( -9.48458, -31.8887, 64.1029, 0.88 ) }
    dend_47 { pt3dadd( -9.94414, -32.3559, 64.2351, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 61/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -6.58659, -28.9428, 63.2695, 0.07 ) }
    dend_46 { pt3dadd( -7.15682, -26.6535, 63.0844, 0.07 ) }
    dend_46 { pt3dadd( -7.38661, -25.731, 63.0098, 0.44 ) }
    dend_46 { pt3dadd( -7.65571, -24.6506, 62.9224, 0.15 ) }
    dend_46 { pt3dadd( -7.95224, -23.4602, 62.8261, 0.74 ) }
    dend_46 { pt3dadd( -8.3479, -21.8717, 62.6977, 0.07 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_2 = new SectionList()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_32, dend_25, dend_10, dend_1, dend_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_32, dend_25, dend_10, dend_1, dend_0, axon_0, dend_38, dend_33, dend_27, dend_26, dend_14, dend_11, dend_3, dend_2, axon_1, dend_56, dend_39, dend_35, dend_34, dend_31, dend_28, dend_20, dend_15, dend_13, dend_12, dend_7, dend_4, dend_60, dend_57, dend_51, dend_40, dend_37, dend_36, dend_30, dend_29, dend_24, dend_21, dend_19, dend_16, dend_9, dend_8, dend_6, dend_5, dend_62, dend_61, dend_59, dend_58, dend_55, dend_52, dend_44, dend_41, dend_23, dend_22, dend_18, dend_17, dend_54, dend_53, dend_48, dend_45, dend_43, dend_42, dend_50, dend_49, dend_47, dend_46]}
    ModelViewParmSubset_5 = new SectionList()
    dend_32 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_33 OneSecGrp_SectionRef_9.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_26 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_14 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_34 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_28 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_13 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_12 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_7 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_57 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_51 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_30 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_29 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_24 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_19 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_16 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_9 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_8 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_6 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_5 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_62 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_61 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_23 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_17 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_45 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_43 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_42 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_32 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_25 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_10 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_1 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_3 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_38 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_27 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_39 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_11 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_40 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_41 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_56 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_31 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_44 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_60 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_36 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_20 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_49 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_15 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_37 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_55 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_21 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_50 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_22 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_54 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_53 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_47 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_46 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_18 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_59 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_58 OneSecGrp_SectionRef_48.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_33 nseg = 3
    dend_26 nseg = 7
    dend_14 nseg = 3
    dend_2 nseg = 5
    dend_34 nseg = 3
    dend_28 nseg = 5
    dend_13 nseg = 11
    dend_12 nseg = 7
    dend_7 nseg = 3
    dend_57 nseg = 7
    dend_51 nseg = 3
    dend_30 nseg = 7
    dend_29 nseg = 3
    dend_24 nseg = 7
    dend_19 nseg = 3
    dend_16 nseg = 3
    dend_9 nseg = 7
    dend_8 nseg = 5
    dend_6 nseg = 7
    dend_5 nseg = 3
    dend_62 nseg = 7
    dend_61 nseg = 3
    dend_23 nseg = 3
    dend_17 nseg = 3
    dend_45 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 9
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_DBC_cd818dfadf_0_0


