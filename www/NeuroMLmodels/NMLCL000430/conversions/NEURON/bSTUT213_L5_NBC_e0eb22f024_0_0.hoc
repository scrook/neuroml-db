// Cell: bSTUT213_L5_NBC_e0eb22f024_0_0
/*
{
  "id" : "bSTUT213_L5_NBC_e0eb22f024_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.9016, -1.97873, -2.50057, 3.38117", "-9.79478, -1.80994, -2.24302, 5.67833", "-8.68798, -1.64115, -1.98548, 7.15072", "-7.58118, -1.47235, -1.72793, 8.64399", "-6.47438, -1.30356, -1.47039, 10.0299", "-5.36758, -1.13477, -1.21284, 11.2674", "-4.26078, -0.965972, -0.955299, 11.9107", "-3.15398, -0.797179, -0.697754, 12.2563", "-2.04718, -0.628385, -0.440209, 12.5208", "-0.940378, -0.459592, -0.182664, 12.7145", "0.166423, -0.290798, 0.0748807, 12.541", "1.27322, -0.122005, 0.332426, 12.2075", "2.38002, 0.0467885, 0.589971, 11.6554", "3.48682, 0.215582, 0.847516, 11.0225", "4.59362, 0.384375, 1.10506, 10.3416", "5.70042, 0.553169, 1.36261, 9.80603", "6.80722, 0.721962, 1.62015, 9.2712", "7.91403, 0.890756, 1.8777, 8.04801", "9.02083, 1.05955, 2.13524, 5.78101", "10.1276, 1.22834, 2.39279, 3.52734", "11.2344, 1.39714, 2.65033, 2.23302" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.34928, -3.40695, -7.98898, 1.25", "7.3456, -4.06231, -8.3692, 1.25", "8.13916, -4.71212, -9.23924, 1.25", "8.77722, -5.34529, -10.1959, 0.88", "9.30714, -5.96936, -11.119, 0.88", "9.78208, -6.63323, -12.0263, 0.88", "10.9454, -8.67431, -14.5804, 1.18", "11.6082, -10.5136, -16.8018, 1.18", "11.7119, -10.9507, -17.2697, 1.69", "11.8265, -11.5445, -17.8048, 1.84", "12.0169, -12.3864, -18.4156, 1.62", "12.4232, -13.6775, -19.0423, 1.11", "13.0257, -15.0084, -19.3263, 1.11", "13.9056, -16.6202, -19.48, 1.11", "14.6855, -17.976, -19.5264, 1.11", "15.4806, -19.372, -19.5066, 1.11", "16.2086, -20.7986, -19.4191, 1.11", "16.8236, -22.2234, -19.27, 1.18", "17.1209, -23.2481, -19.1459, 1.33", "17.2734, -24.8895, -18.9657, 1.25", "17.1616, -26.2469, -18.8601, 0.88", "16.7709, -27.9861, -18.8228, 1.25", "16.5128, -28.774, -18.8644, 1.55", "16.23, -29.6216, -18.9138, 1.55", "15.902, -30.7923, -18.9814, 1.33", "15.6744, -32.0293, -19.034, 1.11", "15.5969, -33.6658, -19.027, 0.81", "15.8258, -35.5383, -18.9284, 0.59", "16.5297, -37.8408, -18.6758, 0.59", "17.1196, -38.9012, -18.4904, 0.74", "18.1929, -40.113, -18.1932, 0.96", "19.0586, -40.8177, -17.9875, 1.18", "19.7348, -41.2542, -17.8688, 1.18", "20.646, -41.7778, -17.7701, 1.18", "21.6745, -42.4022, -17.762, 0.88", "22.7313, -43.2898, -17.874, 0.88", "23.2121, -43.9049, -18.0132, 1.11", "23.8294, -44.9939, -18.2795, 1.11", "24.1947, -45.7851, -18.4782, 0.96", "24.5264, -46.5747, -18.6786, 1.25", "25.226, -48.1162, -19.1046, 0.66", "25.6939, -48.962, -19.3502, 0.66", "26.2644, -49.6898, -19.5596, 0.66", "26.9169, -50.2061, -19.7277, 0.74", "27.8339, -50.6721, -19.9641, 0.59", "29.0359, -51.1471, -20.2712, 0.88", "29.706, -51.395, -20.4506, 0.88", "30.3528, -51.6762, -20.6336, 1.11", "31.5624, -52.3522, -21.0142, 0.66", "32.6086, -53.156, -21.3852, 0.59", "33.4711, -54.1634, -21.739, 0.66", "34.125, -55.3084, -22.0115, 0.81", "34.6412, -56.5167, -22.2626, 1.4", "34.8145, -57.0421, -22.3538, 1.55", "35.0709, -58.0588, -22.4835, 0.96", "35.3639, -59.3834, -22.6177, 0.52", "35.6196, -60.3632, -22.7528, 0.52", "35.9909, -61.4799, -22.9326, 0.96", "36.2696, -62.2154, -23.0808, 1.03", "36.4692, -62.7094, -23.1739, 1.11", "36.6867, -63.2364, -23.2513, 1.11", "37.2738, -64.6917, -23.4424, 0.52", "37.7237, -66.0019, -23.533, 0.59", "38.1043, -67.2612, -23.5328, 0.59", "38.4689, -68.4995, -23.5058, 1.18", "38.7833, -69.4978, -23.5092, 1.55", "38.9832, -70.0679, -23.5309, 1.55", "39.589, -71.5714, -23.8075, 0.81", "40.0336, -72.4863, -24.1761, 0.52", "40.5253, -73.3552, -24.6931, 0.44", "41.1995, -74.4733, -25.5184, 0.81", "41.6061, -75.1282, -26.0455, 0.96", "42.7111, -76.8936, -27.484, 0.52", "43.1668, -77.622, -28.0826, 0.96", "43.5202, -78.2457, -28.505, 1.25", "43.8844, -78.9841, -28.8678, 1.03", "44.2587, -79.8321, -29.1369, 0.74", "44.4888, -80.3791, -29.2534, 0.74", "44.9332, -81.3679, -29.3689, 0.74", "45.4478, -82.4387, -29.542, 0.44", "46.0432, -83.6362, -29.7488, 0.96", "46.4116, -84.3712, -29.8754, 1.55", "46.7024, -84.9876, -29.8989, 1.69", "47.0235, -85.7096, -29.8323, 1.25", "47.6352, -87.0707, -29.6617, 0.59", "48.2485, -88.3809, -29.4749, 0.59", "48.9468, -89.8005, -29.326, 1.25", "50.3417, -92.6096, -29.2009, 0.52", "51.052, -94.0434, -29.1897, 0.44", "51.9018, -95.771, -29.2314, 0.96", "52.2567, -96.4965, -29.2737, 0.96", "53.0541, -98.0656, -29.5057, 0.52", "53.8158, -99.4585, -29.8408, 0.52", "54.6245, -100.828, -30.3103, 1.11", "54.9638, -101.4, -30.47, 1.55", "55.3096, -102.021, -30.5736, 1.77", "55.541, -102.436, -30.6623, 1.84", "55.8715, -103.011, -30.832, 1.47", "56.3822, -103.823, -31.2167, 1.11", "56.8697, -104.57, -31.6775, 0.81", "57.5854, -105.752, -32.4972, 0.44", "58.3804, -107.215, -33.575, 0.96", "58.7769, -108.042, -34.1874, 1.11", "59.0706, -108.707, -34.6967, 0.81", "59.398, -109.503, -35.2495, 0.29", "59.7681, -110.4, -35.7157, 0.29", "60.0908, -111.13, -35.8951, 0.59", "60.527, -112.065, -35.9227, 0.88", "60.8763, -112.77, -35.8685, 1.03", "61.6503, -114.26, -35.6789, 1.03", "62.3201, -115.422, -35.4944, 0.59", "63.0507, -116.57, -35.3051, 0.59", "63.7102, -117.572, -35.1503, 0.88", "64.2925, -118.535, -35.0038, 1.25", "64.6183, -119.143, -34.9365, 1.47", "64.8062, -119.577, -34.9181, 1.47", "65.1685, -120.727, -34.8897, 0.37", "65.3985, -121.914, -34.8676, 0.37", "65.5144, -123.479, -34.8612, 0.74", "65.4756, -124.454, -34.8822, 0.66", "65.3758, -125.664, -34.9148, 0.52", "65.3157, -126.245, -34.9117, 0.88", "65.236, -126.926, -34.873, 0.88", "65.2319, -127.687, -34.5998, 0.37", "65.524, -128.392, -33.6617, 0.37", "65.8252, -128.951, -32.6948, 0.37", "66.2229, -129.549, -31.6113, 0.37", "66.5535, -130.006, -30.7986, 0.44", "67.7794, -131.537, -28.1407, 1.18", "68.3624, -132.248, -27.0057, 1.18", "69.0317, -133.064, -25.7616, 0.37", "69.5239, -133.736, -24.8751, 0.81", "69.7711, -134.096, -24.4852, 0.81", "70.1239, -134.631, -24.0181, 0.81", "70.7985, -135.611, -23.3652, 0.37", "71.8586, -136.999, -22.4207, 1.33", "72.2636, -137.459, -22.056, 1.69", "73.0497, -138.286, -21.325, 1.25", "73.6806, -138.875, -20.7777, 0.66", "74.5022, -139.536, -20.1602, 0.52", "75.3209, -140.083, -19.7026, 0.81", "75.7185, -140.355, -19.5427, 0.81", "76.1647, -140.684, -19.3776, 0.81", "76.7506, -141.181, -19.1825, 0.44", "77.3499, -141.804, -18.9569, 0.37", "77.6769, -142.396, -18.809, 0.37", "78.0478, -143.923, -18.576, 0.37", "78.1763, -144.704, -18.4917, 0.74", "78.2843, -145.424, -18.4348, 0.81", "78.3708, -145.977, -18.404, 0.81", "78.5771, -146.952, -18.3834, 0.37", "78.8941, -147.952, -18.3228, 0.37", "79.5367, -149.307, -18.2046, 0.37", "80.0657, -150.217, -18.0794, 0.66", "80.4154, -150.751, -17.985, 0.81", "80.9823, -151.54, -17.8213, 0.81", "82.1085, -152.984, -17.485, 0.52", "82.4805, -153.468, -17.3703, 0.52", "83.2019, -154.573, -17.1411, 0.88", "83.451, -155.069, -17.0726, 1.18", "83.6364, -155.551, -17.0564, 1.18", "83.8131, -156.21, -17.102, 1.18", "83.9298, -156.985, -17.2508, 0.96", "84.0099, -158.03, -17.5553, 0.52", "84.1084, -159.298, -18.0529, 0.52", "84.2151, -160.119, -18.4169, 0.74", "84.3062, -160.601, -18.6445, 0.74", "84.5977, -161.641, -19.082, 0.52", "85.2041, -163.053, -19.595, 0.52", "85.7846, -163.954, -19.8813, 0.59", "86.5758, -164.91, -20.1283, 0.81", "87.3819, -165.766, -20.2831, 0.59", "88.5973, -166.908, -20.4999, 0.37", "89.4455, -167.641, -20.6432, 0.37", "90.3416, -168.444, -20.7218, 1.11", "90.5542, -168.644, -20.7395, 1.4", "91.2604, -169.3, -20.8087, 1.03", "92.2667, -170.268, -20.9271, 0.52", "93.2244, -171.284, -21.1048, 0.52", "94.1841, -172.407, -21.2747, 1.18", "94.5407, -172.851, -21.3569, 1.47", "94.8992, -173.292, -21.4705, 1.47", "95.8466, -174.533, -21.8614, 0.52", "96.549, -175.551, -22.3158, 0.88", "96.9118, -176.16, -22.6802, 0.88", "97.5794, -177.337, -23.6521, 0.59", "98.0645, -178.238, -24.4996, 1.03", "98.4148, -178.892, -25.1714, 1.03", "99.1158, -180.173, -26.6208, 0.44", "99.3943, -180.731, -27.269, 0.44", "99.9444, -182.077, -28.7898, 1.03", "100.101, -182.625, -29.3411, 1.18", "100.245, -183.35, -29.9841, 0.74", "100.435, -184.666, -31.0029, 0.44", "100.474, -185.625, -31.512, 0.44", "100.467, -186.684, -31.9296, 0.44", "100.422, -188.158, -32.2929, 1.11", "100.438, -188.721, -32.3912, 1.47", "100.546, -189.616, -32.4721, 1.47", "100.975, -191.408, -32.4651, 0.44", "101.381, -192.511, -32.421, 0.44", "101.974, -193.792, -32.3561, 0.44", "102.573, -194.95, -32.3071, 0.44", "102.98, -195.77, -32.3232, 0.29", "103.51, -196.945, -32.4636, 0.29", "103.737, -197.579, -32.6254, 1.4", "103.887, -198.298, -32.8501, 1.99", "103.986, -199.244, -33.184, 1.47", "104.048, -200.769, -33.7738, 0.44", "104.089, -202.007, -34.1975, 0.37", "104.16, -203.173, -34.543, 0.37", "104.243, -204.186, -34.7849, 0.74", "104.343, -204.897, -34.9347, 0.88", "104.485, -205.557, -35.0411, 0.37", "105.062, -207.486, -35.2232, 0.29", "105.385, -208.296, -35.2465, 0.29", "105.747, -209.031, -35.2528, 0.96", "106.624, -210.604, -35.4198, 0.37", "107.236, -211.649, -35.6322, 0.66", "107.493, -212.079, -35.7617, 0.66", "108.309, -213.479, -36.3876, 0.37", "108.533, -213.86, -36.5749, 0.81", "109.687, -215.688, -37.514, 0.37", "109.97, -216.082, -37.7386, 0.88", "110.255, -216.423, -37.9709, 0.88", "111.019, -217.189, -38.5869, 0.44", "111.54, -217.668, -39.0195, 0.44", "112.297, -218.307, -39.5602, 0.81", "113.554, -219.236, -40.3448, 1.55", "114.023, -219.562, -40.6307, 1.69", "115.305, -220.44, -41.4341, 0.37", "116.206, -221.066, -42.0144, 0.37", "117.096, -221.75, -42.6469, 0.37", "118.041, -222.558, -43.3384, 0.44", "118.693, -223.157, -43.7912, 1.03", "119.189, -223.599, -44.1121, 1.4", "119.598, -223.946, -44.3459, 1.4", "120.817, -224.876, -44.9427, 0.29", "121.712, -225.585, -45.3095, 0.29", "122.423, -226.15, -45.5366, 0.29", "122.965, -226.562, -45.6793, 0.29", "123.661, -227.069, -45.8306, 0.74", "124.245, -227.479, -45.943, 1.11", "125.458, -228.267, -46.1304, 0.52", "126.129, -228.708, -46.2377, 0.81", "126.89, -229.261, -46.3643, 0.66", "127.714, -229.895, -46.5323, 0.29", "128.437, -230.435, -46.6967, 0.29", "129.41, -231.121, -46.9292, 0.29", "130.66, -231.92, -47.2248, 0.44", "131.269, -232.3, -47.3511, 0.44", "132.19, -232.872, -47.5436, 0.29", "132.659, -233.176, -47.635, 0.59", "132.989, -233.403, -47.7035, 0.59", "133.56, -233.835, -47.8447, 0.29", "134.337, -234.45, -48.0676, 0.29", "135.056, -235.053, -48.2954, 0.59", "135.429, -235.39, -48.4151, 0.74", "135.669, -235.627, -48.5023, 0.74", "136.738, -236.755, -48.9387, 0.29", "137.503, -237.633, -49.3003, 0.44", "137.985, -238.213, -49.5578, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.86928, -3.63695, 4.08102, 1.25", "7.86928, -3.63695, 4.08102, 1.25", "7.59094, -4.64528, 4.41121, 1.25", "7.13176, -6.38409, 4.91058, 1.4", "6.68198, -8.29708, 5.38878, 1.4", "6.35083, -10.1004, 5.78526, 1.18", "6.10354, -11.939, 6.15114, 1.18", "6.00803, -13.4731, 6.41086, 1.4", "6.11739, -15.6508, 6.71801, 1.4", "6.35208, -18.0018, 6.9733, 1.4", "6.67828, -19.9679, 7.12226, 1.62", "7.00471, -21.2708, 7.2127, 1.47", "7.73491, -23.3543, 7.31813, 1.03", "8.79877, -25.6247, 7.43177, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.81072, -2.89695, -6.35898, 1.18", "-9.81072, -2.89695, -6.35898, 1.18", "-10.8498, -4.0787, -6.46014, 1.18", "-12.2227, -5.90933, -6.74762, 1.11", "-12.977, -7.05033, -6.96626, 1.18", "-13.6779, -8.2601, -7.25186, 1.03", "-14.5029, -9.68406, -7.58803, 0.96", "-15.1911, -10.9823, -7.92113, 1.4", "-15.8528, -12.5276, -8.38345, 1.62", "-16.0906, -13.3303, -8.66708, 1.84", "-16.392, -14.7354, -9.24028, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.60072, -7.02695, -1.54898, 1.4", "-3.60072, -7.02695, -1.54898, 1.4", "-4.33567, -7.87895, -2.05863, 1.11", "-5.4296, -8.96467, -2.60989, 0.96", "-5.79152, -9.27342, -2.74196, 0.96", "-6.67096, -9.90005, -2.96966, 0.66", "-7.42943, -10.376, -3.08115, 0.66", "-7.92862, -10.6247, -3.08848, 1.03", "-8.86431, -10.9967, -2.99394, 1.33", "-9.50216, -11.2445, -2.88977, 1.47", "-10.3575, -11.6258, -2.77346, 1.11", "-11.2021, -12.1127, -2.72553, 0.96", "-12.1535, -12.8984, -2.81091, 0.66", "-12.8258, -13.6882, -3.00192, 0.52", "-13.271, -14.4723, -3.31946, 0.44", "-13.586, -15.4078, -3.82485, 0.44", "-13.8496, -16.5954, -4.56434, 1.4", "-13.9367, -17.1515, -4.92782, 1.84", "-13.9943, -17.661, -5.25473, 2.14", "-14.1228, -18.9087, -5.98903, 1.99", "-14.3369, -20.8483, -6.93559, 1.03", "-14.5115, -22.2559, -7.47261, 0.88", "-14.676, -23.3128, -7.62674, 0.81", "-14.8302, -24.0698, -7.50016, 0.66", "-15.1218, -25.2206, -6.96985, 0.66", "-15.4091, -26.1604, -6.28782, 0.96", "-15.5709, -26.6191, -5.8529, 1.11", "-16.6016, -29.3702, -3.11163, 0.44", "-16.937, -30.2155, -2.30643, 1.03", "-17.0232, -30.4249, -2.13336, 1.4", "-17.2648, -30.9493, -1.79932, 1.69", "-17.4836, -31.373, -1.66357, 1.69", "-18.303, -32.7737, -1.63995, 0.81", "-18.8058, -33.4518, -1.85181, 1.18", "-19.4621, -34.1413, -2.10584, 1.47", "-19.9195, -34.5551, -2.24484, 1.47", "-20.5612, -35.0984, -2.36173, 1.4", "-21.3873, -35.7654, -2.4176, 1.11", "-22.7332, -36.808, -2.3475, 0.52", "-23.5749, -37.5027, -2.23035, 0.52", "-24.4792, -38.4042, -1.99622, 0.52", "-25.3338, -39.6148, -1.64089, 1.18", "-25.5796, -40.1404, -1.51668, 1.55", "-25.6873, -40.518, -1.47144, 1.69", "-25.8071, -41.1172, -1.48178, 1.92", "-25.9874, -42.1026, -1.66226, 0.74", "-26.2097, -43.384, -1.91572, 0.44", "-26.5257, -45.079, -2.25525, 0.44", "-26.8157, -46.5173, -2.49977, 0.44", "-27.1978, -48.1951, -2.72174, 0.74", "-27.5204, -49.2994, -2.81751, 0.52", "-28.3834, -51.6464, -2.89272, 1.03", "-28.6269, -52.2382, -2.86378, 1.25", "-28.9369, -53.0019, -2.75752, 0.66", "-29.2777, -53.9426, -2.55199, 0.29", "-29.6114, -55.074, -2.26479, 0.29", "-29.7801, -55.7614, -2.09977, 0.59", "-30.0131, -57.123, -1.83784, 0.59", "-30.0612, -58.0461, -1.62333, 1.03", "-29.988, -59.6465, -1.25194, 1.4", "-29.9122, -60.3689, -1.09336, 1.77", "-29.8397, -60.9635, -0.999418, 2.14", "-29.7719, -61.8738, -0.914068, 2.36", "-29.8565, -63.1514, -0.951852, 0.74", "-30.0967, -64.1332, -1.08492, 0.44", "-30.4191, -64.9027, -1.3005, 0.44", "-31.006, -66.042, -1.60898, 0.74", "-31.335, -66.6199, -1.7327, 0.74", "-31.9296, -67.631, -1.88181, 0.66", "-32.3402, -68.3727, -1.89891, 0.44", "-32.7035, -69.2251, -1.79927, 0.44", "-33.0768, -70.4905, -1.53541, 0.59", "-33.2811, -71.354, -1.29385, 0.81", "-33.4786, -72.0635, -1.08702, 0.96", "-33.7246, -72.728, -0.885929, 0.74", "-34.0792, -73.39, -0.720457, 0.44", "-34.569, -74.0205, -0.599053, 0.44", "-35.1951, -74.6427, -0.572636, 0.74", "-36.3558, -75.7011, -0.578328, 0.88", "-36.956, -76.2427, -0.552328, 1.4", "-37.2607, -76.5474, -0.496314, 1.4", "-37.7598, -77.1929, -0.312082, 1.18", "-38.0919, -77.8452, -0.084616, 0.81", "-38.3638, -78.848, 0.288546, 0.52", "-38.4733, -79.8212, 0.652997, 0.52", "-38.5328, -81.1891, 1.15886, 0.74", "-38.5523, -82.1526, 1.4887, 0.52", "-38.5636, -82.6724, 1.65383, 1.11", "-38.5949, -83.2989, 1.84564, 1.4", "-38.6415, -83.8213, 1.97628, 1.55", "-38.7376, -84.5813, 2.12245, 0.74", "-38.9795, -85.9953, 2.34087, 0.44", "-39.2041, -87.0114, 2.54667, 0.81", "-39.5169, -88.1867, 2.82798, 1.11", "-39.7931, -89.0243, 3.05209, 1.33", "-40.0573, -89.6804, 3.24439, 1.55", "-40.3816, -90.299, 3.46212, 1.18", "-41.2256, -91.4217, 4.02684, 0.59", "-41.6149, -91.8062, 4.29142, 0.96", "-42.071, -92.1857, 4.59003, 1.11", "-42.5425, -92.5572, 4.90507, 1.11", "-43.4082, -93.2354, 5.48862, 0.59", "-44.3443, -93.9904, 6.10511, 0.81", "-45.1812, -94.7132, 6.62855, 0.59", "-46.0599, -95.5739, 7.18031, 0.59", "-46.9112, -96.5526, 7.70992, 0.44", "-47.5298, -97.439, 8.03408, 0.81", "-47.8767, -98.0937, 8.16009, 0.96", "-48.085, -98.6626, 8.18511, 0.96", "-48.2541, -99.452, 8.13559, 0.96", "-48.3477, -100.273, 8.04394, 0.66", "-48.3978, -101.932, 7.79697, 0.52", "-48.3816, -102.79, 7.6627, 0.66", "-48.3403, -103.813, 7.52105, 1.33", "-48.32, -104.54, 7.43771, 1.99", "-48.3585, -106.287, 7.294, 0.44", "-48.4686, -107.225, 7.26065, 0.44", "-48.626, -107.877, 7.27509, 0.74", "-48.81, -108.389, 7.28703, 0.74", "-49.1573, -109.117, 7.32516, 0.74", "-49.6072, -109.897, 7.37596, 0.37", "-50.312, -110.928, 7.45241, 0.29", "-50.8917, -111.62, 7.5228, 0.29", "-51.5964, -112.359, 7.61334, 0.29", "-52.226, -112.962, 7.73049, 0.22", "-52.5782, -113.277, 7.81242, 0.22", "-53.1484, -113.799, 7.96685, 0.81", "-53.4812, -114.129, 8.06711, 0.96", "-54.272, -114.925, 8.31709, 0.22", "-54.9436, -115.655, 8.53424, 1.33", "-55.3833, -116.209, 8.67009, 1.55", "-56.0173, -117.111, 8.89017, 1.11", "-56.3641, -117.665, 9.03324, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.23072, 4.50305, 5.70102, 1.33", "-2.23072, 4.50305, 5.70102, 1.33", "-3.5939, 5.49006, 5.70102, 1.55", "-4.98592, 6.41419, 5.70102, 1.4", "-6.54593, 7.35152, 5.70102, 1.18", "-7.67542, 7.99026, 5.70512, 1.47", "-9.18388, 8.84151, 5.75997, 1.77", "-10.2736, 9.44518, 5.85096, 1.99", "-11.4678, 10.1222, 6.04858, 1.99", "-12.8873, 11.0322, 6.435, 1.62", "-14.4912, 12.3371, 7.11245, 1.11", "-15.493, 13.4377, 7.75125, 1.11", "-16.2331, 14.6274, 8.4723, 1.25", "-16.822, 16.1902, 9.41716, 1.47", "-17.0733, 17.7046, 10.3405, 1.69", "-17.037, 18.9563, 11.0936, 1.92", "-16.7905, 20.396, 11.9203, 1.77", "-16.4918, 21.4725, 12.4757, 1.4", "-15.9863, 22.8731, 13.1187, 1.18", "-15.4287, 24.2562, 13.7041, 1.11", "-14.6131, 26.0712, 14.4466, 1.62", "-14.2266, 26.8654, 14.7618, 1.99", "-13.6433, 27.9767, 15.1917, 2.21", "-13.1462, 28.8601, 15.525, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.9007, 0.873047, -3.98898, 1.77", "-10.9469, 0.881993, -3.98898, 1.77", "-11.6961, 1.03987, -3.98898, 1.77", "-12.3834, 1.20721, -3.98898, 1.62", "-13.2002, 1.43289, -3.98898, 1.62", "-14.058, 1.70088, -3.98898, 1.84", "-14.6646, 1.9195, -3.98898, 1.92", "-15.2421, 2.15635, -4.00415, 2.14", "-15.9199, 2.48285, -4.03972, 2.14", "-16.5112, 2.82077, -4.09274, 2.14", "-17.0037, 3.15287, -4.17385, 2.14", "-17.7363, 3.71834, -4.34412, 2.14", "-18.3256, 4.22255, -4.55292, 2.14", "-18.6733, 4.53794, -4.69737, 2.21", "-19.0652, 4.91198, -4.89131, 1.99", "-19.5471, 5.39523, -5.17459, 1.99", "-19.9603, 5.82538, -5.46208, 2.14", "-20.6, 6.53571, -6.00452, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2344, 1.39714, 2.65033, 3.17", "26.063, 3.65858, 2.65033, 3.17", "40.8915, 5.92002, 2.65033, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.79877, -25.6247, 7.43177, 1.25", "9.36709, -26.9045, 7.30334, 1.25", "9.52653, -28.6449, 7.05646, 1.03", "9.22459, -30.0989, 6.81155, 0.66", "8.9151, -31.1601, 6.63557, 0.96", "8.62882, -32.264, 6.46915, 1.18", "8.32435, -33.8484, 6.25619, 1.18", "8.13701, -34.8519, 6.10267, 1.47", "7.84494, -36.4541, 5.8901, 0.81", "7.76949, -37.525, 5.79747, 0.81", "8.07258, -38.822, 5.74233, 0.96", "8.64422, -39.8723, 5.77112, 0.88", "9.40053, -40.9911, 5.88069, 1.33", "9.85404, -41.6547, 5.97394, 1.55", "10.3527, -42.4174, 6.1037, 1.33", "10.7822, -43.2404, 6.25021, 0.81", "11.2971, -44.749, 6.4929, 0.66", "11.6263, -46.2902, 6.69161, 0.96", "11.7579, -47.3083, 6.77809, 1.4", "11.8297, -48.1413, 6.8156, 1.4", "11.8801, -48.9858, 6.86485, 1.4", "11.9048, -50.4413, 7.0064, 0.96", "11.9, -51.1318, 7.11922, 0.81", "11.872, -52.414, 7.48118, 0.81", "11.8368, -53.355, 7.82252, 0.74", "11.748, -55.2796, 8.6575, 0.74", "11.695, -56.7405, 9.30414, 0.88", "11.6851, -57.9373, 9.81524, 0.88", "11.7622, -59.2741, 10.2912, 1.47", "11.9809, -60.5154, 10.5455, 0.81", "12.4449, -61.9473, 10.5397, 0.59", "13.1199, -63.5307, 10.3057, 0.88", "13.6324, -64.6586, 10.1138, 0.88", "14.1956, -66.0097, 9.90382, 0.66", "14.7266, -67.5047, 9.73347, 0.59", "15.0468, -68.7721, 9.70268, 0.59", "15.2494, -70.1653, 9.80143, 0.59", "15.3513, -71.532, 10.0532, 0.88", "15.361, -73.0828, 10.4724, 0.66", "15.3126, -74.3234, 10.8799, 1.03", "15.1962, -75.9181, 11.4574, 1.25", "15.0545, -77.5014, 12.032, 1.25", "14.9756, -78.5366, 12.376, 1.84", "14.9413, -79.5383, 12.6943, 2.28", "14.9346, -80.412, 13.0375, 1.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.79877, -25.6247, 7.43177, 0.74", "8.28384, -28.0809, 10.4428, 0.74", "8.31185, -28.5883, 11.313, 0.74", "8.3678, -29.0217, 12.151, 0.74", "8.44371, -29.7194, 13.463, 1.11", "8.48263, -30.08, 14.0724, 1.11", "8.59416, -31.0045, 15.4084, 0.66", "8.95319, -32.9012, 17.6897, 1.4", "9.07778, -33.7178, 18.649, 0.96", "9.12006, -34.3995, 19.3976, 1.18", "9.0814, -35.3408, 20.2748, 0.88", "8.88718, -36.6325, 21.2494, 0.66", "8.5148, -38.1053, 22.0546, 0.66", "8.25249, -38.9874, 22.4248, 0.59", "7.84781, -40.2915, 22.9531, 0.74", "7.55297, -41.1206, 23.3182, 1.03", "7.18527, -41.9043, 23.7008, 1.18", "6.59246, -42.8936, 24.1896, 1.4" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-16.392, -14.7354, -9.24028, 0.81", "-18.0347, -15.7799, -9.12327, 0.81", "-19.0381, -16.4589, -8.8894, 0.88", "-19.9901, -17.1759, -8.57021, 1.03", "-20.749, -17.8325, -8.25658, 1.03", "-21.4666, -18.5775, -7.89739, 0.52", "-22.0887, -19.4143, -7.45186, 0.52", "-22.6189, -20.5594, -6.6989, 0.74", "-22.7581, -21.0566, -6.36606, 0.96", "-22.8652, -21.6597, -5.95812, 0.59", "-22.9805, -22.4454, -5.45405, 0.44", "-23.2116, -23.9535, -4.65729, 0.44", "-23.3453, -24.575, -4.33943, 0.81", "-23.5967, -25.2811, -3.96448, 0.96", "-24.0462, -26.2105, -3.41467, 1.03", "-24.3749, -26.8119, -3.05336, 0.96", "-24.8245, -27.6411, -2.58814, 0.37", "-25.5452, -29.1949, -1.79032, 0.37", "-25.8484, -30.0255, -1.37526, 0.29", "-26.0498, -30.8054, -1.02632, 0.37", "-26.2771, -31.9081, -0.600993, 0.37", "-26.466, -33.0433, -0.203232, 0.81", "-26.6347, -34.1374, 0.130368, 1.25", "-26.6902, -34.4668, 0.201329, 1.55", "-26.9786, -35.7371, 0.459483, 0.37", "-27.2814, -36.4423, 0.594939, 0.37", "-27.5302, -36.7602, 0.657675, 0.44", "-28.2024, -37.392, 0.767706, 0.59", "-28.6462, -37.7694, 0.811882, 0.66", "-29.1979, -38.2206, 0.86022, 0.37", "-29.8325, -38.7355, 0.907323, 0.59", "-30.4898, -39.3394, 0.920567, 0.88", "-30.8622, -39.7213, 0.907063, 1.03", "-31.5208, -40.5205, 0.943346, 0.37", "-31.7322, -40.7962, 0.981852, 0.37", "-32.1264, -41.3039, 1.0952, 0.37", "-32.6509, -41.9555, 1.28798, 0.66", "-33.0542, -42.4125, 1.44922, 0.88", "-34.447, -43.8316, 1.97719, 0.29", "-35.0434, -44.4179, 2.18658, 0.29", "-35.6242, -45.0354, 2.37633, 0.96", "-35.9291, -45.3913, 2.47489, 1.33", "-36.4756, -46.1295, 2.64458, 1.11", "-37.1055, -47.1022, 2.8958, 0.59", "-37.6552, -48.0254, 3.03649, 0.37", "-38.0926, -48.8519, 3.39631, 0.66", "-38.3658, -49.3354, 3.74711, 0.52", "-38.7128, -49.8829, 4.30443, 0.29", "-39.5409, -51.0768, 5.80088, 0.29", "-40.2029, -51.8944, 7.0585, 0.81", "-41.8956, -53.4562, 10.2977, 0.88", "-42.3174, -53.7296, 11.0622, 0.29", "-42.5539, -53.8379, 11.4643, 0.29", "-43.0835, -53.9835, 12.3594, 0.66", "-43.326, -54.0177, 12.7946, 0.66", "-48.1768, -62.9784, 17.7947, 0.66", "-53.6334, -71.7996, 22.403, 0.66", "-59.3678, -80.4912, 26.9194, 0.66", "-64.2314, -89.7383, 31.3535, 0.66", "-67.4805, -98.2285, 38.1496, 0.66", "-69.4488, -107.151, 44.8832, 0.66", "-71.8618, -115.148, 52.5674, 0.66", "-72.135, -124.029, 59.6295, 0.66", "-71.0065, -132.565, 67.0257, 0.66", "-67.9588, -141.348, 73.5358, 0.66", "-64.3137, -150.456, 79.2443, 0.66", "-61.0136, -159.518, 85.229, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-16.392, -14.7354, -9.24028, 1.03", "-15.6885, -16.0819, -9.42204, 1.03", "-14.4326, -18.0881, -9.51809, 0.81", "-13.5754, -19.5011, -9.52979, 1.03", "-12.6762, -21.1469, -9.4868, 0.88", "-12.0461, -22.4452, -9.43657, 1.11", "-11.5803, -23.5887, -9.39292, 0.74", "-11.1763, -24.872, -9.28385, 0.52", "-10.9403, -26.6171, -9.12907, 0.88", "-11.0314, -27.8605, -9.11976, 1.47", "-11.231, -28.6896, -9.12914, 1.25", "-11.6583, -29.9994, -9.12569, 1.25", "-12.0493, -31.0437, -9.10005, 0.81", "-12.7143, -32.7097, -8.96035, 0.66", "-13.2659, -34.2388, -8.68254, 0.66", "-13.8284, -36.0636, -8.20619, 0.96", "-14.0698, -36.9967, -7.88085, 1.11", "-14.2552, -37.8657, -7.51662, 1.11", "-14.4844, -39.0729, -6.94896, 0.74", "-14.7138, -40.3212, -6.31563, 0.52", "-14.9226, -41.2873, -5.84068, 0.74", "-15.1304, -41.9945, -5.55988, 1.11", "-15.579, -43.0216, -5.24771, 0.96", "-16.2567, -44.0373, -5.04051, 0.74", "-16.7946, -44.6296, -4.96233, 0.74", "-17.3159, -45.1244, -4.8843, 0.74", "-18.0455, -45.813, -4.73609, 0.59", "-18.9259, -46.6873, -4.5015, 0.52", "-19.7819, -47.6514, -4.17612, 0.52", "-20.5323, -48.6684, -3.79342, 0.74", "-21.3488, -50.1058, -3.21906, 0.88", "-21.7178, -50.9982, -2.84766, 1.18", "-21.9063, -51.707, -2.56566, 1.4", "-22.0748, -52.6717, -2.2057, 1.62", "-22.1616, -53.2838, -2.00175, 1.77", "-22.2947, -54.1292, -1.77197, 1.4", "-22.5119, -55.1626, -1.54166, 0.66", "-22.8495, -56.3108, -1.3308, 0.44", "-23.231, -57.2271, -1.19848, 0.81", "-23.5598, -57.8537, -1.16172, 1.25", "-23.7559, -58.221, -1.1794, 1.4", "-23.9416, -58.5732, -1.24046, 1.4", "-24.3516, -59.3343, -1.41973, 0.88", "-25.0044, -60.5581, -1.747, 0.59", "-25.6245, -61.7861, -2.09782, 0.59", "-26.3921, -63.3356, -2.54086, 0.88", "-27.0888, -64.7912, -2.95057, 0.52", "-27.5785, -65.8988, -3.2673, 0.52", "-27.7998, -66.5053, -3.44044, 1.11", "-27.9985, -67.2254, -3.63132, 1.55", "-28.1305, -67.9247, -3.75582, 1.77", "-28.1996, -68.6563, -3.82126, 1.4", "-28.1781, -70.1149, -3.85148, 0.66", "-28.0553, -71.4817, -3.83302, 0.44", "-27.9005, -72.6399, -3.76604, 0.44", "-27.6833, -73.9536, -3.62982, 0.44", "-27.5896, -74.5229, -3.5423, 0.88", "-27.5244, -75.0054, -3.42437, 1.25", "-27.4803, -75.5542, -3.24312, 1.55", "-27.4927, -75.9489, -3.10113, 1.55", "-27.6091, -76.7679, -2.81525, 1.25", "-27.9946, -78.12, -2.35107, 0.59", "-28.4641, -79.2371, -2.02438, 0.59", "-28.7785, -79.7869, -1.85499, 0.96", "-29.3024, -80.5143, -1.61849, 0.96", "-29.8904, -81.1845, -1.38393, 0.81", "-31.0628, -82.3001, -0.954194, 0.37", "-32.2332, -83.2341, -0.572676, 0.37", "-33.4001, -84.0839, -0.209121, 1.18", "-33.8294, -84.3737, -0.0556007, 1.62", "-34.2947, -84.6536, 0.127122, 1.62", "-35.0773, -85.0704, 0.484918, 1.33", "-36.33, -85.6527, 1.13831, 0.44", "-37.4581, -86.1179, 1.77195, 0.44", "-38.3429, -86.4828, 2.2559, 0.66", "-39.393, -86.9241, 2.83391, 0.66", "-40.4266, -87.3841, 3.40264, 0.44", "-41.0638, -87.6947, 3.75163, 0.81", "-41.55, -87.9628, 4.0028, 1.25", "-42.1247, -88.3084, 4.27275, 1.55", "-42.7314, -88.7113, 4.52592, 1.25", "-43.4358, -89.2217, 4.80414, 0.52", "-44.1305, -89.7486, 5.04844, 0.37", "-44.8505, -90.2991, 5.37117, 0.29", "-45.8206, -91.009, 5.92691, 0.81", "-46.3288, -91.356, 6.29661, 1.25", "-46.8496, -91.6943, 6.79755, 0.81", "-47.5508, -92.1511, 7.61427, 0.37", "-48.5712, -92.8494, 8.99139, 0.37", "-48.9929, -93.1518, 9.6049, 0.74", "-49.5515, -93.5713, 10.4147, 0.81", "-50.3057, -94.1358, 11.4508, 0.29", "-50.7562, -94.4973, 12.0391, 0.88", "-50.9817, -94.7204, 12.3123, 1.18", "-51.3739, -95.2364, 12.6875, 1.18", "-51.7625, -95.8398, 12.9807, 0.81", "-52.3386, -96.8302, 13.3059, 0.29", "-52.8143, -97.6853, 13.5155, 0.29", "-53.1884, -98.407, 13.6977, 0.29", "-53.4164, -98.9109, 13.8116, 0.66", "-53.6681, -99.5527, 13.9499, 0.96", "-53.9258, -100.28, 14.0712, 0.96", "-54.2086, -101.093, 14.173, 0.52", "-54.646, -102.256, 14.2812, 0.37", "-54.9426, -103.058, 14.3109, 0.74", "-55.2632, -103.934, 14.3045, 0.44", "-55.5949, -104.803, 14.2625, 1.11", "-55.821, -105.331, 14.2163, 1.11", "-56.1442, -105.928, 14.1426, 0.81", "-56.9681, -107.225, 13.9931, 0.37", "-57.4963, -107.915, 13.962, 0.66", "-57.7671, -108.223, 13.9626, 0.96", "-58.231, -108.687, 14.048, 0.96", "-59.1011, -109.403, 14.5499, 0.29", "-59.6475, -109.65, 15.3813, 0.29", "-60.0289, -109.758, 16.2369, 0.96", "-60.1916, -109.79, 16.7234, 1.25", "-60.6544, -109.851, 18.2532, 0.44", "-61.4634, -109.883, 21.2722, 0.81", "-62.5885, -109.78, 26.074, 0.22", "-62.929, -109.697, 27.6493, 1.18", "-63.2318, -109.586, 29.2852, 1.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-56.3641, -117.665, 9.03324, 0.29", "-55.1295, -118.147, 9.03731, 0.29", "-54.1967, -118.511, 9.04039, 0.29", "-53.0684, -118.951, 9.04412, 0.29", "-52.1877, -119.295, 9.04702, 0.15", "-51.4981, -119.564, 9.0493, 0.29", "-51.1177, -119.712, 9.05055, 0.29", "-44.1824, -123.198, 8.25189, 0.29", "-37.867, -127.781, 8.18988, 0.29", "-31.6211, -132.368, 7.27156, 0.29", "-25.6943, -137.421, 7.75418, 0.29", "-20.2478, -142.993, 7.32982, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-56.3641, -117.665, 9.03324, 0.29", "-57.4427, -118.696, 8.98675, 0.29", "-58.5417, -119.722, 8.93213, 0.29", "-59.6539, -120.76, 8.87685, 0.29", "-60.9866, -122.004, 8.81063, 0.29", "-61.7364, -122.704, 8.77336, 0.29", "-62.523, -123.438, 8.73427, 0.81", "-63.0471, -123.864, 8.68166, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-13.1462, 28.8601, 15.525, 0.66", "-15.2186, 29.6556, 16.2887, 0.66", "-16.2893, 30.0351, 16.6535, 0.66", "-17.3095, 30.3601, 16.9358, 0.59", "-18.1295, 30.6237, 17.167, 1.11", "-18.6752, 30.8163, 17.3795, 1.4", "-19.0497, 30.9698, 17.5564, 1.4", "-19.7277, 31.2913, 17.9158, 0.66", "-20.2144, 31.7235, 18.4223, 0.44", "-20.5369, 32.2187, 18.9961, 0.44", "-21.073, 33.4193, 20.29, 0.74", "-21.3864, 34.1918, 21.0597, 0.52", "-21.6051, 34.6462, 21.4797, 0.44", "-21.8965, 35.1708, 21.9284, 0.74", "-22.2866, 35.7049, 22.3813, 0.74", "-22.6519, 36.0411, 22.645, 0.74", "-23.1392, 36.3662, 22.9413, 0.29", "-23.9947, 36.8274, 23.7005, 0.29", "-24.1417, 36.9064, 23.8717, 0.81", "-24.5784, 37.1598, 24.4667, 0.81", "-24.9934, 37.4461, 25.0745, 0.74", "-25.6086, 37.9266, 25.9965, 0.81", "-26.8294, 39.0005, 27.8334, 1.69", "-27.6264, 39.7617, 28.9703, 0.52", "-27.93, 40.0744, 29.3896, 0.59", "-28.5404, 40.7132, 30.1574, 0.59", "-28.9684, 41.1486, 30.653, 0.66", "-29.3178, 41.4846, 30.9828, 1.03", "-29.6639, 41.7775, 31.2374, 1.03", "-30.6336, 42.4682, 31.9717, 0.81", "-31.1582, 42.8145, 32.3908, 0.59", "-31.9178, 43.2965, 33.0002, 0.52", "-32.4125, 43.6448, 33.3798, 0.52", "-33.0175, 44.1371, 33.8035, 0.59", "-33.4712, 44.5335, 34.1002, 0.88", "-33.8879, 44.9534, 34.3008, 1.03", "-34.3772, 45.5541, 34.5056, 0.59", "-34.758, 46.1026, 34.6116, 0.52", "-35.0609, 46.5996, 34.6817, 0.81", "-40.2758, 52.4027, 39.1257, 0.81", "-45.5408, 57.4709, 44.3422, 0.81", "-50.1877, 62.6603, 50.0075, 0.81", "-53.4347, 68.3673, 56.1318, 0.81", "-57.1486, 74.4632, 61.5785, 0.81", "-60.1327, 80.2478, 67.7633, 0.81", "-61.9197, 86.4528, 74.0023, 0.81", "-61.8029, 92.2683, 80.8422, 0.81", "-61.1983, 98.3084, 87.4581, 0.81", "-61.4901, 104.443, 94.008, 0.81", "-62.513, 110.376, 100.669, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-13.1462, 28.8601, 15.525, 1.11", "-12.7615, 29.8119, 15.2315, 1.11", "-12.4752, 30.8867, 14.8886, 0.81", "-12.3331, 32.043, 14.4558, 0.74", "-12.3253, 32.6415, 14.217, 1.11", "-12.3596, 33.1898, 14.0071, 1.18", "-12.4499, 34.0213, 13.7143, 1.47", "-12.5765, 34.6304, 13.5008, 1.47", "-12.8416, 35.6894, 13.16, 1.18", "-13.0885, 36.7386, 12.8876, 0.96", "-13.2499, 37.6419, 12.6975, 1.03", "-13.3421, 38.5714, 12.5369, 1.4", "-13.3526, 39.6026, 12.4046, 1.4", "-13.2289, 40.7797, 12.2987, 1.03", "-13.0066, 41.7378, 12.2468, 1.03", "-12.7351, 42.5527, 12.2135, 1.25", "-12.2443, 43.7098, 12.1262, 1.11", "-11.8367, 44.5598, 12.0385, 1.11", "-11.2866, 45.6695, 11.8474, 1.11", "-10.6671, 46.9349, 11.523, 1.11", "-10.2767, 47.8089, 11.2206, 1.11", "-9.81897, 49.0361, 10.6815, 1.33", "-9.65721, 49.7903, 10.2624, 1.03", "-9.63743, 51.0805, 9.38791, 1.18", "-9.74175, 51.5714, 9.01209, 1.47", "-9.96448, 52.0747, 8.61871, 1.47", "-10.2494, 52.5148, 8.3051, 1.69", "-11.2096, 53.6628, 7.67767, 0.88", "-11.8452, 54.3524, 7.4178, 1.11", "-12.4505, 55.0315, 7.33576, 1.11", "-13.0803, 55.832, 7.36779, 0.96", "-13.6151, 56.6787, 7.50907, 0.88", "-14.0674, 57.6696, 7.75785, 1.18", "-14.3659, 58.6323, 8.06876, 1.47", "-14.6488, 60.0739, 8.57147, 1.4", "-14.75, 61.0602, 8.91333, 0.88", "-14.7945, 62.3855, 9.34091, 0.81", "-14.7605, 63.6527, 9.73734, 1.69", "-14.7155, 64.1966, 9.91138, 1.99", "-14.6487, 64.7802, 10.0932, 1.99", "-14.6001, 65.2496, 10.2117, 2.21", "-14.5424, 66.1248, 10.4637, 1.99" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-20.6, 6.53571, -6.00452, 1.4", "-20.6833, 7.53649, -7.16979, 1.4", "-20.686, 7.72174, -8.13674, 1.4", "-20.685, 7.82965, -8.8, 1.33", "-20.7192, 8.09059, -10.1267, 1.62", "-20.7714, 8.36834, -11.1905, 1.25", "-20.9355, 9.07789, -13.3353, 1.03", "-21.276, 9.97281, -16.085, 1.4", "-21.4019, 10.2647, -16.8277, 1.4", "-21.5882, 10.6511, -17.5934, 1.11", "-21.864, 11.2239, -18.3814, 1.33", "-22.1624, 11.7596, -18.9411, 1.69", "-22.5732, 12.3718, -19.4271, 1.69", "-22.9282, 12.8187, -19.7581, 1.69", "-23.6979, 13.6658, -20.6029, 0.74", "-24.0037, 13.9948, -21.018, 0.74", "-24.3896, 14.4061, -21.686, 0.59", "-24.9252, 15.0499, -22.8707, 1.18", "-25.2899, 15.5617, -23.9863, 1.18", "-25.5569, 16.0308, -25.0606, 1.18", "-25.6899, 16.3715, -25.8642, 1.18", "-25.8075, 16.8813, -27.1817, 0.81", "-25.8557, 17.1876, -27.9463, 0.66", "-25.993, 18.0277, -29.89, 0.66", "-26.0458, 18.208, -30.275, 1.25", "-26.3415, 18.8307, -31.4622, 1.47", "-26.8643, 19.5734, -32.6529, 0.59", "-27.4973, 20.3581, -33.576, 1.03", "-27.8774, 20.8093, -33.974, 1.4", "-28.2291, 21.2383, -34.2433, 1.47", "-28.858, 22.063, -34.6906, 1.11", "-29.5232, 23.0909, -35.1278, 0.81", "-29.9639, 24.0197, -35.5433, 0.96", "-30.0845, 24.6672, -35.9209, 1.25", "-30.0855, 25.1768, -36.2585, 1.55", "-30.0283, 25.8328, -36.7182, 1.55", "-29.9284, 26.5502, -37.2353, 0.96", "-29.7885, 27.6114, -38.0037, 0.66", "-29.7876, 28.3633, -38.5262, 0.66", "-29.9196, 28.8756, -38.8278, 0.74", "-30.3756, 29.6275, -39.214, 1.03", "-30.8044, 30.0757, -39.4327, 1.47", "-31.1355, 30.3514, -39.5777, 1.77", "-31.5581, 30.6606, -39.7597, 1.62", "-32.5483, 31.3651, -40.2619, 0.88", "-33.2577, 31.9089, -40.6957, 0.66", "-33.9995, 32.5654, -41.2544, 0.59", "-34.6259, 33.2477, -41.8394, 0.81", "-34.9581, 33.7355, -42.2373, 0.59", "-35.2884, 34.4445, -42.7745, 0.81", "-35.4125, 34.8927, -43.0762, 1.03", "-35.5006, 35.369, -43.3458, 1.03", "-35.5777, 35.9516, -43.6003, 0.74", "-35.6759, 36.7089, -43.8415, 0.52", "-35.7604, 37.2528, -43.9765, 0.52", "-35.9249, 38.0202, -44.1406, 1.11", "-36.1001, 38.6303, -44.2641, 1.4", "-36.4044, 39.5309, -44.4493, 1.4", "-36.5832, 40.0673, -44.5684, 1.03", "-36.7067, 40.5086, -44.6906, 0.74", "-36.8486, 41.2484, -44.9644, 0.59", "-36.8804, 41.7156, -45.2053, 0.52", "-36.8567, 42.2807, -45.5819, 0.52", "-36.7784, 43.0486, -46.215, 0.52", "-36.7059, 43.6245, -46.7253, 0.52", "-36.6522, 44.0812, -47.199, 0.52", "-36.6382, 44.4914, -47.7213, 0.52", "-36.7013, 44.735, -48.0668, 0.52", "-36.8879, 44.9726, -48.4365, 0.81", "-37.213, 45.201, -48.7964, 0.96", "-37.8886, 45.5345, -49.3012, 0.96", "-38.5395, 45.8134, -49.6787, 0.52", "-39.275, 46.1187, -50.0614, 0.81", "-39.6416, 46.2803, -50.2587, 1.18", "-40.033, 46.4816, -50.4865, 1.18", "-40.6723, 46.9252, -50.9085, 0.44", "-41.0399, 47.3046, -51.2171, 0.44", "-41.2929, 47.749, -51.5727, 0.74", "-41.3939, 48.1609, -51.9473, 0.74", "-41.412, 48.5294, -52.286, 0.44", "-41.3725, 49.1411, -52.8246, 0.66", "-41.286, 49.785, -53.3629, 0.96", "-41.2155, 50.285, -53.7698, 0.74", "-41.1363, 51.0774, -54.3736, 0.37", "-41.1069, 51.7342, -54.8258, 0.37", "-41.1328, 52.3809, -55.2279, 0.88", "-41.1818, 52.6715, -55.3709, 1.18", "-41.3435, 53.0639, -55.4971, 1.18", "-41.6165, 53.4498, -55.5951, 1.18", "-41.8972, 53.7848, -55.6657, 1.11", "-42.2351, 54.1737, -55.7539, 0.44", "-42.7628, 54.8088, -55.911, 0.44", "-43.6092, 55.9179, -56.2086, 0.44", "-44.1722, 56.7148, -56.4567, 0.44", "-44.7171, 57.5627, -56.7511, 0.44", "-45.0508, 58.16, -57.0078, 0.44", "-45.3133, 58.7447, -57.3015, 1.47", "-45.4699, 59.2201, -57.5874, 1.47", "-45.6151, 59.835, -58.0133, 1.18", "-45.7641, 60.4087, -58.5115, 0.66", "-45.9513, 61.0521, -59.3763, 0.44", "-46.0237, 61.3892, -59.9532, 0.59", "-46.0727, 61.7589, -60.7769, 0.59", "-46.0893, 62.0397, -61.5421, 0.74", "-46.0947, 62.4641, -63.0696, 1.25", "-46.1159, 62.9515, -65.2914, 0.66", "-46.1496, 63.1348, -66.2995, 0.66", "-46.2198, 63.371, -67.7811, 1.25", "-46.2665, 63.4987, -68.533, 1.62", "-46.4467, 64.0051, -70.9404, 1.4", "-46.5194, 64.2517, -71.9101, 1.11", "-46.6309, 64.6049, -73.1257, 1.25", "-46.7101, 64.9412, -74.1937, 0.96", "-46.7256, 65.2595, -74.9886, 1.18", "-46.7046, 65.6637, -75.8195, 1.4", "-46.6605, 66.2108, -76.7325, 0.37", "-46.6468, 66.6569, -77.5265, 0.37", "-46.6467, 67.0443, -78.2659, 0.88", "-46.6728, 67.3404, -78.8927, 0.88", "-46.7138, 67.6113, -79.5522, 0.88", "-46.8368, 68.0618, -80.8055, 0.37", "-47.0663, 68.5997, -82.2565, 1.03", "-47.2189, 68.839, -82.9873, 1.03", "-47.3425, 68.9604, -83.4654, 1.03", "-47.7417, 69.2152, -84.7193, 0.29", "-48.133, 69.4243, -85.9234, 0.29", "-48.4897, 69.5816, -86.9976, 0.29", "-48.9786, 69.7673, -88.3913, 1.25", "-49.6123, 69.9671, -90.0213, 1.25", "-50.1346, 70.1057, -91.2942, 0.96", "-50.8117, 70.3058, -92.8848, 0.37", "-51.009, 70.3932, -93.3961, 0.66", "-51.2505, 70.5201, -94.0996, 1.03", "-51.4769, 70.7251, -94.9122, 1.03", "-51.822, 71.2489, -96.5702, 0.52", "-51.9479, 71.5229, -97.3114, 1.03", "-52.197, 71.8873, -98.1592, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-20.6, 6.53571, -6.00452, 0.74", "-21.4075, 5.9865, -5.97127, 0.74", "-22.1818, 5.38326, -5.9476, 0.74", "-22.9699, 4.76913, -5.92349, 1.03", "-23.4844, 4.36827, -5.90776, 1.4", "-24.242, 3.77795, -5.88459, 1.84", "-24.7319, 3.39626, -5.86961, 2.14", "-25.0644, 3.03715, -5.85755, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.8915, 5.92002, 2.65033, 0.29", "55.72, 8.18146, 2.65033, 0.29", "70.5486, 10.4429, 2.65033, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "14.9346, -80.412, 13.0375, 0.52", "13.5503, -79.3822, 13.5423, 0.52", "13.0107, -78.9809, 13.7391, 0.52", "12.3269, -78.4722, 13.9885, 1.25", "11.9975, -78.2271, 14.1086, 1.4", "11.3827, -77.7698, 14.3328, 0.37", "11.0014, -77.4861, 14.4719, 0.29", "6.32523, -72.8776, 15.8421, 0.29", "1.38779, -68.341, 15.9861, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "14.9346, -80.412, 13.0375, 0.66", "16.2446, -81.7167, 13.1052, 0.66", "17.4496, -82.8549, 13.2269, 0.59", "18.9656, -84.3225, 13.411, 0.59", "19.6636, -85.0414, 13.5164, 0.88", "20.4591, -85.923, 13.6458, 0.88", "21.4377, -87.1164, 13.7564, 0.52", "22.1923, -88.1532, 13.8001, 0.52", "22.5821, -88.9144, 13.8124, 1.11", "22.7761, -89.8163, 13.7447, 1.47", "22.7532, -90.5178, 13.6385, 1.18", "22.2851, -92.0901, 13.2861, 0.59", "21.8165, -92.9512, 13.1075, 0.59", "21.1496, -93.8773, 12.9842, 0.37", "20.7772, -94.3606, 12.975, 0.59", "20.3241, -94.9769, 13.0289, 0.59", "19.5791, -96.2139, 13.2953, 0.44", "18.9992, -97.9306, 13.902, 0.37", "19.0092, -98.9693, 14.3258, 0.66", "19.2972, -100.039, 14.7982, 0.96", "19.7053, -100.961, 15.2356, 0.74", "20.3746, -102.064, 15.7651, 0.52", "21.3456, -103.342, 16.3626, 0.81", "22.1438, -104.234, 16.7473, 0.96", "22.7132, -104.84, 17.0007, 1.03", "23.6039, -105.804, 17.3528, 0.81", "24.4068, -106.694, 17.6246, 0.74", "25.03, -107.359, 17.7835, 1.11", "25.6732, -107.997, 17.8668, 1.11", "26.5826, -108.856, 17.8907, 0.81", "27.3923, -109.609, 17.8491, 0.52", "28.0005, -110.241, 17.775, 0.74", "28.5838, -110.981, 17.7057, 0.74", "29.234, -112.009, 17.6364, 0.52", "29.6049, -112.769, 17.6062, 0.81", "29.8831, -113.41, 17.6, 0.81", "30.4644, -114.832, 17.6974, 0.59", "30.8989, -115.851, 17.8369, 0.81", "31.2689, -116.69, 18.0646, 0.81", "31.747, -117.705, 18.4667, 0.44", "32.2726, -118.699, 18.9701, 0.81", "32.9393, -119.751, 19.5995, 0.66", "33.7062, -120.724, 20.2459, 0.29", "35.114, -122.312, 21.2614, 0.74", "35.6532, -122.891, 21.6097, 1.25", "36.1274, -123.397, 21.9135, 1.25", "37.1757, -124.596, 22.5621, 0.37", "38.0892, -125.688, 23.0235, 0.37", "39.0993, -126.863, 23.4235, 0.37", "39.6859, -127.47, 23.515, 0.37" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.59246, -42.8936, 24.1896, 0.44", "8.30138, -42.6467, 25.5509, 0.44", "9.13485, -42.5264, 26.2147, 0.29", "10.2299, -42.3682, 27.087, 0.52", "10.797, -42.2863, 27.5388, 0.74", "11.0774, -42.2458, 27.7621, 0.74", "19.9644, -40.9499, 33.9324, 0.74", "29.7295, -38.8406, 38.2824, 0.74", "38.9387, -38.2607, 44.0776, 0.74", "48.0622, -36.8655, 49.8693, 0.74", "57.0225, -35.98, 56.006, 0.74", "66.7173, -36.5624, 60.9457, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "6.59246, -42.8936, 24.1896, 0.44", "6.08424, -44.2574, 25.1352, 0.44", "5.78349, -45.0645, 25.6947, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-61.0136, -159.518, 85.229, 0.29", "-57.9107, -165.449, 90.107, 0.29", "-53.6145, -171.401, 93.9421, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-61.0136, -159.518, 85.229, 0.22", "-69.1844, -164.086, 86.8108, 0.29", "-77.2382, -169.112, 86.7664, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-20.2478, -142.993, 7.32982, 0.37", "-9.15431, -151.071, 4.71859, 0.37", "3.22134, -156.911, 1.91196, 0.37", "15.94, -162.253, -0.285442, 0.37", "27.1062, -169.414, -4.66482, 0.37", "37.789, -176.639, -10.0334, 0.37", "47.0121, -185.596, -15.496, 0.37", "56.1586, -195.207, -19.8675, 0.37", "64.9222, -205.897, -21.8791, 0.37", "73.0328, -217.153, -23.5135, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-20.2478, -142.993, 7.32982, 0.22", "-6.69649, -152.412, 6.96016, 0.37", "7.59533, -160.059, 3.83525, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-63.0471, -123.864, 8.68166, 0.22", "-62.7924, -125.124, 8.65837, 0.22", "-62.597, -126.09, 8.64051, 0.22", "-62.4468, -126.833, 8.62677, 0.37", "-62.22, -127.955, 8.60604, 0.37", "-59.7137, -136.603, 9.85611, 0.37", "-56.2021, -144.921, 10.904, 0.37", "-53.2971, -153.503, 11.632, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-63.0471, -123.864, 8.68166, 0.22", "-64.2714, -125.515, 9.4068, 0.22", "-64.3305, -125.578, 9.43627, 0.44", "-65.0064, -126.167, 9.67496, 0.15", "-65.2417, -126.348, 9.73081, 0.37", "-66.0089, -126.92, 9.871, 0.15", "-66.9661, -127.649, 9.97176, 0.22", "-67.7912, -128.23, 10.0516, 0.22", "-68.5051, -128.754, 10.2727, 0.66", "-69.4013, -129.38, 10.5838, 0.22", "-69.7461, -129.621, 10.7196, 0.88", "-70.5041, -130.173, 11.0924, 0.74", "-71.9604, -131.492, 12.0945, 1.4", "-72.9703, -132.701, 13.3794, 1.18", "-80.1521, -139.789, 18.5598, 1.18", "-86.3849, -147.231, 24.4257, 1.18", "-94.0179, -153.851, 29.5803, 1.18", "-101.842, -161.263, 33.1157, 1.18", "-108.99, -168.689, 37.8495, 1.18", "-116.85, -175.134, 42.8841, 1.18", "-123.848, -181.95, 48.6477, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-62.513, 110.376, 100.669, 0.37", "-65.5561, 115.363, 105.852, 0.37", "-68.4961, 119.035, 112.087, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-62.513, 110.376, 100.669, 0.29", "-67.0661, 117.728, 108.461, 0.37", "-71.0116, 125.493, 116.183, 0.37", "-74.9184, 131.518, 125.343, 0.37", "-77.8275, 138.671, 134.053, 0.37", "-80.7251, 143.742, 144.122, 0.37", "-83.4728, 149.377, 153.929, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-14.5424, 66.1248, 10.4637, 0.96", "-14.3642, 68.4598, 10.0197, 0.96", "-14.3455, 69.9773, 9.63753, 0.81", "-14.4144, 71.1861, 9.30324, 0.81", "-14.5158, 72.4532, 8.82617, 1.18", "-14.7562, 75.2933, 7.66557, 1.18", "-14.8139, 76.0145, 7.37307, 1.18", "-14.9322, 77.1269, 6.85276, 0.81", "-15.0296, 78.0248, 6.49287, 0.81", "-15.2356, 80.2383, 6.01296, 0.66", "-15.3087, 81.4025, 6.1018, 0.96", "-15.3392, 82.4985, 6.50951, 1.11", "-15.3399, 83.5941, 7.12341, 0.81", "-15.2952, 85.3969, 8.34836, 0.59", "-15.2022, 87.2755, 9.68865, 0.81", "-15.1129, 88.8487, 10.8352, 1.11", "-15.0175, 90.0195, 11.5599, 1.25", "-14.8509, 91.8535, 12.4611, 0.59", "-14.7611, 92.7984, 12.7249, 0.59", "-14.6264, 94.6916, 12.5992, 0.59", "-14.6216, 95.8274, 12.1132, 0.44", "-14.7042, 97.8278, 10.807, 1.11", "-14.7444, 98.4172, 10.3443, 1.4", "-14.8459, 99.9174, 9.0439, 0.88", "-14.9372, 101.089, 8.04693, 0.52", "-15.0062, 102.01, 7.34749, 0.52", "-14.9499, 103.186, 6.65148, 0.74", "-14.7062, 104.054, 6.39262, 1.11", "-14.1879, 105.057, 6.3275, 1.33", "-13.7874, 105.613, 6.39727, 1.62", "-13.1319, 106.318, 6.5618, 1.47", "-11.8736, 107.441, 6.92468, 0.96", "-11.0037, 108.14, 7.17632, 0.81", "-10.1438, 108.835, 7.43379, 0.81", "-9.17403, 109.669, 7.73845, 0.66", "-8.21539, 110.596, 8.01975, 0.59", "-7.66503, 111.236, 8.14897, 0.59", "-6.9966, 112.207, 8.26406, 0.44", "-6.38516, 113.316, 8.33361, 0.81", "-5.8372, 114.507, 8.32941, 0.81", "-5.26859, 115.894, 8.26941, 1.03", "-4.68172, 117.319, 8.0791, 1.25", "-4.39032, 117.966, 7.90397, 1.25", "-3.94379, 118.746, 7.48749, 1.18", "-3.17011, 119.896, 6.68716, 0.66", "-2.75372, 120.496, 6.27702, 0.59", "-1.57905, 122.195, 5.1968, 1.25", "-0.627706, 123.61, 4.42334, 1.99", "1.44111, 126.971, 3.01185, 0.59", "1.96084, 127.927, 2.7613, 0.66", "3.15148, 130.622, 2.58421, 0.52", "3.54216, 131.72, 2.71024, 1.03", "3.90883, 133.023, 3.07155, 1.25", "4.2603, 134.533, 3.6158, 0.74", "4.47055, 135.657, 4.06002, 0.59", "4.66142, 136.606, 4.31369, 0.59", "5.01287, 137.938, 4.49362, 0.88", "5.39996, 139.039, 4.6023, 1.11", "5.82425, 139.957, 4.66716, 1.11", "6.43242, 141.016, 4.74721, 1.03", "7.42094, 142.415, 4.90308, 0.66", "8.31526, 143.401, 5.07194, 0.66", "9.82098, 144.674, 5.41096, 0.96", "10.9821, 145.451, 5.6352, 1.4", "11.674, 145.856, 5.74758, 1.4", "12.4728, 146.285, 5.83751, 1.4", "13.6909, 146.94, 5.86521, 0.74", "14.8719, 147.713, 5.66048, 0.37", "16.4021, 148.945, 4.97224, 0.37", "17.0793, 149.541, 4.53633, 0.96", "17.6656, 150.067, 4.10524, 0.96", "18.571, 150.869, 3.36484, 0.66", "19.9056, 152.038, 2.23371, 0.52", "20.657, 152.711, 1.62298, 0.37", "21.4592, 153.454, 1.09836, 0.81", "22.1275, 154.135, 0.701674, 0.52", "23.0428, 155.287, 0.149297, 0.52", "23.5302, 156.088, -0.220334, 0.66", "24.05, 157.427, -0.813862, 0.66", "24.2788, 158.615, -1.42264, 0.66", "24.4059, 160.029, -2.22549, 0.66", "24.4853, 161.513, -3.11897, 0.81", "24.5938, 163.053, -4.10147, 1.03", "24.7084, 163.836, -4.65993, 1.25", "25.0596, 165.172, -5.6919, 0.52", "25.4139, 166.025, -6.3832, 0.37", "26.0414, 166.905, -7.09539, 0.37", "27.2645, 168.094, -8.061, 1.11", "28.201, 168.813, -8.69509, 1.62", "28.6439, 169.104, -8.97752, 1.69", "29.47, 169.638, -9.51618, 1.69", "31.3831, 171.054, -10.9433, 0.44", "32.3663, 171.946, -11.8104, 0.96", "33.2566, 172.941, -12.6968, 1.03", "33.7356, 173.655, -13.2294, 0.88", "34.4042, 174.979, -14.0991, 0.44", "34.969, 176.395, -14.8948, 0.74", "35.2229, 177.265, -15.2955, 1.03", "35.5539, 178.071, -15.656, 1.03", "36.2861, 179.17, -16.2018, 0.59", "37.279, 180.093, -16.7581, 0.59", "38.4151, 180.817, -17.2612, 0.59", "39.2464, 181.275, -17.6121, 0.74", "41.2714, 182.486, -18.5404, 0.74", "41.956, 183.005, -18.9295, 0.96", "42.5453, 183.696, -19.2954, 1.11", "42.857, 184.347, -19.4843, 1.11", "43.2453, 185.646, -19.6957, 0.66", "43.5993, 187.254, -19.7625, 0.52", "43.9392, 188.925, -19.6143, 0.52", "44.5456, 191.578, -19.202, 1.11", "44.7707, 192.543, -19.0159, 1.33", "44.9794, 193.473, -18.805, 1.33", "45.298, 195.097, -18.3963, 0.44", "45.5528, 196.401, -18.0851, 0.44", "45.7771, 197.533, -17.8941, 0.74", "45.9266, 198.4, -17.8395, 0.74", "46.1086, 199.808, -17.7873, 0.52", "46.2719, 201.552, -17.7535, 0.44", "46.3349, 203.196, -17.7742, 0.44", "46.3398, 204.882, -17.8469, 1.18", "46.3311, 205.893, -17.9301, 1.18", "46.3319, 207.238, -18.0971, 0.96", "46.3522, 208.572, -18.3291, 0.44", "46.4798, 210.533, -18.7758, 0.37", "46.5767, 211.293, -18.9962, 0.37", "46.9361, 212.885, -19.526, 0.88", "47.327, 214.073, -19.8632, 1.18", "47.7084, 214.928, -20.0034, 1.18", "48.5919, 216.566, -19.9654, 0.59", "49.4676, 218.064, -19.6385, 0.52", "50.0474, 219.083, -19.2776, 0.44", "51.2231, 221.224, -18.1616, 0.74", "51.8746, 222.473, -17.3842, 1.25", "52.4199, 223.585, -16.6353, 1.55", "52.8379, 224.563, -15.9415, 1.62", "53.3198, 225.806, -15.0335, 0.81", "53.8677, 227.265, -14.0065, 0.37", "54.3246, 228.452, -13.2464, 0.37", "54.6272, 229.354, -12.7013, 0.37", "54.887, 230.436, -12.1112, 0.37", "54.9683, 231.124, -11.8029, 0.37", "55.017, 232.092, -11.503, 0.66", "55.0573, 233.107, -11.1981, 0.96", "55.1092, 233.894, -10.8631, 1.18", "55.2885, 235.129, -10.2241, 0.52", "55.6411, 236.592, -9.40628, 0.66", "56.0119, 237.877, -8.68513, 0.59", "56.8213, 240.421, -7.23148, 0.52", "57.4087, 241.96, -6.31378, 0.96", "57.8399, 242.909, -5.71711, 0.96", "58.4766, 244.001, -5.00244, 0.66", "59.4254, 245.382, -4.07354, 0.44", "60.2181, 246.449, -3.41264, 0.44", "61.0482, 247.494, -2.91247, 0.52", "61.8078, 248.436, -2.49031, 0.52", "63.1618, 250.093, -1.67481, 0.81", "64.0813, 251.289, -1.06338, 0.52", "64.8803, 252.574, -0.398501, 0.52", "65.4341, 253.78, 0.191621, 1.47", "65.6976, 254.519, 0.537686, 1.77", "65.8913, 255.13, 0.80785, 1.77", "66.2806, 256.399, 1.34224, 0.66", "66.9022, 258.009, 1.96719, 0.52", "67.5802, 259.387, 2.50625, 0.52", "68.3578, 260.729, 3.01197, 0.52", "68.8964, 261.619, 3.30787, 0.52", "69.2916, 262.286, 3.49845, 0.81", "69.9228, 263.386, 3.77011, 1.03", "70.4915, 264.596, 3.99228, 1.55", "70.7204, 265.172, 4.09011, 1.33", "71.1858, 266.336, 4.29967, 0.88", "71.6525, 267.278, 4.50553, 0.81", "72.2205, 268.081, 4.7267, 0.59", "73.5466, 269.324, 5.17618, 0.44", "74.6563, 270.04, 5.57454, 0.66", "75.722, 270.603, 5.97766, 0.81", "76.8471, 271.127, 6.42019, 0.44", "77.8354, 271.583, 6.87206, 0.81", "78.5798, 271.963, 7.25767, 0.81", "79.6846, 272.572, 7.87812, 0.52", "80.5233, 273.132, 8.35794, 0.52", "81.4292, 273.806, 8.87535, 0.52", "82.3765, 274.527, 9.39134, 0.37", "83.6345, 275.451, 9.95601, 0.37", "84.6673, 276.161, 10.2901, 0.59", "85.7245, 276.854, 10.5883, 1.18", "86.0909, 277.097, 10.7168, 1.47", "86.8435, 277.644, 11.0296, 1.47", "88.019, 278.585, 11.5738, 0.52", "88.883, 279.339, 12.0243, 0.52", "90.4204, 280.747, 12.8414, 0.96", "91.7361, 281.904, 13.5148, 0.52", "92.97, 282.907, 14.063, 0.96", "93.6646, 283.43, 14.3186, 0.96", "95.0313, 284.292, 14.7017, 0.52", "95.8096, 284.694, 14.7964, 0.37", "97.0818, 285.162, 14.7534, 0.37", "98.0262, 285.386, 14.6713, 0.81", "98.851, 285.505, 14.6141, 0.81", "100.125, 285.654, 14.5496, 0.52", "101.042, 285.77, 14.5348, 0.74", "102.428, 285.996, 14.5634, 0.74", "103.599, 286.238, 14.6151, 0.52", "104.965, 286.679, 14.6613, 0.52", "106.3, 287.354, 14.6923, 0.96", "106.958, 287.838, 14.6948, 1.55", "107.494, 288.332, 14.7049, 1.69", "107.81, 288.671, 14.7166, 1.69", "109.371, 290.347, 14.8314, 0.52", "110.487, 291.443, 14.9598, 0.66", "111.19, 292.014, 15.0804, 0.74", "112.484, 292.85, 15.2868, 0.44", "113.861, 293.641, 15.5073, 0.37", "115.134, 294.303, 15.7262, 1.11", "116.104, 294.775, 15.9208, 1.55", "117.218, 295.369, 16.089, 0.81", "118.639, 296.402, 16.1997, 0.52", "119.353, 297.207, 16.1824, 0.66", "119.689, 297.713, 16.1213, 0.66", "120.386, 298.996, 15.9143, 0.44", "120.99, 300.163, 15.7123, 0.44", "121.71, 301.256, 15.477, 0.52", "122.818, 302.304, 15.1771, 0.74", "123.91, 302.926, 14.8375, 1.11", "124.075, 302.991, 14.784, 1.33", "124.742, 303.183, 14.5717, 1.33", "126.752, 303.696, 13.8718, 0.37", "127.661, 303.934, 13.5251, 0.37", "129.165, 304.419, 12.9296, 0.66", "130.305, 304.908, 12.4698, 0.44", "130.951, 305.247, 12.2086, 0.44", "132.392, 306.095, 11.6655, 1.18", "133.08, 306.525, 11.4929, 1.47", "133.951, 307.077, 11.4057, 1.47", "135.576, 308.159, 11.504, 0.52", "136.354, 308.748, 11.6666, 0.52", "137.583, 309.837, 12.0984, 0.52", "138.921, 311.238, 12.7939, 0.88", "139.766, 312.292, 13.3333, 0.66", "140.726, 313.703, 14.0718, 0.96", "141.499, 315.006, 14.7652, 0.96", "142.208, 316.229, 15.3811, 0.96", "142.766, 317.152, 15.8184, 0.96", "143.41, 318.026, 16.1906, 0.96", "144.166, 318.74, 16.5374, 0.96", "145.351, 319.492, 16.9827, 0.37", "146.7, 320.155, 17.4121, 0.37", "147.926, 320.688, 17.794, 0.66", "149.0, 321.169, 18.1272, 1.33", "149.773, 321.57, 18.3691, 1.33", "150.776, 322.289, 18.6963, 0.52", "151.862, 323.254, 19.062, 0.52", "152.358, 323.747, 19.232, 0.88", "153.0, 324.351, 19.4097, 0.88", "153.91, 325.071, 19.5977, 0.88", "155.17, 325.824, 19.8285, 0.44", "156.462, 326.428, 20.0306, 0.44", "157.925, 326.899, 20.2231, 0.81", "159.605, 327.259, 20.4166, 1.47", "160.365, 327.336, 20.4901, 1.77", "161.699, 327.319, 20.5867, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 19
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-14.5424, 66.1248, 10.4637, 0.52", "-16.0118, 66.7844, 10.1617, 0.52", "-17.1134, 67.3773, 9.95834, 0.52", "-18.3761, 68.2139, 9.73393, 0.52", "-19.2527, 68.9262, 9.57259, 0.74", "-19.8429, 69.5308, 9.42223, 0.74", "-20.4099, 70.2565, 9.17264, 0.59", "-20.6267, 70.7886, 8.95457, 0.37", "-20.7942, 71.5882, 8.60428, 0.37", "-20.8776, 72.4165, 8.261, 0.37", "-20.9654, 73.5639, 7.82641, 0.37", "-21.1649, 74.9272, 7.37772, 0.37", "-21.3754, 75.4512, 7.27725, 0.44", "-21.8071, 75.9631, 7.30732, 0.59", "-22.2434, 76.3068, 7.40024, 0.59", "-23.698, 77.2474, 7.79444, 0.88", "-24.3813, 77.6284, 8.01171, 1.03", "-25.7109, 78.3044, 8.42471, 0.37", "-26.6729, 78.7654, 8.65538, 0.44", "-27.3775, 79.1075, 8.75111, 0.74", "-28.037, 79.4514, 8.77161, 0.74", "-29.0334, 80.055, 8.67099, 0.44", "-29.8357, 80.6641, 8.49303, 0.29", "-30.2719, 81.1678, 8.25041, 0.29", "-30.7785, 82.1097, 7.66644, 1.03", "-30.9487, 82.666, 7.25979, 1.4", "-31.0326, 83.1304, 6.89807, 1.4", "-31.1447, 84.0471, 6.16701, 0.96", "-31.3311, 85.6225, 4.97903, 0.52", "-31.4425, 86.3319, 4.47697, 0.52", "-31.6763, 87.3923, 3.81053, 0.52", "-31.8953, 87.9262, 3.57105, 0.52", "-32.4632, 88.6805, 3.54571, 0.52", "-33.2348, 89.4183, 3.75544, 0.88", "-33.6975, 89.8158, 3.92381, 1.25", "-34.2652, 90.3099, 4.14324, 1.47", "-35.2206, 91.2116, 4.51711, 0.59", "-36.0158, 92.0928, 4.76204, 0.37", "-36.8342, 93.1915, 4.93443, 0.29", "-37.2331, 93.8228, 4.96223, 0.59", "-37.6778, 94.6227, 4.92431, 0.88", "-38.1305, 95.4708, 4.82948, 1.11", "-38.6505, 96.4305, 4.69637, 1.33", "-39.0239, 97.0899, 4.61355, 1.03", "-39.5441, 97.9594, 4.52999, 0.81", "-40.1042, 98.8167, 4.47451, 0.52", "-41.0854, 100.296, 4.42441, 0.52", "-41.7514, 101.331, 4.39241, 0.52", "-42.0697, 101.851, 4.38106, 0.66", "-42.4146, 102.491, 4.35002, 0.66", "-42.8703, 103.55, 4.27455, 0.37", "-43.219, 104.683, 4.1761, 0.37", "-43.4413, 105.731, 4.05644, 0.88", "-43.5506, 106.313, 3.99876, 0.88", "-43.7982, 107.471, 3.8952, 0.37", "-44.0386, 108.325, 3.83898, 0.29", "-44.4655, 109.547, 3.80191, 0.81", "-44.6588, 110.067, 3.83371, 1.18", "-44.9957, 110.986, 3.96304, 1.18", "-45.2823, 111.859, 4.11889, 0.59", "-45.615, 113.124, 4.34157, 0.44", "-45.8257, 114.506, 4.53161, 0.44", "-45.8872, 115.98, 4.647, 1.11", "-45.87, 116.501, 4.64938, 1.11", "-45.8079, 117.308, 4.59966, 0.81", "-45.704, 118.54, 4.47377, 0.52", "-45.6794, 119.492, 4.30325, 0.52", "-45.7819, 120.377, 4.08832, 0.44", "-45.9836, 121.118, 3.88953, 0.44", "-46.2639, 121.832, 3.72057, 0.52", "-46.5758, 122.489, 3.58837, 0.81", "-47.1559, 123.634, 3.42027, 1.11", "-47.4905, 124.273, 3.34119, 1.11", "-47.9269, 125.164, 3.29251, 0.81", "-48.357, 126.106, 3.29242, 0.37", "-48.8353, 127.245, 3.35774, 0.37", "-49.2741, 128.384, 3.49685, 0.29", "-49.5659, 129.224, 3.67844, 0.88", "-49.914, 130.366, 3.97919, 1.55", "-50.0638, 130.934, 4.14658, 1.55", "-50.2775, 131.824, 4.40723, 1.18", "-50.5245, 132.817, 4.63861, 0.81", "-50.9178, 134.291, 4.95816, 0.44", "-51.3749, 135.82, 5.28769, 0.29", "-51.723, 136.763, 5.4938, 0.29", "-52.1772, 137.837, 5.74874, 1.25", "-52.8767, 139.21, 6.17412, 0.29", "-53.6352, 140.458, 6.68638, 0.29", "-54.2173, 141.268, 7.10549, 0.29", "-54.8048, 141.997, 7.58686, 0.59", "-55.1084, 142.358, 7.86291, 0.88", "-56.0004, 143.519, 8.81561, 0.44", "-56.2702, 143.955, 9.13596, 0.29", "-56.5357, 144.542, 9.43444, 0.44", "-56.7093, 145.125, 9.65673, 0.29", "-56.8631, 146.253, 10.0374, 0.29", "-56.872, 147.037, 10.2868, 0.29", "-56.8343, 147.88, 10.5098, 0.66", "-56.8197, 148.388, 10.6519, 0.81", "-56.8209, 149.059, 10.8513, 0.81", "-56.8698, 150.309, 11.2226, 0.29", "-56.9585, 151.36, 11.5239, 0.37", "-57.2042, 152.798, 11.9473, 0.37", "-57.4409, 153.671, 12.1422, 0.37", "-57.8207, 154.843, 12.3033, 1.33", "-58.0243, 155.421, 12.3356, 1.55", "-58.1651, 155.821, 12.3104, 1.55", "-58.3663, 156.405, 12.2143, 1.18", "-59.0315, 158.262, 11.7365, 0.37", "-59.3438, 158.942, 11.4677, 0.59", "-59.7383, 159.6, 11.0994, 0.59", "-60.2258, 160.258, 10.6377, 0.29", "-60.695, 160.786, 10.1, 0.29", "-61.1948, 161.301, 9.47018, 0.29", "-61.958, 162.04, 8.47894, 0.59", "-62.3218, 162.391, 7.99849, 0.59", "-63.3652, 163.471, 6.53487, 0.88", "-64.5109, 164.905, 4.72585, 0.44", "-65.0243, 165.776, 3.72435, 0.29", "-65.1628, 166.078, 3.3983, 0.81", "-65.2835, 166.389, 3.08877, 1.11", "-65.5843, 167.168, 2.33535, 0.81", "-66.0819, 168.183, 1.33494, 0.15", "-66.4357, 168.652, 0.813431, 0.15", "-66.7883, 168.982, 0.28301, 0.15", "-67.0798, 169.224, -0.220692, 0.66", "-67.3012, 169.405, -0.656711, 0.81", "-68.024, 170.048, -2.14819, 0.15", "-68.9825, 170.946, -4.1125, 0.66", "-69.2301, 171.199, -4.6199, 0.96", "-69.6965, 171.762, -5.62954, 0.81", "-70.4879, 172.791, -7.34341, 0.29", "-70.8795, 173.327, -8.1431, 0.29", "-71.3885, 174.02, -9.04408, 0.29", "-72.1417, 174.812, -9.99313, 1.18", "-72.6317, 175.225, -10.4624, 1.18", "-73.7753, 176.065, -11.316, 0.37", "-74.4008, 176.493, -11.7061, 0.37", "-75.0875, 176.972, -12.1201, 0.88", "-75.9474, 177.67, -12.6508, 0.96", "-77.1895, 178.849, -13.4656, 0.44", "-77.7702, 179.439, -13.8664, 0.66", "-78.2569, 179.947, -14.2038, 0.37", "-78.8086, 180.473, -14.5827, 0.37", "-79.6617, 181.278, -15.1848, 0.44", "-80.4584, 182.061, -15.7591, 0.37", "-81.6376, 183.204, -16.5916, 0.66", "-82.2347, 183.701, -16.9794, 0.66", "-83.1187, 184.287, -17.5092, 0.29", "-83.9653, 184.72, -17.9465, 0.52", "-84.695, 185.026, -18.2704, 0.59", "-85.8652, 185.486, -18.7653, 0.29", "-86.7352, 185.846, -19.1609, 0.29", "-87.8858, 186.364, -19.6733, 0.29", "-88.7491, 186.767, -20.0836, 0.44", "-89.3378, 187.01, -20.3601, 0.74", "-90.242, 187.385, -20.7647, 0.74", "-91.4374, 187.883, -21.2574, 1.11", "-92.2623, 188.26, -21.5854, 1.62", "-93.9156, 189.06, -22.1946, 0.88", "-95.2095, 189.678, -22.6598, 0.37", "-96.3257, 190.174, -23.0513, 0.29", "-97.1478, 190.506, -23.3214, 0.29", "-97.7716, 190.751, -23.4975, 0.81", "-98.2622, 190.946, -23.6204, 1.18", "-98.8548, 191.214, -23.7224, 0.88", "-100.029, 191.895, -23.9223, 0.29", "-100.632, 192.358, -24.1009, 0.29", "-101.182, 192.913, -24.3206, 0.59", "-101.434, 193.209, -24.4789, 0.88", "-101.696, 193.572, -24.7278, 0.59", "-101.988, 194.004, -25.1873, 0.37", "-102.469, 194.71, -26.1875, 0.37", "-102.746, 195.085, -26.8114, 0.74", "-103.316, 195.772, -28.1154, 0.52", "-103.789, 196.289, -29.1811, 1.11", "-105.102, 197.506, -32.016, 1.25", "-106.073, 198.273, -34.0575, 0.66", "-106.785, 198.747, -35.4783, 0.44", "-107.62, 199.227, -37.0663, 1.03", "-108.385, 199.59, -38.3737, 1.03", "-109.917, 200.121, -40.6569, 0.29", "-110.795, 200.321, -41.7627, 0.29", "-111.472, 200.438, -42.5267, 1.25", "-111.704, 200.479, -42.7692, 1.69", "-112.263, 200.596, -43.3152, 1.69", "-113.785, 200.979, -44.6861, 0.29", "-114.931, 201.382, -45.6531, 0.29", "-115.541, 201.667, -46.1737, 0.29", "-116.362, 202.128, -46.9193, 0.29", "-117.228, 202.624, -47.7234, 0.81", "-117.729, 202.911, -48.1713, 0.88", "-118.735, 203.487, -48.9887, 0.29", "-119.735, 203.997, -49.7535, 0.81", "-120.238, 204.208, -50.1106, 0.81", "-121.015, 204.491, -50.6417, 0.22", "-121.502, 204.69, -50.953, 0.52", "-121.714, 204.783, -51.0904, 0.59", "-122.801, 205.216, -51.6743, 0.22", "-123.212, 205.333, -51.8607, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-52.197, 71.8873, -98.1592, 0.52", "-51.6479, 72.551, -99.5462, 0.52", "-51.2892, 73.0295, -100.533, 0.81", "-51.0666, 73.3424, -101.264, 0.59", "-50.5599, 73.9552, -102.868, 0.96", "-50.2375, 74.3023, -103.907, 0.96", "-49.8664, 74.7102, -105.15, 0.52", "-49.6716, 74.9509, -105.979, 0.52", "-49.3757, 75.3288, -107.476, 0.52", "-49.194, 75.5584, -108.378, 0.52", "-48.9333, 75.8886, -109.462, 0.66", "-48.79, 76.131, -110.16, 0.96", "-48.6235, 76.4837, -111.069, 0.96", "-48.494, 76.9346, -112.152, 0.37", "-48.4294, 77.3848, -113.075, 0.37", "-48.4153, 77.8571, -113.952, 0.37", "-48.4659, 78.7785, -115.62, 0.44", "-48.4909, 78.9678, -115.983, 0.74", "-48.5546, 79.3989, -116.81, 0.74", "-48.6378, 79.8105, -117.591, 0.37", "-48.6928, 80.1668, -118.308, 0.37", "-48.6622, 80.5777, -119.135, 0.37", "-48.5228, 80.878, -119.715, 0.37", "-48.2498, 81.3335, -120.631, 0.37", "-48.1533, 81.4584, -120.882, 0.81", "-47.825, 81.7973, -121.598, 0.37", "-47.52, 82.0437, -122.159, 0.37", "-47.0563, 82.3718, -122.833, 0.66", "-46.7193, 82.6152, -123.313, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-52.197, 71.8873, -98.1592, 0.44", "-52.3293, 72.9117, -98.4039, 0.44", "-52.5717, 73.6993, -98.6145, 0.37", "-52.8952, 74.423, -98.8355, 0.88", "-53.0994, 74.8084, -98.9843, 0.88", "-53.4537, 75.4193, -99.252, 0.52", "-53.8186, 75.999, -99.6775, 0.29", "-54.2858, 76.6164, -100.326, 0.22", "-54.5688, 76.9398, -100.726, 0.22", "-55.0143, 77.3968, -101.357, 0.88", "-55.3198, 77.6953, -101.816, 1.25", "-56.5901, 78.916, -103.96, 0.44", "-57.0276, 79.3588, -104.828, 0.96", "-57.186, 79.539, -105.222, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-25.0644, 3.03715, -5.85755, 0.81", "-25.6508, 2.99482, -7.28485, 0.81", "-25.9528, 2.99295, -7.90883, 0.81", "-27.9082, 3.13933, -11.2551, 1.62", "-29.337, 3.36056, -13.3135, 0.66", "-30.2212, 3.52287, -14.4411, 0.66", "-30.8115, 3.61388, -15.1379, 0.88", "-31.5016, 3.72437, -15.8383, 0.96", "-32.643, 3.85282, -16.8281, 0.81", "-33.7884, 3.82457, -17.5348, 0.52", "-34.7941, 3.61524, -18.1116, 0.52", "-35.8737, 3.14257, -18.7585, 0.74", "-36.8234, 2.4983, -19.3468, 1.11", "-37.1279, 2.21338, -19.5287, 1.25", "-37.7748, 1.45696, -19.9169, 0.96", "-38.5435, 0.463533, -20.3668, 0.66", "-39.2669, -0.458935, -20.7708, 0.88", "-40.0237, -1.34984, -21.1863, 0.81", "-40.8272, -2.20387, -21.6558, 0.96", "-41.4607, -2.83851, -22.0779, 1.18", "-42.1555, -3.53447, -22.6115, 1.11", "-42.739, -4.13962, -23.1565, 1.18", "-43.3167, -4.7592, -23.824, 1.33", "-44.2407, -5.71511, -24.9932, 0.66", "-44.9271, -6.36224, -25.8527, 0.88", "-45.4975, -6.85217, -26.5197, 0.88", "-46.4331, -7.58108, -27.5347, 0.59", "-47.0045, -7.96033, -28.0582, 0.59", "-47.5208, -8.20824, -28.4028, 0.81", "-48.3674, -8.45471, -28.6545, 1.33", "-49.1107, -8.61677, -28.6921, 1.4", "-49.5952, -8.74387, -28.65, 1.25", "-50.5414, -9.11581, -28.4635, 0.52", "-51.0764, -9.43721, -28.3559, 0.52", "-51.7425, -10.0332, -28.3087, 0.66", "-52.3241, -10.6968, -28.3419, 0.81", "-52.9446, -11.4574, -28.4259, 0.81", "-53.3467, -11.9777, -28.5403, 1.11", "-53.6707, -12.4374, -28.6937, 1.33", "-54.1297, -13.1219, -29.0296, 1.33", "-54.3666, -13.4833, -29.2854, 1.33", "-54.8302, -14.1818, -29.9628, 0.81", "-55.3437, -14.9361, -30.8112, 0.52", "-55.7362, -15.4906, -31.4753, 0.74", "-56.3057, -16.2756, -32.4252, 0.96", "-56.7625, -16.8804, -33.1278, 0.81", "-57.4111, -17.6752, -34.05, 0.66", "-57.9705, -18.3143, -34.7457, 0.59", "-58.373, -18.7427, -35.1587, 1.03", "-58.7068, -19.1081, -35.465, 1.25", "-59.1819, -19.6849, -35.8537, 1.25", "-59.8486, -20.6348, -36.4767, 0.81", "-60.1914, -21.2311, -36.8943, 0.52", "-60.6698, -22.0588, -37.6489, 0.52", "-61.0322, -22.6126, -38.2166, 0.44", "-61.2499, -22.912, -38.5601, 0.44", "-61.9049, -23.7802, -39.6098, 0.96", "-62.1835, -24.1382, -40.0461, 1.4", "-62.9052, -24.9347, -41.187, 0.88", "-63.543, -25.596, -42.1589, 0.66", "-64.4427, -26.557, -43.5081, 0.66", "-65.0472, -27.3067, -44.544, 0.59", "-65.6308, -28.1917, -45.7142, 1.77", "-66.4084, -29.6668, -47.5659, 0.59", "-66.637, -30.1851, -48.1787, 0.74", "-66.8956, -30.7842, -48.8694, 0.74", "-67.5379, -32.117, -50.3058, 0.59", "-67.8751, -32.7169, -50.8911, 0.59", "-68.2536, -33.3335, -51.3961, 0.74", "-68.83, -34.2241, -51.969, 0.74", "-69.4042, -34.9831, -52.4223, 0.74", "-70.0667, -35.7775, -52.9701, 0.52", "-70.6801, -36.4229, -53.4255, 0.37", "-71.0321, -36.7638, -53.7128, 1.11", "-71.2698, -36.9632, -53.9261, 1.11", "-71.7026, -37.2805, -54.3364, 0.96", "-73.5801, -38.4013, -56.0452, 0.59", "-74.0571, -38.6157, -56.4089, 0.52", "-74.5449, -38.763, -56.7769, 0.81", "-75.3388, -38.9644, -57.3676, 0.81", "-76.0442, -39.1227, -57.8757, 1.11", "-76.8043, -39.2999, -58.3909, 1.25", "-77.5449, -39.5013, -58.8286, 0.96", "-79.1761, -40.0717, -59.9494, 0.52", "-79.8667, -40.3799, -60.4746, 0.52", "-80.4099, -40.7125, -60.9337, 0.81", "-80.9378, -41.1792, -61.4675, 0.88", "-81.198, -41.511, -61.7956, 1.03", "-81.5359, -42.0869, -62.2937, 0.88", "-81.8369, -42.7261, -62.7628, 0.44", "-82.1381, -43.4596, -63.2748, 0.44", "-82.619, -44.9688, -64.2915, 1.33", "-83.0594, -46.5414, -65.3334, 0.59", "-83.2116, -47.1052, -65.7284, 1.03", "-83.3199, -47.5135, -66.0189, 1.18", "-83.489, -48.1148, -66.4633, 0.81", "-83.8646, -49.2268, -67.2908, 0.59", "-84.1734, -49.944, -67.8341, 0.37", "-84.7625, -50.9956, -68.7504, 0.37", "-84.9471, -51.2418, -69.0027, 0.96", "-85.1097, -51.4167, -69.2026, 1.25", "-85.3484, -51.6192, -69.4555, 1.25", "-86.2994, -52.2755, -70.2853, 0.52", "-86.967, -52.7085, -70.7847, 0.52", "-87.7113, -53.1883, -71.2337, 0.52", "-87.9222, -53.3195, -71.3533, 1.18", "-88.2808, -53.5385, -71.5918, 1.18", "-88.603, -53.7409, -71.8163, 1.18", "-89.135, -54.1031, -72.1253, 0.88", "-90.1795, -54.7727, -72.8693, 0.44", "-90.3287, -54.8639, -73.0043, 0.81", "-91.8395, -55.7705, -74.5279, 0.52", "-92.3613, -56.0927, -75.1062, 0.81", "-93.2599, -56.6711, -76.1484, 0.44", "-94.7441, -57.6861, -77.9899, 0.74", "-95.389, -58.1594, -78.8023, 0.44", "-95.6912, -58.4108, -79.1715, 1.33", "-95.894, -58.6111, -79.4269, 1.33", "-96.3149, -59.0518, -80.0083, 0.74", "-97.0867, -59.8329, -81.0791, 0.44", "-97.3137, -60.0581, -81.3321, 0.74", "-97.6985, -60.3754, -81.7528, 0.74", "-98.621, -60.8444, -82.8269, 0.37", "-99.0274, -60.8945, -83.3094, 0.37", "-99.4807, -60.7886, -83.8672, 0.66", "-99.818, -60.6544, -84.2601, 0.88", "-100.118, -60.5243, -84.5991, 0.88", "-101.025, -60.1624, -85.5839, 0.59", "-101.54, -59.9957, -86.0801, 0.29", "-102.013, -59.9105, -86.5114, 0.29", "-102.906, -59.914, -87.2583, 0.96", "-103.13, -59.9556, -87.4211, 1.18", "-104.255, -60.4012, -88.2146, 0.59", "-104.73, -60.6798, -88.6363, 0.81", "-105.104, -60.9273, -89.0164, 0.81", "-105.601, -61.2561, -89.5474, 0.37", "-106.175, -61.6352, -90.1803, 0.37", "-107.032, -62.2044, -91.1733, 1.11", "-108.697, -63.3354, -93.1198, 0.52", "-108.993, -63.538, -93.4752, 0.52", "-109.626, -63.9529, -94.2355, 0.44", "-109.958, -64.1475, -94.6513, 1.47", "-111.418, -64.8783, -96.5011, 0.59", "-111.832, -65.0529, -97.0063, 0.88", "-112.322, -65.2484, -97.6416, 0.88", "-113.215, -65.5676, -98.9789, 0.52", "-113.998, -65.8048, -100.254, 0.74", "-114.323, -65.8738, -100.795, 0.96", "-114.534, -65.9102, -101.136, 0.96", "-115.573, -66.1321, -102.797, 0.29", "-116.471, -66.3416, -104.33, 0.96", "-116.769, -66.4176, -104.833, 1.18", "-117.739, -66.7017, -106.473, 0.37", "-118.162, -66.8524, -107.219, 0.37", "-118.475, -66.9724, -107.778, 0.74", "-120.065, -67.5212, -110.645, 0.88", "-120.352, -67.5912, -111.162, 0.88", "-121.185, -67.7393, -112.67, 0.37", "-121.499, -67.7846, -113.213, 0.37", "-121.906, -67.8339, -113.87, 0.37", "-122.466, -67.9163, -114.656, 0.37", "-123.344, -68.1556, -115.646, 0.74", "-124.711, -68.6094, -117.155, 0.44", "-125.066, -68.7333, -117.506, 1.03", "-125.406, -68.8768, -117.846, 1.03", "-125.662, -69.0309, -118.115, 1.03", "-126.356, -69.622, -118.831, 0.44", "-126.826, -70.1129, -119.3, 0.59", "-127.352, -70.6521, -119.764, 0.37", "-127.932, -71.204, -120.294, 0.29", "-128.246, -71.4818, -120.62, 0.44", "-128.479, -71.7005, -120.894, 0.44", "-129.195, -72.4028, -121.791, 0.29", "-129.489, -72.6945, -122.175, 0.52", "-129.654, -72.8382, -122.404, 0.74", "-130.455, -73.2899, -123.446, 0.29", "-130.793, -73.4365, -123.879, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-25.0644, 3.03715, -5.85755, 0.88", "-26.5678, 7.08353, -5.25716, 0.88", "-27.3144, 8.90846, -4.82764, 0.52", "-27.7992, 9.95642, -4.53418, 0.88", "-28.7839, 11.858, -3.95696, 0.88", "-30.5403, 14.8978, -2.99747, 0.52", "-31.6549, 16.521, -2.4767, 0.52", "-33.1245, 18.3432, -1.69497, 0.44", "-34.3486, 19.5413, -1.16248, 0.59", "-35.645, 20.6066, -0.621128, 0.74", "-36.74, 21.3614, -0.182113, 0.74", "-39.2762, 22.8484, 0.663822, 1.25", "-40.1185, 23.282, 0.886964, 1.25", "-41.856, 24.0378, 1.17997, 0.66", "-44.0318, 24.8921, 1.38417, 0.81", "-44.9289, 25.2097, 1.43767, 0.66", "-46.9615, 25.8907, 1.49403, 0.88", "-50.4153, 26.9765, 1.47758, 0.88", "-51.8512, 27.3844, 1.42091, 0.66", "-52.7681, 27.6142, 1.33883, 0.52", "-54.703, 28.0086, 1.13109, 1.03", "-55.4757, 28.1628, 1.17966, 1.33", "-56.0203, 28.2927, 1.31172, 1.55", "-56.5636, 28.4453, 1.48863, 1.55", "-57.4295, 28.7304, 1.76816, 1.33", "-58.8733, 29.2857, 2.19313, 0.74", "-60.5909, 30.0455, 2.66726, 0.59", "-62.3243, 31.007, 3.18344, 0.59", "-63.4398, 31.791, 3.5402, 0.59", "-64.0356, 32.3243, 3.75552, 1.11", "-65.0548, 33.5462, 4.1372, 1.55", "-65.4236, 34.1761, 4.28387, 1.77", "-66.2027, 36.1827, 4.80957, 0.74", "-66.5405, 37.456, 5.19613, 0.96", "-66.7341, 38.4322, 5.52277, 0.74", "-66.9765, 39.8038, 6.04297, 0.52", "-67.1669, 40.8344, 6.48411, 0.44", "-67.9106, 43.6672, 7.88846, 0.88", "-68.1753, 44.4697, 8.29194, 1.11", "-68.4525, 45.2079, 8.6391, 1.11", "-68.9771, 46.5328, 9.19457, 0.74", "-69.4938, 47.7334, 9.63357, 0.44", "-70.1123, 49.0855, 9.94932, 0.29", "-70.874, 50.746, 10.1033, 0.59", "-71.3471, 51.8326, 10.1968, 0.44", "-71.8161, 52.9669, 10.2844, 1.25", "-72.0277, 53.521, 10.3256, 1.25", "-72.2834, 54.246, 10.4154, 0.81", "-72.6577, 55.2769, 10.6142, 0.29", "-73.1522, 56.4092, 10.9177, 0.59", "-73.4699, 57.0649, 11.0854, 0.74", "-73.7795, 57.6301, 11.2173, 0.88", "-74.2051, 58.3228, 11.363, 0.88", "-74.7983, 59.192, 11.5185, 0.44", "-75.393, 60.0138, 11.6374, 0.81", "-75.9615, 60.7691, 11.7461, 0.81", "-76.8439, 61.9128, 11.9103, 0.37", "-77.375, 62.5905, 12.0227, 0.37", "-78.4484, 63.9469, 12.3075, 0.29", "-79.5799, 65.3508, 12.6828, 0.29", "-80.0303, 65.9091, 12.8584, 0.29", "-80.7333, 66.7935, 13.168, 0.88", "-81.1923, 67.402, 13.399, 1.18", "-81.8703, 68.3239, 13.7813, 1.18", "-82.5176, 69.1577, 14.1873, 0.59", "-83.1793, 69.965, 14.6444, 0.59", "-83.8317, 70.7554, 15.1172, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "39.6859, -127.47, 23.515, 0.29", "39.1819, -128.06, 23.7457, 0.29", "38.6498, -128.684, 23.9893, 0.15", "38.3998, -128.977, 24.1038, 0.15", "37.8613, -129.608, 24.3504, 0.44", "37.5414, -129.983, 24.4968, 0.44", "37.1215, -130.475, 24.6891, 0.74", "32.5847, -137.144, 25.9849, 0.74", "28.9151, -143.966, 28.5798, 0.74", "26.4694, -151.537, 30.4324, 0.74", "24.4558, -159.384, 31.484, 0.74", "23.0128, -167.393, 30.7733, 0.74", "22.7764, -175.249, 28.5431, 0.74", "23.0207, -182.775, 25.3749, 0.74", "22.9939, -190.586, 22.9849, 0.74", "21.6945, -198.481, 21.3375, 0.74", "20.6281, -206.079, 18.5305, 0.74", "19.8546, -213.665, 15.5999, 0.74", "19.1073, -221.672, 14.1645, 0.74", "17.3141, -229.57, 13.0935, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "39.6859, -127.47, 23.515, 0.22", "40.7334, -126.885, 23.201, 0.22", "41.9077, -126.23, 22.8491, 0.59", "42.3929, -125.959, 22.7037, 0.59", "43.42, -125.386, 22.3959, 0.37", "44.1043, -125.005, 22.1908, 0.37", "56.0756, -120.188, 20.4774, 0.37", "66.4431, -112.952, 17.3791, 0.37", "77.7433, -106.678, 15.8335, 0.37", "89.2078, -100.535, 16.3494, 0.37", "99.7542, -93.0321, 17.7375, 0.37", "109.622, -85.3976, 21.451, 0.37" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "5.78349, -45.0645, 25.6947, 0.52", "5.22278, -46.1949, 25.1697, 0.52", "4.71259, -47.2234, 24.692, 0.52", "4.19902, -48.2587, 24.2112, 0.44", "3.83827, -48.9859, 23.8734, 0.29", "3.51746, -49.6327, 23.573, 0.74", "-1.65856, -59.4672, 19.6115, 0.74", "-6.6392, -69.3544, 15.5325, 0.74", "-11.5142, -78.5663, 10.0027, 0.74", "-17.299, -87.1152, 4.28821, 0.74", "-23.6888, -94.3358, -2.51157, 0.74", "-31.2429, -100.402, -9.24453, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "5.78349, -45.0645, 25.6947, 0.29", "6.70364, -44.9872, 25.3378, 0.29", "8.16185, -44.7871, 24.8415, 0.29", "8.79222, -44.6656, 24.6498, 0.44", "9.73939, -44.411, 24.3702, 0.44", "10.5135, -44.1247, 24.1425, 0.37", "11.0015, -43.8943, 23.9902, 0.22", "11.3112, -43.5556, 23.8877, 0.59", "11.3528, -43.1431, 23.8501, 0.74", "11.1366, -42.267, 23.8025, 0.22", "10.7635, -41.4849, 23.7744, 0.22", "10.1698, -40.5578, 23.7342, 0.22", "9.49052, -39.6999, 23.6637, 0.81", "15.5458, -32.6293, 21.4977, 0.81", "20.9069, -24.8595, 20.0003, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "7.59533, -160.059, 3.83525, 0.37", "14.7972, -164.64, -0.0640898, 0.37", "21.2963, -170.169, -3.97011, 0.37", "28.0179, -174.953, -8.44165, 0.37", "34.6309, -180.065, -12.7077, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "7.59533, -160.059, 3.83525, 0.22", "15.9734, -165.688, 1.02725, 0.37", "24.3791, -171.829, -0.155286, 0.37", "31.6036, -178.861, -3.00772, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-53.2971, -153.503, 11.632, 0.37", "-50.4697, -162.95, 10.501, 0.37", "-46.6075, -171.942, 8.84838, 0.37", "-44.0996, -181.54, 8.52259, 0.37", "-40.5957, -190.754, 7.36895, 0.37", "-37.5226, -200.183, 7.77388, 0.37", "-33.3474, -209.186, 7.92795, 0.37", "-29.0804, -218.117, 8.66073, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-53.2971, -153.503, 11.632, 0.22", "-50.2639, -162.588, 12.1419, 0.37", "-45.7967, -170.944, 13.6234, 0.37", "-42.1864, -179.82, 13.2028, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "161.699, 327.319, 20.5867, 0.37", "162.667, 328.175, 21.1948, 0.37", "163.045, 328.44, 21.3789, 0.37", "163.696, 328.785, 21.6224, 0.29", "164.165, 328.979, 21.779, 0.29", "164.771, 329.2, 21.9895, 0.74", "165.335, 329.422, 22.2006, 0.96", "165.779, 329.593, 22.3428, 0.52", "166.501, 329.899, 22.5815, 0.44", "167.196, 330.231, 22.8457, 0.37", "167.585, 330.498, 23.0339, 0.29", "168.017, 330.923, 23.2974, 0.29", "168.28, 331.253, 23.4741, 0.29", "168.713, 331.785, 23.7448, 0.74", "169.196, 332.329, 24.0099, 1.11", "169.663, 332.798, 24.2242, 1.11", "170.113, 333.185, 24.3968, 0.81", "171.035, 333.875, 24.7119, 0.37", "171.819, 334.42, 24.9635, 0.37", "172.332, 334.771, 25.1435, 0.37", "172.776, 335.09, 25.2969, 0.37", "173.053, 335.305, 25.3994, 1.03", "173.498, 335.693, 25.595, 1.33", "173.705, 335.899, 25.714, 1.33", "174.478, 336.815, 26.3552, 0.29", "174.94, 337.433, 26.8412, 0.29", "175.401, 338.101, 27.3995, 0.88", "175.665, 338.518, 27.7517, 0.88", "176.046, 339.151, 28.2799, 0.74", "176.645, 340.121, 29.0453, 0.66", "176.943, 340.613, 29.3658, 0.74", "177.35, 341.338, 29.7341, 0.44", "177.63, 341.911, 29.9103, 0.44", "177.955, 342.657, 29.9966, 0.37", "178.455, 343.929, 29.9575, 0.37", "178.883, 345.011, 29.8205, 0.37", "179.232, 345.921, 29.6586, 0.37", "179.602, 347.018, 29.4016, 1.77", "179.77, 347.65, 29.2229, 1.77", "179.844, 348.192, 29.0434, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "161.699, 327.319, 20.5867, 1.11", "162.92, 328.796, 18.5193, 1.11", "164.241, 330.13, 16.4149, 0.74", "164.903, 330.628, 15.3725, 0.29", "165.606, 331.14, 14.1791, 0.44", "166.312, 331.744, 12.8766, 0.37", "167.186, 332.591, 11.2457, 0.74", "167.537, 333.012, 10.6105, 0.88", "168.446, 334.022, 9.09292, 0.29", "169.237, 334.804, 7.8712, 0.44", "170.13, 335.585, 6.70526, 0.29", "170.689, 336.079, 6.01787, 0.96", "171.171, 336.548, 5.511, 1.25", "171.502, 336.863, 5.20851, 1.25", "172.922, 338.114, 4.16549, 0.37", "173.728, 338.713, 3.67196, 0.74", "175.465, 339.826, 2.70903, 0.88", "176.067, 340.188, 2.38962, 1.11", "176.943, 340.713, 1.96651, 0.52", "177.552, 341.085, 1.71767, 0.52", "178.237, 341.509, 1.50722, 0.29", "178.83, 341.854, 1.34533, 0.29", "179.805, 342.335, 1.14673, 1.25", "180.042, 342.445, 1.08986, 1.55", "180.468, 342.636, 0.97966, 1.55", "181.553, 343.093, 0.680706, 0.37", "182.796, 343.554, 0.350721, 0.44", "183.817, 343.878, 0.109314, 0.81", "184.047, 343.931, 0.0650301, 1.11", "184.793, 344.079, -0.0702567, 1.11", "186.105, 344.277, -0.268869, 0.29", "187.263, 344.368, -0.367239, 0.37", "188.023, 344.344, -0.410885, 0.37", "188.838, 344.25, -0.474935, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-57.186, 79.539, -105.222, 0.44", "-55.7752, 80.407, -106.134, 0.44", "-54.581, 81.1866, -107.173, 0.29", "-53.9341, 81.666, -107.875, 0.44", "-53.2255, 82.2883, -108.764, 0.44", "-52.7668, 82.7665, -109.403, 0.81", "-52.1811, 83.4608, -110.307, 0.81", "-51.6341, 84.2774, -111.499, 0.52", "-51.4454, 84.8022, -112.296, 0.37", "-51.3511, 85.3708, -113.143, 0.37", "-51.3179, 85.9394, -113.999, 0.81", "-51.2847, 86.464, -114.783, 0.88", "-51.1478, 87.2824, -115.991, 0.88", "-50.8011, 88.06, -117.375, 0.52", "-50.5497, 88.3196, -118.045, 0.81", "-49.742, 88.7057, -119.631, 0.52", "-49.1652, 88.848, -120.519, 0.52", "-48.321, 88.9724, -121.544, 0.52", "-46.4982, 89.1462, -123.408, 0.52", "-45.5931, 89.193, -124.354, 0.52", "-44.7654, 89.1998, -125.268, 0.81", "-44.1449, 89.2058, -125.964, 1.03", "-43.532, 89.2199, -126.68, 0.59", "-42.2863, 89.3195, -128.17, 0.66", "-40.1857, 89.7308, -130.641, 0.52", "-39.3892, 89.9595, -131.592, 0.52", "-38.4799, 90.3067, -132.776, 1.11", "-38.0522, 90.5479, -133.383, 1.11", "-37.7015, 90.7816, -133.892, 1.25", "-37.0205, 91.4343, -134.834, 0.66", "-36.4635, 92.3617, -135.565, 0.44", "-36.1758, 93.1935, -136.104, 0.44", "-35.9815, 94.629, -136.958, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-57.186, 79.539, -105.222, 0.44", "-58.2635, 80.3186, -107.275, 0.44", "-58.7637, 80.6352, -108.21, 0.37", "-59.3192, 80.9748, -109.237, 0.37", "-59.7964, 81.263, -110.016, 0.88", "-60.3516, 81.6016, -110.829, 0.88", "-61.3475, 82.1749, -112.111, 0.59", "-62.3098, 82.7449, -113.233, 0.22", "-62.8833, 83.0332, -113.923, 0.66", "-63.7128, 83.3941, -114.923, 0.37", "-64.1823, 83.5913, -115.483, 0.29", "-65.0225, 83.9697, -116.63, 0.29", "-65.8306, 84.4052, -118.026, 0.66", "-66.6352, 84.916, -119.916, 1.03", "-66.8369, 85.0639, -120.483, 1.33", "-66.9646, 85.1693, -120.897, 1.33", "-67.5042, 85.6639, -122.776, 0.44", "-68.0372, 86.1719, -124.73, 0.29", "-68.354, 86.4951, -125.911, 0.59", "-68.6098, 86.7645, -126.907, 0.59", "-68.7376, 86.9114, -127.455, 0.88", "-68.9608, 87.1744, -128.414, 0.88", "-69.596, 87.815, -130.73, 0.29", "-69.7903, 88.05, -131.535, 0.29", "-69.9281, 88.2583, -132.21, 0.29", "-70.1147, 88.5823, -133.274, 0.96", "-70.2578, 88.8356, -134.042, 0.96", "-70.7748, 89.7055, -136.222, 0.29", "-71.1401, 90.2358, -137.277, 0.29", "-71.3292, 90.4528, -137.677, 0.29", "-71.7376, 90.9026, -138.399, 0.29", "-72.1029, 91.3039, -138.985, 0.29", "-72.5025, 91.7831, -139.612, 0.81", "-72.8317, 92.2077, -140.146, 0.88", "-73.6426, 93.2269, -141.565, 0.29", "-74.0573, 93.758, -142.328, 0.59", "-74.3626, 94.1705, -142.909, 0.59", "-74.6776, 94.6137, -143.516, 0.29", "-75.1605, 95.3328, -144.488, 0.29", "-75.4744, 95.8758, -145.209, 0.29", "-75.8007, 96.5074, -146.004, 0.29", "-76.0676, 97.0077, -146.671, 0.29", "-76.3965, 97.6585, -147.502, 0.29", "-76.5531, 97.9831, -147.877, 0.29", "-76.9806, 98.8678, -148.804, 0.88", "-77.1518, 99.2696, -149.2, 1.11", "-77.6453, 100.759, -150.623, 0.29", "-77.8117, 101.318, -151.2, 0.59", "-78.028, 102.037, -152.012, 0.29", "-78.1564, 102.396, -152.426, 0.29", "-78.358, 102.963, -153.041, 0.29", "-78.5049, 103.442, -153.525, 0.29", "-78.8631, 104.5, -154.606, 0.66", "-79.1087, 104.985, -155.171, 0.66", "-79.6463, 105.877, -156.428, 0.37", "-79.9827, 106.379, -157.211, 0.37", "-80.5391, 107.018, -158.293, 0.37", "-81.2278, 107.692, -159.458, 0.37", "-81.9467, 108.382, -160.539, 0.37", "-83.0271, 109.384, -162.07, 0.29", "-83.3458, 109.652, -162.518, 0.29", "-84.1634, 110.263, -163.649, 0.29", "-84.5425, 110.537, -164.176, 0.29", "-85.3301, 111.259, -165.306, 1.4", "-85.4987, 111.457, -165.54, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "34.6309, -180.065, -12.7077, 0.37", "41.5277, -184.726, -15.3924, 0.37", "47.7697, -189.894, -18.6843, 0.37", "54.4413, -194.535, -21.9161, 0.37", "60.4265, -199.408, -26.0318, 0.37", "66.3395, -204.865, -29.4605, 0.37", "72.7179, -209.011, -33.7767, 0.37", "78.1024, -213.148, -39.2901, 0.37", "83.6135, -218.385, -43.6146, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "34.6309, -180.065, -12.7077, 0.22", "41.2944, -184.583, -15.5647, 0.37", "48.7606, -188.132, -17.7195, 0.37", "55.6934, -191.65, -21.261, 0.37", "62.6459, -193.95, -25.66, 0.37", "69.0994, -197.047, -30.3229, 0.37", "75.8646, -200.826, -33.9191, 0.37", "82.4045, -205.924, -35.9733, 0.37", "88.824, -210.735, -38.9096, 0.37", "96.5456, -213.869, -40.7902, 0.37", "103.97, -217.921, -41.9914, 0.37", "112.149, -220.369, -41.6867, 0.37", "120.469, -222.165, -40.9594, 0.37", "128.673, -222.837, -38.6706, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "31.6036, -178.861, -3.00772, 0.37", "39.8631, -184.976, -2.14282, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "31.6036, -178.861, -3.00772, 0.22", "40.1573, -185.469, -5.31867, 0.37", "48.7193, -192.388, -6.32342, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-42.1864, -179.82, 13.2028, 0.37", "-37.8471, -189.973, 15.6111, 0.37", "-31.4746, -198.283, 19.8597, 0.37", "-25.5968, -206.431, 25.0335, 0.37", "-19.4216, -214.15, 30.5103, 0.37", "-13.4288, -220.238, 37.9085, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-42.1864, -179.82, 13.2028, 0.22", "-38.2587, -189.376, 15.4003, 0.37", "-34.4987, -199.232, 15.9392, 0.37", "-32.2895, -209.475, 17.2655, 0.37", "-30.794, -219.882, 18.279, 0.37", "-28.34, -229.755, 21.1212, 0.37", "-25.845, -238.935, 25.7108, 0.37", "-24.4331, -247.476, 31.7628, 0.37", "-24.7406, -255.974, 38.0291, 0.37", "-26.875, -263.641, 44.9738, 0.37", "-30.0816, -272.112, 50.4076, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "179.844, 348.192, 29.0434, 0.29", "181.882, 350.62, 27.3324, 0.29", "182.576, 351.482, 26.8086, 0.29", "183.133, 352.263, 26.4466, 0.29", "183.487, 352.832, 26.2479, 0.29", "184.08, 353.911, 25.9467, 0.74", "184.254, 354.256, 25.8719, 0.74", "184.879, 355.747, 25.7931, 0.22", "185.434, 357.113, 25.7173, 0.22", "185.836, 358.29, 25.6603, 0.22", "186.044, 358.979, 25.6452, 0.52", "186.361, 360.098, 25.6948, 0.22", "186.478, 360.545, 25.7265, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "179.844, 348.192, 29.0434, 0.44", "179.672, 349.213, 29.7249, 0.44", "179.611, 349.981, 30.2327, 0.44", "179.567, 350.809, 30.7611, 0.44", "179.547, 351.368, 31.1055, 0.44", "179.524, 352.046, 31.4976, 0.37", "179.51, 352.447, 31.7157, 0.37", "179.527, 353.151, 32.1573, 0.88", "179.552, 353.416, 32.3095, 1.47", "179.581, 353.708, 32.4442, 1.47", "179.627, 354.493, 32.7362, 0.37", "179.61, 354.947, 32.8718, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "188.838, 344.25, -0.474935, 0.29", "189.206, 344.509, -0.48868, 0.29", "189.772, 344.867, -0.549485, 0.81", "190.178, 345.095, -0.610126, 0.81", "190.741, 345.359, -0.730532, 0.22", "191.062, 345.49, -0.818847, 0.59", "192.125, 345.866, -1.1459, 0.22", "192.853, 346.081, -1.41797, 0.81", "193.225, 346.184, -1.58195, 0.81", "193.957, 346.403, -1.95013, 0.29", "194.734, 346.68, -2.36845, 0.29", "195.599, 347.06, -2.85038, 0.22", "196.113, 347.332, -3.13128, 0.22", "196.762, 347.771, -3.50809, 0.81", "197.533, 348.411, -3.94437, 0.22", "198.057, 348.947, -4.22331, 0.22", "198.511, 349.484, -4.46503, 0.44", "198.805, 349.896, -4.62267, 0.15", "199.055, 350.277, -4.74057, 0.22", "199.414, 350.875, -4.87753, 0.15", "199.662, 351.284, -4.93983, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "188.838, 344.25, -0.474935, 0.22", "190.567, 344.72, -0.767386, 0.22", "191.208, 344.894, -0.875736, 0.81", "191.899, 345.082, -0.992696, 0.52", "193.332, 345.471, -1.23497, 1.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-35.9815, 94.629, -136.958, 0.37", "-35.3164, 95.8177, -137.95, 0.37", "-34.8537, 96.7639, -138.861, 0.37", "-34.502, 97.4831, -139.553, 0.37", "-34.1281, 98.2479, -140.289, 0.81", "-33.9542, 98.6034, -140.632, 0.81", "-33.5049, 99.5223, -141.516, 0.52", "-33.315, 100.25, -142.273, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-35.9815, 94.629, -136.958, 0.29", "-35.4284, 95.633, -137.991, 0.29", "-35.0329, 96.3512, -138.73, 0.88", "-34.6072, 97.1239, -139.526, 0.29", "-34.2975, 97.6861, -140.104, 0.88", "-33.9412, 98.3332, -140.77, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "48.7193, -192.388, -6.32342, 0.37", "56.3918, -198.103, -6.49829, 0.37", "64.0633, -203.765, -7.30879, 0.37", "70.5233, -210.801, -7.88095, 0.37", "76.6243, -218.152, -8.43808, 0.37", "82.1872, -225.935, -8.21972, 0.37", "87.5595, -233.626, -6.33606, 0.37", "93.1229, -241.103, -4.16393, 0.37", "98.1087, -248.515, -0.734527, 0.37", "103.546, -255.691, 2.50806, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "48.7193, -192.388, -6.32342, 0.22", "58.7204, -200.154, -6.33778, 0.37", "67.1732, -209.569, -6.81465, 0.37", "76.0534, -218.582, -7.2956, 0.37", "85.0267, -227.508, -6.93003, 0.37", "94.7482, -235.609, -7.37447, 0.37", "105.531, -242.183, -6.45236, 0.37", "115.781, -248.861, -3.18631, 0.37", "126.585, -253.284, 1.71775, 0.37", "137.284, -255.48, 8.12284, 0.37", "147.114, -259.168, 15.2016, 0.37", "156.966, -264.292, 21.2841, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "179.61, 354.947, 32.8718, 0.29", "179.279, 356.091, 33.3843, 0.29", "179.026, 356.845, 33.732, 0.29", "178.861, 357.32, 33.9532, 0.66", "178.806, 357.487, 34.0309, 0.66", "178.644, 358.098, 34.306, 0.22", "178.502, 358.791, 34.6071, 0.22", "178.433, 359.323, 34.8287, 0.22", "178.42, 359.621, 34.9451, 0.59", "178.448, 359.99, 35.0763, 0.59", "178.563, 360.792, 35.344, 0.29", "178.68, 361.325, 35.5328, 0.88", "178.796, 361.787, 35.7035, 0.88", "179.165, 363.206, 36.2343, 0.29", "179.357, 363.937, 36.5124, 0.29", "179.464, 364.357, 36.6771, 0.59", "179.791, 365.659, 37.2175, 0.29", "179.958, 366.3, 37.4982, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "179.61, 354.947, 32.8718, 0.29", "179.831, 355.998, 33.1456, 0.29", "180.14, 356.963, 33.4827, 0.29", "180.394, 357.635, 33.7394, 0.29", "180.845, 358.721, 34.1561, 0.29", "181.095, 359.295, 34.3756, 0.29", "181.506, 360.206, 34.7222, 0.29", "181.97, 361.196, 35.1064, 1.03", "182.353, 361.929, 35.4235, 1.69", "182.909, 362.89, 35.8677, 0.22", "183.186, 363.339, 36.0814, 0.52", "183.331, 363.577, 36.1942, 0.59", "183.724, 364.273, 36.5627, 0.22", "184.091, 364.935, 36.9776, 0.52", "184.302, 365.306, 37.2867, 0.66", "184.569, 365.748, 37.7848, 0.22", "184.746, 365.994, 38.1177, 0.22", "185.337, 366.689, 39.1686, 0.66", "185.686, 367.019, 39.7568, 1.03", "186.101, 367.326, 40.3885, 1.03", "186.719, 367.758, 41.2606, 0.29", "187.122, 368.055, 41.8038, 0.37", "187.457, 368.337, 42.2345, 0.37", "187.975, 368.805, 42.812, 0.29", "188.402, 369.182, 43.2338, 0.29", "188.806, 369.55, 43.6088, 0.29", "189.154, 369.939, 43.9251, 0.66", "189.432, 370.339, 44.2124, 0.66", "189.791, 371.029, 44.6615, 0.29", "189.991, 371.606, 44.9737, 0.29", "190.089, 371.998, 45.1653, 0.29", "190.236, 372.717, 45.4825, 0.66", "190.317, 373.205, 45.688, 0.74", "190.507, 374.474, 46.1188, 0.29", "190.654, 375.522, 46.4087, 0.29", "190.784, 376.367, 46.5873, 0.88", "190.857, 376.756, 46.6459, 1.03", "191.035, 377.473, 46.7094, 0.74", "191.393, 378.661, 46.7373, 0.29", "191.601, 379.267, 46.6709, 0.59", "191.872, 380.036, 46.5223, 0.29", "192.088, 380.711, 46.3467, 0.59", "192.213, 381.163, 46.2, 0.29", "192.344, 381.777, 45.9854, 0.81", "192.548, 383.08, 45.585, 0.29", "192.643, 383.898, 45.3488, 0.29", "192.708, 384.552, 45.1706, 0.29", "192.787, 385.389, 44.9397, 0.22", "192.913, 386.847, 44.5722, 0.22", "193.041, 388.734, 44.1755, 0.22", "193.136, 390.293, 43.8982, 0.22", "193.22, 391.718, 43.6729, 0.74", "193.262, 392.413, 43.5781, 0.96", "193.345, 393.795, 43.4245, 0.22", "193.419, 395.192, 43.2682, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "193.332, 345.471, -1.23497, 0.22", "193.485, 347.089, -1.12481, 0.22", "193.543, 347.691, -1.08379, 0.37", "193.655, 348.877, -1.00301, 0.22", "193.74, 349.769, -0.942311, 0.22", "193.85, 350.929, -0.863254, 0.22", "193.967, 352.163, -0.779227, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "193.332, 345.471, -1.23497, 0.22", "195.107, 344.908, -2.89813, 0.22", "195.743, 344.705, -3.49473, 0.22", "196.484, 344.47, -4.18867, 0.52", "197.336, 344.2, -4.98679, 1.11", "198.168, 343.935, -5.76667, 0.81", "199.075, 343.647, -6.61718, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-33.315, 100.25, -142.273, 0.59", "-33.53, 101.811, -143.028, 0.59", "-33.5759, 102.262, -143.291, 0.88", "-33.6727, 103.136, -143.833, 0.29", "-33.7517, 103.815, -144.262, 0.29", "-33.8475, 104.518, -144.7, 0.37", "-33.9493, 105.171, -145.1, 0.37", "-34.1761, 106.359, -145.781, 0.29", "-34.2934, 106.867, -146.097, 0.29", "-34.4975, 107.722, -146.654, 0.29", "-34.6201, 108.312, -147.033, 0.96", "-34.7028, 108.721, -147.283, 0.96", "-34.7826, 109.147, -147.52, 0.74", "-34.9579, 110.184, -148.011, 0.29", "-35.0919, 111.082, -148.443, 0.29", "-35.1735, 111.683, -148.728, 0.29", "-35.2521, 112.393, -149.048, 0.74", "-35.2808, 112.683, -149.17, 0.74", "-35.3156, 113.07, -149.321, 0.44", "-35.4216, 113.991, -149.66, 0.29", "-35.5417, 114.709, -149.913, 0.29", "-35.7934, 116.21, -150.384, 0.29", "-35.8899, 116.888, -150.569, 0.96", "-35.94, 117.387, -150.676, 0.59", "-35.9706, 118.067, -150.776, 0.29", "-35.9761, 119.044, -150.855, 0.22", "-35.9616, 119.995, -150.886, 0.22", "-35.9439, 120.547, -150.878, 0.22", "-35.9293, 121.4, -150.886, 0.22", "-35.9213, 122.158, -150.924, 0.22", "-35.8901, 122.865, -151.002, 0.81", "-35.8775, 123.054, -151.04, 1.18", "-35.8568, 123.49, -151.201, 1.18", "-35.8325, 124.45, -151.681, 0.29", "-35.8147, 124.957, -151.991, 0.29", "-35.7611, 125.561, -152.391, 0.66", "-35.7272, 125.771, -152.53, 0.66", "-35.5422, 126.643, -153.171, 0.37", "-35.4369, 127.148, -153.568, 0.37", "-35.3708, 127.658, -153.979, 0.37", "-35.3699, 128.048, -154.319, 0.74", "-35.4083, 128.446, -154.692, 0.74", "-35.509, 129.283, -155.506, 0.29", "-35.5534, 129.803, -156.024, 0.29", "-35.5832, 130.463, -156.743, 0.29", "-35.6038, 131.122, -157.479, 0.88", "-35.6103, 131.496, -157.885, 0.88", "-35.6111, 132.024, -158.441, 0.29", "-35.603, 132.699, -159.082, 0.29", "-35.5895, 133.045, -159.409, 0.29", "-35.5964, 133.633, -159.934, 0.74", "-35.6303, 134.011, -160.244, 0.74", "-35.7386, 134.765, -160.827, 0.37", "-35.8492, 135.385, -161.286, 0.59", "-35.9348, 135.826, -161.594, 0.59", "-36.03, 136.459, -162.026, 0.29", "-36.0911, 137.199, -162.527, 0.29", "-36.1067, 137.594, -162.774, 0.29", "-36.1104, 138.078, -163.041, 0.52", "-36.1037, 138.483, -163.25, 1.03", "-36.0612, 139.056, -163.519, 1.03", "-35.9335, 140.101, -163.974, 0.22", "-35.7374, 141.418, -164.502, 0.22", "-35.5825, 142.359, -164.859, 0.96", "-35.4877, 142.925, -165.061, 0.96", "-35.2211, 144.333, -165.537, 0.29", "-34.9872, 145.431, -165.882, 0.29", "-34.8244, 146.161, -166.102, 0.88", "-34.7033, 146.717, -166.269, 1.18", "-34.4555, 148.027, -166.696, 0.37", "-34.2815, 149.187, -166.994, 0.37", "-34.0845, 150.801, -167.316, 0.37", "-33.9464, 151.808, -167.437, 0.37", "-33.8217, 152.532, -167.471, 0.96", "-33.6265, 153.384, -167.446, 0.96", "-32.8474, 155.751, -167.145, 0.29", "-32.6494, 156.196, -167.067, 0.29", "-32.1993, 156.988, -166.922, 0.88", "-31.8374, 157.537, -166.839, 0.88", "-31.54, 157.959, -166.799, 0.59", "-30.4521, 159.498, -166.79, 0.29", "-29.6507, 160.702, -166.969, 0.29", "-29.2091, 161.446, -167.121, 0.81", "-29.023, 161.793, -167.215, 0.81", "-28.7737, 162.369, -167.394, 0.52", "-28.4809, 163.229, -167.697, 0.22", "-28.1547, 164.766, -168.312, 0.22", "-28.0512, 165.659, -168.685, 0.74", "-28.0298, 166.12, -168.88, 0.74", "-28.0451, 167.396, -169.419, 0.22", "-28.0812, 167.93, -169.638, 0.22", "-28.1701, 168.621, -169.91, 0.52", "-28.2018, 168.798, -169.977, 0.59", "-28.3818, 169.679, -170.329, 0.22", "-28.5408, 170.358, -170.661, 0.44", "-28.9152, 171.586, -171.398, 0.22", "-29.1249, 172.081, -171.767, 0.66", "-29.5048, 172.759, -172.359, 0.22", "-30.0227, 173.512, -173.123, 0.74", "-30.5738, 174.18, -173.9, 0.59", "-31.0601, 174.741, -174.591, 0.29", "-31.4617, 175.204, -175.164, 0.52", "-32.1329, 175.955, -176.105, 0.22", "-32.5691, 176.457, -176.696, 0.59", "-32.7203, 176.672, -176.895, 0.59", "-33.1229, 177.481, -177.476, 0.22", "-33.2859, 178.057, -177.84, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-33.315, 100.25, -142.273, 0.52", "-32.239, 101.255, -144.288, 0.52", "-31.599, 101.879, -145.486, 0.29", "-30.9723, 102.56, -146.656, 0.29", "-30.0889, 103.557, -148.266, 0.29", "-29.4491, 104.258, -149.392, 0.59", "-29.2045, 104.499, -149.807, 0.66", "-28.3921, 105.213, -151.023, 0.29", "-27.8249, 105.6, -151.804, 0.81", "-27.6627, 105.713, -152.023, 0.81", "-26.8602, 106.234, -152.99, 0.29", "-26.0477, 106.651, -154.055, 0.44", "-25.7906, 106.74, -154.371, 0.66", "-25.2837, 106.791, -154.883, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "199.075, 343.647, -6.61718, 0.37", "201.046, 343.168, -7.58284, 0.37", "201.882, 343.022, -7.97888, 0.22", "202.955, 342.835, -8.48646, 0.22", "203.185, 342.795, -8.59529, 0.66", "204.363, 342.589, -9.15333, 0.22", "205.418, 342.405, -9.65255, 0.22", "205.682, 342.379, -9.74414, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "199.075, 343.647, -6.61718, 0.22", "201.416, 343.717, -7.09345, 0.22", "201.913, 343.732, -7.17745, 0.88", "203.083, 343.769, -7.37528, 0.22", "203.582, 343.784, -7.45976, 0.74", "205.358, 343.839, -7.75996, 0.22", "206.108, 343.863, -7.88689, 0.44", "207.054, 343.857, -7.88746, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_55", "dend_55", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.13603E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.04239E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bSTUT213_L5_NBC_e0eb22f024_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000090983035473)
    connect dend_56(0), soma_0(0.45000090983035473)
    connect dend_51(0), soma_0(0.45000090983035473)
    connect dend_32(0), soma_0(0.45000090983035473)
    connect dend_13(0), soma_0(0.45000090983035473)
    connect dend_0(0), soma_0(0.45000090983035473)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.9016, -1.97873, -2.50057, 3.38117 ) }
    soma_0 { pt3dadd( -9.79478, -1.80994, -2.24302, 5.67833 ) }
    soma_0 { pt3dadd( -8.68798, -1.64115, -1.98548, 7.15072 ) }
    soma_0 { pt3dadd( -7.58118, -1.47235, -1.72793, 8.64399 ) }
    soma_0 { pt3dadd( -6.47438, -1.30356, -1.47039, 10.0299 ) }
    soma_0 { pt3dadd( -5.36758, -1.13477, -1.21284, 11.2674 ) }
    soma_0 { pt3dadd( -4.26078, -0.965972, -0.955299, 11.9107 ) }
    soma_0 { pt3dadd( -3.15398, -0.797179, -0.697754, 12.2563 ) }
    soma_0 { pt3dadd( -2.04718, -0.628385, -0.440209, 12.5208 ) }
    soma_0 { pt3dadd( -0.940378, -0.459592, -0.182664, 12.7145 ) }
    soma_0 { pt3dadd( 0.166423, -0.290798, 0.0748807, 12.541 ) }
    soma_0 { pt3dadd( 1.27322, -0.122005, 0.332426, 12.2075 ) }
    soma_0 { pt3dadd( 2.38002, 0.0467885, 0.589971, 11.6554 ) }
    soma_0 { pt3dadd( 3.48682, 0.215582, 0.847516, 11.0225 ) }
    soma_0 { pt3dadd( 4.59362, 0.384375, 1.10506, 10.3416 ) }
    soma_0 { pt3dadd( 5.70042, 0.553169, 1.36261, 9.80603 ) }
    soma_0 { pt3dadd( 6.80722, 0.721962, 1.62015, 9.2712 ) }
    soma_0 { pt3dadd( 7.91403, 0.890756, 1.8777, 8.04801 ) }
    soma_0 { pt3dadd( 9.02083, 1.05955, 2.13524, 5.78101 ) }
    soma_0 { pt3dadd( 10.1276, 1.22834, 2.39279, 3.52734 ) }
    soma_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 2.23302 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.34928, -3.40695, -7.98898, 1.25 ) }
    dend_67 { pt3dadd( 7.3456, -4.06231, -8.3692, 1.25 ) }
    dend_67 { pt3dadd( 8.13916, -4.71212, -9.23924, 1.25 ) }
    dend_67 { pt3dadd( 8.77722, -5.34529, -10.1959, 0.88 ) }
    dend_67 { pt3dadd( 9.30714, -5.96936, -11.119, 0.88 ) }
    dend_67 { pt3dadd( 9.78208, -6.63323, -12.0263, 0.88 ) }
    dend_67 { pt3dadd( 10.9454, -8.67431, -14.5804, 1.18 ) }
    dend_67 { pt3dadd( 11.6082, -10.5136, -16.8018, 1.18 ) }
    dend_67 { pt3dadd( 11.7119, -10.9507, -17.2697, 1.69 ) }
    dend_67 { pt3dadd( 11.8265, -11.5445, -17.8048, 1.84 ) }
    dend_67 { pt3dadd( 12.0169, -12.3864, -18.4156, 1.62 ) }
    dend_67 { pt3dadd( 12.4232, -13.6775, -19.0423, 1.11 ) }
    dend_67 { pt3dadd( 13.0257, -15.0084, -19.3263, 1.11 ) }
    dend_67 { pt3dadd( 13.9056, -16.6202, -19.48, 1.11 ) }
    dend_67 { pt3dadd( 14.6855, -17.976, -19.5264, 1.11 ) }
    dend_67 { pt3dadd( 15.4806, -19.372, -19.5066, 1.11 ) }
    dend_67 { pt3dadd( 16.2086, -20.7986, -19.4191, 1.11 ) }
    dend_67 { pt3dadd( 16.8236, -22.2234, -19.27, 1.18 ) }
    dend_67 { pt3dadd( 17.1209, -23.2481, -19.1459, 1.33 ) }
    dend_67 { pt3dadd( 17.2734, -24.8895, -18.9657, 1.25 ) }
    dend_67 { pt3dadd( 17.1616, -26.2469, -18.8601, 0.88 ) }
    dend_67 { pt3dadd( 16.7709, -27.9861, -18.8228, 1.25 ) }
    dend_67 { pt3dadd( 16.5128, -28.774, -18.8644, 1.55 ) }
    dend_67 { pt3dadd( 16.23, -29.6216, -18.9138, 1.55 ) }
    dend_67 { pt3dadd( 15.902, -30.7923, -18.9814, 1.33 ) }
    dend_67 { pt3dadd( 15.6744, -32.0293, -19.034, 1.11 ) }
    dend_67 { pt3dadd( 15.5969, -33.6658, -19.027, 0.81 ) }
    dend_67 { pt3dadd( 15.8258, -35.5383, -18.9284, 0.59 ) }
    dend_67 { pt3dadd( 16.5297, -37.8408, -18.6758, 0.59 ) }
    dend_67 { pt3dadd( 17.1196, -38.9012, -18.4904, 0.74 ) }
    dend_67 { pt3dadd( 18.1929, -40.113, -18.1932, 0.96 ) }
    dend_67 { pt3dadd( 19.0586, -40.8177, -17.9875, 1.18 ) }
    dend_67 { pt3dadd( 19.7348, -41.2542, -17.8688, 1.18 ) }
    dend_67 { pt3dadd( 20.646, -41.7778, -17.7701, 1.18 ) }
    dend_67 { pt3dadd( 21.6745, -42.4022, -17.762, 0.88 ) }
    dend_67 { pt3dadd( 22.7313, -43.2898, -17.874, 0.88 ) }
    dend_67 { pt3dadd( 23.2121, -43.9049, -18.0132, 1.11 ) }
    dend_67 { pt3dadd( 23.8294, -44.9939, -18.2795, 1.11 ) }
    dend_67 { pt3dadd( 24.1947, -45.7851, -18.4782, 0.96 ) }
    dend_67 { pt3dadd( 24.5264, -46.5747, -18.6786, 1.25 ) }
    dend_67 { pt3dadd( 25.226, -48.1162, -19.1046, 0.66 ) }
    dend_67 { pt3dadd( 25.6939, -48.962, -19.3502, 0.66 ) }
    dend_67 { pt3dadd( 26.2644, -49.6898, -19.5596, 0.66 ) }
    dend_67 { pt3dadd( 26.9169, -50.2061, -19.7277, 0.74 ) }
    dend_67 { pt3dadd( 27.8339, -50.6721, -19.9641, 0.59 ) }
    dend_67 { pt3dadd( 29.0359, -51.1471, -20.2712, 0.88 ) }
    dend_67 { pt3dadd( 29.706, -51.395, -20.4506, 0.88 ) }
    dend_67 { pt3dadd( 30.3528, -51.6762, -20.6336, 1.11 ) }
    dend_67 { pt3dadd( 31.5624, -52.3522, -21.0142, 0.66 ) }
    dend_67 { pt3dadd( 32.6086, -53.156, -21.3852, 0.59 ) }
    dend_67 { pt3dadd( 33.4711, -54.1634, -21.739, 0.66 ) }
    dend_67 { pt3dadd( 34.125, -55.3084, -22.0115, 0.81 ) }
    dend_67 { pt3dadd( 34.6412, -56.5167, -22.2626, 1.4 ) }
    dend_67 { pt3dadd( 34.8145, -57.0421, -22.3538, 1.55 ) }
    dend_67 { pt3dadd( 35.0709, -58.0588, -22.4835, 0.96 ) }
    dend_67 { pt3dadd( 35.3639, -59.3834, -22.6177, 0.52 ) }
    dend_67 { pt3dadd( 35.6196, -60.3632, -22.7528, 0.52 ) }
    dend_67 { pt3dadd( 35.9909, -61.4799, -22.9326, 0.96 ) }
    dend_67 { pt3dadd( 36.2696, -62.2154, -23.0808, 1.03 ) }
    dend_67 { pt3dadd( 36.4692, -62.7094, -23.1739, 1.11 ) }
    dend_67 { pt3dadd( 36.6867, -63.2364, -23.2513, 1.11 ) }
    dend_67 { pt3dadd( 37.2738, -64.6917, -23.4424, 0.52 ) }
    dend_67 { pt3dadd( 37.7237, -66.0019, -23.533, 0.59 ) }
    dend_67 { pt3dadd( 38.1043, -67.2612, -23.5328, 0.59 ) }
    dend_67 { pt3dadd( 38.4689, -68.4995, -23.5058, 1.18 ) }
    dend_67 { pt3dadd( 38.7833, -69.4978, -23.5092, 1.55 ) }
    dend_67 { pt3dadd( 38.9832, -70.0679, -23.5309, 1.55 ) }
    dend_67 { pt3dadd( 39.589, -71.5714, -23.8075, 0.81 ) }
    dend_67 { pt3dadd( 40.0336, -72.4863, -24.1761, 0.52 ) }
    dend_67 { pt3dadd( 40.5253, -73.3552, -24.6931, 0.44 ) }
    dend_67 { pt3dadd( 41.1995, -74.4733, -25.5184, 0.81 ) }
    dend_67 { pt3dadd( 41.6061, -75.1282, -26.0455, 0.96 ) }
    dend_67 { pt3dadd( 42.7111, -76.8936, -27.484, 0.52 ) }
    dend_67 { pt3dadd( 43.1668, -77.622, -28.0826, 0.96 ) }
    dend_67 { pt3dadd( 43.5202, -78.2457, -28.505, 1.25 ) }
    dend_67 { pt3dadd( 43.8844, -78.9841, -28.8678, 1.03 ) }
    dend_67 { pt3dadd( 44.2587, -79.8321, -29.1369, 0.74 ) }
    dend_67 { pt3dadd( 44.4888, -80.3791, -29.2534, 0.74 ) }
    dend_67 { pt3dadd( 44.9332, -81.3679, -29.3689, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( 45.4478, -82.4387, -29.542, 0.44 ) }
    dend_67 { pt3dadd( 46.0432, -83.6362, -29.7488, 0.96 ) }
    dend_67 { pt3dadd( 46.4116, -84.3712, -29.8754, 1.55 ) }
    dend_67 { pt3dadd( 46.7024, -84.9876, -29.8989, 1.69 ) }
    dend_67 { pt3dadd( 47.0235, -85.7096, -29.8323, 1.25 ) }
    dend_67 { pt3dadd( 47.6352, -87.0707, -29.6617, 0.59 ) }
    dend_67 { pt3dadd( 48.2485, -88.3809, -29.4749, 0.59 ) }
    dend_67 { pt3dadd( 48.9468, -89.8005, -29.326, 1.25 ) }
    dend_67 { pt3dadd( 50.3417, -92.6096, -29.2009, 0.52 ) }
    dend_67 { pt3dadd( 51.052, -94.0434, -29.1897, 0.44 ) }
    dend_67 { pt3dadd( 51.9018, -95.771, -29.2314, 0.96 ) }
    dend_67 { pt3dadd( 52.2567, -96.4965, -29.2737, 0.96 ) }
    dend_67 { pt3dadd( 53.0541, -98.0656, -29.5057, 0.52 ) }
    dend_67 { pt3dadd( 53.8158, -99.4585, -29.8408, 0.52 ) }
    dend_67 { pt3dadd( 54.6245, -100.828, -30.3103, 1.11 ) }
    dend_67 { pt3dadd( 54.9638, -101.4, -30.47, 1.55 ) }
    dend_67 { pt3dadd( 55.3096, -102.021, -30.5736, 1.77 ) }
    dend_67 { pt3dadd( 55.541, -102.436, -30.6623, 1.84 ) }
    dend_67 { pt3dadd( 55.8715, -103.011, -30.832, 1.47 ) }
    dend_67 { pt3dadd( 56.3822, -103.823, -31.2167, 1.11 ) }
    dend_67 { pt3dadd( 56.8697, -104.57, -31.6775, 0.81 ) }
    dend_67 { pt3dadd( 57.5854, -105.752, -32.4972, 0.44 ) }
    dend_67 { pt3dadd( 58.3804, -107.215, -33.575, 0.96 ) }
    dend_67 { pt3dadd( 58.7769, -108.042, -34.1874, 1.11 ) }
    dend_67 { pt3dadd( 59.0706, -108.707, -34.6967, 0.81 ) }
    dend_67 { pt3dadd( 59.398, -109.503, -35.2495, 0.29 ) }
    dend_67 { pt3dadd( 59.7681, -110.4, -35.7157, 0.29 ) }
    dend_67 { pt3dadd( 60.0908, -111.13, -35.8951, 0.59 ) }
    dend_67 { pt3dadd( 60.527, -112.065, -35.9227, 0.88 ) }
    dend_67 { pt3dadd( 60.8763, -112.77, -35.8685, 1.03 ) }
    dend_67 { pt3dadd( 61.6503, -114.26, -35.6789, 1.03 ) }
    dend_67 { pt3dadd( 62.3201, -115.422, -35.4944, 0.59 ) }
    dend_67 { pt3dadd( 63.0507, -116.57, -35.3051, 0.59 ) }
    dend_67 { pt3dadd( 63.7102, -117.572, -35.1503, 0.88 ) }
    dend_67 { pt3dadd( 64.2925, -118.535, -35.0038, 1.25 ) }
    dend_67 { pt3dadd( 64.6183, -119.143, -34.9365, 1.47 ) }
    dend_67 { pt3dadd( 64.8062, -119.577, -34.9181, 1.47 ) }
    dend_67 { pt3dadd( 65.1685, -120.727, -34.8897, 0.37 ) }
    dend_67 { pt3dadd( 65.3985, -121.914, -34.8676, 0.37 ) }
    dend_67 { pt3dadd( 65.5144, -123.479, -34.8612, 0.74 ) }
    dend_67 { pt3dadd( 65.4756, -124.454, -34.8822, 0.66 ) }
    dend_67 { pt3dadd( 65.3758, -125.664, -34.9148, 0.52 ) }
    dend_67 { pt3dadd( 65.3157, -126.245, -34.9117, 0.88 ) }
    dend_67 { pt3dadd( 65.236, -126.926, -34.873, 0.88 ) }
    dend_67 { pt3dadd( 65.2319, -127.687, -34.5998, 0.37 ) }
    dend_67 { pt3dadd( 65.524, -128.392, -33.6617, 0.37 ) }
    dend_67 { pt3dadd( 65.8252, -128.951, -32.6948, 0.37 ) }
    dend_67 { pt3dadd( 66.2229, -129.549, -31.6113, 0.37 ) }
    dend_67 { pt3dadd( 66.5535, -130.006, -30.7986, 0.44 ) }
    dend_67 { pt3dadd( 67.7794, -131.537, -28.1407, 1.18 ) }
    dend_67 { pt3dadd( 68.3624, -132.248, -27.0057, 1.18 ) }
    dend_67 { pt3dadd( 69.0317, -133.064, -25.7616, 0.37 ) }
    dend_67 { pt3dadd( 69.5239, -133.736, -24.8751, 0.81 ) }
    dend_67 { pt3dadd( 69.7711, -134.096, -24.4852, 0.81 ) }
    dend_67 { pt3dadd( 70.1239, -134.631, -24.0181, 0.81 ) }
    dend_67 { pt3dadd( 70.7985, -135.611, -23.3652, 0.37 ) }
    dend_67 { pt3dadd( 71.8586, -136.999, -22.4207, 1.33 ) }
    dend_67 { pt3dadd( 72.2636, -137.459, -22.056, 1.69 ) }
    dend_67 { pt3dadd( 73.0497, -138.286, -21.325, 1.25 ) }
    dend_67 { pt3dadd( 73.6806, -138.875, -20.7777, 0.66 ) }
    dend_67 { pt3dadd( 74.5022, -139.536, -20.1602, 0.52 ) }
    dend_67 { pt3dadd( 75.3209, -140.083, -19.7026, 0.81 ) }
    dend_67 { pt3dadd( 75.7185, -140.355, -19.5427, 0.81 ) }
    dend_67 { pt3dadd( 76.1647, -140.684, -19.3776, 0.81 ) }
    dend_67 { pt3dadd( 76.7506, -141.181, -19.1825, 0.44 ) }
    dend_67 { pt3dadd( 77.3499, -141.804, -18.9569, 0.37 ) }
    dend_67 { pt3dadd( 77.6769, -142.396, -18.809, 0.37 ) }
    dend_67 { pt3dadd( 78.0478, -143.923, -18.576, 0.37 ) }
    dend_67 { pt3dadd( 78.1763, -144.704, -18.4917, 0.74 ) }
    dend_67 { pt3dadd( 78.2843, -145.424, -18.4348, 0.81 ) }
    dend_67 { pt3dadd( 78.3708, -145.977, -18.404, 0.81 ) }
    dend_67 { pt3dadd( 78.5771, -146.952, -18.3834, 0.37 ) }
    dend_67 { pt3dadd( 78.8941, -147.952, -18.3228, 0.37 ) }
    dend_67 { pt3dadd( 79.5367, -149.307, -18.2046, 0.37 ) }
    dend_67 { pt3dadd( 80.0657, -150.217, -18.0794, 0.66 ) }
    dend_67 { pt3dadd( 80.4154, -150.751, -17.985, 0.81 ) }
    dend_67 { pt3dadd( 80.9823, -151.54, -17.8213, 0.81 ) }
    dend_67 { pt3dadd( 82.1085, -152.984, -17.485, 0.52 ) }
    dend_67 { pt3dadd( 82.4805, -153.468, -17.3703, 0.52 ) }
    dend_67 { pt3dadd( 83.2019, -154.573, -17.1411, 0.88 ) }
    dend_67 { pt3dadd( 83.451, -155.069, -17.0726, 1.18 ) }
    dend_67 { pt3dadd( 83.6364, -155.551, -17.0564, 1.18 ) }
    dend_67 { pt3dadd( 83.8131, -156.21, -17.102, 1.18 ) }
    dend_67 { pt3dadd( 83.9298, -156.985, -17.2508, 0.96 ) }
    dend_67 { pt3dadd( 84.0099, -158.03, -17.5553, 0.52 ) }
    dend_67 { pt3dadd( 84.1084, -159.298, -18.0529, 0.52 ) }
    dend_67 { pt3dadd( 84.2151, -160.119, -18.4169, 0.74 ) }
    dend_67 { pt3dadd( 84.3062, -160.601, -18.6445, 0.74 ) }
    dend_67 { pt3dadd( 84.5977, -161.641, -19.082, 0.52 ) }
    dend_67 { pt3dadd( 85.2041, -163.053, -19.595, 0.52 ) }
    dend_67 { pt3dadd( 85.7846, -163.954, -19.8813, 0.59 ) }
    dend_67 { pt3dadd( 86.5758, -164.91, -20.1283, 0.81 ) }
    dend_67 { pt3dadd( 87.3819, -165.766, -20.2831, 0.59 ) }
    dend_67 { pt3dadd( 88.5973, -166.908, -20.4999, 0.37 ) }
    dend_67 { pt3dadd( 89.4455, -167.641, -20.6432, 0.37 ) }
    dend_67 { pt3dadd( 90.3416, -168.444, -20.7218, 1.11 ) }
    dend_67 { pt3dadd( 90.5542, -168.644, -20.7395, 1.4 ) }
    dend_67 { pt3dadd( 91.2604, -169.3, -20.8087, 1.03 ) }
    dend_67 { pt3dadd( 92.2667, -170.268, -20.9271, 0.52 ) }
    dend_67 { pt3dadd( 93.2244, -171.284, -21.1048, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_67 { pt3dadd( 94.1841, -172.407, -21.2747, 1.18 ) }
    dend_67 { pt3dadd( 94.5407, -172.851, -21.3569, 1.47 ) }
    dend_67 { pt3dadd( 94.8992, -173.292, -21.4705, 1.47 ) }
    dend_67 { pt3dadd( 95.8466, -174.533, -21.8614, 0.52 ) }
    dend_67 { pt3dadd( 96.549, -175.551, -22.3158, 0.88 ) }
    dend_67 { pt3dadd( 96.9118, -176.16, -22.6802, 0.88 ) }
    dend_67 { pt3dadd( 97.5794, -177.337, -23.6521, 0.59 ) }
    dend_67 { pt3dadd( 98.0645, -178.238, -24.4996, 1.03 ) }
    dend_67 { pt3dadd( 98.4148, -178.892, -25.1714, 1.03 ) }
    dend_67 { pt3dadd( 99.1158, -180.173, -26.6208, 0.44 ) }
    dend_67 { pt3dadd( 99.3943, -180.731, -27.269, 0.44 ) }
    dend_67 { pt3dadd( 99.9444, -182.077, -28.7898, 1.03 ) }
    dend_67 { pt3dadd( 100.101, -182.625, -29.3411, 1.18 ) }
    dend_67 { pt3dadd( 100.245, -183.35, -29.9841, 0.74 ) }
    dend_67 { pt3dadd( 100.435, -184.666, -31.0029, 0.44 ) }
    dend_67 { pt3dadd( 100.474, -185.625, -31.512, 0.44 ) }
    dend_67 { pt3dadd( 100.467, -186.684, -31.9296, 0.44 ) }
    dend_67 { pt3dadd( 100.422, -188.158, -32.2929, 1.11 ) }
    dend_67 { pt3dadd( 100.438, -188.721, -32.3912, 1.47 ) }
    dend_67 { pt3dadd( 100.546, -189.616, -32.4721, 1.47 ) }
    dend_67 { pt3dadd( 100.975, -191.408, -32.4651, 0.44 ) }
    dend_67 { pt3dadd( 101.381, -192.511, -32.421, 0.44 ) }
    dend_67 { pt3dadd( 101.974, -193.792, -32.3561, 0.44 ) }
    dend_67 { pt3dadd( 102.573, -194.95, -32.3071, 0.44 ) }
    dend_67 { pt3dadd( 102.98, -195.77, -32.3232, 0.29 ) }
    dend_67 { pt3dadd( 103.51, -196.945, -32.4636, 0.29 ) }
    dend_67 { pt3dadd( 103.737, -197.579, -32.6254, 1.4 ) }
    dend_67 { pt3dadd( 103.887, -198.298, -32.8501, 1.99 ) }
    dend_67 { pt3dadd( 103.986, -199.244, -33.184, 1.47 ) }
    dend_67 { pt3dadd( 104.048, -200.769, -33.7738, 0.44 ) }
    dend_67 { pt3dadd( 104.089, -202.007, -34.1975, 0.37 ) }
    dend_67 { pt3dadd( 104.16, -203.173, -34.543, 0.37 ) }
    dend_67 { pt3dadd( 104.243, -204.186, -34.7849, 0.74 ) }
    dend_67 { pt3dadd( 104.343, -204.897, -34.9347, 0.88 ) }
    dend_67 { pt3dadd( 104.485, -205.557, -35.0411, 0.37 ) }
    dend_67 { pt3dadd( 105.062, -207.486, -35.2232, 0.29 ) }
    dend_67 { pt3dadd( 105.385, -208.296, -35.2465, 0.29 ) }
    dend_67 { pt3dadd( 105.747, -209.031, -35.2528, 0.96 ) }
    dend_67 { pt3dadd( 106.624, -210.604, -35.4198, 0.37 ) }
    dend_67 { pt3dadd( 107.236, -211.649, -35.6322, 0.66 ) }
    dend_67 { pt3dadd( 107.493, -212.079, -35.7617, 0.66 ) }
    dend_67 { pt3dadd( 108.309, -213.479, -36.3876, 0.37 ) }
    dend_67 { pt3dadd( 108.533, -213.86, -36.5749, 0.81 ) }
    dend_67 { pt3dadd( 109.687, -215.688, -37.514, 0.37 ) }
    dend_67 { pt3dadd( 109.97, -216.082, -37.7386, 0.88 ) }
    dend_67 { pt3dadd( 110.255, -216.423, -37.9709, 0.88 ) }
    dend_67 { pt3dadd( 111.019, -217.189, -38.5869, 0.44 ) }
    dend_67 { pt3dadd( 111.54, -217.668, -39.0195, 0.44 ) }
    dend_67 { pt3dadd( 112.297, -218.307, -39.5602, 0.81 ) }
    dend_67 { pt3dadd( 113.554, -219.236, -40.3448, 1.55 ) }
    dend_67 { pt3dadd( 114.023, -219.562, -40.6307, 1.69 ) }
    dend_67 { pt3dadd( 115.305, -220.44, -41.4341, 0.37 ) }
    dend_67 { pt3dadd( 116.206, -221.066, -42.0144, 0.37 ) }
    dend_67 { pt3dadd( 117.096, -221.75, -42.6469, 0.37 ) }
    dend_67 { pt3dadd( 118.041, -222.558, -43.3384, 0.44 ) }
    dend_67 { pt3dadd( 118.693, -223.157, -43.7912, 1.03 ) }
    dend_67 { pt3dadd( 119.189, -223.599, -44.1121, 1.4 ) }
    dend_67 { pt3dadd( 119.598, -223.946, -44.3459, 1.4 ) }
    dend_67 { pt3dadd( 120.817, -224.876, -44.9427, 0.29 ) }
    dend_67 { pt3dadd( 121.712, -225.585, -45.3095, 0.29 ) }
    dend_67 { pt3dadd( 122.423, -226.15, -45.5366, 0.29 ) }
    dend_67 { pt3dadd( 122.965, -226.562, -45.6793, 0.29 ) }
    dend_67 { pt3dadd( 123.661, -227.069, -45.8306, 0.74 ) }
    dend_67 { pt3dadd( 124.245, -227.479, -45.943, 1.11 ) }
    dend_67 { pt3dadd( 125.458, -228.267, -46.1304, 0.52 ) }
    dend_67 { pt3dadd( 126.129, -228.708, -46.2377, 0.81 ) }
    dend_67 { pt3dadd( 126.89, -229.261, -46.3643, 0.66 ) }
    dend_67 { pt3dadd( 127.714, -229.895, -46.5323, 0.29 ) }
    dend_67 { pt3dadd( 128.437, -230.435, -46.6967, 0.29 ) }
    dend_67 { pt3dadd( 129.41, -231.121, -46.9292, 0.29 ) }
    dend_67 { pt3dadd( 130.66, -231.92, -47.2248, 0.44 ) }
    dend_67 { pt3dadd( 131.269, -232.3, -47.3511, 0.44 ) }
    dend_67 { pt3dadd( 132.19, -232.872, -47.5436, 0.29 ) }
    dend_67 { pt3dadd( 132.659, -233.176, -47.635, 0.59 ) }
    dend_67 { pt3dadd( 132.989, -233.403, -47.7035, 0.59 ) }
    dend_67 { pt3dadd( 133.56, -233.835, -47.8447, 0.29 ) }
    dend_67 { pt3dadd( 134.337, -234.45, -48.0676, 0.29 ) }
    dend_67 { pt3dadd( 135.056, -235.053, -48.2954, 0.59 ) }
    dend_67 { pt3dadd( 135.429, -235.39, -48.4151, 0.74 ) }
    dend_67 { pt3dadd( 135.669, -235.627, -48.5023, 0.74 ) }
    dend_67 { pt3dadd( 136.738, -236.755, -48.9387, 0.29 ) }
    dend_67 { pt3dadd( 137.503, -237.633, -49.3003, 0.44 ) }
    dend_67 { pt3dadd( 137.985, -238.213, -49.5578, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.86928, -3.63695, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.86928, -3.63695, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.59094, -4.64528, 4.41121, 1.25 ) }
    dend_56 { pt3dadd( 7.13176, -6.38409, 4.91058, 1.4 ) }
    dend_56 { pt3dadd( 6.68198, -8.29708, 5.38878, 1.4 ) }
    dend_56 { pt3dadd( 6.35083, -10.1004, 5.78526, 1.18 ) }
    dend_56 { pt3dadd( 6.10354, -11.939, 6.15114, 1.18 ) }
    dend_56 { pt3dadd( 6.00803, -13.4731, 6.41086, 1.4 ) }
    dend_56 { pt3dadd( 6.11739, -15.6508, 6.71801, 1.4 ) }
    dend_56 { pt3dadd( 6.35208, -18.0018, 6.9733, 1.4 ) }
    dend_56 { pt3dadd( 6.67828, -19.9679, 7.12226, 1.62 ) }
    dend_56 { pt3dadd( 7.00471, -21.2708, 7.2127, 1.47 ) }
    dend_56 { pt3dadd( 7.73491, -23.3543, 7.31813, 1.03 ) }
    dend_56 { pt3dadd( 8.79877, -25.6247, 7.43177, 1.03 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.81072, -2.89695, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -9.81072, -2.89695, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -10.8498, -4.0787, -6.46014, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -12.2227, -5.90933, -6.74762, 1.11 ) }
    dend_51 { pt3dadd( -12.977, -7.05033, -6.96626, 1.18 ) }
    dend_51 { pt3dadd( -13.6779, -8.2601, -7.25186, 1.03 ) }
    dend_51 { pt3dadd( -14.5029, -9.68406, -7.58803, 0.96 ) }
    dend_51 { pt3dadd( -15.1911, -10.9823, -7.92113, 1.4 ) }
    dend_51 { pt3dadd( -15.8528, -12.5276, -8.38345, 1.62 ) }
    dend_51 { pt3dadd( -16.0906, -13.3303, -8.66708, 1.84 ) }
    dend_51 { pt3dadd( -16.392, -14.7354, -9.24028, 1.84 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 8/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.60072, -7.02695, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -3.60072, -7.02695, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -4.33567, -7.87895, -2.05863, 1.11 ) }
    dend_32 { pt3dadd( -5.4296, -8.96467, -2.60989, 0.96 ) }
    dend_32 { pt3dadd( -5.79152, -9.27342, -2.74196, 0.96 ) }
    dend_32 { pt3dadd( -6.67096, -9.90005, -2.96966, 0.66 ) }
    dend_32 { pt3dadd( -7.42943, -10.376, -3.08115, 0.66 ) }
    dend_32 { pt3dadd( -7.92862, -10.6247, -3.08848, 1.03 ) }
    dend_32 { pt3dadd( -8.86431, -10.9967, -2.99394, 1.33 ) }
    dend_32 { pt3dadd( -9.50216, -11.2445, -2.88977, 1.47 ) }
    dend_32 { pt3dadd( -10.3575, -11.6258, -2.77346, 1.11 ) }
    dend_32 { pt3dadd( -11.2021, -12.1127, -2.72553, 0.96 ) }
    dend_32 { pt3dadd( -12.1535, -12.8984, -2.81091, 0.66 ) }
    dend_32 { pt3dadd( -12.8258, -13.6882, -3.00192, 0.52 ) }
    dend_32 { pt3dadd( -13.271, -14.4723, -3.31946, 0.44 ) }
    dend_32 { pt3dadd( -13.586, -15.4078, -3.82485, 0.44 ) }
    dend_32 { pt3dadd( -13.8496, -16.5954, -4.56434, 1.4 ) }
    dend_32 { pt3dadd( -13.9367, -17.1515, -4.92782, 1.84 ) }
    dend_32 { pt3dadd( -13.9943, -17.661, -5.25473, 2.14 ) }
    dend_32 { pt3dadd( -14.1228, -18.9087, -5.98903, 1.99 ) }
    dend_32 { pt3dadd( -14.3369, -20.8483, -6.93559, 1.03 ) }
    dend_32 { pt3dadd( -14.5115, -22.2559, -7.47261, 0.88 ) }
    dend_32 { pt3dadd( -14.676, -23.3128, -7.62674, 0.81 ) }
    dend_32 { pt3dadd( -14.8302, -24.0698, -7.50016, 0.66 ) }
    dend_32 { pt3dadd( -15.1218, -25.2206, -6.96985, 0.66 ) }
    dend_32 { pt3dadd( -15.4091, -26.1604, -6.28782, 0.96 ) }
    dend_32 { pt3dadd( -15.5709, -26.6191, -5.8529, 1.11 ) }
    dend_32 { pt3dadd( -16.6016, -29.3702, -3.11163, 0.44 ) }
    dend_32 { pt3dadd( -16.937, -30.2155, -2.30643, 1.03 ) }
    dend_32 { pt3dadd( -17.0232, -30.4249, -2.13336, 1.4 ) }
    dend_32 { pt3dadd( -17.2648, -30.9493, -1.79932, 1.69 ) }
    dend_32 { pt3dadd( -17.4836, -31.373, -1.66357, 1.69 ) }
    dend_32 { pt3dadd( -18.303, -32.7737, -1.63995, 0.81 ) }
    dend_32 { pt3dadd( -18.8058, -33.4518, -1.85181, 1.18 ) }
    dend_32 { pt3dadd( -19.4621, -34.1413, -2.10584, 1.47 ) }
    dend_32 { pt3dadd( -19.9195, -34.5551, -2.24484, 1.47 ) }
    dend_32 { pt3dadd( -20.5612, -35.0984, -2.36173, 1.4 ) }
    dend_32 { pt3dadd( -21.3873, -35.7654, -2.4176, 1.11 ) }
    dend_32 { pt3dadd( -22.7332, -36.808, -2.3475, 0.52 ) }
    dend_32 { pt3dadd( -23.5749, -37.5027, -2.23035, 0.52 ) }
    dend_32 { pt3dadd( -24.4792, -38.4042, -1.99622, 0.52 ) }
    dend_32 { pt3dadd( -25.3338, -39.6148, -1.64089, 1.18 ) }
    dend_32 { pt3dadd( -25.5796, -40.1404, -1.51668, 1.55 ) }
    dend_32 { pt3dadd( -25.6873, -40.518, -1.47144, 1.69 ) }
    dend_32 { pt3dadd( -25.8071, -41.1172, -1.48178, 1.92 ) }
    dend_32 { pt3dadd( -25.9874, -42.1026, -1.66226, 0.74 ) }
    dend_32 { pt3dadd( -26.2097, -43.384, -1.91572, 0.44 ) }
    dend_32 { pt3dadd( -26.5257, -45.079, -2.25525, 0.44 ) }
    dend_32 { pt3dadd( -26.8157, -46.5173, -2.49977, 0.44 ) }
    dend_32 { pt3dadd( -27.1978, -48.1951, -2.72174, 0.74 ) }
    dend_32 { pt3dadd( -27.5204, -49.2994, -2.81751, 0.52 ) }
    dend_32 { pt3dadd( -28.3834, -51.6464, -2.89272, 1.03 ) }
    dend_32 { pt3dadd( -28.6269, -52.2382, -2.86378, 1.25 ) }
    dend_32 { pt3dadd( -28.9369, -53.0019, -2.75752, 0.66 ) }
    dend_32 { pt3dadd( -29.2777, -53.9426, -2.55199, 0.29 ) }
    dend_32 { pt3dadd( -29.6114, -55.074, -2.26479, 0.29 ) }
    dend_32 { pt3dadd( -29.7801, -55.7614, -2.09977, 0.59 ) }
    dend_32 { pt3dadd( -30.0131, -57.123, -1.83784, 0.59 ) }
    dend_32 { pt3dadd( -30.0612, -58.0461, -1.62333, 1.03 ) }
    dend_32 { pt3dadd( -29.988, -59.6465, -1.25194, 1.4 ) }
    dend_32 { pt3dadd( -29.9122, -60.3689, -1.09336, 1.77 ) }
    dend_32 { pt3dadd( -29.8397, -60.9635, -0.999418, 2.14 ) }
    dend_32 { pt3dadd( -29.7719, -61.8738, -0.914068, 2.36 ) }
    dend_32 { pt3dadd( -29.8565, -63.1514, -0.951852, 0.74 ) }
    dend_32 { pt3dadd( -30.0967, -64.1332, -1.08492, 0.44 ) }
    dend_32 { pt3dadd( -30.4191, -64.9027, -1.3005, 0.44 ) }
    dend_32 { pt3dadd( -31.006, -66.042, -1.60898, 0.74 ) }
    dend_32 { pt3dadd( -31.335, -66.6199, -1.7327, 0.74 ) }
    dend_32 { pt3dadd( -31.9296, -67.631, -1.88181, 0.66 ) }
    dend_32 { pt3dadd( -32.3402, -68.3727, -1.89891, 0.44 ) }
    dend_32 { pt3dadd( -32.7035, -69.2251, -1.79927, 0.44 ) }
    dend_32 { pt3dadd( -33.0768, -70.4905, -1.53541, 0.59 ) }
    dend_32 { pt3dadd( -33.2811, -71.354, -1.29385, 0.81 ) }
    dend_32 { pt3dadd( -33.4786, -72.0635, -1.08702, 0.96 ) }
    dend_32 { pt3dadd( -33.7246, -72.728, -0.885929, 0.74 ) }
    dend_32 { pt3dadd( -34.0792, -73.39, -0.720457, 0.44 ) }
    dend_32 { pt3dadd( -34.569, -74.0205, -0.599053, 0.44 ) }
    dend_32 { pt3dadd( -35.1951, -74.6427, -0.572636, 0.74 ) }
    dend_32 { pt3dadd( -36.3558, -75.7011, -0.578328, 0.88 ) }
    dend_32 { pt3dadd( -36.956, -76.2427, -0.552328, 1.4 ) }
    dend_32 { pt3dadd( -37.2607, -76.5474, -0.496314, 1.4 ) }
    dend_32 { pt3dadd( -37.7598, -77.1929, -0.312082, 1.18 ) }
    dend_32 { pt3dadd( -38.0919, -77.8452, -0.084616, 0.81 ) }
    dend_32 { pt3dadd( -38.3638, -78.848, 0.288546, 0.52 ) }
    dend_32 { pt3dadd( -38.4733, -79.8212, 0.652997, 0.52 ) }
    dend_32 { pt3dadd( -38.5328, -81.1891, 1.15886, 0.74 ) }
    dend_32 { pt3dadd( -38.5523, -82.1526, 1.4887, 0.52 ) }
    dend_32 { pt3dadd( -38.5636, -82.6724, 1.65383, 1.11 ) }
    dend_32 { pt3dadd( -38.5949, -83.2989, 1.84564, 1.4 ) }
    dend_32 { pt3dadd( -38.6415, -83.8213, 1.97628, 1.55 ) }
    dend_32 { pt3dadd( -38.7376, -84.5813, 2.12245, 0.74 ) }
    dend_32 { pt3dadd( -38.9795, -85.9953, 2.34087, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -39.2041, -87.0114, 2.54667, 0.81 ) }
    dend_32 { pt3dadd( -39.5169, -88.1867, 2.82798, 1.11 ) }
    dend_32 { pt3dadd( -39.7931, -89.0243, 3.05209, 1.33 ) }
    dend_32 { pt3dadd( -40.0573, -89.6804, 3.24439, 1.55 ) }
    dend_32 { pt3dadd( -40.3816, -90.299, 3.46212, 1.18 ) }
    dend_32 { pt3dadd( -41.2256, -91.4217, 4.02684, 0.59 ) }
    dend_32 { pt3dadd( -41.6149, -91.8062, 4.29142, 0.96 ) }
    dend_32 { pt3dadd( -42.071, -92.1857, 4.59003, 1.11 ) }
    dend_32 { pt3dadd( -42.5425, -92.5572, 4.90507, 1.11 ) }
    dend_32 { pt3dadd( -43.4082, -93.2354, 5.48862, 0.59 ) }
    dend_32 { pt3dadd( -44.3443, -93.9904, 6.10511, 0.81 ) }
    dend_32 { pt3dadd( -45.1812, -94.7132, 6.62855, 0.59 ) }
    dend_32 { pt3dadd( -46.0599, -95.5739, 7.18031, 0.59 ) }
    dend_32 { pt3dadd( -46.9112, -96.5526, 7.70992, 0.44 ) }
    dend_32 { pt3dadd( -47.5298, -97.439, 8.03408, 0.81 ) }
    dend_32 { pt3dadd( -47.8767, -98.0937, 8.16009, 0.96 ) }
    dend_32 { pt3dadd( -48.085, -98.6626, 8.18511, 0.96 ) }
    dend_32 { pt3dadd( -48.2541, -99.452, 8.13559, 0.96 ) }
    dend_32 { pt3dadd( -48.3477, -100.273, 8.04394, 0.66 ) }
    dend_32 { pt3dadd( -48.3978, -101.932, 7.79697, 0.52 ) }
    dend_32 { pt3dadd( -48.3816, -102.79, 7.6627, 0.66 ) }
    dend_32 { pt3dadd( -48.3403, -103.813, 7.52105, 1.33 ) }
    dend_32 { pt3dadd( -48.32, -104.54, 7.43771, 1.99 ) }
    dend_32 { pt3dadd( -48.3585, -106.287, 7.294, 0.44 ) }
    dend_32 { pt3dadd( -48.4686, -107.225, 7.26065, 0.44 ) }
    dend_32 { pt3dadd( -48.626, -107.877, 7.27509, 0.74 ) }
    dend_32 { pt3dadd( -48.81, -108.389, 7.28703, 0.74 ) }
    dend_32 { pt3dadd( -49.1573, -109.117, 7.32516, 0.74 ) }
    dend_32 { pt3dadd( -49.6072, -109.897, 7.37596, 0.37 ) }
    dend_32 { pt3dadd( -50.312, -110.928, 7.45241, 0.29 ) }
    dend_32 { pt3dadd( -50.8917, -111.62, 7.5228, 0.29 ) }
    dend_32 { pt3dadd( -51.5964, -112.359, 7.61334, 0.29 ) }
    dend_32 { pt3dadd( -52.226, -112.962, 7.73049, 0.22 ) }
    dend_32 { pt3dadd( -52.5782, -113.277, 7.81242, 0.22 ) }
    dend_32 { pt3dadd( -53.1484, -113.799, 7.96685, 0.81 ) }
    dend_32 { pt3dadd( -53.4812, -114.129, 8.06711, 0.96 ) }
    dend_32 { pt3dadd( -54.272, -114.925, 8.31709, 0.22 ) }
    dend_32 { pt3dadd( -54.9436, -115.655, 8.53424, 1.33 ) }
    dend_32 { pt3dadd( -55.3833, -116.209, 8.67009, 1.55 ) }
    dend_32 { pt3dadd( -56.0173, -117.111, 8.89017, 1.11 ) }
    dend_32 { pt3dadd( -56.3641, -117.665, 9.03324, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.23072, 4.50305, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -2.23072, 4.50305, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -3.5939, 5.49006, 5.70102, 1.55 ) }
    dend_13 { pt3dadd( -4.98592, 6.41419, 5.70102, 1.4 ) }
    dend_13 { pt3dadd( -6.54593, 7.35152, 5.70102, 1.18 ) }
    dend_13 { pt3dadd( -7.67542, 7.99026, 5.70512, 1.47 ) }
    dend_13 { pt3dadd( -9.18388, 8.84151, 5.75997, 1.77 ) }
    dend_13 { pt3dadd( -10.2736, 9.44518, 5.85096, 1.99 ) }
    dend_13 { pt3dadd( -11.4678, 10.1222, 6.04858, 1.99 ) }
    dend_13 { pt3dadd( -12.8873, 11.0322, 6.435, 1.62 ) }
    dend_13 { pt3dadd( -14.4912, 12.3371, 7.11245, 1.11 ) }
    dend_13 { pt3dadd( -15.493, 13.4377, 7.75125, 1.11 ) }
    dend_13 { pt3dadd( -16.2331, 14.6274, 8.4723, 1.25 ) }
    dend_13 { pt3dadd( -16.822, 16.1902, 9.41716, 1.47 ) }
    dend_13 { pt3dadd( -17.0733, 17.7046, 10.3405, 1.69 ) }
    dend_13 { pt3dadd( -17.037, 18.9563, 11.0936, 1.92 ) }
    dend_13 { pt3dadd( -16.7905, 20.396, 11.9203, 1.77 ) }
    dend_13 { pt3dadd( -16.4918, 21.4725, 12.4757, 1.4 ) }
    dend_13 { pt3dadd( -15.9863, 22.8731, 13.1187, 1.18 ) }
    dend_13 { pt3dadd( -15.4287, 24.2562, 13.7041, 1.11 ) }
    dend_13 { pt3dadd( -14.6131, 26.0712, 14.4466, 1.62 ) }
    dend_13 { pt3dadd( -14.2266, 26.8654, 14.7618, 1.99 ) }
    dend_13 { pt3dadd( -13.6433, 27.9767, 15.1917, 2.21 ) }
    dend_13 { pt3dadd( -13.1462, 28.8601, 15.525, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.9007, 0.873047, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -10.9469, 0.881993, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -11.6961, 1.03987, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -12.3834, 1.20721, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -13.2002, 1.43289, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -14.058, 1.70088, -3.98898, 1.84 ) }
    dend_0 { pt3dadd( -14.6646, 1.9195, -3.98898, 1.92 ) }
    dend_0 { pt3dadd( -15.2421, 2.15635, -4.00415, 2.14 ) }
    dend_0 { pt3dadd( -15.9199, 2.48285, -4.03972, 2.14 ) }
    dend_0 { pt3dadd( -16.5112, 2.82077, -4.09274, 2.14 ) }
    dend_0 { pt3dadd( -17.0037, 3.15287, -4.17385, 2.14 ) }
    dend_0 { pt3dadd( -17.7363, 3.71834, -4.34412, 2.14 ) }
    dend_0 { pt3dadd( -18.3256, 4.22255, -4.55292, 2.14 ) }
    dend_0 { pt3dadd( -18.6733, 4.53794, -4.69737, 2.21 ) }
    dend_0 { pt3dadd( -19.0652, 4.91198, -4.89131, 1.99 ) }
    dend_0 { pt3dadd( -19.5471, 5.39523, -5.17459, 1.99 ) }
    dend_0 { pt3dadd( -19.9603, 5.82538, -5.46208, 2.14 ) }
    dend_0 { pt3dadd( -20.6, 6.53571, -6.00452, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 26.063, 3.65858, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 40.8915, 5.92002, 2.65033, 3.17 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 86/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.79877, -25.6247, 7.43177, 1.25 ) }
    dend_62 { pt3dadd( 9.36709, -26.9045, 7.30334, 1.25 ) }
    dend_62 { pt3dadd( 9.52653, -28.6449, 7.05646, 1.03 ) }
    dend_62 { pt3dadd( 9.22459, -30.0989, 6.81155, 0.66 ) }
    dend_62 { pt3dadd( 8.9151, -31.1601, 6.63557, 0.96 ) }
    dend_62 { pt3dadd( 8.62882, -32.264, 6.46915, 1.18 ) }
    dend_62 { pt3dadd( 8.32435, -33.8484, 6.25619, 1.18 ) }
    dend_62 { pt3dadd( 8.13701, -34.8519, 6.10267, 1.47 ) }
    dend_62 { pt3dadd( 7.84494, -36.4541, 5.8901, 0.81 ) }
    dend_62 { pt3dadd( 7.76949, -37.525, 5.79747, 0.81 ) }
    dend_62 { pt3dadd( 8.07258, -38.822, 5.74233, 0.96 ) }
    dend_62 { pt3dadd( 8.64422, -39.8723, 5.77112, 0.88 ) }
    dend_62 { pt3dadd( 9.40053, -40.9911, 5.88069, 1.33 ) }
    dend_62 { pt3dadd( 9.85404, -41.6547, 5.97394, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 10.3527, -42.4174, 6.1037, 1.33 ) }
    dend_62 { pt3dadd( 10.7822, -43.2404, 6.25021, 0.81 ) }
    dend_62 { pt3dadd( 11.2971, -44.749, 6.4929, 0.66 ) }
    dend_62 { pt3dadd( 11.6263, -46.2902, 6.69161, 0.96 ) }
    dend_62 { pt3dadd( 11.7579, -47.3083, 6.77809, 1.4 ) }
    dend_62 { pt3dadd( 11.8297, -48.1413, 6.8156, 1.4 ) }
    dend_62 { pt3dadd( 11.8801, -48.9858, 6.86485, 1.4 ) }
    dend_62 { pt3dadd( 11.9048, -50.4413, 7.0064, 0.96 ) }
    dend_62 { pt3dadd( 11.9, -51.1318, 7.11922, 0.81 ) }
    dend_62 { pt3dadd( 11.872, -52.414, 7.48118, 0.81 ) }
    dend_62 { pt3dadd( 11.8368, -53.355, 7.82252, 0.74 ) }
    dend_62 { pt3dadd( 11.748, -55.2796, 8.6575, 0.74 ) }
    dend_62 { pt3dadd( 11.695, -56.7405, 9.30414, 0.88 ) }
    dend_62 { pt3dadd( 11.6851, -57.9373, 9.81524, 0.88 ) }
    dend_62 { pt3dadd( 11.7622, -59.2741, 10.2912, 1.47 ) }
    dend_62 { pt3dadd( 11.9809, -60.5154, 10.5455, 0.81 ) }
    dend_62 { pt3dadd( 12.4449, -61.9473, 10.5397, 0.59 ) }
    dend_62 { pt3dadd( 13.1199, -63.5307, 10.3057, 0.88 ) }
    dend_62 { pt3dadd( 13.6324, -64.6586, 10.1138, 0.88 ) }
    dend_62 { pt3dadd( 14.1956, -66.0097, 9.90382, 0.66 ) }
    dend_62 { pt3dadd( 14.7266, -67.5047, 9.73347, 0.59 ) }
    dend_62 { pt3dadd( 15.0468, -68.7721, 9.70268, 0.59 ) }
    dend_62 { pt3dadd( 15.2494, -70.1653, 9.80143, 0.59 ) }
    dend_62 { pt3dadd( 15.3513, -71.532, 10.0532, 0.88 ) }
    dend_62 { pt3dadd( 15.361, -73.0828, 10.4724, 0.66 ) }
    dend_62 { pt3dadd( 15.3126, -74.3234, 10.8799, 1.03 ) }
    dend_62 { pt3dadd( 15.1962, -75.9181, 11.4574, 1.25 ) }
    dend_62 { pt3dadd( 15.0545, -77.5014, 12.032, 1.25 ) }
    dend_62 { pt3dadd( 14.9756, -78.5366, 12.376, 1.84 ) }
    dend_62 { pt3dadd( 14.9413, -79.5383, 12.6943, 2.28 ) }
    dend_62 { pt3dadd( 14.9346, -80.412, 13.0375, 1.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.79877, -25.6247, 7.43177, 0.74 ) }
    dend_57 { pt3dadd( 8.28384, -28.0809, 10.4428, 0.74 ) }
    dend_57 { pt3dadd( 8.31185, -28.5883, 11.313, 0.74 ) }
    dend_57 { pt3dadd( 8.3678, -29.0217, 12.151, 0.74 ) }
    dend_57 { pt3dadd( 8.44371, -29.7194, 13.463, 1.11 ) }
    dend_57 { pt3dadd( 8.48263, -30.08, 14.0724, 1.11 ) }
    dend_57 { pt3dadd( 8.59416, -31.0045, 15.4084, 0.66 ) }
    dend_57 { pt3dadd( 8.95319, -32.9012, 17.6897, 1.4 ) }
    dend_57 { pt3dadd( 9.07778, -33.7178, 18.649, 0.96 ) }
    dend_57 { pt3dadd( 9.12006, -34.3995, 19.3976, 1.18 ) }
    dend_57 { pt3dadd( 9.0814, -35.3408, 20.2748, 0.88 ) }
    dend_57 { pt3dadd( 8.88718, -36.6325, 21.2494, 0.66 ) }
    dend_57 { pt3dadd( 8.5148, -38.1053, 22.0546, 0.66 ) }
    dend_57 { pt3dadd( 8.25249, -38.9874, 22.4248, 0.59 ) }
    dend_57 { pt3dadd( 7.84781, -40.2915, 22.9531, 0.74 ) }
    dend_57 { pt3dadd( 7.55297, -41.1206, 23.3182, 1.03 ) }
    dend_57 { pt3dadd( 7.18527, -41.9043, 23.7008, 1.18 ) }
    dend_57 { pt3dadd( 6.59246, -42.8936, 24.1896, 1.4 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -16.392, -14.7354, -9.24028, 0.81 ) }
    dend_53 { pt3dadd( -18.0347, -15.7799, -9.12327, 0.81 ) }
    dend_53 { pt3dadd( -19.0381, -16.4589, -8.8894, 0.88 ) }
    dend_53 { pt3dadd( -19.9901, -17.1759, -8.57021, 1.03 ) }
    dend_53 { pt3dadd( -20.749, -17.8325, -8.25658, 1.03 ) }
    dend_53 { pt3dadd( -21.4666, -18.5775, -7.89739, 0.52 ) }
    dend_53 { pt3dadd( -22.0887, -19.4143, -7.45186, 0.52 ) }
    dend_53 { pt3dadd( -22.6189, -20.5594, -6.6989, 0.74 ) }
    dend_53 { pt3dadd( -22.7581, -21.0566, -6.36606, 0.96 ) }
    dend_53 { pt3dadd( -22.8652, -21.6597, -5.95812, 0.59 ) }
    dend_53 { pt3dadd( -22.9805, -22.4454, -5.45405, 0.44 ) }
    dend_53 { pt3dadd( -23.2116, -23.9535, -4.65729, 0.44 ) }
    dend_53 { pt3dadd( -23.3453, -24.575, -4.33943, 0.81 ) }
    dend_53 { pt3dadd( -23.5967, -25.2811, -3.96448, 0.96 ) }
    dend_53 { pt3dadd( -24.0462, -26.2105, -3.41467, 1.03 ) }
    dend_53 { pt3dadd( -24.3749, -26.8119, -3.05336, 0.96 ) }
    dend_53 { pt3dadd( -24.8245, -27.6411, -2.58814, 0.37 ) }
    dend_53 { pt3dadd( -25.5452, -29.1949, -1.79032, 0.37 ) }
    dend_53 { pt3dadd( -25.8484, -30.0255, -1.37526, 0.29 ) }
    dend_53 { pt3dadd( -26.0498, -30.8054, -1.02632, 0.37 ) }
    dend_53 { pt3dadd( -26.2771, -31.9081, -0.600993, 0.37 ) }
    dend_53 { pt3dadd( -26.466, -33.0433, -0.203232, 0.81 ) }
    dend_53 { pt3dadd( -26.6347, -34.1374, 0.130368, 1.25 ) }
    dend_53 { pt3dadd( -26.6902, -34.4668, 0.201329, 1.55 ) }
    dend_53 { pt3dadd( -26.9786, -35.7371, 0.459483, 0.37 ) }
    dend_53 { pt3dadd( -27.2814, -36.4423, 0.594939, 0.37 ) }
    dend_53 { pt3dadd( -27.5302, -36.7602, 0.657675, 0.44 ) }
    dend_53 { pt3dadd( -28.2024, -37.392, 0.767706, 0.59 ) }
    dend_53 { pt3dadd( -28.6462, -37.7694, 0.811882, 0.66 ) }
    dend_53 { pt3dadd( -29.1979, -38.2206, 0.86022, 0.37 ) }
    dend_53 { pt3dadd( -29.8325, -38.7355, 0.907323, 0.59 ) }
    dend_53 { pt3dadd( -30.4898, -39.3394, 0.920567, 0.88 ) }
    dend_53 { pt3dadd( -30.8622, -39.7213, 0.907063, 1.03 ) }
    dend_53 { pt3dadd( -31.5208, -40.5205, 0.943346, 0.37 ) }
    dend_53 { pt3dadd( -31.7322, -40.7962, 0.981852, 0.37 ) }
    dend_53 { pt3dadd( -32.1264, -41.3039, 1.0952, 0.37 ) }
    dend_53 { pt3dadd( -32.6509, -41.9555, 1.28798, 0.66 ) }
    dend_53 { pt3dadd( -33.0542, -42.4125, 1.44922, 0.88 ) }
    dend_53 { pt3dadd( -34.447, -43.8316, 1.97719, 0.29 ) }
    dend_53 { pt3dadd( -35.0434, -44.4179, 2.18658, 0.29 ) }
    dend_53 { pt3dadd( -35.6242, -45.0354, 2.37633, 0.96 ) }
    dend_53 { pt3dadd( -35.9291, -45.3913, 2.47489, 1.33 ) }
    dend_53 { pt3dadd( -36.4756, -46.1295, 2.64458, 1.11 ) }
    dend_53 { pt3dadd( -37.1055, -47.1022, 2.8958, 0.59 ) }
    dend_53 { pt3dadd( -37.6552, -48.0254, 3.03649, 0.37 ) }
    dend_53 { pt3dadd( -38.0926, -48.8519, 3.39631, 0.66 ) }
    dend_53 { pt3dadd( -38.3658, -49.3354, 3.74711, 0.52 ) }
    dend_53 { pt3dadd( -38.7128, -49.8829, 4.30443, 0.29 ) }
    dend_53 { pt3dadd( -39.5409, -51.0768, 5.80088, 0.29 ) }
    dend_53 { pt3dadd( -40.2029, -51.8944, 7.0585, 0.81 ) }
    dend_53 { pt3dadd( -41.8956, -53.4562, 10.2977, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -42.3174, -53.7296, 11.0622, 0.29 ) }
    dend_53 { pt3dadd( -42.5539, -53.8379, 11.4643, 0.29 ) }
    dend_53 { pt3dadd( -43.0835, -53.9835, 12.3594, 0.66 ) }
    dend_53 { pt3dadd( -43.326, -54.0177, 12.7946, 0.66 ) }
    dend_53 { pt3dadd( -48.1768, -62.9784, 17.7947, 0.66 ) }
    dend_53 { pt3dadd( -53.6334, -71.7996, 22.403, 0.66 ) }
    dend_53 { pt3dadd( -59.3678, -80.4912, 26.9194, 0.66 ) }
    dend_53 { pt3dadd( -64.2314, -89.7383, 31.3535, 0.66 ) }
    dend_53 { pt3dadd( -67.4805, -98.2285, 38.1496, 0.66 ) }
    dend_53 { pt3dadd( -69.4488, -107.151, 44.8832, 0.66 ) }
    dend_53 { pt3dadd( -71.8618, -115.148, 52.5674, 0.66 ) }
    dend_53 { pt3dadd( -72.135, -124.029, 59.6295, 0.66 ) }
    dend_53 { pt3dadd( -71.0065, -132.565, 67.0257, 0.66 ) }
    dend_53 { pt3dadd( -67.9588, -141.348, 73.5358, 0.66 ) }
    dend_53 { pt3dadd( -64.3137, -150.456, 79.2443, 0.66 ) }
    dend_53 { pt3dadd( -61.0136, -159.518, 85.229, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -16.392, -14.7354, -9.24028, 1.03 ) }
    dend_52 { pt3dadd( -15.6885, -16.0819, -9.42204, 1.03 ) }
    dend_52 { pt3dadd( -14.4326, -18.0881, -9.51809, 0.81 ) }
    dend_52 { pt3dadd( -13.5754, -19.5011, -9.52979, 1.03 ) }
    dend_52 { pt3dadd( -12.6762, -21.1469, -9.4868, 0.88 ) }
    dend_52 { pt3dadd( -12.0461, -22.4452, -9.43657, 1.11 ) }
    dend_52 { pt3dadd( -11.5803, -23.5887, -9.39292, 0.74 ) }
    dend_52 { pt3dadd( -11.1763, -24.872, -9.28385, 0.52 ) }
    dend_52 { pt3dadd( -10.9403, -26.6171, -9.12907, 0.88 ) }
    dend_52 { pt3dadd( -11.0314, -27.8605, -9.11976, 1.47 ) }
    dend_52 { pt3dadd( -11.231, -28.6896, -9.12914, 1.25 ) }
    dend_52 { pt3dadd( -11.6583, -29.9994, -9.12569, 1.25 ) }
    dend_52 { pt3dadd( -12.0493, -31.0437, -9.10005, 0.81 ) }
    dend_52 { pt3dadd( -12.7143, -32.7097, -8.96035, 0.66 ) }
    dend_52 { pt3dadd( -13.2659, -34.2388, -8.68254, 0.66 ) }
    dend_52 { pt3dadd( -13.8284, -36.0636, -8.20619, 0.96 ) }
    dend_52 { pt3dadd( -14.0698, -36.9967, -7.88085, 1.11 ) }
    dend_52 { pt3dadd( -14.2552, -37.8657, -7.51662, 1.11 ) }
    dend_52 { pt3dadd( -14.4844, -39.0729, -6.94896, 0.74 ) }
    dend_52 { pt3dadd( -14.7138, -40.3212, -6.31563, 0.52 ) }
    dend_52 { pt3dadd( -14.9226, -41.2873, -5.84068, 0.74 ) }
    dend_52 { pt3dadd( -15.1304, -41.9945, -5.55988, 1.11 ) }
    dend_52 { pt3dadd( -15.579, -43.0216, -5.24771, 0.96 ) }
    dend_52 { pt3dadd( -16.2567, -44.0373, -5.04051, 0.74 ) }
    dend_52 { pt3dadd( -16.7946, -44.6296, -4.96233, 0.74 ) }
    dend_52 { pt3dadd( -17.3159, -45.1244, -4.8843, 0.74 ) }
    dend_52 { pt3dadd( -18.0455, -45.813, -4.73609, 0.59 ) }
    dend_52 { pt3dadd( -18.9259, -46.6873, -4.5015, 0.52 ) }
    dend_52 { pt3dadd( -19.7819, -47.6514, -4.17612, 0.52 ) }
    dend_52 { pt3dadd( -20.5323, -48.6684, -3.79342, 0.74 ) }
    dend_52 { pt3dadd( -21.3488, -50.1058, -3.21906, 0.88 ) }
    dend_52 { pt3dadd( -21.7178, -50.9982, -2.84766, 1.18 ) }
    dend_52 { pt3dadd( -21.9063, -51.707, -2.56566, 1.4 ) }
    dend_52 { pt3dadd( -22.0748, -52.6717, -2.2057, 1.62 ) }
    dend_52 { pt3dadd( -22.1616, -53.2838, -2.00175, 1.77 ) }
    dend_52 { pt3dadd( -22.2947, -54.1292, -1.77197, 1.4 ) }
    dend_52 { pt3dadd( -22.5119, -55.1626, -1.54166, 0.66 ) }
    dend_52 { pt3dadd( -22.8495, -56.3108, -1.3308, 0.44 ) }
    dend_52 { pt3dadd( -23.231, -57.2271, -1.19848, 0.81 ) }
    dend_52 { pt3dadd( -23.5598, -57.8537, -1.16172, 1.25 ) }
    dend_52 { pt3dadd( -23.7559, -58.221, -1.1794, 1.4 ) }
    dend_52 { pt3dadd( -23.9416, -58.5732, -1.24046, 1.4 ) }
    dend_52 { pt3dadd( -24.3516, -59.3343, -1.41973, 0.88 ) }
    dend_52 { pt3dadd( -25.0044, -60.5581, -1.747, 0.59 ) }
    dend_52 { pt3dadd( -25.6245, -61.7861, -2.09782, 0.59 ) }
    dend_52 { pt3dadd( -26.3921, -63.3356, -2.54086, 0.88 ) }
    dend_52 { pt3dadd( -27.0888, -64.7912, -2.95057, 0.52 ) }
    dend_52 { pt3dadd( -27.5785, -65.8988, -3.2673, 0.52 ) }
    dend_52 { pt3dadd( -27.7998, -66.5053, -3.44044, 1.11 ) }
    dend_52 { pt3dadd( -27.9985, -67.2254, -3.63132, 1.55 ) }
    dend_52 { pt3dadd( -28.1305, -67.9247, -3.75582, 1.77 ) }
    dend_52 { pt3dadd( -28.1996, -68.6563, -3.82126, 1.4 ) }
    dend_52 { pt3dadd( -28.1781, -70.1149, -3.85148, 0.66 ) }
    dend_52 { pt3dadd( -28.0553, -71.4817, -3.83302, 0.44 ) }
    dend_52 { pt3dadd( -27.9005, -72.6399, -3.76604, 0.44 ) }
    dend_52 { pt3dadd( -27.6833, -73.9536, -3.62982, 0.44 ) }
    dend_52 { pt3dadd( -27.5896, -74.5229, -3.5423, 0.88 ) }
    dend_52 { pt3dadd( -27.5244, -75.0054, -3.42437, 1.25 ) }
    dend_52 { pt3dadd( -27.4803, -75.5542, -3.24312, 1.55 ) }
    dend_52 { pt3dadd( -27.4927, -75.9489, -3.10113, 1.55 ) }
    dend_52 { pt3dadd( -27.6091, -76.7679, -2.81525, 1.25 ) }
    dend_52 { pt3dadd( -27.9946, -78.12, -2.35107, 0.59 ) }
    dend_52 { pt3dadd( -28.4641, -79.2371, -2.02438, 0.59 ) }
    dend_52 { pt3dadd( -28.7785, -79.7869, -1.85499, 0.96 ) }
    dend_52 { pt3dadd( -29.3024, -80.5143, -1.61849, 0.96 ) }
    dend_52 { pt3dadd( -29.8904, -81.1845, -1.38393, 0.81 ) }
    dend_52 { pt3dadd( -31.0628, -82.3001, -0.954194, 0.37 ) }
    dend_52 { pt3dadd( -32.2332, -83.2341, -0.572676, 0.37 ) }
    dend_52 { pt3dadd( -33.4001, -84.0839, -0.209121, 1.18 ) }
    dend_52 { pt3dadd( -33.8294, -84.3737, -0.0556007, 1.62 ) }
    dend_52 { pt3dadd( -34.2947, -84.6536, 0.127122, 1.62 ) }
    dend_52 { pt3dadd( -35.0773, -85.0704, 0.484918, 1.33 ) }
    dend_52 { pt3dadd( -36.33, -85.6527, 1.13831, 0.44 ) }
    dend_52 { pt3dadd( -37.4581, -86.1179, 1.77195, 0.44 ) }
    dend_52 { pt3dadd( -38.3429, -86.4828, 2.2559, 0.66 ) }
    dend_52 { pt3dadd( -39.393, -86.9241, 2.83391, 0.66 ) }
    dend_52 { pt3dadd( -40.4266, -87.3841, 3.40264, 0.44 ) }
    dend_52 { pt3dadd( -41.0638, -87.6947, 3.75163, 0.81 ) }
    dend_52 { pt3dadd( -41.55, -87.9628, 4.0028, 1.25 ) }
    dend_52 { pt3dadd( -42.1247, -88.3084, 4.27275, 1.55 ) }
    dend_52 { pt3dadd( -42.7314, -88.7113, 4.52592, 1.25 ) }
    dend_52 { pt3dadd( -43.4358, -89.2217, 4.80414, 0.52 ) }
    dend_52 { pt3dadd( -44.1305, -89.7486, 5.04844, 0.37 ) }
    dend_52 { pt3dadd( -44.8505, -90.2991, 5.37117, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( -45.8206, -91.009, 5.92691, 0.81 ) }
    dend_52 { pt3dadd( -46.3288, -91.356, 6.29661, 1.25 ) }
    dend_52 { pt3dadd( -46.8496, -91.6943, 6.79755, 0.81 ) }
    dend_52 { pt3dadd( -47.5508, -92.1511, 7.61427, 0.37 ) }
    dend_52 { pt3dadd( -48.5712, -92.8494, 8.99139, 0.37 ) }
    dend_52 { pt3dadd( -48.9929, -93.1518, 9.6049, 0.74 ) }
    dend_52 { pt3dadd( -49.5515, -93.5713, 10.4147, 0.81 ) }
    dend_52 { pt3dadd( -50.3057, -94.1358, 11.4508, 0.29 ) }
    dend_52 { pt3dadd( -50.7562, -94.4973, 12.0391, 0.88 ) }
    dend_52 { pt3dadd( -50.9817, -94.7204, 12.3123, 1.18 ) }
    dend_52 { pt3dadd( -51.3739, -95.2364, 12.6875, 1.18 ) }
    dend_52 { pt3dadd( -51.7625, -95.8398, 12.9807, 0.81 ) }
    dend_52 { pt3dadd( -52.3386, -96.8302, 13.3059, 0.29 ) }
    dend_52 { pt3dadd( -52.8143, -97.6853, 13.5155, 0.29 ) }
    dend_52 { pt3dadd( -53.1884, -98.407, 13.6977, 0.29 ) }
    dend_52 { pt3dadd( -53.4164, -98.9109, 13.8116, 0.66 ) }
    dend_52 { pt3dadd( -53.6681, -99.5527, 13.9499, 0.96 ) }
    dend_52 { pt3dadd( -53.9258, -100.28, 14.0712, 0.96 ) }
    dend_52 { pt3dadd( -54.2086, -101.093, 14.173, 0.52 ) }
    dend_52 { pt3dadd( -54.646, -102.256, 14.2812, 0.37 ) }
    dend_52 { pt3dadd( -54.9426, -103.058, 14.3109, 0.74 ) }
    dend_52 { pt3dadd( -55.2632, -103.934, 14.3045, 0.44 ) }
    dend_52 { pt3dadd( -55.5949, -104.803, 14.2625, 1.11 ) }
    dend_52 { pt3dadd( -55.821, -105.331, 14.2163, 1.11 ) }
    dend_52 { pt3dadd( -56.1442, -105.928, 14.1426, 0.81 ) }
    dend_52 { pt3dadd( -56.9681, -107.225, 13.9931, 0.37 ) }
    dend_52 { pt3dadd( -57.4963, -107.915, 13.962, 0.66 ) }
    dend_52 { pt3dadd( -57.7671, -108.223, 13.9626, 0.96 ) }
    dend_52 { pt3dadd( -58.231, -108.687, 14.048, 0.96 ) }
    dend_52 { pt3dadd( -59.1011, -109.403, 14.5499, 0.29 ) }
    dend_52 { pt3dadd( -59.6475, -109.65, 15.3813, 0.29 ) }
    dend_52 { pt3dadd( -60.0289, -109.758, 16.2369, 0.96 ) }
    dend_52 { pt3dadd( -60.1916, -109.79, 16.7234, 1.25 ) }
    dend_52 { pt3dadd( -60.6544, -109.851, 18.2532, 0.44 ) }
    dend_52 { pt3dadd( -61.4634, -109.883, 21.2722, 0.81 ) }
    dend_52 { pt3dadd( -62.5885, -109.78, 26.074, 0.22 ) }
    dend_52 { pt3dadd( -62.929, -109.697, 27.6493, 1.18 ) }
    dend_52 { pt3dadd( -63.2318, -109.586, 29.2852, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -56.3641, -117.665, 9.03324, 0.29 ) }
    dend_40 { pt3dadd( -55.1295, -118.147, 9.03731, 0.29 ) }
    dend_40 { pt3dadd( -54.1967, -118.511, 9.04039, 0.29 ) }
    dend_40 { pt3dadd( -53.0684, -118.951, 9.04412, 0.29 ) }
    dend_40 { pt3dadd( -52.1877, -119.295, 9.04702, 0.15 ) }
    dend_40 { pt3dadd( -51.4981, -119.564, 9.0493, 0.29 ) }
    dend_40 { pt3dadd( -51.1177, -119.712, 9.05055, 0.29 ) }
    dend_40 { pt3dadd( -44.1824, -123.198, 8.25189, 0.29 ) }
    dend_40 { pt3dadd( -37.867, -127.781, 8.18988, 0.29 ) }
    dend_40 { pt3dadd( -31.6211, -132.368, 7.27156, 0.29 ) }
    dend_40 { pt3dadd( -25.6943, -137.421, 7.75418, 0.29 ) }
    dend_40 { pt3dadd( -20.2478, -142.993, 7.32982, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -56.3641, -117.665, 9.03324, 0.29 ) }
    dend_33 { pt3dadd( -57.4427, -118.696, 8.98675, 0.29 ) }
    dend_33 { pt3dadd( -58.5417, -119.722, 8.93213, 0.29 ) }
    dend_33 { pt3dadd( -59.6539, -120.76, 8.87685, 0.29 ) }
    dend_33 { pt3dadd( -60.9866, -122.004, 8.81063, 0.29 ) }
    dend_33 { pt3dadd( -61.7364, -122.704, 8.77336, 0.29 ) }
    dend_33 { pt3dadd( -62.523, -123.438, 8.73427, 0.81 ) }
    dend_33 { pt3dadd( -63.0471, -123.864, 8.68166, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -13.1462, 28.8601, 15.525, 0.66 ) }
    dend_29 { pt3dadd( -15.2186, 29.6556, 16.2887, 0.66 ) }
    dend_29 { pt3dadd( -16.2893, 30.0351, 16.6535, 0.66 ) }
    dend_29 { pt3dadd( -17.3095, 30.3601, 16.9358, 0.59 ) }
    dend_29 { pt3dadd( -18.1295, 30.6237, 17.167, 1.11 ) }
    dend_29 { pt3dadd( -18.6752, 30.8163, 17.3795, 1.4 ) }
    dend_29 { pt3dadd( -19.0497, 30.9698, 17.5564, 1.4 ) }
    dend_29 { pt3dadd( -19.7277, 31.2913, 17.9158, 0.66 ) }
    dend_29 { pt3dadd( -20.2144, 31.7235, 18.4223, 0.44 ) }
    dend_29 { pt3dadd( -20.5369, 32.2187, 18.9961, 0.44 ) }
    dend_29 { pt3dadd( -21.073, 33.4193, 20.29, 0.74 ) }
    dend_29 { pt3dadd( -21.3864, 34.1918, 21.0597, 0.52 ) }
    dend_29 { pt3dadd( -21.6051, 34.6462, 21.4797, 0.44 ) }
    dend_29 { pt3dadd( -21.8965, 35.1708, 21.9284, 0.74 ) }
    dend_29 { pt3dadd( -22.2866, 35.7049, 22.3813, 0.74 ) }
    dend_29 { pt3dadd( -22.6519, 36.0411, 22.645, 0.74 ) }
    dend_29 { pt3dadd( -23.1392, 36.3662, 22.9413, 0.29 ) }
    dend_29 { pt3dadd( -23.9947, 36.8274, 23.7005, 0.29 ) }
    dend_29 { pt3dadd( -24.1417, 36.9064, 23.8717, 0.81 ) }
    dend_29 { pt3dadd( -24.5784, 37.1598, 24.4667, 0.81 ) }
    dend_29 { pt3dadd( -24.9934, 37.4461, 25.0745, 0.74 ) }
    dend_29 { pt3dadd( -25.6086, 37.9266, 25.9965, 0.81 ) }
    dend_29 { pt3dadd( -26.8294, 39.0005, 27.8334, 1.69 ) }
    dend_29 { pt3dadd( -27.6264, 39.7617, 28.9703, 0.52 ) }
    dend_29 { pt3dadd( -27.93, 40.0744, 29.3896, 0.59 ) }
    dend_29 { pt3dadd( -28.5404, 40.7132, 30.1574, 0.59 ) }
    dend_29 { pt3dadd( -28.9684, 41.1486, 30.653, 0.66 ) }
    dend_29 { pt3dadd( -29.3178, 41.4846, 30.9828, 1.03 ) }
    dend_29 { pt3dadd( -29.6639, 41.7775, 31.2374, 1.03 ) }
    dend_29 { pt3dadd( -30.6336, 42.4682, 31.9717, 0.81 ) }
    dend_29 { pt3dadd( -31.1582, 42.8145, 32.3908, 0.59 ) }
    dend_29 { pt3dadd( -31.9178, 43.2965, 33.0002, 0.52 ) }
    dend_29 { pt3dadd( -32.4125, 43.6448, 33.3798, 0.52 ) }
    dend_29 { pt3dadd( -33.0175, 44.1371, 33.8035, 0.59 ) }
    dend_29 { pt3dadd( -33.4712, 44.5335, 34.1002, 0.88 ) }
    dend_29 { pt3dadd( -33.8879, 44.9534, 34.3008, 1.03 ) }
    dend_29 { pt3dadd( -34.3772, 45.5541, 34.5056, 0.59 ) }
    dend_29 { pt3dadd( -34.758, 46.1026, 34.6116, 0.52 ) }
    dend_29 { pt3dadd( -35.0609, 46.5996, 34.6817, 0.81 ) }
    dend_29 { pt3dadd( -40.2758, 52.4027, 39.1257, 0.81 ) }
    dend_29 { pt3dadd( -45.5408, 57.4709, 44.3422, 0.81 ) }
    dend_29 { pt3dadd( -50.1877, 62.6603, 50.0075, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -53.4347, 68.3673, 56.1318, 0.81 ) }
    dend_29 { pt3dadd( -57.1486, 74.4632, 61.5785, 0.81 ) }
    dend_29 { pt3dadd( -60.1327, 80.2478, 67.7633, 0.81 ) }
    dend_29 { pt3dadd( -61.9197, 86.4528, 74.0023, 0.81 ) }
    dend_29 { pt3dadd( -61.8029, 92.2683, 80.8422, 0.81 ) }
    dend_29 { pt3dadd( -61.1983, 98.3084, 87.4581, 0.81 ) }
    dend_29 { pt3dadd( -61.4901, 104.443, 94.008, 0.81 ) }
    dend_29 { pt3dadd( -62.513, 110.376, 100.669, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -13.1462, 28.8601, 15.525, 1.11 ) }
    dend_14 { pt3dadd( -12.7615, 29.8119, 15.2315, 1.11 ) }
    dend_14 { pt3dadd( -12.4752, 30.8867, 14.8886, 0.81 ) }
    dend_14 { pt3dadd( -12.3331, 32.043, 14.4558, 0.74 ) }
    dend_14 { pt3dadd( -12.3253, 32.6415, 14.217, 1.11 ) }
    dend_14 { pt3dadd( -12.3596, 33.1898, 14.0071, 1.18 ) }
    dend_14 { pt3dadd( -12.4499, 34.0213, 13.7143, 1.47 ) }
    dend_14 { pt3dadd( -12.5765, 34.6304, 13.5008, 1.47 ) }
    dend_14 { pt3dadd( -12.8416, 35.6894, 13.16, 1.18 ) }
    dend_14 { pt3dadd( -13.0885, 36.7386, 12.8876, 0.96 ) }
    dend_14 { pt3dadd( -13.2499, 37.6419, 12.6975, 1.03 ) }
    dend_14 { pt3dadd( -13.3421, 38.5714, 12.5369, 1.4 ) }
    dend_14 { pt3dadd( -13.3526, 39.6026, 12.4046, 1.4 ) }
    dend_14 { pt3dadd( -13.2289, 40.7797, 12.2987, 1.03 ) }
    dend_14 { pt3dadd( -13.0066, 41.7378, 12.2468, 1.03 ) }
    dend_14 { pt3dadd( -12.7351, 42.5527, 12.2135, 1.25 ) }
    dend_14 { pt3dadd( -12.2443, 43.7098, 12.1262, 1.11 ) }
    dend_14 { pt3dadd( -11.8367, 44.5598, 12.0385, 1.11 ) }
    dend_14 { pt3dadd( -11.2866, 45.6695, 11.8474, 1.11 ) }
    dend_14 { pt3dadd( -10.6671, 46.9349, 11.523, 1.11 ) }
    dend_14 { pt3dadd( -10.2767, 47.8089, 11.2206, 1.11 ) }
    dend_14 { pt3dadd( -9.81897, 49.0361, 10.6815, 1.33 ) }
    dend_14 { pt3dadd( -9.65721, 49.7903, 10.2624, 1.03 ) }
    dend_14 { pt3dadd( -9.63743, 51.0805, 9.38791, 1.18 ) }
    dend_14 { pt3dadd( -9.74175, 51.5714, 9.01209, 1.47 ) }
    dend_14 { pt3dadd( -9.96448, 52.0747, 8.61871, 1.47 ) }
    dend_14 { pt3dadd( -10.2494, 52.5148, 8.3051, 1.69 ) }
    dend_14 { pt3dadd( -11.2096, 53.6628, 7.67767, 0.88 ) }
    dend_14 { pt3dadd( -11.8452, 54.3524, 7.4178, 1.11 ) }
    dend_14 { pt3dadd( -12.4505, 55.0315, 7.33576, 1.11 ) }
    dend_14 { pt3dadd( -13.0803, 55.832, 7.36779, 0.96 ) }
    dend_14 { pt3dadd( -13.6151, 56.6787, 7.50907, 0.88 ) }
    dend_14 { pt3dadd( -14.0674, 57.6696, 7.75785, 1.18 ) }
    dend_14 { pt3dadd( -14.3659, 58.6323, 8.06876, 1.47 ) }
    dend_14 { pt3dadd( -14.6488, 60.0739, 8.57147, 1.4 ) }
    dend_14 { pt3dadd( -14.75, 61.0602, 8.91333, 0.88 ) }
    dend_14 { pt3dadd( -14.7945, 62.3855, 9.34091, 0.81 ) }
    dend_14 { pt3dadd( -14.7605, 63.6527, 9.73734, 1.69 ) }
    dend_14 { pt3dadd( -14.7155, 64.1966, 9.91138, 1.99 ) }
    dend_14 { pt3dadd( -14.6487, 64.7802, 10.0932, 1.99 ) }
    dend_14 { pt3dadd( -14.6001, 65.2496, 10.2117, 2.21 ) }
    dend_14 { pt3dadd( -14.5424, 66.1248, 10.4637, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -20.6, 6.53571, -6.00452, 1.4 ) }
    dend_4 { pt3dadd( -20.6833, 7.53649, -7.16979, 1.4 ) }
    dend_4 { pt3dadd( -20.686, 7.72174, -8.13674, 1.4 ) }
    dend_4 { pt3dadd( -20.685, 7.82965, -8.8, 1.33 ) }
    dend_4 { pt3dadd( -20.7192, 8.09059, -10.1267, 1.62 ) }
    dend_4 { pt3dadd( -20.7714, 8.36834, -11.1905, 1.25 ) }
    dend_4 { pt3dadd( -20.9355, 9.07789, -13.3353, 1.03 ) }
    dend_4 { pt3dadd( -21.276, 9.97281, -16.085, 1.4 ) }
    dend_4 { pt3dadd( -21.4019, 10.2647, -16.8277, 1.4 ) }
    dend_4 { pt3dadd( -21.5882, 10.6511, -17.5934, 1.11 ) }
    dend_4 { pt3dadd( -21.864, 11.2239, -18.3814, 1.33 ) }
    dend_4 { pt3dadd( -22.1624, 11.7596, -18.9411, 1.69 ) }
    dend_4 { pt3dadd( -22.5732, 12.3718, -19.4271, 1.69 ) }
    dend_4 { pt3dadd( -22.9282, 12.8187, -19.7581, 1.69 ) }
    dend_4 { pt3dadd( -23.6979, 13.6658, -20.6029, 0.74 ) }
    dend_4 { pt3dadd( -24.0037, 13.9948, -21.018, 0.74 ) }
    dend_4 { pt3dadd( -24.3896, 14.4061, -21.686, 0.59 ) }
    dend_4 { pt3dadd( -24.9252, 15.0499, -22.8707, 1.18 ) }
    dend_4 { pt3dadd( -25.2899, 15.5617, -23.9863, 1.18 ) }
    dend_4 { pt3dadd( -25.5569, 16.0308, -25.0606, 1.18 ) }
    dend_4 { pt3dadd( -25.6899, 16.3715, -25.8642, 1.18 ) }
    dend_4 { pt3dadd( -25.8075, 16.8813, -27.1817, 0.81 ) }
    dend_4 { pt3dadd( -25.8557, 17.1876, -27.9463, 0.66 ) }
    dend_4 { pt3dadd( -25.993, 18.0277, -29.89, 0.66 ) }
    dend_4 { pt3dadd( -26.0458, 18.208, -30.275, 1.25 ) }
    dend_4 { pt3dadd( -26.3415, 18.8307, -31.4622, 1.47 ) }
    dend_4 { pt3dadd( -26.8643, 19.5734, -32.6529, 0.59 ) }
    dend_4 { pt3dadd( -27.4973, 20.3581, -33.576, 1.03 ) }
    dend_4 { pt3dadd( -27.8774, 20.8093, -33.974, 1.4 ) }
    dend_4 { pt3dadd( -28.2291, 21.2383, -34.2433, 1.47 ) }
    dend_4 { pt3dadd( -28.858, 22.063, -34.6906, 1.11 ) }
    dend_4 { pt3dadd( -29.5232, 23.0909, -35.1278, 0.81 ) }
    dend_4 { pt3dadd( -29.9639, 24.0197, -35.5433, 0.96 ) }
    dend_4 { pt3dadd( -30.0845, 24.6672, -35.9209, 1.25 ) }
    dend_4 { pt3dadd( -30.0855, 25.1768, -36.2585, 1.55 ) }
    dend_4 { pt3dadd( -30.0283, 25.8328, -36.7182, 1.55 ) }
    dend_4 { pt3dadd( -29.9284, 26.5502, -37.2353, 0.96 ) }
    dend_4 { pt3dadd( -29.7885, 27.6114, -38.0037, 0.66 ) }
    dend_4 { pt3dadd( -29.7876, 28.3633, -38.5262, 0.66 ) }
    dend_4 { pt3dadd( -29.9196, 28.8756, -38.8278, 0.74 ) }
    dend_4 { pt3dadd( -30.3756, 29.6275, -39.214, 1.03 ) }
    dend_4 { pt3dadd( -30.8044, 30.0757, -39.4327, 1.47 ) }
    dend_4 { pt3dadd( -31.1355, 30.3514, -39.5777, 1.77 ) }
    dend_4 { pt3dadd( -31.5581, 30.6606, -39.7597, 1.62 ) }
    dend_4 { pt3dadd( -32.5483, 31.3651, -40.2619, 0.88 ) }
    dend_4 { pt3dadd( -33.2577, 31.9089, -40.6957, 0.66 ) }
    dend_4 { pt3dadd( -33.9995, 32.5654, -41.2544, 0.59 ) }
    dend_4 { pt3dadd( -34.6259, 33.2477, -41.8394, 0.81 ) }
    dend_4 { pt3dadd( -34.9581, 33.7355, -42.2373, 0.59 ) }
    dend_4 { pt3dadd( -35.2884, 34.4445, -42.7745, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -35.4125, 34.8927, -43.0762, 1.03 ) }
    dend_4 { pt3dadd( -35.5006, 35.369, -43.3458, 1.03 ) }
    dend_4 { pt3dadd( -35.5777, 35.9516, -43.6003, 0.74 ) }
    dend_4 { pt3dadd( -35.6759, 36.7089, -43.8415, 0.52 ) }
    dend_4 { pt3dadd( -35.7604, 37.2528, -43.9765, 0.52 ) }
    dend_4 { pt3dadd( -35.9249, 38.0202, -44.1406, 1.11 ) }
    dend_4 { pt3dadd( -36.1001, 38.6303, -44.2641, 1.4 ) }
    dend_4 { pt3dadd( -36.4044, 39.5309, -44.4493, 1.4 ) }
    dend_4 { pt3dadd( -36.5832, 40.0673, -44.5684, 1.03 ) }
    dend_4 { pt3dadd( -36.7067, 40.5086, -44.6906, 0.74 ) }
    dend_4 { pt3dadd( -36.8486, 41.2484, -44.9644, 0.59 ) }
    dend_4 { pt3dadd( -36.8804, 41.7156, -45.2053, 0.52 ) }
    dend_4 { pt3dadd( -36.8567, 42.2807, -45.5819, 0.52 ) }
    dend_4 { pt3dadd( -36.7784, 43.0486, -46.215, 0.52 ) }
    dend_4 { pt3dadd( -36.7059, 43.6245, -46.7253, 0.52 ) }
    dend_4 { pt3dadd( -36.6522, 44.0812, -47.199, 0.52 ) }
    dend_4 { pt3dadd( -36.6382, 44.4914, -47.7213, 0.52 ) }
    dend_4 { pt3dadd( -36.7013, 44.735, -48.0668, 0.52 ) }
    dend_4 { pt3dadd( -36.8879, 44.9726, -48.4365, 0.81 ) }
    dend_4 { pt3dadd( -37.213, 45.201, -48.7964, 0.96 ) }
    dend_4 { pt3dadd( -37.8886, 45.5345, -49.3012, 0.96 ) }
    dend_4 { pt3dadd( -38.5395, 45.8134, -49.6787, 0.52 ) }
    dend_4 { pt3dadd( -39.275, 46.1187, -50.0614, 0.81 ) }
    dend_4 { pt3dadd( -39.6416, 46.2803, -50.2587, 1.18 ) }
    dend_4 { pt3dadd( -40.033, 46.4816, -50.4865, 1.18 ) }
    dend_4 { pt3dadd( -40.6723, 46.9252, -50.9085, 0.44 ) }
    dend_4 { pt3dadd( -41.0399, 47.3046, -51.2171, 0.44 ) }
    dend_4 { pt3dadd( -41.2929, 47.749, -51.5727, 0.74 ) }
    dend_4 { pt3dadd( -41.3939, 48.1609, -51.9473, 0.74 ) }
    dend_4 { pt3dadd( -41.412, 48.5294, -52.286, 0.44 ) }
    dend_4 { pt3dadd( -41.3725, 49.1411, -52.8246, 0.66 ) }
    dend_4 { pt3dadd( -41.286, 49.785, -53.3629, 0.96 ) }
    dend_4 { pt3dadd( -41.2155, 50.285, -53.7698, 0.74 ) }
    dend_4 { pt3dadd( -41.1363, 51.0774, -54.3736, 0.37 ) }
    dend_4 { pt3dadd( -41.1069, 51.7342, -54.8258, 0.37 ) }
    dend_4 { pt3dadd( -41.1328, 52.3809, -55.2279, 0.88 ) }
    dend_4 { pt3dadd( -41.1818, 52.6715, -55.3709, 1.18 ) }
    dend_4 { pt3dadd( -41.3435, 53.0639, -55.4971, 1.18 ) }
    dend_4 { pt3dadd( -41.6165, 53.4498, -55.5951, 1.18 ) }
    dend_4 { pt3dadd( -41.8972, 53.7848, -55.6657, 1.11 ) }
    dend_4 { pt3dadd( -42.2351, 54.1737, -55.7539, 0.44 ) }
    dend_4 { pt3dadd( -42.7628, 54.8088, -55.911, 0.44 ) }
    dend_4 { pt3dadd( -43.6092, 55.9179, -56.2086, 0.44 ) }
    dend_4 { pt3dadd( -44.1722, 56.7148, -56.4567, 0.44 ) }
    dend_4 { pt3dadd( -44.7171, 57.5627, -56.7511, 0.44 ) }
    dend_4 { pt3dadd( -45.0508, 58.16, -57.0078, 0.44 ) }
    dend_4 { pt3dadd( -45.3133, 58.7447, -57.3015, 1.47 ) }
    dend_4 { pt3dadd( -45.4699, 59.2201, -57.5874, 1.47 ) }
    dend_4 { pt3dadd( -45.6151, 59.835, -58.0133, 1.18 ) }
    dend_4 { pt3dadd( -45.7641, 60.4087, -58.5115, 0.66 ) }
    dend_4 { pt3dadd( -45.9513, 61.0521, -59.3763, 0.44 ) }
    dend_4 { pt3dadd( -46.0237, 61.3892, -59.9532, 0.59 ) }
    dend_4 { pt3dadd( -46.0727, 61.7589, -60.7769, 0.59 ) }
    dend_4 { pt3dadd( -46.0893, 62.0397, -61.5421, 0.74 ) }
    dend_4 { pt3dadd( -46.0947, 62.4641, -63.0696, 1.25 ) }
    dend_4 { pt3dadd( -46.1159, 62.9515, -65.2914, 0.66 ) }
    dend_4 { pt3dadd( -46.1496, 63.1348, -66.2995, 0.66 ) }
    dend_4 { pt3dadd( -46.2198, 63.371, -67.7811, 1.25 ) }
    dend_4 { pt3dadd( -46.2665, 63.4987, -68.533, 1.62 ) }
    dend_4 { pt3dadd( -46.4467, 64.0051, -70.9404, 1.4 ) }
    dend_4 { pt3dadd( -46.5194, 64.2517, -71.9101, 1.11 ) }
    dend_4 { pt3dadd( -46.6309, 64.6049, -73.1257, 1.25 ) }
    dend_4 { pt3dadd( -46.7101, 64.9412, -74.1937, 0.96 ) }
    dend_4 { pt3dadd( -46.7256, 65.2595, -74.9886, 1.18 ) }
    dend_4 { pt3dadd( -46.7046, 65.6637, -75.8195, 1.4 ) }
    dend_4 { pt3dadd( -46.6605, 66.2108, -76.7325, 0.37 ) }
    dend_4 { pt3dadd( -46.6468, 66.6569, -77.5265, 0.37 ) }
    dend_4 { pt3dadd( -46.6467, 67.0443, -78.2659, 0.88 ) }
    dend_4 { pt3dadd( -46.6728, 67.3404, -78.8927, 0.88 ) }
    dend_4 { pt3dadd( -46.7138, 67.6113, -79.5522, 0.88 ) }
    dend_4 { pt3dadd( -46.8368, 68.0618, -80.8055, 0.37 ) }
    dend_4 { pt3dadd( -47.0663, 68.5997, -82.2565, 1.03 ) }
    dend_4 { pt3dadd( -47.2189, 68.839, -82.9873, 1.03 ) }
    dend_4 { pt3dadd( -47.3425, 68.9604, -83.4654, 1.03 ) }
    dend_4 { pt3dadd( -47.7417, 69.2152, -84.7193, 0.29 ) }
    dend_4 { pt3dadd( -48.133, 69.4243, -85.9234, 0.29 ) }
    dend_4 { pt3dadd( -48.4897, 69.5816, -86.9976, 0.29 ) }
    dend_4 { pt3dadd( -48.9786, 69.7673, -88.3913, 1.25 ) }
    dend_4 { pt3dadd( -49.6123, 69.9671, -90.0213, 1.25 ) }
    dend_4 { pt3dadd( -50.1346, 70.1057, -91.2942, 0.96 ) }
    dend_4 { pt3dadd( -50.8117, 70.3058, -92.8848, 0.37 ) }
    dend_4 { pt3dadd( -51.009, 70.3932, -93.3961, 0.66 ) }
    dend_4 { pt3dadd( -51.2505, 70.5201, -94.0996, 1.03 ) }
    dend_4 { pt3dadd( -51.4769, 70.7251, -94.9122, 1.03 ) }
    dend_4 { pt3dadd( -51.822, 71.2489, -96.5702, 0.52 ) }
    dend_4 { pt3dadd( -51.9479, 71.5229, -97.3114, 1.03 ) }
    dend_4 { pt3dadd( -52.197, 71.8873, -98.1592, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -20.6, 6.53571, -6.00452, 0.74 ) }
    dend_1 { pt3dadd( -21.4075, 5.9865, -5.97127, 0.74 ) }
    dend_1 { pt3dadd( -22.1818, 5.38326, -5.9476, 0.74 ) }
    dend_1 { pt3dadd( -22.9699, 4.76913, -5.92349, 1.03 ) }
    dend_1 { pt3dadd( -23.4844, 4.36827, -5.90776, 1.4 ) }
    dend_1 { pt3dadd( -24.242, 3.77795, -5.88459, 1.84 ) }
    dend_1 { pt3dadd( -24.7319, 3.39626, -5.86961, 2.14 ) }
    dend_1 { pt3dadd( -25.0644, 3.03715, -5.85755, 2.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.8915, 5.92002, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 55.72, 8.18146, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 70.5486, 10.4429, 2.65033, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 14.9346, -80.412, 13.0375, 0.52 ) }
    dend_66 { pt3dadd( 13.5503, -79.3822, 13.5423, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( 13.0107, -78.9809, 13.7391, 0.52 ) }
    dend_66 { pt3dadd( 12.3269, -78.4722, 13.9885, 1.25 ) }
    dend_66 { pt3dadd( 11.9975, -78.2271, 14.1086, 1.4 ) }
    dend_66 { pt3dadd( 11.3827, -77.7698, 14.3328, 0.37 ) }
    dend_66 { pt3dadd( 11.0014, -77.4861, 14.4719, 0.29 ) }
    dend_66 { pt3dadd( 6.32523, -72.8776, 15.8421, 0.29 ) }
    dend_66 { pt3dadd( 1.38779, -68.341, 15.9861, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 7/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 14.9346, -80.412, 13.0375, 0.66 ) }
    dend_63 { pt3dadd( 16.2446, -81.7167, 13.1052, 0.66 ) }
    dend_63 { pt3dadd( 17.4496, -82.8549, 13.2269, 0.59 ) }
    dend_63 { pt3dadd( 18.9656, -84.3225, 13.411, 0.59 ) }
    dend_63 { pt3dadd( 19.6636, -85.0414, 13.5164, 0.88 ) }
    dend_63 { pt3dadd( 20.4591, -85.923, 13.6458, 0.88 ) }
    dend_63 { pt3dadd( 21.4377, -87.1164, 13.7564, 0.52 ) }
    dend_63 { pt3dadd( 22.1923, -88.1532, 13.8001, 0.52 ) }
    dend_63 { pt3dadd( 22.5821, -88.9144, 13.8124, 1.11 ) }
    dend_63 { pt3dadd( 22.7761, -89.8163, 13.7447, 1.47 ) }
    dend_63 { pt3dadd( 22.7532, -90.5178, 13.6385, 1.18 ) }
    dend_63 { pt3dadd( 22.2851, -92.0901, 13.2861, 0.59 ) }
    dend_63 { pt3dadd( 21.8165, -92.9512, 13.1075, 0.59 ) }
    dend_63 { pt3dadd( 21.1496, -93.8773, 12.9842, 0.37 ) }
    dend_63 { pt3dadd( 20.7772, -94.3606, 12.975, 0.59 ) }
    dend_63 { pt3dadd( 20.3241, -94.9769, 13.0289, 0.59 ) }
    dend_63 { pt3dadd( 19.5791, -96.2139, 13.2953, 0.44 ) }
    dend_63 { pt3dadd( 18.9992, -97.9306, 13.902, 0.37 ) }
    dend_63 { pt3dadd( 19.0092, -98.9693, 14.3258, 0.66 ) }
    dend_63 { pt3dadd( 19.2972, -100.039, 14.7982, 0.96 ) }
    dend_63 { pt3dadd( 19.7053, -100.961, 15.2356, 0.74 ) }
    dend_63 { pt3dadd( 20.3746, -102.064, 15.7651, 0.52 ) }
    dend_63 { pt3dadd( 21.3456, -103.342, 16.3626, 0.81 ) }
    dend_63 { pt3dadd( 22.1438, -104.234, 16.7473, 0.96 ) }
    dend_63 { pt3dadd( 22.7132, -104.84, 17.0007, 1.03 ) }
    dend_63 { pt3dadd( 23.6039, -105.804, 17.3528, 0.81 ) }
    dend_63 { pt3dadd( 24.4068, -106.694, 17.6246, 0.74 ) }
    dend_63 { pt3dadd( 25.03, -107.359, 17.7835, 1.11 ) }
    dend_63 { pt3dadd( 25.6732, -107.997, 17.8668, 1.11 ) }
    dend_63 { pt3dadd( 26.5826, -108.856, 17.8907, 0.81 ) }
    dend_63 { pt3dadd( 27.3923, -109.609, 17.8491, 0.52 ) }
    dend_63 { pt3dadd( 28.0005, -110.241, 17.775, 0.74 ) }
    dend_63 { pt3dadd( 28.5838, -110.981, 17.7057, 0.74 ) }
    dend_63 { pt3dadd( 29.234, -112.009, 17.6364, 0.52 ) }
    dend_63 { pt3dadd( 29.6049, -112.769, 17.6062, 0.81 ) }
    dend_63 { pt3dadd( 29.8831, -113.41, 17.6, 0.81 ) }
    dend_63 { pt3dadd( 30.4644, -114.832, 17.6974, 0.59 ) }
    dend_63 { pt3dadd( 30.8989, -115.851, 17.8369, 0.81 ) }
    dend_63 { pt3dadd( 31.2689, -116.69, 18.0646, 0.81 ) }
    dend_63 { pt3dadd( 31.747, -117.705, 18.4667, 0.44 ) }
    dend_63 { pt3dadd( 32.2726, -118.699, 18.9701, 0.81 ) }
    dend_63 { pt3dadd( 32.9393, -119.751, 19.5995, 0.66 ) }
    dend_63 { pt3dadd( 33.7062, -120.724, 20.2459, 0.29 ) }
    dend_63 { pt3dadd( 35.114, -122.312, 21.2614, 0.74 ) }
    dend_63 { pt3dadd( 35.6532, -122.891, 21.6097, 1.25 ) }
    dend_63 { pt3dadd( 36.1274, -123.397, 21.9135, 1.25 ) }
    dend_63 { pt3dadd( 37.1757, -124.596, 22.5621, 0.37 ) }
    dend_63 { pt3dadd( 38.0892, -125.688, 23.0235, 0.37 ) }
    dend_63 { pt3dadd( 39.0993, -126.863, 23.4235, 0.37 ) }
    dend_63 { pt3dadd( 39.6859, -127.47, 23.515, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.59246, -42.8936, 24.1896, 0.44 ) }
    dend_61 { pt3dadd( 8.30138, -42.6467, 25.5509, 0.44 ) }
    dend_61 { pt3dadd( 9.13485, -42.5264, 26.2147, 0.29 ) }
    dend_61 { pt3dadd( 10.2299, -42.3682, 27.087, 0.52 ) }
    dend_61 { pt3dadd( 10.797, -42.2863, 27.5388, 0.74 ) }
    dend_61 { pt3dadd( 11.0774, -42.2458, 27.7621, 0.74 ) }
    dend_61 { pt3dadd( 19.9644, -40.9499, 33.9324, 0.74 ) }
    dend_61 { pt3dadd( 29.7295, -38.8406, 38.2824, 0.74 ) }
    dend_61 { pt3dadd( 38.9387, -38.2607, 44.0776, 0.74 ) }
    dend_61 { pt3dadd( 48.0622, -36.8655, 49.8693, 0.74 ) }
    dend_61 { pt3dadd( 57.0225, -35.98, 56.006, 0.74 ) }
    dend_61 { pt3dadd( 66.7173, -36.5624, 60.9457, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 6.59246, -42.8936, 24.1896, 0.44 ) }
    dend_58 { pt3dadd( 6.08424, -44.2574, 25.1352, 0.44 ) }
    dend_58 { pt3dadd( 5.78349, -45.0645, 25.6947, 0.74 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -61.0136, -159.518, 85.229, 0.29 ) }
    dend_55 { pt3dadd( -57.9107, -165.449, 90.107, 0.29 ) }
    dend_55 { pt3dadd( -53.6145, -171.401, 93.9421, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 75/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -61.0136, -159.518, 85.229, 0.22 ) }
    dend_54 { pt3dadd( -69.1844, -164.086, 86.8108, 0.29 ) }
    dend_54 { pt3dadd( -77.2382, -169.112, 86.7664, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 78/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -20.2478, -142.993, 7.32982, 0.37 ) }
    dend_50 { pt3dadd( -9.15431, -151.071, 4.71859, 0.37 ) }
    dend_50 { pt3dadd( 3.22134, -156.911, 1.91196, 0.37 ) }
    dend_50 { pt3dadd( 15.94, -162.253, -0.285442, 0.37 ) }
    dend_50 { pt3dadd( 27.1062, -169.414, -4.66482, 0.37 ) }
    dend_50 { pt3dadd( 37.789, -176.639, -10.0334, 0.37 ) }
    dend_50 { pt3dadd( 47.0121, -185.596, -15.496, 0.37 ) }
    dend_50 { pt3dadd( 56.1586, -195.207, -19.8675, 0.37 ) }
    dend_50 { pt3dadd( 64.9222, -205.897, -21.8791, 0.37 ) }
    dend_50 { pt3dadd( 73.0328, -217.153, -23.5135, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 88/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -20.2478, -142.993, 7.32982, 0.22 ) }
    dend_41 { pt3dadd( -6.69649, -152.412, 6.96016, 0.37 ) }
    dend_41 { pt3dadd( 7.59533, -160.059, 3.83525, 0.37 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -63.0471, -123.864, 8.68166, 0.22 ) }
    dend_35 { pt3dadd( -62.7924, -125.124, 8.65837, 0.22 ) }
    dend_35 { pt3dadd( -62.597, -126.09, 8.64051, 0.22 ) }
    dend_35 { pt3dadd( -62.4468, -126.833, 8.62677, 0.37 ) }
    dend_35 { pt3dadd( -62.22, -127.955, 8.60604, 0.37 ) }
    dend_35 { pt3dadd( -59.7137, -136.603, 9.85611, 0.37 ) }
    dend_35 { pt3dadd( -56.2021, -144.921, 10.904, 0.37 ) }
    dend_35 { pt3dadd( -53.2971, -153.503, 11.632, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -63.0471, -123.864, 8.68166, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -64.2714, -125.515, 9.4068, 0.22 ) }
    dend_34 { pt3dadd( -64.3305, -125.578, 9.43627, 0.44 ) }
    dend_34 { pt3dadd( -65.0064, -126.167, 9.67496, 0.15 ) }
    dend_34 { pt3dadd( -65.2417, -126.348, 9.73081, 0.37 ) }
    dend_34 { pt3dadd( -66.0089, -126.92, 9.871, 0.15 ) }
    dend_34 { pt3dadd( -66.9661, -127.649, 9.97176, 0.22 ) }
    dend_34 { pt3dadd( -67.7912, -128.23, 10.0516, 0.22 ) }
    dend_34 { pt3dadd( -68.5051, -128.754, 10.2727, 0.66 ) }
    dend_34 { pt3dadd( -69.4013, -129.38, 10.5838, 0.22 ) }
    dend_34 { pt3dadd( -69.7461, -129.621, 10.7196, 0.88 ) }
    dend_34 { pt3dadd( -70.5041, -130.173, 11.0924, 0.74 ) }
    dend_34 { pt3dadd( -71.9604, -131.492, 12.0945, 1.4 ) }
    dend_34 { pt3dadd( -72.9703, -132.701, 13.3794, 1.18 ) }
    dend_34 { pt3dadd( -80.1521, -139.789, 18.5598, 1.18 ) }
    dend_34 { pt3dadd( -86.3849, -147.231, 24.4257, 1.18 ) }
    dend_34 { pt3dadd( -94.0179, -153.851, 29.5803, 1.18 ) }
    dend_34 { pt3dadd( -101.842, -161.263, 33.1157, 1.18 ) }
    dend_34 { pt3dadd( -108.99, -168.689, 37.8495, 1.18 ) }
    dend_34 { pt3dadd( -116.85, -175.134, 42.8841, 1.18 ) }
    dend_34 { pt3dadd( -123.848, -181.95, 48.6477, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -62.513, 110.376, 100.669, 0.37 ) }
    dend_31 { pt3dadd( -65.5561, 115.363, 105.852, 0.37 ) }
    dend_31 { pt3dadd( -68.4961, 119.035, 112.087, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 23/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -62.513, 110.376, 100.669, 0.29 ) }
    dend_30 { pt3dadd( -67.0661, 117.728, 108.461, 0.37 ) }
    dend_30 { pt3dadd( -71.0116, 125.493, 116.183, 0.37 ) }
    dend_30 { pt3dadd( -74.9184, 131.518, 125.343, 0.37 ) }
    dend_30 { pt3dadd( -77.8275, 138.671, 134.053, 0.37 ) }
    dend_30 { pt3dadd( -80.7251, 143.742, 144.122, 0.37 ) }
    dend_30 { pt3dadd( -83.4728, 149.377, 153.929, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -14.5424, 66.1248, 10.4637, 0.96 ) }
    dend_16 { pt3dadd( -14.3642, 68.4598, 10.0197, 0.96 ) }
    dend_16 { pt3dadd( -14.3455, 69.9773, 9.63753, 0.81 ) }
    dend_16 { pt3dadd( -14.4144, 71.1861, 9.30324, 0.81 ) }
    dend_16 { pt3dadd( -14.5158, 72.4532, 8.82617, 1.18 ) }
    dend_16 { pt3dadd( -14.7562, 75.2933, 7.66557, 1.18 ) }
    dend_16 { pt3dadd( -14.8139, 76.0145, 7.37307, 1.18 ) }
    dend_16 { pt3dadd( -14.9322, 77.1269, 6.85276, 0.81 ) }
    dend_16 { pt3dadd( -15.0296, 78.0248, 6.49287, 0.81 ) }
    dend_16 { pt3dadd( -15.2356, 80.2383, 6.01296, 0.66 ) }
    dend_16 { pt3dadd( -15.3087, 81.4025, 6.1018, 0.96 ) }
    dend_16 { pt3dadd( -15.3392, 82.4985, 6.50951, 1.11 ) }
    dend_16 { pt3dadd( -15.3399, 83.5941, 7.12341, 0.81 ) }
    dend_16 { pt3dadd( -15.2952, 85.3969, 8.34836, 0.59 ) }
    dend_16 { pt3dadd( -15.2022, 87.2755, 9.68865, 0.81 ) }
    dend_16 { pt3dadd( -15.1129, 88.8487, 10.8352, 1.11 ) }
    dend_16 { pt3dadd( -15.0175, 90.0195, 11.5599, 1.25 ) }
    dend_16 { pt3dadd( -14.8509, 91.8535, 12.4611, 0.59 ) }
    dend_16 { pt3dadd( -14.7611, 92.7984, 12.7249, 0.59 ) }
    dend_16 { pt3dadd( -14.6264, 94.6916, 12.5992, 0.59 ) }
    dend_16 { pt3dadd( -14.6216, 95.8274, 12.1132, 0.44 ) }
    dend_16 { pt3dadd( -14.7042, 97.8278, 10.807, 1.11 ) }
    dend_16 { pt3dadd( -14.7444, 98.4172, 10.3443, 1.4 ) }
    dend_16 { pt3dadd( -14.8459, 99.9174, 9.0439, 0.88 ) }
    dend_16 { pt3dadd( -14.9372, 101.089, 8.04693, 0.52 ) }
    dend_16 { pt3dadd( -15.0062, 102.01, 7.34749, 0.52 ) }
    dend_16 { pt3dadd( -14.9499, 103.186, 6.65148, 0.74 ) }
    dend_16 { pt3dadd( -14.7062, 104.054, 6.39262, 1.11 ) }
    dend_16 { pt3dadd( -14.1879, 105.057, 6.3275, 1.33 ) }
    dend_16 { pt3dadd( -13.7874, 105.613, 6.39727, 1.62 ) }
    dend_16 { pt3dadd( -13.1319, 106.318, 6.5618, 1.47 ) }
    dend_16 { pt3dadd( -11.8736, 107.441, 6.92468, 0.96 ) }
    dend_16 { pt3dadd( -11.0037, 108.14, 7.17632, 0.81 ) }
    dend_16 { pt3dadd( -10.1438, 108.835, 7.43379, 0.81 ) }
    dend_16 { pt3dadd( -9.17403, 109.669, 7.73845, 0.66 ) }
    dend_16 { pt3dadd( -8.21539, 110.596, 8.01975, 0.59 ) }
    dend_16 { pt3dadd( -7.66503, 111.236, 8.14897, 0.59 ) }
    dend_16 { pt3dadd( -6.9966, 112.207, 8.26406, 0.44 ) }
    dend_16 { pt3dadd( -6.38516, 113.316, 8.33361, 0.81 ) }
    dend_16 { pt3dadd( -5.8372, 114.507, 8.32941, 0.81 ) }
    dend_16 { pt3dadd( -5.26859, 115.894, 8.26941, 1.03 ) }
    dend_16 { pt3dadd( -4.68172, 117.319, 8.0791, 1.25 ) }
    dend_16 { pt3dadd( -4.39032, 117.966, 7.90397, 1.25 ) }
    dend_16 { pt3dadd( -3.94379, 118.746, 7.48749, 1.18 ) }
    dend_16 { pt3dadd( -3.17011, 119.896, 6.68716, 0.66 ) }
    dend_16 { pt3dadd( -2.75372, 120.496, 6.27702, 0.59 ) }
    dend_16 { pt3dadd( -1.57905, 122.195, 5.1968, 1.25 ) }
    dend_16 { pt3dadd( -0.627706, 123.61, 4.42334, 1.99 ) }
    dend_16 { pt3dadd( 1.44111, 126.971, 3.01185, 0.59 ) }
    dend_16 { pt3dadd( 1.96084, 127.927, 2.7613, 0.66 ) }
    dend_16 { pt3dadd( 3.15148, 130.622, 2.58421, 0.52 ) }
    dend_16 { pt3dadd( 3.54216, 131.72, 2.71024, 1.03 ) }
    dend_16 { pt3dadd( 3.90883, 133.023, 3.07155, 1.25 ) }
    dend_16 { pt3dadd( 4.2603, 134.533, 3.6158, 0.74 ) }
    dend_16 { pt3dadd( 4.47055, 135.657, 4.06002, 0.59 ) }
    dend_16 { pt3dadd( 4.66142, 136.606, 4.31369, 0.59 ) }
    dend_16 { pt3dadd( 5.01287, 137.938, 4.49362, 0.88 ) }
    dend_16 { pt3dadd( 5.39996, 139.039, 4.6023, 1.11 ) }
    dend_16 { pt3dadd( 5.82425, 139.957, 4.66716, 1.11 ) }
    dend_16 { pt3dadd( 6.43242, 141.016, 4.74721, 1.03 ) }
    dend_16 { pt3dadd( 7.42094, 142.415, 4.90308, 0.66 ) }
    dend_16 { pt3dadd( 8.31526, 143.401, 5.07194, 0.66 ) }
    dend_16 { pt3dadd( 9.82098, 144.674, 5.41096, 0.96 ) }
    dend_16 { pt3dadd( 10.9821, 145.451, 5.6352, 1.4 ) }
    dend_16 { pt3dadd( 11.674, 145.856, 5.74758, 1.4 ) }
    dend_16 { pt3dadd( 12.4728, 146.285, 5.83751, 1.4 ) }
    dend_16 { pt3dadd( 13.6909, 146.94, 5.86521, 0.74 ) }
    dend_16 { pt3dadd( 14.8719, 147.713, 5.66048, 0.37 ) }
    dend_16 { pt3dadd( 16.4021, 148.945, 4.97224, 0.37 ) }
    dend_16 { pt3dadd( 17.0793, 149.541, 4.53633, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( 17.6656, 150.067, 4.10524, 0.96 ) }
    dend_16 { pt3dadd( 18.571, 150.869, 3.36484, 0.66 ) }
    dend_16 { pt3dadd( 19.9056, 152.038, 2.23371, 0.52 ) }
    dend_16 { pt3dadd( 20.657, 152.711, 1.62298, 0.37 ) }
    dend_16 { pt3dadd( 21.4592, 153.454, 1.09836, 0.81 ) }
    dend_16 { pt3dadd( 22.1275, 154.135, 0.701674, 0.52 ) }
    dend_16 { pt3dadd( 23.0428, 155.287, 0.149297, 0.52 ) }
    dend_16 { pt3dadd( 23.5302, 156.088, -0.220334, 0.66 ) }
    dend_16 { pt3dadd( 24.05, 157.427, -0.813862, 0.66 ) }
    dend_16 { pt3dadd( 24.2788, 158.615, -1.42264, 0.66 ) }
    dend_16 { pt3dadd( 24.4059, 160.029, -2.22549, 0.66 ) }
    dend_16 { pt3dadd( 24.4853, 161.513, -3.11897, 0.81 ) }
    dend_16 { pt3dadd( 24.5938, 163.053, -4.10147, 1.03 ) }
    dend_16 { pt3dadd( 24.7084, 163.836, -4.65993, 1.25 ) }
    dend_16 { pt3dadd( 25.0596, 165.172, -5.6919, 0.52 ) }
    dend_16 { pt3dadd( 25.4139, 166.025, -6.3832, 0.37 ) }
    dend_16 { pt3dadd( 26.0414, 166.905, -7.09539, 0.37 ) }
    dend_16 { pt3dadd( 27.2645, 168.094, -8.061, 1.11 ) }
    dend_16 { pt3dadd( 28.201, 168.813, -8.69509, 1.62 ) }
    dend_16 { pt3dadd( 28.6439, 169.104, -8.97752, 1.69 ) }
    dend_16 { pt3dadd( 29.47, 169.638, -9.51618, 1.69 ) }
    dend_16 { pt3dadd( 31.3831, 171.054, -10.9433, 0.44 ) }
    dend_16 { pt3dadd( 32.3663, 171.946, -11.8104, 0.96 ) }
    dend_16 { pt3dadd( 33.2566, 172.941, -12.6968, 1.03 ) }
    dend_16 { pt3dadd( 33.7356, 173.655, -13.2294, 0.88 ) }
    dend_16 { pt3dadd( 34.4042, 174.979, -14.0991, 0.44 ) }
    dend_16 { pt3dadd( 34.969, 176.395, -14.8948, 0.74 ) }
    dend_16 { pt3dadd( 35.2229, 177.265, -15.2955, 1.03 ) }
    dend_16 { pt3dadd( 35.5539, 178.071, -15.656, 1.03 ) }
    dend_16 { pt3dadd( 36.2861, 179.17, -16.2018, 0.59 ) }
    dend_16 { pt3dadd( 37.279, 180.093, -16.7581, 0.59 ) }
    dend_16 { pt3dadd( 38.4151, 180.817, -17.2612, 0.59 ) }
    dend_16 { pt3dadd( 39.2464, 181.275, -17.6121, 0.74 ) }
    dend_16 { pt3dadd( 41.2714, 182.486, -18.5404, 0.74 ) }
    dend_16 { pt3dadd( 41.956, 183.005, -18.9295, 0.96 ) }
    dend_16 { pt3dadd( 42.5453, 183.696, -19.2954, 1.11 ) }
    dend_16 { pt3dadd( 42.857, 184.347, -19.4843, 1.11 ) }
    dend_16 { pt3dadd( 43.2453, 185.646, -19.6957, 0.66 ) }
    dend_16 { pt3dadd( 43.5993, 187.254, -19.7625, 0.52 ) }
    dend_16 { pt3dadd( 43.9392, 188.925, -19.6143, 0.52 ) }
    dend_16 { pt3dadd( 44.5456, 191.578, -19.202, 1.11 ) }
    dend_16 { pt3dadd( 44.7707, 192.543, -19.0159, 1.33 ) }
    dend_16 { pt3dadd( 44.9794, 193.473, -18.805, 1.33 ) }
    dend_16 { pt3dadd( 45.298, 195.097, -18.3963, 0.44 ) }
    dend_16 { pt3dadd( 45.5528, 196.401, -18.0851, 0.44 ) }
    dend_16 { pt3dadd( 45.7771, 197.533, -17.8941, 0.74 ) }
    dend_16 { pt3dadd( 45.9266, 198.4, -17.8395, 0.74 ) }
    dend_16 { pt3dadd( 46.1086, 199.808, -17.7873, 0.52 ) }
    dend_16 { pt3dadd( 46.2719, 201.552, -17.7535, 0.44 ) }
    dend_16 { pt3dadd( 46.3349, 203.196, -17.7742, 0.44 ) }
    dend_16 { pt3dadd( 46.3398, 204.882, -17.8469, 1.18 ) }
    dend_16 { pt3dadd( 46.3311, 205.893, -17.9301, 1.18 ) }
    dend_16 { pt3dadd( 46.3319, 207.238, -18.0971, 0.96 ) }
    dend_16 { pt3dadd( 46.3522, 208.572, -18.3291, 0.44 ) }
    dend_16 { pt3dadd( 46.4798, 210.533, -18.7758, 0.37 ) }
    dend_16 { pt3dadd( 46.5767, 211.293, -18.9962, 0.37 ) }
    dend_16 { pt3dadd( 46.9361, 212.885, -19.526, 0.88 ) }
    dend_16 { pt3dadd( 47.327, 214.073, -19.8632, 1.18 ) }
    dend_16 { pt3dadd( 47.7084, 214.928, -20.0034, 1.18 ) }
    dend_16 { pt3dadd( 48.5919, 216.566, -19.9654, 0.59 ) }
    dend_16 { pt3dadd( 49.4676, 218.064, -19.6385, 0.52 ) }
    dend_16 { pt3dadd( 50.0474, 219.083, -19.2776, 0.44 ) }
    dend_16 { pt3dadd( 51.2231, 221.224, -18.1616, 0.74 ) }
    dend_16 { pt3dadd( 51.8746, 222.473, -17.3842, 1.25 ) }
    dend_16 { pt3dadd( 52.4199, 223.585, -16.6353, 1.55 ) }
    dend_16 { pt3dadd( 52.8379, 224.563, -15.9415, 1.62 ) }
    dend_16 { pt3dadd( 53.3198, 225.806, -15.0335, 0.81 ) }
    dend_16 { pt3dadd( 53.8677, 227.265, -14.0065, 0.37 ) }
    dend_16 { pt3dadd( 54.3246, 228.452, -13.2464, 0.37 ) }
    dend_16 { pt3dadd( 54.6272, 229.354, -12.7013, 0.37 ) }
    dend_16 { pt3dadd( 54.887, 230.436, -12.1112, 0.37 ) }
    dend_16 { pt3dadd( 54.9683, 231.124, -11.8029, 0.37 ) }
    dend_16 { pt3dadd( 55.017, 232.092, -11.503, 0.66 ) }
    dend_16 { pt3dadd( 55.0573, 233.107, -11.1981, 0.96 ) }
    dend_16 { pt3dadd( 55.1092, 233.894, -10.8631, 1.18 ) }
    dend_16 { pt3dadd( 55.2885, 235.129, -10.2241, 0.52 ) }
    dend_16 { pt3dadd( 55.6411, 236.592, -9.40628, 0.66 ) }
    dend_16 { pt3dadd( 56.0119, 237.877, -8.68513, 0.59 ) }
    dend_16 { pt3dadd( 56.8213, 240.421, -7.23148, 0.52 ) }
    dend_16 { pt3dadd( 57.4087, 241.96, -6.31378, 0.96 ) }
    dend_16 { pt3dadd( 57.8399, 242.909, -5.71711, 0.96 ) }
    dend_16 { pt3dadd( 58.4766, 244.001, -5.00244, 0.66 ) }
    dend_16 { pt3dadd( 59.4254, 245.382, -4.07354, 0.44 ) }
    dend_16 { pt3dadd( 60.2181, 246.449, -3.41264, 0.44 ) }
    dend_16 { pt3dadd( 61.0482, 247.494, -2.91247, 0.52 ) }
    dend_16 { pt3dadd( 61.8078, 248.436, -2.49031, 0.52 ) }
    dend_16 { pt3dadd( 63.1618, 250.093, -1.67481, 0.81 ) }
    dend_16 { pt3dadd( 64.0813, 251.289, -1.06338, 0.52 ) }
    dend_16 { pt3dadd( 64.8803, 252.574, -0.398501, 0.52 ) }
    dend_16 { pt3dadd( 65.4341, 253.78, 0.191621, 1.47 ) }
    dend_16 { pt3dadd( 65.6976, 254.519, 0.537686, 1.77 ) }
    dend_16 { pt3dadd( 65.8913, 255.13, 0.80785, 1.77 ) }
    dend_16 { pt3dadd( 66.2806, 256.399, 1.34224, 0.66 ) }
    dend_16 { pt3dadd( 66.9022, 258.009, 1.96719, 0.52 ) }
    dend_16 { pt3dadd( 67.5802, 259.387, 2.50625, 0.52 ) }
    dend_16 { pt3dadd( 68.3578, 260.729, 3.01197, 0.52 ) }
    dend_16 { pt3dadd( 68.8964, 261.619, 3.30787, 0.52 ) }
    dend_16 { pt3dadd( 69.2916, 262.286, 3.49845, 0.81 ) }
    dend_16 { pt3dadd( 69.9228, 263.386, 3.77011, 1.03 ) }
    dend_16 { pt3dadd( 70.4915, 264.596, 3.99228, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 70.7204, 265.172, 4.09011, 1.33 ) }
    dend_16 { pt3dadd( 71.1858, 266.336, 4.29967, 0.88 ) }
    dend_16 { pt3dadd( 71.6525, 267.278, 4.50553, 0.81 ) }
    dend_16 { pt3dadd( 72.2205, 268.081, 4.7267, 0.59 ) }
    dend_16 { pt3dadd( 73.5466, 269.324, 5.17618, 0.44 ) }
    dend_16 { pt3dadd( 74.6563, 270.04, 5.57454, 0.66 ) }
    dend_16 { pt3dadd( 75.722, 270.603, 5.97766, 0.81 ) }
    dend_16 { pt3dadd( 76.8471, 271.127, 6.42019, 0.44 ) }
    dend_16 { pt3dadd( 77.8354, 271.583, 6.87206, 0.81 ) }
    dend_16 { pt3dadd( 78.5798, 271.963, 7.25767, 0.81 ) }
    dend_16 { pt3dadd( 79.6846, 272.572, 7.87812, 0.52 ) }
    dend_16 { pt3dadd( 80.5233, 273.132, 8.35794, 0.52 ) }
    dend_16 { pt3dadd( 81.4292, 273.806, 8.87535, 0.52 ) }
    dend_16 { pt3dadd( 82.3765, 274.527, 9.39134, 0.37 ) }
    dend_16 { pt3dadd( 83.6345, 275.451, 9.95601, 0.37 ) }
    dend_16 { pt3dadd( 84.6673, 276.161, 10.2901, 0.59 ) }
    dend_16 { pt3dadd( 85.7245, 276.854, 10.5883, 1.18 ) }
    dend_16 { pt3dadd( 86.0909, 277.097, 10.7168, 1.47 ) }
    dend_16 { pt3dadd( 86.8435, 277.644, 11.0296, 1.47 ) }
    dend_16 { pt3dadd( 88.019, 278.585, 11.5738, 0.52 ) }
    dend_16 { pt3dadd( 88.883, 279.339, 12.0243, 0.52 ) }
    dend_16 { pt3dadd( 90.4204, 280.747, 12.8414, 0.96 ) }
    dend_16 { pt3dadd( 91.7361, 281.904, 13.5148, 0.52 ) }
    dend_16 { pt3dadd( 92.97, 282.907, 14.063, 0.96 ) }
    dend_16 { pt3dadd( 93.6646, 283.43, 14.3186, 0.96 ) }
    dend_16 { pt3dadd( 95.0313, 284.292, 14.7017, 0.52 ) }
    dend_16 { pt3dadd( 95.8096, 284.694, 14.7964, 0.37 ) }
    dend_16 { pt3dadd( 97.0818, 285.162, 14.7534, 0.37 ) }
    dend_16 { pt3dadd( 98.0262, 285.386, 14.6713, 0.81 ) }
    dend_16 { pt3dadd( 98.851, 285.505, 14.6141, 0.81 ) }
    dend_16 { pt3dadd( 100.125, 285.654, 14.5496, 0.52 ) }
    dend_16 { pt3dadd( 101.042, 285.77, 14.5348, 0.74 ) }
    dend_16 { pt3dadd( 102.428, 285.996, 14.5634, 0.74 ) }
    dend_16 { pt3dadd( 103.599, 286.238, 14.6151, 0.52 ) }
    dend_16 { pt3dadd( 104.965, 286.679, 14.6613, 0.52 ) }
    dend_16 { pt3dadd( 106.3, 287.354, 14.6923, 0.96 ) }
    dend_16 { pt3dadd( 106.958, 287.838, 14.6948, 1.55 ) }
    dend_16 { pt3dadd( 107.494, 288.332, 14.7049, 1.69 ) }
    dend_16 { pt3dadd( 107.81, 288.671, 14.7166, 1.69 ) }
    dend_16 { pt3dadd( 109.371, 290.347, 14.8314, 0.52 ) }
    dend_16 { pt3dadd( 110.487, 291.443, 14.9598, 0.66 ) }
    dend_16 { pt3dadd( 111.19, 292.014, 15.0804, 0.74 ) }
    dend_16 { pt3dadd( 112.484, 292.85, 15.2868, 0.44 ) }
    dend_16 { pt3dadd( 113.861, 293.641, 15.5073, 0.37 ) }
    dend_16 { pt3dadd( 115.134, 294.303, 15.7262, 1.11 ) }
    dend_16 { pt3dadd( 116.104, 294.775, 15.9208, 1.55 ) }
    dend_16 { pt3dadd( 117.218, 295.369, 16.089, 0.81 ) }
    dend_16 { pt3dadd( 118.639, 296.402, 16.1997, 0.52 ) }
    dend_16 { pt3dadd( 119.353, 297.207, 16.1824, 0.66 ) }
    dend_16 { pt3dadd( 119.689, 297.713, 16.1213, 0.66 ) }
    dend_16 { pt3dadd( 120.386, 298.996, 15.9143, 0.44 ) }
    dend_16 { pt3dadd( 120.99, 300.163, 15.7123, 0.44 ) }
    dend_16 { pt3dadd( 121.71, 301.256, 15.477, 0.52 ) }
    dend_16 { pt3dadd( 122.818, 302.304, 15.1771, 0.74 ) }
    dend_16 { pt3dadd( 123.91, 302.926, 14.8375, 1.11 ) }
    dend_16 { pt3dadd( 124.075, 302.991, 14.784, 1.33 ) }
    dend_16 { pt3dadd( 124.742, 303.183, 14.5717, 1.33 ) }
    dend_16 { pt3dadd( 126.752, 303.696, 13.8718, 0.37 ) }
    dend_16 { pt3dadd( 127.661, 303.934, 13.5251, 0.37 ) }
    dend_16 { pt3dadd( 129.165, 304.419, 12.9296, 0.66 ) }
    dend_16 { pt3dadd( 130.305, 304.908, 12.4698, 0.44 ) }
    dend_16 { pt3dadd( 130.951, 305.247, 12.2086, 0.44 ) }
    dend_16 { pt3dadd( 132.392, 306.095, 11.6655, 1.18 ) }
    dend_16 { pt3dadd( 133.08, 306.525, 11.4929, 1.47 ) }
    dend_16 { pt3dadd( 133.951, 307.077, 11.4057, 1.47 ) }
    dend_16 { pt3dadd( 135.576, 308.159, 11.504, 0.52 ) }
    dend_16 { pt3dadd( 136.354, 308.748, 11.6666, 0.52 ) }
    dend_16 { pt3dadd( 137.583, 309.837, 12.0984, 0.52 ) }
    dend_16 { pt3dadd( 138.921, 311.238, 12.7939, 0.88 ) }
    dend_16 { pt3dadd( 139.766, 312.292, 13.3333, 0.66 ) }
    dend_16 { pt3dadd( 140.726, 313.703, 14.0718, 0.96 ) }
    dend_16 { pt3dadd( 141.499, 315.006, 14.7652, 0.96 ) }
    dend_16 { pt3dadd( 142.208, 316.229, 15.3811, 0.96 ) }
    dend_16 { pt3dadd( 142.766, 317.152, 15.8184, 0.96 ) }
    dend_16 { pt3dadd( 143.41, 318.026, 16.1906, 0.96 ) }
    dend_16 { pt3dadd( 144.166, 318.74, 16.5374, 0.96 ) }
    dend_16 { pt3dadd( 145.351, 319.492, 16.9827, 0.37 ) }
    dend_16 { pt3dadd( 146.7, 320.155, 17.4121, 0.37 ) }
    dend_16 { pt3dadd( 147.926, 320.688, 17.794, 0.66 ) }
    dend_16 { pt3dadd( 149.0, 321.169, 18.1272, 1.33 ) }
    dend_16 { pt3dadd( 149.773, 321.57, 18.3691, 1.33 ) }
    dend_16 { pt3dadd( 150.776, 322.289, 18.6963, 0.52 ) }
    dend_16 { pt3dadd( 151.862, 323.254, 19.062, 0.52 ) }
    dend_16 { pt3dadd( 152.358, 323.747, 19.232, 0.88 ) }
    dend_16 { pt3dadd( 153.0, 324.351, 19.4097, 0.88 ) }
    dend_16 { pt3dadd( 153.91, 325.071, 19.5977, 0.88 ) }
    dend_16 { pt3dadd( 155.17, 325.824, 19.8285, 0.44 ) }
    dend_16 { pt3dadd( 156.462, 326.428, 20.0306, 0.44 ) }
    dend_16 { pt3dadd( 157.925, 326.899, 20.2231, 0.81 ) }
    dend_16 { pt3dadd( 159.605, 327.259, 20.4166, 1.47 ) }
    dend_16 { pt3dadd( 160.365, 327.336, 20.4901, 1.77 ) }
    dend_16 { pt3dadd( 161.699, 327.319, 20.5867, 1.77 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 92/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -14.5424, 66.1248, 10.4637, 0.52 ) }
    dend_15 { pt3dadd( -16.0118, 66.7844, 10.1617, 0.52 ) }
    dend_15 { pt3dadd( -17.1134, 67.3773, 9.95834, 0.52 ) }
    dend_15 { pt3dadd( -18.3761, 68.2139, 9.73393, 0.52 ) }
    dend_15 { pt3dadd( -19.2527, 68.9262, 9.57259, 0.74 ) }
    dend_15 { pt3dadd( -19.8429, 69.5308, 9.42223, 0.74 ) }
    dend_15 { pt3dadd( -20.4099, 70.2565, 9.17264, 0.59 ) }
    dend_15 { pt3dadd( -20.6267, 70.7886, 8.95457, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -20.7942, 71.5882, 8.60428, 0.37 ) }
    dend_15 { pt3dadd( -20.8776, 72.4165, 8.261, 0.37 ) }
    dend_15 { pt3dadd( -20.9654, 73.5639, 7.82641, 0.37 ) }
    dend_15 { pt3dadd( -21.1649, 74.9272, 7.37772, 0.37 ) }
    dend_15 { pt3dadd( -21.3754, 75.4512, 7.27725, 0.44 ) }
    dend_15 { pt3dadd( -21.8071, 75.9631, 7.30732, 0.59 ) }
    dend_15 { pt3dadd( -22.2434, 76.3068, 7.40024, 0.59 ) }
    dend_15 { pt3dadd( -23.698, 77.2474, 7.79444, 0.88 ) }
    dend_15 { pt3dadd( -24.3813, 77.6284, 8.01171, 1.03 ) }
    dend_15 { pt3dadd( -25.7109, 78.3044, 8.42471, 0.37 ) }
    dend_15 { pt3dadd( -26.6729, 78.7654, 8.65538, 0.44 ) }
    dend_15 { pt3dadd( -27.3775, 79.1075, 8.75111, 0.74 ) }
    dend_15 { pt3dadd( -28.037, 79.4514, 8.77161, 0.74 ) }
    dend_15 { pt3dadd( -29.0334, 80.055, 8.67099, 0.44 ) }
    dend_15 { pt3dadd( -29.8357, 80.6641, 8.49303, 0.29 ) }
    dend_15 { pt3dadd( -30.2719, 81.1678, 8.25041, 0.29 ) }
    dend_15 { pt3dadd( -30.7785, 82.1097, 7.66644, 1.03 ) }
    dend_15 { pt3dadd( -30.9487, 82.666, 7.25979, 1.4 ) }
    dend_15 { pt3dadd( -31.0326, 83.1304, 6.89807, 1.4 ) }
    dend_15 { pt3dadd( -31.1447, 84.0471, 6.16701, 0.96 ) }
    dend_15 { pt3dadd( -31.3311, 85.6225, 4.97903, 0.52 ) }
    dend_15 { pt3dadd( -31.4425, 86.3319, 4.47697, 0.52 ) }
    dend_15 { pt3dadd( -31.6763, 87.3923, 3.81053, 0.52 ) }
    dend_15 { pt3dadd( -31.8953, 87.9262, 3.57105, 0.52 ) }
    dend_15 { pt3dadd( -32.4632, 88.6805, 3.54571, 0.52 ) }
    dend_15 { pt3dadd( -33.2348, 89.4183, 3.75544, 0.88 ) }
    dend_15 { pt3dadd( -33.6975, 89.8158, 3.92381, 1.25 ) }
    dend_15 { pt3dadd( -34.2652, 90.3099, 4.14324, 1.47 ) }
    dend_15 { pt3dadd( -35.2206, 91.2116, 4.51711, 0.59 ) }
    dend_15 { pt3dadd( -36.0158, 92.0928, 4.76204, 0.37 ) }
    dend_15 { pt3dadd( -36.8342, 93.1915, 4.93443, 0.29 ) }
    dend_15 { pt3dadd( -37.2331, 93.8228, 4.96223, 0.59 ) }
    dend_15 { pt3dadd( -37.6778, 94.6227, 4.92431, 0.88 ) }
    dend_15 { pt3dadd( -38.1305, 95.4708, 4.82948, 1.11 ) }
    dend_15 { pt3dadd( -38.6505, 96.4305, 4.69637, 1.33 ) }
    dend_15 { pt3dadd( -39.0239, 97.0899, 4.61355, 1.03 ) }
    dend_15 { pt3dadd( -39.5441, 97.9594, 4.52999, 0.81 ) }
    dend_15 { pt3dadd( -40.1042, 98.8167, 4.47451, 0.52 ) }
    dend_15 { pt3dadd( -41.0854, 100.296, 4.42441, 0.52 ) }
    dend_15 { pt3dadd( -41.7514, 101.331, 4.39241, 0.52 ) }
    dend_15 { pt3dadd( -42.0697, 101.851, 4.38106, 0.66 ) }
    dend_15 { pt3dadd( -42.4146, 102.491, 4.35002, 0.66 ) }
    dend_15 { pt3dadd( -42.8703, 103.55, 4.27455, 0.37 ) }
    dend_15 { pt3dadd( -43.219, 104.683, 4.1761, 0.37 ) }
    dend_15 { pt3dadd( -43.4413, 105.731, 4.05644, 0.88 ) }
    dend_15 { pt3dadd( -43.5506, 106.313, 3.99876, 0.88 ) }
    dend_15 { pt3dadd( -43.7982, 107.471, 3.8952, 0.37 ) }
    dend_15 { pt3dadd( -44.0386, 108.325, 3.83898, 0.29 ) }
    dend_15 { pt3dadd( -44.4655, 109.547, 3.80191, 0.81 ) }
    dend_15 { pt3dadd( -44.6588, 110.067, 3.83371, 1.18 ) }
    dend_15 { pt3dadd( -44.9957, 110.986, 3.96304, 1.18 ) }
    dend_15 { pt3dadd( -45.2823, 111.859, 4.11889, 0.59 ) }
    dend_15 { pt3dadd( -45.615, 113.124, 4.34157, 0.44 ) }
    dend_15 { pt3dadd( -45.8257, 114.506, 4.53161, 0.44 ) }
    dend_15 { pt3dadd( -45.8872, 115.98, 4.647, 1.11 ) }
    dend_15 { pt3dadd( -45.87, 116.501, 4.64938, 1.11 ) }
    dend_15 { pt3dadd( -45.8079, 117.308, 4.59966, 0.81 ) }
    dend_15 { pt3dadd( -45.704, 118.54, 4.47377, 0.52 ) }
    dend_15 { pt3dadd( -45.6794, 119.492, 4.30325, 0.52 ) }
    dend_15 { pt3dadd( -45.7819, 120.377, 4.08832, 0.44 ) }
    dend_15 { pt3dadd( -45.9836, 121.118, 3.88953, 0.44 ) }
    dend_15 { pt3dadd( -46.2639, 121.832, 3.72057, 0.52 ) }
    dend_15 { pt3dadd( -46.5758, 122.489, 3.58837, 0.81 ) }
    dend_15 { pt3dadd( -47.1559, 123.634, 3.42027, 1.11 ) }
    dend_15 { pt3dadd( -47.4905, 124.273, 3.34119, 1.11 ) }
    dend_15 { pt3dadd( -47.9269, 125.164, 3.29251, 0.81 ) }
    dend_15 { pt3dadd( -48.357, 126.106, 3.29242, 0.37 ) }
    dend_15 { pt3dadd( -48.8353, 127.245, 3.35774, 0.37 ) }
    dend_15 { pt3dadd( -49.2741, 128.384, 3.49685, 0.29 ) }
    dend_15 { pt3dadd( -49.5659, 129.224, 3.67844, 0.88 ) }
    dend_15 { pt3dadd( -49.914, 130.366, 3.97919, 1.55 ) }
    dend_15 { pt3dadd( -50.0638, 130.934, 4.14658, 1.55 ) }
    dend_15 { pt3dadd( -50.2775, 131.824, 4.40723, 1.18 ) }
    dend_15 { pt3dadd( -50.5245, 132.817, 4.63861, 0.81 ) }
    dend_15 { pt3dadd( -50.9178, 134.291, 4.95816, 0.44 ) }
    dend_15 { pt3dadd( -51.3749, 135.82, 5.28769, 0.29 ) }
    dend_15 { pt3dadd( -51.723, 136.763, 5.4938, 0.29 ) }
    dend_15 { pt3dadd( -52.1772, 137.837, 5.74874, 1.25 ) }
    dend_15 { pt3dadd( -52.8767, 139.21, 6.17412, 0.29 ) }
    dend_15 { pt3dadd( -53.6352, 140.458, 6.68638, 0.29 ) }
    dend_15 { pt3dadd( -54.2173, 141.268, 7.10549, 0.29 ) }
    dend_15 { pt3dadd( -54.8048, 141.997, 7.58686, 0.59 ) }
    dend_15 { pt3dadd( -55.1084, 142.358, 7.86291, 0.88 ) }
    dend_15 { pt3dadd( -56.0004, 143.519, 8.81561, 0.44 ) }
    dend_15 { pt3dadd( -56.2702, 143.955, 9.13596, 0.29 ) }
    dend_15 { pt3dadd( -56.5357, 144.542, 9.43444, 0.44 ) }
    dend_15 { pt3dadd( -56.7093, 145.125, 9.65673, 0.29 ) }
    dend_15 { pt3dadd( -56.8631, 146.253, 10.0374, 0.29 ) }
    dend_15 { pt3dadd( -56.872, 147.037, 10.2868, 0.29 ) }
    dend_15 { pt3dadd( -56.8343, 147.88, 10.5098, 0.66 ) }
    dend_15 { pt3dadd( -56.8197, 148.388, 10.6519, 0.81 ) }
    dend_15 { pt3dadd( -56.8209, 149.059, 10.8513, 0.81 ) }
    dend_15 { pt3dadd( -56.8698, 150.309, 11.2226, 0.29 ) }
    dend_15 { pt3dadd( -56.9585, 151.36, 11.5239, 0.37 ) }
    dend_15 { pt3dadd( -57.2042, 152.798, 11.9473, 0.37 ) }
    dend_15 { pt3dadd( -57.4409, 153.671, 12.1422, 0.37 ) }
    dend_15 { pt3dadd( -57.8207, 154.843, 12.3033, 1.33 ) }
    dend_15 { pt3dadd( -58.0243, 155.421, 12.3356, 1.55 ) }
    dend_15 { pt3dadd( -58.1651, 155.821, 12.3104, 1.55 ) }
    dend_15 { pt3dadd( -58.3663, 156.405, 12.2143, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -59.0315, 158.262, 11.7365, 0.37 ) }
    dend_15 { pt3dadd( -59.3438, 158.942, 11.4677, 0.59 ) }
    dend_15 { pt3dadd( -59.7383, 159.6, 11.0994, 0.59 ) }
    dend_15 { pt3dadd( -60.2258, 160.258, 10.6377, 0.29 ) }
    dend_15 { pt3dadd( -60.695, 160.786, 10.1, 0.29 ) }
    dend_15 { pt3dadd( -61.1948, 161.301, 9.47018, 0.29 ) }
    dend_15 { pt3dadd( -61.958, 162.04, 8.47894, 0.59 ) }
    dend_15 { pt3dadd( -62.3218, 162.391, 7.99849, 0.59 ) }
    dend_15 { pt3dadd( -63.3652, 163.471, 6.53487, 0.88 ) }
    dend_15 { pt3dadd( -64.5109, 164.905, 4.72585, 0.44 ) }
    dend_15 { pt3dadd( -65.0243, 165.776, 3.72435, 0.29 ) }
    dend_15 { pt3dadd( -65.1628, 166.078, 3.3983, 0.81 ) }
    dend_15 { pt3dadd( -65.2835, 166.389, 3.08877, 1.11 ) }
    dend_15 { pt3dadd( -65.5843, 167.168, 2.33535, 0.81 ) }
    dend_15 { pt3dadd( -66.0819, 168.183, 1.33494, 0.15 ) }
    dend_15 { pt3dadd( -66.4357, 168.652, 0.813431, 0.15 ) }
    dend_15 { pt3dadd( -66.7883, 168.982, 0.28301, 0.15 ) }
    dend_15 { pt3dadd( -67.0798, 169.224, -0.220692, 0.66 ) }
    dend_15 { pt3dadd( -67.3012, 169.405, -0.656711, 0.81 ) }
    dend_15 { pt3dadd( -68.024, 170.048, -2.14819, 0.15 ) }
    dend_15 { pt3dadd( -68.9825, 170.946, -4.1125, 0.66 ) }
    dend_15 { pt3dadd( -69.2301, 171.199, -4.6199, 0.96 ) }
    dend_15 { pt3dadd( -69.6965, 171.762, -5.62954, 0.81 ) }
    dend_15 { pt3dadd( -70.4879, 172.791, -7.34341, 0.29 ) }
    dend_15 { pt3dadd( -70.8795, 173.327, -8.1431, 0.29 ) }
    dend_15 { pt3dadd( -71.3885, 174.02, -9.04408, 0.29 ) }
    dend_15 { pt3dadd( -72.1417, 174.812, -9.99313, 1.18 ) }
    dend_15 { pt3dadd( -72.6317, 175.225, -10.4624, 1.18 ) }
    dend_15 { pt3dadd( -73.7753, 176.065, -11.316, 0.37 ) }
    dend_15 { pt3dadd( -74.4008, 176.493, -11.7061, 0.37 ) }
    dend_15 { pt3dadd( -75.0875, 176.972, -12.1201, 0.88 ) }
    dend_15 { pt3dadd( -75.9474, 177.67, -12.6508, 0.96 ) }
    dend_15 { pt3dadd( -77.1895, 178.849, -13.4656, 0.44 ) }
    dend_15 { pt3dadd( -77.7702, 179.439, -13.8664, 0.66 ) }
    dend_15 { pt3dadd( -78.2569, 179.947, -14.2038, 0.37 ) }
    dend_15 { pt3dadd( -78.8086, 180.473, -14.5827, 0.37 ) }
    dend_15 { pt3dadd( -79.6617, 181.278, -15.1848, 0.44 ) }
    dend_15 { pt3dadd( -80.4584, 182.061, -15.7591, 0.37 ) }
    dend_15 { pt3dadd( -81.6376, 183.204, -16.5916, 0.66 ) }
    dend_15 { pt3dadd( -82.2347, 183.701, -16.9794, 0.66 ) }
    dend_15 { pt3dadd( -83.1187, 184.287, -17.5092, 0.29 ) }
    dend_15 { pt3dadd( -83.9653, 184.72, -17.9465, 0.52 ) }
    dend_15 { pt3dadd( -84.695, 185.026, -18.2704, 0.59 ) }
    dend_15 { pt3dadd( -85.8652, 185.486, -18.7653, 0.29 ) }
    dend_15 { pt3dadd( -86.7352, 185.846, -19.1609, 0.29 ) }
    dend_15 { pt3dadd( -87.8858, 186.364, -19.6733, 0.29 ) }
    dend_15 { pt3dadd( -88.7491, 186.767, -20.0836, 0.44 ) }
    dend_15 { pt3dadd( -89.3378, 187.01, -20.3601, 0.74 ) }
    dend_15 { pt3dadd( -90.242, 187.385, -20.7647, 0.74 ) }
    dend_15 { pt3dadd( -91.4374, 187.883, -21.2574, 1.11 ) }
    dend_15 { pt3dadd( -92.2623, 188.26, -21.5854, 1.62 ) }
    dend_15 { pt3dadd( -93.9156, 189.06, -22.1946, 0.88 ) }
    dend_15 { pt3dadd( -95.2095, 189.678, -22.6598, 0.37 ) }
    dend_15 { pt3dadd( -96.3257, 190.174, -23.0513, 0.29 ) }
    dend_15 { pt3dadd( -97.1478, 190.506, -23.3214, 0.29 ) }
    dend_15 { pt3dadd( -97.7716, 190.751, -23.4975, 0.81 ) }
    dend_15 { pt3dadd( -98.2622, 190.946, -23.6204, 1.18 ) }
    dend_15 { pt3dadd( -98.8548, 191.214, -23.7224, 0.88 ) }
    dend_15 { pt3dadd( -100.029, 191.895, -23.9223, 0.29 ) }
    dend_15 { pt3dadd( -100.632, 192.358, -24.1009, 0.29 ) }
    dend_15 { pt3dadd( -101.182, 192.913, -24.3206, 0.59 ) }
    dend_15 { pt3dadd( -101.434, 193.209, -24.4789, 0.88 ) }
    dend_15 { pt3dadd( -101.696, 193.572, -24.7278, 0.59 ) }
    dend_15 { pt3dadd( -101.988, 194.004, -25.1873, 0.37 ) }
    dend_15 { pt3dadd( -102.469, 194.71, -26.1875, 0.37 ) }
    dend_15 { pt3dadd( -102.746, 195.085, -26.8114, 0.74 ) }
    dend_15 { pt3dadd( -103.316, 195.772, -28.1154, 0.52 ) }
    dend_15 { pt3dadd( -103.789, 196.289, -29.1811, 1.11 ) }
    dend_15 { pt3dadd( -105.102, 197.506, -32.016, 1.25 ) }
    dend_15 { pt3dadd( -106.073, 198.273, -34.0575, 0.66 ) }
    dend_15 { pt3dadd( -106.785, 198.747, -35.4783, 0.44 ) }
    dend_15 { pt3dadd( -107.62, 199.227, -37.0663, 1.03 ) }
    dend_15 { pt3dadd( -108.385, 199.59, -38.3737, 1.03 ) }
    dend_15 { pt3dadd( -109.917, 200.121, -40.6569, 0.29 ) }
    dend_15 { pt3dadd( -110.795, 200.321, -41.7627, 0.29 ) }
    dend_15 { pt3dadd( -111.472, 200.438, -42.5267, 1.25 ) }
    dend_15 { pt3dadd( -111.704, 200.479, -42.7692, 1.69 ) }
    dend_15 { pt3dadd( -112.263, 200.596, -43.3152, 1.69 ) }
    dend_15 { pt3dadd( -113.785, 200.979, -44.6861, 0.29 ) }
    dend_15 { pt3dadd( -114.931, 201.382, -45.6531, 0.29 ) }
    dend_15 { pt3dadd( -115.541, 201.667, -46.1737, 0.29 ) }
    dend_15 { pt3dadd( -116.362, 202.128, -46.9193, 0.29 ) }
    dend_15 { pt3dadd( -117.228, 202.624, -47.7234, 0.81 ) }
    dend_15 { pt3dadd( -117.729, 202.911, -48.1713, 0.88 ) }
    dend_15 { pt3dadd( -118.735, 203.487, -48.9887, 0.29 ) }
    dend_15 { pt3dadd( -119.735, 203.997, -49.7535, 0.81 ) }
    dend_15 { pt3dadd( -120.238, 204.208, -50.1106, 0.81 ) }
    dend_15 { pt3dadd( -121.015, 204.491, -50.6417, 0.22 ) }
    dend_15 { pt3dadd( -121.502, 204.69, -50.953, 0.52 ) }
    dend_15 { pt3dadd( -121.714, 204.783, -51.0904, 0.59 ) }
    dend_15 { pt3dadd( -122.801, 205.216, -51.6743, 0.22 ) }
    dend_15 { pt3dadd( -123.212, 205.333, -51.8607, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -52.197, 71.8873, -98.1592, 0.52 ) }
    dend_12 { pt3dadd( -51.6479, 72.551, -99.5462, 0.52 ) }
    dend_12 { pt3dadd( -51.2892, 73.0295, -100.533, 0.81 ) }
    dend_12 { pt3dadd( -51.0666, 73.3424, -101.264, 0.59 ) }
    dend_12 { pt3dadd( -50.5599, 73.9552, -102.868, 0.96 ) }
    dend_12 { pt3dadd( -50.2375, 74.3023, -103.907, 0.96 ) }
    dend_12 { pt3dadd( -49.8664, 74.7102, -105.15, 0.52 ) }
    dend_12 { pt3dadd( -49.6716, 74.9509, -105.979, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -49.3757, 75.3288, -107.476, 0.52 ) }
    dend_12 { pt3dadd( -49.194, 75.5584, -108.378, 0.52 ) }
    dend_12 { pt3dadd( -48.9333, 75.8886, -109.462, 0.66 ) }
    dend_12 { pt3dadd( -48.79, 76.131, -110.16, 0.96 ) }
    dend_12 { pt3dadd( -48.6235, 76.4837, -111.069, 0.96 ) }
    dend_12 { pt3dadd( -48.494, 76.9346, -112.152, 0.37 ) }
    dend_12 { pt3dadd( -48.4294, 77.3848, -113.075, 0.37 ) }
    dend_12 { pt3dadd( -48.4153, 77.8571, -113.952, 0.37 ) }
    dend_12 { pt3dadd( -48.4659, 78.7785, -115.62, 0.44 ) }
    dend_12 { pt3dadd( -48.4909, 78.9678, -115.983, 0.74 ) }
    dend_12 { pt3dadd( -48.5546, 79.3989, -116.81, 0.74 ) }
    dend_12 { pt3dadd( -48.6378, 79.8105, -117.591, 0.37 ) }
    dend_12 { pt3dadd( -48.6928, 80.1668, -118.308, 0.37 ) }
    dend_12 { pt3dadd( -48.6622, 80.5777, -119.135, 0.37 ) }
    dend_12 { pt3dadd( -48.5228, 80.878, -119.715, 0.37 ) }
    dend_12 { pt3dadd( -48.2498, 81.3335, -120.631, 0.37 ) }
    dend_12 { pt3dadd( -48.1533, 81.4584, -120.882, 0.81 ) }
    dend_12 { pt3dadd( -47.825, 81.7973, -121.598, 0.37 ) }
    dend_12 { pt3dadd( -47.52, 82.0437, -122.159, 0.37 ) }
    dend_12 { pt3dadd( -47.0563, 82.3718, -122.833, 0.66 ) }
    dend_12 { pt3dadd( -46.7193, 82.6152, -123.313, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -52.197, 71.8873, -98.1592, 0.44 ) }
    dend_5 { pt3dadd( -52.3293, 72.9117, -98.4039, 0.44 ) }
    dend_5 { pt3dadd( -52.5717, 73.6993, -98.6145, 0.37 ) }
    dend_5 { pt3dadd( -52.8952, 74.423, -98.8355, 0.88 ) }
    dend_5 { pt3dadd( -53.0994, 74.8084, -98.9843, 0.88 ) }
    dend_5 { pt3dadd( -53.4537, 75.4193, -99.252, 0.52 ) }
    dend_5 { pt3dadd( -53.8186, 75.999, -99.6775, 0.29 ) }
    dend_5 { pt3dadd( -54.2858, 76.6164, -100.326, 0.22 ) }
    dend_5 { pt3dadd( -54.5688, 76.9398, -100.726, 0.22 ) }
    dend_5 { pt3dadd( -55.0143, 77.3968, -101.357, 0.88 ) }
    dend_5 { pt3dadd( -55.3198, 77.6953, -101.816, 1.25 ) }
    dend_5 { pt3dadd( -56.5901, 78.916, -103.96, 0.44 ) }
    dend_5 { pt3dadd( -57.0276, 79.3588, -104.828, 0.96 ) }
    dend_5 { pt3dadd( -57.186, 79.539, -105.222, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -25.0644, 3.03715, -5.85755, 0.81 ) }
    dend_3 { pt3dadd( -25.6508, 2.99482, -7.28485, 0.81 ) }
    dend_3 { pt3dadd( -25.9528, 2.99295, -7.90883, 0.81 ) }
    dend_3 { pt3dadd( -27.9082, 3.13933, -11.2551, 1.62 ) }
    dend_3 { pt3dadd( -29.337, 3.36056, -13.3135, 0.66 ) }
    dend_3 { pt3dadd( -30.2212, 3.52287, -14.4411, 0.66 ) }
    dend_3 { pt3dadd( -30.8115, 3.61388, -15.1379, 0.88 ) }
    dend_3 { pt3dadd( -31.5016, 3.72437, -15.8383, 0.96 ) }
    dend_3 { pt3dadd( -32.643, 3.85282, -16.8281, 0.81 ) }
    dend_3 { pt3dadd( -33.7884, 3.82457, -17.5348, 0.52 ) }
    dend_3 { pt3dadd( -34.7941, 3.61524, -18.1116, 0.52 ) }
    dend_3 { pt3dadd( -35.8737, 3.14257, -18.7585, 0.74 ) }
    dend_3 { pt3dadd( -36.8234, 2.4983, -19.3468, 1.11 ) }
    dend_3 { pt3dadd( -37.1279, 2.21338, -19.5287, 1.25 ) }
    dend_3 { pt3dadd( -37.7748, 1.45696, -19.9169, 0.96 ) }
    dend_3 { pt3dadd( -38.5435, 0.463533, -20.3668, 0.66 ) }
    dend_3 { pt3dadd( -39.2669, -0.458935, -20.7708, 0.88 ) }
    dend_3 { pt3dadd( -40.0237, -1.34984, -21.1863, 0.81 ) }
    dend_3 { pt3dadd( -40.8272, -2.20387, -21.6558, 0.96 ) }
    dend_3 { pt3dadd( -41.4607, -2.83851, -22.0779, 1.18 ) }
    dend_3 { pt3dadd( -42.1555, -3.53447, -22.6115, 1.11 ) }
    dend_3 { pt3dadd( -42.739, -4.13962, -23.1565, 1.18 ) }
    dend_3 { pt3dadd( -43.3167, -4.7592, -23.824, 1.33 ) }
    dend_3 { pt3dadd( -44.2407, -5.71511, -24.9932, 0.66 ) }
    dend_3 { pt3dadd( -44.9271, -6.36224, -25.8527, 0.88 ) }
    dend_3 { pt3dadd( -45.4975, -6.85217, -26.5197, 0.88 ) }
    dend_3 { pt3dadd( -46.4331, -7.58108, -27.5347, 0.59 ) }
    dend_3 { pt3dadd( -47.0045, -7.96033, -28.0582, 0.59 ) }
    dend_3 { pt3dadd( -47.5208, -8.20824, -28.4028, 0.81 ) }
    dend_3 { pt3dadd( -48.3674, -8.45471, -28.6545, 1.33 ) }
    dend_3 { pt3dadd( -49.1107, -8.61677, -28.6921, 1.4 ) }
    dend_3 { pt3dadd( -49.5952, -8.74387, -28.65, 1.25 ) }
    dend_3 { pt3dadd( -50.5414, -9.11581, -28.4635, 0.52 ) }
    dend_3 { pt3dadd( -51.0764, -9.43721, -28.3559, 0.52 ) }
    dend_3 { pt3dadd( -51.7425, -10.0332, -28.3087, 0.66 ) }
    dend_3 { pt3dadd( -52.3241, -10.6968, -28.3419, 0.81 ) }
    dend_3 { pt3dadd( -52.9446, -11.4574, -28.4259, 0.81 ) }
    dend_3 { pt3dadd( -53.3467, -11.9777, -28.5403, 1.11 ) }
    dend_3 { pt3dadd( -53.6707, -12.4374, -28.6937, 1.33 ) }
    dend_3 { pt3dadd( -54.1297, -13.1219, -29.0296, 1.33 ) }
    dend_3 { pt3dadd( -54.3666, -13.4833, -29.2854, 1.33 ) }
    dend_3 { pt3dadd( -54.8302, -14.1818, -29.9628, 0.81 ) }
    dend_3 { pt3dadd( -55.3437, -14.9361, -30.8112, 0.52 ) }
    dend_3 { pt3dadd( -55.7362, -15.4906, -31.4753, 0.74 ) }
    dend_3 { pt3dadd( -56.3057, -16.2756, -32.4252, 0.96 ) }
    dend_3 { pt3dadd( -56.7625, -16.8804, -33.1278, 0.81 ) }
    dend_3 { pt3dadd( -57.4111, -17.6752, -34.05, 0.66 ) }
    dend_3 { pt3dadd( -57.9705, -18.3143, -34.7457, 0.59 ) }
    dend_3 { pt3dadd( -58.373, -18.7427, -35.1587, 1.03 ) }
    dend_3 { pt3dadd( -58.7068, -19.1081, -35.465, 1.25 ) }
    dend_3 { pt3dadd( -59.1819, -19.6849, -35.8537, 1.25 ) }
    dend_3 { pt3dadd( -59.8486, -20.6348, -36.4767, 0.81 ) }
    dend_3 { pt3dadd( -60.1914, -21.2311, -36.8943, 0.52 ) }
    dend_3 { pt3dadd( -60.6698, -22.0588, -37.6489, 0.52 ) }
    dend_3 { pt3dadd( -61.0322, -22.6126, -38.2166, 0.44 ) }
    dend_3 { pt3dadd( -61.2499, -22.912, -38.5601, 0.44 ) }
    dend_3 { pt3dadd( -61.9049, -23.7802, -39.6098, 0.96 ) }
    dend_3 { pt3dadd( -62.1835, -24.1382, -40.0461, 1.4 ) }
    dend_3 { pt3dadd( -62.9052, -24.9347, -41.187, 0.88 ) }
    dend_3 { pt3dadd( -63.543, -25.596, -42.1589, 0.66 ) }
    dend_3 { pt3dadd( -64.4427, -26.557, -43.5081, 0.66 ) }
    dend_3 { pt3dadd( -65.0472, -27.3067, -44.544, 0.59 ) }
    dend_3 { pt3dadd( -65.6308, -28.1917, -45.7142, 1.77 ) }
    dend_3 { pt3dadd( -66.4084, -29.6668, -47.5659, 0.59 ) }
    dend_3 { pt3dadd( -66.637, -30.1851, -48.1787, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_3 { pt3dadd( -66.8956, -30.7842, -48.8694, 0.74 ) }
    dend_3 { pt3dadd( -67.5379, -32.117, -50.3058, 0.59 ) }
    dend_3 { pt3dadd( -67.8751, -32.7169, -50.8911, 0.59 ) }
    dend_3 { pt3dadd( -68.2536, -33.3335, -51.3961, 0.74 ) }
    dend_3 { pt3dadd( -68.83, -34.2241, -51.969, 0.74 ) }
    dend_3 { pt3dadd( -69.4042, -34.9831, -52.4223, 0.74 ) }
    dend_3 { pt3dadd( -70.0667, -35.7775, -52.9701, 0.52 ) }
    dend_3 { pt3dadd( -70.6801, -36.4229, -53.4255, 0.37 ) }
    dend_3 { pt3dadd( -71.0321, -36.7638, -53.7128, 1.11 ) }
    dend_3 { pt3dadd( -71.2698, -36.9632, -53.9261, 1.11 ) }
    dend_3 { pt3dadd( -71.7026, -37.2805, -54.3364, 0.96 ) }
    dend_3 { pt3dadd( -73.5801, -38.4013, -56.0452, 0.59 ) }
    dend_3 { pt3dadd( -74.0571, -38.6157, -56.4089, 0.52 ) }
    dend_3 { pt3dadd( -74.5449, -38.763, -56.7769, 0.81 ) }
    dend_3 { pt3dadd( -75.3388, -38.9644, -57.3676, 0.81 ) }
    dend_3 { pt3dadd( -76.0442, -39.1227, -57.8757, 1.11 ) }
    dend_3 { pt3dadd( -76.8043, -39.2999, -58.3909, 1.25 ) }
    dend_3 { pt3dadd( -77.5449, -39.5013, -58.8286, 0.96 ) }
    dend_3 { pt3dadd( -79.1761, -40.0717, -59.9494, 0.52 ) }
    dend_3 { pt3dadd( -79.8667, -40.3799, -60.4746, 0.52 ) }
    dend_3 { pt3dadd( -80.4099, -40.7125, -60.9337, 0.81 ) }
    dend_3 { pt3dadd( -80.9378, -41.1792, -61.4675, 0.88 ) }
    dend_3 { pt3dadd( -81.198, -41.511, -61.7956, 1.03 ) }
    dend_3 { pt3dadd( -81.5359, -42.0869, -62.2937, 0.88 ) }
    dend_3 { pt3dadd( -81.8369, -42.7261, -62.7628, 0.44 ) }
    dend_3 { pt3dadd( -82.1381, -43.4596, -63.2748, 0.44 ) }
    dend_3 { pt3dadd( -82.619, -44.9688, -64.2915, 1.33 ) }
    dend_3 { pt3dadd( -83.0594, -46.5414, -65.3334, 0.59 ) }
    dend_3 { pt3dadd( -83.2116, -47.1052, -65.7284, 1.03 ) }
    dend_3 { pt3dadd( -83.3199, -47.5135, -66.0189, 1.18 ) }
    dend_3 { pt3dadd( -83.489, -48.1148, -66.4633, 0.81 ) }
    dend_3 { pt3dadd( -83.8646, -49.2268, -67.2908, 0.59 ) }
    dend_3 { pt3dadd( -84.1734, -49.944, -67.8341, 0.37 ) }
    dend_3 { pt3dadd( -84.7625, -50.9956, -68.7504, 0.37 ) }
    dend_3 { pt3dadd( -84.9471, -51.2418, -69.0027, 0.96 ) }
    dend_3 { pt3dadd( -85.1097, -51.4167, -69.2026, 1.25 ) }
    dend_3 { pt3dadd( -85.3484, -51.6192, -69.4555, 1.25 ) }
    dend_3 { pt3dadd( -86.2994, -52.2755, -70.2853, 0.52 ) }
    dend_3 { pt3dadd( -86.967, -52.7085, -70.7847, 0.52 ) }
    dend_3 { pt3dadd( -87.7113, -53.1883, -71.2337, 0.52 ) }
    dend_3 { pt3dadd( -87.9222, -53.3195, -71.3533, 1.18 ) }
    dend_3 { pt3dadd( -88.2808, -53.5385, -71.5918, 1.18 ) }
    dend_3 { pt3dadd( -88.603, -53.7409, -71.8163, 1.18 ) }
    dend_3 { pt3dadd( -89.135, -54.1031, -72.1253, 0.88 ) }
    dend_3 { pt3dadd( -90.1795, -54.7727, -72.8693, 0.44 ) }
    dend_3 { pt3dadd( -90.3287, -54.8639, -73.0043, 0.81 ) }
    dend_3 { pt3dadd( -91.8395, -55.7705, -74.5279, 0.52 ) }
    dend_3 { pt3dadd( -92.3613, -56.0927, -75.1062, 0.81 ) }
    dend_3 { pt3dadd( -93.2599, -56.6711, -76.1484, 0.44 ) }
    dend_3 { pt3dadd( -94.7441, -57.6861, -77.9899, 0.74 ) }
    dend_3 { pt3dadd( -95.389, -58.1594, -78.8023, 0.44 ) }
    dend_3 { pt3dadd( -95.6912, -58.4108, -79.1715, 1.33 ) }
    dend_3 { pt3dadd( -95.894, -58.6111, -79.4269, 1.33 ) }
    dend_3 { pt3dadd( -96.3149, -59.0518, -80.0083, 0.74 ) }
    dend_3 { pt3dadd( -97.0867, -59.8329, -81.0791, 0.44 ) }
    dend_3 { pt3dadd( -97.3137, -60.0581, -81.3321, 0.74 ) }
    dend_3 { pt3dadd( -97.6985, -60.3754, -81.7528, 0.74 ) }
    dend_3 { pt3dadd( -98.621, -60.8444, -82.8269, 0.37 ) }
    dend_3 { pt3dadd( -99.0274, -60.8945, -83.3094, 0.37 ) }
    dend_3 { pt3dadd( -99.4807, -60.7886, -83.8672, 0.66 ) }
    dend_3 { pt3dadd( -99.818, -60.6544, -84.2601, 0.88 ) }
    dend_3 { pt3dadd( -100.118, -60.5243, -84.5991, 0.88 ) }
    dend_3 { pt3dadd( -101.025, -60.1624, -85.5839, 0.59 ) }
    dend_3 { pt3dadd( -101.54, -59.9957, -86.0801, 0.29 ) }
    dend_3 { pt3dadd( -102.013, -59.9105, -86.5114, 0.29 ) }
    dend_3 { pt3dadd( -102.906, -59.914, -87.2583, 0.96 ) }
    dend_3 { pt3dadd( -103.13, -59.9556, -87.4211, 1.18 ) }
    dend_3 { pt3dadd( -104.255, -60.4012, -88.2146, 0.59 ) }
    dend_3 { pt3dadd( -104.73, -60.6798, -88.6363, 0.81 ) }
    dend_3 { pt3dadd( -105.104, -60.9273, -89.0164, 0.81 ) }
    dend_3 { pt3dadd( -105.601, -61.2561, -89.5474, 0.37 ) }
    dend_3 { pt3dadd( -106.175, -61.6352, -90.1803, 0.37 ) }
    dend_3 { pt3dadd( -107.032, -62.2044, -91.1733, 1.11 ) }
    dend_3 { pt3dadd( -108.697, -63.3354, -93.1198, 0.52 ) }
    dend_3 { pt3dadd( -108.993, -63.538, -93.4752, 0.52 ) }
    dend_3 { pt3dadd( -109.626, -63.9529, -94.2355, 0.44 ) }
    dend_3 { pt3dadd( -109.958, -64.1475, -94.6513, 1.47 ) }
    dend_3 { pt3dadd( -111.418, -64.8783, -96.5011, 0.59 ) }
    dend_3 { pt3dadd( -111.832, -65.0529, -97.0063, 0.88 ) }
    dend_3 { pt3dadd( -112.322, -65.2484, -97.6416, 0.88 ) }
    dend_3 { pt3dadd( -113.215, -65.5676, -98.9789, 0.52 ) }
    dend_3 { pt3dadd( -113.998, -65.8048, -100.254, 0.74 ) }
    dend_3 { pt3dadd( -114.323, -65.8738, -100.795, 0.96 ) }
    dend_3 { pt3dadd( -114.534, -65.9102, -101.136, 0.96 ) }
    dend_3 { pt3dadd( -115.573, -66.1321, -102.797, 0.29 ) }
    dend_3 { pt3dadd( -116.471, -66.3416, -104.33, 0.96 ) }
    dend_3 { pt3dadd( -116.769, -66.4176, -104.833, 1.18 ) }
    dend_3 { pt3dadd( -117.739, -66.7017, -106.473, 0.37 ) }
    dend_3 { pt3dadd( -118.162, -66.8524, -107.219, 0.37 ) }
    dend_3 { pt3dadd( -118.475, -66.9724, -107.778, 0.74 ) }
    dend_3 { pt3dadd( -120.065, -67.5212, -110.645, 0.88 ) }
    dend_3 { pt3dadd( -120.352, -67.5912, -111.162, 0.88 ) }
    dend_3 { pt3dadd( -121.185, -67.7393, -112.67, 0.37 ) }
    dend_3 { pt3dadd( -121.499, -67.7846, -113.213, 0.37 ) }
    dend_3 { pt3dadd( -121.906, -67.8339, -113.87, 0.37 ) }
    dend_3 { pt3dadd( -122.466, -67.9163, -114.656, 0.37 ) }
    dend_3 { pt3dadd( -123.344, -68.1556, -115.646, 0.74 ) }
    dend_3 { pt3dadd( -124.711, -68.6094, -117.155, 0.44 ) }
    dend_3 { pt3dadd( -125.066, -68.7333, -117.506, 1.03 ) }
    dend_3 { pt3dadd( -125.406, -68.8768, -117.846, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -125.662, -69.0309, -118.115, 1.03 ) }
    dend_3 { pt3dadd( -126.356, -69.622, -118.831, 0.44 ) }
    dend_3 { pt3dadd( -126.826, -70.1129, -119.3, 0.59 ) }
    dend_3 { pt3dadd( -127.352, -70.6521, -119.764, 0.37 ) }
    dend_3 { pt3dadd( -127.932, -71.204, -120.294, 0.29 ) }
    dend_3 { pt3dadd( -128.246, -71.4818, -120.62, 0.44 ) }
    dend_3 { pt3dadd( -128.479, -71.7005, -120.894, 0.44 ) }
    dend_3 { pt3dadd( -129.195, -72.4028, -121.791, 0.29 ) }
    dend_3 { pt3dadd( -129.489, -72.6945, -122.175, 0.52 ) }
    dend_3 { pt3dadd( -129.654, -72.8382, -122.404, 0.74 ) }
    dend_3 { pt3dadd( -130.455, -73.2899, -123.446, 0.29 ) }
    dend_3 { pt3dadd( -130.793, -73.4365, -123.879, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -25.0644, 3.03715, -5.85755, 0.88 ) }
    dend_2 { pt3dadd( -26.5678, 7.08353, -5.25716, 0.88 ) }
    dend_2 { pt3dadd( -27.3144, 8.90846, -4.82764, 0.52 ) }
    dend_2 { pt3dadd( -27.7992, 9.95642, -4.53418, 0.88 ) }
    dend_2 { pt3dadd( -28.7839, 11.858, -3.95696, 0.88 ) }
    dend_2 { pt3dadd( -30.5403, 14.8978, -2.99747, 0.52 ) }
    dend_2 { pt3dadd( -31.6549, 16.521, -2.4767, 0.52 ) }
    dend_2 { pt3dadd( -33.1245, 18.3432, -1.69497, 0.44 ) }
    dend_2 { pt3dadd( -34.3486, 19.5413, -1.16248, 0.59 ) }
    dend_2 { pt3dadd( -35.645, 20.6066, -0.621128, 0.74 ) }
    dend_2 { pt3dadd( -36.74, 21.3614, -0.182113, 0.74 ) }
    dend_2 { pt3dadd( -39.2762, 22.8484, 0.663822, 1.25 ) }
    dend_2 { pt3dadd( -40.1185, 23.282, 0.886964, 1.25 ) }
    dend_2 { pt3dadd( -41.856, 24.0378, 1.17997, 0.66 ) }
    dend_2 { pt3dadd( -44.0318, 24.8921, 1.38417, 0.81 ) }
    dend_2 { pt3dadd( -44.9289, 25.2097, 1.43767, 0.66 ) }
    dend_2 { pt3dadd( -46.9615, 25.8907, 1.49403, 0.88 ) }
    dend_2 { pt3dadd( -50.4153, 26.9765, 1.47758, 0.88 ) }
    dend_2 { pt3dadd( -51.8512, 27.3844, 1.42091, 0.66 ) }
    dend_2 { pt3dadd( -52.7681, 27.6142, 1.33883, 0.52 ) }
    dend_2 { pt3dadd( -54.703, 28.0086, 1.13109, 1.03 ) }
    dend_2 { pt3dadd( -55.4757, 28.1628, 1.17966, 1.33 ) }
    dend_2 { pt3dadd( -56.0203, 28.2927, 1.31172, 1.55 ) }
    dend_2 { pt3dadd( -56.5636, 28.4453, 1.48863, 1.55 ) }
    dend_2 { pt3dadd( -57.4295, 28.7304, 1.76816, 1.33 ) }
    dend_2 { pt3dadd( -58.8733, 29.2857, 2.19313, 0.74 ) }
    dend_2 { pt3dadd( -60.5909, 30.0455, 2.66726, 0.59 ) }
    dend_2 { pt3dadd( -62.3243, 31.007, 3.18344, 0.59 ) }
    dend_2 { pt3dadd( -63.4398, 31.791, 3.5402, 0.59 ) }
    dend_2 { pt3dadd( -64.0356, 32.3243, 3.75552, 1.11 ) }
    dend_2 { pt3dadd( -65.0548, 33.5462, 4.1372, 1.55 ) }
    dend_2 { pt3dadd( -65.4236, 34.1761, 4.28387, 1.77 ) }
    dend_2 { pt3dadd( -66.2027, 36.1827, 4.80957, 0.74 ) }
    dend_2 { pt3dadd( -66.5405, 37.456, 5.19613, 0.96 ) }
    dend_2 { pt3dadd( -66.7341, 38.4322, 5.52277, 0.74 ) }
    dend_2 { pt3dadd( -66.9765, 39.8038, 6.04297, 0.52 ) }
    dend_2 { pt3dadd( -67.1669, 40.8344, 6.48411, 0.44 ) }
    dend_2 { pt3dadd( -67.9106, 43.6672, 7.88846, 0.88 ) }
    dend_2 { pt3dadd( -68.1753, 44.4697, 8.29194, 1.11 ) }
    dend_2 { pt3dadd( -68.4525, 45.2079, 8.6391, 1.11 ) }
    dend_2 { pt3dadd( -68.9771, 46.5328, 9.19457, 0.74 ) }
    dend_2 { pt3dadd( -69.4938, 47.7334, 9.63357, 0.44 ) }
    dend_2 { pt3dadd( -70.1123, 49.0855, 9.94932, 0.29 ) }
    dend_2 { pt3dadd( -70.874, 50.746, 10.1033, 0.59 ) }
    dend_2 { pt3dadd( -71.3471, 51.8326, 10.1968, 0.44 ) }
    dend_2 { pt3dadd( -71.8161, 52.9669, 10.2844, 1.25 ) }
    dend_2 { pt3dadd( -72.0277, 53.521, 10.3256, 1.25 ) }
    dend_2 { pt3dadd( -72.2834, 54.246, 10.4154, 0.81 ) }
    dend_2 { pt3dadd( -72.6577, 55.2769, 10.6142, 0.29 ) }
    dend_2 { pt3dadd( -73.1522, 56.4092, 10.9177, 0.59 ) }
    dend_2 { pt3dadd( -73.4699, 57.0649, 11.0854, 0.74 ) }
    dend_2 { pt3dadd( -73.7795, 57.6301, 11.2173, 0.88 ) }
    dend_2 { pt3dadd( -74.2051, 58.3228, 11.363, 0.88 ) }
    dend_2 { pt3dadd( -74.7983, 59.192, 11.5185, 0.44 ) }
    dend_2 { pt3dadd( -75.393, 60.0138, 11.6374, 0.81 ) }
    dend_2 { pt3dadd( -75.9615, 60.7691, 11.7461, 0.81 ) }
    dend_2 { pt3dadd( -76.8439, 61.9128, 11.9103, 0.37 ) }
    dend_2 { pt3dadd( -77.375, 62.5905, 12.0227, 0.37 ) }
    dend_2 { pt3dadd( -78.4484, 63.9469, 12.3075, 0.29 ) }
    dend_2 { pt3dadd( -79.5799, 65.3508, 12.6828, 0.29 ) }
    dend_2 { pt3dadd( -80.0303, 65.9091, 12.8584, 0.29 ) }
    dend_2 { pt3dadd( -80.7333, 66.7935, 13.168, 0.88 ) }
    dend_2 { pt3dadd( -81.1923, 67.402, 13.399, 1.18 ) }
    dend_2 { pt3dadd( -81.8703, 68.3239, 13.7813, 1.18 ) }
    dend_2 { pt3dadd( -82.5176, 69.1577, 14.1873, 0.59 ) }
    dend_2 { pt3dadd( -83.1793, 69.965, 14.6444, 0.59 ) }
    dend_2 { pt3dadd( -83.8317, 70.7554, 15.1172, 0.52 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 79/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 39.6859, -127.47, 23.515, 0.29 ) }
    dend_65 { pt3dadd( 39.1819, -128.06, 23.7457, 0.29 ) }
    dend_65 { pt3dadd( 38.6498, -128.684, 23.9893, 0.15 ) }
    dend_65 { pt3dadd( 38.3998, -128.977, 24.1038, 0.15 ) }
    dend_65 { pt3dadd( 37.8613, -129.608, 24.3504, 0.44 ) }
    dend_65 { pt3dadd( 37.5414, -129.983, 24.4968, 0.44 ) }
    dend_65 { pt3dadd( 37.1215, -130.475, 24.6891, 0.74 ) }
    dend_65 { pt3dadd( 32.5847, -137.144, 25.9849, 0.74 ) }
    dend_65 { pt3dadd( 28.9151, -143.966, 28.5798, 0.74 ) }
    dend_65 { pt3dadd( 26.4694, -151.537, 30.4324, 0.74 ) }
    dend_65 { pt3dadd( 24.4558, -159.384, 31.484, 0.74 ) }
    dend_65 { pt3dadd( 23.0128, -167.393, 30.7733, 0.74 ) }
    dend_65 { pt3dadd( 22.7764, -175.249, 28.5431, 0.74 ) }
    dend_65 { pt3dadd( 23.0207, -182.775, 25.3749, 0.74 ) }
    dend_65 { pt3dadd( 22.9939, -190.586, 22.9849, 0.74 ) }
    dend_65 { pt3dadd( 21.6945, -198.481, 21.3375, 0.74 ) }
    dend_65 { pt3dadd( 20.6281, -206.079, 18.5305, 0.74 ) }
    dend_65 { pt3dadd( 19.8546, -213.665, 15.5999, 0.74 ) }
    dend_65 { pt3dadd( 19.1073, -221.672, 14.1645, 0.74 ) }
    dend_65 { pt3dadd( 17.3141, -229.57, 13.0935, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 39.6859, -127.47, 23.515, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( 40.7334, -126.885, 23.201, 0.22 ) }
    dend_64 { pt3dadd( 41.9077, -126.23, 22.8491, 0.59 ) }
    dend_64 { pt3dadd( 42.3929, -125.959, 22.7037, 0.59 ) }
    dend_64 { pt3dadd( 43.42, -125.386, 22.3959, 0.37 ) }
    dend_64 { pt3dadd( 44.1043, -125.005, 22.1908, 0.37 ) }
    dend_64 { pt3dadd( 56.0756, -120.188, 20.4774, 0.37 ) }
    dend_64 { pt3dadd( 66.4431, -112.952, 17.3791, 0.37 ) }
    dend_64 { pt3dadd( 77.7433, -106.678, 15.8335, 0.37 ) }
    dend_64 { pt3dadd( 89.2078, -100.535, 16.3494, 0.37 ) }
    dend_64 { pt3dadd( 99.7542, -93.0321, 17.7375, 0.37 ) }
    dend_64 { pt3dadd( 109.622, -85.3976, 21.451, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 11/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 5.78349, -45.0645, 25.6947, 0.52 ) }
    dend_60 { pt3dadd( 5.22278, -46.1949, 25.1697, 0.52 ) }
    dend_60 { pt3dadd( 4.71259, -47.2234, 24.692, 0.52 ) }
    dend_60 { pt3dadd( 4.19902, -48.2587, 24.2112, 0.44 ) }
    dend_60 { pt3dadd( 3.83827, -48.9859, 23.8734, 0.29 ) }
    dend_60 { pt3dadd( 3.51746, -49.6327, 23.573, 0.74 ) }
    dend_60 { pt3dadd( -1.65856, -59.4672, 19.6115, 0.74 ) }
    dend_60 { pt3dadd( -6.6392, -69.3544, 15.5325, 0.74 ) }
    dend_60 { pt3dadd( -11.5142, -78.5663, 10.0027, 0.74 ) }
    dend_60 { pt3dadd( -17.299, -87.1152, 4.28821, 0.74 ) }
    dend_60 { pt3dadd( -23.6888, -94.3358, -2.51157, 0.74 ) }
    dend_60 { pt3dadd( -31.2429, -100.402, -9.24453, 0.74 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 23/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 5.78349, -45.0645, 25.6947, 0.29 ) }
    dend_59 { pt3dadd( 6.70364, -44.9872, 25.3378, 0.29 ) }
    dend_59 { pt3dadd( 8.16185, -44.7871, 24.8415, 0.29 ) }
    dend_59 { pt3dadd( 8.79222, -44.6656, 24.6498, 0.44 ) }
    dend_59 { pt3dadd( 9.73939, -44.411, 24.3702, 0.44 ) }
    dend_59 { pt3dadd( 10.5135, -44.1247, 24.1425, 0.37 ) }
    dend_59 { pt3dadd( 11.0015, -43.8943, 23.9902, 0.22 ) }
    dend_59 { pt3dadd( 11.3112, -43.5556, 23.8877, 0.59 ) }
    dend_59 { pt3dadd( 11.3528, -43.1431, 23.8501, 0.74 ) }
    dend_59 { pt3dadd( 11.1366, -42.267, 23.8025, 0.22 ) }
    dend_59 { pt3dadd( 10.7635, -41.4849, 23.7744, 0.22 ) }
    dend_59 { pt3dadd( 10.1698, -40.5578, 23.7342, 0.22 ) }
    dend_59 { pt3dadd( 9.49052, -39.6999, 23.6637, 0.81 ) }
    dend_59 { pt3dadd( 15.5458, -32.6293, 21.4977, 0.81 ) }
    dend_59 { pt3dadd( 20.9069, -24.8595, 20.0003, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 38/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 7.59533, -160.059, 3.83525, 0.37 ) }
    dend_47 { pt3dadd( 14.7972, -164.64, -0.0640898, 0.37 ) }
    dend_47 { pt3dadd( 21.2963, -170.169, -3.97011, 0.37 ) }
    dend_47 { pt3dadd( 28.0179, -174.953, -8.44165, 0.37 ) }
    dend_47 { pt3dadd( 34.6309, -180.065, -12.7077, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 7.59533, -160.059, 3.83525, 0.22 ) }
    dend_42 { pt3dadd( 15.9734, -165.688, 1.02725, 0.37 ) }
    dend_42 { pt3dadd( 24.3791, -171.829, -0.155286, 0.37 ) }
    dend_42 { pt3dadd( 31.6036, -178.861, -3.00772, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -53.2971, -153.503, 11.632, 0.37 ) }
    dend_39 { pt3dadd( -50.4697, -162.95, 10.501, 0.37 ) }
    dend_39 { pt3dadd( -46.6075, -171.942, 8.84838, 0.37 ) }
    dend_39 { pt3dadd( -44.0996, -181.54, 8.52259, 0.37 ) }
    dend_39 { pt3dadd( -40.5957, -190.754, 7.36895, 0.37 ) }
    dend_39 { pt3dadd( -37.5226, -200.183, 7.77388, 0.37 ) }
    dend_39 { pt3dadd( -33.3474, -209.186, 7.92795, 0.37 ) }
    dend_39 { pt3dadd( -29.0804, -218.117, 8.66073, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -53.2971, -153.503, 11.632, 0.22 ) }
    dend_36 { pt3dadd( -50.2639, -162.588, 12.1419, 0.37 ) }
    dend_36 { pt3dadd( -45.7967, -170.944, 13.6234, 0.37 ) }
    dend_36 { pt3dadd( -42.1864, -179.82, 13.2028, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 161.699, 327.319, 20.5867, 0.37 ) }
    dend_24 { pt3dadd( 162.667, 328.175, 21.1948, 0.37 ) }
    dend_24 { pt3dadd( 163.045, 328.44, 21.3789, 0.37 ) }
    dend_24 { pt3dadd( 163.696, 328.785, 21.6224, 0.29 ) }
    dend_24 { pt3dadd( 164.165, 328.979, 21.779, 0.29 ) }
    dend_24 { pt3dadd( 164.771, 329.2, 21.9895, 0.74 ) }
    dend_24 { pt3dadd( 165.335, 329.422, 22.2006, 0.96 ) }
    dend_24 { pt3dadd( 165.779, 329.593, 22.3428, 0.52 ) }
    dend_24 { pt3dadd( 166.501, 329.899, 22.5815, 0.44 ) }
    dend_24 { pt3dadd( 167.196, 330.231, 22.8457, 0.37 ) }
    dend_24 { pt3dadd( 167.585, 330.498, 23.0339, 0.29 ) }
    dend_24 { pt3dadd( 168.017, 330.923, 23.2974, 0.29 ) }
    dend_24 { pt3dadd( 168.28, 331.253, 23.4741, 0.29 ) }
    dend_24 { pt3dadd( 168.713, 331.785, 23.7448, 0.74 ) }
    dend_24 { pt3dadd( 169.196, 332.329, 24.0099, 1.11 ) }
    dend_24 { pt3dadd( 169.663, 332.798, 24.2242, 1.11 ) }
    dend_24 { pt3dadd( 170.113, 333.185, 24.3968, 0.81 ) }
    dend_24 { pt3dadd( 171.035, 333.875, 24.7119, 0.37 ) }
    dend_24 { pt3dadd( 171.819, 334.42, 24.9635, 0.37 ) }
    dend_24 { pt3dadd( 172.332, 334.771, 25.1435, 0.37 ) }
    dend_24 { pt3dadd( 172.776, 335.09, 25.2969, 0.37 ) }
    dend_24 { pt3dadd( 173.053, 335.305, 25.3994, 1.03 ) }
    dend_24 { pt3dadd( 173.498, 335.693, 25.595, 1.33 ) }
    dend_24 { pt3dadd( 173.705, 335.899, 25.714, 1.33 ) }
    dend_24 { pt3dadd( 174.478, 336.815, 26.3552, 0.29 ) }
    dend_24 { pt3dadd( 174.94, 337.433, 26.8412, 0.29 ) }
    dend_24 { pt3dadd( 175.401, 338.101, 27.3995, 0.88 ) }
    dend_24 { pt3dadd( 175.665, 338.518, 27.7517, 0.88 ) }
    dend_24 { pt3dadd( 176.046, 339.151, 28.2799, 0.74 ) }
    dend_24 { pt3dadd( 176.645, 340.121, 29.0453, 0.66 ) }
    dend_24 { pt3dadd( 176.943, 340.613, 29.3658, 0.74 ) }
    dend_24 { pt3dadd( 177.35, 341.338, 29.7341, 0.44 ) }
    dend_24 { pt3dadd( 177.63, 341.911, 29.9103, 0.44 ) }
    dend_24 { pt3dadd( 177.955, 342.657, 29.9966, 0.37 ) }
    dend_24 { pt3dadd( 178.455, 343.929, 29.9575, 0.37 ) }
    dend_24 { pt3dadd( 178.883, 345.011, 29.8205, 0.37 ) }
    dend_24 { pt3dadd( 179.232, 345.921, 29.6586, 0.37 ) }
    dend_24 { pt3dadd( 179.602, 347.018, 29.4016, 1.77 ) }
    dend_24 { pt3dadd( 179.77, 347.65, 29.2229, 1.77 ) }
    dend_24 { pt3dadd( 179.844, 348.192, 29.0434, 1.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 161.699, 327.319, 20.5867, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( 162.92, 328.796, 18.5193, 1.11 ) }
    dend_17 { pt3dadd( 164.241, 330.13, 16.4149, 0.74 ) }
    dend_17 { pt3dadd( 164.903, 330.628, 15.3725, 0.29 ) }
    dend_17 { pt3dadd( 165.606, 331.14, 14.1791, 0.44 ) }
    dend_17 { pt3dadd( 166.312, 331.744, 12.8766, 0.37 ) }
    dend_17 { pt3dadd( 167.186, 332.591, 11.2457, 0.74 ) }
    dend_17 { pt3dadd( 167.537, 333.012, 10.6105, 0.88 ) }
    dend_17 { pt3dadd( 168.446, 334.022, 9.09292, 0.29 ) }
    dend_17 { pt3dadd( 169.237, 334.804, 7.8712, 0.44 ) }
    dend_17 { pt3dadd( 170.13, 335.585, 6.70526, 0.29 ) }
    dend_17 { pt3dadd( 170.689, 336.079, 6.01787, 0.96 ) }
    dend_17 { pt3dadd( 171.171, 336.548, 5.511, 1.25 ) }
    dend_17 { pt3dadd( 171.502, 336.863, 5.20851, 1.25 ) }
    dend_17 { pt3dadd( 172.922, 338.114, 4.16549, 0.37 ) }
    dend_17 { pt3dadd( 173.728, 338.713, 3.67196, 0.74 ) }
    dend_17 { pt3dadd( 175.465, 339.826, 2.70903, 0.88 ) }
    dend_17 { pt3dadd( 176.067, 340.188, 2.38962, 1.11 ) }
    dend_17 { pt3dadd( 176.943, 340.713, 1.96651, 0.52 ) }
    dend_17 { pt3dadd( 177.552, 341.085, 1.71767, 0.52 ) }
    dend_17 { pt3dadd( 178.237, 341.509, 1.50722, 0.29 ) }
    dend_17 { pt3dadd( 178.83, 341.854, 1.34533, 0.29 ) }
    dend_17 { pt3dadd( 179.805, 342.335, 1.14673, 1.25 ) }
    dend_17 { pt3dadd( 180.042, 342.445, 1.08986, 1.55 ) }
    dend_17 { pt3dadd( 180.468, 342.636, 0.97966, 1.55 ) }
    dend_17 { pt3dadd( 181.553, 343.093, 0.680706, 0.37 ) }
    dend_17 { pt3dadd( 182.796, 343.554, 0.350721, 0.44 ) }
    dend_17 { pt3dadd( 183.817, 343.878, 0.109314, 0.81 ) }
    dend_17 { pt3dadd( 184.047, 343.931, 0.0650301, 1.11 ) }
    dend_17 { pt3dadd( 184.793, 344.079, -0.0702567, 1.11 ) }
    dend_17 { pt3dadd( 186.105, 344.277, -0.268869, 0.29 ) }
    dend_17 { pt3dadd( 187.263, 344.368, -0.367239, 0.37 ) }
    dend_17 { pt3dadd( 188.023, 344.344, -0.410885, 0.37 ) }
    dend_17 { pt3dadd( 188.838, 344.25, -0.474935, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -57.186, 79.539, -105.222, 0.44 ) }
    dend_7 { pt3dadd( -55.7752, 80.407, -106.134, 0.44 ) }
    dend_7 { pt3dadd( -54.581, 81.1866, -107.173, 0.29 ) }
    dend_7 { pt3dadd( -53.9341, 81.666, -107.875, 0.44 ) }
    dend_7 { pt3dadd( -53.2255, 82.2883, -108.764, 0.44 ) }
    dend_7 { pt3dadd( -52.7668, 82.7665, -109.403, 0.81 ) }
    dend_7 { pt3dadd( -52.1811, 83.4608, -110.307, 0.81 ) }
    dend_7 { pt3dadd( -51.6341, 84.2774, -111.499, 0.52 ) }
    dend_7 { pt3dadd( -51.4454, 84.8022, -112.296, 0.37 ) }
    dend_7 { pt3dadd( -51.3511, 85.3708, -113.143, 0.37 ) }
    dend_7 { pt3dadd( -51.3179, 85.9394, -113.999, 0.81 ) }
    dend_7 { pt3dadd( -51.2847, 86.464, -114.783, 0.88 ) }
    dend_7 { pt3dadd( -51.1478, 87.2824, -115.991, 0.88 ) }
    dend_7 { pt3dadd( -50.8011, 88.06, -117.375, 0.52 ) }
    dend_7 { pt3dadd( -50.5497, 88.3196, -118.045, 0.81 ) }
    dend_7 { pt3dadd( -49.742, 88.7057, -119.631, 0.52 ) }
    dend_7 { pt3dadd( -49.1652, 88.848, -120.519, 0.52 ) }
    dend_7 { pt3dadd( -48.321, 88.9724, -121.544, 0.52 ) }
    dend_7 { pt3dadd( -46.4982, 89.1462, -123.408, 0.52 ) }
    dend_7 { pt3dadd( -45.5931, 89.193, -124.354, 0.52 ) }
    dend_7 { pt3dadd( -44.7654, 89.1998, -125.268, 0.81 ) }
    dend_7 { pt3dadd( -44.1449, 89.2058, -125.964, 1.03 ) }
    dend_7 { pt3dadd( -43.532, 89.2199, -126.68, 0.59 ) }
    dend_7 { pt3dadd( -42.2863, 89.3195, -128.17, 0.66 ) }
    dend_7 { pt3dadd( -40.1857, 89.7308, -130.641, 0.52 ) }
    dend_7 { pt3dadd( -39.3892, 89.9595, -131.592, 0.52 ) }
    dend_7 { pt3dadd( -38.4799, 90.3067, -132.776, 1.11 ) }
    dend_7 { pt3dadd( -38.0522, 90.5479, -133.383, 1.11 ) }
    dend_7 { pt3dadd( -37.7015, 90.7816, -133.892, 1.25 ) }
    dend_7 { pt3dadd( -37.0205, 91.4343, -134.834, 0.66 ) }
    dend_7 { pt3dadd( -36.4635, 92.3617, -135.565, 0.44 ) }
    dend_7 { pt3dadd( -36.1758, 93.1935, -136.104, 0.44 ) }
    dend_7 { pt3dadd( -35.9815, 94.629, -136.958, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -57.186, 79.539, -105.222, 0.44 ) }
    dend_6 { pt3dadd( -58.2635, 80.3186, -107.275, 0.44 ) }
    dend_6 { pt3dadd( -58.7637, 80.6352, -108.21, 0.37 ) }
    dend_6 { pt3dadd( -59.3192, 80.9748, -109.237, 0.37 ) }
    dend_6 { pt3dadd( -59.7964, 81.263, -110.016, 0.88 ) }
    dend_6 { pt3dadd( -60.3516, 81.6016, -110.829, 0.88 ) }
    dend_6 { pt3dadd( -61.3475, 82.1749, -112.111, 0.59 ) }
    dend_6 { pt3dadd( -62.3098, 82.7449, -113.233, 0.22 ) }
    dend_6 { pt3dadd( -62.8833, 83.0332, -113.923, 0.66 ) }
    dend_6 { pt3dadd( -63.7128, 83.3941, -114.923, 0.37 ) }
    dend_6 { pt3dadd( -64.1823, 83.5913, -115.483, 0.29 ) }
    dend_6 { pt3dadd( -65.0225, 83.9697, -116.63, 0.29 ) }
    dend_6 { pt3dadd( -65.8306, 84.4052, -118.026, 0.66 ) }
    dend_6 { pt3dadd( -66.6352, 84.916, -119.916, 1.03 ) }
    dend_6 { pt3dadd( -66.8369, 85.0639, -120.483, 1.33 ) }
    dend_6 { pt3dadd( -66.9646, 85.1693, -120.897, 1.33 ) }
    dend_6 { pt3dadd( -67.5042, 85.6639, -122.776, 0.44 ) }
    dend_6 { pt3dadd( -68.0372, 86.1719, -124.73, 0.29 ) }
    dend_6 { pt3dadd( -68.354, 86.4951, -125.911, 0.59 ) }
    dend_6 { pt3dadd( -68.6098, 86.7645, -126.907, 0.59 ) }
    dend_6 { pt3dadd( -68.7376, 86.9114, -127.455, 0.88 ) }
    dend_6 { pt3dadd( -68.9608, 87.1744, -128.414, 0.88 ) }
    dend_6 { pt3dadd( -69.596, 87.815, -130.73, 0.29 ) }
    dend_6 { pt3dadd( -69.7903, 88.05, -131.535, 0.29 ) }
    dend_6 { pt3dadd( -69.9281, 88.2583, -132.21, 0.29 ) }
    dend_6 { pt3dadd( -70.1147, 88.5823, -133.274, 0.96 ) }
    dend_6 { pt3dadd( -70.2578, 88.8356, -134.042, 0.96 ) }
    dend_6 { pt3dadd( -70.7748, 89.7055, -136.222, 0.29 ) }
    dend_6 { pt3dadd( -71.1401, 90.2358, -137.277, 0.29 ) }
    dend_6 { pt3dadd( -71.3292, 90.4528, -137.677, 0.29 ) }
    dend_6 { pt3dadd( -71.7376, 90.9026, -138.399, 0.29 ) }
    dend_6 { pt3dadd( -72.1029, 91.3039, -138.985, 0.29 ) }
    dend_6 { pt3dadd( -72.5025, 91.7831, -139.612, 0.81 ) }
    dend_6 { pt3dadd( -72.8317, 92.2077, -140.146, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -73.6426, 93.2269, -141.565, 0.29 ) }
    dend_6 { pt3dadd( -74.0573, 93.758, -142.328, 0.59 ) }
    dend_6 { pt3dadd( -74.3626, 94.1705, -142.909, 0.59 ) }
    dend_6 { pt3dadd( -74.6776, 94.6137, -143.516, 0.29 ) }
    dend_6 { pt3dadd( -75.1605, 95.3328, -144.488, 0.29 ) }
    dend_6 { pt3dadd( -75.4744, 95.8758, -145.209, 0.29 ) }
    dend_6 { pt3dadd( -75.8007, 96.5074, -146.004, 0.29 ) }
    dend_6 { pt3dadd( -76.0676, 97.0077, -146.671, 0.29 ) }
    dend_6 { pt3dadd( -76.3965, 97.6585, -147.502, 0.29 ) }
    dend_6 { pt3dadd( -76.5531, 97.9831, -147.877, 0.29 ) }
    dend_6 { pt3dadd( -76.9806, 98.8678, -148.804, 0.88 ) }
    dend_6 { pt3dadd( -77.1518, 99.2696, -149.2, 1.11 ) }
    dend_6 { pt3dadd( -77.6453, 100.759, -150.623, 0.29 ) }
    dend_6 { pt3dadd( -77.8117, 101.318, -151.2, 0.59 ) }
    dend_6 { pt3dadd( -78.028, 102.037, -152.012, 0.29 ) }
    dend_6 { pt3dadd( -78.1564, 102.396, -152.426, 0.29 ) }
    dend_6 { pt3dadd( -78.358, 102.963, -153.041, 0.29 ) }
    dend_6 { pt3dadd( -78.5049, 103.442, -153.525, 0.29 ) }
    dend_6 { pt3dadd( -78.8631, 104.5, -154.606, 0.66 ) }
    dend_6 { pt3dadd( -79.1087, 104.985, -155.171, 0.66 ) }
    dend_6 { pt3dadd( -79.6463, 105.877, -156.428, 0.37 ) }
    dend_6 { pt3dadd( -79.9827, 106.379, -157.211, 0.37 ) }
    dend_6 { pt3dadd( -80.5391, 107.018, -158.293, 0.37 ) }
    dend_6 { pt3dadd( -81.2278, 107.692, -159.458, 0.37 ) }
    dend_6 { pt3dadd( -81.9467, 108.382, -160.539, 0.37 ) }
    dend_6 { pt3dadd( -83.0271, 109.384, -162.07, 0.29 ) }
    dend_6 { pt3dadd( -83.3458, 109.652, -162.518, 0.29 ) }
    dend_6 { pt3dadd( -84.1634, 110.263, -163.649, 0.29 ) }
    dend_6 { pt3dadd( -84.5425, 110.537, -164.176, 0.29 ) }
    dend_6 { pt3dadd( -85.3301, 111.259, -165.306, 1.4 ) }
    dend_6 { pt3dadd( -85.4987, 111.457, -165.54, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 34.6309, -180.065, -12.7077, 0.37 ) }
    dend_49 { pt3dadd( 41.5277, -184.726, -15.3924, 0.37 ) }
    dend_49 { pt3dadd( 47.7697, -189.894, -18.6843, 0.37 ) }
    dend_49 { pt3dadd( 54.4413, -194.535, -21.9161, 0.37 ) }
    dend_49 { pt3dadd( 60.4265, -199.408, -26.0318, 0.37 ) }
    dend_49 { pt3dadd( 66.3395, -204.865, -29.4605, 0.37 ) }
    dend_49 { pt3dadd( 72.7179, -209.011, -33.7767, 0.37 ) }
    dend_49 { pt3dadd( 78.1024, -213.148, -39.2901, 0.37 ) }
    dend_49 { pt3dadd( 83.6135, -218.385, -43.6146, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 34.6309, -180.065, -12.7077, 0.22 ) }
    dend_48 { pt3dadd( 41.2944, -184.583, -15.5647, 0.37 ) }
    dend_48 { pt3dadd( 48.7606, -188.132, -17.7195, 0.37 ) }
    dend_48 { pt3dadd( 55.6934, -191.65, -21.261, 0.37 ) }
    dend_48 { pt3dadd( 62.6459, -193.95, -25.66, 0.37 ) }
    dend_48 { pt3dadd( 69.0994, -197.047, -30.3229, 0.37 ) }
    dend_48 { pt3dadd( 75.8646, -200.826, -33.9191, 0.37 ) }
    dend_48 { pt3dadd( 82.4045, -205.924, -35.9733, 0.37 ) }
    dend_48 { pt3dadd( 88.824, -210.735, -38.9096, 0.37 ) }
    dend_48 { pt3dadd( 96.5456, -213.869, -40.7902, 0.37 ) }
    dend_48 { pt3dadd( 103.97, -217.921, -41.9914, 0.37 ) }
    dend_48 { pt3dadd( 112.149, -220.369, -41.6867, 0.37 ) }
    dend_48 { pt3dadd( 120.469, -222.165, -40.9594, 0.37 ) }
    dend_48 { pt3dadd( 128.673, -222.837, -38.6706, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 31.6036, -178.861, -3.00772, 0.37 ) }
    dend_46 { pt3dadd( 39.8631, -184.976, -2.14282, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 31.6036, -178.861, -3.00772, 0.22 ) }
    dend_43 { pt3dadd( 40.1573, -185.469, -5.31867, 0.37 ) }
    dend_43 { pt3dadd( 48.7193, -192.388, -6.32342, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -42.1864, -179.82, 13.2028, 0.37 ) }
    dend_38 { pt3dadd( -37.8471, -189.973, 15.6111, 0.37 ) }
    dend_38 { pt3dadd( -31.4746, -198.283, 19.8597, 0.37 ) }
    dend_38 { pt3dadd( -25.5968, -206.431, 25.0335, 0.37 ) }
    dend_38 { pt3dadd( -19.4216, -214.15, 30.5103, 0.37 ) }
    dend_38 { pt3dadd( -13.4288, -220.238, 37.9085, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -42.1864, -179.82, 13.2028, 0.22 ) }
    dend_37 { pt3dadd( -38.2587, -189.376, 15.4003, 0.37 ) }
    dend_37 { pt3dadd( -34.4987, -199.232, 15.9392, 0.37 ) }
    dend_37 { pt3dadd( -32.2895, -209.475, 17.2655, 0.37 ) }
    dend_37 { pt3dadd( -30.794, -219.882, 18.279, 0.37 ) }
    dend_37 { pt3dadd( -28.34, -229.755, 21.1212, 0.37 ) }
    dend_37 { pt3dadd( -25.845, -238.935, 25.7108, 0.37 ) }
    dend_37 { pt3dadd( -24.4331, -247.476, 31.7628, 0.37 ) }
    dend_37 { pt3dadd( -24.7406, -255.974, 38.0291, 0.37 ) }
    dend_37 { pt3dadd( -26.875, -263.641, 44.9738, 0.37 ) }
    dend_37 { pt3dadd( -30.0816, -272.112, 50.4076, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 179.844, 348.192, 29.0434, 0.29 ) }
    dend_28 { pt3dadd( 181.882, 350.62, 27.3324, 0.29 ) }
    dend_28 { pt3dadd( 182.576, 351.482, 26.8086, 0.29 ) }
    dend_28 { pt3dadd( 183.133, 352.263, 26.4466, 0.29 ) }
    dend_28 { pt3dadd( 183.487, 352.832, 26.2479, 0.29 ) }
    dend_28 { pt3dadd( 184.08, 353.911, 25.9467, 0.74 ) }
    dend_28 { pt3dadd( 184.254, 354.256, 25.8719, 0.74 ) }
    dend_28 { pt3dadd( 184.879, 355.747, 25.7931, 0.22 ) }
    dend_28 { pt3dadd( 185.434, 357.113, 25.7173, 0.22 ) }
    dend_28 { pt3dadd( 185.836, 358.29, 25.6603, 0.22 ) }
    dend_28 { pt3dadd( 186.044, 358.979, 25.6452, 0.52 ) }
    dend_28 { pt3dadd( 186.361, 360.098, 25.6948, 0.22 ) }
    dend_28 { pt3dadd( 186.478, 360.545, 25.7265, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 179.844, 348.192, 29.0434, 0.44 ) }
    dend_25 { pt3dadd( 179.672, 349.213, 29.7249, 0.44 ) }
    dend_25 { pt3dadd( 179.611, 349.981, 30.2327, 0.44 ) }
    dend_25 { pt3dadd( 179.567, 350.809, 30.7611, 0.44 ) }
    dend_25 { pt3dadd( 179.547, 351.368, 31.1055, 0.44 ) }
    dend_25 { pt3dadd( 179.524, 352.046, 31.4976, 0.37 ) }
    dend_25 { pt3dadd( 179.51, 352.447, 31.7157, 0.37 ) }
    dend_25 { pt3dadd( 179.527, 353.151, 32.1573, 0.88 ) }
    dend_25 { pt3dadd( 179.552, 353.416, 32.3095, 1.47 ) }
    dend_25 { pt3dadd( 179.581, 353.708, 32.4442, 1.47 ) }
    dend_25 { pt3dadd( 179.627, 354.493, 32.7362, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 179.61, 354.947, 32.8718, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 188.838, 344.25, -0.474935, 0.29 ) }
    dend_23 { pt3dadd( 189.206, 344.509, -0.48868, 0.29 ) }
    dend_23 { pt3dadd( 189.772, 344.867, -0.549485, 0.81 ) }
    dend_23 { pt3dadd( 190.178, 345.095, -0.610126, 0.81 ) }
    dend_23 { pt3dadd( 190.741, 345.359, -0.730532, 0.22 ) }
    dend_23 { pt3dadd( 191.062, 345.49, -0.818847, 0.59 ) }
    dend_23 { pt3dadd( 192.125, 345.866, -1.1459, 0.22 ) }
    dend_23 { pt3dadd( 192.853, 346.081, -1.41797, 0.81 ) }
    dend_23 { pt3dadd( 193.225, 346.184, -1.58195, 0.81 ) }
    dend_23 { pt3dadd( 193.957, 346.403, -1.95013, 0.29 ) }
    dend_23 { pt3dadd( 194.734, 346.68, -2.36845, 0.29 ) }
    dend_23 { pt3dadd( 195.599, 347.06, -2.85038, 0.22 ) }
    dend_23 { pt3dadd( 196.113, 347.332, -3.13128, 0.22 ) }
    dend_23 { pt3dadd( 196.762, 347.771, -3.50809, 0.81 ) }
    dend_23 { pt3dadd( 197.533, 348.411, -3.94437, 0.22 ) }
    dend_23 { pt3dadd( 198.057, 348.947, -4.22331, 0.22 ) }
    dend_23 { pt3dadd( 198.511, 349.484, -4.46503, 0.44 ) }
    dend_23 { pt3dadd( 198.805, 349.896, -4.62267, 0.15 ) }
    dend_23 { pt3dadd( 199.055, 350.277, -4.74057, 0.22 ) }
    dend_23 { pt3dadd( 199.414, 350.875, -4.87753, 0.15 ) }
    dend_23 { pt3dadd( 199.662, 351.284, -4.93983, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 188.838, 344.25, -0.474935, 0.22 ) }
    dend_18 { pt3dadd( 190.567, 344.72, -0.767386, 0.22 ) }
    dend_18 { pt3dadd( 191.208, 344.894, -0.875736, 0.81 ) }
    dend_18 { pt3dadd( 191.899, 345.082, -0.992696, 0.52 ) }
    dend_18 { pt3dadd( 193.332, 345.471, -1.23497, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -35.9815, 94.629, -136.958, 0.37 ) }
    dend_9 { pt3dadd( -35.3164, 95.8177, -137.95, 0.37 ) }
    dend_9 { pt3dadd( -34.8537, 96.7639, -138.861, 0.37 ) }
    dend_9 { pt3dadd( -34.502, 97.4831, -139.553, 0.37 ) }
    dend_9 { pt3dadd( -34.1281, 98.2479, -140.289, 0.81 ) }
    dend_9 { pt3dadd( -33.9542, 98.6034, -140.632, 0.81 ) }
    dend_9 { pt3dadd( -33.5049, 99.5223, -141.516, 0.52 ) }
    dend_9 { pt3dadd( -33.315, 100.25, -142.273, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -35.9815, 94.629, -136.958, 0.29 ) }
    dend_8 { pt3dadd( -35.4284, 95.633, -137.991, 0.29 ) }
    dend_8 { pt3dadd( -35.0329, 96.3512, -138.73, 0.88 ) }
    dend_8 { pt3dadd( -34.6072, 97.1239, -139.526, 0.29 ) }
    dend_8 { pt3dadd( -34.2975, 97.6861, -140.104, 0.88 ) }
    dend_8 { pt3dadd( -33.9412, 98.3332, -140.77, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 48.7193, -192.388, -6.32342, 0.37 ) }
    dend_45 { pt3dadd( 56.3918, -198.103, -6.49829, 0.37 ) }
    dend_45 { pt3dadd( 64.0633, -203.765, -7.30879, 0.37 ) }
    dend_45 { pt3dadd( 70.5233, -210.801, -7.88095, 0.37 ) }
    dend_45 { pt3dadd( 76.6243, -218.152, -8.43808, 0.37 ) }
    dend_45 { pt3dadd( 82.1872, -225.935, -8.21972, 0.37 ) }
    dend_45 { pt3dadd( 87.5595, -233.626, -6.33606, 0.37 ) }
    dend_45 { pt3dadd( 93.1229, -241.103, -4.16393, 0.37 ) }
    dend_45 { pt3dadd( 98.1087, -248.515, -0.734527, 0.37 ) }
    dend_45 { pt3dadd( 103.546, -255.691, 2.50806, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 48.7193, -192.388, -6.32342, 0.22 ) }
    dend_44 { pt3dadd( 58.7204, -200.154, -6.33778, 0.37 ) }
    dend_44 { pt3dadd( 67.1732, -209.569, -6.81465, 0.37 ) }
    dend_44 { pt3dadd( 76.0534, -218.582, -7.2956, 0.37 ) }
    dend_44 { pt3dadd( 85.0267, -227.508, -6.93003, 0.37 ) }
    dend_44 { pt3dadd( 94.7482, -235.609, -7.37447, 0.37 ) }
    dend_44 { pt3dadd( 105.531, -242.183, -6.45236, 0.37 ) }
    dend_44 { pt3dadd( 115.781, -248.861, -3.18631, 0.37 ) }
    dend_44 { pt3dadd( 126.585, -253.284, 1.71775, 0.37 ) }
    dend_44 { pt3dadd( 137.284, -255.48, 8.12284, 0.37 ) }
    dend_44 { pt3dadd( 147.114, -259.168, 15.2016, 0.37 ) }
    dend_44 { pt3dadd( 156.966, -264.292, 21.2841, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 179.61, 354.947, 32.8718, 0.29 ) }
    dend_27 { pt3dadd( 179.279, 356.091, 33.3843, 0.29 ) }
    dend_27 { pt3dadd( 179.026, 356.845, 33.732, 0.29 ) }
    dend_27 { pt3dadd( 178.861, 357.32, 33.9532, 0.66 ) }
    dend_27 { pt3dadd( 178.806, 357.487, 34.0309, 0.66 ) }
    dend_27 { pt3dadd( 178.644, 358.098, 34.306, 0.22 ) }
    dend_27 { pt3dadd( 178.502, 358.791, 34.6071, 0.22 ) }
    dend_27 { pt3dadd( 178.433, 359.323, 34.8287, 0.22 ) }
    dend_27 { pt3dadd( 178.42, 359.621, 34.9451, 0.59 ) }
    dend_27 { pt3dadd( 178.448, 359.99, 35.0763, 0.59 ) }
    dend_27 { pt3dadd( 178.563, 360.792, 35.344, 0.29 ) }
    dend_27 { pt3dadd( 178.68, 361.325, 35.5328, 0.88 ) }
    dend_27 { pt3dadd( 178.796, 361.787, 35.7035, 0.88 ) }
    dend_27 { pt3dadd( 179.165, 363.206, 36.2343, 0.29 ) }
    dend_27 { pt3dadd( 179.357, 363.937, 36.5124, 0.29 ) }
    dend_27 { pt3dadd( 179.464, 364.357, 36.6771, 0.59 ) }
    dend_27 { pt3dadd( 179.791, 365.659, 37.2175, 0.29 ) }
    dend_27 { pt3dadd( 179.958, 366.3, 37.4982, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 179.61, 354.947, 32.8718, 0.29 ) }
    dend_26 { pt3dadd( 179.831, 355.998, 33.1456, 0.29 ) }
    dend_26 { pt3dadd( 180.14, 356.963, 33.4827, 0.29 ) }
    dend_26 { pt3dadd( 180.394, 357.635, 33.7394, 0.29 ) }
    dend_26 { pt3dadd( 180.845, 358.721, 34.1561, 0.29 ) }
    dend_26 { pt3dadd( 181.095, 359.295, 34.3756, 0.29 ) }
    dend_26 { pt3dadd( 181.506, 360.206, 34.7222, 0.29 ) }
    dend_26 { pt3dadd( 181.97, 361.196, 35.1064, 1.03 ) }
    dend_26 { pt3dadd( 182.353, 361.929, 35.4235, 1.69 ) }
    dend_26 { pt3dadd( 182.909, 362.89, 35.8677, 0.22 ) }
    dend_26 { pt3dadd( 183.186, 363.339, 36.0814, 0.52 ) }
    dend_26 { pt3dadd( 183.331, 363.577, 36.1942, 0.59 ) }
    dend_26 { pt3dadd( 183.724, 364.273, 36.5627, 0.22 ) }
    dend_26 { pt3dadd( 184.091, 364.935, 36.9776, 0.52 ) }
    dend_26 { pt3dadd( 184.302, 365.306, 37.2867, 0.66 ) }
    dend_26 { pt3dadd( 184.569, 365.748, 37.7848, 0.22 ) }
    dend_26 { pt3dadd( 184.746, 365.994, 38.1177, 0.22 ) }
    dend_26 { pt3dadd( 185.337, 366.689, 39.1686, 0.66 ) }
    dend_26 { pt3dadd( 185.686, 367.019, 39.7568, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 186.101, 367.326, 40.3885, 1.03 ) }
    dend_26 { pt3dadd( 186.719, 367.758, 41.2606, 0.29 ) }
    dend_26 { pt3dadd( 187.122, 368.055, 41.8038, 0.37 ) }
    dend_26 { pt3dadd( 187.457, 368.337, 42.2345, 0.37 ) }
    dend_26 { pt3dadd( 187.975, 368.805, 42.812, 0.29 ) }
    dend_26 { pt3dadd( 188.402, 369.182, 43.2338, 0.29 ) }
    dend_26 { pt3dadd( 188.806, 369.55, 43.6088, 0.29 ) }
    dend_26 { pt3dadd( 189.154, 369.939, 43.9251, 0.66 ) }
    dend_26 { pt3dadd( 189.432, 370.339, 44.2124, 0.66 ) }
    dend_26 { pt3dadd( 189.791, 371.029, 44.6615, 0.29 ) }
    dend_26 { pt3dadd( 189.991, 371.606, 44.9737, 0.29 ) }
    dend_26 { pt3dadd( 190.089, 371.998, 45.1653, 0.29 ) }
    dend_26 { pt3dadd( 190.236, 372.717, 45.4825, 0.66 ) }
    dend_26 { pt3dadd( 190.317, 373.205, 45.688, 0.74 ) }
    dend_26 { pt3dadd( 190.507, 374.474, 46.1188, 0.29 ) }
    dend_26 { pt3dadd( 190.654, 375.522, 46.4087, 0.29 ) }
    dend_26 { pt3dadd( 190.784, 376.367, 46.5873, 0.88 ) }
    dend_26 { pt3dadd( 190.857, 376.756, 46.6459, 1.03 ) }
    dend_26 { pt3dadd( 191.035, 377.473, 46.7094, 0.74 ) }
    dend_26 { pt3dadd( 191.393, 378.661, 46.7373, 0.29 ) }
    dend_26 { pt3dadd( 191.601, 379.267, 46.6709, 0.59 ) }
    dend_26 { pt3dadd( 191.872, 380.036, 46.5223, 0.29 ) }
    dend_26 { pt3dadd( 192.088, 380.711, 46.3467, 0.59 ) }
    dend_26 { pt3dadd( 192.213, 381.163, 46.2, 0.29 ) }
    dend_26 { pt3dadd( 192.344, 381.777, 45.9854, 0.81 ) }
    dend_26 { pt3dadd( 192.548, 383.08, 45.585, 0.29 ) }
    dend_26 { pt3dadd( 192.643, 383.898, 45.3488, 0.29 ) }
    dend_26 { pt3dadd( 192.708, 384.552, 45.1706, 0.29 ) }
    dend_26 { pt3dadd( 192.787, 385.389, 44.9397, 0.22 ) }
    dend_26 { pt3dadd( 192.913, 386.847, 44.5722, 0.22 ) }
    dend_26 { pt3dadd( 193.041, 388.734, 44.1755, 0.22 ) }
    dend_26 { pt3dadd( 193.136, 390.293, 43.8982, 0.22 ) }
    dend_26 { pt3dadd( 193.22, 391.718, 43.6729, 0.74 ) }
    dend_26 { pt3dadd( 193.262, 392.413, 43.5781, 0.96 ) }
    dend_26 { pt3dadd( 193.345, 393.795, 43.4245, 0.22 ) }
    dend_26 { pt3dadd( 193.419, 395.192, 43.2682, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 193.332, 345.471, -1.23497, 0.22 ) }
    dend_22 { pt3dadd( 193.485, 347.089, -1.12481, 0.22 ) }
    dend_22 { pt3dadd( 193.543, 347.691, -1.08379, 0.37 ) }
    dend_22 { pt3dadd( 193.655, 348.877, -1.00301, 0.22 ) }
    dend_22 { pt3dadd( 193.74, 349.769, -0.942311, 0.22 ) }
    dend_22 { pt3dadd( 193.85, 350.929, -0.863254, 0.22 ) }
    dend_22 { pt3dadd( 193.967, 352.163, -0.779227, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 43/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 193.332, 345.471, -1.23497, 0.22 ) }
    dend_19 { pt3dadd( 195.107, 344.908, -2.89813, 0.22 ) }
    dend_19 { pt3dadd( 195.743, 344.705, -3.49473, 0.22 ) }
    dend_19 { pt3dadd( 196.484, 344.47, -4.18867, 0.52 ) }
    dend_19 { pt3dadd( 197.336, 344.2, -4.98679, 1.11 ) }
    dend_19 { pt3dadd( 198.168, 343.935, -5.76667, 0.81 ) }
    dend_19 { pt3dadd( 199.075, 343.647, -6.61718, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -33.315, 100.25, -142.273, 0.59 ) }
    dend_11 { pt3dadd( -33.53, 101.811, -143.028, 0.59 ) }
    dend_11 { pt3dadd( -33.5759, 102.262, -143.291, 0.88 ) }
    dend_11 { pt3dadd( -33.6727, 103.136, -143.833, 0.29 ) }
    dend_11 { pt3dadd( -33.7517, 103.815, -144.262, 0.29 ) }
    dend_11 { pt3dadd( -33.8475, 104.518, -144.7, 0.37 ) }
    dend_11 { pt3dadd( -33.9493, 105.171, -145.1, 0.37 ) }
    dend_11 { pt3dadd( -34.1761, 106.359, -145.781, 0.29 ) }
    dend_11 { pt3dadd( -34.2934, 106.867, -146.097, 0.29 ) }
    dend_11 { pt3dadd( -34.4975, 107.722, -146.654, 0.29 ) }
    dend_11 { pt3dadd( -34.6201, 108.312, -147.033, 0.96 ) }
    dend_11 { pt3dadd( -34.7028, 108.721, -147.283, 0.96 ) }
    dend_11 { pt3dadd( -34.7826, 109.147, -147.52, 0.74 ) }
    dend_11 { pt3dadd( -34.9579, 110.184, -148.011, 0.29 ) }
    dend_11 { pt3dadd( -35.0919, 111.082, -148.443, 0.29 ) }
    dend_11 { pt3dadd( -35.1735, 111.683, -148.728, 0.29 ) }
    dend_11 { pt3dadd( -35.2521, 112.393, -149.048, 0.74 ) }
    dend_11 { pt3dadd( -35.2808, 112.683, -149.17, 0.74 ) }
    dend_11 { pt3dadd( -35.3156, 113.07, -149.321, 0.44 ) }
    dend_11 { pt3dadd( -35.4216, 113.991, -149.66, 0.29 ) }
    dend_11 { pt3dadd( -35.5417, 114.709, -149.913, 0.29 ) }
    dend_11 { pt3dadd( -35.7934, 116.21, -150.384, 0.29 ) }
    dend_11 { pt3dadd( -35.8899, 116.888, -150.569, 0.96 ) }
    dend_11 { pt3dadd( -35.94, 117.387, -150.676, 0.59 ) }
    dend_11 { pt3dadd( -35.9706, 118.067, -150.776, 0.29 ) }
    dend_11 { pt3dadd( -35.9761, 119.044, -150.855, 0.22 ) }
    dend_11 { pt3dadd( -35.9616, 119.995, -150.886, 0.22 ) }
    dend_11 { pt3dadd( -35.9439, 120.547, -150.878, 0.22 ) }
    dend_11 { pt3dadd( -35.9293, 121.4, -150.886, 0.22 ) }
    dend_11 { pt3dadd( -35.9213, 122.158, -150.924, 0.22 ) }
    dend_11 { pt3dadd( -35.8901, 122.865, -151.002, 0.81 ) }
    dend_11 { pt3dadd( -35.8775, 123.054, -151.04, 1.18 ) }
    dend_11 { pt3dadd( -35.8568, 123.49, -151.201, 1.18 ) }
    dend_11 { pt3dadd( -35.8325, 124.45, -151.681, 0.29 ) }
    dend_11 { pt3dadd( -35.8147, 124.957, -151.991, 0.29 ) }
    dend_11 { pt3dadd( -35.7611, 125.561, -152.391, 0.66 ) }
    dend_11 { pt3dadd( -35.7272, 125.771, -152.53, 0.66 ) }
    dend_11 { pt3dadd( -35.5422, 126.643, -153.171, 0.37 ) }
    dend_11 { pt3dadd( -35.4369, 127.148, -153.568, 0.37 ) }
    dend_11 { pt3dadd( -35.3708, 127.658, -153.979, 0.37 ) }
    dend_11 { pt3dadd( -35.3699, 128.048, -154.319, 0.74 ) }
    dend_11 { pt3dadd( -35.4083, 128.446, -154.692, 0.74 ) }
    dend_11 { pt3dadd( -35.509, 129.283, -155.506, 0.29 ) }
    dend_11 { pt3dadd( -35.5534, 129.803, -156.024, 0.29 ) }
    dend_11 { pt3dadd( -35.5832, 130.463, -156.743, 0.29 ) }
    dend_11 { pt3dadd( -35.6038, 131.122, -157.479, 0.88 ) }
    dend_11 { pt3dadd( -35.6103, 131.496, -157.885, 0.88 ) }
    dend_11 { pt3dadd( -35.6111, 132.024, -158.441, 0.29 ) }
    dend_11 { pt3dadd( -35.603, 132.699, -159.082, 0.29 ) }
    dend_11 { pt3dadd( -35.5895, 133.045, -159.409, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_11 { pt3dadd( -35.5964, 133.633, -159.934, 0.74 ) }
    dend_11 { pt3dadd( -35.6303, 134.011, -160.244, 0.74 ) }
    dend_11 { pt3dadd( -35.7386, 134.765, -160.827, 0.37 ) }
    dend_11 { pt3dadd( -35.8492, 135.385, -161.286, 0.59 ) }
    dend_11 { pt3dadd( -35.9348, 135.826, -161.594, 0.59 ) }
    dend_11 { pt3dadd( -36.03, 136.459, -162.026, 0.29 ) }
    dend_11 { pt3dadd( -36.0911, 137.199, -162.527, 0.29 ) }
    dend_11 { pt3dadd( -36.1067, 137.594, -162.774, 0.29 ) }
    dend_11 { pt3dadd( -36.1104, 138.078, -163.041, 0.52 ) }
    dend_11 { pt3dadd( -36.1037, 138.483, -163.25, 1.03 ) }
    dend_11 { pt3dadd( -36.0612, 139.056, -163.519, 1.03 ) }
    dend_11 { pt3dadd( -35.9335, 140.101, -163.974, 0.22 ) }
    dend_11 { pt3dadd( -35.7374, 141.418, -164.502, 0.22 ) }
    dend_11 { pt3dadd( -35.5825, 142.359, -164.859, 0.96 ) }
    dend_11 { pt3dadd( -35.4877, 142.925, -165.061, 0.96 ) }
    dend_11 { pt3dadd( -35.2211, 144.333, -165.537, 0.29 ) }
    dend_11 { pt3dadd( -34.9872, 145.431, -165.882, 0.29 ) }
    dend_11 { pt3dadd( -34.8244, 146.161, -166.102, 0.88 ) }
    dend_11 { pt3dadd( -34.7033, 146.717, -166.269, 1.18 ) }
    dend_11 { pt3dadd( -34.4555, 148.027, -166.696, 0.37 ) }
    dend_11 { pt3dadd( -34.2815, 149.187, -166.994, 0.37 ) }
    dend_11 { pt3dadd( -34.0845, 150.801, -167.316, 0.37 ) }
    dend_11 { pt3dadd( -33.9464, 151.808, -167.437, 0.37 ) }
    dend_11 { pt3dadd( -33.8217, 152.532, -167.471, 0.96 ) }
    dend_11 { pt3dadd( -33.6265, 153.384, -167.446, 0.96 ) }
    dend_11 { pt3dadd( -32.8474, 155.751, -167.145, 0.29 ) }
    dend_11 { pt3dadd( -32.6494, 156.196, -167.067, 0.29 ) }
    dend_11 { pt3dadd( -32.1993, 156.988, -166.922, 0.88 ) }
    dend_11 { pt3dadd( -31.8374, 157.537, -166.839, 0.88 ) }
    dend_11 { pt3dadd( -31.54, 157.959, -166.799, 0.59 ) }
    dend_11 { pt3dadd( -30.4521, 159.498, -166.79, 0.29 ) }
    dend_11 { pt3dadd( -29.6507, 160.702, -166.969, 0.29 ) }
    dend_11 { pt3dadd( -29.2091, 161.446, -167.121, 0.81 ) }
    dend_11 { pt3dadd( -29.023, 161.793, -167.215, 0.81 ) }
    dend_11 { pt3dadd( -28.7737, 162.369, -167.394, 0.52 ) }
    dend_11 { pt3dadd( -28.4809, 163.229, -167.697, 0.22 ) }
    dend_11 { pt3dadd( -28.1547, 164.766, -168.312, 0.22 ) }
    dend_11 { pt3dadd( -28.0512, 165.659, -168.685, 0.74 ) }
    dend_11 { pt3dadd( -28.0298, 166.12, -168.88, 0.74 ) }
    dend_11 { pt3dadd( -28.0451, 167.396, -169.419, 0.22 ) }
    dend_11 { pt3dadd( -28.0812, 167.93, -169.638, 0.22 ) }
    dend_11 { pt3dadd( -28.1701, 168.621, -169.91, 0.52 ) }
    dend_11 { pt3dadd( -28.2018, 168.798, -169.977, 0.59 ) }
    dend_11 { pt3dadd( -28.3818, 169.679, -170.329, 0.22 ) }
    dend_11 { pt3dadd( -28.5408, 170.358, -170.661, 0.44 ) }
    dend_11 { pt3dadd( -28.9152, 171.586, -171.398, 0.22 ) }
    dend_11 { pt3dadd( -29.1249, 172.081, -171.767, 0.66 ) }
    dend_11 { pt3dadd( -29.5048, 172.759, -172.359, 0.22 ) }
    dend_11 { pt3dadd( -30.0227, 173.512, -173.123, 0.74 ) }
    dend_11 { pt3dadd( -30.5738, 174.18, -173.9, 0.59 ) }
    dend_11 { pt3dadd( -31.0601, 174.741, -174.591, 0.29 ) }
    dend_11 { pt3dadd( -31.4617, 175.204, -175.164, 0.52 ) }
    dend_11 { pt3dadd( -32.1329, 175.955, -176.105, 0.22 ) }
    dend_11 { pt3dadd( -32.5691, 176.457, -176.696, 0.59 ) }
    dend_11 { pt3dadd( -32.7203, 176.672, -176.895, 0.59 ) }
    dend_11 { pt3dadd( -33.1229, 177.481, -177.476, 0.22 ) }
    dend_11 { pt3dadd( -33.2859, 178.057, -177.84, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -33.315, 100.25, -142.273, 0.52 ) }
    dend_10 { pt3dadd( -32.239, 101.255, -144.288, 0.52 ) }
    dend_10 { pt3dadd( -31.599, 101.879, -145.486, 0.29 ) }
    dend_10 { pt3dadd( -30.9723, 102.56, -146.656, 0.29 ) }
    dend_10 { pt3dadd( -30.0889, 103.557, -148.266, 0.29 ) }
    dend_10 { pt3dadd( -29.4491, 104.258, -149.392, 0.59 ) }
    dend_10 { pt3dadd( -29.2045, 104.499, -149.807, 0.66 ) }
    dend_10 { pt3dadd( -28.3921, 105.213, -151.023, 0.29 ) }
    dend_10 { pt3dadd( -27.8249, 105.6, -151.804, 0.81 ) }
    dend_10 { pt3dadd( -27.6627, 105.713, -152.023, 0.81 ) }
    dend_10 { pt3dadd( -26.8602, 106.234, -152.99, 0.29 ) }
    dend_10 { pt3dadd( -26.0477, 106.651, -154.055, 0.44 ) }
    dend_10 { pt3dadd( -25.7906, 106.74, -154.371, 0.66 ) }
    dend_10 { pt3dadd( -25.2837, 106.791, -154.883, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 199.075, 343.647, -6.61718, 0.37 ) }
    dend_21 { pt3dadd( 201.046, 343.168, -7.58284, 0.37 ) }
    dend_21 { pt3dadd( 201.882, 343.022, -7.97888, 0.22 ) }
    dend_21 { pt3dadd( 202.955, 342.835, -8.48646, 0.22 ) }
    dend_21 { pt3dadd( 203.185, 342.795, -8.59529, 0.66 ) }
    dend_21 { pt3dadd( 204.363, 342.589, -9.15333, 0.22 ) }
    dend_21 { pt3dadd( 205.418, 342.405, -9.65255, 0.22 ) }
    dend_21 { pt3dadd( 205.682, 342.379, -9.74414, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 199.075, 343.647, -6.61718, 0.22 ) }
    dend_20 { pt3dadd( 201.416, 343.717, -7.09345, 0.22 ) }
    dend_20 { pt3dadd( 201.913, 343.732, -7.17745, 0.88 ) }
    dend_20 { pt3dadd( 203.083, 343.769, -7.37528, 0.22 ) }
    dend_20 { pt3dadd( 203.582, 343.784, -7.45976, 0.74 ) }
    dend_20 { pt3dadd( 205.358, 343.839, -7.75996, 0.22 ) }
    dend_20 { pt3dadd( 206.108, 343.863, -7.88689, 0.44 ) }
    dend_20 { pt3dadd( 207.054, 343.857, -7.88746, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_62 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_53 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_52 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_63 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_61 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_30 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_65 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_48 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_57 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_35 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_42 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_43 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 4.13603E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 1.04239E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 15
    dend_32 nseg = 7
    dend_62 nseg = 3
    dend_53 nseg = 9
    dend_52 nseg = 7
    dend_40 nseg = 3
    dend_29 nseg = 7
    dend_14 nseg = 3
    dend_4 nseg = 7
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_50 nseg = 7
    dend_34 nseg = 5
    dend_30 nseg = 3
    dend_16 nseg = 19
    dend_15 nseg = 11
    dend_3 nseg = 9
    dend_2 nseg = 5
    dend_65 nseg = 5
    dend_64 nseg = 5
    dend_60 nseg = 3
    dend_39 nseg = 3
    dend_17 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_49 nseg = 3
    dend_48 nseg = 5
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_45 nseg = 5
    dend_44 nseg = 7
    dend_26 nseg = 3
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bSTUT213_L5_NBC_e0eb22f024_0_0


