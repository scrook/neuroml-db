// Cell: cIR216_L6_MC_87e499e11e_0_0
/*
{
  "id" : "cIR216_L6_MC_87e499e11e_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.83638, 12.3318, -1.26703, 2.94939", "-2.55054, 11.1277, -1.1402, 4.81305", "-2.2647, 9.92366, -1.01338, 6.57471", "-1.97886, 8.71959, -0.886552, 7.67573", "-1.69302, 7.51553, -0.759726, 8.48432", "-1.40719, 6.31146, -0.6329, 9.36598", "-1.12135, 5.10739, -0.506075, 10.0986", "-0.835506, 3.90333, -0.379249, 10.7023", "-0.549666, 2.69926, -0.252424, 11.2902", "-0.263826, 1.4952, -0.125598, 11.5615", "0.0220138, 0.291133, 0.00122739, 11.5342", "0.307854, -0.912932, 0.128053, 11.2102", "0.593693, -2.117, 0.254879, 11.0503", "0.879533, -3.32106, 0.381704, 10.841", "1.16537, -4.52513, 0.50853, 10.1133", "1.45121, -5.72919, 0.635355, 8.61794", "1.73705, -6.93326, 0.762181, 6.75639", "2.02289, -8.13732, 0.889006, 5.11821", "2.30873, -9.34139, 1.01583, 4.09257", "2.59457, -10.5455, 1.14266, 3.47113", "2.88041, -11.7495, 1.26948, 2.10111" ]
  }, {
    "name" : "dend_155",
    "id" : "dend_155",
    "points3d" : [ "4.37091, -8.89172, 3.20881, 1.03", "4.93809, -9.76281, 3.95198, 1.03", "5.42628, -10.4569, 4.65593, 1.03", "5.78649, -10.9214, 5.15013, 1.11", "6.313, -11.5456, 5.91289, 0.88", "6.60265, -11.871, 6.33178, 0.88", "7.76993, -13.0909, 7.93186, 0.44", "8.14754, -13.4348, 8.48485, 0.44", "8.42055, -13.6346, 8.87376, 0.44", "9.03227, -14.0007, 9.59259, 0.44", "9.29421, -14.1481, 9.80437, 0.44", "9.77137, -14.3995, 10.0485, 0.44", "10.2239, -14.6338, 10.1792, 0.96", "10.4114, -14.7416, 10.2361, 1.55", "11.2199, -15.2609, 10.4625, 1.55", "11.9537, -15.7666, 10.6321, 0.74", "12.5383, -16.2022, 10.777, 0.74", "13.3714, -16.8871, 10.9944, 0.44", "13.4841, -16.9825, 11.0343, 0.44", "14.0886, -17.5101, 11.2887, 0.44", "14.4637, -17.8709, 11.4734, 0.81", "14.8546, -18.297, 11.7238, 0.81", "15.0446, -18.5857, 11.9659, 1.03", "15.4737, -19.464, 12.8008, 0.44", "15.5828, -19.8714, 13.2815, 0.44", "15.6497, -20.5161, 14.1462, 0.44", "15.6377, -21.0382, 14.8592, 0.66", "15.45, -22.6158, 17.0642, 0.59", "15.4058, -22.8379, 17.3728, 1.33", "15.0423, -24.1143, 19.0866, 0.29", "15.028, -24.1563, 19.1443, 0.29", "14.8581, -24.6356, 19.7755, 0.29", "14.8417, -24.6922, 19.8305, 0.29", "14.8251, -24.8445, 19.8983, 0.44", "14.8345, -24.9891, 19.9421, 0.44", "14.9627, -25.5917, 20.0259, 0.44", "15.1253, -26.2883, 20.1418, 0.44", "15.1977, -26.5669, 20.1953, 0.44", "15.3697, -27.1946, 20.438, 0.37", "15.5623, -27.8583, 20.8065, 0.74", "15.7203, -28.3523, 21.1528, 1.25", "15.8377, -28.6909, 21.4522, 1.33", "15.8554, -28.7401, 21.4997, 1.33", "16.354, -30.0912, 22.8621, 1.33", "16.3722, -30.1411, 22.9088, 1.33", "16.4919, -30.5413, 23.3812, 1.55", "16.5836, -30.9434, 23.8893, 1.77", "16.6464, -31.3726, 24.4748, 1.77", "16.69, -31.9294, 25.273, 1.11", "16.7006, -32.492, 26.0836, 0.66", "16.6939, -34.4172, 29.2738, 0.44", "16.6899, -34.6752, 29.7393, 0.88", "16.6464, -35.7303, 31.7433, 0.52", "16.608, -36.2666, 32.8313, 1.11", "16.5873, -36.3935, 33.1075, 1.62", "16.2133, -37.758, 36.2382, 0.44", "16.1501, -37.9577, 36.655, 1.03", "16.0862, -38.1339, 37.0175, 1.03", "16.0361, -38.2495, 37.2364, 1.03", "15.5568, -39.2708, 38.868, 0.37", "15.4541, -39.5296, 39.2436, 1.18", "15.2843, -39.9776, 39.7992, 1.62", "15.2271, -40.1736, 40.0406, 1.77", "15.2021, -40.3073, 40.2033, 1.77", "15.0092, -41.9884, 42.1654, 0.22", "14.948, -43.0433, 43.3155, 0.22", "14.9452, -43.0882, 43.3701, 0.22", "14.9282, -43.3511, 43.7537, 0.22", "14.9048, -43.8818, 44.6123, 0.66", "14.8985, -43.9958, 44.7934, 1.03", "14.8784, -44.4141, 45.4162, 1.33", "14.786, -45.9381, 47.5227, 0.15", "14.7518, -47.2554, 49.2641, 1.4", "14.7421, -47.9806, 50.2415, 0.29", "14.753, -48.646, 51.1281, 0.29", "14.7782, -49.1752, 51.8333, 0.29", "14.798, -49.3951, 52.1185, 1.03", "14.8079, -49.7019, 52.3662, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500005799210318,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_84",
    "id" : "dend_84",
    "points3d" : [ "3.12091, -12.2017, 0.388809, 1.99", "3.12091, -12.2017, 0.388809, 1.99", "3.07096, -13.8914, 0.388809, 1.99", "3.05945, -15.2214, 0.388809, 2.14", "3.062, -16.5344, 0.467243, 2.36", "3.09612, -18.2379, 0.617163, 2.65", "3.12569, -19.2794, 0.719251, 2.87", "3.15783, -20.0853, 0.80972, 2.87", "3.2323, -21.3562, 0.970066, 2.65", "3.38993, -23.483, 1.26257, 2.14", "3.52683, -25.1752, 1.48471, 2.14", "3.67575, -27.0747, 1.72158, 2.06", "3.67984, -27.147, 1.72931, 2.06", "3.71375, -28.5266, 1.77927, 2.06", "3.71241, -28.5965, 1.77575, 2.06", "3.61803, -30.4865, 1.48194, 2.21", "3.61284, -30.5656, 1.46752, 2.21", "3.56, -31.5799, 1.25248, 2.21", "3.50842, -33.36, 0.840376, 2.21", "3.50066, -34.1567, 0.68885, 2.28", "3.5111, -35.4238, 0.486548, 2.14", "3.55008, -36.7589, 0.318559, 2.21", "3.62415, -38.3747, 0.176565, 2.21", "3.73434, -40.2914, 0.164513, 2.21", "3.86247, -42.3265, 0.311515, 2.21", "3.86762, -42.3966, 0.319231, 2.21", "3.97011, -43.7088, 0.510543, 2.21", "4.07361, -45.4079, 0.817874, 2.21", "4.13281, -47.2511, 1.2751, 2.36", "4.13522, -47.7282, 1.41231, 2.5", "4.06207, -49.3386, 1.84964, 1.47", "3.96301, -50.2798, 2.11103, 1.47", "3.79254, -51.0742, 2.33274, 1.47", "3.39116, -52.2693, 2.64177, 1.47", "3.35916, -52.3421, 2.65526, 1.47", "2.85699, -53.2928, 2.82987, 1.77", "2.34708, -54.1041, 2.97737, 1.92", "1.75089, -55.0673, 3.15246, 1.92", "1.71943, -55.1322, 3.16209, 1.92", "1.27033, -56.2988, 3.27876, 1.92", "1.24353, -56.3886, 3.28973, 1.92", "1.23348, -56.4599, 3.30037, 1.92", "1.21963, -57.4435, 3.46901, 1.69", "1.42206, -58.6159, 3.69829, 1.03", "1.45044, -58.691, 3.71743, 1.03", "1.76762, -59.2399, 3.874, 1.47", "2.24561, -59.9515, 4.07823, 1.47", "2.3751, -60.1277, 4.12516, 1.47", "3.09, -61.0371, 4.3416, 1.47", "4.16694, -62.3834, 4.66419, 1.47", "4.72899, -63.1235, 4.81625, 1.47", "4.85924, -63.3138, 4.84708, 1.47", "5.42725, -64.2823, 4.96731, 1.77", "5.76489, -64.8796, 5.0288, 1.77", "5.80998, -64.9687, 5.03396, 1.77", "6.42484, -66.414, 5.03396, 1.77", "6.91209, -67.6714, 5.03396, 1.77", "7.16103, -68.3396, 5.03396, 2.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500005799210318,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-1.47909, 12.0883, -1.92119, 3.46", "-1.47909, 12.0883, -1.92119, 3.46", "-1.77333, 13.5053, -2.09788, 3.46", "-2.15236, 15.521, -2.30879, 3.46", "-2.16369, 15.5898, -2.31493, 3.46", "-2.44316, 17.401, -2.46459, 3.46", "-2.67377, 19.1033, -2.60811, 3.46", "-2.91435, 21.4431, -2.80408, 3.46", "-3.02732, 23.5954, -2.9785, 3.46", "-3.0308, 25.3717, -3.1039, 3.46", "-3.02854, 25.4423, -3.10775, 3.46", "-2.95013, 26.5224, -3.14033, 2.8", "-2.79156, 27.9054, -3.18826, 2.8", "-2.55334, 29.3355, -3.24563, 2.8", "-2.31252, 30.5616, -3.29902, 2.8", "-2.02589, 31.9655, -3.35738, 3.02", "-1.76026, 33.361, -3.40299, 3.02" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500005799210318
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.88041, -11.7495, 1.26948, 0.578727", "6.34505, -26.3439, 1.26948, 0.578727", "9.80969, -40.9383, 1.26948, 0.578727" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_127",
    "id" : "dend_127",
    "points3d" : [ "7.16103, -68.3396, 5.03396, 1.25", "7.96986, -68.6874, 5.0802, 1.25", "8.92442, -69.1186, 5.12688, 1.25", "9.16136, -69.2384, 5.13681, 1.25", "10.3243, -69.9195, 5.17952, 0.96", "10.4145, -69.979, 5.18236, 0.96", "11.56, -70.8265, 5.21423, 0.96", "11.6147, -70.8713, 5.21423, 0.96", "12.1801, -71.4002, 5.21423, 0.81", "12.6769, -71.945, 5.20649, 0.81", "13.2299, -72.6615, 5.18824, 0.81", "13.5793, -73.1778, 5.17053, 1.18", "13.9338, -73.8568, 5.14155, 0.66", "14.2051, -74.4586, 5.11307, 0.88", "14.4026, -75.0583, 5.08139, 0.74", "14.4194, -75.1389, 5.07678, 0.74", "14.4455, -75.8185, 5.03959, 0.74", "14.3992, -76.4738, 5.00791, 0.52", "14.3561, -76.7031, 4.99919, 0.52", "14.2442, -77.1498, 4.98873, 0.74", "14.2162, -77.2254, 4.98873, 0.74", "13.989, -77.7771, 5.09103, 0.59", "13.9345, -77.9101, 5.13852, 0.59", "13.8503, -78.2103, 5.32101, 0.59", "13.8424, -78.2691, 5.36308, 0.59", "13.8309, -78.924, 5.88081, 0.59", "13.9515, -80.081, 6.79446, 0.44", "14.0542, -80.4871, 7.10608, 0.44", "14.3369, -81.3027, 7.69773, 0.59", "14.5413, -81.7176, 7.97076, 0.74", "14.5746, -81.7715, 8.00219, 0.74", "14.9774, -82.2312, 8.28679, 0.74", "15.4426, -82.6645, 8.52824, 0.37", "15.5025, -82.712, 8.55945, 0.37", "16.1143, -83.1119, 8.85318, 0.37", "16.1774, -83.1449, 8.89106, 0.37", "17.3499, -83.6885, 9.64282, 0.44", "17.5154, -83.7462, 9.77918, 0.44", "17.6175, -83.7813, 9.88747, 0.44", "17.7587, -83.8385, 10.0511, 0.96", "18.3559, -84.1052, 10.7701, 0.96", "18.8268, -84.3723, 11.3807, 1.11", "19.838, -85.0998, 12.7203, 1.11", "20.6403, -85.7829, 13.821, 1.33", "20.9455, -86.082, 14.2446, 1.33", "21.2009, -86.3713, 14.5919, 1.33", "21.9265, -87.4387, 15.5242, 1.18", "22.2683, -88.0769, 15.9448, 0.88", "22.43, -88.4632, 16.0925, 0.81", "22.5623, -88.832, 16.1835, 0.81", "22.7471, -89.4263, 16.3147, 0.66", "23.1262, -90.7739, 16.5623, 0.66", "23.1555, -90.881, 16.5759, 0.66", "23.4197, -91.8671, 16.7567, 0.88", "23.5821, -92.4827, 16.891, 1.18", "23.8053, -93.3933, 17.1168, 1.11", "23.902, -93.8375, 17.2443, 1.25", "23.9294, -93.9683, 17.287, 1.25", "24.1421, -95.0327, 17.7112, 1.25", "24.2632, -95.6919, 18.0262, 1.25", "24.2751, -95.7532, 18.0594, 1.25", "24.4452, -96.5007, 18.4694, 1.03", "24.4605, -96.561, 18.503, 1.03", "24.8728, -97.5533, 19.2625, 0.74", "24.9013, -97.6004, 19.3101, 0.74", "25.1438, -97.8866, 19.6637, 0.74", "25.6351, -98.2632, 20.31, 0.59", "25.6792, -98.2875, 20.3626, 0.59", "26.974, -98.8941, 21.7787, 0.59", "27.0218, -98.9124, 21.8264, 0.59", "27.3818, -99.0409, 22.1759, 0.59", "28.9982, -99.553, 23.7202, 0.59", "29.271, -99.6354, 23.9757, 1.03", "29.6035, -99.7575, 24.2775, 1.25", "29.8197, -99.8636, 24.4438, 1.25", "30.0485, -100.019, 24.6159, 1.25", "30.1005, -100.071, 24.6536, 1.25", "30.2105, -100.233, 24.7185, 1.25", "30.8287, -101.27, 25.1063, 0.88", "31.1951, -101.953, 25.3297, 0.59", "31.6044, -102.764, 25.5681, 0.59", "31.8495, -103.28, 25.6937, 0.59", "32.0337, -103.706, 25.7572, 0.81", "32.0711, -103.802, 25.7531, 0.81", "32.3232, -104.522, 25.5771, 0.81", "32.3568, -104.611, 25.5462, 0.81", "32.7194, -105.421, 25.1807, 1.03", "33.0358, -105.939, 24.8629, 0.81", "33.6969, -106.79, 24.2101, 0.44", "33.7529, -106.844, 24.1605, 0.44", "34.3572, -107.221, 23.7042, 0.44", "34.4145, -107.243, 23.6692, 0.44", "35.5306, -107.44, 23.1095, 0.59", "35.7233, -107.446, 23.021, 0.59", "36.4102, -107.44, 22.743, 0.59", "37.0149, -107.451, 22.4769, 1.11", "37.4638, -107.464, 22.2652, 1.11", "37.5997, -107.476, 22.2022, 1.11", "38.9538, -107.761, 21.5992, 0.44", "39.9717, -108.174, 21.0901, 0.44", "40.8567, -108.61, 20.6086, 0.44", "40.9204, -108.648, 20.5724, 0.44", "41.469, -109.026, 20.2597, 0.74", "42.058, -109.488, 19.9512, 1.4", "42.8629, -110.436, 19.626, 1.84" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_85",
    "id" : "dend_85",
    "points3d" : [ "7.16103, -68.3396, 5.03396, 1.47", "6.57294, -69.8329, 5.08701, 1.47", "6.30436, -70.5129, 5.09306, 1.62", "5.87484, -71.6249, 5.05641, 1.62", "5.62406, -72.2975, 5.02065, 1.62", "5.28377, -73.29, 4.95687, 1.62", "4.94629, -74.3396, 4.88614, 1.62", "4.92596, -74.4069, 4.87845, 1.62", "4.61697, -75.5753, 4.75642, 1.47", "4.58301, -75.7272, 4.74329, 1.47", "4.42011, -76.7432, 4.69852, 1.69", "4.32315, -78.1407, 4.68984, 1.69", "4.32586, -78.2135, 4.69174, 1.69", "4.52837, -80.1744, 4.77137, 1.69", "4.75439, -81.4663, 4.89448, 1.69", "5.01167, -82.51, 5.03092, 1.69", "5.46412, -83.8707, 5.2594, 1.47", "6.05, -85.2366, 5.52805, 1.18", "6.07857, -85.3, 5.54099, 1.18", "6.56752, -86.3395, 5.75868, 1.62", "6.91444, -87.2502, 5.92453, 1.84", "6.94141, -87.3904, 5.93504, 1.84", "6.97271, -88.7384, 5.93023, 1.84", "6.88618, -90.0488, 5.85721, 1.84", "6.7793, -91.0463, 5.76387, 1.99", "6.60464, -92.0644, 5.62849, 1.99", "6.20984, -93.7322, 5.401, 1.99", "5.80985, -95.1948, 5.205, 1.99", "5.78633, -95.2713, 5.19495, 1.99", "5.33765, -96.7331, 5.02215, 1.99", "5.09707, -97.5206, 4.93918, 1.69", "4.9104, -98.1362, 4.89249, 1.47", "4.63227, -99.0347, 4.89249, 1.47", "4.40639, -99.7239, 4.89249, 1.92", "4.14087, -100.561, 4.89249, 2.28" ],
    "parent" : "dend_84",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_81",
    "id" : "dend_81",
    "points3d" : [ "-1.76026, 33.361, -3.40299, 0.29", "-3.54827, 33.7471, 0.0112177, 0.29", "-3.59469, 33.7638, 0.0749893, 0.29", "-4.12212, 33.9879, 0.6915, 0.29", "-4.46734, 34.1621, 1.1573, 0.29", "-4.9189, 34.4284, 1.78452, 0.29", "-5.21592, 34.6412, 2.22778, 0.29", "-5.62333, 35.0777, 2.68885, 0.29", "-5.64719, 35.1149, 2.72948, 0.29", "-5.76592, 36.1718, 4.13707, 0.29", "-5.68317, 36.4709, 4.57099, 0.29", "-5.47526, 36.8246, 5.11639, 0.22", "-5.36076, 36.9922, 5.35887, 0.22", "-5.16389, 37.2704, 6.00453, 0.22", "-4.81458, 37.8921, 7.4899, 0.22", "-4.80195, 37.9183, 7.55359, 0.22", "-4.60159, 38.4137, 8.738, 1.11", "-4.52417, 38.6682, 9.33675, 1.11", "-4.00042, 40.7882, 14.1428, 0.52", "-3.94463, 41.1737, 14.9595, 0.52", "-3.9429, 41.2061, 15.0223, 0.52", "-3.93592, 41.5879, 15.7484, 0.52", "-3.94104, 41.6552, 15.8727, 0.52", "-4.08785, 42.3574, 17.1442, 0.52", "-4.26364, 42.7541, 17.7258, 0.52", "-4.47066, 43.1214, 18.4116, 0.81", "-4.4979, 43.1651, 18.4997, 0.81", "-4.70855, 43.4539, 19.1474, 0.96", "-5.19626, 44.131, 20.4904, 0.96", "-5.5818, 44.7367, 21.5072, 0.96", "-5.60024, 44.777, 21.5613, 0.96", "-5.70294, 45.0768, 21.88, 0.81", "-5.71908, 45.1272, 21.927, 0.81", "-5.95039, 45.9556, 22.5884, 0.81", "-6.25191, 46.926, 23.2483, 0.29", "-6.50018, 47.5911, 23.6921, 0.29", "-6.52284, 47.6474, 23.7324, 0.29", "-6.8566, 48.3409, 24.3867, 0.29", "-6.88477, 48.3934, 24.4437, 0.29", "-7.23839, 48.9798, 25.1826, 0.96", "-7.39821, 49.2233, 25.4745, 1.11", "-7.51121, 49.3982, 25.6941, 1.18", "-8.16239, 50.462, 26.9478, 0.29", "-8.36089, 50.8299, 27.3343, 0.29", "-8.42102, 50.9442, 27.4463, 0.29", "-8.68159, 51.4986, 27.9103, 0.29", "-9.0306, 52.3314, 28.551, 0.81", "-9.11399, 52.5798, 28.6983, 0.96", "-9.20468, 52.9905, 28.8409, 0.59", "-9.21793, 53.0561, 28.8614, 0.59", "-9.3439, 53.5484, 29.1461, 0.44", "-9.38222, 53.6699, 29.2549, 0.29", "-9.57551, 54.1144, 29.7345, 0.29", "-9.59861, 54.1574, 29.7847, 0.29", "-9.79196, 54.5007, 30.1868, 0.29", "-10.3836, 55.8184, 31.7794, 0.29", "-10.3987, 55.8554, 31.8242, 0.29", "-10.5205, 56.1972, 32.2181, 0.29", "-10.8262, 57.1596, 33.2828, 2.65", "-10.8903, 57.3962, 33.5259, 2.65", "-11.2375, 59.0065, 35.1544, 0.44", "-11.2947, 59.3176, 35.4331, 0.44", "-11.3469, 59.6396, 35.7285, 0.59", "-11.4023, 59.9512, 36.0852, 0.88", "-11.4126, 59.9925, 36.1408, 0.88", "-11.726, 60.8096, 37.2203, 0.88", "-11.892, 61.1414, 37.6412, 0.74", "-12.0544, 61.444, 38.0398, 0.74", "-12.7902, 62.9355, 40.0106, 0.29", "-12.9162, 63.245, 40.391, 0.29", "-13.22, 64.1348, 41.3858, 0.29", "-13.2519, 64.2407, 41.4916, 0.29", "-13.5168, 65.1238, 42.4493, 0.29", "-13.7782, 65.9232, 43.3509, 1.11", "-13.9235, 66.4086, 43.864, 0.37", "-14.0041, 66.6168, 44.1598, 0.29", "-14.0778, 66.7533, 44.4161, 0.29", "-14.5458, 67.4307, 45.7409, 0.22", "-14.7608, 67.6598, 46.2107, 0.22", "-14.8505, 67.7478, 46.3839, 0.22", "-15.4399, 68.3888, 47.5764, 0.59", "-15.5467, 68.578, 47.9716, 0.74", "-15.6047, 68.7677, 48.3594, 0.81", "-15.6146, 68.8317, 48.4739, 0.81", "-15.6898, 69.3162, 49.3157, 0.81", "-15.6963, 69.3532, 49.3756, 0.81", "-16.1117, 71.139, 52.0917, 0.44", "-16.1284, 71.1821, 52.16, 0.44", "-16.2914, 71.5049, 52.6056, 0.44", "-16.6483, 72.1312, 53.3723, 1.55", "-16.8779, 72.4928, 53.7782, 2.14", "-17.0281, 72.7257, 53.9982, 2.14", "-17.9694, 74.1969, 55.0216, 0.37", "-18.7113, 75.3516, 55.7935, 0.37", "-19.1723, 76.1122, 56.2903, 0.81", "-19.2134, 76.1826, 56.3334, 0.81", "-19.2826, 76.297, 56.4042, 1.25", "-19.5054, 76.6794, 56.6292, 1.25", "-19.8227, 77.2725, 56.9219, 0.29", "-20.4532, 78.4541, 57.5771, 0.29", "-20.5193, 78.5786, 57.6422, 0.29", "-21.0542, 79.6051, 58.197, 0.29", "-21.0833, 79.6608, 58.2293, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-1.76026, 33.361, -3.40299, 3.02", "-1.7993, 33.6584, -3.40299, 3.02", "-2.05726, 35.6238, -3.40299, 3.32", "-2.23714, 36.9944, -3.40299, 3.32", "-2.43895, 38.532, -3.40299, 3.68", "-2.52373, 39.1779, -3.40299, 3.68" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.80969, -40.9383, 1.26948, 0.578727", "13.2743, -55.5327, 1.26948, 0.578727", "16.739, -70.1271, 1.26948, 0.578727" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_129",
    "id" : "dend_129",
    "points3d" : [ "42.8629, -110.436, 19.626, 1.62", "43.3536, -111.609, 19.6747, 1.62", "43.5222, -111.995, 19.6946, 1.62", "43.7022, -112.357, 19.7511, 1.62", "44.2249, -113.351, 19.9441, 0.81", "44.6481, -114.107, 20.103, 0.74", "44.6831, -114.166, 20.1179, 0.74", "45.4508, -115.413, 20.5569, 0.74", "46.2513, -116.573, 21.0028, 0.52", "46.2927, -116.626, 21.0242, 0.52", "46.685, -117.033, 21.1931, 0.52", "47.164, -117.459, 21.3881, 0.88", "47.2267, -117.509, 21.4085, 0.88", "47.7694, -117.865, 21.5387, 0.88", "48.2552, -118.163, 21.6067, 1.33", "48.9711, -118.578, 21.6881, 0.74", "49.0347, -118.613, 21.6937, 0.74", "50.3143, -119.295, 21.6393, 0.74", "50.5772, -119.433, 21.5959, 1.25", "50.6557, -119.479, 21.5792, 1.25", "51.3317, -119.908, 21.4165, 1.25", "51.3793, -119.943, 21.408, 1.25", "52.4375, -120.811, 21.2915, 0.74", "53.1171, -121.444, 21.2527, 0.52", "54.1938, -122.579, 21.2477, 0.52", "54.5037, -122.946, 21.2651, 1.03", "55.4049, -124.127, 21.3886, 0.96", "55.849, -124.739, 21.503, 1.33", "56.2114, -125.266, 21.6554, 1.62", "56.5446, -125.77, 21.8132, 1.62", "56.8636, -126.231, 21.9317, 1.62", "56.9528, -126.353, 21.959, 1.62", "57.5354, -127.006, 22.0457, 0.96", "58.2661, -127.753, 22.1306, 0.88", "58.3385, -127.821, 22.1369, 0.88", "59.3547, -128.741, 22.2005, 0.88", "59.4292, -128.807, 22.2035, 0.88", "61.8656, -131.011, 22.2424, 0.88", "61.9179, -131.058, 22.2421, 0.88", "62.4992, -131.58, 22.2374, 1.18", "62.673, -131.735, 22.2359, 1.18", "63.5228, -132.496, 22.2263, 1.18", "64.5095, -133.391, 22.2128, 1.18", "65.2091, -134.101, 22.1954, 1.03" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_128",
    "id" : "dend_128",
    "points3d" : [ "42.8629, -110.436, 19.626, 0.44", "41.6469, -111.528, 18.5156, 0.44", "41.6045, -111.568, 18.4768, 0.44", "40.8882, -112.246, 17.8896, 0.37", "40.4969, -112.615, 17.5848, 0.74", "40.0262, -113.053, 17.2403, 0.74", "39.0822, -113.908, 16.5989, 0.29", "39.028, -113.963, 16.5689, 0.29", "38.3966, -114.561, 16.2403, 0.29", "38.283, -114.661, 16.1837, 0.74", "38.0012, -114.878, 16.0765, 0.96", "37.6659, -115.106, 15.9619, 1.11", "36.9821, -115.538, 15.7797, 0.37", "36.5185, -115.81, 15.6312, 0.37", "36.4578, -115.844, 15.6095, 0.37", "35.7075, -116.261, 15.3361, 0.22", "35.2377, -116.518, 15.1599, 0.52", "34.9791, -116.66, 15.0708, 0.52", "33.8614, -117.253, 14.731, 0.15", "33.6429, -117.375, 14.6541, 0.37", "33.5178, -117.446, 14.6081, 0.37", "33.4416, -117.491, 14.5795, 0.37", "32.5047, -118.04, 14.2599, 0.22", "32.4384, -118.08, 14.2373, 0.22", "31.8087, -118.499, 14.0481, 0.37", "31.4262, -118.74, 13.9187, 0.37" ],
    "parent" : "dend_127",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_114",
    "id" : "dend_114",
    "points3d" : [ "4.14087, -100.561, 4.89249, 0.74", "3.35469, -101.925, 5.46798, 0.74", "2.80201, -102.927, 5.88301, 0.66", "2.77146, -102.987, 5.90595, 0.66", "2.23244, -104.069, 6.30683, 0.66", "1.72791, -105.012, 6.62952, 0.66", "1.44938, -105.507, 6.79011, 0.52", "1.4056, -105.573, 6.80512, 0.52", "1.00299, -106.049, 6.98044, 0.52", "0.95615, -106.098, 7.00179, 0.52", "0.163945, -106.839, 7.36415, 0.52", "0.0819935, -106.914, 7.39939, 0.52", "-0.840338, -107.796, 7.82854, 0.52", "-1.89878, -108.976, 8.36308, 0.52", "-2.26981, -109.486, 8.57442, 1.11", "-2.50296, -109.908, 8.72907, 1.03", "-2.54732, -110.048, 8.76956, 1.03", "-2.62859, -110.647, 8.88114, 1.03", "-2.61759, -111.542, 8.96996, 1.03", "-2.56667, -112.152, 8.96996, 0.81", "-2.55889, -112.232, 8.96996, 0.81", "-2.50001, -113.212, 8.96996, 0.81", "-2.47918, -114.234, 8.95212, 0.74", "-2.48473, -114.304, 8.94985, 0.74", "-2.66632, -115.369, 8.90399, 0.59", "-2.92027, -116.359, 8.85452, 0.44", "-3.23071, -117.332, 8.80618, 0.37", "-3.39059, -117.708, 8.78763, 0.74", "-4.07558, -118.961, 8.73157, 0.74", "-4.54907, -119.719, 8.7014, 0.74", "-4.83522, -120.107, 8.6883, 1.03", "-5.33599, -120.72, 8.67397, 1.03", "-6.03209, -121.547, 8.6684, 1.03", "-6.88014, -122.538, 8.68297, 1.18", "-6.92563, -122.592, 8.68145, 1.18", "-7.29303, -123.041, 8.65152, 1.55", "-7.54031, -123.393, 8.60225, 1.55", "-7.89614, -123.967, 8.48951, 0.96", "-8.26419, -124.715, 8.31687, 0.81", "-8.58407, -125.564, 8.10231, 0.59", "-8.80399, -126.259, 7.92204, 0.59", "-9.16022, -127.679, 7.54071, 0.59", "-9.17549, -127.759, 7.52324, 0.59", "-9.23304, -128.27, 7.44915, 0.88", "-9.25224, -128.754, 7.43239, 1.11", "-9.25374, -128.895, 7.44559, 1.11", "-9.25503, -129.175, 7.49572, 1.11", "-9.33672, -130.182, 7.77957, 0.44", "-9.57584, -131.046, 8.03078, 0.44", "-9.8394, -131.541, 8.17538, 0.88", "-10.1547, -131.937, 8.27768, 0.96", "-10.4854, -132.261, 8.34276, 0.96", "-11.1403, -132.776, 8.41339, 0.96", "-12.0361, -133.373, 8.43931, 0.96", "-12.4377, -133.598, 8.44826, 0.96", "-13.0269, -133.909, 8.45606, 0.59", "-13.525, -134.18, 8.46357, 0.44", "-13.8744, -134.417, 8.47011, 0.96", "-14.2968, -134.786, 8.48183, 1.25" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_86",
    "id" : "dend_86",
    "points3d" : [ "4.14087, -100.561, 4.89249, 1.99", "4.21336, -101.081, 4.89249, 1.99", "4.29188, -102.223, 4.89249, 1.99", "4.24837, -103.66, 4.89249, 1.99", "4.23741, -103.732, 4.89249, 1.99", "4.13057, -104.398, 4.86904, 1.84", "3.96738, -105.414, 4.81787, 1.62", "3.84976, -106.21, 4.76755, 1.25", "3.77885, -107.459, 4.67861, 1.03", "3.88682, -108.88, 4.57689, 1.03", "4.23067, -110.598, 4.46272, 1.03", "4.25209, -110.667, 4.45846, 1.03", "4.83988, -112.218, 4.37549, 1.18", "5.65033, -114.135, 4.20785, 1.33", "6.29442, -115.655, 4.04406, 1.62", "6.74747, -116.811, 3.88218, 1.25", "7.05653, -117.76, 3.72913, 1.33", "7.40687, -119.173, 3.4614, 1.33", "7.64698, -120.825, 3.08643, 1.33", "7.70755, -122.482, 2.65896, 1.33", "7.65125, -123.759, 2.30242, 1.33", "7.64431, -123.828, 2.28283, 1.33", "7.54552, -124.614, 2.06965, 1.62", "7.51849, -124.899, 2.00759, 1.62", "7.48076, -125.837, 1.91124, 1.62", "7.48851, -125.909, 1.90709, 1.62", "7.69756, -126.703, 1.90709, 1.62", "7.73756, -126.803, 1.91214, 1.62", "8.24974, -127.914, 2.00088, 1.62", "8.28031, -127.977, 2.00693, 1.62", "8.79613, -129.042, 2.1205, 1.62", "9.31792, -130.227, 2.25038, 1.62", "9.80888, -131.574, 2.39699, 1.62", "10.063, -132.561, 2.4966, 2.5", "10.1135, -133.081, 2.54111, 3.09", "10.1032, -133.488, 2.56592, 3.09", "10.0369, -134.301, 2.59785, 2.36", "9.92365, -135.462, 2.63749, 1.84", "9.83916, -136.42, 2.6607, 1.55", "9.73283, -138.148, 2.7167, 1.55", "9.6363, -140.145, 2.78642, 1.55", "9.59694, -141.813, 2.85001, 1.55", "9.60824, -142.961, 2.89962, 1.55", "9.67667, -144.218, 2.96324, 1.92", "9.68319, -144.278, 2.96685, 1.92" ],
    "parent" : "dend_85",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_83",
    "id" : "dend_83",
    "points3d" : [ "-21.0833, 79.6608, 58.2293, 0.22", "-22.8161, 79.7602, 61.1099, 0.22", "-23.2246, 79.7738, 61.6804, 1.62", "-23.2658, 79.7741, 61.7378, 1.62", "-23.7583, 79.8087, 62.3806, 1.92", "-25.2626, 79.9698, 64.2023, 0.29", "-25.743, 80.0283, 64.7487, 0.29", "-26.2338, 80.1071, 65.1843, 0.29", "-27.2796, 80.3378, 66.0637, 0.29", "-28.131, 80.5376, 66.7251, 0.29", "-28.5385, 80.6415, 67.0045, 0.29", "-28.8362, 80.729, 67.1365, 1.03", "-29.1051, 80.8202, 67.256, 1.4", "-29.6943, 81.0574, 67.4615, 1.4", "-29.769, 81.0855, 67.4654, 1.4", "-30.009, 81.1249, 67.4749, 1.4" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_82",
    "id" : "dend_82",
    "points3d" : [ "-21.0833, 79.6608, 58.2293, 0.22", "-21.4459, 80.6492, 58.593, 0.22", "-21.7233, 81.4055, 58.8714, 0.22", "-21.8606, 81.7796, 59.009, 0.66", "-21.8874, 81.8528, 59.0359, 0.66", "-22.0308, 82.2436, 59.1798, 0.74" ],
    "parent" : "dend_81",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-2.52373, 39.1779, -3.40299, 1.25", "-3.23214, 39.5456, -3.78434, 1.25", "-4.30957, 40.1393, -4.88157, 1.25", "-4.35752, 40.1707, -4.94083, 1.25", "-4.95025, 40.7112, -5.95641, 0.96", "-5.21764, 40.9981, -6.48814, 0.96", "-5.68437, 41.6309, -7.65152, 1.25", "-6.19569, 42.574, -9.50821, 1.25", "-6.28675, 42.8547, -10.0325, 1.4", "-6.51584, 43.9577, -11.8872, 1.4", "-6.51929, 44.0041, -11.9553, 1.4", "-6.59775, 45.2467, -13.5108, 1.4", "-6.60159, 45.2961, -13.5613, 1.4", "-6.72134, 46.1091, -14.2972, 1.4", "-6.74663, 46.2163, -14.3926, 1.4", "-7.2387, 47.5528, -15.4147, 1.4", "-7.75243, 48.6364, -16.1665, 1.4", "-7.81731, 48.7517, -16.2399, 1.4", "-8.6086, 50.2291, -17.0821, 1.4", "-8.63722, 50.2866, -17.1099, 1.4", "-9.16463, 51.4502, -17.59, 1.4", "-9.45849, 52.194, -17.8295, 1.4", "-10.0409, 54.0661, -18.3268, 1.18", "-10.5464, 55.9836, -18.7333, 1.18", "-10.8605, 57.5501, -18.9529, 1.18", "-10.8725, 57.6193, -18.9611, 1.18", "-11.023, 58.725, -19.0653, 1.69", "-11.2515, 60.2453, -19.1574, 1.69", "-11.2784, 60.3932, -19.1584, 1.69", "-11.7133, 61.9876, -19.217, 0.81", "-12.073, 62.953, -19.2818, 0.81", "-12.1813, 63.1928, -19.303, 0.81", "-12.7067, 64.1784, -19.4397, 0.81", "-12.7423, 64.2377, -19.4507, 0.81", "-13.4738, 65.4749, -19.7007, 0.81", "-13.9898, 66.2937, -19.8964, 0.81", "-14.4014, 66.9869, -20.0743, 1.25", "-14.7648, 67.6478, -20.2456, 1.69", "-14.7984, 67.7208, -20.2642, 1.69", "-15.3585, 69.0458, -20.5697, 1.69" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.52373, 39.1779, -3.40299, 2.58", "-1.64174, 40.7223, -3.85518, 2.58", "-1.22438, 41.5789, -4.08432, 2.28", "-0.760827, 42.6707, -4.34767, 2.06", "-0.370606, 43.7701, -4.57889, 1.84", "-0.0232486, 44.8035, -4.81552, 1.84", "0.247032, 45.5804, -5.10297, 1.69", "0.565528, 46.5531, -5.59419, 1.69", "0.782858, 47.2253, -5.97301, 1.69", "1.13218, 48.223, -6.55155, 1.69", "1.51011, 49.2065, -7.14759, 1.47", "2.52306, 51.634, -8.70237, 1.47", "2.87845, 52.432, -9.26337, 1.47", "3.313, 53.3727, -9.93406, 1.47", "3.71985, 54.2551, -10.5414, 1.92", "3.96319, 54.7857, -10.8726, 1.92", "4.45016, 55.9388, -11.4757, 1.77", "4.94872, 57.0777, -11.9381, 1.25", "5.38348, 57.9257, -12.4807, 1.25", "5.57358, 58.2283, -12.7635, 1.11", "5.89207, 58.6363, -13.2301, 1.11", "6.35376, 59.0933, -13.8346, 1.4", "7.18114, 59.7512, -14.8129, 1.4", "9.16032, 61.0501, -16.9581, 0.96", "10.0371, 61.5534, -17.8817, 0.96", "10.6927, 61.9094, -18.5663, 0.96", "11.4897, 62.3372, -19.4174, 0.96", "11.6331, 62.4149, -19.568, 0.96", "12.1641, 62.7361, -20.1374, 1.62", "12.2116, 62.7719, -20.1794, 1.62", "13.1508, 63.6148, -20.9967, 1.62", "14.0394, 64.5083, -21.7729, 1.84", "14.0809, 64.5536, -21.808, 1.84", "15.1729, 65.7835, -22.6526, 1.84", "16.0055, 66.7429, -23.2361, 1.84", "16.7734, 67.5904, -23.6318, 2.28", "17.2263, 68.068, -23.7748, 2.65", "17.2832, 68.1266, -23.786, 2.65", "17.826, 68.6628, -23.8643, 2.65", "17.9066, 68.735, -23.8648, 2.65", "19.2217, 69.746, -23.8772, 2.65", "19.3035, 69.8045, -23.8783, 2.65" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_131",
    "id" : "dend_131",
    "points3d" : [ "65.2091, -134.101, 22.1954, 0.96", "64.8128, -135.561, 21.4169, 0.96", "64.6482, -136.238, 21.1118, 1.25", "64.5444, -136.775, 20.8996, 1.25", "64.4632, -137.859, 20.4873, 1.4", "64.45, -138.976, 20.0707, 1.11", "64.5276, -140.013, 19.6997, 0.81", "64.6159, -140.461, 19.5859, 0.81", "64.8341, -141.021, 19.4613, 0.81", "65.5814, -142.245, 19.2029, 0.81", "65.6307, -142.298, 19.1935, 0.81", "66.3843, -142.889, 19.0675, 1.25", "66.5027, -142.964, 19.0501, 1.25", "67.0968, -143.318, 18.9729, 1.55", "67.1909, -143.37, 18.9632, 1.55", "67.9087, -143.778, 18.9244, 1.55", "68.0084, -143.833, 18.9191, 1.55", "68.5295, -144.14, 18.8927, 1.55", "68.5897, -144.176, 18.8904, 1.55", "68.9686, -144.402, 18.8796, 1.55", "69.1158, -144.489, 18.8765, 1.55", "69.7732, -144.879, 18.8674, 1.03", "70.5011, -145.387, 18.8588, 0.74", "71.1593, -145.979, 18.8368, 0.66", "71.2228, -146.056, 18.8333, 0.66", "71.8108, -146.991, 18.7875, 0.59", "71.8427, -147.054, 18.784, 0.59", "72.1805, -148.008, 18.7265, 0.59", "72.418, -148.979, 18.664, 1.25", "72.5824, -149.912, 18.558, 1.77", "72.6438, -150.271, 18.4862, 1.77", "72.6584, -150.346, 18.4605, 1.77", "72.7983, -150.786, 18.2437, 1.77", "72.8226, -150.845, 18.2076, 1.77", "73.375, -151.856, 17.5151, 1.33", "73.8837, -152.687, 16.9124, 0.59", "74.6321, -153.843, 16.0727, 0.59", "75.3743, -154.944, 15.3014, 0.59", "75.4096, -154.994, 15.2673, 0.59", "76.6454, -156.655, 14.3023, 0.59", "76.693, -156.715, 14.2768, 0.59", "76.9844, -157.067, 14.1813, 1.33", "77.455, -157.627, 14.1258, 1.33", "77.5, -157.681, 14.1272, 1.33", "78.8802, -159.384, 14.2552, 1.33", "79.3362, -159.977, 14.3176, 1.33", "79.378, -160.034, 14.3162, 1.33", "79.7519, -160.562, 14.2466, 0.44", "80.1515, -161.131, 14.0539, 0.44", "80.6779, -161.84, 13.7117, 0.44", "81.0544, -162.315, 13.3835, 1.4", "81.9622, -163.413, 12.5294, 1.62", "82.232, -163.723, 12.285, 1.62", "83.2389, -164.838, 11.3773, 0.81", "84.2079, -165.884, 10.5617, 0.81", "85.0296, -166.731, 9.93546, 1.03", "85.143, -166.846, 9.86355, 1.03", "85.9395, -167.685, 9.45782, 1.03", "85.985, -167.739, 9.43897, 1.03", "86.7014, -168.752, 9.3024, 1.03", "86.7358, -168.813, 9.30056, 1.03", "87.0329, -169.463, 9.34762, 1.4", "87.2839, -170.022, 9.3965, 1.47", "87.6391, -170.891, 9.40511, 0.88", "87.8925, -171.506, 9.37317, 0.66", "88.0328, -171.837, 9.33359, 0.66", "88.4016, -172.635, 8.94629, 0.44", "88.7042, -173.163, 8.50627, 0.37", "89.3174, -174.037, 7.51503, 0.44", "89.3927, -174.124, 7.39314, 1.11", "89.8241, -174.531, 6.74757, 1.33", "91.6082, -175.936, 4.32447, 0.37", "92.022, -176.215, 3.83735, 0.37", "92.4564, -176.489, 3.37485, 0.96", "93.2581, -176.946, 2.59704, 1.33", "94.3504, -177.539, 1.59564, 1.69", "95.4467, -178.092, 0.706611, 1.92", "96.5109, -178.62, 0.107733, 1.92", "96.574, -178.654, 0.0704686, 1.92" ],
    "parent" : "dend_129",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_130",
    "id" : "dend_130",
    "points3d" : [ "65.2091, -134.101, 22.1954, 0.29", "65.7441, -133.077, 21.8644, 0.29", "66.1173, -132.363, 21.6336, 0.29", "66.1444, -132.311, 21.6169, 0.29", "66.5289, -131.575, 21.3791, 0.29", "66.5603, -131.515, 21.3596, 0.29", "66.932, -130.804, 21.1297, 0.29" ],
    "parent" : "dend_129",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_116",
    "id" : "dend_116",
    "points3d" : [ "-14.2968, -134.786, 8.48183, 0.59", "-15.0255, -135.292, 8.36633, 0.59", "-15.4779, -135.607, 8.29463, 0.44", "-16.3008, -136.179, 8.1642, 0.44", "-16.3664, -136.225, 8.1538, 0.44", "-17.5111, -137.021, 7.97237, 0.44" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_115",
    "id" : "dend_115",
    "points3d" : [ "-14.2968, -134.786, 8.48183, 0.29", "-12.6884, -135.391, 8.28053, 0.29", "-11.3211, -135.985, 8.12846, 0.22", "-11.1731, -136.054, 8.11333, 0.22", "-10.3788, -136.362, 8.37089, 0.22", "-10.2601, -136.403, 8.43324, 0.22", "-9.8105, -136.542, 8.53628, 0.37", "-9.38693, -136.665, 8.57513, 0.37", "-9.31214, -136.685, 8.54716, 0.37", "-6.65775, -137.274, 6.83242, 0.37", "-6.59641, -137.285, 6.78146, 0.37", "-3.73962, -137.876, 3.87382, 0.15", "-3.35336, -137.959, 3.39335, 0.15", "-2.87718, -138.075, 2.67009, 0.44", "-2.84422, -138.084, 2.60821, 0.44", "-2.71816, -138.127, 2.28682, 0.44", "-2.69293, -138.136, 2.22219, 0.44", "-2.61649, -138.208, 2.11096, 0.44", "-2.58713, -138.229, 2.04999, 0.44", "-2.46034, -138.343, 2.04999, 0.66" ],
    "parent" : "dend_114",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_93",
    "id" : "dend_93",
    "points3d" : [ "9.68319, -144.278, 2.96685, 0.81", "9.50254, -145.132, 3.29839, 0.81", "9.20224, -146.807, 3.93992, 0.81", "9.18837, -146.901, 3.97457, 0.81", "8.99251, -148.373, 4.4868, 0.81", "8.78586, -150.037, 5.02263, 0.66", "8.6662, -151.067, 5.32626, 0.66", "8.65748, -151.213, 5.36363, 0.66", "8.655, -151.691, 5.44244, 0.88", "8.65748, -152.351, 5.51804, 0.59", "8.664, -153.078, 5.56165, 0.74", "8.66763, -153.819, 5.56165, 0.74", "8.63012, -155.379, 5.56165, 0.59", "8.54746, -156.951, 5.59975, 0.59", "8.49821, -157.582, 5.6269, 0.96", "8.42888, -158.238, 5.66708, 0.96", "8.28575, -159.093, 5.80619, 0.88", "8.06675, -159.954, 6.04733, 0.66", "7.76793, -160.705, 6.36493, 0.66", "7.73665, -160.762, 6.39615, 0.66", "7.24707, -161.559, 6.86781, 0.66", "6.25979, -163.048, 7.77699, 0.66", "5.95489, -163.49, 8.05119, 1.25", "5.62736, -164.018, 8.32152, 1.47", "5.34776, -164.522, 8.44682, 1.25", "5.15255, -164.899, 8.47771, 1.03", "4.77635, -165.676, 8.40341, 0.81", "4.74779, -165.739, 8.38787, 0.81", "4.17415, -167.091, 7.92622, 0.81", "3.55813, -168.635, 7.30065, 0.81", "3.53025, -168.706, 7.26941, 0.81", "3.37554, -169.099, 7.08477, 1.25", "3.14661, -169.678, 6.80983, 1.55", "2.56793, -171.103, 6.18465, 1.55", "2.54164, -171.164, 6.16136, 1.55", "2.19217, -172.039, 6.00337, 1.11", "2.16648, -172.107, 5.99756, 1.11", "1.83254, -173.037, 5.99567, 1.11", "1.65091, -173.616, 6.04954, 1.47", "1.44269, -174.33, 6.18736, 1.47", "1.17123, -175.464, 6.40004, 1.33", "1.06965, -176.094, 6.50725, 1.18", "1.05878, -176.174, 6.52578, 1.18", "0.912541, -177.177, 6.80428, 1.03", "0.890905, -177.31, 6.8443, 1.03", "0.698491, -178.288, 7.17781, 0.74", "0.39304, -179.473, 7.59048, 0.74", "-0.100318, -180.957, 8.14364, 0.74", "-0.42466, -181.779, 8.44582, 0.74", "-0.452594, -181.84, 8.46757, 0.74", "-0.812856, -182.603, 8.71458, 0.96", "-1.16913, -183.348, 8.95268, 1.03", "-1.55884, -184.185, 9.18434, 1.03", "-1.9119, -185.064, 9.36391, 1.18", "-2.20632, -185.872, 9.54886, 1.18", "-2.4764, -186.64, 9.72882, 1.33", "-2.89499, -187.804, 10.0043, 1.33", "-3.21439, -188.676, 10.2373, 1.47", "-3.46623, -189.326, 10.4479, 1.25", "-3.87144, -190.275, 10.7927, 0.74", "-4.27003, -191.101, 11.1018, 0.74", "-4.75883, -191.997, 11.4282, 0.74", "-4.78817, -192.046, 11.4447, 0.74", "-5.33176, -192.988, 11.7457, 0.59", "-5.78757, -193.778, 11.9634, 0.44", "-6.24063, -194.594, 12.1356, 0.44", "-6.39961, -194.92, 12.1934, 0.81", "-6.64846, -195.532, 12.2715, 1.03", "-6.88764, -196.208, 12.3635, 1.03", "-7.09814, -196.99, 12.4612, 1.03", "-7.11542, -197.137, 12.4868, 1.03", "-7.01787, -197.965, 12.6669, 1.03", "-6.99818, -198.033, 12.684, 1.03", "-6.51784, -199.14, 13.1518, 0.29", "-6.3341, -199.478, 13.346, 0.29", "-5.84245, -200.229, 13.8594, 0.29", "-5.31372, -201.042, 14.4511, 0.29", "-5.28034, -201.093, 14.491, 0.29", "-4.57627, -202.32, 15.3281, 0.29", "-4.5317, -202.413, 15.3814, 0.29", "-4.45794, -202.733, 15.5354, 0.81", "-4.44354, -203.295, 15.736, 0.81", "-4.44766, -203.365, 15.7534, 0.81", "-4.49617, -204.407, 15.8966, 0.81", "-4.52167, -204.763, 15.9073, 0.59", "-4.59029, -205.417, 15.9198, 0.74", "-4.69263, -206.141, 15.9268, 0.88", "-4.76914, -206.57, 15.927, 0.59", "-4.92594, -207.294, 15.9209, 0.52", "-5.1697, -208.133, 15.9046, 0.52", "-5.26284, -208.409, 15.8967, 0.96", "-5.46971, -208.959, 15.8814, 1.18", "-5.70391, -209.535, 15.866, 1.18", "-5.89951, -210.019, 15.8548, 1.18", "-6.16401, -210.69, 15.8426, 0.59", "-6.42415, -211.465, 15.8347, 0.59", "-6.58441, -212.025, 15.8347, 1.18", "-6.6022, -212.096, 15.8347, 1.18", "-6.74963, -212.812, 15.8347, 1.33", "-6.77352, -212.951, 15.8333, 1.33", "-6.86441, -213.605, 15.8206, 1.33", "-7.00227, -214.398, 15.7984, 1.4", "-7.05546, -214.629, 15.8099, 1.4", "-7.08215, -214.706, 15.8199, 1.4", "-7.44532, -215.48, 16.0335, 0.29", "-7.4822, -215.549, 16.0592, 0.29", "-7.70638, -215.926, 16.2382, 0.29", "-8.16067, -216.695, 16.6372, 0.52", "-8.44185, -217.22, 17.034, 0.52", "-8.66452, -217.738, 17.4719, 0.74", "-8.81223, -218.156, 17.8571, 0.74", "-8.83776, -218.261, 17.9507, 0.74", "-8.89063, -218.715, 18.3195, 0.74", "-8.97193, -220.414, 19.4568, 0.52", "-9.01256, -221.115, 19.8199, 0.52", "-9.02305, -221.195, 19.839, 0.52", "-9.13768, -221.696, 19.847, 0.66", "-9.34137, -222.355, 19.7367, 0.66", "-9.63907, -223.111, 19.482, 0.66", "-10.1759, -224.218, 18.861, 0.66", "-10.8797, -225.317, 18.1708, 0.66", "-11.1333, -225.648, 17.9605, 0.66", "-11.1756, -225.697, 17.9318, 0.66", "-11.6115, -226.164, 17.673, 1.03", "-12.4929, -227.09, 17.2251, 0.81", "-13.5553, -228.231, 16.8157, 0.81", "-14.2037, -228.943, 16.6305, 0.81", "-15.121, -230.033, 16.3877, 0.81", "-15.1642, -230.088, 16.3778, 0.81", "-15.4882, -230.541, 16.3492, 1.18", "-15.8007, -231.139, 16.4162, 1.18", "-15.8219, -231.205, 16.4279, 1.18", "-15.9106, -231.924, 16.5844, 1.18", "-15.9123, -232.004, 16.6016, 1.18", "-15.8794, -233.034, 16.798, 0.88", "-15.7731, -234.558, 17.0599, 0.74", "-15.7594, -234.707, 17.0825, 0.74", "-15.5644, -236.476, 17.3035, 0.74", "-15.4001, -237.857, 17.4706, 0.74", "-15.2848, -238.79, 17.5725, 1.03", "-15.1989, -239.464, 17.6289, 1.03", "-15.1175, -240.145, 17.6879, 1.25", "-14.9692, -241.351, 17.7898, 1.25", "-14.8286, -242.803, 17.9072, 0.81", "-14.8248, -242.874, 17.9128, 0.81", "-14.8504, -244.569, 18.0357, 0.74", "-14.9668, -246.449, 18.1557, 0.74", "-15.0181, -246.978, 18.1823, 0.74", "-15.156, -247.879, 18.2101, 0.74", "-15.4048, -248.989, 18.18, 0.59", "-15.7738, -250.095, 18.1171, 0.59", "-15.8079, -250.156, 18.1065, 0.59", "-16.3604, -250.847, 17.8902, 1.11", "-16.6993, -251.211, 17.7394, 1.33", "-17.4172, -251.938, 17.3605, 1.03", "-17.9915, -252.531, 16.9932, 0.81", "-18.7524, -253.347, 16.4565, 0.74", "-18.7939, -253.399, 16.4262, 0.74", "-19.1303, -253.878, 16.1718, 0.74", "-19.4102, -254.51, 15.9139, 0.74", "-19.583, -255.393, 15.6755, 0.74", "-19.5911, -255.613, 15.6324, 0.74", "-19.5122, -256.406, 15.5494, 0.59", "-19.4836, -256.556, 15.5356, 0.59", "-19.2473, -257.29, 15.4804, 0.59", "-19.0232, -257.833, 15.4561, 0.88", "-18.9928, -257.9, 15.4561, 0.88", "-18.6345, -258.648, 15.4561, 0.88", "-18.5563, -258.832, 15.4561, 0.88", "-18.4506, -259.151, 15.4561, 0.59", "-18.396, -259.653, 15.4952, 0.52", "-18.4721, -260.092, 15.5605, 0.74", "-18.4944, -260.146, 15.5765, 0.74", "-18.8868, -260.822, 15.8429, 0.74", "-18.924, -260.879, 15.8669, 0.74", "-19.5239, -261.749, 16.2447, 0.66", "-20.0685, -262.514, 16.5836, 0.66", "-20.7472, -263.458, 17.0049, 0.66", "-20.8225, -263.571, 17.0514, 0.66", "-21.3834, -264.469, 17.3977, 0.88", "-21.4522, -264.597, 17.4365, 0.88", "-21.7514, -265.3, 17.5743, 1.18", "-21.773, -265.367, 17.5824, 1.18", "-22.0105, -266.132, 17.6065, 1.18", "-22.0372, -266.21, 17.6083, 1.18", "-22.2929, -266.898, 17.6186, 0.96", "-22.3191, -266.966, 17.6192, 0.96", "-22.6204, -267.808, 17.6192, 0.96", "-22.9185, -268.685, 17.593, 0.66", "-23.2019, -269.583, 17.5448, 0.59", "-23.4621, -270.528, 17.4809, 0.59", "-23.4874, -270.633, 17.4726, 0.59", "-23.7045, -271.665, 17.3869, 0.59", "-23.8069, -272.238, 17.3357, 0.96", "-23.9331, -273.169, 17.187, 1.11", "-24.0595, -274.224, 16.9274, 1.11", "-24.0695, -274.291, 16.9071, 1.11", "-24.3471, -275.588, 16.4959, 1.11", "-24.3677, -275.661, 16.4718, 1.11", "-24.8303, -276.944, 16.0687, 0.74", "-25.1187, -277.607, 15.8613, 0.44", "-25.6797, -278.71, 15.5456, 0.44", "-26.2821, -279.766, 15.3004, 0.44", "-26.5125, -280.128, 15.2438, 1.11", "-27.0339, -280.919, 15.1862, 1.11", "-27.5453, -281.672, 15.2042, 1.25", "-28.0809, -282.494, 15.2536, 1.25", "-28.71, -283.56, 15.3271, 1.25", "-29.033, -284.175, 15.3735, 0.81", "-29.3998, -285.007, 15.4185, 0.81", "-29.6522, -285.785, 15.4422, 0.81", "-29.8657, -286.712, 15.4462, 0.66", "-29.9232, -287.478, 15.4206, 0.52", "-29.9163, -287.551, 15.4149, 0.52", "-29.7624, -288.248, 15.2858, 1.03", "-29.5632, -288.871, 15.1376, 1.33", "-29.5288, -288.962, 15.1141, 1.33", "-29.2759, -289.659, 14.867, 1.33", "-29.0543, -290.485, 14.5474, 1.33", "-28.8384, -291.509, 14.1506, 0.59", "-28.6811, -292.641, 13.73, 0.59", "-28.6249, -293.313, 13.4751, 0.59", "-28.5967, -294.769, 12.9484, 0.59", "-28.6459, -295.733, 12.6102, 0.59", "-28.7094, -296.271, 12.4501, 1.03", "-28.8552, -297.123, 12.2725, 1.03", "-28.8841, -297.26, 12.2498, 1.03", "-29.0647, -298.187, 12.1679, 1.03", "-29.0749, -298.257, 12.1679, 1.03", "-29.1131, -299.5, 12.2221, 1.03", "-29.0659, -300.177, 12.278, 0.52", "-29.0528, -300.256, 12.2871, 0.52", "-28.7404, -301.552, 12.6813, 0.52", "-28.7101, -301.645, 12.7278, 0.52", "-28.3178, -302.84, 13.5432, 0.52", "-28.1339, -303.369, 14.0232, 0.52", "-28.1199, -303.419, 14.0746, 0.52", "-27.7748, -305.057, 15.9524, 0.52", "-27.768, -305.13, 16.0471, 0.52", "-27.7564, -305.802, 16.7649, 0.52", "-27.7612, -305.876, 16.8328, 0.52", "-27.7877, -306.456, 17.2654, 0.52", "-27.7871, -306.517, 17.3001, 0.52", "-27.6479, -307.975, 17.7929, 0.52", "-27.3652, -309.574, 18.236, 0.52", "-27.341, -309.675, 18.2613, 0.52", "-27.1974, -310.196, 18.3868, 0.88", "-27.1758, -310.261, 18.4013, 0.88", "-26.8996, -311.05, 18.5344, 1.03", "-26.5264, -311.953, 18.5344, 1.03" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_87",
    "id" : "dend_87",
    "points3d" : [ "9.68319, -144.278, 2.96685, 1.25", "10.1999, -145.115, 2.96578, 1.25", "10.5387, -145.902, 2.9638, 1.25", "10.8158, -146.687, 2.96531, 1.03", "11.119, -147.791, 2.89867, 0.59", "11.1318, -147.861, 2.89177, 0.59", "11.2514, -148.932, 2.76182, 0.59", "11.2263, -149.916, 2.61793, 0.59", "11.2195, -149.975, 2.60777, 0.59", "11.0762, -150.975, 2.42286, 0.59", "10.9617, -151.714, 2.2817, 0.59", "10.9325, -152.411, 2.16084, 0.88", "11.0023, -152.989, 2.07429, 1.03", "11.0575, -153.203, 2.05095, 1.03", "11.3876, -154.079, 1.99464, 1.03", "11.453, -154.207, 1.99464, 1.03", "12.0854, -155.153, 1.99464, 1.03", "12.5382, -155.733, 1.99464, 1.11", "12.5769, -155.778, 1.99464, 1.11", "13.0065, -156.248, 1.99464, 1.11", "13.0673, -156.309, 1.99464, 1.11", "13.584, -156.784, 1.99464, 1.25", "13.9789, -157.125, 1.99464, 1.25", "14.207, -157.332, 1.9932, 1.03", "14.5891, -157.743, 1.9884, 0.81", "14.8768, -158.114, 1.98252, 0.59", "15.2439, -158.772, 1.91749, 0.59", "15.2638, -158.851, 1.90231, 0.59", "15.2894, -159.27, 1.79361, 0.59", "15.2574, -160.041, 1.58567, 0.59", "15.2528, -160.11, 1.56868, 0.59", "15.1829, -161.189, 1.34106, 0.59", "15.1661, -161.88, 1.23197, 0.59", "15.177, -162.202, 1.21777, 1.03", "15.254, -163.125, 1.3053, 1.33", "15.3857, -164.091, 1.47414, 1.33", "15.5543, -165.082, 1.70164, 1.33", "15.9236, -166.7, 2.22036, 1.33", "16.4902, -168.743, 2.98792, 1.33", "17.0027, -170.3, 3.69888, 0.74", "17.273, -170.999, 4.06659, 0.74", "17.3498, -171.181, 4.17042, 0.74", "17.8957, -172.399, 4.84312, 0.74", "18.1504, -172.937, 5.12446, 0.74", "18.5519, -173.813, 5.47995, 1.18", "19.023, -175.041, 5.77777, 1.18", "19.3529, -176.08, 5.94682, 1.18", "19.8137, -177.816, 6.10076, 1.18", "19.8282, -177.885, 6.10087, 1.18", "20.068, -179.182, 6.04735, 1.18", "20.2733, -180.447, 5.92151, 0.81", "20.3541, -180.993, 5.85871, 0.74", "20.3964, -181.291, 5.82236, 0.74", "20.5422, -182.274, 5.70689, 0.74", "20.5566, -182.353, 5.69923, 0.74", "20.7116, -182.956, 5.68687, 1.47", "20.9901, -183.759, 5.78639, 1.47", "21.245, -184.398, 5.9052, 1.47", "21.6978, -185.58, 6.15462, 1.47", "21.854, -186.069, 6.25785, 1.69", "22.1751, -187.22, 6.49653, 1.84", "22.3909, -188.151, 6.67679, 0.88", "22.5081, -188.834, 6.79655, 0.66", "22.7048, -190.482, 7.05627, 0.66", "22.7811, -192.084, 7.22703, 0.66", "22.7808, -192.156, 7.23017, 0.66", "22.7091, -193.715, 7.18546, 0.66", "22.6861, -194.547, 7.11825, 0.96", "22.6878, -194.618, 7.11616, 0.96", "22.8122, -195.522, 7.17778, 0.74", "23.0669, -196.508, 7.35283, 0.74", "23.0877, -196.567, 7.38593, 0.74", "23.524, -197.567, 8.28201, 0.74", "24.0612, -198.674, 9.45838, 1.03", "24.3787, -199.299, 10.1384, 1.62", "24.6374, -199.789, 10.6719, 1.62", "25.8096, -202.107, 13.0452, 0.66", "26.044, -202.627, 13.4937, 0.66", "26.1954, -203.006, 13.7196, 0.66", "26.6121, -204.15, 14.115, 0.66", "26.918, -204.992, 14.2817, 1.11", "27.2512, -205.89, 14.3713, 1.4", "27.6673, -207.028, 14.432, 1.11", "28.4249, -209.168, 14.6644, 1.11", "28.4478, -209.234, 14.6749, 1.11", "29.3088, -211.659, 15.1995, 0.96", "29.3326, -211.722, 15.2208, 0.96", "29.8949, -213.187, 15.9409, 0.81", "30.0209, -213.539, 16.1786, 0.81", "30.152, -213.911, 16.4992, 1.11", "30.2131, -214.083, 16.6576, 1.11", "30.7387, -215.32, 17.8429, 1.11", "31.0737, -215.975, 18.3781, 0.59", "31.108, -216.028, 18.4107, 0.59", "31.6921, -216.84, 18.8564, 0.59", "31.7516, -216.922, 18.894, 0.59", "32.588, -218.137, 19.258, 0.59", "32.7575, -218.397, 19.277, 0.59", "33.3576, -219.361, 19.2731, 0.59", "33.4317, -219.493, 19.2699, 0.59", "33.5601, -219.773, 19.2568, 1.03", "33.8484, -220.728, 19.1941, 1.03", "33.9387, -221.614, 19.112, 1.47", "33.9375, -221.687, 19.1059, 1.47", "33.8843, -222.058, 19.0768, 1.47", "33.8317, -222.388, 19.0608, 1.47", "33.663, -223.391, 19.0474, 0.74", "33.6498, -223.461, 19.0489, 0.74", "33.5484, -224.087, 19.0772, 0.96", "33.5308, -224.227, 19.0829, 0.96", "33.4584, -225.068, 19.1109, 0.96", "33.4452, -226.152, 19.1375, 0.96", "33.4795, -226.696, 19.1399, 1.47", "33.5697, -227.584, 19.1305, 1.47", "33.5817, -227.663, 19.1287, 1.47", "33.7932, -228.824, 19.097, 1.47", "34.0671, -229.991, 19.0608, 1.47", "34.3355, -230.911, 19.0252, 1.18", "34.6144, -231.731, 18.9904, 1.47", "34.9701, -232.677, 18.987, 1.69", "35.0116, -232.783, 18.9892, 1.69", "35.2571, -233.381, 19.0759, 1.69", "35.6249, -234.275, 19.3044, 0.88", "36.0161, -235.233, 19.6377, 0.74", "36.914, -237.389, 20.5454, 0.74", "36.9556, -237.479, 20.5887, 0.74", "37.7635, -239.2, 21.6413, 0.74", "37.874, -239.435, 21.8174, 0.74", "38.0194, -239.768, 22.1102, 0.74", "38.0585, -239.866, 22.2068, 0.74", "38.2681, -240.795, 23.0388, 0.74", "38.4703, -242.813, 24.4864, 0.74", "38.4667, -242.896, 24.5278, 0.74", "38.3081, -244.03, 25.024, 0.74", "38.2934, -244.097, 25.0482, 0.74", "37.7314, -246.056, 25.5916, 0.74", "37.7112, -246.115, 25.6013, 0.74", "37.3785, -247.094, 25.6388, 0.74", "37.2345, -247.581, 25.6512, 1.18", "37.0723, -248.373, 25.6393, 1.18", "36.9982, -248.892, 25.6239, 0.81", "37.038, -250.567, 25.4867, 0.81", "37.0458, -250.637, 25.4786, 0.81", "37.3885, -251.944, 25.2801, 0.81", "37.9359, -253.386, 25.0212, 0.74", "37.9744, -253.455, 25.0073, 0.74", "39.2373, -255.221, 24.6177, 0.74", "39.2854, -255.275, 24.6102, 0.74", "40.1997, -256.251, 24.5734, 0.74", "40.2488, -256.301, 24.5771, 0.74", "41.2546, -257.397, 24.7891, 0.74", "41.3035, -257.458, 24.8081, 0.74", "42.3345, -259.062, 25.4729, 0.74", "42.6327, -259.62, 25.7504, 1.03", "43.0298, -260.568, 26.2625, 1.03", "43.0512, -260.628, 26.2931, 1.03", "43.3664, -261.71, 26.8264, 1.25", "43.6052, -262.622, 27.2051, 1.47", "43.9573, -264.173, 27.6531, 1.47", "44.1239, -264.935, 27.7712, 0.96", "44.4856, -266.684, 27.8221, 0.74", "44.5062, -266.788, 27.8142, 0.74", "44.8031, -268.509, 27.4747, 0.74", "45.0071, -269.884, 27.1183, 0.88", "45.2373, -271.545, 26.5935, 1.11", "45.3762, -272.637, 26.2402, 1.11", "45.5208, -273.859, 25.8484, 0.66", "45.7293, -275.456, 25.3474, 0.66", "45.9525, -276.881, 24.9339, 0.66", "45.9649, -276.949, 24.9181, 0.66", "46.0879, -277.516, 24.7954, 1.33", "46.3233, -278.335, 24.5744, 1.33", "46.7199, -279.435, 24.2255, 0.74", "47.1546, -280.546, 23.8754, 0.74", "47.1778, -280.613, 23.8595, 0.74", "47.5294, -281.802, 23.7307, 0.59", "47.8064, -282.861, 23.7143, 0.59", "47.8427, -283.009, 23.7256, 0.59", "48.2255, -284.78, 24.0161, 0.59", "48.5828, -286.655, 24.4774, 0.59", "48.8083, -287.897, 24.8558, 0.59", "48.8191, -287.962, 24.8799, 0.59", "48.9098, -288.55, 25.1066, 0.59", "49.0781, -289.52, 25.477, 0.74", "49.3679, -290.979, 26.0407, 0.74", "49.3788, -291.037, 26.0574, 0.74", "49.4728, -291.688, 26.2301, 1.33", "49.4796, -291.766, 26.2513, 1.33", "49.4959, -292.43, 26.3456, 1.55", "49.4772, -292.651, 26.3405, 1.55", "49.3035, -293.497, 26.1553, 1.11", "49.066, -294.403, 25.897, 0.88", "48.8105, -295.259, 25.6081, 0.88", "48.2988, -296.969, 24.8519, 0.52", "48.0361, -298.109, 24.2485, 0.52", "47.947, -299.111, 23.6644, 0.52", "47.9502, -299.18, 23.6194, 0.52", "48.0612, -299.7, 23.2861, 0.52", "48.5866, -300.736, 22.7958, 0.81", "49.4453, -301.826, 22.5651, 0.81", "50.3332, -302.761, 22.5462, 0.81", "50.3819, -302.812, 22.5542, 0.81", "51.0824, -303.647, 22.7598, 1.25", "51.5792, -304.42, 22.9939, 1.4", "51.7928, -304.862, 23.1456, 1.4", "52.1086, -305.924, 23.4636, 0.88", "52.2219, -306.527, 23.6119, 0.59", "52.3877, -307.834, 23.8523, 0.59", "52.4899, -309.221, 24.012, 0.59", "52.4919, -309.362, 24.0254, 0.59", "52.512, -310.429, 24.0893, 0.59", "52.5321, -310.816, 24.1184, 0.81", "52.6198, -311.463, 24.211, 0.88", "52.7434, -311.978, 24.3223, 0.44", "52.7671, -312.042, 24.34, 0.44", "53.3145, -313.305, 24.8259, 0.44", "53.8687, -314.395, 25.3584, 0.81", "54.1692, -314.999, 25.6811, 0.96", "54.3659, -315.428, 25.9137, 0.96", "54.3904, -315.498, 25.95, 0.96", "54.6594, -316.626, 26.497, 0.66", "54.671, -317.064, 26.6808, 0.44", "54.563, -317.797, 26.8496, 0.44", "54.3412, -318.675, 26.9723, 0.44", "54.1773, -319.241, 27.0009, 0.44", "54.162, -319.309, 26.988, 0.44", "54.1319, -319.513, 26.9065, 0.74", "54.1246, -319.608, 26.8664, 0.74", "54.1317, -320.622, 26.4399, 0.74", "54.1344, -320.689, 26.4173, 0.74", "54.1512, -322.04, 26.0698, 0.88", "54.1437, -322.498, 25.9871, 0.88", "54.1363, -323.089, 25.9182, 1.18", "54.1355, -323.159, 25.9132, 1.18", "54.1689, -324.396, 25.8074, 1.18", "54.2518, -325.414, 25.7222, 1.18", "54.3832, -326.238, 25.6707, 0.52", "54.6558, -327.315, 25.5644, 0.52", "54.6924, -327.41, 25.5514, 0.52", "55.3486, -328.674, 25.2842, 0.52", "55.7194, -329.205, 25.1193, 0.88", "56.2267, -329.819, 24.8769, 1.18", "56.2858, -329.887, 24.8499, 1.18", "56.8518, -330.556, 24.6082, 1.18", "57.2858, -331.21, 24.4145, 0.66", "57.3535, -331.343, 24.3828, 0.66", "57.5855, -331.969, 24.2365, 0.66", "57.8567, -332.997, 23.9307, 0.66", "57.9008, -333.204, 23.8633, 0.66", "58.1806, -334.884, 23.2841, 0.66", "58.265, -335.496, 23.0748, 1.18", "58.3652, -336.319, 22.7735, 1.47", "58.4827, -337.85, 22.1241, 1.77", "58.5082, -338.213, 21.9571, 2.06", "58.5153, -338.298, 21.9172, 2.06", "58.5808, -338.695, 21.7152, 2.06", "58.596, -338.755, 21.6832, 2.06", "59.0905, -340.025, 21.0296, 0.37", "59.4923, -340.838, 20.676, 0.37", "59.5278, -340.907, 20.6476, 0.37", "60.1751, -342.16, 20.2517, 0.37", "60.2053, -342.222, 20.2384, 0.37", "60.5491, -343.037, 20.1532, 0.37", "60.7186, -343.528, 20.1625, 0.88", "60.8378, -344.091, 20.2744, 0.81", "60.9666, -345.082, 20.5907, 0.52", "61.0192, -345.948, 20.9543, 0.52", "61.0701, -346.484, 21.192, 0.88", "61.1375, -347.076, 21.4748, 0.88", "61.4581, -348.737, 22.348, 0.52", "61.6923, -349.55, 22.7774, 0.52", "61.7377, -349.679, 22.8416, 0.52", "62.1566, -350.727, 23.3288, 0.52", "62.189, -350.807, 23.3603, 0.52", "62.721, -352.143, 23.7829, 0.52", "63.0525, -353.049, 23.9175, 0.52", "63.2185, -353.61, 23.9637, 0.96", "63.3955, -354.427, 23.984, 1.18", "63.5055, -355.443, 23.9474, 1.18", "63.5097, -355.537, 23.937, 1.18", "63.3956, -356.726, 23.6436, 0.44", "63.1923, -357.623, 23.3702, 0.44", "63.1143, -357.843, 23.2947, 0.44", "62.8344, -358.356, 23.1217, 0.44", "62.7657, -358.467, 23.0938, 0.44", "62.3758, -359.139, 23.0001, 0.44", "62.3263, -359.235, 22.9971, 0.44", "62.155, -359.645, 22.9751, 0.74", "61.9734, -360.368, 22.9294, 0.74", "61.874, -361.091, 22.8819, 0.74", "61.8649, -361.241, 22.8716, 0.74", "61.8705, -361.892, 22.8262, 0.88", "61.8741, -361.963, 22.8111, 0.88", "61.9699, -362.71, 22.5769, 1.11", "62.0853, -363.325, 22.3454, 1.11", "62.1375, -363.563, 22.2513, 1.11", "62.261, -364.032, 22.0739, 1.11", "62.7181, -365.586, 21.5513, 0.44", "63.089, -366.786, 21.1714, 0.44", "63.142, -366.967, 21.0959, 0.74", "63.3027, -367.538, 20.8202, 0.74", "63.4674, -368.268, 20.4488, 0.37", "63.6313, -369.332, 19.9041, 0.37", "63.6303, -369.402, 19.8655, 0.37", "63.3025, -370.951, 18.5826, 0.37", "63.2816, -371.016, 18.5195, 0.37", "63.1019, -371.395, 18.1155, 0.96", "62.8948, -371.721, 17.7208, 0.96", "62.3526, -372.468, 16.8055, 0.96", "61.6226, -373.485, 15.688, 0.52", "61.5913, -373.529, 15.6435, 0.52", "61.1747, -374.126, 15.0357, 0.52", "60.1138, -375.71, 13.436, 0.52", "59.7893, -376.229, 12.9205, 0.52", "59.5364, -376.684, 12.5233, 1.18", "59.1456, -377.531, 11.9003, 1.18", "59.1281, -377.579, 11.8676, 1.18", "59.0383, -377.97, 11.6256, 1.18", "59.012, -378.978, 11.1867, 0.59", "59.0765, -379.867, 10.828, 0.59", "59.1795, -380.657, 10.5738, 0.59", "59.2107, -380.86, 10.5362, 0.59", "59.2968, -381.52, 10.4645, 0.59", "59.4451, -382.962, 10.4063, 0.59", "59.4564, -383.113, 10.4115, 0.59", "59.4862, -384.393, 10.4949, 0.59", "59.4489, -385.56, 10.6022, 0.59", "59.3795, -386.32, 10.6115, 0.59", "59.2995, -386.744, 10.5837, 1.25", "59.0709, -387.501, 10.4512, 1.25", "58.7969, -388.414, 10.2085, 1.25", "58.7764, -388.48, 10.1837, 1.25", "58.2904, -390.395, 9.20413, 0.44", "58.1225, -391.318, 8.67223, 0.44", "58.1161, -391.378, 8.63566, 0.44", "58.1147, -392.623, 7.87629, 0.44", "58.1249, -392.688, 7.83196, 0.44", "58.3825, -393.522, 7.30747, 0.44", "58.4104, -393.579, 7.27635, 0.44", "58.5605, -393.809, 7.13597, 1.18", "58.9472, -394.384, 6.80304, 1.77", "59.7434, -395.503, 6.16161, 1.99", "60.1207, -396.069, 5.90024, 1.99", "60.1767, -396.166, 5.86849, 1.99", "60.5952, -396.973, 5.65434, 0.74", "60.9652, -397.896, 5.4197, 0.74", "61.0106, -398.058, 5.38454, 0.74", "61.0503, -398.837, 5.26899, 0.52", "60.8929, -399.767, 5.08847, 0.52", "60.873, -399.834, 5.06916, 0.52", "60.3809, -400.926, 4.65113, 0.52", "60.3259, -401.045, 4.59834, 0.52", "59.7731, -402.329, 3.9947, 0.52", "59.7527, -402.39, 3.96424, 0.52", "59.6933, -403.473, 3.44871, 0.52", "59.7202, -403.545, 3.42309, 0.52", "60.3032, -404.369, 3.21939, 0.52", "60.3498, -404.422, 3.20938, 0.52", "60.8597, -404.917, 3.18686, 0.81", "61.3049, -405.363, 3.22951, 1.18", "61.7435, -405.823, 3.34663, 1.4", "62.019, -406.133, 3.43901, 1.18", "62.4298, -406.769, 3.64079, 0.59", "62.7271, -407.678, 3.88738, 0.44", "62.7525, -407.891, 3.93886, 0.44", "62.7388, -408.604, 4.08665, 0.44", "62.7126, -408.814, 4.12016, 0.44", "62.4728, -410.13, 4.27179, 0.44", "62.2224, -411.307, 4.33641, 0.44", "62.1703, -411.585, 4.33641, 0.44", "62.1122, -411.944, 4.33641, 0.81", "61.9909, -412.821, 4.33641, 0.81", "61.9827, -412.913, 4.33641, 0.81", "61.981, -414.244, 4.33641, 0.81", "62.0052, -414.829, 4.33641, 1.25", "62.0163, -415.229, 4.33641, 1.62", "62.0211, -415.309, 4.33641, 1.62" ],
    "parent" : "dend_86",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_74",
    "id" : "dend_74",
    "points3d" : [ "-15.3585, 69.0458, -20.5697, 1.03", "-15.4944, 69.2184, -20.8913, 1.03", "-15.7863, 69.5267, -21.4406, 1.03", "-16.3957, 70.1234, -22.4833, 0.96", "-17.4351, 71.0524, -24.0711, 0.96", "-17.9337, 71.4376, -24.7311, 0.96", "-18.7157, 71.9101, -25.57, 0.96", "-19.5392, 72.2305, -26.1826, 0.81", "-19.6002, 72.2442, -26.2157, 0.81", "-20.091, 72.3158, -26.3911, 0.81", "-20.8589, 72.4113, -26.5873, 0.81", "-22.1299, 72.569, -26.9946, 0.81", "-23.5857, 72.8149, -27.5287, 0.81", "-24.586, 73.0811, -27.907, 0.52", "-25.1104, 73.2871, -28.1564, 0.52", "-25.7495, 73.646, -28.522, 0.52", "-26.6091, 74.3009, -29.1044, 0.52", "-27.0193, 74.6725, -29.3881, 0.81", "-27.5069, 75.1369, -29.7009, 1.03", "-28.2496, 75.7301, -30.0216, 1.55", "-28.8974, 76.1201, -30.2892, 1.55", "-28.9654, 76.1492, -30.3214, 1.55", "-30.1838, 76.5374, -30.9141, 1.55", "-30.2445, 76.5527, -30.9469, 1.55", "-31.3297, 76.771, -31.5656, 1.55", "-33.0072, 77.0538, -32.5526, 1.55", "-34.4106, 77.2891, -33.528, 0.88", "-34.6937, 77.3424, -33.7521, 0.81", "-35.0738, 77.4183, -34.1018, 0.52", "-35.4328, 77.4895, -34.4701, 0.52", "-35.4863, 77.5004, -34.5295, 0.52", "-36.3144, 77.7281, -35.3116, 0.52", "-36.4274, 77.7647, -35.401, 1.18", "-36.8702, 77.9085, -35.7973, 1.18", "-38.0544, 78.2373, -36.8086, 0.74", "-38.6146, 78.3791, -37.267, 1.4", "-39.1223, 78.5003, -37.6222, 1.4", "-39.3638, 78.547, -37.7809, 1.4", "-40.7548, 78.7555, -38.8572, 1.4", "-41.5515, 78.8354, -39.6279, 0.37", "-41.5993, 78.8388, -39.6799, 0.37", "-42.3117, 78.8802, -40.5387, 0.37", "-43.0415, 78.9708, -41.4353, 0.37", "-43.9509, 79.1486, -42.5484, 0.37", "-44.6584, 79.3821, -43.3629, 0.37", "-44.987, 79.5467, -43.756, 0.37", "-45.4977, 79.8345, -44.2994, 0.37", "-46.2422, 80.2856, -45.0498, 0.37", "-46.2927, 80.3191, -45.0901, 0.37", "-46.8398, 80.7029, -45.5231, 0.37", "-47.5649, 81.2125, -46.392, 0.37", "-47.8817, 81.4202, -46.9536, 0.37", "-48.1627, 81.6948, -47.7971, 0.37", "-48.1804, 81.7264, -47.8898, 0.37", "-48.3387, 82.209, -49.0967, 0.81", "-48.4536, 82.8524, -50.5522, 0.74", "-48.4566, 82.891, -50.623, 0.74", "-48.5639, 84.0642, -52.4077, 0.52", "-48.7015, 85.0423, -53.7214, 1.77", "-48.7683, 85.3879, -54.1542, 1.77", "-48.7956, 85.4898, -54.265, 1.77", "-48.9988, 86.0673, -54.7674, 2.06", "-49.2603, 86.7035, -55.2714, 2.06", "-49.923, 87.9534, -56.1708, 2.06", "-49.972, 88.0313, -56.2275, 2.06", "-50.2418, 88.4247, -56.5465, 2.06", "-50.9687, 89.3717, -57.4148, 0.52", "-51.4146, 89.8725, -57.9502, 0.52", "-51.7546, 90.189, -58.3125, 0.44", "-52.2254, 90.5216, -58.7172, 0.44", "-52.2734, 90.55, -58.7607, 0.44", "-52.7263, 90.7778, -59.1783, 0.37", "-52.7647, 90.8001, -59.2324, 0.37", "-53.0605, 91.0365, -59.7047, 0.37", "-53.6537, 91.6614, -60.7171, 0.37", "-53.7049, 91.7329, -60.8402, 0.37", "-53.884, 92.0198, -61.3266, 1.03", "-54.842, 93.7272, -64.1888, 1.69", "-55.0233, 94.0323, -64.7102, 2.5", "-55.2664, 94.4045, -65.3607, 2.73", "-56.5597, 96.1082, -68.5737, 0.52", "-56.7931, 96.379, -69.0932, 0.52", "-56.8169, 96.4039, -69.1434, 0.52", "-57.2792, 96.8498, -70.0089, 0.52", "-57.658, 97.1608, -70.6441, 0.52", "-58.7942, 97.9682, -72.3086, 1.18", "-59.4135, 98.3685, -73.0192, 1.4", "-60.3914, 99.0136, -74.167, 1.25", "-61.1881, 99.5769, -75.1225, 0.37", "-61.7628, 100.067, -75.9365, 0.37", "-61.8364, 100.139, -76.047, 0.37", "-62.1175, 100.429, -76.4544, 0.37", "-62.2879, 100.603, -76.7528, 0.74", "-62.3183, 100.638, -76.819, 0.74", "-61.9766, 100.306, -75.1486, 0.74", "-61.8689, 100.196, -74.4398, 0.29", "-61.6393, 99.9893, -72.6286, 0.29", "-61.4952, 99.8958, -71.1987, 0.29", "-61.3975, 99.8709, -70.006, 0.29", "-60.7532, 100.106, -60.3068, 0.29" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-15.3585, 69.0458, -20.5697, 0.88", "-15.1072, 70.6715, -19.9467, 0.88", "-15.0707, 71.5215, -19.669, 0.88", "-15.0805, 71.679, -19.6245, 0.88", "-15.1736, 72.1736, -19.5093, 1.11", "-15.2565, 72.4952, -19.4447, 1.11", "-15.2838, 72.5765, -19.4377, 1.11", "-15.6486, 73.2118, -19.5585, 1.11", "-15.8142, 73.4797, -19.6256, 1.11", "-16.1018, 73.9743, -19.7613, 1.11", "-16.1619, 74.1089, -19.7957, 1.11", "-16.4754, 75.0456, -20.0194, 1.03", "-16.521, 75.2484, -20.0618, 1.03", "-16.632, 76.139, -20.2274, 1.03", "-16.6377, 76.2856, -20.2603, 1.03", "-16.6047, 77.5007, -20.556, 1.03", "-16.6006, 77.5599, -20.5696, 1.03", "-16.5223, 78.2708, -20.7151, 1.03", "-16.5089, 78.4177, -20.7488, 1.03", "-16.4655, 79.5429, -21.0228, 1.03", "-16.4775, 79.759, -21.0723, 1.03", "-16.6599, 80.747, -21.2165, 0.88", "-16.6843, 80.8257, -21.2202, 0.88", "-16.8988, 81.3575, -21.2002, 1.18", "-17.2918, 82.2213, -21.1086, 1.18", "-17.5725, 82.8703, -20.9954, 1.18", "-17.9211, 83.7856, -20.8637, 0.74", "-18.1862, 84.5558, -20.7684, 0.74", "-18.3503, 85.2264, -20.75, 0.74", "-18.3609, 85.2961, -20.7553, 0.74", "-18.4555, 86.4559, -20.9553, 0.74", "-18.5067, 87.2492, -21.1513, 0.74", "-18.5126, 87.3161, -21.1733, 0.74", "-18.6547, 88.4643, -21.5823, 1.11", "-18.8335, 89.3572, -21.8942, 1.11", "-18.8893, 89.5481, -21.9553, 1.11", "-19.2354, 90.3878, -22.1837, 1.11", "-19.576, 91.1262, -22.3297, 1.47", "-19.6111, 91.1982, -22.339, 1.47", "-19.9999, 91.9794, -22.3802, 1.77", "-20.2776, 92.5439, -22.4004, 2.06", "-20.697, 93.3907, -22.4145, 2.14", "-20.9911, 93.9973, -22.4119, 2.14", "-21.404, 94.8646, -22.3901, 1.99", "-21.65, 95.4131, -22.3775, 1.77", "-21.9174, 96.0456, -22.3638, 1.11", "-22.2491, 96.908, -22.3476, 1.03", "-22.5909, 97.9016, -22.3328, 1.03", "-22.6356, 98.0461, -22.3315, 1.03", "-23.0025, 99.2954, -22.3605, 1.03", "-23.0559, 99.4541, -22.3674, 1.03", "-23.1912, 99.8278, -22.3911, 1.03", "-23.3683, 100.232, -22.4274, 0.59", "-23.8703, 101.075, -22.5293, 0.59", "-24.311, 101.65, -22.609, 0.44", "-24.9686, 102.332, -22.7134, 0.44", "-25.1596, 102.52, -22.7403, 0.44", "-25.4314, 102.798, -22.7733, 0.44", "-25.8148, 103.248, -22.8097, 0.81", "-26.1777, 103.82, -22.8304, 0.96", "-26.462, 104.458, -22.8304, 1.18", "-26.48, 104.526, -22.8307, 1.18", "-26.6134, 105.336, -22.8374, 1.33", "-26.6704, 106.024, -22.8257, 1.47", "-26.6747, 106.543, -22.8051, 1.77", "-26.6732, 106.624, -22.8006, 1.77", "-26.6608, 107.269, -22.7565, 1.47", "-26.6774, 107.888, -22.6933, 1.4", "-26.7305, 108.462, -22.6193, 1.03", "-26.8428, 109.105, -22.5274, 0.59", "-27.1015, 110.144, -22.3772, 0.59", "-27.1213, 110.211, -22.3635, 0.59", "-27.4404, 111.134, -22.129, 0.59", "-27.655, 111.752, -21.953, 1.03", "-27.8421, 112.304, -21.7547, 1.33", "-28.0008, 112.804, -21.5305, 1.33", "-28.2374, 113.701, -21.0557, 1.25", "-28.3698, 114.279, -20.7405, 0.74", "-28.4522, 114.659, -20.5309, 0.66", "-28.6459, 115.458, -20.0942, 0.66", "-28.7352, 115.772, -19.9319, 0.66", "-28.7641, 115.843, -19.9014, 0.66", "-29.0928, 116.416, -19.7434, 0.44", "-29.5423, 116.977, -19.6265, 0.44", "-29.8714, 117.305, -19.5943, 0.74", "-29.9244, 117.352, -19.5943, 0.74", "-30.2538, 117.622, -19.5943, 0.88", "-30.4208, 117.756, -19.5943, 0.88", "-30.9997, 118.242, -19.5943, 1.18", "-31.7863, 118.956, -19.5943, 1.4", "-32.2813, 119.443, -19.5943, 1.4", "-32.3295, 119.494, -19.5943, 1.4", "-32.7311, 119.988, -19.6046, 1.4", "-33.1903, 120.669, -19.6334, 1.4", "-33.551, 121.309, -19.671, 1.4", "-33.6114, 121.439, -19.6798, 1.4", "-33.839, 121.98, -19.719, 1.4", "-34.1174, 122.666, -19.7943, 0.88", "-34.5805, 123.778, -19.9532, 0.88", "-34.6093, 123.843, -19.9645, 0.88", "-35.1017, 124.789, -20.1463, 0.88", "-35.1489, 124.855, -20.1599, 0.88", "-35.6795, 125.362, -20.3376, 0.88", "-36.2905, 125.774, -20.5551, 1.18", "-36.3534, 125.802, -20.5782, 1.18", "-37.2921, 126.112, -20.9094, 1.33", "-38.182, 126.29, -21.1963, 1.55", "-39.4142, 126.457, -21.595, 1.55", "-39.4815, 126.463, -21.6156, 1.55", "-40.2626, 126.508, -21.8664, 1.11", "-40.7602, 126.549, -22.0235, 0.81", "-41.5571, 126.643, -22.2724, 0.59", "-42.517, 126.845, -22.5236, 0.52", "-43.092, 127.018, -22.6267, 0.52", "-43.1561, 127.044, -22.642, 0.52", "-43.7852, 127.388, -22.8353, 0.52", "-43.9973, 127.534, -22.9118, 0.52", "-44.6757, 128.114, -23.1854, 0.52", "-44.7739, 128.211, -23.2241, 0.52", "-45.4751, 128.928, -23.5363, 0.81", "-45.5958, 129.047, -23.5889, 0.81", "-45.652, 129.099, -23.613, 0.81", "-45.8453, 129.261, -23.6824, 1.03", "-46.0493, 129.415, -23.7379, 1.03", "-46.3541, 129.616, -23.7804, 1.03", "-46.8534, 129.865, -23.7804, 1.03", "-47.1279, 129.966, -23.7804, 1.03", "-47.5146, 130.08, -23.7804, 1.03", "-47.5765, 130.093, -23.7804, 1.03", "-48.0325, 130.155, -23.7804, 0.88", "-48.6338, 130.199, -23.8855, 0.59", "-49.2704, 130.257, -24.0902, 0.59", "-49.4541, 130.288, -24.1687, 0.59", "-49.9383, 130.41, -24.41, 0.59", "-50.1288, 130.472, -24.5091, 0.59", "-51.5496, 131.05, -25.3232, 0.59", "-52.125, 131.315, -25.6698, 0.96", "-52.5643, 131.543, -25.9276, 1.33", "-53.0831, 131.833, -26.2392, 1.77", "-53.5886, 132.151, -26.5258, 1.77", "-54.312, 132.634, -26.891, 0.88", "-54.6179, 132.849, -27.0142, 0.74", "-55.1244, 133.223, -27.235, 0.52", "-55.7176, 133.723, -27.5364, 0.52", "-56.3293, 134.342, -27.8959, 0.52", "-56.4213, 134.45, -27.9525, 0.88", "-56.4627, 134.503, -27.9753, 0.88", "-56.8672, 135.022, -28.1816, 0.88", "-57.551, 135.808, -28.4624, 1.18", "-57.5989, 135.858, -28.4765, 1.18", "-58.1054, 136.308, -28.5967, 1.33", "-58.5765, 136.679, -28.6845, 1.33", "-58.6836, 136.754, -28.6983, 1.33", "-59.3262, 137.147, -28.7941, 1.33", "-59.4054, 137.193, -28.8055, 1.33", "-60.2867, 137.703, -28.9667, 1.33", "-60.3559, 137.742, -28.9812, 1.33", "-60.966, 138.089, -29.1204, 1.33", "-61.8368, 138.604, -29.3248, 0.37", "-62.3814, 138.937, -29.4593, 0.37", "-62.439, 138.974, -29.4773, 0.37", "-63.2305, 139.523, -29.7824, 0.37", "-63.3478, 139.612, -29.8325, 0.37", "-63.6443, 139.888, -29.9841, 0.37", "-63.6869, 139.942, -30.0089, 0.37", "-63.9833, 140.724, -30.4553, 0.37", "-63.9924, 140.905, -30.5679, 0.59", "-63.9718, 140.983, -30.6132, 0.59", "-63.7968, 141.481, -30.9226, 0.59", "-63.7415, 141.626, -31.0082, 0.59", "-63.515, 142.313, -31.3607, 0.59", "-63.4991, 142.376, -31.3869, 0.59", "-63.3877, 143.052, -31.6388, 0.59", "-63.314, 143.929, -31.9202, 0.59", "-63.3069, 144.433, -32.061, 0.96", "-63.3344, 145.007, -32.1912, 1.18", "-63.4075, 145.667, -32.3043, 1.4", "-63.4697, 146.084, -32.3596, 1.4", "-63.5965, 146.67, -32.4029, 1.18", "-63.6139, 146.739, -32.4029, 1.18", "-63.7774, 147.272, -32.4029, 1.18", "-63.807, 147.349, -32.3961, 1.18", "-64.1227, 147.948, -32.2919, 1.18", "-64.5043, 148.564, -32.1504, 1.18", "-64.5432, 148.624, -32.1353, 1.18", "-64.9235, 149.22, -31.9908, 1.18", "-65.4334, 150.052, -31.8036, 1.18", "-65.7807, 150.661, -31.6901, 1.55", "-66.0342, 151.126, -31.6168, 1.77", "-66.3752, 151.861, -31.5182, 1.77", "-66.6633, 152.663, -31.4389, 1.92", "-66.8528, 153.393, -31.3931, 1.92", "-67.1124, 154.582, -31.3615, 1.92", "-67.1953, 155.045, -31.3478, 1.77", "-67.3445, 155.983, -31.3165, 1.69", "-67.5084, 157.374, -31.2624, 1.69", "-67.5596, 158.261, -31.2221, 1.69" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "19.3035, 69.8045, -23.8783, 0.37", "19.7367, 72.583, -19.7757, 0.37", "20.0578, 73.5542, -18.4366, 0.37", "20.3094, 74.0746, -17.7598, 0.37", "20.373, 74.173, -17.64, 0.37", "20.7776, 74.6366, -17.1433, 0.37", "20.9536, 74.8067, -16.9799, 0.37", "22.1545, 75.418, -16.898, 0.37", "22.221, 75.4407, -16.8902, 0.37", "22.5119, 75.5464, -16.8418, 0.66", "23.194, 75.9155, -16.6877, 0.66", "23.2446, 75.9584, -16.6631, 0.66", "23.9724, 76.8497, -16.0813, 0.66", "23.9944, 76.8961, -16.0503, 0.66", "24.1819, 77.411, -15.6995, 0.88", "24.3523, 78.0874, -15.2657, 0.88", "24.5231, 79.2439, -14.4768, 0.88", "24.5406, 79.3698, -14.3905, 0.88", "24.6575, 80.1768, -13.8359, 0.88", "24.6885, 80.3175, -13.7356, 0.88", "24.9765, 81.2383, -13.0355, 0.88", "25.4001, 82.149, -12.2911, 0.37", "25.6446, 82.5543, -12.0004, 0.29", "25.9003, 82.9177, -11.7265, 0.29", "26.0971, 83.1577, -11.5345, 0.29", "26.1352, 83.2085, -11.5034, 0.29", "26.617, 83.8195, -11.0549, 0.59", "27.0101, 84.3044, -10.6854, 0.88", "27.6432, 85.0422, -10.0826, 1.33", "27.6875, 85.0917, -10.037, 1.33", "28.6873, 86.1415, -8.99495, 1.33", "30.0777, 87.4805, -7.6932, 0.96", "30.653, 87.9777, -7.26191, 1.55", "31.2184, 88.4266, -6.89347, 1.92", "32.3997, 89.2963, -6.24652, 1.4", "33.5883, 90.1308, -5.68456, 0.74", "34.992, 91.0634, -5.16589, 0.74", "36.3779, 92.0099, -4.86082, 0.66", "36.4354, 92.05, -4.85139, 0.66", "36.9105, 92.3883, -4.80315, 0.66", "37.6254, 92.8321, -4.77415, 1.03", "38.2246, 93.1345, -4.71798, 1.11", "38.2884, 93.1589, -4.69973, 1.11", "38.7121, 93.2866, -4.50427, 1.33", "38.7747, 93.3012, -4.47488, 1.33", "40.0755, 93.5402, -3.83123, 1.62", "40.4783, 93.6045, -3.64096, 1.92", "40.5493, 93.6186, -3.60692, 1.92", "40.8043, 93.7073, -3.50042, 1.92", "40.999, 93.817, -3.4362, 1.92", "41.2395, 94.0389, -3.37784, 1.62", "41.5695, 94.5274, -3.34667, 1.03", "41.7501, 94.9169, -3.3208, 0.81", "41.9925, 95.6223, -3.27333, 0.81", "42.1198, 96.0595, -3.24199, 0.52", "42.2769, 96.6601, -3.1969, 0.52", "42.2994, 96.727, -3.1918, 0.52", "42.6079, 97.3055, -3.1084, 0.52", "42.7121, 97.418, -3.08374, 0.52", "43.2861, 97.8424, -2.96041, 0.74", "43.358, 97.8807, -2.94725, 0.74", "44.1111, 98.1957, -2.40608, 0.74", "44.8894, 98.5339, -1.6333, 0.74", "45.3588, 98.747, -1.12669, 0.96", "45.4456, 98.7893, -1.02339, 0.96", "45.8593, 99.0187, -0.476917, 0.96", "48.2635, 100.563, 2.9027, 0.52", "48.6636, 100.878, 3.5264, 0.52", "49.0536, 101.263, 4.13252, 0.74", "49.0837, 101.296, 4.17259, 0.74", "49.4359, 101.701, 4.5054, 1.11", "49.7927, 102.123, 4.65859, 1.55", "50.1717, 102.569, 4.6326, 1.62", "50.7623, 103.231, 4.62096, 1.62", "51.3561, 103.9, 4.70022, 0.74", "51.6553, 104.244, 4.76345, 0.74", "51.9757, 104.654, 4.86467, 0.59", "52.4234, 105.313, 5.10797, 0.59", "52.454, 105.36, 5.12991, 0.59", "53.0732, 106.323, 5.66404, 0.59", "53.1105, 106.374, 5.69596, 0.59", "53.6985, 107.075, 6.16877, 0.59", "54.433, 107.753, 6.66051, 0.59", "55.0558, 108.161, 6.92062, 0.59", "55.4187, 108.347, 7.00259, 1.03", "56.1738, 108.64, 7.03042, 1.03", "56.2525, 108.665, 7.02813, 1.03", "57.0346, 108.857, 6.95204, 1.03", "58.0489, 109.127, 6.7745, 1.03", "58.1146, 109.148, 6.7624, 1.03", "58.9488, 109.452, 6.622, 1.03", "59.1603, 109.537, 6.57972, 1.03", "59.8149, 109.809, 6.44216, 1.03", "60.2438, 109.992, 6.35507, 1.25", "60.3435, 110.031, 6.33921, 1.25", "61.2177, 110.33, 6.23039, 1.25", "62.2493, 110.684, 6.20266, 0.96", "62.3149, 110.708, 6.20557, 0.96", "62.9907, 110.971, 6.27273, 0.52", "64.1287, 111.475, 6.43641, 0.52", "65.0373, 111.977, 6.68664, 0.81", "66.0474, 112.692, 7.12552, 0.81", "66.512, 113.11, 7.39717, 1.03", "66.8234, 113.461, 7.61235, 1.03", "67.2239, 114.049, 7.95217, 1.03", "67.9476, 115.472, 8.75885, 0.37", "68.2536, 116.21, 9.14492, 0.37", "68.4915, 116.887, 9.47184, 0.37", "68.6752, 117.493, 9.76723, 0.37", "68.7554, 117.762, 9.91312, 0.88", "69.1194, 118.842, 10.5345, 1.18", "69.3537, 119.382, 10.8283, 1.18", "69.5572, 119.688, 11.0161, 1.18", "69.6083, 119.739, 11.0515, 1.18", "70.7251, 120.476, 11.6246, 1.55", "71.2249, 120.725, 11.8649, 1.55", "71.8532, 120.98, 12.1324, 1.55", "72.832, 121.335, 12.5451, 0.59", "73.4726, 121.576, 12.7985, 0.59", "74.1782, 121.882, 13.0494, 0.59", "75.3818, 122.511, 13.3872, 0.59", "75.7456, 122.76, 13.5175, 1.18", "75.8477, 122.852, 13.5599, 1.18", "76.3585, 123.475, 13.7714, 1.18", "76.8504, 124.161, 13.9627, 1.33", "77.3495, 124.933, 14.1297, 1.33", "77.9532, 125.906, 14.2777, 0.44", "78.4161, 126.665, 14.3934, 0.44", "79.308, 128.136, 14.6337, 0.44", "79.308, 128.136, 14.6337, 0.88", "79.7237, 128.816, 14.7502, 0.88", "79.9993, 129.258, 14.8156, 0.88", "80.0508, 129.334, 14.8229, 0.88", "80.5734, 129.979, 14.9031, 0.88", "80.6249, 130.03, 14.9111, 0.88", "81.2577, 130.564, 14.9969, 0.88", "81.7586, 130.906, 15.0549, 1.47", "81.8178, 130.942, 15.0686, 1.47", "82.5556, 131.381, 15.2955, 1.47", "82.6126, 131.416, 15.3159, 1.47", "82.804, 131.543, 15.3964, 1.47", "82.8555, 131.581, 15.4237, 1.47", "83.9108, 132.567, 16.1233, 1.33", "83.956, 132.617, 16.151, 1.33", "84.5216, 133.282, 16.5596, 1.18", "84.5638, 133.332, 16.5913, 1.18", "85.1301, 133.997, 17.0049, 1.18", "85.9863, 134.981, 17.5939, 1.18", "87.2789, 136.368, 18.3764, 1.18", "88.2653, 137.325, 18.9267, 1.25", "88.3172, 137.368, 18.9498, 1.25", "88.9588, 137.813, 19.1657, 1.25", "89.2914, 137.994, 19.2325, 1.69", "90.0565, 138.318, 19.3045, 1.69", "90.7215, 138.532, 19.3, 1.69", "92.1303, 138.964, 19.1222, 0.59", "92.207, 138.986, 19.1116, 0.59", "92.831, 139.143, 19.0101, 0.59" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "19.3035, 69.8045, -23.8783, 1.47", "21.0817, 70.9765, -26.5204, 1.47", "21.6441, 71.4278, -27.4543, 1.03", "22.1262, 71.9493, -28.4471, 1.03", "22.3771, 72.3328, -29.0847, 1.03", "22.7153, 73.1974, -30.3452, 1.03", "22.7279, 73.2462, -30.4082, 1.03", "22.6883, 74.18, -31.3099, 1.03", "22.5236, 75.1566, -32.124, 1.4", "22.3573, 75.9756, -32.6981, 1.69", "22.107, 77.3677, -33.5936, 1.69", "22.0017, 78.0684, -33.9711, 1.69", "21.8953, 79.176, -34.5009, 1.69", "21.8627, 80.1721, -34.967, 1.69", "21.883, 81.3723, -35.5353, 1.69", "21.9599, 82.7556, -36.2189, 2.28", "22.0545, 83.8659, -36.7591, 2.36", "22.107, 84.3641, -37.0455, 2.36", "22.3186, 85.8781, -38.0228, 1.77", "22.327, 85.926, -38.0632, 1.77", "22.3801, 86.1873, -38.3351, 1.77", "22.3961, 86.2413, -38.3953, 1.77", "22.8508, 87.3571, -39.7815, 0.74", "22.8708, 87.4011, -39.8359, 0.74", "23.2809, 88.2094, -40.7933, 1.03", "23.3062, 88.2577, -40.8552, 1.03", "23.5636, 88.7615, -41.5498, 1.03", "23.9354, 89.5236, -42.6524, 1.33", "23.9525, 89.5623, -42.7081, 1.33", "24.2797, 90.4622, -43.8992, 1.69", "24.6137, 91.612, -45.2589, 1.99", "24.9228, 92.8521, -46.631, 1.99", "25.1618, 93.9504, -47.7579, 1.99", "25.3931, 95.0302, -48.7099, 1.4", "25.6243, 96.1583, -49.571, 1.4", "25.8288, 97.1621, -50.1574, 1.84", "25.844, 97.226, -50.1815, 1.84", "26.0599, 97.8661, -50.29, 2.36", "26.4637, 98.7138, -50.299, 2.14", "26.5274, 98.8043, -50.2916, 2.14", "27.0013, 99.3054, -50.2464, 1.92", "27.4175, 99.6994, -50.2166, 1.77", "28.0521, 100.321, -50.2143, 1.77", "28.1515, 100.433, -50.22, 1.77", "28.78, 101.29, -50.3399, 1.47", "28.8166, 101.352, -50.3506, 1.47", "29.4063, 102.633, -50.6773, 1.33", "29.7077, 103.464, -50.957, 1.11", "30.0536, 104.669, -51.4043, 1.11", "30.2906, 105.605, -51.8353, 1.11", "30.5078, 106.558, -52.3627, 1.4", "30.7792, 107.846, -53.1296, 1.4", "31.0005, 108.953, -53.8096, 2.06", "31.2038, 109.998, -54.4352, 2.43", "31.6143, 112.042, -55.6578, 1.84", "31.8791, 113.41, -56.5121, 1.62", "32.0022, 114.026, -56.9042, 1.4", "32.2283, 115.17, -57.5943, 0.88", "32.3849, 115.998, -58.0903, 0.88", "32.4, 116.089, -58.1459, 0.88", "32.5609, 118.011, -58.9635, 0.88" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_132",
    "id" : "dend_132",
    "points3d" : [ "96.574, -178.654, 0.0704686, 1.55", "97.453, -179.751, -0.520116, 1.55", "98.0213, -180.506, -0.831447, 1.55", "98.1098, -180.625, -0.87569, 1.55", "99.1147, -181.969, -1.29557, 1.4", "99.6352, -182.661, -1.4956, 1.4", "100.188, -183.398, -1.70821, 1.55", "100.957, -184.443, -1.93061, 1.77", "100.998, -184.499, -1.94163, 1.77", "101.823, -185.629, -2.10235, 1.92", "101.864, -185.686, -2.10158, 1.92" ],
    "parent" : "dend_131",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_118",
    "id" : "dend_118",
    "points3d" : [ "-17.5111, -137.021, 7.97237, 0.66", "-17.6108, -137.909, 7.19215, 0.66", "-17.6788, -138.515, 6.66026, 0.66", "-17.7099, -138.792, 6.41698, 1.33", "-17.8365, -139.92, 5.42648, 0.52" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_117",
    "id" : "dend_117",
    "points3d" : [ "-17.5111, -137.021, 7.97237, 0.22", "-17.6348, -136.932, 8.00194, 0.22", "-18.6184, -136.01, 8.18226, 0.22", "-18.9157, -135.671, 8.29298, 0.81", "-18.9855, -135.587, 8.32288, 0.81", "-19.3098, -135.191, 8.46926, 0.81", "-19.7752, -134.633, 8.67775, 0.22", "-20.4584, -133.848, 9.23762, 0.22", "-21.4969, -132.576, 10.2327, 0.22", "-21.4969, -132.576, 10.2327, 0.52", "-21.5383, -132.526, 10.2796, 0.52", "-21.7575, -132.265, 10.5866, 0.52", "-23.2635, -130.782, 13.289, 0.66" ],
    "parent" : "dend_116",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_101",
    "id" : "dend_101",
    "points3d" : [ "-26.5264, -311.953, 18.5344, 0.59", "-26.4018, -313.044, 18.4977, 0.59", "-26.3484, -313.905, 18.4365, 0.59", "-26.3452, -313.975, 18.4304, 0.59", "-26.274, -315.546, 18.2949, 0.59", "-26.1941, -317.308, 18.143, 0.59", "-26.149, -318.302, 18.0572, 0.59", "-26.0833, -319.296, 17.9166, 0.59", "-26.0802, -319.378, 17.9035, 0.59" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_94",
    "id" : "dend_94",
    "points3d" : [ "-26.5264, -311.953, 18.5344, 0.44", "-25.7701, -313.014, 18.2472, 0.44", "-25.3047, -313.681, 18.0793, 0.44", "-24.9342, -314.198, 17.9625, 0.88", "-24.8944, -314.256, 17.9527, 0.88", "-24.5437, -314.769, 17.8772, 0.88", "-24.1638, -315.329, 17.7395, 1.03", "-24.1181, -315.395, 17.72, 1.03", "-23.8207, -315.809, 17.3949, 0.66", "-23.233, -316.602, 16.526, 0.59", "-23.207, -316.629, 16.466, 0.59", "-22.7003, -317.131, 14.9183, 0.59", "-22.4473, -317.376, 14.029, 0.88", "-21.5983, -318.305, 10.5398, 1.62", "-21.583, -318.324, 10.463, 1.62", "-20.8287, -319.377, 5.8915, 0.44", "-20.5159, -319.922, 3.58421, 0.44", "-20.5082, -319.94, 3.50419, 0.44", "-20.4587, -320.174, 2.57198, 0.44", "-20.463, -320.39, 1.97611, 0.81", "-20.4701, -320.427, 1.90489, 0.81", "-20.6171, -320.808, 1.57079, 0.81", "-20.6343, -320.854, 1.53653, 0.81", "-20.7372, -321.299, 1.21572, 0.81", "-20.8743, -322.651, 0.259988, 0.44", "-20.8029, -323.465, -0.209844, 0.44", "-20.6019, -324.166, -0.502431, 0.88", "-20.503, -324.417, -0.586347, 0.88", "-20.0913, -325.346, -0.844012, 0.88", "-20.0176, -325.493, -0.875748, 0.88", "-19.2322, -326.959, -1.08274, 0.74", "-18.2926, -328.624, -1.29693, 0.74", "-18.253, -328.694, -1.30436, 0.74", "-17.6511, -329.738, -1.4187, 0.74", "-17.3146, -330.322, -1.48503, 1.33", "-17.2638, -330.407, -1.49888, 1.33", "-16.6183, -331.449, -1.7337, 1.33", "-16.4769, -331.662, -1.78783, 1.33", "-15.8817, -332.495, -1.99425, 1.33", "-15.6708, -332.749, -2.05387, 1.33", "-15.0094, -333.513, -2.27509, 0.88", "-14.9563, -333.573, -2.29581, 0.88" ],
    "parent" : "dend_93",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_89",
    "id" : "dend_89",
    "points3d" : [ "62.0211, -415.309, 4.33641, 1.4", "62.4229, -415.899, 4.74252, 1.4", "62.8014, -416.452, 5.15573, 1.62", "63.3235, -417.246, 5.70227, 1.62", "63.3926, -417.351, 5.77132, 1.62", "64.3285, -418.694, 6.57147, 1.33", "65.0843, -419.739, 7.12828, 0.66", "65.1298, -419.799, 7.15779, 0.66", "65.8512, -420.706, 7.48539, 0.66", "65.9921, -420.882, 7.49096, 0.66", "66.7997, -421.965, 7.16031, 0.66", "67.2384, -422.616, 6.77547, 0.66", "67.2751, -422.676, 6.73198, 0.66", "67.9973, -423.976, 5.73195, 0.66", "68.7466, -425.519, 4.43865, 0.88", "68.9338, -426.006, 4.03301, 1.11", "69.0653, -426.527, 3.61419, 1.11", "69.0754, -426.583, 3.57321, 1.11", "69.1331, -427.038, 3.35014, 1.11", "69.1379, -427.118, 3.33546, 1.11", "69.221, -427.689, 3.33546, 1.11", "69.406, -428.503, 3.33546, 0.59", "69.4281, -428.559, 3.33546, 0.59", "69.9902, -429.673, 3.33546, 0.59", "70.0765, -429.799, 3.33546, 0.59", "70.8998, -430.808, 3.33546, 0.59", "71.0023, -430.919, 3.32668, 0.59", "71.8953, -431.811, 3.19922, 0.59", "71.9464, -431.862, 3.18951, 0.59", "72.7659, -432.672, 2.99563, 0.59", "72.8112, -432.724, 2.98216, 0.59", "73.6198, -433.884, 2.64424, 0.52", "73.6493, -433.944, 2.62251, 0.52", "73.78, -434.416, 2.42389, 1.11", "73.9155, -435.079, 2.13017, 1.4", "74.0442, -435.734, 1.85308, 1.4", "74.0606, -435.8, 1.82768, 1.4", "74.393, -436.904, 1.48086, 0.88", "74.4177, -436.967, 1.45812, 0.88", "74.7503, -437.626, 1.19919, 0.88", "75.4049, -438.7, 0.766347, 0.29", "75.4451, -438.757, 0.744968, 0.29", "75.7299, -439.136, 0.617935, 0.96", "76.3566, -439.919, 0.419952, 1.47", "76.7144, -440.364, 0.3121, 1.77", "76.7511, -440.422, 0.295959, 1.77", "76.9879, -440.87, 0.16295, 1.77", "77.0112, -440.935, 0.147218, 1.77", "77.1841, -441.639, 0.0310193, 0.81", "77.3369, -442.52, -0.0588566, 0.59", "77.5755, -444.213, -0.197599, 0.59", "77.5852, -444.283, -0.20205, 0.59", "77.7943, -446.089, -0.308253, 0.59", "77.8801, -446.968, -0.351689, 0.59", "77.9019, -447.335, -0.362728, 1.77", "77.9183, -447.989, -0.353902, 2.5", "77.9766, -448.719, -0.26028, 2.5" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_88",
    "id" : "dend_88",
    "points3d" : [ "62.0211, -415.309, 4.33641, 0.22", "60.9963, -415.772, 4.29035, 0.22", "60.0659, -416.107, 4.25378, 0.22", "59.9997, -416.132, 4.25173, 0.22", "59.1761, -416.444, 4.22967, 0.22", "58.8114, -416.58, 4.22205, 0.22", "58.1569, -416.833, 4.20985, 0.22", "57.9472, -416.911, 4.2075, 0.22", "56.8365, -417.244, 4.2075, 0.22", "56.678, -417.292, 4.2075, 0.22", "55.5691, -417.636, 4.2075, 0.22", "55.3347, -417.725, 4.2075, 1.03", "55.2613, -417.758, 4.2075, 1.03", "54.0927, -418.221, 4.2075, 1.03" ],
    "parent" : "dend_87",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_76",
    "id" : "dend_76",
    "points3d" : [ "-60.7532, 100.106, -60.3068, 1.11", "-61.7896, 102.003, -67.9233, 1.11", "-62.0571, 102.479, -69.4595, 1.47", "-62.1335, 102.613, -69.8419, 1.47", "-62.5054, 103.274, -71.5341, 0.88", "-62.6851, 103.597, -72.3022, 0.88", "-63.1657, 104.497, -74.2748, 0.66", "-63.4983, 105.15, -75.0096, 0.52", "-63.5358, 105.224, -75.0877, 0.52", "-63.6932, 105.52, -75.3961, 0.52", "-63.7215, 105.568, -75.4396, 0.52", "-63.9517, 105.915, -75.8531, 0.52", "-64.8923, 107.018, -77.2281, 0.52", "-64.9238, 107.052, -77.281, 0.52", "-65.2865, 107.443, -77.907, 1.25", "-65.6699, 107.832, -78.5382, 1.62", "-66.8023, 108.936, -80.5858, 0.37", "-67.5086, 109.599, -81.8836, 0.37", "-68.7349, 110.736, -83.9999, 0.37", "-68.7667, 110.764, -84.0563, 0.81", "-69.1216, 111.074, -84.6954, 0.81", "-70.444, 112.135, -87.3608, 0.81", "-70.724, 112.343, -87.9017, 0.22", "-71.2769, 112.73, -88.9911, 0.22", "-72.2058, 113.322, -90.6515, 1.33", "-72.4491, 113.482, -91.0952, 1.92", "-74.4863, 114.862, -94.8948, 0.29", "-75.1222, 115.299, -96.0083, 0.29", "-75.2038, 115.356, -96.1587, 0.29", "-75.41, 115.502, -96.5513, 0.59", "-76.467, 116.261, -98.3732, 0.59", "-76.5021, 116.287, -98.4278, 0.59", "-76.8412, 116.574, -98.7507, 0.59", "-76.8899, 116.614, -98.8008, 0.59", "-77.1396, 116.8, -99.0204, 0.29", "-77.1875, 116.836, -99.0582, 0.29", "-77.6363, 117.185, -99.2769, 0.29", "-77.6814, 117.223, -99.3005, 0.29", "-78.2158, 117.705, -99.6609, 0.29", "-78.2628, 117.746, -99.6933, 0.29", "-79.1285, 118.517, -100.303, 0.29", "-79.9675, 119.312, -101.049, 0.29", "-80.0065, 119.352, -101.091, 0.29", "-80.6918, 120.099, -101.872, 1.18", "-81.1642, 120.632, -102.392, 1.77", "-81.2031, 120.677, -102.434, 1.77", "-82.44, 122.095, -103.828, 1.84", "-83.2352, 123.023, -104.797, 0.52", "-83.7849, 123.599, -105.397, 0.52", "-84.4759, 124.249, -106.053, 0.52", "-84.5232, 124.288, -106.093, 0.52", "-85.5773, 124.987, -106.825, 0.22", "-85.6452, 125.02, -106.859, 0.22", "-86.9985, 125.526, -107.448, 0.22", "-87.4066, 125.653, -107.622, 0.52", "-88.0438, 125.842, -107.963, 0.52", "-89.0522, 126.172, -108.508, 0.66", "-89.6947, 126.4, -108.849, 0.66", "-90.0602, 126.54, -109.056, 1.25", "-90.3587, 126.667, -109.244, 1.25", "-92.0602, 127.425, -110.293, 0.29", "-93.2084, 127.97, -110.966, 0.22", "-93.2677, 127.999, -110.996, 0.22", "-93.8844, 128.335, -111.286, 0.22", "-93.9958, 128.412, -111.348, 0.52", "-94.4085, 128.744, -111.587, 0.52", "-94.6526, 128.978, -111.717, 0.15", "-94.6928, 129.023, -111.755, 0.15", "-95.2671, 129.684, -112.414, 0.15", "-96.1724, 130.839, -113.883, 0.96", "-96.4152, 131.192, -114.316, 1.77", "-96.5859, 131.464, -114.647, 2.06", "-97.2985, 132.729, -116.129, 1.47", "-97.3206, 132.775, -116.179, 1.47", "-97.9308, 134.329, -117.69, 0.22", "-98.3915, 135.768, -118.823, 0.22", "-98.4049, 135.814, -118.859, 0.22", "-98.52, 136.236, -119.136, 0.22", "-98.6518, 136.752, -119.448, 1.11", "-98.8434, 137.506, -119.926, 1.4", "-98.8693, 137.617, -119.996, 1.4", "-99.2139, 139.186, -121.179, 0.22", "-99.4255, 140.291, -122.121, 0.22", "-99.524, 141.446, -123.232, 0.66", "-99.5244, 141.546, -123.335, 0.66", "-99.4927, 141.952, -123.744, 0.66", "-99.4849, 142.005, -123.794, 0.66", "-99.0946, 143.618, -125.18, 0.29", "-98.6522, 145.289, -126.654, 0.22", "-98.6221, 145.448, -126.794, 0.52", "-98.5416, 146.064, -127.421, 0.52", "-98.5385, 146.113, -127.475, 0.52", "-98.5498, 146.436, -127.876, 0.52", "-98.7667, 147.91, -129.916, 0.29", "-99.0847, 148.968, -131.49, 0.29", "-99.517, 150.086, -133.196, 1.18", "-99.6803, 150.433, -133.734, 1.18", "-100.34, 151.634, -135.638, 0.15", "-100.364, 151.67, -135.697, 0.15", "-100.876, 152.318, -136.628, 0.15", "-101.107, 152.626, -136.992, 0.52", "-101.333, 152.936, -137.287, 0.52", "-101.863, 153.765, -137.992, 0.22", "-101.889, 153.815, -138.035, 0.22", "-102.355, 154.86, -139.072, 0.22", "-102.702, 155.718, -140.033, 0.96", "-102.726, 155.769, -140.093, 0.96", "-102.91, 156.125, -140.562, 0.96", "-103.643, 157.467, -142.396, 0.29", "-103.824, 157.787, -142.846, 0.29", "-103.895, 157.907, -143.036, 0.29", "-104.151, 158.359, -143.67, 0.29", "-104.699, 159.422, -145.213, 0.29", "-104.719, 159.465, -145.268, 0.29", "-105.003, 160.12, -145.986, 0.29", "-105.367, 161.012, -147.083, 0.88", "-105.561, 161.495, -147.679, 1.11", "-106.153, 162.896, -149.386, 0.29", "-106.617, 163.905, -150.598, 0.29", "-106.641, 163.953, -150.659, 0.29", "-107.572, 165.742, -153.068, 1.11", "-107.804, 166.16, -153.623, 1.84", "-108.013, 166.515, -154.141, 1.84" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_75",
    "id" : "dend_75",
    "points3d" : [ "-60.7532, 100.106, -60.3068, 0.29", "-60.9666, 100.165, -60.4466, 0.29", "-61.4717, 100.316, -60.744, 0.66", "-61.5316, 100.336, -60.7759, 0.66", "-61.9927, 100.486, -60.9843, 0.66", "-63.5226, 100.986, -61.7163, 0.37", "-64.4733, 101.307, -62.1805, 0.37", "-64.8773, 101.438, -62.3741, 0.59", "-65.3074, 101.576, -62.554, 0.59", "-66.1772, 101.849, -62.8644, 0.22", "-67.1349, 102.105, -63.1093, 0.81", "-67.3297, 102.143, -63.149, 0.81", "-68.1878, 102.26, -63.3656, 0.81", "-69.0806, 102.318, -63.6048, 0.22", "-69.1597, 102.318, -63.6204, 0.22", "-70.2713, 102.241, -63.7388, 0.22", "-71.6736, 102.067, -63.783, 1.18", "-72.2768, 101.968, -63.7517, 1.55", "-72.6966, 101.889, -63.6961, 1.55", "-73.8985, 101.646, -63.3811, 0.22", "-75.1679, 101.475, -62.9827, 0.22", "-75.2672, 101.467, -62.9457, 0.22", "-76.3912, 101.431, -62.5188, 0.74", "-77.093, 101.439, -62.285, 0.74", "-78.1966, 101.534, -62.0205, 0.22", "-80.351, 101.831, -61.6758, 0.22", "-80.6455, 101.882, -61.6417, 0.22", "-81.9499, 102.12, -61.5948, 0.22", "-82.0984, 102.148, -61.6021, 0.22", "-84.351, 102.582, -61.8119, 0.22", "-84.4996, 102.611, -61.834, 0.22", "-85.5123, 102.786, -61.9937, 0.22", "-86.4618, 102.928, -62.2103, 1.11", "-87.0272, 102.989, -62.3725, 1.18", "-87.1039, 102.994, -62.3968, 1.18", "-87.6809, 103.006, -62.6007, 1.18", "-87.8253, 103.012, -62.6505, 1.18", "-88.8432, 103.075, -62.986, 0.15", "-91.3997, 103.307, -63.701, 0.15", "-91.5604, 103.326, -63.7451, 0.44", "-91.9853, 103.386, -63.8542, 0.44", "-93.2613, 103.606, -64.2266, 0.22", "-93.3371, 103.621, -64.2497, 0.22", "-94.1844, 103.82, -64.4969, 0.22", "-94.3956, 103.878, -64.5776, 0.81", "-94.8789, 104.013, -64.7621, 0.96", "-95.9764, 104.308, -65.202, 0.22", "-96.0313, 104.323, -65.2234, 0.22", "-97.2357, 104.655, -65.6986, 0.22", "-97.2909, 104.669, -65.7193, 0.22", "-97.7978, 104.816, -65.9279, 0.52", "-97.9585, 104.862, -65.9944, 0.52", "-98.6547, 105.06, -66.2372, 0.52", "-98.7256, 105.081, -66.2691, 0.52", "-99.4075, 105.299, -66.646, 0.52", "-100.418, 105.623, -67.2025, 0.52", "-100.612, 105.692, -67.3313, 0.22", "-101.351, 105.973, -67.8725, 0.22", "-101.964, 106.218, -68.4062, 0.44", "-102.02, 106.241, -68.4599, 0.44", "-102.531, 106.492, -68.9426, 0.44", "-103.802, 107.085, -70.0125, 0.44", "-103.859, 107.105, -70.0497, 0.44", "-104.433, 107.247, -70.3162, 0.66", "-104.491, 107.256, -70.3295, 0.66", "-106.601, 107.449, -70.6039, 1.84", "-108.045, 107.469, -70.6558, 0.37", "-109.623, 107.495, -70.5729, 0.37", "-110.058, 107.519, -70.5541, 0.37", "-110.936, 107.589, -70.5223, 0.37", "-111.159, 107.611, -70.526, 0.37", "-111.534, 107.659, -70.574, 1.47", "-112.452, 107.874, -70.6389, 0.37", "-113.221, 108.117, -70.7386, 0.37", "-113.5, 108.22, -70.7849, 0.74", "-113.761, 108.33, -70.8584, 0.74", "-114.321, 108.632, -71.0386, 0.29", "-115.15, 109.217, -71.3131, 0.29", "-115.593, 109.572, -71.4654, 1.11", "-115.96, 109.927, -71.5856, 1.11", "-116.814, 110.83, -71.7993, 0.22", "-118.222, 112.408, -72.048, 0.22", "-119.224, 113.6, -72.1521, 0.22", "-119.347, 113.757, -72.1612, 0.22", "-120.348, 115.035, -72.1748, 0.22", "-120.909, 115.781, -72.1416, 0.66", "-121.29, 116.319, -72.0513, 1.03", "-121.432, 116.524, -71.998, 1.03" ],
    "parent" : "dend_74",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_71",
    "id" : "dend_71",
    "points3d" : [ "-67.5596, 158.261, -31.2221, 0.52", "-67.9191, 159.184, -31.0958, 0.52", "-68.2624, 160.27, -30.9079, 0.52", "-68.6424, 161.499, -30.6941, 0.52", "-68.6603, 161.555, -30.6845, 0.52", "-68.9824, 162.536, -30.5237, 0.52", "-69.2245, 163.289, -30.4094, 0.52", "-69.4181, 164.043, -30.2861, 0.88", "-69.6338, 165.0, -30.1539, 1.11", "-69.779, 165.723, -30.078, 1.11", "-69.8447, 166.075, -30.0561, 1.11", "-69.9929, 166.975, -30.047, 0.37", "-70.1533, 168.28, -29.9162, 0.37", "-70.1725, 168.644, -29.8487, 1.03", "-70.17, 168.711, -29.8278, 1.03", "-70.1313, 169.456, -29.5371, 1.03", "-70.1053, 169.995, -29.2918, 1.03", "-70.0943, 171.542, -28.5025, 0.52", "-70.1268, 172.396, -28.065, 0.52", "-70.2005, 173.471, -27.5429, 0.44", "-70.2894, 174.278, -27.1959, 0.44", "-70.3033, 174.37, -27.1624, 0.44", "-70.4585, 175.215, -26.9499, 0.44", "-70.6828, 176.215, -26.8502, 0.44", "-70.7001, 176.284, -26.8467, 0.44", "-70.9442, 177.143, -26.8467, 0.74", "-71.0828, 177.629, -26.8253, 0.96", "-71.3145, 178.381, -26.7672, 1.11", "-71.5836, 179.282, -26.675, 1.25", "-71.8198, 180.1, -26.5789, 0.81", "-72.0479, 180.943, -26.473, 0.52", "-72.2698, 181.758, -26.3449, 0.44", "-72.443, 182.365, -26.2372, 0.37", "-72.8861, 183.814, -26.0101, 0.37", "-73.0732, 184.377, -25.9386, 0.37", "-73.0992, 184.442, -25.933, 0.37", "-73.4206, 185.099, -25.9149, 0.88", "-73.8253, 185.771, -25.9498, 0.88", "-74.482, 186.575, -26.016, 1.4", "-74.8745, 186.929, -26.0601, 1.69", "-75.2864, 187.266, -26.1087, 1.69", "-75.6204, 187.542, -26.1538, 1.69", "-75.6743, 187.587, -26.1629, 1.69", "-76.2387, 188.042, -26.2248, 1.11", "-76.7291, 188.432, -26.2357, 0.74", "-76.7764, 188.469, -26.2367, 0.74", "-77.1659, 188.778, -26.2441, 0.59", "-77.2217, 188.821, -26.245, 0.59", "-77.9355, 189.425, -26.2541, 0.59", "-78.3661, 189.836, -26.2754, 0.59", "-79.0478, 190.619, -26.3303, 0.59", "-79.0885, 190.679, -26.335, 0.59", "-79.5227, 191.497, -26.3972, 0.59", "-79.8374, 192.236, -26.4522, 0.59", "-80.1114, 193.021, -26.5081, 0.88", "-80.4096, 193.932, -26.5698, 0.88", "-80.7802, 195.012, -26.6848, 0.88", "-80.9623, 195.484, -26.7487, 0.44", "-81.2711, 196.143, -26.8582, 0.44", "-81.731, 196.892, -27.003, 0.44", "-81.9982, 197.25, -27.0768, 0.81", "-82.7219, 198.029, -27.3491, 1.11", "-82.7639, 198.068, -27.368, 1.11", "-83.3367, 198.591, -27.6603, 1.33", "-83.6676, 198.902, -27.8462, 1.55", "-84.0775, 199.312, -28.0936, 1.55", "-84.8276, 200.155, -28.5208, 0.96", "-85.0486, 200.427, -28.6302, 0.44", "-85.097, 200.491, -28.6491, 0.44", "-85.5021, 201.093, -28.7688, 0.44", "-85.5347, 201.145, -28.7715, 0.44", "-85.9519, 201.872, -28.7026, 0.44", "-85.9833, 201.942, -28.6794, 0.44", "-86.2805, 202.723, -28.3675, 0.44", "-86.3002, 202.788, -28.341, 0.44", "-86.5414, 203.533, -28.0054, 0.44", "-86.6177, 203.734, -27.9093, 0.88", "-87.1026, 204.827, -27.4538, 1.33", "-87.1983, 205.004, -27.4005, 1.69", "-87.7904, 205.975, -27.1945, 2.28", "-88.4788, 207.01, -27.0201, 0.66", "-88.9878, 207.701, -26.9392, 0.66", "-89.7325, 208.652, -26.8848, 0.66", "-90.5945, 209.711, -26.7836, 0.66", "-90.6316, 209.757, -26.7753, 0.66", "-91.1037, 210.353, -26.6244, 1.25", "-91.5566, 210.975, -26.4327, 1.55", "-91.8283, 211.354, -26.2736, 1.55", "-92.9425, 212.802, -25.4282, 0.52", "-93.4068, 213.364, -25.0434, 0.52", "-93.9479, 213.936, -24.6355, 0.52", "-93.9942, 213.978, -24.6025, 0.52", "-94.3505, 214.261, -24.3414, 0.52", "-95.1418, 214.774, -23.8168, 0.52", "-95.1995, 214.803, -23.7876, 0.52", "-95.629, 214.978, -23.5392, 0.52", "-96.1536, 215.178, -23.1334, 0.96", "-96.71, 215.403, -22.6342, 1.18", "-96.8934, 215.486, -22.4214, 1.18", "-97.1928, 215.643, -22.0316, 1.18", "-97.2353, 215.667, -21.9803, 1.18", "-98.2586, 216.261, -20.9268, 0.59", "-98.3009, 216.286, -20.8907, 0.59", "-99.2057, 216.824, -20.2536, 0.74", "-99.7698, 217.193, -19.9108, 0.96", "-100.367, 217.608, -19.605, 1.18", "-101.153, 218.181, -19.3082, 1.25", "-101.465, 218.424, -19.2441, 1.18", "-101.945, 218.821, -19.1429, 0.59", "-102.595, 219.405, -19.0231, 0.59", "-102.711, 219.517, -18.9947, 0.59", "-103.171, 219.998, -18.854, 0.59", "-103.687, 220.564, -18.6676, 0.96", "-104.425, 221.332, -18.4025, 1.33", "-104.735, 221.653, -18.2861, 1.55", "-105.212, 222.134, -18.1031, 1.55", "-105.251, 222.176, -18.0831, 1.55", "-105.903, 222.942, -17.6801, 1.77", "-106.326, 223.478, -17.3948, 1.77", "-106.601, 223.87, -17.22, 2.14", "-106.642, 223.934, -17.1936, 2.14", "-107.53, 225.345, -16.6751, 0.74", "-108.067, 226.196, -16.408, 0.74", "-108.124, 226.289, -16.3839, 0.74", "-108.802, 227.384, -16.1184, 0.74", "-109.21, 227.993, -15.9849, 0.96", "-109.725, 228.701, -15.8625, 1.11", "-110.126, 229.193, -15.8159, 1.4", "-110.602, 229.675, -15.662, 1.4", "-111.326, 230.237, -15.3361, 1.18", "-111.447, 230.294, -15.2628, 1.18", "-112.244, 230.508, -14.7187, 1.18", "-113.241, 230.627, -14.0171, 0.74", "-115.461, 230.664, -12.4478, 0.74", "-116.342, 230.605, -11.8594, 0.74", "-117.432, 230.476, -11.1367, 0.74", "-117.946, 230.417, -10.8091, 0.96", "-118.504, 230.376, -10.4638, 0.96", "-118.574, 230.375, -10.4239, 0.96", "-119.394, 230.543, -9.98939, 0.96", "-120.832, 231.083, -9.08114, 0.81", "-121.607, 231.524, -8.52413, 0.66", "-122.314, 232.078, -7.88826, 0.66", "-122.387, 232.151, -7.80913, 0.66", "-123.149, 233.139, -6.83909, 0.66", "-123.176, 233.188, -6.79635, 0.66", "-123.446, 233.87, -6.28465, 0.66", "-123.71, 234.571, -5.66559, 0.52", "-123.729, 234.605, -5.62008, 0.52", "-123.989, 234.862, -5.14299, 0.52", "-124.145, 234.941, -4.89734, 0.96", "-124.187, 234.953, -4.84172, 0.96", "-125.278, 234.917, -3.75634, 0.96", "-126.875, 234.612, -2.65422, 0.96", "-127.668, 234.41, -2.272, 1.47", "-128.079, 234.283, -2.1397, 1.69", "-129.252, 233.888, -1.90668, 0.66", "-131.052, 233.212, -1.86808, 0.29", "-132.541, 232.549, -2.0971, 0.29", "-133.638, 231.995, -2.39904, 0.88", "-134.216, 231.676, -2.58313, 0.88", "-134.274, 231.642, -2.60478, 0.88", "-135.49, 230.823, -3.16421, 0.29", "-136.08, 230.397, -3.50086, 0.29", "-136.586, 229.965, -3.81435, 0.29", "-136.655, 229.901, -3.8488, 0.29", "-137.069, 229.492, -4.07744, 0.29", "-137.263, 229.297, -4.18162, 0.96" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-67.5596, 158.261, -31.2221, 0.74", "-67.1811, 159.339, -30.9167, 0.74", "-66.872, 160.031, -30.8562, 0.74", "-66.8137, 160.158, -30.8409, 0.74", "-66.5561, 160.774, -30.7613, 0.74", "-66.5265, 160.848, -30.7514, 0.74", "-66.3903, 161.229, -30.7001, 0.22", "-65.9397, 162.89, -30.5989, 0.22", "-65.8131, 163.592, -30.5443, 0.22", "-65.7734, 163.913, -30.5158, 0.52", "-65.7705, 163.985, -30.5084, 0.52", "-65.7932, 164.369, -30.4686, 0.74", "-65.8961, 165.098, -30.389, 1.03", "-66.0182, 165.575, -30.3567, 1.03", "-66.0423, 165.714, -30.3542, 1.03", "-66.0777, 166.121, -30.3468, 1.18", "-66.0925, 166.596, -30.3385, 1.33", "-66.0709, 167.397, -30.3248, 0.96", "-66.0588, 167.62, -30.3106, 0.74", "-65.9884, 168.36, -30.2417, 0.74", "-65.8861, 169.157, -30.1316, 1.18", "-65.771, 169.875, -29.9912, 1.33", "-65.7221, 170.155, -29.9262, 1.33", "-65.5649, 171.035, -29.7055, 0.44", "-65.3687, 172.229, -29.4006, 0.44", "-65.28, 172.843, -29.2448, 0.44", "-65.1652, 173.723, -29.0332, 0.66", "-65.0977, 174.444, -28.8796, 0.66", "-65.069, 175.231, -28.7451, 0.66", "-65.0981, 175.888, -28.6796, 0.88", "-65.2065, 176.631, -28.658, 1.11", "-65.3199, 177.14, -28.6833, 1.11", "-65.507, 177.739, -28.7522, 1.11", "-65.746, 178.366, -28.8439, 1.11", "-66.0489, 179.099, -29.0076, 0.52", "-66.2219, 179.614, -29.1488, 0.44", "-66.2457, 179.71, -29.1766, 0.44", "-66.3259, 180.198, -29.3178, 0.44", "-66.3687, 180.844, -29.4912, 0.44", "-66.3677, 181.717, -29.7407, 0.74", "-66.3731, 182.733, -30.0128, 0.74", "-66.4086, 183.682, -30.3254, 0.59", "-66.4139, 183.759, -30.3549, 0.59", "-66.4704, 184.352, -30.6047, 0.59", "-66.5797, 185.209, -30.978, 0.59", "-66.747, 186.24, -31.429, 1.84", "-66.9605, 187.424, -31.9775, 1.84", "-67.0199, 187.962, -32.2184, 1.18", "-67.042, 188.435, -32.4081, 0.88", "-67.0181, 189.057, -32.6402, 0.88", "-67.0077, 189.124, -32.6596, 0.88", "-66.8659, 189.779, -32.8137, 0.88", "-66.7398, 190.567, -32.9379, 0.88", "-66.7261, 190.717, -32.9644, 0.88", "-66.7461, 191.655, -33.1408, 0.88", "-66.8356, 192.295, -33.2654, 0.59", "-67.0546, 193.114, -33.4177, 0.52", "-67.3284, 193.77, -33.5252, 0.52", "-67.3949, 193.896, -33.542, 0.52", "-67.6313, 194.377, -33.5791, 0.52", "-67.6606, 194.44, -33.5791, 0.52", "-67.804, 194.935, -33.6377, 0.52", "-67.8328, 195.686, -33.8042, 0.52", "-67.8239, 195.765, -33.826, 0.52", "-67.6082, 196.737, -34.1168, 0.52", "-67.5785, 196.836, -34.1482, 0.52", "-67.1488, 198.068, -34.5371, 1.11", "-66.9397, 198.59, -34.7004, 1.4", "-66.9138, 198.652, -34.719, 1.4", "-66.7102, 199.247, -34.8609, 1.55", "-66.6467, 199.501, -34.9379, 1.55", "-66.5379, 200.129, -35.139, 0.88", "-66.5263, 200.546, -35.2656, 0.74", "-66.5582, 200.887, -35.3859, 0.52", "-66.7311, 201.725, -35.755, 0.52", "-67.0643, 202.909, -36.3374, 0.52", "-67.0837, 202.972, -36.3681, 0.52", "-67.3336, 203.679, -36.6686, 0.52", "-67.5152, 204.167, -36.9228, 0.96", "-67.8328, 205.018, -37.4057, 1.18", "-68.0236, 205.553, -37.7603, 1.18", "-68.2607, 206.278, -38.2638, 1.03", "-68.5739, 207.38, -39.1142, 1.03", "-68.9474, 209.003, -40.5188, 0.74", "-68.9566, 209.054, -40.5661, 0.74", "-69.0678, 209.898, -41.4084, 1.03", "-69.0716, 209.945, -41.4611, 1.03", "-69.0582, 210.289, -41.8042, 1.03", "-69.0502, 210.352, -41.8348, 1.03", "-69.0179, 210.884, -41.9303, 1.03", "-69.0199, 210.963, -41.9416, 1.03", "-69.0769, 211.538, -41.9983, 0.37", "-69.3058, 213.019, -42.1549, 0.37", "-69.5483, 214.201, -42.2837, 0.37", "-69.7244, 214.95, -42.3631, 1.33", "-69.8977, 215.597, -42.4302, 1.92", "-70.0612, 216.149, -42.4836, 2.36", "-70.1835, 216.506, -42.5362, 2.06", "-70.4455, 217.143, -42.6614, 1.47", "-70.7683, 217.917, -42.8279, 0.88", "-70.9028, 218.274, -42.9016, 0.81", "-71.1143, 218.912, -43.0473, 0.74", "-71.428, 219.94, -43.2983, 0.59", "-71.6549, 220.825, -43.5116, 0.59", "-71.7731, 221.392, -43.6483, 0.59", "-71.8021, 221.689, -43.7069, 0.96", "-71.7962, 222.188, -43.7856, 1.25", "-71.7714, 222.414, -43.8317, 1.4", "-71.6117, 223.266, -44.0103, 0.59", "-71.5942, 223.335, -44.0272, 0.59", "-71.2665, 224.574, -44.3437, 0.59", "-71.0081, 225.674, -44.6213, 0.59", "-70.7409, 226.998, -44.9474, 1.03", "-70.6089, 227.885, -45.1553, 1.4", "-70.5359, 228.735, -45.371, 1.62", "-70.5291, 229.658, -45.6074, 1.33", "-70.6077, 230.524, -45.8218, 1.47", "-70.6978, 231.084, -45.9383, 1.77", "-70.8893, 231.832, -46.0534, 1.77", "-71.2178, 232.705, -46.2188, 1.77", "-71.5165, 233.308, -46.3606, 1.92", "-71.8373, 233.871, -46.5333, 1.92" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "92.831, 139.143, 19.0101, 1.03", "93.6732, 140.248, 19.5701, 1.03", "94.2157, 140.913, 20.0092, 1.03", "94.7304, 141.521, 20.4544, 1.4", "95.2517, 142.109, 20.8961, 1.62", "95.9062, 142.83, 21.4483, 1.62", "96.684, 143.66, 22.0496, 0.66", "97.6042, 144.605, 22.6713, 0.66", "97.671, 144.668, 22.7133, 0.66", "98.3546, 145.277, 23.1272, 0.66", "98.4025, 145.32, 23.154, 0.66", "99.4744, 146.356, 23.6516, 0.66", "99.5203, 146.407, 23.6767, 0.66", "100.312, 147.408, 24.1463, 0.66", "100.859, 148.174, 24.5432, 0.66", "101.11, 148.561, 24.8128, 1.11", "101.328, 148.917, 25.1109, 1.11", "101.854, 149.898, 26.0823, 0.52", "101.874, 149.938, 26.1226, 0.52", "102.126, 150.416, 26.6223, 0.52", "102.844, 151.581, 27.695, 0.52", "102.875, 151.622, 27.7269, 0.52", "103.18, 151.961, 27.9221, 0.52", "103.585, 152.348, 28.0595, 1.55", "104.112, 152.798, 28.17, 2.21", "104.672, 153.246, 28.2499, 2.5", "105.385, 153.831, 28.3026, 2.5", "106.278, 154.596, 28.3431, 1.03", "106.801, 155.052, 28.3569, 0.66", "107.695, 155.867, 28.3625, 0.66", "108.402, 156.519, 28.3555, 0.44", "109.051, 157.131, 28.338, 0.44", "109.646, 157.737, 28.3076, 0.44", "109.713, 157.809, 28.302, 0.44", "110.279, 158.411, 28.2378, 0.44", "110.675, 158.745, 28.1863, 0.88", "110.738, 158.781, 28.1771, 0.88", "111.229, 158.995, 28.1292, 1.11", "111.748, 159.196, 28.1004, 1.11", "111.964, 159.279, 28.0865, 1.11", "112.973, 159.623, 28.0172, 1.11", "113.487, 159.785, 27.9847, 1.25", "114.181, 159.96, 27.947, 1.69", "114.26, 159.976, 27.9432, 1.69", "114.506, 160.019, 27.9336, 1.69", "115.47, 160.21, 27.9084, 1.69", "116.532, 160.447, 27.9324, 1.25", "117.333, 160.638, 27.9761, 0.74", "117.402, 160.652, 27.9802, 0.74", "118.374, 160.79, 28.0375, 0.66", "119.711, 160.942, 28.1646, 0.66", "120.929, 161.05, 28.3107, 0.44", "122.135, 161.139, 28.5097, 0.44", "123.456, 161.218, 28.7651, 0.44", "124.992, 161.306, 29.1338, 0.44", "126.384, 161.389, 29.5265, 0.44", "127.087, 161.43, 29.7273, 1.11", "128.298, 161.532, 30.0689, 1.11", "128.922, 161.611, 30.2226, 1.33", "130.203, 161.875, 30.4647, 0.29", "131.051, 162.104, 30.5498, 0.29", "132.219, 162.44, 30.5294, 0.29", "132.296, 162.464, 30.5298, 0.29", "133.775, 162.971, 30.5476, 0.29", "134.418, 163.213, 30.6161, 0.81", "135.05, 163.462, 30.7255, 1.11", "135.638, 163.719, 30.8855, 1.11", "137.234, 164.49, 31.4614, 0.74", "138.328, 165.04, 31.9156, 0.44", "139.443, 165.645, 32.4718, 0.44", "139.744, 165.814, 32.6184, 0.81", "140.328, 166.152, 32.8804, 0.81", "140.564, 166.3, 32.9695, 0.81", "141.092, 166.685, 33.0823, 0.37", "141.152, 166.737, 33.0918, 0.37", "142.008, 167.6, 33.1694, 0.37", "142.338, 167.933, 33.1953, 0.66", "142.557, 168.157, 33.1991, 1.03", "143.276, 168.904, 33.1814, 1.03", "144.075, 169.754, 33.1336, 1.03", "144.859, 170.609, 33.0757, 0.29", "145.962, 171.864, 32.9781, 0.29", "146.579, 172.602, 32.932, 0.29", "146.978, 173.08, 32.9221, 0.66", "147.538, 173.738, 32.9354, 0.66", "147.979, 174.231, 32.9699, 1.03", "148.42, 174.705, 33.0289, 1.4", "149.073, 175.419, 33.1704, 0.29", "149.791, 176.167, 33.3711, 0.29", "150.365, 176.74, 33.5254, 0.29", "150.992, 177.352, 33.6506, 0.29", "151.099, 177.461, 33.6638, 0.29", "151.657, 178.052, 33.6827, 0.29", "151.748, 178.162, 33.6756, 0.52", "152.371, 179.002, 33.5439, 0.52", "152.962, 179.809, 33.3965, 0.52", "153.365, 180.352, 33.3426, 1.25", "153.759, 180.835, 33.3294, 1.69", "154.313, 181.452, 33.4026, 1.69", "155.232, 182.384, 33.6297, 0.59", "155.944, 183.057, 33.9259, 0.59", "157.028, 184.027, 34.524, 0.59", "157.681, 184.574, 34.9327, 0.96", "158.685, 185.392, 35.6262, 0.44", "159.338, 185.889, 36.1032, 0.44", "160.067, 186.376, 36.6572, 1.11", "160.151, 186.426, 36.7157, 1.11", "160.686, 186.654, 37.0102, 1.11", "161.244, 186.831, 37.3097, 1.55", "161.822, 186.97, 37.5915, 1.55", "163.357, 187.324, 38.2985, 0.29", "163.421, 187.339, 38.3253, 0.29", "165.214, 187.789, 39.0307, 0.29", "165.897, 187.96, 39.2851, 0.22", "165.962, 187.976, 39.3077, 0.22", "167.226, 188.315, 39.6888, 0.22", "167.294, 188.335, 39.7037, 0.22", "168.765, 188.813, 39.945, 0.22", "169.391, 189.056, 39.9914, 0.22", "169.46, 189.081, 39.9943, 0.22", "170.06, 189.284, 40.0214, 0.59", "170.293, 189.346, 40.0335, 0.96", "171.026, 189.542, 40.0719, 0.96", "171.721, 189.71, 40.1092, 0.96" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "92.831, 139.143, 19.0101, 0.29", "93.3038, 138.532, 19.3551, 0.29", "93.8016, 137.923, 19.694, 0.29", "93.8427, 137.872, 19.7219, 0.29", "95.7387, 135.55, 21.0125, 0.15", "95.8698, 135.389, 21.1017, 0.15", "96.1534, 135.042, 21.2948, 0.74", "96.3391, 134.834, 21.4303, 0.74" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "32.5609, 118.011, -58.9635, 0.22", "28.4959, 117.811, -48.3569, 0.22", "28.4672, 117.81, -48.2822, 0.22" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "32.5609, 118.011, -58.9635, 0.88", "32.7858, 118.73, -59.4036, 0.88", "33.2065, 120.073, -60.2266, 1.99", "33.53, 121.106, -60.8596, 2.43", "33.6312, 121.429, -61.0575, 2.43" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_144",
    "id" : "dend_144",
    "points3d" : [ "101.864, -185.686, -2.10158, 0.74", "102.561, -185.682, -1.45644, 0.74", "103.41, -185.68, -0.70592, 0.74", "105.341, -185.677, 0.951366, 0.88", "105.881, -185.684, 1.39459, 0.88", "105.96, -185.687, 1.45645, 0.88", "106.93, -185.766, 2.1503, 0.29", "107.199, -185.81, 2.32624, 0.66", "107.261, -185.829, 2.35122, 0.66", "107.6, -186.048, 2.28535, 0.96", "107.823, -186.235, 2.20435, 0.96", "108.609, -186.977, 1.83954, 0.81", "109.117, -187.508, 1.53981, 0.59", "109.189, -187.582, 1.50851, 0.59", "109.874, -188.257, 1.3418, 0.44", "109.933, -188.312, 1.3391, 0.44", "110.5, -188.802, 1.3603, 0.44", "110.557, -188.848, 1.36699, 0.44", "111.605, -189.752, 1.52077, 0.44", "112.147, -190.241, 1.60743, 1.18", "112.869, -190.916, 1.73772, 2.06", "113.578, -191.575, 1.84289, 2.21", "114.089, -192.01, 1.89578, 2.21", "115.074, -192.786, 1.94823, 0.37", "115.556, -193.099, 1.95292, 0.29", "115.646, -193.142, 1.96037, 0.29", "116.152, -193.267, 2.05529, 0.29", "117.134, -193.305, 2.34924, 0.29", "117.236, -193.289, 2.38235, 0.29", "118.249, -192.981, 2.72324, 0.29", "118.323, -192.96, 2.74962, 0.29", "118.75, -192.876, 2.91025, 0.29", "118.837, -192.879, 2.9434, 0.29", "119.128, -193.018, 3.03381, 0.96", "119.244, -193.094, 3.06012, 0.96", "119.744, -193.555, 3.11063, 1.18", "119.793, -193.604, 3.11498, 1.18", "120.126, -193.968, 3.1335, 1.18", "120.407, -194.283, 3.14088, 1.18" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_133",
    "id" : "dend_133",
    "points3d" : [ "101.864, -185.686, -2.10158, 1.03", "101.679, -186.896, -1.85335, 1.03", "101.573, -187.589, -1.71124, 1.03", "101.48, -188.197, -1.58644, 1.03" ],
    "parent" : "dend_132",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_120",
    "id" : "dend_120",
    "points3d" : [ "-17.8365, -139.92, 5.42648, 0.52", "-18.0293, -140.528, 5.56986, 0.52", "-18.4746, -142.009, 6.07785, 0.52", "-18.6651, -142.703, 6.3256, 0.96", "-18.8575, -143.446, 6.5734, 1.18", "-18.9779, -143.931, 6.72525, 1.47", "-19.0657, -144.272, 6.82128, 1.47", "-19.4448, -145.488, 7.11641, 0.81", "-19.8175, -146.559, 7.42111, 0.52", "-20.1755, -147.471, 7.69033, 0.52", "-20.3535, -147.859, 7.81241, 1.11", "-20.8955, -148.93, 8.08215, 1.11", "-21.3721, -149.792, 8.24366, 1.11", "-22.0763, -150.97, 8.34756, 0.81", "-22.1145, -151.029, 8.3479, 0.81", "-22.689, -151.911, 8.27726, 0.81", "-23.3929, -153.14, 8.06423, 0.81", "-23.4184, -153.202, 8.04476, 0.81", "-23.6486, -154.087, 7.69021, 0.81", "-23.8001, -154.92, 7.29655, 0.52", "-23.8074, -155.014, 7.25506, 0.52", "-23.7966, -156.062, 6.84252, 0.52", "-23.7374, -157.081, 6.52479, 0.52", "-23.7113, -157.51, 6.39076, 1.11", "-23.7068, -157.578, 6.37, 1.11", "-23.6752, -158.431, 6.15277, 1.4", "-23.6907, -159.193, 5.93539, 1.11", "-23.6959, -159.26, 5.91507, 1.11", "-23.874, -160.828, 5.45625, 0.96", "-23.8987, -160.987, 5.41004, 0.88", "-24.1244, -162.179, 5.06827, 0.88", "-24.3897, -163.196, 4.82754, 0.66", "-24.5675, -163.821, 4.71332, 0.66", "-24.5926, -163.886, 4.70649, 0.66", "-25.0266, -164.696, 4.82305, 0.66", "-25.0689, -164.761, 4.84322, 0.66", "-25.7675, -165.65, 5.27887, 0.66", "-25.8142, -165.709, 5.31291, 0.66", "-26.2941, -166.325, 5.67638, 0.66", "-27.1479, -167.526, 6.34106, 0.66", "-27.5535, -168.199, 6.66807, 0.81", "-27.5841, -168.258, 6.69178, 0.81", "-27.9281, -169.113, 6.94416, 0.81", "-27.9521, -169.188, 6.96195, 0.81", "-28.0691, -169.747, 7.04446, 1.18", "-28.1952, -170.619, 7.05458, 1.33", "-28.2022, -170.76, 7.05654, 1.33", "-28.2042, -171.191, 7.06303, 1.33", "-28.1975, -171.251, 7.06395, 1.33", "-28.1003, -171.757, 7.07951, 1.03", "-27.9365, -172.397, 7.10664, 0.74", "-27.6143, -173.367, 7.15577, 0.74", "-27.591, -173.434, 7.15929, 0.74", "-27.2309, -174.409, 7.21159, 0.74", "-27.0746, -174.844, 7.23315, 0.88", "-26.9641, -175.201, 7.2511, 0.88", "-26.8882, -175.66, 7.2728, 0.88", "-26.9296, -176.164, 7.29172, 0.29", "-27.0124, -176.429, 7.29807, 0.66", "-27.369, -177.134, 7.2817, 0.66", "-27.728, -177.767, 7.24307, 0.66", "-28.1368, -178.494, 7.18991, 0.96", "-28.5262, -179.182, 7.1345, 1.11", "-28.9345, -179.972, 7.06817, 1.11", "-29.2369, -180.612, 7.01238, 0.59", "-29.6059, -181.479, 6.88235, 0.59", "-29.9886, -182.559, 6.66488, 0.59", "-30.0296, -182.69, 6.63377, 0.59", "-30.2933, -183.492, 6.43622, 0.59", "-30.3184, -183.559, 6.41975, 0.59", "-30.8356, -184.74, 6.20241, 1.18", "-31.0922, -185.277, 6.13037, 1.4", "-31.6184, -186.333, 6.03412, 1.62", "-32.205, -187.503, 5.97326, 1.99", "-32.4042, -187.885, 5.96989, 1.99", "-33.0455, -189.129, 6.01708, 1.03", "-33.4579, -189.988, 6.06213, 0.81", "-33.7701, -190.669, 6.06953, 0.81", "-33.7924, -190.724, 6.06302, 0.81", "-34.0207, -191.4, 5.88428, 0.66", "-34.253, -192.247, 5.49586, 0.66", "-34.4581, -193.176, 4.92209, 1.18", "-34.4696, -193.237, 4.88416, 1.18", "-34.686, -194.48, 4.15233, 0.74", "-34.8314, -195.311, 3.7049, 0.59", "-35.029, -196.496, 3.11675, 0.59", "-35.1954, -197.3, 2.76568, 0.59", "-35.5426, -198.514, 2.31532, 0.59", "-35.7211, -199.023, 2.14231, 0.74", "-36.0012, -199.631, 1.98061, 1.03", "-36.0779, -199.765, 1.9457, 1.03", "-36.4935, -200.355, 1.8237, 1.25", "-37.1166, -201.094, 1.66676, 1.55", "-37.1709, -201.155, 1.65553, 1.55", "-37.6874, -201.793, 1.58081, 1.55", "-37.7297, -201.85, 1.57673, 1.55", "-38.0846, -202.423, 1.5614, 1.55", "-38.4859, -203.246, 1.57214, 0.66", "-38.9133, -204.245, 1.62265, 0.66", "-39.3017, -205.318, 1.64473, 0.66", "-39.3247, -205.395, 1.64434, 0.66", "-39.612, -206.55, 1.61249, 0.66", "-39.7373, -207.349, 1.56894, 0.96", "-39.7442, -207.43, 1.56599, 0.96", "-39.817, -208.353, 1.64657, 0.88", "-39.8601, -208.787, 1.72915, 0.66", "-39.8747, -208.865, 1.7502, 0.66", "-40.2886, -210.244, 2.09899, 0.52", "-40.71, -211.374, 2.36343, 0.52", "-41.3066, -212.771, 2.65972, 0.52", "-41.3387, -212.835, 2.6721, 0.52", "-41.8824, -213.851, 2.80595, 0.44", "-42.7232, -215.322, 2.89854, 0.44", "-42.7651, -215.389, 2.8855, 0.44", "-42.9467, -215.707, 2.73893, 0.81", "-43.245, -216.303, 2.38155, 0.81", "-43.487, -216.838, 2.06103, 0.81", "-43.51, -216.896, 2.02752, 0.81", "-44.1316, -218.534, 1.28818, 0.88", "-44.2824, -218.921, 1.13574, 0.52", "-44.5271, -219.509, 0.937401, 0.52", "-44.8009, -220.091, 0.782629, 0.44", "-45.1116, -220.704, 0.662453, 0.44", "-45.6895, -221.817, 0.564024, 1.25", "-46.0841, -222.562, 0.576593, 2.21", "-46.4785, -223.316, 0.599679, 2.43", "-46.9895, -224.354, 0.688222, 2.43", "-47.1393, -224.683, 0.733848, 2.43", "-47.5993, -225.849, 0.949151, 0.81", "-47.6199, -225.915, 0.963773, 0.81", "-47.7828, -226.614, 1.13449, 0.81", "-47.9456, -227.678, 1.38216, 0.59", "-47.9601, -227.826, 1.414, 0.59", "-48.0798, -229.05, 1.61396, 0.59", "-48.1722, -230.001, 1.70696, 0.59", "-48.1823, -230.081, 1.70659, 0.59", "-48.3779, -231.152, 1.60331, 0.59", "-48.4126, -231.299, 1.57613, 0.59", "-48.6845, -232.166, 1.38191, 0.59", "-48.9761, -232.871, 1.18196, 0.59", "-49.632, -234.036, 0.805453, 0.59", "-49.9633, -234.503, 0.6411, 0.88", "-50.0106, -234.555, 0.620563, 0.88", "-50.5076, -235.052, 0.441867, 0.88", "-50.594, -235.128, 0.418223, 0.88", "-51.2614, -235.804, 0.290268, 0.88", "-51.4678, -236.131, 0.340306, 0.44", "-51.4939, -236.194, 0.357593, 0.44", "-51.771, -237.213, 0.870947, 0.44", "-51.7824, -237.274, 0.909868, 0.44", "-51.9896, -238.434, 1.76731, 0.44", "-52.2173, -239.96, 3.03037, 0.44", "-52.2243, -240.004, 3.07, 0.44", "-52.4899, -241.451, 4.3841, 0.44", "-52.5102, -241.554, 4.48194, 0.44", "-52.6045, -242.029, 4.87509, 0.44", "-52.6184, -242.095, 4.92202, 0.44", "-52.8091, -243.126, 5.4334, 0.81", "-52.9047, -243.863, 5.74344, 1.11", "-52.9337, -244.261, 5.86313, 0.29", "-52.9766, -245.457, 6.22538, 0.29", "-52.9754, -245.552, 6.25478, 0.29", "-52.9541, -246.497, 6.54847, 0.74", "-52.951, -246.564, 6.56966, 0.74", "-52.9113, -247.187, 6.81835, 1.03", "-52.9078, -247.634, 7.03381, 1.25" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_119",
    "id" : "dend_119",
    "points3d" : [ "-17.8365, -139.92, 5.42648, 0.52", "-19.3246, -138.586, 9.44591, 0.52", "-19.5229, -138.4, 9.92311, 0.44", "-19.5706, -138.356, 10.0169, 0.44", "-20.0271, -137.957, 10.6912, 0.44", "-20.0623, -137.928, 10.7303, 0.44", "-20.9455, -137.257, 11.5351, 0.44", "-21.0088, -137.212, 11.562, 0.44", "-21.6263, -136.784, 11.8029, 0.44", "-22.429, -136.25, 12.1541, 0.37", "-23.0356, -135.86, 12.4339, 0.29", "-24.1363, -135.15, 12.9539, 0.22", "-24.2183, -135.097, 13.0008, 0.22", "-25.4731, -134.204, 14.008, 0.22", "-26.2012, -133.671, 14.8715, 0.22", "-26.3073, -133.592, 15.0321, 0.22", "-26.6275, -133.366, 15.5606, 0.22", "-27.6016, -132.717, 17.2658, 0.22", "-28.3107, -132.265, 18.5733, 0.22", "-29.1925, -131.698, 20.2849, 0.22", "-29.2625, -131.653, 20.4098, 0.22", "-29.8125, -131.306, 21.3172, 0.22", "-29.8501, -131.283, 21.3726, 0.22", "-30.5138, -130.905, 22.0935, 0.22", "-31.2207, -130.514, 22.6669, 0.22", "-31.2831, -130.478, 22.7067, 0.22", "-32.035, -130.06, 23.2206, 0.22", "-32.1108, -130.019, 23.2757, 0.22", "-32.6159, -129.76, 23.6139, 0.22", "-32.7582, -129.693, 23.7009, 0.22", "-33.4437, -129.373, 24.1019, 0.22", "-34.7153, -128.738, 24.8132, 0.22", "-34.79, -128.699, 24.8517, 0.22", "-35.493, -128.285, 25.1912, 0.22", "-35.5561, -128.243, 25.2198, 0.22", "-36.0926, -127.861, 25.4374, 0.22", "-36.19, -127.782, 25.4721, 0.22", "-36.6538, -127.357, 25.588, 0.22", "-37.4405, -126.676, 25.911, 0.22", "-37.4971, -126.626, 25.9394, 0.22", "-37.8252, -126.329, 26.1169, 0.44", "-37.9024, -126.258, 26.1616, 0.44", "-38.5355, -125.68, 26.5355, 0.44", "-39.6925, -124.66, 27.18, 0.22", "-40.7309, -123.808, 27.7381, 0.22", "-40.7832, -123.767, 27.7619, 0.22", "-41.6178, -123.136, 28.0895, 0.22", "-41.6899, -123.083, 28.1202, 0.22", "-42.6831, -122.389, 28.5621, 0.22", "-42.7367, -122.353, 28.5912, 0.22", "-43.6514, -121.807, 29.261, 0.22", "-43.6954, -121.78, 29.2974, 0.22", "-44.9105, -121.026, 30.4377, 0.22", "-45.0349, -120.95, 30.56, 0.22", "-46.1473, -120.294, 31.7599, 0.22", "-46.2486, -120.239, 31.8604, 0.22", "-46.9698, -119.885, 32.5209, 0.22", "-47.0338, -119.857, 32.5611, 0.22", "-47.6789, -119.6, 32.7635, 0.22", "-47.7508, -119.565, 32.776, 0.22", "-48.5909, -119.098, 32.7991, 0.22", "-48.7877, -118.975, 32.8029, 0.22", "-49.6488, -118.397, 32.8118, 0.22", "-49.7305, -118.339, 32.8123, 0.22", "-50.686, -117.556, 32.7893, 0.22", "-50.848, -117.413, 32.7828, 0.22", "-51.6587, -116.62, 32.7384, 0.22", "-51.8167, -116.465, 32.7286, 0.22", "-52.5013, -115.791, 32.6822, 0.22", "-53.4291, -114.922, 32.6187, 0.22", "-53.5583, -114.805, 32.6086, 0.22", "-54.1961, -114.197, 32.5541, 0.22", "-54.5863, -113.836, 32.5208, 0.22", "-55.0674, -113.399, 32.483, 0.22", "-55.1864, -113.299, 32.4567, 0.22", "-55.9578, -112.744, 32.2203, 0.22", "-56.0784, -112.664, 32.1758, 0.22", "-56.9912, -112.055, 31.7255, 0.22", "-57.0437, -112.019, 31.6952, 0.22", "-58.5069, -111.033, 30.681, 0.22", "-58.6228, -110.956, 30.5935, 0.22", "-59.2284, -110.557, 30.121, 0.22", "-60.0584, -109.975, 29.4591, 0.22", "-60.4708, -109.642, 29.1337, 0.22", "-61.4065, -108.848, 28.4773, 0.22", "-61.5735, -108.699, 28.3861, 0.22", "-62.2081, -108.119, 28.0757, 0.22", "-62.3311, -108.019, 28.0321, 0.22", "-63.3885, -107.293, 27.8211, 0.22", "-63.6165, -107.153, 27.797, 0.22", "-64.3646, -106.731, 27.7865, 0.22", "-64.4273, -106.698, 27.7857, 0.22", "-65.7589, -106.133, 27.8087, 0.22", "-65.9791, -106.061, 27.8207, 0.22", "-66.5598, -105.932, 27.871, 0.22", "-66.8148, -105.88, 27.8978, 0.22", "-67.3702, -105.756, 27.9651, 0.22", "-67.955, -105.608, 28.0448, 0.22", "-68.9326, -105.297, 28.2116, 0.22", "-69.01, -105.273, 28.2256, 0.22", "-69.6434, -105.076, 28.3475, 0.66", "-70.2411, -104.913, 28.4584, 0.66" ],
    "parent" : "dend_118",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_103",
    "id" : "dend_103",
    "points3d" : [ "-26.0802, -319.378, 17.9035, 1.11", "-26.5424, -320.178, 17.4838, 1.11", "-26.7182, -320.545, 17.3283, 1.11", "-27.2974, -321.889, 16.817, 0.37", "-27.7686, -323.21, 16.2999, 0.37", "-27.9844, -323.916, 16.0296, 0.37", "-28.3295, -325.045, 15.5199, 0.37", "-28.4859, -325.608, 15.2718, 0.37", "-28.5025, -325.668, 15.2382, 0.37", "-28.752, -326.531, 14.626, 0.37", "-28.8964, -327.018, 14.2017, 0.37", "-29.2268, -328.034, 13.2333, 0.66", "-29.3748, -328.476, 12.7671, 0.66", "-29.71, -329.514, 11.6128, 0.44", "-29.9196, -330.282, 10.7891, 0.37", "-30.0857, -330.993, 10.0573, 0.37", "-30.1019, -331.105, 9.94667, 0.37", "-30.1239, -332.431, 8.77002, 0.37", "-30.0569, -333.043, 8.18767, 1.11", "-29.913, -333.633, 7.68211, 1.62", "-29.881, -333.747, 7.58684, 1.62", "-29.8256, -333.942, 7.42061, 1.62", "-29.6393, -334.768, 6.77453, 1.62", "-29.3592, -336.324, 5.66454, 0.59", "-29.2089, -337.514, 4.88198, 0.59", "-29.1122, -338.938, 3.98628, 0.59", "-29.1113, -339.01, 3.94558, 0.59", "-29.1535, -339.805, 3.55304, 0.52", "-29.1633, -339.873, 3.5292, 0.52", "-29.3728, -340.684, 3.33899, 0.52", "-29.5642, -341.227, 3.22322, 0.74", "-29.7236, -341.64, 3.1758, 1.03", "-29.7475, -341.706, 3.16698, 1.03", "-29.9553, -342.384, 3.04872, 1.25", "-30.2514, -343.436, 2.82881, 1.25" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_102",
    "id" : "dend_102",
    "points3d" : [ "-26.0802, -319.378, 17.9035, 0.52", "-25.2602, -320.138, 19.0378, 0.52", "-24.9281, -320.446, 19.4972, 0.52", "-24.6239, -320.728, 19.9179, 0.52", "-24.5926, -320.757, 19.9613, 0.52", "-23.861, -321.435, 20.9733, 0.52", "-23.589, -321.688, 21.3496, 0.81" ],
    "parent" : "dend_101",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_96",
    "id" : "dend_96",
    "points3d" : [ "-14.9563, -333.573, -2.29581, 0.66", "-14.9051, -334.178, -2.1959, 0.66", "-14.8816, -334.79, -2.08969, 0.66", "-14.8767, -334.897, -2.07198, 0.66", "-14.8257, -335.946, -1.92546, 0.66", "-14.783, -336.917, -1.82, 0.37", "-14.7477, -337.941, -1.73672, 0.37", "-14.749, -338.043, -1.72937, 0.37", "-14.7862, -338.673, -1.7374, 0.37", "-14.8186, -339.146, -1.78074, 0.81", "-14.8574, -339.945, -1.92212, 0.81", "-14.8372, -340.654, -2.10049, 1.03", "-14.7956, -341.127, -2.27607, 1.03", "-14.69, -341.967, -2.63019, 1.55", "-14.5481, -342.565, -2.8979, 1.84", "-14.4367, -342.928, -3.04728, 1.84", "-14.3349, -343.19, -3.15919, 1.84", "-13.7368, -344.438, -3.73319, 0.29", "-13.4184, -344.999, -3.98231, 0.29", "-12.8466, -345.915, -4.36539, 0.29", "-12.2728, -346.839, -4.81219, 0.29", "-12.2343, -346.903, -4.842, 0.29", "-11.5422, -348.106, -5.35276, 0.29", "-11.1115, -348.912, -5.63614, 0.29", "-11.0827, -348.972, -5.65863, 0.29", "-10.6022, -350.28, -6.2556, 0.29", "-10.3789, -350.922, -6.60226, 0.74", "-10.2836, -351.307, -6.80539, 0.96", "-10.2372, -351.767, -7.03533, 0.96", "-10.2329, -351.831, -7.06351, 0.96", "-10.1293, -352.999, -7.48796, 0.29", "-10.117, -353.063, -7.51339, 0.29", "-9.91545, -353.747, -7.85086, 0.29", "-9.86726, -353.865, -7.91115, 0.29", "-9.24041, -355.05, -8.46685, 0.29", "-9.17037, -355.165, -8.51528, 0.29", "-8.26719, -356.488, -8.94967, 0.29", "-8.05865, -356.768, -9.07529, 1.4", "-7.82069, -357.044, -9.36803, 1.55", "-7.35198, -357.57, -10.1253, 0.29", "-7.32464, -357.597, -10.1847, 0.29", "-6.9549, -357.961, -11.0521, 0.29", "-6.41043, -358.509, -12.4431, 0.52", "-5.19438, -359.757, -15.7622, 0.52", "-5.05142, -359.902, -16.1808, 1.84", "-3.98587, -360.952, -19.5443, 0.29", "-3.77688, -361.152, -20.217, 0.29", "-3.61062, -361.298, -20.7738, 0.29" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_95",
    "id" : "dend_95",
    "points3d" : [ "-14.9563, -333.573, -2.29581, 0.29", "-14.4258, -333.248, -2.29581, 0.29", "-14.2856, -333.187, -2.29581, 0.29", "-13.1324, -332.897, -2.27864, 0.29", "-12.195, -332.724, -2.25886, 0.29", "-11.9046, -332.677, -2.25198, 0.59", "-11.2284, -332.532, -2.23619, 0.59", "-10.4362, -332.402, -2.21604, 0.59", "-9.54288, -332.3, -2.19161, 0.22", "-8.64491, -332.267, -2.16381, 0.22", "-8.57446, -332.262, -2.16128, 0.22", "-7.01649, -332.07, -2.10172, 0.22" ],
    "parent" : "dend_94",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_92",
    "id" : "dend_92",
    "points3d" : [ "77.9766, -448.719, -0.26028, 0.37", "79.549, -448.313, -1.04151, 0.37", "80.2209, -448.101, -1.40352, 0.37", "80.4091, -448.039, -1.5069, 0.37", "81.049, -447.839, -1.84455, 0.37", "81.1219, -447.822, -1.87903, 0.37", "81.9789, -447.675, -2.23908, 0.37", "82.9188, -447.603, -2.46429, 0.52", "82.9899, -447.609, -2.47921, 0.52", "83.4161, -447.715, -2.57365, 0.74", "84.192, -448.056, -2.73838, 1.47", "84.6266, -448.29, -2.85193, 1.47", "85.2511, -448.677, -3.02919, 1.11", "86.1636, -449.266, -3.28371, 0.74", "87.4263, -450.093, -3.67033, 0.74", "88.4457, -450.749, -4.14869, 0.74", "89.3434, -451.314, -4.70616, 1.03", "89.3966, -451.345, -4.74462, 1.03", "89.7705, -451.541, -5.04221, 1.33", "89.8859, -451.589, -5.15211, 1.33", "91.6809, -452.193, -6.92478, 1.55", "91.7857, -452.225, -7.02944, 1.55", "92.4878, -452.42, -7.77197, 1.62", "92.884, -452.524, -8.21008, 1.77", "94.7302, -452.919, -10.2427, 0.66", "95.7741, -453.1, -11.3575, 0.66", "95.8336, -453.107, -11.4141, 0.66", "97.5624, -453.245, -13.0498, 0.52", "97.6122, -453.247, -13.0989, 0.52", "98.3613, -453.241, -13.7973, 0.52", "98.4263, -453.238, -13.845, 0.52", "99.4786, -453.192, -14.5381, 0.52", "99.5429, -453.194, -14.5721, 0.52", "100.735, -453.372, -14.9707, 0.74", "101.187, -453.481, -15.1465, 0.96", "101.686, -453.657, -15.3685, 0.96", "101.749, -453.681, -15.395, 0.96", "102.336, -453.908, -15.6296, 0.96", "102.607, -453.996, -15.7114, 0.96", "103.297, -454.175, -15.8481, 0.44", "103.641, -454.259, -15.9314, 0.44", "104.633, -454.51, -16.1823, 0.44", "104.842, -454.57, -16.2319, 0.44", "105.471, -454.759, -16.3703, 0.44", "105.528, -454.776, -16.3826, 0.44", "106.173, -454.971, -16.5045, 1.03", "107.138, -455.27, -16.7036, 1.55", "107.82, -455.502, -16.8493, 1.77", "108.026, -455.577, -16.8912, 1.77", "108.942, -455.935, -17.0582, 0.37", "109.575, -456.168, -17.1533, 0.37", "109.635, -456.188, -17.1598, 0.37", "110.289, -456.412, -17.2288, 0.37", "110.512, -456.493, -17.2484, 0.37", "111.246, -456.764, -17.2888, 0.37", "111.592, -456.885, -17.2785, 0.81", "111.659, -456.907, -17.2745, 0.81", "112.184, -456.984, -17.2364, 1.11", "112.334, -456.977, -17.2233, 1.11", "112.764, -456.863, -17.1836, 1.11", "113.568, -456.45, -17.1, 0.29", "113.623, -456.41, -17.0833, 0.29", "114.513, -455.679, -16.4723, 0.29", "114.559, -455.652, -16.4274, 0.29", "114.982, -455.467, -15.9377, 0.74", "115.02, -455.454, -15.8928, 0.74", "115.983, -455.198, -14.6857, 0.66", "117.361, -454.922, -12.9669, 0.29", "119.112, -454.684, -10.7844, 0.29", "120.174, -454.567, -9.48992, 1.03", "120.597, -454.533, -8.98695, 1.03", "122.431, -454.408, -6.87314, 0.29", "122.652, -454.399, -6.63321, 0.52", "122.757, -454.394, -6.52257, 0.52", "124.367, -454.218, -4.96845, 0.22", "124.496, -454.202, -4.84858, 0.74", "124.587, -454.186, -4.7662, 0.74", "124.83, -454.129, -4.56362, 0.74", "124.904, -454.105, -4.50085, 0.74", "125.236, -453.957, -4.17752, 0.74", "126.699, -453.131, -2.71206, 0.22", "127.472, -452.711, -1.92651, 0.22", "127.645, -452.618, -1.75231, 0.66", "128.179, -452.33, -1.21691, 0.66", "130.059, -451.328, 0.599113, 0.22", "130.557, -451.066, 1.06488, 0.44", "131.887, -450.344, 2.45842, 0.15", "132.115, -450.236, 2.72521, 0.81", "132.166, -450.215, 2.78665, 0.81", "132.492, -450.099, 3.18517, 0.81", "132.536, -450.083, 3.23787, 0.81", "134.417, -449.391, 5.54981, 0.22", "134.766, -449.235, 6.02195, 0.22", "134.806, -449.218, 6.07676, 0.22", "135.422, -448.93, 6.87446, 0.22", "135.834, -448.739, 7.36297, 0.22", "135.882, -448.711, 7.42013, 0.22", "136.696, -448.03, 8.2568, 0.66", "136.737, -447.983, 8.31069, 0.66", "137.021, -447.579, 8.7615, 0.88", "137.095, -447.435, 8.91539, 0.88", "137.589, -446.125, 10.2924, 0.22", "137.813, -445.399, 11.0075, 0.22", "137.835, -445.325, 11.0628, 0.59", "137.851, -445.268, 11.1014, 0.59", "137.933, -444.958, 11.2872, 0.59", "138.319, -443.711, 11.9949, 0.15", "138.352, -443.626, 12.0374, 0.15", "139.021, -442.145, 12.8354, 0.15", "139.111, -441.96, 12.9344, 0.37", "139.278, -441.664, 13.132, 0.37", "140.127, -440.337, 14.1462, 0.15", "140.363, -440.012, 14.3989, 0.88", "140.518, -439.806, 14.6036, 0.88", "140.564, -439.746, 14.6731, 0.88", "141.579, -438.277, 16.4739, 0.22", "141.621, -438.209, 16.5553, 0.22", "142.049, -437.429, 17.4507, 0.22", "142.739, -436.105, 18.9596, 0.44", "142.966, -435.643, 19.4802, 0.44", "143.656, -434.146, 21.1131, 0.44", "143.894, -433.557, 21.707, 0.29", "143.989, -433.305, 21.9678, 0.59", "144.26, -432.448, 22.9021, 0.81" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_91",
    "id" : "dend_91",
    "points3d" : [ "77.9766, -448.719, -0.26028, 1.11", "77.665, -449.319, -0.342078, 1.11", "77.2136, -450.094, -0.448078, 0.88", "76.7385, -450.858, -0.54679, 0.66", "76.2933, -451.551, -0.588479, 0.37", "75.839, -452.27, -0.598615, 0.37", "75.7542, -452.404, -0.597344, 0.37", "75.0986, -453.357, -0.561218, 0.37", "74.7065, -453.894, -0.519093, 0.66", "74.193, -454.601, -0.42906, 0.29", "73.6227, -455.367, -0.292093, 0.29", "73.5349, -455.488, -0.270681, 0.29", "73.2232, -455.915, -0.207912, 0.29", "73.133, -456.038, -0.196117, 0.29", "72.4939, -456.845, -0.259809, 0.29", "72.2785, -457.098, -0.31152, 0.88", "71.9748, -457.439, -0.39878, 0.88", "71.3621, -458.164, -0.648561, 0.29", "70.525, -459.23, -1.07895, 0.29", "69.707, -460.291, -1.56541, 0.44", "69.3593, -460.757, -1.80681, 0.44", "69.3186, -460.819, -1.83915, 0.44", "68.8121, -461.724, -2.32447, 0.29", "68.5277, -462.377, -2.69445, 0.29", "68.5105, -462.437, -2.7288, 0.29", "68.4631, -462.786, -2.87201, 0.59", "68.4262, -463.388, -3.11066, 0.59", "68.421, -463.458, -3.13224, 0.59" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_90",
    "id" : "dend_90",
    "points3d" : [ "77.9766, -448.719, -0.26028, 2.73", "77.9866, -448.748, -0.285512, 2.73", "78.6323, -451.013, -1.9428, 0.52", "78.825, -451.722, -2.44445, 0.52", "78.8925, -452.016, -2.66864, 0.52", "79.1297, -453.173, -3.55487, 0.52", "79.1404, -453.228, -3.59736, 0.52", "79.5736, -455.566, -5.50627, 0.52", "79.5823, -455.612, -5.54401, 0.52", "79.8539, -456.868, -6.66809, 1.11", "79.9496, -457.303, -7.07456, 1.47", "79.9601, -457.355, -7.1252, 1.47", "80.3812, -459.204, -8.93768, 0.52", "80.7002, -460.332, -10.0646, 0.52", "80.8193, -460.705, -10.4273, 0.88", "80.904, -460.925, -10.6254, 0.88", "80.9272, -460.982, -10.6769, 0.88", "81.0285, -461.207, -10.8548, 0.88", "81.409, -461.886, -11.174, 0.37", "81.4755, -461.971, -11.2097, 0.37", "81.8546, -462.397, -11.3722, 0.37", "81.9656, -462.517, -11.4078, 0.37", "82.4421, -463.076, -11.5222, 0.37", "82.5353, -463.193, -11.5341, 0.37", "82.8787, -463.645, -11.5341, 0.59", "82.9371, -463.726, -11.5341, 0.59", "83.1889, -464.183, -11.5341, 0.74", "83.3003, -464.453, -11.571, 0.74", "83.4764, -465.05, -11.707, 0.74", "83.496, -465.186, -11.7456, 0.74", "83.5034, -465.728, -11.9215, 0.44", "83.4341, -466.859, -12.2873, 0.44", "83.3054, -468.01, -12.6439, 0.29", "83.2959, -468.077, -12.6626, 0.29", "83.1332, -469.185, -12.9061, 0.29", "83.1152, -469.335, -12.9316, 0.29", "83.0547, -470.25, -13.0258, 0.29", "83.0729, -470.604, -13.1013, 0.74", "83.1773, -471.24, -13.2746, 1.11", "83.4372, -471.986, -13.7841, 1.11", "83.4645, -472.043, -13.8376, 1.11", "83.6983, -472.477, -14.2978, 1.11", "84.5369, -473.894, -15.9165, 0.29", "85.0175, -474.678, -16.839, 0.29", "86.2452, -476.547, -19.1373, 0.29", "86.3163, -476.661, -19.2853, 0.96", "86.6189, -477.202, -19.9364, 1.25", "86.8352, -477.621, -20.4297, 1.4", "86.9261, -477.804, -20.6108, 1.4", "86.974, -477.899, -20.7065, 1.4", "87.6905, -479.445, -22.0738, 0.44", "88.0557, -480.198, -22.7643, 0.44", "88.7373, -481.544, -24.0525, 0.66", "89.1882, -482.368, -24.9321, 0.66", "89.8428, -483.378, -25.9758, 0.66", "90.1041, -483.725, -26.3213, 1.47", "90.3076, -483.955, -26.5366, 1.77", "90.3705, -484.02, -26.5962, 1.77", "91.9585, -485.571, -27.8462, 0.22", "93.5021, -486.964, -28.9183, 0.22", "93.817, -487.234, -29.0932, 0.81", "93.8892, -487.293, -29.1286, 0.81", "94.4792, -487.809, -29.4164, 0.81", "94.8168, -488.127, -29.5583, 0.15", "95.3895, -488.71, -29.7182, 0.15", "95.5702, -488.909, -29.7869, 1.18", "95.9024, -489.291, -29.9214, 1.55", "96.7721, -490.319, -30.2605, 0.22", "97.5667, -491.298, -30.5545, 0.22", "97.6603, -491.415, -30.5862, 0.22", "98.2115, -492.063, -30.7358, 0.22", "98.3151, -492.171, -30.7674, 0.22", "99.1707, -492.981, -31.0145, 0.22", "99.6984, -493.441, -31.1476, 0.22", "99.8265, -493.554, -31.1857, 0.22", "100.685, -494.334, -31.5697, 0.22", "101.802, -495.49, -32.2149, 0.22", "102.57, -496.465, -32.8158, 0.22", "102.717, -496.69, -32.963, 1.11", "102.84, -496.92, -33.1113, 1.11", "103.474, -498.391, -34.102, 0.22", "103.948, -499.884, -35.1066, 0.22", "104.341, -501.564, -36.1895, 0.22", "104.374, -501.76, -36.3178, 0.88", "104.428, -502.175, -36.6033, 0.88", "104.55, -503.229, -37.3151, 0.22", "104.622, -504.011, -37.8017, 0.22", "104.654, -504.254, -37.9754, 0.81", "104.751, -504.684, -38.2668, 0.81", "105.101, -505.823, -38.9733, 0.15", "105.447, -506.74, -39.4647, 0.15", "105.506, -506.875, -39.5168, 0.15", "105.943, -507.682, -39.7998, 0.15", "106.053, -507.855, -39.8514, 0.15", "106.401, -508.311, -39.9267, 0.15", "106.609, -508.56, -39.8939, 0.81", "106.656, -508.612, -39.8832, 0.81", "106.858, -508.852, -39.823, 0.81" ],
    "parent" : "dend_89",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_80",
    "id" : "dend_80",
    "points3d" : [ "-108.013, 166.515, -154.141, 0.29", "-108.547, 166.49, -154.829, 0.29", "-108.593, 166.485, -154.883, 0.29", "-109.441, 166.361, -155.832, 0.29", "-109.547, 166.346, -155.942, 0.29", "-110.069, 166.273, -156.452, 0.29", "-111.144, 166.123, -157.534, 0.66", "-111.666, 166.063, -158.016, 0.66", "-111.728, 166.056, -158.067, 0.66", "-112.082, 166.013, -158.315, 0.66", "-112.144, 166.01, -158.353, 0.66", "-112.999, 166.059, -158.807, 0.29", "-113.812, 166.181, -159.151, 0.29", "-114.213, 166.265, -159.336, 0.66", "-114.276, 166.28, -159.365, 0.66", "-114.78, 166.39, -159.577, 0.66", "-114.847, 166.399, -159.597, 0.66", "-115.526, 166.437, -159.89, 0.29", "-116.169, 166.44, -160.26, 0.29", "-116.229, 166.438, -160.297, 0.29", "-116.9, 166.406, -160.691, 0.96", "-118.04, 166.324, -161.341, 0.96", "-119.901, 166.242, -162.237, 0.29", "-119.976, 166.241, -162.272, 0.29", "-120.504, 166.241, -162.535, 0.29", "-121.369, 166.268, -162.951, 0.29", "-121.505, 166.277, -163.014, 0.29", "-122.967, 166.405, -163.55, 0.29", "-123.96, 166.444, -163.804, 0.81", "-124.12, 166.443, -163.849, 0.81", "-124.776, 166.398, -164.028, 0.81", "-124.871, 166.387, -164.053, 0.81", "-126.065, 166.177, -164.328, 0.81", "-126.947, 165.965, -164.497, 0.29", "-127.018, 165.949, -164.505, 0.29", "-128.683, 165.559, -164.687, 0.29", "-128.751, 165.543, -164.693, 0.29", "-129.094, 165.463, -164.719, 0.66", "-129.162, 165.448, -164.722, 0.66", "-130.516, 165.182, -164.722, 0.66", "-130.617, 165.164, -164.722, 0.66", "-131.202, 165.072, -164.722, 1.03", "-131.423, 165.039, -164.733, 1.03", "-132.242, 164.941, -164.865, 1.03", "-132.312, 164.934, -164.883, 1.03", "-133.215, 164.91, -165.208, 1.25", "-133.29, 164.911, -165.237, 1.25", "-133.991, 164.969, -165.618, 0.74", "-134.818, 165.087, -166.139, 0.37", "-134.883, 165.1, -166.185, 0.37", "-136.116, 165.341, -167.059, 0.37", "-136.175, 165.35, -167.102, 0.37", "-137.622, 165.539, -168.107, 0.37", "-137.884, 165.557, -168.256, 0.88", "-137.948, 165.558, -168.286, 0.88", "-138.679, 165.519, -168.571, 0.88", "-139.698, 165.419, -168.889, 0.29", "-139.767, 165.414, -168.903, 0.29", "-141.209, 165.317, -169.064, 0.29", "-141.289, 165.312, -169.07, 0.29", "-143.087, 165.206, -169.177, 0.29", "-143.391, 165.192, -169.188, 0.29", "-144.881, 165.114, -169.2, 0.29", "-145.031, 165.104, -169.201, 0.29", "-147.506, 164.894, -169.216, 0.29", "-147.585, 164.885, -169.216, 0.29", "-148.635, 164.728, -169.242, 1.11", "-149.346, 164.593, -169.276, 1.77", "-149.413, 164.575, -169.281, 1.77", "-149.926, 164.439, -169.335, 1.77", "-150.037, 164.416, -169.349, 1.77", "-151.029, 164.255, -169.47, 0.52", "-151.098, 164.242, -169.478, 0.52", "-151.925, 164.059, -169.565, 0.29", "-152.086, 164.015, -169.574, 0.29", "-154.082, 163.214, -169.571, 0.29", "-154.3, 163.102, -169.559, 0.66", "-154.903, 162.688, -169.677, 0.66", "-155.532, 162.21, -170.011, 0.66", "-155.918, 161.883, -170.344, 0.22", "-156.694, 161.177, -171.379, 0.22", "-156.732, 161.138, -171.44, 0.74", "-158.559, 159.349, -174.406, 0.44", "-159.095, 158.864, -175.344, 0.44", "-159.128, 158.837, -175.403, 0.44", "-160.116, 158.147, -177.26, 0.29", "-160.927, 157.761, -178.5, 0.29", "-160.969, 157.746, -178.555, 0.29", "-161.751, 157.518, -179.436, 0.74", "-162.079, 157.434, -179.812, 0.74", "-163.877, 157.14, -181.861, 0.15", "-165.551, 157.034, -183.889, 0.15", "-166.252, 156.968, -185.434, 0.81", "-166.276, 156.964, -185.503, 0.81", "-166.379, 156.939, -185.879, 0.81", "-166.861, 156.721, -188.232, 0.15", "-167.122, 156.494, -190.164, 0.96", "-167.728, 155.364, -198.381, 0.44", "-167.74, 155.323, -198.623, 0.44", "-167.742, 155.31, -198.695, 0.44", "-167.729, 155.093, -199.79, 0.44", "-167.712, 155.038, -200.02, 0.44", "-167.643, 154.87, -200.636, 0.74", "-167.396, 154.343, -200.511, 0.74", "-167.332, 154.2, -200.474, 0.74" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_77",
    "id" : "dend_77",
    "points3d" : [ "-108.013, 166.515, -154.141, 0.29", "-108.712, 168.133, -155.679, 0.29", "-109.025, 168.784, -156.693, 0.29", "-109.043, 168.82, -156.752, 0.29", "-109.207, 169.118, -157.372, 0.66", "-109.365, 169.399, -157.958, 0.66", "-109.833, 170.284, -159.991, 0.66", "-110.423, 171.366, -162.763, 0.66", "-110.436, 171.39, -162.828, 0.66", "-110.893, 172.334, -165.374, 0.96", "-111.005, 172.59, -166.083, 0.96", "-111.393, 173.554, -168.808, 0.22", "-111.403, 173.58, -168.873, 0.22", "-111.551, 173.991, -169.789, 0.22", "-111.562, 174.021, -169.854, 0.22", "-111.73, 174.503, -170.809, 0.59", "-111.741, 174.537, -170.87, 0.59", "-111.887, 174.974, -171.523, 0.59", "-112.342, 176.216, -173.346, 0.59", "-112.736, 177.229, -174.857, 0.22", "-112.77, 177.321, -174.988, 0.22", "-113.026, 178.228, -176.116, 0.22", "-113.035, 178.273, -176.17, 0.22", "-113.093, 178.774, -176.714, 0.22", "-113.096, 178.822, -176.766, 0.22", "-113.102, 179.81, -177.88, 0.37", "-113.089, 180.448, -178.653, 0.37", "-113.048, 181.324, -179.74, 0.88", "-113.016, 181.814, -180.331, 0.88", "-112.808, 184.061, -183.536, 0.22", "-112.79, 184.686, -184.455, 0.22", "-112.807, 185.162, -185.166, 0.96", "-112.845, 185.566, -185.786, 1.4", "-112.851, 185.609, -185.854, 1.4", "-113.388, 188.346, -190.263, 0.22", "-113.612, 189.144, -191.566, 0.22", "-113.695, 189.376, -191.972, 0.59", "-113.762, 189.538, -192.247, 0.59", "-114.181, 190.391, -193.855, 0.22", "-114.201, 190.425, -193.917, 0.22", "-114.565, 190.928, -194.807, 0.81", "-114.614, 190.991, -194.935, 0.81", "-114.859, 191.295, -195.568, 0.81", "-116.276, 192.93, -198.995, 0.22", "-116.647, 193.31, -199.769, 0.22", "-116.796, 193.45, -200.069, 0.59", "-116.854, 193.504, -200.216, 0.59", "-116.935, 193.577, -200.456, 0.59", "-116.975, 193.614, -200.588, 0.59", "-117.145, 193.79, -201.209, 0.59", "-117.613, 194.333, -203.122, 0.96", "-118.368, 195.254, -206.159, 0.15", "-118.383, 195.272, -206.218, 0.15", "-118.627, 195.559, -207.13, 0.15", "-118.654, 195.591, -207.222, 0.74", "-118.73, 195.686, -207.454, 0.74", "-118.934, 195.912, -207.772, 0.74", "-119.853, 196.843, -208.434, 0.15", "-119.9, 196.888, -208.463, 0.15", "-120.373, 197.32, -208.716, 0.15", "-120.518, 197.455, -208.802, 0.15", "-121.205, 198.078, -209.192, 0.15", "-121.291, 198.159, -209.302, 0.15", "-121.608, 198.46, -209.852, 0.15", "-121.638, 198.489, -209.909, 0.15", "-122.1, 198.966, -210.962, 0.88", "-122.478, 199.355, -211.9, 1.25", "-123.741, 200.635, -215.198, 0.22", "-123.776, 200.669, -215.294, 0.22", "-124.187, 201.049, -216.42, 0.22", "-124.605, 201.419, -217.473, 0.66", "-124.667, 201.472, -217.619, 0.66", "-124.852, 201.628, -218.04, 0.66", "-126.593, 203.085, -221.155, 0.22", "-126.662, 203.143, -221.278, 0.22", "-126.951, 203.404, -221.902, 0.22", "-127.402, 203.85, -222.948, 0.96", "-127.436, 203.891, -223.032, 0.96", "-127.776, 204.368, -223.911, 0.96", "-127.796, 204.405, -223.967, 0.96", "-128.766, 206.442, -226.837, 0.29", "-128.781, 206.477, -226.888, 0.29", "-129.129, 207.424, -228.133, 0.29", "-129.144, 207.467, -228.187, 0.29", "-129.479, 208.431, -229.312, 1.03", "-129.678, 209.017, -229.897, 1.03", "-130.112, 210.331, -230.839, 0.22", "-130.348, 210.998, -231.564, 0.22", "-130.365, 211.044, -231.618, 0.22", "-130.604, 211.64, -232.3, 0.22", "-130.774, 212.042, -232.772, 1.03", "-130.991, 212.534, -233.354, 1.03", "-132.21, 215.227, -236.378, 0.22", "-132.915, 216.707, -238.218, 0.22", "-132.94, 216.755, -238.278, 0.22", "-133.427, 217.613, -239.371, 1.55", "-133.681, 218.026, -239.855, 2.06", "-133.918, 218.362, -240.228, 2.06", "-135.415, 220.188, -241.899, 0.44", "-136.022, 220.769, -242.632, 0.22", "-136.09, 220.826, -242.713, 0.22", "-136.795, 221.312, -243.463, 0.22", "-137.325, 221.617, -244.024, 0.22", "-137.382, 221.645, -244.126, 0.22", "-138.141, 222.086, -246.02, 1.03", "-138.16, 222.104, -246.085, 1.03", "-138.328, 222.325, -246.761, 1.03", "-138.341, 222.35, -246.826, 1.03", "-139.217, 224.617, -251.58, 0.29", "-139.36, 225.081, -252.392, 0.29", "-139.521, 225.744, -253.351, 0.22", "-139.625, 226.209, -253.97, 0.22", "-139.679, 226.487, -254.294, 0.22", "-139.9, 227.539, -255.349, 0.22", "-140.185, 228.761, -256.06, 1.03", "-140.302, 229.188, -256.365, 1.47", "-140.32, 229.24, -256.41, 1.47", "-140.523, 229.806, -256.979, 1.69" ],
    "parent" : "dend_76",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_73",
    "id" : "dend_73",
    "points3d" : [ "-137.263, 229.297, -4.18162, 0.29", "-138.101, 228.618, -4.89051, 0.29", "-138.647, 228.174, -5.35265, 0.29", "-138.844, 228.015, -5.51865, 0.66", "-139.613, 227.391, -6.16912, 0.74" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_72",
    "id" : "dend_72",
    "points3d" : [ "-137.263, 229.297, -4.18162, 0.22", "-137.967, 230.2, -4.41183, 0.22", "-138.279, 230.61, -4.50491, 0.22", "-138.363, 230.72, -4.53007, 0.22", "-138.731, 231.203, -4.63968, 0.22", "-138.978, 231.527, -4.71333, 0.66", "-139.165, 231.772, -4.7692, 0.66", "-139.214, 231.837, -4.7692, 0.66" ],
    "parent" : "dend_71",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "-71.8373, 233.871, -46.5333, 0.74", "-72.056, 235.402, -47.749, 0.74", "-72.0611, 235.456, -47.7941, 0.74", "-72.1239, 236.723, -48.7902, 0.74", "-72.1782, 237.357, -49.2175, 1.03", "-72.21, 237.611, -49.3379, 1.03", "-72.2214, 237.711, -49.379, 1.03", "-72.3404, 238.864, -49.7446, 0.81", "-72.3783, 239.564, -49.9339, 0.52", "-72.4011, 240.883, -50.2282, 0.52", "-72.3481, 243.283, -50.8072, 0.52", "-72.2515, 244.64, -51.1373, 0.52", "-72.2461, 244.709, -51.1529, 0.52", "-72.0935, 246.205, -51.4409, 0.52", "-72.0807, 246.282, -51.4582, 0.52", "-71.7526, 247.237, -51.7283, 0.96", "-71.3428, 247.836, -51.9756, 0.96" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-71.8373, 233.871, -46.5333, 0.66", "-71.7921, 234.521, -46.5239, 0.66", "-71.751, 235.242, -46.5163, 0.66", "-71.6992, 236.258, -46.5077, 0.66", "-71.6439, 237.609, -46.4987, 0.59", "-71.5959, 238.84, -46.4917, 0.59", "-71.5931, 238.91, -46.4914, 0.59", "-71.5739, 239.35, -46.4973, 0.59", "-71.5712, 239.421, -46.4983, 0.59", "-71.5478, 239.964, -46.4842, 0.88", "-71.5334, 240.071, -46.4752, 0.88", "-71.427, 240.493, -46.3773, 0.88", "-71.3959, 240.578, -46.3518, 0.88", "-71.2029, 241.295, -46.1512, 0.88", "-71.0714, 241.885, -46.0236, 0.88", "-71.0559, 241.956, -46.013, 0.88", "-70.893, 242.767, -45.9234, 0.29", "-70.7234, 243.747, -45.8508, 0.29", "-70.4422, 245.538, -45.7791, 0.29", "-70.1837, 247.349, -45.7638, 0.29", "-70.0803, 248.054, -45.7816, 0.88", "-70.0343, 248.37, -45.7954, 0.96", "-69.9071, 249.342, -45.863, 0.37", "-69.7569, 250.438, -45.901, 0.37", "-69.7433, 250.508, -45.9005, 0.37", "-69.6166, 251.192, -45.8566, 1.03", "-69.4527, 252.034, -45.7618, 1.4", "-69.2655, 252.836, -45.6587, 1.4", "-69.0501, 253.687, -45.5367, 0.88", "-69.0139, 253.833, -45.5221, 0.88", "-68.9575, 254.048, -45.5127, 0.88", "-68.7043, 254.971, -45.5561, 0.52", "-68.5844, 255.376, -45.6055, 0.74", "-68.4112, 255.944, -45.7097, 0.74", "-68.1295, 256.93, -45.9371, 0.29", "-67.8518, 258.0, -46.2028, 0.29", "-67.6606, 258.939, -46.4356, 0.96", "-67.6495, 259.017, -46.4532, 0.96", "-67.5677, 259.818, -46.595, 1.25", "-67.5418, 260.143, -46.6387, 1.25", "-67.5158, 260.837, -46.6951, 0.29", "-67.5239, 262.068, -46.7615, 0.29", "-67.5747, 263.455, -46.788, 0.29", "-67.6302, 264.276, -46.8026, 1.18", "-67.6441, 264.419, -46.8044, 1.18", "-67.6947, 264.846, -46.8062, 1.18", "-67.7198, 265.009, -46.804, 1.18", "-67.7934, 265.361, -46.8304, 1.18", "-67.9241, 265.986, -46.942, 0.44", "-67.933, 266.053, -46.9624, 0.44", "-67.982, 267.148, -47.3294, 0.44", "-67.9803, 267.223, -47.3566, 0.44", "-67.8875, 268.129, -47.664, 1.18", "-67.7475, 269.171, -47.9775, 1.55", "-67.6102, 270.038, -48.2166, 0.22", "-67.4802, 270.883, -48.4277, 0.22", "-67.4693, 270.954, -48.44, 0.22", "-67.316, 272.212, -48.5422, 0.22", "-67.2094, 273.386, -48.5508, 0.22", "-67.2048, 273.456, -48.5491, 0.22", "-67.1833, 273.876, -48.5249, 1.03", "-67.1443, 275.167, -48.456, 0.29", "-67.1253, 276.297, -48.4042, 0.29", "-67.1141, 277.353, -48.3636, 0.29", "-67.1113, 277.436, -48.3613, 0.29", "-67.0888, 277.895, -48.3662, 0.81", "-67.0263, 278.747, -48.4157, 0.81", "-66.9611, 279.459, -48.5125, 0.81", "-66.9169, 279.904, -48.5787, 0.81", "-66.9102, 279.966, -48.586, 0.81", "-66.8382, 280.596, -48.6454, 0.88", "-66.8177, 280.738, -48.656, 0.88", "-66.7563, 281.107, -48.6795, 0.88", "-66.6201, 281.95, -48.7218, 1.03", "-66.3681, 283.613, -48.7791, 0.29", "-66.1607, 285.066, -48.7228, 0.29", "-65.9969, 286.241, -48.6493, 0.29", "-65.9866, 286.313, -48.6443, 0.29", "-65.9061, 286.85, -48.5996, 1.11", "-65.7137, 287.993, -48.4719, 1.33", "-65.4772, 289.541, -48.1915, 1.55" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "171.721, 189.71, 40.1092, 0.44", "172.822, 190.507, 39.9131, 0.44", "173.68, 191.168, 39.7633, 0.52", "173.736, 191.215, 39.7611, 0.52", "174.199, 191.641, 39.8455, 0.96", "174.655, 192.081, 39.9883, 0.29", "175.23, 192.637, 40.2181, 0.29", "175.275, 192.685, 40.2451, 0.29", "175.903, 193.4, 40.723, 0.59", "176.532, 194.099, 41.1909, 0.59", "176.568, 194.138, 41.2182, 0.59", "176.93, 194.472, 41.4494, 0.96", "177.431, 194.816, 41.6485, 0.96", "178.125, 195.221, 41.8142, 0.81", "178.685, 195.508, 41.8936, 0.29", "178.752, 195.538, 41.9006, 0.29", "179.74, 195.954, 42.0097, 0.29", "180.95, 196.404, 42.1459, 0.29", "181.018, 196.426, 42.1602, 0.29", "181.795, 196.633, 42.3738, 1.03", "182.442, 196.775, 42.6302, 1.33", "182.532, 196.787, 42.6736, 1.33", "182.862, 196.796, 42.8628, 1.33", "184.382, 196.726, 43.8157, 0.44", "185.269, 196.646, 44.3529, 0.44", "186.439, 196.515, 45.0157, 0.44", "187.298, 196.413, 45.5035, 0.44", "187.768, 196.364, 45.7478, 0.44", "187.897, 196.352, 45.8062, 0.44", "188.371, 196.338, 45.9217, 0.81", "189.07, 196.499, 45.9979, 0.81", "189.211, 196.555, 45.9984, 0.81", "189.793, 196.799, 45.9984, 0.81", "189.887, 196.834, 45.9984, 0.81", "190.906, 197.158, 45.9984, 0.29", "191.836, 197.376, 45.9984, 0.29", "191.935, 197.393, 45.9984, 0.29", "192.896, 197.51, 45.9984, 0.29", "193.331, 197.53, 45.9984, 0.66", "193.402, 197.528, 45.9984, 0.66", "193.949, 197.408, 45.9984, 0.88", "194.148, 197.334, 45.9984, 0.88", "194.364, 197.245, 45.9984, 0.88", "194.841, 197.033, 45.9984, 0.29", "194.897, 197.01, 46.0002, 0.29", "195.759, 196.668, 46.042, 0.29", "195.913, 196.613, 46.0511, 0.29", "196.633, 196.44, 46.0997, 0.29", "196.693, 196.427, 46.1041, 0.29", "198.036, 196.173, 46.2134, 0.29", "198.106, 196.163, 46.2195, 0.29", "198.972, 196.119, 46.3069, 0.29", "200.112, 196.111, 46.4288, 2.14" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "171.721, 189.71, 40.1092, 0.22", "172.319, 189.333, 40.1224, 0.22", "173.208, 188.777, 40.1424, 0.22", "174.715, 187.847, 40.176, 0.22", "175.737, 187.219, 40.1987, 0.22", "177.249, 186.289, 40.2323, 0.22", "177.394, 186.199, 40.2356, 0.44", "177.527, 186.127, 40.2421, 0.44", "177.941, 185.925, 40.2608, 0.44", "178.003, 185.893, 40.2618, 0.44" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "33.6312, 121.429, -61.0575, 0.66", "34.4197, 122.322, -61.054, 0.66", "35.2225, 123.2, -61.0474, 0.66", "36.0441, 124.062, -61.1091, 0.52", "36.5827, 124.621, -61.1706, 0.52", "37.0472, 125.121, -61.2356, 1.11", "37.0991, 125.182, -61.2439, 1.11", "37.6514, 125.821, -61.3494, 1.11", "38.2991, 126.726, -61.51, 0.96", "38.3364, 126.796, -61.5221, 0.96", "38.5854, 127.39, -61.6088, 0.96", "38.9502, 128.339, -61.7244, 0.96", "39.0001, 128.471, -61.7367, 0.96", "39.3511, 129.456, -61.7872, 0.96", "39.3984, 129.591, -61.7872, 0.96", "39.7392, 130.457, -61.7872, 1.4", "39.9642, 130.93, -61.7872, 1.69", "40.029, 131.055, -61.7872, 1.69", "40.3651, 131.701, -61.7872, 1.69", "40.4615, 131.901, -61.7909, 1.69", "40.8063, 132.683, -61.8156, 1.69", "41.1795, 133.737, -61.8604, 0.88", "41.4195, 134.593, -61.9022, 0.88", "41.4342, 134.664, -61.9058, 0.88", "41.5456, 135.485, -61.9497, 0.66", "41.5508, 135.555, -61.9535, 0.66", "41.5512, 136.545, -62.0047, 0.66", "41.551, 136.845, -62.0185, 0.66", "41.5613, 137.68, -62.0478, 0.66", "41.5833, 138.199, -62.0509, 1.03", "41.5865, 138.27, -62.049, 1.03", "41.5835, 139.067, -61.9343, 1.03", "41.5558, 139.845, -61.7467, 1.03", "41.5131, 140.446, -61.5733, 1.33", "41.4428, 141.106, -61.3714, 0.88", "41.3218, 142.007, -61.0967, 0.88", "41.0874, 143.512, -60.6454, 0.59", "41.0761, 143.579, -60.6263, 0.59", "40.8682, 144.789, -60.302, 0.59", "40.7479, 145.738, -60.0814, 0.59", "40.7189, 146.045, -60.0344, 0.88", "40.7155, 146.257, -60.023, 0.88", "40.7543, 147.137, -60.047, 0.88", "40.7593, 147.206, -60.0488, 0.88", "40.8496, 147.989, -60.0693, 0.88", "40.9722, 148.909, -60.0915, 0.66", "41.2042, 150.573, -60.1259, 0.66", "41.3143, 151.398, -60.14, 1.33", "41.4175, 152.275, -60.1346, 1.69", "41.4895, 153.031, -60.1166, 1.92", "41.5564, 153.728, -60.0854, 2.21", "41.6605, 154.731, -59.9943, 2.28", "41.7779, 155.769, -59.8697, 2.28", "41.9435, 156.902, -59.7093, 1.25", "42.0701, 157.559, -59.6019, 0.81", "42.2668, 158.377, -59.4654, 0.59", "42.5612, 159.342, -59.3177, 0.59", "42.6148, 159.482, -59.2987, 0.59", "42.9521, 160.198, -59.2255, 0.88", "43.3284, 160.916, -59.1771, 0.88", "44.0448, 162.26, -59.1168, 0.59", "44.6838, 163.517, -59.0901, 0.59", "45.0451, 164.264, -59.093, 0.59", "45.5446, 165.322, -59.0994, 0.52", "45.6045, 165.452, -59.1006, 0.52", "46.3048, 166.943, -59.1146, 0.52", "46.5888, 167.544, -59.1201, 1.03", "46.8556, 168.146, -59.1247, 1.03", "46.8928, 168.239, -59.1259, 1.03", "47.2748, 169.19, -59.141, 1.03", "47.3443, 169.348, -59.1447, 1.03", "47.574, 169.823, -59.16, 1.03", "47.6125, 169.896, -59.1626, 1.03", "48.1275, 170.821, -59.1963, 0.29", "48.2781, 171.069, -59.2042, 0.59", "48.6942, 171.689, -59.2195, 0.88", "49.2422, 172.486, -59.2348, 0.81", "49.3184, 172.619, -59.2363, 0.81", "49.6591, 173.294, -59.2399, 0.81", "50.245, 174.526, -59.2399, 0.37", "50.9414, 176.049, -59.2399, 0.37", "51.0046, 176.188, -59.2399, 0.37", "51.9965, 178.444, -59.2399, 0.37", "52.4156, 179.422, -59.2399, 0.37", "52.6958, 180.088, -59.2399, 0.37", "52.7828, 180.299, -59.2399, 0.37", "53.0497, 180.903, -59.2399, 0.81", "53.4095, 181.609, -59.2399, 1.4", "53.873, 182.411, -59.2431, 1.69", "53.9989, 182.643, -59.2446, 1.69", "54.4615, 183.549, -59.252, 1.18", "54.9618, 184.575, -59.2615, 0.81", "55.4426, 185.619, -59.2722, 0.66", "55.8443, 186.524, -59.2824, 0.52", "56.229, 187.449, -59.2934, 0.52", "56.255, 187.515, -59.2942, 0.52", "56.3909, 187.933, -59.2992, 0.81", "56.5605, 188.503, -59.3051, 0.81", "56.5842, 188.582, -59.3056, 0.81", "56.7101, 188.983, -59.3056, 0.29", "56.731, 189.063, -59.3056, 0.29", "56.9583, 190.346, -59.3056, 0.29", "57.0135, 191.176, -59.3056, 0.29", "57.0064, 191.643, -59.3056, 0.52", "56.9663, 192.584, -59.3056, 0.52", "56.8995, 193.383, -59.3056, 0.52", "56.7932, 194.257, -59.3056, 0.59", "56.6167, 195.08, -59.3056, 0.59", "56.5907, 195.148, -59.3056, 0.59" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "33.6312, 121.429, -61.0575, 1.11", "36.6119, 123.779, -65.0805, 1.11", "37.0749, 124.144, -65.7054, 1.11", "37.883, 124.782, -66.796, 1.99", "38.3113, 125.119, -67.3741, 2.28", "38.782, 125.49, -68.0094, 2.28", "39.5311, 126.081, -69.0205, 0.81" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_146",
    "id" : "dend_146",
    "points3d" : [ "120.407, -194.283, 3.14088, 0.37", "120.81, -195.21, 3.30854, 0.37", "121.108, -195.874, 3.42016, 0.37", "121.235, -196.123, 3.46058, 0.59", "121.344, -196.308, 3.51922, 0.59", "121.809, -196.977, 3.90781, 0.59", "122.268, -197.55, 4.38629, 0.59", "122.303, -197.592, 4.42991, 0.59", "122.579, -197.969, 4.84558, 0.88", "123.117, -198.83, 5.78364, 1.18", "123.606, -199.707, 6.7455, 0.52", "123.925, -200.363, 7.49052, 0.52", "124.171, -200.97, 8.15033, 0.44", "124.415, -201.686, 8.85613, 0.37", "124.583, -202.3, 9.39963, 0.37", "124.612, -202.434, 9.49338, 0.37", "124.656, -202.668, 9.61923, 0.81", "124.779, -203.23, 9.89172, 0.81", "124.805, -203.294, 9.93381, 0.81", "125.163, -203.941, 10.4672, 0.59", "125.195, -203.982, 10.515, 0.59", "125.574, -204.4, 11.0962, 0.59", "125.649, -204.465, 11.1965, 0.59", "126.395, -204.975, 12.1097, 0.52", "126.455, -205.009, 12.1903, 0.52", "127.422, -205.426, 13.3951, 0.52", "127.461, -205.441, 13.4393, 0.52", "128.159, -205.663, 14.1764, 0.52", "128.207, -205.681, 14.2243, 0.52", "129.243, -206.093, 15.1469, 1.25", "129.98, -206.441, 15.7369, 1.92", "130.498, -206.729, 16.1014, 1.92", "130.575, -206.773, 16.153, 1.92", "131.717, -207.469, 16.8605, 0.52", "131.78, -207.508, 16.892, 0.52", "132.628, -208.018, 17.1825, 0.37", "132.687, -208.052, 17.1994, 0.37", "132.937, -208.181, 17.2394, 0.81", "133.395, -208.412, 17.262, 1.11", "133.791, -208.607, 17.2948, 1.11", "133.986, -208.708, 17.3267, 1.11", "134.751, -209.129, 17.5023, 0.29", "135.853, -209.775, 17.7954, 0.29", "136.678, -210.302, 18.1866, 0.29", "137.784, -211.055, 18.9295, 0.81", "138.098, -211.28, 19.1976, 0.81", "138.184, -211.345, 19.289, 0.81", "138.637, -211.689, 19.8851, 0.81", "139.755, -212.517, 21.5932, 0.81", "139.794, -212.542, 21.6466, 0.81", "140.114, -212.705, 21.9203, 0.81", "140.172, -212.729, 21.9542, 0.81", "140.734, -212.94, 22.2221, 0.52", "141.08, -213.054, 22.3104, 0.52", "141.806, -213.279, 22.3104, 0.52", "142.52, -213.507, 22.3104, 1.18", "143.127, -213.712, 22.3104, 1.47" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_145",
    "id" : "dend_145",
    "points3d" : [ "120.407, -194.283, 3.14088, 0.22", "121.956, -194.118, 4.15439, 0.22", "122.319, -194.079, 4.39203, 0.59", "122.622, -194.047, 4.59028, 0.88", "122.824, -194.026, 4.723, 0.88", "123.208, -193.985, 4.97397, 0.88" ],
    "parent" : "dend_144",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_141",
    "id" : "dend_141",
    "points3d" : [ "101.48, -188.197, -1.58644, 0.29", "101.438, -190.253, -4.08444, 0.29", "101.494, -191.429, -5.20132, 0.29", "101.5, -191.486, -5.24142, 0.29", "101.643, -192.552, -5.87094, 0.29", "101.783, -193.424, -6.3593, 0.88", "101.858, -193.891, -6.59923, 1.25", "101.927, -194.253, -6.69239, 1.47", "102.067, -195.261, -6.91074, 1.33", "102.075, -195.407, -6.95111, 1.33", "102.053, -196.362, -7.31896, 1.11", "102.015, -197.089, -7.64795, 0.37", "101.974, -197.789, -8.0112, 0.37", "101.938, -198.433, -8.36983, 0.37", "101.88, -199.381, -8.93336, 0.37", "101.86, -200.373, -9.42725, 0.37", "101.863, -200.58, -9.51229, 0.66", "101.878, -200.718, -9.57182, 0.66", "101.997, -201.31, -9.81538, 0.66", "102.015, -201.375, -9.83868, 0.66", "102.435, -203.001, -10.2633, 0.66", "102.451, -203.068, -10.2776, 0.66", "102.643, -203.992, -10.568, 0.52", "102.716, -204.355, -10.7025, 0.52", "102.729, -204.429, -10.7333, 0.52", "102.783, -204.695, -10.8704, 0.81", "102.957, -205.435, -11.3422, 0.81", "103.349, -206.879, -12.2845, 0.44", "103.477, -207.306, -12.5592, 0.74", "103.5, -207.37, -12.6014, 0.74", "103.903, -208.251, -13.1768, 0.59", "104.347, -208.975, -13.7104, 0.29", "104.596, -209.271, -13.9457, 0.29", "104.842, -209.497, -14.1149, 0.74", "105.163, -209.779, -14.3526, 0.96", "105.67, -210.215, -14.7181, 1.25", "106.347, -210.833, -15.2132, 0.96", "106.722, -211.258, -15.616, 0.96", "106.934, -211.591, -15.9602, 0.74", "107.265, -212.53, -16.9384, 0.37", "107.304, -212.959, -17.3977, 0.37", "107.21, -213.498, -18.0028, 0.37", "106.877, -214.603, -19.1829, 0.37", "106.789, -214.863, -19.4488, 0.88", "106.524, -215.811, -20.335, 0.74", "106.308, -216.763, -21.1386, 0.29", "106.173, -217.734, -21.9559, 0.29", "106.133, -218.833, -22.8311, 0.29", "106.14, -219.557, -23.3491, 0.29", "106.157, -220.653, -24.0817, 0.29", "106.155, -220.716, -24.118, 0.29", "106.132, -221.436, -24.4849, 0.74", "106.115, -222.062, -24.7654, 0.81", "105.999, -223.046, -25.1705, 0.74", "105.867, -224.025, -25.4885, 0.74", "105.755, -224.974, -25.7142, 1.47", "105.682, -226.044, -25.8876, 0.52", "105.648, -227.384, -26.018, 0.52", "105.664, -228.034, -26.0556, 0.52", "105.791, -230.262, -26.0824, 0.52", "105.835, -231.051, -26.084, 1.33", "105.854, -231.864, -26.073, 1.92", "105.827, -232.243, -26.0636, 2.06", "105.707, -233.12, -26.0644, 0.96", "105.516, -234.051, -26.0929, 0.59", "105.241, -234.953, -26.1503, 0.52", "104.891, -236.003, -26.296, 0.52", "104.392, -237.439, -26.567, 0.52", "104.344, -237.587, -26.6008, 0.74", "104.188, -238.173, -26.7926, 0.74", "104.031, -238.899, -27.0855, 0.29", "103.871, -240.087, -27.6941, 0.29", "103.866, -240.158, -27.7359, 0.29", "103.834, -240.737, -28.0798, 0.29", "103.744, -241.97, -28.7973, 0.29", "103.615, -243.186, -29.4712, 0.29", "103.464, -244.463, -30.085, 1.18", "103.364, -245.134, -30.3626, 1.84", "103.24, -245.881, -30.642, 1.69", "102.92, -247.404, -31.1452, 0.37", "102.756, -248.108, -31.3373, 0.37", "102.41, -249.556, -31.6974, 0.37", "102.391, -249.632, -31.7128, 0.37", "102.125, -250.692, -31.9229, 0.37", "101.948, -251.394, -32.0723, 0.37", "101.872, -251.658, -32.1374, 0.81", "101.854, -251.714, -32.1603, 0.81", "101.669, -252.107, -32.4854, 0.29", "101.516, -252.437, -32.7791, 0.29", "101.235, -253.031, -33.3416, 0.52", "100.986, -253.584, -33.8335, 0.74", "100.757, -254.057, -34.22, 0.74", "100.088, -255.369, -35.2047, 0.44", "99.6367, -256.283, -35.7629, 0.44", "99.5275, -256.532, -35.9093, 0.66", "99.3691, -256.958, -36.1318, 0.81", "99.2432, -257.425, -36.3481, 0.81", "99.171, -257.757, -36.4869, 0.52", "98.9165, -259.075, -36.9208, 0.52", "98.6251, -260.664, -37.4437, 0.81", "98.5375, -261.079, -37.5813, 1.18", "98.3882, -261.703, -37.7898, 1.47", "98.1951, -262.486, -38.0526, 1.47", "97.9611, -263.268, -38.3061, 0.88", "97.6834, -263.997, -38.5071, 0.66", "97.3791, -264.698, -38.5815, 0.66", "97.3439, -264.769, -38.5906, 0.66" ],
    "parent" : "dend_133",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_134",
    "id" : "dend_134",
    "points3d" : [ "101.48, -188.197, -1.58644, 0.74", "101.506, -188.275, -1.57778, 0.74", "101.792, -189.121, -1.38154, 0.74", "101.906, -189.49, -1.28544, 1.03", "102.066, -190.078, -1.13334, 1.18", "102.083, -190.147, -1.11577, 1.18", "102.324, -191.2, -0.859211, 0.52", "102.475, -191.914, -0.69007, 0.74", "102.578, -192.479, -0.554824, 0.88", "102.661, -192.975, -0.44232, 1.11", "102.673, -193.045, -0.428274, 1.11", "102.788, -193.628, -0.33322, 0.66", "102.964, -194.298, -0.319355, 0.37", "103.305, -195.185, -0.402683, 0.37", "103.406, -195.387, -0.434786, 0.37", "103.801, -195.995, -0.562875, 1.03", "103.893, -196.119, -0.594008, 1.03", "104.797, -197.112, -0.837086, 0.29", "105.323, -197.598, -0.940096, 0.29", "105.378, -197.643, -0.948129, 0.29", "106.294, -198.363, -1.01768, 0.29", "106.416, -198.452, -1.01789, 0.29", "107.215, -199.041, -0.952353, 0.81", "107.878, -199.548, -0.767287, 1.25", "107.959, -199.613, -0.73852, 1.25", "108.451, -200.035, -0.538994, 1.25", "108.499, -200.083, -0.518284, 1.25", "108.736, -200.358, -0.42707, 1.25", "109.42, -201.276, -0.221049, 0.59", "109.459, -201.334, -0.210849, 0.59", "109.728, -201.725, -0.118466, 0.37", "110.185, -202.452, 0.0718805, 0.37", "110.47, -202.939, 0.198832, 0.37", "110.69, -203.316, 0.296796, 0.81", "111.0, -203.856, 0.421628, 0.59", "111.481, -204.661, 0.639687, 0.29", "111.789, -205.142, 0.790565, 0.29", "112.08, -205.525, 0.948784, 0.52", "112.578, -206.114, 1.21241, 0.29", "112.901, -206.449, 1.40048, 0.37", "112.982, -206.517, 1.44462, 0.37", "113.505, -206.893, 1.7028, 0.37", "114.429, -207.445, 2.18089, 0.37", "114.486, -207.474, 2.21112, 0.37", "115.446, -207.904, 2.72584, 0.74", "115.823, -208.057, 2.91834, 1.03", "115.882, -208.079, 2.94854, 1.25", "115.942, -208.106, 2.97647, 1.25", "116.249, -208.29, 3.08748, 1.25", "116.649, -208.592, 3.23304, 0.74", "117.015, -208.921, 3.35452, 0.52", "117.767, -209.664, 3.61346, 0.52", "118.492, -210.395, 3.84615, 0.52", "119.258, -211.212, 4.09061, 0.52", "119.804, -211.837, 4.25873, 0.74", "120.321, -212.456, 4.41743, 0.52", "120.75, -212.992, 4.54126, 0.52", "121.443, -213.863, 4.69682, 0.52", "121.82, -214.303, 4.78221, 1.4", "122.436, -214.989, 4.90606, 1.69" ],
    "parent" : "dend_133",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_126",
    "id" : "dend_126",
    "points3d" : [ "-52.9078, -247.634, 7.03381, 0.29", "-54.1212, -247.859, 7.17133, 0.29", "-54.1903, -247.872, 7.17916, 0.29", "-55.8837, -248.185, 7.37109, 0.29", "-55.9549, -248.198, 7.37916, 0.29" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_121",
    "id" : "dend_121",
    "points3d" : [ "-52.9078, -247.634, 7.03381, 0.81", "-53.1548, -248.04, 6.97585, 0.81", "-53.4326, -248.359, 6.92415, 0.81", "-53.8809, -248.752, 6.85714, 0.44", "-54.7411, -249.42, 6.74126, 0.44", "-55.5888, -250.039, 6.70709, 0.44", "-56.3209, -250.583, 6.72264, 0.44", "-56.9379, -250.996, 6.76236, 0.81", "-57.5775, -251.43, 6.83366, 0.81", "-57.6346, -251.47, 6.84303, 0.81", "-58.4656, -252.195, 7.05355, 0.29", "-58.9402, -252.857, 7.2457, 0.29", "-58.9669, -252.921, 7.26025, 0.29", "-59.1831, -253.897, 7.41951, 0.29", "-59.1924, -253.977, 7.42903, 0.29", "-59.2767, -255.023, 7.49222, 0.29", "-59.2988, -255.395, 7.49475, 0.66", "-59.3331, -256.071, 7.50103, 0.88", "-59.3956, -256.981, 7.45195, 0.66", "-59.4058, -257.078, 7.4366, 0.66", "-59.6111, -258.571, 7.07612, 0.66", "-59.7308, -259.149, 6.87844, 0.81", "-59.8233, -259.486, 6.73253, 1.11", "-60.2527, -260.512, 6.15629, 0.81", "-60.6753, -261.13, 5.63062, 0.37", "-60.7216, -261.173, 5.58022, 0.37", "-61.0385, -261.326, 5.27359, 0.37", "-61.1439, -261.364, 5.18709, 0.37", "-61.6283, -261.5, 4.86647, 0.37", "-62.6238, -261.744, 4.43356, 0.37", "-63.2052, -261.917, 4.24592, 0.37", "-63.2771, -261.947, 4.2242, 0.37", "-63.6685, -262.158, 4.12228, 0.96", "-63.7272, -262.195, 4.10923, 0.96", "-64.1899, -262.541, 3.99596, 1.18", "-64.7306, -262.992, 3.82586, 1.18", "-65.3364, -263.513, 3.57414, 0.96", "-65.985, -264.117, 3.26666, 0.74", "-66.0375, -264.172, 3.23937, 0.74", "-66.7001, -265.035, 2.84248, 0.59", "-67.246, -265.965, 2.49169, 0.52", "-67.27, -266.019, 2.47877, 0.52", "-67.5504, -266.775, 2.38113, 0.52", "-67.8207, -267.631, 2.33849, 0.52", "-68.2064, -269.014, 2.46407, 0.52", "-68.429, -269.896, 2.65489, 0.52", "-68.7585, -271.197, 3.00265, 0.66", "-68.9463, -271.873, 3.19107, 1.03", "-69.1064, -272.404, 3.34966, 1.25", "-69.5997, -273.879, 3.81757, 0.74", "-69.8912, -274.609, 4.05776, 0.66", "-70.4527, -275.772, 4.28963, 0.66", "-70.7298, -276.224, 4.3122, 0.96", "-70.7778, -276.288, 4.30652, 0.96", "-71.0915, -276.613, 4.21705, 0.96", "-71.4729, -276.933, 4.04103, 0.74", "-72.4896, -277.712, 3.53362, 0.44", "-73.0615, -278.191, 3.24861, 0.44", "-73.0985, -278.245, 3.22199, 0.44", "-73.3048, -278.686, 3.04149, 0.44", "-73.4802, -279.165, 2.94646, 0.44", "-73.7102, -279.921, 2.90676, 0.44", "-74.0424, -280.97, 3.07414, 0.44", "-74.4661, -282.154, 3.37865, 0.44", "-74.7094, -282.697, 3.58851, 0.44", "-75.3944, -284.009, 4.23264, 0.44", "-75.4334, -284.069, 4.26991, 0.44", "-76.0376, -284.86, 4.86736, 0.37", "-76.3337, -285.209, 5.1997, 0.37", "-76.7512, -285.737, 5.739, 0.37", "-76.8675, -285.933, 5.90971, 0.96", "-77.0736, -286.401, 6.20803, 1.33", "-77.2084, -286.759, 6.41346, 1.33", "-77.4361, -287.461, 6.76064, 1.18", "-77.6232, -287.998, 7.02493, 0.59", "-77.8485, -288.591, 7.30287, 0.44", "-78.13, -289.21, 7.61156, 0.44", "-78.4203, -289.758, 7.89816, 0.44", "-78.5379, -289.97, 7.99624, 0.44", "-78.7904, -290.414, 8.15465, 0.44", "-78.8302, -290.502, 8.17766, 0.44", "-78.9251, -290.792, 8.22678, 0.44", "-79.0561, -291.418, 8.27747, 0.37", "-79.1663, -292.291, 8.2873, 0.37", "-79.1738, -292.373, 8.28646, 0.37", "-79.2858, -293.875, 8.24948, 0.37", "-79.2956, -293.989, 8.24492, 0.37", "-79.3555, -294.582, 8.21128, 0.37", "-79.4254, -295.105, 8.16706, 1.03", "-79.5761, -295.888, 8.0465, 1.25", "-79.7142, -296.443, 7.93238, 1.55", "-79.7962, -296.698, 7.8674, 1.55", "-79.9139, -297.04, 7.7756, 1.55", "-80.0811, -297.438, 7.6669, 1.4", "-80.5725, -298.415, 7.38599, 0.37", "-80.8613, -298.92, 7.23878, 0.37", "-81.1728, -299.407, 7.11361, 0.37", "-81.2174, -299.473, 7.09965, 0.37", "-81.6943, -300.137, 6.99459, 0.37", "-82.0467, -300.654, 6.93009, 0.74", "-82.1995, -300.937, 6.91114, 0.96", "-82.4306, -301.563, 6.83502, 0.96", "-82.4548, -301.7, 6.81252, 0.96", "-82.4779, -302.138, 6.73031, 0.96", "-82.4641, -303.079, 6.54208, 0.52", "-82.476, -303.896, 6.3852, 0.52", "-82.5119, -304.327, 6.30575, 0.52", "-82.6569, -305.023, 6.21227, 0.52", "-82.8293, -305.503, 6.17555, 0.88", "-83.2373, -306.243, 6.16531, 1.18", "-83.7598, -306.96, 6.1981, 1.62", "-84.0519, -307.302, 6.20232, 1.62", "-84.753, -308.049, 6.19345, 0.81", "-85.106, -308.398, 6.17506, 0.59", "-85.7432, -309.006, 6.11982, 0.59", "-85.8159, -309.074, 6.11122, 0.59", "-86.4698, -309.68, 6.00419, 0.59", "-86.9475, -310.143, 5.89546, 1.69", "-87.3545, -310.524, 5.75511, 1.99", "-87.9821, -311.095, 5.52013, 1.99" ],
    "parent" : "dend_120",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_113",
    "id" : "dend_113",
    "points3d" : [ "-30.2514, -343.436, 2.82881, 0.74", "-31.2485, -344.153, 2.86162, 0.74", "-32.3135, -344.977, 2.67143, 0.74", "-32.98, -345.497, 2.49249, 0.66", "-33.2614, -345.716, 2.40386, 0.66", "-33.8285, -346.152, 2.21171, 0.22", "-34.6245, -346.742, 1.93527, 0.22", "-35.757, -347.442, 1.57603, 0.22", "-35.839, -347.49, 1.53655, 0.22", "-36.0052, -347.566, 1.44946, 0.81", "-36.1377, -347.604, 1.38901, 0.81", "-36.4192, -347.614, 1.30384, 0.81", "-36.7756, -347.57, 1.22461, 0.96", "-37.3748, -347.499, 1.14895, 0.44", "-38.1777, -347.441, 1.0369, 0.44", "-38.2479, -347.437, 1.02916, 0.44", "-39.2377, -347.391, 0.992381, 0.44", "-39.7028, -347.379, 0.998964, 0.81", "-40.3958, -347.37, 1.04617, 1.03", "-40.8194, -347.356, 1.09911, 1.03", "-42.2793, -347.258, 1.34213, 0.52", "-43.0758, -347.168, 1.49327, 0.52", "-43.1846, -347.154, 1.53015, 0.52", "-43.8156, -347.045, 1.79646, 0.52", "-44.1933, -346.966, 1.97544, 1.18", "-44.7789, -346.841, 2.3266, 1.62", "-45.4294, -346.706, 2.78812, 1.62", "-46.9901, -346.507, 3.89647, 0.29", "-47.5987, -346.499, 4.3212, 0.29", "-47.7241, -346.507, 4.40548, 0.29", "-49.0129, -346.69, 5.21159, 0.29", "-49.083, -346.705, 5.25247, 0.29", "-50.2404, -346.995, 5.80724, 0.29", "-51.1005, -347.234, 6.05906, 0.29", "-51.9026, -347.463, 6.23669, 0.29", "-52.2905, -347.568, 6.2587, 0.44", "-52.4357, -347.607, 6.24072, 0.44", "-53.0406, -347.752, 6.13208, 0.44", "-53.3421, -347.815, 6.05971, 0.44", "-53.9938, -347.974, 5.89412, 0.44", "-55.011, -348.311, 5.62344, 0.81", "-55.5371, -348.494, 5.48277, 0.81", "-55.5951, -348.515, 5.46964, 0.81", "-56.4875, -348.858, 5.29551, 0.81", "-57.1122, -349.078, 5.20852, 0.29", "-57.7626, -349.291, 5.15225, 0.29", "-57.8988, -349.329, 5.1487, 0.29", "-59.3422, -349.682, 5.11152, 0.29", "-59.4813, -349.716, 5.10819, 0.29", "-60.7383, -350.005, 5.07975, 0.29", "-60.8663, -350.035, 5.07731, 0.29", "-61.5842, -350.219, 5.07731, 0.29", "-61.6539, -350.24, 5.07987, 0.29", "-62.4783, -350.524, 5.14766, 0.29", "-62.5435, -350.55, 5.15577, 0.29", "-62.9204, -350.728, 5.22304, 0.52", "-63.3365, -350.923, 5.30735, 0.52", "-63.9504, -351.198, 5.44508, 0.29", "-64.0903, -351.251, 5.47709, 0.29", "-64.8065, -351.443, 5.63928, 0.29", "-65.1386, -351.502, 5.70485, 0.74", "-65.2103, -351.506, 5.71673, 0.74", "-65.5801, -351.48, 5.7606, 0.74", "-65.6587, -351.462, 5.75642, 0.74", "-66.1268, -351.308, 5.6846, 0.74", "-66.4867, -351.156, 5.60718, 0.74", "-66.5818, -351.114, 5.57624, 0.74", "-66.9615, -350.969, 5.43468, 0.52", "-67.7531, -350.726, 5.12649, 0.37", "-68.2279, -350.624, 4.94671, 0.37", "-69.2658, -350.481, 4.55988, 0.37", "-70.0292, -350.463, 4.3048, 1.11", "-70.4636, -350.519, 4.16389, 1.11", "-71.0863, -350.677, 3.9714, 0.59", "-71.6195, -350.87, 3.82688, 0.29", "-71.7591, -350.933, 3.78762, 0.29", "-72.4941, -351.308, 3.60243, 0.29", "-73.6595, -351.89, 3.37221, 0.29", "-73.7287, -351.922, 3.34843, 0.29", "-73.9068, -351.997, 3.27061, 0.96", "-73.9691, -352.02, 3.24086, 0.96", "-74.9885, -352.366, 2.79005, 0.96", "-75.0614, -352.387, 2.76238, 0.96", "-76.7017, -352.78, 2.2485, 0.29", "-77.7411, -353.023, 1.95099, 0.29", "-78.5661, -353.209, 1.73316, 0.29", "-79.2424, -353.359, 1.57716, 0.44", "-80.165, -353.535, 1.28909, 0.44", "-80.2311, -353.546, 1.26648, 0.44", "-81.2028, -353.756, 1.0175, 0.44", "-81.332, -353.791, 0.966833, 0.44", "-82.3844, -354.117, 0.458148, 0.44", "-84.1266, -354.711, -0.46317, 0.44", "-84.1854, -354.734, -0.495607, 0.44", "-85.8358, -355.357, -1.4345, 0.44", "-87.3336, -355.946, -2.38518, 0.44", "-87.3896, -355.968, -2.42197, 0.44", "-88.1887, -356.306, -2.96217, 0.44", "-88.8714, -356.602, -3.38693, 0.44", "-89.9877, -357.057, -4.12085, 0.29", "-90.7756, -357.368, -4.82382, 1.25", "-91.2085, -357.568, -5.24323, 1.47", "-91.2546, -357.592, -5.29115, 1.47", "-91.7278, -357.87, -5.86062, 1.47", "-91.7736, -357.899, -5.91934, 1.47", "-93.3233, -358.905, -7.84283, 0.29", "-93.4098, -358.957, -7.94188, 0.29", "-94.2441, -359.408, -8.77343, 0.29", "-94.7648, -359.663, -9.28085, 0.81", "-94.8136, -359.685, -9.32692, 0.81", "-95.3792, -359.931, -9.78234, 0.81", "-95.6285, -360.026, -9.9476, 0.81", "-96.5854, -360.385, -10.6548, 0.81", "-97.9812, -360.868, -11.7829, 0.59", "-98.0616, -360.894, -11.8506, 0.59", "-98.4573, -360.999, -12.2526, 0.59", "-99.068, -361.113, -12.9869, 0.22", "-99.1112, -361.116, -13.0419, 0.22", "-99.3282, -361.09, -13.3465, 0.22", "-99.7321, -360.991, -13.8465, 0.74", "-100.431, -360.834, -14.6401, 0.74", "-100.637, -360.789, -14.86, 0.74", "-100.972, -360.757, -15.1334, 0.74", "-101.765, -360.732, -15.6753, 0.22", "-101.828, -360.735, -15.709, 0.22", "-102.794, -360.912, -16.0256, 0.22", "-102.881, -360.937, -16.0432, 0.22", "-103.86, -361.303, -16.1893, 0.22", "-103.926, -361.332, -16.1958, 0.22", "-104.13, -361.42, -16.2026, 0.66", "-105.325, -361.927, -16.2436, 0.29", "-105.487, -361.986, -16.249, 0.29", "-106.399, -362.278, -16.2762, 0.29", "-106.547, -362.317, -16.28, 0.29", "-107.434, -362.489, -16.2972, 0.29", "-107.504, -362.498, -16.298, 0.29", "-108.527, -362.526, -16.298, 0.29", "-108.643, -362.525, -16.298, 0.29", "-109.144, -362.509, -16.4053, 0.81", "-109.623, -362.546, -16.6045, 1.03", "-109.795, -362.575, -16.7227, 1.03", "-110.069, -362.637, -16.9395, 1.03", "-110.121, -362.652, -16.9842, 1.03", "-111.807, -363.183, -18.3601, 0.44", "-112.638, -363.471, -19.026, 0.44", "-113.318, -363.71, -19.5456, 1.11", "-113.814, -363.884, -19.899, 0.81", "-114.188, -364.016, -20.1465, 1.11", "-114.963, -364.219, -20.5446, 1.69", "-115.025, -364.233, -20.5749, 1.69", "-115.268, -364.29, -20.7313, 1.69", "-115.323, -364.307, -20.7725, 1.69", "-116.071, -364.656, -21.4301, 1.4", "-116.915, -365.306, -22.1079, 1.11", "-118.167, -366.474, -23.042, 1.25", "-118.589, -366.914, -23.3286, 0.29", "-118.64, -366.971, -23.3589, 0.29", "-119.439, -367.849, -23.7138, 0.29", "-121.054, -369.645, -24.196, 0.29", "-121.166, -369.768, -24.2182, 0.66", "-121.278, -369.87, -24.2239, 0.66", "-121.689, -370.194, -24.2423, 0.66", "-122.891, -371.033, -24.1737, 0.22", "-123.112, -371.173, -24.111, 0.37", "-123.232, -371.245, -24.0542, 0.37", "-124.649, -372.114, -23.2942, 0.22", "-124.705, -372.148, -23.2626, 0.22", "-125.958, -372.901, -22.5078, 0.52", "-127.403, -373.788, -21.5838, 0.22", "-128.555, -374.469, -20.8588, 0.22", "-128.666, -374.531, -20.7926, 0.22", "-129.469, -374.94, -20.3369, 0.22", "-129.554, -374.979, -20.302, 0.22", "-129.952, -375.13, -20.2387, 0.81", "-130.031, -375.15, -20.2387, 0.81", "-130.71, -375.313, -20.2387, 0.81", "-130.777, -375.331, -20.2367, 0.81", "-131.385, -375.507, -20.1996, 0.96", "-131.452, -375.528, -20.1941, 0.96", "-131.743, -375.625, -20.1644, 0.96", "-131.82, -375.649, -20.1561, 0.96", "-132.332, -375.814, -20.0953, 0.37", "-132.441, -375.846, -20.0828, 0.37", "-132.991, -375.994, -20.0223, 0.22", "-133.06, -376.01, -20.0159, 0.22", "-133.628, -376.138, -19.9446, 0.22", "-133.793, -376.182, -19.9245, 0.52", "-133.93, -376.22, -19.9088, 0.52", "-134.211, -376.305, -19.8786, 0.52", "-134.37, -376.354, -19.8617, 0.52", "-135.197, -376.626, -19.7787, 0.29", "-136.42, -377.055, -19.6593, 0.29", "-136.488, -377.079, -19.6534, 0.29", "-137.704, -377.508, -19.5624, 0.29", "-137.847, -377.561, -19.5526, 0.29", "-138.142, -377.674, -19.5362, 0.59", "-138.219, -377.705, -19.5343, 0.59", "-139.023, -378.061, -19.5049, 0.59", "-139.164, -378.12, -19.4993, 0.59", "-139.594, -378.272, -19.4816, 0.29", "-139.664, -378.293, -19.479, 0.29", "-140.363, -378.48, -19.4554, 0.29", "-140.432, -378.494, -19.4534, 0.29", "-141.472, -378.501, -19.4352, 0.22", "-142.055, -378.439, -19.4301, 0.22", "-142.134, -378.423, -19.4301, 0.22", "-142.226, -378.4, -19.4301, 0.44", "-142.471, -378.317, -19.4301, 0.22", "-144.048, -377.707, -19.4301, 0.22", "-144.113, -377.675, -19.4301, 0.22", "-144.113, -377.675, -19.4301, 0.44" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_104",
    "id" : "dend_104",
    "points3d" : [ "-30.2514, -343.436, 2.82881, 0.81", "-29.9765, -343.962, 2.82214, 0.81", "-29.9047, -344.095, 2.82052, 0.81", "-29.6014, -344.65, 2.81462, 0.59", "-28.9026, -346.065, 2.80103, 0.59", "-28.8481, -346.195, 2.79989, 0.59", "-28.6444, -346.739, 2.79538, 0.37", "-28.618, -346.844, 2.78876, 0.37", "-28.5295, -347.728, 2.68656, 0.29", "-28.6185, -348.242, 2.59333, 0.52", "-28.8153, -348.705, 2.47707, 0.81", "-28.8471, -348.765, 2.45651, 0.81", "-29.3474, -349.559, 2.11902, 0.52", "-29.6657, -350.033, 1.89036, 0.52", "-30.0567, -350.572, 1.59256, 0.52", "-30.1028, -350.644, 1.55193, 0.52", "-30.4924, -351.315, 1.17501, 0.81", "-30.5233, -351.38, 1.13421, 0.81", "-30.5871, -351.62, 0.998764, 0.81", "-30.6054, -351.743, 0.927678, 0.81", "-30.6204, -352.009, 0.780196, 0.81", "-30.6215, -352.075, 0.749712, 0.81", "-30.612, -353.242, 0.351967, 0.29", "-30.5975, -354.367, 0.0275374, 0.29", "-30.5957, -354.435, 0.0102321, 0.29", "-30.5718, -354.749, -0.0563944, 0.59", "-30.4661, -355.383, -0.209281, 0.96", "-30.2171, -356.196, -0.434681, 1.03", "-30.0105, -356.67, -0.566583, 1.25", "-29.9445, -356.81, -0.600458, 1.25", "-29.6744, -357.377, -0.720921, 1.25", "-29.0664, -358.703, -0.978245, 0.88", "-28.5274, -359.918, -1.1982, 0.29", "-28.2734, -360.58, -1.29938, 0.29", "-27.9139, -361.895, -1.43687, 0.29", "-27.9001, -361.994, -1.43961, 0.52", "-27.9367, -362.509, -1.38943, 0.52", "-28.0646, -363.058, -1.24565, 0.52", "-28.2279, -363.585, -1.10456, 0.29", "-28.2388, -363.647, -1.09589, 0.29", "-28.2297, -364.245, -1.09589, 0.29", "-28.224, -364.315, -1.09589, 0.29", "-28.0955, -365.328, -1.03066, 0.29", "-28.0581, -365.584, -1.00068, 0.74", "-28.0185, -366.026, -0.925881, 0.81", "-28.024, -366.127, -0.90645, 0.81", "-28.0944, -366.508, -0.835075, 0.81", "-28.2599, -367.233, -0.703623, 0.29", "-28.2753, -367.301, -0.692979, 0.29", "-28.3515, -367.737, -0.639106, 0.44", "-28.493, -368.748, -0.538467, 0.44", "-28.5958, -369.692, -0.466613, 0.44", "-28.6025, -369.8, -0.46168, 0.44", "-28.5968, -370.947, -0.451139, 0.44", "-28.5759, -371.48, -0.445243, 0.44", "-28.5687, -371.56, -0.441366, 0.44", "-28.5335, -372.001, -0.404495, 0.81", "-28.5001, -372.648, -0.332684, 0.81", "-28.5614, -373.538, -0.223296, 0.37", "-28.573, -373.6, -0.214899, 0.37", "-28.8829, -374.601, -0.0824756, 0.29", "-29.2943, -375.554, 0.102321, 0.29", "-29.3304, -375.613, 0.116447, 0.29", "-30.0887, -376.6, 0.381457, 0.29", "-30.2521, -376.788, 0.434945, 1.03", "-30.7737, -377.356, 0.597331, 1.4", "-31.6634, -378.21, 0.846538, 1.4", "-32.4325, -378.931, 1.10052, 1.4", "-32.7793, -379.251, 1.22642, 1.4" ],
    "parent" : "dend_103",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_100",
    "id" : "dend_100",
    "points3d" : [ "-3.61062, -361.298, -20.7738, 0.88", "-4.78242, -361.803, -22.6413, 0.88", "-5.26281, -361.981, -23.1766, 0.88", "-5.37203, -362.017, -23.2587, 0.88", "-7.10334, -362.529, -24.2111, 0.29", "-8.23242, -362.863, -24.8323, 0.29", "-9.00253, -363.091, -25.2559, 0.74", "-11.4295, -363.764, -25.8072, 0.15", "-12.4604, -364.044, -25.9167, 0.15", "-12.7334, -364.102, -25.8619, 0.37" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_97",
    "id" : "dend_97",
    "points3d" : [ "-3.61062, -361.298, -20.7738, 0.29", "-3.51087, -361.47, -21.6031, 0.29", "-3.50127, -361.488, -21.6805, 0.29", "-2.79706, -362.954, -27.3802, 0.29", "-2.78161, -362.985, -27.4809, 0.29", "-2.70753, -363.124, -27.9052, 0.88", "-2.6312, -363.278, -28.3147, 0.88", "-2.6156, -363.322, -28.4123, 0.88", "-2.40048, -364.087, -29.6294, 0.22", "-2.26022, -364.922, -30.2166, 0.22", "-2.20002, -365.342, -30.4977, 0.59", "-2.12784, -366.02, -30.9148, 0.74", "-2.04502, -366.948, -31.4929, 0.74", "-1.99516, -367.96, -32.063, 1.03", "-1.99076, -368.477, -32.3489, 1.03", "-2.00692, -369.034, -32.6796, 1.25", "-2.00744, -369.581, -33.0499, 0.74", "-2.02824, -370.713, -33.8739, 0.29", "-2.1239, -371.473, -34.4201, 0.29", "-2.3095, -372.246, -34.9419, 0.81", "-2.46179, -372.661, -35.2333, 0.81", "-3.04535, -373.844, -36.0589, 0.29", "-3.65351, -374.864, -36.7031, 0.29", "-4.4638, -376.064, -37.29, 0.29", "-4.50277, -376.117, -37.3153, 0.29", "-4.86833, -376.597, -37.5007, 0.29", "-5.05296, -376.833, -37.6055, 1.11", "-5.53929, -377.419, -37.8144, 1.33", "-5.93777, -377.924, -37.9977, 1.33", "-6.54072, -378.727, -38.2599, 0.29", "-7.18823, -379.589, -38.5358, 0.29", "-7.87577, -380.494, -38.8146, 1.18", "-8.80431, -381.618, -39.166, 1.62", "-9.39503, -382.241, -39.3541, 1.92", "-9.87496, -382.697, -39.4493, 1.92" ],
    "parent" : "dend_96",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_79",
    "id" : "dend_79",
    "points3d" : [ "-140.523, 229.806, -256.979, 0.88", "-141.402, 231.237, -259.8, 0.88", "-142.177, 232.62, -261.72, 0.88", "-142.323, 232.889, -262.024, 1.55", "-142.539, 233.29, -262.401, 1.77", "-142.651, 233.503, -262.567, 1.77", "-142.871, 233.936, -262.89, 0.22", "-143.483, 235.446, -263.413, 0.22", "-143.505, 235.511, -263.43, 0.22", "-143.704, 236.138, -263.593, 0.88", "-143.906, 236.802, -263.765, 0.88", "-144.318, 238.19, -264.12, 0.22", "-144.799, 239.836, -264.519, 0.22", "-144.871, 240.082, -264.574, 0.22", "-145.485, 241.858, -264.896, 0.22", "-145.621, 242.201, -264.941, 0.22", "-145.714, 242.401, -264.956, 0.66", "-146.216, 243.361, -264.945, 0.66", "-146.346, 243.581, -264.947, 0.22", "-147.125, 244.934, -264.983, 0.22", "-147.207, 245.073, -264.99, 0.66", "-147.508, 245.589, -265.022, 0.88", "-147.755, 246.04, -265.053, 0.88", "-148.143, 246.788, -265.158, 0.22", "-148.231, 246.974, -265.191, 0.22", "-148.613, 247.876, -265.379, 0.22", "-148.64, 247.942, -265.394, 0.22", "-149.4, 249.72, -265.802, 0.22", "-149.884, 250.799, -266.058, 1.11", "-150.154, 251.406, -266.203, 1.92", "-150.185, 251.48, -266.222, 1.92", "-150.354, 251.947, -266.359, 1.92" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_78",
    "id" : "dend_78",
    "points3d" : [ "-140.523, 229.806, -256.979, 0.22", "-138.448, 230.973, -260.064, 0.22", "-137.865, 231.302, -260.932, 0.74", "-137.594, 231.454, -261.334, 0.74" ],
    "parent" : "dend_77",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_70",
    "id" : "dend_70",
    "points3d" : [ "-71.3428, 247.836, -51.9756, 0.52", "-70.8822, 247.68, -51.5035, 0.52", "-69.6217, 247.273, -50.1992, 0.52", "-68.8821, 247.067, -49.4813, 0.52", "-68.278, 246.914, -48.92, 0.81", "-67.2662, 246.693, -47.9596, 0.81", "-66.7394, 246.608, -47.5753, 0.81", "-66.6776, 246.601, -47.5374, 0.81", "-65.9955, 246.572, -47.2057, 0.37", "-65.9201, 246.57, -47.1724, 0.37", "-64.5304, 246.514, -46.61, 0.22", "-61.7524, 246.332, -45.6052, 0.22", "-61.4557, 246.295, -45.5094, 0.81", "-61.3886, 246.285, -45.4898, 0.81", "-61.1785, 246.241, -45.4399, 0.81", "-59.9762, 245.957, -45.1548, 0.22", "-59.9096, 245.938, -45.1402, 0.22", "-57.008, 245.018, -44.4276, 0.22", "-56.8164, 244.957, -44.3822, 0.22", "-55.12, 244.425, -43.9996, 0.22", "-54.1, 244.118, -43.7926, 0.74", "-53.878, 244.054, -43.7596, 0.74" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "-71.3428, 247.836, -51.9756, 0.29", "-71.7287, 248.751, -52.0632, 0.29", "-72.3241, 250.338, -52.1101, 0.29", "-72.5334, 251.045, -52.108, 0.96", "-72.6989, 251.663, -52.0994, 1.55", "-72.8434, 252.218, -52.0887, 1.55", "-73.1261, 253.309, -52.1124, 0.29", "-73.4946, 254.83, -52.1845, 0.29", "-73.9476, 256.866, -52.319, 0.29", "-73.9624, 256.935, -52.3235, 0.29", "-74.2889, 258.505, -52.4446, 0.29", "-74.5297, 259.711, -52.5557, 0.44", "-74.7149, 260.652, -52.6624, 0.44", "-74.9019, 261.649, -52.8024, 0.44", "-75.0415, 262.359, -52.8889, 0.88", "-75.1096, 262.718, -52.9167, 1.55", "-75.1869, 263.158, -52.9245, 1.92", "-75.2917, 263.809, -52.8954, 2.06", "-75.3635, 264.347, -52.8778, 2.06", "-75.4744, 265.23, -52.863, 1.18", "-75.5867, 266.15, -52.8838, 1.03", "-75.6598, 266.794, -52.908, 0.88", "-75.7351, 267.467, -52.9416, 0.74", "-75.8033, 268.255, -52.9894, 0.59", "-75.8297, 268.976, -53.0396, 0.59", "-75.812, 270.013, -53.1197, 0.29", "-75.8091, 270.086, -53.1253, 0.29", "-75.7701, 270.995, -53.1907, 0.22", "-75.7574, 271.45, -53.2191, 0.22", "-75.7083, 272.604, -53.2742, 0.22", "-75.69, 272.907, -53.2848, 0.22", "-75.6165, 273.972, -53.2982, 0.22", "-75.5756, 274.562, -53.3055, 1.03", "-75.5254, 275.301, -53.3142, 1.33", "-75.4883, 276.189, -53.3222, 1.33" ],
    "parent" : "dend_64",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-65.4772, 289.541, -48.1915, 0.29", "-64.4648, 291.462, -49.8892, 0.29", "-64.4319, 291.529, -49.9463, 0.29", "-64.0574, 292.341, -50.5624, 0.29", "-64.0387, 292.385, -50.5981, 0.29", "-63.8273, 292.837, -50.9378, 0.66", "-63.6197, 293.255, -51.2343, 0.66", "-63.5905, 293.31, -51.2673, 0.66", "-63.2158, 294.001, -51.6444, 0.96", "-62.7615, 294.825, -52.0427, 0.15", "-62.077, 295.945, -52.5725, 0.15", "-61.9085, 296.185, -52.6907, 0.74", "-61.8274, 296.29, -52.74, 0.74", "-61.6496, 296.517, -52.8391, 0.74", "-61.4707, 296.725, -52.9073, 0.74", "-61.416, 296.784, -52.9073, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-65.4772, 289.541, -48.1915, 0.44", "-65.7031, 290.248, -48.1915, 0.44", "-65.7355, 290.342, -48.1915, 0.44", "-66.3004, 291.622, -48.1915, 0.44", "-66.3327, 291.685, -48.1993, 0.44", "-66.8796, 292.586, -48.3746, 0.44", "-66.9383, 292.673, -48.3943, 0.44", "-67.6746, 293.627, -48.6462, 0.44", "-68.2636, 294.293, -48.8423, 0.44", "-69.2071, 295.208, -49.1356, 0.44", "-69.9312, 295.855, -49.4374, 0.81", "-70.4086, 296.247, -49.6705, 0.96", "-71.1325, 296.788, -49.9709, 0.96", "-71.3527, 296.937, -50.0332, 0.96", "-72.2602, 297.538, -50.1623, 0.96", "-74.1386, 298.758, -50.0736, 0.96", "-74.1897, 298.79, -50.0663, 0.96", "-75.8019, 299.771, -49.6678, 0.22", "-76.8596, 300.394, -49.2882, 0.22", "-76.9247, 300.431, -49.2578, 0.22", "-77.6922, 300.848, -48.7911, 0.22", "-77.852, 300.932, -48.6618, 0.22", "-78.2465, 301.13, -48.3376, 0.59", "-78.4983, 301.262, -48.1813, 0.96", "-78.5575, 301.291, -48.1499, 0.96", "-79.1235, 301.579, -47.8404, 0.96", "-80.2081, 302.146, -47.1977, 0.96", "-81.3005, 302.891, -46.5907, 0.52", "-82.4196, 303.844, -46.0227, 0.29", "-82.4681, 303.895, -46.0048, 0.29", "-82.8452, 304.434, -45.9378, 0.29", "-82.9231, 304.579, -45.9417, 0.29", "-83.3027, 305.419, -46.0522, 0.29", "-83.3471, 305.53, -46.0656, 0.29", "-83.643, 306.265, -46.0656, 0.29", "-83.9959, 307.128, -46.0656, 0.29", "-84.0536, 307.264, -46.0717, 0.66", "-84.2143, 307.663, -46.1024, 0.81", "-84.3981, 308.148, -46.1463, 0.81", "-84.6528, 308.85, -46.218, 0.15", "-84.9704, 309.793, -46.3354, 0.15", "-85.191, 310.395, -46.4282, 0.59", "-85.3507, 310.819, -46.5014, 0.74" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "200.112, 196.111, 46.4288, 0.88", "200.772, 195.691, 46.3964, 0.88", "201.52, 195.232, 46.3025, 0.59", "202.601, 194.606, 46.1267, 0.59", "203.233, 194.253, 46.0119, 0.29", "204.228, 193.715, 45.8221, 0.29", "204.289, 193.683, 45.81, 0.29", "205.24, 193.182, 45.6288, 0.29", "205.683, 192.95, 45.5472, 0.52", "205.754, 192.91, 45.5359, 0.52", "205.944, 192.818, 45.5188, 0.52", "206.009, 192.79, 45.5201, 0.52", "207.356, 192.305, 45.6569, 0.22", "207.498, 192.258, 45.6798, 0.22", "207.808, 192.184, 45.7234, 0.66", "208.496, 192.047, 45.77, 0.81", "209.155, 191.933, 45.7838, 0.15", "210.397, 191.709, 45.7544, 0.15", "210.652, 191.665, 45.7358, 0.44", "211.583, 191.475, 45.6494, 0.44", "212.742, 191.224, 45.5154, 0.15", "212.88, 191.192, 45.4956, 0.15", "213.674, 190.971, 45.3548, 0.15", "214.422, 190.687, 45.2617, 0.15", "214.775, 190.547, 45.2474, 0.37", "214.966, 190.472, 45.2669, 0.37", "215.337, 190.345, 45.3446, 0.37", "215.405, 190.323, 45.3611, 0.37", "216.443, 189.989, 45.6527, 0.22", "217.591, 189.583, 46.0091, 0.22", "218.55, 189.225, 46.4074, 0.37", "219.017, 189.086, 46.6227, 0.66", "219.099, 189.066, 46.6641, 0.66", "219.398, 189.048, 46.8167, 0.66", "219.46, 189.059, 46.8484, 0.66", "220.942, 189.708, 47.5754, 0.22", "221.936, 190.333, 47.9879, 0.22", "221.987, 190.378, 48.0122, 0.22", "222.808, 191.263, 48.3913, 0.22", "223.104, 191.682, 48.527, 0.96", "223.42, 192.251, 48.6647, 0.96", "223.538, 192.524, 48.7068, 0.96", "224.144, 194.236, 49.0074, 0.22", "224.297, 194.713, 49.0994, 0.59", "224.509, 195.577, 49.3003, 0.15", "224.524, 195.656, 49.3201, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "200.112, 196.111, 46.4288, 0.52", "200.899, 196.328, 46.2245, 0.52", "201.992, 196.632, 46.0026, 0.52", "202.929, 196.875, 45.8635, 0.52", "202.997, 196.892, 45.8595, 0.52", "203.829, 197.028, 45.8585, 0.66", "203.888, 197.034, 45.8602, 0.66", "205.226, 197.069, 46.0423, 0.66", "206.498, 197.032, 46.3236, 0.22", "207.372, 196.972, 46.5761, 0.44", "208.809, 196.84, 47.0328, 0.44", "209.292, 196.803, 47.2119, 0.44", "210.272, 196.773, 47.6136, 0.81", "210.489, 196.773, 47.7162, 1.11", "210.699, 196.779, 47.8163, 1.11", "210.829, 196.786, 47.8723, 1.11", "212.737, 196.991, 48.6762, 0.22", "213.299, 197.048, 48.8952, 0.22", "214.968, 197.206, 49.3967, 0.22", "215.787, 197.274, 49.596, 0.22", "216.076, 197.294, 49.6509, 0.22", "216.761, 197.318, 49.7323, 0.22", "216.864, 197.317, 49.7297, 0.22", "217.811, 197.386, 49.6369, 1.03", "218.468, 197.519, 49.5207, 1.25", "218.536, 197.535, 49.5107, 1.25", "218.77, 197.592, 49.4842, 1.33", "219.58, 197.795, 49.4197, 0.59", "221.213, 198.204, 49.3458, 0.44", "221.282, 198.221, 49.3458, 0.44", "222.2, 198.435, 49.2124, 0.44", "222.844, 198.585, 49.1552, 0.44", "223.301, 198.695, 49.1297, 0.81", "223.38, 198.716, 49.1276, 0.81", "223.801, 198.844, 49.1286, 0.81", "226.182, 199.661, 49.1994, 1.03", "228.548, 200.495, 49.3281, 0.66", "229.058, 200.663, 49.3656, 0.22", "229.898, 200.926, 49.443, 0.22", "229.968, 200.944, 49.4551, 0.22", "230.852, 201.13, 49.7664, 0.22", "231.809, 201.273, 50.2967, 0.81", "232.008, 201.281, 50.3986, 1.25", "232.127, 201.276, 50.4744, 1.25", "233.73, 201.095, 51.3401, 0.22", "234.999, 200.906, 51.8779, 0.96", "235.146, 200.877, 51.9129, 0.96", "235.724, 200.747, 51.6072, 0.96", "235.758, 200.741, 51.5575, 0.96", "237.458, 200.279, 48.7212, 0.22", "237.493, 200.27, 48.6611, 0.22", "237.607, 200.241, 48.4615, 0.66", "237.683, 200.223, 48.3327, 0.66", "239.074, 200.002, 45.9653, 0.66", "239.669, 199.934, 44.9835, 0.22", "240.593, 199.899, 43.6053, 0.81", "240.657, 199.899, 43.5108, 0.81", "240.871, 199.911, 43.2054, 0.81", "241.803, 200.002, 41.9273, 0.22", "242.659, 200.171, 40.9136, 0.22", "242.998, 200.295, 40.4671, 0.22", "243.077, 200.328, 40.352, 0.22", "243.329, 200.439, 39.968, 1.11" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "200.112, 196.111, 46.4288, 0.29", "199.997, 197.278, 46.7324, 0.29", "199.974, 197.401, 46.769, 0.29", "199.852, 198.054, 46.9642, 0.81", "199.662, 199.078, 47.2704, 0.22", "199.649, 199.144, 47.2904, 0.22", "199.509, 199.898, 47.5158, 0.22", "199.207, 201.161, 47.7951, 0.22" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "56.5907, 195.148, -59.3056, 0.44", "57.1664, 196.156, -58.9866, 0.44", "57.6819, 197.044, -58.7857, 0.44", "57.9614, 197.556, -58.7119, 0.88", "58.217, 198.1, -58.6636, 1.11", "58.2755, 198.24, -58.6554, 1.11", "58.6489, 199.139, -58.6192, 1.11", "58.8937, 199.718, -58.6014, 1.11", "59.3481, 200.816, -58.5498, 1.11", "59.8237, 202.041, -58.4843, 1.11", "60.1683, 203.008, -58.4178, 1.33", "60.6001, 204.307, -58.3196, 1.33", "60.876, 205.253, -58.24, 0.88", "61.0577, 205.89, -58.1816, 0.74", "61.3688, 207.024, -58.0815, 0.66", "61.5987, 207.883, -58.018, 0.66", "61.7422, 208.466, -57.9872, 1.03", "61.8983, 209.138, -58.0011, 1.4", "62.1527, 210.097, -58.106, 1.4", "62.2159, 210.308, -58.1355, 1.4", "62.5577, 211.365, -58.3024, 1.4", "62.5807, 211.433, -58.3115, 1.4", "62.9278, 212.455, -58.422, 0.96", "63.441, 213.965, -58.5624, 0.88", "63.8455, 215.213, -58.6545, 0.88", "64.1124, 215.987, -58.6919, 1.33", "64.3932, 216.826, -58.7131, 0.81", "64.5542, 217.38, -58.7112, 0.81", "64.5709, 217.448, -58.7076, 0.81", "64.7038, 218.038, -58.6741, 0.59", "64.9604, 219.157, -58.6273, 0.52", "65.1299, 220.016, -58.614, 0.37", "65.2558, 220.798, -58.6222, 0.37", "65.278, 220.948, -58.623, 0.37", "65.391, 221.709, -58.6238, 0.37", "65.5742, 222.873, -58.5786, 1.84", "65.7515, 223.899, -58.5082, 2.14", "65.7669, 223.967, -58.5022, 2.14", "66.0395, 225.035, -58.4053, 1.84", "66.5821, 226.923, -58.23, 1.62", "66.9375, 227.975, -58.1543, 0.88", "67.3147, 228.847, -58.1055, 0.66", "67.8433, 229.842, -58.074, 0.66", "68.2728, 230.602, -58.0736, 1.18", "68.6784, 231.266, -58.0957, 1.18", "69.2268, 232.11, -58.1561, 0.66", "69.749, 232.937, -58.2564, 0.66", "70.7279, 234.574, -58.4737, 0.44", "71.352, 235.751, -58.6269, 0.44", "71.8632, 236.891, -58.7291, 0.44", "71.8864, 236.958, -58.7322, 0.44", "72.0865, 237.681, -58.7328, 1.55", "72.2451, 238.309, -58.7235, 1.55", "72.4648, 239.089, -58.6931, 0.96", "72.8155, 240.086, -58.6362, 0.29", "73.1499, 240.965, -58.5777, 0.29", "73.1853, 241.058, -58.5714, 0.29", "73.4819, 241.82, -58.5122, 0.29", "73.5058, 241.888, -58.5091, 0.29", "73.6494, 242.435, -58.5086, 0.29", "73.7682, 243.224, -58.5825, 0.96", "73.8402, 244.198, -58.7006, 0.96", "73.8444, 244.338, -58.7189, 0.96", "73.843, 245.253, -58.8375, 0.96", "73.8616, 246.21, -58.9971, 1.33", "73.8673, 247.067, -59.1576, 1.55", "73.8635, 247.489, -59.2665, 1.55", "73.8604, 248.122, -59.46, 1.03", "73.8545, 248.966, -59.7347, 0.74", "73.848, 250.12, -60.1379, 0.59", "73.8444, 250.965, -60.4313, 0.59", "73.8238, 251.951, -60.7428, 0.44", "73.7867, 252.651, -60.965, 0.44", "73.7158, 253.275, -61.1656, 0.44", "73.7025, 253.342, -61.1846, 0.44", "73.5549, 253.973, -61.3182, 0.96", "73.4571, 254.471, -61.4023, 0.96", "73.4445, 254.542, -61.4112, 0.96", "73.1702, 255.919, -61.5907, 0.37", "72.9486, 256.94, -61.7184, 0.37", "72.8436, 257.433, -61.7756, 0.37", "72.6461, 258.43, -61.8827, 0.37", "72.5089, 259.26, -61.9594, 0.37", "72.4934, 259.367, -61.9666, 0.37", "72.3995, 260.315, -61.9897, 0.37", "72.3672, 260.679, -61.9969, 1.55", "72.3194, 261.005, -62.0024, 1.69", "72.2891, 261.32, -61.9938, 1.69", "72.259, 262.044, -61.9565, 1.4", "72.257, 262.994, -61.8979, 1.69", "72.2903, 264.145, -61.819, 1.77", "72.4362, 266.569, -61.6458, 0.44", "72.5639, 268.154, -61.5318, 0.44", "72.6961, 269.379, -61.4419, 0.44", "72.7249, 269.6, -61.4258, 0.44", "72.8225, 270.412, -61.3693, 0.88", "72.9286, 271.256, -61.3165, 1.18", "72.9998, 272.234, -61.2752, 1.18", "72.9943, 272.307, -61.2741, 1.18", "72.8306, 273.362, -61.24, 1.18", "72.6494, 274.339, -61.197, 1.47", "72.6352, 274.418, -61.1926, 1.47", "72.5409, 275.125, -61.1273, 1.47", "72.494, 275.762, -61.0498, 0.96", "72.48, 276.448, -60.9418, 0.66", "72.5383, 277.439, -60.7517, 0.52", "72.6198, 278.044, -60.6235, 0.37", "72.7992, 279.071, -60.408, 0.29", "72.9388, 279.664, -60.284, 0.29", "73.0337, 280.027, -60.2136, 0.52", "73.1827, 280.58, -60.1097, 0.74", "73.2073, 280.69, -60.0927, 0.74", "73.3628, 281.631, -59.997, 0.74", "73.4009, 281.875, -59.9925, 1.03", "73.4307, 282.034, -59.9936, 1.03", "73.506, 282.407, -60.0062, 1.03", "73.6582, 283.14, -60.0304, 0.29", "73.6732, 283.211, -60.0324, 0.29", "73.9237, 284.361, -60.061, 0.29", "73.9413, 284.439, -60.0625, 0.29", "74.0764, 284.946, -60.0675, 0.29", "74.1863, 285.294, -60.0695, 0.29", "74.4587, 285.969, -60.0695, 0.29", "74.4903, 286.032, -60.0695, 0.29", "74.7148, 286.417, -60.0871, 0.74", "75.1033, 287.023, -60.132, 0.81", "75.1639, 287.112, -60.1402, 0.81", "75.7158, 287.88, -60.2195, 0.81", "76.3807, 288.817, -60.319, 0.81", "76.7246, 289.325, -60.3925, 1.11", "77.2141, 290.058, -60.5207, 0.37", "77.6564, 290.75, -60.6582, 0.37", "77.6939, 290.811, -60.6711, 0.37", "78.1599, 291.631, -60.8592, 0.37", "78.5031, 292.293, -61.0172, 0.88", "78.7772, 292.841, -61.1363, 0.88", "78.8057, 292.903, -61.153, 0.88", "79.0529, 293.403, -61.32, 0.88" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "56.5907, 195.148, -59.3056, 0.22", "56.1738, 195.404, -59.0796, 0.22", "54.8546, 196.215, -58.3648, 0.22", "54.7376, 196.287, -58.3014, 0.74", "54.3446, 196.529, -58.0884, 0.74", "53.5292, 197.03, -57.6466, 0.44", "53.1681, 197.252, -57.4509, 0.44" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "39.5311, 126.081, -69.0205, 0.74", "39.6431, 126.169, -69.4915, 0.74", "40.83, 126.932, -74.0592, 1.03", "40.9548, 127.022, -74.6009, 1.03", "40.9688, 127.034, -74.6692, 1.03", "41.4335, 127.539, -77.2298, 0.66", "41.4443, 127.555, -77.2979, 0.66", "41.6724, 128.192, -79.5085, 0.66", "41.7883, 128.923, -81.4493, 0.66", "41.8193, 129.124, -81.9394, 0.88", "41.8698, 129.354, -82.4596, 0.88", "41.9841, 129.804, -83.3677, 0.88", "42.6209, 131.536, -86.767, 0.52", "42.8943, 132.117, -87.83, 0.66", "43.249, 132.634, -88.8167, 0.66", "43.7216, 133.152, -89.8824, 0.44", "43.7814, 133.207, -90.01, 0.44", "44.0098, 133.412, -90.5416, 0.44", "44.4058, 133.851, -91.6537, 1.18", "44.4283, 133.888, -91.7583, 1.18", "44.5357, 134.153, -92.4843, 1.18", "44.7001, 134.888, -94.4587, 1.18", "44.8049, 135.773, -96.9265, 0.66", "44.81, 136.416, -98.85, 1.47", "44.7449, 137.285, -101.561, 1.47", "44.7296, 137.379, -101.857, 1.47", "44.6162, 137.835, -103.277, 0.74", "44.4434, 138.511, -105.235, 1.03", "44.2507, 139.142, -106.892, 0.59", "44.1781, 139.34, -107.385, 0.59", "44.1188, 139.517, -107.795, 0.59", "43.9061, 140.381, -109.731, 0.59", "43.8853, 140.687, -110.306, 0.59", "43.898, 140.949, -110.642, 0.59" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "39.5311, 126.081, -69.0205, 0.37", "39.4898, 127.234, -69.5618, 0.37", "39.478, 128.135, -70.195, 0.37", "39.5431, 129.331, -71.2145, 0.37", "39.5477, 129.385, -71.2597, 0.37", "39.5869, 129.731, -71.5298, 0.37", "39.6552, 130.251, -71.9226, 1.11", "39.9113, 131.681, -73.1916, 0.52", "40.122, 132.6, -74.0342, 0.81", "40.2963, 133.28, -74.5869, 1.25", "40.4487, 133.843, -75.0482, 1.25", "40.4641, 133.896, -75.0921, 1.25", "40.9084, 135.419, -76.1958, 0.52", "40.9447, 135.561, -76.2967, 0.52", "41.1012, 136.409, -76.9684, 0.52", "41.1733, 137.193, -77.613, 0.74", "41.177, 137.298, -77.7095, 0.74", "41.1778, 138.368, -78.7151, 0.74", "41.1439, 140.033, -80.2547, 0.74", "41.119, 141.011, -81.1873, 1.84", "41.0954, 141.823, -81.9929, 1.84", "41.0433, 143.714, -83.851, 0.52", "41.0435, 143.772, -83.9073, 0.52", "41.0691, 144.352, -84.4721, 0.52", "41.225, 145.501, -85.4112, 0.52", "41.4249, 146.297, -86.0497, 0.52", "41.4472, 146.362, -86.0964, 0.52", "41.7122, 147.062, -86.4503, 0.52", "41.7673, 147.198, -86.517, 0.52", "42.0488, 147.84, -86.8172, 0.88", "42.3998, 148.599, -87.1109, 1.11", "42.7459, 149.442, -87.3917, 1.11", "43.0666, 150.4, -87.7261, 1.4", "43.2951, 151.243, -88.0289, 1.4", "43.3146, 151.319, -88.0544, 1.4", "43.5943, 152.45, -88.3795, 0.52", "43.869, 153.485, -88.6766, 0.52", "44.1279, 154.434, -88.9639, 0.81", "44.1464, 154.499, -88.9825, 0.81", "44.5044, 155.74, -89.3488, 0.81", "44.8619, 157.043, -89.7421, 0.81", "45.1783, 158.201, -90.1013, 0.37", "45.4402, 159.152, -90.3907, 0.37", "45.7366, 160.259, -90.7337, 0.37", "46.0016, 161.33, -91.0709, 1.11", "46.277, 162.569, -91.4743, 1.47", "46.2914, 162.635, -91.4945, 1.47", "46.4702, 163.47, -91.7281, 1.47", "46.7684, 164.907, -92.1089, 1.47", "46.9974, 166.168, -92.4543, 1.18", "47.0068, 166.226, -92.4693, 1.18", "47.1446, 167.152, -92.7139, 0.66", "47.2905, 168.276, -92.9926, 0.29", "47.5223, 170.527, -93.5898, 0.29", "47.6826, 172.48, -94.0944, 0.52", "47.7326, 173.234, -94.326, 0.96", "47.7657, 173.787, -94.5056, 1.18", "47.8295, 175.033, -94.9269, 1.18", "47.9037, 176.533, -95.4444, 0.96", "47.9742, 177.822, -95.9515, 0.59", "48.1056, 179.6, -96.6549, 0.59", "48.1944, 180.675, -97.1234, 0.96" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_148",
    "id" : "dend_148",
    "points3d" : [ "143.127, -213.712, 22.3104, 1.33", "143.856, -214.448, 23.3947, 1.33", "144.257, -214.847, 23.9635, 0.66", "144.893, -215.488, 24.9011, 0.29", "146.312, -217.068, 26.9533, 0.52", "146.687, -217.498, 27.4753, 0.52", "146.941, -217.808, 27.8132, 0.66", "146.976, -217.854, 27.8543, 0.66", "147.538, -218.642, 28.4931, 0.81", "148.146, -219.542, 28.9718, 0.52", "148.304, -219.788, 29.0176, 0.88", "148.711, -220.446, 29.1095, 1.03", "149.247, -221.311, 29.1992, 1.62", "149.286, -221.372, 29.2018, 1.62", "149.913, -222.294, 29.1242, 1.92", "150.229, -222.71, 29.0827, 2.14", "150.484, -223.044, 29.05, 2.14" ],
    "parent" : "dend_146",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_147",
    "id" : "dend_147",
    "points3d" : [ "143.127, -213.712, 22.3104, 0.29", "142.841, -212.433, 22.6435, 0.29", "142.731, -211.943, 22.771, 0.29", "142.716, -211.877, 22.7883, 0.29", "142.502, -210.921, 23.0372, 0.29", "142.487, -210.852, 23.0552, 0.29", "142.43, -210.598, 23.1215, 0.74" ],
    "parent" : "dend_146",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_143",
    "id" : "dend_143",
    "points3d" : [ "97.3439, -264.769, -38.5906, 0.22", "96.7574, -266.47, -37.3471, 0.22", "96.5172, -267.081, -36.9963, 0.22", "96.3608, -267.489, -36.8094, 0.37", "96.2159, -267.87, -36.6704, 0.37", "96.1901, -267.943, -36.6417, 0.37", "95.8468, -268.981, -36.2449, 0.37", "95.716, -269.309, -36.1604, 0.81", "95.5342, -269.777, -36.0239, 1.03", "95.3288, -270.326, -35.8581, 1.03", "94.9011, -271.438, -35.5375, 0.81", "94.6618, -272.029, -35.371, 0.81", "94.4927, -272.426, -35.2717, 0.52", "94.4639, -272.49, -35.2592, 0.52", "94.1313, -273.233, -35.1448, 0.52", "93.7296, -274.216, -35.0506, 0.52", "93.7035, -274.284, -35.0486, 0.52", "93.3272, -275.399, -35.0156, 0.52", "93.1168, -276.038, -34.9988, 1.11", "92.9805, -276.403, -34.9904, 1.11", "92.7282, -277.025, -34.978, 0.29", "92.68, -277.121, -34.9766, 0.29", "92.3865, -277.63, -34.969, 0.29", "91.7573, -278.646, -34.9597, 0.29", "91.388, -279.214, -34.9553, 0.22", "91.3494, -279.273, -34.9547, 0.22", "90.9112, -279.976, -34.9464, 0.22", "90.4657, -280.758, -34.9364, 0.22", "90.0088, -281.607, -34.9244, 0.29", "89.7724, -282.135, -34.9162, 0.29", "89.5079, -282.82, -34.9052, 0.29", "89.399, -283.131, -34.9004, 0.37", "89.3587, -283.276, -34.8982, 0.37" ],
    "parent" : "dend_141",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_142",
    "id" : "dend_142",
    "points3d" : [ "97.3439, -264.769, -38.5906, 0.37", "95.9522, -266.273, -39.468, 0.37", "95.693, -266.596, -39.6177, 0.37", "95.1252, -267.391, -39.9959, 0.37", "94.5218, -268.293, -40.429, 0.37", "94.4868, -268.349, -40.455, 0.37", "93.934, -269.299, -40.8746, 0.37", "93.6383, -269.939, -41.0818, 1.33", "93.2317, -270.974, -41.4032, 1.33", "93.2192, -271.031, -41.4174, 1.33", "93.1669, -271.588, -41.5433, 0.37", "93.1527, -272.093, -41.6635, 0.37", "93.2213, -272.879, -41.858, 0.37", "93.2365, -272.947, -41.8729, 0.37", "93.7609, -274.492, -42.2649, 0.37", "94.0558, -275.218, -42.5031, 0.22", "94.1181, -275.345, -42.5541, 0.22", "94.388, -275.819, -42.7782, 0.22", "94.7791, -276.454, -43.161, 0.22", "95.2246, -277.293, -43.6854, 0.81", "95.3549, -277.66, -43.8916, 1.11", "95.4351, -278.017, -44.0541, 1.11", "95.4446, -278.092, -44.0786, 1.11", "95.5105, -279.284, -44.363, 0.29", "95.5395, -280.303, -44.5122, 0.29", "95.5759, -281.627, -44.5888, 0.29", "95.5784, -281.722, -44.591, 0.29", "95.589, -283.161, -44.5712, 0.29", "95.5871, -283.253, -44.5606, 0.29", "95.5334, -284.177, -44.3516, 0.29", "95.5099, -284.473, -44.2701, 0.74", "95.4297, -285.257, -44.0419, 0.74", "95.3159, -286.103, -43.8066, 0.59", "95.0771, -287.403, -43.4745, 0.59", "94.9983, -287.797, -43.3834, 0.74", "94.8932, -288.314, -43.2537, 0.37", "94.697, -289.357, -42.9899, 0.29", "94.6064, -289.997, -42.8045, 0.29", "94.5665, -290.343, -42.7036, 1.33", "94.4864, -291.195, -42.48, 1.69", "94.3976, -292.21, -42.1818, 1.69", "94.3921, -292.268, -42.1632, 1.69", "94.2892, -293.489, -41.7191, 0.22", "94.2324, -294.287, -41.4273, 0.22", "94.2093, -294.644, -41.298, 0.22", "94.1872, -294.985, -41.1834, 0.59", "94.1578, -295.418, -41.0814, 0.59", "94.1242, -296.068, -40.958, 0.15", "94.1276, -296.657, -40.8949, 0.15", "94.1424, -296.808, -40.8714, 0.15", "94.1786, -297.092, -40.8194, 0.15", "94.3286, -298.174, -40.612, 0.15", "94.3388, -298.244, -40.5986, 0.15", "94.4641, -299.139, -40.439, 0.15", "94.5601, -299.869, -40.2945, 0.59", "94.6017, -300.228, -40.2186, 0.96", "94.658, -300.729, -40.1001, 1.25", "94.7215, -301.045, -40.0046, 1.25" ],
    "parent" : "dend_141",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_140",
    "id" : "dend_140",
    "points3d" : [ "122.436, -214.989, 4.90606, 0.44", "120.93, -216.034, 2.71095, 0.44", "119.995, -216.683, 1.34921, 0.44", "119.623, -216.941, 0.806942, 0.74" ],
    "parent" : "dend_134",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_135",
    "id" : "dend_135",
    "points3d" : [ "122.436, -214.989, 4.90606, 0.81", "123.355, -215.473, 4.98717, 0.81", "124.192, -215.913, 5.05515, 0.59", "125.658, -216.758, 5.21061, 0.59", "125.904, -216.931, 5.22958, 0.59", "126.274, -217.245, 5.23919, 1.03", "126.885, -217.824, 5.23517, 1.4", "126.923, -217.871, 5.23167, 1.4", "127.355, -218.533, 5.15838, 0.37", "128.074, -219.848, 4.99439, 0.37", "128.526, -220.64, 4.89095, 0.37", "128.565, -220.71, 4.88129, 0.37", "129.201, -221.917, 4.71507, 0.37", "129.549, -222.575, 4.63842, 0.37", "129.587, -222.646, 4.6312, 0.37", "129.991, -223.349, 4.65382, 1.25", "130.245, -223.774, 4.69645, 1.25", "130.549, -224.279, 4.75722, 0.44", "131.396, -225.608, 5.03261, 0.44", "131.438, -225.674, 5.04936, 0.44", "132.148, -226.796, 5.34784, 0.44", "132.46, -227.306, 5.4977, 0.74", "132.761, -227.737, 5.61399, 0.74", "133.474, -228.648, 5.8661, 0.29", "133.571, -228.76, 5.8967, 0.29", "134.369, -229.63, 6.15979, 0.29", "134.929, -230.194, 6.32374, 0.29", "135.758, -230.94, 6.64528, 0.29", "136.388, -231.468, 6.91358, 0.59", "136.892, -231.875, 7.12323, 0.74", "137.916, -232.643, 7.58121, 0.44", "139.185, -233.503, 8.2167, 0.44", "140.586, -234.457, 8.99299, 0.44", "140.653, -234.507, 9.03692, 0.44" ],
    "parent" : "dend_134",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_125",
    "id" : "dend_125",
    "points3d" : [ "-87.9821, -311.095, 5.52013, 0.59", "-89.1226, -310.832, 2.92847, 0.59", "-89.4313, -310.782, 2.3312, 0.59", "-89.4663, -310.777, 2.26992, 0.59", "-89.9131, -310.725, 1.54985, 0.59", "-90.4811, -310.662, 0.687288, 0.81", "-91.0765, -310.662, -0.191394, 0.29", "-91.3283, -310.689, -0.501313, 0.74", "-91.4169, -310.701, -0.625427, 0.74", "-91.5429, -310.706, -0.796086, 0.74", "-91.5849, -310.701, -0.852788, 0.74", "-92.515, -310.551, -1.96762, 0.22", "-93.2713, -310.37, -2.87303, 0.22", "-93.3181, -310.358, -2.92739, 0.22", "-93.9527, -310.216, -3.5977, 0.22", "-94.8169, -310.054, -4.38422, 0.22", "-95.2801, -309.946, -4.83849, 0.22", "-95.3293, -309.93, -4.88959, 0.22", "-95.5342, -309.872, -5.12036, 0.59", "-95.911, -309.762, -5.62122, 0.59", "-96.1568, -309.69, -5.99618, 0.59", "-97.2102, -309.307, -7.77555, 0.29", "-97.7672, -309.06, -8.85191, 0.29", "-97.797, -309.044, -8.91402, 0.29", "-98.0752, -308.849, -9.56367, 0.59", "-98.1486, -308.78, -9.76136, 0.88" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_122",
    "id" : "dend_122",
    "points3d" : [ "-87.9821, -311.095, 5.52013, 0.52", "-89.0513, -312.368, 5.64003, 0.52", "-89.9518, -313.509, 5.73367, 0.52", "-90.3198, -314.004, 5.76618, 0.74", "-90.5691, -314.369, 5.78627, 0.74", "-90.8567, -314.811, 5.80755, 0.59", "-91.2986, -315.509, 5.83853, 0.59", "-91.7855, -316.363, 5.89017, 0.52", "-92.4178, -317.557, 5.90067, 0.52", "-92.7616, -318.214, 5.90512, 0.52", "-93.0177, -318.693, 5.89881, 0.52", "-93.0521, -318.757, 5.89337, 0.52", "-93.4685, -319.473, 5.77652, 0.52", "-93.7991, -319.989, 5.64631, 0.52", "-94.0125, -320.283, 5.55288, 1.03", "-94.4266, -320.788, 5.34838, 0.52", "-95.0209, -321.497, 5.03894, 0.74", "-95.51, -322.064, 4.77941, 0.74", "-95.7989, -322.397, 4.62994, 0.74", "-96.5503, -323.298, 4.30244, 0.74", "-97.0751, -323.984, 4.127, 0.81", "-97.4647, -324.537, 4.0427, 0.81", "-97.7111, -324.893, 4.02495, 0.37", "-98.3035, -325.795, 3.99288, 0.37", "-98.749, -326.523, 3.90633, 0.37", "-99.0996, -327.162, 3.77523, 0.37", "-99.1618, -327.285, 3.73865, 0.37", "-99.8514, -328.704, 3.17103, 0.37", "-100.229, -329.508, 2.78964, 0.37", "-100.877, -330.901, 1.99799, 0.59", "-101.193, -331.586, 1.57468, 0.74", "-101.674, -332.566, 0.957597, 0.74", "-101.734, -332.678, 0.888315, 0.74", "-102.042, -333.145, 0.608674, 0.74", "-102.088, -333.196, 0.585527, 0.74", "-102.871, -333.882, 0.43533, 0.74", "-103.496, -334.389, 0.37425, 0.74", "-104.059, -334.854, 0.284791, 0.66", "-104.815, -335.576, 0.0979308, 0.66", "-105.118, -335.915, -0.0109527, 1.03", "-105.864, -336.893, -0.339651, 1.03", "-106.322, -337.581, -0.575493, 1.03", "-107.072, -338.904, -1.00628, 0.81", "-107.488, -339.758, -1.26527, 0.59", "-107.932, -340.713, -1.53006, 0.59", "-108.401, -341.649, -1.75861, 0.59", "-108.759, -342.308, -1.89515, 0.88", "-109.164, -342.971, -1.98992, 1.47", "-109.495, -343.443, -2.0139, 1.47", "-110.262, -344.427, -2.04654, 1.03", "-110.911, -345.26, -2.0545, 0.88", "-110.954, -345.318, -2.06037, 0.88", "-111.383, -345.947, -2.15844, 1.4", "-111.65, -346.389, -2.24095, 1.55", "-112.002, -347.049, -2.37658, 0.96", "-112.625, -348.462, -2.6845, 0.96", "-113.304, -350.158, -3.12325, 0.59", "-113.847, -351.511, -3.55145, 0.59", "-114.041, -351.982, -3.72041, 0.88", "-114.27, -352.484, -3.91421, 1.25", "-114.482, -352.888, -4.10255, 1.25", "-115.276, -354.23, -4.80934, 1.18", "-115.979, -355.307, -5.39278, 1.18", "-116.459, -355.951, -5.77358, 1.18", "-116.997, -356.622, -6.14022, 1.18", "-117.857, -357.662, -6.66605, 0.29", "-118.302, -358.19, -6.89604, 0.29", "-118.408, -358.32, -6.93757, 0.29", "-118.884, -358.938, -7.07813, 0.29", "-119.9, -360.337, -7.33391, 0.29", "-119.94, -360.395, -7.33976, 0.29", "-120.209, -360.799, -7.33195, 0.88", "-120.251, -360.859, -7.33032, 0.88", "-120.562, -361.311, -7.31342, 0.96", "-120.604, -361.38, -7.31038, 0.96", "-120.834, -361.896, -7.28538, 0.96", "-121.198, -362.816, -7.2388, 0.52", "-121.41, -363.406, -7.20787, 0.52", "-121.439, -363.496, -7.20449, 0.52", "-121.73, -364.55, -7.17882, 0.52", "-122.048, -365.78, -7.16212, 0.52", "-122.132, -366.097, -7.16212, 0.66", "-122.153, -366.174, -7.16264, 0.66", "-122.408, -366.967, -7.17095, 0.66", "-122.671, -367.613, -7.17787, 0.52", "-122.742, -367.746, -7.17819, 0.52", "-123.368, -368.736, -7.11203, 0.52", "-123.588, -369.073, -7.06849, 0.74", "-123.875, -369.507, -6.98263, 0.96", "-124.053, -369.765, -6.90705, 0.96", "-124.079, -369.815, -6.88728, 0.96", "-124.386, -370.484, -6.60594, 0.59", "-124.47, -370.681, -6.52683, 0.44", "-124.657, -371.122, -6.36783, 0.37", "-124.682, -371.185, -6.34895, 0.37", "-125.075, -372.329, -6.00693, 0.15", "-125.295, -373.133, -5.55842, 0.15", "-125.538, -373.946, -4.97362, 0.15", "-125.556, -373.998, -4.92893, 0.15", "-125.876, -374.794, -4.13873, 0.15", "-126.237, -375.581, -3.25631, 0.15", "-127.301, -377.458, -0.73047, 0.15", "-127.594, -377.924, -0.0186239, 0.15", "-127.754, -378.136, 0.349477, 0.88", "-127.967, -378.384, 0.759626, 0.88", "-128.007, -378.422, 0.818793, 0.88", "-128.452, -378.827, 1.25208, 0.22", "-128.823, -379.232, 1.4861, 0.22", "-128.895, -379.335, 1.54979, 0.22", "-129.404, -380.165, 2.08474, 0.22", "-129.895, -380.999, 2.74826, 0.22", "-130.294, -381.634, 3.31321, 1.03", "-130.33, -381.686, 3.364, 1.03", "-130.667, -382.082, 3.80339, 1.33", "-130.706, -382.121, 3.8502, 1.33", "-131.636, -382.9, 4.83803, 0.59", "-131.961, -383.179, 5.13054, 0.52", "-132.193, -383.406, 5.32068, 0.44", "-132.613, -383.894, 5.66621, 0.22", "-132.647, -383.949, 5.69536, 0.22", "-132.751, -384.199, 5.80872, 0.52", "-132.864, -384.608, 5.95269, 0.88", "-132.973, -385.139, 6.1518, 0.88", "-133.091, -385.782, 6.39939, 0.29", "-133.248, -386.561, 6.74096, 0.29", "-133.484, -387.448, 7.17956, 0.29", "-133.587, -387.754, 7.34307, 0.29", "-133.613, -387.812, 7.37444, 0.29", "-133.773, -388.164, 7.53856, 0.52", "-134.045, -388.824, 7.76799, 0.74", "-134.268, -389.392, 7.91724, 0.88", "-134.434, -389.894, 7.98282, 0.29", "-134.63, -390.53, 8.01014, 0.29", "-134.96, -391.607, 7.98638, 0.29", "-135.199, -392.354, 7.88398, 0.29", "-135.221, -392.42, 7.86863, 0.29", "-135.605, -393.449, 7.57025, 0.29", "-135.954, -394.304, 7.28468, 0.88", "-136.145, -394.74, 7.12523, 1.55", "-136.613, -395.754, 6.69784, 0.81", "-136.792, -396.194, 6.48867, 0.59", "-136.971, -396.747, 6.21354, 0.52", "-136.982, -396.81, 6.18217, 0.52", "-136.996, -397.407, 5.90018, 0.52", "-136.911, -398.163, 5.56368, 0.52", "-136.691, -399.063, 5.20786, 0.44", "-136.668, -399.135, 5.17941, 0.44", "-136.45, -399.781, 4.92058, 0.44", "-136.373, -400.015, 4.82585, 0.29", "-136.22, -400.489, 4.63669, 0.29", "-135.884, -401.508, 4.33496, 0.29", "-135.81, -401.721, 4.28631, 0.96", "-135.448, -402.722, 4.09688, 0.29", "-135.259, -403.244, 4.0236, 0.66", "-135.231, -403.319, 4.01878, 0.66", "-134.842, -404.291, 4.05316, 0.22", "-134.814, -404.355, 4.06469, 0.22", "-134.508, -405.044, 4.21896, 0.22", "-134.415, -405.248, 4.27754, 0.44", "-134.271, -405.713, 4.37632, 0.44", "-134.257, -405.782, 4.37955, 0.44", "-134.175, -406.318, 4.33889, 0.22", "-134.099, -406.823, 4.283, 0.44", "-133.995, -407.313, 4.21182, 0.44", "-133.746, -408.225, 4.05436, 0.22", "-133.483, -408.992, 3.90726, 0.88", "-133.255, -409.672, 3.77252, 1.33", "-133.226, -409.765, 3.75242, 1.33", "-132.911, -410.656, 3.5418, 0.59", "-132.778, -410.753, 3.51913, 0.59", "-133.11, -410.791, 3.48835, 0.59", "-134.224, -411.024, 3.35559, 0.59", "-134.737, -411.154, 3.28726, 0.74", "-136.237, -411.633, 2.99294, 0.66", "-136.936, -411.888, 2.82074, 0.37", "-136.997, -411.918, 2.80119, 0.37", "-136.713, -412.576, 2.39584, 0.37", "-136.684, -412.631, 2.36084, 0.37", "-136.225, -413.411, 1.87097, 0.37", "-136.185, -413.47, 1.83475, 0.37", "-135.772, -414.08, 1.45253, 0.37", "-135.734, -414.142, 1.41255, 0.37", "-135.307, -415.047, 0.785354, 0.37" ],
    "parent" : "dend_121",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_106",
    "id" : "dend_106",
    "points3d" : [ "-32.7793, -379.251, 1.22642, 0.52", "-32.8047, -380.422, 1.35855, 0.52", "-32.835, -381.375, 1.28779, 0.52", "-32.8833, -382.701, 1.1028, 0.52", "-32.8922, -382.866, 1.07444, 0.52", "-32.9986, -384.535, 0.767777, 0.52", "-33.004, -384.606, 0.75423, 0.52", "-33.1335, -386.682, 0.194762, 0.52", "-33.1382, -386.74, 0.177403, 0.52", "-33.2775, -387.85, -0.19974, 0.52", "-33.2921, -387.938, -0.228628, 0.52", "-33.3322, -388.117, -0.287458, 0.88", "-33.3433, -388.174, -0.299682, 0.88", "-33.422, -388.69, -0.293979, 1.11", "-33.4282, -388.749, -0.294047, 1.11", "-33.4598, -389.482, -0.296158, 1.11", "-33.4626, -389.582, -0.296873, 1.11", "-33.4682, -390.392, -0.301311, 0.81", "-33.4681, -390.492, -0.301577, 0.81", "-33.4523, -391.315, -0.311828, 0.81", "-33.4508, -391.388, -0.312572, 0.81" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_105",
    "id" : "dend_105",
    "points3d" : [ "-32.7793, -379.251, 1.22642, 0.22", "-33.3104, -379.487, 1.489, 0.22", "-33.8181, -379.716, 1.83923, 0.22", "-33.9705, -379.792, 1.95594, 0.22", "-35.0443, -380.362, 2.80055, 0.22", "-35.8848, -380.848, 3.47308, 0.22", "-35.9456, -380.887, 3.52232, 0.22", "-36.7706, -381.475, 4.44475, 0.29", "-36.9987, -381.666, 4.79657, 0.29", "-37.1234, -381.825, 5.10365, 0.44", "-37.1343, -381.957, 5.3625, 0.44", "-37.1101, -382.107, 5.62182, 0.44", "-37.0982, -383.076, 7.04471, 0.22", "-37.0999, -383.119, 7.10074, 0.22", "-37.1554, -383.741, 7.81463, 0.22", "-37.1721, -383.844, 7.91265, 0.22", "-37.469, -385.082, 8.92669, 0.22", "-37.8175, -386.204, 9.66033, 0.22", "-37.8694, -386.335, 9.71902, 0.22", "-38.2639, -387.085, 9.95809, 0.22", "-38.7586, -387.754, 10.0273, 0.22", "-38.8597, -387.859, 9.98742, 0.59", "-39.629, -388.365, 9.29915, 0.59", "-40.3988, -388.714, 8.46537, 0.22", "-40.9802, -388.889, 7.82386, 0.22", "-41.0269, -388.893, 7.77101, 0.22", "-41.2243, -388.888, 7.53907, 0.66", "-41.5377, -388.893, 7.20869, 0.66" ],
    "parent" : "dend_104",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_99",
    "id" : "dend_99",
    "points3d" : [ "-9.87496, -382.697, -39.4493, 0.88", "-11.0838, -384.387, -43.0071, 0.88", "-11.2455, -384.683, -43.4896, 0.88", "-11.271, -384.743, -43.5757, 0.88", "-11.4858, -385.336, -44.3545, 0.29", "-11.641, -385.843, -44.9347, 0.29", "-11.6559, -385.898, -44.9908, 0.29", "-11.7913, -386.936, -45.3912, 0.29", "-11.8838, -387.615, -45.7334, 0.52", "-11.898, -387.697, -45.779, 0.52", "-12.0541, -388.324, -46.1556, 0.52", "-12.1737, -388.667, -46.3962, 0.52", "-12.4928, -389.243, -46.8777, 0.29", "-13.3265, -390.288, -47.8435, 0.66", "-13.6041, -390.599, -48.1128, 0.66", "-13.8627, -390.884, -48.406, 0.66", "-13.9046, -390.927, -48.4586, 0.66", "-14.4321, -391.559, -49.2323, 0.15", "-14.6675, -391.959, -49.691, 0.44", "-14.7751, -392.272, -50.0174, 0.44", "-14.9607, -393.21, -50.9861, 0.29", "-14.9652, -393.258, -51.037, 0.29", "-14.987, -393.875, -51.6804, 0.29", "-14.9402, -394.987, -52.7741, 0.29", "-14.8688, -395.689, -53.4167, 0.59", "-14.8159, -396.09, -53.7436, 0.59", "-14.6451, -397.619, -54.7924, 0.59", "-14.639, -397.681, -54.8307, 0.59", "-14.5762, -398.423, -55.2431, 0.59", "-14.4655, -399.276, -55.6035, 0.59", "-14.3344, -400.257, -55.9247, 0.59", "-14.257, -400.819, -56.0935, 1.18", "-14.1975, -401.312, -56.1984, 1.55", "-14.1894, -401.38, -56.2117, 1.55", "-14.1301, -401.899, -56.321, 1.55", "-14.1204, -401.995, -56.3445, 1.55", "-14.027, -403.183, -56.6407, 0.52", "-13.9348, -404.486, -56.9811, 0.52", "-13.8594, -406.133, -57.4054, 0.52", "-13.8541, -406.803, -57.5711, 1.03", "-13.8794, -407.725, -57.7888, 1.03", "-13.9321, -408.791, -58.0204, 1.03", "-13.9369, -408.861, -58.0315, 1.03", "-14.0004, -409.804, -58.1495, 1.4", "-14.0288, -410.36, -58.1816, 1.4", "-14.0266, -410.584, -58.1774, 1.4", "-14.0034, -410.816, -58.1629, 1.4", "-13.8299, -411.869, -58.097, 0.88", "-13.6397, -412.814, -58.0108, 0.88", "-13.4764, -413.489, -57.9343, 0.88", "-13.3144, -414.052, -57.8637, 0.44", "-12.9178, -415.359, -57.6905, 0.44", "-12.8965, -415.425, -57.6792, 0.44", "-12.6572, -416.144, -57.5358, 1.03", "-12.4969, -416.666, -57.4189, 1.33", "-12.3605, -417.164, -57.3113, 1.33", "-12.3448, -417.232, -57.2987, 1.33", "-12.1595, -418.228, -57.1373, 0.44", "-12.0182, -419.341, -56.9906, 0.29", "-11.9381, -420.424, -56.8154, 0.15", "-11.9048, -421.47, -56.6067, 0.15", "-11.9052, -422.58, -56.3602, 0.15", "-11.9035, -422.74, -56.3228, 0.81", "-11.8931, -423.353, -56.1738, 0.81", "-11.848, -424.702, -55.773, 0.22", "-11.7854, -425.965, -55.3503, 0.22", "-11.7811, -426.032, -55.3245, 0.22", "-11.6623, -427.26, -54.8342, 0.22", "-11.6457, -427.372, -54.7932, 0.52", "-11.628, -427.449, -54.7709, 0.52", "-11.4736, -428.099, -54.735, 0.52" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_98",
    "id" : "dend_98",
    "points3d" : [ "-9.87496, -382.697, -39.4493, 0.29", "-11.5985, -382.886, -43.2977, 0.29", "-11.7594, -382.903, -43.657, 0.59", "-11.9998, -382.93, -44.1936, 0.59", "-12.128, -382.944, -44.4799, 0.88" ],
    "parent" : "dend_97",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "-75.4883, 276.189, -53.3222, 0.37", "-75.6023, 276.954, -53.1963, 0.37", "-75.7353, 277.868, -53.0081, 0.37", "-75.7463, 277.947, -52.9908, 0.37", "-75.9166, 279.474, -52.6549, 0.37", "-76.083, 281.161, -52.2956, 0.37", "-76.1661, 282.237, -52.0772, 0.74", "-76.1812, 282.534, -52.02, 1.03", "-76.2142, 283.27, -51.8763, 1.18", "-76.2148, 283.675, -51.807, 1.33", "-76.1552, 284.453, -51.6985, 0.81", "-76.0824, 285.054, -51.7012, 0.29", "-76.0729, 285.124, -51.7088, 0.29", "-75.9983, 285.65, -51.7793, 0.29", "-75.8235, 286.865, -51.9665, 0.29", "-75.7645, 287.292, -52.0344, 0.66", "-75.5503, 288.698, -52.2799, 0.15", "-75.4853, 289.132, -52.361, 1.11", "-75.3508, 289.978, -52.5264, 1.11", "-75.3389, 290.048, -52.5415, 1.11", "-75.1964, 290.971, -52.7643, 1.33" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "-75.4883, 276.189, -53.3222, 0.22", "-75.4158, 276.187, -53.329, 0.22", "-74.125, 275.904, -53.4908, 0.22", "-74.0147, 275.873, -53.5124, 0.52", "-73.9486, 275.853, -53.5269, 0.52", "-73.4156, 275.678, -53.7112, 0.52", "-72.9872, 275.57, -53.8742, 0.22", "-71.3802, 275.218, -54.5405, 0.22", "-70.9754, 275.134, -54.7248, 0.74", "-70.5915, 275.062, -54.8988, 0.74", "-69.5092, 274.886, -55.3867, 0.15", "-67.8174, 274.682, -56.2007, 0.15", "-67.4879, 274.66, -56.3563, 0.59", "-67.351, 274.663, -56.4244, 0.59", "-67.2864, 274.664, -56.453, 0.59", "-67.2118, 274.664, -56.4838, 0.15", "-65.6981, 274.64, -56.9938, 0.15", "-65.43, 274.616, -57.1276, 0.81", "-65.3591, 274.61, -57.1655, 0.81", "-65.1017, 274.589, -57.3066, 0.81", "-65.0312, 274.583, -57.3454, 0.81" ],
    "parent" : "dend_65",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "79.0529, 293.403, -61.32, 0.52", "79.6583, 293.908, -61.7643, 0.52", "80.3636, 294.489, -62.1913, 0.37", "80.8085, 294.856, -62.4607, 0.37", "81.4262, 295.365, -62.8347, 0.96", "81.9382, 295.787, -63.1448, 1.33", "81.9942, 295.833, -63.1787, 1.33", "82.7443, 296.463, -63.5453, 1.62" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "79.0529, 293.403, -61.32, 0.22", "78.883, 295.049, -61.001, 0.22", "78.8706, 295.147, -60.9859, 0.22", "78.5878, 296.791, -60.7855, 0.22", "78.5415, 297.009, -60.7643, 0.74", "78.4932, 297.215, -60.7469, 0.74", "78.2768, 298.037, -60.6852, 0.88", "78.0983, 298.673, -60.6852, 0.88", "77.8101, 299.46, -60.6852, 0.44", "77.4379, 300.162, -60.7475, 0.29", "77.359, 300.29, -60.7699, 0.29", "77.12, 300.64, -60.8574, 0.29", "77.063, 300.718, -60.8821, 0.66", "76.6938, 301.236, -61.0847, 0.88", "76.0439, 302.191, -61.4933, 0.96", "75.7135, 302.685, -61.6971, 0.52", "75.2454, 303.393, -61.9625, 0.44", "74.8847, 303.951, -62.1534, 0.44", "74.4686, 304.572, -62.3881, 0.44", "74.2148, 304.94, -62.5317, 1.18", "73.7149, 305.637, -62.7746, 1.47", "73.415, 306.047, -62.9288, 1.47", "73.3657, 306.106, -62.9523, 1.47", "72.4865, 307.022, -63.2942, 0.29", "72.4442, 307.063, -63.3075, 0.29", "71.829, 307.618, -63.4666, 0.29", "70.9354, 308.41, -63.6572, 0.29", "70.3787, 308.892, -63.7389, 0.29", "69.7565, 309.449, -63.7873, 0.29", "69.7055, 309.499, -63.7871, 0.29", "68.7717, 310.421, -63.7871, 0.29", "68.7227, 310.471, -63.7871, 0.29", "68.1041, 311.15, -63.8301, 0.74", "67.5804, 311.819, -63.9016, 1.11", "67.2247, 312.285, -63.9692, 1.4", "67.1824, 312.34, -63.9788, 1.4", "66.7647, 312.931, -64.0935, 1.4", "66.1547, 313.797, -64.2665, 0.29", "66.115, 313.856, -64.281, 0.29", "65.5619, 314.671, -64.5057, 0.29", "65.5165, 314.738, -64.524, 0.29", "64.874, 315.713, -64.784, 0.29", "64.8119, 315.813, -64.8087, 0.29", "64.4271, 316.501, -64.9302, 0.29", "64.3101, 316.738, -64.9761, 0.59", "64.1377, 317.22, -65.0881, 1.03" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "43.898, 140.949, -110.642, 0.66", "42.3231, 139.398, -113.542, 0.66", "41.8826, 138.961, -114.307, 0.66", "40.435, 137.578, -116.572, 0.37", "39.6095, 136.866, -117.692, 0.37", "39.0758, 136.433, -118.356, 0.66", "38.658, 136.094, -118.885, 0.66", "38.6131, 136.059, -118.927, 0.66", "38.125, 135.746, -119.519, 0.66", "37.549, 135.5, -120.338, 0.37", "37.5184, 135.488, -120.4, 0.37", "36.7106, 135.055, -122.169, 0.37", "36.6733, 135.031, -122.259, 0.37", "35.7457, 134.283, -124.782, 0.37", "35.7224, 134.258, -124.855, 0.37", "35.1627, 133.525, -126.737, 0.37", "34.8852, 133.184, -127.605, 0.37", "34.8604, 133.155, -127.676, 0.37", "34.3969, 132.623, -128.841, 0.88", "34.193, 132.368, -129.333, 1.33", "33.5249, 131.629, -131.016, 0.88", "32.7433, 130.894, -132.886, 0.29", "32.7116, 130.867, -132.954, 0.29", "32.1265, 130.39, -134.135, 0.29", "31.6043, 129.969, -135.208, 0.96", "30.4852, 129.106, -137.729, 0.59", "30.1716, 128.871, -138.454, 0.59", "29.7637, 128.558, -139.422, 0.59", "29.1644, 128.101, -140.922, 1.11", "28.2856, 127.446, -143.323, 1.69", "27.302, 126.78, -145.929, 1.69", "26.5917, 126.319, -147.951, 1.69" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "43.898, 140.949, -110.642, 0.44", "44.5708, 142.013, -111.416, 0.44", "44.5973, 142.062, -111.459, 0.44", "45.1083, 143.047, -112.347, 0.44", "45.4604, 143.738, -112.935, 0.44", "45.6372, 144.095, -113.199, 0.44", "46.1267, 145.127, -113.984, 0.44", "46.8607, 146.733, -115.078, 0.29", "46.8926, 146.806, -115.127, 0.29", "47.1604, 147.493, -115.57, 0.29", "47.5529, 148.453, -116.331, 0.29", "48.063, 149.714, -117.483, 1.11", "48.2409, 150.166, -117.938, 1.47", "48.2587, 150.218, -117.986, 1.47", "48.3364, 150.476, -118.23, 1.47", "48.8126, 152.32, -120.042, 0.37", "48.9493, 152.942, -120.659, 0.37", "48.9607, 152.995, -120.703, 0.37", "49.0831, 153.682, -121.297, 1.11", "49.127, 153.86, -121.425, 1.11", "49.289, 154.312, -121.644, 1.77", "49.3126, 154.369, -121.659, 1.77", "49.5862, 154.993, -121.8, 1.77", "50.2152, 156.396, -122.12, 2.06", "50.9526, 157.917, -122.521, 0.37", "51.722, 159.499, -122.911, 0.37", "51.8731, 159.792, -122.982, 1.33", "52.3767, 160.728, -123.196, 1.33", "52.4098, 160.789, -123.208, 1.33", "52.8836, 161.682, -123.316, 0.29", "53.4923, 162.921, -123.539, 0.29", "53.8757, 163.788, -123.751, 0.29", "53.9034, 163.853, -123.769, 0.29", "54.4555, 165.2, -124.129, 0.29", "55.0508, 166.775, -124.61, 0.29", "55.3717, 167.7, -124.901, 1.18", "55.7875, 168.945, -125.315, 1.55", "56.1192, 169.99, -125.648, 1.92", "56.3943, 170.886, -125.909, 1.92", "56.9167, 172.519, -126.344, 0.88", "57.3973, 173.952, -126.701, 0.88", "57.5437, 174.385, -126.792, 0.88", "58.2687, 176.462, -127.173, 0.22", "58.9951, 178.581, -127.535, 0.22", "59.4132, 179.797, -127.711, 0.22", "59.6704, 180.536, -127.784, 0.88", "60.0243, 181.557, -127.88, 1.18", "60.3821, 182.642, -127.97, 1.33", "60.4034, 182.71, -127.974, 1.33", "60.6319, 183.476, -128.01, 1.33", "60.8073, 184.212, -128.02, 0.37", "60.9952, 184.995, -128.024, 0.37", "61.2005, 185.827, -128.05, 0.37", "61.2005, 185.827, -128.05, 0.74", "61.2259, 185.905, -128.057, 0.74", "61.5406, 186.814, -128.158, 0.74", "62.0089, 188.1, -128.326, 0.22", "62.0343, 188.165, -128.335, 0.22", "62.5755, 189.472, -128.513, 0.22", "62.9162, 190.293, -128.629, 1.11", "63.1539, 190.904, -128.712, 1.84", "63.1886, 190.998, -128.715, 1.84", "63.3912, 191.571, -128.68, 1.84", "63.4168, 191.637, -128.673, 1.84", "63.8717, 192.717, -128.516, 1.33", "64.3637, 193.839, -128.359, 0.81", "65.009, 195.294, -128.154, 0.29", "65.4295, 196.253, -128.017, 0.29", "65.8363, 197.192, -127.886, 0.29", "66.3687, 198.503, -127.718, 0.29", "67.1374, 200.495, -127.485, 0.29", "67.2277, 200.741, -127.467, 0.88", "67.2498, 200.808, -127.465, 0.88", "67.5067, 201.665, -127.45, 0.88", "67.9111, 203.154, -127.424, 0.29", "67.9677, 203.358, -127.423, 0.29", "68.3817, 204.721, -127.442, 0.29", "68.4977, 205.076, -127.454, 0.88", "68.6546, 205.535, -127.47, 0.88", "68.9857, 206.449, -127.509, 0.88", "69.2209, 207.047, -127.539, 0.29", "69.8284, 208.576, -127.616, 0.29", "69.8547, 208.641, -127.619, 0.29", "70.2482, 209.573, -127.66, 0.29", "70.2806, 209.646, -127.666, 1.11", "70.3325, 209.747, -127.677, 1.11", "70.7488, 210.463, -127.761, 1.11", "71.1771, 211.109, -127.851, 0.66", "71.5198, 211.593, -127.922, 0.37", "72.5013, 212.829, -128.112, 0.29", "73.6312, 214.148, -128.312, 0.29", "73.9063, 214.447, -128.356, 0.81", "74.307, 214.848, -128.412, 1.18", "74.3728, 214.912, -128.423, 1.18", "75.0099, 215.536, -128.538, 1.18", "75.389, 215.905, -128.603, 1.11", "75.738, 216.257, -128.68, 0.88", "76.3766, 216.934, -128.835, 0.52", "77.2954, 217.968, -129.073, 0.29", "77.9124, 218.72, -129.315, 0.29", "77.9531, 218.773, -129.336, 0.29", "78.2551, 219.203, -129.516, 0.96", "78.3385, 219.328, -129.566, 0.96", "78.6743, 219.85, -129.786, 0.96", "79.8041, 221.657, -130.483, 0.29", "79.8458, 221.724, -130.507, 0.29", "80.2594, 222.382, -130.723, 0.29", "81.0692, 223.678, -131.099, 0.29", "81.5726, 224.469, -131.302, 0.59", "82.1857, 225.407, -131.513, 0.59", "82.7839, 226.308, -131.655, 0.74", "83.2271, 226.974, -131.762, 0.88", "83.6065, 227.553, -131.847, 0.88", "83.643, 227.613, -131.854, 0.88", "84.0367, 228.306, -131.898, 0.29", "84.5345, 229.298, -131.953, 0.29", "84.5681, 229.371, -131.956, 0.29", "84.9666, 230.21, -131.986, 1.11", "85.3781, 230.993, -131.948, 1.92", "86.008, 232.056, -131.826, 0.29", "86.4838, 232.788, -131.694, 0.29", "86.5236, 232.844, -131.682, 0.29", "87.111, 233.631, -131.507, 0.29", "88.1146, 234.856, -131.134, 0.29", "88.6089, 235.424, -130.922, 0.29", "88.748, 235.584, -130.837, 1.03", "89.2881, 236.23, -130.483, 1.25", "89.5939, 236.615, -130.283, 1.25", "90.4687, 237.776, -129.709, 0.29", "90.9174, 238.383, -129.429, 0.88", "92.0232, 239.904, -128.712, 0.29", "93.2343, 241.552, -127.964, 0.29", "93.7967, 242.3, -127.642, 0.29", "94.0606, 242.654, -127.51, 0.81", "94.1507, 242.776, -127.475, 0.81", "94.95, 243.831, -127.234, 0.81", "95.7373, 244.836, -127.097, 0.81", "96.1183, 245.315, -127.028, 0.59", "96.6415, 245.986, -126.941, 0.29", "97.0661, 246.537, -126.89, 0.29", "97.4775, 247.074, -126.861, 1.11", "97.5179, 247.132, -126.861, 1.11", "97.8573, 247.654, -126.867, 1.55", "98.4874, 248.614, -126.879, 0.29", "98.9129, 249.146, -126.894, 0.22", "99.0152, 249.257, -126.899, 0.22", "100.629, 250.819, -126.973, 0.22", "100.788, 250.952, -126.995, 0.88", "101.196, 251.26, -127.078, 0.88", "102.911, 252.464, -127.41, 0.29", "103.16, 252.628, -127.453, 0.74", "104.034, 253.159, -127.591, 0.74", "105.448, 253.924, -127.792, 0.22", "106.383, 254.46, -127.907, 0.22", "107.418, 255.118, -128.116, 1.03", "107.872, 255.434, -128.241, 1.33", "108.499, 255.872, -128.436, 1.55", "108.93, 256.164, -128.539, 1.55", "108.988, 256.203, -128.548, 1.55", "110.675, 257.25, -128.862, 0.29", "111.798, 257.961, -129.091, 0.29", "111.92, 258.046, -129.109, 0.29", "113.148, 258.938, -129.221, 0.29", "113.227, 258.999, -129.222, 0.29", "113.885, 259.514, -129.124, 0.29", "114.673, 260.138, -128.879, 0.29", "115.192, 260.577, -128.685, 0.29", "115.259, 260.638, -128.66, 0.29", "116.619, 261.921, -128.177, 0.29", "117.471, 262.751, -127.87, 0.59", "118.209, 263.494, -127.59, 0.59", "119.693, 265.02, -127.021, 0.15", "120.89, 266.277, -126.578, 0.15", "120.938, 266.329, -126.563, 0.15", "121.5, 266.964, -126.418, 0.22", "121.5, 266.964, -126.418, 1.11", "121.845, 267.394, -126.381, 1.11", "122.145, 267.779, -126.38, 1.11", "123.444, 269.49, -126.401, 0.15", "123.75, 269.904, -126.412, 0.66", "124.464, 270.879, -126.449, 0.66", "124.87, 271.442, -126.475, 0.96", "125.238, 271.958, -126.503, 0.81", "125.286, 272.025, -126.508, 0.81", "125.729, 272.677, -126.559, 0.22", "125.792, 272.763, -126.565, 0.22", "127.027, 274.45, -126.66, 0.22", "127.213, 274.695, -126.668, 0.59", "127.263, 274.759, -126.668, 0.59", "127.609, 275.207, -126.668, 0.59", "127.655, 275.263, -126.668, 0.59", "128.091, 275.749, -126.724, 1.4", "128.806, 276.578, -126.859, 1.77", "129.419, 277.296, -126.984, 2.21", "129.836, 277.789, -127.074, 2.21", "130.741, 278.864, -127.274, 0.66", "132.553, 281.023, -127.685, 0.22", "134.181, 282.919, -128.062, 0.22", "134.227, 282.973, -128.073, 0.22", "134.554, 283.335, -128.157, 0.74", "134.979, 283.779, -128.254, 1.11", "135.028, 283.828, -128.265, 1.11", "135.506, 284.274, -128.361, 1.11", "135.614, 284.366, -128.384, 1.11", "137.833, 286.222, -128.866, 0.22", "140.392, 288.282, -129.13, 0.22", "141.091, 288.835, -129.138, 1.4", "141.382, 289.064, -129.112, 1.4", "141.87, 289.442, -129.021, 1.4", "141.927, 289.485, -129.005, 1.4", "144.781, 291.522, -127.758, 0.22", "146.375, 292.585, -126.942, 0.22", "147.245, 293.154, -126.481, 0.81", "147.685, 293.444, -126.271, 1.11", "148.422, 293.94, -125.949, 1.11", "148.472, 293.974, -125.931, 1.11", "149.437, 294.606, -125.741, 0.22", "149.502, 294.651, -125.725, 0.22", "151.107, 295.794, -125.327, 0.22", "151.493, 296.074, -125.181, 0.88", "151.548, 296.115, -125.155, 0.88", "151.99, 296.476, -124.887, 0.88", "153.312, 297.6, -123.98, 0.22", "154.303, 298.445, -123.285, 0.22", "155.175, 299.199, -122.665, 0.96", "155.82, 299.747, -122.249, 0.96", "157.654, 301.267, -121.2, 0.22", "158.404, 301.88, -120.822, 0.66", "158.983, 302.342, -120.587, 0.66", "159.696, 302.884, -120.351, 0.66", "160.243, 303.257, -120.247, 0.96", "161.151, 303.804, -120.141, 0.96", "161.767, 304.139, -120.132, 0.22", "161.828, 304.172, -120.131, 0.22", "162.776, 304.682, -120.106, 0.22", "164.322, 305.528, -120.2, 0.22", "164.752, 305.792, -120.255, 0.59", "165.161, 306.085, -120.327, 0.88", "165.329, 306.216, -120.362, 0.88", "165.995, 306.774, -120.55, 0.88", "167.567, 308.205, -121.1, 0.22", "168.839, 309.425, -121.624, 0.22", "170.198, 310.759, -122.218, 0.22", "170.244, 310.807, -122.239, 0.22", "171.021, 311.645, -122.609, 0.96", "171.626, 312.366, -122.889, 0.96", "172.321, 313.279, -123.179, 0.22", "172.545, 313.59, -123.273, 0.81", "172.796, 313.944, -123.371, 1.11", "174.389, 316.245, -123.894, 0.22", "175.549, 317.962, -124.188, 0.22", "175.786, 318.33, -124.269, 0.96", "176.193, 318.973, -124.435, 1.18", "176.358, 319.216, -124.507, 1.18", "176.691, 319.7, -124.651, 1.18", "176.73, 319.758, -124.673, 1.18", "177.689, 321.1, -125.334, 0.22", "177.734, 321.161, -125.365, 0.22", "179.411, 323.393, -126.536, 0.22", "180.557, 324.88, -127.284, 0.22", "181.465, 326.026, -127.805, 1.25", "181.507, 326.079, -127.825, 1.25", "181.95, 326.648, -128.003, 1.4", "181.992, 326.702, -128.02, 1.4", "182.512, 327.378, -128.24, 1.4", "184.827, 330.268, -129.068, 0.22", "185.589, 331.223, -129.274, 0.22", "185.653, 331.302, -129.289, 0.22", "185.92, 331.625, -129.342, 0.74", "185.965, 331.678, -129.349, 0.74", "186.467, 332.239, -129.399, 0.74", "186.695, 332.462, -129.408, 0.15", "188.601, 334.27, -129.559, 0.15", "188.788, 334.449, -129.579, 0.88", "188.912, 334.567, -129.595, 0.88", "189.402, 335.038, -129.665, 0.88", "190.205, 335.783, -129.826, 0.22", "191.005, 336.522, -130.063, 0.22", "191.056, 336.568, -130.084, 0.22", "191.288, 336.779, -130.185, 0.66", "191.638, 337.107, -130.377, 0.66", "192.61, 338.177, -131.094, 0.15", "192.999, 338.65, -131.427, 0.74", "193.037, 338.699, -131.464, 0.74", "193.378, 339.17, -131.903, 0.74", "194.152, 340.312, -132.931, 0.22", "195.025, 341.721, -134.147, 0.22", "195.084, 341.822, -134.229, 0.22", "195.243, 342.088, -134.428, 0.88", "196.506, 344.14, -135.807, 0.22", "198.023, 346.483, -137.133, 0.22", "198.242, 346.798, -137.246, 1.11", "198.64, 347.335, -137.339, 1.4", "198.944, 347.732, -137.357, 0.22", "199.835, 348.834, -137.237, 0.22", "200.445, 349.546, -137.01, 0.22", "201.83, 351.048, -136.407, 0.22", "202.385, 351.626, -136.159, 0.66", "202.531, 351.779, -136.091, 0.66", "202.95, 352.213, -135.906, 0.66", "203.052, 352.315, -135.863, 0.66", "203.715, 352.881, -135.698, 0.66", "204.108, 353.148, -135.654, 0.22", "204.16, 353.179, -135.653, 0.22", "205.273, 353.794, -135.618, 0.22", "205.338, 353.828, -135.615, 0.22", "206.765, 354.513, -135.557, 0.22", "207.279, 354.771, -135.562, 1.03", "208.472, 355.409, -135.605, 1.03", "209.927, 356.23, -135.673, 0.22", "210.771, 356.735, -135.764, 0.22", "210.837, 356.781, -135.774, 0.22", "213.673, 359.079, -136.384, 0.22", "214.218, 359.581, -136.527, 0.96", "214.82, 360.21, -136.704, 1.18", "215.73, 361.429, -136.98, 0.15", "216.536, 362.808, -137.081, 0.15", "216.695, 363.174, -137.053, 0.37", "216.787, 363.589, -136.916, 0.37", "216.869, 364.914, -136.333, 0.22", "216.722, 367.428, -134.967, 0.22", "216.544, 368.744, -134.134, 1.47", "216.453, 369.148, -133.87, 1.47", "216.135, 370.212, -133.199, 0.22", "215.391, 372.192, -132.104, 0.22", "215.056, 372.919, -131.784, 1.03", "215.015, 372.985, -131.76, 1.03", "214.575, 373.659, -131.608, 1.03", "214.395, 373.941, -131.568, 0.22", "213.639, 375.21, -131.528, 0.22", "213.508, 375.439, -131.531, 0.22", "212.715, 376.854, -131.55, 0.22", "212.677, 376.925, -131.548, 0.22", "212.42, 377.414, -131.516, 0.52", "212.29, 377.676, -131.492, 0.74", "211.947, 378.384, -131.414, 0.74", "211.599, 379.158, -131.33, 0.22", "210.99, 380.612, -131.178, 0.22", "210.869, 380.894, -131.152, 0.66", "210.681, 381.322, -131.116, 0.66", "210.425, 381.895, -131.08, 0.15", "209.883, 383.125, -131.039, 0.15", "209.619, 383.749, -131.047, 0.96", "209.374, 384.32, -131.026, 1.25", "209.264, 384.569, -131.004, 1.25", "209.041, 385.076, -130.936, 1.25", "208.976, 385.229, -130.9, 1.25", "208.791, 385.657, -130.771, 1.25", "208.457, 386.45, -130.498, 1.25", "208.286, 386.854, -130.344, 0.22", "207.633, 388.376, -129.729, 0.22", "207.332, 389.054, -129.44, 0.59" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "48.1944, 180.675, -97.1234, 0.22", "47.3338, 181.409, -97.254, 0.22", "46.9553, 181.884, -97.5146, 0.22", "46.7101, 182.191, -97.6835, 0.37", "46.6561, 182.259, -97.7207, 0.37", "46.2998, 182.706, -97.9661, 0.37", "45.4818, 183.732, -98.5294, 0.37", "44.8452, 184.873, -99.1282, 0.37" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "48.1944, 180.675, -97.1234, 0.74", "47.6765, 182.531, -97.8751, 0.74", "47.5668, 183.251, -98.2833, 0.74", "47.5641, 183.323, -98.3188, 0.74", "47.5615, 184.187, -98.7256, 0.88", "47.5651, 184.253, -98.7521, 0.88", "47.6278, 184.999, -99.0361, 0.88", "47.9069, 186.849, -99.6382, 0.37", "48.263, 188.663, -100.208, 0.37", "48.2777, 188.73, -100.228, 0.37", "48.6783, 190.334, -100.668, 0.37", "48.8655, 191.032, -100.851, 1.11", "48.8852, 191.1, -100.867, 1.11", "49.242, 192.251, -101.051, 1.4", "49.4282, 192.787, -101.156, 1.4", "49.4511, 192.852, -101.17, 1.4", "49.8882, 194.173, -101.436, 1.4", "49.933, 194.318, -101.457, 1.4", "50.163, 195.171, -101.554, 1.4", "50.1976, 195.324, -101.567, 1.4", "50.3253, 195.97, -101.597, 1.4", "50.4519, 196.862, -101.599, 0.29", "50.5054, 197.69, -101.555, 0.29", "50.5165, 198.226, -101.531, 0.29", "50.5156, 198.446, -101.533, 0.66", "50.515, 198.516, -101.537, 0.66", "50.5201, 199.156, -101.613, 0.66", "50.5511, 199.921, -101.75, 0.44", "50.5567, 199.989, -101.765, 0.44", "50.694, 200.9, -101.998, 0.96", "50.7062, 200.961, -102.013, 0.96", "50.9149, 202.026, -102.251, 0.96", "50.9426, 202.177, -102.278, 0.96", "51.024, 202.699, -102.34, 0.96", "51.142, 203.579, -102.411, 0.59", "51.2376, 204.53, -102.447, 0.52", "51.3568, 205.779, -102.476, 0.52", "51.4785, 207.155, -102.521, 0.52", "51.5472, 208.02, -102.551, 1.18", "51.5518, 208.1, -102.553, 1.18", "51.6067, 209.22, -102.564, 1.69", "51.663, 210.316, -102.573, 1.69", "51.7481, 211.59, -102.582, 0.59", "51.874, 213.156, -102.555, 0.44", "52.0585, 215.048, -102.489, 0.44", "52.1475, 215.865, -102.443, 1.33", "52.2902, 217.028, -102.352, 1.69", "52.4195, 218.182, -102.234, 1.69", "52.5373, 219.457, -102.067, 0.96", "52.6405, 221.115, -101.857, 0.96", "52.6462, 221.337, -101.833, 0.96", "52.6426, 221.559, -101.813, 1.11", "52.5758, 222.716, -101.724, 0.81", "52.4156, 224.36, -101.632, 0.66", "52.1393, 226.422, -101.579, 0.59", "52.0354, 227.127, -101.595, 0.88", "52.0269, 227.197, -101.599, 0.88", "51.9456, 228.178, -101.724, 0.88", "51.9423, 228.307, -101.748, 0.88", "51.9847, 230.106, -102.203, 0.88", "52.0597, 231.434, -102.629, 0.52", "52.1574, 232.749, -103.089, 0.52", "52.2324, 233.741, -103.45, 0.88", "52.2725, 234.554, -103.745, 1.25", "52.2941, 235.334, -104.002, 1.47", "52.3004, 236.816, -104.409, 0.52", "52.2979, 236.887, -104.423, 0.52", "52.2379, 237.717, -104.546, 0.52", "52.1148, 239.106, -104.735, 0.66", "52.0332, 240.054, -104.868, 1.47", "51.9567, 241.158, -105.058, 2.14", "51.9534, 241.23, -105.071, 2.14", "51.9123, 242.098, -105.259, 2.14", "51.8439, 243.669, -105.697, 0.44", "51.7901, 244.856, -106.087, 0.44", "51.6921, 246.304, -106.616, 0.44", "51.6875, 246.37, -106.64, 0.44", "51.5853, 247.514, -107.102, 0.44", "51.4918, 248.47, -107.548, 1.18", "51.4048, 249.353, -107.987, 1.4", "51.3947, 249.477, -108.054, 1.4", "51.3533, 250.463, -108.56, 1.4", "51.3793, 252.361, -109.634, 0.52", "51.4663, 253.572, -110.377, 0.52", "51.4776, 253.702, -110.456, 0.52", "51.5416, 254.403, -110.875, 0.96", "51.6149, 255.339, -111.422, 0.96", "51.7287, 257.032, -112.438, 0.44", "51.7326, 257.138, -112.495, 0.44", "51.7057, 257.894, -112.878, 0.44", "51.636, 258.738, -113.356, 0.29", "51.4797, 260.061, -114.15, 0.29", "51.3018, 261.248, -114.87, 0.81", "51.1503, 262.224, -115.421, 0.81", "51.0707, 263.118, -115.985, 1.03", "51.07, 264.553, -117.027, 0.66", "51.1166, 265.081, -117.425, 0.66", "51.1477, 265.248, -117.552, 0.66", "51.2774, 265.739, -117.927, 0.66", "51.8165, 267.163, -118.99, 0.52", "52.2009, 268.048, -119.592, 0.37", "52.8354, 269.461, -120.421, 0.37", "53.4249, 270.746, -121.15, 0.37", "53.4913, 270.885, -121.229, 0.37", "54.1994, 272.3, -122.052, 0.37", "54.9038, 273.716, -122.795, 0.37", "55.1553, 274.166, -123.029, 1.47", "55.1962, 274.229, -123.064, 1.47", "55.9777, 275.367, -123.704, 1.84", "57.0945, 277.016, -124.756, 1.84" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_150",
    "id" : "dend_150",
    "points3d" : [ "150.484, -223.044, 29.05, 1.18", "151.341, -223.959, 28.9209, 1.18", "151.86, -224.486, 28.8539, 0.66", "152.411, -225.096, 28.8408, 0.59", "153.103, -226.015, 28.9018, 0.59", "153.155, -226.1, 28.9122, 0.59", "153.602, -226.954, 29.0422, 0.59", "153.627, -227.03, 29.0628, 0.59", "153.869, -228.32, 29.4628, 0.37", "153.947, -229.157, 29.733, 0.37", "153.967, -229.784, 29.9396, 0.52", "153.969, -229.853, 29.9626, 0.52", "153.986, -230.323, 30.1117, 0.66", "154.005, -230.469, 30.1522, 0.66", "154.368, -231.804, 30.4833, 0.66", "154.525, -232.265, 30.6124, 1.11", "154.841, -232.975, 30.8098, 1.4", "155.053, -233.386, 30.9217, 1.4", "155.438, -234.013, 31.1443, 0.59", "156.259, -235.175, 31.6355, 0.59", "156.302, -235.228, 31.6613, 0.59", "157.283, -236.321, 32.2268, 0.52", "157.339, -236.376, 32.2786, 0.52", "158.16, -237.195, 33.3846, 0.52", "158.186, -237.222, 33.431, 0.52", "158.311, -237.368, 33.7023, 1.11", "158.511, -237.646, 34.2156, 1.33", "159.426, -239.229, 37.0893, 0.88", "159.69, -239.738, 37.9291, 0.37", "159.712, -239.782, 37.9926, 0.37", "159.995, -240.319, 38.7105, 0.37", "160.018, -240.361, 38.7626, 0.37", "160.259, -240.696, 39.0862, 0.37", "160.368, -240.8, 39.0979, 0.37", "160.972, -241.143, 39.1627, 0.74", "161.427, -241.324, 39.2326, 1.4", "161.505, -241.346, 39.2465, 1.4", "162.489, -241.627, 39.4299, 1.4", "162.619, -241.677, 39.4558, 1.4", "163.629, -242.193, 39.7326, 0.88", "164.153, -242.55, 39.9094, 0.66", "164.231, -242.619, 39.9393, 0.66", "164.879, -243.382, 40.2683, 0.52", "165.631, -244.612, 40.7682, 0.52", "166.014, -245.444, 41.0592, 1.11", "166.269, -246.161, 41.2788, 1.11", "166.447, -246.733, 41.4525, 1.11", "166.746, -247.78, 41.7704, 0.81", "166.921, -248.403, 41.984, 0.29", "167.337, -249.697, 42.4615, 0.29", "167.393, -249.83, 42.5093, 0.29", "167.563, -250.148, 42.6363, 0.29", "167.607, -250.211, 42.6625, 0.29", "168.402, -251.08, 43.1078, 0.29", "168.457, -251.129, 43.1448, 0.29", "168.743, -251.34, 43.3566, 0.66", "169.257, -251.722, 43.8038, 0.66", "169.33, -251.775, 43.8635, 0.66", "170.009, -252.241, 44.3863, 0.96", "170.059, -252.275, 44.4229, 0.96", "170.507, -252.554, 44.7381, 0.96", "171.668, -253.217, 45.4876, 0.37", "172.585, -253.712, 46.0242, 0.37", "172.643, -253.746, 46.052, 0.37", "172.807, -253.852, 46.1055, 0.81", "172.983, -253.979, 46.1535, 0.81", "173.566, -254.461, 46.265, 0.81", "173.64, -254.532, 46.2695, 0.81", "174.352, -255.307, 46.3134, 0.81", "175.091, -256.135, 46.3532, 0.81", "175.137, -256.188, 46.3554, 0.81", "175.576, -256.7, 46.3708, 0.74", "175.819, -256.98, 46.3956, 1.25", "175.994, -257.173, 46.4217, 1.25", "176.292, -257.535, 46.4934, 1.25", "176.415, -257.716, 46.5565, 1.25", "176.893, -258.52, 46.9025, 1.25", "177.276, -259.232, 47.2806, 1.25", "177.601, -259.887, 47.6731, 0.29", "178.004, -260.712, 48.2288, 0.29", "178.413, -261.586, 48.8771, 0.74", "178.443, -261.644, 48.9241, 0.74", "178.825, -262.347, 49.4885, 0.74", "178.86, -262.396, 49.5232, 0.74", "179.583, -263.003, 49.6995, 0.74", "179.633, -263.031, 49.6837, 0.74", "180.125, -263.282, 49.4432, 0.74", "180.931, -263.652, 49.0311, 1.25", "181.312, -263.814, 48.8182, 1.4", "182.797, -264.444, 48.0087, 0.96", "183.787, -264.859, 47.4962, 0.37", "183.858, -264.888, 47.4645, 0.37", "185.176, -265.378, 46.9883, 0.37", "185.242, -265.401, 46.9769, 0.37", "185.708, -265.565, 46.9638, 1.11", "186.464, -265.856, 47.135, 1.84", "186.552, -265.895, 47.1612, 1.84", "186.995, -266.118, 47.3056, 2.14", "188.01, -266.684, 47.6679, 0.81", "188.075, -266.724, 47.6931, 0.81", "189.264, -267.502, 48.16, 0.59", "190.462, -268.361, 48.7388, 0.59", "190.505, -268.397, 48.7614, 0.59", "190.92, -268.808, 49.0322, 0.96", "191.412, -269.397, 49.4742, 1.18", "191.721, -269.849, 49.8428, 1.4", "192.253, -270.869, 50.7745, 0.37", "192.678, -271.834, 51.7169, 0.37", "192.967, -272.521, 52.3953, 0.81", "193.348, -273.524, 53.3755, 0.29", "193.366, -273.573, 53.4229, 0.29", "193.595, -274.297, 54.1081, 0.29", "193.809, -274.941, 54.6479, 0.29", "193.83, -274.996, 54.6856, 0.29", "194.038, -275.509, 54.903, 0.66", "194.375, -276.328, 55.1309, 0.88", "194.397, -276.385, 55.1468, 0.88", "194.65, -277.111, 55.3177, 0.88", "195.051, -278.22, 55.6009, 1.4", "195.469, -279.246, 55.9477, 1.4", "195.489, -279.295, 55.9746, 1.4", "195.857, -280.183, 56.4809, 0.66", "196.257, -281.144, 57.0891, 0.52", "196.725, -282.245, 57.911, 0.52", "197.179, -283.244, 58.7897, 0.52", "197.905, -284.769, 60.1452, 1.33" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_149",
    "id" : "dend_149",
    "points3d" : [ "150.484, -223.044, 29.05, 0.37", "152.908, -222.808, 27.7376, 0.37", "153.793, -222.722, 27.2586, 0.37", "153.857, -222.716, 27.224, 0.37", "154.703, -222.634, 26.766, 0.37", "155.344, -222.571, 26.4189, 1.25", "155.956, -222.512, 26.0874, 1.4" ],
    "parent" : "dend_148",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_137",
    "id" : "dend_137",
    "points3d" : [ "140.653, -234.507, 9.03692, 0.59", "140.531, -234.94, 9.04392, 0.59", "140.342, -235.506, 9.1299, 0.52", "139.998, -236.381, 9.32851, 0.52", "139.636, -237.221, 9.55439, 0.44", "139.04, -238.458, 9.92109, 0.44", "138.664, -239.167, 10.1823, 0.44", "137.942, -240.274, 10.7756, 0.81", "137.68, -240.594, 11.0177, 0.81", "137.639, -240.634, 11.0575, 0.81", "137.347, -240.876, 11.3691, 0.29", "136.608, -241.455, 12.159, 0.29", "135.91, -242.046, 12.8751, 1.03", "135.471, -242.464, 13.2814, 1.11", "135.034, -242.891, 13.6959, 1.11", "134.194, -243.733, 14.4904, 0.29", "133.559, -244.391, 15.0813, 0.29", "132.99, -244.981, 15.5364, 1.11", "132.498, -245.524, 15.8863, 1.84" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_136",
    "id" : "dend_136",
    "points3d" : [ "140.653, -234.507, 9.03692, 0.15", "140.705, -234.112, 9.06527, 0.15", "140.724, -234.038, 9.08857, 0.15", "141.015, -233.343, 9.37754, 0.15", "141.075, -233.227, 9.43189, 0.15", "141.386, -232.624, 9.71454, 0.15", "141.416, -232.566, 9.74171, 0.15", "142.025, -231.581, 10.2439, 1.4", "142.347, -231.147, 10.508, 1.4", "142.39, -231.105, 10.5431, 1.4" ],
    "parent" : "dend_135",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_124",
    "id" : "dend_124",
    "points3d" : [ "-135.307, -415.047, 0.785354, 0.22", "-134.164, -416.037, -0.977054, 0.22", "-133.888, -416.334, -1.45439, 0.22", "-133.825, -416.416, -1.5649, 0.22", "-133.638, -416.683, -1.90395, 0.22", "-133.441, -416.989, -2.32484, 0.74", "-133.32, -417.195, -2.60522, 0.88", "-132.875, -418.109, -3.7106, 0.22", "-132.55, -418.833, -4.63742, 0.22", "-132.529, -418.879, -4.69999, 0.22", "-132.17, -419.741, -5.9378, 0.96", "-132.094, -419.942, -6.23888, 1.25", "-132.066, -420.022, -6.36606, 1.25" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_123",
    "id" : "dend_123",
    "points3d" : [ "-135.307, -415.047, 0.785354, 0.52", "-135.514, -415.988, 1.20139, 0.52", "-135.581, -416.257, 1.31821, 0.74", "-135.682, -416.791, 1.51814, 0.74", "-135.714, -416.991, 1.58657, 0.74", "-135.85, -418.145, 1.94857, 0.96", "-135.894, -418.703, 2.11043, 0.66", "-135.923, -419.341, 2.27089, 0.22", "-135.936, -420.148, 2.41443, 0.22", "-135.931, -420.269, 2.42544, 0.66", "-135.903, -420.63, 2.4247, 0.88", "-135.869, -420.948, 2.38428, 0.88", "-135.723, -421.881, 2.25744, 0.22", "-135.709, -421.95, 2.24805, 0.22", "-135.626, -422.36, 2.20712, 0.22", "-135.613, -422.429, 2.20223, 0.22", "-135.501, -423.242, 2.16781, 0.22", "-135.48, -423.44, 2.16479, 0.22", "-135.442, -424.036, 2.17442, 0.22", "-135.423, -425.227, 2.1929, 0.22", "-135.426, -425.359, 2.19483, 0.22", "-135.475, -426.253, 2.20676, 0.22", "-135.482, -426.333, 2.20773, 0.22", "-135.631, -427.56, 2.25913, 0.22", "-135.64, -427.63, 2.26386, 0.22", "-135.683, -428.091, 2.30438, 0.66", "-135.703, -428.524, 2.34686, 0.66", "-135.702, -428.594, 2.35459, 0.66", "-135.682, -429.458, 2.45817, 0.29", "-135.633, -430.42, 2.59185, 0.29", "-135.609, -430.865, 2.65529, 0.66", "-135.578, -431.392, 2.7332, 0.96", "-135.559, -431.648, 2.76988, 0.96" ],
    "parent" : "dend_122",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_108",
    "id" : "dend_108",
    "points3d" : [ "-33.4508, -391.388, -0.312572, 0.29", "-33.579, -391.858, -0.358506, 0.29", "-33.6707, -392.441, -0.404429, 0.29", "-33.6712, -392.511, -0.415132, 0.29", "-33.5174, -393.437, -0.591915, 0.29", "-33.4946, -393.574, -0.618072, 0.29", "-33.3183, -394.637, -0.820748, 0.29", "-33.276, -394.801, -0.847502, 0.29", "-32.9437, -395.601, -1.01154, 2.06", "-32.5941, -396.214, -1.1615, 2.73" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_107",
    "id" : "dend_107",
    "points3d" : [ "-33.4508, -391.388, -0.312572, 0.52", "-34.3575, -391.278, -0.694379, 0.52", "-34.9702, -391.204, -0.921938, 0.52", "-35.5342, -391.137, -1.13144, 0.81", "-35.882, -391.095, -1.26063, 1.11", "-36.0903, -391.07, -1.33801, 1.11", "-36.5748, -391.012, -1.51797, 1.11", "-36.6441, -391.003, -1.52859, 1.11" ],
    "parent" : "dend_106",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_69",
    "id" : "dend_69",
    "points3d" : [ "-75.1964, 290.971, -52.7643, 0.29", "-74.8149, 292.503, -52.5181, 0.29", "-74.6972, 293.005, -52.5025, 0.29", "-74.2963, 294.863, -52.5842, 0.29", "-74.0288, 296.084, -52.6823, 0.29", "-74.0134, 296.152, -52.6892, 0.29", "-73.8272, 296.998, -52.7815, 0.29", "-73.5285, 298.389, -53.0507, 0.88", "-73.3516, 299.235, -53.2269, 1.18", "-73.3012, 299.493, -53.2852, 0.29", "-73.1263, 300.567, -53.5142, 0.29", "-73.0105, 301.285, -53.6489, 0.29", "-72.9621, 301.58, -53.6874, 0.66", "-72.9508, 301.66, -53.6889, 0.66", "-72.8923, 302.123, -53.6844, 0.66", "-72.8803, 302.287, -53.6783, 0.66", "-72.8685, 302.533, -53.6622, 0.22", "-72.8609, 303.179, -53.6397, 0.22", "-72.9216, 304.104, -53.6402, 0.22", "-72.9696, 304.595, -53.6305, 0.59", "-73.0372, 305.183, -53.6092, 0.59", "-73.0483, 305.263, -53.6055, 0.59", "-73.1935, 306.105, -53.5588, 0.22", "-73.5051, 307.574, -53.4852, 0.22", "-73.7232, 308.451, -53.451, 0.22", "-73.7369, 308.509, -53.4497, 0.88", "-73.8659, 309.08, -53.4292, 1.18", "-73.9672, 309.537, -53.4068, 1.18", "-73.9796, 309.599, -53.4022, 1.18", "-74.0381, 309.867, -53.3603, 1.18", "-74.2074, 310.573, -53.2141, 0.29", "-74.2248, 310.641, -53.1961, 0.29", "-74.537, 311.956, -52.7806, 0.29", "-74.5537, 312.033, -52.7537, 0.29", "-74.7992, 313.171, -52.3139, 0.29", "-74.8125, 313.235, -52.2868, 0.29", "-74.8656, 313.514, -52.1681, 0.22", "-74.9683, 314.121, -51.9249, 0.22", "-74.9883, 314.256, -51.8584, 0.22", "-75.1132, 315.147, -51.4148, 0.29", "-75.1213, 315.211, -51.3863, 0.29", "-75.2173, 315.921, -51.0081, 0.44", "-75.2274, 315.989, -50.9634, 0.44", "-75.3616, 316.794, -50.3844, 0.44", "-75.3724, 316.847, -50.3583, 0.44", "-75.4663, 317.251, -50.2428, 0.44", "-75.5478, 317.571, -50.1787, 0.22", "-75.5655, 317.638, -50.1705, 0.22", "-75.7524, 318.485, -50.004, 0.22", "-76.024, 319.912, -49.7092, 0.22", "-76.1694, 320.793, -49.5006, 0.22", "-76.181, 320.871, -49.481, 0.22", "-76.2683, 321.535, -49.3144, 1.18", "-76.4189, 323.233, -48.8837, 1.69", "-76.4412, 323.735, -48.749, 1.69", "-76.4389, 324.23, -48.6244, 1.4", "-76.4368, 324.944, -48.4844, 1.18", "-76.4549, 325.889, -48.3594, 0.29", "-76.4732, 326.656, -48.3093, 0.29", "-76.4753, 326.726, -48.3101, 0.29", "-76.5018, 327.997, -48.3362, 0.29", "-76.5101, 329.299, -48.3714, 0.29", "-76.4944, 330.365, -48.4057, 0.29", "-76.4579, 331.598, -48.4506, 0.22", "-76.4264, 332.047, -48.4675, 0.88", "-76.3374, 332.774, -48.4948, 1.25", "-76.2531, 333.211, -48.5119, 1.25", "-76.0694, 333.92, -48.5375, 0.52", "-75.9188, 334.413, -48.5426, 0.52", "-75.4648, 335.623, -48.5167, 0.22", "-75.2629, 336.102, -48.4925, 0.81", "-75.2302, 336.176, -48.488, 0.81", "-74.8857, 336.922, -48.4356, 0.81", "-74.6694, 337.362, -48.399, 0.22", "-74.1215, 338.412, -48.2954, 0.22", "-73.9012, 338.796, -48.2474, 0.81", "-73.6236, 339.238, -48.1881, 0.81" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_68",
    "id" : "dend_68",
    "points3d" : [ "-75.1964, 290.971, -52.7643, 0.29", "-74.5924, 291.07, -53.3892, 0.29", "-73.6749, 291.089, -54.1567, 0.29", "-72.7476, 291.075, -54.8905, 0.29", "-72.6617, 291.074, -54.9532, 0.29", "-72.2835, 291.063, -55.2172, 0.29", "-70.9545, 291.006, -56.1722, 0.29", "-69.6, 290.843, -57.1708, 0.22", "-69.5418, 290.834, -57.2136, 0.22", "-68.7161, 290.742, -57.7438, 0.22", "-68.6563, 290.741, -57.7853, 0.22", "-67.8585, 290.771, -58.3721, 1.03", "-67.7994, 290.775, -58.4108, 1.03", "-67.4638, 290.804, -58.6847, 1.03", "-67.1206, 290.827, -58.9537, 1.03", "-65.9593, 290.885, -60.2081, 0.22", "-65.913, 290.889, -60.2605, 0.22", "-64.9998, 290.968, -61.3132, 0.22", "-64.0293, 291.047, -62.4331, 0.81", "-63.5953, 291.077, -62.9451, 0.81", "-61.8366, 291.1, -65.6222, 0.22", "-61.3134, 291.06, -66.4991, 0.22", "-61.2321, 291.05, -66.6491, 0.96", "-60.9733, 291.014, -67.1784, 0.96", "-60.9352, 291.007, -67.2553, 0.96", "-58.9403, 290.726, -71.2555, 0.22", "-58.4424, 290.663, -72.1444, 0.22", "-58.3988, 290.657, -72.2142, 0.22", "-58.0437, 290.613, -72.6746, 0.22", "-57.7907, 290.592, -72.9266, 1.03", "-57.253, 290.567, -73.3214, 1.25", "-55.9308, 290.548, -73.9226, 0.22", "-54.4595, 290.524, -74.7722, 0.22", "-53.5797, 290.497, -75.3187, 0.22", "-52.3312, 290.493, -76.2525, 0.22", "-52.2029, 290.495, -76.3584, 0.96", "-52.0386, 290.502, -76.5076, 0.96", "-50.8464, 290.609, -77.8037, 0.22", "-50.1067, 290.684, -78.7841, 0.22", "-48.6021, 290.807, -80.9941, 0.22", "-48.6021, 290.807, -80.9941, 0.96", "-48.0293, 290.788, -81.9132, 0.52", "-47.1639, 290.739, -83.3297, 0.81", "-46.8211, 290.696, -83.8892, 0.66", "-46.7917, 290.684, -83.9548, 0.66", "-46.634, 290.444, -84.436, 0.66" ],
    "parent" : "dend_67",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "82.7443, 296.463, -63.5453, 0.29", "82.8899, 297.538, -63.8544, 0.29", "83.0772, 298.291, -64.0548, 0.29", "83.1013, 298.366, -64.0739, 0.29", "83.2666, 298.762, -64.1658, 0.29", "83.3097, 298.856, -64.1991, 0.29", "83.4914, 299.224, -64.3515, 0.59", "83.6635, 299.489, -64.4678, 0.88", "83.702, 299.544, -64.4957, 0.88", "83.927, 299.862, -64.6831, 0.88", "84.5148, 300.802, -65.2346, 1.25", "84.5439, 300.859, -65.2631, 1.25", "84.6808, 301.237, -65.4426, 1.47", "84.774, 301.572, -65.5825, 1.69", "84.9811, 302.457, -65.9182, 1.69", "85.1285, 303.166, -66.171, 1.25", "85.3179, 304.184, -66.4888, 0.88", "85.5092, 305.35, -66.8527, 0.29", "85.664, 306.519, -67.2181, 0.29", "85.6707, 306.598, -67.2414, 0.29" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "82.7443, 296.463, -63.5453, 0.22", "84.2516, 296.168, -64.423, 0.22", "84.3181, 296.157, -64.4704, 0.22", "84.9812, 296.058, -64.9731, 0.59", "85.0402, 296.051, -65.015, 0.59", "85.4286, 295.999, -65.3199, 0.81", "85.811, 295.965, -65.682, 0.88", "86.6866, 295.942, -66.6516, 0.37", "86.7511, 295.939, -66.7267, 0.37", "87.2213, 295.936, -67.3131, 0.37", "87.9628, 295.96, -68.2702, 0.44", "88.6235, 296.045, -69.1577, 1.03", "88.7131, 296.066, -69.2777, 1.03", "89.2836, 296.286, -69.8704, 0.29", "89.6342, 296.459, -70.2052, 0.29", "89.7866, 296.556, -70.3371, 0.29", "90.205, 296.827, -70.5804, 0.29", "90.2603, 296.86, -70.6075, 0.29", "90.8278, 297.216, -70.8986, 0.29", "91.8725, 297.766, -71.4764, 0.66", "91.9335, 297.785, -71.5068, 0.66", "92.3684, 297.896, -71.691, 0.66", "92.4324, 297.91, -71.7154, 0.66", "92.8592, 297.995, -71.893, 0.66", "94.1311, 298.232, -72.4246, 0.29", "94.9676, 298.38, -72.7444, 0.29", "96.0257, 298.542, -73.158, 0.29", "96.0927, 298.551, -73.1851, 0.29", "97.5497, 298.695, -73.9017, 0.29", "97.9209, 298.721, -74.1188, 0.96", "98.3565, 298.744, -74.4055, 1.33", "98.6467, 298.75, -74.6312, 1.33", "98.7099, 298.745, -74.681, 1.33", "100.128, 298.609, -75.7944, 0.29", "100.2, 298.6, -75.8505, 0.29", "100.784, 298.527, -76.3443, 0.29", "101.425, 298.461, -76.9287, 0.66", "102.044, 298.41, -77.4969, 1.03" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "64.1377, 317.22, -65.0881, 0.22", "63.8201, 318.533, -66.1207, 0.22", "63.6837, 319.314, -66.6186, 0.22", "63.6763, 319.385, -66.6567, 0.22", "63.6624, 319.714, -66.8041, 0.22", "63.6627, 319.92, -66.8863, 0.44", "63.6726, 320.052, -66.9349, 0.44", "63.7487, 320.478, -66.9881, 0.44", "63.8003, 320.683, -67.0192, 0.44", "63.8667, 320.966, -67.0644, 0.44", "63.8814, 321.037, -67.0758, 0.44", "64.0264, 321.993, -67.2719, 0.29", "64.0632, 322.656, -67.4197, 0.29", "64.053, 323.139, -67.5334, 0.29", "64.044, 323.208, -67.5491, 0.52", "63.9634, 323.56, -67.6672, 0.52", "63.7853, 324.168, -67.9765, 0.52", "63.545, 324.844, -68.4898, 0.52", "63.5176, 324.912, -68.5616, 0.52", "63.3403, 325.337, -69.0822, 0.52", "63.0344, 326.107, -70.1003, 0.81", "62.8245, 326.879, -71.039, 1.18", "62.7213, 327.561, -71.8361, 0.74", "62.68, 328.341, -72.7239, 0.74", "62.6804, 328.39, -72.7743, 0.74", "62.6986, 328.608, -72.9728, 0.29", "62.9104, 330.208, -74.141, 0.29", "63.0185, 330.881, -74.5329, 0.66", "63.0386, 331.007, -74.5926, 0.66", "63.125, 331.578, -74.8437, 0.66", "63.2884, 333.057, -75.4778, 0.66", "63.3289, 333.382, -75.631, 1.33", "63.4488, 334.189, -75.9869, 1.77", "63.5228, 334.631, -76.1624, 1.77", "63.6811, 335.508, -76.4925, 0.44", "63.8782, 336.537, -76.86, 0.44", "64.3918, 339.663, -77.9712, 0.29", "64.6121, 341.373, -78.6102, 0.29", "64.6267, 341.506, -78.6614, 0.29", "64.6627, 341.923, -78.8284, 0.29", "64.6652, 341.988, -78.8563, 0.29", "64.647, 344.578, -80.0646, 0.29", "64.5748, 345.5, -80.5029, 0.29", "64.5688, 345.571, -80.5398, 0.29", "64.5224, 346.555, -81.0397, 1.18", "64.5386, 347.217, -81.3268, 0.22", "64.6408, 348.414, -81.7517, 0.22", "64.719, 348.864, -81.861, 0.96", "64.7755, 349.146, -81.9193, 0.96", "64.8684, 349.606, -81.9937, 0.22", "65.3064, 351.753, -82.1776, 0.22", "65.3458, 351.955, -82.1876, 0.81", "65.3953, 352.244, -82.2027, 0.81", "65.4732, 352.726, -82.2271, 0.15", "65.4957, 352.865, -82.2338, 0.15", "65.748, 354.464, -82.302, 0.15", "65.8385, 354.972, -82.3273, 0.59", "65.8522, 355.041, -82.3304, 0.59", "65.8971, 355.259, -82.3372, 0.59", "65.9124, 355.327, -82.3372, 0.59" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "64.1377, 317.22, -65.0881, 0.29", "62.7304, 317.021, -65.9266, 0.29", "61.8362, 316.927, -66.4413, 0.52", "61.4054, 316.892, -66.6792, 0.66", "61.3438, 316.889, -66.7122, 0.66", "60.6913, 316.865, -67.0567, 0.66", "60.1035, 316.85, -67.3587, 0.66", "57.2656, 316.822, -68.7022, 0.22", "56.9277, 316.835, -68.8687, 0.59", "56.6575, 316.861, -69.0102, 0.59", "56.5871, 316.872, -69.048, 0.59", "56.2645, 316.948, -69.2138, 0.59", "56.1526, 316.981, -69.2741, 0.59", "53.6969, 317.884, -70.5619, 0.22", "53.1451, 318.089, -70.861, 0.22", "52.9271, 318.172, -70.9943, 0.44", "51.6636, 318.678, -71.8302, 0.22", "50.7597, 319.106, -72.398, 0.74", "50.4229, 319.287, -72.6005, 0.88", "50.3616, 319.327, -72.6348, 0.88", "49.2648, 320.056, -73.1291, 0.22", "49.19, 320.107, -73.156, 0.22", "47.0972, 321.63, -73.6685, 0.22", "46.312, 322.265, -73.6502, 1.18", "45.9574, 322.566, -73.6074, 1.47", "44.7354, 323.612, -73.3945, 0.22", "44.683, 323.657, -73.3833, 0.22", "43.868, 324.361, -73.1857, 0.22", "40.3138, 327.469, -72.2209, 0.22", "40.2622, 327.514, -72.2051, 0.22", "37.7812, 329.646, -71.4403, 0.22", "36.7427, 330.545, -71.131, 0.22", "36.0893, 331.11, -70.9271, 0.88", "35.7703, 331.383, -70.8216, 1.11", "34.7353, 332.242, -70.4683, 1.11", "33.978, 332.886, -70.1695, 0.22", "33.7359, 333.119, -70.0137, 0.52", "33.6072, 333.253, -69.9193, 0.74", "33.3739, 333.505, -69.7788, 0.74" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "26.5917, 126.319, -147.951, 0.29", "26.0359, 126.694, -147.734, 0.29", "26.0052, 126.707, -147.672, 0.29", "24.9836, 127.114, -145.5, 0.29", "24.8323, 127.174, -145.186, 0.81", "24.1842, 127.426, -143.872, 0.22", "23.1418, 127.845, -141.883, 0.22", "17.8592, 129.958, -131.855, 0.22", "17.7546, 129.998, -131.652, 0.66", "17.3839, 130.133, -130.893, 0.66", "17.2588, 130.177, -130.632, 0.22", "16.5893, 130.394, -129.211, 0.22", "16.3901, 130.451, -128.715, 0.59", "16.2603, 130.529, -128.697, 0.59", "15.7654, 130.841, -128.617, 0.59" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "26.5917, 126.319, -147.951, 0.66", "25.3956, 125.245, -148.391, 0.66", "24.618, 124.602, -148.626, 0.44", "24.0221, 124.153, -148.768, 0.44", "23.3644, 123.694, -148.917, 0.22", "23.2396, 123.61, -148.945, 0.22", "22.4702, 123.069, -149.075, 0.22", "22.2246, 122.91, -149.087, 0.52", "21.5705, 122.471, -149.093, 0.52", "20.9058, 121.975, -149.089, 0.22", "20.8509, 121.931, -149.088, 0.22", "19.356, 120.741, -149.047, 0.22", "19.2993, 120.695, -149.045, 0.22", "18.1794, 119.776, -148.925, 0.22", "17.5425, 119.248, -148.815, 0.88", "17.0271, 118.824, -148.7, 0.88", "16.6404, 118.515, -148.609, 0.88", "16.5751, 118.467, -148.594, 0.88", "15.6896, 117.822, -148.372, 0.22", "14.4056, 116.772, -147.6, 0.22", "14.1862, 116.574, -147.405, 0.88", "14.1455, 116.523, -147.357, 0.88", "13.8241, 116.026, -146.902, 0.88", "13.7703, 115.921, -146.804, 0.88", "12.811, 113.404, -144.49, 0.22", "12.7952, 113.35, -144.431, 0.22", "12.4637, 112.121, -143.029, 0.22", "12.4382, 112.009, -142.904, 0.22", "12.2624, 111.049, -141.835, 0.66", "12.1785, 110.547, -141.299, 0.66", "11.8964, 108.592, -139.404, 0.15", "11.8909, 108.546, -139.352, 0.15", "11.84, 108.022, -138.666, 0.29", "11.8392, 107.973, -138.602, 0.29", "11.8575, 107.745, -138.356, 0.59", "11.865, 107.693, -138.309, 0.59", "12.1381, 105.914, -137.142, 0.59", "12.1906, 105.448, -136.888, 0.59", "12.2534, 104.735, -136.549, 0.22", "12.35, 103.197, -135.933, 0.22", "12.3788, 102.601, -135.75, 1.03", "12.4136, 101.67, -135.541, 1.4", "12.4492, 100.436, -135.398, 1.4", "12.4606, 100.125, -135.36, 1.4", "12.4909, 99.0411, -135.236, 0.29", "12.5008, 97.5986, -135.033, 0.29", "12.5006, 97.5288, -135.022, 0.29", "12.5007, 96.2572, -134.797, 0.29", "12.4883, 95.3779, -134.625, 0.96", "12.4733, 94.7091, -134.427, 1.18", "12.4581, 94.0975, -134.178, 1.18", "12.4581, 94.0439, -134.151, 1.18", "12.4619, 93.6413, -133.866, 1.18", "12.4628, 93.5942, -133.824, 1.18", "12.4135, 92.287, -132.44, 0.29", "12.3794, 91.6941, -131.746, 0.29", "12.3273, 91.0351, -130.965, 0.29", "12.154, 89.5533, -129.277, 0.29", "12.1425, 89.4799, -129.199, 0.29", "11.802, 87.6225, -127.253, 0.29", "11.7886, 87.565, -127.195, 0.29", "11.6465, 87.0766, -126.666, 1.18", "11.4721, 86.5932, -126.143, 1.69", "11.2852, 86.0177, -125.717, 2.21" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "57.0945, 277.016, -124.756, 0.52", "58.0738, 277.264, -124.876, 0.52", "59.3012, 277.601, -125.146, 0.52", "59.367, 277.62, -125.163, 0.52", "61.0511, 278.194, -125.647, 0.52", "61.2086, 278.252, -125.694, 0.52", "62.0229, 278.59, -125.947, 1.03", "63.0352, 279.077, -126.385, 1.03", "63.0973, 279.117, -126.417, 1.03", "63.7672, 279.623, -126.779, 0.81", "63.8149, 279.666, -126.807, 0.81", "64.2933, 280.113, -127.11, 1.03", "65.0646, 280.868, -127.62, 1.03", "65.7565, 281.55, -128.141, 0.22", "66.5542, 282.343, -128.82, 0.22", "66.5963, 282.384, -128.859, 0.22", "67.0532, 282.82, -129.264, 0.44", "67.5199, 283.25, -129.686, 0.44", "68.4832, 284.139, -130.62, 0.44", "69.168, 284.807, -131.394, 0.15", "69.2473, 284.894, -131.489, 0.15", "69.8274, 285.599, -132.244, 0.15", "70.3405, 286.282, -132.945, 0.15", "70.917, 287.183, -133.888, 0.44", "71.2866, 287.876, -134.617, 0.44", "71.6381, 288.638, -135.472, 0.44", "72.0662, 289.595, -136.595, 1.25", "72.1295, 289.735, -136.771, 1.25", "72.486, 290.487, -137.728, 1.92", "73.0744, 291.604, -139.167, 0.44", "73.58, 292.441, -140.304, 0.29", "74.1296, 293.209, -141.398, 0.29", "74.5693, 293.739, -142.137, 0.59", "74.6035, 293.775, -142.188, 0.59", "74.8982, 294.04, -142.54, 0.88", "74.9398, 294.077, -142.584, 0.88", "75.3239, 294.428, -142.925, 0.88", "75.3668, 294.469, -142.961, 0.88", "76.3228, 295.423, -143.772, 0.29", "76.781, 295.879, -144.153, 0.29", "77.4596, 296.553, -144.68, 0.29", "78.2493, 297.33, -145.25, 0.15", "78.9476, 298.011, -145.728, 1.18", "79.0008, 298.063, -145.761, 1.18", "79.4908, 298.539, -146.034, 1.62", "80.0994, 299.135, -146.62, 1.62", "81.0087, 300.022, -147.698, 1.03", "81.6833, 300.708, -148.594, 0.52", "82.151, 301.196, -149.25, 1.25", "82.6549, 301.731, -150.026, 1.69", "84.9531, 304.183, -153.846, 0.22", "85.3387, 304.588, -154.55, 0.22", "85.9264, 305.194, -155.698, 0.22", "85.9549, 305.223, -155.756, 0.22", "86.4517, 305.742, -156.756, 0.66", "86.7726, 306.086, -157.33, 0.66", "87.4926, 306.967, -158.254, 0.22", "87.5227, 307.008, -158.302, 0.22", "87.7057, 307.264, -158.699, 0.44", "87.9199, 307.581, -159.168, 0.44", "88.3221, 308.185, -159.989, 1.25", "88.5082, 308.469, -160.373, 1.25", "88.5359, 308.508, -160.424, 1.25", "89.7223, 310.081, -162.497, 0.22", "90.1406, 310.57, -163.191, 0.22", "90.3932, 310.845, -163.639, 0.22", "90.4264, 310.88, -163.693, 0.22", "90.7759, 311.254, -164.327, 0.66", "90.9668, 311.462, -164.673, 1.03", "91.6644, 312.237, -165.934, 1.33", "92.6952, 313.387, -167.997, 0.22", "93.0906, 313.844, -168.853, 0.22", "93.8905, 314.788, -170.655, 1.11" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "57.0945, 277.016, -124.756, 0.22", "56.8205, 278.358, -124.846, 0.22", "56.5148, 280.304, -125.187, 0.22", "56.5007, 280.898, -125.312, 0.59", "56.5219, 281.63, -125.475, 0.81", "56.5317, 281.836, -125.532, 0.81", "56.5821, 282.707, -125.803, 0.81", "56.7588, 284.308, -126.376, 0.22", "57.0438, 286.262, -127.299, 0.22", "57.0517, 286.323, -127.334, 0.22", "57.1878, 287.525, -128.114, 0.52", "57.1989, 287.65, -128.198, 0.52", "57.2364, 288.469, -128.767, 0.52", "57.2123, 289.668, -129.589, 0.52", "57.1375, 290.51, -130.206, 0.29", "57.1336, 290.57, -130.244, 0.29", "57.0908, 291.725, -130.853, 0.29", "57.0654, 292.569, -131.257, 0.96", "57.0641, 292.643, -131.287, 0.96", "57.0603, 292.859, -131.348, 0.96", "57.0096, 294.0, -131.668, 0.29", "57.0056, 294.067, -131.689, 0.29", "56.8792, 295.296, -132.093, 0.29", "56.8697, 295.363, -132.113, 0.29", "56.7155, 296.36, -132.428, 0.96", "56.5013, 297.572, -132.826, 1.4", "56.4577, 297.778, -132.897, 1.4", "56.2691, 298.607, -133.174, 1.4", "56.1046, 299.228, -133.36, 1.4" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_154",
    "id" : "dend_154",
    "points3d" : [ "197.905, -284.769, 60.1452, 0.22", "197.227, -287.697, 66.3296, 0.22", "197.178, -287.871, 66.667, 0.52", "197.067, -288.192, 67.2183, 0.52", "197.05, -288.236, 67.2863, 0.52", "196.838, -288.671, 67.8732, 0.22", "196.531, -289.119, 68.3724, 0.22", "196.346, -289.257, 68.3724, 0.22", "195.634, -289.512, 68.353, 0.22", "195.565, -289.526, 68.3503, 0.22", "194.415, -289.586, 68.2995, 0.22", "192.877, -289.491, 68.2243, 0.22", "192.673, -289.435, 68.2097, 0.22", "189.919, -288.225, 67.962, 0.22", "189.727, -288.093, 67.9518, 0.22", "189.027, -287.386, 67.9644, 0.22", "188.899, -287.201, 67.9782, 0.22", "187.711, -284.744, 68.2655, 0.22", "187.688, -284.679, 68.2755, 0.22", "187.324, -282.847, 68.6334, 0.22", "187.155, -281.799, 68.855, 0.22", "187.124, -281.546, 68.9161, 0.22", "187.047, -280.811, 69.123, 0.22", "187.045, -280.711, 69.1635, 0.22", "187.031, -279.868, 69.4647, 0.22", "187.032, -279.718, 69.4839, 0.22" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_151",
    "id" : "dend_151",
    "points3d" : [ "197.905, -284.769, 60.1452, 0.44", "199.71, -286.762, 64.1309, 0.44", "200.264, -287.289, 65.1349, 0.44", "200.374, -287.377, 65.2931, 1.03", "200.409, -287.402, 65.3365, 1.03", "200.964, -287.762, 65.9247, 1.4", "201.014, -287.795, 65.9783, 1.4", "202.106, -288.271, 66.3321, 1.4", "202.837, -288.52, 66.6107, 0.74", "202.901, -288.539, 66.6353, 0.74", "203.558, -288.715, 66.9005, 0.74" ],
    "parent" : "dend_150",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_139",
    "id" : "dend_139",
    "points3d" : [ "132.498, -245.524, 15.8863, 1.25", "132.114, -245.935, 16.188, 1.25", "131.24, -246.754, 16.7984, 0.44", "130.795, -247.12, 17.0676, 0.37", "130.481, -247.379, 17.2577, 0.37", "129.801, -247.939, 17.6691, 0.37", "129.274, -248.373, 17.9877, 0.22", "129.035, -248.545, 18.1256, 0.44", "128.577, -248.802, 18.3133, 0.44" ],
    "parent" : "dend_137",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_138",
    "id" : "dend_138",
    "points3d" : [ "132.498, -245.524, 15.8863, 0.37", "133.565, -245.773, 15.8863, 0.37", "134.0, -245.871, 15.8863, 0.37", "134.792, -245.996, 15.8863, 0.22", "135.317, -245.955, 15.8863, 0.22", "135.317, -245.955, 15.8863, 0.44", "135.383, -245.879, 15.8863, 0.66", "135.411, -245.783, 15.8863, 0.66", "135.505, -245.123, 15.8863, 0.22", "135.593, -243.425, 15.8863, 0.22", "135.598, -242.897, 15.8863, 0.22" ],
    "parent" : "dend_137",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_112",
    "id" : "dend_112",
    "points3d" : [ "-32.5941, -396.214, -1.1615, 0.52", "-30.8913, -396.121, -1.82953, 0.52", "-29.413, -396.055, -2.42355, 0.22", "-28.085, -396.01, -2.96142, 0.22", "-28.0285, -396.01, -2.98399, 0.22", "-26.4866, -396.041, -3.58039, 0.22", "-25.7187, -396.065, -3.86798, 0.22", "-25.507, -396.074, -3.96238, 0.52", "-25.4066, -396.074, -3.99728, 0.52", "-24.9195, -396.11, -4.18166, 0.52", "-24.6617, -396.14, -4.26419, 0.22", "-24.4627, -396.189, -4.28582, 0.22", "-23.5631, -396.305, -4.45504, 0.22", "-22.9303, -396.316, -4.60094, 0.52", "-22.8626, -396.31, -4.62075, 0.52" ],
    "parent" : "dend_108",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_109",
    "id" : "dend_109",
    "points3d" : [ "-32.5941, -396.214, -1.1615, 0.29", "-32.4633, -397.757, -0.973891, 0.29", "-32.2845, -398.829, -0.74813, 0.29", "-32.2199, -399.097, -0.677796, 0.29", "-31.9709, -400.026, -0.416886, 0.29", "-31.9413, -400.133, -0.390474, 0.29", "-31.6229, -401.277, -0.12821, 0.29", "-31.567, -401.419, -0.103219, 0.29", "-31.1241, -402.472, -0.0101152, 0.29", "-31.042, -402.678, -0.00737784, 0.29", "-30.642, -403.707, -0.0675814, 0.29", "-30.6163, -403.774, -0.0748556, 0.29", "-30.1491, -405.044, -0.274469, 0.29", "-29.8848, -405.726, -0.372356, 0.59", "-29.7767, -405.982, -0.422827, 0.59", "-29.3964, -406.88, -0.622662, 0.59", "-29.1255, -407.521, -0.77618, 0.81", "-28.8573, -408.27, -0.973719, 0.81", "-28.5965, -409.162, -1.22388, 0.81", "-28.3419, -410.374, -1.5903, 0.29", "-28.2191, -411.146, -1.8365, 0.29", "-28.2096, -411.222, -1.86223, 0.29", "-28.0428, -412.687, -2.37735, 0.29", "-28.021, -412.836, -2.42526, 0.29", "-27.8091, -413.735, -2.67092, 0.29", "-27.754, -413.864, -2.69303, 0.29", "-27.4043, -414.503, -2.82123, 0.29", "-27.3664, -414.561, -2.83368, 0.29", "-26.627, -415.481, -3.03054, 0.29", "-26.2041, -416.012, -3.16155, 1.25", "-25.8677, -416.545, -3.3403, 1.4", "-25.6622, -417.54, -3.68983, 0.59", "-25.6711, -417.602, -3.72238, 0.59", "-25.7408, -417.807, -4.03759, 0.29", "-25.7549, -417.838, -4.09873, 0.29", "-26.0354, -418.341, -5.10767, 0.29", "-26.3149, -418.796, -6.00335, 0.29", "-26.7217, -419.455, -7.315, 1.4", "-28.1946, -421.645, -12.152, 0.22", "-28.2112, -421.669, -12.2188, 0.22", "-28.4645, -422.101, -13.494, 0.22", "-28.6317, -422.415, -14.4813, 0.22", "-28.6426, -422.437, -14.5471, 0.22", "-29.1428, -423.416, -17.3666, 1.4", "-30.1052, -425.329, -22.1407, 0.22", "-30.3543, -425.85, -23.4137, 0.22", "-30.4234, -426.012, -23.8066, 0.22", "-30.6286, -426.515, -24.9193, 0.22", "-30.6759, -426.632, -25.1141, 0.22", "-30.9896, -427.388, -25.8363, 0.22", "-31.0167, -427.446, -25.8717, 0.22", "-31.2211, -427.951, -26.2649, 0.22", "-31.4532, -428.827, -27.0303, 1.03", "-31.5244, -429.43, -27.6685, 1.4", "-31.5974, -430.869, -29.3236, 0.22", "-31.5918, -430.961, -29.4409, 0.22", "-31.4596, -431.94, -30.7368, 0.22", "-31.2866, -432.747, -31.8443, 1.33", "-30.8905, -433.957, -33.6994, 0.29", "-30.8668, -434.006, -33.7838, 0.29", "-30.329, -434.81, -35.2715, 0.29", "-30.241, -434.922, -35.4908, 0.88", "-30.1824, -434.979, -35.6184, 0.88", "-29.17, -435.866, -37.5372, 0.29", "-28.9458, -436.1, -37.9265, 0.29", "-28.8394, -436.264, -38.1579, 0.29", "-28.7004, -436.867, -38.7837, 0.29", "-28.6956, -436.927, -38.838, 0.29", "-28.7076, -437.714, -39.4669, 1.11", "-28.7802, -438.25, -39.8449, 1.47", "-29.0196, -439.434, -40.7325, 0.22", "-29.3906, -440.94, -41.9051, 0.22", "-29.4062, -440.994, -41.9485, 0.44", "-29.4227, -441.046, -41.9918, 0.44", "-29.8012, -442.102, -42.8783, 0.22", "-29.8831, -442.332, -43.0683, 0.66", "-29.9926, -442.676, -43.315, 0.66", "-30.0041, -442.741, -43.3608, 0.66", "-30.0629, -443.618, -43.9326, 0.22", "-30.0597, -443.693, -43.9748, 0.22", "-29.9419, -444.354, -44.2622, 0.22", "-29.9126, -444.482, -44.3128, 0.22", "-29.5713, -445.604, -44.8192, 0.22", "-29.5087, -445.747, -44.8804, 0.22", "-29.238, -446.246, -45.0801, 0.96", "-28.9963, -446.643, -45.2265, 1.25", "-28.9578, -446.701, -45.2475, 1.25", "-28.1258, -447.94, -45.5198, 0.22", "-27.3021, -449.163, -45.6487, 0.22", "-27.2456, -449.246, -45.6517, 0.22", "-26.3554, -450.538, -45.5941, 0.22", "-26.3113, -450.605, -45.5851, 0.22", "-25.4237, -452.04, -45.2409, 0.22", "-25.3477, -452.176, -45.1876, 0.81", "-25.3129, -452.244, -45.163, 0.81", "-25.074, -452.74, -45.0718, 0.81", "-24.9851, -452.934, -45.0631, 0.81", "-24.5783, -453.714, -45.1098, 0.81", "-24.3186, -454.183, -45.1868, 0.81", "-23.973, -454.808, -45.2799, 0.22", "-23.1302, -456.342, -45.5662, 0.22", "-23.0967, -456.403, -45.5795, 0.22", "-22.6181, -457.263, -45.786, 0.22", "-22.557, -457.387, -45.8174, 0.22", "-22.0908, -458.437, -46.0802, 0.22", "-21.8442, -459.092, -46.2031, 1.18", "-21.811, -459.19, -46.2239, 1.18", "-21.6544, -459.562, -46.286, 1.18", "-21.3829, -460.183, -46.3699, 0.22", "-21.3509, -460.243, -46.388, 0.22", "-20.5453, -461.553, -46.9229, 0.22", "-20.5096, -461.608, -46.9479, 0.22", "-19.748, -462.754, -47.5446, 0.22", "-19.668, -462.866, -47.6117, 0.22", "-18.5066, -464.303, -48.6002, 0.22", "-18.4628, -464.355, -48.6432, 0.22", "-18.3871, -464.438, -48.7466, 1.03", "-18.1762, -464.692, -49.1002, 1.4", "-18.1241, -464.79, -49.2811, 1.4" ],
    "parent" : "dend_108",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "85.6707, 306.598, -67.2414, 0.29", "86.2375, 307.581, -67.7275, 0.29", "86.3093, 307.696, -67.7979, 0.29", "86.9245, 308.662, -68.4271, 0.29", "87.3587, 309.342, -68.8512, 0.66", "87.6623, 309.814, -69.137, 0.66", "87.7109, 309.889, -69.1828, 0.66", "88.3873, 310.873, -69.7627, 0.29", "88.461, 310.976, -69.8251, 0.29", "88.9248, 311.615, -70.1863, 0.29", "88.9799, 311.693, -70.2247, 0.29", "90.2915, 313.61, -71.08, 0.29", "90.5959, 314.055, -71.2872, 0.29", "90.6686, 314.165, -71.3357, 0.29", "91.8244, 315.899, -72.1344, 0.29", "92.0103, 316.178, -72.264, 0.66", "92.3498, 316.691, -72.5052, 0.66", "93.084, 317.795, -73.0068, 0.29", "93.618, 318.599, -73.3862, 0.29", "93.9559, 319.101, -73.6222, 1.18", "94.3643, 319.697, -73.9035, 1.62", "95.0816, 320.707, -74.332, 0.22", "95.504, 321.296, -74.5427, 0.22", "95.5467, 321.351, -74.5557, 0.22", "95.9816, 321.849, -74.687, 0.22", "96.0963, 321.971, -74.7179, 0.22", "96.7743, 322.605, -74.8737, 0.22", "96.8551, 322.673, -74.8948, 0.22", "97.6226, 323.292, -75.1544, 0.22", "98.2345, 323.77, -75.3778, 0.66", "98.7029, 324.126, -75.5625, 1.03", "98.9377, 324.308, -75.6547, 1.03", "99.9365, 325.1, -76.0549, 0.22", "99.9876, 325.145, -76.074, 0.22", "100.756, 325.901, -76.3069, 0.22", "100.803, 325.952, -76.3151, 0.22", "101.442, 326.764, -76.3584, 0.22", "101.486, 326.834, -76.3554, 0.22", "101.973, 327.664, -76.293, 0.22", "102.254, 328.112, -76.3065, 1.11", "102.693, 328.815, -76.3791, 1.84", "103.028, 329.332, -76.5135, 0.22", "103.779, 330.518, -76.9638, 0.22", "104.607, 331.798, -77.6348, 0.22", "105.324, 332.858, -78.3358, 1.33", "105.603, 333.271, -78.6453, 1.47", "106.455, 334.491, -79.6652, 0.44", "106.768, 334.929, -80.067, 0.29", "107.383, 335.813, -80.909, 0.29", "107.506, 336.041, -81.0865, 0.59", "107.783, 336.631, -81.4262, 0.59", "107.864, 336.799, -81.505, 0.29", "107.898, 336.869, -81.5256, 0.29", "108.317, 337.692, -81.7329, 0.22", "108.977, 338.987, -82.0994, 0.22", "109.083, 339.189, -82.1779, 0.44", "109.157, 339.329, -82.2423, 0.44", "109.373, 339.749, -82.4495, 0.44", "109.407, 339.814, -82.4831, 0.44", "109.998, 340.947, -83.1196, 0.29", "110.031, 341.006, -83.1474, 0.29", "110.612, 342.042, -83.5638, 0.29", "110.736, 342.256, -83.629, 0.29", "110.935, 342.594, -83.7035, 0.29", "111.007, 342.713, -83.7304, 0.29", "111.644, 343.746, -83.9937, 0.29", "111.7, 343.831, -84.0248, 0.29", "112.188, 344.501, -84.3526, 0.29", "112.227, 344.553, -84.3797, 0.29", "113.112, 345.644, -84.9175, 0.88", "113.654, 346.281, -85.2176, 1.18", "113.955, 346.625, -85.3757, 1.18", "114.001, 346.676, -85.3958, 1.18", "114.505, 347.206, -85.5718, 0.22", "115.586, 348.302, -85.7972, 0.22", "115.753, 348.465, -85.7993, 0.59", "115.846, 348.573, -85.7937, 0.59", "116.116, 348.958, -85.7796, 0.59", "116.154, 349.016, -85.7781, 0.59", "116.443, 349.568, -85.7781, 0.81", "116.54, 349.845, -85.7781, 0.81", "116.932, 351.093, -85.7781, 0.29", "117.019, 351.42, -85.7781, 0.66" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "85.6707, 306.598, -67.2414, 0.29", "85.3172, 307.258, -66.4482, 0.29", "85.105, 308.36, -65.5697, 0.29", "85.003, 309.19, -65.0729, 0.29", "84.9327, 309.928, -64.7598, 0.29", "84.8246, 310.635, -64.4956, 0.29", "84.7598, 311.051, -64.3664, 0.22", "84.7011, 311.654, -64.2621, 0.22", "84.683, 312.074, -64.2436, 0.22", "84.6976, 312.84, -64.2441, 0.22", "84.7262, 313.33, -64.2921, 1.03", "84.8182, 313.987, -64.4164, 1.03", "84.8547, 314.121, -64.4529, 1.03", "85.0055, 314.525, -64.5823, 1.03", "85.3457, 315.284, -64.8391, 0.22", "85.824, 316.258, -65.1424, 0.22", "85.824, 316.258, -65.1424, 0.66", "85.9528, 316.515, -65.2037, 0.52", "86.2908, 317.238, -65.3479, 0.22", "86.343, 317.371, -65.3569, 0.22", "86.6661, 318.467, -65.2614, 0.22", "86.8175, 319.109, -65.1472, 1.03", "86.9378, 319.609, -65.0526, 1.11", "86.9546, 319.679, -65.0384, 1.11", "87.2312, 320.786, -64.8311, 1.11", "87.5288, 321.76, -64.6855, 0.29", "87.5508, 321.826, -64.6771, 0.29", "87.9974, 323.073, -64.5471, 0.29", "88.0234, 323.138, -64.5419, 0.29", "88.723, 324.754, -64.4634, 0.29", "89.4757, 326.29, -64.4634, 0.29", "89.5394, 326.418, -64.4634, 0.29", "89.6067, 326.561, -64.4623, 1.18", "89.6402, 326.634, -64.4613, 1.18", "89.8427, 327.125, -64.4537, 1.18", "90.2729, 328.227, -64.4309, 0.29", "91.0123, 330.3, -64.3826, 0.29", "91.5108, 331.773, -64.3476, 0.22", "91.5319, 331.841, -64.3459, 0.22", "92.141, 334.028, -64.1897, 0.22", "92.1976, 334.277, -64.1597, 0.88", "92.3122, 334.904, -64.0417, 1.33", "92.4075, 335.566, -63.8693, 1.33", "92.4574, 335.967, -63.7478, 1.33", "92.66, 337.488, -63.2293, 0.22", "92.8793, 339.12, -62.6009, 0.22", "93.0489, 340.144, -62.1929, 0.22", "93.4183, 341.978, -61.4251, 0.22", "93.4476, 342.095, -61.3755, 0.22", "93.7852, 343.19, -60.9258, 0.22", "93.8054, 343.243, -60.9064, 0.22", "94.2232, 344.061, -60.4869, 0.88", "94.2539, 344.105, -60.46, 0.88", "94.5021, 344.371, -60.2628, 0.88", "94.7126, 344.558, -60.0947, 0.88", "94.767, 344.599, -60.0514, 0.88", "95.8678, 345.353, -59.1735, 0.22", "96.4617, 345.722, -58.6375, 0.22", "96.5102, 345.751, -58.5915, 0.22", "97.4563, 346.261, -57.7831, 0.96", "97.6431, 346.354, -57.6371, 1.18", "97.7639, 346.407, -57.5628, 1.18", "99.4512, 347.137, -56.8066, 0.22", "99.521, 347.169, -56.7819, 0.22", "101.002, 347.89, -56.3807, 0.22", "101.091, 347.933, -56.3647, 0.22", "102.484, 348.6, -56.176, 0.22", "103.574, 349.118, -56.0918, 0.22", "104.576, 349.582, -56.1027, 0.22", "104.967, 349.764, -56.107, 0.66", "105.623, 350.083, -56.1144, 1.03", "105.687, 350.114, -56.115, 1.03", "106.109, 350.33, -56.115, 1.03", "106.186, 350.354, -56.115, 1.03" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "102.044, 298.41, -77.4969, 0.88", "104.197, 297.869, -78.0752, 0.88", "105.142, 297.656, -78.4193, 0.29", "105.658, 297.561, -78.66, 0.29", "106.132, 297.485, -78.8903, 0.29", "106.936, 297.365, -79.2568, 0.29", "107.0, 297.356, -79.285, 0.29", "107.808, 297.238, -79.6595, 0.29", "108.4, 297.158, -79.9915, 1.03", "108.774, 297.114, -80.2067, 1.25", "109.44, 297.042, -80.5444, 1.25", "109.502, 297.034, -80.5764, 1.25", "111.234, 296.813, -81.4075, 0.22", "112.658, 296.61, -82.0123, 0.22", "112.797, 296.589, -82.0692, 0.22", "114.221, 296.374, -82.6761, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "102.044, 298.41, -77.4969, 0.29", "101.964, 299.17, -77.5514, 0.29", "101.803, 300.686, -77.6603, 0.29", "101.737, 301.309, -77.705, 0.22", "101.721, 301.461, -77.7159, 0.22", "101.606, 302.548, -77.794, 0.22", "101.528, 303.284, -77.8469, 0.22" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "93.8905, 314.788, -170.655, 0.22", "93.9395, 315.224, -171.163, 0.22", "94.0498, 316.324, -172.548, 0.22", "94.0892, 316.952, -173.266, 1.03", "94.1196, 317.614, -173.98, 1.03", "94.1595, 319.151, -175.427, 0.81", "94.1743, 320.126, -176.324, 0.15", "94.1742, 320.179, -176.371, 0.15", "94.1442, 321.219, -177.402, 0.15", "94.143, 321.319, -177.504, 0.15", "94.1555, 322.276, -178.571, 0.15", "94.1987, 323.167, -179.567, 0.66", "94.2239, 323.503, -179.953, 0.66", "94.3224, 325.233, -182.365, 0.22", "94.3397, 326.128, -183.786, 0.22", "94.3172, 326.914, -185.141, 1.18", "94.3141, 326.949, -185.205, 1.18", "94.254, 327.337, -185.894, 1.47", "93.9149, 328.76, -188.55, 0.15", "93.7684, 329.165, -189.313, 0.15", "93.5341, 329.605, -190.144, 0.52", "93.4092, 329.807, -190.476, 0.66", "93.2353, 330.087, -190.895, 0.66", "92.8333, 330.717, -191.744, 0.15", "92.8073, 330.767, -191.787, 0.15", "92.4365, 331.457, -192.415, 0.15", "92.1504, 331.965, -192.853, 0.15", "91.7388, 332.756, -193.492, 0.88", "91.7043, 332.827, -193.544, 0.88", "91.5395, 333.181, -193.726, 0.88", "91.1049, 334.025, -194.241, 0.22", "91.0645, 334.1, -194.293, 0.22", "90.6653, 334.765, -194.859, 0.22", "90.567, 334.912, -194.993, 0.22", "89.8631, 335.904, -195.951, 0.22", "89.0611, 336.977, -197.043, 0.22", "89.0022, 337.054, -197.13, 0.22", "88.38, 337.806, -198.224, 0.22", "88.2803, 337.914, -198.404, 0.22", "87.9772, 338.2, -199.007, 0.22", "87.9494, 338.223, -199.07, 0.22", "87.0786, 338.845, -200.847, 0.22", "86.3373, 339.289, -202.25, 1.18", "85.9627, 339.481, -202.917, 1.62", "84.9135, 339.964, -204.737, 1.62", "84.3034, 340.228, -205.751, 0.22", "83.655, 340.519, -206.775, 0.22", "83.1672, 340.736, -207.467, 0.88", "83.0755, 340.787, -207.585, 0.88", "82.9004, 340.924, -207.807, 0.88", "82.5064, 341.385, -208.218, 0.29", "81.9621, 342.197, -208.769, 0.29", "81.9333, 342.257, -208.815, 0.29", "81.6827, 342.839, -209.274, 0.29", "81.3911, 343.52, -209.837, 0.29", "81.2788, 343.786, -210.069, 0.81", "81.1891, 344.014, -210.265, 0.81", "80.741, 345.335, -211.317, 0.29", "80.6082, 345.788, -211.669, 0.29", "80.5485, 346.063, -211.906, 0.29", "80.5352, 346.182, -212.001, 0.29", "80.5019, 346.775, -212.442, 0.29", "80.4855, 347.848, -213.157, 1.33", "80.4913, 348.19, -213.406, 1.62", "80.5637, 349.538, -214.481, 0.15", "80.5955, 350.598, -215.327, 0.15", "80.5948, 350.9, -215.56, 0.96", "80.5896, 351.17, -215.764, 1.33", "80.5073, 353.149, -217.058, 0.22", "80.4444, 354.038, -217.562, 0.22", "80.3273, 354.893, -217.939, 0.22", "80.214, 355.439, -218.14, 0.22", "80.1968, 355.515, -218.161, 0.22", "79.9279, 356.584, -218.333, 0.22", "79.8031, 357.012, -218.335, 1.03", "79.6326, 357.512, -218.335, 0.15", "79.1913, 358.776, -218.329, 0.15", "79.0889, 359.089, -218.326, 0.96", "78.9211, 359.638, -218.318, 0.96", "78.7831, 360.11, -218.31, 0.15", "78.5547, 360.965, -218.292, 0.15", "78.5366, 361.045, -218.291, 0.15", "78.1622, 362.914, -218.291, 0.15", "78.0813, 363.375, -218.296, 0.15", "78.0677, 363.469, -218.299, 0.44", "78.0124, 363.901, -218.316, 0.44", "77.9832, 364.135, -218.327, 0.15", "77.8072, 365.167, -218.442, 0.15", "77.7903, 365.237, -218.456, 0.15", "77.6487, 365.894, -218.657, 0.15", "77.6086, 366.23, -218.782, 0.81", "77.5925, 366.37, -218.842, 0.81", "77.5074, 367.172, -219.211, 0.22", "77.4996, 367.306, -219.281, 0.22", "77.5316, 368.331, -219.711, 0.22", "77.614, 369.098, -219.99, 1.55", "77.7536, 369.94, -220.223, 0.15", "77.8322, 370.286, -220.317, 0.15", "77.8716, 370.441, -220.354, 0.15", "78.309, 372.154, -220.762, 0.15", "78.3794, 372.491, -220.835, 0.44", "78.4993, 373.207, -220.992, 0.44", "78.6873, 374.513, -221.287, 1.03", "78.7533, 375.241, -221.457, 1.25", "78.7566, 375.535, -221.527, 0.15", "78.6173, 376.651, -221.784, 0.15", "78.5989, 376.746, -221.811, 0.15", "78.2857, 377.851, -222.141, 0.15", "78.2669, 377.916, -222.162, 0.15", "78.1734, 378.269, -222.294, 1.11", "78.0169, 378.94, -222.552, 1.47", "77.749, 380.297, -223.055, 0.15", "77.4141, 382.127, -223.703, 0.15", "77.047, 384.31, -224.507, 0.15", "77.002, 384.582, -224.609, 0.59", "76.9116, 385.13, -224.808, 0.59", "76.7117, 386.38, -225.304, 0.15", "76.6984, 386.454, -225.333, 0.15", "76.5145, 387.192, -225.815, 0.44", "76.4439, 387.389, -225.985, 0.44", "76.1479, 388.076, -226.678, 0.15", "75.7128, 388.955, -227.652, 0.66", "75.5651, 389.225, -227.953, 0.66", "74.8038, 390.617, -229.475, 0.22", "74.7742, 390.67, -229.531, 0.22", "74.6474, 390.898, -229.777, 0.52", "74.4328, 391.266, -230.184, 0.74", "74.0864, 391.862, -230.659, 0.74" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "93.8905, 314.788, -170.655, 0.74", "94.5455, 314.899, -170.868, 0.74", "95.796, 315.138, -171.338, 0.22", "95.8716, 315.155, -171.366, 0.22", "96.8781, 315.407, -171.733, 0.22", "96.9428, 315.427, -171.753, 0.22", "98.0429, 315.795, -172.076, 1.11", "98.1052, 315.825, -172.091, 1.11", "98.8676, 316.267, -172.247, 1.33", "98.9281, 316.301, -172.26, 1.33", "99.8901, 316.828, -172.481, 0.15", "99.952, 316.859, -172.494, 0.15", "101.288, 317.511, -172.724, 0.15", "101.834, 317.759, -172.827, 1.03", "102.777, 318.188, -173.064, 1.77", "103.044, 318.309, -173.143, 1.77", "103.475, 318.509, -173.341, 1.77", "103.545, 318.545, -173.376, 1.77", "104.008, 318.803, -173.645, 1.77", "104.904, 319.346, -174.114, 1.47", "104.958, 319.382, -174.143, 1.47", "106.189, 320.281, -174.809, 0.59", "107.208, 321.005, -175.336, 0.15", "107.296, 321.065, -175.376, 0.15", "108.255, 321.709, -175.763, 0.15", "108.95, 322.145, -176.016, 0.88", "109.659, 322.577, -176.256, 1.18", "110.941, 323.335, -176.636, 0.22", "112.154, 324.054, -177.024, 0.22", "112.243, 324.109, -177.052, 0.22", "113.052, 324.636, -177.282, 1.03", "113.401, 324.87, -177.373, 1.33", "113.457, 324.911, -177.388, 1.33", "114.012, 325.401, -177.532, 1.33", "114.69, 326.116, -177.699, 0.29", "115.302, 326.838, -177.834, 0.29", "115.754, 327.418, -177.912, 0.59", "116.241, 328.06, -177.994, 0.59", "116.846, 328.847, -178.081, 0.29", "117.69, 329.947, -178.185, 0.29", "117.733, 330.002, -178.189, 0.29", "118.245, 330.648, -178.202, 0.29", "118.338, 330.767, -178.197, 0.29", "119.411, 332.205, -178.11, 0.29", "119.452, 332.263, -178.108, 0.29", "120.361, 333.653, -178.091, 0.37", "120.672, 334.204, -178.011, 1.33", "121.071, 334.984, -177.885, 1.33", "121.659, 336.246, -177.657, 0.88", "121.941, 336.979, -177.496, 1.18", "122.297, 337.991, -177.245, 1.18", "122.991, 340.607, -176.415, 1.18" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "56.1046, 299.228, -133.36, 0.22", "56.9794, 301.187, -136.201, 0.22", "57.3958, 302.261, -137.456, 0.22", "57.6009, 302.846, -138.065, 0.22", "57.6147, 302.898, -138.111, 0.22", "57.8038, 303.916, -138.881, 0.22", "57.8124, 303.975, -138.922, 0.22", "57.8457, 305.609, -139.579, 0.22", "57.836, 305.753, -139.622, 0.22", "57.6726, 307.466, -140.178, 0.22", "57.5852, 308.397, -140.524, 0.22", "57.5814, 308.453, -140.545, 0.22", "57.5652, 308.993, -140.78, 1.33", "57.5644, 309.969, -141.266, 1.33", "57.581, 311.425, -141.983, 0.44", "57.6034, 312.729, -142.673, 0.22", "57.6542, 313.957, -143.359, 0.22", "57.7021, 314.952, -143.929, 0.22", "57.7078, 315.043, -143.983, 0.22", "57.779, 316.222, -144.697, 0.22", "57.774, 317.341, -145.245, 1.03" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "56.1046, 299.228, -133.36, 0.29", "55.1251, 300.463, -133.504, 0.29", "54.7638, 300.903, -133.54, 0.29", "54.0449, 301.762, -133.597, 0.29", "53.3608, 302.598, -133.642, 0.29", "52.3029, 303.888, -133.652, 0.29", "52.2429, 303.961, -133.65, 0.29", "51.2328, 305.198, -133.528, 0.29", "51.1883, 305.252, -133.522, 0.29", "50.4893, 306.112, -133.357, 0.29", "49.9243, 306.802, -133.202, 0.74", "49.484, 307.377, -133.073, 1.18", "49.0753, 307.965, -132.979, 1.18", "49.0314, 308.032, -132.968, 1.18", "48.4503, 308.931, -132.847, 1.18", "47.7016, 310.114, -132.731, 0.22", "47.0183, 311.279, -132.697, 0.22", "46.4658, 312.273, -132.691, 0.22" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_153",
    "id" : "dend_153",
    "points3d" : [ "203.558, -288.715, 66.9005, 0.37", "204.643, -287.983, 67.1134, 0.37", "204.712, -287.942, 67.1235, 0.37", "205.512, -287.574, 67.2068, 0.29", "206.38, -287.229, 67.2819, 0.29", "206.943, -287.036, 67.3239, 0.81", "208.091, -286.664, 67.3991, 0.22", "208.594, -286.518, 67.3813, 0.22", "209.612, -286.24, 67.3261, 0.22", "209.681, -286.224, 67.321, 0.22", "210.043, -286.156, 67.287, 0.22", "210.55, -286.073, 67.2318, 0.22", "211.635, -285.874, 67.0911, 0.22", "211.702, -285.855, 67.0825, 0.22", "212.399, -285.589, 66.9969, 0.22", "212.463, -285.56, 66.9902, 0.22", "212.801, -285.4, 66.9573, 0.22", "212.865, -285.371, 66.9527, 0.22", "213.681, -284.995, 66.9527, 0.22", "213.805, -284.927, 66.9527, 0.22", "214.373, -284.5, 66.9527, 0.22" ],
    "parent" : "dend_151",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_152",
    "id" : "dend_152",
    "points3d" : [ "203.558, -288.715, 66.9005, 0.37", "203.868, -289.428, 67.1078, 0.37", "204.295, -290.405, 67.392, 0.37", "204.322, -290.467, 67.4102, 0.37", "204.89, -291.77, 67.789, 0.37", "205.187, -292.452, 67.9874, 0.37", "205.542, -293.265, 68.2241, 0.37" ],
    "parent" : "dend_151",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_111",
    "id" : "dend_111",
    "points3d" : [ "-18.1241, -464.79, -49.2811, 0.29", "-18.4862, -467.314, -51.5875, 0.29", "-18.5866, -468.014, -52.227, 0.29", "-18.822, -469.655, -53.7264, 0.29", "-18.8305, -469.715, -53.7805, 0.29", "-19.1441, -471.9, -55.7775, 0.22", "-19.1719, -472.094, -55.9546, 0.52" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_110",
    "id" : "dend_110",
    "points3d" : [ "-18.1241, -464.79, -49.2811, 0.22", "-19.5486, -465.164, -52.6954, 0.22", "-19.7565, -465.218, -53.1938, 0.44" ],
    "parent" : "dend_109",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "117.019, 351.42, -85.7781, 0.22", "117.496, 352.048, -85.805, 0.22", "117.547, 352.112, -85.8076, 0.22", "118.377, 353.184, -85.8464, 0.22", "118.427, 353.249, -85.8486, 0.22", "119.767, 354.98, -85.9708, 0.22", "120.05, 355.355, -86.0063, 0.52", "120.409, 355.873, -86.0932, 0.52", "120.811, 356.48, -86.2344, 0.52", "120.847, 356.538, -86.2511, 0.52", "121.163, 357.081, -86.4213, 0.88", "121.464, 357.642, -86.6035, 0.44", "122.456, 359.447, -87.223, 0.22", "122.533, 359.585, -87.2717, 0.22", "123.192, 360.734, -87.6714, 0.22", "123.226, 360.793, -87.6929, 0.22", "123.922, 361.967, -88.1301, 0.22", "124.246, 362.506, -88.3482, 0.59", "124.28, 362.563, -88.3723, 0.59", "124.472, 362.919, -88.5331, 0.59", "124.969, 363.951, -89.0578, 0.22", "124.998, 364.019, -89.0898, 0.22", "125.29, 364.856, -89.4456, 0.22", "125.318, 364.929, -89.467, 0.22", "125.425, 365.185, -89.5272, 0.44", "125.471, 365.264, -89.5424, 0.44", "125.844, 365.803, -89.6037, 0.44", "125.954, 365.937, -89.6237, 0.44", "126.42, 366.416, -89.7145, 0.44", "126.488, 366.489, -89.727, 0.44", "127.346, 367.359, -89.8591, 0.22", "127.453, 367.464, -89.874, 0.22", "127.918, 367.878, -89.9255, 0.22", "127.97, 367.924, -89.9303, 0.22", "128.921, 368.781, -89.9969, 0.22", "130.073, 369.832, -90.0513, 0.22", "130.127, 369.88, -90.0521, 0.22", "131.216, 370.809, -90.0676, 0.22", "131.389, 370.95, -90.0699, 0.22", "132.122, 371.558, -90.0782, 0.22", "132.175, 371.605, -90.0731, 0.22", "132.578, 372.192, -89.9505, 0.22", "132.613, 372.263, -89.9346, 0.22", "132.635, 372.331, -89.9193, 0.59", "132.951, 373.433, -89.6692, 0.59", "133.249, 374.625, -89.3511, 0.22", "133.766, 376.704, -88.8284, 0.22", "133.939, 377.465, -88.6422, 0.96", "134.076, 378.06, -88.5008, 1.18", "134.111, 378.203, -88.4685, 1.18", "134.319, 379.028, -88.3005, 0.22", "135.067, 381.796, -87.8677, 0.22", "135.191, 382.197, -87.7833, 0.66", "135.218, 382.273, -87.7658, 0.66", "135.45, 382.88, -87.6223, 0.66", "135.613, 383.283, -87.5314, 0.66", "135.741, 383.572, -87.4727, 0.66", "136.473, 384.889, -86.8928, 0.22", "136.63, 385.19, -86.7326, 0.66", "136.657, 385.248, -86.6976, 0.66", "136.851, 385.807, -86.3347, 0.66", "136.871, 385.889, -86.2804, 0.66", "136.984, 387.426, -85.3669, 0.22", "136.913, 388.196, -84.9454, 0.22", "136.892, 388.337, -84.8762, 0.22", "136.753, 389.241, -84.4692, 0.22", "136.741, 389.317, -84.4386, 0.22", "136.63, 390.235, -84.1382, 0.22", "136.551, 391.473, -83.8702, 1.03", "136.55, 392.213, -83.7131, 1.33", "136.563, 392.85, -83.604, 0.22", "136.575, 393.141, -83.5557, 0.22", "136.614, 394.024, -83.4184, 0.22", "136.686, 395.26, -83.2397, 0.22", "136.694, 395.359, -83.2278, 0.22", "136.888, 397.574, -82.9136, 0.22", "137.009, 398.951, -82.6922, 0.22", "137.015, 399.022, -82.6762, 0.22", "137.076, 399.625, -82.5064, 0.88", "137.138, 400.213, -82.311, 1.25", "137.205, 400.856, -82.084, 1.25", "137.217, 400.968, -82.0424, 1.25", "137.332, 402.251, -81.5065, 0.22", "137.455, 403.654, -80.9117, 0.22", "137.623, 405.727, -80.0282, 0.22", "137.65, 406.087, -79.8685, 0.74", "137.688, 406.551, -79.6603, 1.11", "137.834, 408.314, -78.8598, 0.22", "137.984, 410.01, -78.0752, 0.22", "137.991, 410.072, -78.0411, 0.22", "138.182, 411.343, -77.2504, 0.22", "138.191, 411.394, -77.2189, 0.22", "138.246, 411.678, -77.0444, 0.66", "138.315, 411.994, -76.8745, 0.66", "138.531, 413.127, -76.2735, 1.03", "138.553, 413.264, -76.2161, 1.03", "138.683, 414.097, -75.9572, 1.03", "138.717, 414.345, -75.8986, 1.03", "138.768, 414.716, -75.8375, 0.22", "138.935, 416.058, -75.704, 0.22", "138.982, 416.499, -75.6636, 0.37", "138.994, 416.58, -75.6597, 0.37", "139.193, 417.655, -75.6333, 0.37", "139.382, 418.523, -75.6311, 0.66", "139.399, 418.592, -75.6349, 0.66", "139.712, 419.746, -75.7728, 0.22", "140.315, 422.068, -76.191, 0.22", "140.329, 422.133, -76.2141, 0.59", "140.338, 422.185, -76.242, 0.59", "140.424, 422.835, -76.6325, 0.59", "140.457, 423.142, -76.8304, 0.59", "140.467, 423.258, -76.9215, 0.59", "140.549, 424.526, -78.1907, 0.22", "140.575, 425.371, -79.1066, 0.22", "140.583, 426.088, -79.9339, 0.22", "140.582, 426.123, -79.9826, 0.22", "140.475, 427.087, -81.5409, 0.59", "140.295, 428.15, -83.46, 0.88", "140.195, 428.498, -84.3038, 1.11", "140.153, 428.6, -84.5936, 1.11", "139.781, 429.325, -86.9142, 1.11", "139.769, 429.346, -86.9809, 1.11", "139.673, 429.482, -87.4592, 1.11", "138.932, 430.545, -91.0442, 0.37", "138.808, 430.755, -91.7942, 0.37" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "117.019, 351.42, -85.7781, 0.22", "116.606, 351.933, -85.7781, 0.22", "115.976, 352.716, -85.7781, 0.22", "115.908, 352.8, -85.7781, 0.44", "115.645, 353.127, -85.7781, 0.44", "115.537, 353.261, -85.7781, 0.44", "115.486, 353.324, -85.7781, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "114.221, 296.374, -82.6761, 0.22", "115.058, 296.411, -82.9468, 0.22", "116.269, 296.458, -83.3099, 0.22", "116.336, 296.46, -83.3296, 0.22", "117.876, 296.45, -83.7418, 0.22", "117.972, 296.448, -83.7662, 0.22", "119.565, 296.386, -84.1524, 0.22", "119.633, 296.38, -84.1714, 0.22", "120.153, 296.302, -84.3259, 1.03", "120.955, 296.141, -84.5442, 1.33", "121.021, 296.124, -84.5597, 1.33", "121.308, 296.047, -84.6161, 1.33", "122.494, 295.699, -84.8233, 0.37", "123.533, 295.409, -84.9573, 0.37", "124.045, 295.299, -85.0828, 0.37", "124.187, 295.283, -85.1308, 0.37", "125.163, 295.234, -85.5039, 0.29", "125.511, 295.247, -85.6627, 0.88", "125.958, 295.307, -85.8941, 1.03", "127.998, 295.862, -87.1161, 0.22", "128.815, 296.177, -87.6652, 0.22", "128.891, 296.214, -87.7253, 0.22", "129.554, 296.582, -88.3723, 0.22", "129.601, 296.61, -88.4202, 0.22", "130.335, 297.053, -89.2383, 0.22", "130.663, 297.239, -89.7664, 0.96", "131.586, 297.774, -91.4105, 0.22", "132.071, 298.063, -92.3294, 0.22", "132.283, 298.189, -92.7261, 1.03", "132.788, 298.488, -93.6738, 1.03", "134.846, 299.705, -97.6542, 0.22", "135.544, 300.139, -99.0012, 0.22", "136.073, 300.493, -100.128, 0.66", "136.631, 300.853, -101.184, 0.22", "136.66, 300.871, -101.234, 0.22", "137.5, 301.396, -102.524, 1.33", "137.54, 301.419, -102.58, 1.33", "139.594, 302.542, -105.514, 0.22", "141.032, 303.301, -107.498, 0.22", "141.398, 303.485, -107.985, 0.96", "143.2, 304.444, -109.989, 0.22", "143.255, 304.475, -110.043, 0.22", "143.638, 304.695, -110.379, 0.59", "143.698, 304.73, -110.423, 0.59", "146.188, 306.197, -112.267, 0.22", "148.208, 307.36, -113.665, 0.22", "149.218, 307.932, -114.259, 0.22", "149.771, 308.248, -114.586, 0.22", "150.339, 308.583, -114.926, 0.88", "150.395, 308.616, -114.958, 0.88" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "114.221, 296.374, -82.6761, 0.22", "114.574, 297.285, -82.294, 0.22", "114.643, 297.478, -82.2105, 0.59", "114.67, 297.553, -82.1781, 0.59", "115.014, 298.505, -81.7669, 0.22", "115.173, 298.945, -81.5767, 0.59", "115.333, 299.388, -81.3855, 0.59", "115.349, 299.456, -81.3457, 0.59" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "122.991, 340.607, -176.415, 0.59", "123.728, 344.015, -179.755, 0.59", "124.444, 348.132, -183.447, 0.22", "124.702, 349.942, -184.996, 0.88", "124.924, 351.808, -186.525, 1.18", "124.984, 352.428, -187.042, 1.18", "125.053, 353.406, -187.872, 0.22", "125.059, 355.55, -189.492, 0.22", "124.986, 356.191, -190.048, 0.66", "124.917, 356.632, -190.377, 0.88", "124.684, 357.939, -191.335, 0.88", "124.456, 359.118, -192.342, 0.15", "124.41, 359.346, -192.573, 0.15", "124.402, 359.436, -192.695, 0.15", "124.416, 359.88, -193.361, 0.15", "124.533, 360.439, -194.121, 0.88", "124.577, 360.555, -194.225, 0.88", "124.604, 360.609, -194.265, 0.88", "125.869, 363.034, -195.853, 0.22", "125.899, 363.091, -195.886, 0.22", "126.679, 364.534, -196.579, 0.22", "127.913, 366.818, -197.489, 0.22", "128.128, 367.222, -197.628, 0.88", "128.16, 367.281, -197.648, 0.88", "128.531, 368.062, -197.851, 0.88", "128.558, 368.123, -197.873, 0.88", "128.9, 369.168, -198.426, 1.62", "128.942, 369.344, -198.553, 1.62", "129.216, 370.693, -199.58, 0.22", "129.424, 371.8, -200.47, 0.22", "129.447, 371.945, -200.597, 0.59", "129.489, 372.32, -200.915, 0.59" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "122.991, 340.607, -176.415, 0.22", "124.304, 341.341, -176.015, 0.22", "126.382, 342.372, -175.201, 0.22", "126.591, 342.465, -175.112, 0.59", "126.684, 342.502, -175.072, 0.59", "128.883, 343.304, -174.168, 0.22", "128.946, 343.325, -174.143, 0.22", "129.855, 343.542, -173.755, 1.18", "130.165, 343.593, -173.55, 1.62", "130.644, 343.659, -173.19, 1.62", "131.657, 343.712, -172.311, 0.22", "131.7, 343.711, -172.268, 0.22", "132.424, 343.688, -171.387, 0.22", "134.187, 343.539, -168.727, 1.03", "134.6, 343.485, -168.02, 1.69", "135.547, 343.308, -166.327, 1.69", "135.604, 343.294, -166.222, 1.69", "137.053, 342.948, -163.814, 1.03", "137.967, 342.725, -162.434, 0.15", "138.018, 342.714, -162.373, 0.15", "138.8, 342.566, -161.4, 0.15", "138.898, 342.552, -161.284, 0.15", "139.884, 342.508, -160.152, 0.15", "139.934, 342.511, -160.099, 0.15", "141.122, 342.749, -158.837, 0.96", "142.443, 343.043, -157.355, 0.96", "142.48, 343.053, -157.308, 0.96", "143.14, 343.326, -156.127, 0.66", "143.329, 343.442, -155.644, 0.66", "143.347, 343.462, -155.568, 0.66", "143.528, 343.739, -154.574, 0.66", "143.539, 343.759, -154.507, 0.66", "144.128, 344.873, -150.899, 1.55", "144.136, 344.89, -150.842, 1.55", "144.754, 346.256, -146.305, 1.55", "144.763, 346.278, -146.24, 1.55", "144.926, 346.702, -145.076, 0.52", "145.282, 347.422, -143.26, 0.52", "145.314, 347.471, -143.155, 0.52", "145.576, 347.84, -142.434, 1.4", "146.368, 348.835, -140.908, 0.15", "146.392, 348.865, -140.862, 0.15", "146.9, 349.49, -139.903, 0.15", "147.062, 349.681, -139.702, 1.03", "147.101, 349.725, -139.663, 1.03", "147.2, 349.827, -139.605, 1.03" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "57.774, 317.341, -145.245, 0.22", "57.924, 317.875, -145.426, 0.22", "57.9464, 317.95, -145.451, 0.22", "58.3681, 319.4, -146.023, 0.22", "58.3856, 319.463, -146.048, 0.22", "58.5602, 320.345, -146.374, 0.22", "58.5702, 320.41, -146.399, 0.22", "58.5991, 320.976, -146.588, 0.22", "58.5866, 321.658, -146.807, 0.88", "58.5566, 322.215, -146.999, 1.11", "58.5079, 323.06, -147.271, 1.11", "58.4817, 323.607, -147.433, 0.22", "58.4695, 324.873, -147.78, 0.22", "58.4757, 326.491, -148.265, 0.22", "58.4843, 327.807, -148.66, 0.88", "58.4875, 328.568, -148.906, 1.25", "58.4978, 329.494, -149.214, 1.69", "58.5051, 330.662, -149.658, 1.69", "58.5233, 331.774, -150.137, 0.15", "58.5163, 332.742, -150.612, 0.15", "58.4684, 334.377, -151.488, 0.15", "58.4612, 334.516, -151.569, 0.74", "58.3604, 335.874, -152.433, 0.22", "58.3102, 336.684, -152.954, 0.22", "58.2922, 337.466, -153.415, 0.88", "58.2904, 337.588, -153.485, 0.88", "58.2745, 338.071, -153.763, 0.88", "58.2191, 338.6, -153.998, 0.22", "58.0704, 339.497, -154.246, 0.22", "58.0276, 339.699, -154.289, 0.44", "57.8382, 340.564, -154.515, 0.44", "57.6796, 341.267, -154.736, 0.15", "57.3236, 343.002, -155.314, 0.15", "57.203, 343.674, -155.525, 0.88", "57.0919, 344.357, -155.738, 0.88", "56.8544, 346.174, -156.27, 0.66", "56.8268, 346.451, -156.36, 0.15", "56.7483, 347.783, -156.779, 0.15", "56.7186, 349.192, -157.236, 0.15", "56.7169, 349.415, -157.305, 0.74", "56.7223, 350.14, -157.499, 0.74", "56.7368, 351.663, -157.802, 0.15", "56.7375, 353.208, -158.21, 0.15", "56.7205, 354.235, -158.536, 0.15", "56.7157, 354.443, -158.618, 0.59", "56.7141, 354.499, -158.641, 0.59", "56.6854, 355.187, -158.941, 0.59", "56.5975, 356.469, -159.505, 0.15", "56.4199, 358.259, -160.433, 0.15", "56.3298, 359.151, -160.88, 0.52", "56.277, 359.701, -161.115, 0.52", "56.25, 359.999, -161.216, 0.66", "56.1931, 360.541, -161.377, 0.15", "56.1823, 360.64, -161.397, 0.15", "56.0105, 362.104, -161.683, 0.15", "55.939, 362.762, -161.772, 0.88", "55.9209, 363.299, -161.856, 1.11", "55.9671, 364.404, -162.038, 1.03", "55.9767, 364.473, -162.049, 1.03", "56.0345, 364.774, -162.128, 0.15", "56.0557, 364.846, -162.155, 0.15", "56.3983, 366.0, -162.61, 0.15", "56.4124, 366.057, -162.627, 0.15", "56.521, 366.648, -162.729, 0.15", "56.6035, 367.37, -162.869, 0.44", "56.643, 368.022, -162.994, 0.44", "56.6486, 368.178, -163.023, 0.44", "56.6397, 369.308, -163.312, 0.44", "56.6181, 370.566, -163.669, 0.15", "56.6016, 371.198, -163.858, 0.88", "56.5784, 372.034, -164.103, 1.25", "56.5637, 372.458, -164.24, 1.25", "56.5349, 373.963, -164.744, 0.15", "56.5267, 374.574, -164.968, 0.15", "56.5234, 374.651, -164.996, 0.15", "56.4907, 375.249, -165.171, 0.15", "56.4866, 375.328, -165.188, 0.15", "56.4645, 376.193, -165.288, 0.15", "56.4624, 376.274, -165.288, 0.15", "56.4116, 377.024, -165.37, 0.15", "56.4061, 377.093, -165.383, 0.15", "56.286, 378.433, -165.742, 0.15", "56.2393, 378.914, -165.895, 0.81", "56.1804, 379.553, -166.122, 0.96", "56.062, 380.878, -166.665, 0.96", "56.0157, 381.552, -166.948, 0.15", "55.9561, 382.351, -167.263, 1.4", "55.9509, 382.417, -167.288, 1.4", "55.9199, 382.984, -167.469, 1.77", "55.8928, 384.233, -167.771, 0.22", "55.8658, 385.611, -167.95, 0.22", "55.8449, 386.044, -168.002, 0.59", "55.8364, 386.21, -168.017, 0.22", "55.8139, 386.662, -168.05, 0.22", "55.8086, 386.78, -168.075, 0.22", "55.8216, 387.43, -168.271, 0.22", "55.8486, 387.901, -168.444, 1.11", "55.9068, 388.573, -168.721, 1.55", "55.9635, 389.119, -168.956, 1.55", "56.187, 390.877, -169.706, 0.15", "56.4046, 392.407, -170.355, 0.15", "56.5857, 393.531, -170.833, 0.15", "56.6521, 393.993, -171.005, 0.44", "56.6599, 394.062, -171.027, 0.44", "56.7403, 395.07, -171.236, 0.44", "56.7444, 395.183, -171.247, 0.15", "56.7418, 395.295, -171.262, 0.15", "56.674, 396.959, -171.485, 0.15", "56.6687, 397.355, -171.528, 0.59", "56.6752, 398.079, -171.642, 0.66", "56.6963, 398.777, -171.77, 0.15", "56.7019, 398.896, -171.794, 0.15", "56.7889, 400.264, -172.067, 0.15", "56.9556, 401.904, -172.382, 0.15", "57.0761, 402.917, -172.59, 1.03", "57.1598, 403.568, -172.721, 1.33", "57.2298, 404.072, -172.852, 0.81", "57.2892, 404.493, -172.993, 0.15", "57.545, 405.96, -173.584, 0.15", "57.7023, 406.742, -173.932, 0.96", "57.8833, 407.557, -174.393, 1.18", "58.2001, 408.92, -175.329, 0.15", "58.2118, 408.967, -175.365, 0.15", "58.625, 410.591, -176.723, 0.15", "58.6383, 410.641, -176.771, 0.15", "59.0728, 412.242, -178.308, 0.15", "59.0953, 412.32, -178.388, 0.15" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "57.774, 317.341, -145.245, 0.15", "57.426, 317.792, -145.169, 0.15", "57.0643, 318.261, -145.091, 0.15", "56.4603, 319.044, -144.96, 0.52" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "46.4658, 312.273, -132.691, 0.22", "45.2805, 314.48, -137.304, 0.22", "45.0662, 314.879, -138.138, 0.22", "45.0502, 314.909, -138.2, 0.22", "44.6946, 315.571, -139.584, 0.22" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "46.4658, 312.273, -132.691, 1.4", "45.9741, 312.669, -132.773, 1.4", "45.5817, 312.97, -132.817, 1.62", "45.1268, 313.324, -132.864, 1.62", "44.8326, 313.555, -132.887, 1.55", "44.7597, 313.615, -132.892, 1.55", "43.8188, 314.398, -132.95, 0.22", "41.9996, 315.93, -133.026, 0.22", "41.8691, 316.035, -133.03, 0.22", "39.993, 317.482, -133.052, 0.22", "38.6043, 318.499, -133.043, 0.22", "37.9928, 318.922, -133.03, 0.22", "37.8704, 319.001, -133.027, 0.22", "36.5167, 319.887, -132.975, 0.22", "36.1468, 320.135, -132.949, 0.74", "35.5335, 320.579, -132.879, 0.74", "35.4701, 320.631, -132.871, 0.74", "35.19, 320.923, -132.83, 0.22", "33.731, 322.764, -132.638, 0.22", "33.2969, 323.447, -132.582, 0.74", "32.8924, 324.126, -132.539, 0.74", "32.6724, 324.51, -132.489, 0.15", "32.1021, 325.435, -132.299, 0.15", "31.8731, 325.775, -132.2, 0.44", "31.7731, 325.898, -132.154, 0.44", "31.387, 326.31, -131.95, 0.44", "30.1579, 327.343, -131.247, 0.15", "29.6898, 327.674, -130.969, 0.15", "29.2506, 327.94, -130.724, 1.11", "28.6088, 328.304, -130.376, 1.33", "27.4379, 328.941, -129.763, 0.15", "26.6197, 329.37, -129.372, 0.15", "26.4886, 329.441, -129.304, 0.15", "25.4701, 330.167, -128.681, 0.15", "25.2058, 330.423, -128.454, 0.81", "25.1223, 330.531, -128.362, 0.81", "24.7575, 331.134, -127.93, 0.81", "24.0051, 332.681, -126.94, 0.22", "23.5589, 333.745, -126.332, 0.22", "23.156, 334.88, -125.752, 0.88", "22.9726, 335.415, -125.507, 0.88", "22.6869, 336.265, -125.151, 0.15", "22.3368, 337.294, -124.795, 0.22", "22.0703, 337.971, -124.656, 0.22", "21.8829, 338.354, -124.592, 1.03", "21.4807, 339.08, -124.512, 1.33", "21.4266, 339.17, -124.499, 1.33", "21.0678, 339.702, -124.383, 1.33", "20.88, 339.942, -124.335, 0.22", "19.9809, 341.023, -124.136, 0.22", "19.8461, 341.18, -124.113, 0.52", "19.527, 341.558, -124.072, 0.52", "18.5907, 342.694, -123.968, 0.22", "17.7419, 343.724, -123.885, 0.22", "17.651, 343.834, -123.877, 0.22", "16.8598, 344.777, -123.808, 0.22", "16.1849, 345.59, -123.811, 0.22", "15.2385, 346.688, -123.913, 0.22", "14.8026, 347.175, -124.01, 1.11", "14.3014, 347.693, -124.147, 1.47", "13.9994, 347.974, -124.26, 1.47", "12.8161, 348.979, -124.826, 0.22", "11.8355, 349.723, -125.426, 0.22", "11.7799, 349.766, -125.466, 0.22", "10.9569, 350.446, -126.14, 0.22", "10.2308, 351.099, -126.762, 0.96", "9.89176, 351.449, -127.06, 0.96", "9.40243, 352.047, -127.442, 0.22", "8.99203, 352.67, -127.821, 0.22", "8.8123, 352.974, -127.971, 0.52", "8.4917, 353.579, -128.208, 0.52", "8.38949, 353.77, -128.261, 0.22", "8.00275, 354.455, -128.43, 0.22", "7.9595, 354.528, -128.443, 0.22", "7.36445, 355.435, -128.617, 0.22", "6.72782, 356.337, -128.777, 0.22", "6.67871, 356.402, -128.79, 0.22", "6.6277, 356.464, -128.809, 0.66", "6.49192, 356.627, -128.873, 0.66", "6.13798, 357.055, -129.056, 0.66", "6.04553, 357.164, -129.104, 0.66", "5.83059, 357.418, -129.224, 0.66", "5.1902, 358.164, -129.584, 0.22", "4.52297, 358.884, -130.083, 0.22", "4.41817, 358.98, -130.165, 0.22", "3.95169, 359.387, -130.561, 0.22", "3.51949, 359.802, -130.95, 0.88", "3.12223, 360.216, -131.29, 1.18", "2.16715, 361.321, -132.009, 0.22", "1.58727, 362.058, -132.443, 0.22", "1.29828, 362.496, -132.597, 0.37", "0.766382, 363.466, -132.617, 0.15", "0.340456, 364.319, -132.415, 1.11", "0.0663538, 364.961, -132.203, 1.11", "0.0374295, 365.035, -132.179, 1.11", "-0.383585, 366.2, -131.835, 0.15", "-0.84931, 367.455, -131.505, 0.15", "-0.998843, 367.853, -131.421, 0.22", "-1.70426, 369.82, -131.114, 0.22", "-2.07237, 370.975, -130.93, 0.22", "-2.34083, 371.945, -130.758, 1.11", "-2.51885, 372.76, -130.621, 1.33", "-2.58879, 373.374, -130.492, 0.81", "-2.5921, 373.458, -130.473, 0.81", "-2.47514, 374.579, -130.14, 0.81", "-2.28779, 375.334, -129.835, 1.18", "-2.22992, 375.523, -129.759, 1.18", "-1.83928, 376.676, -129.298, 0.52", "-1.69585, 377.088, -129.143, 1.11", "-1.37945, 378.041, -128.833, 1.92", "-0.863213, 379.663, -128.356, 0.29", "-0.661428, 380.471, -128.059, 0.29", "-0.575622, 380.94, -127.854, 0.59", "-0.568035, 381.004, -127.821, 0.59", "-0.525003, 381.796, -127.418, 0.59", "-0.53348, 382.305, -127.143, 0.29", "-0.603927, 383.799, -126.472, 0.29", "-0.641786, 384.597, -126.114, 0.29", "-0.679412, 385.214, -125.852, 0.88", "-0.714192, 385.748, -125.636, 0.88", "-0.85251, 387.446, -125.016, 0.22", "-1.00674, 389.394, -124.493, 0.22", "-1.01437, 389.461, -124.47, 0.52", "-1.0962, 389.887, -124.277, 0.37", "-1.31383, 390.587, -123.824, 0.22", "-1.62584, 391.237, -123.192, 0.22", "-2.01944, 391.781, -122.471, 0.88", "-3.35333, 393.264, -119.902, 0.15", "-3.50271, 393.419, -119.603, 0.15", "-4.10517, 393.967, -118.343, 0.15", "-4.64857, 394.367, -117.172, 1.18", "-4.95223, 394.554, -116.464, 1.18" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "59.0953, 412.32, -178.388, 0.22", "58.264, 412.951, -179.824, 0.22", "57.8181, 413.267, -180.472, 0.88", "57.4705, 413.507, -180.937, 0.88", "55.9072, 414.586, -183.027, 0.29", "55.5914, 414.804, -183.449, 1.03", "55.5511, 414.832, -183.503, 1.03", "54.8951, 415.158, -184.3, 1.25", "54.8513, 415.176, -184.352, 1.25" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "59.0953, 412.32, -178.388, 0.15", "59.6399, 412.983, -178.388, 0.15", "59.6848, 413.038, -178.388, 0.15", "59.8804, 413.276, -178.388, 1.03", "60.1632, 413.62, -178.388, 1.03" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "44.6946, 315.571, -139.584, 1.03", "44.5579, 316.0, -139.88, 1.03", "44.3467, 316.628, -140.312, 1.03", "43.835, 317.95, -141.142, 0.22", "43.2279, 319.432, -142.004, 0.22", "42.9111, 320.176, -142.417, 0.22", "42.5283, 321.032, -142.866, 0.22", "42.4404, 321.201, -142.949, 0.22", "41.7796, 322.306, -143.505, 0.22", "41.5622, 322.616, -143.642, 0.44", "41.5202, 322.667, -143.666, 0.44", "41.071, 323.133, -143.901, 0.44", "40.1134, 324.042, -144.303, 0.22", "39.4382, 324.617, -144.55, 0.29", "38.9342, 324.99, -144.729, 0.29", "38.4496, 325.302, -144.876, 0.22", "37.7026, 325.74, -145.069, 0.22", "37.2372, 325.975, -145.159, 0.74", "36.406, 326.343, -145.251, 0.74", "35.4986, 326.737, -145.31, 0.29", "34.6168, 327.115, -145.379, 0.29", "34.544, 327.148, -145.387, 0.29", "33.9055, 327.487, -145.491, 0.29", "33.6804, 327.614, -145.534, 0.29", "32.9634, 328.069, -145.667, 0.29", "32.9061, 328.113, -145.675, 0.29", "32.3881, 328.577, -145.786, 0.29", "31.8152, 329.174, -145.914, 1.11", "31.2658, 329.881, -146.038, 1.25", "30.9331, 330.354, -146.09, 0.22", "30.3104, 331.33, -146.123, 0.22", "29.9165, 331.975, -146.108, 0.22", "29.2755, 332.889, -146.03, 0.22", "28.515, 333.869, -145.92, 0.22", "28.0101, 334.493, -145.837, 0.88", "27.6004, 334.957, -145.764, 1.11", "27.5207, 335.037, -145.752, 0.22", "25.297, 337.286, -145.48, 0.22", "24.705, 337.902, -145.451, 0.81", "24.705, 337.902, -145.451, 0.81", "24.4868, 338.201, -145.475, 0.81", "24.1352, 338.827, -145.581, 0.22", "23.6756, 340.09, -145.919, 0.22", "23.5425, 341.011, -146.235, 0.22", "23.5343, 341.078, -146.257, 0.22", "23.3916, 342.173, -146.596, 0.22", "23.2479, 343.253, -146.914, 1.33", "23.0995, 344.329, -147.206, 1.47", "22.9006, 345.589, -147.547, 0.22", "22.644, 347.278, -147.966, 0.22", "22.5565, 347.89, -148.096, 0.22", "22.5386, 348.041, -148.118, 0.22", "22.4846, 348.626, -148.173, 0.22", "22.4764, 348.938, -148.203, 0.52", "22.4939, 349.52, -148.334, 0.52", "22.4986, 349.586, -148.356, 0.52", "22.5839, 350.544, -148.711, 0.52", "22.6694, 351.478, -149.065, 0.22", "22.836, 353.291, -149.858, 0.22", "22.9101, 354.127, -150.257, 0.44", "22.9134, 354.193, -150.288, 0.44", "22.9322, 355.061, -150.679, 0.44", "22.9018, 355.538, -150.856, 0.44", "22.79, 356.306, -151.115, 0.15", "22.7729, 356.371, -151.138, 0.15", "22.3426, 357.728, -151.578, 0.15", "22.318, 357.791, -151.599, 0.15", "21.6033, 359.256, -152.065, 0.15", "21.1422, 360.091, -152.441, 0.59", "20.7012, 360.773, -152.805, 0.59", "20.6622, 360.823, -152.837, 0.59", "20.2171, 361.267, -153.232, 0.59", "19.7506, 361.668, -153.634, 0.59", "18.2676, 362.718, -154.859, 0.15", "17.4572, 363.251, -155.47, 0.15", "16.7241, 363.705, -156.026, 0.15", "16.0361, 364.158, -156.504, 0.81", "15.4613, 364.574, -156.85, 1.18", "15.1376, 364.833, -156.996, 1.18", "15.0816, 364.89, -157.007, 1.18", "14.8528, 365.172, -157.042, 0.22", "14.1011, 366.301, -157.101, 0.22", "13.6788, 367.023, -157.12, 0.22", "13.6357, 367.107, -157.123, 0.22", "12.9399, 368.582, -157.2, 0.22", "12.8762, 368.72, -157.211, 0.22", "12.3441, 369.873, -157.317, 0.22", "12.069, 370.488, -157.385, 1.03", "11.7505, 371.207, -157.467, 1.47", "11.6067, 371.536, -157.505, 1.47", "11.3614, 372.095, -157.57, 0.15", "10.8851, 373.12, -157.678, 0.15", "10.7878, 373.313, -157.696, 0.15", "10.246, 374.289, -157.786, 0.15", "10.1412, 374.471, -157.809, 0.66", "10.0644, 374.602, -157.827, 0.66", "9.74589, 375.147, -157.909, 0.66", "9.71096, 375.206, -157.924, 0.66", "9.37716, 375.759, -158.101, 0.15", "8.94231, 376.456, -158.38, 0.15", "8.86394, 376.58, -158.446, 0.15", "8.61909, 377.038, -158.693, 0.15", "8.4107, 377.49, -158.953, 0.29", "8.38245, 377.557, -158.991, 0.29", "8.3353, 377.692, -159.059, 0.29", "8.02723, 378.715, -159.571, 0.15", "7.77421, 379.679, -159.938, 0.15", "7.58957, 380.442, -160.171, 0.15", "7.50806, 380.794, -160.254, 0.88", "7.36691, 381.427, -160.38, 0.88", "7.21845, 382.084, -160.478, 0.15", "6.76008, 384.146, -160.651, 0.15", "6.67808, 384.465, -160.681, 0.44", "6.56519, 384.832, -160.717, 0.59", "6.54039, 384.897, -160.725, 0.59", "6.32812, 385.369, -160.799, 0.59", "6.29222, 385.44, -160.812, 0.59", "5.8897, 386.164, -160.952, 0.15", "5.16367, 387.493, -161.166, 0.15", "4.9804, 387.868, -161.202, 0.44", "4.95206, 387.933, -161.204, 0.44", "4.6673, 388.67, -161.195, 0.44", "4.48535, 389.164, -161.191, 0.15", "4.4611, 389.23, -161.197, 0.15", "3.99723, 390.473, -161.487, 0.15", "3.97447, 390.539, -161.502, 0.15", "3.50004, 391.907, -161.794, 0.15", "3.24916, 392.616, -161.947, 0.88", "2.71927, 394.115, -162.237, 1.4", "2.62118, 394.396, -162.281, 1.4", "2.17051, 395.699, -162.445, 0.22", "1.66496, 397.21, -162.576, 0.22", "1.6403, 397.288, -162.579, 0.22", "1.17323, 398.841, -162.692, 0.22", "1.00392, 399.421, -162.758, 0.96", "0.815579, 400.142, -162.93, 1.25", "0.667951, 400.752, -163.129, 1.25", "0.654226, 400.818, -163.15, 1.25", "0.233456, 402.985, -163.845, 0.15", "0.220917, 403.053, -163.867, 0.15", "-0.561344, 407.296, -165.235, 0.15", "-0.587575, 407.439, -165.278, 0.15", "-0.984122, 409.597, -165.858, 0.15", "-1.15074, 410.468, -166.068, 0.96", "-1.16548, 410.536, -166.079, 0.96", "-1.24168, 410.836, -166.143, 1.25", "-1.27734, 410.958, -166.177, 1.25", "-1.38201, 411.305, -166.271, 1.25", "-1.66805, 412.227, -166.507, 0.15", "-2.75207, 415.878, -167.288, 0.15", "-3.2809, 417.715, -167.654, 0.15", "-3.32211, 417.86, -167.681, 0.74", "-3.50984, 418.524, -167.792, 0.74", "-3.64903, 419.015, -167.862, 0.74", "-4.16531, 420.844, -168.03, 0.15", "-4.2774, 421.228, -168.053, 0.74", "-4.33415, 421.411, -168.052, 0.74", "-4.57977, 422.065, -168.036, 0.74", "-4.70825, 422.367, -168.023, 0.74", "-4.99677, 423.021, -167.99, 0.74", "-5.27145, 423.613, -167.956, 0.15", "-5.29886, 423.677, -167.952, 0.15", "-6.04821, 425.617, -167.896, 0.15", "-6.10175, 425.762, -167.89, 0.15", "-6.73028, 427.578, -167.805, 0.15", "-6.97422, 428.331, -167.769, 0.74", "-7.1891, 429.037, -167.738, 0.74", "-7.30935, 429.458, -167.717, 0.74", "-7.51558, 430.227, -167.668, 0.15", "-8.11007, 432.431, -167.519, 0.15", "-8.23994, 432.888, -167.484, 0.74", "-8.40466, 433.466, -167.443, 0.74", "-8.54735, 433.981, -167.425, 0.74", "-8.72068, 434.684, -167.422, 0.15", "-8.92342, 435.698, -167.477, 0.15", "-8.95129, 435.861, -167.489, 0.15", "-9.18787, 437.044, -167.57, 0.15", "-9.3722, 437.851, -167.624, 1.18", "-9.51996, 438.422, -167.66, 1.62", "-9.71982, 439.121, -167.7, 1.62", "-10.0778, 440.143, -167.743, 0.15", "-10.6722, 441.601, -167.73, 0.15", "-10.8511, 441.977, -167.709, 0.15", "-11.0746, 442.405, -167.671, 0.15", "-11.1503, 442.543, -167.652, 0.15", "-11.9391, 443.951, -167.406, 0.15", "-12.8877, 445.624, -167.065, 0.15", "-13.6619, 446.997, -166.691, 0.15", "-13.6941, 447.057, -166.673, 0.15", "-14.1583, 447.971, -166.374, 0.15", "-14.4778, 448.691, -166.155, 1.69", "-14.821, 449.587, -165.897, 1.69", "-15.1512, 450.598, -165.651, 0.15", "-15.5946, 452.108, -165.333, 0.15", "-15.6125, 452.175, -165.322, 0.15", "-16.2256, 455.036, -164.876, 0.15", "-16.3072, 455.499, -164.803, 0.15", "-16.4156, 456.262, -164.695, 0.15", "-16.4837, 456.831, -164.628, 1.18", "-16.5696, 457.69, -164.513, 1.18", "-16.7638, 459.853, -164.199, 0.15", "-16.8788, 461.21, -163.923, 0.15", "-16.9295, 461.736, -163.803, 1.18", "-16.9616, 461.944, -163.756, 1.18", "-17.1346, 462.721, -163.562, 1.18", "-17.1682, 462.829, -163.533, 1.18", "-17.72, 464.24, -163.101, 0.15", "-17.7468, 464.302, -163.079, 0.15", "-18.7896, 466.557, -162.185, 0.15", "-19.1953, 467.398, -161.847, 0.52", "-19.4874, 467.954, -161.617, 0.52", "-19.8797, 468.655, -161.331, 0.52", "-20.1412, 469.07, -161.175, 0.96", "-20.4531, 469.53, -161.017, 0.96", "-20.5293, 469.645, -160.992, 0.96", "-20.7959, 470.1, -160.973, 0.96", "-20.8294, 470.162, -160.975, 0.96", "-21.1316, 470.761, -161.023, 0.15", "-21.8129, 472.18, -161.145, 0.15", "-22.5937, 473.87, -161.285, 0.15", "-22.8886, 474.537, -161.357, 1.11", "-23.1534, 475.16, -161.435, 1.47", "-23.4239, 475.794, -161.525, 1.47", "-23.5819, 476.178, -161.586, 0.15", "-24.209, 477.733, -161.839, 0.15", "-24.438, 478.32, -161.928, 0.52", "-24.4611, 478.385, -161.935, 0.52", "-24.6152, 478.898, -161.985, 0.52", "-24.7909, 479.612, -162.076, 0.15", "-25.0695, 481.019, -162.28, 0.15", "-25.0764, 481.089, -162.289, 0.15", "-25.1128, 481.757, -162.341, 0.88", "-25.1414, 482.669, -162.4, 1.25", "-25.1609, 483.664, -162.456, 0.15", "-25.1621, 483.737, -162.46, 0.15", "-25.2978, 486.816, -162.603, 0.15", "-25.4031, 488.368, -162.663, 0.15", "-25.4501, 488.921, -162.679, 0.74", "-25.5176, 489.573, -162.686, 0.74", "-25.565, 489.942, -162.681, 0.15", "-26.058, 492.956, -162.576, 0.15", "-26.0744, 493.024, -162.572, 0.15", "-26.1053, 493.128, -162.564, 0.44", "-26.1442, 493.25, -162.55, 0.15", "-26.1758, 493.342, -162.53, 0.15", "-26.6238, 494.563, -162.142, 0.15", "-26.6824, 494.707, -162.08, 0.15", "-27.3287, 496.288, -161.398, 0.15", "-27.35, 496.34, -161.376, 0.15", "-27.737, 497.264, -160.991, 0.59", "-27.9198, 497.686, -160.82, 0.74" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "44.6946, 315.571, -139.584, 0.22", "45.9397, 315.272, -139.698, 0.22", "46.0879, 315.237, -139.712, 0.22", "46.9423, 315.032, -139.79, 0.22" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-4.95223, 394.554, -116.464, 0.15", "-6.27255, 395.492, -113.5, 0.15", "-7.16161, 396.138, -111.594, 0.15", "-7.18731, 396.158, -111.544, 0.15", "-7.88605, 396.738, -110.226, 0.74", "-8.09992, 396.928, -109.833, 0.74", "-8.82682, 397.597, -108.569, 0.44", "-9.00653, 397.785, -108.329, 0.22", "-9.5006, 398.338, -107.758, 0.22", "-9.95328, 398.859, -107.282, 1.03", "-10.2742, 399.224, -107.059, 0.88", "-10.7149, 399.717, -106.825, 0.88", "-11.0115, 400.042, -106.718, 0.22", "-11.5086, 400.561, -106.567, 0.22", "-11.5776, 400.631, -106.548, 0.22", "-13.3608, 402.417, -106.189, 0.22", "-13.495, 402.553, -106.165, 0.44", "-13.5527, 402.611, -106.155, 0.44", "-14.0391, 403.101, -106.084, 0.44", "-14.6349, 403.695, -106.015, 0.22", "-15.4042, 404.414, -105.936, 0.22", "-15.5995, 404.586, -105.909, 0.22", "-16.6306, 405.447, -105.754, 0.22", "-16.7482, 405.537, -105.736, 0.22", "-17.4257, 406.006, -105.641, 0.22", "-18.6247, 406.762, -105.399, 0.22", "-19.3109, 407.179, -105.208, 0.74", "-19.7583, 407.467, -105.06, 1.18", "-20.4774, 407.994, -104.726, 1.18", "-20.5588, 408.06, -104.681, 1.18", "-21.5244, 409.067, -104.096, 0.22", "-21.9282, 409.606, -103.815, 0.22", "-22.4546, 410.412, -103.447, 0.22", "-23.3116, 411.887, -102.756, 0.22", "-23.3567, 411.976, -102.714, 0.22", "-24.2977, 413.982, -101.818, 0.22", "-24.7587, 415.062, -101.387, 1.11", "-24.9899, 415.646, -101.157, 1.62", "-25.4088, 416.788, -100.728, 1.62", "-25.736, 417.769, -100.401, 0.44", "-26.0037, 418.647, -100.127, 0.44", "-26.2018, 419.414, -99.8759, 0.22", "-26.3334, 419.989, -99.7052, 0.59", "-26.3997, 420.303, -99.6196, 0.59", "-26.5139, 420.886, -99.4324, 0.15", "-26.7586, 422.148, -98.9596, 0.15", "-26.9691, 423.249, -98.5058, 0.22", "-27.069, 423.747, -98.2828, 1.33", "-27.2255, 424.491, -97.9442, 1.69", "-27.5818, 426.114, -97.195, 0.22", "-27.8669, 427.326, -96.5909, 0.22", "-28.0671, 428.191, -96.1608, 0.22", "-28.2241, 428.921, -95.8186, 0.74", "-28.3849, 429.774, -95.4295, 0.74", "-28.4011, 429.883, -95.3831, 0.74", "-28.5879, 431.506, -94.6651, 0.22", "-28.7099, 432.511, -93.9297, 0.22", "-28.7722, 432.921, -93.5276, 0.88", "-28.8488, 433.306, -93.0862, 0.96", "-28.9553, 433.731, -92.4924, 0.96", "-29.285, 434.817, -90.7394, 0.22", "-29.8353, 436.275, -88.0343, 0.15", "-29.9898, 436.658, -87.3083, 0.52", "-30.0733, 436.861, -86.9334, 0.52", "-30.3077, 437.414, -85.9027, 0.88", "-30.3254, 437.449, -85.8306, 0.88", "-30.2566, 438.991, -86.2069, 0.22", "-30.1171, 440.729, -87.1174, 0.22", "-30.1112, 440.798, -87.1587, 0.22", "-30.0971, 440.936, -87.2498, 0.52", "-30.016, 441.784, -87.8586, 0.22", "-29.9217, 442.934, -88.6299, 0.22", "-29.8934, 443.619, -89.0088, 0.81", "-29.9283, 444.008, -89.3371, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-4.95223, 394.554, -116.464, 0.15", "-5.58409, 393.152, -118.646, 0.15", "-5.76404, 392.753, -119.268, 0.81" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_155", "dend_84", "dend_0", "dend_127", "dend_85", "dend_81", "dend_1", "dend_129", "dend_128", "dend_114", "dend_86", "dend_83", "dend_82", "dend_58", "dend_2", "dend_131", "dend_130", "dend_116", "dend_115", "dend_93", "dend_87", "dend_74", "dend_59", "dend_50", "dend_3", "dend_132", "dend_118", "dend_117", "dend_101", "dend_94", "dend_89", "dend_88", "dend_76", "dend_75", "dend_71", "dend_60", "dend_52", "dend_51", "dend_49", "dend_4", "dend_144", "dend_133", "dend_120", "dend_119", "dend_103", "dend_102", "dend_96", "dend_95", "dend_92", "dend_91", "dend_90", "dend_80", "dend_77", "dend_73", "dend_72", "dend_64", "dend_61", "dend_54", "dend_53", "dend_32", "dend_5", "dend_146", "dend_145", "dend_141", "dend_134", "dend_126", "dend_121", "dend_113", "dend_104", "dend_100", "dend_97", "dend_79", "dend_78", "dend_70", "dend_65", "dend_63", "dend_62", "dend_57", "dend_56", "dend_55", "dend_34", "dend_33", "dend_27", "dend_6", "dend_148", "dend_147", "dend_143", "dend_142", "dend_140", "dend_135", "dend_125", "dend_122", "dend_106", "dend_105", "dend_99", "dend_98", "dend_67", "dend_66", "dend_38", "dend_35", "dend_29", "dend_28", "dend_26", "dend_7", "dend_150", "dend_149", "dend_137", "dend_136", "dend_124", "dend_123", "dend_108", "dend_107", "dend_69", "dend_68", "dend_44", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_21", "dend_8", "dend_154", "dend_151", "dend_139", "dend_138", "dend_112", "dend_109", "dend_46", "dend_45", "dend_41", "dend_40", "dend_25", "dend_22", "dend_16", "dend_9", "dend_153", "dend_152", "dend_111", "dend_110", "dend_48", "dend_47", "dend_43", "dend_42", "dend_24", "dend_23", "dend_18", "dend_17", "dend_13", "dend_10", "dend_20", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_155", "dend_84", "dend_0", "dend_127", "dend_85", "dend_81", "dend_1", "dend_129", "dend_128", "dend_114", "dend_86", "dend_83", "dend_82", "dend_58", "dend_2", "dend_131", "dend_130", "dend_116", "dend_115", "dend_93", "dend_87", "dend_74", "dend_59", "dend_50", "dend_3", "dend_132", "dend_118", "dend_117", "dend_101", "dend_94", "dend_89", "dend_88", "dend_76", "dend_75", "dend_71", "dend_60", "dend_52", "dend_51", "dend_49", "dend_4", "dend_144", "dend_133", "dend_120", "dend_119", "dend_103", "dend_102", "dend_96", "dend_95", "dend_92", "dend_91", "dend_90", "dend_80", "dend_77", "dend_73", "dend_72", "dend_64", "dend_61", "dend_54", "dend_53", "dend_32", "dend_5", "dend_146", "dend_145", "dend_141", "dend_134", "dend_126", "dend_121", "dend_113", "dend_104", "dend_100", "dend_97", "dend_79", "dend_78", "dend_70", "dend_65", "dend_63", "dend_62", "dend_57", "dend_56", "dend_55", "dend_34", "dend_33", "dend_27", "dend_6", "dend_148", "dend_147", "dend_143", "dend_142", "dend_140", "dend_135", "dend_125", "dend_122", "dend_106", "dend_105", "dend_99", "dend_98", "dend_67", "dend_66", "dend_38", "dend_35", "dend_29", "dend_28", "dend_26", "dend_7", "dend_150", "dend_149", "dend_137", "dend_136", "dend_124", "dend_123", "dend_108", "dend_107", "dend_69", "dend_68", "dend_44", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_21", "dend_8", "dend_154", "dend_151", "dend_139", "dend_138", "dend_112", "dend_109", "dend_46", "dend_45", "dend_41", "dend_40", "dend_25", "dend_22", "dend_16", "dend_9", "dend_153", "dend_152", "dend_111", "dend_110", "dend_48", "dend_47", "dend_43", "dend_42", "dend_24", "dend_23", "dend_18", "dend_17", "dend_13", "dend_10", "dend_20", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_155", "dend_84", "dend_0", "axon_0", "dend_127", "dend_85", "dend_81", "dend_1", "axon_1", "dend_129", "dend_128", "dend_114", "dend_86", "dend_83", "dend_82", "dend_58", "dend_2", "dend_131", "dend_130", "dend_116", "dend_115", "dend_93", "dend_87", "dend_74", "dend_59", "dend_50", "dend_3", "dend_132", "dend_118", "dend_117", "dend_101", "dend_94", "dend_89", "dend_88", "dend_76", "dend_75", "dend_71", "dend_60", "dend_52", "dend_51", "dend_49", "dend_4", "dend_144", "dend_133", "dend_120", "dend_119", "dend_103", "dend_102", "dend_96", "dend_95", "dend_92", "dend_91", "dend_90", "dend_80", "dend_77", "dend_73", "dend_72", "dend_64", "dend_61", "dend_54", "dend_53", "dend_32", "dend_5", "dend_146", "dend_145", "dend_141", "dend_134", "dend_126", "dend_121", "dend_113", "dend_104", "dend_100", "dend_97", "dend_79", "dend_78", "dend_70", "dend_65", "dend_63", "dend_62", "dend_57", "dend_56", "dend_55", "dend_34", "dend_33", "dend_27", "dend_6", "dend_148", "dend_147", "dend_143", "dend_142", "dend_140", "dend_135", "dend_125", "dend_122", "dend_106", "dend_105", "dend_99", "dend_98", "dend_67", "dend_66", "dend_38", "dend_35", "dend_29", "dend_28", "dend_26", "dend_7", "dend_150", "dend_149", "dend_137", "dend_136", "dend_124", "dend_123", "dend_108", "dend_107", "dend_69", "dend_68", "dend_44", "dend_39", "dend_37", "dend_36", "dend_31", "dend_30", "dend_21", "dend_8", "dend_154", "dend_151", "dend_139", "dend_138", "dend_112", "dend_109", "dend_46", "dend_45", "dend_41", "dend_40", "dend_25", "dend_22", "dend_16", "dend_9", "dend_153", "dend_152", "dend_111", "dend_110", "dend_48", "dend_47", "dend_43", "dend_42", "dend_24", "dend_23", "dend_18", "dend_17", "dend_13", "dend_10", "dend_20", "dend_19", "dend_15", "dend_14", "dend_12", "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_155" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_84" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_127" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_81" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_114" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_86" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_131" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_93" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_87" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_74" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_89" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_76" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_75" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_71" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_120" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_119" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_92" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_90" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_80" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_77" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_141" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_121" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_113" ]
  }, {
    "name" : "OneSecGrp_SectionRef_82",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_84",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_86",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_87",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_95",
    "groups" : [ ],
    "sections" : [ "dend_122" ]
  }, {
    "name" : "OneSecGrp_SectionRef_98",
    "groups" : [ ],
    "sections" : [ "dend_99" ]
  }, {
    "name" : "OneSecGrp_SectionRef_104",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_105",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_107",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_108",
    "groups" : [ ],
    "sections" : [ "dend_150" ]
  }, {
    "name" : "OneSecGrp_SectionRef_116",
    "groups" : [ ],
    "sections" : [ "dend_69" ]
  }, {
    "name" : "OneSecGrp_SectionRef_117",
    "groups" : [ ],
    "sections" : [ "dend_68" ]
  }, {
    "name" : "OneSecGrp_SectionRef_120",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_123",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_124",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_131",
    "groups" : [ ],
    "sections" : [ "dend_109" ]
  }, {
    "name" : "OneSecGrp_SectionRef_132",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_133",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_136",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_137",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_144",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_146",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_148",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_149",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_150",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_153",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_156",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_158",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_85" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_82" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_83" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_116" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_118" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_128" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_117" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_115" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_129" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_130" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_106",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_85",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_132" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_133" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_144" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_145" ]
  }, {
    "name" : "OneSecGrp_SectionRef_122",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_126" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_134" ]
  }, {
    "name" : "OneSecGrp_SectionRef_92",
    "groups" : [ ],
    "sections" : [ "dend_140" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_146" ]
  }, {
    "name" : "OneSecGrp_SectionRef_89",
    "groups" : [ ],
    "sections" : [ "dend_147" ]
  }, {
    "name" : "OneSecGrp_SectionRef_93",
    "groups" : [ ],
    "sections" : [ "dend_135" ]
  }, {
    "name" : "OneSecGrp_SectionRef_77",
    "groups" : [ ],
    "sections" : [ "dend_70" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_111",
    "groups" : [ ],
    "sections" : [ "dend_136" ]
  }, {
    "name" : "OneSecGrp_SectionRef_78",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_88",
    "groups" : [ ],
    "sections" : [ "dend_148" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_72" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_73" ]
  }, {
    "name" : "OneSecGrp_SectionRef_110",
    "groups" : [ ],
    "sections" : [ "dend_137" ]
  }, {
    "name" : "OneSecGrp_SectionRef_109",
    "groups" : [ ],
    "sections" : [ "dend_149" ]
  }, {
    "name" : "OneSecGrp_SectionRef_101",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_128",
    "groups" : [ ],
    "sections" : [ "dend_139" ]
  }, {
    "name" : "OneSecGrp_SectionRef_129",
    "groups" : [ ],
    "sections" : [ "dend_138" ]
  }, {
    "name" : "OneSecGrp_SectionRef_100",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_102",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_83",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_79",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_101" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_102" ]
  }, {
    "name" : "OneSecGrp_SectionRef_118",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_125",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_90",
    "groups" : [ ],
    "sections" : [ "dend_143" ]
  }, {
    "name" : "OneSecGrp_SectionRef_80",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_103",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_119",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_81",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_135",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_139",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_94",
    "groups" : [ ],
    "sections" : [ "dend_125" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_103" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_94" ]
  }, {
    "name" : "OneSecGrp_SectionRef_138",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_91",
    "groups" : [ ],
    "sections" : [ "dend_142" ]
  }, {
    "name" : "OneSecGrp_SectionRef_134",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_152",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_151",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_157",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_95" ]
  }, {
    "name" : "OneSecGrp_SectionRef_147",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_121",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_145",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_96" ]
  }, {
    "name" : "OneSecGrp_SectionRef_72",
    "groups" : [ ],
    "sections" : [ "dend_104" ]
  }, {
    "name" : "OneSecGrp_SectionRef_127",
    "groups" : [ ],
    "sections" : [ "dend_151" ]
  }, {
    "name" : "OneSecGrp_SectionRef_73",
    "groups" : [ ],
    "sections" : [ "dend_100" ]
  }, {
    "name" : "OneSecGrp_SectionRef_96",
    "groups" : [ ],
    "sections" : [ "dend_106" ]
  }, {
    "name" : "OneSecGrp_SectionRef_141",
    "groups" : [ ],
    "sections" : [ "dend_152" ]
  }, {
    "name" : "OneSecGrp_SectionRef_115",
    "groups" : [ ],
    "sections" : [ "dend_107" ]
  }, {
    "name" : "OneSecGrp_SectionRef_114",
    "groups" : [ ],
    "sections" : [ "dend_108" ]
  }, {
    "name" : "OneSecGrp_SectionRef_97",
    "groups" : [ ],
    "sections" : [ "dend_105" ]
  }, {
    "name" : "OneSecGrp_SectionRef_140",
    "groups" : [ ],
    "sections" : [ "dend_153" ]
  }, {
    "name" : "OneSecGrp_SectionRef_126",
    "groups" : [ ],
    "sections" : [ "dend_154" ]
  }, {
    "name" : "OneSecGrp_SectionRef_130",
    "groups" : [ ],
    "sections" : [ "dend_112" ]
  }, {
    "name" : "OneSecGrp_SectionRef_76",
    "groups" : [ ],
    "sections" : [ "dend_78" ]
  }, {
    "name" : "OneSecGrp_SectionRef_74",
    "groups" : [ ],
    "sections" : [ "dend_97" ]
  }, {
    "name" : "OneSecGrp_SectionRef_99",
    "groups" : [ ],
    "sections" : [ "dend_98" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_88" ]
  }, {
    "name" : "OneSecGrp_SectionRef_75",
    "groups" : [ ],
    "sections" : [ "dend_79" ]
  }, {
    "name" : "OneSecGrp_SectionRef_155",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_159",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_154",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_112",
    "groups" : [ ],
    "sections" : [ "dend_124" ]
  }, {
    "name" : "OneSecGrp_SectionRef_113",
    "groups" : [ ],
    "sections" : [ "dend_123" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_91" ]
  }, {
    "name" : "OneSecGrp_SectionRef_143",
    "groups" : [ ],
    "sections" : [ "dend_110" ]
  }, {
    "name" : "OneSecGrp_SectionRef_142",
    "groups" : [ ],
    "sections" : [ "dend_111" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67", "dend_68", "dend_69", "dend_70", "dend_71", "dend_72", "dend_73", "dend_74", "dend_75", "dend_76", "dend_77", "dend_78", "dend_79", "dend_80", "dend_81", "dend_82", "dend_83", "dend_84", "dend_85", "dend_86", "dend_87", "dend_88", "dend_89", "dend_90", "dend_91", "dend_92", "dend_93", "dend_94", "dend_95", "dend_96", "dend_97", "dend_98", "dend_99", "dend_100", "dend_101", "dend_102", "dend_103", "dend_104", "dend_105", "dend_106", "dend_107", "dend_108", "dend_109", "dend_110", "dend_111", "dend_112", "dend_113", "dend_114", "dend_115", "dend_116", "dend_117", "dend_118", "dend_119", "dend_120", "dend_121", "dend_122", "dend_123", "dend_124", "dend_125", "dend_126", "dend_127", "dend_128", "dend_129", "dend_130", "dend_131", "dend_132", "dend_133", "dend_134", "dend_135", "dend_136", "dend_137", "dend_138", "dend_139", "dend_140", "dend_141", "dend_142", "dend_143", "dend_144", "dend_145", "dend_146", "dend_147", "dend_148", "dend_149", "dend_150", "dend_151", "dend_152", "dend_153", "dend_154", "dend_155" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_155", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_84", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_127", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_85", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_81", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_129", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_128", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_114", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_86", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_83", "dend_82", "dend_82", "dend_82", "dend_82", "dend_82", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_131", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_130", "dend_116", "dend_116", "dend_116", "dend_116", "dend_116", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_115", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_93", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_87", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_74", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_132", "dend_118", "dend_118", "dend_118", "dend_118", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_117", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_101", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_94", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_89", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_88", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_76", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_75", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_71", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_4", "dend_4", "dend_4", "dend_4", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_144", "dend_133", "dend_133", "dend_133", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_120", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_119", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_103", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_102", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_96", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_95", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_92", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_91", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_90", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_80", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_77", "dend_73", "dend_73", "dend_73", "dend_73", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_72", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_146", "dend_145", "dend_145", "dend_145", "dend_145", "dend_145", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_141", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_134", "dend_126", "dend_126", "dend_126", "dend_126", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_121", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_113", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_104", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_100", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_97", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_79", "dend_78", "dend_78", "dend_78", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_70", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_148", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_147", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_143", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_142", "dend_140", "dend_140", "dend_140", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_135", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_125", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_122", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_106", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_105", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_99", "dend_98", "dend_98", "dend_98", "dend_98", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_150", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_149", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_137", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_136", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_124", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_123", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_108", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_107", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_69", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_68", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_154", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_151", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_139", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_138", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_112", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_109", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_153", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_152", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_111", "dend_110", "dend_110", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_11", "dend_11" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L6_MC_87e499e11e_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_155, id: dend_155, parent: soma_0
create dend_155
public dend_155
// Section: dend_84, id: dend_84, parent: soma_0
create dend_84
public dend_84
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_127, id: dend_127, parent: dend_84
create dend_127
public dend_127
// Section: dend_85, id: dend_85, parent: dend_84
create dend_85
public dend_85
// Section: dend_81, id: dend_81, parent: dend_0
create dend_81
public dend_81
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_129, id: dend_129, parent: dend_127
create dend_129
public dend_129
// Section: dend_128, id: dend_128, parent: dend_127
create dend_128
public dend_128
// Section: dend_114, id: dend_114, parent: dend_85
create dend_114
public dend_114
// Section: dend_86, id: dend_86, parent: dend_85
create dend_86
public dend_86
// Section: dend_83, id: dend_83, parent: dend_81
create dend_83
public dend_83
// Section: dend_82, id: dend_82, parent: dend_81
create dend_82
public dend_82
// Section: dend_58, id: dend_58, parent: dend_1
create dend_58
public dend_58
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_131, id: dend_131, parent: dend_129
create dend_131
public dend_131
// Section: dend_130, id: dend_130, parent: dend_129
create dend_130
public dend_130
// Section: dend_116, id: dend_116, parent: dend_114
create dend_116
public dend_116
// Section: dend_115, id: dend_115, parent: dend_114
create dend_115
public dend_115
// Section: dend_93, id: dend_93, parent: dend_86
create dend_93
public dend_93
// Section: dend_87, id: dend_87, parent: dend_86
create dend_87
public dend_87
// Section: dend_74, id: dend_74, parent: dend_58
create dend_74
public dend_74
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_50, id: dend_50, parent: dend_2
create dend_50
public dend_50
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_132, id: dend_132, parent: dend_131
create dend_132
public dend_132
// Section: dend_118, id: dend_118, parent: dend_116
create dend_118
public dend_118
// Section: dend_117, id: dend_117, parent: dend_116
create dend_117
public dend_117
// Section: dend_101, id: dend_101, parent: dend_93
create dend_101
public dend_101
// Section: dend_94, id: dend_94, parent: dend_93
create dend_94
public dend_94
// Section: dend_89, id: dend_89, parent: dend_87
create dend_89
public dend_89
// Section: dend_88, id: dend_88, parent: dend_87
create dend_88
public dend_88
// Section: dend_76, id: dend_76, parent: dend_74
create dend_76
public dend_76
// Section: dend_75, id: dend_75, parent: dend_74
create dend_75
public dend_75
// Section: dend_71, id: dend_71, parent: dend_59
create dend_71
public dend_71
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_3
create dend_49
public dend_49
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_144, id: dend_144, parent: dend_132
create dend_144
public dend_144
// Section: dend_133, id: dend_133, parent: dend_132
create dend_133
public dend_133
// Section: dend_120, id: dend_120, parent: dend_118
create dend_120
public dend_120
// Section: dend_119, id: dend_119, parent: dend_118
create dend_119
public dend_119
// Section: dend_103, id: dend_103, parent: dend_101
create dend_103
public dend_103
// Section: dend_102, id: dend_102, parent: dend_101
create dend_102
public dend_102
// Section: dend_96, id: dend_96, parent: dend_94
create dend_96
public dend_96
// Section: dend_95, id: dend_95, parent: dend_94
create dend_95
public dend_95
// Section: dend_92, id: dend_92, parent: dend_89
create dend_92
public dend_92
// Section: dend_91, id: dend_91, parent: dend_89
create dend_91
public dend_91
// Section: dend_90, id: dend_90, parent: dend_89
create dend_90
public dend_90
// Section: dend_80, id: dend_80, parent: dend_76
create dend_80
public dend_80
// Section: dend_77, id: dend_77, parent: dend_76
create dend_77
public dend_77
// Section: dend_73, id: dend_73, parent: dend_71
create dend_73
public dend_73
// Section: dend_72, id: dend_72, parent: dend_71
create dend_72
public dend_72
// Section: dend_64, id: dend_64, parent: dend_60
create dend_64
public dend_64
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_32, id: dend_32, parent: dend_4
create dend_32
public dend_32
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_146, id: dend_146, parent: dend_144
create dend_146
public dend_146
// Section: dend_145, id: dend_145, parent: dend_144
create dend_145
public dend_145
// Section: dend_141, id: dend_141, parent: dend_133
create dend_141
public dend_141
// Section: dend_134, id: dend_134, parent: dend_133
create dend_134
public dend_134
// Section: dend_126, id: dend_126, parent: dend_120
create dend_126
public dend_126
// Section: dend_121, id: dend_121, parent: dend_120
create dend_121
public dend_121
// Section: dend_113, id: dend_113, parent: dend_103
create dend_113
public dend_113
// Section: dend_104, id: dend_104, parent: dend_103
create dend_104
public dend_104
// Section: dend_100, id: dend_100, parent: dend_96
create dend_100
public dend_100
// Section: dend_97, id: dend_97, parent: dend_96
create dend_97
public dend_97
// Section: dend_79, id: dend_79, parent: dend_77
create dend_79
public dend_79
// Section: dend_78, id: dend_78, parent: dend_77
create dend_78
public dend_78
// Section: dend_70, id: dend_70, parent: dend_64
create dend_70
public dend_70
// Section: dend_65, id: dend_65, parent: dend_64
create dend_65
public dend_65
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_54
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_27, id: dend_27, parent: dend_5
create dend_27
public dend_27
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_148, id: dend_148, parent: dend_146
create dend_148
public dend_148
// Section: dend_147, id: dend_147, parent: dend_146
create dend_147
public dend_147
// Section: dend_143, id: dend_143, parent: dend_141
create dend_143
public dend_143
// Section: dend_142, id: dend_142, parent: dend_141
create dend_142
public dend_142
// Section: dend_140, id: dend_140, parent: dend_134
create dend_140
public dend_140
// Section: dend_135, id: dend_135, parent: dend_134
create dend_135
public dend_135
// Section: dend_125, id: dend_125, parent: dend_121
create dend_125
public dend_125
// Section: dend_122, id: dend_122, parent: dend_121
create dend_122
public dend_122
// Section: dend_106, id: dend_106, parent: dend_104
create dend_106
public dend_106
// Section: dend_105, id: dend_105, parent: dend_104
create dend_105
public dend_105
// Section: dend_99, id: dend_99, parent: dend_97
create dend_99
public dend_99
// Section: dend_98, id: dend_98, parent: dend_97
create dend_98
public dend_98
// Section: dend_67, id: dend_67, parent: dend_65
create dend_67
public dend_67
// Section: dend_66, id: dend_66, parent: dend_65
create dend_66
public dend_66
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_6
create dend_26
public dend_26
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_150, id: dend_150, parent: dend_148
create dend_150
public dend_150
// Section: dend_149, id: dend_149, parent: dend_148
create dend_149
public dend_149
// Section: dend_137, id: dend_137, parent: dend_135
create dend_137
public dend_137
// Section: dend_136, id: dend_136, parent: dend_135
create dend_136
public dend_136
// Section: dend_124, id: dend_124, parent: dend_122
create dend_124
public dend_124
// Section: dend_123, id: dend_123, parent: dend_122
create dend_123
public dend_123
// Section: dend_108, id: dend_108, parent: dend_106
create dend_108
public dend_108
// Section: dend_107, id: dend_107, parent: dend_106
create dend_107
public dend_107
// Section: dend_69, id: dend_69, parent: dend_67
create dend_69
public dend_69
// Section: dend_68, id: dend_68, parent: dend_67
create dend_68
public dend_68
// Section: dend_44, id: dend_44, parent: dend_38
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_21, id: dend_21, parent: dend_7
create dend_21
public dend_21
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_154, id: dend_154, parent: dend_150
create dend_154
public dend_154
// Section: dend_151, id: dend_151, parent: dend_150
create dend_151
public dend_151
// Section: dend_139, id: dend_139, parent: dend_137
create dend_139
public dend_139
// Section: dend_138, id: dend_138, parent: dend_137
create dend_138
public dend_138
// Section: dend_112, id: dend_112, parent: dend_108
create dend_112
public dend_112
// Section: dend_109, id: dend_109, parent: dend_108
create dend_109
public dend_109
// Section: dend_46, id: dend_46, parent: dend_44
create dend_46
public dend_46
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_8
create dend_16
public dend_16
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_153, id: dend_153, parent: dend_151
create dend_153
public dend_153
// Section: dend_152, id: dend_152, parent: dend_151
create dend_152
public dend_152
// Section: dend_111, id: dend_111, parent: dend_109
create dend_111
public dend_111
// Section: dend_110, id: dend_110, parent: dend_109
create dend_110
public dend_110
// Section: dend_48, id: dend_48, parent: dend_46
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_9
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_155, dend_84, dend_0, axon_0, dend_127, dend_85, dend_81, dend_1, axon_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_155]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_84]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_127]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_81]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_114]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_86]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_131]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_93]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_87]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_74]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_89]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_76]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_75]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_71]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_120]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_119]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_92]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_90]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_80]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_77]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_141]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_82
// Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_84
// Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_86
// Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_87
// Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_122]}
objref OneSecGrp_SectionRef_95
// Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_99]}
objref OneSecGrp_SectionRef_98
// Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_104
// Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_105
// Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_107
// Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_150]}
objref OneSecGrp_SectionRef_108
// Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_69]}
objref OneSecGrp_SectionRef_116
// Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_68]}
objref OneSecGrp_SectionRef_117
// Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_120
// Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_123
// Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_124
// Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_109]}
objref OneSecGrp_SectionRef_131
// Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_132
// Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_133
// Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_136
// Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_137
// Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_144
// Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_146
// Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_148
// Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_149
// Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_150
// Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_153
// Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_156
// Group: {name=OneSecGrp_SectionRef_158, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_158
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_85]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_82]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_83]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_116]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_118]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_128]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_117]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_115]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_129]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_130]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_106
// Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_85
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_132]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_133]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_144]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_145]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_122
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_126]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_134]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_140]}
objref OneSecGrp_SectionRef_92
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_146]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_147]}
objref OneSecGrp_SectionRef_89
// Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_135]}
objref OneSecGrp_SectionRef_93
// Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_70]}
objref OneSecGrp_SectionRef_77
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_136]}
objref OneSecGrp_SectionRef_111
// Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_78
// Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_148]}
objref OneSecGrp_SectionRef_88
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_72]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_73]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_137]}
objref OneSecGrp_SectionRef_110
// Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_149]}
objref OneSecGrp_SectionRef_109
// Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_101
// Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_139]}
objref OneSecGrp_SectionRef_128
// Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_138]}
objref OneSecGrp_SectionRef_129
// Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_100
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_102
// Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_83
// Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_79
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_101]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_102]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_118
// Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_125
// Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_143]}
objref OneSecGrp_SectionRef_90
// Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_80
// Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_103
// Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_119
// Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_81
// Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_135
// Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_139
// Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_125]}
objref OneSecGrp_SectionRef_94
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_103]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_94]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_138
// Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_142]}
objref OneSecGrp_SectionRef_91
// Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_134
// Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_152
// Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_151
// Group: {name=OneSecGrp_SectionRef_157, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_157
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_95]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_147
// Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_121
// Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_145
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_96]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_104]}
objref OneSecGrp_SectionRef_72
// Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_151]}
objref OneSecGrp_SectionRef_127
// Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
objref OneSecGrp_SectionRef_73
// Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_106]}
objref OneSecGrp_SectionRef_96
// Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_152]}
objref OneSecGrp_SectionRef_141
// Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_107]}
objref OneSecGrp_SectionRef_115
// Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_108]}
objref OneSecGrp_SectionRef_114
// Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_105]}
objref OneSecGrp_SectionRef_97
// Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_153]}
objref OneSecGrp_SectionRef_140
// Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_154]}
objref OneSecGrp_SectionRef_126
// Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_112]}
objref OneSecGrp_SectionRef_130
// Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_78]}
objref OneSecGrp_SectionRef_76
// Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_97]}
objref OneSecGrp_SectionRef_74
// Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_98]}
objref OneSecGrp_SectionRef_99
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_88]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_79]}
objref OneSecGrp_SectionRef_75
// Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_155
// Group: {name=OneSecGrp_SectionRef_159, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_159
// Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_154
// Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_124]}
objref OneSecGrp_SectionRef_112
// Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_123]}
objref OneSecGrp_SectionRef_113
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_91]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_110]}
objref OneSecGrp_SectionRef_143
// Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_111]}
objref OneSecGrp_SectionRef_142
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152, dend_153, dend_154, dend_155], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_116, dend_116, dend_116, dend_116, dend_116, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_118, dend_118, dend_118, dend_118, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_4, dend_4, dend_4, dend_4, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_133, dend_133, dend_133, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_126, dend_126, dend_126, dend_126, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_140, dend_140, dend_140, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_155(0), soma_0(0.4500005799210318)
    connect dend_84(0), soma_0(0.4500005799210318)
    connect dend_0(0), soma_0(0.4500005799210318)
    connect axon_0(0), soma_0(1.0)
    connect dend_127(0), dend_84(1.0)
    connect dend_85(0), dend_84(1.0)
    connect dend_81(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_129(0), dend_127(1.0)
    connect dend_128(0), dend_127(1.0)
    connect dend_114(0), dend_85(1.0)
    connect dend_86(0), dend_85(1.0)
    connect dend_83(0), dend_81(1.0)
    connect dend_82(0), dend_81(1.0)
    connect dend_58(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_131(0), dend_129(1.0)
    connect dend_130(0), dend_129(1.0)
    connect dend_116(0), dend_114(1.0)
    connect dend_115(0), dend_114(1.0)
    connect dend_93(0), dend_86(1.0)
    connect dend_87(0), dend_86(1.0)
    connect dend_74(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_50(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_132(0), dend_131(1.0)
    connect dend_118(0), dend_116(1.0)
    connect dend_117(0), dend_116(1.0)
    connect dend_101(0), dend_93(1.0)
    connect dend_94(0), dend_93(1.0)
    connect dend_89(0), dend_87(1.0)
    connect dend_88(0), dend_87(1.0)
    connect dend_76(0), dend_74(1.0)
    connect dend_75(0), dend_74(1.0)
    connect dend_71(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_144(0), dend_132(1.0)
    connect dend_133(0), dend_132(1.0)
    connect dend_120(0), dend_118(1.0)
    connect dend_119(0), dend_118(1.0)
    connect dend_103(0), dend_101(1.0)
    connect dend_102(0), dend_101(1.0)
    connect dend_96(0), dend_94(1.0)
    connect dend_95(0), dend_94(1.0)
    connect dend_92(0), dend_89(1.0)
    connect dend_91(0), dend_89(1.0)
    connect dend_90(0), dend_89(1.0)
    connect dend_80(0), dend_76(1.0)
    connect dend_77(0), dend_76(1.0)
    connect dend_73(0), dend_71(1.0)
    connect dend_72(0), dend_71(1.0)
    connect dend_64(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_32(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_146(0), dend_144(1.0)
    connect dend_145(0), dend_144(1.0)
    connect dend_141(0), dend_133(1.0)
    connect dend_134(0), dend_133(1.0)
    connect dend_126(0), dend_120(1.0)
    connect dend_121(0), dend_120(1.0)
    connect dend_113(0), dend_103(1.0)
    connect dend_104(0), dend_103(1.0)
    connect dend_100(0), dend_96(1.0)
    connect dend_97(0), dend_96(1.0)
    connect dend_79(0), dend_77(1.0)
    connect dend_78(0), dend_77(1.0)
    connect dend_70(0), dend_64(1.0)
    connect dend_65(0), dend_64(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_57(0), dend_54(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_27(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_148(0), dend_146(1.0)
    connect dend_147(0), dend_146(1.0)
    connect dend_143(0), dend_141(1.0)
    connect dend_142(0), dend_141(1.0)
    connect dend_140(0), dend_134(1.0)
    connect dend_135(0), dend_134(1.0)
    connect dend_125(0), dend_121(1.0)
    connect dend_122(0), dend_121(1.0)
    connect dend_106(0), dend_104(1.0)
    connect dend_105(0), dend_104(1.0)
    connect dend_99(0), dend_97(1.0)
    connect dend_98(0), dend_97(1.0)
    connect dend_67(0), dend_65(1.0)
    connect dend_66(0), dend_65(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_150(0), dend_148(1.0)
    connect dend_149(0), dend_148(1.0)
    connect dend_137(0), dend_135(1.0)
    connect dend_136(0), dend_135(1.0)
    connect dend_124(0), dend_122(1.0)
    connect dend_123(0), dend_122(1.0)
    connect dend_108(0), dend_106(1.0)
    connect dend_107(0), dend_106(1.0)
    connect dend_69(0), dend_67(1.0)
    connect dend_68(0), dend_67(1.0)
    connect dend_44(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_21(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_154(0), dend_150(1.0)
    connect dend_151(0), dend_150(1.0)
    connect dend_139(0), dend_137(1.0)
    connect dend_138(0), dend_137(1.0)
    connect dend_112(0), dend_108(1.0)
    connect dend_109(0), dend_108(1.0)
    connect dend_46(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_153(0), dend_151(1.0)
    connect dend_152(0), dend_151(1.0)
    connect dend_111(0), dend_109(1.0)
    connect dend_110(0), dend_109(1.0)
    connect dend_48(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.83638, 12.3318, -1.26703, 2.94939 ) }
    soma_0 { pt3dadd( -2.55054, 11.1277, -1.1402, 4.81305 ) }
    soma_0 { pt3dadd( -2.2647, 9.92366, -1.01338, 6.57471 ) }
    soma_0 { pt3dadd( -1.97886, 8.71959, -0.886552, 7.67573 ) }
    soma_0 { pt3dadd( -1.69302, 7.51553, -0.759726, 8.48432 ) }
    soma_0 { pt3dadd( -1.40719, 6.31146, -0.6329, 9.36598 ) }
    soma_0 { pt3dadd( -1.12135, 5.10739, -0.506075, 10.0986 ) }
    soma_0 { pt3dadd( -0.835506, 3.90333, -0.379249, 10.7023 ) }
    soma_0 { pt3dadd( -0.549666, 2.69926, -0.252424, 11.2902 ) }
    soma_0 { pt3dadd( -0.263826, 1.4952, -0.125598, 11.5615 ) }
    soma_0 { pt3dadd( 0.0220138, 0.291133, 0.00122739, 11.5342 ) }
    soma_0 { pt3dadd( 0.307854, -0.912932, 0.128053, 11.2102 ) }
    soma_0 { pt3dadd( 0.593693, -2.117, 0.254879, 11.0503 ) }
    soma_0 { pt3dadd( 0.879533, -3.32106, 0.381704, 10.841 ) }
    soma_0 { pt3dadd( 1.16537, -4.52513, 0.50853, 10.1133 ) }
    soma_0 { pt3dadd( 1.45121, -5.72919, 0.635355, 8.61794 ) }
    soma_0 { pt3dadd( 1.73705, -6.93326, 0.762181, 6.75639 ) }
    soma_0 { pt3dadd( 2.02289, -8.13732, 0.889006, 5.11821 ) }
    soma_0 { pt3dadd( 2.30873, -9.34139, 1.01583, 4.09257 ) }
    soma_0 { pt3dadd( 2.59457, -10.5455, 1.14266, 3.47113 ) }
    soma_0 { pt3dadd( 2.88041, -11.7495, 1.26948, 2.10111 ) }
    // Section: dend_155, id: dend_155, parent: soma_0 (entry count 21/100)
    dend_155 { pt3dclear() }
    dend_155 { pt3dadd( 4.37091, -8.89172, 3.20881, 1.03 ) }
    dend_155 { pt3dadd( 4.93809, -9.76281, 3.95198, 1.03 ) }
    dend_155 { pt3dadd( 5.42628, -10.4569, 4.65593, 1.03 ) }
    dend_155 { pt3dadd( 5.78649, -10.9214, 5.15013, 1.11 ) }
    dend_155 { pt3dadd( 6.313, -11.5456, 5.91289, 0.88 ) }
    dend_155 { pt3dadd( 6.60265, -11.871, 6.33178, 0.88 ) }
    dend_155 { pt3dadd( 7.76993, -13.0909, 7.93186, 0.44 ) }
    dend_155 { pt3dadd( 8.14754, -13.4348, 8.48485, 0.44 ) }
    dend_155 { pt3dadd( 8.42055, -13.6346, 8.87376, 0.44 ) }
    dend_155 { pt3dadd( 9.03227, -14.0007, 9.59259, 0.44 ) }
    dend_155 { pt3dadd( 9.29421, -14.1481, 9.80437, 0.44 ) }
    dend_155 { pt3dadd( 9.77137, -14.3995, 10.0485, 0.44 ) }
    dend_155 { pt3dadd( 10.2239, -14.6338, 10.1792, 0.96 ) }
    dend_155 { pt3dadd( 10.4114, -14.7416, 10.2361, 1.55 ) }
    dend_155 { pt3dadd( 11.2199, -15.2609, 10.4625, 1.55 ) }
    dend_155 { pt3dadd( 11.9537, -15.7666, 10.6321, 0.74 ) }
    dend_155 { pt3dadd( 12.5383, -16.2022, 10.777, 0.74 ) }
    dend_155 { pt3dadd( 13.3714, -16.8871, 10.9944, 0.44 ) }
    dend_155 { pt3dadd( 13.4841, -16.9825, 11.0343, 0.44 ) }
    dend_155 { pt3dadd( 14.0886, -17.5101, 11.2887, 0.44 ) }
    dend_155 { pt3dadd( 14.4637, -17.8709, 11.4734, 0.81 ) }
    dend_155 { pt3dadd( 14.8546, -18.297, 11.7238, 0.81 ) }
    dend_155 { pt3dadd( 15.0446, -18.5857, 11.9659, 1.03 ) }
    dend_155 { pt3dadd( 15.4737, -19.464, 12.8008, 0.44 ) }
    dend_155 { pt3dadd( 15.5828, -19.8714, 13.2815, 0.44 ) }
    dend_155 { pt3dadd( 15.6497, -20.5161, 14.1462, 0.44 ) }
    dend_155 { pt3dadd( 15.6377, -21.0382, 14.8592, 0.66 ) }
    dend_155 { pt3dadd( 15.45, -22.6158, 17.0642, 0.59 ) }
    dend_155 { pt3dadd( 15.4058, -22.8379, 17.3728, 1.33 ) }
    dend_155 { pt3dadd( 15.0423, -24.1143, 19.0866, 0.29 ) }
    dend_155 { pt3dadd( 15.028, -24.1563, 19.1443, 0.29 ) }
    dend_155 { pt3dadd( 14.8581, -24.6356, 19.7755, 0.29 ) }
    dend_155 { pt3dadd( 14.8417, -24.6922, 19.8305, 0.29 ) }
    dend_155 { pt3dadd( 14.8251, -24.8445, 19.8983, 0.44 ) }
    dend_155 { pt3dadd( 14.8345, -24.9891, 19.9421, 0.44 ) }
    dend_155 { pt3dadd( 14.9627, -25.5917, 20.0259, 0.44 ) }
    dend_155 { pt3dadd( 15.1253, -26.2883, 20.1418, 0.44 ) }
    dend_155 { pt3dadd( 15.1977, -26.5669, 20.1953, 0.44 ) }
    dend_155 { pt3dadd( 15.3697, -27.1946, 20.438, 0.37 ) }
    dend_155 { pt3dadd( 15.5623, -27.8583, 20.8065, 0.74 ) }
    dend_155 { pt3dadd( 15.7203, -28.3523, 21.1528, 1.25 ) }
    dend_155 { pt3dadd( 15.8377, -28.6909, 21.4522, 1.33 ) }
    dend_155 { pt3dadd( 15.8554, -28.7401, 21.4997, 1.33 ) }
    dend_155 { pt3dadd( 16.354, -30.0912, 22.8621, 1.33 ) }
    dend_155 { pt3dadd( 16.3722, -30.1411, 22.9088, 1.33 ) }
    dend_155 { pt3dadd( 16.4919, -30.5413, 23.3812, 1.55 ) }
    dend_155 { pt3dadd( 16.5836, -30.9434, 23.8893, 1.77 ) }
    dend_155 { pt3dadd( 16.6464, -31.3726, 24.4748, 1.77 ) }
    dend_155 { pt3dadd( 16.69, -31.9294, 25.273, 1.11 ) }
    dend_155 { pt3dadd( 16.7006, -32.492, 26.0836, 0.66 ) }
    dend_155 { pt3dadd( 16.6939, -34.4172, 29.2738, 0.44 ) }
    dend_155 { pt3dadd( 16.6899, -34.6752, 29.7393, 0.88 ) }
    dend_155 { pt3dadd( 16.6464, -35.7303, 31.7433, 0.52 ) }
    dend_155 { pt3dadd( 16.608, -36.2666, 32.8313, 1.11 ) }
    dend_155 { pt3dadd( 16.5873, -36.3935, 33.1075, 1.62 ) }
    dend_155 { pt3dadd( 16.2133, -37.758, 36.2382, 0.44 ) }
    dend_155 { pt3dadd( 16.1501, -37.9577, 36.655, 1.03 ) }
    dend_155 { pt3dadd( 16.0862, -38.1339, 37.0175, 1.03 ) }
    dend_155 { pt3dadd( 16.0361, -38.2495, 37.2364, 1.03 ) }
    dend_155 { pt3dadd( 15.5568, -39.2708, 38.868, 0.37 ) }
    dend_155 { pt3dadd( 15.4541, -39.5296, 39.2436, 1.18 ) }
    dend_155 { pt3dadd( 15.2843, -39.9776, 39.7992, 1.62 ) }
    dend_155 { pt3dadd( 15.2271, -40.1736, 40.0406, 1.77 ) }
    dend_155 { pt3dadd( 15.2021, -40.3073, 40.2033, 1.77 ) }
    dend_155 { pt3dadd( 15.0092, -41.9884, 42.1654, 0.22 ) }
    dend_155 { pt3dadd( 14.948, -43.0433, 43.3155, 0.22 ) }
    dend_155 { pt3dadd( 14.9452, -43.0882, 43.3701, 0.22 ) }
    dend_155 { pt3dadd( 14.9282, -43.3511, 43.7537, 0.22 ) }
    dend_155 { pt3dadd( 14.9048, -43.8818, 44.6123, 0.66 ) }
    dend_155 { pt3dadd( 14.8985, -43.9958, 44.7934, 1.03 ) }
    dend_155 { pt3dadd( 14.8784, -44.4141, 45.4162, 1.33 ) }
    dend_155 { pt3dadd( 14.786, -45.9381, 47.5227, 0.15 ) }
    dend_155 { pt3dadd( 14.7518, -47.2554, 49.2641, 1.4 ) }
    dend_155 { pt3dadd( 14.7421, -47.9806, 50.2415, 0.29 ) }
    dend_155 { pt3dadd( 14.753, -48.646, 51.1281, 0.29 ) }
    dend_155 { pt3dadd( 14.7782, -49.1752, 51.8333, 0.29 ) }
    dend_155 { pt3dadd( 14.798, -49.3951, 52.1185, 1.03 ) }
    dend_155 { pt3dadd( 14.8079, -49.7019, 52.3662, 1.03 ) }
    // Section: dend_84, id: dend_84, parent: soma_0 (entry count 99/100)
    dend_84 { pt3dclear() }
    dend_84 { pt3dadd( 3.12091, -12.2017, 0.388809, 1.99 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_84 { pt3dadd( 3.12091, -12.2017, 0.388809, 1.99 ) }
    dend_84 { pt3dadd( 3.07096, -13.8914, 0.388809, 1.99 ) }
    dend_84 { pt3dadd( 3.05945, -15.2214, 0.388809, 2.14 ) }
    dend_84 { pt3dadd( 3.062, -16.5344, 0.467243, 2.36 ) }
    dend_84 { pt3dadd( 3.09612, -18.2379, 0.617163, 2.65 ) }
    dend_84 { pt3dadd( 3.12569, -19.2794, 0.719251, 2.87 ) }
    dend_84 { pt3dadd( 3.15783, -20.0853, 0.80972, 2.87 ) }
    dend_84 { pt3dadd( 3.2323, -21.3562, 0.970066, 2.65 ) }
    dend_84 { pt3dadd( 3.38993, -23.483, 1.26257, 2.14 ) }
    dend_84 { pt3dadd( 3.52683, -25.1752, 1.48471, 2.14 ) }
    dend_84 { pt3dadd( 3.67575, -27.0747, 1.72158, 2.06 ) }
    dend_84 { pt3dadd( 3.67984, -27.147, 1.72931, 2.06 ) }
    dend_84 { pt3dadd( 3.71375, -28.5266, 1.77927, 2.06 ) }
    dend_84 { pt3dadd( 3.71241, -28.5965, 1.77575, 2.06 ) }
    dend_84 { pt3dadd( 3.61803, -30.4865, 1.48194, 2.21 ) }
    dend_84 { pt3dadd( 3.61284, -30.5656, 1.46752, 2.21 ) }
    dend_84 { pt3dadd( 3.56, -31.5799, 1.25248, 2.21 ) }
    dend_84 { pt3dadd( 3.50842, -33.36, 0.840376, 2.21 ) }
    dend_84 { pt3dadd( 3.50066, -34.1567, 0.68885, 2.28 ) }
    dend_84 { pt3dadd( 3.5111, -35.4238, 0.486548, 2.14 ) }
    dend_84 { pt3dadd( 3.55008, -36.7589, 0.318559, 2.21 ) }
    dend_84 { pt3dadd( 3.62415, -38.3747, 0.176565, 2.21 ) }
    dend_84 { pt3dadd( 3.73434, -40.2914, 0.164513, 2.21 ) }
    dend_84 { pt3dadd( 3.86247, -42.3265, 0.311515, 2.21 ) }
    dend_84 { pt3dadd( 3.86762, -42.3966, 0.319231, 2.21 ) }
    dend_84 { pt3dadd( 3.97011, -43.7088, 0.510543, 2.21 ) }
    dend_84 { pt3dadd( 4.07361, -45.4079, 0.817874, 2.21 ) }
    dend_84 { pt3dadd( 4.13281, -47.2511, 1.2751, 2.36 ) }
    dend_84 { pt3dadd( 4.13522, -47.7282, 1.41231, 2.5 ) }
    dend_84 { pt3dadd( 4.06207, -49.3386, 1.84964, 1.47 ) }
    dend_84 { pt3dadd( 3.96301, -50.2798, 2.11103, 1.47 ) }
    dend_84 { pt3dadd( 3.79254, -51.0742, 2.33274, 1.47 ) }
    dend_84 { pt3dadd( 3.39116, -52.2693, 2.64177, 1.47 ) }
    dend_84 { pt3dadd( 3.35916, -52.3421, 2.65526, 1.47 ) }
    dend_84 { pt3dadd( 2.85699, -53.2928, 2.82987, 1.77 ) }
    dend_84 { pt3dadd( 2.34708, -54.1041, 2.97737, 1.92 ) }
    dend_84 { pt3dadd( 1.75089, -55.0673, 3.15246, 1.92 ) }
    dend_84 { pt3dadd( 1.71943, -55.1322, 3.16209, 1.92 ) }
    dend_84 { pt3dadd( 1.27033, -56.2988, 3.27876, 1.92 ) }
    dend_84 { pt3dadd( 1.24353, -56.3886, 3.28973, 1.92 ) }
    dend_84 { pt3dadd( 1.23348, -56.4599, 3.30037, 1.92 ) }
    dend_84 { pt3dadd( 1.21963, -57.4435, 3.46901, 1.69 ) }
    dend_84 { pt3dadd( 1.42206, -58.6159, 3.69829, 1.03 ) }
    dend_84 { pt3dadd( 1.45044, -58.691, 3.71743, 1.03 ) }
    dend_84 { pt3dadd( 1.76762, -59.2399, 3.874, 1.47 ) }
    dend_84 { pt3dadd( 2.24561, -59.9515, 4.07823, 1.47 ) }
    dend_84 { pt3dadd( 2.3751, -60.1277, 4.12516, 1.47 ) }
    dend_84 { pt3dadd( 3.09, -61.0371, 4.3416, 1.47 ) }
    dend_84 { pt3dadd( 4.16694, -62.3834, 4.66419, 1.47 ) }
    dend_84 { pt3dadd( 4.72899, -63.1235, 4.81625, 1.47 ) }
    dend_84 { pt3dadd( 4.85924, -63.3138, 4.84708, 1.47 ) }
    dend_84 { pt3dadd( 5.42725, -64.2823, 4.96731, 1.77 ) }
    dend_84 { pt3dadd( 5.76489, -64.8796, 5.0288, 1.77 ) }
    dend_84 { pt3dadd( 5.80998, -64.9687, 5.03396, 1.77 ) }
    dend_84 { pt3dadd( 6.42484, -66.414, 5.03396, 1.77 ) }
    dend_84 { pt3dadd( 6.91209, -67.6714, 5.03396, 1.77 ) }
    dend_84 { pt3dadd( 7.16103, -68.3396, 5.03396, 2.06 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 57/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -1.47909, 12.0883, -1.92119, 3.46 ) }
    dend_0 { pt3dadd( -1.47909, 12.0883, -1.92119, 3.46 ) }
    dend_0 { pt3dadd( -1.77333, 13.5053, -2.09788, 3.46 ) }
    dend_0 { pt3dadd( -2.15236, 15.521, -2.30879, 3.46 ) }
    dend_0 { pt3dadd( -2.16369, 15.5898, -2.31493, 3.46 ) }
    dend_0 { pt3dadd( -2.44316, 17.401, -2.46459, 3.46 ) }
    dend_0 { pt3dadd( -2.67377, 19.1033, -2.60811, 3.46 ) }
    dend_0 { pt3dadd( -2.91435, 21.4431, -2.80408, 3.46 ) }
    dend_0 { pt3dadd( -3.02732, 23.5954, -2.9785, 3.46 ) }
    dend_0 { pt3dadd( -3.0308, 25.3717, -3.1039, 3.46 ) }
    dend_0 { pt3dadd( -3.02854, 25.4423, -3.10775, 3.46 ) }
    dend_0 { pt3dadd( -2.95013, 26.5224, -3.14033, 2.8 ) }
    dend_0 { pt3dadd( -2.79156, 27.9054, -3.18826, 2.8 ) }
    dend_0 { pt3dadd( -2.55334, 29.3355, -3.24563, 2.8 ) }
    dend_0 { pt3dadd( -2.31252, 30.5616, -3.29902, 2.8 ) }
    dend_0 { pt3dadd( -2.02589, 31.9655, -3.35738, 3.02 ) }
    dend_0 { pt3dadd( -1.76026, 33.361, -3.40299, 3.02 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 74/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.88041, -11.7495, 1.26948, 0.578727 ) }
    axon_0 { pt3dadd( 6.34505, -26.3439, 1.26948, 0.578727 ) }
    axon_0 { pt3dadd( 9.80969, -40.9383, 1.26948, 0.578727 ) }
    // Section: dend_127, id: dend_127, parent: dend_84 (entry count 77/100)
    dend_127 { pt3dclear() }
    dend_127 { pt3dadd( 7.16103, -68.3396, 5.03396, 1.25 ) }
    dend_127 { pt3dadd( 7.96986, -68.6874, 5.0802, 1.25 ) }
    dend_127 { pt3dadd( 8.92442, -69.1186, 5.12688, 1.25 ) }
    dend_127 { pt3dadd( 9.16136, -69.2384, 5.13681, 1.25 ) }
    dend_127 { pt3dadd( 10.3243, -69.9195, 5.17952, 0.96 ) }
    dend_127 { pt3dadd( 10.4145, -69.979, 5.18236, 0.96 ) }
    dend_127 { pt3dadd( 11.56, -70.8265, 5.21423, 0.96 ) }
    dend_127 { pt3dadd( 11.6147, -70.8713, 5.21423, 0.96 ) }
    dend_127 { pt3dadd( 12.1801, -71.4002, 5.21423, 0.81 ) }
    dend_127 { pt3dadd( 12.6769, -71.945, 5.20649, 0.81 ) }
    dend_127 { pt3dadd( 13.2299, -72.6615, 5.18824, 0.81 ) }
    dend_127 { pt3dadd( 13.5793, -73.1778, 5.17053, 1.18 ) }
    dend_127 { pt3dadd( 13.9338, -73.8568, 5.14155, 0.66 ) }
    dend_127 { pt3dadd( 14.2051, -74.4586, 5.11307, 0.88 ) }
    dend_127 { pt3dadd( 14.4026, -75.0583, 5.08139, 0.74 ) }
    dend_127 { pt3dadd( 14.4194, -75.1389, 5.07678, 0.74 ) }
    dend_127 { pt3dadd( 14.4455, -75.8185, 5.03959, 0.74 ) }
    dend_127 { pt3dadd( 14.3992, -76.4738, 5.00791, 0.52 ) }
    dend_127 { pt3dadd( 14.3561, -76.7031, 4.99919, 0.52 ) }
    dend_127 { pt3dadd( 14.2442, -77.1498, 4.98873, 0.74 ) }
    dend_127 { pt3dadd( 14.2162, -77.2254, 4.98873, 0.74 ) }
    dend_127 { pt3dadd( 13.989, -77.7771, 5.09103, 0.59 ) }
    dend_127 { pt3dadd( 13.9345, -77.9101, 5.13852, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_127 { pt3dadd( 13.8503, -78.2103, 5.32101, 0.59 ) }
    dend_127 { pt3dadd( 13.8424, -78.2691, 5.36308, 0.59 ) }
    dend_127 { pt3dadd( 13.8309, -78.924, 5.88081, 0.59 ) }
    dend_127 { pt3dadd( 13.9515, -80.081, 6.79446, 0.44 ) }
    dend_127 { pt3dadd( 14.0542, -80.4871, 7.10608, 0.44 ) }
    dend_127 { pt3dadd( 14.3369, -81.3027, 7.69773, 0.59 ) }
    dend_127 { pt3dadd( 14.5413, -81.7176, 7.97076, 0.74 ) }
    dend_127 { pt3dadd( 14.5746, -81.7715, 8.00219, 0.74 ) }
    dend_127 { pt3dadd( 14.9774, -82.2312, 8.28679, 0.74 ) }
    dend_127 { pt3dadd( 15.4426, -82.6645, 8.52824, 0.37 ) }
    dend_127 { pt3dadd( 15.5025, -82.712, 8.55945, 0.37 ) }
    dend_127 { pt3dadd( 16.1143, -83.1119, 8.85318, 0.37 ) }
    dend_127 { pt3dadd( 16.1774, -83.1449, 8.89106, 0.37 ) }
    dend_127 { pt3dadd( 17.3499, -83.6885, 9.64282, 0.44 ) }
    dend_127 { pt3dadd( 17.5154, -83.7462, 9.77918, 0.44 ) }
    dend_127 { pt3dadd( 17.6175, -83.7813, 9.88747, 0.44 ) }
    dend_127 { pt3dadd( 17.7587, -83.8385, 10.0511, 0.96 ) }
    dend_127 { pt3dadd( 18.3559, -84.1052, 10.7701, 0.96 ) }
    dend_127 { pt3dadd( 18.8268, -84.3723, 11.3807, 1.11 ) }
    dend_127 { pt3dadd( 19.838, -85.0998, 12.7203, 1.11 ) }
    dend_127 { pt3dadd( 20.6403, -85.7829, 13.821, 1.33 ) }
    dend_127 { pt3dadd( 20.9455, -86.082, 14.2446, 1.33 ) }
    dend_127 { pt3dadd( 21.2009, -86.3713, 14.5919, 1.33 ) }
    dend_127 { pt3dadd( 21.9265, -87.4387, 15.5242, 1.18 ) }
    dend_127 { pt3dadd( 22.2683, -88.0769, 15.9448, 0.88 ) }
    dend_127 { pt3dadd( 22.43, -88.4632, 16.0925, 0.81 ) }
    dend_127 { pt3dadd( 22.5623, -88.832, 16.1835, 0.81 ) }
    dend_127 { pt3dadd( 22.7471, -89.4263, 16.3147, 0.66 ) }
    dend_127 { pt3dadd( 23.1262, -90.7739, 16.5623, 0.66 ) }
    dend_127 { pt3dadd( 23.1555, -90.881, 16.5759, 0.66 ) }
    dend_127 { pt3dadd( 23.4197, -91.8671, 16.7567, 0.88 ) }
    dend_127 { pt3dadd( 23.5821, -92.4827, 16.891, 1.18 ) }
    dend_127 { pt3dadd( 23.8053, -93.3933, 17.1168, 1.11 ) }
    dend_127 { pt3dadd( 23.902, -93.8375, 17.2443, 1.25 ) }
    dend_127 { pt3dadd( 23.9294, -93.9683, 17.287, 1.25 ) }
    dend_127 { pt3dadd( 24.1421, -95.0327, 17.7112, 1.25 ) }
    dend_127 { pt3dadd( 24.2632, -95.6919, 18.0262, 1.25 ) }
    dend_127 { pt3dadd( 24.2751, -95.7532, 18.0594, 1.25 ) }
    dend_127 { pt3dadd( 24.4452, -96.5007, 18.4694, 1.03 ) }
    dend_127 { pt3dadd( 24.4605, -96.561, 18.503, 1.03 ) }
    dend_127 { pt3dadd( 24.8728, -97.5533, 19.2625, 0.74 ) }
    dend_127 { pt3dadd( 24.9013, -97.6004, 19.3101, 0.74 ) }
    dend_127 { pt3dadd( 25.1438, -97.8866, 19.6637, 0.74 ) }
    dend_127 { pt3dadd( 25.6351, -98.2632, 20.31, 0.59 ) }
    dend_127 { pt3dadd( 25.6792, -98.2875, 20.3626, 0.59 ) }
    dend_127 { pt3dadd( 26.974, -98.8941, 21.7787, 0.59 ) }
    dend_127 { pt3dadd( 27.0218, -98.9124, 21.8264, 0.59 ) }
    dend_127 { pt3dadd( 27.3818, -99.0409, 22.1759, 0.59 ) }
    dend_127 { pt3dadd( 28.9982, -99.553, 23.7202, 0.59 ) }
    dend_127 { pt3dadd( 29.271, -99.6354, 23.9757, 1.03 ) }
    dend_127 { pt3dadd( 29.6035, -99.7575, 24.2775, 1.25 ) }
    dend_127 { pt3dadd( 29.8197, -99.8636, 24.4438, 1.25 ) }
    dend_127 { pt3dadd( 30.0485, -100.019, 24.6159, 1.25 ) }
    dend_127 { pt3dadd( 30.1005, -100.071, 24.6536, 1.25 ) }
    dend_127 { pt3dadd( 30.2105, -100.233, 24.7185, 1.25 ) }
    dend_127 { pt3dadd( 30.8287, -101.27, 25.1063, 0.88 ) }
    dend_127 { pt3dadd( 31.1951, -101.953, 25.3297, 0.59 ) }
    dend_127 { pt3dadd( 31.6044, -102.764, 25.5681, 0.59 ) }
    dend_127 { pt3dadd( 31.8495, -103.28, 25.6937, 0.59 ) }
    dend_127 { pt3dadd( 32.0337, -103.706, 25.7572, 0.81 ) }
    dend_127 { pt3dadd( 32.0711, -103.802, 25.7531, 0.81 ) }
    dend_127 { pt3dadd( 32.3232, -104.522, 25.5771, 0.81 ) }
    dend_127 { pt3dadd( 32.3568, -104.611, 25.5462, 0.81 ) }
    dend_127 { pt3dadd( 32.7194, -105.421, 25.1807, 1.03 ) }
    dend_127 { pt3dadd( 33.0358, -105.939, 24.8629, 0.81 ) }
    dend_127 { pt3dadd( 33.6969, -106.79, 24.2101, 0.44 ) }
    dend_127 { pt3dadd( 33.7529, -106.844, 24.1605, 0.44 ) }
    dend_127 { pt3dadd( 34.3572, -107.221, 23.7042, 0.44 ) }
    dend_127 { pt3dadd( 34.4145, -107.243, 23.6692, 0.44 ) }
    dend_127 { pt3dadd( 35.5306, -107.44, 23.1095, 0.59 ) }
    dend_127 { pt3dadd( 35.7233, -107.446, 23.021, 0.59 ) }
    dend_127 { pt3dadd( 36.4102, -107.44, 22.743, 0.59 ) }
    dend_127 { pt3dadd( 37.0149, -107.451, 22.4769, 1.11 ) }
    dend_127 { pt3dadd( 37.4638, -107.464, 22.2652, 1.11 ) }
    dend_127 { pt3dadd( 37.5997, -107.476, 22.2022, 1.11 ) }
    dend_127 { pt3dadd( 38.9538, -107.761, 21.5992, 0.44 ) }
    dend_127 { pt3dadd( 39.9717, -108.174, 21.0901, 0.44 ) }
    dend_127 { pt3dadd( 40.8567, -108.61, 20.6086, 0.44 ) }
    dend_127 { pt3dadd( 40.9204, -108.648, 20.5724, 0.44 ) }
    dend_127 { pt3dadd( 41.469, -109.026, 20.2597, 0.74 ) }
    dend_127 { pt3dadd( 42.058, -109.488, 19.9512, 1.4 ) }
    dend_127 { pt3dadd( 42.8629, -110.436, 19.626, 1.84 ) }
    // Section: dend_85, id: dend_85, parent: dend_84 (entry count 82/100)
    dend_85 { pt3dclear() }
    dend_85 { pt3dadd( 7.16103, -68.3396, 5.03396, 1.47 ) }
    dend_85 { pt3dadd( 6.57294, -69.8329, 5.08701, 1.47 ) }
    dend_85 { pt3dadd( 6.30436, -70.5129, 5.09306, 1.62 ) }
    dend_85 { pt3dadd( 5.87484, -71.6249, 5.05641, 1.62 ) }
    dend_85 { pt3dadd( 5.62406, -72.2975, 5.02065, 1.62 ) }
    dend_85 { pt3dadd( 5.28377, -73.29, 4.95687, 1.62 ) }
    dend_85 { pt3dadd( 4.94629, -74.3396, 4.88614, 1.62 ) }
    dend_85 { pt3dadd( 4.92596, -74.4069, 4.87845, 1.62 ) }
    dend_85 { pt3dadd( 4.61697, -75.5753, 4.75642, 1.47 ) }
    dend_85 { pt3dadd( 4.58301, -75.7272, 4.74329, 1.47 ) }
    dend_85 { pt3dadd( 4.42011, -76.7432, 4.69852, 1.69 ) }
    dend_85 { pt3dadd( 4.32315, -78.1407, 4.68984, 1.69 ) }
    dend_85 { pt3dadd( 4.32586, -78.2135, 4.69174, 1.69 ) }
    dend_85 { pt3dadd( 4.52837, -80.1744, 4.77137, 1.69 ) }
    dend_85 { pt3dadd( 4.75439, -81.4663, 4.89448, 1.69 ) }
    dend_85 { pt3dadd( 5.01167, -82.51, 5.03092, 1.69 ) }
    dend_85 { pt3dadd( 5.46412, -83.8707, 5.2594, 1.47 ) }
    dend_85 { pt3dadd( 6.05, -85.2366, 5.52805, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_85 { pt3dadd( 6.07857, -85.3, 5.54099, 1.18 ) }
    dend_85 { pt3dadd( 6.56752, -86.3395, 5.75868, 1.62 ) }
    dend_85 { pt3dadd( 6.91444, -87.2502, 5.92453, 1.84 ) }
    dend_85 { pt3dadd( 6.94141, -87.3904, 5.93504, 1.84 ) }
    dend_85 { pt3dadd( 6.97271, -88.7384, 5.93023, 1.84 ) }
    dend_85 { pt3dadd( 6.88618, -90.0488, 5.85721, 1.84 ) }
    dend_85 { pt3dadd( 6.7793, -91.0463, 5.76387, 1.99 ) }
    dend_85 { pt3dadd( 6.60464, -92.0644, 5.62849, 1.99 ) }
    dend_85 { pt3dadd( 6.20984, -93.7322, 5.401, 1.99 ) }
    dend_85 { pt3dadd( 5.80985, -95.1948, 5.205, 1.99 ) }
    dend_85 { pt3dadd( 5.78633, -95.2713, 5.19495, 1.99 ) }
    dend_85 { pt3dadd( 5.33765, -96.7331, 5.02215, 1.99 ) }
    dend_85 { pt3dadd( 5.09707, -97.5206, 4.93918, 1.69 ) }
    dend_85 { pt3dadd( 4.9104, -98.1362, 4.89249, 1.47 ) }
    dend_85 { pt3dadd( 4.63227, -99.0347, 4.89249, 1.47 ) }
    dend_85 { pt3dadd( 4.40639, -99.7239, 4.89249, 1.92 ) }
    dend_85 { pt3dadd( 4.14087, -100.561, 4.89249, 2.28 ) }
    // Section: dend_81, id: dend_81, parent: dend_0 (entry count 17/100)
    dend_81 { pt3dclear() }
    dend_81 { pt3dadd( -1.76026, 33.361, -3.40299, 0.29 ) }
    dend_81 { pt3dadd( -3.54827, 33.7471, 0.0112177, 0.29 ) }
    dend_81 { pt3dadd( -3.59469, 33.7638, 0.0749893, 0.29 ) }
    dend_81 { pt3dadd( -4.12212, 33.9879, 0.6915, 0.29 ) }
    dend_81 { pt3dadd( -4.46734, 34.1621, 1.1573, 0.29 ) }
    dend_81 { pt3dadd( -4.9189, 34.4284, 1.78452, 0.29 ) }
    dend_81 { pt3dadd( -5.21592, 34.6412, 2.22778, 0.29 ) }
    dend_81 { pt3dadd( -5.62333, 35.0777, 2.68885, 0.29 ) }
    dend_81 { pt3dadd( -5.64719, 35.1149, 2.72948, 0.29 ) }
    dend_81 { pt3dadd( -5.76592, 36.1718, 4.13707, 0.29 ) }
    dend_81 { pt3dadd( -5.68317, 36.4709, 4.57099, 0.29 ) }
    dend_81 { pt3dadd( -5.47526, 36.8246, 5.11639, 0.22 ) }
    dend_81 { pt3dadd( -5.36076, 36.9922, 5.35887, 0.22 ) }
    dend_81 { pt3dadd( -5.16389, 37.2704, 6.00453, 0.22 ) }
    dend_81 { pt3dadd( -4.81458, 37.8921, 7.4899, 0.22 ) }
    dend_81 { pt3dadd( -4.80195, 37.9183, 7.55359, 0.22 ) }
    dend_81 { pt3dadd( -4.60159, 38.4137, 8.738, 1.11 ) }
    dend_81 { pt3dadd( -4.52417, 38.6682, 9.33675, 1.11 ) }
    dend_81 { pt3dadd( -4.00042, 40.7882, 14.1428, 0.52 ) }
    dend_81 { pt3dadd( -3.94463, 41.1737, 14.9595, 0.52 ) }
    dend_81 { pt3dadd( -3.9429, 41.2061, 15.0223, 0.52 ) }
    dend_81 { pt3dadd( -3.93592, 41.5879, 15.7484, 0.52 ) }
    dend_81 { pt3dadd( -3.94104, 41.6552, 15.8727, 0.52 ) }
    dend_81 { pt3dadd( -4.08785, 42.3574, 17.1442, 0.52 ) }
    dend_81 { pt3dadd( -4.26364, 42.7541, 17.7258, 0.52 ) }
    dend_81 { pt3dadd( -4.47066, 43.1214, 18.4116, 0.81 ) }
    dend_81 { pt3dadd( -4.4979, 43.1651, 18.4997, 0.81 ) }
    dend_81 { pt3dadd( -4.70855, 43.4539, 19.1474, 0.96 ) }
    dend_81 { pt3dadd( -5.19626, 44.131, 20.4904, 0.96 ) }
    dend_81 { pt3dadd( -5.5818, 44.7367, 21.5072, 0.96 ) }
    dend_81 { pt3dadd( -5.60024, 44.777, 21.5613, 0.96 ) }
    dend_81 { pt3dadd( -5.70294, 45.0768, 21.88, 0.81 ) }
    dend_81 { pt3dadd( -5.71908, 45.1272, 21.927, 0.81 ) }
    dend_81 { pt3dadd( -5.95039, 45.9556, 22.5884, 0.81 ) }
    dend_81 { pt3dadd( -6.25191, 46.926, 23.2483, 0.29 ) }
    dend_81 { pt3dadd( -6.50018, 47.5911, 23.6921, 0.29 ) }
    dend_81 { pt3dadd( -6.52284, 47.6474, 23.7324, 0.29 ) }
    dend_81 { pt3dadd( -6.8566, 48.3409, 24.3867, 0.29 ) }
    dend_81 { pt3dadd( -6.88477, 48.3934, 24.4437, 0.29 ) }
    dend_81 { pt3dadd( -7.23839, 48.9798, 25.1826, 0.96 ) }
    dend_81 { pt3dadd( -7.39821, 49.2233, 25.4745, 1.11 ) }
    dend_81 { pt3dadd( -7.51121, 49.3982, 25.6941, 1.18 ) }
    dend_81 { pt3dadd( -8.16239, 50.462, 26.9478, 0.29 ) }
    dend_81 { pt3dadd( -8.36089, 50.8299, 27.3343, 0.29 ) }
    dend_81 { pt3dadd( -8.42102, 50.9442, 27.4463, 0.29 ) }
    dend_81 { pt3dadd( -8.68159, 51.4986, 27.9103, 0.29 ) }
    dend_81 { pt3dadd( -9.0306, 52.3314, 28.551, 0.81 ) }
    dend_81 { pt3dadd( -9.11399, 52.5798, 28.6983, 0.96 ) }
    dend_81 { pt3dadd( -9.20468, 52.9905, 28.8409, 0.59 ) }
    dend_81 { pt3dadd( -9.21793, 53.0561, 28.8614, 0.59 ) }
    dend_81 { pt3dadd( -9.3439, 53.5484, 29.1461, 0.44 ) }
    dend_81 { pt3dadd( -9.38222, 53.6699, 29.2549, 0.29 ) }
    dend_81 { pt3dadd( -9.57551, 54.1144, 29.7345, 0.29 ) }
    dend_81 { pt3dadd( -9.59861, 54.1574, 29.7847, 0.29 ) }
    dend_81 { pt3dadd( -9.79196, 54.5007, 30.1868, 0.29 ) }
    dend_81 { pt3dadd( -10.3836, 55.8184, 31.7794, 0.29 ) }
    dend_81 { pt3dadd( -10.3987, 55.8554, 31.8242, 0.29 ) }
    dend_81 { pt3dadd( -10.5205, 56.1972, 32.2181, 0.29 ) }
    dend_81 { pt3dadd( -10.8262, 57.1596, 33.2828, 2.65 ) }
    dend_81 { pt3dadd( -10.8903, 57.3962, 33.5259, 2.65 ) }
    dend_81 { pt3dadd( -11.2375, 59.0065, 35.1544, 0.44 ) }
    dend_81 { pt3dadd( -11.2947, 59.3176, 35.4331, 0.44 ) }
    dend_81 { pt3dadd( -11.3469, 59.6396, 35.7285, 0.59 ) }
    dend_81 { pt3dadd( -11.4023, 59.9512, 36.0852, 0.88 ) }
    dend_81 { pt3dadd( -11.4126, 59.9925, 36.1408, 0.88 ) }
    dend_81 { pt3dadd( -11.726, 60.8096, 37.2203, 0.88 ) }
    dend_81 { pt3dadd( -11.892, 61.1414, 37.6412, 0.74 ) }
    dend_81 { pt3dadd( -12.0544, 61.444, 38.0398, 0.74 ) }
    dend_81 { pt3dadd( -12.7902, 62.9355, 40.0106, 0.29 ) }
    dend_81 { pt3dadd( -12.9162, 63.245, 40.391, 0.29 ) }
    dend_81 { pt3dadd( -13.22, 64.1348, 41.3858, 0.29 ) }
    dend_81 { pt3dadd( -13.2519, 64.2407, 41.4916, 0.29 ) }
    dend_81 { pt3dadd( -13.5168, 65.1238, 42.4493, 0.29 ) }
    dend_81 { pt3dadd( -13.7782, 65.9232, 43.3509, 1.11 ) }
    dend_81 { pt3dadd( -13.9235, 66.4086, 43.864, 0.37 ) }
    dend_81 { pt3dadd( -14.0041, 66.6168, 44.1598, 0.29 ) }
    dend_81 { pt3dadd( -14.0778, 66.7533, 44.4161, 0.29 ) }
    dend_81 { pt3dadd( -14.5458, 67.4307, 45.7409, 0.22 ) }
    dend_81 { pt3dadd( -14.7608, 67.6598, 46.2107, 0.22 ) }
    dend_81 { pt3dadd( -14.8505, 67.7478, 46.3839, 0.22 ) }
    dend_81 { pt3dadd( -15.4399, 68.3888, 47.5764, 0.59 ) }
    dend_81 { pt3dadd( -15.5467, 68.578, 47.9716, 0.74 ) }
    dend_81 { pt3dadd( -15.6047, 68.7677, 48.3594, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_81 { pt3dadd( -15.6146, 68.8317, 48.4739, 0.81 ) }
    dend_81 { pt3dadd( -15.6898, 69.3162, 49.3157, 0.81 ) }
    dend_81 { pt3dadd( -15.6963, 69.3532, 49.3756, 0.81 ) }
    dend_81 { pt3dadd( -16.1117, 71.139, 52.0917, 0.44 ) }
    dend_81 { pt3dadd( -16.1284, 71.1821, 52.16, 0.44 ) }
    dend_81 { pt3dadd( -16.2914, 71.5049, 52.6056, 0.44 ) }
    dend_81 { pt3dadd( -16.6483, 72.1312, 53.3723, 1.55 ) }
    dend_81 { pt3dadd( -16.8779, 72.4928, 53.7782, 2.14 ) }
    dend_81 { pt3dadd( -17.0281, 72.7257, 53.9982, 2.14 ) }
    dend_81 { pt3dadd( -17.9694, 74.1969, 55.0216, 0.37 ) }
    dend_81 { pt3dadd( -18.7113, 75.3516, 55.7935, 0.37 ) }
    dend_81 { pt3dadd( -19.1723, 76.1122, 56.2903, 0.81 ) }
    dend_81 { pt3dadd( -19.2134, 76.1826, 56.3334, 0.81 ) }
    dend_81 { pt3dadd( -19.2826, 76.297, 56.4042, 1.25 ) }
    dend_81 { pt3dadd( -19.5054, 76.6794, 56.6292, 1.25 ) }
    dend_81 { pt3dadd( -19.8227, 77.2725, 56.9219, 0.29 ) }
    dend_81 { pt3dadd( -20.4532, 78.4541, 57.5771, 0.29 ) }
    dend_81 { pt3dadd( -20.5193, 78.5786, 57.6422, 0.29 ) }
    dend_81 { pt3dadd( -21.0542, 79.6051, 58.197, 0.29 ) }
    dend_81 { pt3dadd( -21.0833, 79.6608, 58.2293, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 20/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -1.76026, 33.361, -3.40299, 3.02 ) }
    dend_1 { pt3dadd( -1.7993, 33.6584, -3.40299, 3.02 ) }
    dend_1 { pt3dadd( -2.05726, 35.6238, -3.40299, 3.32 ) }
    dend_1 { pt3dadd( -2.23714, 36.9944, -3.40299, 3.32 ) }
    dend_1 { pt3dadd( -2.43895, 38.532, -3.40299, 3.68 ) }
    dend_1 { pt3dadd( -2.52373, 39.1779, -3.40299, 3.68 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 26/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.80969, -40.9383, 1.26948, 0.578727 ) }
    axon_1 { pt3dadd( 13.2743, -55.5327, 1.26948, 0.578727 ) }
    axon_1 { pt3dadd( 16.739, -70.1271, 1.26948, 0.578727 ) }
    // Section: dend_129, id: dend_129, parent: dend_127 (entry count 29/100)
    dend_129 { pt3dclear() }
    dend_129 { pt3dadd( 42.8629, -110.436, 19.626, 1.62 ) }
    dend_129 { pt3dadd( 43.3536, -111.609, 19.6747, 1.62 ) }
    dend_129 { pt3dadd( 43.5222, -111.995, 19.6946, 1.62 ) }
    dend_129 { pt3dadd( 43.7022, -112.357, 19.7511, 1.62 ) }
    dend_129 { pt3dadd( 44.2249, -113.351, 19.9441, 0.81 ) }
    dend_129 { pt3dadd( 44.6481, -114.107, 20.103, 0.74 ) }
    dend_129 { pt3dadd( 44.6831, -114.166, 20.1179, 0.74 ) }
    dend_129 { pt3dadd( 45.4508, -115.413, 20.5569, 0.74 ) }
    dend_129 { pt3dadd( 46.2513, -116.573, 21.0028, 0.52 ) }
    dend_129 { pt3dadd( 46.2927, -116.626, 21.0242, 0.52 ) }
    dend_129 { pt3dadd( 46.685, -117.033, 21.1931, 0.52 ) }
    dend_129 { pt3dadd( 47.164, -117.459, 21.3881, 0.88 ) }
    dend_129 { pt3dadd( 47.2267, -117.509, 21.4085, 0.88 ) }
    dend_129 { pt3dadd( 47.7694, -117.865, 21.5387, 0.88 ) }
    dend_129 { pt3dadd( 48.2552, -118.163, 21.6067, 1.33 ) }
    dend_129 { pt3dadd( 48.9711, -118.578, 21.6881, 0.74 ) }
    dend_129 { pt3dadd( 49.0347, -118.613, 21.6937, 0.74 ) }
    dend_129 { pt3dadd( 50.3143, -119.295, 21.6393, 0.74 ) }
    dend_129 { pt3dadd( 50.5772, -119.433, 21.5959, 1.25 ) }
    dend_129 { pt3dadd( 50.6557, -119.479, 21.5792, 1.25 ) }
    dend_129 { pt3dadd( 51.3317, -119.908, 21.4165, 1.25 ) }
    dend_129 { pt3dadd( 51.3793, -119.943, 21.408, 1.25 ) }
    dend_129 { pt3dadd( 52.4375, -120.811, 21.2915, 0.74 ) }
    dend_129 { pt3dadd( 53.1171, -121.444, 21.2527, 0.52 ) }
    dend_129 { pt3dadd( 54.1938, -122.579, 21.2477, 0.52 ) }
    dend_129 { pt3dadd( 54.5037, -122.946, 21.2651, 1.03 ) }
    dend_129 { pt3dadd( 55.4049, -124.127, 21.3886, 0.96 ) }
    dend_129 { pt3dadd( 55.849, -124.739, 21.503, 1.33 ) }
    dend_129 { pt3dadd( 56.2114, -125.266, 21.6554, 1.62 ) }
    dend_129 { pt3dadd( 56.5446, -125.77, 21.8132, 1.62 ) }
    dend_129 { pt3dadd( 56.8636, -126.231, 21.9317, 1.62 ) }
    dend_129 { pt3dadd( 56.9528, -126.353, 21.959, 1.62 ) }
    dend_129 { pt3dadd( 57.5354, -127.006, 22.0457, 0.96 ) }
    dend_129 { pt3dadd( 58.2661, -127.753, 22.1306, 0.88 ) }
    dend_129 { pt3dadd( 58.3385, -127.821, 22.1369, 0.88 ) }
    dend_129 { pt3dadd( 59.3547, -128.741, 22.2005, 0.88 ) }
    dend_129 { pt3dadd( 59.4292, -128.807, 22.2035, 0.88 ) }
    dend_129 { pt3dadd( 61.8656, -131.011, 22.2424, 0.88 ) }
    dend_129 { pt3dadd( 61.9179, -131.058, 22.2421, 0.88 ) }
    dend_129 { pt3dadd( 62.4992, -131.58, 22.2374, 1.18 ) }
    dend_129 { pt3dadd( 62.673, -131.735, 22.2359, 1.18 ) }
    dend_129 { pt3dadd( 63.5228, -132.496, 22.2263, 1.18 ) }
    dend_129 { pt3dadd( 64.5095, -133.391, 22.2128, 1.18 ) }
    dend_129 { pt3dadd( 65.2091, -134.101, 22.1954, 1.03 ) }
    // Section: dend_128, id: dend_128, parent: dend_127 (entry count 73/100)
    dend_128 { pt3dclear() }
    dend_128 { pt3dadd( 42.8629, -110.436, 19.626, 0.44 ) }
    dend_128 { pt3dadd( 41.6469, -111.528, 18.5156, 0.44 ) }
    dend_128 { pt3dadd( 41.6045, -111.568, 18.4768, 0.44 ) }
    dend_128 { pt3dadd( 40.8882, -112.246, 17.8896, 0.37 ) }
    dend_128 { pt3dadd( 40.4969, -112.615, 17.5848, 0.74 ) }
    dend_128 { pt3dadd( 40.0262, -113.053, 17.2403, 0.74 ) }
    dend_128 { pt3dadd( 39.0822, -113.908, 16.5989, 0.29 ) }
    dend_128 { pt3dadd( 39.028, -113.963, 16.5689, 0.29 ) }
    dend_128 { pt3dadd( 38.3966, -114.561, 16.2403, 0.29 ) }
    dend_128 { pt3dadd( 38.283, -114.661, 16.1837, 0.74 ) }
    dend_128 { pt3dadd( 38.0012, -114.878, 16.0765, 0.96 ) }
    dend_128 { pt3dadd( 37.6659, -115.106, 15.9619, 1.11 ) }
    dend_128 { pt3dadd( 36.9821, -115.538, 15.7797, 0.37 ) }
    dend_128 { pt3dadd( 36.5185, -115.81, 15.6312, 0.37 ) }
    dend_128 { pt3dadd( 36.4578, -115.844, 15.6095, 0.37 ) }
    dend_128 { pt3dadd( 35.7075, -116.261, 15.3361, 0.22 ) }
    dend_128 { pt3dadd( 35.2377, -116.518, 15.1599, 0.52 ) }
    dend_128 { pt3dadd( 34.9791, -116.66, 15.0708, 0.52 ) }
    dend_128 { pt3dadd( 33.8614, -117.253, 14.731, 0.15 ) }
    dend_128 { pt3dadd( 33.6429, -117.375, 14.6541, 0.37 ) }
    dend_128 { pt3dadd( 33.5178, -117.446, 14.6081, 0.37 ) }
    dend_128 { pt3dadd( 33.4416, -117.491, 14.5795, 0.37 ) }
    dend_128 { pt3dadd( 32.5047, -118.04, 14.2599, 0.22 ) }
    dend_128 { pt3dadd( 32.4384, -118.08, 14.2373, 0.22 ) }
    dend_128 { pt3dadd( 31.8087, -118.499, 14.0481, 0.37 ) }
    dend_128 { pt3dadd( 31.4262, -118.74, 13.9187, 0.37 ) }
    // Section: dend_114, id: dend_114, parent: dend_85 (entry count 99/100)
    dend_114 { pt3dclear() }
    dend_114 { pt3dadd( 4.14087, -100.561, 4.89249, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_114 { pt3dadd( 3.35469, -101.925, 5.46798, 0.74 ) }
    dend_114 { pt3dadd( 2.80201, -102.927, 5.88301, 0.66 ) }
    dend_114 { pt3dadd( 2.77146, -102.987, 5.90595, 0.66 ) }
    dend_114 { pt3dadd( 2.23244, -104.069, 6.30683, 0.66 ) }
    dend_114 { pt3dadd( 1.72791, -105.012, 6.62952, 0.66 ) }
    dend_114 { pt3dadd( 1.44938, -105.507, 6.79011, 0.52 ) }
    dend_114 { pt3dadd( 1.4056, -105.573, 6.80512, 0.52 ) }
    dend_114 { pt3dadd( 1.00299, -106.049, 6.98044, 0.52 ) }
    dend_114 { pt3dadd( 0.95615, -106.098, 7.00179, 0.52 ) }
    dend_114 { pt3dadd( 0.163945, -106.839, 7.36415, 0.52 ) }
    dend_114 { pt3dadd( 0.0819935, -106.914, 7.39939, 0.52 ) }
    dend_114 { pt3dadd( -0.840338, -107.796, 7.82854, 0.52 ) }
    dend_114 { pt3dadd( -1.89878, -108.976, 8.36308, 0.52 ) }
    dend_114 { pt3dadd( -2.26981, -109.486, 8.57442, 1.11 ) }
    dend_114 { pt3dadd( -2.50296, -109.908, 8.72907, 1.03 ) }
    dend_114 { pt3dadd( -2.54732, -110.048, 8.76956, 1.03 ) }
    dend_114 { pt3dadd( -2.62859, -110.647, 8.88114, 1.03 ) }
    dend_114 { pt3dadd( -2.61759, -111.542, 8.96996, 1.03 ) }
    dend_114 { pt3dadd( -2.56667, -112.152, 8.96996, 0.81 ) }
    dend_114 { pt3dadd( -2.55889, -112.232, 8.96996, 0.81 ) }
    dend_114 { pt3dadd( -2.50001, -113.212, 8.96996, 0.81 ) }
    dend_114 { pt3dadd( -2.47918, -114.234, 8.95212, 0.74 ) }
    dend_114 { pt3dadd( -2.48473, -114.304, 8.94985, 0.74 ) }
    dend_114 { pt3dadd( -2.66632, -115.369, 8.90399, 0.59 ) }
    dend_114 { pt3dadd( -2.92027, -116.359, 8.85452, 0.44 ) }
    dend_114 { pt3dadd( -3.23071, -117.332, 8.80618, 0.37 ) }
    dend_114 { pt3dadd( -3.39059, -117.708, 8.78763, 0.74 ) }
    dend_114 { pt3dadd( -4.07558, -118.961, 8.73157, 0.74 ) }
    dend_114 { pt3dadd( -4.54907, -119.719, 8.7014, 0.74 ) }
    dend_114 { pt3dadd( -4.83522, -120.107, 8.6883, 1.03 ) }
    dend_114 { pt3dadd( -5.33599, -120.72, 8.67397, 1.03 ) }
    dend_114 { pt3dadd( -6.03209, -121.547, 8.6684, 1.03 ) }
    dend_114 { pt3dadd( -6.88014, -122.538, 8.68297, 1.18 ) }
    dend_114 { pt3dadd( -6.92563, -122.592, 8.68145, 1.18 ) }
    dend_114 { pt3dadd( -7.29303, -123.041, 8.65152, 1.55 ) }
    dend_114 { pt3dadd( -7.54031, -123.393, 8.60225, 1.55 ) }
    dend_114 { pt3dadd( -7.89614, -123.967, 8.48951, 0.96 ) }
    dend_114 { pt3dadd( -8.26419, -124.715, 8.31687, 0.81 ) }
    dend_114 { pt3dadd( -8.58407, -125.564, 8.10231, 0.59 ) }
    dend_114 { pt3dadd( -8.80399, -126.259, 7.92204, 0.59 ) }
    dend_114 { pt3dadd( -9.16022, -127.679, 7.54071, 0.59 ) }
    dend_114 { pt3dadd( -9.17549, -127.759, 7.52324, 0.59 ) }
    dend_114 { pt3dadd( -9.23304, -128.27, 7.44915, 0.88 ) }
    dend_114 { pt3dadd( -9.25224, -128.754, 7.43239, 1.11 ) }
    dend_114 { pt3dadd( -9.25374, -128.895, 7.44559, 1.11 ) }
    dend_114 { pt3dadd( -9.25503, -129.175, 7.49572, 1.11 ) }
    dend_114 { pt3dadd( -9.33672, -130.182, 7.77957, 0.44 ) }
    dend_114 { pt3dadd( -9.57584, -131.046, 8.03078, 0.44 ) }
    dend_114 { pt3dadd( -9.8394, -131.541, 8.17538, 0.88 ) }
    dend_114 { pt3dadd( -10.1547, -131.937, 8.27768, 0.96 ) }
    dend_114 { pt3dadd( -10.4854, -132.261, 8.34276, 0.96 ) }
    dend_114 { pt3dadd( -11.1403, -132.776, 8.41339, 0.96 ) }
    dend_114 { pt3dadd( -12.0361, -133.373, 8.43931, 0.96 ) }
    dend_114 { pt3dadd( -12.4377, -133.598, 8.44826, 0.96 ) }
    dend_114 { pt3dadd( -13.0269, -133.909, 8.45606, 0.59 ) }
    dend_114 { pt3dadd( -13.525, -134.18, 8.46357, 0.44 ) }
    dend_114 { pt3dadd( -13.8744, -134.417, 8.47011, 0.96 ) }
    dend_114 { pt3dadd( -14.2968, -134.786, 8.48183, 1.25 ) }
    // Section: dend_86, id: dend_86, parent: dend_85 (entry count 58/100)
    dend_86 { pt3dclear() }
    dend_86 { pt3dadd( 4.14087, -100.561, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.21336, -101.081, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.29188, -102.223, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.24837, -103.66, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.23741, -103.732, 4.89249, 1.99 ) }
    dend_86 { pt3dadd( 4.13057, -104.398, 4.86904, 1.84 ) }
    dend_86 { pt3dadd( 3.96738, -105.414, 4.81787, 1.62 ) }
    dend_86 { pt3dadd( 3.84976, -106.21, 4.76755, 1.25 ) }
    dend_86 { pt3dadd( 3.77885, -107.459, 4.67861, 1.03 ) }
    dend_86 { pt3dadd( 3.88682, -108.88, 4.57689, 1.03 ) }
    dend_86 { pt3dadd( 4.23067, -110.598, 4.46272, 1.03 ) }
    dend_86 { pt3dadd( 4.25209, -110.667, 4.45846, 1.03 ) }
    dend_86 { pt3dadd( 4.83988, -112.218, 4.37549, 1.18 ) }
    dend_86 { pt3dadd( 5.65033, -114.135, 4.20785, 1.33 ) }
    dend_86 { pt3dadd( 6.29442, -115.655, 4.04406, 1.62 ) }
    dend_86 { pt3dadd( 6.74747, -116.811, 3.88218, 1.25 ) }
    dend_86 { pt3dadd( 7.05653, -117.76, 3.72913, 1.33 ) }
    dend_86 { pt3dadd( 7.40687, -119.173, 3.4614, 1.33 ) }
    dend_86 { pt3dadd( 7.64698, -120.825, 3.08643, 1.33 ) }
    dend_86 { pt3dadd( 7.70755, -122.482, 2.65896, 1.33 ) }
    dend_86 { pt3dadd( 7.65125, -123.759, 2.30242, 1.33 ) }
    dend_86 { pt3dadd( 7.64431, -123.828, 2.28283, 1.33 ) }
    dend_86 { pt3dadd( 7.54552, -124.614, 2.06965, 1.62 ) }
    dend_86 { pt3dadd( 7.51849, -124.899, 2.00759, 1.62 ) }
    dend_86 { pt3dadd( 7.48076, -125.837, 1.91124, 1.62 ) }
    dend_86 { pt3dadd( 7.48851, -125.909, 1.90709, 1.62 ) }
    dend_86 { pt3dadd( 7.69756, -126.703, 1.90709, 1.62 ) }
    dend_86 { pt3dadd( 7.73756, -126.803, 1.91214, 1.62 ) }
    dend_86 { pt3dadd( 8.24974, -127.914, 2.00088, 1.62 ) }
    dend_86 { pt3dadd( 8.28031, -127.977, 2.00693, 1.62 ) }
    dend_86 { pt3dadd( 8.79613, -129.042, 2.1205, 1.62 ) }
    dend_86 { pt3dadd( 9.31792, -130.227, 2.25038, 1.62 ) }
    dend_86 { pt3dadd( 9.80888, -131.574, 2.39699, 1.62 ) }
    dend_86 { pt3dadd( 10.063, -132.561, 2.4966, 2.5 ) }
    dend_86 { pt3dadd( 10.1135, -133.081, 2.54111, 3.09 ) }
    dend_86 { pt3dadd( 10.1032, -133.488, 2.56592, 3.09 ) }
    dend_86 { pt3dadd( 10.0369, -134.301, 2.59785, 2.36 ) }
    dend_86 { pt3dadd( 9.92365, -135.462, 2.63749, 1.84 ) }
    dend_86 { pt3dadd( 9.83916, -136.42, 2.6607, 1.55 ) }
    dend_86 { pt3dadd( 9.73283, -138.148, 2.7167, 1.55 ) }
    dend_86 { pt3dadd( 9.6363, -140.145, 2.78642, 1.55 ) }
    dend_86 { pt3dadd( 9.59694, -141.813, 2.85001, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_86 { pt3dadd( 9.60824, -142.961, 2.89962, 1.55 ) }
    dend_86 { pt3dadd( 9.67667, -144.218, 2.96324, 1.92 ) }
    dend_86 { pt3dadd( 9.68319, -144.278, 2.96685, 1.92 ) }
    // Section: dend_83, id: dend_83, parent: dend_81 (entry count 3/100)
    dend_83 { pt3dclear() }
    dend_83 { pt3dadd( -21.0833, 79.6608, 58.2293, 0.22 ) }
    dend_83 { pt3dadd( -22.8161, 79.7602, 61.1099, 0.22 ) }
    dend_83 { pt3dadd( -23.2246, 79.7738, 61.6804, 1.62 ) }
    dend_83 { pt3dadd( -23.2658, 79.7741, 61.7378, 1.62 ) }
    dend_83 { pt3dadd( -23.7583, 79.8087, 62.3806, 1.92 ) }
    dend_83 { pt3dadd( -25.2626, 79.9698, 64.2023, 0.29 ) }
    dend_83 { pt3dadd( -25.743, 80.0283, 64.7487, 0.29 ) }
    dend_83 { pt3dadd( -26.2338, 80.1071, 65.1843, 0.29 ) }
    dend_83 { pt3dadd( -27.2796, 80.3378, 66.0637, 0.29 ) }
    dend_83 { pt3dadd( -28.131, 80.5376, 66.7251, 0.29 ) }
    dend_83 { pt3dadd( -28.5385, 80.6415, 67.0045, 0.29 ) }
    dend_83 { pt3dadd( -28.8362, 80.729, 67.1365, 1.03 ) }
    dend_83 { pt3dadd( -29.1051, 80.8202, 67.256, 1.4 ) }
    dend_83 { pt3dadd( -29.6943, 81.0574, 67.4615, 1.4 ) }
    dend_83 { pt3dadd( -29.769, 81.0855, 67.4654, 1.4 ) }
    dend_83 { pt3dadd( -30.009, 81.1249, 67.4749, 1.4 ) }
    // Section: dend_82, id: dend_82, parent: dend_81 (entry count 19/100)
    dend_82 { pt3dclear() }
    dend_82 { pt3dadd( -21.0833, 79.6608, 58.2293, 0.22 ) }
    dend_82 { pt3dadd( -21.4459, 80.6492, 58.593, 0.22 ) }
    dend_82 { pt3dadd( -21.7233, 81.4055, 58.8714, 0.22 ) }
    dend_82 { pt3dadd( -21.8606, 81.7796, 59.009, 0.66 ) }
    dend_82 { pt3dadd( -21.8874, 81.8528, 59.0359, 0.66 ) }
    dend_82 { pt3dadd( -22.0308, 82.2436, 59.1798, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_1 (entry count 25/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -2.52373, 39.1779, -3.40299, 1.25 ) }
    dend_58 { pt3dadd( -3.23214, 39.5456, -3.78434, 1.25 ) }
    dend_58 { pt3dadd( -4.30957, 40.1393, -4.88157, 1.25 ) }
    dend_58 { pt3dadd( -4.35752, 40.1707, -4.94083, 1.25 ) }
    dend_58 { pt3dadd( -4.95025, 40.7112, -5.95641, 0.96 ) }
    dend_58 { pt3dadd( -5.21764, 40.9981, -6.48814, 0.96 ) }
    dend_58 { pt3dadd( -5.68437, 41.6309, -7.65152, 1.25 ) }
    dend_58 { pt3dadd( -6.19569, 42.574, -9.50821, 1.25 ) }
    dend_58 { pt3dadd( -6.28675, 42.8547, -10.0325, 1.4 ) }
    dend_58 { pt3dadd( -6.51584, 43.9577, -11.8872, 1.4 ) }
    dend_58 { pt3dadd( -6.51929, 44.0041, -11.9553, 1.4 ) }
    dend_58 { pt3dadd( -6.59775, 45.2467, -13.5108, 1.4 ) }
    dend_58 { pt3dadd( -6.60159, 45.2961, -13.5613, 1.4 ) }
    dend_58 { pt3dadd( -6.72134, 46.1091, -14.2972, 1.4 ) }
    dend_58 { pt3dadd( -6.74663, 46.2163, -14.3926, 1.4 ) }
    dend_58 { pt3dadd( -7.2387, 47.5528, -15.4147, 1.4 ) }
    dend_58 { pt3dadd( -7.75243, 48.6364, -16.1665, 1.4 ) }
    dend_58 { pt3dadd( -7.81731, 48.7517, -16.2399, 1.4 ) }
    dend_58 { pt3dadd( -8.6086, 50.2291, -17.0821, 1.4 ) }
    dend_58 { pt3dadd( -8.63722, 50.2866, -17.1099, 1.4 ) }
    dend_58 { pt3dadd( -9.16463, 51.4502, -17.59, 1.4 ) }
    dend_58 { pt3dadd( -9.45849, 52.194, -17.8295, 1.4 ) }
    dend_58 { pt3dadd( -10.0409, 54.0661, -18.3268, 1.18 ) }
    dend_58 { pt3dadd( -10.5464, 55.9836, -18.7333, 1.18 ) }
    dend_58 { pt3dadd( -10.8605, 57.5501, -18.9529, 1.18 ) }
    dend_58 { pt3dadd( -10.8725, 57.6193, -18.9611, 1.18 ) }
    dend_58 { pt3dadd( -11.023, 58.725, -19.0653, 1.69 ) }
    dend_58 { pt3dadd( -11.2515, 60.2453, -19.1574, 1.69 ) }
    dend_58 { pt3dadd( -11.2784, 60.3932, -19.1584, 1.69 ) }
    dend_58 { pt3dadd( -11.7133, 61.9876, -19.217, 0.81 ) }
    dend_58 { pt3dadd( -12.073, 62.953, -19.2818, 0.81 ) }
    dend_58 { pt3dadd( -12.1813, 63.1928, -19.303, 0.81 ) }
    dend_58 { pt3dadd( -12.7067, 64.1784, -19.4397, 0.81 ) }
    dend_58 { pt3dadd( -12.7423, 64.2377, -19.4507, 0.81 ) }
    dend_58 { pt3dadd( -13.4738, 65.4749, -19.7007, 0.81 ) }
    dend_58 { pt3dadd( -13.9898, 66.2937, -19.8964, 0.81 ) }
    dend_58 { pt3dadd( -14.4014, 66.9869, -20.0743, 1.25 ) }
    dend_58 { pt3dadd( -14.7648, 67.6478, -20.2456, 1.69 ) }
    dend_58 { pt3dadd( -14.7984, 67.7208, -20.2642, 1.69 ) }
    dend_58 { pt3dadd( -15.3585, 69.0458, -20.5697, 1.69 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 65/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.52373, 39.1779, -3.40299, 2.58 ) }
    dend_2 { pt3dadd( -1.64174, 40.7223, -3.85518, 2.58 ) }
    dend_2 { pt3dadd( -1.22438, 41.5789, -4.08432, 2.28 ) }
    dend_2 { pt3dadd( -0.760827, 42.6707, -4.34767, 2.06 ) }
    dend_2 { pt3dadd( -0.370606, 43.7701, -4.57889, 1.84 ) }
    dend_2 { pt3dadd( -0.0232486, 44.8035, -4.81552, 1.84 ) }
    dend_2 { pt3dadd( 0.247032, 45.5804, -5.10297, 1.69 ) }
    dend_2 { pt3dadd( 0.565528, 46.5531, -5.59419, 1.69 ) }
    dend_2 { pt3dadd( 0.782858, 47.2253, -5.97301, 1.69 ) }
    dend_2 { pt3dadd( 1.13218, 48.223, -6.55155, 1.69 ) }
    dend_2 { pt3dadd( 1.51011, 49.2065, -7.14759, 1.47 ) }
    dend_2 { pt3dadd( 2.52306, 51.634, -8.70237, 1.47 ) }
    dend_2 { pt3dadd( 2.87845, 52.432, -9.26337, 1.47 ) }
    dend_2 { pt3dadd( 3.313, 53.3727, -9.93406, 1.47 ) }
    dend_2 { pt3dadd( 3.71985, 54.2551, -10.5414, 1.92 ) }
    dend_2 { pt3dadd( 3.96319, 54.7857, -10.8726, 1.92 ) }
    dend_2 { pt3dadd( 4.45016, 55.9388, -11.4757, 1.77 ) }
    dend_2 { pt3dadd( 4.94872, 57.0777, -11.9381, 1.25 ) }
    dend_2 { pt3dadd( 5.38348, 57.9257, -12.4807, 1.25 ) }
    dend_2 { pt3dadd( 5.57358, 58.2283, -12.7635, 1.11 ) }
    dend_2 { pt3dadd( 5.89207, 58.6363, -13.2301, 1.11 ) }
    dend_2 { pt3dadd( 6.35376, 59.0933, -13.8346, 1.4 ) }
    dend_2 { pt3dadd( 7.18114, 59.7512, -14.8129, 1.4 ) }
    dend_2 { pt3dadd( 9.16032, 61.0501, -16.9581, 0.96 ) }
    dend_2 { pt3dadd( 10.0371, 61.5534, -17.8817, 0.96 ) }
    dend_2 { pt3dadd( 10.6927, 61.9094, -18.5663, 0.96 ) }
    dend_2 { pt3dadd( 11.4897, 62.3372, -19.4174, 0.96 ) }
    dend_2 { pt3dadd( 11.6331, 62.4149, -19.568, 0.96 ) }
    dend_2 { pt3dadd( 12.1641, 62.7361, -20.1374, 1.62 ) }
    dend_2 { pt3dadd( 12.2116, 62.7719, -20.1794, 1.62 ) }
    dend_2 { pt3dadd( 13.1508, 63.6148, -20.9967, 1.62 ) }
    dend_2 { pt3dadd( 14.0394, 64.5083, -21.7729, 1.84 ) }
    dend_2 { pt3dadd( 14.0809, 64.5536, -21.808, 1.84 ) }
    dend_2 { pt3dadd( 15.1729, 65.7835, -22.6526, 1.84 ) }
    dend_2 { pt3dadd( 16.0055, 66.7429, -23.2361, 1.84 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_2 { pt3dadd( 16.7734, 67.5904, -23.6318, 2.28 ) }
    dend_2 { pt3dadd( 17.2263, 68.068, -23.7748, 2.65 ) }
    dend_2 { pt3dadd( 17.2832, 68.1266, -23.786, 2.65 ) }
    dend_2 { pt3dadd( 17.826, 68.6628, -23.8643, 2.65 ) }
    dend_2 { pt3dadd( 17.9066, 68.735, -23.8648, 2.65 ) }
    dend_2 { pt3dadd( 19.2217, 69.746, -23.8772, 2.65 ) }
    dend_2 { pt3dadd( 19.3035, 69.8045, -23.8783, 2.65 ) }
    // Section: dend_131, id: dend_131, parent: dend_129 (entry count 7/100)
    dend_131 { pt3dclear() }
    dend_131 { pt3dadd( 65.2091, -134.101, 22.1954, 0.96 ) }
    dend_131 { pt3dadd( 64.8128, -135.561, 21.4169, 0.96 ) }
    dend_131 { pt3dadd( 64.6482, -136.238, 21.1118, 1.25 ) }
    dend_131 { pt3dadd( 64.5444, -136.775, 20.8996, 1.25 ) }
    dend_131 { pt3dadd( 64.4632, -137.859, 20.4873, 1.4 ) }
    dend_131 { pt3dadd( 64.45, -138.976, 20.0707, 1.11 ) }
    dend_131 { pt3dadd( 64.5276, -140.013, 19.6997, 0.81 ) }
    dend_131 { pt3dadd( 64.6159, -140.461, 19.5859, 0.81 ) }
    dend_131 { pt3dadd( 64.8341, -141.021, 19.4613, 0.81 ) }
    dend_131 { pt3dadd( 65.5814, -142.245, 19.2029, 0.81 ) }
    dend_131 { pt3dadd( 65.6307, -142.298, 19.1935, 0.81 ) }
    dend_131 { pt3dadd( 66.3843, -142.889, 19.0675, 1.25 ) }
    dend_131 { pt3dadd( 66.5027, -142.964, 19.0501, 1.25 ) }
    dend_131 { pt3dadd( 67.0968, -143.318, 18.9729, 1.55 ) }
    dend_131 { pt3dadd( 67.1909, -143.37, 18.9632, 1.55 ) }
    dend_131 { pt3dadd( 67.9087, -143.778, 18.9244, 1.55 ) }
    dend_131 { pt3dadd( 68.0084, -143.833, 18.9191, 1.55 ) }
    dend_131 { pt3dadd( 68.5295, -144.14, 18.8927, 1.55 ) }
    dend_131 { pt3dadd( 68.5897, -144.176, 18.8904, 1.55 ) }
    dend_131 { pt3dadd( 68.9686, -144.402, 18.8796, 1.55 ) }
    dend_131 { pt3dadd( 69.1158, -144.489, 18.8765, 1.55 ) }
    dend_131 { pt3dadd( 69.7732, -144.879, 18.8674, 1.03 ) }
    dend_131 { pt3dadd( 70.5011, -145.387, 18.8588, 0.74 ) }
    dend_131 { pt3dadd( 71.1593, -145.979, 18.8368, 0.66 ) }
    dend_131 { pt3dadd( 71.2228, -146.056, 18.8333, 0.66 ) }
    dend_131 { pt3dadd( 71.8108, -146.991, 18.7875, 0.59 ) }
    dend_131 { pt3dadd( 71.8427, -147.054, 18.784, 0.59 ) }
    dend_131 { pt3dadd( 72.1805, -148.008, 18.7265, 0.59 ) }
    dend_131 { pt3dadd( 72.418, -148.979, 18.664, 1.25 ) }
    dend_131 { pt3dadd( 72.5824, -149.912, 18.558, 1.77 ) }
    dend_131 { pt3dadd( 72.6438, -150.271, 18.4862, 1.77 ) }
    dend_131 { pt3dadd( 72.6584, -150.346, 18.4605, 1.77 ) }
    dend_131 { pt3dadd( 72.7983, -150.786, 18.2437, 1.77 ) }
    dend_131 { pt3dadd( 72.8226, -150.845, 18.2076, 1.77 ) }
    dend_131 { pt3dadd( 73.375, -151.856, 17.5151, 1.33 ) }
    dend_131 { pt3dadd( 73.8837, -152.687, 16.9124, 0.59 ) }
    dend_131 { pt3dadd( 74.6321, -153.843, 16.0727, 0.59 ) }
    dend_131 { pt3dadd( 75.3743, -154.944, 15.3014, 0.59 ) }
    dend_131 { pt3dadd( 75.4096, -154.994, 15.2673, 0.59 ) }
    dend_131 { pt3dadd( 76.6454, -156.655, 14.3023, 0.59 ) }
    dend_131 { pt3dadd( 76.693, -156.715, 14.2768, 0.59 ) }
    dend_131 { pt3dadd( 76.9844, -157.067, 14.1813, 1.33 ) }
    dend_131 { pt3dadd( 77.455, -157.627, 14.1258, 1.33 ) }
    dend_131 { pt3dadd( 77.5, -157.681, 14.1272, 1.33 ) }
    dend_131 { pt3dadd( 78.8802, -159.384, 14.2552, 1.33 ) }
    dend_131 { pt3dadd( 79.3362, -159.977, 14.3176, 1.33 ) }
    dend_131 { pt3dadd( 79.378, -160.034, 14.3162, 1.33 ) }
    dend_131 { pt3dadd( 79.7519, -160.562, 14.2466, 0.44 ) }
    dend_131 { pt3dadd( 80.1515, -161.131, 14.0539, 0.44 ) }
    dend_131 { pt3dadd( 80.6779, -161.84, 13.7117, 0.44 ) }
    dend_131 { pt3dadd( 81.0544, -162.315, 13.3835, 1.4 ) }
    dend_131 { pt3dadd( 81.9622, -163.413, 12.5294, 1.62 ) }
    dend_131 { pt3dadd( 82.232, -163.723, 12.285, 1.62 ) }
    dend_131 { pt3dadd( 83.2389, -164.838, 11.3773, 0.81 ) }
    dend_131 { pt3dadd( 84.2079, -165.884, 10.5617, 0.81 ) }
    dend_131 { pt3dadd( 85.0296, -166.731, 9.93546, 1.03 ) }
    dend_131 { pt3dadd( 85.143, -166.846, 9.86355, 1.03 ) }
    dend_131 { pt3dadd( 85.9395, -167.685, 9.45782, 1.03 ) }
    dend_131 { pt3dadd( 85.985, -167.739, 9.43897, 1.03 ) }
    dend_131 { pt3dadd( 86.7014, -168.752, 9.3024, 1.03 ) }
    dend_131 { pt3dadd( 86.7358, -168.813, 9.30056, 1.03 ) }
    dend_131 { pt3dadd( 87.0329, -169.463, 9.34762, 1.4 ) }
    dend_131 { pt3dadd( 87.2839, -170.022, 9.3965, 1.47 ) }
    dend_131 { pt3dadd( 87.6391, -170.891, 9.40511, 0.88 ) }
    dend_131 { pt3dadd( 87.8925, -171.506, 9.37317, 0.66 ) }
    dend_131 { pt3dadd( 88.0328, -171.837, 9.33359, 0.66 ) }
    dend_131 { pt3dadd( 88.4016, -172.635, 8.94629, 0.44 ) }
    dend_131 { pt3dadd( 88.7042, -173.163, 8.50627, 0.37 ) }
    dend_131 { pt3dadd( 89.3174, -174.037, 7.51503, 0.44 ) }
    dend_131 { pt3dadd( 89.3927, -174.124, 7.39314, 1.11 ) }
    dend_131 { pt3dadd( 89.8241, -174.531, 6.74757, 1.33 ) }
    dend_131 { pt3dadd( 91.6082, -175.936, 4.32447, 0.37 ) }
    dend_131 { pt3dadd( 92.022, -176.215, 3.83735, 0.37 ) }
    dend_131 { pt3dadd( 92.4564, -176.489, 3.37485, 0.96 ) }
    dend_131 { pt3dadd( 93.2581, -176.946, 2.59704, 1.33 ) }
    dend_131 { pt3dadd( 94.3504, -177.539, 1.59564, 1.69 ) }
    dend_131 { pt3dadd( 95.4467, -178.092, 0.706611, 1.92 ) }
    dend_131 { pt3dadd( 96.5109, -178.62, 0.107733, 1.92 ) }
    dend_131 { pt3dadd( 96.574, -178.654, 0.0704686, 1.92 ) }
    // Section: dend_130, id: dend_130, parent: dend_129 (entry count 86/100)
    dend_130 { pt3dclear() }
    dend_130 { pt3dadd( 65.2091, -134.101, 22.1954, 0.29 ) }
    dend_130 { pt3dadd( 65.7441, -133.077, 21.8644, 0.29 ) }
    dend_130 { pt3dadd( 66.1173, -132.363, 21.6336, 0.29 ) }
    dend_130 { pt3dadd( 66.1444, -132.311, 21.6169, 0.29 ) }
    dend_130 { pt3dadd( 66.5289, -131.575, 21.3791, 0.29 ) }
    dend_130 { pt3dadd( 66.5603, -131.515, 21.3596, 0.29 ) }
    dend_130 { pt3dadd( 66.932, -130.804, 21.1297, 0.29 ) }
    // Section: dend_116, id: dend_116, parent: dend_114 (entry count 93/100)
    dend_116 { pt3dclear() }
    dend_116 { pt3dadd( -14.2968, -134.786, 8.48183, 0.59 ) }
    dend_116 { pt3dadd( -15.0255, -135.292, 8.36633, 0.59 ) }
    dend_116 { pt3dadd( -15.4779, -135.607, 8.29463, 0.44 ) }
    dend_116 { pt3dadd( -16.3008, -136.179, 8.1642, 0.44 ) }
    dend_116 { pt3dadd( -16.3664, -136.225, 8.1538, 0.44 ) }
    dend_116 { pt3dadd( -17.5111, -137.021, 7.97237, 0.44 ) }
    // Section: dend_115, id: dend_115, parent: dend_114 (entry count 99/100)
    dend_115 { pt3dclear() }
    dend_115 { pt3dadd( -14.2968, -134.786, 8.48183, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_115 { pt3dadd( -12.6884, -135.391, 8.28053, 0.29 ) }
    dend_115 { pt3dadd( -11.3211, -135.985, 8.12846, 0.22 ) }
    dend_115 { pt3dadd( -11.1731, -136.054, 8.11333, 0.22 ) }
    dend_115 { pt3dadd( -10.3788, -136.362, 8.37089, 0.22 ) }
    dend_115 { pt3dadd( -10.2601, -136.403, 8.43324, 0.22 ) }
    dend_115 { pt3dadd( -9.8105, -136.542, 8.53628, 0.37 ) }
    dend_115 { pt3dadd( -9.38693, -136.665, 8.57513, 0.37 ) }
    dend_115 { pt3dadd( -9.31214, -136.685, 8.54716, 0.37 ) }
    dend_115 { pt3dadd( -6.65775, -137.274, 6.83242, 0.37 ) }
    dend_115 { pt3dadd( -6.59641, -137.285, 6.78146, 0.37 ) }
    dend_115 { pt3dadd( -3.73962, -137.876, 3.87382, 0.15 ) }
    dend_115 { pt3dadd( -3.35336, -137.959, 3.39335, 0.15 ) }
    dend_115 { pt3dadd( -2.87718, -138.075, 2.67009, 0.44 ) }
    dend_115 { pt3dadd( -2.84422, -138.084, 2.60821, 0.44 ) }
    dend_115 { pt3dadd( -2.71816, -138.127, 2.28682, 0.44 ) }
    dend_115 { pt3dadd( -2.69293, -138.136, 2.22219, 0.44 ) }
    dend_115 { pt3dadd( -2.61649, -138.208, 2.11096, 0.44 ) }
    dend_115 { pt3dadd( -2.58713, -138.229, 2.04999, 0.44 ) }
    dend_115 { pt3dadd( -2.46034, -138.343, 2.04999, 0.66 ) }
    // Section: dend_93, id: dend_93, parent: dend_86 (entry count 19/100)
    dend_93 { pt3dclear() }
    dend_93 { pt3dadd( 9.68319, -144.278, 2.96685, 0.81 ) }
    dend_93 { pt3dadd( 9.50254, -145.132, 3.29839, 0.81 ) }
    dend_93 { pt3dadd( 9.20224, -146.807, 3.93992, 0.81 ) }
    dend_93 { pt3dadd( 9.18837, -146.901, 3.97457, 0.81 ) }
    dend_93 { pt3dadd( 8.99251, -148.373, 4.4868, 0.81 ) }
    dend_93 { pt3dadd( 8.78586, -150.037, 5.02263, 0.66 ) }
    dend_93 { pt3dadd( 8.6662, -151.067, 5.32626, 0.66 ) }
    dend_93 { pt3dadd( 8.65748, -151.213, 5.36363, 0.66 ) }
    dend_93 { pt3dadd( 8.655, -151.691, 5.44244, 0.88 ) }
    dend_93 { pt3dadd( 8.65748, -152.351, 5.51804, 0.59 ) }
    dend_93 { pt3dadd( 8.664, -153.078, 5.56165, 0.74 ) }
    dend_93 { pt3dadd( 8.66763, -153.819, 5.56165, 0.74 ) }
    dend_93 { pt3dadd( 8.63012, -155.379, 5.56165, 0.59 ) }
    dend_93 { pt3dadd( 8.54746, -156.951, 5.59975, 0.59 ) }
    dend_93 { pt3dadd( 8.49821, -157.582, 5.6269, 0.96 ) }
    dend_93 { pt3dadd( 8.42888, -158.238, 5.66708, 0.96 ) }
    dend_93 { pt3dadd( 8.28575, -159.093, 5.80619, 0.88 ) }
    dend_93 { pt3dadd( 8.06675, -159.954, 6.04733, 0.66 ) }
    dend_93 { pt3dadd( 7.76793, -160.705, 6.36493, 0.66 ) }
    dend_93 { pt3dadd( 7.73665, -160.762, 6.39615, 0.66 ) }
    dend_93 { pt3dadd( 7.24707, -161.559, 6.86781, 0.66 ) }
    dend_93 { pt3dadd( 6.25979, -163.048, 7.77699, 0.66 ) }
    dend_93 { pt3dadd( 5.95489, -163.49, 8.05119, 1.25 ) }
    dend_93 { pt3dadd( 5.62736, -164.018, 8.32152, 1.47 ) }
    dend_93 { pt3dadd( 5.34776, -164.522, 8.44682, 1.25 ) }
    dend_93 { pt3dadd( 5.15255, -164.899, 8.47771, 1.03 ) }
    dend_93 { pt3dadd( 4.77635, -165.676, 8.40341, 0.81 ) }
    dend_93 { pt3dadd( 4.74779, -165.739, 8.38787, 0.81 ) }
    dend_93 { pt3dadd( 4.17415, -167.091, 7.92622, 0.81 ) }
    dend_93 { pt3dadd( 3.55813, -168.635, 7.30065, 0.81 ) }
    dend_93 { pt3dadd( 3.53025, -168.706, 7.26941, 0.81 ) }
    dend_93 { pt3dadd( 3.37554, -169.099, 7.08477, 1.25 ) }
    dend_93 { pt3dadd( 3.14661, -169.678, 6.80983, 1.55 ) }
    dend_93 { pt3dadd( 2.56793, -171.103, 6.18465, 1.55 ) }
    dend_93 { pt3dadd( 2.54164, -171.164, 6.16136, 1.55 ) }
    dend_93 { pt3dadd( 2.19217, -172.039, 6.00337, 1.11 ) }
    dend_93 { pt3dadd( 2.16648, -172.107, 5.99756, 1.11 ) }
    dend_93 { pt3dadd( 1.83254, -173.037, 5.99567, 1.11 ) }
    dend_93 { pt3dadd( 1.65091, -173.616, 6.04954, 1.47 ) }
    dend_93 { pt3dadd( 1.44269, -174.33, 6.18736, 1.47 ) }
    dend_93 { pt3dadd( 1.17123, -175.464, 6.40004, 1.33 ) }
    dend_93 { pt3dadd( 1.06965, -176.094, 6.50725, 1.18 ) }
    dend_93 { pt3dadd( 1.05878, -176.174, 6.52578, 1.18 ) }
    dend_93 { pt3dadd( 0.912541, -177.177, 6.80428, 1.03 ) }
    dend_93 { pt3dadd( 0.890905, -177.31, 6.8443, 1.03 ) }
    dend_93 { pt3dadd( 0.698491, -178.288, 7.17781, 0.74 ) }
    dend_93 { pt3dadd( 0.39304, -179.473, 7.59048, 0.74 ) }
    dend_93 { pt3dadd( -0.100318, -180.957, 8.14364, 0.74 ) }
    dend_93 { pt3dadd( -0.42466, -181.779, 8.44582, 0.74 ) }
    dend_93 { pt3dadd( -0.452594, -181.84, 8.46757, 0.74 ) }
    dend_93 { pt3dadd( -0.812856, -182.603, 8.71458, 0.96 ) }
    dend_93 { pt3dadd( -1.16913, -183.348, 8.95268, 1.03 ) }
    dend_93 { pt3dadd( -1.55884, -184.185, 9.18434, 1.03 ) }
    dend_93 { pt3dadd( -1.9119, -185.064, 9.36391, 1.18 ) }
    dend_93 { pt3dadd( -2.20632, -185.872, 9.54886, 1.18 ) }
    dend_93 { pt3dadd( -2.4764, -186.64, 9.72882, 1.33 ) }
    dend_93 { pt3dadd( -2.89499, -187.804, 10.0043, 1.33 ) }
    dend_93 { pt3dadd( -3.21439, -188.676, 10.2373, 1.47 ) }
    dend_93 { pt3dadd( -3.46623, -189.326, 10.4479, 1.25 ) }
    dend_93 { pt3dadd( -3.87144, -190.275, 10.7927, 0.74 ) }
    dend_93 { pt3dadd( -4.27003, -191.101, 11.1018, 0.74 ) }
    dend_93 { pt3dadd( -4.75883, -191.997, 11.4282, 0.74 ) }
    dend_93 { pt3dadd( -4.78817, -192.046, 11.4447, 0.74 ) }
    dend_93 { pt3dadd( -5.33176, -192.988, 11.7457, 0.59 ) }
    dend_93 { pt3dadd( -5.78757, -193.778, 11.9634, 0.44 ) }
    dend_93 { pt3dadd( -6.24063, -194.594, 12.1356, 0.44 ) }
    dend_93 { pt3dadd( -6.39961, -194.92, 12.1934, 0.81 ) }
    dend_93 { pt3dadd( -6.64846, -195.532, 12.2715, 1.03 ) }
    dend_93 { pt3dadd( -6.88764, -196.208, 12.3635, 1.03 ) }
    dend_93 { pt3dadd( -7.09814, -196.99, 12.4612, 1.03 ) }
    dend_93 { pt3dadd( -7.11542, -197.137, 12.4868, 1.03 ) }
    dend_93 { pt3dadd( -7.01787, -197.965, 12.6669, 1.03 ) }
    dend_93 { pt3dadd( -6.99818, -198.033, 12.684, 1.03 ) }
    dend_93 { pt3dadd( -6.51784, -199.14, 13.1518, 0.29 ) }
    dend_93 { pt3dadd( -6.3341, -199.478, 13.346, 0.29 ) }
    dend_93 { pt3dadd( -5.84245, -200.229, 13.8594, 0.29 ) }
    dend_93 { pt3dadd( -5.31372, -201.042, 14.4511, 0.29 ) }
    dend_93 { pt3dadd( -5.28034, -201.093, 14.491, 0.29 ) }
    dend_93 { pt3dadd( -4.57627, -202.32, 15.3281, 0.29 ) }
    dend_93 { pt3dadd( -4.5317, -202.413, 15.3814, 0.29 ) }
    dend_93 { pt3dadd( -4.45794, -202.733, 15.5354, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_93 { pt3dadd( -4.44354, -203.295, 15.736, 0.81 ) }
    dend_93 { pt3dadd( -4.44766, -203.365, 15.7534, 0.81 ) }
    dend_93 { pt3dadd( -4.49617, -204.407, 15.8966, 0.81 ) }
    dend_93 { pt3dadd( -4.52167, -204.763, 15.9073, 0.59 ) }
    dend_93 { pt3dadd( -4.59029, -205.417, 15.9198, 0.74 ) }
    dend_93 { pt3dadd( -4.69263, -206.141, 15.9268, 0.88 ) }
    dend_93 { pt3dadd( -4.76914, -206.57, 15.927, 0.59 ) }
    dend_93 { pt3dadd( -4.92594, -207.294, 15.9209, 0.52 ) }
    dend_93 { pt3dadd( -5.1697, -208.133, 15.9046, 0.52 ) }
    dend_93 { pt3dadd( -5.26284, -208.409, 15.8967, 0.96 ) }
    dend_93 { pt3dadd( -5.46971, -208.959, 15.8814, 1.18 ) }
    dend_93 { pt3dadd( -5.70391, -209.535, 15.866, 1.18 ) }
    dend_93 { pt3dadd( -5.89951, -210.019, 15.8548, 1.18 ) }
    dend_93 { pt3dadd( -6.16401, -210.69, 15.8426, 0.59 ) }
    dend_93 { pt3dadd( -6.42415, -211.465, 15.8347, 0.59 ) }
    dend_93 { pt3dadd( -6.58441, -212.025, 15.8347, 1.18 ) }
    dend_93 { pt3dadd( -6.6022, -212.096, 15.8347, 1.18 ) }
    dend_93 { pt3dadd( -6.74963, -212.812, 15.8347, 1.33 ) }
    dend_93 { pt3dadd( -6.77352, -212.951, 15.8333, 1.33 ) }
    dend_93 { pt3dadd( -6.86441, -213.605, 15.8206, 1.33 ) }
    dend_93 { pt3dadd( -7.00227, -214.398, 15.7984, 1.4 ) }
    dend_93 { pt3dadd( -7.05546, -214.629, 15.8099, 1.4 ) }
    dend_93 { pt3dadd( -7.08215, -214.706, 15.8199, 1.4 ) }
    dend_93 { pt3dadd( -7.44532, -215.48, 16.0335, 0.29 ) }
    dend_93 { pt3dadd( -7.4822, -215.549, 16.0592, 0.29 ) }
    dend_93 { pt3dadd( -7.70638, -215.926, 16.2382, 0.29 ) }
    dend_93 { pt3dadd( -8.16067, -216.695, 16.6372, 0.52 ) }
    dend_93 { pt3dadd( -8.44185, -217.22, 17.034, 0.52 ) }
    dend_93 { pt3dadd( -8.66452, -217.738, 17.4719, 0.74 ) }
    dend_93 { pt3dadd( -8.81223, -218.156, 17.8571, 0.74 ) }
    dend_93 { pt3dadd( -8.83776, -218.261, 17.9507, 0.74 ) }
    dend_93 { pt3dadd( -8.89063, -218.715, 18.3195, 0.74 ) }
    dend_93 { pt3dadd( -8.97193, -220.414, 19.4568, 0.52 ) }
    dend_93 { pt3dadd( -9.01256, -221.115, 19.8199, 0.52 ) }
    dend_93 { pt3dadd( -9.02305, -221.195, 19.839, 0.52 ) }
    dend_93 { pt3dadd( -9.13768, -221.696, 19.847, 0.66 ) }
    dend_93 { pt3dadd( -9.34137, -222.355, 19.7367, 0.66 ) }
    dend_93 { pt3dadd( -9.63907, -223.111, 19.482, 0.66 ) }
    dend_93 { pt3dadd( -10.1759, -224.218, 18.861, 0.66 ) }
    dend_93 { pt3dadd( -10.8797, -225.317, 18.1708, 0.66 ) }
    dend_93 { pt3dadd( -11.1333, -225.648, 17.9605, 0.66 ) }
    dend_93 { pt3dadd( -11.1756, -225.697, 17.9318, 0.66 ) }
    dend_93 { pt3dadd( -11.6115, -226.164, 17.673, 1.03 ) }
    dend_93 { pt3dadd( -12.4929, -227.09, 17.2251, 0.81 ) }
    dend_93 { pt3dadd( -13.5553, -228.231, 16.8157, 0.81 ) }
    dend_93 { pt3dadd( -14.2037, -228.943, 16.6305, 0.81 ) }
    dend_93 { pt3dadd( -15.121, -230.033, 16.3877, 0.81 ) }
    dend_93 { pt3dadd( -15.1642, -230.088, 16.3778, 0.81 ) }
    dend_93 { pt3dadd( -15.4882, -230.541, 16.3492, 1.18 ) }
    dend_93 { pt3dadd( -15.8007, -231.139, 16.4162, 1.18 ) }
    dend_93 { pt3dadd( -15.8219, -231.205, 16.4279, 1.18 ) }
    dend_93 { pt3dadd( -15.9106, -231.924, 16.5844, 1.18 ) }
    dend_93 { pt3dadd( -15.9123, -232.004, 16.6016, 1.18 ) }
    dend_93 { pt3dadd( -15.8794, -233.034, 16.798, 0.88 ) }
    dend_93 { pt3dadd( -15.7731, -234.558, 17.0599, 0.74 ) }
    dend_93 { pt3dadd( -15.7594, -234.707, 17.0825, 0.74 ) }
    dend_93 { pt3dadd( -15.5644, -236.476, 17.3035, 0.74 ) }
    dend_93 { pt3dadd( -15.4001, -237.857, 17.4706, 0.74 ) }
    dend_93 { pt3dadd( -15.2848, -238.79, 17.5725, 1.03 ) }
    dend_93 { pt3dadd( -15.1989, -239.464, 17.6289, 1.03 ) }
    dend_93 { pt3dadd( -15.1175, -240.145, 17.6879, 1.25 ) }
    dend_93 { pt3dadd( -14.9692, -241.351, 17.7898, 1.25 ) }
    dend_93 { pt3dadd( -14.8286, -242.803, 17.9072, 0.81 ) }
    dend_93 { pt3dadd( -14.8248, -242.874, 17.9128, 0.81 ) }
    dend_93 { pt3dadd( -14.8504, -244.569, 18.0357, 0.74 ) }
    dend_93 { pt3dadd( -14.9668, -246.449, 18.1557, 0.74 ) }
    dend_93 { pt3dadd( -15.0181, -246.978, 18.1823, 0.74 ) }
    dend_93 { pt3dadd( -15.156, -247.879, 18.2101, 0.74 ) }
    dend_93 { pt3dadd( -15.4048, -248.989, 18.18, 0.59 ) }
    dend_93 { pt3dadd( -15.7738, -250.095, 18.1171, 0.59 ) }
    dend_93 { pt3dadd( -15.8079, -250.156, 18.1065, 0.59 ) }
    dend_93 { pt3dadd( -16.3604, -250.847, 17.8902, 1.11 ) }
    dend_93 { pt3dadd( -16.6993, -251.211, 17.7394, 1.33 ) }
    dend_93 { pt3dadd( -17.4172, -251.938, 17.3605, 1.03 ) }
    dend_93 { pt3dadd( -17.9915, -252.531, 16.9932, 0.81 ) }
    dend_93 { pt3dadd( -18.7524, -253.347, 16.4565, 0.74 ) }
    dend_93 { pt3dadd( -18.7939, -253.399, 16.4262, 0.74 ) }
    dend_93 { pt3dadd( -19.1303, -253.878, 16.1718, 0.74 ) }
    dend_93 { pt3dadd( -19.4102, -254.51, 15.9139, 0.74 ) }
    dend_93 { pt3dadd( -19.583, -255.393, 15.6755, 0.74 ) }
    dend_93 { pt3dadd( -19.5911, -255.613, 15.6324, 0.74 ) }
    dend_93 { pt3dadd( -19.5122, -256.406, 15.5494, 0.59 ) }
    dend_93 { pt3dadd( -19.4836, -256.556, 15.5356, 0.59 ) }
    dend_93 { pt3dadd( -19.2473, -257.29, 15.4804, 0.59 ) }
    dend_93 { pt3dadd( -19.0232, -257.833, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.9928, -257.9, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.6345, -258.648, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.5563, -258.832, 15.4561, 0.88 ) }
    dend_93 { pt3dadd( -18.4506, -259.151, 15.4561, 0.59 ) }
    dend_93 { pt3dadd( -18.396, -259.653, 15.4952, 0.52 ) }
    dend_93 { pt3dadd( -18.4721, -260.092, 15.5605, 0.74 ) }
    dend_93 { pt3dadd( -18.4944, -260.146, 15.5765, 0.74 ) }
    dend_93 { pt3dadd( -18.8868, -260.822, 15.8429, 0.74 ) }
    dend_93 { pt3dadd( -18.924, -260.879, 15.8669, 0.74 ) }
    dend_93 { pt3dadd( -19.5239, -261.749, 16.2447, 0.66 ) }
    dend_93 { pt3dadd( -20.0685, -262.514, 16.5836, 0.66 ) }
    dend_93 { pt3dadd( -20.7472, -263.458, 17.0049, 0.66 ) }
    dend_93 { pt3dadd( -20.8225, -263.571, 17.0514, 0.66 ) }
    dend_93 { pt3dadd( -21.3834, -264.469, 17.3977, 0.88 ) }
    dend_93 { pt3dadd( -21.4522, -264.597, 17.4365, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_93 { pt3dadd( -21.7514, -265.3, 17.5743, 1.18 ) }
    dend_93 { pt3dadd( -21.773, -265.367, 17.5824, 1.18 ) }
    dend_93 { pt3dadd( -22.0105, -266.132, 17.6065, 1.18 ) }
    dend_93 { pt3dadd( -22.0372, -266.21, 17.6083, 1.18 ) }
    dend_93 { pt3dadd( -22.2929, -266.898, 17.6186, 0.96 ) }
    dend_93 { pt3dadd( -22.3191, -266.966, 17.6192, 0.96 ) }
    dend_93 { pt3dadd( -22.6204, -267.808, 17.6192, 0.96 ) }
    dend_93 { pt3dadd( -22.9185, -268.685, 17.593, 0.66 ) }
    dend_93 { pt3dadd( -23.2019, -269.583, 17.5448, 0.59 ) }
    dend_93 { pt3dadd( -23.4621, -270.528, 17.4809, 0.59 ) }
    dend_93 { pt3dadd( -23.4874, -270.633, 17.4726, 0.59 ) }
    dend_93 { pt3dadd( -23.7045, -271.665, 17.3869, 0.59 ) }
    dend_93 { pt3dadd( -23.8069, -272.238, 17.3357, 0.96 ) }
    dend_93 { pt3dadd( -23.9331, -273.169, 17.187, 1.11 ) }
    dend_93 { pt3dadd( -24.0595, -274.224, 16.9274, 1.11 ) }
    dend_93 { pt3dadd( -24.0695, -274.291, 16.9071, 1.11 ) }
    dend_93 { pt3dadd( -24.3471, -275.588, 16.4959, 1.11 ) }
    dend_93 { pt3dadd( -24.3677, -275.661, 16.4718, 1.11 ) }
    dend_93 { pt3dadd( -24.8303, -276.944, 16.0687, 0.74 ) }
    dend_93 { pt3dadd( -25.1187, -277.607, 15.8613, 0.44 ) }
    dend_93 { pt3dadd( -25.6797, -278.71, 15.5456, 0.44 ) }
    dend_93 { pt3dadd( -26.2821, -279.766, 15.3004, 0.44 ) }
    dend_93 { pt3dadd( -26.5125, -280.128, 15.2438, 1.11 ) }
    dend_93 { pt3dadd( -27.0339, -280.919, 15.1862, 1.11 ) }
    dend_93 { pt3dadd( -27.5453, -281.672, 15.2042, 1.25 ) }
    dend_93 { pt3dadd( -28.0809, -282.494, 15.2536, 1.25 ) }
    dend_93 { pt3dadd( -28.71, -283.56, 15.3271, 1.25 ) }
    dend_93 { pt3dadd( -29.033, -284.175, 15.3735, 0.81 ) }
    dend_93 { pt3dadd( -29.3998, -285.007, 15.4185, 0.81 ) }
    dend_93 { pt3dadd( -29.6522, -285.785, 15.4422, 0.81 ) }
    dend_93 { pt3dadd( -29.8657, -286.712, 15.4462, 0.66 ) }
    dend_93 { pt3dadd( -29.9232, -287.478, 15.4206, 0.52 ) }
    dend_93 { pt3dadd( -29.9163, -287.551, 15.4149, 0.52 ) }
    dend_93 { pt3dadd( -29.7624, -288.248, 15.2858, 1.03 ) }
    dend_93 { pt3dadd( -29.5632, -288.871, 15.1376, 1.33 ) }
    dend_93 { pt3dadd( -29.5288, -288.962, 15.1141, 1.33 ) }
    dend_93 { pt3dadd( -29.2759, -289.659, 14.867, 1.33 ) }
    dend_93 { pt3dadd( -29.0543, -290.485, 14.5474, 1.33 ) }
    dend_93 { pt3dadd( -28.8384, -291.509, 14.1506, 0.59 ) }
    dend_93 { pt3dadd( -28.6811, -292.641, 13.73, 0.59 ) }
    dend_93 { pt3dadd( -28.6249, -293.313, 13.4751, 0.59 ) }
    dend_93 { pt3dadd( -28.5967, -294.769, 12.9484, 0.59 ) }
    dend_93 { pt3dadd( -28.6459, -295.733, 12.6102, 0.59 ) }
    dend_93 { pt3dadd( -28.7094, -296.271, 12.4501, 1.03 ) }
    dend_93 { pt3dadd( -28.8552, -297.123, 12.2725, 1.03 ) }
    dend_93 { pt3dadd( -28.8841, -297.26, 12.2498, 1.03 ) }
    dend_93 { pt3dadd( -29.0647, -298.187, 12.1679, 1.03 ) }
    dend_93 { pt3dadd( -29.0749, -298.257, 12.1679, 1.03 ) }
    dend_93 { pt3dadd( -29.1131, -299.5, 12.2221, 1.03 ) }
    dend_93 { pt3dadd( -29.0659, -300.177, 12.278, 0.52 ) }
    dend_93 { pt3dadd( -29.0528, -300.256, 12.2871, 0.52 ) }
    dend_93 { pt3dadd( -28.7404, -301.552, 12.6813, 0.52 ) }
    dend_93 { pt3dadd( -28.7101, -301.645, 12.7278, 0.52 ) }
    dend_93 { pt3dadd( -28.3178, -302.84, 13.5432, 0.52 ) }
    dend_93 { pt3dadd( -28.1339, -303.369, 14.0232, 0.52 ) }
    dend_93 { pt3dadd( -28.1199, -303.419, 14.0746, 0.52 ) }
    dend_93 { pt3dadd( -27.7748, -305.057, 15.9524, 0.52 ) }
    dend_93 { pt3dadd( -27.768, -305.13, 16.0471, 0.52 ) }
    dend_93 { pt3dadd( -27.7564, -305.802, 16.7649, 0.52 ) }
    dend_93 { pt3dadd( -27.7612, -305.876, 16.8328, 0.52 ) }
    dend_93 { pt3dadd( -27.7877, -306.456, 17.2654, 0.52 ) }
    dend_93 { pt3dadd( -27.7871, -306.517, 17.3001, 0.52 ) }
    dend_93 { pt3dadd( -27.6479, -307.975, 17.7929, 0.52 ) }
    dend_93 { pt3dadd( -27.3652, -309.574, 18.236, 0.52 ) }
    dend_93 { pt3dadd( -27.341, -309.675, 18.2613, 0.52 ) }
    dend_93 { pt3dadd( -27.1974, -310.196, 18.3868, 0.88 ) }
    dend_93 { pt3dadd( -27.1758, -310.261, 18.4013, 0.88 ) }
    dend_93 { pt3dadd( -26.8996, -311.05, 18.5344, 1.03 ) }
    dend_93 { pt3dadd( -26.5264, -311.953, 18.5344, 1.03 ) }
    // Section: dend_87, id: dend_87, parent: dend_86 (entry count 69/100)
    dend_87 { pt3dclear() }
    dend_87 { pt3dadd( 9.68319, -144.278, 2.96685, 1.25 ) }
    dend_87 { pt3dadd( 10.1999, -145.115, 2.96578, 1.25 ) }
    dend_87 { pt3dadd( 10.5387, -145.902, 2.9638, 1.25 ) }
    dend_87 { pt3dadd( 10.8158, -146.687, 2.96531, 1.03 ) }
    dend_87 { pt3dadd( 11.119, -147.791, 2.89867, 0.59 ) }
    dend_87 { pt3dadd( 11.1318, -147.861, 2.89177, 0.59 ) }
    dend_87 { pt3dadd( 11.2514, -148.932, 2.76182, 0.59 ) }
    dend_87 { pt3dadd( 11.2263, -149.916, 2.61793, 0.59 ) }
    dend_87 { pt3dadd( 11.2195, -149.975, 2.60777, 0.59 ) }
    dend_87 { pt3dadd( 11.0762, -150.975, 2.42286, 0.59 ) }
    dend_87 { pt3dadd( 10.9617, -151.714, 2.2817, 0.59 ) }
    dend_87 { pt3dadd( 10.9325, -152.411, 2.16084, 0.88 ) }
    dend_87 { pt3dadd( 11.0023, -152.989, 2.07429, 1.03 ) }
    dend_87 { pt3dadd( 11.0575, -153.203, 2.05095, 1.03 ) }
    dend_87 { pt3dadd( 11.3876, -154.079, 1.99464, 1.03 ) }
    dend_87 { pt3dadd( 11.453, -154.207, 1.99464, 1.03 ) }
    dend_87 { pt3dadd( 12.0854, -155.153, 1.99464, 1.03 ) }
    dend_87 { pt3dadd( 12.5382, -155.733, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 12.5769, -155.778, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 13.0065, -156.248, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 13.0673, -156.309, 1.99464, 1.11 ) }
    dend_87 { pt3dadd( 13.584, -156.784, 1.99464, 1.25 ) }
    dend_87 { pt3dadd( 13.9789, -157.125, 1.99464, 1.25 ) }
    dend_87 { pt3dadd( 14.207, -157.332, 1.9932, 1.03 ) }
    dend_87 { pt3dadd( 14.5891, -157.743, 1.9884, 0.81 ) }
    dend_87 { pt3dadd( 14.8768, -158.114, 1.98252, 0.59 ) }
    dend_87 { pt3dadd( 15.2439, -158.772, 1.91749, 0.59 ) }
    dend_87 { pt3dadd( 15.2638, -158.851, 1.90231, 0.59 ) }
    dend_87 { pt3dadd( 15.2894, -159.27, 1.79361, 0.59 ) }
    dend_87 { pt3dadd( 15.2574, -160.041, 1.58567, 0.59 ) }
    dend_87 { pt3dadd( 15.2528, -160.11, 1.56868, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_87 { pt3dadd( 15.1829, -161.189, 1.34106, 0.59 ) }
    dend_87 { pt3dadd( 15.1661, -161.88, 1.23197, 0.59 ) }
    dend_87 { pt3dadd( 15.177, -162.202, 1.21777, 1.03 ) }
    dend_87 { pt3dadd( 15.254, -163.125, 1.3053, 1.33 ) }
    dend_87 { pt3dadd( 15.3857, -164.091, 1.47414, 1.33 ) }
    dend_87 { pt3dadd( 15.5543, -165.082, 1.70164, 1.33 ) }
    dend_87 { pt3dadd( 15.9236, -166.7, 2.22036, 1.33 ) }
    dend_87 { pt3dadd( 16.4902, -168.743, 2.98792, 1.33 ) }
    dend_87 { pt3dadd( 17.0027, -170.3, 3.69888, 0.74 ) }
    dend_87 { pt3dadd( 17.273, -170.999, 4.06659, 0.74 ) }
    dend_87 { pt3dadd( 17.3498, -171.181, 4.17042, 0.74 ) }
    dend_87 { pt3dadd( 17.8957, -172.399, 4.84312, 0.74 ) }
    dend_87 { pt3dadd( 18.1504, -172.937, 5.12446, 0.74 ) }
    dend_87 { pt3dadd( 18.5519, -173.813, 5.47995, 1.18 ) }
    dend_87 { pt3dadd( 19.023, -175.041, 5.77777, 1.18 ) }
    dend_87 { pt3dadd( 19.3529, -176.08, 5.94682, 1.18 ) }
    dend_87 { pt3dadd( 19.8137, -177.816, 6.10076, 1.18 ) }
    dend_87 { pt3dadd( 19.8282, -177.885, 6.10087, 1.18 ) }
    dend_87 { pt3dadd( 20.068, -179.182, 6.04735, 1.18 ) }
    dend_87 { pt3dadd( 20.2733, -180.447, 5.92151, 0.81 ) }
    dend_87 { pt3dadd( 20.3541, -180.993, 5.85871, 0.74 ) }
    dend_87 { pt3dadd( 20.3964, -181.291, 5.82236, 0.74 ) }
    dend_87 { pt3dadd( 20.5422, -182.274, 5.70689, 0.74 ) }
    dend_87 { pt3dadd( 20.5566, -182.353, 5.69923, 0.74 ) }
    dend_87 { pt3dadd( 20.7116, -182.956, 5.68687, 1.47 ) }
    dend_87 { pt3dadd( 20.9901, -183.759, 5.78639, 1.47 ) }
    dend_87 { pt3dadd( 21.245, -184.398, 5.9052, 1.47 ) }
    dend_87 { pt3dadd( 21.6978, -185.58, 6.15462, 1.47 ) }
    dend_87 { pt3dadd( 21.854, -186.069, 6.25785, 1.69 ) }
    dend_87 { pt3dadd( 22.1751, -187.22, 6.49653, 1.84 ) }
    dend_87 { pt3dadd( 22.3909, -188.151, 6.67679, 0.88 ) }
    dend_87 { pt3dadd( 22.5081, -188.834, 6.79655, 0.66 ) }
    dend_87 { pt3dadd( 22.7048, -190.482, 7.05627, 0.66 ) }
    dend_87 { pt3dadd( 22.7811, -192.084, 7.22703, 0.66 ) }
    dend_87 { pt3dadd( 22.7808, -192.156, 7.23017, 0.66 ) }
    dend_87 { pt3dadd( 22.7091, -193.715, 7.18546, 0.66 ) }
    dend_87 { pt3dadd( 22.6861, -194.547, 7.11825, 0.96 ) }
    dend_87 { pt3dadd( 22.6878, -194.618, 7.11616, 0.96 ) }
    dend_87 { pt3dadd( 22.8122, -195.522, 7.17778, 0.74 ) }
    dend_87 { pt3dadd( 23.0669, -196.508, 7.35283, 0.74 ) }
    dend_87 { pt3dadd( 23.0877, -196.567, 7.38593, 0.74 ) }
    dend_87 { pt3dadd( 23.524, -197.567, 8.28201, 0.74 ) }
    dend_87 { pt3dadd( 24.0612, -198.674, 9.45838, 1.03 ) }
    dend_87 { pt3dadd( 24.3787, -199.299, 10.1384, 1.62 ) }
    dend_87 { pt3dadd( 24.6374, -199.789, 10.6719, 1.62 ) }
    dend_87 { pt3dadd( 25.8096, -202.107, 13.0452, 0.66 ) }
    dend_87 { pt3dadd( 26.044, -202.627, 13.4937, 0.66 ) }
    dend_87 { pt3dadd( 26.1954, -203.006, 13.7196, 0.66 ) }
    dend_87 { pt3dadd( 26.6121, -204.15, 14.115, 0.66 ) }
    dend_87 { pt3dadd( 26.918, -204.992, 14.2817, 1.11 ) }
    dend_87 { pt3dadd( 27.2512, -205.89, 14.3713, 1.4 ) }
    dend_87 { pt3dadd( 27.6673, -207.028, 14.432, 1.11 ) }
    dend_87 { pt3dadd( 28.4249, -209.168, 14.6644, 1.11 ) }
    dend_87 { pt3dadd( 28.4478, -209.234, 14.6749, 1.11 ) }
    dend_87 { pt3dadd( 29.3088, -211.659, 15.1995, 0.96 ) }
    dend_87 { pt3dadd( 29.3326, -211.722, 15.2208, 0.96 ) }
    dend_87 { pt3dadd( 29.8949, -213.187, 15.9409, 0.81 ) }
    dend_87 { pt3dadd( 30.0209, -213.539, 16.1786, 0.81 ) }
    dend_87 { pt3dadd( 30.152, -213.911, 16.4992, 1.11 ) }
    dend_87 { pt3dadd( 30.2131, -214.083, 16.6576, 1.11 ) }
    dend_87 { pt3dadd( 30.7387, -215.32, 17.8429, 1.11 ) }
    dend_87 { pt3dadd( 31.0737, -215.975, 18.3781, 0.59 ) }
    dend_87 { pt3dadd( 31.108, -216.028, 18.4107, 0.59 ) }
    dend_87 { pt3dadd( 31.6921, -216.84, 18.8564, 0.59 ) }
    dend_87 { pt3dadd( 31.7516, -216.922, 18.894, 0.59 ) }
    dend_87 { pt3dadd( 32.588, -218.137, 19.258, 0.59 ) }
    dend_87 { pt3dadd( 32.7575, -218.397, 19.277, 0.59 ) }
    dend_87 { pt3dadd( 33.3576, -219.361, 19.2731, 0.59 ) }
    dend_87 { pt3dadd( 33.4317, -219.493, 19.2699, 0.59 ) }
    dend_87 { pt3dadd( 33.5601, -219.773, 19.2568, 1.03 ) }
    dend_87 { pt3dadd( 33.8484, -220.728, 19.1941, 1.03 ) }
    dend_87 { pt3dadd( 33.9387, -221.614, 19.112, 1.47 ) }
    dend_87 { pt3dadd( 33.9375, -221.687, 19.1059, 1.47 ) }
    dend_87 { pt3dadd( 33.8843, -222.058, 19.0768, 1.47 ) }
    dend_87 { pt3dadd( 33.8317, -222.388, 19.0608, 1.47 ) }
    dend_87 { pt3dadd( 33.663, -223.391, 19.0474, 0.74 ) }
    dend_87 { pt3dadd( 33.6498, -223.461, 19.0489, 0.74 ) }
    dend_87 { pt3dadd( 33.5484, -224.087, 19.0772, 0.96 ) }
    dend_87 { pt3dadd( 33.5308, -224.227, 19.0829, 0.96 ) }
    dend_87 { pt3dadd( 33.4584, -225.068, 19.1109, 0.96 ) }
    dend_87 { pt3dadd( 33.4452, -226.152, 19.1375, 0.96 ) }
    dend_87 { pt3dadd( 33.4795, -226.696, 19.1399, 1.47 ) }
    dend_87 { pt3dadd( 33.5697, -227.584, 19.1305, 1.47 ) }
    dend_87 { pt3dadd( 33.5817, -227.663, 19.1287, 1.47 ) }
    dend_87 { pt3dadd( 33.7932, -228.824, 19.097, 1.47 ) }
    dend_87 { pt3dadd( 34.0671, -229.991, 19.0608, 1.47 ) }
    dend_87 { pt3dadd( 34.3355, -230.911, 19.0252, 1.18 ) }
    dend_87 { pt3dadd( 34.6144, -231.731, 18.9904, 1.47 ) }
    dend_87 { pt3dadd( 34.9701, -232.677, 18.987, 1.69 ) }
    dend_87 { pt3dadd( 35.0116, -232.783, 18.9892, 1.69 ) }
    dend_87 { pt3dadd( 35.2571, -233.381, 19.0759, 1.69 ) }
    dend_87 { pt3dadd( 35.6249, -234.275, 19.3044, 0.88 ) }
    dend_87 { pt3dadd( 36.0161, -235.233, 19.6377, 0.74 ) }
    dend_87 { pt3dadd( 36.914, -237.389, 20.5454, 0.74 ) }
    dend_87 { pt3dadd( 36.9556, -237.479, 20.5887, 0.74 ) }
    dend_87 { pt3dadd( 37.7635, -239.2, 21.6413, 0.74 ) }
    dend_87 { pt3dadd( 37.874, -239.435, 21.8174, 0.74 ) }
    dend_87 { pt3dadd( 38.0194, -239.768, 22.1102, 0.74 ) }
    dend_87 { pt3dadd( 38.0585, -239.866, 22.2068, 0.74 ) }
    dend_87 { pt3dadd( 38.2681, -240.795, 23.0388, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_87 { pt3dadd( 38.4703, -242.813, 24.4864, 0.74 ) }
    dend_87 { pt3dadd( 38.4667, -242.896, 24.5278, 0.74 ) }
    dend_87 { pt3dadd( 38.3081, -244.03, 25.024, 0.74 ) }
    dend_87 { pt3dadd( 38.2934, -244.097, 25.0482, 0.74 ) }
    dend_87 { pt3dadd( 37.7314, -246.056, 25.5916, 0.74 ) }
    dend_87 { pt3dadd( 37.7112, -246.115, 25.6013, 0.74 ) }
    dend_87 { pt3dadd( 37.3785, -247.094, 25.6388, 0.74 ) }
    dend_87 { pt3dadd( 37.2345, -247.581, 25.6512, 1.18 ) }
    dend_87 { pt3dadd( 37.0723, -248.373, 25.6393, 1.18 ) }
    dend_87 { pt3dadd( 36.9982, -248.892, 25.6239, 0.81 ) }
    dend_87 { pt3dadd( 37.038, -250.567, 25.4867, 0.81 ) }
    dend_87 { pt3dadd( 37.0458, -250.637, 25.4786, 0.81 ) }
    dend_87 { pt3dadd( 37.3885, -251.944, 25.2801, 0.81 ) }
    dend_87 { pt3dadd( 37.9359, -253.386, 25.0212, 0.74 ) }
    dend_87 { pt3dadd( 37.9744, -253.455, 25.0073, 0.74 ) }
    dend_87 { pt3dadd( 39.2373, -255.221, 24.6177, 0.74 ) }
    dend_87 { pt3dadd( 39.2854, -255.275, 24.6102, 0.74 ) }
    dend_87 { pt3dadd( 40.1997, -256.251, 24.5734, 0.74 ) }
    dend_87 { pt3dadd( 40.2488, -256.301, 24.5771, 0.74 ) }
    dend_87 { pt3dadd( 41.2546, -257.397, 24.7891, 0.74 ) }
    dend_87 { pt3dadd( 41.3035, -257.458, 24.8081, 0.74 ) }
    dend_87 { pt3dadd( 42.3345, -259.062, 25.4729, 0.74 ) }
    dend_87 { pt3dadd( 42.6327, -259.62, 25.7504, 1.03 ) }
    dend_87 { pt3dadd( 43.0298, -260.568, 26.2625, 1.03 ) }
    dend_87 { pt3dadd( 43.0512, -260.628, 26.2931, 1.03 ) }
    dend_87 { pt3dadd( 43.3664, -261.71, 26.8264, 1.25 ) }
    dend_87 { pt3dadd( 43.6052, -262.622, 27.2051, 1.47 ) }
    dend_87 { pt3dadd( 43.9573, -264.173, 27.6531, 1.47 ) }
    dend_87 { pt3dadd( 44.1239, -264.935, 27.7712, 0.96 ) }
    dend_87 { pt3dadd( 44.4856, -266.684, 27.8221, 0.74 ) }
    dend_87 { pt3dadd( 44.5062, -266.788, 27.8142, 0.74 ) }
    dend_87 { pt3dadd( 44.8031, -268.509, 27.4747, 0.74 ) }
    dend_87 { pt3dadd( 45.0071, -269.884, 27.1183, 0.88 ) }
    dend_87 { pt3dadd( 45.2373, -271.545, 26.5935, 1.11 ) }
    dend_87 { pt3dadd( 45.3762, -272.637, 26.2402, 1.11 ) }
    dend_87 { pt3dadd( 45.5208, -273.859, 25.8484, 0.66 ) }
    dend_87 { pt3dadd( 45.7293, -275.456, 25.3474, 0.66 ) }
    dend_87 { pt3dadd( 45.9525, -276.881, 24.9339, 0.66 ) }
    dend_87 { pt3dadd( 45.9649, -276.949, 24.9181, 0.66 ) }
    dend_87 { pt3dadd( 46.0879, -277.516, 24.7954, 1.33 ) }
    dend_87 { pt3dadd( 46.3233, -278.335, 24.5744, 1.33 ) }
    dend_87 { pt3dadd( 46.7199, -279.435, 24.2255, 0.74 ) }
    dend_87 { pt3dadd( 47.1546, -280.546, 23.8754, 0.74 ) }
    dend_87 { pt3dadd( 47.1778, -280.613, 23.8595, 0.74 ) }
    dend_87 { pt3dadd( 47.5294, -281.802, 23.7307, 0.59 ) }
    dend_87 { pt3dadd( 47.8064, -282.861, 23.7143, 0.59 ) }
    dend_87 { pt3dadd( 47.8427, -283.009, 23.7256, 0.59 ) }
    dend_87 { pt3dadd( 48.2255, -284.78, 24.0161, 0.59 ) }
    dend_87 { pt3dadd( 48.5828, -286.655, 24.4774, 0.59 ) }
    dend_87 { pt3dadd( 48.8083, -287.897, 24.8558, 0.59 ) }
    dend_87 { pt3dadd( 48.8191, -287.962, 24.8799, 0.59 ) }
    dend_87 { pt3dadd( 48.9098, -288.55, 25.1066, 0.59 ) }
    dend_87 { pt3dadd( 49.0781, -289.52, 25.477, 0.74 ) }
    dend_87 { pt3dadd( 49.3679, -290.979, 26.0407, 0.74 ) }
    dend_87 { pt3dadd( 49.3788, -291.037, 26.0574, 0.74 ) }
    dend_87 { pt3dadd( 49.4728, -291.688, 26.2301, 1.33 ) }
    dend_87 { pt3dadd( 49.4796, -291.766, 26.2513, 1.33 ) }
    dend_87 { pt3dadd( 49.4959, -292.43, 26.3456, 1.55 ) }
    dend_87 { pt3dadd( 49.4772, -292.651, 26.3405, 1.55 ) }
    dend_87 { pt3dadd( 49.3035, -293.497, 26.1553, 1.11 ) }
    dend_87 { pt3dadd( 49.066, -294.403, 25.897, 0.88 ) }
    dend_87 { pt3dadd( 48.8105, -295.259, 25.6081, 0.88 ) }
    dend_87 { pt3dadd( 48.2988, -296.969, 24.8519, 0.52 ) }
    dend_87 { pt3dadd( 48.0361, -298.109, 24.2485, 0.52 ) }
    dend_87 { pt3dadd( 47.947, -299.111, 23.6644, 0.52 ) }
    dend_87 { pt3dadd( 47.9502, -299.18, 23.6194, 0.52 ) }
    dend_87 { pt3dadd( 48.0612, -299.7, 23.2861, 0.52 ) }
    dend_87 { pt3dadd( 48.5866, -300.736, 22.7958, 0.81 ) }
    dend_87 { pt3dadd( 49.4453, -301.826, 22.5651, 0.81 ) }
    dend_87 { pt3dadd( 50.3332, -302.761, 22.5462, 0.81 ) }
    dend_87 { pt3dadd( 50.3819, -302.812, 22.5542, 0.81 ) }
    dend_87 { pt3dadd( 51.0824, -303.647, 22.7598, 1.25 ) }
    dend_87 { pt3dadd( 51.5792, -304.42, 22.9939, 1.4 ) }
    dend_87 { pt3dadd( 51.7928, -304.862, 23.1456, 1.4 ) }
    dend_87 { pt3dadd( 52.1086, -305.924, 23.4636, 0.88 ) }
    dend_87 { pt3dadd( 52.2219, -306.527, 23.6119, 0.59 ) }
    dend_87 { pt3dadd( 52.3877, -307.834, 23.8523, 0.59 ) }
    dend_87 { pt3dadd( 52.4899, -309.221, 24.012, 0.59 ) }
    dend_87 { pt3dadd( 52.4919, -309.362, 24.0254, 0.59 ) }
    dend_87 { pt3dadd( 52.512, -310.429, 24.0893, 0.59 ) }
    dend_87 { pt3dadd( 52.5321, -310.816, 24.1184, 0.81 ) }
    dend_87 { pt3dadd( 52.6198, -311.463, 24.211, 0.88 ) }
    dend_87 { pt3dadd( 52.7434, -311.978, 24.3223, 0.44 ) }
    dend_87 { pt3dadd( 52.7671, -312.042, 24.34, 0.44 ) }
    dend_87 { pt3dadd( 53.3145, -313.305, 24.8259, 0.44 ) }
    dend_87 { pt3dadd( 53.8687, -314.395, 25.3584, 0.81 ) }
    dend_87 { pt3dadd( 54.1692, -314.999, 25.6811, 0.96 ) }
    dend_87 { pt3dadd( 54.3659, -315.428, 25.9137, 0.96 ) }
    dend_87 { pt3dadd( 54.3904, -315.498, 25.95, 0.96 ) }
    dend_87 { pt3dadd( 54.6594, -316.626, 26.497, 0.66 ) }
    dend_87 { pt3dadd( 54.671, -317.064, 26.6808, 0.44 ) }
    dend_87 { pt3dadd( 54.563, -317.797, 26.8496, 0.44 ) }
    dend_87 { pt3dadd( 54.3412, -318.675, 26.9723, 0.44 ) }
    dend_87 { pt3dadd( 54.1773, -319.241, 27.0009, 0.44 ) }
    dend_87 { pt3dadd( 54.162, -319.309, 26.988, 0.44 ) }
    dend_87 { pt3dadd( 54.1319, -319.513, 26.9065, 0.74 ) }
    dend_87 { pt3dadd( 54.1246, -319.608, 26.8664, 0.74 ) }
    dend_87 { pt3dadd( 54.1317, -320.622, 26.4399, 0.74 ) }
    dend_87 { pt3dadd( 54.1344, -320.689, 26.4173, 0.74 ) }
    dend_87 { pt3dadd( 54.1512, -322.04, 26.0698, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_87 { pt3dadd( 54.1437, -322.498, 25.9871, 0.88 ) }
    dend_87 { pt3dadd( 54.1363, -323.089, 25.9182, 1.18 ) }
    dend_87 { pt3dadd( 54.1355, -323.159, 25.9132, 1.18 ) }
    dend_87 { pt3dadd( 54.1689, -324.396, 25.8074, 1.18 ) }
    dend_87 { pt3dadd( 54.2518, -325.414, 25.7222, 1.18 ) }
    dend_87 { pt3dadd( 54.3832, -326.238, 25.6707, 0.52 ) }
    dend_87 { pt3dadd( 54.6558, -327.315, 25.5644, 0.52 ) }
    dend_87 { pt3dadd( 54.6924, -327.41, 25.5514, 0.52 ) }
    dend_87 { pt3dadd( 55.3486, -328.674, 25.2842, 0.52 ) }
    dend_87 { pt3dadd( 55.7194, -329.205, 25.1193, 0.88 ) }
    dend_87 { pt3dadd( 56.2267, -329.819, 24.8769, 1.18 ) }
    dend_87 { pt3dadd( 56.2858, -329.887, 24.8499, 1.18 ) }
    dend_87 { pt3dadd( 56.8518, -330.556, 24.6082, 1.18 ) }
    dend_87 { pt3dadd( 57.2858, -331.21, 24.4145, 0.66 ) }
    dend_87 { pt3dadd( 57.3535, -331.343, 24.3828, 0.66 ) }
    dend_87 { pt3dadd( 57.5855, -331.969, 24.2365, 0.66 ) }
    dend_87 { pt3dadd( 57.8567, -332.997, 23.9307, 0.66 ) }
    dend_87 { pt3dadd( 57.9008, -333.204, 23.8633, 0.66 ) }
    dend_87 { pt3dadd( 58.1806, -334.884, 23.2841, 0.66 ) }
    dend_87 { pt3dadd( 58.265, -335.496, 23.0748, 1.18 ) }
    dend_87 { pt3dadd( 58.3652, -336.319, 22.7735, 1.47 ) }
    dend_87 { pt3dadd( 58.4827, -337.85, 22.1241, 1.77 ) }
    dend_87 { pt3dadd( 58.5082, -338.213, 21.9571, 2.06 ) }
    dend_87 { pt3dadd( 58.5153, -338.298, 21.9172, 2.06 ) }
    dend_87 { pt3dadd( 58.5808, -338.695, 21.7152, 2.06 ) }
    dend_87 { pt3dadd( 58.596, -338.755, 21.6832, 2.06 ) }
    dend_87 { pt3dadd( 59.0905, -340.025, 21.0296, 0.37 ) }
    dend_87 { pt3dadd( 59.4923, -340.838, 20.676, 0.37 ) }
    dend_87 { pt3dadd( 59.5278, -340.907, 20.6476, 0.37 ) }
    dend_87 { pt3dadd( 60.1751, -342.16, 20.2517, 0.37 ) }
    dend_87 { pt3dadd( 60.2053, -342.222, 20.2384, 0.37 ) }
    dend_87 { pt3dadd( 60.5491, -343.037, 20.1532, 0.37 ) }
    dend_87 { pt3dadd( 60.7186, -343.528, 20.1625, 0.88 ) }
    dend_87 { pt3dadd( 60.8378, -344.091, 20.2744, 0.81 ) }
    dend_87 { pt3dadd( 60.9666, -345.082, 20.5907, 0.52 ) }
    dend_87 { pt3dadd( 61.0192, -345.948, 20.9543, 0.52 ) }
    dend_87 { pt3dadd( 61.0701, -346.484, 21.192, 0.88 ) }
    dend_87 { pt3dadd( 61.1375, -347.076, 21.4748, 0.88 ) }
    dend_87 { pt3dadd( 61.4581, -348.737, 22.348, 0.52 ) }
    dend_87 { pt3dadd( 61.6923, -349.55, 22.7774, 0.52 ) }
    dend_87 { pt3dadd( 61.7377, -349.679, 22.8416, 0.52 ) }
    dend_87 { pt3dadd( 62.1566, -350.727, 23.3288, 0.52 ) }
    dend_87 { pt3dadd( 62.189, -350.807, 23.3603, 0.52 ) }
    dend_87 { pt3dadd( 62.721, -352.143, 23.7829, 0.52 ) }
    dend_87 { pt3dadd( 63.0525, -353.049, 23.9175, 0.52 ) }
    dend_87 { pt3dadd( 63.2185, -353.61, 23.9637, 0.96 ) }
    dend_87 { pt3dadd( 63.3955, -354.427, 23.984, 1.18 ) }
    dend_87 { pt3dadd( 63.5055, -355.443, 23.9474, 1.18 ) }
    dend_87 { pt3dadd( 63.5097, -355.537, 23.937, 1.18 ) }
    dend_87 { pt3dadd( 63.3956, -356.726, 23.6436, 0.44 ) }
    dend_87 { pt3dadd( 63.1923, -357.623, 23.3702, 0.44 ) }
    dend_87 { pt3dadd( 63.1143, -357.843, 23.2947, 0.44 ) }
    dend_87 { pt3dadd( 62.8344, -358.356, 23.1217, 0.44 ) }
    dend_87 { pt3dadd( 62.7657, -358.467, 23.0938, 0.44 ) }
    dend_87 { pt3dadd( 62.3758, -359.139, 23.0001, 0.44 ) }
    dend_87 { pt3dadd( 62.3263, -359.235, 22.9971, 0.44 ) }
    dend_87 { pt3dadd( 62.155, -359.645, 22.9751, 0.74 ) }
    dend_87 { pt3dadd( 61.9734, -360.368, 22.9294, 0.74 ) }
    dend_87 { pt3dadd( 61.874, -361.091, 22.8819, 0.74 ) }
    dend_87 { pt3dadd( 61.8649, -361.241, 22.8716, 0.74 ) }
    dend_87 { pt3dadd( 61.8705, -361.892, 22.8262, 0.88 ) }
    dend_87 { pt3dadd( 61.8741, -361.963, 22.8111, 0.88 ) }
    dend_87 { pt3dadd( 61.9699, -362.71, 22.5769, 1.11 ) }
    dend_87 { pt3dadd( 62.0853, -363.325, 22.3454, 1.11 ) }
    dend_87 { pt3dadd( 62.1375, -363.563, 22.2513, 1.11 ) }
    dend_87 { pt3dadd( 62.261, -364.032, 22.0739, 1.11 ) }
    dend_87 { pt3dadd( 62.7181, -365.586, 21.5513, 0.44 ) }
    dend_87 { pt3dadd( 63.089, -366.786, 21.1714, 0.44 ) }
    dend_87 { pt3dadd( 63.142, -366.967, 21.0959, 0.74 ) }
    dend_87 { pt3dadd( 63.3027, -367.538, 20.8202, 0.74 ) }
    dend_87 { pt3dadd( 63.4674, -368.268, 20.4488, 0.37 ) }
    dend_87 { pt3dadd( 63.6313, -369.332, 19.9041, 0.37 ) }
    dend_87 { pt3dadd( 63.6303, -369.402, 19.8655, 0.37 ) }
    dend_87 { pt3dadd( 63.3025, -370.951, 18.5826, 0.37 ) }
    dend_87 { pt3dadd( 63.2816, -371.016, 18.5195, 0.37 ) }
    dend_87 { pt3dadd( 63.1019, -371.395, 18.1155, 0.96 ) }
    dend_87 { pt3dadd( 62.8948, -371.721, 17.7208, 0.96 ) }
    dend_87 { pt3dadd( 62.3526, -372.468, 16.8055, 0.96 ) }
    dend_87 { pt3dadd( 61.6226, -373.485, 15.688, 0.52 ) }
    dend_87 { pt3dadd( 61.5913, -373.529, 15.6435, 0.52 ) }
    dend_87 { pt3dadd( 61.1747, -374.126, 15.0357, 0.52 ) }
    dend_87 { pt3dadd( 60.1138, -375.71, 13.436, 0.52 ) }
    dend_87 { pt3dadd( 59.7893, -376.229, 12.9205, 0.52 ) }
    dend_87 { pt3dadd( 59.5364, -376.684, 12.5233, 1.18 ) }
    dend_87 { pt3dadd( 59.1456, -377.531, 11.9003, 1.18 ) }
    dend_87 { pt3dadd( 59.1281, -377.579, 11.8676, 1.18 ) }
    dend_87 { pt3dadd( 59.0383, -377.97, 11.6256, 1.18 ) }
    dend_87 { pt3dadd( 59.012, -378.978, 11.1867, 0.59 ) }
    dend_87 { pt3dadd( 59.0765, -379.867, 10.828, 0.59 ) }
    dend_87 { pt3dadd( 59.1795, -380.657, 10.5738, 0.59 ) }
    dend_87 { pt3dadd( 59.2107, -380.86, 10.5362, 0.59 ) }
    dend_87 { pt3dadd( 59.2968, -381.52, 10.4645, 0.59 ) }
    dend_87 { pt3dadd( 59.4451, -382.962, 10.4063, 0.59 ) }
    dend_87 { pt3dadd( 59.4564, -383.113, 10.4115, 0.59 ) }
    dend_87 { pt3dadd( 59.4862, -384.393, 10.4949, 0.59 ) }
    dend_87 { pt3dadd( 59.4489, -385.56, 10.6022, 0.59 ) }
    dend_87 { pt3dadd( 59.3795, -386.32, 10.6115, 0.59 ) }
    dend_87 { pt3dadd( 59.2995, -386.744, 10.5837, 1.25 ) }
    dend_87 { pt3dadd( 59.0709, -387.501, 10.4512, 1.25 ) }
    dend_87 { pt3dadd( 58.7969, -388.414, 10.2085, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_87 { pt3dadd( 58.7764, -388.48, 10.1837, 1.25 ) }
    dend_87 { pt3dadd( 58.2904, -390.395, 9.20413, 0.44 ) }
    dend_87 { pt3dadd( 58.1225, -391.318, 8.67223, 0.44 ) }
    dend_87 { pt3dadd( 58.1161, -391.378, 8.63566, 0.44 ) }
    dend_87 { pt3dadd( 58.1147, -392.623, 7.87629, 0.44 ) }
    dend_87 { pt3dadd( 58.1249, -392.688, 7.83196, 0.44 ) }
    dend_87 { pt3dadd( 58.3825, -393.522, 7.30747, 0.44 ) }
    dend_87 { pt3dadd( 58.4104, -393.579, 7.27635, 0.44 ) }
    dend_87 { pt3dadd( 58.5605, -393.809, 7.13597, 1.18 ) }
    dend_87 { pt3dadd( 58.9472, -394.384, 6.80304, 1.77 ) }
    dend_87 { pt3dadd( 59.7434, -395.503, 6.16161, 1.99 ) }
    dend_87 { pt3dadd( 60.1207, -396.069, 5.90024, 1.99 ) }
    dend_87 { pt3dadd( 60.1767, -396.166, 5.86849, 1.99 ) }
    dend_87 { pt3dadd( 60.5952, -396.973, 5.65434, 0.74 ) }
    dend_87 { pt3dadd( 60.9652, -397.896, 5.4197, 0.74 ) }
    dend_87 { pt3dadd( 61.0106, -398.058, 5.38454, 0.74 ) }
    dend_87 { pt3dadd( 61.0503, -398.837, 5.26899, 0.52 ) }
    dend_87 { pt3dadd( 60.8929, -399.767, 5.08847, 0.52 ) }
    dend_87 { pt3dadd( 60.873, -399.834, 5.06916, 0.52 ) }
    dend_87 { pt3dadd( 60.3809, -400.926, 4.65113, 0.52 ) }
    dend_87 { pt3dadd( 60.3259, -401.045, 4.59834, 0.52 ) }
    dend_87 { pt3dadd( 59.7731, -402.329, 3.9947, 0.52 ) }
    dend_87 { pt3dadd( 59.7527, -402.39, 3.96424, 0.52 ) }
    dend_87 { pt3dadd( 59.6933, -403.473, 3.44871, 0.52 ) }
    dend_87 { pt3dadd( 59.7202, -403.545, 3.42309, 0.52 ) }
    dend_87 { pt3dadd( 60.3032, -404.369, 3.21939, 0.52 ) }
    dend_87 { pt3dadd( 60.3498, -404.422, 3.20938, 0.52 ) }
    dend_87 { pt3dadd( 60.8597, -404.917, 3.18686, 0.81 ) }
    dend_87 { pt3dadd( 61.3049, -405.363, 3.22951, 1.18 ) }
    dend_87 { pt3dadd( 61.7435, -405.823, 3.34663, 1.4 ) }
    dend_87 { pt3dadd( 62.019, -406.133, 3.43901, 1.18 ) }
    dend_87 { pt3dadd( 62.4298, -406.769, 3.64079, 0.59 ) }
    dend_87 { pt3dadd( 62.7271, -407.678, 3.88738, 0.44 ) }
    dend_87 { pt3dadd( 62.7525, -407.891, 3.93886, 0.44 ) }
    dend_87 { pt3dadd( 62.7388, -408.604, 4.08665, 0.44 ) }
    dend_87 { pt3dadd( 62.7126, -408.814, 4.12016, 0.44 ) }
    dend_87 { pt3dadd( 62.4728, -410.13, 4.27179, 0.44 ) }
    dend_87 { pt3dadd( 62.2224, -411.307, 4.33641, 0.44 ) }
    dend_87 { pt3dadd( 62.1703, -411.585, 4.33641, 0.44 ) }
    dend_87 { pt3dadd( 62.1122, -411.944, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 61.9909, -412.821, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 61.9827, -412.913, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 61.981, -414.244, 4.33641, 0.81 ) }
    dend_87 { pt3dadd( 62.0052, -414.829, 4.33641, 1.25 ) }
    dend_87 { pt3dadd( 62.0163, -415.229, 4.33641, 1.62 ) }
    dend_87 { pt3dadd( 62.0211, -415.309, 4.33641, 1.62 ) }
    // Section: dend_74, id: dend_74, parent: dend_58 (entry count 46/100)
    dend_74 { pt3dclear() }
    dend_74 { pt3dadd( -15.3585, 69.0458, -20.5697, 1.03 ) }
    dend_74 { pt3dadd( -15.4944, 69.2184, -20.8913, 1.03 ) }
    dend_74 { pt3dadd( -15.7863, 69.5267, -21.4406, 1.03 ) }
    dend_74 { pt3dadd( -16.3957, 70.1234, -22.4833, 0.96 ) }
    dend_74 { pt3dadd( -17.4351, 71.0524, -24.0711, 0.96 ) }
    dend_74 { pt3dadd( -17.9337, 71.4376, -24.7311, 0.96 ) }
    dend_74 { pt3dadd( -18.7157, 71.9101, -25.57, 0.96 ) }
    dend_74 { pt3dadd( -19.5392, 72.2305, -26.1826, 0.81 ) }
    dend_74 { pt3dadd( -19.6002, 72.2442, -26.2157, 0.81 ) }
    dend_74 { pt3dadd( -20.091, 72.3158, -26.3911, 0.81 ) }
    dend_74 { pt3dadd( -20.8589, 72.4113, -26.5873, 0.81 ) }
    dend_74 { pt3dadd( -22.1299, 72.569, -26.9946, 0.81 ) }
    dend_74 { pt3dadd( -23.5857, 72.8149, -27.5287, 0.81 ) }
    dend_74 { pt3dadd( -24.586, 73.0811, -27.907, 0.52 ) }
    dend_74 { pt3dadd( -25.1104, 73.2871, -28.1564, 0.52 ) }
    dend_74 { pt3dadd( -25.7495, 73.646, -28.522, 0.52 ) }
    dend_74 { pt3dadd( -26.6091, 74.3009, -29.1044, 0.52 ) }
    dend_74 { pt3dadd( -27.0193, 74.6725, -29.3881, 0.81 ) }
    dend_74 { pt3dadd( -27.5069, 75.1369, -29.7009, 1.03 ) }
    dend_74 { pt3dadd( -28.2496, 75.7301, -30.0216, 1.55 ) }
    dend_74 { pt3dadd( -28.8974, 76.1201, -30.2892, 1.55 ) }
    dend_74 { pt3dadd( -28.9654, 76.1492, -30.3214, 1.55 ) }
    dend_74 { pt3dadd( -30.1838, 76.5374, -30.9141, 1.55 ) }
    dend_74 { pt3dadd( -30.2445, 76.5527, -30.9469, 1.55 ) }
    dend_74 { pt3dadd( -31.3297, 76.771, -31.5656, 1.55 ) }
    dend_74 { pt3dadd( -33.0072, 77.0538, -32.5526, 1.55 ) }
    dend_74 { pt3dadd( -34.4106, 77.2891, -33.528, 0.88 ) }
    dend_74 { pt3dadd( -34.6937, 77.3424, -33.7521, 0.81 ) }
    dend_74 { pt3dadd( -35.0738, 77.4183, -34.1018, 0.52 ) }
    dend_74 { pt3dadd( -35.4328, 77.4895, -34.4701, 0.52 ) }
    dend_74 { pt3dadd( -35.4863, 77.5004, -34.5295, 0.52 ) }
    dend_74 { pt3dadd( -36.3144, 77.7281, -35.3116, 0.52 ) }
    dend_74 { pt3dadd( -36.4274, 77.7647, -35.401, 1.18 ) }
    dend_74 { pt3dadd( -36.8702, 77.9085, -35.7973, 1.18 ) }
    dend_74 { pt3dadd( -38.0544, 78.2373, -36.8086, 0.74 ) }
    dend_74 { pt3dadd( -38.6146, 78.3791, -37.267, 1.4 ) }
    dend_74 { pt3dadd( -39.1223, 78.5003, -37.6222, 1.4 ) }
    dend_74 { pt3dadd( -39.3638, 78.547, -37.7809, 1.4 ) }
    dend_74 { pt3dadd( -40.7548, 78.7555, -38.8572, 1.4 ) }
    dend_74 { pt3dadd( -41.5515, 78.8354, -39.6279, 0.37 ) }
    dend_74 { pt3dadd( -41.5993, 78.8388, -39.6799, 0.37 ) }
    dend_74 { pt3dadd( -42.3117, 78.8802, -40.5387, 0.37 ) }
    dend_74 { pt3dadd( -43.0415, 78.9708, -41.4353, 0.37 ) }
    dend_74 { pt3dadd( -43.9509, 79.1486, -42.5484, 0.37 ) }
    dend_74 { pt3dadd( -44.6584, 79.3821, -43.3629, 0.37 ) }
    dend_74 { pt3dadd( -44.987, 79.5467, -43.756, 0.37 ) }
    dend_74 { pt3dadd( -45.4977, 79.8345, -44.2994, 0.37 ) }
    dend_74 { pt3dadd( -46.2422, 80.2856, -45.0498, 0.37 ) }
    dend_74 { pt3dadd( -46.2927, 80.3191, -45.0901, 0.37 ) }
    dend_74 { pt3dadd( -46.8398, 80.7029, -45.5231, 0.37 ) }
    dend_74 { pt3dadd( -47.5649, 81.2125, -46.392, 0.37 ) }
    dend_74 { pt3dadd( -47.8817, 81.4202, -46.9536, 0.37 ) }
    dend_74 { pt3dadd( -48.1627, 81.6948, -47.7971, 0.37 ) }
    dend_74 { pt3dadd( -48.1804, 81.7264, -47.8898, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_74 { pt3dadd( -48.3387, 82.209, -49.0967, 0.81 ) }
    dend_74 { pt3dadd( -48.4536, 82.8524, -50.5522, 0.74 ) }
    dend_74 { pt3dadd( -48.4566, 82.891, -50.623, 0.74 ) }
    dend_74 { pt3dadd( -48.5639, 84.0642, -52.4077, 0.52 ) }
    dend_74 { pt3dadd( -48.7015, 85.0423, -53.7214, 1.77 ) }
    dend_74 { pt3dadd( -48.7683, 85.3879, -54.1542, 1.77 ) }
    dend_74 { pt3dadd( -48.7956, 85.4898, -54.265, 1.77 ) }
    dend_74 { pt3dadd( -48.9988, 86.0673, -54.7674, 2.06 ) }
    dend_74 { pt3dadd( -49.2603, 86.7035, -55.2714, 2.06 ) }
    dend_74 { pt3dadd( -49.923, 87.9534, -56.1708, 2.06 ) }
    dend_74 { pt3dadd( -49.972, 88.0313, -56.2275, 2.06 ) }
    dend_74 { pt3dadd( -50.2418, 88.4247, -56.5465, 2.06 ) }
    dend_74 { pt3dadd( -50.9687, 89.3717, -57.4148, 0.52 ) }
    dend_74 { pt3dadd( -51.4146, 89.8725, -57.9502, 0.52 ) }
    dend_74 { pt3dadd( -51.7546, 90.189, -58.3125, 0.44 ) }
    dend_74 { pt3dadd( -52.2254, 90.5216, -58.7172, 0.44 ) }
    dend_74 { pt3dadd( -52.2734, 90.55, -58.7607, 0.44 ) }
    dend_74 { pt3dadd( -52.7263, 90.7778, -59.1783, 0.37 ) }
    dend_74 { pt3dadd( -52.7647, 90.8001, -59.2324, 0.37 ) }
    dend_74 { pt3dadd( -53.0605, 91.0365, -59.7047, 0.37 ) }
    dend_74 { pt3dadd( -53.6537, 91.6614, -60.7171, 0.37 ) }
    dend_74 { pt3dadd( -53.7049, 91.7329, -60.8402, 0.37 ) }
    dend_74 { pt3dadd( -53.884, 92.0198, -61.3266, 1.03 ) }
    dend_74 { pt3dadd( -54.842, 93.7272, -64.1888, 1.69 ) }
    dend_74 { pt3dadd( -55.0233, 94.0323, -64.7102, 2.5 ) }
    dend_74 { pt3dadd( -55.2664, 94.4045, -65.3607, 2.73 ) }
    dend_74 { pt3dadd( -56.5597, 96.1082, -68.5737, 0.52 ) }
    dend_74 { pt3dadd( -56.7931, 96.379, -69.0932, 0.52 ) }
    dend_74 { pt3dadd( -56.8169, 96.4039, -69.1434, 0.52 ) }
    dend_74 { pt3dadd( -57.2792, 96.8498, -70.0089, 0.52 ) }
    dend_74 { pt3dadd( -57.658, 97.1608, -70.6441, 0.52 ) }
    dend_74 { pt3dadd( -58.7942, 97.9682, -72.3086, 1.18 ) }
    dend_74 { pt3dadd( -59.4135, 98.3685, -73.0192, 1.4 ) }
    dend_74 { pt3dadd( -60.3914, 99.0136, -74.167, 1.25 ) }
    dend_74 { pt3dadd( -61.1881, 99.5769, -75.1225, 0.37 ) }
    dend_74 { pt3dadd( -61.7628, 100.067, -75.9365, 0.37 ) }
    dend_74 { pt3dadd( -61.8364, 100.139, -76.047, 0.37 ) }
    dend_74 { pt3dadd( -62.1175, 100.429, -76.4544, 0.37 ) }
    dend_74 { pt3dadd( -62.2879, 100.603, -76.7528, 0.74 ) }
    dend_74 { pt3dadd( -62.3183, 100.638, -76.819, 0.74 ) }
    dend_74 { pt3dadd( -61.9766, 100.306, -75.1486, 0.74 ) }
    dend_74 { pt3dadd( -61.8689, 100.196, -74.4398, 0.29 ) }
    dend_74 { pt3dadd( -61.6393, 99.9893, -72.6286, 0.29 ) }
    dend_74 { pt3dadd( -61.4952, 99.8958, -71.1987, 0.29 ) }
    dend_74 { pt3dadd( -61.3975, 99.8709, -70.006, 0.29 ) }
    dend_74 { pt3dadd( -60.7532, 100.106, -60.3068, 0.29 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 46/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -15.3585, 69.0458, -20.5697, 0.88 ) }
    dend_59 { pt3dadd( -15.1072, 70.6715, -19.9467, 0.88 ) }
    dend_59 { pt3dadd( -15.0707, 71.5215, -19.669, 0.88 ) }
    dend_59 { pt3dadd( -15.0805, 71.679, -19.6245, 0.88 ) }
    dend_59 { pt3dadd( -15.1736, 72.1736, -19.5093, 1.11 ) }
    dend_59 { pt3dadd( -15.2565, 72.4952, -19.4447, 1.11 ) }
    dend_59 { pt3dadd( -15.2838, 72.5765, -19.4377, 1.11 ) }
    dend_59 { pt3dadd( -15.6486, 73.2118, -19.5585, 1.11 ) }
    dend_59 { pt3dadd( -15.8142, 73.4797, -19.6256, 1.11 ) }
    dend_59 { pt3dadd( -16.1018, 73.9743, -19.7613, 1.11 ) }
    dend_59 { pt3dadd( -16.1619, 74.1089, -19.7957, 1.11 ) }
    dend_59 { pt3dadd( -16.4754, 75.0456, -20.0194, 1.03 ) }
    dend_59 { pt3dadd( -16.521, 75.2484, -20.0618, 1.03 ) }
    dend_59 { pt3dadd( -16.632, 76.139, -20.2274, 1.03 ) }
    dend_59 { pt3dadd( -16.6377, 76.2856, -20.2603, 1.03 ) }
    dend_59 { pt3dadd( -16.6047, 77.5007, -20.556, 1.03 ) }
    dend_59 { pt3dadd( -16.6006, 77.5599, -20.5696, 1.03 ) }
    dend_59 { pt3dadd( -16.5223, 78.2708, -20.7151, 1.03 ) }
    dend_59 { pt3dadd( -16.5089, 78.4177, -20.7488, 1.03 ) }
    dend_59 { pt3dadd( -16.4655, 79.5429, -21.0228, 1.03 ) }
    dend_59 { pt3dadd( -16.4775, 79.759, -21.0723, 1.03 ) }
    dend_59 { pt3dadd( -16.6599, 80.747, -21.2165, 0.88 ) }
    dend_59 { pt3dadd( -16.6843, 80.8257, -21.2202, 0.88 ) }
    dend_59 { pt3dadd( -16.8988, 81.3575, -21.2002, 1.18 ) }
    dend_59 { pt3dadd( -17.2918, 82.2213, -21.1086, 1.18 ) }
    dend_59 { pt3dadd( -17.5725, 82.8703, -20.9954, 1.18 ) }
    dend_59 { pt3dadd( -17.9211, 83.7856, -20.8637, 0.74 ) }
    dend_59 { pt3dadd( -18.1862, 84.5558, -20.7684, 0.74 ) }
    dend_59 { pt3dadd( -18.3503, 85.2264, -20.75, 0.74 ) }
    dend_59 { pt3dadd( -18.3609, 85.2961, -20.7553, 0.74 ) }
    dend_59 { pt3dadd( -18.4555, 86.4559, -20.9553, 0.74 ) }
    dend_59 { pt3dadd( -18.5067, 87.2492, -21.1513, 0.74 ) }
    dend_59 { pt3dadd( -18.5126, 87.3161, -21.1733, 0.74 ) }
    dend_59 { pt3dadd( -18.6547, 88.4643, -21.5823, 1.11 ) }
    dend_59 { pt3dadd( -18.8335, 89.3572, -21.8942, 1.11 ) }
    dend_59 { pt3dadd( -18.8893, 89.5481, -21.9553, 1.11 ) }
    dend_59 { pt3dadd( -19.2354, 90.3878, -22.1837, 1.11 ) }
    dend_59 { pt3dadd( -19.576, 91.1262, -22.3297, 1.47 ) }
    dend_59 { pt3dadd( -19.6111, 91.1982, -22.339, 1.47 ) }
    dend_59 { pt3dadd( -19.9999, 91.9794, -22.3802, 1.77 ) }
    dend_59 { pt3dadd( -20.2776, 92.5439, -22.4004, 2.06 ) }
    dend_59 { pt3dadd( -20.697, 93.3907, -22.4145, 2.14 ) }
    dend_59 { pt3dadd( -20.9911, 93.9973, -22.4119, 2.14 ) }
    dend_59 { pt3dadd( -21.404, 94.8646, -22.3901, 1.99 ) }
    dend_59 { pt3dadd( -21.65, 95.4131, -22.3775, 1.77 ) }
    dend_59 { pt3dadd( -21.9174, 96.0456, -22.3638, 1.11 ) }
    dend_59 { pt3dadd( -22.2491, 96.908, -22.3476, 1.03 ) }
    dend_59 { pt3dadd( -22.5909, 97.9016, -22.3328, 1.03 ) }
    dend_59 { pt3dadd( -22.6356, 98.0461, -22.3315, 1.03 ) }
    dend_59 { pt3dadd( -23.0025, 99.2954, -22.3605, 1.03 ) }
    dend_59 { pt3dadd( -23.0559, 99.4541, -22.3674, 1.03 ) }
    dend_59 { pt3dadd( -23.1912, 99.8278, -22.3911, 1.03 ) }
    dend_59 { pt3dadd( -23.3683, 100.232, -22.4274, 0.59 ) }
    dend_59 { pt3dadd( -23.8703, 101.075, -22.5293, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_59 { pt3dadd( -24.311, 101.65, -22.609, 0.44 ) }
    dend_59 { pt3dadd( -24.9686, 102.332, -22.7134, 0.44 ) }
    dend_59 { pt3dadd( -25.1596, 102.52, -22.7403, 0.44 ) }
    dend_59 { pt3dadd( -25.4314, 102.798, -22.7733, 0.44 ) }
    dend_59 { pt3dadd( -25.8148, 103.248, -22.8097, 0.81 ) }
    dend_59 { pt3dadd( -26.1777, 103.82, -22.8304, 0.96 ) }
    dend_59 { pt3dadd( -26.462, 104.458, -22.8304, 1.18 ) }
    dend_59 { pt3dadd( -26.48, 104.526, -22.8307, 1.18 ) }
    dend_59 { pt3dadd( -26.6134, 105.336, -22.8374, 1.33 ) }
    dend_59 { pt3dadd( -26.6704, 106.024, -22.8257, 1.47 ) }
    dend_59 { pt3dadd( -26.6747, 106.543, -22.8051, 1.77 ) }
    dend_59 { pt3dadd( -26.6732, 106.624, -22.8006, 1.77 ) }
    dend_59 { pt3dadd( -26.6608, 107.269, -22.7565, 1.47 ) }
    dend_59 { pt3dadd( -26.6774, 107.888, -22.6933, 1.4 ) }
    dend_59 { pt3dadd( -26.7305, 108.462, -22.6193, 1.03 ) }
    dend_59 { pt3dadd( -26.8428, 109.105, -22.5274, 0.59 ) }
    dend_59 { pt3dadd( -27.1015, 110.144, -22.3772, 0.59 ) }
    dend_59 { pt3dadd( -27.1213, 110.211, -22.3635, 0.59 ) }
    dend_59 { pt3dadd( -27.4404, 111.134, -22.129, 0.59 ) }
    dend_59 { pt3dadd( -27.655, 111.752, -21.953, 1.03 ) }
    dend_59 { pt3dadd( -27.8421, 112.304, -21.7547, 1.33 ) }
    dend_59 { pt3dadd( -28.0008, 112.804, -21.5305, 1.33 ) }
    dend_59 { pt3dadd( -28.2374, 113.701, -21.0557, 1.25 ) }
    dend_59 { pt3dadd( -28.3698, 114.279, -20.7405, 0.74 ) }
    dend_59 { pt3dadd( -28.4522, 114.659, -20.5309, 0.66 ) }
    dend_59 { pt3dadd( -28.6459, 115.458, -20.0942, 0.66 ) }
    dend_59 { pt3dadd( -28.7352, 115.772, -19.9319, 0.66 ) }
    dend_59 { pt3dadd( -28.7641, 115.843, -19.9014, 0.66 ) }
    dend_59 { pt3dadd( -29.0928, 116.416, -19.7434, 0.44 ) }
    dend_59 { pt3dadd( -29.5423, 116.977, -19.6265, 0.44 ) }
    dend_59 { pt3dadd( -29.8714, 117.305, -19.5943, 0.74 ) }
    dend_59 { pt3dadd( -29.9244, 117.352, -19.5943, 0.74 ) }
    dend_59 { pt3dadd( -30.2538, 117.622, -19.5943, 0.88 ) }
    dend_59 { pt3dadd( -30.4208, 117.756, -19.5943, 0.88 ) }
    dend_59 { pt3dadd( -30.9997, 118.242, -19.5943, 1.18 ) }
    dend_59 { pt3dadd( -31.7863, 118.956, -19.5943, 1.4 ) }
    dend_59 { pt3dadd( -32.2813, 119.443, -19.5943, 1.4 ) }
    dend_59 { pt3dadd( -32.3295, 119.494, -19.5943, 1.4 ) }
    dend_59 { pt3dadd( -32.7311, 119.988, -19.6046, 1.4 ) }
    dend_59 { pt3dadd( -33.1903, 120.669, -19.6334, 1.4 ) }
    dend_59 { pt3dadd( -33.551, 121.309, -19.671, 1.4 ) }
    dend_59 { pt3dadd( -33.6114, 121.439, -19.6798, 1.4 ) }
    dend_59 { pt3dadd( -33.839, 121.98, -19.719, 1.4 ) }
    dend_59 { pt3dadd( -34.1174, 122.666, -19.7943, 0.88 ) }
    dend_59 { pt3dadd( -34.5805, 123.778, -19.9532, 0.88 ) }
    dend_59 { pt3dadd( -34.6093, 123.843, -19.9645, 0.88 ) }
    dend_59 { pt3dadd( -35.1017, 124.789, -20.1463, 0.88 ) }
    dend_59 { pt3dadd( -35.1489, 124.855, -20.1599, 0.88 ) }
    dend_59 { pt3dadd( -35.6795, 125.362, -20.3376, 0.88 ) }
    dend_59 { pt3dadd( -36.2905, 125.774, -20.5551, 1.18 ) }
    dend_59 { pt3dadd( -36.3534, 125.802, -20.5782, 1.18 ) }
    dend_59 { pt3dadd( -37.2921, 126.112, -20.9094, 1.33 ) }
    dend_59 { pt3dadd( -38.182, 126.29, -21.1963, 1.55 ) }
    dend_59 { pt3dadd( -39.4142, 126.457, -21.595, 1.55 ) }
    dend_59 { pt3dadd( -39.4815, 126.463, -21.6156, 1.55 ) }
    dend_59 { pt3dadd( -40.2626, 126.508, -21.8664, 1.11 ) }
    dend_59 { pt3dadd( -40.7602, 126.549, -22.0235, 0.81 ) }
    dend_59 { pt3dadd( -41.5571, 126.643, -22.2724, 0.59 ) }
    dend_59 { pt3dadd( -42.517, 126.845, -22.5236, 0.52 ) }
    dend_59 { pt3dadd( -43.092, 127.018, -22.6267, 0.52 ) }
    dend_59 { pt3dadd( -43.1561, 127.044, -22.642, 0.52 ) }
    dend_59 { pt3dadd( -43.7852, 127.388, -22.8353, 0.52 ) }
    dend_59 { pt3dadd( -43.9973, 127.534, -22.9118, 0.52 ) }
    dend_59 { pt3dadd( -44.6757, 128.114, -23.1854, 0.52 ) }
    dend_59 { pt3dadd( -44.7739, 128.211, -23.2241, 0.52 ) }
    dend_59 { pt3dadd( -45.4751, 128.928, -23.5363, 0.81 ) }
    dend_59 { pt3dadd( -45.5958, 129.047, -23.5889, 0.81 ) }
    dend_59 { pt3dadd( -45.652, 129.099, -23.613, 0.81 ) }
    dend_59 { pt3dadd( -45.8453, 129.261, -23.6824, 1.03 ) }
    dend_59 { pt3dadd( -46.0493, 129.415, -23.7379, 1.03 ) }
    dend_59 { pt3dadd( -46.3541, 129.616, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -46.8534, 129.865, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -47.1279, 129.966, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -47.5146, 130.08, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -47.5765, 130.093, -23.7804, 1.03 ) }
    dend_59 { pt3dadd( -48.0325, 130.155, -23.7804, 0.88 ) }
    dend_59 { pt3dadd( -48.6338, 130.199, -23.8855, 0.59 ) }
    dend_59 { pt3dadd( -49.2704, 130.257, -24.0902, 0.59 ) }
    dend_59 { pt3dadd( -49.4541, 130.288, -24.1687, 0.59 ) }
    dend_59 { pt3dadd( -49.9383, 130.41, -24.41, 0.59 ) }
    dend_59 { pt3dadd( -50.1288, 130.472, -24.5091, 0.59 ) }
    dend_59 { pt3dadd( -51.5496, 131.05, -25.3232, 0.59 ) }
    dend_59 { pt3dadd( -52.125, 131.315, -25.6698, 0.96 ) }
    dend_59 { pt3dadd( -52.5643, 131.543, -25.9276, 1.33 ) }
    dend_59 { pt3dadd( -53.0831, 131.833, -26.2392, 1.77 ) }
    dend_59 { pt3dadd( -53.5886, 132.151, -26.5258, 1.77 ) }
    dend_59 { pt3dadd( -54.312, 132.634, -26.891, 0.88 ) }
    dend_59 { pt3dadd( -54.6179, 132.849, -27.0142, 0.74 ) }
    dend_59 { pt3dadd( -55.1244, 133.223, -27.235, 0.52 ) }
    dend_59 { pt3dadd( -55.7176, 133.723, -27.5364, 0.52 ) }
    dend_59 { pt3dadd( -56.3293, 134.342, -27.8959, 0.52 ) }
    dend_59 { pt3dadd( -56.4213, 134.45, -27.9525, 0.88 ) }
    dend_59 { pt3dadd( -56.4627, 134.503, -27.9753, 0.88 ) }
    dend_59 { pt3dadd( -56.8672, 135.022, -28.1816, 0.88 ) }
    dend_59 { pt3dadd( -57.551, 135.808, -28.4624, 1.18 ) }
    dend_59 { pt3dadd( -57.5989, 135.858, -28.4765, 1.18 ) }
    dend_59 { pt3dadd( -58.1054, 136.308, -28.5967, 1.33 ) }
    dend_59 { pt3dadd( -58.5765, 136.679, -28.6845, 1.33 ) }
    dend_59 { pt3dadd( -58.6836, 136.754, -28.6983, 1.33 ) }
    dend_59 { pt3dadd( -59.3262, 137.147, -28.7941, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_59 { pt3dadd( -59.4054, 137.193, -28.8055, 1.33 ) }
    dend_59 { pt3dadd( -60.2867, 137.703, -28.9667, 1.33 ) }
    dend_59 { pt3dadd( -60.3559, 137.742, -28.9812, 1.33 ) }
    dend_59 { pt3dadd( -60.966, 138.089, -29.1204, 1.33 ) }
    dend_59 { pt3dadd( -61.8368, 138.604, -29.3248, 0.37 ) }
    dend_59 { pt3dadd( -62.3814, 138.937, -29.4593, 0.37 ) }
    dend_59 { pt3dadd( -62.439, 138.974, -29.4773, 0.37 ) }
    dend_59 { pt3dadd( -63.2305, 139.523, -29.7824, 0.37 ) }
    dend_59 { pt3dadd( -63.3478, 139.612, -29.8325, 0.37 ) }
    dend_59 { pt3dadd( -63.6443, 139.888, -29.9841, 0.37 ) }
    dend_59 { pt3dadd( -63.6869, 139.942, -30.0089, 0.37 ) }
    dend_59 { pt3dadd( -63.9833, 140.724, -30.4553, 0.37 ) }
    dend_59 { pt3dadd( -63.9924, 140.905, -30.5679, 0.59 ) }
    dend_59 { pt3dadd( -63.9718, 140.983, -30.6132, 0.59 ) }
    dend_59 { pt3dadd( -63.7968, 141.481, -30.9226, 0.59 ) }
    dend_59 { pt3dadd( -63.7415, 141.626, -31.0082, 0.59 ) }
    dend_59 { pt3dadd( -63.515, 142.313, -31.3607, 0.59 ) }
    dend_59 { pt3dadd( -63.4991, 142.376, -31.3869, 0.59 ) }
    dend_59 { pt3dadd( -63.3877, 143.052, -31.6388, 0.59 ) }
    dend_59 { pt3dadd( -63.314, 143.929, -31.9202, 0.59 ) }
    dend_59 { pt3dadd( -63.3069, 144.433, -32.061, 0.96 ) }
    dend_59 { pt3dadd( -63.3344, 145.007, -32.1912, 1.18 ) }
    dend_59 { pt3dadd( -63.4075, 145.667, -32.3043, 1.4 ) }
    dend_59 { pt3dadd( -63.4697, 146.084, -32.3596, 1.4 ) }
    dend_59 { pt3dadd( -63.5965, 146.67, -32.4029, 1.18 ) }
    dend_59 { pt3dadd( -63.6139, 146.739, -32.4029, 1.18 ) }
    dend_59 { pt3dadd( -63.7774, 147.272, -32.4029, 1.18 ) }
    dend_59 { pt3dadd( -63.807, 147.349, -32.3961, 1.18 ) }
    dend_59 { pt3dadd( -64.1227, 147.948, -32.2919, 1.18 ) }
    dend_59 { pt3dadd( -64.5043, 148.564, -32.1504, 1.18 ) }
    dend_59 { pt3dadd( -64.5432, 148.624, -32.1353, 1.18 ) }
    dend_59 { pt3dadd( -64.9235, 149.22, -31.9908, 1.18 ) }
    dend_59 { pt3dadd( -65.4334, 150.052, -31.8036, 1.18 ) }
    dend_59 { pt3dadd( -65.7807, 150.661, -31.6901, 1.55 ) }
    dend_59 { pt3dadd( -66.0342, 151.126, -31.6168, 1.77 ) }
    dend_59 { pt3dadd( -66.3752, 151.861, -31.5182, 1.77 ) }
    dend_59 { pt3dadd( -66.6633, 152.663, -31.4389, 1.92 ) }
    dend_59 { pt3dadd( -66.8528, 153.393, -31.3931, 1.92 ) }
    dend_59 { pt3dadd( -67.1124, 154.582, -31.3615, 1.92 ) }
    dend_59 { pt3dadd( -67.1953, 155.045, -31.3478, 1.77 ) }
    dend_59 { pt3dadd( -67.3445, 155.983, -31.3165, 1.69 ) }
    dend_59 { pt3dadd( -67.5084, 157.374, -31.2624, 1.69 ) }
    dend_59 { pt3dadd( -67.5596, 158.261, -31.2221, 1.69 ) }
    // Section: dend_50, id: dend_50, parent: dend_2 (entry count 43/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 19.3035, 69.8045, -23.8783, 0.37 ) }
    dend_50 { pt3dadd( 19.7367, 72.583, -19.7757, 0.37 ) }
    dend_50 { pt3dadd( 20.0578, 73.5542, -18.4366, 0.37 ) }
    dend_50 { pt3dadd( 20.3094, 74.0746, -17.7598, 0.37 ) }
    dend_50 { pt3dadd( 20.373, 74.173, -17.64, 0.37 ) }
    dend_50 { pt3dadd( 20.7776, 74.6366, -17.1433, 0.37 ) }
    dend_50 { pt3dadd( 20.9536, 74.8067, -16.9799, 0.37 ) }
    dend_50 { pt3dadd( 22.1545, 75.418, -16.898, 0.37 ) }
    dend_50 { pt3dadd( 22.221, 75.4407, -16.8902, 0.37 ) }
    dend_50 { pt3dadd( 22.5119, 75.5464, -16.8418, 0.66 ) }
    dend_50 { pt3dadd( 23.194, 75.9155, -16.6877, 0.66 ) }
    dend_50 { pt3dadd( 23.2446, 75.9584, -16.6631, 0.66 ) }
    dend_50 { pt3dadd( 23.9724, 76.8497, -16.0813, 0.66 ) }
    dend_50 { pt3dadd( 23.9944, 76.8961, -16.0503, 0.66 ) }
    dend_50 { pt3dadd( 24.1819, 77.411, -15.6995, 0.88 ) }
    dend_50 { pt3dadd( 24.3523, 78.0874, -15.2657, 0.88 ) }
    dend_50 { pt3dadd( 24.5231, 79.2439, -14.4768, 0.88 ) }
    dend_50 { pt3dadd( 24.5406, 79.3698, -14.3905, 0.88 ) }
    dend_50 { pt3dadd( 24.6575, 80.1768, -13.8359, 0.88 ) }
    dend_50 { pt3dadd( 24.6885, 80.3175, -13.7356, 0.88 ) }
    dend_50 { pt3dadd( 24.9765, 81.2383, -13.0355, 0.88 ) }
    dend_50 { pt3dadd( 25.4001, 82.149, -12.2911, 0.37 ) }
    dend_50 { pt3dadd( 25.6446, 82.5543, -12.0004, 0.29 ) }
    dend_50 { pt3dadd( 25.9003, 82.9177, -11.7265, 0.29 ) }
    dend_50 { pt3dadd( 26.0971, 83.1577, -11.5345, 0.29 ) }
    dend_50 { pt3dadd( 26.1352, 83.2085, -11.5034, 0.29 ) }
    dend_50 { pt3dadd( 26.617, 83.8195, -11.0549, 0.59 ) }
    dend_50 { pt3dadd( 27.0101, 84.3044, -10.6854, 0.88 ) }
    dend_50 { pt3dadd( 27.6432, 85.0422, -10.0826, 1.33 ) }
    dend_50 { pt3dadd( 27.6875, 85.0917, -10.037, 1.33 ) }
    dend_50 { pt3dadd( 28.6873, 86.1415, -8.99495, 1.33 ) }
    dend_50 { pt3dadd( 30.0777, 87.4805, -7.6932, 0.96 ) }
    dend_50 { pt3dadd( 30.653, 87.9777, -7.26191, 1.55 ) }
    dend_50 { pt3dadd( 31.2184, 88.4266, -6.89347, 1.92 ) }
    dend_50 { pt3dadd( 32.3997, 89.2963, -6.24652, 1.4 ) }
    dend_50 { pt3dadd( 33.5883, 90.1308, -5.68456, 0.74 ) }
    dend_50 { pt3dadd( 34.992, 91.0634, -5.16589, 0.74 ) }
    dend_50 { pt3dadd( 36.3779, 92.0099, -4.86082, 0.66 ) }
    dend_50 { pt3dadd( 36.4354, 92.05, -4.85139, 0.66 ) }
    dend_50 { pt3dadd( 36.9105, 92.3883, -4.80315, 0.66 ) }
    dend_50 { pt3dadd( 37.6254, 92.8321, -4.77415, 1.03 ) }
    dend_50 { pt3dadd( 38.2246, 93.1345, -4.71798, 1.11 ) }
    dend_50 { pt3dadd( 38.2884, 93.1589, -4.69973, 1.11 ) }
    dend_50 { pt3dadd( 38.7121, 93.2866, -4.50427, 1.33 ) }
    dend_50 { pt3dadd( 38.7747, 93.3012, -4.47488, 1.33 ) }
    dend_50 { pt3dadd( 40.0755, 93.5402, -3.83123, 1.62 ) }
    dend_50 { pt3dadd( 40.4783, 93.6045, -3.64096, 1.92 ) }
    dend_50 { pt3dadd( 40.5493, 93.6186, -3.60692, 1.92 ) }
    dend_50 { pt3dadd( 40.8043, 93.7073, -3.50042, 1.92 ) }
    dend_50 { pt3dadd( 40.999, 93.817, -3.4362, 1.92 ) }
    dend_50 { pt3dadd( 41.2395, 94.0389, -3.37784, 1.62 ) }
    dend_50 { pt3dadd( 41.5695, 94.5274, -3.34667, 1.03 ) }
    dend_50 { pt3dadd( 41.7501, 94.9169, -3.3208, 0.81 ) }
    dend_50 { pt3dadd( 41.9925, 95.6223, -3.27333, 0.81 ) }
    dend_50 { pt3dadd( 42.1198, 96.0595, -3.24199, 0.52 ) }
    dend_50 { pt3dadd( 42.2769, 96.6601, -3.1969, 0.52 ) }
    dend_50 { pt3dadd( 42.2994, 96.727, -3.1918, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_50 { pt3dadd( 42.6079, 97.3055, -3.1084, 0.52 ) }
    dend_50 { pt3dadd( 42.7121, 97.418, -3.08374, 0.52 ) }
    dend_50 { pt3dadd( 43.2861, 97.8424, -2.96041, 0.74 ) }
    dend_50 { pt3dadd( 43.358, 97.8807, -2.94725, 0.74 ) }
    dend_50 { pt3dadd( 44.1111, 98.1957, -2.40608, 0.74 ) }
    dend_50 { pt3dadd( 44.8894, 98.5339, -1.6333, 0.74 ) }
    dend_50 { pt3dadd( 45.3588, 98.747, -1.12669, 0.96 ) }
    dend_50 { pt3dadd( 45.4456, 98.7893, -1.02339, 0.96 ) }
    dend_50 { pt3dadd( 45.8593, 99.0187, -0.476917, 0.96 ) }
    dend_50 { pt3dadd( 48.2635, 100.563, 2.9027, 0.52 ) }
    dend_50 { pt3dadd( 48.6636, 100.878, 3.5264, 0.52 ) }
    dend_50 { pt3dadd( 49.0536, 101.263, 4.13252, 0.74 ) }
    dend_50 { pt3dadd( 49.0837, 101.296, 4.17259, 0.74 ) }
    dend_50 { pt3dadd( 49.4359, 101.701, 4.5054, 1.11 ) }
    dend_50 { pt3dadd( 49.7927, 102.123, 4.65859, 1.55 ) }
    dend_50 { pt3dadd( 50.1717, 102.569, 4.6326, 1.62 ) }
    dend_50 { pt3dadd( 50.7623, 103.231, 4.62096, 1.62 ) }
    dend_50 { pt3dadd( 51.3561, 103.9, 4.70022, 0.74 ) }
    dend_50 { pt3dadd( 51.6553, 104.244, 4.76345, 0.74 ) }
    dend_50 { pt3dadd( 51.9757, 104.654, 4.86467, 0.59 ) }
    dend_50 { pt3dadd( 52.4234, 105.313, 5.10797, 0.59 ) }
    dend_50 { pt3dadd( 52.454, 105.36, 5.12991, 0.59 ) }
    dend_50 { pt3dadd( 53.0732, 106.323, 5.66404, 0.59 ) }
    dend_50 { pt3dadd( 53.1105, 106.374, 5.69596, 0.59 ) }
    dend_50 { pt3dadd( 53.6985, 107.075, 6.16877, 0.59 ) }
    dend_50 { pt3dadd( 54.433, 107.753, 6.66051, 0.59 ) }
    dend_50 { pt3dadd( 55.0558, 108.161, 6.92062, 0.59 ) }
    dend_50 { pt3dadd( 55.4187, 108.347, 7.00259, 1.03 ) }
    dend_50 { pt3dadd( 56.1738, 108.64, 7.03042, 1.03 ) }
    dend_50 { pt3dadd( 56.2525, 108.665, 7.02813, 1.03 ) }
    dend_50 { pt3dadd( 57.0346, 108.857, 6.95204, 1.03 ) }
    dend_50 { pt3dadd( 58.0489, 109.127, 6.7745, 1.03 ) }
    dend_50 { pt3dadd( 58.1146, 109.148, 6.7624, 1.03 ) }
    dend_50 { pt3dadd( 58.9488, 109.452, 6.622, 1.03 ) }
    dend_50 { pt3dadd( 59.1603, 109.537, 6.57972, 1.03 ) }
    dend_50 { pt3dadd( 59.8149, 109.809, 6.44216, 1.03 ) }
    dend_50 { pt3dadd( 60.2438, 109.992, 6.35507, 1.25 ) }
    dend_50 { pt3dadd( 60.3435, 110.031, 6.33921, 1.25 ) }
    dend_50 { pt3dadd( 61.2177, 110.33, 6.23039, 1.25 ) }
    dend_50 { pt3dadd( 62.2493, 110.684, 6.20266, 0.96 ) }
    dend_50 { pt3dadd( 62.3149, 110.708, 6.20557, 0.96 ) }
    dend_50 { pt3dadd( 62.9907, 110.971, 6.27273, 0.52 ) }
    dend_50 { pt3dadd( 64.1287, 111.475, 6.43641, 0.52 ) }
    dend_50 { pt3dadd( 65.0373, 111.977, 6.68664, 0.81 ) }
    dend_50 { pt3dadd( 66.0474, 112.692, 7.12552, 0.81 ) }
    dend_50 { pt3dadd( 66.512, 113.11, 7.39717, 1.03 ) }
    dend_50 { pt3dadd( 66.8234, 113.461, 7.61235, 1.03 ) }
    dend_50 { pt3dadd( 67.2239, 114.049, 7.95217, 1.03 ) }
    dend_50 { pt3dadd( 67.9476, 115.472, 8.75885, 0.37 ) }
    dend_50 { pt3dadd( 68.2536, 116.21, 9.14492, 0.37 ) }
    dend_50 { pt3dadd( 68.4915, 116.887, 9.47184, 0.37 ) }
    dend_50 { pt3dadd( 68.6752, 117.493, 9.76723, 0.37 ) }
    dend_50 { pt3dadd( 68.7554, 117.762, 9.91312, 0.88 ) }
    dend_50 { pt3dadd( 69.1194, 118.842, 10.5345, 1.18 ) }
    dend_50 { pt3dadd( 69.3537, 119.382, 10.8283, 1.18 ) }
    dend_50 { pt3dadd( 69.5572, 119.688, 11.0161, 1.18 ) }
    dend_50 { pt3dadd( 69.6083, 119.739, 11.0515, 1.18 ) }
    dend_50 { pt3dadd( 70.7251, 120.476, 11.6246, 1.55 ) }
    dend_50 { pt3dadd( 71.2249, 120.725, 11.8649, 1.55 ) }
    dend_50 { pt3dadd( 71.8532, 120.98, 12.1324, 1.55 ) }
    dend_50 { pt3dadd( 72.832, 121.335, 12.5451, 0.59 ) }
    dend_50 { pt3dadd( 73.4726, 121.576, 12.7985, 0.59 ) }
    dend_50 { pt3dadd( 74.1782, 121.882, 13.0494, 0.59 ) }
    dend_50 { pt3dadd( 75.3818, 122.511, 13.3872, 0.59 ) }
    dend_50 { pt3dadd( 75.7456, 122.76, 13.5175, 1.18 ) }
    dend_50 { pt3dadd( 75.8477, 122.852, 13.5599, 1.18 ) }
    dend_50 { pt3dadd( 76.3585, 123.475, 13.7714, 1.18 ) }
    dend_50 { pt3dadd( 76.8504, 124.161, 13.9627, 1.33 ) }
    dend_50 { pt3dadd( 77.3495, 124.933, 14.1297, 1.33 ) }
    dend_50 { pt3dadd( 77.9532, 125.906, 14.2777, 0.44 ) }
    dend_50 { pt3dadd( 78.4161, 126.665, 14.3934, 0.44 ) }
    dend_50 { pt3dadd( 79.308, 128.136, 14.6337, 0.44 ) }
    dend_50 { pt3dadd( 79.308, 128.136, 14.6337, 0.88 ) }
    dend_50 { pt3dadd( 79.7237, 128.816, 14.7502, 0.88 ) }
    dend_50 { pt3dadd( 79.9993, 129.258, 14.8156, 0.88 ) }
    dend_50 { pt3dadd( 80.0508, 129.334, 14.8229, 0.88 ) }
    dend_50 { pt3dadd( 80.5734, 129.979, 14.9031, 0.88 ) }
    dend_50 { pt3dadd( 80.6249, 130.03, 14.9111, 0.88 ) }
    dend_50 { pt3dadd( 81.2577, 130.564, 14.9969, 0.88 ) }
    dend_50 { pt3dadd( 81.7586, 130.906, 15.0549, 1.47 ) }
    dend_50 { pt3dadd( 81.8178, 130.942, 15.0686, 1.47 ) }
    dend_50 { pt3dadd( 82.5556, 131.381, 15.2955, 1.47 ) }
    dend_50 { pt3dadd( 82.6126, 131.416, 15.3159, 1.47 ) }
    dend_50 { pt3dadd( 82.804, 131.543, 15.3964, 1.47 ) }
    dend_50 { pt3dadd( 82.8555, 131.581, 15.4237, 1.47 ) }
    dend_50 { pt3dadd( 83.9108, 132.567, 16.1233, 1.33 ) }
    dend_50 { pt3dadd( 83.956, 132.617, 16.151, 1.33 ) }
    dend_50 { pt3dadd( 84.5216, 133.282, 16.5596, 1.18 ) }
    dend_50 { pt3dadd( 84.5638, 133.332, 16.5913, 1.18 ) }
    dend_50 { pt3dadd( 85.1301, 133.997, 17.0049, 1.18 ) }
    dend_50 { pt3dadd( 85.9863, 134.981, 17.5939, 1.18 ) }
    dend_50 { pt3dadd( 87.2789, 136.368, 18.3764, 1.18 ) }
    dend_50 { pt3dadd( 88.2653, 137.325, 18.9267, 1.25 ) }
    dend_50 { pt3dadd( 88.3172, 137.368, 18.9498, 1.25 ) }
    dend_50 { pt3dadd( 88.9588, 137.813, 19.1657, 1.25 ) }
    dend_50 { pt3dadd( 89.2914, 137.994, 19.2325, 1.69 ) }
    dend_50 { pt3dadd( 90.0565, 138.318, 19.3045, 1.69 ) }
    dend_50 { pt3dadd( 90.7215, 138.532, 19.3, 1.69 ) }
    dend_50 { pt3dadd( 92.1303, 138.964, 19.1222, 0.59 ) }
    dend_50 { pt3dadd( 92.207, 138.986, 19.1116, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_50 { pt3dadd( 92.831, 139.143, 19.0101, 0.59 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 1/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 19.3035, 69.8045, -23.8783, 1.47 ) }
    dend_3 { pt3dadd( 21.0817, 70.9765, -26.5204, 1.47 ) }
    dend_3 { pt3dadd( 21.6441, 71.4278, -27.4543, 1.03 ) }
    dend_3 { pt3dadd( 22.1262, 71.9493, -28.4471, 1.03 ) }
    dend_3 { pt3dadd( 22.3771, 72.3328, -29.0847, 1.03 ) }
    dend_3 { pt3dadd( 22.7153, 73.1974, -30.3452, 1.03 ) }
    dend_3 { pt3dadd( 22.7279, 73.2462, -30.4082, 1.03 ) }
    dend_3 { pt3dadd( 22.6883, 74.18, -31.3099, 1.03 ) }
    dend_3 { pt3dadd( 22.5236, 75.1566, -32.124, 1.4 ) }
    dend_3 { pt3dadd( 22.3573, 75.9756, -32.6981, 1.69 ) }
    dend_3 { pt3dadd( 22.107, 77.3677, -33.5936, 1.69 ) }
    dend_3 { pt3dadd( 22.0017, 78.0684, -33.9711, 1.69 ) }
    dend_3 { pt3dadd( 21.8953, 79.176, -34.5009, 1.69 ) }
    dend_3 { pt3dadd( 21.8627, 80.1721, -34.967, 1.69 ) }
    dend_3 { pt3dadd( 21.883, 81.3723, -35.5353, 1.69 ) }
    dend_3 { pt3dadd( 21.9599, 82.7556, -36.2189, 2.28 ) }
    dend_3 { pt3dadd( 22.0545, 83.8659, -36.7591, 2.36 ) }
    dend_3 { pt3dadd( 22.107, 84.3641, -37.0455, 2.36 ) }
    dend_3 { pt3dadd( 22.3186, 85.8781, -38.0228, 1.77 ) }
    dend_3 { pt3dadd( 22.327, 85.926, -38.0632, 1.77 ) }
    dend_3 { pt3dadd( 22.3801, 86.1873, -38.3351, 1.77 ) }
    dend_3 { pt3dadd( 22.3961, 86.2413, -38.3953, 1.77 ) }
    dend_3 { pt3dadd( 22.8508, 87.3571, -39.7815, 0.74 ) }
    dend_3 { pt3dadd( 22.8708, 87.4011, -39.8359, 0.74 ) }
    dend_3 { pt3dadd( 23.2809, 88.2094, -40.7933, 1.03 ) }
    dend_3 { pt3dadd( 23.3062, 88.2577, -40.8552, 1.03 ) }
    dend_3 { pt3dadd( 23.5636, 88.7615, -41.5498, 1.03 ) }
    dend_3 { pt3dadd( 23.9354, 89.5236, -42.6524, 1.33 ) }
    dend_3 { pt3dadd( 23.9525, 89.5623, -42.7081, 1.33 ) }
    dend_3 { pt3dadd( 24.2797, 90.4622, -43.8992, 1.69 ) }
    dend_3 { pt3dadd( 24.6137, 91.612, -45.2589, 1.99 ) }
    dend_3 { pt3dadd( 24.9228, 92.8521, -46.631, 1.99 ) }
    dend_3 { pt3dadd( 25.1618, 93.9504, -47.7579, 1.99 ) }
    dend_3 { pt3dadd( 25.3931, 95.0302, -48.7099, 1.4 ) }
    dend_3 { pt3dadd( 25.6243, 96.1583, -49.571, 1.4 ) }
    dend_3 { pt3dadd( 25.8288, 97.1621, -50.1574, 1.84 ) }
    dend_3 { pt3dadd( 25.844, 97.226, -50.1815, 1.84 ) }
    dend_3 { pt3dadd( 26.0599, 97.8661, -50.29, 2.36 ) }
    dend_3 { pt3dadd( 26.4637, 98.7138, -50.299, 2.14 ) }
    dend_3 { pt3dadd( 26.5274, 98.8043, -50.2916, 2.14 ) }
    dend_3 { pt3dadd( 27.0013, 99.3054, -50.2464, 1.92 ) }
    dend_3 { pt3dadd( 27.4175, 99.6994, -50.2166, 1.77 ) }
    dend_3 { pt3dadd( 28.0521, 100.321, -50.2143, 1.77 ) }
    dend_3 { pt3dadd( 28.1515, 100.433, -50.22, 1.77 ) }
    dend_3 { pt3dadd( 28.78, 101.29, -50.3399, 1.47 ) }
    dend_3 { pt3dadd( 28.8166, 101.352, -50.3506, 1.47 ) }
    dend_3 { pt3dadd( 29.4063, 102.633, -50.6773, 1.33 ) }
    dend_3 { pt3dadd( 29.7077, 103.464, -50.957, 1.11 ) }
    dend_3 { pt3dadd( 30.0536, 104.669, -51.4043, 1.11 ) }
    dend_3 { pt3dadd( 30.2906, 105.605, -51.8353, 1.11 ) }
    dend_3 { pt3dadd( 30.5078, 106.558, -52.3627, 1.4 ) }
    dend_3 { pt3dadd( 30.7792, 107.846, -53.1296, 1.4 ) }
    dend_3 { pt3dadd( 31.0005, 108.953, -53.8096, 2.06 ) }
    dend_3 { pt3dadd( 31.2038, 109.998, -54.4352, 2.43 ) }
    dend_3 { pt3dadd( 31.6143, 112.042, -55.6578, 1.84 ) }
    dend_3 { pt3dadd( 31.8791, 113.41, -56.5121, 1.62 ) }
    dend_3 { pt3dadd( 32.0022, 114.026, -56.9042, 1.4 ) }
    dend_3 { pt3dadd( 32.2283, 115.17, -57.5943, 0.88 ) }
    dend_3 { pt3dadd( 32.3849, 115.998, -58.0903, 0.88 ) }
    dend_3 { pt3dadd( 32.4, 116.089, -58.1459, 0.88 ) }
    dend_3 { pt3dadd( 32.5609, 118.011, -58.9635, 0.88 ) }
    // Section: dend_132, id: dend_132, parent: dend_131 (entry count 62/100)
    dend_132 { pt3dclear() }
    dend_132 { pt3dadd( 96.574, -178.654, 0.0704686, 1.55 ) }
    dend_132 { pt3dadd( 97.453, -179.751, -0.520116, 1.55 ) }
    dend_132 { pt3dadd( 98.0213, -180.506, -0.831447, 1.55 ) }
    dend_132 { pt3dadd( 98.1098, -180.625, -0.87569, 1.55 ) }
    dend_132 { pt3dadd( 99.1147, -181.969, -1.29557, 1.4 ) }
    dend_132 { pt3dadd( 99.6352, -182.661, -1.4956, 1.4 ) }
    dend_132 { pt3dadd( 100.188, -183.398, -1.70821, 1.55 ) }
    dend_132 { pt3dadd( 100.957, -184.443, -1.93061, 1.77 ) }
    dend_132 { pt3dadd( 100.998, -184.499, -1.94163, 1.77 ) }
    dend_132 { pt3dadd( 101.823, -185.629, -2.10235, 1.92 ) }
    dend_132 { pt3dadd( 101.864, -185.686, -2.10158, 1.92 ) }
    // Section: dend_118, id: dend_118, parent: dend_116 (entry count 73/100)
    dend_118 { pt3dclear() }
    dend_118 { pt3dadd( -17.5111, -137.021, 7.97237, 0.66 ) }
    dend_118 { pt3dadd( -17.6108, -137.909, 7.19215, 0.66 ) }
    dend_118 { pt3dadd( -17.6788, -138.515, 6.66026, 0.66 ) }
    dend_118 { pt3dadd( -17.7099, -138.792, 6.41698, 1.33 ) }
    dend_118 { pt3dadd( -17.8365, -139.92, 5.42648, 0.52 ) }
    // Section: dend_117, id: dend_117, parent: dend_116 (entry count 78/100)
    dend_117 { pt3dclear() }
    dend_117 { pt3dadd( -17.5111, -137.021, 7.97237, 0.22 ) }
    dend_117 { pt3dadd( -17.6348, -136.932, 8.00194, 0.22 ) }
    dend_117 { pt3dadd( -18.6184, -136.01, 8.18226, 0.22 ) }
    dend_117 { pt3dadd( -18.9157, -135.671, 8.29298, 0.81 ) }
    dend_117 { pt3dadd( -18.9855, -135.587, 8.32288, 0.81 ) }
    dend_117 { pt3dadd( -19.3098, -135.191, 8.46926, 0.81 ) }
    dend_117 { pt3dadd( -19.7752, -134.633, 8.67775, 0.22 ) }
    dend_117 { pt3dadd( -20.4584, -133.848, 9.23762, 0.22 ) }
    dend_117 { pt3dadd( -21.4969, -132.576, 10.2327, 0.22 ) }
    dend_117 { pt3dadd( -21.4969, -132.576, 10.2327, 0.52 ) }
    dend_117 { pt3dadd( -21.5383, -132.526, 10.2796, 0.52 ) }
    dend_117 { pt3dadd( -21.7575, -132.265, 10.5866, 0.52 ) }
    dend_117 { pt3dadd( -23.2635, -130.782, 13.289, 0.66 ) }
    // Section: dend_101, id: dend_101, parent: dend_93 (entry count 91/100)
    dend_101 { pt3dclear() }
    dend_101 { pt3dadd( -26.5264, -311.953, 18.5344, 0.59 ) }
    dend_101 { pt3dadd( -26.4018, -313.044, 18.4977, 0.59 ) }
    dend_101 { pt3dadd( -26.3484, -313.905, 18.4365, 0.59 ) }
    dend_101 { pt3dadd( -26.3452, -313.975, 18.4304, 0.59 ) }
    dend_101 { pt3dadd( -26.274, -315.546, 18.2949, 0.59 ) }
    dend_101 { pt3dadd( -26.1941, -317.308, 18.143, 0.59 ) }
    dend_101 { pt3dadd( -26.149, -318.302, 18.0572, 0.59 ) }
    dend_101 { pt3dadd( -26.0833, -319.296, 17.9166, 0.59 ) }
    dend_101 { pt3dadd( -26.0802, -319.378, 17.9035, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    // Section: dend_94, id: dend_94, parent: dend_93 (entry count 0/100)
    dend_94 { pt3dclear() }
    dend_94 { pt3dadd( -26.5264, -311.953, 18.5344, 0.44 ) }
    dend_94 { pt3dadd( -25.7701, -313.014, 18.2472, 0.44 ) }
    dend_94 { pt3dadd( -25.3047, -313.681, 18.0793, 0.44 ) }
    dend_94 { pt3dadd( -24.9342, -314.198, 17.9625, 0.88 ) }
    dend_94 { pt3dadd( -24.8944, -314.256, 17.9527, 0.88 ) }
    dend_94 { pt3dadd( -24.5437, -314.769, 17.8772, 0.88 ) }
    dend_94 { pt3dadd( -24.1638, -315.329, 17.7395, 1.03 ) }
    dend_94 { pt3dadd( -24.1181, -315.395, 17.72, 1.03 ) }
    dend_94 { pt3dadd( -23.8207, -315.809, 17.3949, 0.66 ) }
    dend_94 { pt3dadd( -23.233, -316.602, 16.526, 0.59 ) }
    dend_94 { pt3dadd( -23.207, -316.629, 16.466, 0.59 ) }
    dend_94 { pt3dadd( -22.7003, -317.131, 14.9183, 0.59 ) }
    dend_94 { pt3dadd( -22.4473, -317.376, 14.029, 0.88 ) }
    dend_94 { pt3dadd( -21.5983, -318.305, 10.5398, 1.62 ) }
    dend_94 { pt3dadd( -21.583, -318.324, 10.463, 1.62 ) }
    dend_94 { pt3dadd( -20.8287, -319.377, 5.8915, 0.44 ) }
    dend_94 { pt3dadd( -20.5159, -319.922, 3.58421, 0.44 ) }
    dend_94 { pt3dadd( -20.5082, -319.94, 3.50419, 0.44 ) }
    dend_94 { pt3dadd( -20.4587, -320.174, 2.57198, 0.44 ) }
    dend_94 { pt3dadd( -20.463, -320.39, 1.97611, 0.81 ) }
    dend_94 { pt3dadd( -20.4701, -320.427, 1.90489, 0.81 ) }
    dend_94 { pt3dadd( -20.6171, -320.808, 1.57079, 0.81 ) }
    dend_94 { pt3dadd( -20.6343, -320.854, 1.53653, 0.81 ) }
    dend_94 { pt3dadd( -20.7372, -321.299, 1.21572, 0.81 ) }
    dend_94 { pt3dadd( -20.8743, -322.651, 0.259988, 0.44 ) }
    dend_94 { pt3dadd( -20.8029, -323.465, -0.209844, 0.44 ) }
    dend_94 { pt3dadd( -20.6019, -324.166, -0.502431, 0.88 ) }
    dend_94 { pt3dadd( -20.503, -324.417, -0.586347, 0.88 ) }
    dend_94 { pt3dadd( -20.0913, -325.346, -0.844012, 0.88 ) }
    dend_94 { pt3dadd( -20.0176, -325.493, -0.875748, 0.88 ) }
    dend_94 { pt3dadd( -19.2322, -326.959, -1.08274, 0.74 ) }
    dend_94 { pt3dadd( -18.2926, -328.624, -1.29693, 0.74 ) }
    dend_94 { pt3dadd( -18.253, -328.694, -1.30436, 0.74 ) }
    dend_94 { pt3dadd( -17.6511, -329.738, -1.4187, 0.74 ) }
    dend_94 { pt3dadd( -17.3146, -330.322, -1.48503, 1.33 ) }
    dend_94 { pt3dadd( -17.2638, -330.407, -1.49888, 1.33 ) }
    dend_94 { pt3dadd( -16.6183, -331.449, -1.7337, 1.33 ) }
    dend_94 { pt3dadd( -16.4769, -331.662, -1.78783, 1.33 ) }
    dend_94 { pt3dadd( -15.8817, -332.495, -1.99425, 1.33 ) }
    dend_94 { pt3dadd( -15.6708, -332.749, -2.05387, 1.33 ) }
    dend_94 { pt3dadd( -15.0094, -333.513, -2.27509, 0.88 ) }
    dend_94 { pt3dadd( -14.9563, -333.573, -2.29581, 0.88 ) }
    // Section: dend_89, id: dend_89, parent: dend_87 (entry count 42/100)
    dend_89 { pt3dclear() }
    dend_89 { pt3dadd( 62.0211, -415.309, 4.33641, 1.4 ) }
    dend_89 { pt3dadd( 62.4229, -415.899, 4.74252, 1.4 ) }
    dend_89 { pt3dadd( 62.8014, -416.452, 5.15573, 1.62 ) }
    dend_89 { pt3dadd( 63.3235, -417.246, 5.70227, 1.62 ) }
    dend_89 { pt3dadd( 63.3926, -417.351, 5.77132, 1.62 ) }
    dend_89 { pt3dadd( 64.3285, -418.694, 6.57147, 1.33 ) }
    dend_89 { pt3dadd( 65.0843, -419.739, 7.12828, 0.66 ) }
    dend_89 { pt3dadd( 65.1298, -419.799, 7.15779, 0.66 ) }
    dend_89 { pt3dadd( 65.8512, -420.706, 7.48539, 0.66 ) }
    dend_89 { pt3dadd( 65.9921, -420.882, 7.49096, 0.66 ) }
    dend_89 { pt3dadd( 66.7997, -421.965, 7.16031, 0.66 ) }
    dend_89 { pt3dadd( 67.2384, -422.616, 6.77547, 0.66 ) }
    dend_89 { pt3dadd( 67.2751, -422.676, 6.73198, 0.66 ) }
    dend_89 { pt3dadd( 67.9973, -423.976, 5.73195, 0.66 ) }
    dend_89 { pt3dadd( 68.7466, -425.519, 4.43865, 0.88 ) }
    dend_89 { pt3dadd( 68.9338, -426.006, 4.03301, 1.11 ) }
    dend_89 { pt3dadd( 69.0653, -426.527, 3.61419, 1.11 ) }
    dend_89 { pt3dadd( 69.0754, -426.583, 3.57321, 1.11 ) }
    dend_89 { pt3dadd( 69.1331, -427.038, 3.35014, 1.11 ) }
    dend_89 { pt3dadd( 69.1379, -427.118, 3.33546, 1.11 ) }
    dend_89 { pt3dadd( 69.221, -427.689, 3.33546, 1.11 ) }
    dend_89 { pt3dadd( 69.406, -428.503, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 69.4281, -428.559, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 69.9902, -429.673, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 70.0765, -429.799, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 70.8998, -430.808, 3.33546, 0.59 ) }
    dend_89 { pt3dadd( 71.0023, -430.919, 3.32668, 0.59 ) }
    dend_89 { pt3dadd( 71.8953, -431.811, 3.19922, 0.59 ) }
    dend_89 { pt3dadd( 71.9464, -431.862, 3.18951, 0.59 ) }
    dend_89 { pt3dadd( 72.7659, -432.672, 2.99563, 0.59 ) }
    dend_89 { pt3dadd( 72.8112, -432.724, 2.98216, 0.59 ) }
    dend_89 { pt3dadd( 73.6198, -433.884, 2.64424, 0.52 ) }
    dend_89 { pt3dadd( 73.6493, -433.944, 2.62251, 0.52 ) }
    dend_89 { pt3dadd( 73.78, -434.416, 2.42389, 1.11 ) }
    dend_89 { pt3dadd( 73.9155, -435.079, 2.13017, 1.4 ) }
    dend_89 { pt3dadd( 74.0442, -435.734, 1.85308, 1.4 ) }
    dend_89 { pt3dadd( 74.0606, -435.8, 1.82768, 1.4 ) }
    dend_89 { pt3dadd( 74.393, -436.904, 1.48086, 0.88 ) }
    dend_89 { pt3dadd( 74.4177, -436.967, 1.45812, 0.88 ) }
    dend_89 { pt3dadd( 74.7503, -437.626, 1.19919, 0.88 ) }
    dend_89 { pt3dadd( 75.4049, -438.7, 0.766347, 0.29 ) }
    dend_89 { pt3dadd( 75.4451, -438.757, 0.744968, 0.29 ) }
    dend_89 { pt3dadd( 75.7299, -439.136, 0.617935, 0.96 ) }
    dend_89 { pt3dadd( 76.3566, -439.919, 0.419952, 1.47 ) }
    dend_89 { pt3dadd( 76.7144, -440.364, 0.3121, 1.77 ) }
    dend_89 { pt3dadd( 76.7511, -440.422, 0.295959, 1.77 ) }
    dend_89 { pt3dadd( 76.9879, -440.87, 0.16295, 1.77 ) }
    dend_89 { pt3dadd( 77.0112, -440.935, 0.147218, 1.77 ) }
    dend_89 { pt3dadd( 77.1841, -441.639, 0.0310193, 0.81 ) }
    dend_89 { pt3dadd( 77.3369, -442.52, -0.0588566, 0.59 ) }
    dend_89 { pt3dadd( 77.5755, -444.213, -0.197599, 0.59 ) }
    dend_89 { pt3dadd( 77.5852, -444.283, -0.20205, 0.59 ) }
    dend_89 { pt3dadd( 77.7943, -446.089, -0.308253, 0.59 ) }
    dend_89 { pt3dadd( 77.8801, -446.968, -0.351689, 0.59 ) }
    dend_89 { pt3dadd( 77.9019, -447.335, -0.362728, 1.77 ) }
    dend_89 { pt3dadd( 77.9183, -447.989, -0.353902, 2.5 ) }
    dend_89 { pt3dadd( 77.9766, -448.719, -0.26028, 2.5 ) }
    // Section: dend_88, id: dend_88, parent: dend_87 (entry count 99/100)
    dend_88 { pt3dclear() }
    dend_88 { pt3dadd( 62.0211, -415.309, 4.33641, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_88 { pt3dadd( 60.9963, -415.772, 4.29035, 0.22 ) }
    dend_88 { pt3dadd( 60.0659, -416.107, 4.25378, 0.22 ) }
    dend_88 { pt3dadd( 59.9997, -416.132, 4.25173, 0.22 ) }
    dend_88 { pt3dadd( 59.1761, -416.444, 4.22967, 0.22 ) }
    dend_88 { pt3dadd( 58.8114, -416.58, 4.22205, 0.22 ) }
    dend_88 { pt3dadd( 58.1569, -416.833, 4.20985, 0.22 ) }
    dend_88 { pt3dadd( 57.9472, -416.911, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 56.8365, -417.244, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 56.678, -417.292, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 55.5691, -417.636, 4.2075, 0.22 ) }
    dend_88 { pt3dadd( 55.3347, -417.725, 4.2075, 1.03 ) }
    dend_88 { pt3dadd( 55.2613, -417.758, 4.2075, 1.03 ) }
    dend_88 { pt3dadd( 54.0927, -418.221, 4.2075, 1.03 ) }
    // Section: dend_76, id: dend_76, parent: dend_74 (entry count 13/100)
    dend_76 { pt3dclear() }
    dend_76 { pt3dadd( -60.7532, 100.106, -60.3068, 1.11 ) }
    dend_76 { pt3dadd( -61.7896, 102.003, -67.9233, 1.11 ) }
    dend_76 { pt3dadd( -62.0571, 102.479, -69.4595, 1.47 ) }
    dend_76 { pt3dadd( -62.1335, 102.613, -69.8419, 1.47 ) }
    dend_76 { pt3dadd( -62.5054, 103.274, -71.5341, 0.88 ) }
    dend_76 { pt3dadd( -62.6851, 103.597, -72.3022, 0.88 ) }
    dend_76 { pt3dadd( -63.1657, 104.497, -74.2748, 0.66 ) }
    dend_76 { pt3dadd( -63.4983, 105.15, -75.0096, 0.52 ) }
    dend_76 { pt3dadd( -63.5358, 105.224, -75.0877, 0.52 ) }
    dend_76 { pt3dadd( -63.6932, 105.52, -75.3961, 0.52 ) }
    dend_76 { pt3dadd( -63.7215, 105.568, -75.4396, 0.52 ) }
    dend_76 { pt3dadd( -63.9517, 105.915, -75.8531, 0.52 ) }
    dend_76 { pt3dadd( -64.8923, 107.018, -77.2281, 0.52 ) }
    dend_76 { pt3dadd( -64.9238, 107.052, -77.281, 0.52 ) }
    dend_76 { pt3dadd( -65.2865, 107.443, -77.907, 1.25 ) }
    dend_76 { pt3dadd( -65.6699, 107.832, -78.5382, 1.62 ) }
    dend_76 { pt3dadd( -66.8023, 108.936, -80.5858, 0.37 ) }
    dend_76 { pt3dadd( -67.5086, 109.599, -81.8836, 0.37 ) }
    dend_76 { pt3dadd( -68.7349, 110.736, -83.9999, 0.37 ) }
    dend_76 { pt3dadd( -68.7667, 110.764, -84.0563, 0.81 ) }
    dend_76 { pt3dadd( -69.1216, 111.074, -84.6954, 0.81 ) }
    dend_76 { pt3dadd( -70.444, 112.135, -87.3608, 0.81 ) }
    dend_76 { pt3dadd( -70.724, 112.343, -87.9017, 0.22 ) }
    dend_76 { pt3dadd( -71.2769, 112.73, -88.9911, 0.22 ) }
    dend_76 { pt3dadd( -72.2058, 113.322, -90.6515, 1.33 ) }
    dend_76 { pt3dadd( -72.4491, 113.482, -91.0952, 1.92 ) }
    dend_76 { pt3dadd( -74.4863, 114.862, -94.8948, 0.29 ) }
    dend_76 { pt3dadd( -75.1222, 115.299, -96.0083, 0.29 ) }
    dend_76 { pt3dadd( -75.2038, 115.356, -96.1587, 0.29 ) }
    dend_76 { pt3dadd( -75.41, 115.502, -96.5513, 0.59 ) }
    dend_76 { pt3dadd( -76.467, 116.261, -98.3732, 0.59 ) }
    dend_76 { pt3dadd( -76.5021, 116.287, -98.4278, 0.59 ) }
    dend_76 { pt3dadd( -76.8412, 116.574, -98.7507, 0.59 ) }
    dend_76 { pt3dadd( -76.8899, 116.614, -98.8008, 0.59 ) }
    dend_76 { pt3dadd( -77.1396, 116.8, -99.0204, 0.29 ) }
    dend_76 { pt3dadd( -77.1875, 116.836, -99.0582, 0.29 ) }
    dend_76 { pt3dadd( -77.6363, 117.185, -99.2769, 0.29 ) }
    dend_76 { pt3dadd( -77.6814, 117.223, -99.3005, 0.29 ) }
    dend_76 { pt3dadd( -78.2158, 117.705, -99.6609, 0.29 ) }
    dend_76 { pt3dadd( -78.2628, 117.746, -99.6933, 0.29 ) }
    dend_76 { pt3dadd( -79.1285, 118.517, -100.303, 0.29 ) }
    dend_76 { pt3dadd( -79.9675, 119.312, -101.049, 0.29 ) }
    dend_76 { pt3dadd( -80.0065, 119.352, -101.091, 0.29 ) }
    dend_76 { pt3dadd( -80.6918, 120.099, -101.872, 1.18 ) }
    dend_76 { pt3dadd( -81.1642, 120.632, -102.392, 1.77 ) }
    dend_76 { pt3dadd( -81.2031, 120.677, -102.434, 1.77 ) }
    dend_76 { pt3dadd( -82.44, 122.095, -103.828, 1.84 ) }
    dend_76 { pt3dadd( -83.2352, 123.023, -104.797, 0.52 ) }
    dend_76 { pt3dadd( -83.7849, 123.599, -105.397, 0.52 ) }
    dend_76 { pt3dadd( -84.4759, 124.249, -106.053, 0.52 ) }
    dend_76 { pt3dadd( -84.5232, 124.288, -106.093, 0.52 ) }
    dend_76 { pt3dadd( -85.5773, 124.987, -106.825, 0.22 ) }
    dend_76 { pt3dadd( -85.6452, 125.02, -106.859, 0.22 ) }
    dend_76 { pt3dadd( -86.9985, 125.526, -107.448, 0.22 ) }
    dend_76 { pt3dadd( -87.4066, 125.653, -107.622, 0.52 ) }
    dend_76 { pt3dadd( -88.0438, 125.842, -107.963, 0.52 ) }
    dend_76 { pt3dadd( -89.0522, 126.172, -108.508, 0.66 ) }
    dend_76 { pt3dadd( -89.6947, 126.4, -108.849, 0.66 ) }
    dend_76 { pt3dadd( -90.0602, 126.54, -109.056, 1.25 ) }
    dend_76 { pt3dadd( -90.3587, 126.667, -109.244, 1.25 ) }
    dend_76 { pt3dadd( -92.0602, 127.425, -110.293, 0.29 ) }
    dend_76 { pt3dadd( -93.2084, 127.97, -110.966, 0.22 ) }
    dend_76 { pt3dadd( -93.2677, 127.999, -110.996, 0.22 ) }
    dend_76 { pt3dadd( -93.8844, 128.335, -111.286, 0.22 ) }
    dend_76 { pt3dadd( -93.9958, 128.412, -111.348, 0.52 ) }
    dend_76 { pt3dadd( -94.4085, 128.744, -111.587, 0.52 ) }
    dend_76 { pt3dadd( -94.6526, 128.978, -111.717, 0.15 ) }
    dend_76 { pt3dadd( -94.6928, 129.023, -111.755, 0.15 ) }
    dend_76 { pt3dadd( -95.2671, 129.684, -112.414, 0.15 ) }
    dend_76 { pt3dadd( -96.1724, 130.839, -113.883, 0.96 ) }
    dend_76 { pt3dadd( -96.4152, 131.192, -114.316, 1.77 ) }
    dend_76 { pt3dadd( -96.5859, 131.464, -114.647, 2.06 ) }
    dend_76 { pt3dadd( -97.2985, 132.729, -116.129, 1.47 ) }
    dend_76 { pt3dadd( -97.3206, 132.775, -116.179, 1.47 ) }
    dend_76 { pt3dadd( -97.9308, 134.329, -117.69, 0.22 ) }
    dend_76 { pt3dadd( -98.3915, 135.768, -118.823, 0.22 ) }
    dend_76 { pt3dadd( -98.4049, 135.814, -118.859, 0.22 ) }
    dend_76 { pt3dadd( -98.52, 136.236, -119.136, 0.22 ) }
    dend_76 { pt3dadd( -98.6518, 136.752, -119.448, 1.11 ) }
    dend_76 { pt3dadd( -98.8434, 137.506, -119.926, 1.4 ) }
    dend_76 { pt3dadd( -98.8693, 137.617, -119.996, 1.4 ) }
    dend_76 { pt3dadd( -99.2139, 139.186, -121.179, 0.22 ) }
    dend_76 { pt3dadd( -99.4255, 140.291, -122.121, 0.22 ) }
    dend_76 { pt3dadd( -99.524, 141.446, -123.232, 0.66 ) }
    dend_76 { pt3dadd( -99.5244, 141.546, -123.335, 0.66 ) }
    dend_76 { pt3dadd( -99.4927, 141.952, -123.744, 0.66 ) }
    dend_76 { pt3dadd( -99.4849, 142.005, -123.794, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_76 { pt3dadd( -99.0946, 143.618, -125.18, 0.29 ) }
    dend_76 { pt3dadd( -98.6522, 145.289, -126.654, 0.22 ) }
    dend_76 { pt3dadd( -98.6221, 145.448, -126.794, 0.52 ) }
    dend_76 { pt3dadd( -98.5416, 146.064, -127.421, 0.52 ) }
    dend_76 { pt3dadd( -98.5385, 146.113, -127.475, 0.52 ) }
    dend_76 { pt3dadd( -98.5498, 146.436, -127.876, 0.52 ) }
    dend_76 { pt3dadd( -98.7667, 147.91, -129.916, 0.29 ) }
    dend_76 { pt3dadd( -99.0847, 148.968, -131.49, 0.29 ) }
    dend_76 { pt3dadd( -99.517, 150.086, -133.196, 1.18 ) }
    dend_76 { pt3dadd( -99.6803, 150.433, -133.734, 1.18 ) }
    dend_76 { pt3dadd( -100.34, 151.634, -135.638, 0.15 ) }
    dend_76 { pt3dadd( -100.364, 151.67, -135.697, 0.15 ) }
    dend_76 { pt3dadd( -100.876, 152.318, -136.628, 0.15 ) }
    dend_76 { pt3dadd( -101.107, 152.626, -136.992, 0.52 ) }
    dend_76 { pt3dadd( -101.333, 152.936, -137.287, 0.52 ) }
    dend_76 { pt3dadd( -101.863, 153.765, -137.992, 0.22 ) }
    dend_76 { pt3dadd( -101.889, 153.815, -138.035, 0.22 ) }
    dend_76 { pt3dadd( -102.355, 154.86, -139.072, 0.22 ) }
    dend_76 { pt3dadd( -102.702, 155.718, -140.033, 0.96 ) }
    dend_76 { pt3dadd( -102.726, 155.769, -140.093, 0.96 ) }
    dend_76 { pt3dadd( -102.91, 156.125, -140.562, 0.96 ) }
    dend_76 { pt3dadd( -103.643, 157.467, -142.396, 0.29 ) }
    dend_76 { pt3dadd( -103.824, 157.787, -142.846, 0.29 ) }
    dend_76 { pt3dadd( -103.895, 157.907, -143.036, 0.29 ) }
    dend_76 { pt3dadd( -104.151, 158.359, -143.67, 0.29 ) }
    dend_76 { pt3dadd( -104.699, 159.422, -145.213, 0.29 ) }
    dend_76 { pt3dadd( -104.719, 159.465, -145.268, 0.29 ) }
    dend_76 { pt3dadd( -105.003, 160.12, -145.986, 0.29 ) }
    dend_76 { pt3dadd( -105.367, 161.012, -147.083, 0.88 ) }
    dend_76 { pt3dadd( -105.561, 161.495, -147.679, 1.11 ) }
    dend_76 { pt3dadd( -106.153, 162.896, -149.386, 0.29 ) }
    dend_76 { pt3dadd( -106.617, 163.905, -150.598, 0.29 ) }
    dend_76 { pt3dadd( -106.641, 163.953, -150.659, 0.29 ) }
    dend_76 { pt3dadd( -107.572, 165.742, -153.068, 1.11 ) }
    dend_76 { pt3dadd( -107.804, 166.16, -153.623, 1.84 ) }
    dend_76 { pt3dadd( -108.013, 166.515, -154.141, 1.84 ) }
    // Section: dend_75, id: dend_75, parent: dend_74 (entry count 36/100)
    dend_75 { pt3dclear() }
    dend_75 { pt3dadd( -60.7532, 100.106, -60.3068, 0.29 ) }
    dend_75 { pt3dadd( -60.9666, 100.165, -60.4466, 0.29 ) }
    dend_75 { pt3dadd( -61.4717, 100.316, -60.744, 0.66 ) }
    dend_75 { pt3dadd( -61.5316, 100.336, -60.7759, 0.66 ) }
    dend_75 { pt3dadd( -61.9927, 100.486, -60.9843, 0.66 ) }
    dend_75 { pt3dadd( -63.5226, 100.986, -61.7163, 0.37 ) }
    dend_75 { pt3dadd( -64.4733, 101.307, -62.1805, 0.37 ) }
    dend_75 { pt3dadd( -64.8773, 101.438, -62.3741, 0.59 ) }
    dend_75 { pt3dadd( -65.3074, 101.576, -62.554, 0.59 ) }
    dend_75 { pt3dadd( -66.1772, 101.849, -62.8644, 0.22 ) }
    dend_75 { pt3dadd( -67.1349, 102.105, -63.1093, 0.81 ) }
    dend_75 { pt3dadd( -67.3297, 102.143, -63.149, 0.81 ) }
    dend_75 { pt3dadd( -68.1878, 102.26, -63.3656, 0.81 ) }
    dend_75 { pt3dadd( -69.0806, 102.318, -63.6048, 0.22 ) }
    dend_75 { pt3dadd( -69.1597, 102.318, -63.6204, 0.22 ) }
    dend_75 { pt3dadd( -70.2713, 102.241, -63.7388, 0.22 ) }
    dend_75 { pt3dadd( -71.6736, 102.067, -63.783, 1.18 ) }
    dend_75 { pt3dadd( -72.2768, 101.968, -63.7517, 1.55 ) }
    dend_75 { pt3dadd( -72.6966, 101.889, -63.6961, 1.55 ) }
    dend_75 { pt3dadd( -73.8985, 101.646, -63.3811, 0.22 ) }
    dend_75 { pt3dadd( -75.1679, 101.475, -62.9827, 0.22 ) }
    dend_75 { pt3dadd( -75.2672, 101.467, -62.9457, 0.22 ) }
    dend_75 { pt3dadd( -76.3912, 101.431, -62.5188, 0.74 ) }
    dend_75 { pt3dadd( -77.093, 101.439, -62.285, 0.74 ) }
    dend_75 { pt3dadd( -78.1966, 101.534, -62.0205, 0.22 ) }
    dend_75 { pt3dadd( -80.351, 101.831, -61.6758, 0.22 ) }
    dend_75 { pt3dadd( -80.6455, 101.882, -61.6417, 0.22 ) }
    dend_75 { pt3dadd( -81.9499, 102.12, -61.5948, 0.22 ) }
    dend_75 { pt3dadd( -82.0984, 102.148, -61.6021, 0.22 ) }
    dend_75 { pt3dadd( -84.351, 102.582, -61.8119, 0.22 ) }
    dend_75 { pt3dadd( -84.4996, 102.611, -61.834, 0.22 ) }
    dend_75 { pt3dadd( -85.5123, 102.786, -61.9937, 0.22 ) }
    dend_75 { pt3dadd( -86.4618, 102.928, -62.2103, 1.11 ) }
    dend_75 { pt3dadd( -87.0272, 102.989, -62.3725, 1.18 ) }
    dend_75 { pt3dadd( -87.1039, 102.994, -62.3968, 1.18 ) }
    dend_75 { pt3dadd( -87.6809, 103.006, -62.6007, 1.18 ) }
    dend_75 { pt3dadd( -87.8253, 103.012, -62.6505, 1.18 ) }
    dend_75 { pt3dadd( -88.8432, 103.075, -62.986, 0.15 ) }
    dend_75 { pt3dadd( -91.3997, 103.307, -63.701, 0.15 ) }
    dend_75 { pt3dadd( -91.5604, 103.326, -63.7451, 0.44 ) }
    dend_75 { pt3dadd( -91.9853, 103.386, -63.8542, 0.44 ) }
    dend_75 { pt3dadd( -93.2613, 103.606, -64.2266, 0.22 ) }
    dend_75 { pt3dadd( -93.3371, 103.621, -64.2497, 0.22 ) }
    dend_75 { pt3dadd( -94.1844, 103.82, -64.4969, 0.22 ) }
    dend_75 { pt3dadd( -94.3956, 103.878, -64.5776, 0.81 ) }
    dend_75 { pt3dadd( -94.8789, 104.013, -64.7621, 0.96 ) }
    dend_75 { pt3dadd( -95.9764, 104.308, -65.202, 0.22 ) }
    dend_75 { pt3dadd( -96.0313, 104.323, -65.2234, 0.22 ) }
    dend_75 { pt3dadd( -97.2357, 104.655, -65.6986, 0.22 ) }
    dend_75 { pt3dadd( -97.2909, 104.669, -65.7193, 0.22 ) }
    dend_75 { pt3dadd( -97.7978, 104.816, -65.9279, 0.52 ) }
    dend_75 { pt3dadd( -97.9585, 104.862, -65.9944, 0.52 ) }
    dend_75 { pt3dadd( -98.6547, 105.06, -66.2372, 0.52 ) }
    dend_75 { pt3dadd( -98.7256, 105.081, -66.2691, 0.52 ) }
    dend_75 { pt3dadd( -99.4075, 105.299, -66.646, 0.52 ) }
    dend_75 { pt3dadd( -100.418, 105.623, -67.2025, 0.52 ) }
    dend_75 { pt3dadd( -100.612, 105.692, -67.3313, 0.22 ) }
    dend_75 { pt3dadd( -101.351, 105.973, -67.8725, 0.22 ) }
    dend_75 { pt3dadd( -101.964, 106.218, -68.4062, 0.44 ) }
    dend_75 { pt3dadd( -102.02, 106.241, -68.4599, 0.44 ) }
    dend_75 { pt3dadd( -102.531, 106.492, -68.9426, 0.44 ) }
    dend_75 { pt3dadd( -103.802, 107.085, -70.0125, 0.44 ) }
    dend_75 { pt3dadd( -103.859, 107.105, -70.0497, 0.44 ) }
    dend_75 { pt3dadd( -104.433, 107.247, -70.3162, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_75 { pt3dadd( -104.491, 107.256, -70.3295, 0.66 ) }
    dend_75 { pt3dadd( -106.601, 107.449, -70.6039, 1.84 ) }
    dend_75 { pt3dadd( -108.045, 107.469, -70.6558, 0.37 ) }
    dend_75 { pt3dadd( -109.623, 107.495, -70.5729, 0.37 ) }
    dend_75 { pt3dadd( -110.058, 107.519, -70.5541, 0.37 ) }
    dend_75 { pt3dadd( -110.936, 107.589, -70.5223, 0.37 ) }
    dend_75 { pt3dadd( -111.159, 107.611, -70.526, 0.37 ) }
    dend_75 { pt3dadd( -111.534, 107.659, -70.574, 1.47 ) }
    dend_75 { pt3dadd( -112.452, 107.874, -70.6389, 0.37 ) }
    dend_75 { pt3dadd( -113.221, 108.117, -70.7386, 0.37 ) }
    dend_75 { pt3dadd( -113.5, 108.22, -70.7849, 0.74 ) }
    dend_75 { pt3dadd( -113.761, 108.33, -70.8584, 0.74 ) }
    dend_75 { pt3dadd( -114.321, 108.632, -71.0386, 0.29 ) }
    dend_75 { pt3dadd( -115.15, 109.217, -71.3131, 0.29 ) }
    dend_75 { pt3dadd( -115.593, 109.572, -71.4654, 1.11 ) }
    dend_75 { pt3dadd( -115.96, 109.927, -71.5856, 1.11 ) }
    dend_75 { pt3dadd( -116.814, 110.83, -71.7993, 0.22 ) }
    dend_75 { pt3dadd( -118.222, 112.408, -72.048, 0.22 ) }
    dend_75 { pt3dadd( -119.224, 113.6, -72.1521, 0.22 ) }
    dend_75 { pt3dadd( -119.347, 113.757, -72.1612, 0.22 ) }
    dend_75 { pt3dadd( -120.348, 115.035, -72.1748, 0.22 ) }
    dend_75 { pt3dadd( -120.909, 115.781, -72.1416, 0.66 ) }
    dend_75 { pt3dadd( -121.29, 116.319, -72.0513, 1.03 ) }
    dend_75 { pt3dadd( -121.432, 116.524, -71.998, 1.03 ) }
    // Section: dend_71, id: dend_71, parent: dend_59 (entry count 24/100)
    dend_71 { pt3dclear() }
    dend_71 { pt3dadd( -67.5596, 158.261, -31.2221, 0.52 ) }
    dend_71 { pt3dadd( -67.9191, 159.184, -31.0958, 0.52 ) }
    dend_71 { pt3dadd( -68.2624, 160.27, -30.9079, 0.52 ) }
    dend_71 { pt3dadd( -68.6424, 161.499, -30.6941, 0.52 ) }
    dend_71 { pt3dadd( -68.6603, 161.555, -30.6845, 0.52 ) }
    dend_71 { pt3dadd( -68.9824, 162.536, -30.5237, 0.52 ) }
    dend_71 { pt3dadd( -69.2245, 163.289, -30.4094, 0.52 ) }
    dend_71 { pt3dadd( -69.4181, 164.043, -30.2861, 0.88 ) }
    dend_71 { pt3dadd( -69.6338, 165.0, -30.1539, 1.11 ) }
    dend_71 { pt3dadd( -69.779, 165.723, -30.078, 1.11 ) }
    dend_71 { pt3dadd( -69.8447, 166.075, -30.0561, 1.11 ) }
    dend_71 { pt3dadd( -69.9929, 166.975, -30.047, 0.37 ) }
    dend_71 { pt3dadd( -70.1533, 168.28, -29.9162, 0.37 ) }
    dend_71 { pt3dadd( -70.1725, 168.644, -29.8487, 1.03 ) }
    dend_71 { pt3dadd( -70.17, 168.711, -29.8278, 1.03 ) }
    dend_71 { pt3dadd( -70.1313, 169.456, -29.5371, 1.03 ) }
    dend_71 { pt3dadd( -70.1053, 169.995, -29.2918, 1.03 ) }
    dend_71 { pt3dadd( -70.0943, 171.542, -28.5025, 0.52 ) }
    dend_71 { pt3dadd( -70.1268, 172.396, -28.065, 0.52 ) }
    dend_71 { pt3dadd( -70.2005, 173.471, -27.5429, 0.44 ) }
    dend_71 { pt3dadd( -70.2894, 174.278, -27.1959, 0.44 ) }
    dend_71 { pt3dadd( -70.3033, 174.37, -27.1624, 0.44 ) }
    dend_71 { pt3dadd( -70.4585, 175.215, -26.9499, 0.44 ) }
    dend_71 { pt3dadd( -70.6828, 176.215, -26.8502, 0.44 ) }
    dend_71 { pt3dadd( -70.7001, 176.284, -26.8467, 0.44 ) }
    dend_71 { pt3dadd( -70.9442, 177.143, -26.8467, 0.74 ) }
    dend_71 { pt3dadd( -71.0828, 177.629, -26.8253, 0.96 ) }
    dend_71 { pt3dadd( -71.3145, 178.381, -26.7672, 1.11 ) }
    dend_71 { pt3dadd( -71.5836, 179.282, -26.675, 1.25 ) }
    dend_71 { pt3dadd( -71.8198, 180.1, -26.5789, 0.81 ) }
    dend_71 { pt3dadd( -72.0479, 180.943, -26.473, 0.52 ) }
    dend_71 { pt3dadd( -72.2698, 181.758, -26.3449, 0.44 ) }
    dend_71 { pt3dadd( -72.443, 182.365, -26.2372, 0.37 ) }
    dend_71 { pt3dadd( -72.8861, 183.814, -26.0101, 0.37 ) }
    dend_71 { pt3dadd( -73.0732, 184.377, -25.9386, 0.37 ) }
    dend_71 { pt3dadd( -73.0992, 184.442, -25.933, 0.37 ) }
    dend_71 { pt3dadd( -73.4206, 185.099, -25.9149, 0.88 ) }
    dend_71 { pt3dadd( -73.8253, 185.771, -25.9498, 0.88 ) }
    dend_71 { pt3dadd( -74.482, 186.575, -26.016, 1.4 ) }
    dend_71 { pt3dadd( -74.8745, 186.929, -26.0601, 1.69 ) }
    dend_71 { pt3dadd( -75.2864, 187.266, -26.1087, 1.69 ) }
    dend_71 { pt3dadd( -75.6204, 187.542, -26.1538, 1.69 ) }
    dend_71 { pt3dadd( -75.6743, 187.587, -26.1629, 1.69 ) }
    dend_71 { pt3dadd( -76.2387, 188.042, -26.2248, 1.11 ) }
    dend_71 { pt3dadd( -76.7291, 188.432, -26.2357, 0.74 ) }
    dend_71 { pt3dadd( -76.7764, 188.469, -26.2367, 0.74 ) }
    dend_71 { pt3dadd( -77.1659, 188.778, -26.2441, 0.59 ) }
    dend_71 { pt3dadd( -77.2217, 188.821, -26.245, 0.59 ) }
    dend_71 { pt3dadd( -77.9355, 189.425, -26.2541, 0.59 ) }
    dend_71 { pt3dadd( -78.3661, 189.836, -26.2754, 0.59 ) }
    dend_71 { pt3dadd( -79.0478, 190.619, -26.3303, 0.59 ) }
    dend_71 { pt3dadd( -79.0885, 190.679, -26.335, 0.59 ) }
    dend_71 { pt3dadd( -79.5227, 191.497, -26.3972, 0.59 ) }
    dend_71 { pt3dadd( -79.8374, 192.236, -26.4522, 0.59 ) }
    dend_71 { pt3dadd( -80.1114, 193.021, -26.5081, 0.88 ) }
    dend_71 { pt3dadd( -80.4096, 193.932, -26.5698, 0.88 ) }
    dend_71 { pt3dadd( -80.7802, 195.012, -26.6848, 0.88 ) }
    dend_71 { pt3dadd( -80.9623, 195.484, -26.7487, 0.44 ) }
    dend_71 { pt3dadd( -81.2711, 196.143, -26.8582, 0.44 ) }
    dend_71 { pt3dadd( -81.731, 196.892, -27.003, 0.44 ) }
    dend_71 { pt3dadd( -81.9982, 197.25, -27.0768, 0.81 ) }
    dend_71 { pt3dadd( -82.7219, 198.029, -27.3491, 1.11 ) }
    dend_71 { pt3dadd( -82.7639, 198.068, -27.368, 1.11 ) }
    dend_71 { pt3dadd( -83.3367, 198.591, -27.6603, 1.33 ) }
    dend_71 { pt3dadd( -83.6676, 198.902, -27.8462, 1.55 ) }
    dend_71 { pt3dadd( -84.0775, 199.312, -28.0936, 1.55 ) }
    dend_71 { pt3dadd( -84.8276, 200.155, -28.5208, 0.96 ) }
    dend_71 { pt3dadd( -85.0486, 200.427, -28.6302, 0.44 ) }
    dend_71 { pt3dadd( -85.097, 200.491, -28.6491, 0.44 ) }
    dend_71 { pt3dadd( -85.5021, 201.093, -28.7688, 0.44 ) }
    dend_71 { pt3dadd( -85.5347, 201.145, -28.7715, 0.44 ) }
    dend_71 { pt3dadd( -85.9519, 201.872, -28.7026, 0.44 ) }
    dend_71 { pt3dadd( -85.9833, 201.942, -28.6794, 0.44 ) }
    dend_71 { pt3dadd( -86.2805, 202.723, -28.3675, 0.44 ) }
    dend_71 { pt3dadd( -86.3002, 202.788, -28.341, 0.44 ) }
    dend_71 { pt3dadd( -86.5414, 203.533, -28.0054, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_71 { pt3dadd( -86.6177, 203.734, -27.9093, 0.88 ) }
    dend_71 { pt3dadd( -87.1026, 204.827, -27.4538, 1.33 ) }
    dend_71 { pt3dadd( -87.1983, 205.004, -27.4005, 1.69 ) }
    dend_71 { pt3dadd( -87.7904, 205.975, -27.1945, 2.28 ) }
    dend_71 { pt3dadd( -88.4788, 207.01, -27.0201, 0.66 ) }
    dend_71 { pt3dadd( -88.9878, 207.701, -26.9392, 0.66 ) }
    dend_71 { pt3dadd( -89.7325, 208.652, -26.8848, 0.66 ) }
    dend_71 { pt3dadd( -90.5945, 209.711, -26.7836, 0.66 ) }
    dend_71 { pt3dadd( -90.6316, 209.757, -26.7753, 0.66 ) }
    dend_71 { pt3dadd( -91.1037, 210.353, -26.6244, 1.25 ) }
    dend_71 { pt3dadd( -91.5566, 210.975, -26.4327, 1.55 ) }
    dend_71 { pt3dadd( -91.8283, 211.354, -26.2736, 1.55 ) }
    dend_71 { pt3dadd( -92.9425, 212.802, -25.4282, 0.52 ) }
    dend_71 { pt3dadd( -93.4068, 213.364, -25.0434, 0.52 ) }
    dend_71 { pt3dadd( -93.9479, 213.936, -24.6355, 0.52 ) }
    dend_71 { pt3dadd( -93.9942, 213.978, -24.6025, 0.52 ) }
    dend_71 { pt3dadd( -94.3505, 214.261, -24.3414, 0.52 ) }
    dend_71 { pt3dadd( -95.1418, 214.774, -23.8168, 0.52 ) }
    dend_71 { pt3dadd( -95.1995, 214.803, -23.7876, 0.52 ) }
    dend_71 { pt3dadd( -95.629, 214.978, -23.5392, 0.52 ) }
    dend_71 { pt3dadd( -96.1536, 215.178, -23.1334, 0.96 ) }
    dend_71 { pt3dadd( -96.71, 215.403, -22.6342, 1.18 ) }
    dend_71 { pt3dadd( -96.8934, 215.486, -22.4214, 1.18 ) }
    dend_71 { pt3dadd( -97.1928, 215.643, -22.0316, 1.18 ) }
    dend_71 { pt3dadd( -97.2353, 215.667, -21.9803, 1.18 ) }
    dend_71 { pt3dadd( -98.2586, 216.261, -20.9268, 0.59 ) }
    dend_71 { pt3dadd( -98.3009, 216.286, -20.8907, 0.59 ) }
    dend_71 { pt3dadd( -99.2057, 216.824, -20.2536, 0.74 ) }
    dend_71 { pt3dadd( -99.7698, 217.193, -19.9108, 0.96 ) }
    dend_71 { pt3dadd( -100.367, 217.608, -19.605, 1.18 ) }
    dend_71 { pt3dadd( -101.153, 218.181, -19.3082, 1.25 ) }
    dend_71 { pt3dadd( -101.465, 218.424, -19.2441, 1.18 ) }
    dend_71 { pt3dadd( -101.945, 218.821, -19.1429, 0.59 ) }
    dend_71 { pt3dadd( -102.595, 219.405, -19.0231, 0.59 ) }
    dend_71 { pt3dadd( -102.711, 219.517, -18.9947, 0.59 ) }
    dend_71 { pt3dadd( -103.171, 219.998, -18.854, 0.59 ) }
    dend_71 { pt3dadd( -103.687, 220.564, -18.6676, 0.96 ) }
    dend_71 { pt3dadd( -104.425, 221.332, -18.4025, 1.33 ) }
    dend_71 { pt3dadd( -104.735, 221.653, -18.2861, 1.55 ) }
    dend_71 { pt3dadd( -105.212, 222.134, -18.1031, 1.55 ) }
    dend_71 { pt3dadd( -105.251, 222.176, -18.0831, 1.55 ) }
    dend_71 { pt3dadd( -105.903, 222.942, -17.6801, 1.77 ) }
    dend_71 { pt3dadd( -106.326, 223.478, -17.3948, 1.77 ) }
    dend_71 { pt3dadd( -106.601, 223.87, -17.22, 2.14 ) }
    dend_71 { pt3dadd( -106.642, 223.934, -17.1936, 2.14 ) }
    dend_71 { pt3dadd( -107.53, 225.345, -16.6751, 0.74 ) }
    dend_71 { pt3dadd( -108.067, 226.196, -16.408, 0.74 ) }
    dend_71 { pt3dadd( -108.124, 226.289, -16.3839, 0.74 ) }
    dend_71 { pt3dadd( -108.802, 227.384, -16.1184, 0.74 ) }
    dend_71 { pt3dadd( -109.21, 227.993, -15.9849, 0.96 ) }
    dend_71 { pt3dadd( -109.725, 228.701, -15.8625, 1.11 ) }
    dend_71 { pt3dadd( -110.126, 229.193, -15.8159, 1.4 ) }
    dend_71 { pt3dadd( -110.602, 229.675, -15.662, 1.4 ) }
    dend_71 { pt3dadd( -111.326, 230.237, -15.3361, 1.18 ) }
    dend_71 { pt3dadd( -111.447, 230.294, -15.2628, 1.18 ) }
    dend_71 { pt3dadd( -112.244, 230.508, -14.7187, 1.18 ) }
    dend_71 { pt3dadd( -113.241, 230.627, -14.0171, 0.74 ) }
    dend_71 { pt3dadd( -115.461, 230.664, -12.4478, 0.74 ) }
    dend_71 { pt3dadd( -116.342, 230.605, -11.8594, 0.74 ) }
    dend_71 { pt3dadd( -117.432, 230.476, -11.1367, 0.74 ) }
    dend_71 { pt3dadd( -117.946, 230.417, -10.8091, 0.96 ) }
    dend_71 { pt3dadd( -118.504, 230.376, -10.4638, 0.96 ) }
    dend_71 { pt3dadd( -118.574, 230.375, -10.4239, 0.96 ) }
    dend_71 { pt3dadd( -119.394, 230.543, -9.98939, 0.96 ) }
    dend_71 { pt3dadd( -120.832, 231.083, -9.08114, 0.81 ) }
    dend_71 { pt3dadd( -121.607, 231.524, -8.52413, 0.66 ) }
    dend_71 { pt3dadd( -122.314, 232.078, -7.88826, 0.66 ) }
    dend_71 { pt3dadd( -122.387, 232.151, -7.80913, 0.66 ) }
    dend_71 { pt3dadd( -123.149, 233.139, -6.83909, 0.66 ) }
    dend_71 { pt3dadd( -123.176, 233.188, -6.79635, 0.66 ) }
    dend_71 { pt3dadd( -123.446, 233.87, -6.28465, 0.66 ) }
    dend_71 { pt3dadd( -123.71, 234.571, -5.66559, 0.52 ) }
    dend_71 { pt3dadd( -123.729, 234.605, -5.62008, 0.52 ) }
    dend_71 { pt3dadd( -123.989, 234.862, -5.14299, 0.52 ) }
    dend_71 { pt3dadd( -124.145, 234.941, -4.89734, 0.96 ) }
    dend_71 { pt3dadd( -124.187, 234.953, -4.84172, 0.96 ) }
    dend_71 { pt3dadd( -125.278, 234.917, -3.75634, 0.96 ) }
    dend_71 { pt3dadd( -126.875, 234.612, -2.65422, 0.96 ) }
    dend_71 { pt3dadd( -127.668, 234.41, -2.272, 1.47 ) }
    dend_71 { pt3dadd( -128.079, 234.283, -2.1397, 1.69 ) }
    dend_71 { pt3dadd( -129.252, 233.888, -1.90668, 0.66 ) }
    dend_71 { pt3dadd( -131.052, 233.212, -1.86808, 0.29 ) }
    dend_71 { pt3dadd( -132.541, 232.549, -2.0971, 0.29 ) }
    dend_71 { pt3dadd( -133.638, 231.995, -2.39904, 0.88 ) }
    dend_71 { pt3dadd( -134.216, 231.676, -2.58313, 0.88 ) }
    dend_71 { pt3dadd( -134.274, 231.642, -2.60478, 0.88 ) }
    dend_71 { pt3dadd( -135.49, 230.823, -3.16421, 0.29 ) }
    dend_71 { pt3dadd( -136.08, 230.397, -3.50086, 0.29 ) }
    dend_71 { pt3dadd( -136.586, 229.965, -3.81435, 0.29 ) }
    dend_71 { pt3dadd( -136.655, 229.901, -3.8488, 0.29 ) }
    dend_71 { pt3dadd( -137.069, 229.492, -4.07744, 0.29 ) }
    dend_71 { pt3dadd( -137.263, 229.297, -4.18162, 0.96 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 92/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -67.5596, 158.261, -31.2221, 0.74 ) }
    dend_60 { pt3dadd( -67.1811, 159.339, -30.9167, 0.74 ) }
    dend_60 { pt3dadd( -66.872, 160.031, -30.8562, 0.74 ) }
    dend_60 { pt3dadd( -66.8137, 160.158, -30.8409, 0.74 ) }
    dend_60 { pt3dadd( -66.5561, 160.774, -30.7613, 0.74 ) }
    dend_60 { pt3dadd( -66.5265, 160.848, -30.7514, 0.74 ) }
    dend_60 { pt3dadd( -66.3903, 161.229, -30.7001, 0.22 ) }
    dend_60 { pt3dadd( -65.9397, 162.89, -30.5989, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_60 { pt3dadd( -65.8131, 163.592, -30.5443, 0.22 ) }
    dend_60 { pt3dadd( -65.7734, 163.913, -30.5158, 0.52 ) }
    dend_60 { pt3dadd( -65.7705, 163.985, -30.5084, 0.52 ) }
    dend_60 { pt3dadd( -65.7932, 164.369, -30.4686, 0.74 ) }
    dend_60 { pt3dadd( -65.8961, 165.098, -30.389, 1.03 ) }
    dend_60 { pt3dadd( -66.0182, 165.575, -30.3567, 1.03 ) }
    dend_60 { pt3dadd( -66.0423, 165.714, -30.3542, 1.03 ) }
    dend_60 { pt3dadd( -66.0777, 166.121, -30.3468, 1.18 ) }
    dend_60 { pt3dadd( -66.0925, 166.596, -30.3385, 1.33 ) }
    dend_60 { pt3dadd( -66.0709, 167.397, -30.3248, 0.96 ) }
    dend_60 { pt3dadd( -66.0588, 167.62, -30.3106, 0.74 ) }
    dend_60 { pt3dadd( -65.9884, 168.36, -30.2417, 0.74 ) }
    dend_60 { pt3dadd( -65.8861, 169.157, -30.1316, 1.18 ) }
    dend_60 { pt3dadd( -65.771, 169.875, -29.9912, 1.33 ) }
    dend_60 { pt3dadd( -65.7221, 170.155, -29.9262, 1.33 ) }
    dend_60 { pt3dadd( -65.5649, 171.035, -29.7055, 0.44 ) }
    dend_60 { pt3dadd( -65.3687, 172.229, -29.4006, 0.44 ) }
    dend_60 { pt3dadd( -65.28, 172.843, -29.2448, 0.44 ) }
    dend_60 { pt3dadd( -65.1652, 173.723, -29.0332, 0.66 ) }
    dend_60 { pt3dadd( -65.0977, 174.444, -28.8796, 0.66 ) }
    dend_60 { pt3dadd( -65.069, 175.231, -28.7451, 0.66 ) }
    dend_60 { pt3dadd( -65.0981, 175.888, -28.6796, 0.88 ) }
    dend_60 { pt3dadd( -65.2065, 176.631, -28.658, 1.11 ) }
    dend_60 { pt3dadd( -65.3199, 177.14, -28.6833, 1.11 ) }
    dend_60 { pt3dadd( -65.507, 177.739, -28.7522, 1.11 ) }
    dend_60 { pt3dadd( -65.746, 178.366, -28.8439, 1.11 ) }
    dend_60 { pt3dadd( -66.0489, 179.099, -29.0076, 0.52 ) }
    dend_60 { pt3dadd( -66.2219, 179.614, -29.1488, 0.44 ) }
    dend_60 { pt3dadd( -66.2457, 179.71, -29.1766, 0.44 ) }
    dend_60 { pt3dadd( -66.3259, 180.198, -29.3178, 0.44 ) }
    dend_60 { pt3dadd( -66.3687, 180.844, -29.4912, 0.44 ) }
    dend_60 { pt3dadd( -66.3677, 181.717, -29.7407, 0.74 ) }
    dend_60 { pt3dadd( -66.3731, 182.733, -30.0128, 0.74 ) }
    dend_60 { pt3dadd( -66.4086, 183.682, -30.3254, 0.59 ) }
    dend_60 { pt3dadd( -66.4139, 183.759, -30.3549, 0.59 ) }
    dend_60 { pt3dadd( -66.4704, 184.352, -30.6047, 0.59 ) }
    dend_60 { pt3dadd( -66.5797, 185.209, -30.978, 0.59 ) }
    dend_60 { pt3dadd( -66.747, 186.24, -31.429, 1.84 ) }
    dend_60 { pt3dadd( -66.9605, 187.424, -31.9775, 1.84 ) }
    dend_60 { pt3dadd( -67.0199, 187.962, -32.2184, 1.18 ) }
    dend_60 { pt3dadd( -67.042, 188.435, -32.4081, 0.88 ) }
    dend_60 { pt3dadd( -67.0181, 189.057, -32.6402, 0.88 ) }
    dend_60 { pt3dadd( -67.0077, 189.124, -32.6596, 0.88 ) }
    dend_60 { pt3dadd( -66.8659, 189.779, -32.8137, 0.88 ) }
    dend_60 { pt3dadd( -66.7398, 190.567, -32.9379, 0.88 ) }
    dend_60 { pt3dadd( -66.7261, 190.717, -32.9644, 0.88 ) }
    dend_60 { pt3dadd( -66.7461, 191.655, -33.1408, 0.88 ) }
    dend_60 { pt3dadd( -66.8356, 192.295, -33.2654, 0.59 ) }
    dend_60 { pt3dadd( -67.0546, 193.114, -33.4177, 0.52 ) }
    dend_60 { pt3dadd( -67.3284, 193.77, -33.5252, 0.52 ) }
    dend_60 { pt3dadd( -67.3949, 193.896, -33.542, 0.52 ) }
    dend_60 { pt3dadd( -67.6313, 194.377, -33.5791, 0.52 ) }
    dend_60 { pt3dadd( -67.6606, 194.44, -33.5791, 0.52 ) }
    dend_60 { pt3dadd( -67.804, 194.935, -33.6377, 0.52 ) }
    dend_60 { pt3dadd( -67.8328, 195.686, -33.8042, 0.52 ) }
    dend_60 { pt3dadd( -67.8239, 195.765, -33.826, 0.52 ) }
    dend_60 { pt3dadd( -67.6082, 196.737, -34.1168, 0.52 ) }
    dend_60 { pt3dadd( -67.5785, 196.836, -34.1482, 0.52 ) }
    dend_60 { pt3dadd( -67.1488, 198.068, -34.5371, 1.11 ) }
    dend_60 { pt3dadd( -66.9397, 198.59, -34.7004, 1.4 ) }
    dend_60 { pt3dadd( -66.9138, 198.652, -34.719, 1.4 ) }
    dend_60 { pt3dadd( -66.7102, 199.247, -34.8609, 1.55 ) }
    dend_60 { pt3dadd( -66.6467, 199.501, -34.9379, 1.55 ) }
    dend_60 { pt3dadd( -66.5379, 200.129, -35.139, 0.88 ) }
    dend_60 { pt3dadd( -66.5263, 200.546, -35.2656, 0.74 ) }
    dend_60 { pt3dadd( -66.5582, 200.887, -35.3859, 0.52 ) }
    dend_60 { pt3dadd( -66.7311, 201.725, -35.755, 0.52 ) }
    dend_60 { pt3dadd( -67.0643, 202.909, -36.3374, 0.52 ) }
    dend_60 { pt3dadd( -67.0837, 202.972, -36.3681, 0.52 ) }
    dend_60 { pt3dadd( -67.3336, 203.679, -36.6686, 0.52 ) }
    dend_60 { pt3dadd( -67.5152, 204.167, -36.9228, 0.96 ) }
    dend_60 { pt3dadd( -67.8328, 205.018, -37.4057, 1.18 ) }
    dend_60 { pt3dadd( -68.0236, 205.553, -37.7603, 1.18 ) }
    dend_60 { pt3dadd( -68.2607, 206.278, -38.2638, 1.03 ) }
    dend_60 { pt3dadd( -68.5739, 207.38, -39.1142, 1.03 ) }
    dend_60 { pt3dadd( -68.9474, 209.003, -40.5188, 0.74 ) }
    dend_60 { pt3dadd( -68.9566, 209.054, -40.5661, 0.74 ) }
    dend_60 { pt3dadd( -69.0678, 209.898, -41.4084, 1.03 ) }
    dend_60 { pt3dadd( -69.0716, 209.945, -41.4611, 1.03 ) }
    dend_60 { pt3dadd( -69.0582, 210.289, -41.8042, 1.03 ) }
    dend_60 { pt3dadd( -69.0502, 210.352, -41.8348, 1.03 ) }
    dend_60 { pt3dadd( -69.0179, 210.884, -41.9303, 1.03 ) }
    dend_60 { pt3dadd( -69.0199, 210.963, -41.9416, 1.03 ) }
    dend_60 { pt3dadd( -69.0769, 211.538, -41.9983, 0.37 ) }
    dend_60 { pt3dadd( -69.3058, 213.019, -42.1549, 0.37 ) }
    dend_60 { pt3dadd( -69.5483, 214.201, -42.2837, 0.37 ) }
    dend_60 { pt3dadd( -69.7244, 214.95, -42.3631, 1.33 ) }
    dend_60 { pt3dadd( -69.8977, 215.597, -42.4302, 1.92 ) }
    dend_60 { pt3dadd( -70.0612, 216.149, -42.4836, 2.36 ) }
    dend_60 { pt3dadd( -70.1835, 216.506, -42.5362, 2.06 ) }
    dend_60 { pt3dadd( -70.4455, 217.143, -42.6614, 1.47 ) }
    dend_60 { pt3dadd( -70.7683, 217.917, -42.8279, 0.88 ) }
    dend_60 { pt3dadd( -70.9028, 218.274, -42.9016, 0.81 ) }
    dend_60 { pt3dadd( -71.1143, 218.912, -43.0473, 0.74 ) }
    dend_60 { pt3dadd( -71.428, 219.94, -43.2983, 0.59 ) }
    dend_60 { pt3dadd( -71.6549, 220.825, -43.5116, 0.59 ) }
    dend_60 { pt3dadd( -71.7731, 221.392, -43.6483, 0.59 ) }
    dend_60 { pt3dadd( -71.8021, 221.689, -43.7069, 0.96 ) }
    dend_60 { pt3dadd( -71.7962, 222.188, -43.7856, 1.25 ) }
    dend_60 { pt3dadd( -71.7714, 222.414, -43.8317, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_60 { pt3dadd( -71.6117, 223.266, -44.0103, 0.59 ) }
    dend_60 { pt3dadd( -71.5942, 223.335, -44.0272, 0.59 ) }
    dend_60 { pt3dadd( -71.2665, 224.574, -44.3437, 0.59 ) }
    dend_60 { pt3dadd( -71.0081, 225.674, -44.6213, 0.59 ) }
    dend_60 { pt3dadd( -70.7409, 226.998, -44.9474, 1.03 ) }
    dend_60 { pt3dadd( -70.6089, 227.885, -45.1553, 1.4 ) }
    dend_60 { pt3dadd( -70.5359, 228.735, -45.371, 1.62 ) }
    dend_60 { pt3dadd( -70.5291, 229.658, -45.6074, 1.33 ) }
    dend_60 { pt3dadd( -70.6077, 230.524, -45.8218, 1.47 ) }
    dend_60 { pt3dadd( -70.6978, 231.084, -45.9383, 1.77 ) }
    dend_60 { pt3dadd( -70.8893, 231.832, -46.0534, 1.77 ) }
    dend_60 { pt3dadd( -71.2178, 232.705, -46.2188, 1.77 ) }
    dend_60 { pt3dadd( -71.5165, 233.308, -46.3606, 1.92 ) }
    dend_60 { pt3dadd( -71.8373, 233.871, -46.5333, 1.92 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 14/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 92.831, 139.143, 19.0101, 1.03 ) }
    dend_52 { pt3dadd( 93.6732, 140.248, 19.5701, 1.03 ) }
    dend_52 { pt3dadd( 94.2157, 140.913, 20.0092, 1.03 ) }
    dend_52 { pt3dadd( 94.7304, 141.521, 20.4544, 1.4 ) }
    dend_52 { pt3dadd( 95.2517, 142.109, 20.8961, 1.62 ) }
    dend_52 { pt3dadd( 95.9062, 142.83, 21.4483, 1.62 ) }
    dend_52 { pt3dadd( 96.684, 143.66, 22.0496, 0.66 ) }
    dend_52 { pt3dadd( 97.6042, 144.605, 22.6713, 0.66 ) }
    dend_52 { pt3dadd( 97.671, 144.668, 22.7133, 0.66 ) }
    dend_52 { pt3dadd( 98.3546, 145.277, 23.1272, 0.66 ) }
    dend_52 { pt3dadd( 98.4025, 145.32, 23.154, 0.66 ) }
    dend_52 { pt3dadd( 99.4744, 146.356, 23.6516, 0.66 ) }
    dend_52 { pt3dadd( 99.5203, 146.407, 23.6767, 0.66 ) }
    dend_52 { pt3dadd( 100.312, 147.408, 24.1463, 0.66 ) }
    dend_52 { pt3dadd( 100.859, 148.174, 24.5432, 0.66 ) }
    dend_52 { pt3dadd( 101.11, 148.561, 24.8128, 1.11 ) }
    dend_52 { pt3dadd( 101.328, 148.917, 25.1109, 1.11 ) }
    dend_52 { pt3dadd( 101.854, 149.898, 26.0823, 0.52 ) }
    dend_52 { pt3dadd( 101.874, 149.938, 26.1226, 0.52 ) }
    dend_52 { pt3dadd( 102.126, 150.416, 26.6223, 0.52 ) }
    dend_52 { pt3dadd( 102.844, 151.581, 27.695, 0.52 ) }
    dend_52 { pt3dadd( 102.875, 151.622, 27.7269, 0.52 ) }
    dend_52 { pt3dadd( 103.18, 151.961, 27.9221, 0.52 ) }
    dend_52 { pt3dadd( 103.585, 152.348, 28.0595, 1.55 ) }
    dend_52 { pt3dadd( 104.112, 152.798, 28.17, 2.21 ) }
    dend_52 { pt3dadd( 104.672, 153.246, 28.2499, 2.5 ) }
    dend_52 { pt3dadd( 105.385, 153.831, 28.3026, 2.5 ) }
    dend_52 { pt3dadd( 106.278, 154.596, 28.3431, 1.03 ) }
    dend_52 { pt3dadd( 106.801, 155.052, 28.3569, 0.66 ) }
    dend_52 { pt3dadd( 107.695, 155.867, 28.3625, 0.66 ) }
    dend_52 { pt3dadd( 108.402, 156.519, 28.3555, 0.44 ) }
    dend_52 { pt3dadd( 109.051, 157.131, 28.338, 0.44 ) }
    dend_52 { pt3dadd( 109.646, 157.737, 28.3076, 0.44 ) }
    dend_52 { pt3dadd( 109.713, 157.809, 28.302, 0.44 ) }
    dend_52 { pt3dadd( 110.279, 158.411, 28.2378, 0.44 ) }
    dend_52 { pt3dadd( 110.675, 158.745, 28.1863, 0.88 ) }
    dend_52 { pt3dadd( 110.738, 158.781, 28.1771, 0.88 ) }
    dend_52 { pt3dadd( 111.229, 158.995, 28.1292, 1.11 ) }
    dend_52 { pt3dadd( 111.748, 159.196, 28.1004, 1.11 ) }
    dend_52 { pt3dadd( 111.964, 159.279, 28.0865, 1.11 ) }
    dend_52 { pt3dadd( 112.973, 159.623, 28.0172, 1.11 ) }
    dend_52 { pt3dadd( 113.487, 159.785, 27.9847, 1.25 ) }
    dend_52 { pt3dadd( 114.181, 159.96, 27.947, 1.69 ) }
    dend_52 { pt3dadd( 114.26, 159.976, 27.9432, 1.69 ) }
    dend_52 { pt3dadd( 114.506, 160.019, 27.9336, 1.69 ) }
    dend_52 { pt3dadd( 115.47, 160.21, 27.9084, 1.69 ) }
    dend_52 { pt3dadd( 116.532, 160.447, 27.9324, 1.25 ) }
    dend_52 { pt3dadd( 117.333, 160.638, 27.9761, 0.74 ) }
    dend_52 { pt3dadd( 117.402, 160.652, 27.9802, 0.74 ) }
    dend_52 { pt3dadd( 118.374, 160.79, 28.0375, 0.66 ) }
    dend_52 { pt3dadd( 119.711, 160.942, 28.1646, 0.66 ) }
    dend_52 { pt3dadd( 120.929, 161.05, 28.3107, 0.44 ) }
    dend_52 { pt3dadd( 122.135, 161.139, 28.5097, 0.44 ) }
    dend_52 { pt3dadd( 123.456, 161.218, 28.7651, 0.44 ) }
    dend_52 { pt3dadd( 124.992, 161.306, 29.1338, 0.44 ) }
    dend_52 { pt3dadd( 126.384, 161.389, 29.5265, 0.44 ) }
    dend_52 { pt3dadd( 127.087, 161.43, 29.7273, 1.11 ) }
    dend_52 { pt3dadd( 128.298, 161.532, 30.0689, 1.11 ) }
    dend_52 { pt3dadd( 128.922, 161.611, 30.2226, 1.33 ) }
    dend_52 { pt3dadd( 130.203, 161.875, 30.4647, 0.29 ) }
    dend_52 { pt3dadd( 131.051, 162.104, 30.5498, 0.29 ) }
    dend_52 { pt3dadd( 132.219, 162.44, 30.5294, 0.29 ) }
    dend_52 { pt3dadd( 132.296, 162.464, 30.5298, 0.29 ) }
    dend_52 { pt3dadd( 133.775, 162.971, 30.5476, 0.29 ) }
    dend_52 { pt3dadd( 134.418, 163.213, 30.6161, 0.81 ) }
    dend_52 { pt3dadd( 135.05, 163.462, 30.7255, 1.11 ) }
    dend_52 { pt3dadd( 135.638, 163.719, 30.8855, 1.11 ) }
    dend_52 { pt3dadd( 137.234, 164.49, 31.4614, 0.74 ) }
    dend_52 { pt3dadd( 138.328, 165.04, 31.9156, 0.44 ) }
    dend_52 { pt3dadd( 139.443, 165.645, 32.4718, 0.44 ) }
    dend_52 { pt3dadd( 139.744, 165.814, 32.6184, 0.81 ) }
    dend_52 { pt3dadd( 140.328, 166.152, 32.8804, 0.81 ) }
    dend_52 { pt3dadd( 140.564, 166.3, 32.9695, 0.81 ) }
    dend_52 { pt3dadd( 141.092, 166.685, 33.0823, 0.37 ) }
    dend_52 { pt3dadd( 141.152, 166.737, 33.0918, 0.37 ) }
    dend_52 { pt3dadd( 142.008, 167.6, 33.1694, 0.37 ) }
    dend_52 { pt3dadd( 142.338, 167.933, 33.1953, 0.66 ) }
    dend_52 { pt3dadd( 142.557, 168.157, 33.1991, 1.03 ) }
    dend_52 { pt3dadd( 143.276, 168.904, 33.1814, 1.03 ) }
    dend_52 { pt3dadd( 144.075, 169.754, 33.1336, 1.03 ) }
    dend_52 { pt3dadd( 144.859, 170.609, 33.0757, 0.29 ) }
    dend_52 { pt3dadd( 145.962, 171.864, 32.9781, 0.29 ) }
    dend_52 { pt3dadd( 146.579, 172.602, 32.932, 0.29 ) }
    dend_52 { pt3dadd( 146.978, 173.08, 32.9221, 0.66 ) }
    dend_52 { pt3dadd( 147.538, 173.738, 32.9354, 0.66 ) }
    dend_52 { pt3dadd( 147.979, 174.231, 32.9699, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_52 { pt3dadd( 148.42, 174.705, 33.0289, 1.4 ) }
    dend_52 { pt3dadd( 149.073, 175.419, 33.1704, 0.29 ) }
    dend_52 { pt3dadd( 149.791, 176.167, 33.3711, 0.29 ) }
    dend_52 { pt3dadd( 150.365, 176.74, 33.5254, 0.29 ) }
    dend_52 { pt3dadd( 150.992, 177.352, 33.6506, 0.29 ) }
    dend_52 { pt3dadd( 151.099, 177.461, 33.6638, 0.29 ) }
    dend_52 { pt3dadd( 151.657, 178.052, 33.6827, 0.29 ) }
    dend_52 { pt3dadd( 151.748, 178.162, 33.6756, 0.52 ) }
    dend_52 { pt3dadd( 152.371, 179.002, 33.5439, 0.52 ) }
    dend_52 { pt3dadd( 152.962, 179.809, 33.3965, 0.52 ) }
    dend_52 { pt3dadd( 153.365, 180.352, 33.3426, 1.25 ) }
    dend_52 { pt3dadd( 153.759, 180.835, 33.3294, 1.69 ) }
    dend_52 { pt3dadd( 154.313, 181.452, 33.4026, 1.69 ) }
    dend_52 { pt3dadd( 155.232, 182.384, 33.6297, 0.59 ) }
    dend_52 { pt3dadd( 155.944, 183.057, 33.9259, 0.59 ) }
    dend_52 { pt3dadd( 157.028, 184.027, 34.524, 0.59 ) }
    dend_52 { pt3dadd( 157.681, 184.574, 34.9327, 0.96 ) }
    dend_52 { pt3dadd( 158.685, 185.392, 35.6262, 0.44 ) }
    dend_52 { pt3dadd( 159.338, 185.889, 36.1032, 0.44 ) }
    dend_52 { pt3dadd( 160.067, 186.376, 36.6572, 1.11 ) }
    dend_52 { pt3dadd( 160.151, 186.426, 36.7157, 1.11 ) }
    dend_52 { pt3dadd( 160.686, 186.654, 37.0102, 1.11 ) }
    dend_52 { pt3dadd( 161.244, 186.831, 37.3097, 1.55 ) }
    dend_52 { pt3dadd( 161.822, 186.97, 37.5915, 1.55 ) }
    dend_52 { pt3dadd( 163.357, 187.324, 38.2985, 0.29 ) }
    dend_52 { pt3dadd( 163.421, 187.339, 38.3253, 0.29 ) }
    dend_52 { pt3dadd( 165.214, 187.789, 39.0307, 0.29 ) }
    dend_52 { pt3dadd( 165.897, 187.96, 39.2851, 0.22 ) }
    dend_52 { pt3dadd( 165.962, 187.976, 39.3077, 0.22 ) }
    dend_52 { pt3dadd( 167.226, 188.315, 39.6888, 0.22 ) }
    dend_52 { pt3dadd( 167.294, 188.335, 39.7037, 0.22 ) }
    dend_52 { pt3dadd( 168.765, 188.813, 39.945, 0.22 ) }
    dend_52 { pt3dadd( 169.391, 189.056, 39.9914, 0.22 ) }
    dend_52 { pt3dadd( 169.46, 189.081, 39.9943, 0.22 ) }
    dend_52 { pt3dadd( 170.06, 189.284, 40.0214, 0.59 ) }
    dend_52 { pt3dadd( 170.293, 189.346, 40.0335, 0.96 ) }
    dend_52 { pt3dadd( 171.026, 189.542, 40.0719, 0.96 ) }
    dend_52 { pt3dadd( 171.721, 189.71, 40.1092, 0.96 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 38/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 92.831, 139.143, 19.0101, 0.29 ) }
    dend_51 { pt3dadd( 93.3038, 138.532, 19.3551, 0.29 ) }
    dend_51 { pt3dadd( 93.8016, 137.923, 19.694, 0.29 ) }
    dend_51 { pt3dadd( 93.8427, 137.872, 19.7219, 0.29 ) }
    dend_51 { pt3dadd( 95.7387, 135.55, 21.0125, 0.15 ) }
    dend_51 { pt3dadd( 95.8698, 135.389, 21.1017, 0.15 ) }
    dend_51 { pt3dadd( 96.1534, 135.042, 21.2948, 0.74 ) }
    dend_51 { pt3dadd( 96.3391, 134.834, 21.4303, 0.74 ) }
    // Section: dend_49, id: dend_49, parent: dend_3 (entry count 46/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 32.5609, 118.011, -58.9635, 0.22 ) }
    dend_49 { pt3dadd( 28.4959, 117.811, -48.3569, 0.22 ) }
    dend_49 { pt3dadd( 28.4672, 117.81, -48.2822, 0.22 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 49/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 32.5609, 118.011, -58.9635, 0.88 ) }
    dend_4 { pt3dadd( 32.7858, 118.73, -59.4036, 0.88 ) }
    dend_4 { pt3dadd( 33.2065, 120.073, -60.2266, 1.99 ) }
    dend_4 { pt3dadd( 33.53, 121.106, -60.8596, 2.43 ) }
    dend_4 { pt3dadd( 33.6312, 121.429, -61.0575, 2.43 ) }
    // Section: dend_144, id: dend_144, parent: dend_132 (entry count 54/100)
    dend_144 { pt3dclear() }
    dend_144 { pt3dadd( 101.864, -185.686, -2.10158, 0.74 ) }
    dend_144 { pt3dadd( 102.561, -185.682, -1.45644, 0.74 ) }
    dend_144 { pt3dadd( 103.41, -185.68, -0.70592, 0.74 ) }
    dend_144 { pt3dadd( 105.341, -185.677, 0.951366, 0.88 ) }
    dend_144 { pt3dadd( 105.881, -185.684, 1.39459, 0.88 ) }
    dend_144 { pt3dadd( 105.96, -185.687, 1.45645, 0.88 ) }
    dend_144 { pt3dadd( 106.93, -185.766, 2.1503, 0.29 ) }
    dend_144 { pt3dadd( 107.199, -185.81, 2.32624, 0.66 ) }
    dend_144 { pt3dadd( 107.261, -185.829, 2.35122, 0.66 ) }
    dend_144 { pt3dadd( 107.6, -186.048, 2.28535, 0.96 ) }
    dend_144 { pt3dadd( 107.823, -186.235, 2.20435, 0.96 ) }
    dend_144 { pt3dadd( 108.609, -186.977, 1.83954, 0.81 ) }
    dend_144 { pt3dadd( 109.117, -187.508, 1.53981, 0.59 ) }
    dend_144 { pt3dadd( 109.189, -187.582, 1.50851, 0.59 ) }
    dend_144 { pt3dadd( 109.874, -188.257, 1.3418, 0.44 ) }
    dend_144 { pt3dadd( 109.933, -188.312, 1.3391, 0.44 ) }
    dend_144 { pt3dadd( 110.5, -188.802, 1.3603, 0.44 ) }
    dend_144 { pt3dadd( 110.557, -188.848, 1.36699, 0.44 ) }
    dend_144 { pt3dadd( 111.605, -189.752, 1.52077, 0.44 ) }
    dend_144 { pt3dadd( 112.147, -190.241, 1.60743, 1.18 ) }
    dend_144 { pt3dadd( 112.869, -190.916, 1.73772, 2.06 ) }
    dend_144 { pt3dadd( 113.578, -191.575, 1.84289, 2.21 ) }
    dend_144 { pt3dadd( 114.089, -192.01, 1.89578, 2.21 ) }
    dend_144 { pt3dadd( 115.074, -192.786, 1.94823, 0.37 ) }
    dend_144 { pt3dadd( 115.556, -193.099, 1.95292, 0.29 ) }
    dend_144 { pt3dadd( 115.646, -193.142, 1.96037, 0.29 ) }
    dend_144 { pt3dadd( 116.152, -193.267, 2.05529, 0.29 ) }
    dend_144 { pt3dadd( 117.134, -193.305, 2.34924, 0.29 ) }
    dend_144 { pt3dadd( 117.236, -193.289, 2.38235, 0.29 ) }
    dend_144 { pt3dadd( 118.249, -192.981, 2.72324, 0.29 ) }
    dend_144 { pt3dadd( 118.323, -192.96, 2.74962, 0.29 ) }
    dend_144 { pt3dadd( 118.75, -192.876, 2.91025, 0.29 ) }
    dend_144 { pt3dadd( 118.837, -192.879, 2.9434, 0.29 ) }
    dend_144 { pt3dadd( 119.128, -193.018, 3.03381, 0.96 ) }
    dend_144 { pt3dadd( 119.244, -193.094, 3.06012, 0.96 ) }
    dend_144 { pt3dadd( 119.744, -193.555, 3.11063, 1.18 ) }
    dend_144 { pt3dadd( 119.793, -193.604, 3.11498, 1.18 ) }
    dend_144 { pt3dadd( 120.126, -193.968, 3.1335, 1.18 ) }
    dend_144 { pt3dadd( 120.407, -194.283, 3.14088, 1.18 ) }
    // Section: dend_133, id: dend_133, parent: dend_132 (entry count 93/100)
    dend_133 { pt3dclear() }
    dend_133 { pt3dadd( 101.864, -185.686, -2.10158, 1.03 ) }
    dend_133 { pt3dadd( 101.679, -186.896, -1.85335, 1.03 ) }
    dend_133 { pt3dadd( 101.573, -187.589, -1.71124, 1.03 ) }
    dend_133 { pt3dadd( 101.48, -188.197, -1.58644, 1.03 ) }
    // Section: dend_120, id: dend_120, parent: dend_118 (entry count 97/100)
    dend_120 { pt3dclear() }
    dend_120 { pt3dadd( -17.8365, -139.92, 5.42648, 0.52 ) }
    dend_120 { pt3dadd( -18.0293, -140.528, 5.56986, 0.52 ) }
    dend_120 { pt3dadd( -18.4746, -142.009, 6.07785, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_120 { pt3dadd( -18.6651, -142.703, 6.3256, 0.96 ) }
    dend_120 { pt3dadd( -18.8575, -143.446, 6.5734, 1.18 ) }
    dend_120 { pt3dadd( -18.9779, -143.931, 6.72525, 1.47 ) }
    dend_120 { pt3dadd( -19.0657, -144.272, 6.82128, 1.47 ) }
    dend_120 { pt3dadd( -19.4448, -145.488, 7.11641, 0.81 ) }
    dend_120 { pt3dadd( -19.8175, -146.559, 7.42111, 0.52 ) }
    dend_120 { pt3dadd( -20.1755, -147.471, 7.69033, 0.52 ) }
    dend_120 { pt3dadd( -20.3535, -147.859, 7.81241, 1.11 ) }
    dend_120 { pt3dadd( -20.8955, -148.93, 8.08215, 1.11 ) }
    dend_120 { pt3dadd( -21.3721, -149.792, 8.24366, 1.11 ) }
    dend_120 { pt3dadd( -22.0763, -150.97, 8.34756, 0.81 ) }
    dend_120 { pt3dadd( -22.1145, -151.029, 8.3479, 0.81 ) }
    dend_120 { pt3dadd( -22.689, -151.911, 8.27726, 0.81 ) }
    dend_120 { pt3dadd( -23.3929, -153.14, 8.06423, 0.81 ) }
    dend_120 { pt3dadd( -23.4184, -153.202, 8.04476, 0.81 ) }
    dend_120 { pt3dadd( -23.6486, -154.087, 7.69021, 0.81 ) }
    dend_120 { pt3dadd( -23.8001, -154.92, 7.29655, 0.52 ) }
    dend_120 { pt3dadd( -23.8074, -155.014, 7.25506, 0.52 ) }
    dend_120 { pt3dadd( -23.7966, -156.062, 6.84252, 0.52 ) }
    dend_120 { pt3dadd( -23.7374, -157.081, 6.52479, 0.52 ) }
    dend_120 { pt3dadd( -23.7113, -157.51, 6.39076, 1.11 ) }
    dend_120 { pt3dadd( -23.7068, -157.578, 6.37, 1.11 ) }
    dend_120 { pt3dadd( -23.6752, -158.431, 6.15277, 1.4 ) }
    dend_120 { pt3dadd( -23.6907, -159.193, 5.93539, 1.11 ) }
    dend_120 { pt3dadd( -23.6959, -159.26, 5.91507, 1.11 ) }
    dend_120 { pt3dadd( -23.874, -160.828, 5.45625, 0.96 ) }
    dend_120 { pt3dadd( -23.8987, -160.987, 5.41004, 0.88 ) }
    dend_120 { pt3dadd( -24.1244, -162.179, 5.06827, 0.88 ) }
    dend_120 { pt3dadd( -24.3897, -163.196, 4.82754, 0.66 ) }
    dend_120 { pt3dadd( -24.5675, -163.821, 4.71332, 0.66 ) }
    dend_120 { pt3dadd( -24.5926, -163.886, 4.70649, 0.66 ) }
    dend_120 { pt3dadd( -25.0266, -164.696, 4.82305, 0.66 ) }
    dend_120 { pt3dadd( -25.0689, -164.761, 4.84322, 0.66 ) }
    dend_120 { pt3dadd( -25.7675, -165.65, 5.27887, 0.66 ) }
    dend_120 { pt3dadd( -25.8142, -165.709, 5.31291, 0.66 ) }
    dend_120 { pt3dadd( -26.2941, -166.325, 5.67638, 0.66 ) }
    dend_120 { pt3dadd( -27.1479, -167.526, 6.34106, 0.66 ) }
    dend_120 { pt3dadd( -27.5535, -168.199, 6.66807, 0.81 ) }
    dend_120 { pt3dadd( -27.5841, -168.258, 6.69178, 0.81 ) }
    dend_120 { pt3dadd( -27.9281, -169.113, 6.94416, 0.81 ) }
    dend_120 { pt3dadd( -27.9521, -169.188, 6.96195, 0.81 ) }
    dend_120 { pt3dadd( -28.0691, -169.747, 7.04446, 1.18 ) }
    dend_120 { pt3dadd( -28.1952, -170.619, 7.05458, 1.33 ) }
    dend_120 { pt3dadd( -28.2022, -170.76, 7.05654, 1.33 ) }
    dend_120 { pt3dadd( -28.2042, -171.191, 7.06303, 1.33 ) }
    dend_120 { pt3dadd( -28.1975, -171.251, 7.06395, 1.33 ) }
    dend_120 { pt3dadd( -28.1003, -171.757, 7.07951, 1.03 ) }
    dend_120 { pt3dadd( -27.9365, -172.397, 7.10664, 0.74 ) }
    dend_120 { pt3dadd( -27.6143, -173.367, 7.15577, 0.74 ) }
    dend_120 { pt3dadd( -27.591, -173.434, 7.15929, 0.74 ) }
    dend_120 { pt3dadd( -27.2309, -174.409, 7.21159, 0.74 ) }
    dend_120 { pt3dadd( -27.0746, -174.844, 7.23315, 0.88 ) }
    dend_120 { pt3dadd( -26.9641, -175.201, 7.2511, 0.88 ) }
    dend_120 { pt3dadd( -26.8882, -175.66, 7.2728, 0.88 ) }
    dend_120 { pt3dadd( -26.9296, -176.164, 7.29172, 0.29 ) }
    dend_120 { pt3dadd( -27.0124, -176.429, 7.29807, 0.66 ) }
    dend_120 { pt3dadd( -27.369, -177.134, 7.2817, 0.66 ) }
    dend_120 { pt3dadd( -27.728, -177.767, 7.24307, 0.66 ) }
    dend_120 { pt3dadd( -28.1368, -178.494, 7.18991, 0.96 ) }
    dend_120 { pt3dadd( -28.5262, -179.182, 7.1345, 1.11 ) }
    dend_120 { pt3dadd( -28.9345, -179.972, 7.06817, 1.11 ) }
    dend_120 { pt3dadd( -29.2369, -180.612, 7.01238, 0.59 ) }
    dend_120 { pt3dadd( -29.6059, -181.479, 6.88235, 0.59 ) }
    dend_120 { pt3dadd( -29.9886, -182.559, 6.66488, 0.59 ) }
    dend_120 { pt3dadd( -30.0296, -182.69, 6.63377, 0.59 ) }
    dend_120 { pt3dadd( -30.2933, -183.492, 6.43622, 0.59 ) }
    dend_120 { pt3dadd( -30.3184, -183.559, 6.41975, 0.59 ) }
    dend_120 { pt3dadd( -30.8356, -184.74, 6.20241, 1.18 ) }
    dend_120 { pt3dadd( -31.0922, -185.277, 6.13037, 1.4 ) }
    dend_120 { pt3dadd( -31.6184, -186.333, 6.03412, 1.62 ) }
    dend_120 { pt3dadd( -32.205, -187.503, 5.97326, 1.99 ) }
    dend_120 { pt3dadd( -32.4042, -187.885, 5.96989, 1.99 ) }
    dend_120 { pt3dadd( -33.0455, -189.129, 6.01708, 1.03 ) }
    dend_120 { pt3dadd( -33.4579, -189.988, 6.06213, 0.81 ) }
    dend_120 { pt3dadd( -33.7701, -190.669, 6.06953, 0.81 ) }
    dend_120 { pt3dadd( -33.7924, -190.724, 6.06302, 0.81 ) }
    dend_120 { pt3dadd( -34.0207, -191.4, 5.88428, 0.66 ) }
    dend_120 { pt3dadd( -34.253, -192.247, 5.49586, 0.66 ) }
    dend_120 { pt3dadd( -34.4581, -193.176, 4.92209, 1.18 ) }
    dend_120 { pt3dadd( -34.4696, -193.237, 4.88416, 1.18 ) }
    dend_120 { pt3dadd( -34.686, -194.48, 4.15233, 0.74 ) }
    dend_120 { pt3dadd( -34.8314, -195.311, 3.7049, 0.59 ) }
    dend_120 { pt3dadd( -35.029, -196.496, 3.11675, 0.59 ) }
    dend_120 { pt3dadd( -35.1954, -197.3, 2.76568, 0.59 ) }
    dend_120 { pt3dadd( -35.5426, -198.514, 2.31532, 0.59 ) }
    dend_120 { pt3dadd( -35.7211, -199.023, 2.14231, 0.74 ) }
    dend_120 { pt3dadd( -36.0012, -199.631, 1.98061, 1.03 ) }
    dend_120 { pt3dadd( -36.0779, -199.765, 1.9457, 1.03 ) }
    dend_120 { pt3dadd( -36.4935, -200.355, 1.8237, 1.25 ) }
    dend_120 { pt3dadd( -37.1166, -201.094, 1.66676, 1.55 ) }
    dend_120 { pt3dadd( -37.1709, -201.155, 1.65553, 1.55 ) }
    dend_120 { pt3dadd( -37.6874, -201.793, 1.58081, 1.55 ) }
    dend_120 { pt3dadd( -37.7297, -201.85, 1.57673, 1.55 ) }
    dend_120 { pt3dadd( -38.0846, -202.423, 1.5614, 1.55 ) }
    dend_120 { pt3dadd( -38.4859, -203.246, 1.57214, 0.66 ) }
    dend_120 { pt3dadd( -38.9133, -204.245, 1.62265, 0.66 ) }
    dend_120 { pt3dadd( -39.3017, -205.318, 1.64473, 0.66 ) }
    dend_120 { pt3dadd( -39.3247, -205.395, 1.64434, 0.66 ) }
    dend_120 { pt3dadd( -39.612, -206.55, 1.61249, 0.66 ) }
    dend_120 { pt3dadd( -39.7373, -207.349, 1.56894, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_120 { pt3dadd( -39.7442, -207.43, 1.56599, 0.96 ) }
    dend_120 { pt3dadd( -39.817, -208.353, 1.64657, 0.88 ) }
    dend_120 { pt3dadd( -39.8601, -208.787, 1.72915, 0.66 ) }
    dend_120 { pt3dadd( -39.8747, -208.865, 1.7502, 0.66 ) }
    dend_120 { pt3dadd( -40.2886, -210.244, 2.09899, 0.52 ) }
    dend_120 { pt3dadd( -40.71, -211.374, 2.36343, 0.52 ) }
    dend_120 { pt3dadd( -41.3066, -212.771, 2.65972, 0.52 ) }
    dend_120 { pt3dadd( -41.3387, -212.835, 2.6721, 0.52 ) }
    dend_120 { pt3dadd( -41.8824, -213.851, 2.80595, 0.44 ) }
    dend_120 { pt3dadd( -42.7232, -215.322, 2.89854, 0.44 ) }
    dend_120 { pt3dadd( -42.7651, -215.389, 2.8855, 0.44 ) }
    dend_120 { pt3dadd( -42.9467, -215.707, 2.73893, 0.81 ) }
    dend_120 { pt3dadd( -43.245, -216.303, 2.38155, 0.81 ) }
    dend_120 { pt3dadd( -43.487, -216.838, 2.06103, 0.81 ) }
    dend_120 { pt3dadd( -43.51, -216.896, 2.02752, 0.81 ) }
    dend_120 { pt3dadd( -44.1316, -218.534, 1.28818, 0.88 ) }
    dend_120 { pt3dadd( -44.2824, -218.921, 1.13574, 0.52 ) }
    dend_120 { pt3dadd( -44.5271, -219.509, 0.937401, 0.52 ) }
    dend_120 { pt3dadd( -44.8009, -220.091, 0.782629, 0.44 ) }
    dend_120 { pt3dadd( -45.1116, -220.704, 0.662453, 0.44 ) }
    dend_120 { pt3dadd( -45.6895, -221.817, 0.564024, 1.25 ) }
    dend_120 { pt3dadd( -46.0841, -222.562, 0.576593, 2.21 ) }
    dend_120 { pt3dadd( -46.4785, -223.316, 0.599679, 2.43 ) }
    dend_120 { pt3dadd( -46.9895, -224.354, 0.688222, 2.43 ) }
    dend_120 { pt3dadd( -47.1393, -224.683, 0.733848, 2.43 ) }
    dend_120 { pt3dadd( -47.5993, -225.849, 0.949151, 0.81 ) }
    dend_120 { pt3dadd( -47.6199, -225.915, 0.963773, 0.81 ) }
    dend_120 { pt3dadd( -47.7828, -226.614, 1.13449, 0.81 ) }
    dend_120 { pt3dadd( -47.9456, -227.678, 1.38216, 0.59 ) }
    dend_120 { pt3dadd( -47.9601, -227.826, 1.414, 0.59 ) }
    dend_120 { pt3dadd( -48.0798, -229.05, 1.61396, 0.59 ) }
    dend_120 { pt3dadd( -48.1722, -230.001, 1.70696, 0.59 ) }
    dend_120 { pt3dadd( -48.1823, -230.081, 1.70659, 0.59 ) }
    dend_120 { pt3dadd( -48.3779, -231.152, 1.60331, 0.59 ) }
    dend_120 { pt3dadd( -48.4126, -231.299, 1.57613, 0.59 ) }
    dend_120 { pt3dadd( -48.6845, -232.166, 1.38191, 0.59 ) }
    dend_120 { pt3dadd( -48.9761, -232.871, 1.18196, 0.59 ) }
    dend_120 { pt3dadd( -49.632, -234.036, 0.805453, 0.59 ) }
    dend_120 { pt3dadd( -49.9633, -234.503, 0.6411, 0.88 ) }
    dend_120 { pt3dadd( -50.0106, -234.555, 0.620563, 0.88 ) }
    dend_120 { pt3dadd( -50.5076, -235.052, 0.441867, 0.88 ) }
    dend_120 { pt3dadd( -50.594, -235.128, 0.418223, 0.88 ) }
    dend_120 { pt3dadd( -51.2614, -235.804, 0.290268, 0.88 ) }
    dend_120 { pt3dadd( -51.4678, -236.131, 0.340306, 0.44 ) }
    dend_120 { pt3dadd( -51.4939, -236.194, 0.357593, 0.44 ) }
    dend_120 { pt3dadd( -51.771, -237.213, 0.870947, 0.44 ) }
    dend_120 { pt3dadd( -51.7824, -237.274, 0.909868, 0.44 ) }
    dend_120 { pt3dadd( -51.9896, -238.434, 1.76731, 0.44 ) }
    dend_120 { pt3dadd( -52.2173, -239.96, 3.03037, 0.44 ) }
    dend_120 { pt3dadd( -52.2243, -240.004, 3.07, 0.44 ) }
    dend_120 { pt3dadd( -52.4899, -241.451, 4.3841, 0.44 ) }
    dend_120 { pt3dadd( -52.5102, -241.554, 4.48194, 0.44 ) }
    dend_120 { pt3dadd( -52.6045, -242.029, 4.87509, 0.44 ) }
    dend_120 { pt3dadd( -52.6184, -242.095, 4.92202, 0.44 ) }
    dend_120 { pt3dadd( -52.8091, -243.126, 5.4334, 0.81 ) }
    dend_120 { pt3dadd( -52.9047, -243.863, 5.74344, 1.11 ) }
    dend_120 { pt3dadd( -52.9337, -244.261, 5.86313, 0.29 ) }
    dend_120 { pt3dadd( -52.9766, -245.457, 6.22538, 0.29 ) }
    dend_120 { pt3dadd( -52.9754, -245.552, 6.25478, 0.29 ) }
    dend_120 { pt3dadd( -52.9541, -246.497, 6.54847, 0.74 ) }
    dend_120 { pt3dadd( -52.951, -246.564, 6.56966, 0.74 ) }
    dend_120 { pt3dadd( -52.9113, -247.187, 6.81835, 1.03 ) }
    dend_120 { pt3dadd( -52.9078, -247.634, 7.03381, 1.25 ) }
    // Section: dend_119, id: dend_119, parent: dend_118 (entry count 63/100)
    dend_119 { pt3dclear() }
    dend_119 { pt3dadd( -17.8365, -139.92, 5.42648, 0.52 ) }
    dend_119 { pt3dadd( -19.3246, -138.586, 9.44591, 0.52 ) }
    dend_119 { pt3dadd( -19.5229, -138.4, 9.92311, 0.44 ) }
    dend_119 { pt3dadd( -19.5706, -138.356, 10.0169, 0.44 ) }
    dend_119 { pt3dadd( -20.0271, -137.957, 10.6912, 0.44 ) }
    dend_119 { pt3dadd( -20.0623, -137.928, 10.7303, 0.44 ) }
    dend_119 { pt3dadd( -20.9455, -137.257, 11.5351, 0.44 ) }
    dend_119 { pt3dadd( -21.0088, -137.212, 11.562, 0.44 ) }
    dend_119 { pt3dadd( -21.6263, -136.784, 11.8029, 0.44 ) }
    dend_119 { pt3dadd( -22.429, -136.25, 12.1541, 0.37 ) }
    dend_119 { pt3dadd( -23.0356, -135.86, 12.4339, 0.29 ) }
    dend_119 { pt3dadd( -24.1363, -135.15, 12.9539, 0.22 ) }
    dend_119 { pt3dadd( -24.2183, -135.097, 13.0008, 0.22 ) }
    dend_119 { pt3dadd( -25.4731, -134.204, 14.008, 0.22 ) }
    dend_119 { pt3dadd( -26.2012, -133.671, 14.8715, 0.22 ) }
    dend_119 { pt3dadd( -26.3073, -133.592, 15.0321, 0.22 ) }
    dend_119 { pt3dadd( -26.6275, -133.366, 15.5606, 0.22 ) }
    dend_119 { pt3dadd( -27.6016, -132.717, 17.2658, 0.22 ) }
    dend_119 { pt3dadd( -28.3107, -132.265, 18.5733, 0.22 ) }
    dend_119 { pt3dadd( -29.1925, -131.698, 20.2849, 0.22 ) }
    dend_119 { pt3dadd( -29.2625, -131.653, 20.4098, 0.22 ) }
    dend_119 { pt3dadd( -29.8125, -131.306, 21.3172, 0.22 ) }
    dend_119 { pt3dadd( -29.8501, -131.283, 21.3726, 0.22 ) }
    dend_119 { pt3dadd( -30.5138, -130.905, 22.0935, 0.22 ) }
    dend_119 { pt3dadd( -31.2207, -130.514, 22.6669, 0.22 ) }
    dend_119 { pt3dadd( -31.2831, -130.478, 22.7067, 0.22 ) }
    dend_119 { pt3dadd( -32.035, -130.06, 23.2206, 0.22 ) }
    dend_119 { pt3dadd( -32.1108, -130.019, 23.2757, 0.22 ) }
    dend_119 { pt3dadd( -32.6159, -129.76, 23.6139, 0.22 ) }
    dend_119 { pt3dadd( -32.7582, -129.693, 23.7009, 0.22 ) }
    dend_119 { pt3dadd( -33.4437, -129.373, 24.1019, 0.22 ) }
    dend_119 { pt3dadd( -34.7153, -128.738, 24.8132, 0.22 ) }
    dend_119 { pt3dadd( -34.79, -128.699, 24.8517, 0.22 ) }
    dend_119 { pt3dadd( -35.493, -128.285, 25.1912, 0.22 ) }
    dend_119 { pt3dadd( -35.5561, -128.243, 25.2198, 0.22 ) }
    dend_119 { pt3dadd( -36.0926, -127.861, 25.4374, 0.22 ) }
    dend_119 { pt3dadd( -36.19, -127.782, 25.4721, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_119 { pt3dadd( -36.6538, -127.357, 25.588, 0.22 ) }
    dend_119 { pt3dadd( -37.4405, -126.676, 25.911, 0.22 ) }
    dend_119 { pt3dadd( -37.4971, -126.626, 25.9394, 0.22 ) }
    dend_119 { pt3dadd( -37.8252, -126.329, 26.1169, 0.44 ) }
    dend_119 { pt3dadd( -37.9024, -126.258, 26.1616, 0.44 ) }
    dend_119 { pt3dadd( -38.5355, -125.68, 26.5355, 0.44 ) }
    dend_119 { pt3dadd( -39.6925, -124.66, 27.18, 0.22 ) }
    dend_119 { pt3dadd( -40.7309, -123.808, 27.7381, 0.22 ) }
    dend_119 { pt3dadd( -40.7832, -123.767, 27.7619, 0.22 ) }
    dend_119 { pt3dadd( -41.6178, -123.136, 28.0895, 0.22 ) }
    dend_119 { pt3dadd( -41.6899, -123.083, 28.1202, 0.22 ) }
    dend_119 { pt3dadd( -42.6831, -122.389, 28.5621, 0.22 ) }
    dend_119 { pt3dadd( -42.7367, -122.353, 28.5912, 0.22 ) }
    dend_119 { pt3dadd( -43.6514, -121.807, 29.261, 0.22 ) }
    dend_119 { pt3dadd( -43.6954, -121.78, 29.2974, 0.22 ) }
    dend_119 { pt3dadd( -44.9105, -121.026, 30.4377, 0.22 ) }
    dend_119 { pt3dadd( -45.0349, -120.95, 30.56, 0.22 ) }
    dend_119 { pt3dadd( -46.1473, -120.294, 31.7599, 0.22 ) }
    dend_119 { pt3dadd( -46.2486, -120.239, 31.8604, 0.22 ) }
    dend_119 { pt3dadd( -46.9698, -119.885, 32.5209, 0.22 ) }
    dend_119 { pt3dadd( -47.0338, -119.857, 32.5611, 0.22 ) }
    dend_119 { pt3dadd( -47.6789, -119.6, 32.7635, 0.22 ) }
    dend_119 { pt3dadd( -47.7508, -119.565, 32.776, 0.22 ) }
    dend_119 { pt3dadd( -48.5909, -119.098, 32.7991, 0.22 ) }
    dend_119 { pt3dadd( -48.7877, -118.975, 32.8029, 0.22 ) }
    dend_119 { pt3dadd( -49.6488, -118.397, 32.8118, 0.22 ) }
    dend_119 { pt3dadd( -49.7305, -118.339, 32.8123, 0.22 ) }
    dend_119 { pt3dadd( -50.686, -117.556, 32.7893, 0.22 ) }
    dend_119 { pt3dadd( -50.848, -117.413, 32.7828, 0.22 ) }
    dend_119 { pt3dadd( -51.6587, -116.62, 32.7384, 0.22 ) }
    dend_119 { pt3dadd( -51.8167, -116.465, 32.7286, 0.22 ) }
    dend_119 { pt3dadd( -52.5013, -115.791, 32.6822, 0.22 ) }
    dend_119 { pt3dadd( -53.4291, -114.922, 32.6187, 0.22 ) }
    dend_119 { pt3dadd( -53.5583, -114.805, 32.6086, 0.22 ) }
    dend_119 { pt3dadd( -54.1961, -114.197, 32.5541, 0.22 ) }
    dend_119 { pt3dadd( -54.5863, -113.836, 32.5208, 0.22 ) }
    dend_119 { pt3dadd( -55.0674, -113.399, 32.483, 0.22 ) }
    dend_119 { pt3dadd( -55.1864, -113.299, 32.4567, 0.22 ) }
    dend_119 { pt3dadd( -55.9578, -112.744, 32.2203, 0.22 ) }
    dend_119 { pt3dadd( -56.0784, -112.664, 32.1758, 0.22 ) }
    dend_119 { pt3dadd( -56.9912, -112.055, 31.7255, 0.22 ) }
    dend_119 { pt3dadd( -57.0437, -112.019, 31.6952, 0.22 ) }
    dend_119 { pt3dadd( -58.5069, -111.033, 30.681, 0.22 ) }
    dend_119 { pt3dadd( -58.6228, -110.956, 30.5935, 0.22 ) }
    dend_119 { pt3dadd( -59.2284, -110.557, 30.121, 0.22 ) }
    dend_119 { pt3dadd( -60.0584, -109.975, 29.4591, 0.22 ) }
    dend_119 { pt3dadd( -60.4708, -109.642, 29.1337, 0.22 ) }
    dend_119 { pt3dadd( -61.4065, -108.848, 28.4773, 0.22 ) }
    dend_119 { pt3dadd( -61.5735, -108.699, 28.3861, 0.22 ) }
    dend_119 { pt3dadd( -62.2081, -108.119, 28.0757, 0.22 ) }
    dend_119 { pt3dadd( -62.3311, -108.019, 28.0321, 0.22 ) }
    dend_119 { pt3dadd( -63.3885, -107.293, 27.8211, 0.22 ) }
    dend_119 { pt3dadd( -63.6165, -107.153, 27.797, 0.22 ) }
    dend_119 { pt3dadd( -64.3646, -106.731, 27.7865, 0.22 ) }
    dend_119 { pt3dadd( -64.4273, -106.698, 27.7857, 0.22 ) }
    dend_119 { pt3dadd( -65.7589, -106.133, 27.8087, 0.22 ) }
    dend_119 { pt3dadd( -65.9791, -106.061, 27.8207, 0.22 ) }
    dend_119 { pt3dadd( -66.5598, -105.932, 27.871, 0.22 ) }
    dend_119 { pt3dadd( -66.8148, -105.88, 27.8978, 0.22 ) }
    dend_119 { pt3dadd( -67.3702, -105.756, 27.9651, 0.22 ) }
    dend_119 { pt3dadd( -67.955, -105.608, 28.0448, 0.22 ) }
    dend_119 { pt3dadd( -68.9326, -105.297, 28.2116, 0.22 ) }
    dend_119 { pt3dadd( -69.01, -105.273, 28.2256, 0.22 ) }
    dend_119 { pt3dadd( -69.6434, -105.076, 28.3475, 0.66 ) }
    dend_119 { pt3dadd( -70.2411, -104.913, 28.4584, 0.66 ) }
    // Section: dend_103, id: dend_103, parent: dend_101 (entry count 65/100)
    dend_103 { pt3dclear() }
    dend_103 { pt3dadd( -26.0802, -319.378, 17.9035, 1.11 ) }
    dend_103 { pt3dadd( -26.5424, -320.178, 17.4838, 1.11 ) }
    dend_103 { pt3dadd( -26.7182, -320.545, 17.3283, 1.11 ) }
    dend_103 { pt3dadd( -27.2974, -321.889, 16.817, 0.37 ) }
    dend_103 { pt3dadd( -27.7686, -323.21, 16.2999, 0.37 ) }
    dend_103 { pt3dadd( -27.9844, -323.916, 16.0296, 0.37 ) }
    dend_103 { pt3dadd( -28.3295, -325.045, 15.5199, 0.37 ) }
    dend_103 { pt3dadd( -28.4859, -325.608, 15.2718, 0.37 ) }
    dend_103 { pt3dadd( -28.5025, -325.668, 15.2382, 0.37 ) }
    dend_103 { pt3dadd( -28.752, -326.531, 14.626, 0.37 ) }
    dend_103 { pt3dadd( -28.8964, -327.018, 14.2017, 0.37 ) }
    dend_103 { pt3dadd( -29.2268, -328.034, 13.2333, 0.66 ) }
    dend_103 { pt3dadd( -29.3748, -328.476, 12.7671, 0.66 ) }
    dend_103 { pt3dadd( -29.71, -329.514, 11.6128, 0.44 ) }
    dend_103 { pt3dadd( -29.9196, -330.282, 10.7891, 0.37 ) }
    dend_103 { pt3dadd( -30.0857, -330.993, 10.0573, 0.37 ) }
    dend_103 { pt3dadd( -30.1019, -331.105, 9.94667, 0.37 ) }
    dend_103 { pt3dadd( -30.1239, -332.431, 8.77002, 0.37 ) }
    dend_103 { pt3dadd( -30.0569, -333.043, 8.18767, 1.11 ) }
    dend_103 { pt3dadd( -29.913, -333.633, 7.68211, 1.62 ) }
    dend_103 { pt3dadd( -29.881, -333.747, 7.58684, 1.62 ) }
    dend_103 { pt3dadd( -29.8256, -333.942, 7.42061, 1.62 ) }
    dend_103 { pt3dadd( -29.6393, -334.768, 6.77453, 1.62 ) }
    dend_103 { pt3dadd( -29.3592, -336.324, 5.66454, 0.59 ) }
    dend_103 { pt3dadd( -29.2089, -337.514, 4.88198, 0.59 ) }
    dend_103 { pt3dadd( -29.1122, -338.938, 3.98628, 0.59 ) }
    dend_103 { pt3dadd( -29.1113, -339.01, 3.94558, 0.59 ) }
    dend_103 { pt3dadd( -29.1535, -339.805, 3.55304, 0.52 ) }
    dend_103 { pt3dadd( -29.1633, -339.873, 3.5292, 0.52 ) }
    dend_103 { pt3dadd( -29.3728, -340.684, 3.33899, 0.52 ) }
    dend_103 { pt3dadd( -29.5642, -341.227, 3.22322, 0.74 ) }
    dend_103 { pt3dadd( -29.7236, -341.64, 3.1758, 1.03 ) }
    dend_103 { pt3dadd( -29.7475, -341.706, 3.16698, 1.03 ) }
    dend_103 { pt3dadd( -29.9553, -342.384, 3.04872, 1.25 ) }
    dend_103 { pt3dadd( -30.2514, -343.436, 2.82881, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    // Section: dend_102, id: dend_102, parent: dend_101 (entry count 0/100)
    dend_102 { pt3dclear() }
    dend_102 { pt3dadd( -26.0802, -319.378, 17.9035, 0.52 ) }
    dend_102 { pt3dadd( -25.2602, -320.138, 19.0378, 0.52 ) }
    dend_102 { pt3dadd( -24.9281, -320.446, 19.4972, 0.52 ) }
    dend_102 { pt3dadd( -24.6239, -320.728, 19.9179, 0.52 ) }
    dend_102 { pt3dadd( -24.5926, -320.757, 19.9613, 0.52 ) }
    dend_102 { pt3dadd( -23.861, -321.435, 20.9733, 0.52 ) }
    dend_102 { pt3dadd( -23.589, -321.688, 21.3496, 0.81 ) }
    // Section: dend_96, id: dend_96, parent: dend_94 (entry count 7/100)
    dend_96 { pt3dclear() }
    dend_96 { pt3dadd( -14.9563, -333.573, -2.29581, 0.66 ) }
    dend_96 { pt3dadd( -14.9051, -334.178, -2.1959, 0.66 ) }
    dend_96 { pt3dadd( -14.8816, -334.79, -2.08969, 0.66 ) }
    dend_96 { pt3dadd( -14.8767, -334.897, -2.07198, 0.66 ) }
    dend_96 { pt3dadd( -14.8257, -335.946, -1.92546, 0.66 ) }
    dend_96 { pt3dadd( -14.783, -336.917, -1.82, 0.37 ) }
    dend_96 { pt3dadd( -14.7477, -337.941, -1.73672, 0.37 ) }
    dend_96 { pt3dadd( -14.749, -338.043, -1.72937, 0.37 ) }
    dend_96 { pt3dadd( -14.7862, -338.673, -1.7374, 0.37 ) }
    dend_96 { pt3dadd( -14.8186, -339.146, -1.78074, 0.81 ) }
    dend_96 { pt3dadd( -14.8574, -339.945, -1.92212, 0.81 ) }
    dend_96 { pt3dadd( -14.8372, -340.654, -2.10049, 1.03 ) }
    dend_96 { pt3dadd( -14.7956, -341.127, -2.27607, 1.03 ) }
    dend_96 { pt3dadd( -14.69, -341.967, -2.63019, 1.55 ) }
    dend_96 { pt3dadd( -14.5481, -342.565, -2.8979, 1.84 ) }
    dend_96 { pt3dadd( -14.4367, -342.928, -3.04728, 1.84 ) }
    dend_96 { pt3dadd( -14.3349, -343.19, -3.15919, 1.84 ) }
    dend_96 { pt3dadd( -13.7368, -344.438, -3.73319, 0.29 ) }
    dend_96 { pt3dadd( -13.4184, -344.999, -3.98231, 0.29 ) }
    dend_96 { pt3dadd( -12.8466, -345.915, -4.36539, 0.29 ) }
    dend_96 { pt3dadd( -12.2728, -346.839, -4.81219, 0.29 ) }
    dend_96 { pt3dadd( -12.2343, -346.903, -4.842, 0.29 ) }
    dend_96 { pt3dadd( -11.5422, -348.106, -5.35276, 0.29 ) }
    dend_96 { pt3dadd( -11.1115, -348.912, -5.63614, 0.29 ) }
    dend_96 { pt3dadd( -11.0827, -348.972, -5.65863, 0.29 ) }
    dend_96 { pt3dadd( -10.6022, -350.28, -6.2556, 0.29 ) }
    dend_96 { pt3dadd( -10.3789, -350.922, -6.60226, 0.74 ) }
    dend_96 { pt3dadd( -10.2836, -351.307, -6.80539, 0.96 ) }
    dend_96 { pt3dadd( -10.2372, -351.767, -7.03533, 0.96 ) }
    dend_96 { pt3dadd( -10.2329, -351.831, -7.06351, 0.96 ) }
    dend_96 { pt3dadd( -10.1293, -352.999, -7.48796, 0.29 ) }
    dend_96 { pt3dadd( -10.117, -353.063, -7.51339, 0.29 ) }
    dend_96 { pt3dadd( -9.91545, -353.747, -7.85086, 0.29 ) }
    dend_96 { pt3dadd( -9.86726, -353.865, -7.91115, 0.29 ) }
    dend_96 { pt3dadd( -9.24041, -355.05, -8.46685, 0.29 ) }
    dend_96 { pt3dadd( -9.17037, -355.165, -8.51528, 0.29 ) }
    dend_96 { pt3dadd( -8.26719, -356.488, -8.94967, 0.29 ) }
    dend_96 { pt3dadd( -8.05865, -356.768, -9.07529, 1.4 ) }
    dend_96 { pt3dadd( -7.82069, -357.044, -9.36803, 1.55 ) }
    dend_96 { pt3dadd( -7.35198, -357.57, -10.1253, 0.29 ) }
    dend_96 { pt3dadd( -7.32464, -357.597, -10.1847, 0.29 ) }
    dend_96 { pt3dadd( -6.9549, -357.961, -11.0521, 0.29 ) }
    dend_96 { pt3dadd( -6.41043, -358.509, -12.4431, 0.52 ) }
    dend_96 { pt3dadd( -5.19438, -359.757, -15.7622, 0.52 ) }
    dend_96 { pt3dadd( -5.05142, -359.902, -16.1808, 1.84 ) }
    dend_96 { pt3dadd( -3.98587, -360.952, -19.5443, 0.29 ) }
    dend_96 { pt3dadd( -3.77688, -361.152, -20.217, 0.29 ) }
    dend_96 { pt3dadd( -3.61062, -361.298, -20.7738, 0.29 ) }
    // Section: dend_95, id: dend_95, parent: dend_94 (entry count 55/100)
    dend_95 { pt3dclear() }
    dend_95 { pt3dadd( -14.9563, -333.573, -2.29581, 0.29 ) }
    dend_95 { pt3dadd( -14.4258, -333.248, -2.29581, 0.29 ) }
    dend_95 { pt3dadd( -14.2856, -333.187, -2.29581, 0.29 ) }
    dend_95 { pt3dadd( -13.1324, -332.897, -2.27864, 0.29 ) }
    dend_95 { pt3dadd( -12.195, -332.724, -2.25886, 0.29 ) }
    dend_95 { pt3dadd( -11.9046, -332.677, -2.25198, 0.59 ) }
    dend_95 { pt3dadd( -11.2284, -332.532, -2.23619, 0.59 ) }
    dend_95 { pt3dadd( -10.4362, -332.402, -2.21604, 0.59 ) }
    dend_95 { pt3dadd( -9.54288, -332.3, -2.19161, 0.22 ) }
    dend_95 { pt3dadd( -8.64491, -332.267, -2.16381, 0.22 ) }
    dend_95 { pt3dadd( -8.57446, -332.262, -2.16128, 0.22 ) }
    dend_95 { pt3dadd( -7.01649, -332.07, -2.10172, 0.22 ) }
    // Section: dend_92, id: dend_92, parent: dend_89 (entry count 67/100)
    dend_92 { pt3dclear() }
    dend_92 { pt3dadd( 77.9766, -448.719, -0.26028, 0.37 ) }
    dend_92 { pt3dadd( 79.549, -448.313, -1.04151, 0.37 ) }
    dend_92 { pt3dadd( 80.2209, -448.101, -1.40352, 0.37 ) }
    dend_92 { pt3dadd( 80.4091, -448.039, -1.5069, 0.37 ) }
    dend_92 { pt3dadd( 81.049, -447.839, -1.84455, 0.37 ) }
    dend_92 { pt3dadd( 81.1219, -447.822, -1.87903, 0.37 ) }
    dend_92 { pt3dadd( 81.9789, -447.675, -2.23908, 0.37 ) }
    dend_92 { pt3dadd( 82.9188, -447.603, -2.46429, 0.52 ) }
    dend_92 { pt3dadd( 82.9899, -447.609, -2.47921, 0.52 ) }
    dend_92 { pt3dadd( 83.4161, -447.715, -2.57365, 0.74 ) }
    dend_92 { pt3dadd( 84.192, -448.056, -2.73838, 1.47 ) }
    dend_92 { pt3dadd( 84.6266, -448.29, -2.85193, 1.47 ) }
    dend_92 { pt3dadd( 85.2511, -448.677, -3.02919, 1.11 ) }
    dend_92 { pt3dadd( 86.1636, -449.266, -3.28371, 0.74 ) }
    dend_92 { pt3dadd( 87.4263, -450.093, -3.67033, 0.74 ) }
    dend_92 { pt3dadd( 88.4457, -450.749, -4.14869, 0.74 ) }
    dend_92 { pt3dadd( 89.3434, -451.314, -4.70616, 1.03 ) }
    dend_92 { pt3dadd( 89.3966, -451.345, -4.74462, 1.03 ) }
    dend_92 { pt3dadd( 89.7705, -451.541, -5.04221, 1.33 ) }
    dend_92 { pt3dadd( 89.8859, -451.589, -5.15211, 1.33 ) }
    dend_92 { pt3dadd( 91.6809, -452.193, -6.92478, 1.55 ) }
    dend_92 { pt3dadd( 91.7857, -452.225, -7.02944, 1.55 ) }
    dend_92 { pt3dadd( 92.4878, -452.42, -7.77197, 1.62 ) }
    dend_92 { pt3dadd( 92.884, -452.524, -8.21008, 1.77 ) }
    dend_92 { pt3dadd( 94.7302, -452.919, -10.2427, 0.66 ) }
    dend_92 { pt3dadd( 95.7741, -453.1, -11.3575, 0.66 ) }
    dend_92 { pt3dadd( 95.8336, -453.107, -11.4141, 0.66 ) }
    dend_92 { pt3dadd( 97.5624, -453.245, -13.0498, 0.52 ) }
    dend_92 { pt3dadd( 97.6122, -453.247, -13.0989, 0.52 ) }
    dend_92 { pt3dadd( 98.3613, -453.241, -13.7973, 0.52 ) }
    dend_92 { pt3dadd( 98.4263, -453.238, -13.845, 0.52 ) }
    dend_92 { pt3dadd( 99.4786, -453.192, -14.5381, 0.52 ) }
    dend_92 { pt3dadd( 99.5429, -453.194, -14.5721, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_92 { pt3dadd( 100.735, -453.372, -14.9707, 0.74 ) }
    dend_92 { pt3dadd( 101.187, -453.481, -15.1465, 0.96 ) }
    dend_92 { pt3dadd( 101.686, -453.657, -15.3685, 0.96 ) }
    dend_92 { pt3dadd( 101.749, -453.681, -15.395, 0.96 ) }
    dend_92 { pt3dadd( 102.336, -453.908, -15.6296, 0.96 ) }
    dend_92 { pt3dadd( 102.607, -453.996, -15.7114, 0.96 ) }
    dend_92 { pt3dadd( 103.297, -454.175, -15.8481, 0.44 ) }
    dend_92 { pt3dadd( 103.641, -454.259, -15.9314, 0.44 ) }
    dend_92 { pt3dadd( 104.633, -454.51, -16.1823, 0.44 ) }
    dend_92 { pt3dadd( 104.842, -454.57, -16.2319, 0.44 ) }
    dend_92 { pt3dadd( 105.471, -454.759, -16.3703, 0.44 ) }
    dend_92 { pt3dadd( 105.528, -454.776, -16.3826, 0.44 ) }
    dend_92 { pt3dadd( 106.173, -454.971, -16.5045, 1.03 ) }
    dend_92 { pt3dadd( 107.138, -455.27, -16.7036, 1.55 ) }
    dend_92 { pt3dadd( 107.82, -455.502, -16.8493, 1.77 ) }
    dend_92 { pt3dadd( 108.026, -455.577, -16.8912, 1.77 ) }
    dend_92 { pt3dadd( 108.942, -455.935, -17.0582, 0.37 ) }
    dend_92 { pt3dadd( 109.575, -456.168, -17.1533, 0.37 ) }
    dend_92 { pt3dadd( 109.635, -456.188, -17.1598, 0.37 ) }
    dend_92 { pt3dadd( 110.289, -456.412, -17.2288, 0.37 ) }
    dend_92 { pt3dadd( 110.512, -456.493, -17.2484, 0.37 ) }
    dend_92 { pt3dadd( 111.246, -456.764, -17.2888, 0.37 ) }
    dend_92 { pt3dadd( 111.592, -456.885, -17.2785, 0.81 ) }
    dend_92 { pt3dadd( 111.659, -456.907, -17.2745, 0.81 ) }
    dend_92 { pt3dadd( 112.184, -456.984, -17.2364, 1.11 ) }
    dend_92 { pt3dadd( 112.334, -456.977, -17.2233, 1.11 ) }
    dend_92 { pt3dadd( 112.764, -456.863, -17.1836, 1.11 ) }
    dend_92 { pt3dadd( 113.568, -456.45, -17.1, 0.29 ) }
    dend_92 { pt3dadd( 113.623, -456.41, -17.0833, 0.29 ) }
    dend_92 { pt3dadd( 114.513, -455.679, -16.4723, 0.29 ) }
    dend_92 { pt3dadd( 114.559, -455.652, -16.4274, 0.29 ) }
    dend_92 { pt3dadd( 114.982, -455.467, -15.9377, 0.74 ) }
    dend_92 { pt3dadd( 115.02, -455.454, -15.8928, 0.74 ) }
    dend_92 { pt3dadd( 115.983, -455.198, -14.6857, 0.66 ) }
    dend_92 { pt3dadd( 117.361, -454.922, -12.9669, 0.29 ) }
    dend_92 { pt3dadd( 119.112, -454.684, -10.7844, 0.29 ) }
    dend_92 { pt3dadd( 120.174, -454.567, -9.48992, 1.03 ) }
    dend_92 { pt3dadd( 120.597, -454.533, -8.98695, 1.03 ) }
    dend_92 { pt3dadd( 122.431, -454.408, -6.87314, 0.29 ) }
    dend_92 { pt3dadd( 122.652, -454.399, -6.63321, 0.52 ) }
    dend_92 { pt3dadd( 122.757, -454.394, -6.52257, 0.52 ) }
    dend_92 { pt3dadd( 124.367, -454.218, -4.96845, 0.22 ) }
    dend_92 { pt3dadd( 124.496, -454.202, -4.84858, 0.74 ) }
    dend_92 { pt3dadd( 124.587, -454.186, -4.7662, 0.74 ) }
    dend_92 { pt3dadd( 124.83, -454.129, -4.56362, 0.74 ) }
    dend_92 { pt3dadd( 124.904, -454.105, -4.50085, 0.74 ) }
    dend_92 { pt3dadd( 125.236, -453.957, -4.17752, 0.74 ) }
    dend_92 { pt3dadd( 126.699, -453.131, -2.71206, 0.22 ) }
    dend_92 { pt3dadd( 127.472, -452.711, -1.92651, 0.22 ) }
    dend_92 { pt3dadd( 127.645, -452.618, -1.75231, 0.66 ) }
    dend_92 { pt3dadd( 128.179, -452.33, -1.21691, 0.66 ) }
    dend_92 { pt3dadd( 130.059, -451.328, 0.599113, 0.22 ) }
    dend_92 { pt3dadd( 130.557, -451.066, 1.06488, 0.44 ) }
    dend_92 { pt3dadd( 131.887, -450.344, 2.45842, 0.15 ) }
    dend_92 { pt3dadd( 132.115, -450.236, 2.72521, 0.81 ) }
    dend_92 { pt3dadd( 132.166, -450.215, 2.78665, 0.81 ) }
    dend_92 { pt3dadd( 132.492, -450.099, 3.18517, 0.81 ) }
    dend_92 { pt3dadd( 132.536, -450.083, 3.23787, 0.81 ) }
    dend_92 { pt3dadd( 134.417, -449.391, 5.54981, 0.22 ) }
    dend_92 { pt3dadd( 134.766, -449.235, 6.02195, 0.22 ) }
    dend_92 { pt3dadd( 134.806, -449.218, 6.07676, 0.22 ) }
    dend_92 { pt3dadd( 135.422, -448.93, 6.87446, 0.22 ) }
    dend_92 { pt3dadd( 135.834, -448.739, 7.36297, 0.22 ) }
    dend_92 { pt3dadd( 135.882, -448.711, 7.42013, 0.22 ) }
    dend_92 { pt3dadd( 136.696, -448.03, 8.2568, 0.66 ) }
    dend_92 { pt3dadd( 136.737, -447.983, 8.31069, 0.66 ) }
    dend_92 { pt3dadd( 137.021, -447.579, 8.7615, 0.88 ) }
    dend_92 { pt3dadd( 137.095, -447.435, 8.91539, 0.88 ) }
    dend_92 { pt3dadd( 137.589, -446.125, 10.2924, 0.22 ) }
    dend_92 { pt3dadd( 137.813, -445.399, 11.0075, 0.22 ) }
    dend_92 { pt3dadd( 137.835, -445.325, 11.0628, 0.59 ) }
    dend_92 { pt3dadd( 137.851, -445.268, 11.1014, 0.59 ) }
    dend_92 { pt3dadd( 137.933, -444.958, 11.2872, 0.59 ) }
    dend_92 { pt3dadd( 138.319, -443.711, 11.9949, 0.15 ) }
    dend_92 { pt3dadd( 138.352, -443.626, 12.0374, 0.15 ) }
    dend_92 { pt3dadd( 139.021, -442.145, 12.8354, 0.15 ) }
    dend_92 { pt3dadd( 139.111, -441.96, 12.9344, 0.37 ) }
    dend_92 { pt3dadd( 139.278, -441.664, 13.132, 0.37 ) }
    dend_92 { pt3dadd( 140.127, -440.337, 14.1462, 0.15 ) }
    dend_92 { pt3dadd( 140.363, -440.012, 14.3989, 0.88 ) }
    dend_92 { pt3dadd( 140.518, -439.806, 14.6036, 0.88 ) }
    dend_92 { pt3dadd( 140.564, -439.746, 14.6731, 0.88 ) }
    dend_92 { pt3dadd( 141.579, -438.277, 16.4739, 0.22 ) }
    dend_92 { pt3dadd( 141.621, -438.209, 16.5553, 0.22 ) }
    dend_92 { pt3dadd( 142.049, -437.429, 17.4507, 0.22 ) }
    dend_92 { pt3dadd( 142.739, -436.105, 18.9596, 0.44 ) }
    dend_92 { pt3dadd( 142.966, -435.643, 19.4802, 0.44 ) }
    dend_92 { pt3dadd( 143.656, -434.146, 21.1131, 0.44 ) }
    dend_92 { pt3dadd( 143.894, -433.557, 21.707, 0.29 ) }
    dend_92 { pt3dadd( 143.989, -433.305, 21.9678, 0.59 ) }
    dend_92 { pt3dadd( 144.26, -432.448, 22.9021, 0.81 ) }
    // Section: dend_91, id: dend_91, parent: dend_89 (entry count 91/100)
    dend_91 { pt3dclear() }
    dend_91 { pt3dadd( 77.9766, -448.719, -0.26028, 1.11 ) }
    dend_91 { pt3dadd( 77.665, -449.319, -0.342078, 1.11 ) }
    dend_91 { pt3dadd( 77.2136, -450.094, -0.448078, 0.88 ) }
    dend_91 { pt3dadd( 76.7385, -450.858, -0.54679, 0.66 ) }
    dend_91 { pt3dadd( 76.2933, -451.551, -0.588479, 0.37 ) }
    dend_91 { pt3dadd( 75.839, -452.27, -0.598615, 0.37 ) }
    dend_91 { pt3dadd( 75.7542, -452.404, -0.597344, 0.37 ) }
    dend_91 { pt3dadd( 75.0986, -453.357, -0.561218, 0.37 ) }
    dend_91 { pt3dadd( 74.7065, -453.894, -0.519093, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_91 { pt3dadd( 74.193, -454.601, -0.42906, 0.29 ) }
    dend_91 { pt3dadd( 73.6227, -455.367, -0.292093, 0.29 ) }
    dend_91 { pt3dadd( 73.5349, -455.488, -0.270681, 0.29 ) }
    dend_91 { pt3dadd( 73.2232, -455.915, -0.207912, 0.29 ) }
    dend_91 { pt3dadd( 73.133, -456.038, -0.196117, 0.29 ) }
    dend_91 { pt3dadd( 72.4939, -456.845, -0.259809, 0.29 ) }
    dend_91 { pt3dadd( 72.2785, -457.098, -0.31152, 0.88 ) }
    dend_91 { pt3dadd( 71.9748, -457.439, -0.39878, 0.88 ) }
    dend_91 { pt3dadd( 71.3621, -458.164, -0.648561, 0.29 ) }
    dend_91 { pt3dadd( 70.525, -459.23, -1.07895, 0.29 ) }
    dend_91 { pt3dadd( 69.707, -460.291, -1.56541, 0.44 ) }
    dend_91 { pt3dadd( 69.3593, -460.757, -1.80681, 0.44 ) }
    dend_91 { pt3dadd( 69.3186, -460.819, -1.83915, 0.44 ) }
    dend_91 { pt3dadd( 68.8121, -461.724, -2.32447, 0.29 ) }
    dend_91 { pt3dadd( 68.5277, -462.377, -2.69445, 0.29 ) }
    dend_91 { pt3dadd( 68.5105, -462.437, -2.7288, 0.29 ) }
    dend_91 { pt3dadd( 68.4631, -462.786, -2.87201, 0.59 ) }
    dend_91 { pt3dadd( 68.4262, -463.388, -3.11066, 0.59 ) }
    dend_91 { pt3dadd( 68.421, -463.458, -3.13224, 0.59 ) }
    // Section: dend_90, id: dend_90, parent: dend_89 (entry count 19/100)
    dend_90 { pt3dclear() }
    dend_90 { pt3dadd( 77.9766, -448.719, -0.26028, 2.73 ) }
    dend_90 { pt3dadd( 77.9866, -448.748, -0.285512, 2.73 ) }
    dend_90 { pt3dadd( 78.6323, -451.013, -1.9428, 0.52 ) }
    dend_90 { pt3dadd( 78.825, -451.722, -2.44445, 0.52 ) }
    dend_90 { pt3dadd( 78.8925, -452.016, -2.66864, 0.52 ) }
    dend_90 { pt3dadd( 79.1297, -453.173, -3.55487, 0.52 ) }
    dend_90 { pt3dadd( 79.1404, -453.228, -3.59736, 0.52 ) }
    dend_90 { pt3dadd( 79.5736, -455.566, -5.50627, 0.52 ) }
    dend_90 { pt3dadd( 79.5823, -455.612, -5.54401, 0.52 ) }
    dend_90 { pt3dadd( 79.8539, -456.868, -6.66809, 1.11 ) }
    dend_90 { pt3dadd( 79.9496, -457.303, -7.07456, 1.47 ) }
    dend_90 { pt3dadd( 79.9601, -457.355, -7.1252, 1.47 ) }
    dend_90 { pt3dadd( 80.3812, -459.204, -8.93768, 0.52 ) }
    dend_90 { pt3dadd( 80.7002, -460.332, -10.0646, 0.52 ) }
    dend_90 { pt3dadd( 80.8193, -460.705, -10.4273, 0.88 ) }
    dend_90 { pt3dadd( 80.904, -460.925, -10.6254, 0.88 ) }
    dend_90 { pt3dadd( 80.9272, -460.982, -10.6769, 0.88 ) }
    dend_90 { pt3dadd( 81.0285, -461.207, -10.8548, 0.88 ) }
    dend_90 { pt3dadd( 81.409, -461.886, -11.174, 0.37 ) }
    dend_90 { pt3dadd( 81.4755, -461.971, -11.2097, 0.37 ) }
    dend_90 { pt3dadd( 81.8546, -462.397, -11.3722, 0.37 ) }
    dend_90 { pt3dadd( 81.9656, -462.517, -11.4078, 0.37 ) }
    dend_90 { pt3dadd( 82.4421, -463.076, -11.5222, 0.37 ) }
    dend_90 { pt3dadd( 82.5353, -463.193, -11.5341, 0.37 ) }
    dend_90 { pt3dadd( 82.8787, -463.645, -11.5341, 0.59 ) }
    dend_90 { pt3dadd( 82.9371, -463.726, -11.5341, 0.59 ) }
    dend_90 { pt3dadd( 83.1889, -464.183, -11.5341, 0.74 ) }
    dend_90 { pt3dadd( 83.3003, -464.453, -11.571, 0.74 ) }
    dend_90 { pt3dadd( 83.4764, -465.05, -11.707, 0.74 ) }
    dend_90 { pt3dadd( 83.496, -465.186, -11.7456, 0.74 ) }
    dend_90 { pt3dadd( 83.5034, -465.728, -11.9215, 0.44 ) }
    dend_90 { pt3dadd( 83.4341, -466.859, -12.2873, 0.44 ) }
    dend_90 { pt3dadd( 83.3054, -468.01, -12.6439, 0.29 ) }
    dend_90 { pt3dadd( 83.2959, -468.077, -12.6626, 0.29 ) }
    dend_90 { pt3dadd( 83.1332, -469.185, -12.9061, 0.29 ) }
    dend_90 { pt3dadd( 83.1152, -469.335, -12.9316, 0.29 ) }
    dend_90 { pt3dadd( 83.0547, -470.25, -13.0258, 0.29 ) }
    dend_90 { pt3dadd( 83.0729, -470.604, -13.1013, 0.74 ) }
    dend_90 { pt3dadd( 83.1773, -471.24, -13.2746, 1.11 ) }
    dend_90 { pt3dadd( 83.4372, -471.986, -13.7841, 1.11 ) }
    dend_90 { pt3dadd( 83.4645, -472.043, -13.8376, 1.11 ) }
    dend_90 { pt3dadd( 83.6983, -472.477, -14.2978, 1.11 ) }
    dend_90 { pt3dadd( 84.5369, -473.894, -15.9165, 0.29 ) }
    dend_90 { pt3dadd( 85.0175, -474.678, -16.839, 0.29 ) }
    dend_90 { pt3dadd( 86.2452, -476.547, -19.1373, 0.29 ) }
    dend_90 { pt3dadd( 86.3163, -476.661, -19.2853, 0.96 ) }
    dend_90 { pt3dadd( 86.6189, -477.202, -19.9364, 1.25 ) }
    dend_90 { pt3dadd( 86.8352, -477.621, -20.4297, 1.4 ) }
    dend_90 { pt3dadd( 86.9261, -477.804, -20.6108, 1.4 ) }
    dend_90 { pt3dadd( 86.974, -477.899, -20.7065, 1.4 ) }
    dend_90 { pt3dadd( 87.6905, -479.445, -22.0738, 0.44 ) }
    dend_90 { pt3dadd( 88.0557, -480.198, -22.7643, 0.44 ) }
    dend_90 { pt3dadd( 88.7373, -481.544, -24.0525, 0.66 ) }
    dend_90 { pt3dadd( 89.1882, -482.368, -24.9321, 0.66 ) }
    dend_90 { pt3dadd( 89.8428, -483.378, -25.9758, 0.66 ) }
    dend_90 { pt3dadd( 90.1041, -483.725, -26.3213, 1.47 ) }
    dend_90 { pt3dadd( 90.3076, -483.955, -26.5366, 1.77 ) }
    dend_90 { pt3dadd( 90.3705, -484.02, -26.5962, 1.77 ) }
    dend_90 { pt3dadd( 91.9585, -485.571, -27.8462, 0.22 ) }
    dend_90 { pt3dadd( 93.5021, -486.964, -28.9183, 0.22 ) }
    dend_90 { pt3dadd( 93.817, -487.234, -29.0932, 0.81 ) }
    dend_90 { pt3dadd( 93.8892, -487.293, -29.1286, 0.81 ) }
    dend_90 { pt3dadd( 94.4792, -487.809, -29.4164, 0.81 ) }
    dend_90 { pt3dadd( 94.8168, -488.127, -29.5583, 0.15 ) }
    dend_90 { pt3dadd( 95.3895, -488.71, -29.7182, 0.15 ) }
    dend_90 { pt3dadd( 95.5702, -488.909, -29.7869, 1.18 ) }
    dend_90 { pt3dadd( 95.9024, -489.291, -29.9214, 1.55 ) }
    dend_90 { pt3dadd( 96.7721, -490.319, -30.2605, 0.22 ) }
    dend_90 { pt3dadd( 97.5667, -491.298, -30.5545, 0.22 ) }
    dend_90 { pt3dadd( 97.6603, -491.415, -30.5862, 0.22 ) }
    dend_90 { pt3dadd( 98.2115, -492.063, -30.7358, 0.22 ) }
    dend_90 { pt3dadd( 98.3151, -492.171, -30.7674, 0.22 ) }
    dend_90 { pt3dadd( 99.1707, -492.981, -31.0145, 0.22 ) }
    dend_90 { pt3dadd( 99.6984, -493.441, -31.1476, 0.22 ) }
    dend_90 { pt3dadd( 99.8265, -493.554, -31.1857, 0.22 ) }
    dend_90 { pt3dadd( 100.685, -494.334, -31.5697, 0.22 ) }
    dend_90 { pt3dadd( 101.802, -495.49, -32.2149, 0.22 ) }
    dend_90 { pt3dadd( 102.57, -496.465, -32.8158, 0.22 ) }
    dend_90 { pt3dadd( 102.717, -496.69, -32.963, 1.11 ) }
    dend_90 { pt3dadd( 102.84, -496.92, -33.1113, 1.11 ) }
    dend_90 { pt3dadd( 103.474, -498.391, -34.102, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_90 { pt3dadd( 103.948, -499.884, -35.1066, 0.22 ) }
    dend_90 { pt3dadd( 104.341, -501.564, -36.1895, 0.22 ) }
    dend_90 { pt3dadd( 104.374, -501.76, -36.3178, 0.88 ) }
    dend_90 { pt3dadd( 104.428, -502.175, -36.6033, 0.88 ) }
    dend_90 { pt3dadd( 104.55, -503.229, -37.3151, 0.22 ) }
    dend_90 { pt3dadd( 104.622, -504.011, -37.8017, 0.22 ) }
    dend_90 { pt3dadd( 104.654, -504.254, -37.9754, 0.81 ) }
    dend_90 { pt3dadd( 104.751, -504.684, -38.2668, 0.81 ) }
    dend_90 { pt3dadd( 105.101, -505.823, -38.9733, 0.15 ) }
    dend_90 { pt3dadd( 105.447, -506.74, -39.4647, 0.15 ) }
    dend_90 { pt3dadd( 105.506, -506.875, -39.5168, 0.15 ) }
    dend_90 { pt3dadd( 105.943, -507.682, -39.7998, 0.15 ) }
    dend_90 { pt3dadd( 106.053, -507.855, -39.8514, 0.15 ) }
    dend_90 { pt3dadd( 106.401, -508.311, -39.9267, 0.15 ) }
    dend_90 { pt3dadd( 106.609, -508.56, -39.8939, 0.81 ) }
    dend_90 { pt3dadd( 106.656, -508.612, -39.8832, 0.81 ) }
    dend_90 { pt3dadd( 106.858, -508.852, -39.823, 0.81 ) }
    // Section: dend_80, id: dend_80, parent: dend_76 (entry count 17/100)
    dend_80 { pt3dclear() }
    dend_80 { pt3dadd( -108.013, 166.515, -154.141, 0.29 ) }
    dend_80 { pt3dadd( -108.547, 166.49, -154.829, 0.29 ) }
    dend_80 { pt3dadd( -108.593, 166.485, -154.883, 0.29 ) }
    dend_80 { pt3dadd( -109.441, 166.361, -155.832, 0.29 ) }
    dend_80 { pt3dadd( -109.547, 166.346, -155.942, 0.29 ) }
    dend_80 { pt3dadd( -110.069, 166.273, -156.452, 0.29 ) }
    dend_80 { pt3dadd( -111.144, 166.123, -157.534, 0.66 ) }
    dend_80 { pt3dadd( -111.666, 166.063, -158.016, 0.66 ) }
    dend_80 { pt3dadd( -111.728, 166.056, -158.067, 0.66 ) }
    dend_80 { pt3dadd( -112.082, 166.013, -158.315, 0.66 ) }
    dend_80 { pt3dadd( -112.144, 166.01, -158.353, 0.66 ) }
    dend_80 { pt3dadd( -112.999, 166.059, -158.807, 0.29 ) }
    dend_80 { pt3dadd( -113.812, 166.181, -159.151, 0.29 ) }
    dend_80 { pt3dadd( -114.213, 166.265, -159.336, 0.66 ) }
    dend_80 { pt3dadd( -114.276, 166.28, -159.365, 0.66 ) }
    dend_80 { pt3dadd( -114.78, 166.39, -159.577, 0.66 ) }
    dend_80 { pt3dadd( -114.847, 166.399, -159.597, 0.66 ) }
    dend_80 { pt3dadd( -115.526, 166.437, -159.89, 0.29 ) }
    dend_80 { pt3dadd( -116.169, 166.44, -160.26, 0.29 ) }
    dend_80 { pt3dadd( -116.229, 166.438, -160.297, 0.29 ) }
    dend_80 { pt3dadd( -116.9, 166.406, -160.691, 0.96 ) }
    dend_80 { pt3dadd( -118.04, 166.324, -161.341, 0.96 ) }
    dend_80 { pt3dadd( -119.901, 166.242, -162.237, 0.29 ) }
    dend_80 { pt3dadd( -119.976, 166.241, -162.272, 0.29 ) }
    dend_80 { pt3dadd( -120.504, 166.241, -162.535, 0.29 ) }
    dend_80 { pt3dadd( -121.369, 166.268, -162.951, 0.29 ) }
    dend_80 { pt3dadd( -121.505, 166.277, -163.014, 0.29 ) }
    dend_80 { pt3dadd( -122.967, 166.405, -163.55, 0.29 ) }
    dend_80 { pt3dadd( -123.96, 166.444, -163.804, 0.81 ) }
    dend_80 { pt3dadd( -124.12, 166.443, -163.849, 0.81 ) }
    dend_80 { pt3dadd( -124.776, 166.398, -164.028, 0.81 ) }
    dend_80 { pt3dadd( -124.871, 166.387, -164.053, 0.81 ) }
    dend_80 { pt3dadd( -126.065, 166.177, -164.328, 0.81 ) }
    dend_80 { pt3dadd( -126.947, 165.965, -164.497, 0.29 ) }
    dend_80 { pt3dadd( -127.018, 165.949, -164.505, 0.29 ) }
    dend_80 { pt3dadd( -128.683, 165.559, -164.687, 0.29 ) }
    dend_80 { pt3dadd( -128.751, 165.543, -164.693, 0.29 ) }
    dend_80 { pt3dadd( -129.094, 165.463, -164.719, 0.66 ) }
    dend_80 { pt3dadd( -129.162, 165.448, -164.722, 0.66 ) }
    dend_80 { pt3dadd( -130.516, 165.182, -164.722, 0.66 ) }
    dend_80 { pt3dadd( -130.617, 165.164, -164.722, 0.66 ) }
    dend_80 { pt3dadd( -131.202, 165.072, -164.722, 1.03 ) }
    dend_80 { pt3dadd( -131.423, 165.039, -164.733, 1.03 ) }
    dend_80 { pt3dadd( -132.242, 164.941, -164.865, 1.03 ) }
    dend_80 { pt3dadd( -132.312, 164.934, -164.883, 1.03 ) }
    dend_80 { pt3dadd( -133.215, 164.91, -165.208, 1.25 ) }
    dend_80 { pt3dadd( -133.29, 164.911, -165.237, 1.25 ) }
    dend_80 { pt3dadd( -133.991, 164.969, -165.618, 0.74 ) }
    dend_80 { pt3dadd( -134.818, 165.087, -166.139, 0.37 ) }
    dend_80 { pt3dadd( -134.883, 165.1, -166.185, 0.37 ) }
    dend_80 { pt3dadd( -136.116, 165.341, -167.059, 0.37 ) }
    dend_80 { pt3dadd( -136.175, 165.35, -167.102, 0.37 ) }
    dend_80 { pt3dadd( -137.622, 165.539, -168.107, 0.37 ) }
    dend_80 { pt3dadd( -137.884, 165.557, -168.256, 0.88 ) }
    dend_80 { pt3dadd( -137.948, 165.558, -168.286, 0.88 ) }
    dend_80 { pt3dadd( -138.679, 165.519, -168.571, 0.88 ) }
    dend_80 { pt3dadd( -139.698, 165.419, -168.889, 0.29 ) }
    dend_80 { pt3dadd( -139.767, 165.414, -168.903, 0.29 ) }
    dend_80 { pt3dadd( -141.209, 165.317, -169.064, 0.29 ) }
    dend_80 { pt3dadd( -141.289, 165.312, -169.07, 0.29 ) }
    dend_80 { pt3dadd( -143.087, 165.206, -169.177, 0.29 ) }
    dend_80 { pt3dadd( -143.391, 165.192, -169.188, 0.29 ) }
    dend_80 { pt3dadd( -144.881, 165.114, -169.2, 0.29 ) }
    dend_80 { pt3dadd( -145.031, 165.104, -169.201, 0.29 ) }
    dend_80 { pt3dadd( -147.506, 164.894, -169.216, 0.29 ) }
    dend_80 { pt3dadd( -147.585, 164.885, -169.216, 0.29 ) }
    dend_80 { pt3dadd( -148.635, 164.728, -169.242, 1.11 ) }
    dend_80 { pt3dadd( -149.346, 164.593, -169.276, 1.77 ) }
    dend_80 { pt3dadd( -149.413, 164.575, -169.281, 1.77 ) }
    dend_80 { pt3dadd( -149.926, 164.439, -169.335, 1.77 ) }
    dend_80 { pt3dadd( -150.037, 164.416, -169.349, 1.77 ) }
    dend_80 { pt3dadd( -151.029, 164.255, -169.47, 0.52 ) }
    dend_80 { pt3dadd( -151.098, 164.242, -169.478, 0.52 ) }
    dend_80 { pt3dadd( -151.925, 164.059, -169.565, 0.29 ) }
    dend_80 { pt3dadd( -152.086, 164.015, -169.574, 0.29 ) }
    dend_80 { pt3dadd( -154.082, 163.214, -169.571, 0.29 ) }
    dend_80 { pt3dadd( -154.3, 163.102, -169.559, 0.66 ) }
    dend_80 { pt3dadd( -154.903, 162.688, -169.677, 0.66 ) }
    dend_80 { pt3dadd( -155.532, 162.21, -170.011, 0.66 ) }
    dend_80 { pt3dadd( -155.918, 161.883, -170.344, 0.22 ) }
    dend_80 { pt3dadd( -156.694, 161.177, -171.379, 0.22 ) }
    dend_80 { pt3dadd( -156.732, 161.138, -171.44, 0.74 ) }
    dend_80 { pt3dadd( -158.559, 159.349, -174.406, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_80 { pt3dadd( -159.095, 158.864, -175.344, 0.44 ) }
    dend_80 { pt3dadd( -159.128, 158.837, -175.403, 0.44 ) }
    dend_80 { pt3dadd( -160.116, 158.147, -177.26, 0.29 ) }
    dend_80 { pt3dadd( -160.927, 157.761, -178.5, 0.29 ) }
    dend_80 { pt3dadd( -160.969, 157.746, -178.555, 0.29 ) }
    dend_80 { pt3dadd( -161.751, 157.518, -179.436, 0.74 ) }
    dend_80 { pt3dadd( -162.079, 157.434, -179.812, 0.74 ) }
    dend_80 { pt3dadd( -163.877, 157.14, -181.861, 0.15 ) }
    dend_80 { pt3dadd( -165.551, 157.034, -183.889, 0.15 ) }
    dend_80 { pt3dadd( -166.252, 156.968, -185.434, 0.81 ) }
    dend_80 { pt3dadd( -166.276, 156.964, -185.503, 0.81 ) }
    dend_80 { pt3dadd( -166.379, 156.939, -185.879, 0.81 ) }
    dend_80 { pt3dadd( -166.861, 156.721, -188.232, 0.15 ) }
    dend_80 { pt3dadd( -167.122, 156.494, -190.164, 0.96 ) }
    dend_80 { pt3dadd( -167.728, 155.364, -198.381, 0.44 ) }
    dend_80 { pt3dadd( -167.74, 155.323, -198.623, 0.44 ) }
    dend_80 { pt3dadd( -167.742, 155.31, -198.695, 0.44 ) }
    dend_80 { pt3dadd( -167.729, 155.093, -199.79, 0.44 ) }
    dend_80 { pt3dadd( -167.712, 155.038, -200.02, 0.44 ) }
    dend_80 { pt3dadd( -167.643, 154.87, -200.636, 0.74 ) }
    dend_80 { pt3dadd( -167.396, 154.343, -200.511, 0.74 ) }
    dend_80 { pt3dadd( -167.332, 154.2, -200.474, 0.74 ) }
    // Section: dend_77, id: dend_77, parent: dend_76 (entry count 22/100)
    dend_77 { pt3dclear() }
    dend_77 { pt3dadd( -108.013, 166.515, -154.141, 0.29 ) }
    dend_77 { pt3dadd( -108.712, 168.133, -155.679, 0.29 ) }
    dend_77 { pt3dadd( -109.025, 168.784, -156.693, 0.29 ) }
    dend_77 { pt3dadd( -109.043, 168.82, -156.752, 0.29 ) }
    dend_77 { pt3dadd( -109.207, 169.118, -157.372, 0.66 ) }
    dend_77 { pt3dadd( -109.365, 169.399, -157.958, 0.66 ) }
    dend_77 { pt3dadd( -109.833, 170.284, -159.991, 0.66 ) }
    dend_77 { pt3dadd( -110.423, 171.366, -162.763, 0.66 ) }
    dend_77 { pt3dadd( -110.436, 171.39, -162.828, 0.66 ) }
    dend_77 { pt3dadd( -110.893, 172.334, -165.374, 0.96 ) }
    dend_77 { pt3dadd( -111.005, 172.59, -166.083, 0.96 ) }
    dend_77 { pt3dadd( -111.393, 173.554, -168.808, 0.22 ) }
    dend_77 { pt3dadd( -111.403, 173.58, -168.873, 0.22 ) }
    dend_77 { pt3dadd( -111.551, 173.991, -169.789, 0.22 ) }
    dend_77 { pt3dadd( -111.562, 174.021, -169.854, 0.22 ) }
    dend_77 { pt3dadd( -111.73, 174.503, -170.809, 0.59 ) }
    dend_77 { pt3dadd( -111.741, 174.537, -170.87, 0.59 ) }
    dend_77 { pt3dadd( -111.887, 174.974, -171.523, 0.59 ) }
    dend_77 { pt3dadd( -112.342, 176.216, -173.346, 0.59 ) }
    dend_77 { pt3dadd( -112.736, 177.229, -174.857, 0.22 ) }
    dend_77 { pt3dadd( -112.77, 177.321, -174.988, 0.22 ) }
    dend_77 { pt3dadd( -113.026, 178.228, -176.116, 0.22 ) }
    dend_77 { pt3dadd( -113.035, 178.273, -176.17, 0.22 ) }
    dend_77 { pt3dadd( -113.093, 178.774, -176.714, 0.22 ) }
    dend_77 { pt3dadd( -113.096, 178.822, -176.766, 0.22 ) }
    dend_77 { pt3dadd( -113.102, 179.81, -177.88, 0.37 ) }
    dend_77 { pt3dadd( -113.089, 180.448, -178.653, 0.37 ) }
    dend_77 { pt3dadd( -113.048, 181.324, -179.74, 0.88 ) }
    dend_77 { pt3dadd( -113.016, 181.814, -180.331, 0.88 ) }
    dend_77 { pt3dadd( -112.808, 184.061, -183.536, 0.22 ) }
    dend_77 { pt3dadd( -112.79, 184.686, -184.455, 0.22 ) }
    dend_77 { pt3dadd( -112.807, 185.162, -185.166, 0.96 ) }
    dend_77 { pt3dadd( -112.845, 185.566, -185.786, 1.4 ) }
    dend_77 { pt3dadd( -112.851, 185.609, -185.854, 1.4 ) }
    dend_77 { pt3dadd( -113.388, 188.346, -190.263, 0.22 ) }
    dend_77 { pt3dadd( -113.612, 189.144, -191.566, 0.22 ) }
    dend_77 { pt3dadd( -113.695, 189.376, -191.972, 0.59 ) }
    dend_77 { pt3dadd( -113.762, 189.538, -192.247, 0.59 ) }
    dend_77 { pt3dadd( -114.181, 190.391, -193.855, 0.22 ) }
    dend_77 { pt3dadd( -114.201, 190.425, -193.917, 0.22 ) }
    dend_77 { pt3dadd( -114.565, 190.928, -194.807, 0.81 ) }
    dend_77 { pt3dadd( -114.614, 190.991, -194.935, 0.81 ) }
    dend_77 { pt3dadd( -114.859, 191.295, -195.568, 0.81 ) }
    dend_77 { pt3dadd( -116.276, 192.93, -198.995, 0.22 ) }
    dend_77 { pt3dadd( -116.647, 193.31, -199.769, 0.22 ) }
    dend_77 { pt3dadd( -116.796, 193.45, -200.069, 0.59 ) }
    dend_77 { pt3dadd( -116.854, 193.504, -200.216, 0.59 ) }
    dend_77 { pt3dadd( -116.935, 193.577, -200.456, 0.59 ) }
    dend_77 { pt3dadd( -116.975, 193.614, -200.588, 0.59 ) }
    dend_77 { pt3dadd( -117.145, 193.79, -201.209, 0.59 ) }
    dend_77 { pt3dadd( -117.613, 194.333, -203.122, 0.96 ) }
    dend_77 { pt3dadd( -118.368, 195.254, -206.159, 0.15 ) }
    dend_77 { pt3dadd( -118.383, 195.272, -206.218, 0.15 ) }
    dend_77 { pt3dadd( -118.627, 195.559, -207.13, 0.15 ) }
    dend_77 { pt3dadd( -118.654, 195.591, -207.222, 0.74 ) }
    dend_77 { pt3dadd( -118.73, 195.686, -207.454, 0.74 ) }
    dend_77 { pt3dadd( -118.934, 195.912, -207.772, 0.74 ) }
    dend_77 { pt3dadd( -119.853, 196.843, -208.434, 0.15 ) }
    dend_77 { pt3dadd( -119.9, 196.888, -208.463, 0.15 ) }
    dend_77 { pt3dadd( -120.373, 197.32, -208.716, 0.15 ) }
    dend_77 { pt3dadd( -120.518, 197.455, -208.802, 0.15 ) }
    dend_77 { pt3dadd( -121.205, 198.078, -209.192, 0.15 ) }
    dend_77 { pt3dadd( -121.291, 198.159, -209.302, 0.15 ) }
    dend_77 { pt3dadd( -121.608, 198.46, -209.852, 0.15 ) }
    dend_77 { pt3dadd( -121.638, 198.489, -209.909, 0.15 ) }
    dend_77 { pt3dadd( -122.1, 198.966, -210.962, 0.88 ) }
    dend_77 { pt3dadd( -122.478, 199.355, -211.9, 1.25 ) }
    dend_77 { pt3dadd( -123.741, 200.635, -215.198, 0.22 ) }
    dend_77 { pt3dadd( -123.776, 200.669, -215.294, 0.22 ) }
    dend_77 { pt3dadd( -124.187, 201.049, -216.42, 0.22 ) }
    dend_77 { pt3dadd( -124.605, 201.419, -217.473, 0.66 ) }
    dend_77 { pt3dadd( -124.667, 201.472, -217.619, 0.66 ) }
    dend_77 { pt3dadd( -124.852, 201.628, -218.04, 0.66 ) }
    dend_77 { pt3dadd( -126.593, 203.085, -221.155, 0.22 ) }
    dend_77 { pt3dadd( -126.662, 203.143, -221.278, 0.22 ) }
    dend_77 { pt3dadd( -126.951, 203.404, -221.902, 0.22 ) }
    dend_77 { pt3dadd( -127.402, 203.85, -222.948, 0.96 ) }
    dend_77 { pt3dadd( -127.436, 203.891, -223.032, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_77 { pt3dadd( -127.776, 204.368, -223.911, 0.96 ) }
    dend_77 { pt3dadd( -127.796, 204.405, -223.967, 0.96 ) }
    dend_77 { pt3dadd( -128.766, 206.442, -226.837, 0.29 ) }
    dend_77 { pt3dadd( -128.781, 206.477, -226.888, 0.29 ) }
    dend_77 { pt3dadd( -129.129, 207.424, -228.133, 0.29 ) }
    dend_77 { pt3dadd( -129.144, 207.467, -228.187, 0.29 ) }
    dend_77 { pt3dadd( -129.479, 208.431, -229.312, 1.03 ) }
    dend_77 { pt3dadd( -129.678, 209.017, -229.897, 1.03 ) }
    dend_77 { pt3dadd( -130.112, 210.331, -230.839, 0.22 ) }
    dend_77 { pt3dadd( -130.348, 210.998, -231.564, 0.22 ) }
    dend_77 { pt3dadd( -130.365, 211.044, -231.618, 0.22 ) }
    dend_77 { pt3dadd( -130.604, 211.64, -232.3, 0.22 ) }
    dend_77 { pt3dadd( -130.774, 212.042, -232.772, 1.03 ) }
    dend_77 { pt3dadd( -130.991, 212.534, -233.354, 1.03 ) }
    dend_77 { pt3dadd( -132.21, 215.227, -236.378, 0.22 ) }
    dend_77 { pt3dadd( -132.915, 216.707, -238.218, 0.22 ) }
    dend_77 { pt3dadd( -132.94, 216.755, -238.278, 0.22 ) }
    dend_77 { pt3dadd( -133.427, 217.613, -239.371, 1.55 ) }
    dend_77 { pt3dadd( -133.681, 218.026, -239.855, 2.06 ) }
    dend_77 { pt3dadd( -133.918, 218.362, -240.228, 2.06 ) }
    dend_77 { pt3dadd( -135.415, 220.188, -241.899, 0.44 ) }
    dend_77 { pt3dadd( -136.022, 220.769, -242.632, 0.22 ) }
    dend_77 { pt3dadd( -136.09, 220.826, -242.713, 0.22 ) }
    dend_77 { pt3dadd( -136.795, 221.312, -243.463, 0.22 ) }
    dend_77 { pt3dadd( -137.325, 221.617, -244.024, 0.22 ) }
    dend_77 { pt3dadd( -137.382, 221.645, -244.126, 0.22 ) }
    dend_77 { pt3dadd( -138.141, 222.086, -246.02, 1.03 ) }
    dend_77 { pt3dadd( -138.16, 222.104, -246.085, 1.03 ) }
    dend_77 { pt3dadd( -138.328, 222.325, -246.761, 1.03 ) }
    dend_77 { pt3dadd( -138.341, 222.35, -246.826, 1.03 ) }
    dend_77 { pt3dadd( -139.217, 224.617, -251.58, 0.29 ) }
    dend_77 { pt3dadd( -139.36, 225.081, -252.392, 0.29 ) }
    dend_77 { pt3dadd( -139.521, 225.744, -253.351, 0.22 ) }
    dend_77 { pt3dadd( -139.625, 226.209, -253.97, 0.22 ) }
    dend_77 { pt3dadd( -139.679, 226.487, -254.294, 0.22 ) }
    dend_77 { pt3dadd( -139.9, 227.539, -255.349, 0.22 ) }
    dend_77 { pt3dadd( -140.185, 228.761, -256.06, 1.03 ) }
    dend_77 { pt3dadd( -140.302, 229.188, -256.365, 1.47 ) }
    dend_77 { pt3dadd( -140.32, 229.24, -256.41, 1.47 ) }
    dend_77 { pt3dadd( -140.523, 229.806, -256.979, 1.69 ) }
    // Section: dend_73, id: dend_73, parent: dend_71 (entry count 40/100)
    dend_73 { pt3dclear() }
    dend_73 { pt3dadd( -137.263, 229.297, -4.18162, 0.29 ) }
    dend_73 { pt3dadd( -138.101, 228.618, -4.89051, 0.29 ) }
    dend_73 { pt3dadd( -138.647, 228.174, -5.35265, 0.29 ) }
    dend_73 { pt3dadd( -138.844, 228.015, -5.51865, 0.66 ) }
    dend_73 { pt3dadd( -139.613, 227.391, -6.16912, 0.74 ) }
    // Section: dend_72, id: dend_72, parent: dend_71 (entry count 45/100)
    dend_72 { pt3dclear() }
    dend_72 { pt3dadd( -137.263, 229.297, -4.18162, 0.22 ) }
    dend_72 { pt3dadd( -137.967, 230.2, -4.41183, 0.22 ) }
    dend_72 { pt3dadd( -138.279, 230.61, -4.50491, 0.22 ) }
    dend_72 { pt3dadd( -138.363, 230.72, -4.53007, 0.22 ) }
    dend_72 { pt3dadd( -138.731, 231.203, -4.63968, 0.22 ) }
    dend_72 { pt3dadd( -138.978, 231.527, -4.71333, 0.66 ) }
    dend_72 { pt3dadd( -139.165, 231.772, -4.7692, 0.66 ) }
    dend_72 { pt3dadd( -139.214, 231.837, -4.7692, 0.66 ) }
    // Section: dend_64, id: dend_64, parent: dend_60 (entry count 53/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( -71.8373, 233.871, -46.5333, 0.74 ) }
    dend_64 { pt3dadd( -72.056, 235.402, -47.749, 0.74 ) }
    dend_64 { pt3dadd( -72.0611, 235.456, -47.7941, 0.74 ) }
    dend_64 { pt3dadd( -72.1239, 236.723, -48.7902, 0.74 ) }
    dend_64 { pt3dadd( -72.1782, 237.357, -49.2175, 1.03 ) }
    dend_64 { pt3dadd( -72.21, 237.611, -49.3379, 1.03 ) }
    dend_64 { pt3dadd( -72.2214, 237.711, -49.379, 1.03 ) }
    dend_64 { pt3dadd( -72.3404, 238.864, -49.7446, 0.81 ) }
    dend_64 { pt3dadd( -72.3783, 239.564, -49.9339, 0.52 ) }
    dend_64 { pt3dadd( -72.4011, 240.883, -50.2282, 0.52 ) }
    dend_64 { pt3dadd( -72.3481, 243.283, -50.8072, 0.52 ) }
    dend_64 { pt3dadd( -72.2515, 244.64, -51.1373, 0.52 ) }
    dend_64 { pt3dadd( -72.2461, 244.709, -51.1529, 0.52 ) }
    dend_64 { pt3dadd( -72.0935, 246.205, -51.4409, 0.52 ) }
    dend_64 { pt3dadd( -72.0807, 246.282, -51.4582, 0.52 ) }
    dend_64 { pt3dadd( -71.7526, 247.237, -51.7283, 0.96 ) }
    dend_64 { pt3dadd( -71.3428, 247.836, -51.9756, 0.96 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 70/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -71.8373, 233.871, -46.5333, 0.66 ) }
    dend_61 { pt3dadd( -71.7921, 234.521, -46.5239, 0.66 ) }
    dend_61 { pt3dadd( -71.751, 235.242, -46.5163, 0.66 ) }
    dend_61 { pt3dadd( -71.6992, 236.258, -46.5077, 0.66 ) }
    dend_61 { pt3dadd( -71.6439, 237.609, -46.4987, 0.59 ) }
    dend_61 { pt3dadd( -71.5959, 238.84, -46.4917, 0.59 ) }
    dend_61 { pt3dadd( -71.5931, 238.91, -46.4914, 0.59 ) }
    dend_61 { pt3dadd( -71.5739, 239.35, -46.4973, 0.59 ) }
    dend_61 { pt3dadd( -71.5712, 239.421, -46.4983, 0.59 ) }
    dend_61 { pt3dadd( -71.5478, 239.964, -46.4842, 0.88 ) }
    dend_61 { pt3dadd( -71.5334, 240.071, -46.4752, 0.88 ) }
    dend_61 { pt3dadd( -71.427, 240.493, -46.3773, 0.88 ) }
    dend_61 { pt3dadd( -71.3959, 240.578, -46.3518, 0.88 ) }
    dend_61 { pt3dadd( -71.2029, 241.295, -46.1512, 0.88 ) }
    dend_61 { pt3dadd( -71.0714, 241.885, -46.0236, 0.88 ) }
    dend_61 { pt3dadd( -71.0559, 241.956, -46.013, 0.88 ) }
    dend_61 { pt3dadd( -70.893, 242.767, -45.9234, 0.29 ) }
    dend_61 { pt3dadd( -70.7234, 243.747, -45.8508, 0.29 ) }
    dend_61 { pt3dadd( -70.4422, 245.538, -45.7791, 0.29 ) }
    dend_61 { pt3dadd( -70.1837, 247.349, -45.7638, 0.29 ) }
    dend_61 { pt3dadd( -70.0803, 248.054, -45.7816, 0.88 ) }
    dend_61 { pt3dadd( -70.0343, 248.37, -45.7954, 0.96 ) }
    dend_61 { pt3dadd( -69.9071, 249.342, -45.863, 0.37 ) }
    dend_61 { pt3dadd( -69.7569, 250.438, -45.901, 0.37 ) }
    dend_61 { pt3dadd( -69.7433, 250.508, -45.9005, 0.37 ) }
    dend_61 { pt3dadd( -69.6166, 251.192, -45.8566, 1.03 ) }
    dend_61 { pt3dadd( -69.4527, 252.034, -45.7618, 1.4 ) }
    dend_61 { pt3dadd( -69.2655, 252.836, -45.6587, 1.4 ) }
    dend_61 { pt3dadd( -69.0501, 253.687, -45.5367, 0.88 ) }
    dend_61 { pt3dadd( -69.0139, 253.833, -45.5221, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_61 { pt3dadd( -68.9575, 254.048, -45.5127, 0.88 ) }
    dend_61 { pt3dadd( -68.7043, 254.971, -45.5561, 0.52 ) }
    dend_61 { pt3dadd( -68.5844, 255.376, -45.6055, 0.74 ) }
    dend_61 { pt3dadd( -68.4112, 255.944, -45.7097, 0.74 ) }
    dend_61 { pt3dadd( -68.1295, 256.93, -45.9371, 0.29 ) }
    dend_61 { pt3dadd( -67.8518, 258.0, -46.2028, 0.29 ) }
    dend_61 { pt3dadd( -67.6606, 258.939, -46.4356, 0.96 ) }
    dend_61 { pt3dadd( -67.6495, 259.017, -46.4532, 0.96 ) }
    dend_61 { pt3dadd( -67.5677, 259.818, -46.595, 1.25 ) }
    dend_61 { pt3dadd( -67.5418, 260.143, -46.6387, 1.25 ) }
    dend_61 { pt3dadd( -67.5158, 260.837, -46.6951, 0.29 ) }
    dend_61 { pt3dadd( -67.5239, 262.068, -46.7615, 0.29 ) }
    dend_61 { pt3dadd( -67.5747, 263.455, -46.788, 0.29 ) }
    dend_61 { pt3dadd( -67.6302, 264.276, -46.8026, 1.18 ) }
    dend_61 { pt3dadd( -67.6441, 264.419, -46.8044, 1.18 ) }
    dend_61 { pt3dadd( -67.6947, 264.846, -46.8062, 1.18 ) }
    dend_61 { pt3dadd( -67.7198, 265.009, -46.804, 1.18 ) }
    dend_61 { pt3dadd( -67.7934, 265.361, -46.8304, 1.18 ) }
    dend_61 { pt3dadd( -67.9241, 265.986, -46.942, 0.44 ) }
    dend_61 { pt3dadd( -67.933, 266.053, -46.9624, 0.44 ) }
    dend_61 { pt3dadd( -67.982, 267.148, -47.3294, 0.44 ) }
    dend_61 { pt3dadd( -67.9803, 267.223, -47.3566, 0.44 ) }
    dend_61 { pt3dadd( -67.8875, 268.129, -47.664, 1.18 ) }
    dend_61 { pt3dadd( -67.7475, 269.171, -47.9775, 1.55 ) }
    dend_61 { pt3dadd( -67.6102, 270.038, -48.2166, 0.22 ) }
    dend_61 { pt3dadd( -67.4802, 270.883, -48.4277, 0.22 ) }
    dend_61 { pt3dadd( -67.4693, 270.954, -48.44, 0.22 ) }
    dend_61 { pt3dadd( -67.316, 272.212, -48.5422, 0.22 ) }
    dend_61 { pt3dadd( -67.2094, 273.386, -48.5508, 0.22 ) }
    dend_61 { pt3dadd( -67.2048, 273.456, -48.5491, 0.22 ) }
    dend_61 { pt3dadd( -67.1833, 273.876, -48.5249, 1.03 ) }
    dend_61 { pt3dadd( -67.1443, 275.167, -48.456, 0.29 ) }
    dend_61 { pt3dadd( -67.1253, 276.297, -48.4042, 0.29 ) }
    dend_61 { pt3dadd( -67.1141, 277.353, -48.3636, 0.29 ) }
    dend_61 { pt3dadd( -67.1113, 277.436, -48.3613, 0.29 ) }
    dend_61 { pt3dadd( -67.0888, 277.895, -48.3662, 0.81 ) }
    dend_61 { pt3dadd( -67.0263, 278.747, -48.4157, 0.81 ) }
    dend_61 { pt3dadd( -66.9611, 279.459, -48.5125, 0.81 ) }
    dend_61 { pt3dadd( -66.9169, 279.904, -48.5787, 0.81 ) }
    dend_61 { pt3dadd( -66.9102, 279.966, -48.586, 0.81 ) }
    dend_61 { pt3dadd( -66.8382, 280.596, -48.6454, 0.88 ) }
    dend_61 { pt3dadd( -66.8177, 280.738, -48.656, 0.88 ) }
    dend_61 { pt3dadd( -66.7563, 281.107, -48.6795, 0.88 ) }
    dend_61 { pt3dadd( -66.6201, 281.95, -48.7218, 1.03 ) }
    dend_61 { pt3dadd( -66.3681, 283.613, -48.7791, 0.29 ) }
    dend_61 { pt3dadd( -66.1607, 285.066, -48.7228, 0.29 ) }
    dend_61 { pt3dadd( -65.9969, 286.241, -48.6493, 0.29 ) }
    dend_61 { pt3dadd( -65.9866, 286.313, -48.6443, 0.29 ) }
    dend_61 { pt3dadd( -65.9061, 286.85, -48.5996, 1.11 ) }
    dend_61 { pt3dadd( -65.7137, 287.993, -48.4719, 1.33 ) }
    dend_61 { pt3dadd( -65.4772, 289.541, -48.1915, 1.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 51/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 171.721, 189.71, 40.1092, 0.44 ) }
    dend_54 { pt3dadd( 172.822, 190.507, 39.9131, 0.44 ) }
    dend_54 { pt3dadd( 173.68, 191.168, 39.7633, 0.52 ) }
    dend_54 { pt3dadd( 173.736, 191.215, 39.7611, 0.52 ) }
    dend_54 { pt3dadd( 174.199, 191.641, 39.8455, 0.96 ) }
    dend_54 { pt3dadd( 174.655, 192.081, 39.9883, 0.29 ) }
    dend_54 { pt3dadd( 175.23, 192.637, 40.2181, 0.29 ) }
    dend_54 { pt3dadd( 175.275, 192.685, 40.2451, 0.29 ) }
    dend_54 { pt3dadd( 175.903, 193.4, 40.723, 0.59 ) }
    dend_54 { pt3dadd( 176.532, 194.099, 41.1909, 0.59 ) }
    dend_54 { pt3dadd( 176.568, 194.138, 41.2182, 0.59 ) }
    dend_54 { pt3dadd( 176.93, 194.472, 41.4494, 0.96 ) }
    dend_54 { pt3dadd( 177.431, 194.816, 41.6485, 0.96 ) }
    dend_54 { pt3dadd( 178.125, 195.221, 41.8142, 0.81 ) }
    dend_54 { pt3dadd( 178.685, 195.508, 41.8936, 0.29 ) }
    dend_54 { pt3dadd( 178.752, 195.538, 41.9006, 0.29 ) }
    dend_54 { pt3dadd( 179.74, 195.954, 42.0097, 0.29 ) }
    dend_54 { pt3dadd( 180.95, 196.404, 42.1459, 0.29 ) }
    dend_54 { pt3dadd( 181.018, 196.426, 42.1602, 0.29 ) }
    dend_54 { pt3dadd( 181.795, 196.633, 42.3738, 1.03 ) }
    dend_54 { pt3dadd( 182.442, 196.775, 42.6302, 1.33 ) }
    dend_54 { pt3dadd( 182.532, 196.787, 42.6736, 1.33 ) }
    dend_54 { pt3dadd( 182.862, 196.796, 42.8628, 1.33 ) }
    dend_54 { pt3dadd( 184.382, 196.726, 43.8157, 0.44 ) }
    dend_54 { pt3dadd( 185.269, 196.646, 44.3529, 0.44 ) }
    dend_54 { pt3dadd( 186.439, 196.515, 45.0157, 0.44 ) }
    dend_54 { pt3dadd( 187.298, 196.413, 45.5035, 0.44 ) }
    dend_54 { pt3dadd( 187.768, 196.364, 45.7478, 0.44 ) }
    dend_54 { pt3dadd( 187.897, 196.352, 45.8062, 0.44 ) }
    dend_54 { pt3dadd( 188.371, 196.338, 45.9217, 0.81 ) }
    dend_54 { pt3dadd( 189.07, 196.499, 45.9979, 0.81 ) }
    dend_54 { pt3dadd( 189.211, 196.555, 45.9984, 0.81 ) }
    dend_54 { pt3dadd( 189.793, 196.799, 45.9984, 0.81 ) }
    dend_54 { pt3dadd( 189.887, 196.834, 45.9984, 0.81 ) }
    dend_54 { pt3dadd( 190.906, 197.158, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 191.836, 197.376, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 191.935, 197.393, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 192.896, 197.51, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 193.331, 197.53, 45.9984, 0.66 ) }
    dend_54 { pt3dadd( 193.402, 197.528, 45.9984, 0.66 ) }
    dend_54 { pt3dadd( 193.949, 197.408, 45.9984, 0.88 ) }
    dend_54 { pt3dadd( 194.148, 197.334, 45.9984, 0.88 ) }
    dend_54 { pt3dadd( 194.364, 197.245, 45.9984, 0.88 ) }
    dend_54 { pt3dadd( 194.841, 197.033, 45.9984, 0.29 ) }
    dend_54 { pt3dadd( 194.897, 197.01, 46.0002, 0.29 ) }
    dend_54 { pt3dadd( 195.759, 196.668, 46.042, 0.29 ) }
    dend_54 { pt3dadd( 195.913, 196.613, 46.0511, 0.29 ) }
    dend_54 { pt3dadd( 196.633, 196.44, 46.0997, 0.29 ) }
    dend_54 { pt3dadd( 196.693, 196.427, 46.1041, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_54 { pt3dadd( 198.036, 196.173, 46.2134, 0.29 ) }
    dend_54 { pt3dadd( 198.106, 196.163, 46.2195, 0.29 ) }
    dend_54 { pt3dadd( 198.972, 196.119, 46.3069, 0.29 ) }
    dend_54 { pt3dadd( 200.112, 196.111, 46.4288, 2.14 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 4/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 171.721, 189.71, 40.1092, 0.22 ) }
    dend_53 { pt3dadd( 172.319, 189.333, 40.1224, 0.22 ) }
    dend_53 { pt3dadd( 173.208, 188.777, 40.1424, 0.22 ) }
    dend_53 { pt3dadd( 174.715, 187.847, 40.176, 0.22 ) }
    dend_53 { pt3dadd( 175.737, 187.219, 40.1987, 0.22 ) }
    dend_53 { pt3dadd( 177.249, 186.289, 40.2323, 0.22 ) }
    dend_53 { pt3dadd( 177.394, 186.199, 40.2356, 0.44 ) }
    dend_53 { pt3dadd( 177.527, 186.127, 40.2421, 0.44 ) }
    dend_53 { pt3dadd( 177.941, 185.925, 40.2608, 0.44 ) }
    dend_53 { pt3dadd( 178.003, 185.893, 40.2618, 0.44 ) }
    // Section: dend_32, id: dend_32, parent: dend_4 (entry count 14/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 33.6312, 121.429, -61.0575, 0.66 ) }
    dend_32 { pt3dadd( 34.4197, 122.322, -61.054, 0.66 ) }
    dend_32 { pt3dadd( 35.2225, 123.2, -61.0474, 0.66 ) }
    dend_32 { pt3dadd( 36.0441, 124.062, -61.1091, 0.52 ) }
    dend_32 { pt3dadd( 36.5827, 124.621, -61.1706, 0.52 ) }
    dend_32 { pt3dadd( 37.0472, 125.121, -61.2356, 1.11 ) }
    dend_32 { pt3dadd( 37.0991, 125.182, -61.2439, 1.11 ) }
    dend_32 { pt3dadd( 37.6514, 125.821, -61.3494, 1.11 ) }
    dend_32 { pt3dadd( 38.2991, 126.726, -61.51, 0.96 ) }
    dend_32 { pt3dadd( 38.3364, 126.796, -61.5221, 0.96 ) }
    dend_32 { pt3dadd( 38.5854, 127.39, -61.6088, 0.96 ) }
    dend_32 { pt3dadd( 38.9502, 128.339, -61.7244, 0.96 ) }
    dend_32 { pt3dadd( 39.0001, 128.471, -61.7367, 0.96 ) }
    dend_32 { pt3dadd( 39.3511, 129.456, -61.7872, 0.96 ) }
    dend_32 { pt3dadd( 39.3984, 129.591, -61.7872, 0.96 ) }
    dend_32 { pt3dadd( 39.7392, 130.457, -61.7872, 1.4 ) }
    dend_32 { pt3dadd( 39.9642, 130.93, -61.7872, 1.69 ) }
    dend_32 { pt3dadd( 40.029, 131.055, -61.7872, 1.69 ) }
    dend_32 { pt3dadd( 40.3651, 131.701, -61.7872, 1.69 ) }
    dend_32 { pt3dadd( 40.4615, 131.901, -61.7909, 1.69 ) }
    dend_32 { pt3dadd( 40.8063, 132.683, -61.8156, 1.69 ) }
    dend_32 { pt3dadd( 41.1795, 133.737, -61.8604, 0.88 ) }
    dend_32 { pt3dadd( 41.4195, 134.593, -61.9022, 0.88 ) }
    dend_32 { pt3dadd( 41.4342, 134.664, -61.9058, 0.88 ) }
    dend_32 { pt3dadd( 41.5456, 135.485, -61.9497, 0.66 ) }
    dend_32 { pt3dadd( 41.5508, 135.555, -61.9535, 0.66 ) }
    dend_32 { pt3dadd( 41.5512, 136.545, -62.0047, 0.66 ) }
    dend_32 { pt3dadd( 41.551, 136.845, -62.0185, 0.66 ) }
    dend_32 { pt3dadd( 41.5613, 137.68, -62.0478, 0.66 ) }
    dend_32 { pt3dadd( 41.5833, 138.199, -62.0509, 1.03 ) }
    dend_32 { pt3dadd( 41.5865, 138.27, -62.049, 1.03 ) }
    dend_32 { pt3dadd( 41.5835, 139.067, -61.9343, 1.03 ) }
    dend_32 { pt3dadd( 41.5558, 139.845, -61.7467, 1.03 ) }
    dend_32 { pt3dadd( 41.5131, 140.446, -61.5733, 1.33 ) }
    dend_32 { pt3dadd( 41.4428, 141.106, -61.3714, 0.88 ) }
    dend_32 { pt3dadd( 41.3218, 142.007, -61.0967, 0.88 ) }
    dend_32 { pt3dadd( 41.0874, 143.512, -60.6454, 0.59 ) }
    dend_32 { pt3dadd( 41.0761, 143.579, -60.6263, 0.59 ) }
    dend_32 { pt3dadd( 40.8682, 144.789, -60.302, 0.59 ) }
    dend_32 { pt3dadd( 40.7479, 145.738, -60.0814, 0.59 ) }
    dend_32 { pt3dadd( 40.7189, 146.045, -60.0344, 0.88 ) }
    dend_32 { pt3dadd( 40.7155, 146.257, -60.023, 0.88 ) }
    dend_32 { pt3dadd( 40.7543, 147.137, -60.047, 0.88 ) }
    dend_32 { pt3dadd( 40.7593, 147.206, -60.0488, 0.88 ) }
    dend_32 { pt3dadd( 40.8496, 147.989, -60.0693, 0.88 ) }
    dend_32 { pt3dadd( 40.9722, 148.909, -60.0915, 0.66 ) }
    dend_32 { pt3dadd( 41.2042, 150.573, -60.1259, 0.66 ) }
    dend_32 { pt3dadd( 41.3143, 151.398, -60.14, 1.33 ) }
    dend_32 { pt3dadd( 41.4175, 152.275, -60.1346, 1.69 ) }
    dend_32 { pt3dadd( 41.4895, 153.031, -60.1166, 1.92 ) }
    dend_32 { pt3dadd( 41.5564, 153.728, -60.0854, 2.21 ) }
    dend_32 { pt3dadd( 41.6605, 154.731, -59.9943, 2.28 ) }
    dend_32 { pt3dadd( 41.7779, 155.769, -59.8697, 2.28 ) }
    dend_32 { pt3dadd( 41.9435, 156.902, -59.7093, 1.25 ) }
    dend_32 { pt3dadd( 42.0701, 157.559, -59.6019, 0.81 ) }
    dend_32 { pt3dadd( 42.2668, 158.377, -59.4654, 0.59 ) }
    dend_32 { pt3dadd( 42.5612, 159.342, -59.3177, 0.59 ) }
    dend_32 { pt3dadd( 42.6148, 159.482, -59.2987, 0.59 ) }
    dend_32 { pt3dadd( 42.9521, 160.198, -59.2255, 0.88 ) }
    dend_32 { pt3dadd( 43.3284, 160.916, -59.1771, 0.88 ) }
    dend_32 { pt3dadd( 44.0448, 162.26, -59.1168, 0.59 ) }
    dend_32 { pt3dadd( 44.6838, 163.517, -59.0901, 0.59 ) }
    dend_32 { pt3dadd( 45.0451, 164.264, -59.093, 0.59 ) }
    dend_32 { pt3dadd( 45.5446, 165.322, -59.0994, 0.52 ) }
    dend_32 { pt3dadd( 45.6045, 165.452, -59.1006, 0.52 ) }
    dend_32 { pt3dadd( 46.3048, 166.943, -59.1146, 0.52 ) }
    dend_32 { pt3dadd( 46.5888, 167.544, -59.1201, 1.03 ) }
    dend_32 { pt3dadd( 46.8556, 168.146, -59.1247, 1.03 ) }
    dend_32 { pt3dadd( 46.8928, 168.239, -59.1259, 1.03 ) }
    dend_32 { pt3dadd( 47.2748, 169.19, -59.141, 1.03 ) }
    dend_32 { pt3dadd( 47.3443, 169.348, -59.1447, 1.03 ) }
    dend_32 { pt3dadd( 47.574, 169.823, -59.16, 1.03 ) }
    dend_32 { pt3dadd( 47.6125, 169.896, -59.1626, 1.03 ) }
    dend_32 { pt3dadd( 48.1275, 170.821, -59.1963, 0.29 ) }
    dend_32 { pt3dadd( 48.2781, 171.069, -59.2042, 0.59 ) }
    dend_32 { pt3dadd( 48.6942, 171.689, -59.2195, 0.88 ) }
    dend_32 { pt3dadd( 49.2422, 172.486, -59.2348, 0.81 ) }
    dend_32 { pt3dadd( 49.3184, 172.619, -59.2363, 0.81 ) }
    dend_32 { pt3dadd( 49.6591, 173.294, -59.2399, 0.81 ) }
    dend_32 { pt3dadd( 50.245, 174.526, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 50.9414, 176.049, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 51.0046, 176.188, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 51.9965, 178.444, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 52.4156, 179.422, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 52.6958, 180.088, -59.2399, 0.37 ) }
    dend_32 { pt3dadd( 52.7828, 180.299, -59.2399, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_32 { pt3dadd( 53.0497, 180.903, -59.2399, 0.81 ) }
    dend_32 { pt3dadd( 53.4095, 181.609, -59.2399, 1.4 ) }
    dend_32 { pt3dadd( 53.873, 182.411, -59.2431, 1.69 ) }
    dend_32 { pt3dadd( 53.9989, 182.643, -59.2446, 1.69 ) }
    dend_32 { pt3dadd( 54.4615, 183.549, -59.252, 1.18 ) }
    dend_32 { pt3dadd( 54.9618, 184.575, -59.2615, 0.81 ) }
    dend_32 { pt3dadd( 55.4426, 185.619, -59.2722, 0.66 ) }
    dend_32 { pt3dadd( 55.8443, 186.524, -59.2824, 0.52 ) }
    dend_32 { pt3dadd( 56.229, 187.449, -59.2934, 0.52 ) }
    dend_32 { pt3dadd( 56.255, 187.515, -59.2942, 0.52 ) }
    dend_32 { pt3dadd( 56.3909, 187.933, -59.2992, 0.81 ) }
    dend_32 { pt3dadd( 56.5605, 188.503, -59.3051, 0.81 ) }
    dend_32 { pt3dadd( 56.5842, 188.582, -59.3056, 0.81 ) }
    dend_32 { pt3dadd( 56.7101, 188.983, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 56.731, 189.063, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 56.9583, 190.346, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 57.0135, 191.176, -59.3056, 0.29 ) }
    dend_32 { pt3dadd( 57.0064, 191.643, -59.3056, 0.52 ) }
    dend_32 { pt3dadd( 56.9663, 192.584, -59.3056, 0.52 ) }
    dend_32 { pt3dadd( 56.8995, 193.383, -59.3056, 0.52 ) }
    dend_32 { pt3dadd( 56.7932, 194.257, -59.3056, 0.59 ) }
    dend_32 { pt3dadd( 56.6167, 195.08, -59.3056, 0.59 ) }
    dend_32 { pt3dadd( 56.5907, 195.148, -59.3056, 0.59 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 23/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 33.6312, 121.429, -61.0575, 1.11 ) }
    dend_5 { pt3dadd( 36.6119, 123.779, -65.0805, 1.11 ) }
    dend_5 { pt3dadd( 37.0749, 124.144, -65.7054, 1.11 ) }
    dend_5 { pt3dadd( 37.883, 124.782, -66.796, 1.99 ) }
    dend_5 { pt3dadd( 38.3113, 125.119, -67.3741, 2.28 ) }
    dend_5 { pt3dadd( 38.782, 125.49, -68.0094, 2.28 ) }
    dend_5 { pt3dadd( 39.5311, 126.081, -69.0205, 0.81 ) }
    // Section: dend_146, id: dend_146, parent: dend_144 (entry count 30/100)
    dend_146 { pt3dclear() }
    dend_146 { pt3dadd( 120.407, -194.283, 3.14088, 0.37 ) }
    dend_146 { pt3dadd( 120.81, -195.21, 3.30854, 0.37 ) }
    dend_146 { pt3dadd( 121.108, -195.874, 3.42016, 0.37 ) }
    dend_146 { pt3dadd( 121.235, -196.123, 3.46058, 0.59 ) }
    dend_146 { pt3dadd( 121.344, -196.308, 3.51922, 0.59 ) }
    dend_146 { pt3dadd( 121.809, -196.977, 3.90781, 0.59 ) }
    dend_146 { pt3dadd( 122.268, -197.55, 4.38629, 0.59 ) }
    dend_146 { pt3dadd( 122.303, -197.592, 4.42991, 0.59 ) }
    dend_146 { pt3dadd( 122.579, -197.969, 4.84558, 0.88 ) }
    dend_146 { pt3dadd( 123.117, -198.83, 5.78364, 1.18 ) }
    dend_146 { pt3dadd( 123.606, -199.707, 6.7455, 0.52 ) }
    dend_146 { pt3dadd( 123.925, -200.363, 7.49052, 0.52 ) }
    dend_146 { pt3dadd( 124.171, -200.97, 8.15033, 0.44 ) }
    dend_146 { pt3dadd( 124.415, -201.686, 8.85613, 0.37 ) }
    dend_146 { pt3dadd( 124.583, -202.3, 9.39963, 0.37 ) }
    dend_146 { pt3dadd( 124.612, -202.434, 9.49338, 0.37 ) }
    dend_146 { pt3dadd( 124.656, -202.668, 9.61923, 0.81 ) }
    dend_146 { pt3dadd( 124.779, -203.23, 9.89172, 0.81 ) }
    dend_146 { pt3dadd( 124.805, -203.294, 9.93381, 0.81 ) }
    dend_146 { pt3dadd( 125.163, -203.941, 10.4672, 0.59 ) }
    dend_146 { pt3dadd( 125.195, -203.982, 10.515, 0.59 ) }
    dend_146 { pt3dadd( 125.574, -204.4, 11.0962, 0.59 ) }
    dend_146 { pt3dadd( 125.649, -204.465, 11.1965, 0.59 ) }
    dend_146 { pt3dadd( 126.395, -204.975, 12.1097, 0.52 ) }
    dend_146 { pt3dadd( 126.455, -205.009, 12.1903, 0.52 ) }
    dend_146 { pt3dadd( 127.422, -205.426, 13.3951, 0.52 ) }
    dend_146 { pt3dadd( 127.461, -205.441, 13.4393, 0.52 ) }
    dend_146 { pt3dadd( 128.159, -205.663, 14.1764, 0.52 ) }
    dend_146 { pt3dadd( 128.207, -205.681, 14.2243, 0.52 ) }
    dend_146 { pt3dadd( 129.243, -206.093, 15.1469, 1.25 ) }
    dend_146 { pt3dadd( 129.98, -206.441, 15.7369, 1.92 ) }
    dend_146 { pt3dadd( 130.498, -206.729, 16.1014, 1.92 ) }
    dend_146 { pt3dadd( 130.575, -206.773, 16.153, 1.92 ) }
    dend_146 { pt3dadd( 131.717, -207.469, 16.8605, 0.52 ) }
    dend_146 { pt3dadd( 131.78, -207.508, 16.892, 0.52 ) }
    dend_146 { pt3dadd( 132.628, -208.018, 17.1825, 0.37 ) }
    dend_146 { pt3dadd( 132.687, -208.052, 17.1994, 0.37 ) }
    dend_146 { pt3dadd( 132.937, -208.181, 17.2394, 0.81 ) }
    dend_146 { pt3dadd( 133.395, -208.412, 17.262, 1.11 ) }
    dend_146 { pt3dadd( 133.791, -208.607, 17.2948, 1.11 ) }
    dend_146 { pt3dadd( 133.986, -208.708, 17.3267, 1.11 ) }
    dend_146 { pt3dadd( 134.751, -209.129, 17.5023, 0.29 ) }
    dend_146 { pt3dadd( 135.853, -209.775, 17.7954, 0.29 ) }
    dend_146 { pt3dadd( 136.678, -210.302, 18.1866, 0.29 ) }
    dend_146 { pt3dadd( 137.784, -211.055, 18.9295, 0.81 ) }
    dend_146 { pt3dadd( 138.098, -211.28, 19.1976, 0.81 ) }
    dend_146 { pt3dadd( 138.184, -211.345, 19.289, 0.81 ) }
    dend_146 { pt3dadd( 138.637, -211.689, 19.8851, 0.81 ) }
    dend_146 { pt3dadd( 139.755, -212.517, 21.5932, 0.81 ) }
    dend_146 { pt3dadd( 139.794, -212.542, 21.6466, 0.81 ) }
    dend_146 { pt3dadd( 140.114, -212.705, 21.9203, 0.81 ) }
    dend_146 { pt3dadd( 140.172, -212.729, 21.9542, 0.81 ) }
    dend_146 { pt3dadd( 140.734, -212.94, 22.2221, 0.52 ) }
    dend_146 { pt3dadd( 141.08, -213.054, 22.3104, 0.52 ) }
    dend_146 { pt3dadd( 141.806, -213.279, 22.3104, 0.52 ) }
    dend_146 { pt3dadd( 142.52, -213.507, 22.3104, 1.18 ) }
    dend_146 { pt3dadd( 143.127, -213.712, 22.3104, 1.47 ) }
    // Section: dend_145, id: dend_145, parent: dend_144 (entry count 87/100)
    dend_145 { pt3dclear() }
    dend_145 { pt3dadd( 120.407, -194.283, 3.14088, 0.22 ) }
    dend_145 { pt3dadd( 121.956, -194.118, 4.15439, 0.22 ) }
    dend_145 { pt3dadd( 122.319, -194.079, 4.39203, 0.59 ) }
    dend_145 { pt3dadd( 122.622, -194.047, 4.59028, 0.88 ) }
    dend_145 { pt3dadd( 122.824, -194.026, 4.723, 0.88 ) }
    dend_145 { pt3dadd( 123.208, -193.985, 4.97397, 0.88 ) }
    // Section: dend_141, id: dend_141, parent: dend_133 (entry count 93/100)
    dend_141 { pt3dclear() }
    dend_141 { pt3dadd( 101.48, -188.197, -1.58644, 0.29 ) }
    dend_141 { pt3dadd( 101.438, -190.253, -4.08444, 0.29 ) }
    dend_141 { pt3dadd( 101.494, -191.429, -5.20132, 0.29 ) }
    dend_141 { pt3dadd( 101.5, -191.486, -5.24142, 0.29 ) }
    dend_141 { pt3dadd( 101.643, -192.552, -5.87094, 0.29 ) }
    dend_141 { pt3dadd( 101.783, -193.424, -6.3593, 0.88 ) }
    dend_141 { pt3dadd( 101.858, -193.891, -6.59923, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_141 { pt3dadd( 101.927, -194.253, -6.69239, 1.47 ) }
    dend_141 { pt3dadd( 102.067, -195.261, -6.91074, 1.33 ) }
    dend_141 { pt3dadd( 102.075, -195.407, -6.95111, 1.33 ) }
    dend_141 { pt3dadd( 102.053, -196.362, -7.31896, 1.11 ) }
    dend_141 { pt3dadd( 102.015, -197.089, -7.64795, 0.37 ) }
    dend_141 { pt3dadd( 101.974, -197.789, -8.0112, 0.37 ) }
    dend_141 { pt3dadd( 101.938, -198.433, -8.36983, 0.37 ) }
    dend_141 { pt3dadd( 101.88, -199.381, -8.93336, 0.37 ) }
    dend_141 { pt3dadd( 101.86, -200.373, -9.42725, 0.37 ) }
    dend_141 { pt3dadd( 101.863, -200.58, -9.51229, 0.66 ) }
    dend_141 { pt3dadd( 101.878, -200.718, -9.57182, 0.66 ) }
    dend_141 { pt3dadd( 101.997, -201.31, -9.81538, 0.66 ) }
    dend_141 { pt3dadd( 102.015, -201.375, -9.83868, 0.66 ) }
    dend_141 { pt3dadd( 102.435, -203.001, -10.2633, 0.66 ) }
    dend_141 { pt3dadd( 102.451, -203.068, -10.2776, 0.66 ) }
    dend_141 { pt3dadd( 102.643, -203.992, -10.568, 0.52 ) }
    dend_141 { pt3dadd( 102.716, -204.355, -10.7025, 0.52 ) }
    dend_141 { pt3dadd( 102.729, -204.429, -10.7333, 0.52 ) }
    dend_141 { pt3dadd( 102.783, -204.695, -10.8704, 0.81 ) }
    dend_141 { pt3dadd( 102.957, -205.435, -11.3422, 0.81 ) }
    dend_141 { pt3dadd( 103.349, -206.879, -12.2845, 0.44 ) }
    dend_141 { pt3dadd( 103.477, -207.306, -12.5592, 0.74 ) }
    dend_141 { pt3dadd( 103.5, -207.37, -12.6014, 0.74 ) }
    dend_141 { pt3dadd( 103.903, -208.251, -13.1768, 0.59 ) }
    dend_141 { pt3dadd( 104.347, -208.975, -13.7104, 0.29 ) }
    dend_141 { pt3dadd( 104.596, -209.271, -13.9457, 0.29 ) }
    dend_141 { pt3dadd( 104.842, -209.497, -14.1149, 0.74 ) }
    dend_141 { pt3dadd( 105.163, -209.779, -14.3526, 0.96 ) }
    dend_141 { pt3dadd( 105.67, -210.215, -14.7181, 1.25 ) }
    dend_141 { pt3dadd( 106.347, -210.833, -15.2132, 0.96 ) }
    dend_141 { pt3dadd( 106.722, -211.258, -15.616, 0.96 ) }
    dend_141 { pt3dadd( 106.934, -211.591, -15.9602, 0.74 ) }
    dend_141 { pt3dadd( 107.265, -212.53, -16.9384, 0.37 ) }
    dend_141 { pt3dadd( 107.304, -212.959, -17.3977, 0.37 ) }
    dend_141 { pt3dadd( 107.21, -213.498, -18.0028, 0.37 ) }
    dend_141 { pt3dadd( 106.877, -214.603, -19.1829, 0.37 ) }
    dend_141 { pt3dadd( 106.789, -214.863, -19.4488, 0.88 ) }
    dend_141 { pt3dadd( 106.524, -215.811, -20.335, 0.74 ) }
    dend_141 { pt3dadd( 106.308, -216.763, -21.1386, 0.29 ) }
    dend_141 { pt3dadd( 106.173, -217.734, -21.9559, 0.29 ) }
    dend_141 { pt3dadd( 106.133, -218.833, -22.8311, 0.29 ) }
    dend_141 { pt3dadd( 106.14, -219.557, -23.3491, 0.29 ) }
    dend_141 { pt3dadd( 106.157, -220.653, -24.0817, 0.29 ) }
    dend_141 { pt3dadd( 106.155, -220.716, -24.118, 0.29 ) }
    dend_141 { pt3dadd( 106.132, -221.436, -24.4849, 0.74 ) }
    dend_141 { pt3dadd( 106.115, -222.062, -24.7654, 0.81 ) }
    dend_141 { pt3dadd( 105.999, -223.046, -25.1705, 0.74 ) }
    dend_141 { pt3dadd( 105.867, -224.025, -25.4885, 0.74 ) }
    dend_141 { pt3dadd( 105.755, -224.974, -25.7142, 1.47 ) }
    dend_141 { pt3dadd( 105.682, -226.044, -25.8876, 0.52 ) }
    dend_141 { pt3dadd( 105.648, -227.384, -26.018, 0.52 ) }
    dend_141 { pt3dadd( 105.664, -228.034, -26.0556, 0.52 ) }
    dend_141 { pt3dadd( 105.791, -230.262, -26.0824, 0.52 ) }
    dend_141 { pt3dadd( 105.835, -231.051, -26.084, 1.33 ) }
    dend_141 { pt3dadd( 105.854, -231.864, -26.073, 1.92 ) }
    dend_141 { pt3dadd( 105.827, -232.243, -26.0636, 2.06 ) }
    dend_141 { pt3dadd( 105.707, -233.12, -26.0644, 0.96 ) }
    dend_141 { pt3dadd( 105.516, -234.051, -26.0929, 0.59 ) }
    dend_141 { pt3dadd( 105.241, -234.953, -26.1503, 0.52 ) }
    dend_141 { pt3dadd( 104.891, -236.003, -26.296, 0.52 ) }
    dend_141 { pt3dadd( 104.392, -237.439, -26.567, 0.52 ) }
    dend_141 { pt3dadd( 104.344, -237.587, -26.6008, 0.74 ) }
    dend_141 { pt3dadd( 104.188, -238.173, -26.7926, 0.74 ) }
    dend_141 { pt3dadd( 104.031, -238.899, -27.0855, 0.29 ) }
    dend_141 { pt3dadd( 103.871, -240.087, -27.6941, 0.29 ) }
    dend_141 { pt3dadd( 103.866, -240.158, -27.7359, 0.29 ) }
    dend_141 { pt3dadd( 103.834, -240.737, -28.0798, 0.29 ) }
    dend_141 { pt3dadd( 103.744, -241.97, -28.7973, 0.29 ) }
    dend_141 { pt3dadd( 103.615, -243.186, -29.4712, 0.29 ) }
    dend_141 { pt3dadd( 103.464, -244.463, -30.085, 1.18 ) }
    dend_141 { pt3dadd( 103.364, -245.134, -30.3626, 1.84 ) }
    dend_141 { pt3dadd( 103.24, -245.881, -30.642, 1.69 ) }
    dend_141 { pt3dadd( 102.92, -247.404, -31.1452, 0.37 ) }
    dend_141 { pt3dadd( 102.756, -248.108, -31.3373, 0.37 ) }
    dend_141 { pt3dadd( 102.41, -249.556, -31.6974, 0.37 ) }
    dend_141 { pt3dadd( 102.391, -249.632, -31.7128, 0.37 ) }
    dend_141 { pt3dadd( 102.125, -250.692, -31.9229, 0.37 ) }
    dend_141 { pt3dadd( 101.948, -251.394, -32.0723, 0.37 ) }
    dend_141 { pt3dadd( 101.872, -251.658, -32.1374, 0.81 ) }
    dend_141 { pt3dadd( 101.854, -251.714, -32.1603, 0.81 ) }
    dend_141 { pt3dadd( 101.669, -252.107, -32.4854, 0.29 ) }
    dend_141 { pt3dadd( 101.516, -252.437, -32.7791, 0.29 ) }
    dend_141 { pt3dadd( 101.235, -253.031, -33.3416, 0.52 ) }
    dend_141 { pt3dadd( 100.986, -253.584, -33.8335, 0.74 ) }
    dend_141 { pt3dadd( 100.757, -254.057, -34.22, 0.74 ) }
    dend_141 { pt3dadd( 100.088, -255.369, -35.2047, 0.44 ) }
    dend_141 { pt3dadd( 99.6367, -256.283, -35.7629, 0.44 ) }
    dend_141 { pt3dadd( 99.5275, -256.532, -35.9093, 0.66 ) }
    dend_141 { pt3dadd( 99.3691, -256.958, -36.1318, 0.81 ) }
    dend_141 { pt3dadd( 99.2432, -257.425, -36.3481, 0.81 ) }
    dend_141 { pt3dadd( 99.171, -257.757, -36.4869, 0.52 ) }
    dend_141 { pt3dadd( 98.9165, -259.075, -36.9208, 0.52 ) }
    dend_141 { pt3dadd( 98.6251, -260.664, -37.4437, 0.81 ) }
    dend_141 { pt3dadd( 98.5375, -261.079, -37.5813, 1.18 ) }
    dend_141 { pt3dadd( 98.3882, -261.703, -37.7898, 1.47 ) }
    dend_141 { pt3dadd( 98.1951, -262.486, -38.0526, 1.47 ) }
    dend_141 { pt3dadd( 97.9611, -263.268, -38.3061, 0.88 ) }
    dend_141 { pt3dadd( 97.6834, -263.997, -38.5071, 0.66 ) }
    dend_141 { pt3dadd( 97.3791, -264.698, -38.5815, 0.66 ) }
    dend_141 { pt3dadd( 97.3439, -264.769, -38.5906, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    // Section: dend_134, id: dend_134, parent: dend_133 (entry count 0/100)
    dend_134 { pt3dclear() }
    dend_134 { pt3dadd( 101.48, -188.197, -1.58644, 0.74 ) }
    dend_134 { pt3dadd( 101.506, -188.275, -1.57778, 0.74 ) }
    dend_134 { pt3dadd( 101.792, -189.121, -1.38154, 0.74 ) }
    dend_134 { pt3dadd( 101.906, -189.49, -1.28544, 1.03 ) }
    dend_134 { pt3dadd( 102.066, -190.078, -1.13334, 1.18 ) }
    dend_134 { pt3dadd( 102.083, -190.147, -1.11577, 1.18 ) }
    dend_134 { pt3dadd( 102.324, -191.2, -0.859211, 0.52 ) }
    dend_134 { pt3dadd( 102.475, -191.914, -0.69007, 0.74 ) }
    dend_134 { pt3dadd( 102.578, -192.479, -0.554824, 0.88 ) }
    dend_134 { pt3dadd( 102.661, -192.975, -0.44232, 1.11 ) }
    dend_134 { pt3dadd( 102.673, -193.045, -0.428274, 1.11 ) }
    dend_134 { pt3dadd( 102.788, -193.628, -0.33322, 0.66 ) }
    dend_134 { pt3dadd( 102.964, -194.298, -0.319355, 0.37 ) }
    dend_134 { pt3dadd( 103.305, -195.185, -0.402683, 0.37 ) }
    dend_134 { pt3dadd( 103.406, -195.387, -0.434786, 0.37 ) }
    dend_134 { pt3dadd( 103.801, -195.995, -0.562875, 1.03 ) }
    dend_134 { pt3dadd( 103.893, -196.119, -0.594008, 1.03 ) }
    dend_134 { pt3dadd( 104.797, -197.112, -0.837086, 0.29 ) }
    dend_134 { pt3dadd( 105.323, -197.598, -0.940096, 0.29 ) }
    dend_134 { pt3dadd( 105.378, -197.643, -0.948129, 0.29 ) }
    dend_134 { pt3dadd( 106.294, -198.363, -1.01768, 0.29 ) }
    dend_134 { pt3dadd( 106.416, -198.452, -1.01789, 0.29 ) }
    dend_134 { pt3dadd( 107.215, -199.041, -0.952353, 0.81 ) }
    dend_134 { pt3dadd( 107.878, -199.548, -0.767287, 1.25 ) }
    dend_134 { pt3dadd( 107.959, -199.613, -0.73852, 1.25 ) }
    dend_134 { pt3dadd( 108.451, -200.035, -0.538994, 1.25 ) }
    dend_134 { pt3dadd( 108.499, -200.083, -0.518284, 1.25 ) }
    dend_134 { pt3dadd( 108.736, -200.358, -0.42707, 1.25 ) }
    dend_134 { pt3dadd( 109.42, -201.276, -0.221049, 0.59 ) }
    dend_134 { pt3dadd( 109.459, -201.334, -0.210849, 0.59 ) }
    dend_134 { pt3dadd( 109.728, -201.725, -0.118466, 0.37 ) }
    dend_134 { pt3dadd( 110.185, -202.452, 0.0718805, 0.37 ) }
    dend_134 { pt3dadd( 110.47, -202.939, 0.198832, 0.37 ) }
    dend_134 { pt3dadd( 110.69, -203.316, 0.296796, 0.81 ) }
    dend_134 { pt3dadd( 111.0, -203.856, 0.421628, 0.59 ) }
    dend_134 { pt3dadd( 111.481, -204.661, 0.639687, 0.29 ) }
    dend_134 { pt3dadd( 111.789, -205.142, 0.790565, 0.29 ) }
    dend_134 { pt3dadd( 112.08, -205.525, 0.948784, 0.52 ) }
    dend_134 { pt3dadd( 112.578, -206.114, 1.21241, 0.29 ) }
    dend_134 { pt3dadd( 112.901, -206.449, 1.40048, 0.37 ) }
    dend_134 { pt3dadd( 112.982, -206.517, 1.44462, 0.37 ) }
    dend_134 { pt3dadd( 113.505, -206.893, 1.7028, 0.37 ) }
    dend_134 { pt3dadd( 114.429, -207.445, 2.18089, 0.37 ) }
    dend_134 { pt3dadd( 114.486, -207.474, 2.21112, 0.37 ) }
    dend_134 { pt3dadd( 115.446, -207.904, 2.72584, 0.74 ) }
    dend_134 { pt3dadd( 115.823, -208.057, 2.91834, 1.03 ) }
    dend_134 { pt3dadd( 115.882, -208.079, 2.94854, 1.25 ) }
    dend_134 { pt3dadd( 115.942, -208.106, 2.97647, 1.25 ) }
    dend_134 { pt3dadd( 116.249, -208.29, 3.08748, 1.25 ) }
    dend_134 { pt3dadd( 116.649, -208.592, 3.23304, 0.74 ) }
    dend_134 { pt3dadd( 117.015, -208.921, 3.35452, 0.52 ) }
    dend_134 { pt3dadd( 117.767, -209.664, 3.61346, 0.52 ) }
    dend_134 { pt3dadd( 118.492, -210.395, 3.84615, 0.52 ) }
    dend_134 { pt3dadd( 119.258, -211.212, 4.09061, 0.52 ) }
    dend_134 { pt3dadd( 119.804, -211.837, 4.25873, 0.74 ) }
    dend_134 { pt3dadd( 120.321, -212.456, 4.41743, 0.52 ) }
    dend_134 { pt3dadd( 120.75, -212.992, 4.54126, 0.52 ) }
    dend_134 { pt3dadd( 121.443, -213.863, 4.69682, 0.52 ) }
    dend_134 { pt3dadd( 121.82, -214.303, 4.78221, 1.4 ) }
    dend_134 { pt3dadd( 122.436, -214.989, 4.90606, 1.69 ) }
    // Section: dend_126, id: dend_126, parent: dend_120 (entry count 60/100)
    dend_126 { pt3dclear() }
    dend_126 { pt3dadd( -52.9078, -247.634, 7.03381, 0.29 ) }
    dend_126 { pt3dadd( -54.1212, -247.859, 7.17133, 0.29 ) }
    dend_126 { pt3dadd( -54.1903, -247.872, 7.17916, 0.29 ) }
    dend_126 { pt3dadd( -55.8837, -248.185, 7.37109, 0.29 ) }
    dend_126 { pt3dadd( -55.9549, -248.198, 7.37916, 0.29 ) }
    // Section: dend_121, id: dend_121, parent: dend_120 (entry count 65/100)
    dend_121 { pt3dclear() }
    dend_121 { pt3dadd( -52.9078, -247.634, 7.03381, 0.81 ) }
    dend_121 { pt3dadd( -53.1548, -248.04, 6.97585, 0.81 ) }
    dend_121 { pt3dadd( -53.4326, -248.359, 6.92415, 0.81 ) }
    dend_121 { pt3dadd( -53.8809, -248.752, 6.85714, 0.44 ) }
    dend_121 { pt3dadd( -54.7411, -249.42, 6.74126, 0.44 ) }
    dend_121 { pt3dadd( -55.5888, -250.039, 6.70709, 0.44 ) }
    dend_121 { pt3dadd( -56.3209, -250.583, 6.72264, 0.44 ) }
    dend_121 { pt3dadd( -56.9379, -250.996, 6.76236, 0.81 ) }
    dend_121 { pt3dadd( -57.5775, -251.43, 6.83366, 0.81 ) }
    dend_121 { pt3dadd( -57.6346, -251.47, 6.84303, 0.81 ) }
    dend_121 { pt3dadd( -58.4656, -252.195, 7.05355, 0.29 ) }
    dend_121 { pt3dadd( -58.9402, -252.857, 7.2457, 0.29 ) }
    dend_121 { pt3dadd( -58.9669, -252.921, 7.26025, 0.29 ) }
    dend_121 { pt3dadd( -59.1831, -253.897, 7.41951, 0.29 ) }
    dend_121 { pt3dadd( -59.1924, -253.977, 7.42903, 0.29 ) }
    dend_121 { pt3dadd( -59.2767, -255.023, 7.49222, 0.29 ) }
    dend_121 { pt3dadd( -59.2988, -255.395, 7.49475, 0.66 ) }
    dend_121 { pt3dadd( -59.3331, -256.071, 7.50103, 0.88 ) }
    dend_121 { pt3dadd( -59.3956, -256.981, 7.45195, 0.66 ) }
    dend_121 { pt3dadd( -59.4058, -257.078, 7.4366, 0.66 ) }
    dend_121 { pt3dadd( -59.6111, -258.571, 7.07612, 0.66 ) }
    dend_121 { pt3dadd( -59.7308, -259.149, 6.87844, 0.81 ) }
    dend_121 { pt3dadd( -59.8233, -259.486, 6.73253, 1.11 ) }
    dend_121 { pt3dadd( -60.2527, -260.512, 6.15629, 0.81 ) }
    dend_121 { pt3dadd( -60.6753, -261.13, 5.63062, 0.37 ) }
    dend_121 { pt3dadd( -60.7216, -261.173, 5.58022, 0.37 ) }
    dend_121 { pt3dadd( -61.0385, -261.326, 5.27359, 0.37 ) }
    dend_121 { pt3dadd( -61.1439, -261.364, 5.18709, 0.37 ) }
    dend_121 { pt3dadd( -61.6283, -261.5, 4.86647, 0.37 ) }
    dend_121 { pt3dadd( -62.6238, -261.744, 4.43356, 0.37 ) }
    dend_121 { pt3dadd( -63.2052, -261.917, 4.24592, 0.37 ) }
    dend_121 { pt3dadd( -63.2771, -261.947, 4.2242, 0.37 ) }
    dend_121 { pt3dadd( -63.6685, -262.158, 4.12228, 0.96 ) }
    dend_121 { pt3dadd( -63.7272, -262.195, 4.10923, 0.96 ) }
    dend_121 { pt3dadd( -64.1899, -262.541, 3.99596, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_121 { pt3dadd( -64.7306, -262.992, 3.82586, 1.18 ) }
    dend_121 { pt3dadd( -65.3364, -263.513, 3.57414, 0.96 ) }
    dend_121 { pt3dadd( -65.985, -264.117, 3.26666, 0.74 ) }
    dend_121 { pt3dadd( -66.0375, -264.172, 3.23937, 0.74 ) }
    dend_121 { pt3dadd( -66.7001, -265.035, 2.84248, 0.59 ) }
    dend_121 { pt3dadd( -67.246, -265.965, 2.49169, 0.52 ) }
    dend_121 { pt3dadd( -67.27, -266.019, 2.47877, 0.52 ) }
    dend_121 { pt3dadd( -67.5504, -266.775, 2.38113, 0.52 ) }
    dend_121 { pt3dadd( -67.8207, -267.631, 2.33849, 0.52 ) }
    dend_121 { pt3dadd( -68.2064, -269.014, 2.46407, 0.52 ) }
    dend_121 { pt3dadd( -68.429, -269.896, 2.65489, 0.52 ) }
    dend_121 { pt3dadd( -68.7585, -271.197, 3.00265, 0.66 ) }
    dend_121 { pt3dadd( -68.9463, -271.873, 3.19107, 1.03 ) }
    dend_121 { pt3dadd( -69.1064, -272.404, 3.34966, 1.25 ) }
    dend_121 { pt3dadd( -69.5997, -273.879, 3.81757, 0.74 ) }
    dend_121 { pt3dadd( -69.8912, -274.609, 4.05776, 0.66 ) }
    dend_121 { pt3dadd( -70.4527, -275.772, 4.28963, 0.66 ) }
    dend_121 { pt3dadd( -70.7298, -276.224, 4.3122, 0.96 ) }
    dend_121 { pt3dadd( -70.7778, -276.288, 4.30652, 0.96 ) }
    dend_121 { pt3dadd( -71.0915, -276.613, 4.21705, 0.96 ) }
    dend_121 { pt3dadd( -71.4729, -276.933, 4.04103, 0.74 ) }
    dend_121 { pt3dadd( -72.4896, -277.712, 3.53362, 0.44 ) }
    dend_121 { pt3dadd( -73.0615, -278.191, 3.24861, 0.44 ) }
    dend_121 { pt3dadd( -73.0985, -278.245, 3.22199, 0.44 ) }
    dend_121 { pt3dadd( -73.3048, -278.686, 3.04149, 0.44 ) }
    dend_121 { pt3dadd( -73.4802, -279.165, 2.94646, 0.44 ) }
    dend_121 { pt3dadd( -73.7102, -279.921, 2.90676, 0.44 ) }
    dend_121 { pt3dadd( -74.0424, -280.97, 3.07414, 0.44 ) }
    dend_121 { pt3dadd( -74.4661, -282.154, 3.37865, 0.44 ) }
    dend_121 { pt3dadd( -74.7094, -282.697, 3.58851, 0.44 ) }
    dend_121 { pt3dadd( -75.3944, -284.009, 4.23264, 0.44 ) }
    dend_121 { pt3dadd( -75.4334, -284.069, 4.26991, 0.44 ) }
    dend_121 { pt3dadd( -76.0376, -284.86, 4.86736, 0.37 ) }
    dend_121 { pt3dadd( -76.3337, -285.209, 5.1997, 0.37 ) }
    dend_121 { pt3dadd( -76.7512, -285.737, 5.739, 0.37 ) }
    dend_121 { pt3dadd( -76.8675, -285.933, 5.90971, 0.96 ) }
    dend_121 { pt3dadd( -77.0736, -286.401, 6.20803, 1.33 ) }
    dend_121 { pt3dadd( -77.2084, -286.759, 6.41346, 1.33 ) }
    dend_121 { pt3dadd( -77.4361, -287.461, 6.76064, 1.18 ) }
    dend_121 { pt3dadd( -77.6232, -287.998, 7.02493, 0.59 ) }
    dend_121 { pt3dadd( -77.8485, -288.591, 7.30287, 0.44 ) }
    dend_121 { pt3dadd( -78.13, -289.21, 7.61156, 0.44 ) }
    dend_121 { pt3dadd( -78.4203, -289.758, 7.89816, 0.44 ) }
    dend_121 { pt3dadd( -78.5379, -289.97, 7.99624, 0.44 ) }
    dend_121 { pt3dadd( -78.7904, -290.414, 8.15465, 0.44 ) }
    dend_121 { pt3dadd( -78.8302, -290.502, 8.17766, 0.44 ) }
    dend_121 { pt3dadd( -78.9251, -290.792, 8.22678, 0.44 ) }
    dend_121 { pt3dadd( -79.0561, -291.418, 8.27747, 0.37 ) }
    dend_121 { pt3dadd( -79.1663, -292.291, 8.2873, 0.37 ) }
    dend_121 { pt3dadd( -79.1738, -292.373, 8.28646, 0.37 ) }
    dend_121 { pt3dadd( -79.2858, -293.875, 8.24948, 0.37 ) }
    dend_121 { pt3dadd( -79.2956, -293.989, 8.24492, 0.37 ) }
    dend_121 { pt3dadd( -79.3555, -294.582, 8.21128, 0.37 ) }
    dend_121 { pt3dadd( -79.4254, -295.105, 8.16706, 1.03 ) }
    dend_121 { pt3dadd( -79.5761, -295.888, 8.0465, 1.25 ) }
    dend_121 { pt3dadd( -79.7142, -296.443, 7.93238, 1.55 ) }
    dend_121 { pt3dadd( -79.7962, -296.698, 7.8674, 1.55 ) }
    dend_121 { pt3dadd( -79.9139, -297.04, 7.7756, 1.55 ) }
    dend_121 { pt3dadd( -80.0811, -297.438, 7.6669, 1.4 ) }
    dend_121 { pt3dadd( -80.5725, -298.415, 7.38599, 0.37 ) }
    dend_121 { pt3dadd( -80.8613, -298.92, 7.23878, 0.37 ) }
    dend_121 { pt3dadd( -81.1728, -299.407, 7.11361, 0.37 ) }
    dend_121 { pt3dadd( -81.2174, -299.473, 7.09965, 0.37 ) }
    dend_121 { pt3dadd( -81.6943, -300.137, 6.99459, 0.37 ) }
    dend_121 { pt3dadd( -82.0467, -300.654, 6.93009, 0.74 ) }
    dend_121 { pt3dadd( -82.1995, -300.937, 6.91114, 0.96 ) }
    dend_121 { pt3dadd( -82.4306, -301.563, 6.83502, 0.96 ) }
    dend_121 { pt3dadd( -82.4548, -301.7, 6.81252, 0.96 ) }
    dend_121 { pt3dadd( -82.4779, -302.138, 6.73031, 0.96 ) }
    dend_121 { pt3dadd( -82.4641, -303.079, 6.54208, 0.52 ) }
    dend_121 { pt3dadd( -82.476, -303.896, 6.3852, 0.52 ) }
    dend_121 { pt3dadd( -82.5119, -304.327, 6.30575, 0.52 ) }
    dend_121 { pt3dadd( -82.6569, -305.023, 6.21227, 0.52 ) }
    dend_121 { pt3dadd( -82.8293, -305.503, 6.17555, 0.88 ) }
    dend_121 { pt3dadd( -83.2373, -306.243, 6.16531, 1.18 ) }
    dend_121 { pt3dadd( -83.7598, -306.96, 6.1981, 1.62 ) }
    dend_121 { pt3dadd( -84.0519, -307.302, 6.20232, 1.62 ) }
    dend_121 { pt3dadd( -84.753, -308.049, 6.19345, 0.81 ) }
    dend_121 { pt3dadd( -85.106, -308.398, 6.17506, 0.59 ) }
    dend_121 { pt3dadd( -85.7432, -309.006, 6.11982, 0.59 ) }
    dend_121 { pt3dadd( -85.8159, -309.074, 6.11122, 0.59 ) }
    dend_121 { pt3dadd( -86.4698, -309.68, 6.00419, 0.59 ) }
    dend_121 { pt3dadd( -86.9475, -310.143, 5.89546, 1.69 ) }
    dend_121 { pt3dadd( -87.3545, -310.524, 5.75511, 1.99 ) }
    dend_121 { pt3dadd( -87.9821, -311.095, 5.52013, 1.99 ) }
    // Section: dend_113, id: dend_113, parent: dend_103 (entry count 85/100)
    dend_113 { pt3dclear() }
    dend_113 { pt3dadd( -30.2514, -343.436, 2.82881, 0.74 ) }
    dend_113 { pt3dadd( -31.2485, -344.153, 2.86162, 0.74 ) }
    dend_113 { pt3dadd( -32.3135, -344.977, 2.67143, 0.74 ) }
    dend_113 { pt3dadd( -32.98, -345.497, 2.49249, 0.66 ) }
    dend_113 { pt3dadd( -33.2614, -345.716, 2.40386, 0.66 ) }
    dend_113 { pt3dadd( -33.8285, -346.152, 2.21171, 0.22 ) }
    dend_113 { pt3dadd( -34.6245, -346.742, 1.93527, 0.22 ) }
    dend_113 { pt3dadd( -35.757, -347.442, 1.57603, 0.22 ) }
    dend_113 { pt3dadd( -35.839, -347.49, 1.53655, 0.22 ) }
    dend_113 { pt3dadd( -36.0052, -347.566, 1.44946, 0.81 ) }
    dend_113 { pt3dadd( -36.1377, -347.604, 1.38901, 0.81 ) }
    dend_113 { pt3dadd( -36.4192, -347.614, 1.30384, 0.81 ) }
    dend_113 { pt3dadd( -36.7756, -347.57, 1.22461, 0.96 ) }
    dend_113 { pt3dadd( -37.3748, -347.499, 1.14895, 0.44 ) }
    dend_113 { pt3dadd( -38.1777, -347.441, 1.0369, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_113 { pt3dadd( -38.2479, -347.437, 1.02916, 0.44 ) }
    dend_113 { pt3dadd( -39.2377, -347.391, 0.992381, 0.44 ) }
    dend_113 { pt3dadd( -39.7028, -347.379, 0.998964, 0.81 ) }
    dend_113 { pt3dadd( -40.3958, -347.37, 1.04617, 1.03 ) }
    dend_113 { pt3dadd( -40.8194, -347.356, 1.09911, 1.03 ) }
    dend_113 { pt3dadd( -42.2793, -347.258, 1.34213, 0.52 ) }
    dend_113 { pt3dadd( -43.0758, -347.168, 1.49327, 0.52 ) }
    dend_113 { pt3dadd( -43.1846, -347.154, 1.53015, 0.52 ) }
    dend_113 { pt3dadd( -43.8156, -347.045, 1.79646, 0.52 ) }
    dend_113 { pt3dadd( -44.1933, -346.966, 1.97544, 1.18 ) }
    dend_113 { pt3dadd( -44.7789, -346.841, 2.3266, 1.62 ) }
    dend_113 { pt3dadd( -45.4294, -346.706, 2.78812, 1.62 ) }
    dend_113 { pt3dadd( -46.9901, -346.507, 3.89647, 0.29 ) }
    dend_113 { pt3dadd( -47.5987, -346.499, 4.3212, 0.29 ) }
    dend_113 { pt3dadd( -47.7241, -346.507, 4.40548, 0.29 ) }
    dend_113 { pt3dadd( -49.0129, -346.69, 5.21159, 0.29 ) }
    dend_113 { pt3dadd( -49.083, -346.705, 5.25247, 0.29 ) }
    dend_113 { pt3dadd( -50.2404, -346.995, 5.80724, 0.29 ) }
    dend_113 { pt3dadd( -51.1005, -347.234, 6.05906, 0.29 ) }
    dend_113 { pt3dadd( -51.9026, -347.463, 6.23669, 0.29 ) }
    dend_113 { pt3dadd( -52.2905, -347.568, 6.2587, 0.44 ) }
    dend_113 { pt3dadd( -52.4357, -347.607, 6.24072, 0.44 ) }
    dend_113 { pt3dadd( -53.0406, -347.752, 6.13208, 0.44 ) }
    dend_113 { pt3dadd( -53.3421, -347.815, 6.05971, 0.44 ) }
    dend_113 { pt3dadd( -53.9938, -347.974, 5.89412, 0.44 ) }
    dend_113 { pt3dadd( -55.011, -348.311, 5.62344, 0.81 ) }
    dend_113 { pt3dadd( -55.5371, -348.494, 5.48277, 0.81 ) }
    dend_113 { pt3dadd( -55.5951, -348.515, 5.46964, 0.81 ) }
    dend_113 { pt3dadd( -56.4875, -348.858, 5.29551, 0.81 ) }
    dend_113 { pt3dadd( -57.1122, -349.078, 5.20852, 0.29 ) }
    dend_113 { pt3dadd( -57.7626, -349.291, 5.15225, 0.29 ) }
    dend_113 { pt3dadd( -57.8988, -349.329, 5.1487, 0.29 ) }
    dend_113 { pt3dadd( -59.3422, -349.682, 5.11152, 0.29 ) }
    dend_113 { pt3dadd( -59.4813, -349.716, 5.10819, 0.29 ) }
    dend_113 { pt3dadd( -60.7383, -350.005, 5.07975, 0.29 ) }
    dend_113 { pt3dadd( -60.8663, -350.035, 5.07731, 0.29 ) }
    dend_113 { pt3dadd( -61.5842, -350.219, 5.07731, 0.29 ) }
    dend_113 { pt3dadd( -61.6539, -350.24, 5.07987, 0.29 ) }
    dend_113 { pt3dadd( -62.4783, -350.524, 5.14766, 0.29 ) }
    dend_113 { pt3dadd( -62.5435, -350.55, 5.15577, 0.29 ) }
    dend_113 { pt3dadd( -62.9204, -350.728, 5.22304, 0.52 ) }
    dend_113 { pt3dadd( -63.3365, -350.923, 5.30735, 0.52 ) }
    dend_113 { pt3dadd( -63.9504, -351.198, 5.44508, 0.29 ) }
    dend_113 { pt3dadd( -64.0903, -351.251, 5.47709, 0.29 ) }
    dend_113 { pt3dadd( -64.8065, -351.443, 5.63928, 0.29 ) }
    dend_113 { pt3dadd( -65.1386, -351.502, 5.70485, 0.74 ) }
    dend_113 { pt3dadd( -65.2103, -351.506, 5.71673, 0.74 ) }
    dend_113 { pt3dadd( -65.5801, -351.48, 5.7606, 0.74 ) }
    dend_113 { pt3dadd( -65.6587, -351.462, 5.75642, 0.74 ) }
    dend_113 { pt3dadd( -66.1268, -351.308, 5.6846, 0.74 ) }
    dend_113 { pt3dadd( -66.4867, -351.156, 5.60718, 0.74 ) }
    dend_113 { pt3dadd( -66.5818, -351.114, 5.57624, 0.74 ) }
    dend_113 { pt3dadd( -66.9615, -350.969, 5.43468, 0.52 ) }
    dend_113 { pt3dadd( -67.7531, -350.726, 5.12649, 0.37 ) }
    dend_113 { pt3dadd( -68.2279, -350.624, 4.94671, 0.37 ) }
    dend_113 { pt3dadd( -69.2658, -350.481, 4.55988, 0.37 ) }
    dend_113 { pt3dadd( -70.0292, -350.463, 4.3048, 1.11 ) }
    dend_113 { pt3dadd( -70.4636, -350.519, 4.16389, 1.11 ) }
    dend_113 { pt3dadd( -71.0863, -350.677, 3.9714, 0.59 ) }
    dend_113 { pt3dadd( -71.6195, -350.87, 3.82688, 0.29 ) }
    dend_113 { pt3dadd( -71.7591, -350.933, 3.78762, 0.29 ) }
    dend_113 { pt3dadd( -72.4941, -351.308, 3.60243, 0.29 ) }
    dend_113 { pt3dadd( -73.6595, -351.89, 3.37221, 0.29 ) }
    dend_113 { pt3dadd( -73.7287, -351.922, 3.34843, 0.29 ) }
    dend_113 { pt3dadd( -73.9068, -351.997, 3.27061, 0.96 ) }
    dend_113 { pt3dadd( -73.9691, -352.02, 3.24086, 0.96 ) }
    dend_113 { pt3dadd( -74.9885, -352.366, 2.79005, 0.96 ) }
    dend_113 { pt3dadd( -75.0614, -352.387, 2.76238, 0.96 ) }
    dend_113 { pt3dadd( -76.7017, -352.78, 2.2485, 0.29 ) }
    dend_113 { pt3dadd( -77.7411, -353.023, 1.95099, 0.29 ) }
    dend_113 { pt3dadd( -78.5661, -353.209, 1.73316, 0.29 ) }
    dend_113 { pt3dadd( -79.2424, -353.359, 1.57716, 0.44 ) }
    dend_113 { pt3dadd( -80.165, -353.535, 1.28909, 0.44 ) }
    dend_113 { pt3dadd( -80.2311, -353.546, 1.26648, 0.44 ) }
    dend_113 { pt3dadd( -81.2028, -353.756, 1.0175, 0.44 ) }
    dend_113 { pt3dadd( -81.332, -353.791, 0.966833, 0.44 ) }
    dend_113 { pt3dadd( -82.3844, -354.117, 0.458148, 0.44 ) }
    dend_113 { pt3dadd( -84.1266, -354.711, -0.46317, 0.44 ) }
    dend_113 { pt3dadd( -84.1854, -354.734, -0.495607, 0.44 ) }
    dend_113 { pt3dadd( -85.8358, -355.357, -1.4345, 0.44 ) }
    dend_113 { pt3dadd( -87.3336, -355.946, -2.38518, 0.44 ) }
    dend_113 { pt3dadd( -87.3896, -355.968, -2.42197, 0.44 ) }
    dend_113 { pt3dadd( -88.1887, -356.306, -2.96217, 0.44 ) }
    dend_113 { pt3dadd( -88.8714, -356.602, -3.38693, 0.44 ) }
    dend_113 { pt3dadd( -89.9877, -357.057, -4.12085, 0.29 ) }
    dend_113 { pt3dadd( -90.7756, -357.368, -4.82382, 1.25 ) }
    dend_113 { pt3dadd( -91.2085, -357.568, -5.24323, 1.47 ) }
    dend_113 { pt3dadd( -91.2546, -357.592, -5.29115, 1.47 ) }
    dend_113 { pt3dadd( -91.7278, -357.87, -5.86062, 1.47 ) }
    dend_113 { pt3dadd( -91.7736, -357.899, -5.91934, 1.47 ) }
    dend_113 { pt3dadd( -93.3233, -358.905, -7.84283, 0.29 ) }
    dend_113 { pt3dadd( -93.4098, -358.957, -7.94188, 0.29 ) }
    dend_113 { pt3dadd( -94.2441, -359.408, -8.77343, 0.29 ) }
    dend_113 { pt3dadd( -94.7648, -359.663, -9.28085, 0.81 ) }
    dend_113 { pt3dadd( -94.8136, -359.685, -9.32692, 0.81 ) }
    dend_113 { pt3dadd( -95.3792, -359.931, -9.78234, 0.81 ) }
    dend_113 { pt3dadd( -95.6285, -360.026, -9.9476, 0.81 ) }
    dend_113 { pt3dadd( -96.5854, -360.385, -10.6548, 0.81 ) }
    dend_113 { pt3dadd( -97.9812, -360.868, -11.7829, 0.59 ) }
    dend_113 { pt3dadd( -98.0616, -360.894, -11.8506, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_113 { pt3dadd( -98.4573, -360.999, -12.2526, 0.59 ) }
    dend_113 { pt3dadd( -99.068, -361.113, -12.9869, 0.22 ) }
    dend_113 { pt3dadd( -99.1112, -361.116, -13.0419, 0.22 ) }
    dend_113 { pt3dadd( -99.3282, -361.09, -13.3465, 0.22 ) }
    dend_113 { pt3dadd( -99.7321, -360.991, -13.8465, 0.74 ) }
    dend_113 { pt3dadd( -100.431, -360.834, -14.6401, 0.74 ) }
    dend_113 { pt3dadd( -100.637, -360.789, -14.86, 0.74 ) }
    dend_113 { pt3dadd( -100.972, -360.757, -15.1334, 0.74 ) }
    dend_113 { pt3dadd( -101.765, -360.732, -15.6753, 0.22 ) }
    dend_113 { pt3dadd( -101.828, -360.735, -15.709, 0.22 ) }
    dend_113 { pt3dadd( -102.794, -360.912, -16.0256, 0.22 ) }
    dend_113 { pt3dadd( -102.881, -360.937, -16.0432, 0.22 ) }
    dend_113 { pt3dadd( -103.86, -361.303, -16.1893, 0.22 ) }
    dend_113 { pt3dadd( -103.926, -361.332, -16.1958, 0.22 ) }
    dend_113 { pt3dadd( -104.13, -361.42, -16.2026, 0.66 ) }
    dend_113 { pt3dadd( -105.325, -361.927, -16.2436, 0.29 ) }
    dend_113 { pt3dadd( -105.487, -361.986, -16.249, 0.29 ) }
    dend_113 { pt3dadd( -106.399, -362.278, -16.2762, 0.29 ) }
    dend_113 { pt3dadd( -106.547, -362.317, -16.28, 0.29 ) }
    dend_113 { pt3dadd( -107.434, -362.489, -16.2972, 0.29 ) }
    dend_113 { pt3dadd( -107.504, -362.498, -16.298, 0.29 ) }
    dend_113 { pt3dadd( -108.527, -362.526, -16.298, 0.29 ) }
    dend_113 { pt3dadd( -108.643, -362.525, -16.298, 0.29 ) }
    dend_113 { pt3dadd( -109.144, -362.509, -16.4053, 0.81 ) }
    dend_113 { pt3dadd( -109.623, -362.546, -16.6045, 1.03 ) }
    dend_113 { pt3dadd( -109.795, -362.575, -16.7227, 1.03 ) }
    dend_113 { pt3dadd( -110.069, -362.637, -16.9395, 1.03 ) }
    dend_113 { pt3dadd( -110.121, -362.652, -16.9842, 1.03 ) }
    dend_113 { pt3dadd( -111.807, -363.183, -18.3601, 0.44 ) }
    dend_113 { pt3dadd( -112.638, -363.471, -19.026, 0.44 ) }
    dend_113 { pt3dadd( -113.318, -363.71, -19.5456, 1.11 ) }
    dend_113 { pt3dadd( -113.814, -363.884, -19.899, 0.81 ) }
    dend_113 { pt3dadd( -114.188, -364.016, -20.1465, 1.11 ) }
    dend_113 { pt3dadd( -114.963, -364.219, -20.5446, 1.69 ) }
    dend_113 { pt3dadd( -115.025, -364.233, -20.5749, 1.69 ) }
    dend_113 { pt3dadd( -115.268, -364.29, -20.7313, 1.69 ) }
    dend_113 { pt3dadd( -115.323, -364.307, -20.7725, 1.69 ) }
    dend_113 { pt3dadd( -116.071, -364.656, -21.4301, 1.4 ) }
    dend_113 { pt3dadd( -116.915, -365.306, -22.1079, 1.11 ) }
    dend_113 { pt3dadd( -118.167, -366.474, -23.042, 1.25 ) }
    dend_113 { pt3dadd( -118.589, -366.914, -23.3286, 0.29 ) }
    dend_113 { pt3dadd( -118.64, -366.971, -23.3589, 0.29 ) }
    dend_113 { pt3dadd( -119.439, -367.849, -23.7138, 0.29 ) }
    dend_113 { pt3dadd( -121.054, -369.645, -24.196, 0.29 ) }
    dend_113 { pt3dadd( -121.166, -369.768, -24.2182, 0.66 ) }
    dend_113 { pt3dadd( -121.278, -369.87, -24.2239, 0.66 ) }
    dend_113 { pt3dadd( -121.689, -370.194, -24.2423, 0.66 ) }
    dend_113 { pt3dadd( -122.891, -371.033, -24.1737, 0.22 ) }
    dend_113 { pt3dadd( -123.112, -371.173, -24.111, 0.37 ) }
    dend_113 { pt3dadd( -123.232, -371.245, -24.0542, 0.37 ) }
    dend_113 { pt3dadd( -124.649, -372.114, -23.2942, 0.22 ) }
    dend_113 { pt3dadd( -124.705, -372.148, -23.2626, 0.22 ) }
    dend_113 { pt3dadd( -125.958, -372.901, -22.5078, 0.52 ) }
    dend_113 { pt3dadd( -127.403, -373.788, -21.5838, 0.22 ) }
    dend_113 { pt3dadd( -128.555, -374.469, -20.8588, 0.22 ) }
    dend_113 { pt3dadd( -128.666, -374.531, -20.7926, 0.22 ) }
    dend_113 { pt3dadd( -129.469, -374.94, -20.3369, 0.22 ) }
    dend_113 { pt3dadd( -129.554, -374.979, -20.302, 0.22 ) }
    dend_113 { pt3dadd( -129.952, -375.13, -20.2387, 0.81 ) }
    dend_113 { pt3dadd( -130.031, -375.15, -20.2387, 0.81 ) }
    dend_113 { pt3dadd( -130.71, -375.313, -20.2387, 0.81 ) }
    dend_113 { pt3dadd( -130.777, -375.331, -20.2367, 0.81 ) }
    dend_113 { pt3dadd( -131.385, -375.507, -20.1996, 0.96 ) }
    dend_113 { pt3dadd( -131.452, -375.528, -20.1941, 0.96 ) }
    dend_113 { pt3dadd( -131.743, -375.625, -20.1644, 0.96 ) }
    dend_113 { pt3dadd( -131.82, -375.649, -20.1561, 0.96 ) }
    dend_113 { pt3dadd( -132.332, -375.814, -20.0953, 0.37 ) }
    dend_113 { pt3dadd( -132.441, -375.846, -20.0828, 0.37 ) }
    dend_113 { pt3dadd( -132.991, -375.994, -20.0223, 0.22 ) }
    dend_113 { pt3dadd( -133.06, -376.01, -20.0159, 0.22 ) }
    dend_113 { pt3dadd( -133.628, -376.138, -19.9446, 0.22 ) }
    dend_113 { pt3dadd( -133.793, -376.182, -19.9245, 0.52 ) }
    dend_113 { pt3dadd( -133.93, -376.22, -19.9088, 0.52 ) }
    dend_113 { pt3dadd( -134.211, -376.305, -19.8786, 0.52 ) }
    dend_113 { pt3dadd( -134.37, -376.354, -19.8617, 0.52 ) }
    dend_113 { pt3dadd( -135.197, -376.626, -19.7787, 0.29 ) }
    dend_113 { pt3dadd( -136.42, -377.055, -19.6593, 0.29 ) }
    dend_113 { pt3dadd( -136.488, -377.079, -19.6534, 0.29 ) }
    dend_113 { pt3dadd( -137.704, -377.508, -19.5624, 0.29 ) }
    dend_113 { pt3dadd( -137.847, -377.561, -19.5526, 0.29 ) }
    dend_113 { pt3dadd( -138.142, -377.674, -19.5362, 0.59 ) }
    dend_113 { pt3dadd( -138.219, -377.705, -19.5343, 0.59 ) }
    dend_113 { pt3dadd( -139.023, -378.061, -19.5049, 0.59 ) }
    dend_113 { pt3dadd( -139.164, -378.12, -19.4993, 0.59 ) }
    dend_113 { pt3dadd( -139.594, -378.272, -19.4816, 0.29 ) }
    dend_113 { pt3dadd( -139.664, -378.293, -19.479, 0.29 ) }
    dend_113 { pt3dadd( -140.363, -378.48, -19.4554, 0.29 ) }
    dend_113 { pt3dadd( -140.432, -378.494, -19.4534, 0.29 ) }
    dend_113 { pt3dadd( -141.472, -378.501, -19.4352, 0.22 ) }
    dend_113 { pt3dadd( -142.055, -378.439, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -142.134, -378.423, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -142.226, -378.4, -19.4301, 0.44 ) }
    dend_113 { pt3dadd( -142.471, -378.317, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -144.048, -377.707, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -144.113, -377.675, -19.4301, 0.22 ) }
    dend_113 { pt3dadd( -144.113, -377.675, -19.4301, 0.44 ) }
    // Section: dend_104, id: dend_104, parent: dend_103 (entry count 96/100)
    dend_104 { pt3dclear() }
    dend_104 { pt3dadd( -30.2514, -343.436, 2.82881, 0.81 ) }
    dend_104 { pt3dadd( -29.9765, -343.962, 2.82214, 0.81 ) }
    dend_104 { pt3dadd( -29.9047, -344.095, 2.82052, 0.81 ) }
    dend_104 { pt3dadd( -29.6014, -344.65, 2.81462, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_104 { pt3dadd( -28.9026, -346.065, 2.80103, 0.59 ) }
    dend_104 { pt3dadd( -28.8481, -346.195, 2.79989, 0.59 ) }
    dend_104 { pt3dadd( -28.6444, -346.739, 2.79538, 0.37 ) }
    dend_104 { pt3dadd( -28.618, -346.844, 2.78876, 0.37 ) }
    dend_104 { pt3dadd( -28.5295, -347.728, 2.68656, 0.29 ) }
    dend_104 { pt3dadd( -28.6185, -348.242, 2.59333, 0.52 ) }
    dend_104 { pt3dadd( -28.8153, -348.705, 2.47707, 0.81 ) }
    dend_104 { pt3dadd( -28.8471, -348.765, 2.45651, 0.81 ) }
    dend_104 { pt3dadd( -29.3474, -349.559, 2.11902, 0.52 ) }
    dend_104 { pt3dadd( -29.6657, -350.033, 1.89036, 0.52 ) }
    dend_104 { pt3dadd( -30.0567, -350.572, 1.59256, 0.52 ) }
    dend_104 { pt3dadd( -30.1028, -350.644, 1.55193, 0.52 ) }
    dend_104 { pt3dadd( -30.4924, -351.315, 1.17501, 0.81 ) }
    dend_104 { pt3dadd( -30.5233, -351.38, 1.13421, 0.81 ) }
    dend_104 { pt3dadd( -30.5871, -351.62, 0.998764, 0.81 ) }
    dend_104 { pt3dadd( -30.6054, -351.743, 0.927678, 0.81 ) }
    dend_104 { pt3dadd( -30.6204, -352.009, 0.780196, 0.81 ) }
    dend_104 { pt3dadd( -30.6215, -352.075, 0.749712, 0.81 ) }
    dend_104 { pt3dadd( -30.612, -353.242, 0.351967, 0.29 ) }
    dend_104 { pt3dadd( -30.5975, -354.367, 0.0275374, 0.29 ) }
    dend_104 { pt3dadd( -30.5957, -354.435, 0.0102321, 0.29 ) }
    dend_104 { pt3dadd( -30.5718, -354.749, -0.0563944, 0.59 ) }
    dend_104 { pt3dadd( -30.4661, -355.383, -0.209281, 0.96 ) }
    dend_104 { pt3dadd( -30.2171, -356.196, -0.434681, 1.03 ) }
    dend_104 { pt3dadd( -30.0105, -356.67, -0.566583, 1.25 ) }
    dend_104 { pt3dadd( -29.9445, -356.81, -0.600458, 1.25 ) }
    dend_104 { pt3dadd( -29.6744, -357.377, -0.720921, 1.25 ) }
    dend_104 { pt3dadd( -29.0664, -358.703, -0.978245, 0.88 ) }
    dend_104 { pt3dadd( -28.5274, -359.918, -1.1982, 0.29 ) }
    dend_104 { pt3dadd( -28.2734, -360.58, -1.29938, 0.29 ) }
    dend_104 { pt3dadd( -27.9139, -361.895, -1.43687, 0.29 ) }
    dend_104 { pt3dadd( -27.9001, -361.994, -1.43961, 0.52 ) }
    dend_104 { pt3dadd( -27.9367, -362.509, -1.38943, 0.52 ) }
    dend_104 { pt3dadd( -28.0646, -363.058, -1.24565, 0.52 ) }
    dend_104 { pt3dadd( -28.2279, -363.585, -1.10456, 0.29 ) }
    dend_104 { pt3dadd( -28.2388, -363.647, -1.09589, 0.29 ) }
    dend_104 { pt3dadd( -28.2297, -364.245, -1.09589, 0.29 ) }
    dend_104 { pt3dadd( -28.224, -364.315, -1.09589, 0.29 ) }
    dend_104 { pt3dadd( -28.0955, -365.328, -1.03066, 0.29 ) }
    dend_104 { pt3dadd( -28.0581, -365.584, -1.00068, 0.74 ) }
    dend_104 { pt3dadd( -28.0185, -366.026, -0.925881, 0.81 ) }
    dend_104 { pt3dadd( -28.024, -366.127, -0.90645, 0.81 ) }
    dend_104 { pt3dadd( -28.0944, -366.508, -0.835075, 0.81 ) }
    dend_104 { pt3dadd( -28.2599, -367.233, -0.703623, 0.29 ) }
    dend_104 { pt3dadd( -28.2753, -367.301, -0.692979, 0.29 ) }
    dend_104 { pt3dadd( -28.3515, -367.737, -0.639106, 0.44 ) }
    dend_104 { pt3dadd( -28.493, -368.748, -0.538467, 0.44 ) }
    dend_104 { pt3dadd( -28.5958, -369.692, -0.466613, 0.44 ) }
    dend_104 { pt3dadd( -28.6025, -369.8, -0.46168, 0.44 ) }
    dend_104 { pt3dadd( -28.5968, -370.947, -0.451139, 0.44 ) }
    dend_104 { pt3dadd( -28.5759, -371.48, -0.445243, 0.44 ) }
    dend_104 { pt3dadd( -28.5687, -371.56, -0.441366, 0.44 ) }
    dend_104 { pt3dadd( -28.5335, -372.001, -0.404495, 0.81 ) }
    dend_104 { pt3dadd( -28.5001, -372.648, -0.332684, 0.81 ) }
    dend_104 { pt3dadd( -28.5614, -373.538, -0.223296, 0.37 ) }
    dend_104 { pt3dadd( -28.573, -373.6, -0.214899, 0.37 ) }
    dend_104 { pt3dadd( -28.8829, -374.601, -0.0824756, 0.29 ) }
    dend_104 { pt3dadd( -29.2943, -375.554, 0.102321, 0.29 ) }
    dend_104 { pt3dadd( -29.3304, -375.613, 0.116447, 0.29 ) }
    dend_104 { pt3dadd( -30.0887, -376.6, 0.381457, 0.29 ) }
    dend_104 { pt3dadd( -30.2521, -376.788, 0.434945, 1.03 ) }
    dend_104 { pt3dadd( -30.7737, -377.356, 0.597331, 1.4 ) }
    dend_104 { pt3dadd( -31.6634, -378.21, 0.846538, 1.4 ) }
    dend_104 { pt3dadd( -32.4325, -378.931, 1.10052, 1.4 ) }
    dend_104 { pt3dadd( -32.7793, -379.251, 1.22642, 1.4 ) }
    // Section: dend_100, id: dend_100, parent: dend_96 (entry count 65/100)
    dend_100 { pt3dclear() }
    dend_100 { pt3dadd( -3.61062, -361.298, -20.7738, 0.88 ) }
    dend_100 { pt3dadd( -4.78242, -361.803, -22.6413, 0.88 ) }
    dend_100 { pt3dadd( -5.26281, -361.981, -23.1766, 0.88 ) }
    dend_100 { pt3dadd( -5.37203, -362.017, -23.2587, 0.88 ) }
    dend_100 { pt3dadd( -7.10334, -362.529, -24.2111, 0.29 ) }
    dend_100 { pt3dadd( -8.23242, -362.863, -24.8323, 0.29 ) }
    dend_100 { pt3dadd( -9.00253, -363.091, -25.2559, 0.74 ) }
    dend_100 { pt3dadd( -11.4295, -363.764, -25.8072, 0.15 ) }
    dend_100 { pt3dadd( -12.4604, -364.044, -25.9167, 0.15 ) }
    dend_100 { pt3dadd( -12.7334, -364.102, -25.8619, 0.37 ) }
    // Section: dend_97, id: dend_97, parent: dend_96 (entry count 75/100)
    dend_97 { pt3dclear() }
    dend_97 { pt3dadd( -3.61062, -361.298, -20.7738, 0.29 ) }
    dend_97 { pt3dadd( -3.51087, -361.47, -21.6031, 0.29 ) }
    dend_97 { pt3dadd( -3.50127, -361.488, -21.6805, 0.29 ) }
    dend_97 { pt3dadd( -2.79706, -362.954, -27.3802, 0.29 ) }
    dend_97 { pt3dadd( -2.78161, -362.985, -27.4809, 0.29 ) }
    dend_97 { pt3dadd( -2.70753, -363.124, -27.9052, 0.88 ) }
    dend_97 { pt3dadd( -2.6312, -363.278, -28.3147, 0.88 ) }
    dend_97 { pt3dadd( -2.6156, -363.322, -28.4123, 0.88 ) }
    dend_97 { pt3dadd( -2.40048, -364.087, -29.6294, 0.22 ) }
    dend_97 { pt3dadd( -2.26022, -364.922, -30.2166, 0.22 ) }
    dend_97 { pt3dadd( -2.20002, -365.342, -30.4977, 0.59 ) }
    dend_97 { pt3dadd( -2.12784, -366.02, -30.9148, 0.74 ) }
    dend_97 { pt3dadd( -2.04502, -366.948, -31.4929, 0.74 ) }
    dend_97 { pt3dadd( -1.99516, -367.96, -32.063, 1.03 ) }
    dend_97 { pt3dadd( -1.99076, -368.477, -32.3489, 1.03 ) }
    dend_97 { pt3dadd( -2.00692, -369.034, -32.6796, 1.25 ) }
    dend_97 { pt3dadd( -2.00744, -369.581, -33.0499, 0.74 ) }
    dend_97 { pt3dadd( -2.02824, -370.713, -33.8739, 0.29 ) }
    dend_97 { pt3dadd( -2.1239, -371.473, -34.4201, 0.29 ) }
    dend_97 { pt3dadd( -2.3095, -372.246, -34.9419, 0.81 ) }
    dend_97 { pt3dadd( -2.46179, -372.661, -35.2333, 0.81 ) }
    dend_97 { pt3dadd( -3.04535, -373.844, -36.0589, 0.29 ) }
    dend_97 { pt3dadd( -3.65351, -374.864, -36.7031, 0.29 ) }
    dend_97 { pt3dadd( -4.4638, -376.064, -37.29, 0.29 ) }
    dend_97 { pt3dadd( -4.50277, -376.117, -37.3153, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_97 { pt3dadd( -4.86833, -376.597, -37.5007, 0.29 ) }
    dend_97 { pt3dadd( -5.05296, -376.833, -37.6055, 1.11 ) }
    dend_97 { pt3dadd( -5.53929, -377.419, -37.8144, 1.33 ) }
    dend_97 { pt3dadd( -5.93777, -377.924, -37.9977, 1.33 ) }
    dend_97 { pt3dadd( -6.54072, -378.727, -38.2599, 0.29 ) }
    dend_97 { pt3dadd( -7.18823, -379.589, -38.5358, 0.29 ) }
    dend_97 { pt3dadd( -7.87577, -380.494, -38.8146, 1.18 ) }
    dend_97 { pt3dadd( -8.80431, -381.618, -39.166, 1.62 ) }
    dend_97 { pt3dadd( -9.39503, -382.241, -39.3541, 1.92 ) }
    dend_97 { pt3dadd( -9.87496, -382.697, -39.4493, 1.92 ) }
    // Section: dend_79, id: dend_79, parent: dend_77 (entry count 10/100)
    dend_79 { pt3dclear() }
    dend_79 { pt3dadd( -140.523, 229.806, -256.979, 0.88 ) }
    dend_79 { pt3dadd( -141.402, 231.237, -259.8, 0.88 ) }
    dend_79 { pt3dadd( -142.177, 232.62, -261.72, 0.88 ) }
    dend_79 { pt3dadd( -142.323, 232.889, -262.024, 1.55 ) }
    dend_79 { pt3dadd( -142.539, 233.29, -262.401, 1.77 ) }
    dend_79 { pt3dadd( -142.651, 233.503, -262.567, 1.77 ) }
    dend_79 { pt3dadd( -142.871, 233.936, -262.89, 0.22 ) }
    dend_79 { pt3dadd( -143.483, 235.446, -263.413, 0.22 ) }
    dend_79 { pt3dadd( -143.505, 235.511, -263.43, 0.22 ) }
    dend_79 { pt3dadd( -143.704, 236.138, -263.593, 0.88 ) }
    dend_79 { pt3dadd( -143.906, 236.802, -263.765, 0.88 ) }
    dend_79 { pt3dadd( -144.318, 238.19, -264.12, 0.22 ) }
    dend_79 { pt3dadd( -144.799, 239.836, -264.519, 0.22 ) }
    dend_79 { pt3dadd( -144.871, 240.082, -264.574, 0.22 ) }
    dend_79 { pt3dadd( -145.485, 241.858, -264.896, 0.22 ) }
    dend_79 { pt3dadd( -145.621, 242.201, -264.941, 0.22 ) }
    dend_79 { pt3dadd( -145.714, 242.401, -264.956, 0.66 ) }
    dend_79 { pt3dadd( -146.216, 243.361, -264.945, 0.66 ) }
    dend_79 { pt3dadd( -146.346, 243.581, -264.947, 0.22 ) }
    dend_79 { pt3dadd( -147.125, 244.934, -264.983, 0.22 ) }
    dend_79 { pt3dadd( -147.207, 245.073, -264.99, 0.66 ) }
    dend_79 { pt3dadd( -147.508, 245.589, -265.022, 0.88 ) }
    dend_79 { pt3dadd( -147.755, 246.04, -265.053, 0.88 ) }
    dend_79 { pt3dadd( -148.143, 246.788, -265.158, 0.22 ) }
    dend_79 { pt3dadd( -148.231, 246.974, -265.191, 0.22 ) }
    dend_79 { pt3dadd( -148.613, 247.876, -265.379, 0.22 ) }
    dend_79 { pt3dadd( -148.64, 247.942, -265.394, 0.22 ) }
    dend_79 { pt3dadd( -149.4, 249.72, -265.802, 0.22 ) }
    dend_79 { pt3dadd( -149.884, 250.799, -266.058, 1.11 ) }
    dend_79 { pt3dadd( -150.154, 251.406, -266.203, 1.92 ) }
    dend_79 { pt3dadd( -150.185, 251.48, -266.222, 1.92 ) }
    dend_79 { pt3dadd( -150.354, 251.947, -266.359, 1.92 ) }
    // Section: dend_78, id: dend_78, parent: dend_77 (entry count 42/100)
    dend_78 { pt3dclear() }
    dend_78 { pt3dadd( -140.523, 229.806, -256.979, 0.22 ) }
    dend_78 { pt3dadd( -138.448, 230.973, -260.064, 0.22 ) }
    dend_78 { pt3dadd( -137.865, 231.302, -260.932, 0.74 ) }
    dend_78 { pt3dadd( -137.594, 231.454, -261.334, 0.74 ) }
    // Section: dend_70, id: dend_70, parent: dend_64 (entry count 46/100)
    dend_70 { pt3dclear() }
    dend_70 { pt3dadd( -71.3428, 247.836, -51.9756, 0.52 ) }
    dend_70 { pt3dadd( -70.8822, 247.68, -51.5035, 0.52 ) }
    dend_70 { pt3dadd( -69.6217, 247.273, -50.1992, 0.52 ) }
    dend_70 { pt3dadd( -68.8821, 247.067, -49.4813, 0.52 ) }
    dend_70 { pt3dadd( -68.278, 246.914, -48.92, 0.81 ) }
    dend_70 { pt3dadd( -67.2662, 246.693, -47.9596, 0.81 ) }
    dend_70 { pt3dadd( -66.7394, 246.608, -47.5753, 0.81 ) }
    dend_70 { pt3dadd( -66.6776, 246.601, -47.5374, 0.81 ) }
    dend_70 { pt3dadd( -65.9955, 246.572, -47.2057, 0.37 ) }
    dend_70 { pt3dadd( -65.9201, 246.57, -47.1724, 0.37 ) }
    dend_70 { pt3dadd( -64.5304, 246.514, -46.61, 0.22 ) }
    dend_70 { pt3dadd( -61.7524, 246.332, -45.6052, 0.22 ) }
    dend_70 { pt3dadd( -61.4557, 246.295, -45.5094, 0.81 ) }
    dend_70 { pt3dadd( -61.3886, 246.285, -45.4898, 0.81 ) }
    dend_70 { pt3dadd( -61.1785, 246.241, -45.4399, 0.81 ) }
    dend_70 { pt3dadd( -59.9762, 245.957, -45.1548, 0.22 ) }
    dend_70 { pt3dadd( -59.9096, 245.938, -45.1402, 0.22 ) }
    dend_70 { pt3dadd( -57.008, 245.018, -44.4276, 0.22 ) }
    dend_70 { pt3dadd( -56.8164, 244.957, -44.3822, 0.22 ) }
    dend_70 { pt3dadd( -55.12, 244.425, -43.9996, 0.22 ) }
    dend_70 { pt3dadd( -54.1, 244.118, -43.7926, 0.74 ) }
    dend_70 { pt3dadd( -53.878, 244.054, -43.7596, 0.74 ) }
    // Section: dend_65, id: dend_65, parent: dend_64 (entry count 68/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( -71.3428, 247.836, -51.9756, 0.29 ) }
    dend_65 { pt3dadd( -71.7287, 248.751, -52.0632, 0.29 ) }
    dend_65 { pt3dadd( -72.3241, 250.338, -52.1101, 0.29 ) }
    dend_65 { pt3dadd( -72.5334, 251.045, -52.108, 0.96 ) }
    dend_65 { pt3dadd( -72.6989, 251.663, -52.0994, 1.55 ) }
    dend_65 { pt3dadd( -72.8434, 252.218, -52.0887, 1.55 ) }
    dend_65 { pt3dadd( -73.1261, 253.309, -52.1124, 0.29 ) }
    dend_65 { pt3dadd( -73.4946, 254.83, -52.1845, 0.29 ) }
    dend_65 { pt3dadd( -73.9476, 256.866, -52.319, 0.29 ) }
    dend_65 { pt3dadd( -73.9624, 256.935, -52.3235, 0.29 ) }
    dend_65 { pt3dadd( -74.2889, 258.505, -52.4446, 0.29 ) }
    dend_65 { pt3dadd( -74.5297, 259.711, -52.5557, 0.44 ) }
    dend_65 { pt3dadd( -74.7149, 260.652, -52.6624, 0.44 ) }
    dend_65 { pt3dadd( -74.9019, 261.649, -52.8024, 0.44 ) }
    dend_65 { pt3dadd( -75.0415, 262.359, -52.8889, 0.88 ) }
    dend_65 { pt3dadd( -75.1096, 262.718, -52.9167, 1.55 ) }
    dend_65 { pt3dadd( -75.1869, 263.158, -52.9245, 1.92 ) }
    dend_65 { pt3dadd( -75.2917, 263.809, -52.8954, 2.06 ) }
    dend_65 { pt3dadd( -75.3635, 264.347, -52.8778, 2.06 ) }
    dend_65 { pt3dadd( -75.4744, 265.23, -52.863, 1.18 ) }
    dend_65 { pt3dadd( -75.5867, 266.15, -52.8838, 1.03 ) }
    dend_65 { pt3dadd( -75.6598, 266.794, -52.908, 0.88 ) }
    dend_65 { pt3dadd( -75.7351, 267.467, -52.9416, 0.74 ) }
    dend_65 { pt3dadd( -75.8033, 268.255, -52.9894, 0.59 ) }
    dend_65 { pt3dadd( -75.8297, 268.976, -53.0396, 0.59 ) }
    dend_65 { pt3dadd( -75.812, 270.013, -53.1197, 0.29 ) }
    dend_65 { pt3dadd( -75.8091, 270.086, -53.1253, 0.29 ) }
    dend_65 { pt3dadd( -75.7701, 270.995, -53.1907, 0.22 ) }
    dend_65 { pt3dadd( -75.7574, 271.45, -53.2191, 0.22 ) }
    dend_65 { pt3dadd( -75.7083, 272.604, -53.2742, 0.22 ) }
    dend_65 { pt3dadd( -75.69, 272.907, -53.2848, 0.22 ) }
    dend_65 { pt3dadd( -75.6165, 273.972, -53.2982, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_65 { pt3dadd( -75.5756, 274.562, -53.3055, 1.03 ) }
    dend_65 { pt3dadd( -75.5254, 275.301, -53.3142, 1.33 ) }
    dend_65 { pt3dadd( -75.4883, 276.189, -53.3222, 1.33 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 3/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -65.4772, 289.541, -48.1915, 0.29 ) }
    dend_63 { pt3dadd( -64.4648, 291.462, -49.8892, 0.29 ) }
    dend_63 { pt3dadd( -64.4319, 291.529, -49.9463, 0.29 ) }
    dend_63 { pt3dadd( -64.0574, 292.341, -50.5624, 0.29 ) }
    dend_63 { pt3dadd( -64.0387, 292.385, -50.5981, 0.29 ) }
    dend_63 { pt3dadd( -63.8273, 292.837, -50.9378, 0.66 ) }
    dend_63 { pt3dadd( -63.6197, 293.255, -51.2343, 0.66 ) }
    dend_63 { pt3dadd( -63.5905, 293.31, -51.2673, 0.66 ) }
    dend_63 { pt3dadd( -63.2158, 294.001, -51.6444, 0.96 ) }
    dend_63 { pt3dadd( -62.7615, 294.825, -52.0427, 0.15 ) }
    dend_63 { pt3dadd( -62.077, 295.945, -52.5725, 0.15 ) }
    dend_63 { pt3dadd( -61.9085, 296.185, -52.6907, 0.74 ) }
    dend_63 { pt3dadd( -61.8274, 296.29, -52.74, 0.74 ) }
    dend_63 { pt3dadd( -61.6496, 296.517, -52.8391, 0.74 ) }
    dend_63 { pt3dadd( -61.4707, 296.725, -52.9073, 0.74 ) }
    dend_63 { pt3dadd( -61.416, 296.784, -52.9073, 0.74 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 19/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -65.4772, 289.541, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -65.7031, 290.248, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -65.7355, 290.342, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -66.3004, 291.622, -48.1915, 0.44 ) }
    dend_62 { pt3dadd( -66.3327, 291.685, -48.1993, 0.44 ) }
    dend_62 { pt3dadd( -66.8796, 292.586, -48.3746, 0.44 ) }
    dend_62 { pt3dadd( -66.9383, 292.673, -48.3943, 0.44 ) }
    dend_62 { pt3dadd( -67.6746, 293.627, -48.6462, 0.44 ) }
    dend_62 { pt3dadd( -68.2636, 294.293, -48.8423, 0.44 ) }
    dend_62 { pt3dadd( -69.2071, 295.208, -49.1356, 0.44 ) }
    dend_62 { pt3dadd( -69.9312, 295.855, -49.4374, 0.81 ) }
    dend_62 { pt3dadd( -70.4086, 296.247, -49.6705, 0.96 ) }
    dend_62 { pt3dadd( -71.1325, 296.788, -49.9709, 0.96 ) }
    dend_62 { pt3dadd( -71.3527, 296.937, -50.0332, 0.96 ) }
    dend_62 { pt3dadd( -72.2602, 297.538, -50.1623, 0.96 ) }
    dend_62 { pt3dadd( -74.1386, 298.758, -50.0736, 0.96 ) }
    dend_62 { pt3dadd( -74.1897, 298.79, -50.0663, 0.96 ) }
    dend_62 { pt3dadd( -75.8019, 299.771, -49.6678, 0.22 ) }
    dend_62 { pt3dadd( -76.8596, 300.394, -49.2882, 0.22 ) }
    dend_62 { pt3dadd( -76.9247, 300.431, -49.2578, 0.22 ) }
    dend_62 { pt3dadd( -77.6922, 300.848, -48.7911, 0.22 ) }
    dend_62 { pt3dadd( -77.852, 300.932, -48.6618, 0.22 ) }
    dend_62 { pt3dadd( -78.2465, 301.13, -48.3376, 0.59 ) }
    dend_62 { pt3dadd( -78.4983, 301.262, -48.1813, 0.96 ) }
    dend_62 { pt3dadd( -78.5575, 301.291, -48.1499, 0.96 ) }
    dend_62 { pt3dadd( -79.1235, 301.579, -47.8404, 0.96 ) }
    dend_62 { pt3dadd( -80.2081, 302.146, -47.1977, 0.96 ) }
    dend_62 { pt3dadd( -81.3005, 302.891, -46.5907, 0.52 ) }
    dend_62 { pt3dadd( -82.4196, 303.844, -46.0227, 0.29 ) }
    dend_62 { pt3dadd( -82.4681, 303.895, -46.0048, 0.29 ) }
    dend_62 { pt3dadd( -82.8452, 304.434, -45.9378, 0.29 ) }
    dend_62 { pt3dadd( -82.9231, 304.579, -45.9417, 0.29 ) }
    dend_62 { pt3dadd( -83.3027, 305.419, -46.0522, 0.29 ) }
    dend_62 { pt3dadd( -83.3471, 305.53, -46.0656, 0.29 ) }
    dend_62 { pt3dadd( -83.643, 306.265, -46.0656, 0.29 ) }
    dend_62 { pt3dadd( -83.9959, 307.128, -46.0656, 0.29 ) }
    dend_62 { pt3dadd( -84.0536, 307.264, -46.0717, 0.66 ) }
    dend_62 { pt3dadd( -84.2143, 307.663, -46.1024, 0.81 ) }
    dend_62 { pt3dadd( -84.3981, 308.148, -46.1463, 0.81 ) }
    dend_62 { pt3dadd( -84.6528, 308.85, -46.218, 0.15 ) }
    dend_62 { pt3dadd( -84.9704, 309.793, -46.3354, 0.15 ) }
    dend_62 { pt3dadd( -85.191, 310.395, -46.4282, 0.59 ) }
    dend_62 { pt3dadd( -85.3507, 310.819, -46.5014, 0.74 ) }
    // Section: dend_57, id: dend_57, parent: dend_54 (entry count 62/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 200.112, 196.111, 46.4288, 0.88 ) }
    dend_57 { pt3dadd( 200.772, 195.691, 46.3964, 0.88 ) }
    dend_57 { pt3dadd( 201.52, 195.232, 46.3025, 0.59 ) }
    dend_57 { pt3dadd( 202.601, 194.606, 46.1267, 0.59 ) }
    dend_57 { pt3dadd( 203.233, 194.253, 46.0119, 0.29 ) }
    dend_57 { pt3dadd( 204.228, 193.715, 45.8221, 0.29 ) }
    dend_57 { pt3dadd( 204.289, 193.683, 45.81, 0.29 ) }
    dend_57 { pt3dadd( 205.24, 193.182, 45.6288, 0.29 ) }
    dend_57 { pt3dadd( 205.683, 192.95, 45.5472, 0.52 ) }
    dend_57 { pt3dadd( 205.754, 192.91, 45.5359, 0.52 ) }
    dend_57 { pt3dadd( 205.944, 192.818, 45.5188, 0.52 ) }
    dend_57 { pt3dadd( 206.009, 192.79, 45.5201, 0.52 ) }
    dend_57 { pt3dadd( 207.356, 192.305, 45.6569, 0.22 ) }
    dend_57 { pt3dadd( 207.498, 192.258, 45.6798, 0.22 ) }
    dend_57 { pt3dadd( 207.808, 192.184, 45.7234, 0.66 ) }
    dend_57 { pt3dadd( 208.496, 192.047, 45.77, 0.81 ) }
    dend_57 { pt3dadd( 209.155, 191.933, 45.7838, 0.15 ) }
    dend_57 { pt3dadd( 210.397, 191.709, 45.7544, 0.15 ) }
    dend_57 { pt3dadd( 210.652, 191.665, 45.7358, 0.44 ) }
    dend_57 { pt3dadd( 211.583, 191.475, 45.6494, 0.44 ) }
    dend_57 { pt3dadd( 212.742, 191.224, 45.5154, 0.15 ) }
    dend_57 { pt3dadd( 212.88, 191.192, 45.4956, 0.15 ) }
    dend_57 { pt3dadd( 213.674, 190.971, 45.3548, 0.15 ) }
    dend_57 { pt3dadd( 214.422, 190.687, 45.2617, 0.15 ) }
    dend_57 { pt3dadd( 214.775, 190.547, 45.2474, 0.37 ) }
    dend_57 { pt3dadd( 214.966, 190.472, 45.2669, 0.37 ) }
    dend_57 { pt3dadd( 215.337, 190.345, 45.3446, 0.37 ) }
    dend_57 { pt3dadd( 215.405, 190.323, 45.3611, 0.37 ) }
    dend_57 { pt3dadd( 216.443, 189.989, 45.6527, 0.22 ) }
    dend_57 { pt3dadd( 217.591, 189.583, 46.0091, 0.22 ) }
    dend_57 { pt3dadd( 218.55, 189.225, 46.4074, 0.37 ) }
    dend_57 { pt3dadd( 219.017, 189.086, 46.6227, 0.66 ) }
    dend_57 { pt3dadd( 219.099, 189.066, 46.6641, 0.66 ) }
    dend_57 { pt3dadd( 219.398, 189.048, 46.8167, 0.66 ) }
    dend_57 { pt3dadd( 219.46, 189.059, 46.8484, 0.66 ) }
    dend_57 { pt3dadd( 220.942, 189.708, 47.5754, 0.22 ) }
    dend_57 { pt3dadd( 221.936, 190.333, 47.9879, 0.22 ) }
    dend_57 { pt3dadd( 221.987, 190.378, 48.0122, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_57 { pt3dadd( 222.808, 191.263, 48.3913, 0.22 ) }
    dend_57 { pt3dadd( 223.104, 191.682, 48.527, 0.96 ) }
    dend_57 { pt3dadd( 223.42, 192.251, 48.6647, 0.96 ) }
    dend_57 { pt3dadd( 223.538, 192.524, 48.7068, 0.96 ) }
    dend_57 { pt3dadd( 224.144, 194.236, 49.0074, 0.22 ) }
    dend_57 { pt3dadd( 224.297, 194.713, 49.0994, 0.59 ) }
    dend_57 { pt3dadd( 224.509, 195.577, 49.3003, 0.15 ) }
    dend_57 { pt3dadd( 224.524, 195.656, 49.3201, 0.15 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 8/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 200.112, 196.111, 46.4288, 0.52 ) }
    dend_56 { pt3dadd( 200.899, 196.328, 46.2245, 0.52 ) }
    dend_56 { pt3dadd( 201.992, 196.632, 46.0026, 0.52 ) }
    dend_56 { pt3dadd( 202.929, 196.875, 45.8635, 0.52 ) }
    dend_56 { pt3dadd( 202.997, 196.892, 45.8595, 0.52 ) }
    dend_56 { pt3dadd( 203.829, 197.028, 45.8585, 0.66 ) }
    dend_56 { pt3dadd( 203.888, 197.034, 45.8602, 0.66 ) }
    dend_56 { pt3dadd( 205.226, 197.069, 46.0423, 0.66 ) }
    dend_56 { pt3dadd( 206.498, 197.032, 46.3236, 0.22 ) }
    dend_56 { pt3dadd( 207.372, 196.972, 46.5761, 0.44 ) }
    dend_56 { pt3dadd( 208.809, 196.84, 47.0328, 0.44 ) }
    dend_56 { pt3dadd( 209.292, 196.803, 47.2119, 0.44 ) }
    dend_56 { pt3dadd( 210.272, 196.773, 47.6136, 0.81 ) }
    dend_56 { pt3dadd( 210.489, 196.773, 47.7162, 1.11 ) }
    dend_56 { pt3dadd( 210.699, 196.779, 47.8163, 1.11 ) }
    dend_56 { pt3dadd( 210.829, 196.786, 47.8723, 1.11 ) }
    dend_56 { pt3dadd( 212.737, 196.991, 48.6762, 0.22 ) }
    dend_56 { pt3dadd( 213.299, 197.048, 48.8952, 0.22 ) }
    dend_56 { pt3dadd( 214.968, 197.206, 49.3967, 0.22 ) }
    dend_56 { pt3dadd( 215.787, 197.274, 49.596, 0.22 ) }
    dend_56 { pt3dadd( 216.076, 197.294, 49.6509, 0.22 ) }
    dend_56 { pt3dadd( 216.761, 197.318, 49.7323, 0.22 ) }
    dend_56 { pt3dadd( 216.864, 197.317, 49.7297, 0.22 ) }
    dend_56 { pt3dadd( 217.811, 197.386, 49.6369, 1.03 ) }
    dend_56 { pt3dadd( 218.468, 197.519, 49.5207, 1.25 ) }
    dend_56 { pt3dadd( 218.536, 197.535, 49.5107, 1.25 ) }
    dend_56 { pt3dadd( 218.77, 197.592, 49.4842, 1.33 ) }
    dend_56 { pt3dadd( 219.58, 197.795, 49.4197, 0.59 ) }
    dend_56 { pt3dadd( 221.213, 198.204, 49.3458, 0.44 ) }
    dend_56 { pt3dadd( 221.282, 198.221, 49.3458, 0.44 ) }
    dend_56 { pt3dadd( 222.2, 198.435, 49.2124, 0.44 ) }
    dend_56 { pt3dadd( 222.844, 198.585, 49.1552, 0.44 ) }
    dend_56 { pt3dadd( 223.301, 198.695, 49.1297, 0.81 ) }
    dend_56 { pt3dadd( 223.38, 198.716, 49.1276, 0.81 ) }
    dend_56 { pt3dadd( 223.801, 198.844, 49.1286, 0.81 ) }
    dend_56 { pt3dadd( 226.182, 199.661, 49.1994, 1.03 ) }
    dend_56 { pt3dadd( 228.548, 200.495, 49.3281, 0.66 ) }
    dend_56 { pt3dadd( 229.058, 200.663, 49.3656, 0.22 ) }
    dend_56 { pt3dadd( 229.898, 200.926, 49.443, 0.22 ) }
    dend_56 { pt3dadd( 229.968, 200.944, 49.4551, 0.22 ) }
    dend_56 { pt3dadd( 230.852, 201.13, 49.7664, 0.22 ) }
    dend_56 { pt3dadd( 231.809, 201.273, 50.2967, 0.81 ) }
    dend_56 { pt3dadd( 232.008, 201.281, 50.3986, 1.25 ) }
    dend_56 { pt3dadd( 232.127, 201.276, 50.4744, 1.25 ) }
    dend_56 { pt3dadd( 233.73, 201.095, 51.3401, 0.22 ) }
    dend_56 { pt3dadd( 234.999, 200.906, 51.8779, 0.96 ) }
    dend_56 { pt3dadd( 235.146, 200.877, 51.9129, 0.96 ) }
    dend_56 { pt3dadd( 235.724, 200.747, 51.6072, 0.96 ) }
    dend_56 { pt3dadd( 235.758, 200.741, 51.5575, 0.96 ) }
    dend_56 { pt3dadd( 237.458, 200.279, 48.7212, 0.22 ) }
    dend_56 { pt3dadd( 237.493, 200.27, 48.6611, 0.22 ) }
    dend_56 { pt3dadd( 237.607, 200.241, 48.4615, 0.66 ) }
    dend_56 { pt3dadd( 237.683, 200.223, 48.3327, 0.66 ) }
    dend_56 { pt3dadd( 239.074, 200.002, 45.9653, 0.66 ) }
    dend_56 { pt3dadd( 239.669, 199.934, 44.9835, 0.22 ) }
    dend_56 { pt3dadd( 240.593, 199.899, 43.6053, 0.81 ) }
    dend_56 { pt3dadd( 240.657, 199.899, 43.5108, 0.81 ) }
    dend_56 { pt3dadd( 240.871, 199.911, 43.2054, 0.81 ) }
    dend_56 { pt3dadd( 241.803, 200.002, 41.9273, 0.22 ) }
    dend_56 { pt3dadd( 242.659, 200.171, 40.9136, 0.22 ) }
    dend_56 { pt3dadd( 242.998, 200.295, 40.4671, 0.22 ) }
    dend_56 { pt3dadd( 243.077, 200.328, 40.352, 0.22 ) }
    dend_56 { pt3dadd( 243.329, 200.439, 39.968, 1.11 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 71/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 200.112, 196.111, 46.4288, 0.29 ) }
    dend_55 { pt3dadd( 199.997, 197.278, 46.7324, 0.29 ) }
    dend_55 { pt3dadd( 199.974, 197.401, 46.769, 0.29 ) }
    dend_55 { pt3dadd( 199.852, 198.054, 46.9642, 0.81 ) }
    dend_55 { pt3dadd( 199.662, 199.078, 47.2704, 0.22 ) }
    dend_55 { pt3dadd( 199.649, 199.144, 47.2904, 0.22 ) }
    dend_55 { pt3dadd( 199.509, 199.898, 47.5158, 0.22 ) }
    dend_55 { pt3dadd( 199.207, 201.161, 47.7951, 0.22 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 79/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 56.5907, 195.148, -59.3056, 0.44 ) }
    dend_34 { pt3dadd( 57.1664, 196.156, -58.9866, 0.44 ) }
    dend_34 { pt3dadd( 57.6819, 197.044, -58.7857, 0.44 ) }
    dend_34 { pt3dadd( 57.9614, 197.556, -58.7119, 0.88 ) }
    dend_34 { pt3dadd( 58.217, 198.1, -58.6636, 1.11 ) }
    dend_34 { pt3dadd( 58.2755, 198.24, -58.6554, 1.11 ) }
    dend_34 { pt3dadd( 58.6489, 199.139, -58.6192, 1.11 ) }
    dend_34 { pt3dadd( 58.8937, 199.718, -58.6014, 1.11 ) }
    dend_34 { pt3dadd( 59.3481, 200.816, -58.5498, 1.11 ) }
    dend_34 { pt3dadd( 59.8237, 202.041, -58.4843, 1.11 ) }
    dend_34 { pt3dadd( 60.1683, 203.008, -58.4178, 1.33 ) }
    dend_34 { pt3dadd( 60.6001, 204.307, -58.3196, 1.33 ) }
    dend_34 { pt3dadd( 60.876, 205.253, -58.24, 0.88 ) }
    dend_34 { pt3dadd( 61.0577, 205.89, -58.1816, 0.74 ) }
    dend_34 { pt3dadd( 61.3688, 207.024, -58.0815, 0.66 ) }
    dend_34 { pt3dadd( 61.5987, 207.883, -58.018, 0.66 ) }
    dend_34 { pt3dadd( 61.7422, 208.466, -57.9872, 1.03 ) }
    dend_34 { pt3dadd( 61.8983, 209.138, -58.0011, 1.4 ) }
    dend_34 { pt3dadd( 62.1527, 210.097, -58.106, 1.4 ) }
    dend_34 { pt3dadd( 62.2159, 210.308, -58.1355, 1.4 ) }
    dend_34 { pt3dadd( 62.5577, 211.365, -58.3024, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_34 { pt3dadd( 62.5807, 211.433, -58.3115, 1.4 ) }
    dend_34 { pt3dadd( 62.9278, 212.455, -58.422, 0.96 ) }
    dend_34 { pt3dadd( 63.441, 213.965, -58.5624, 0.88 ) }
    dend_34 { pt3dadd( 63.8455, 215.213, -58.6545, 0.88 ) }
    dend_34 { pt3dadd( 64.1124, 215.987, -58.6919, 1.33 ) }
    dend_34 { pt3dadd( 64.3932, 216.826, -58.7131, 0.81 ) }
    dend_34 { pt3dadd( 64.5542, 217.38, -58.7112, 0.81 ) }
    dend_34 { pt3dadd( 64.5709, 217.448, -58.7076, 0.81 ) }
    dend_34 { pt3dadd( 64.7038, 218.038, -58.6741, 0.59 ) }
    dend_34 { pt3dadd( 64.9604, 219.157, -58.6273, 0.52 ) }
    dend_34 { pt3dadd( 65.1299, 220.016, -58.614, 0.37 ) }
    dend_34 { pt3dadd( 65.2558, 220.798, -58.6222, 0.37 ) }
    dend_34 { pt3dadd( 65.278, 220.948, -58.623, 0.37 ) }
    dend_34 { pt3dadd( 65.391, 221.709, -58.6238, 0.37 ) }
    dend_34 { pt3dadd( 65.5742, 222.873, -58.5786, 1.84 ) }
    dend_34 { pt3dadd( 65.7515, 223.899, -58.5082, 2.14 ) }
    dend_34 { pt3dadd( 65.7669, 223.967, -58.5022, 2.14 ) }
    dend_34 { pt3dadd( 66.0395, 225.035, -58.4053, 1.84 ) }
    dend_34 { pt3dadd( 66.5821, 226.923, -58.23, 1.62 ) }
    dend_34 { pt3dadd( 66.9375, 227.975, -58.1543, 0.88 ) }
    dend_34 { pt3dadd( 67.3147, 228.847, -58.1055, 0.66 ) }
    dend_34 { pt3dadd( 67.8433, 229.842, -58.074, 0.66 ) }
    dend_34 { pt3dadd( 68.2728, 230.602, -58.0736, 1.18 ) }
    dend_34 { pt3dadd( 68.6784, 231.266, -58.0957, 1.18 ) }
    dend_34 { pt3dadd( 69.2268, 232.11, -58.1561, 0.66 ) }
    dend_34 { pt3dadd( 69.749, 232.937, -58.2564, 0.66 ) }
    dend_34 { pt3dadd( 70.7279, 234.574, -58.4737, 0.44 ) }
    dend_34 { pt3dadd( 71.352, 235.751, -58.6269, 0.44 ) }
    dend_34 { pt3dadd( 71.8632, 236.891, -58.7291, 0.44 ) }
    dend_34 { pt3dadd( 71.8864, 236.958, -58.7322, 0.44 ) }
    dend_34 { pt3dadd( 72.0865, 237.681, -58.7328, 1.55 ) }
    dend_34 { pt3dadd( 72.2451, 238.309, -58.7235, 1.55 ) }
    dend_34 { pt3dadd( 72.4648, 239.089, -58.6931, 0.96 ) }
    dend_34 { pt3dadd( 72.8155, 240.086, -58.6362, 0.29 ) }
    dend_34 { pt3dadd( 73.1499, 240.965, -58.5777, 0.29 ) }
    dend_34 { pt3dadd( 73.1853, 241.058, -58.5714, 0.29 ) }
    dend_34 { pt3dadd( 73.4819, 241.82, -58.5122, 0.29 ) }
    dend_34 { pt3dadd( 73.5058, 241.888, -58.5091, 0.29 ) }
    dend_34 { pt3dadd( 73.6494, 242.435, -58.5086, 0.29 ) }
    dend_34 { pt3dadd( 73.7682, 243.224, -58.5825, 0.96 ) }
    dend_34 { pt3dadd( 73.8402, 244.198, -58.7006, 0.96 ) }
    dend_34 { pt3dadd( 73.8444, 244.338, -58.7189, 0.96 ) }
    dend_34 { pt3dadd( 73.843, 245.253, -58.8375, 0.96 ) }
    dend_34 { pt3dadd( 73.8616, 246.21, -58.9971, 1.33 ) }
    dend_34 { pt3dadd( 73.8673, 247.067, -59.1576, 1.55 ) }
    dend_34 { pt3dadd( 73.8635, 247.489, -59.2665, 1.55 ) }
    dend_34 { pt3dadd( 73.8604, 248.122, -59.46, 1.03 ) }
    dend_34 { pt3dadd( 73.8545, 248.966, -59.7347, 0.74 ) }
    dend_34 { pt3dadd( 73.848, 250.12, -60.1379, 0.59 ) }
    dend_34 { pt3dadd( 73.8444, 250.965, -60.4313, 0.59 ) }
    dend_34 { pt3dadd( 73.8238, 251.951, -60.7428, 0.44 ) }
    dend_34 { pt3dadd( 73.7867, 252.651, -60.965, 0.44 ) }
    dend_34 { pt3dadd( 73.7158, 253.275, -61.1656, 0.44 ) }
    dend_34 { pt3dadd( 73.7025, 253.342, -61.1846, 0.44 ) }
    dend_34 { pt3dadd( 73.5549, 253.973, -61.3182, 0.96 ) }
    dend_34 { pt3dadd( 73.4571, 254.471, -61.4023, 0.96 ) }
    dend_34 { pt3dadd( 73.4445, 254.542, -61.4112, 0.96 ) }
    dend_34 { pt3dadd( 73.1702, 255.919, -61.5907, 0.37 ) }
    dend_34 { pt3dadd( 72.9486, 256.94, -61.7184, 0.37 ) }
    dend_34 { pt3dadd( 72.8436, 257.433, -61.7756, 0.37 ) }
    dend_34 { pt3dadd( 72.6461, 258.43, -61.8827, 0.37 ) }
    dend_34 { pt3dadd( 72.5089, 259.26, -61.9594, 0.37 ) }
    dend_34 { pt3dadd( 72.4934, 259.367, -61.9666, 0.37 ) }
    dend_34 { pt3dadd( 72.3995, 260.315, -61.9897, 0.37 ) }
    dend_34 { pt3dadd( 72.3672, 260.679, -61.9969, 1.55 ) }
    dend_34 { pt3dadd( 72.3194, 261.005, -62.0024, 1.69 ) }
    dend_34 { pt3dadd( 72.2891, 261.32, -61.9938, 1.69 ) }
    dend_34 { pt3dadd( 72.259, 262.044, -61.9565, 1.4 ) }
    dend_34 { pt3dadd( 72.257, 262.994, -61.8979, 1.69 ) }
    dend_34 { pt3dadd( 72.2903, 264.145, -61.819, 1.77 ) }
    dend_34 { pt3dadd( 72.4362, 266.569, -61.6458, 0.44 ) }
    dend_34 { pt3dadd( 72.5639, 268.154, -61.5318, 0.44 ) }
    dend_34 { pt3dadd( 72.6961, 269.379, -61.4419, 0.44 ) }
    dend_34 { pt3dadd( 72.7249, 269.6, -61.4258, 0.44 ) }
    dend_34 { pt3dadd( 72.8225, 270.412, -61.3693, 0.88 ) }
    dend_34 { pt3dadd( 72.9286, 271.256, -61.3165, 1.18 ) }
    dend_34 { pt3dadd( 72.9998, 272.234, -61.2752, 1.18 ) }
    dend_34 { pt3dadd( 72.9943, 272.307, -61.2741, 1.18 ) }
    dend_34 { pt3dadd( 72.8306, 273.362, -61.24, 1.18 ) }
    dend_34 { pt3dadd( 72.6494, 274.339, -61.197, 1.47 ) }
    dend_34 { pt3dadd( 72.6352, 274.418, -61.1926, 1.47 ) }
    dend_34 { pt3dadd( 72.5409, 275.125, -61.1273, 1.47 ) }
    dend_34 { pt3dadd( 72.494, 275.762, -61.0498, 0.96 ) }
    dend_34 { pt3dadd( 72.48, 276.448, -60.9418, 0.66 ) }
    dend_34 { pt3dadd( 72.5383, 277.439, -60.7517, 0.52 ) }
    dend_34 { pt3dadd( 72.6198, 278.044, -60.6235, 0.37 ) }
    dend_34 { pt3dadd( 72.7992, 279.071, -60.408, 0.29 ) }
    dend_34 { pt3dadd( 72.9388, 279.664, -60.284, 0.29 ) }
    dend_34 { pt3dadd( 73.0337, 280.027, -60.2136, 0.52 ) }
    dend_34 { pt3dadd( 73.1827, 280.58, -60.1097, 0.74 ) }
    dend_34 { pt3dadd( 73.2073, 280.69, -60.0927, 0.74 ) }
    dend_34 { pt3dadd( 73.3628, 281.631, -59.997, 0.74 ) }
    dend_34 { pt3dadd( 73.4009, 281.875, -59.9925, 1.03 ) }
    dend_34 { pt3dadd( 73.4307, 282.034, -59.9936, 1.03 ) }
    dend_34 { pt3dadd( 73.506, 282.407, -60.0062, 1.03 ) }
    dend_34 { pt3dadd( 73.6582, 283.14, -60.0304, 0.29 ) }
    dend_34 { pt3dadd( 73.6732, 283.211, -60.0324, 0.29 ) }
    dend_34 { pt3dadd( 73.9237, 284.361, -60.061, 0.29 ) }
    dend_34 { pt3dadd( 73.9413, 284.439, -60.0625, 0.29 ) }
    dend_34 { pt3dadd( 74.0764, 284.946, -60.0675, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_34 { pt3dadd( 74.1863, 285.294, -60.0695, 0.29 ) }
    dend_34 { pt3dadd( 74.4587, 285.969, -60.0695, 0.29 ) }
    dend_34 { pt3dadd( 74.4903, 286.032, -60.0695, 0.29 ) }
    dend_34 { pt3dadd( 74.7148, 286.417, -60.0871, 0.74 ) }
    dend_34 { pt3dadd( 75.1033, 287.023, -60.132, 0.81 ) }
    dend_34 { pt3dadd( 75.1639, 287.112, -60.1402, 0.81 ) }
    dend_34 { pt3dadd( 75.7158, 287.88, -60.2195, 0.81 ) }
    dend_34 { pt3dadd( 76.3807, 288.817, -60.319, 0.81 ) }
    dend_34 { pt3dadd( 76.7246, 289.325, -60.3925, 1.11 ) }
    dend_34 { pt3dadd( 77.2141, 290.058, -60.5207, 0.37 ) }
    dend_34 { pt3dadd( 77.6564, 290.75, -60.6582, 0.37 ) }
    dend_34 { pt3dadd( 77.6939, 290.811, -60.6711, 0.37 ) }
    dend_34 { pt3dadd( 78.1599, 291.631, -60.8592, 0.37 ) }
    dend_34 { pt3dadd( 78.5031, 292.293, -61.0172, 0.88 ) }
    dend_34 { pt3dadd( 78.7772, 292.841, -61.1363, 0.88 ) }
    dend_34 { pt3dadd( 78.8057, 292.903, -61.153, 0.88 ) }
    dend_34 { pt3dadd( 79.0529, 293.403, -61.32, 0.88 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 17/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 56.5907, 195.148, -59.3056, 0.22 ) }
    dend_33 { pt3dadd( 56.1738, 195.404, -59.0796, 0.22 ) }
    dend_33 { pt3dadd( 54.8546, 196.215, -58.3648, 0.22 ) }
    dend_33 { pt3dadd( 54.7376, 196.287, -58.3014, 0.74 ) }
    dend_33 { pt3dadd( 54.3446, 196.529, -58.0884, 0.74 ) }
    dend_33 { pt3dadd( 53.5292, 197.03, -57.6466, 0.44 ) }
    dend_33 { pt3dadd( 53.1681, 197.252, -57.4509, 0.44 ) }
    // Section: dend_27, id: dend_27, parent: dend_5 (entry count 24/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 39.5311, 126.081, -69.0205, 0.74 ) }
    dend_27 { pt3dadd( 39.6431, 126.169, -69.4915, 0.74 ) }
    dend_27 { pt3dadd( 40.83, 126.932, -74.0592, 1.03 ) }
    dend_27 { pt3dadd( 40.9548, 127.022, -74.6009, 1.03 ) }
    dend_27 { pt3dadd( 40.9688, 127.034, -74.6692, 1.03 ) }
    dend_27 { pt3dadd( 41.4335, 127.539, -77.2298, 0.66 ) }
    dend_27 { pt3dadd( 41.4443, 127.555, -77.2979, 0.66 ) }
    dend_27 { pt3dadd( 41.6724, 128.192, -79.5085, 0.66 ) }
    dend_27 { pt3dadd( 41.7883, 128.923, -81.4493, 0.66 ) }
    dend_27 { pt3dadd( 41.8193, 129.124, -81.9394, 0.88 ) }
    dend_27 { pt3dadd( 41.8698, 129.354, -82.4596, 0.88 ) }
    dend_27 { pt3dadd( 41.9841, 129.804, -83.3677, 0.88 ) }
    dend_27 { pt3dadd( 42.6209, 131.536, -86.767, 0.52 ) }
    dend_27 { pt3dadd( 42.8943, 132.117, -87.83, 0.66 ) }
    dend_27 { pt3dadd( 43.249, 132.634, -88.8167, 0.66 ) }
    dend_27 { pt3dadd( 43.7216, 133.152, -89.8824, 0.44 ) }
    dend_27 { pt3dadd( 43.7814, 133.207, -90.01, 0.44 ) }
    dend_27 { pt3dadd( 44.0098, 133.412, -90.5416, 0.44 ) }
    dend_27 { pt3dadd( 44.4058, 133.851, -91.6537, 1.18 ) }
    dend_27 { pt3dadd( 44.4283, 133.888, -91.7583, 1.18 ) }
    dend_27 { pt3dadd( 44.5357, 134.153, -92.4843, 1.18 ) }
    dend_27 { pt3dadd( 44.7001, 134.888, -94.4587, 1.18 ) }
    dend_27 { pt3dadd( 44.8049, 135.773, -96.9265, 0.66 ) }
    dend_27 { pt3dadd( 44.81, 136.416, -98.85, 1.47 ) }
    dend_27 { pt3dadd( 44.7449, 137.285, -101.561, 1.47 ) }
    dend_27 { pt3dadd( 44.7296, 137.379, -101.857, 1.47 ) }
    dend_27 { pt3dadd( 44.6162, 137.835, -103.277, 0.74 ) }
    dend_27 { pt3dadd( 44.4434, 138.511, -105.235, 1.03 ) }
    dend_27 { pt3dadd( 44.2507, 139.142, -106.892, 0.59 ) }
    dend_27 { pt3dadd( 44.1781, 139.34, -107.385, 0.59 ) }
    dend_27 { pt3dadd( 44.1188, 139.517, -107.795, 0.59 ) }
    dend_27 { pt3dadd( 43.9061, 140.381, -109.731, 0.59 ) }
    dend_27 { pt3dadd( 43.8853, 140.687, -110.306, 0.59 ) }
    dend_27 { pt3dadd( 43.898, 140.949, -110.642, 0.59 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 58/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 39.5311, 126.081, -69.0205, 0.37 ) }
    dend_6 { pt3dadd( 39.4898, 127.234, -69.5618, 0.37 ) }
    dend_6 { pt3dadd( 39.478, 128.135, -70.195, 0.37 ) }
    dend_6 { pt3dadd( 39.5431, 129.331, -71.2145, 0.37 ) }
    dend_6 { pt3dadd( 39.5477, 129.385, -71.2597, 0.37 ) }
    dend_6 { pt3dadd( 39.5869, 129.731, -71.5298, 0.37 ) }
    dend_6 { pt3dadd( 39.6552, 130.251, -71.9226, 1.11 ) }
    dend_6 { pt3dadd( 39.9113, 131.681, -73.1916, 0.52 ) }
    dend_6 { pt3dadd( 40.122, 132.6, -74.0342, 0.81 ) }
    dend_6 { pt3dadd( 40.2963, 133.28, -74.5869, 1.25 ) }
    dend_6 { pt3dadd( 40.4487, 133.843, -75.0482, 1.25 ) }
    dend_6 { pt3dadd( 40.4641, 133.896, -75.0921, 1.25 ) }
    dend_6 { pt3dadd( 40.9084, 135.419, -76.1958, 0.52 ) }
    dend_6 { pt3dadd( 40.9447, 135.561, -76.2967, 0.52 ) }
    dend_6 { pt3dadd( 41.1012, 136.409, -76.9684, 0.52 ) }
    dend_6 { pt3dadd( 41.1733, 137.193, -77.613, 0.74 ) }
    dend_6 { pt3dadd( 41.177, 137.298, -77.7095, 0.74 ) }
    dend_6 { pt3dadd( 41.1778, 138.368, -78.7151, 0.74 ) }
    dend_6 { pt3dadd( 41.1439, 140.033, -80.2547, 0.74 ) }
    dend_6 { pt3dadd( 41.119, 141.011, -81.1873, 1.84 ) }
    dend_6 { pt3dadd( 41.0954, 141.823, -81.9929, 1.84 ) }
    dend_6 { pt3dadd( 41.0433, 143.714, -83.851, 0.52 ) }
    dend_6 { pt3dadd( 41.0435, 143.772, -83.9073, 0.52 ) }
    dend_6 { pt3dadd( 41.0691, 144.352, -84.4721, 0.52 ) }
    dend_6 { pt3dadd( 41.225, 145.501, -85.4112, 0.52 ) }
    dend_6 { pt3dadd( 41.4249, 146.297, -86.0497, 0.52 ) }
    dend_6 { pt3dadd( 41.4472, 146.362, -86.0964, 0.52 ) }
    dend_6 { pt3dadd( 41.7122, 147.062, -86.4503, 0.52 ) }
    dend_6 { pt3dadd( 41.7673, 147.198, -86.517, 0.52 ) }
    dend_6 { pt3dadd( 42.0488, 147.84, -86.8172, 0.88 ) }
    dend_6 { pt3dadd( 42.3998, 148.599, -87.1109, 1.11 ) }
    dend_6 { pt3dadd( 42.7459, 149.442, -87.3917, 1.11 ) }
    dend_6 { pt3dadd( 43.0666, 150.4, -87.7261, 1.4 ) }
    dend_6 { pt3dadd( 43.2951, 151.243, -88.0289, 1.4 ) }
    dend_6 { pt3dadd( 43.3146, 151.319, -88.0544, 1.4 ) }
    dend_6 { pt3dadd( 43.5943, 152.45, -88.3795, 0.52 ) }
    dend_6 { pt3dadd( 43.869, 153.485, -88.6766, 0.52 ) }
    dend_6 { pt3dadd( 44.1279, 154.434, -88.9639, 0.81 ) }
    dend_6 { pt3dadd( 44.1464, 154.499, -88.9825, 0.81 ) }
    dend_6 { pt3dadd( 44.5044, 155.74, -89.3488, 0.81 ) }
    dend_6 { pt3dadd( 44.8619, 157.043, -89.7421, 0.81 ) }
    dend_6 { pt3dadd( 45.1783, 158.201, -90.1013, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_50()
}

proc basic_shape_50() {
    dend_6 { pt3dadd( 45.4402, 159.152, -90.3907, 0.37 ) }
    dend_6 { pt3dadd( 45.7366, 160.259, -90.7337, 0.37 ) }
    dend_6 { pt3dadd( 46.0016, 161.33, -91.0709, 1.11 ) }
    dend_6 { pt3dadd( 46.277, 162.569, -91.4743, 1.47 ) }
    dend_6 { pt3dadd( 46.2914, 162.635, -91.4945, 1.47 ) }
    dend_6 { pt3dadd( 46.4702, 163.47, -91.7281, 1.47 ) }
    dend_6 { pt3dadd( 46.7684, 164.907, -92.1089, 1.47 ) }
    dend_6 { pt3dadd( 46.9974, 166.168, -92.4543, 1.18 ) }
    dend_6 { pt3dadd( 47.0068, 166.226, -92.4693, 1.18 ) }
    dend_6 { pt3dadd( 47.1446, 167.152, -92.7139, 0.66 ) }
    dend_6 { pt3dadd( 47.2905, 168.276, -92.9926, 0.29 ) }
    dend_6 { pt3dadd( 47.5223, 170.527, -93.5898, 0.29 ) }
    dend_6 { pt3dadd( 47.6826, 172.48, -94.0944, 0.52 ) }
    dend_6 { pt3dadd( 47.7326, 173.234, -94.326, 0.96 ) }
    dend_6 { pt3dadd( 47.7657, 173.787, -94.5056, 1.18 ) }
    dend_6 { pt3dadd( 47.8295, 175.033, -94.9269, 1.18 ) }
    dend_6 { pt3dadd( 47.9037, 176.533, -95.4444, 0.96 ) }
    dend_6 { pt3dadd( 47.9742, 177.822, -95.9515, 0.59 ) }
    dend_6 { pt3dadd( 48.1056, 179.6, -96.6549, 0.59 ) }
    dend_6 { pt3dadd( 48.1944, 180.675, -97.1234, 0.96 ) }
    // Section: dend_148, id: dend_148, parent: dend_146 (entry count 20/100)
    dend_148 { pt3dclear() }
    dend_148 { pt3dadd( 143.127, -213.712, 22.3104, 1.33 ) }
    dend_148 { pt3dadd( 143.856, -214.448, 23.3947, 1.33 ) }
    dend_148 { pt3dadd( 144.257, -214.847, 23.9635, 0.66 ) }
    dend_148 { pt3dadd( 144.893, -215.488, 24.9011, 0.29 ) }
    dend_148 { pt3dadd( 146.312, -217.068, 26.9533, 0.52 ) }
    dend_148 { pt3dadd( 146.687, -217.498, 27.4753, 0.52 ) }
    dend_148 { pt3dadd( 146.941, -217.808, 27.8132, 0.66 ) }
    dend_148 { pt3dadd( 146.976, -217.854, 27.8543, 0.66 ) }
    dend_148 { pt3dadd( 147.538, -218.642, 28.4931, 0.81 ) }
    dend_148 { pt3dadd( 148.146, -219.542, 28.9718, 0.52 ) }
    dend_148 { pt3dadd( 148.304, -219.788, 29.0176, 0.88 ) }
    dend_148 { pt3dadd( 148.711, -220.446, 29.1095, 1.03 ) }
    dend_148 { pt3dadd( 149.247, -221.311, 29.1992, 1.62 ) }
    dend_148 { pt3dadd( 149.286, -221.372, 29.2018, 1.62 ) }
    dend_148 { pt3dadd( 149.913, -222.294, 29.1242, 1.92 ) }
    dend_148 { pt3dadd( 150.229, -222.71, 29.0827, 2.14 ) }
    dend_148 { pt3dadd( 150.484, -223.044, 29.05, 2.14 ) }
    // Section: dend_147, id: dend_147, parent: dend_146 (entry count 37/100)
    dend_147 { pt3dclear() }
    dend_147 { pt3dadd( 143.127, -213.712, 22.3104, 0.29 ) }
    dend_147 { pt3dadd( 142.841, -212.433, 22.6435, 0.29 ) }
    dend_147 { pt3dadd( 142.731, -211.943, 22.771, 0.29 ) }
    dend_147 { pt3dadd( 142.716, -211.877, 22.7883, 0.29 ) }
    dend_147 { pt3dadd( 142.502, -210.921, 23.0372, 0.29 ) }
    dend_147 { pt3dadd( 142.487, -210.852, 23.0552, 0.29 ) }
    dend_147 { pt3dadd( 142.43, -210.598, 23.1215, 0.74 ) }
    // Section: dend_143, id: dend_143, parent: dend_141 (entry count 44/100)
    dend_143 { pt3dclear() }
    dend_143 { pt3dadd( 97.3439, -264.769, -38.5906, 0.22 ) }
    dend_143 { pt3dadd( 96.7574, -266.47, -37.3471, 0.22 ) }
    dend_143 { pt3dadd( 96.5172, -267.081, -36.9963, 0.22 ) }
    dend_143 { pt3dadd( 96.3608, -267.489, -36.8094, 0.37 ) }
    dend_143 { pt3dadd( 96.2159, -267.87, -36.6704, 0.37 ) }
    dend_143 { pt3dadd( 96.1901, -267.943, -36.6417, 0.37 ) }
    dend_143 { pt3dadd( 95.8468, -268.981, -36.2449, 0.37 ) }
    dend_143 { pt3dadd( 95.716, -269.309, -36.1604, 0.81 ) }
    dend_143 { pt3dadd( 95.5342, -269.777, -36.0239, 1.03 ) }
    dend_143 { pt3dadd( 95.3288, -270.326, -35.8581, 1.03 ) }
    dend_143 { pt3dadd( 94.9011, -271.438, -35.5375, 0.81 ) }
    dend_143 { pt3dadd( 94.6618, -272.029, -35.371, 0.81 ) }
    dend_143 { pt3dadd( 94.4927, -272.426, -35.2717, 0.52 ) }
    dend_143 { pt3dadd( 94.4639, -272.49, -35.2592, 0.52 ) }
    dend_143 { pt3dadd( 94.1313, -273.233, -35.1448, 0.52 ) }
    dend_143 { pt3dadd( 93.7296, -274.216, -35.0506, 0.52 ) }
    dend_143 { pt3dadd( 93.7035, -274.284, -35.0486, 0.52 ) }
    dend_143 { pt3dadd( 93.3272, -275.399, -35.0156, 0.52 ) }
    dend_143 { pt3dadd( 93.1168, -276.038, -34.9988, 1.11 ) }
    dend_143 { pt3dadd( 92.9805, -276.403, -34.9904, 1.11 ) }
    dend_143 { pt3dadd( 92.7282, -277.025, -34.978, 0.29 ) }
    dend_143 { pt3dadd( 92.68, -277.121, -34.9766, 0.29 ) }
    dend_143 { pt3dadd( 92.3865, -277.63, -34.969, 0.29 ) }
    dend_143 { pt3dadd( 91.7573, -278.646, -34.9597, 0.29 ) }
    dend_143 { pt3dadd( 91.388, -279.214, -34.9553, 0.22 ) }
    dend_143 { pt3dadd( 91.3494, -279.273, -34.9547, 0.22 ) }
    dend_143 { pt3dadd( 90.9112, -279.976, -34.9464, 0.22 ) }
    dend_143 { pt3dadd( 90.4657, -280.758, -34.9364, 0.22 ) }
    dend_143 { pt3dadd( 90.0088, -281.607, -34.9244, 0.29 ) }
    dend_143 { pt3dadd( 89.7724, -282.135, -34.9162, 0.29 ) }
    dend_143 { pt3dadd( 89.5079, -282.82, -34.9052, 0.29 ) }
    dend_143 { pt3dadd( 89.399, -283.131, -34.9004, 0.37 ) }
    dend_143 { pt3dadd( 89.3587, -283.276, -34.8982, 0.37 ) }
    // Section: dend_142, id: dend_142, parent: dend_141 (entry count 77/100)
    dend_142 { pt3dclear() }
    dend_142 { pt3dadd( 97.3439, -264.769, -38.5906, 0.37 ) }
    dend_142 { pt3dadd( 95.9522, -266.273, -39.468, 0.37 ) }
    dend_142 { pt3dadd( 95.693, -266.596, -39.6177, 0.37 ) }
    dend_142 { pt3dadd( 95.1252, -267.391, -39.9959, 0.37 ) }
    dend_142 { pt3dadd( 94.5218, -268.293, -40.429, 0.37 ) }
    dend_142 { pt3dadd( 94.4868, -268.349, -40.455, 0.37 ) }
    dend_142 { pt3dadd( 93.934, -269.299, -40.8746, 0.37 ) }
    dend_142 { pt3dadd( 93.6383, -269.939, -41.0818, 1.33 ) }
    dend_142 { pt3dadd( 93.2317, -270.974, -41.4032, 1.33 ) }
    dend_142 { pt3dadd( 93.2192, -271.031, -41.4174, 1.33 ) }
    dend_142 { pt3dadd( 93.1669, -271.588, -41.5433, 0.37 ) }
    dend_142 { pt3dadd( 93.1527, -272.093, -41.6635, 0.37 ) }
    dend_142 { pt3dadd( 93.2213, -272.879, -41.858, 0.37 ) }
    dend_142 { pt3dadd( 93.2365, -272.947, -41.8729, 0.37 ) }
    dend_142 { pt3dadd( 93.7609, -274.492, -42.2649, 0.37 ) }
    dend_142 { pt3dadd( 94.0558, -275.218, -42.5031, 0.22 ) }
    dend_142 { pt3dadd( 94.1181, -275.345, -42.5541, 0.22 ) }
    dend_142 { pt3dadd( 94.388, -275.819, -42.7782, 0.22 ) }
    dend_142 { pt3dadd( 94.7791, -276.454, -43.161, 0.22 ) }
    dend_142 { pt3dadd( 95.2246, -277.293, -43.6854, 0.81 ) }
    dend_142 { pt3dadd( 95.3549, -277.66, -43.8916, 1.11 ) }
    dend_142 { pt3dadd( 95.4351, -278.017, -44.0541, 1.11 ) }
    dend_142 { pt3dadd( 95.4446, -278.092, -44.0786, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_51()
}

proc basic_shape_51() {
    dend_142 { pt3dadd( 95.5105, -279.284, -44.363, 0.29 ) }
    dend_142 { pt3dadd( 95.5395, -280.303, -44.5122, 0.29 ) }
    dend_142 { pt3dadd( 95.5759, -281.627, -44.5888, 0.29 ) }
    dend_142 { pt3dadd( 95.5784, -281.722, -44.591, 0.29 ) }
    dend_142 { pt3dadd( 95.589, -283.161, -44.5712, 0.29 ) }
    dend_142 { pt3dadd( 95.5871, -283.253, -44.5606, 0.29 ) }
    dend_142 { pt3dadd( 95.5334, -284.177, -44.3516, 0.29 ) }
    dend_142 { pt3dadd( 95.5099, -284.473, -44.2701, 0.74 ) }
    dend_142 { pt3dadd( 95.4297, -285.257, -44.0419, 0.74 ) }
    dend_142 { pt3dadd( 95.3159, -286.103, -43.8066, 0.59 ) }
    dend_142 { pt3dadd( 95.0771, -287.403, -43.4745, 0.59 ) }
    dend_142 { pt3dadd( 94.9983, -287.797, -43.3834, 0.74 ) }
    dend_142 { pt3dadd( 94.8932, -288.314, -43.2537, 0.37 ) }
    dend_142 { pt3dadd( 94.697, -289.357, -42.9899, 0.29 ) }
    dend_142 { pt3dadd( 94.6064, -289.997, -42.8045, 0.29 ) }
    dend_142 { pt3dadd( 94.5665, -290.343, -42.7036, 1.33 ) }
    dend_142 { pt3dadd( 94.4864, -291.195, -42.48, 1.69 ) }
    dend_142 { pt3dadd( 94.3976, -292.21, -42.1818, 1.69 ) }
    dend_142 { pt3dadd( 94.3921, -292.268, -42.1632, 1.69 ) }
    dend_142 { pt3dadd( 94.2892, -293.489, -41.7191, 0.22 ) }
    dend_142 { pt3dadd( 94.2324, -294.287, -41.4273, 0.22 ) }
    dend_142 { pt3dadd( 94.2093, -294.644, -41.298, 0.22 ) }
    dend_142 { pt3dadd( 94.1872, -294.985, -41.1834, 0.59 ) }
    dend_142 { pt3dadd( 94.1578, -295.418, -41.0814, 0.59 ) }
    dend_142 { pt3dadd( 94.1242, -296.068, -40.958, 0.15 ) }
    dend_142 { pt3dadd( 94.1276, -296.657, -40.8949, 0.15 ) }
    dend_142 { pt3dadd( 94.1424, -296.808, -40.8714, 0.15 ) }
    dend_142 { pt3dadd( 94.1786, -297.092, -40.8194, 0.15 ) }
    dend_142 { pt3dadd( 94.3286, -298.174, -40.612, 0.15 ) }
    dend_142 { pt3dadd( 94.3388, -298.244, -40.5986, 0.15 ) }
    dend_142 { pt3dadd( 94.4641, -299.139, -40.439, 0.15 ) }
    dend_142 { pt3dadd( 94.5601, -299.869, -40.2945, 0.59 ) }
    dend_142 { pt3dadd( 94.6017, -300.228, -40.2186, 0.96 ) }
    dend_142 { pt3dadd( 94.658, -300.729, -40.1001, 1.25 ) }
    dend_142 { pt3dadd( 94.7215, -301.045, -40.0046, 1.25 ) }
    // Section: dend_140, id: dend_140, parent: dend_134 (entry count 35/100)
    dend_140 { pt3dclear() }
    dend_140 { pt3dadd( 122.436, -214.989, 4.90606, 0.44 ) }
    dend_140 { pt3dadd( 120.93, -216.034, 2.71095, 0.44 ) }
    dend_140 { pt3dadd( 119.995, -216.683, 1.34921, 0.44 ) }
    dend_140 { pt3dadd( 119.623, -216.941, 0.806942, 0.74 ) }
    // Section: dend_135, id: dend_135, parent: dend_134 (entry count 39/100)
    dend_135 { pt3dclear() }
    dend_135 { pt3dadd( 122.436, -214.989, 4.90606, 0.81 ) }
    dend_135 { pt3dadd( 123.355, -215.473, 4.98717, 0.81 ) }
    dend_135 { pt3dadd( 124.192, -215.913, 5.05515, 0.59 ) }
    dend_135 { pt3dadd( 125.658, -216.758, 5.21061, 0.59 ) }
    dend_135 { pt3dadd( 125.904, -216.931, 5.22958, 0.59 ) }
    dend_135 { pt3dadd( 126.274, -217.245, 5.23919, 1.03 ) }
    dend_135 { pt3dadd( 126.885, -217.824, 5.23517, 1.4 ) }
    dend_135 { pt3dadd( 126.923, -217.871, 5.23167, 1.4 ) }
    dend_135 { pt3dadd( 127.355, -218.533, 5.15838, 0.37 ) }
    dend_135 { pt3dadd( 128.074, -219.848, 4.99439, 0.37 ) }
    dend_135 { pt3dadd( 128.526, -220.64, 4.89095, 0.37 ) }
    dend_135 { pt3dadd( 128.565, -220.71, 4.88129, 0.37 ) }
    dend_135 { pt3dadd( 129.201, -221.917, 4.71507, 0.37 ) }
    dend_135 { pt3dadd( 129.549, -222.575, 4.63842, 0.37 ) }
    dend_135 { pt3dadd( 129.587, -222.646, 4.6312, 0.37 ) }
    dend_135 { pt3dadd( 129.991, -223.349, 4.65382, 1.25 ) }
    dend_135 { pt3dadd( 130.245, -223.774, 4.69645, 1.25 ) }
    dend_135 { pt3dadd( 130.549, -224.279, 4.75722, 0.44 ) }
    dend_135 { pt3dadd( 131.396, -225.608, 5.03261, 0.44 ) }
    dend_135 { pt3dadd( 131.438, -225.674, 5.04936, 0.44 ) }
    dend_135 { pt3dadd( 132.148, -226.796, 5.34784, 0.44 ) }
    dend_135 { pt3dadd( 132.46, -227.306, 5.4977, 0.74 ) }
    dend_135 { pt3dadd( 132.761, -227.737, 5.61399, 0.74 ) }
    dend_135 { pt3dadd( 133.474, -228.648, 5.8661, 0.29 ) }
    dend_135 { pt3dadd( 133.571, -228.76, 5.8967, 0.29 ) }
    dend_135 { pt3dadd( 134.369, -229.63, 6.15979, 0.29 ) }
    dend_135 { pt3dadd( 134.929, -230.194, 6.32374, 0.29 ) }
    dend_135 { pt3dadd( 135.758, -230.94, 6.64528, 0.29 ) }
    dend_135 { pt3dadd( 136.388, -231.468, 6.91358, 0.59 ) }
    dend_135 { pt3dadd( 136.892, -231.875, 7.12323, 0.74 ) }
    dend_135 { pt3dadd( 137.916, -232.643, 7.58121, 0.44 ) }
    dend_135 { pt3dadd( 139.185, -233.503, 8.2167, 0.44 ) }
    dend_135 { pt3dadd( 140.586, -234.457, 8.99299, 0.44 ) }
    dend_135 { pt3dadd( 140.653, -234.507, 9.03692, 0.44 ) }
    // Section: dend_125, id: dend_125, parent: dend_121 (entry count 73/100)
    dend_125 { pt3dclear() }
    dend_125 { pt3dadd( -87.9821, -311.095, 5.52013, 0.59 ) }
    dend_125 { pt3dadd( -89.1226, -310.832, 2.92847, 0.59 ) }
    dend_125 { pt3dadd( -89.4313, -310.782, 2.3312, 0.59 ) }
    dend_125 { pt3dadd( -89.4663, -310.777, 2.26992, 0.59 ) }
    dend_125 { pt3dadd( -89.9131, -310.725, 1.54985, 0.59 ) }
    dend_125 { pt3dadd( -90.4811, -310.662, 0.687288, 0.81 ) }
    dend_125 { pt3dadd( -91.0765, -310.662, -0.191394, 0.29 ) }
    dend_125 { pt3dadd( -91.3283, -310.689, -0.501313, 0.74 ) }
    dend_125 { pt3dadd( -91.4169, -310.701, -0.625427, 0.74 ) }
    dend_125 { pt3dadd( -91.5429, -310.706, -0.796086, 0.74 ) }
    dend_125 { pt3dadd( -91.5849, -310.701, -0.852788, 0.74 ) }
    dend_125 { pt3dadd( -92.515, -310.551, -1.96762, 0.22 ) }
    dend_125 { pt3dadd( -93.2713, -310.37, -2.87303, 0.22 ) }
    dend_125 { pt3dadd( -93.3181, -310.358, -2.92739, 0.22 ) }
    dend_125 { pt3dadd( -93.9527, -310.216, -3.5977, 0.22 ) }
    dend_125 { pt3dadd( -94.8169, -310.054, -4.38422, 0.22 ) }
    dend_125 { pt3dadd( -95.2801, -309.946, -4.83849, 0.22 ) }
    dend_125 { pt3dadd( -95.3293, -309.93, -4.88959, 0.22 ) }
    dend_125 { pt3dadd( -95.5342, -309.872, -5.12036, 0.59 ) }
    dend_125 { pt3dadd( -95.911, -309.762, -5.62122, 0.59 ) }
    dend_125 { pt3dadd( -96.1568, -309.69, -5.99618, 0.59 ) }
    dend_125 { pt3dadd( -97.2102, -309.307, -7.77555, 0.29 ) }
    dend_125 { pt3dadd( -97.7672, -309.06, -8.85191, 0.29 ) }
    dend_125 { pt3dadd( -97.797, -309.044, -8.91402, 0.29 ) }
    dend_125 { pt3dadd( -98.0752, -308.849, -9.56367, 0.59 ) }
    dend_125 { pt3dadd( -98.1486, -308.78, -9.76136, 0.88 ) }
    // Section: dend_122, id: dend_122, parent: dend_121 (entry count 99/100)
    dend_122 { pt3dclear() }
    dend_122 { pt3dadd( -87.9821, -311.095, 5.52013, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_52()
}

proc basic_shape_52() {
    dend_122 { pt3dadd( -89.0513, -312.368, 5.64003, 0.52 ) }
    dend_122 { pt3dadd( -89.9518, -313.509, 5.73367, 0.52 ) }
    dend_122 { pt3dadd( -90.3198, -314.004, 5.76618, 0.74 ) }
    dend_122 { pt3dadd( -90.5691, -314.369, 5.78627, 0.74 ) }
    dend_122 { pt3dadd( -90.8567, -314.811, 5.80755, 0.59 ) }
    dend_122 { pt3dadd( -91.2986, -315.509, 5.83853, 0.59 ) }
    dend_122 { pt3dadd( -91.7855, -316.363, 5.89017, 0.52 ) }
    dend_122 { pt3dadd( -92.4178, -317.557, 5.90067, 0.52 ) }
    dend_122 { pt3dadd( -92.7616, -318.214, 5.90512, 0.52 ) }
    dend_122 { pt3dadd( -93.0177, -318.693, 5.89881, 0.52 ) }
    dend_122 { pt3dadd( -93.0521, -318.757, 5.89337, 0.52 ) }
    dend_122 { pt3dadd( -93.4685, -319.473, 5.77652, 0.52 ) }
    dend_122 { pt3dadd( -93.7991, -319.989, 5.64631, 0.52 ) }
    dend_122 { pt3dadd( -94.0125, -320.283, 5.55288, 1.03 ) }
    dend_122 { pt3dadd( -94.4266, -320.788, 5.34838, 0.52 ) }
    dend_122 { pt3dadd( -95.0209, -321.497, 5.03894, 0.74 ) }
    dend_122 { pt3dadd( -95.51, -322.064, 4.77941, 0.74 ) }
    dend_122 { pt3dadd( -95.7989, -322.397, 4.62994, 0.74 ) }
    dend_122 { pt3dadd( -96.5503, -323.298, 4.30244, 0.74 ) }
    dend_122 { pt3dadd( -97.0751, -323.984, 4.127, 0.81 ) }
    dend_122 { pt3dadd( -97.4647, -324.537, 4.0427, 0.81 ) }
    dend_122 { pt3dadd( -97.7111, -324.893, 4.02495, 0.37 ) }
    dend_122 { pt3dadd( -98.3035, -325.795, 3.99288, 0.37 ) }
    dend_122 { pt3dadd( -98.749, -326.523, 3.90633, 0.37 ) }
    dend_122 { pt3dadd( -99.0996, -327.162, 3.77523, 0.37 ) }
    dend_122 { pt3dadd( -99.1618, -327.285, 3.73865, 0.37 ) }
    dend_122 { pt3dadd( -99.8514, -328.704, 3.17103, 0.37 ) }
    dend_122 { pt3dadd( -100.229, -329.508, 2.78964, 0.37 ) }
    dend_122 { pt3dadd( -100.877, -330.901, 1.99799, 0.59 ) }
    dend_122 { pt3dadd( -101.193, -331.586, 1.57468, 0.74 ) }
    dend_122 { pt3dadd( -101.674, -332.566, 0.957597, 0.74 ) }
    dend_122 { pt3dadd( -101.734, -332.678, 0.888315, 0.74 ) }
    dend_122 { pt3dadd( -102.042, -333.145, 0.608674, 0.74 ) }
    dend_122 { pt3dadd( -102.088, -333.196, 0.585527, 0.74 ) }
    dend_122 { pt3dadd( -102.871, -333.882, 0.43533, 0.74 ) }
    dend_122 { pt3dadd( -103.496, -334.389, 0.37425, 0.74 ) }
    dend_122 { pt3dadd( -104.059, -334.854, 0.284791, 0.66 ) }
    dend_122 { pt3dadd( -104.815, -335.576, 0.0979308, 0.66 ) }
    dend_122 { pt3dadd( -105.118, -335.915, -0.0109527, 1.03 ) }
    dend_122 { pt3dadd( -105.864, -336.893, -0.339651, 1.03 ) }
    dend_122 { pt3dadd( -106.322, -337.581, -0.575493, 1.03 ) }
    dend_122 { pt3dadd( -107.072, -338.904, -1.00628, 0.81 ) }
    dend_122 { pt3dadd( -107.488, -339.758, -1.26527, 0.59 ) }
    dend_122 { pt3dadd( -107.932, -340.713, -1.53006, 0.59 ) }
    dend_122 { pt3dadd( -108.401, -341.649, -1.75861, 0.59 ) }
    dend_122 { pt3dadd( -108.759, -342.308, -1.89515, 0.88 ) }
    dend_122 { pt3dadd( -109.164, -342.971, -1.98992, 1.47 ) }
    dend_122 { pt3dadd( -109.495, -343.443, -2.0139, 1.47 ) }
    dend_122 { pt3dadd( -110.262, -344.427, -2.04654, 1.03 ) }
    dend_122 { pt3dadd( -110.911, -345.26, -2.0545, 0.88 ) }
    dend_122 { pt3dadd( -110.954, -345.318, -2.06037, 0.88 ) }
    dend_122 { pt3dadd( -111.383, -345.947, -2.15844, 1.4 ) }
    dend_122 { pt3dadd( -111.65, -346.389, -2.24095, 1.55 ) }
    dend_122 { pt3dadd( -112.002, -347.049, -2.37658, 0.96 ) }
    dend_122 { pt3dadd( -112.625, -348.462, -2.6845, 0.96 ) }
    dend_122 { pt3dadd( -113.304, -350.158, -3.12325, 0.59 ) }
    dend_122 { pt3dadd( -113.847, -351.511, -3.55145, 0.59 ) }
    dend_122 { pt3dadd( -114.041, -351.982, -3.72041, 0.88 ) }
    dend_122 { pt3dadd( -114.27, -352.484, -3.91421, 1.25 ) }
    dend_122 { pt3dadd( -114.482, -352.888, -4.10255, 1.25 ) }
    dend_122 { pt3dadd( -115.276, -354.23, -4.80934, 1.18 ) }
    dend_122 { pt3dadd( -115.979, -355.307, -5.39278, 1.18 ) }
    dend_122 { pt3dadd( -116.459, -355.951, -5.77358, 1.18 ) }
    dend_122 { pt3dadd( -116.997, -356.622, -6.14022, 1.18 ) }
    dend_122 { pt3dadd( -117.857, -357.662, -6.66605, 0.29 ) }
    dend_122 { pt3dadd( -118.302, -358.19, -6.89604, 0.29 ) }
    dend_122 { pt3dadd( -118.408, -358.32, -6.93757, 0.29 ) }
    dend_122 { pt3dadd( -118.884, -358.938, -7.07813, 0.29 ) }
    dend_122 { pt3dadd( -119.9, -360.337, -7.33391, 0.29 ) }
    dend_122 { pt3dadd( -119.94, -360.395, -7.33976, 0.29 ) }
    dend_122 { pt3dadd( -120.209, -360.799, -7.33195, 0.88 ) }
    dend_122 { pt3dadd( -120.251, -360.859, -7.33032, 0.88 ) }
    dend_122 { pt3dadd( -120.562, -361.311, -7.31342, 0.96 ) }
    dend_122 { pt3dadd( -120.604, -361.38, -7.31038, 0.96 ) }
    dend_122 { pt3dadd( -120.834, -361.896, -7.28538, 0.96 ) }
    dend_122 { pt3dadd( -121.198, -362.816, -7.2388, 0.52 ) }
    dend_122 { pt3dadd( -121.41, -363.406, -7.20787, 0.52 ) }
    dend_122 { pt3dadd( -121.439, -363.496, -7.20449, 0.52 ) }
    dend_122 { pt3dadd( -121.73, -364.55, -7.17882, 0.52 ) }
    dend_122 { pt3dadd( -122.048, -365.78, -7.16212, 0.52 ) }
    dend_122 { pt3dadd( -122.132, -366.097, -7.16212, 0.66 ) }
    dend_122 { pt3dadd( -122.153, -366.174, -7.16264, 0.66 ) }
    dend_122 { pt3dadd( -122.408, -366.967, -7.17095, 0.66 ) }
    dend_122 { pt3dadd( -122.671, -367.613, -7.17787, 0.52 ) }
    dend_122 { pt3dadd( -122.742, -367.746, -7.17819, 0.52 ) }
    dend_122 { pt3dadd( -123.368, -368.736, -7.11203, 0.52 ) }
    dend_122 { pt3dadd( -123.588, -369.073, -7.06849, 0.74 ) }
    dend_122 { pt3dadd( -123.875, -369.507, -6.98263, 0.96 ) }
    dend_122 { pt3dadd( -124.053, -369.765, -6.90705, 0.96 ) }
    dend_122 { pt3dadd( -124.079, -369.815, -6.88728, 0.96 ) }
    dend_122 { pt3dadd( -124.386, -370.484, -6.60594, 0.59 ) }
    dend_122 { pt3dadd( -124.47, -370.681, -6.52683, 0.44 ) }
    dend_122 { pt3dadd( -124.657, -371.122, -6.36783, 0.37 ) }
    dend_122 { pt3dadd( -124.682, -371.185, -6.34895, 0.37 ) }
    dend_122 { pt3dadd( -125.075, -372.329, -6.00693, 0.15 ) }
    dend_122 { pt3dadd( -125.295, -373.133, -5.55842, 0.15 ) }
    dend_122 { pt3dadd( -125.538, -373.946, -4.97362, 0.15 ) }
    dend_122 { pt3dadd( -125.556, -373.998, -4.92893, 0.15 ) }
    dend_122 { pt3dadd( -125.876, -374.794, -4.13873, 0.15 ) }
    dend_122 { pt3dadd( -126.237, -375.581, -3.25631, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_53()
}

proc basic_shape_53() {
    dend_122 { pt3dadd( -127.301, -377.458, -0.73047, 0.15 ) }
    dend_122 { pt3dadd( -127.594, -377.924, -0.0186239, 0.15 ) }
    dend_122 { pt3dadd( -127.754, -378.136, 0.349477, 0.88 ) }
    dend_122 { pt3dadd( -127.967, -378.384, 0.759626, 0.88 ) }
    dend_122 { pt3dadd( -128.007, -378.422, 0.818793, 0.88 ) }
    dend_122 { pt3dadd( -128.452, -378.827, 1.25208, 0.22 ) }
    dend_122 { pt3dadd( -128.823, -379.232, 1.4861, 0.22 ) }
    dend_122 { pt3dadd( -128.895, -379.335, 1.54979, 0.22 ) }
    dend_122 { pt3dadd( -129.404, -380.165, 2.08474, 0.22 ) }
    dend_122 { pt3dadd( -129.895, -380.999, 2.74826, 0.22 ) }
    dend_122 { pt3dadd( -130.294, -381.634, 3.31321, 1.03 ) }
    dend_122 { pt3dadd( -130.33, -381.686, 3.364, 1.03 ) }
    dend_122 { pt3dadd( -130.667, -382.082, 3.80339, 1.33 ) }
    dend_122 { pt3dadd( -130.706, -382.121, 3.8502, 1.33 ) }
    dend_122 { pt3dadd( -131.636, -382.9, 4.83803, 0.59 ) }
    dend_122 { pt3dadd( -131.961, -383.179, 5.13054, 0.52 ) }
    dend_122 { pt3dadd( -132.193, -383.406, 5.32068, 0.44 ) }
    dend_122 { pt3dadd( -132.613, -383.894, 5.66621, 0.22 ) }
    dend_122 { pt3dadd( -132.647, -383.949, 5.69536, 0.22 ) }
    dend_122 { pt3dadd( -132.751, -384.199, 5.80872, 0.52 ) }
    dend_122 { pt3dadd( -132.864, -384.608, 5.95269, 0.88 ) }
    dend_122 { pt3dadd( -132.973, -385.139, 6.1518, 0.88 ) }
    dend_122 { pt3dadd( -133.091, -385.782, 6.39939, 0.29 ) }
    dend_122 { pt3dadd( -133.248, -386.561, 6.74096, 0.29 ) }
    dend_122 { pt3dadd( -133.484, -387.448, 7.17956, 0.29 ) }
    dend_122 { pt3dadd( -133.587, -387.754, 7.34307, 0.29 ) }
    dend_122 { pt3dadd( -133.613, -387.812, 7.37444, 0.29 ) }
    dend_122 { pt3dadd( -133.773, -388.164, 7.53856, 0.52 ) }
    dend_122 { pt3dadd( -134.045, -388.824, 7.76799, 0.74 ) }
    dend_122 { pt3dadd( -134.268, -389.392, 7.91724, 0.88 ) }
    dend_122 { pt3dadd( -134.434, -389.894, 7.98282, 0.29 ) }
    dend_122 { pt3dadd( -134.63, -390.53, 8.01014, 0.29 ) }
    dend_122 { pt3dadd( -134.96, -391.607, 7.98638, 0.29 ) }
    dend_122 { pt3dadd( -135.199, -392.354, 7.88398, 0.29 ) }
    dend_122 { pt3dadd( -135.221, -392.42, 7.86863, 0.29 ) }
    dend_122 { pt3dadd( -135.605, -393.449, 7.57025, 0.29 ) }
    dend_122 { pt3dadd( -135.954, -394.304, 7.28468, 0.88 ) }
    dend_122 { pt3dadd( -136.145, -394.74, 7.12523, 1.55 ) }
    dend_122 { pt3dadd( -136.613, -395.754, 6.69784, 0.81 ) }
    dend_122 { pt3dadd( -136.792, -396.194, 6.48867, 0.59 ) }
    dend_122 { pt3dadd( -136.971, -396.747, 6.21354, 0.52 ) }
    dend_122 { pt3dadd( -136.982, -396.81, 6.18217, 0.52 ) }
    dend_122 { pt3dadd( -136.996, -397.407, 5.90018, 0.52 ) }
    dend_122 { pt3dadd( -136.911, -398.163, 5.56368, 0.52 ) }
    dend_122 { pt3dadd( -136.691, -399.063, 5.20786, 0.44 ) }
    dend_122 { pt3dadd( -136.668, -399.135, 5.17941, 0.44 ) }
    dend_122 { pt3dadd( -136.45, -399.781, 4.92058, 0.44 ) }
    dend_122 { pt3dadd( -136.373, -400.015, 4.82585, 0.29 ) }
    dend_122 { pt3dadd( -136.22, -400.489, 4.63669, 0.29 ) }
    dend_122 { pt3dadd( -135.884, -401.508, 4.33496, 0.29 ) }
    dend_122 { pt3dadd( -135.81, -401.721, 4.28631, 0.96 ) }
    dend_122 { pt3dadd( -135.448, -402.722, 4.09688, 0.29 ) }
    dend_122 { pt3dadd( -135.259, -403.244, 4.0236, 0.66 ) }
    dend_122 { pt3dadd( -135.231, -403.319, 4.01878, 0.66 ) }
    dend_122 { pt3dadd( -134.842, -404.291, 4.05316, 0.22 ) }
    dend_122 { pt3dadd( -134.814, -404.355, 4.06469, 0.22 ) }
    dend_122 { pt3dadd( -134.508, -405.044, 4.21896, 0.22 ) }
    dend_122 { pt3dadd( -134.415, -405.248, 4.27754, 0.44 ) }
    dend_122 { pt3dadd( -134.271, -405.713, 4.37632, 0.44 ) }
    dend_122 { pt3dadd( -134.257, -405.782, 4.37955, 0.44 ) }
    dend_122 { pt3dadd( -134.175, -406.318, 4.33889, 0.22 ) }
    dend_122 { pt3dadd( -134.099, -406.823, 4.283, 0.44 ) }
    dend_122 { pt3dadd( -133.995, -407.313, 4.21182, 0.44 ) }
    dend_122 { pt3dadd( -133.746, -408.225, 4.05436, 0.22 ) }
    dend_122 { pt3dadd( -133.483, -408.992, 3.90726, 0.88 ) }
    dend_122 { pt3dadd( -133.255, -409.672, 3.77252, 1.33 ) }
    dend_122 { pt3dadd( -133.226, -409.765, 3.75242, 1.33 ) }
    dend_122 { pt3dadd( -132.911, -410.656, 3.5418, 0.59 ) }
    dend_122 { pt3dadd( -132.778, -410.753, 3.51913, 0.59 ) }
    dend_122 { pt3dadd( -133.11, -410.791, 3.48835, 0.59 ) }
    dend_122 { pt3dadd( -134.224, -411.024, 3.35559, 0.59 ) }
    dend_122 { pt3dadd( -134.737, -411.154, 3.28726, 0.74 ) }
    dend_122 { pt3dadd( -136.237, -411.633, 2.99294, 0.66 ) }
    dend_122 { pt3dadd( -136.936, -411.888, 2.82074, 0.37 ) }
    dend_122 { pt3dadd( -136.997, -411.918, 2.80119, 0.37 ) }
    dend_122 { pt3dadd( -136.713, -412.576, 2.39584, 0.37 ) }
    dend_122 { pt3dadd( -136.684, -412.631, 2.36084, 0.37 ) }
    dend_122 { pt3dadd( -136.225, -413.411, 1.87097, 0.37 ) }
    dend_122 { pt3dadd( -136.185, -413.47, 1.83475, 0.37 ) }
    dend_122 { pt3dadd( -135.772, -414.08, 1.45253, 0.37 ) }
    dend_122 { pt3dadd( -135.734, -414.142, 1.41255, 0.37 ) }
    dend_122 { pt3dadd( -135.307, -415.047, 0.785354, 0.37 ) }
    // Section: dend_106, id: dend_106, parent: dend_104 (entry count 82/100)
    dend_106 { pt3dclear() }
    dend_106 { pt3dadd( -32.7793, -379.251, 1.22642, 0.52 ) }
    dend_106 { pt3dadd( -32.8047, -380.422, 1.35855, 0.52 ) }
    dend_106 { pt3dadd( -32.835, -381.375, 1.28779, 0.52 ) }
    dend_106 { pt3dadd( -32.8833, -382.701, 1.1028, 0.52 ) }
    dend_106 { pt3dadd( -32.8922, -382.866, 1.07444, 0.52 ) }
    dend_106 { pt3dadd( -32.9986, -384.535, 0.767777, 0.52 ) }
    dend_106 { pt3dadd( -33.004, -384.606, 0.75423, 0.52 ) }
    dend_106 { pt3dadd( -33.1335, -386.682, 0.194762, 0.52 ) }
    dend_106 { pt3dadd( -33.1382, -386.74, 0.177403, 0.52 ) }
    dend_106 { pt3dadd( -33.2775, -387.85, -0.19974, 0.52 ) }
    dend_106 { pt3dadd( -33.2921, -387.938, -0.228628, 0.52 ) }
    dend_106 { pt3dadd( -33.3322, -388.117, -0.287458, 0.88 ) }
    dend_106 { pt3dadd( -33.3433, -388.174, -0.299682, 0.88 ) }
    dend_106 { pt3dadd( -33.422, -388.69, -0.293979, 1.11 ) }
    dend_106 { pt3dadd( -33.4282, -388.749, -0.294047, 1.11 ) }
    dend_106 { pt3dadd( -33.4598, -389.482, -0.296158, 1.11 ) }
    dend_106 { pt3dadd( -33.4626, -389.582, -0.296873, 1.11 ) }
    dend_106 { pt3dadd( -33.4682, -390.392, -0.301311, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_54()
}

proc basic_shape_54() {
    dend_106 { pt3dadd( -33.4681, -390.492, -0.301577, 0.81 ) }
    dend_106 { pt3dadd( -33.4523, -391.315, -0.311828, 0.81 ) }
    dend_106 { pt3dadd( -33.4508, -391.388, -0.312572, 0.81 ) }
    // Section: dend_105, id: dend_105, parent: dend_104 (entry count 3/100)
    dend_105 { pt3dclear() }
    dend_105 { pt3dadd( -32.7793, -379.251, 1.22642, 0.22 ) }
    dend_105 { pt3dadd( -33.3104, -379.487, 1.489, 0.22 ) }
    dend_105 { pt3dadd( -33.8181, -379.716, 1.83923, 0.22 ) }
    dend_105 { pt3dadd( -33.9705, -379.792, 1.95594, 0.22 ) }
    dend_105 { pt3dadd( -35.0443, -380.362, 2.80055, 0.22 ) }
    dend_105 { pt3dadd( -35.8848, -380.848, 3.47308, 0.22 ) }
    dend_105 { pt3dadd( -35.9456, -380.887, 3.52232, 0.22 ) }
    dend_105 { pt3dadd( -36.7706, -381.475, 4.44475, 0.29 ) }
    dend_105 { pt3dadd( -36.9987, -381.666, 4.79657, 0.29 ) }
    dend_105 { pt3dadd( -37.1234, -381.825, 5.10365, 0.44 ) }
    dend_105 { pt3dadd( -37.1343, -381.957, 5.3625, 0.44 ) }
    dend_105 { pt3dadd( -37.1101, -382.107, 5.62182, 0.44 ) }
    dend_105 { pt3dadd( -37.0982, -383.076, 7.04471, 0.22 ) }
    dend_105 { pt3dadd( -37.0999, -383.119, 7.10074, 0.22 ) }
    dend_105 { pt3dadd( -37.1554, -383.741, 7.81463, 0.22 ) }
    dend_105 { pt3dadd( -37.1721, -383.844, 7.91265, 0.22 ) }
    dend_105 { pt3dadd( -37.469, -385.082, 8.92669, 0.22 ) }
    dend_105 { pt3dadd( -37.8175, -386.204, 9.66033, 0.22 ) }
    dend_105 { pt3dadd( -37.8694, -386.335, 9.71902, 0.22 ) }
    dend_105 { pt3dadd( -38.2639, -387.085, 9.95809, 0.22 ) }
    dend_105 { pt3dadd( -38.7586, -387.754, 10.0273, 0.22 ) }
    dend_105 { pt3dadd( -38.8597, -387.859, 9.98742, 0.59 ) }
    dend_105 { pt3dadd( -39.629, -388.365, 9.29915, 0.59 ) }
    dend_105 { pt3dadd( -40.3988, -388.714, 8.46537, 0.22 ) }
    dend_105 { pt3dadd( -40.9802, -388.889, 7.82386, 0.22 ) }
    dend_105 { pt3dadd( -41.0269, -388.893, 7.77101, 0.22 ) }
    dend_105 { pt3dadd( -41.2243, -388.888, 7.53907, 0.66 ) }
    dend_105 { pt3dadd( -41.5377, -388.893, 7.20869, 0.66 ) }
    // Section: dend_99, id: dend_99, parent: dend_97 (entry count 31/100)
    dend_99 { pt3dclear() }
    dend_99 { pt3dadd( -9.87496, -382.697, -39.4493, 0.88 ) }
    dend_99 { pt3dadd( -11.0838, -384.387, -43.0071, 0.88 ) }
    dend_99 { pt3dadd( -11.2455, -384.683, -43.4896, 0.88 ) }
    dend_99 { pt3dadd( -11.271, -384.743, -43.5757, 0.88 ) }
    dend_99 { pt3dadd( -11.4858, -385.336, -44.3545, 0.29 ) }
    dend_99 { pt3dadd( -11.641, -385.843, -44.9347, 0.29 ) }
    dend_99 { pt3dadd( -11.6559, -385.898, -44.9908, 0.29 ) }
    dend_99 { pt3dadd( -11.7913, -386.936, -45.3912, 0.29 ) }
    dend_99 { pt3dadd( -11.8838, -387.615, -45.7334, 0.52 ) }
    dend_99 { pt3dadd( -11.898, -387.697, -45.779, 0.52 ) }
    dend_99 { pt3dadd( -12.0541, -388.324, -46.1556, 0.52 ) }
    dend_99 { pt3dadd( -12.1737, -388.667, -46.3962, 0.52 ) }
    dend_99 { pt3dadd( -12.4928, -389.243, -46.8777, 0.29 ) }
    dend_99 { pt3dadd( -13.3265, -390.288, -47.8435, 0.66 ) }
    dend_99 { pt3dadd( -13.6041, -390.599, -48.1128, 0.66 ) }
    dend_99 { pt3dadd( -13.8627, -390.884, -48.406, 0.66 ) }
    dend_99 { pt3dadd( -13.9046, -390.927, -48.4586, 0.66 ) }
    dend_99 { pt3dadd( -14.4321, -391.559, -49.2323, 0.15 ) }
    dend_99 { pt3dadd( -14.6675, -391.959, -49.691, 0.44 ) }
    dend_99 { pt3dadd( -14.7751, -392.272, -50.0174, 0.44 ) }
    dend_99 { pt3dadd( -14.9607, -393.21, -50.9861, 0.29 ) }
    dend_99 { pt3dadd( -14.9652, -393.258, -51.037, 0.29 ) }
    dend_99 { pt3dadd( -14.987, -393.875, -51.6804, 0.29 ) }
    dend_99 { pt3dadd( -14.9402, -394.987, -52.7741, 0.29 ) }
    dend_99 { pt3dadd( -14.8688, -395.689, -53.4167, 0.59 ) }
    dend_99 { pt3dadd( -14.8159, -396.09, -53.7436, 0.59 ) }
    dend_99 { pt3dadd( -14.6451, -397.619, -54.7924, 0.59 ) }
    dend_99 { pt3dadd( -14.639, -397.681, -54.8307, 0.59 ) }
    dend_99 { pt3dadd( -14.5762, -398.423, -55.2431, 0.59 ) }
    dend_99 { pt3dadd( -14.4655, -399.276, -55.6035, 0.59 ) }
    dend_99 { pt3dadd( -14.3344, -400.257, -55.9247, 0.59 ) }
    dend_99 { pt3dadd( -14.257, -400.819, -56.0935, 1.18 ) }
    dend_99 { pt3dadd( -14.1975, -401.312, -56.1984, 1.55 ) }
    dend_99 { pt3dadd( -14.1894, -401.38, -56.2117, 1.55 ) }
    dend_99 { pt3dadd( -14.1301, -401.899, -56.321, 1.55 ) }
    dend_99 { pt3dadd( -14.1204, -401.995, -56.3445, 1.55 ) }
    dend_99 { pt3dadd( -14.027, -403.183, -56.6407, 0.52 ) }
    dend_99 { pt3dadd( -13.9348, -404.486, -56.9811, 0.52 ) }
    dend_99 { pt3dadd( -13.8594, -406.133, -57.4054, 0.52 ) }
    dend_99 { pt3dadd( -13.8541, -406.803, -57.5711, 1.03 ) }
    dend_99 { pt3dadd( -13.8794, -407.725, -57.7888, 1.03 ) }
    dend_99 { pt3dadd( -13.9321, -408.791, -58.0204, 1.03 ) }
    dend_99 { pt3dadd( -13.9369, -408.861, -58.0315, 1.03 ) }
    dend_99 { pt3dadd( -14.0004, -409.804, -58.1495, 1.4 ) }
    dend_99 { pt3dadd( -14.0288, -410.36, -58.1816, 1.4 ) }
    dend_99 { pt3dadd( -14.0266, -410.584, -58.1774, 1.4 ) }
    dend_99 { pt3dadd( -14.0034, -410.816, -58.1629, 1.4 ) }
    dend_99 { pt3dadd( -13.8299, -411.869, -58.097, 0.88 ) }
    dend_99 { pt3dadd( -13.6397, -412.814, -58.0108, 0.88 ) }
    dend_99 { pt3dadd( -13.4764, -413.489, -57.9343, 0.88 ) }
    dend_99 { pt3dadd( -13.3144, -414.052, -57.8637, 0.44 ) }
    dend_99 { pt3dadd( -12.9178, -415.359, -57.6905, 0.44 ) }
    dend_99 { pt3dadd( -12.8965, -415.425, -57.6792, 0.44 ) }
    dend_99 { pt3dadd( -12.6572, -416.144, -57.5358, 1.03 ) }
    dend_99 { pt3dadd( -12.4969, -416.666, -57.4189, 1.33 ) }
    dend_99 { pt3dadd( -12.3605, -417.164, -57.3113, 1.33 ) }
    dend_99 { pt3dadd( -12.3448, -417.232, -57.2987, 1.33 ) }
    dend_99 { pt3dadd( -12.1595, -418.228, -57.1373, 0.44 ) }
    dend_99 { pt3dadd( -12.0182, -419.341, -56.9906, 0.29 ) }
    dend_99 { pt3dadd( -11.9381, -420.424, -56.8154, 0.15 ) }
    dend_99 { pt3dadd( -11.9048, -421.47, -56.6067, 0.15 ) }
    dend_99 { pt3dadd( -11.9052, -422.58, -56.3602, 0.15 ) }
    dend_99 { pt3dadd( -11.9035, -422.74, -56.3228, 0.81 ) }
    dend_99 { pt3dadd( -11.8931, -423.353, -56.1738, 0.81 ) }
    dend_99 { pt3dadd( -11.848, -424.702, -55.773, 0.22 ) }
    dend_99 { pt3dadd( -11.7854, -425.965, -55.3503, 0.22 ) }
    dend_99 { pt3dadd( -11.7811, -426.032, -55.3245, 0.22 ) }
    dend_99 { pt3dadd( -11.6623, -427.26, -54.8342, 0.22 ) }
    dend_99 { pt3dadd( -11.6457, -427.372, -54.7932, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_55()
}

proc basic_shape_55() {
    dend_99 { pt3dadd( -11.628, -427.449, -54.7709, 0.52 ) }
    dend_99 { pt3dadd( -11.4736, -428.099, -54.735, 0.52 ) }
    // Section: dend_98, id: dend_98, parent: dend_97 (entry count 2/100)
    dend_98 { pt3dclear() }
    dend_98 { pt3dadd( -9.87496, -382.697, -39.4493, 0.29 ) }
    dend_98 { pt3dadd( -11.5985, -382.886, -43.2977, 0.29 ) }
    dend_98 { pt3dadd( -11.7594, -382.903, -43.657, 0.59 ) }
    dend_98 { pt3dadd( -11.9998, -382.93, -44.1936, 0.59 ) }
    dend_98 { pt3dadd( -12.128, -382.944, -44.4799, 0.88 ) }
    // Section: dend_67, id: dend_67, parent: dend_65 (entry count 7/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( -75.4883, 276.189, -53.3222, 0.37 ) }
    dend_67 { pt3dadd( -75.6023, 276.954, -53.1963, 0.37 ) }
    dend_67 { pt3dadd( -75.7353, 277.868, -53.0081, 0.37 ) }
    dend_67 { pt3dadd( -75.7463, 277.947, -52.9908, 0.37 ) }
    dend_67 { pt3dadd( -75.9166, 279.474, -52.6549, 0.37 ) }
    dend_67 { pt3dadd( -76.083, 281.161, -52.2956, 0.37 ) }
    dend_67 { pt3dadd( -76.1661, 282.237, -52.0772, 0.74 ) }
    dend_67 { pt3dadd( -76.1812, 282.534, -52.02, 1.03 ) }
    dend_67 { pt3dadd( -76.2142, 283.27, -51.8763, 1.18 ) }
    dend_67 { pt3dadd( -76.2148, 283.675, -51.807, 1.33 ) }
    dend_67 { pt3dadd( -76.1552, 284.453, -51.6985, 0.81 ) }
    dend_67 { pt3dadd( -76.0824, 285.054, -51.7012, 0.29 ) }
    dend_67 { pt3dadd( -76.0729, 285.124, -51.7088, 0.29 ) }
    dend_67 { pt3dadd( -75.9983, 285.65, -51.7793, 0.29 ) }
    dend_67 { pt3dadd( -75.8235, 286.865, -51.9665, 0.29 ) }
    dend_67 { pt3dadd( -75.7645, 287.292, -52.0344, 0.66 ) }
    dend_67 { pt3dadd( -75.5503, 288.698, -52.2799, 0.15 ) }
    dend_67 { pt3dadd( -75.4853, 289.132, -52.361, 1.11 ) }
    dend_67 { pt3dadd( -75.3508, 289.978, -52.5264, 1.11 ) }
    dend_67 { pt3dadd( -75.3389, 290.048, -52.5415, 1.11 ) }
    dend_67 { pt3dadd( -75.1964, 290.971, -52.7643, 1.33 ) }
    // Section: dend_66, id: dend_66, parent: dend_65 (entry count 28/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( -75.4883, 276.189, -53.3222, 0.22 ) }
    dend_66 { pt3dadd( -75.4158, 276.187, -53.329, 0.22 ) }
    dend_66 { pt3dadd( -74.125, 275.904, -53.4908, 0.22 ) }
    dend_66 { pt3dadd( -74.0147, 275.873, -53.5124, 0.52 ) }
    dend_66 { pt3dadd( -73.9486, 275.853, -53.5269, 0.52 ) }
    dend_66 { pt3dadd( -73.4156, 275.678, -53.7112, 0.52 ) }
    dend_66 { pt3dadd( -72.9872, 275.57, -53.8742, 0.22 ) }
    dend_66 { pt3dadd( -71.3802, 275.218, -54.5405, 0.22 ) }
    dend_66 { pt3dadd( -70.9754, 275.134, -54.7248, 0.74 ) }
    dend_66 { pt3dadd( -70.5915, 275.062, -54.8988, 0.74 ) }
    dend_66 { pt3dadd( -69.5092, 274.886, -55.3867, 0.15 ) }
    dend_66 { pt3dadd( -67.8174, 274.682, -56.2007, 0.15 ) }
    dend_66 { pt3dadd( -67.4879, 274.66, -56.3563, 0.59 ) }
    dend_66 { pt3dadd( -67.351, 274.663, -56.4244, 0.59 ) }
    dend_66 { pt3dadd( -67.2864, 274.664, -56.453, 0.59 ) }
    dend_66 { pt3dadd( -67.2118, 274.664, -56.4838, 0.15 ) }
    dend_66 { pt3dadd( -65.6981, 274.64, -56.9938, 0.15 ) }
    dend_66 { pt3dadd( -65.43, 274.616, -57.1276, 0.81 ) }
    dend_66 { pt3dadd( -65.3591, 274.61, -57.1655, 0.81 ) }
    dend_66 { pt3dadd( -65.1017, 274.589, -57.3066, 0.81 ) }
    dend_66 { pt3dadd( -65.0312, 274.583, -57.3454, 0.81 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 49/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 79.0529, 293.403, -61.32, 0.52 ) }
    dend_38 { pt3dadd( 79.6583, 293.908, -61.7643, 0.52 ) }
    dend_38 { pt3dadd( 80.3636, 294.489, -62.1913, 0.37 ) }
    dend_38 { pt3dadd( 80.8085, 294.856, -62.4607, 0.37 ) }
    dend_38 { pt3dadd( 81.4262, 295.365, -62.8347, 0.96 ) }
    dend_38 { pt3dadd( 81.9382, 295.787, -63.1448, 1.33 ) }
    dend_38 { pt3dadd( 81.9942, 295.833, -63.1787, 1.33 ) }
    dend_38 { pt3dadd( 82.7443, 296.463, -63.5453, 1.62 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 57/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 79.0529, 293.403, -61.32, 0.22 ) }
    dend_35 { pt3dadd( 78.883, 295.049, -61.001, 0.22 ) }
    dend_35 { pt3dadd( 78.8706, 295.147, -60.9859, 0.22 ) }
    dend_35 { pt3dadd( 78.5878, 296.791, -60.7855, 0.22 ) }
    dend_35 { pt3dadd( 78.5415, 297.009, -60.7643, 0.74 ) }
    dend_35 { pt3dadd( 78.4932, 297.215, -60.7469, 0.74 ) }
    dend_35 { pt3dadd( 78.2768, 298.037, -60.6852, 0.88 ) }
    dend_35 { pt3dadd( 78.0983, 298.673, -60.6852, 0.88 ) }
    dend_35 { pt3dadd( 77.8101, 299.46, -60.6852, 0.44 ) }
    dend_35 { pt3dadd( 77.4379, 300.162, -60.7475, 0.29 ) }
    dend_35 { pt3dadd( 77.359, 300.29, -60.7699, 0.29 ) }
    dend_35 { pt3dadd( 77.12, 300.64, -60.8574, 0.29 ) }
    dend_35 { pt3dadd( 77.063, 300.718, -60.8821, 0.66 ) }
    dend_35 { pt3dadd( 76.6938, 301.236, -61.0847, 0.88 ) }
    dend_35 { pt3dadd( 76.0439, 302.191, -61.4933, 0.96 ) }
    dend_35 { pt3dadd( 75.7135, 302.685, -61.6971, 0.52 ) }
    dend_35 { pt3dadd( 75.2454, 303.393, -61.9625, 0.44 ) }
    dend_35 { pt3dadd( 74.8847, 303.951, -62.1534, 0.44 ) }
    dend_35 { pt3dadd( 74.4686, 304.572, -62.3881, 0.44 ) }
    dend_35 { pt3dadd( 74.2148, 304.94, -62.5317, 1.18 ) }
    dend_35 { pt3dadd( 73.7149, 305.637, -62.7746, 1.47 ) }
    dend_35 { pt3dadd( 73.415, 306.047, -62.9288, 1.47 ) }
    dend_35 { pt3dadd( 73.3657, 306.106, -62.9523, 1.47 ) }
    dend_35 { pt3dadd( 72.4865, 307.022, -63.2942, 0.29 ) }
    dend_35 { pt3dadd( 72.4442, 307.063, -63.3075, 0.29 ) }
    dend_35 { pt3dadd( 71.829, 307.618, -63.4666, 0.29 ) }
    dend_35 { pt3dadd( 70.9354, 308.41, -63.6572, 0.29 ) }
    dend_35 { pt3dadd( 70.3787, 308.892, -63.7389, 0.29 ) }
    dend_35 { pt3dadd( 69.7565, 309.449, -63.7873, 0.29 ) }
    dend_35 { pt3dadd( 69.7055, 309.499, -63.7871, 0.29 ) }
    dend_35 { pt3dadd( 68.7717, 310.421, -63.7871, 0.29 ) }
    dend_35 { pt3dadd( 68.7227, 310.471, -63.7871, 0.29 ) }
    dend_35 { pt3dadd( 68.1041, 311.15, -63.8301, 0.74 ) }
    dend_35 { pt3dadd( 67.5804, 311.819, -63.9016, 1.11 ) }
    dend_35 { pt3dadd( 67.2247, 312.285, -63.9692, 1.4 ) }
    dend_35 { pt3dadd( 67.1824, 312.34, -63.9788, 1.4 ) }
    dend_35 { pt3dadd( 66.7647, 312.931, -64.0935, 1.4 ) }
    dend_35 { pt3dadd( 66.1547, 313.797, -64.2665, 0.29 ) }
    dend_35 { pt3dadd( 66.115, 313.856, -64.281, 0.29 ) }
    dend_35 { pt3dadd( 65.5619, 314.671, -64.5057, 0.29 ) }
    dend_35 { pt3dadd( 65.5165, 314.738, -64.524, 0.29 ) }
    dend_35 { pt3dadd( 64.874, 315.713, -64.784, 0.29 ) }
    dend_35 { pt3dadd( 64.8119, 315.813, -64.8087, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_56()
}

proc basic_shape_56() {
    dend_35 { pt3dadd( 64.4271, 316.501, -64.9302, 0.29 ) }
    dend_35 { pt3dadd( 64.3101, 316.738, -64.9761, 0.59 ) }
    dend_35 { pt3dadd( 64.1377, 317.22, -65.0881, 1.03 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 3/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 43.898, 140.949, -110.642, 0.66 ) }
    dend_29 { pt3dadd( 42.3231, 139.398, -113.542, 0.66 ) }
    dend_29 { pt3dadd( 41.8826, 138.961, -114.307, 0.66 ) }
    dend_29 { pt3dadd( 40.435, 137.578, -116.572, 0.37 ) }
    dend_29 { pt3dadd( 39.6095, 136.866, -117.692, 0.37 ) }
    dend_29 { pt3dadd( 39.0758, 136.433, -118.356, 0.66 ) }
    dend_29 { pt3dadd( 38.658, 136.094, -118.885, 0.66 ) }
    dend_29 { pt3dadd( 38.6131, 136.059, -118.927, 0.66 ) }
    dend_29 { pt3dadd( 38.125, 135.746, -119.519, 0.66 ) }
    dend_29 { pt3dadd( 37.549, 135.5, -120.338, 0.37 ) }
    dend_29 { pt3dadd( 37.5184, 135.488, -120.4, 0.37 ) }
    dend_29 { pt3dadd( 36.7106, 135.055, -122.169, 0.37 ) }
    dend_29 { pt3dadd( 36.6733, 135.031, -122.259, 0.37 ) }
    dend_29 { pt3dadd( 35.7457, 134.283, -124.782, 0.37 ) }
    dend_29 { pt3dadd( 35.7224, 134.258, -124.855, 0.37 ) }
    dend_29 { pt3dadd( 35.1627, 133.525, -126.737, 0.37 ) }
    dend_29 { pt3dadd( 34.8852, 133.184, -127.605, 0.37 ) }
    dend_29 { pt3dadd( 34.8604, 133.155, -127.676, 0.37 ) }
    dend_29 { pt3dadd( 34.3969, 132.623, -128.841, 0.88 ) }
    dend_29 { pt3dadd( 34.193, 132.368, -129.333, 1.33 ) }
    dend_29 { pt3dadd( 33.5249, 131.629, -131.016, 0.88 ) }
    dend_29 { pt3dadd( 32.7433, 130.894, -132.886, 0.29 ) }
    dend_29 { pt3dadd( 32.7116, 130.867, -132.954, 0.29 ) }
    dend_29 { pt3dadd( 32.1265, 130.39, -134.135, 0.29 ) }
    dend_29 { pt3dadd( 31.6043, 129.969, -135.208, 0.96 ) }
    dend_29 { pt3dadd( 30.4852, 129.106, -137.729, 0.59 ) }
    dend_29 { pt3dadd( 30.1716, 128.871, -138.454, 0.59 ) }
    dend_29 { pt3dadd( 29.7637, 128.558, -139.422, 0.59 ) }
    dend_29 { pt3dadd( 29.1644, 128.101, -140.922, 1.11 ) }
    dend_29 { pt3dadd( 28.2856, 127.446, -143.323, 1.69 ) }
    dend_29 { pt3dadd( 27.302, 126.78, -145.929, 1.69 ) }
    dend_29 { pt3dadd( 26.5917, 126.319, -147.951, 1.69 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 35/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 43.898, 140.949, -110.642, 0.44 ) }
    dend_28 { pt3dadd( 44.5708, 142.013, -111.416, 0.44 ) }
    dend_28 { pt3dadd( 44.5973, 142.062, -111.459, 0.44 ) }
    dend_28 { pt3dadd( 45.1083, 143.047, -112.347, 0.44 ) }
    dend_28 { pt3dadd( 45.4604, 143.738, -112.935, 0.44 ) }
    dend_28 { pt3dadd( 45.6372, 144.095, -113.199, 0.44 ) }
    dend_28 { pt3dadd( 46.1267, 145.127, -113.984, 0.44 ) }
    dend_28 { pt3dadd( 46.8607, 146.733, -115.078, 0.29 ) }
    dend_28 { pt3dadd( 46.8926, 146.806, -115.127, 0.29 ) }
    dend_28 { pt3dadd( 47.1604, 147.493, -115.57, 0.29 ) }
    dend_28 { pt3dadd( 47.5529, 148.453, -116.331, 0.29 ) }
    dend_28 { pt3dadd( 48.063, 149.714, -117.483, 1.11 ) }
    dend_28 { pt3dadd( 48.2409, 150.166, -117.938, 1.47 ) }
    dend_28 { pt3dadd( 48.2587, 150.218, -117.986, 1.47 ) }
    dend_28 { pt3dadd( 48.3364, 150.476, -118.23, 1.47 ) }
    dend_28 { pt3dadd( 48.8126, 152.32, -120.042, 0.37 ) }
    dend_28 { pt3dadd( 48.9493, 152.942, -120.659, 0.37 ) }
    dend_28 { pt3dadd( 48.9607, 152.995, -120.703, 0.37 ) }
    dend_28 { pt3dadd( 49.0831, 153.682, -121.297, 1.11 ) }
    dend_28 { pt3dadd( 49.127, 153.86, -121.425, 1.11 ) }
    dend_28 { pt3dadd( 49.289, 154.312, -121.644, 1.77 ) }
    dend_28 { pt3dadd( 49.3126, 154.369, -121.659, 1.77 ) }
    dend_28 { pt3dadd( 49.5862, 154.993, -121.8, 1.77 ) }
    dend_28 { pt3dadd( 50.2152, 156.396, -122.12, 2.06 ) }
    dend_28 { pt3dadd( 50.9526, 157.917, -122.521, 0.37 ) }
    dend_28 { pt3dadd( 51.722, 159.499, -122.911, 0.37 ) }
    dend_28 { pt3dadd( 51.8731, 159.792, -122.982, 1.33 ) }
    dend_28 { pt3dadd( 52.3767, 160.728, -123.196, 1.33 ) }
    dend_28 { pt3dadd( 52.4098, 160.789, -123.208, 1.33 ) }
    dend_28 { pt3dadd( 52.8836, 161.682, -123.316, 0.29 ) }
    dend_28 { pt3dadd( 53.4923, 162.921, -123.539, 0.29 ) }
    dend_28 { pt3dadd( 53.8757, 163.788, -123.751, 0.29 ) }
    dend_28 { pt3dadd( 53.9034, 163.853, -123.769, 0.29 ) }
    dend_28 { pt3dadd( 54.4555, 165.2, -124.129, 0.29 ) }
    dend_28 { pt3dadd( 55.0508, 166.775, -124.61, 0.29 ) }
    dend_28 { pt3dadd( 55.3717, 167.7, -124.901, 1.18 ) }
    dend_28 { pt3dadd( 55.7875, 168.945, -125.315, 1.55 ) }
    dend_28 { pt3dadd( 56.1192, 169.99, -125.648, 1.92 ) }
    dend_28 { pt3dadd( 56.3943, 170.886, -125.909, 1.92 ) }
    dend_28 { pt3dadd( 56.9167, 172.519, -126.344, 0.88 ) }
    dend_28 { pt3dadd( 57.3973, 173.952, -126.701, 0.88 ) }
    dend_28 { pt3dadd( 57.5437, 174.385, -126.792, 0.88 ) }
    dend_28 { pt3dadd( 58.2687, 176.462, -127.173, 0.22 ) }
    dend_28 { pt3dadd( 58.9951, 178.581, -127.535, 0.22 ) }
    dend_28 { pt3dadd( 59.4132, 179.797, -127.711, 0.22 ) }
    dend_28 { pt3dadd( 59.6704, 180.536, -127.784, 0.88 ) }
    dend_28 { pt3dadd( 60.0243, 181.557, -127.88, 1.18 ) }
    dend_28 { pt3dadd( 60.3821, 182.642, -127.97, 1.33 ) }
    dend_28 { pt3dadd( 60.4034, 182.71, -127.974, 1.33 ) }
    dend_28 { pt3dadd( 60.6319, 183.476, -128.01, 1.33 ) }
    dend_28 { pt3dadd( 60.8073, 184.212, -128.02, 0.37 ) }
    dend_28 { pt3dadd( 60.9952, 184.995, -128.024, 0.37 ) }
    dend_28 { pt3dadd( 61.2005, 185.827, -128.05, 0.37 ) }
    dend_28 { pt3dadd( 61.2005, 185.827, -128.05, 0.74 ) }
    dend_28 { pt3dadd( 61.2259, 185.905, -128.057, 0.74 ) }
    dend_28 { pt3dadd( 61.5406, 186.814, -128.158, 0.74 ) }
    dend_28 { pt3dadd( 62.0089, 188.1, -128.326, 0.22 ) }
    dend_28 { pt3dadd( 62.0343, 188.165, -128.335, 0.22 ) }
    dend_28 { pt3dadd( 62.5755, 189.472, -128.513, 0.22 ) }
    dend_28 { pt3dadd( 62.9162, 190.293, -128.629, 1.11 ) }
    dend_28 { pt3dadd( 63.1539, 190.904, -128.712, 1.84 ) }
    dend_28 { pt3dadd( 63.1886, 190.998, -128.715, 1.84 ) }
    dend_28 { pt3dadd( 63.3912, 191.571, -128.68, 1.84 ) }
    dend_28 { pt3dadd( 63.4168, 191.637, -128.673, 1.84 ) }
    dend_28 { pt3dadd( 63.8717, 192.717, -128.516, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_57()
}

proc basic_shape_57() {
    dend_28 { pt3dadd( 64.3637, 193.839, -128.359, 0.81 ) }
    dend_28 { pt3dadd( 65.009, 195.294, -128.154, 0.29 ) }
    dend_28 { pt3dadd( 65.4295, 196.253, -128.017, 0.29 ) }
    dend_28 { pt3dadd( 65.8363, 197.192, -127.886, 0.29 ) }
    dend_28 { pt3dadd( 66.3687, 198.503, -127.718, 0.29 ) }
    dend_28 { pt3dadd( 67.1374, 200.495, -127.485, 0.29 ) }
    dend_28 { pt3dadd( 67.2277, 200.741, -127.467, 0.88 ) }
    dend_28 { pt3dadd( 67.2498, 200.808, -127.465, 0.88 ) }
    dend_28 { pt3dadd( 67.5067, 201.665, -127.45, 0.88 ) }
    dend_28 { pt3dadd( 67.9111, 203.154, -127.424, 0.29 ) }
    dend_28 { pt3dadd( 67.9677, 203.358, -127.423, 0.29 ) }
    dend_28 { pt3dadd( 68.3817, 204.721, -127.442, 0.29 ) }
    dend_28 { pt3dadd( 68.4977, 205.076, -127.454, 0.88 ) }
    dend_28 { pt3dadd( 68.6546, 205.535, -127.47, 0.88 ) }
    dend_28 { pt3dadd( 68.9857, 206.449, -127.509, 0.88 ) }
    dend_28 { pt3dadd( 69.2209, 207.047, -127.539, 0.29 ) }
    dend_28 { pt3dadd( 69.8284, 208.576, -127.616, 0.29 ) }
    dend_28 { pt3dadd( 69.8547, 208.641, -127.619, 0.29 ) }
    dend_28 { pt3dadd( 70.2482, 209.573, -127.66, 0.29 ) }
    dend_28 { pt3dadd( 70.2806, 209.646, -127.666, 1.11 ) }
    dend_28 { pt3dadd( 70.3325, 209.747, -127.677, 1.11 ) }
    dend_28 { pt3dadd( 70.7488, 210.463, -127.761, 1.11 ) }
    dend_28 { pt3dadd( 71.1771, 211.109, -127.851, 0.66 ) }
    dend_28 { pt3dadd( 71.5198, 211.593, -127.922, 0.37 ) }
    dend_28 { pt3dadd( 72.5013, 212.829, -128.112, 0.29 ) }
    dend_28 { pt3dadd( 73.6312, 214.148, -128.312, 0.29 ) }
    dend_28 { pt3dadd( 73.9063, 214.447, -128.356, 0.81 ) }
    dend_28 { pt3dadd( 74.307, 214.848, -128.412, 1.18 ) }
    dend_28 { pt3dadd( 74.3728, 214.912, -128.423, 1.18 ) }
    dend_28 { pt3dadd( 75.0099, 215.536, -128.538, 1.18 ) }
    dend_28 { pt3dadd( 75.389, 215.905, -128.603, 1.11 ) }
    dend_28 { pt3dadd( 75.738, 216.257, -128.68, 0.88 ) }
    dend_28 { pt3dadd( 76.3766, 216.934, -128.835, 0.52 ) }
    dend_28 { pt3dadd( 77.2954, 217.968, -129.073, 0.29 ) }
    dend_28 { pt3dadd( 77.9124, 218.72, -129.315, 0.29 ) }
    dend_28 { pt3dadd( 77.9531, 218.773, -129.336, 0.29 ) }
    dend_28 { pt3dadd( 78.2551, 219.203, -129.516, 0.96 ) }
    dend_28 { pt3dadd( 78.3385, 219.328, -129.566, 0.96 ) }
    dend_28 { pt3dadd( 78.6743, 219.85, -129.786, 0.96 ) }
    dend_28 { pt3dadd( 79.8041, 221.657, -130.483, 0.29 ) }
    dend_28 { pt3dadd( 79.8458, 221.724, -130.507, 0.29 ) }
    dend_28 { pt3dadd( 80.2594, 222.382, -130.723, 0.29 ) }
    dend_28 { pt3dadd( 81.0692, 223.678, -131.099, 0.29 ) }
    dend_28 { pt3dadd( 81.5726, 224.469, -131.302, 0.59 ) }
    dend_28 { pt3dadd( 82.1857, 225.407, -131.513, 0.59 ) }
    dend_28 { pt3dadd( 82.7839, 226.308, -131.655, 0.74 ) }
    dend_28 { pt3dadd( 83.2271, 226.974, -131.762, 0.88 ) }
    dend_28 { pt3dadd( 83.6065, 227.553, -131.847, 0.88 ) }
    dend_28 { pt3dadd( 83.643, 227.613, -131.854, 0.88 ) }
    dend_28 { pt3dadd( 84.0367, 228.306, -131.898, 0.29 ) }
    dend_28 { pt3dadd( 84.5345, 229.298, -131.953, 0.29 ) }
    dend_28 { pt3dadd( 84.5681, 229.371, -131.956, 0.29 ) }
    dend_28 { pt3dadd( 84.9666, 230.21, -131.986, 1.11 ) }
    dend_28 { pt3dadd( 85.3781, 230.993, -131.948, 1.92 ) }
    dend_28 { pt3dadd( 86.008, 232.056, -131.826, 0.29 ) }
    dend_28 { pt3dadd( 86.4838, 232.788, -131.694, 0.29 ) }
    dend_28 { pt3dadd( 86.5236, 232.844, -131.682, 0.29 ) }
    dend_28 { pt3dadd( 87.111, 233.631, -131.507, 0.29 ) }
    dend_28 { pt3dadd( 88.1146, 234.856, -131.134, 0.29 ) }
    dend_28 { pt3dadd( 88.6089, 235.424, -130.922, 0.29 ) }
    dend_28 { pt3dadd( 88.748, 235.584, -130.837, 1.03 ) }
    dend_28 { pt3dadd( 89.2881, 236.23, -130.483, 1.25 ) }
    dend_28 { pt3dadd( 89.5939, 236.615, -130.283, 1.25 ) }
    dend_28 { pt3dadd( 90.4687, 237.776, -129.709, 0.29 ) }
    dend_28 { pt3dadd( 90.9174, 238.383, -129.429, 0.88 ) }
    dend_28 { pt3dadd( 92.0232, 239.904, -128.712, 0.29 ) }
    dend_28 { pt3dadd( 93.2343, 241.552, -127.964, 0.29 ) }
    dend_28 { pt3dadd( 93.7967, 242.3, -127.642, 0.29 ) }
    dend_28 { pt3dadd( 94.0606, 242.654, -127.51, 0.81 ) }
    dend_28 { pt3dadd( 94.1507, 242.776, -127.475, 0.81 ) }
    dend_28 { pt3dadd( 94.95, 243.831, -127.234, 0.81 ) }
    dend_28 { pt3dadd( 95.7373, 244.836, -127.097, 0.81 ) }
    dend_28 { pt3dadd( 96.1183, 245.315, -127.028, 0.59 ) }
    dend_28 { pt3dadd( 96.6415, 245.986, -126.941, 0.29 ) }
    dend_28 { pt3dadd( 97.0661, 246.537, -126.89, 0.29 ) }
    dend_28 { pt3dadd( 97.4775, 247.074, -126.861, 1.11 ) }
    dend_28 { pt3dadd( 97.5179, 247.132, -126.861, 1.11 ) }
    dend_28 { pt3dadd( 97.8573, 247.654, -126.867, 1.55 ) }
    dend_28 { pt3dadd( 98.4874, 248.614, -126.879, 0.29 ) }
    dend_28 { pt3dadd( 98.9129, 249.146, -126.894, 0.22 ) }
    dend_28 { pt3dadd( 99.0152, 249.257, -126.899, 0.22 ) }
    dend_28 { pt3dadd( 100.629, 250.819, -126.973, 0.22 ) }
    dend_28 { pt3dadd( 100.788, 250.952, -126.995, 0.88 ) }
    dend_28 { pt3dadd( 101.196, 251.26, -127.078, 0.88 ) }
    dend_28 { pt3dadd( 102.911, 252.464, -127.41, 0.29 ) }
    dend_28 { pt3dadd( 103.16, 252.628, -127.453, 0.74 ) }
    dend_28 { pt3dadd( 104.034, 253.159, -127.591, 0.74 ) }
    dend_28 { pt3dadd( 105.448, 253.924, -127.792, 0.22 ) }
    dend_28 { pt3dadd( 106.383, 254.46, -127.907, 0.22 ) }
    dend_28 { pt3dadd( 107.418, 255.118, -128.116, 1.03 ) }
    dend_28 { pt3dadd( 107.872, 255.434, -128.241, 1.33 ) }
    dend_28 { pt3dadd( 108.499, 255.872, -128.436, 1.55 ) }
    dend_28 { pt3dadd( 108.93, 256.164, -128.539, 1.55 ) }
    dend_28 { pt3dadd( 108.988, 256.203, -128.548, 1.55 ) }
    dend_28 { pt3dadd( 110.675, 257.25, -128.862, 0.29 ) }
    dend_28 { pt3dadd( 111.798, 257.961, -129.091, 0.29 ) }
    dend_28 { pt3dadd( 111.92, 258.046, -129.109, 0.29 ) }
    dend_28 { pt3dadd( 113.148, 258.938, -129.221, 0.29 ) }
    dend_28 { pt3dadd( 113.227, 258.999, -129.222, 0.29 ) }
    dend_28 { pt3dadd( 113.885, 259.514, -129.124, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_58()
}

proc basic_shape_58() {
    dend_28 { pt3dadd( 114.673, 260.138, -128.879, 0.29 ) }
    dend_28 { pt3dadd( 115.192, 260.577, -128.685, 0.29 ) }
    dend_28 { pt3dadd( 115.259, 260.638, -128.66, 0.29 ) }
    dend_28 { pt3dadd( 116.619, 261.921, -128.177, 0.29 ) }
    dend_28 { pt3dadd( 117.471, 262.751, -127.87, 0.59 ) }
    dend_28 { pt3dadd( 118.209, 263.494, -127.59, 0.59 ) }
    dend_28 { pt3dadd( 119.693, 265.02, -127.021, 0.15 ) }
    dend_28 { pt3dadd( 120.89, 266.277, -126.578, 0.15 ) }
    dend_28 { pt3dadd( 120.938, 266.329, -126.563, 0.15 ) }
    dend_28 { pt3dadd( 121.5, 266.964, -126.418, 0.22 ) }
    dend_28 { pt3dadd( 121.5, 266.964, -126.418, 1.11 ) }
    dend_28 { pt3dadd( 121.845, 267.394, -126.381, 1.11 ) }
    dend_28 { pt3dadd( 122.145, 267.779, -126.38, 1.11 ) }
    dend_28 { pt3dadd( 123.444, 269.49, -126.401, 0.15 ) }
    dend_28 { pt3dadd( 123.75, 269.904, -126.412, 0.66 ) }
    dend_28 { pt3dadd( 124.464, 270.879, -126.449, 0.66 ) }
    dend_28 { pt3dadd( 124.87, 271.442, -126.475, 0.96 ) }
    dend_28 { pt3dadd( 125.238, 271.958, -126.503, 0.81 ) }
    dend_28 { pt3dadd( 125.286, 272.025, -126.508, 0.81 ) }
    dend_28 { pt3dadd( 125.729, 272.677, -126.559, 0.22 ) }
    dend_28 { pt3dadd( 125.792, 272.763, -126.565, 0.22 ) }
    dend_28 { pt3dadd( 127.027, 274.45, -126.66, 0.22 ) }
    dend_28 { pt3dadd( 127.213, 274.695, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 127.263, 274.759, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 127.609, 275.207, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 127.655, 275.263, -126.668, 0.59 ) }
    dend_28 { pt3dadd( 128.091, 275.749, -126.724, 1.4 ) }
    dend_28 { pt3dadd( 128.806, 276.578, -126.859, 1.77 ) }
    dend_28 { pt3dadd( 129.419, 277.296, -126.984, 2.21 ) }
    dend_28 { pt3dadd( 129.836, 277.789, -127.074, 2.21 ) }
    dend_28 { pt3dadd( 130.741, 278.864, -127.274, 0.66 ) }
    dend_28 { pt3dadd( 132.553, 281.023, -127.685, 0.22 ) }
    dend_28 { pt3dadd( 134.181, 282.919, -128.062, 0.22 ) }
    dend_28 { pt3dadd( 134.227, 282.973, -128.073, 0.22 ) }
    dend_28 { pt3dadd( 134.554, 283.335, -128.157, 0.74 ) }
    dend_28 { pt3dadd( 134.979, 283.779, -128.254, 1.11 ) }
    dend_28 { pt3dadd( 135.028, 283.828, -128.265, 1.11 ) }
    dend_28 { pt3dadd( 135.506, 284.274, -128.361, 1.11 ) }
    dend_28 { pt3dadd( 135.614, 284.366, -128.384, 1.11 ) }
    dend_28 { pt3dadd( 137.833, 286.222, -128.866, 0.22 ) }
    dend_28 { pt3dadd( 140.392, 288.282, -129.13, 0.22 ) }
    dend_28 { pt3dadd( 141.091, 288.835, -129.138, 1.4 ) }
    dend_28 { pt3dadd( 141.382, 289.064, -129.112, 1.4 ) }
    dend_28 { pt3dadd( 141.87, 289.442, -129.021, 1.4 ) }
    dend_28 { pt3dadd( 141.927, 289.485, -129.005, 1.4 ) }
    dend_28 { pt3dadd( 144.781, 291.522, -127.758, 0.22 ) }
    dend_28 { pt3dadd( 146.375, 292.585, -126.942, 0.22 ) }
    dend_28 { pt3dadd( 147.245, 293.154, -126.481, 0.81 ) }
    dend_28 { pt3dadd( 147.685, 293.444, -126.271, 1.11 ) }
    dend_28 { pt3dadd( 148.422, 293.94, -125.949, 1.11 ) }
    dend_28 { pt3dadd( 148.472, 293.974, -125.931, 1.11 ) }
    dend_28 { pt3dadd( 149.437, 294.606, -125.741, 0.22 ) }
    dend_28 { pt3dadd( 149.502, 294.651, -125.725, 0.22 ) }
    dend_28 { pt3dadd( 151.107, 295.794, -125.327, 0.22 ) }
    dend_28 { pt3dadd( 151.493, 296.074, -125.181, 0.88 ) }
    dend_28 { pt3dadd( 151.548, 296.115, -125.155, 0.88 ) }
    dend_28 { pt3dadd( 151.99, 296.476, -124.887, 0.88 ) }
    dend_28 { pt3dadd( 153.312, 297.6, -123.98, 0.22 ) }
    dend_28 { pt3dadd( 154.303, 298.445, -123.285, 0.22 ) }
    dend_28 { pt3dadd( 155.175, 299.199, -122.665, 0.96 ) }
    dend_28 { pt3dadd( 155.82, 299.747, -122.249, 0.96 ) }
    dend_28 { pt3dadd( 157.654, 301.267, -121.2, 0.22 ) }
    dend_28 { pt3dadd( 158.404, 301.88, -120.822, 0.66 ) }
    dend_28 { pt3dadd( 158.983, 302.342, -120.587, 0.66 ) }
    dend_28 { pt3dadd( 159.696, 302.884, -120.351, 0.66 ) }
    dend_28 { pt3dadd( 160.243, 303.257, -120.247, 0.96 ) }
    dend_28 { pt3dadd( 161.151, 303.804, -120.141, 0.96 ) }
    dend_28 { pt3dadd( 161.767, 304.139, -120.132, 0.22 ) }
    dend_28 { pt3dadd( 161.828, 304.172, -120.131, 0.22 ) }
    dend_28 { pt3dadd( 162.776, 304.682, -120.106, 0.22 ) }
    dend_28 { pt3dadd( 164.322, 305.528, -120.2, 0.22 ) }
    dend_28 { pt3dadd( 164.752, 305.792, -120.255, 0.59 ) }
    dend_28 { pt3dadd( 165.161, 306.085, -120.327, 0.88 ) }
    dend_28 { pt3dadd( 165.329, 306.216, -120.362, 0.88 ) }
    dend_28 { pt3dadd( 165.995, 306.774, -120.55, 0.88 ) }
    dend_28 { pt3dadd( 167.567, 308.205, -121.1, 0.22 ) }
    dend_28 { pt3dadd( 168.839, 309.425, -121.624, 0.22 ) }
    dend_28 { pt3dadd( 170.198, 310.759, -122.218, 0.22 ) }
    dend_28 { pt3dadd( 170.244, 310.807, -122.239, 0.22 ) }
    dend_28 { pt3dadd( 171.021, 311.645, -122.609, 0.96 ) }
    dend_28 { pt3dadd( 171.626, 312.366, -122.889, 0.96 ) }
    dend_28 { pt3dadd( 172.321, 313.279, -123.179, 0.22 ) }
    dend_28 { pt3dadd( 172.545, 313.59, -123.273, 0.81 ) }
    dend_28 { pt3dadd( 172.796, 313.944, -123.371, 1.11 ) }
    dend_28 { pt3dadd( 174.389, 316.245, -123.894, 0.22 ) }
    dend_28 { pt3dadd( 175.549, 317.962, -124.188, 0.22 ) }
    dend_28 { pt3dadd( 175.786, 318.33, -124.269, 0.96 ) }
    dend_28 { pt3dadd( 176.193, 318.973, -124.435, 1.18 ) }
    dend_28 { pt3dadd( 176.358, 319.216, -124.507, 1.18 ) }
    dend_28 { pt3dadd( 176.691, 319.7, -124.651, 1.18 ) }
    dend_28 { pt3dadd( 176.73, 319.758, -124.673, 1.18 ) }
    dend_28 { pt3dadd( 177.689, 321.1, -125.334, 0.22 ) }
    dend_28 { pt3dadd( 177.734, 321.161, -125.365, 0.22 ) }
    dend_28 { pt3dadd( 179.411, 323.393, -126.536, 0.22 ) }
    dend_28 { pt3dadd( 180.557, 324.88, -127.284, 0.22 ) }
    dend_28 { pt3dadd( 181.465, 326.026, -127.805, 1.25 ) }
    dend_28 { pt3dadd( 181.507, 326.079, -127.825, 1.25 ) }
    dend_28 { pt3dadd( 181.95, 326.648, -128.003, 1.4 ) }
    dend_28 { pt3dadd( 181.992, 326.702, -128.02, 1.4 ) }
    dend_28 { pt3dadd( 182.512, 327.378, -128.24, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_59()
}

proc basic_shape_59() {
    dend_28 { pt3dadd( 184.827, 330.268, -129.068, 0.22 ) }
    dend_28 { pt3dadd( 185.589, 331.223, -129.274, 0.22 ) }
    dend_28 { pt3dadd( 185.653, 331.302, -129.289, 0.22 ) }
    dend_28 { pt3dadd( 185.92, 331.625, -129.342, 0.74 ) }
    dend_28 { pt3dadd( 185.965, 331.678, -129.349, 0.74 ) }
    dend_28 { pt3dadd( 186.467, 332.239, -129.399, 0.74 ) }
    dend_28 { pt3dadd( 186.695, 332.462, -129.408, 0.15 ) }
    dend_28 { pt3dadd( 188.601, 334.27, -129.559, 0.15 ) }
    dend_28 { pt3dadd( 188.788, 334.449, -129.579, 0.88 ) }
    dend_28 { pt3dadd( 188.912, 334.567, -129.595, 0.88 ) }
    dend_28 { pt3dadd( 189.402, 335.038, -129.665, 0.88 ) }
    dend_28 { pt3dadd( 190.205, 335.783, -129.826, 0.22 ) }
    dend_28 { pt3dadd( 191.005, 336.522, -130.063, 0.22 ) }
    dend_28 { pt3dadd( 191.056, 336.568, -130.084, 0.22 ) }
    dend_28 { pt3dadd( 191.288, 336.779, -130.185, 0.66 ) }
    dend_28 { pt3dadd( 191.638, 337.107, -130.377, 0.66 ) }
    dend_28 { pt3dadd( 192.61, 338.177, -131.094, 0.15 ) }
    dend_28 { pt3dadd( 192.999, 338.65, -131.427, 0.74 ) }
    dend_28 { pt3dadd( 193.037, 338.699, -131.464, 0.74 ) }
    dend_28 { pt3dadd( 193.378, 339.17, -131.903, 0.74 ) }
    dend_28 { pt3dadd( 194.152, 340.312, -132.931, 0.22 ) }
    dend_28 { pt3dadd( 195.025, 341.721, -134.147, 0.22 ) }
    dend_28 { pt3dadd( 195.084, 341.822, -134.229, 0.22 ) }
    dend_28 { pt3dadd( 195.243, 342.088, -134.428, 0.88 ) }
    dend_28 { pt3dadd( 196.506, 344.14, -135.807, 0.22 ) }
    dend_28 { pt3dadd( 198.023, 346.483, -137.133, 0.22 ) }
    dend_28 { pt3dadd( 198.242, 346.798, -137.246, 1.11 ) }
    dend_28 { pt3dadd( 198.64, 347.335, -137.339, 1.4 ) }
    dend_28 { pt3dadd( 198.944, 347.732, -137.357, 0.22 ) }
    dend_28 { pt3dadd( 199.835, 348.834, -137.237, 0.22 ) }
    dend_28 { pt3dadd( 200.445, 349.546, -137.01, 0.22 ) }
    dend_28 { pt3dadd( 201.83, 351.048, -136.407, 0.22 ) }
    dend_28 { pt3dadd( 202.385, 351.626, -136.159, 0.66 ) }
    dend_28 { pt3dadd( 202.531, 351.779, -136.091, 0.66 ) }
    dend_28 { pt3dadd( 202.95, 352.213, -135.906, 0.66 ) }
    dend_28 { pt3dadd( 203.052, 352.315, -135.863, 0.66 ) }
    dend_28 { pt3dadd( 203.715, 352.881, -135.698, 0.66 ) }
    dend_28 { pt3dadd( 204.108, 353.148, -135.654, 0.22 ) }
    dend_28 { pt3dadd( 204.16, 353.179, -135.653, 0.22 ) }
    dend_28 { pt3dadd( 205.273, 353.794, -135.618, 0.22 ) }
    dend_28 { pt3dadd( 205.338, 353.828, -135.615, 0.22 ) }
    dend_28 { pt3dadd( 206.765, 354.513, -135.557, 0.22 ) }
    dend_28 { pt3dadd( 207.279, 354.771, -135.562, 1.03 ) }
    dend_28 { pt3dadd( 208.472, 355.409, -135.605, 1.03 ) }
    dend_28 { pt3dadd( 209.927, 356.23, -135.673, 0.22 ) }
    dend_28 { pt3dadd( 210.771, 356.735, -135.764, 0.22 ) }
    dend_28 { pt3dadd( 210.837, 356.781, -135.774, 0.22 ) }
    dend_28 { pt3dadd( 213.673, 359.079, -136.384, 0.22 ) }
    dend_28 { pt3dadd( 214.218, 359.581, -136.527, 0.96 ) }
    dend_28 { pt3dadd( 214.82, 360.21, -136.704, 1.18 ) }
    dend_28 { pt3dadd( 215.73, 361.429, -136.98, 0.15 ) }
    dend_28 { pt3dadd( 216.536, 362.808, -137.081, 0.15 ) }
    dend_28 { pt3dadd( 216.695, 363.174, -137.053, 0.37 ) }
    dend_28 { pt3dadd( 216.787, 363.589, -136.916, 0.37 ) }
    dend_28 { pt3dadd( 216.869, 364.914, -136.333, 0.22 ) }
    dend_28 { pt3dadd( 216.722, 367.428, -134.967, 0.22 ) }
    dend_28 { pt3dadd( 216.544, 368.744, -134.134, 1.47 ) }
    dend_28 { pt3dadd( 216.453, 369.148, -133.87, 1.47 ) }
    dend_28 { pt3dadd( 216.135, 370.212, -133.199, 0.22 ) }
    dend_28 { pt3dadd( 215.391, 372.192, -132.104, 0.22 ) }
    dend_28 { pt3dadd( 215.056, 372.919, -131.784, 1.03 ) }
    dend_28 { pt3dadd( 215.015, 372.985, -131.76, 1.03 ) }
    dend_28 { pt3dadd( 214.575, 373.659, -131.608, 1.03 ) }
    dend_28 { pt3dadd( 214.395, 373.941, -131.568, 0.22 ) }
    dend_28 { pt3dadd( 213.639, 375.21, -131.528, 0.22 ) }
    dend_28 { pt3dadd( 213.508, 375.439, -131.531, 0.22 ) }
    dend_28 { pt3dadd( 212.715, 376.854, -131.55, 0.22 ) }
    dend_28 { pt3dadd( 212.677, 376.925, -131.548, 0.22 ) }
    dend_28 { pt3dadd( 212.42, 377.414, -131.516, 0.52 ) }
    dend_28 { pt3dadd( 212.29, 377.676, -131.492, 0.74 ) }
    dend_28 { pt3dadd( 211.947, 378.384, -131.414, 0.74 ) }
    dend_28 { pt3dadd( 211.599, 379.158, -131.33, 0.22 ) }
    dend_28 { pt3dadd( 210.99, 380.612, -131.178, 0.22 ) }
    dend_28 { pt3dadd( 210.869, 380.894, -131.152, 0.66 ) }
    dend_28 { pt3dadd( 210.681, 381.322, -131.116, 0.66 ) }
    dend_28 { pt3dadd( 210.425, 381.895, -131.08, 0.15 ) }
    dend_28 { pt3dadd( 209.883, 383.125, -131.039, 0.15 ) }
    dend_28 { pt3dadd( 209.619, 383.749, -131.047, 0.96 ) }
    dend_28 { pt3dadd( 209.374, 384.32, -131.026, 1.25 ) }
    dend_28 { pt3dadd( 209.264, 384.569, -131.004, 1.25 ) }
    dend_28 { pt3dadd( 209.041, 385.076, -130.936, 1.25 ) }
    dend_28 { pt3dadd( 208.976, 385.229, -130.9, 1.25 ) }
    dend_28 { pt3dadd( 208.791, 385.657, -130.771, 1.25 ) }
    dend_28 { pt3dadd( 208.457, 386.45, -130.498, 1.25 ) }
    dend_28 { pt3dadd( 208.286, 386.854, -130.344, 0.22 ) }
    dend_28 { pt3dadd( 207.633, 388.376, -129.729, 0.22 ) }
    dend_28 { pt3dadd( 207.332, 389.054, -129.44, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_6 (entry count 87/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 48.1944, 180.675, -97.1234, 0.22 ) }
    dend_26 { pt3dadd( 47.3338, 181.409, -97.254, 0.22 ) }
    dend_26 { pt3dadd( 46.9553, 181.884, -97.5146, 0.22 ) }
    dend_26 { pt3dadd( 46.7101, 182.191, -97.6835, 0.37 ) }
    dend_26 { pt3dadd( 46.6561, 182.259, -97.7207, 0.37 ) }
    dend_26 { pt3dadd( 46.2998, 182.706, -97.9661, 0.37 ) }
    dend_26 { pt3dadd( 45.4818, 183.732, -98.5294, 0.37 ) }
    dend_26 { pt3dadd( 44.8452, 184.873, -99.1282, 0.37 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 95/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 48.1944, 180.675, -97.1234, 0.74 ) }
    dend_7 { pt3dadd( 47.6765, 182.531, -97.8751, 0.74 ) }
    dend_7 { pt3dadd( 47.5668, 183.251, -98.2833, 0.74 ) }
    dend_7 { pt3dadd( 47.5641, 183.323, -98.3188, 0.74 ) }
    dend_7 { pt3dadd( 47.5615, 184.187, -98.7256, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_60()
}

proc basic_shape_60() {
    dend_7 { pt3dadd( 47.5651, 184.253, -98.7521, 0.88 ) }
    dend_7 { pt3dadd( 47.6278, 184.999, -99.0361, 0.88 ) }
    dend_7 { pt3dadd( 47.9069, 186.849, -99.6382, 0.37 ) }
    dend_7 { pt3dadd( 48.263, 188.663, -100.208, 0.37 ) }
    dend_7 { pt3dadd( 48.2777, 188.73, -100.228, 0.37 ) }
    dend_7 { pt3dadd( 48.6783, 190.334, -100.668, 0.37 ) }
    dend_7 { pt3dadd( 48.8655, 191.032, -100.851, 1.11 ) }
    dend_7 { pt3dadd( 48.8852, 191.1, -100.867, 1.11 ) }
    dend_7 { pt3dadd( 49.242, 192.251, -101.051, 1.4 ) }
    dend_7 { pt3dadd( 49.4282, 192.787, -101.156, 1.4 ) }
    dend_7 { pt3dadd( 49.4511, 192.852, -101.17, 1.4 ) }
    dend_7 { pt3dadd( 49.8882, 194.173, -101.436, 1.4 ) }
    dend_7 { pt3dadd( 49.933, 194.318, -101.457, 1.4 ) }
    dend_7 { pt3dadd( 50.163, 195.171, -101.554, 1.4 ) }
    dend_7 { pt3dadd( 50.1976, 195.324, -101.567, 1.4 ) }
    dend_7 { pt3dadd( 50.3253, 195.97, -101.597, 1.4 ) }
    dend_7 { pt3dadd( 50.4519, 196.862, -101.599, 0.29 ) }
    dend_7 { pt3dadd( 50.5054, 197.69, -101.555, 0.29 ) }
    dend_7 { pt3dadd( 50.5165, 198.226, -101.531, 0.29 ) }
    dend_7 { pt3dadd( 50.5156, 198.446, -101.533, 0.66 ) }
    dend_7 { pt3dadd( 50.515, 198.516, -101.537, 0.66 ) }
    dend_7 { pt3dadd( 50.5201, 199.156, -101.613, 0.66 ) }
    dend_7 { pt3dadd( 50.5511, 199.921, -101.75, 0.44 ) }
    dend_7 { pt3dadd( 50.5567, 199.989, -101.765, 0.44 ) }
    dend_7 { pt3dadd( 50.694, 200.9, -101.998, 0.96 ) }
    dend_7 { pt3dadd( 50.7062, 200.961, -102.013, 0.96 ) }
    dend_7 { pt3dadd( 50.9149, 202.026, -102.251, 0.96 ) }
    dend_7 { pt3dadd( 50.9426, 202.177, -102.278, 0.96 ) }
    dend_7 { pt3dadd( 51.024, 202.699, -102.34, 0.96 ) }
    dend_7 { pt3dadd( 51.142, 203.579, -102.411, 0.59 ) }
    dend_7 { pt3dadd( 51.2376, 204.53, -102.447, 0.52 ) }
    dend_7 { pt3dadd( 51.3568, 205.779, -102.476, 0.52 ) }
    dend_7 { pt3dadd( 51.4785, 207.155, -102.521, 0.52 ) }
    dend_7 { pt3dadd( 51.5472, 208.02, -102.551, 1.18 ) }
    dend_7 { pt3dadd( 51.5518, 208.1, -102.553, 1.18 ) }
    dend_7 { pt3dadd( 51.6067, 209.22, -102.564, 1.69 ) }
    dend_7 { pt3dadd( 51.663, 210.316, -102.573, 1.69 ) }
    dend_7 { pt3dadd( 51.7481, 211.59, -102.582, 0.59 ) }
    dend_7 { pt3dadd( 51.874, 213.156, -102.555, 0.44 ) }
    dend_7 { pt3dadd( 52.0585, 215.048, -102.489, 0.44 ) }
    dend_7 { pt3dadd( 52.1475, 215.865, -102.443, 1.33 ) }
    dend_7 { pt3dadd( 52.2902, 217.028, -102.352, 1.69 ) }
    dend_7 { pt3dadd( 52.4195, 218.182, -102.234, 1.69 ) }
    dend_7 { pt3dadd( 52.5373, 219.457, -102.067, 0.96 ) }
    dend_7 { pt3dadd( 52.6405, 221.115, -101.857, 0.96 ) }
    dend_7 { pt3dadd( 52.6462, 221.337, -101.833, 0.96 ) }
    dend_7 { pt3dadd( 52.6426, 221.559, -101.813, 1.11 ) }
    dend_7 { pt3dadd( 52.5758, 222.716, -101.724, 0.81 ) }
    dend_7 { pt3dadd( 52.4156, 224.36, -101.632, 0.66 ) }
    dend_7 { pt3dadd( 52.1393, 226.422, -101.579, 0.59 ) }
    dend_7 { pt3dadd( 52.0354, 227.127, -101.595, 0.88 ) }
    dend_7 { pt3dadd( 52.0269, 227.197, -101.599, 0.88 ) }
    dend_7 { pt3dadd( 51.9456, 228.178, -101.724, 0.88 ) }
    dend_7 { pt3dadd( 51.9423, 228.307, -101.748, 0.88 ) }
    dend_7 { pt3dadd( 51.9847, 230.106, -102.203, 0.88 ) }
    dend_7 { pt3dadd( 52.0597, 231.434, -102.629, 0.52 ) }
    dend_7 { pt3dadd( 52.1574, 232.749, -103.089, 0.52 ) }
    dend_7 { pt3dadd( 52.2324, 233.741, -103.45, 0.88 ) }
    dend_7 { pt3dadd( 52.2725, 234.554, -103.745, 1.25 ) }
    dend_7 { pt3dadd( 52.2941, 235.334, -104.002, 1.47 ) }
    dend_7 { pt3dadd( 52.3004, 236.816, -104.409, 0.52 ) }
    dend_7 { pt3dadd( 52.2979, 236.887, -104.423, 0.52 ) }
    dend_7 { pt3dadd( 52.2379, 237.717, -104.546, 0.52 ) }
    dend_7 { pt3dadd( 52.1148, 239.106, -104.735, 0.66 ) }
    dend_7 { pt3dadd( 52.0332, 240.054, -104.868, 1.47 ) }
    dend_7 { pt3dadd( 51.9567, 241.158, -105.058, 2.14 ) }
    dend_7 { pt3dadd( 51.9534, 241.23, -105.071, 2.14 ) }
    dend_7 { pt3dadd( 51.9123, 242.098, -105.259, 2.14 ) }
    dend_7 { pt3dadd( 51.8439, 243.669, -105.697, 0.44 ) }
    dend_7 { pt3dadd( 51.7901, 244.856, -106.087, 0.44 ) }
    dend_7 { pt3dadd( 51.6921, 246.304, -106.616, 0.44 ) }
    dend_7 { pt3dadd( 51.6875, 246.37, -106.64, 0.44 ) }
    dend_7 { pt3dadd( 51.5853, 247.514, -107.102, 0.44 ) }
    dend_7 { pt3dadd( 51.4918, 248.47, -107.548, 1.18 ) }
    dend_7 { pt3dadd( 51.4048, 249.353, -107.987, 1.4 ) }
    dend_7 { pt3dadd( 51.3947, 249.477, -108.054, 1.4 ) }
    dend_7 { pt3dadd( 51.3533, 250.463, -108.56, 1.4 ) }
    dend_7 { pt3dadd( 51.3793, 252.361, -109.634, 0.52 ) }
    dend_7 { pt3dadd( 51.4663, 253.572, -110.377, 0.52 ) }
    dend_7 { pt3dadd( 51.4776, 253.702, -110.456, 0.52 ) }
    dend_7 { pt3dadd( 51.5416, 254.403, -110.875, 0.96 ) }
    dend_7 { pt3dadd( 51.6149, 255.339, -111.422, 0.96 ) }
    dend_7 { pt3dadd( 51.7287, 257.032, -112.438, 0.44 ) }
    dend_7 { pt3dadd( 51.7326, 257.138, -112.495, 0.44 ) }
    dend_7 { pt3dadd( 51.7057, 257.894, -112.878, 0.44 ) }
    dend_7 { pt3dadd( 51.636, 258.738, -113.356, 0.29 ) }
    dend_7 { pt3dadd( 51.4797, 260.061, -114.15, 0.29 ) }
    dend_7 { pt3dadd( 51.3018, 261.248, -114.87, 0.81 ) }
    dend_7 { pt3dadd( 51.1503, 262.224, -115.421, 0.81 ) }
    dend_7 { pt3dadd( 51.0707, 263.118, -115.985, 1.03 ) }
    dend_7 { pt3dadd( 51.07, 264.553, -117.027, 0.66 ) }
    dend_7 { pt3dadd( 51.1166, 265.081, -117.425, 0.66 ) }
    dend_7 { pt3dadd( 51.1477, 265.248, -117.552, 0.66 ) }
    dend_7 { pt3dadd( 51.2774, 265.739, -117.927, 0.66 ) }
    dend_7 { pt3dadd( 51.8165, 267.163, -118.99, 0.52 ) }
    dend_7 { pt3dadd( 52.2009, 268.048, -119.592, 0.37 ) }
    dend_7 { pt3dadd( 52.8354, 269.461, -120.421, 0.37 ) }
    dend_7 { pt3dadd( 53.4249, 270.746, -121.15, 0.37 ) }
    dend_7 { pt3dadd( 53.4913, 270.885, -121.229, 0.37 ) }
    dend_7 { pt3dadd( 54.1994, 272.3, -122.052, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_61()
}

proc basic_shape_61() {
    dend_7 { pt3dadd( 54.9038, 273.716, -122.795, 0.37 ) }
    dend_7 { pt3dadd( 55.1553, 274.166, -123.029, 1.47 ) }
    dend_7 { pt3dadd( 55.1962, 274.229, -123.064, 1.47 ) }
    dend_7 { pt3dadd( 55.9777, 275.367, -123.704, 1.84 ) }
    dend_7 { pt3dadd( 57.0945, 277.016, -124.756, 1.84 ) }
    // Section: dend_150, id: dend_150, parent: dend_148 (entry count 5/100)
    dend_150 { pt3dclear() }
    dend_150 { pt3dadd( 150.484, -223.044, 29.05, 1.18 ) }
    dend_150 { pt3dadd( 151.341, -223.959, 28.9209, 1.18 ) }
    dend_150 { pt3dadd( 151.86, -224.486, 28.8539, 0.66 ) }
    dend_150 { pt3dadd( 152.411, -225.096, 28.8408, 0.59 ) }
    dend_150 { pt3dadd( 153.103, -226.015, 28.9018, 0.59 ) }
    dend_150 { pt3dadd( 153.155, -226.1, 28.9122, 0.59 ) }
    dend_150 { pt3dadd( 153.602, -226.954, 29.0422, 0.59 ) }
    dend_150 { pt3dadd( 153.627, -227.03, 29.0628, 0.59 ) }
    dend_150 { pt3dadd( 153.869, -228.32, 29.4628, 0.37 ) }
    dend_150 { pt3dadd( 153.947, -229.157, 29.733, 0.37 ) }
    dend_150 { pt3dadd( 153.967, -229.784, 29.9396, 0.52 ) }
    dend_150 { pt3dadd( 153.969, -229.853, 29.9626, 0.52 ) }
    dend_150 { pt3dadd( 153.986, -230.323, 30.1117, 0.66 ) }
    dend_150 { pt3dadd( 154.005, -230.469, 30.1522, 0.66 ) }
    dend_150 { pt3dadd( 154.368, -231.804, 30.4833, 0.66 ) }
    dend_150 { pt3dadd( 154.525, -232.265, 30.6124, 1.11 ) }
    dend_150 { pt3dadd( 154.841, -232.975, 30.8098, 1.4 ) }
    dend_150 { pt3dadd( 155.053, -233.386, 30.9217, 1.4 ) }
    dend_150 { pt3dadd( 155.438, -234.013, 31.1443, 0.59 ) }
    dend_150 { pt3dadd( 156.259, -235.175, 31.6355, 0.59 ) }
    dend_150 { pt3dadd( 156.302, -235.228, 31.6613, 0.59 ) }
    dend_150 { pt3dadd( 157.283, -236.321, 32.2268, 0.52 ) }
    dend_150 { pt3dadd( 157.339, -236.376, 32.2786, 0.52 ) }
    dend_150 { pt3dadd( 158.16, -237.195, 33.3846, 0.52 ) }
    dend_150 { pt3dadd( 158.186, -237.222, 33.431, 0.52 ) }
    dend_150 { pt3dadd( 158.311, -237.368, 33.7023, 1.11 ) }
    dend_150 { pt3dadd( 158.511, -237.646, 34.2156, 1.33 ) }
    dend_150 { pt3dadd( 159.426, -239.229, 37.0893, 0.88 ) }
    dend_150 { pt3dadd( 159.69, -239.738, 37.9291, 0.37 ) }
    dend_150 { pt3dadd( 159.712, -239.782, 37.9926, 0.37 ) }
    dend_150 { pt3dadd( 159.995, -240.319, 38.7105, 0.37 ) }
    dend_150 { pt3dadd( 160.018, -240.361, 38.7626, 0.37 ) }
    dend_150 { pt3dadd( 160.259, -240.696, 39.0862, 0.37 ) }
    dend_150 { pt3dadd( 160.368, -240.8, 39.0979, 0.37 ) }
    dend_150 { pt3dadd( 160.972, -241.143, 39.1627, 0.74 ) }
    dend_150 { pt3dadd( 161.427, -241.324, 39.2326, 1.4 ) }
    dend_150 { pt3dadd( 161.505, -241.346, 39.2465, 1.4 ) }
    dend_150 { pt3dadd( 162.489, -241.627, 39.4299, 1.4 ) }
    dend_150 { pt3dadd( 162.619, -241.677, 39.4558, 1.4 ) }
    dend_150 { pt3dadd( 163.629, -242.193, 39.7326, 0.88 ) }
    dend_150 { pt3dadd( 164.153, -242.55, 39.9094, 0.66 ) }
    dend_150 { pt3dadd( 164.231, -242.619, 39.9393, 0.66 ) }
    dend_150 { pt3dadd( 164.879, -243.382, 40.2683, 0.52 ) }
    dend_150 { pt3dadd( 165.631, -244.612, 40.7682, 0.52 ) }
    dend_150 { pt3dadd( 166.014, -245.444, 41.0592, 1.11 ) }
    dend_150 { pt3dadd( 166.269, -246.161, 41.2788, 1.11 ) }
    dend_150 { pt3dadd( 166.447, -246.733, 41.4525, 1.11 ) }
    dend_150 { pt3dadd( 166.746, -247.78, 41.7704, 0.81 ) }
    dend_150 { pt3dadd( 166.921, -248.403, 41.984, 0.29 ) }
    dend_150 { pt3dadd( 167.337, -249.697, 42.4615, 0.29 ) }
    dend_150 { pt3dadd( 167.393, -249.83, 42.5093, 0.29 ) }
    dend_150 { pt3dadd( 167.563, -250.148, 42.6363, 0.29 ) }
    dend_150 { pt3dadd( 167.607, -250.211, 42.6625, 0.29 ) }
    dend_150 { pt3dadd( 168.402, -251.08, 43.1078, 0.29 ) }
    dend_150 { pt3dadd( 168.457, -251.129, 43.1448, 0.29 ) }
    dend_150 { pt3dadd( 168.743, -251.34, 43.3566, 0.66 ) }
    dend_150 { pt3dadd( 169.257, -251.722, 43.8038, 0.66 ) }
    dend_150 { pt3dadd( 169.33, -251.775, 43.8635, 0.66 ) }
    dend_150 { pt3dadd( 170.009, -252.241, 44.3863, 0.96 ) }
    dend_150 { pt3dadd( 170.059, -252.275, 44.4229, 0.96 ) }
    dend_150 { pt3dadd( 170.507, -252.554, 44.7381, 0.96 ) }
    dend_150 { pt3dadd( 171.668, -253.217, 45.4876, 0.37 ) }
    dend_150 { pt3dadd( 172.585, -253.712, 46.0242, 0.37 ) }
    dend_150 { pt3dadd( 172.643, -253.746, 46.052, 0.37 ) }
    dend_150 { pt3dadd( 172.807, -253.852, 46.1055, 0.81 ) }
    dend_150 { pt3dadd( 172.983, -253.979, 46.1535, 0.81 ) }
    dend_150 { pt3dadd( 173.566, -254.461, 46.265, 0.81 ) }
    dend_150 { pt3dadd( 173.64, -254.532, 46.2695, 0.81 ) }
    dend_150 { pt3dadd( 174.352, -255.307, 46.3134, 0.81 ) }
    dend_150 { pt3dadd( 175.091, -256.135, 46.3532, 0.81 ) }
    dend_150 { pt3dadd( 175.137, -256.188, 46.3554, 0.81 ) }
    dend_150 { pt3dadd( 175.576, -256.7, 46.3708, 0.74 ) }
    dend_150 { pt3dadd( 175.819, -256.98, 46.3956, 1.25 ) }
    dend_150 { pt3dadd( 175.994, -257.173, 46.4217, 1.25 ) }
    dend_150 { pt3dadd( 176.292, -257.535, 46.4934, 1.25 ) }
    dend_150 { pt3dadd( 176.415, -257.716, 46.5565, 1.25 ) }
    dend_150 { pt3dadd( 176.893, -258.52, 46.9025, 1.25 ) }
    dend_150 { pt3dadd( 177.276, -259.232, 47.2806, 1.25 ) }
    dend_150 { pt3dadd( 177.601, -259.887, 47.6731, 0.29 ) }
    dend_150 { pt3dadd( 178.004, -260.712, 48.2288, 0.29 ) }
    dend_150 { pt3dadd( 178.413, -261.586, 48.8771, 0.74 ) }
    dend_150 { pt3dadd( 178.443, -261.644, 48.9241, 0.74 ) }
    dend_150 { pt3dadd( 178.825, -262.347, 49.4885, 0.74 ) }
    dend_150 { pt3dadd( 178.86, -262.396, 49.5232, 0.74 ) }
    dend_150 { pt3dadd( 179.583, -263.003, 49.6995, 0.74 ) }
    dend_150 { pt3dadd( 179.633, -263.031, 49.6837, 0.74 ) }
    dend_150 { pt3dadd( 180.125, -263.282, 49.4432, 0.74 ) }
    dend_150 { pt3dadd( 180.931, -263.652, 49.0311, 1.25 ) }
    dend_150 { pt3dadd( 181.312, -263.814, 48.8182, 1.4 ) }
    dend_150 { pt3dadd( 182.797, -264.444, 48.0087, 0.96 ) }
    dend_150 { pt3dadd( 183.787, -264.859, 47.4962, 0.37 ) }
    dend_150 { pt3dadd( 183.858, -264.888, 47.4645, 0.37 ) }
    dend_150 { pt3dadd( 185.176, -265.378, 46.9883, 0.37 ) }
    dend_150 { pt3dadd( 185.242, -265.401, 46.9769, 0.37 ) }
    dend_150 { pt3dadd( 185.708, -265.565, 46.9638, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_62()
}

proc basic_shape_62() {
    dend_150 { pt3dadd( 186.464, -265.856, 47.135, 1.84 ) }
    dend_150 { pt3dadd( 186.552, -265.895, 47.1612, 1.84 ) }
    dend_150 { pt3dadd( 186.995, -266.118, 47.3056, 2.14 ) }
    dend_150 { pt3dadd( 188.01, -266.684, 47.6679, 0.81 ) }
    dend_150 { pt3dadd( 188.075, -266.724, 47.6931, 0.81 ) }
    dend_150 { pt3dadd( 189.264, -267.502, 48.16, 0.59 ) }
    dend_150 { pt3dadd( 190.462, -268.361, 48.7388, 0.59 ) }
    dend_150 { pt3dadd( 190.505, -268.397, 48.7614, 0.59 ) }
    dend_150 { pt3dadd( 190.92, -268.808, 49.0322, 0.96 ) }
    dend_150 { pt3dadd( 191.412, -269.397, 49.4742, 1.18 ) }
    dend_150 { pt3dadd( 191.721, -269.849, 49.8428, 1.4 ) }
    dend_150 { pt3dadd( 192.253, -270.869, 50.7745, 0.37 ) }
    dend_150 { pt3dadd( 192.678, -271.834, 51.7169, 0.37 ) }
    dend_150 { pt3dadd( 192.967, -272.521, 52.3953, 0.81 ) }
    dend_150 { pt3dadd( 193.348, -273.524, 53.3755, 0.29 ) }
    dend_150 { pt3dadd( 193.366, -273.573, 53.4229, 0.29 ) }
    dend_150 { pt3dadd( 193.595, -274.297, 54.1081, 0.29 ) }
    dend_150 { pt3dadd( 193.809, -274.941, 54.6479, 0.29 ) }
    dend_150 { pt3dadd( 193.83, -274.996, 54.6856, 0.29 ) }
    dend_150 { pt3dadd( 194.038, -275.509, 54.903, 0.66 ) }
    dend_150 { pt3dadd( 194.375, -276.328, 55.1309, 0.88 ) }
    dend_150 { pt3dadd( 194.397, -276.385, 55.1468, 0.88 ) }
    dend_150 { pt3dadd( 194.65, -277.111, 55.3177, 0.88 ) }
    dend_150 { pt3dadd( 195.051, -278.22, 55.6009, 1.4 ) }
    dend_150 { pt3dadd( 195.469, -279.246, 55.9477, 1.4 ) }
    dend_150 { pt3dadd( 195.489, -279.295, 55.9746, 1.4 ) }
    dend_150 { pt3dadd( 195.857, -280.183, 56.4809, 0.66 ) }
    dend_150 { pt3dadd( 196.257, -281.144, 57.0891, 0.52 ) }
    dend_150 { pt3dadd( 196.725, -282.245, 57.911, 0.52 ) }
    dend_150 { pt3dadd( 197.179, -283.244, 58.7897, 0.52 ) }
    dend_150 { pt3dadd( 197.905, -284.769, 60.1452, 1.33 ) }
    // Section: dend_149, id: dend_149, parent: dend_148 (entry count 31/100)
    dend_149 { pt3dclear() }
    dend_149 { pt3dadd( 150.484, -223.044, 29.05, 0.37 ) }
    dend_149 { pt3dadd( 152.908, -222.808, 27.7376, 0.37 ) }
    dend_149 { pt3dadd( 153.793, -222.722, 27.2586, 0.37 ) }
    dend_149 { pt3dadd( 153.857, -222.716, 27.224, 0.37 ) }
    dend_149 { pt3dadd( 154.703, -222.634, 26.766, 0.37 ) }
    dend_149 { pt3dadd( 155.344, -222.571, 26.4189, 1.25 ) }
    dend_149 { pt3dadd( 155.956, -222.512, 26.0874, 1.4 ) }
    // Section: dend_137, id: dend_137, parent: dend_135 (entry count 38/100)
    dend_137 { pt3dclear() }
    dend_137 { pt3dadd( 140.653, -234.507, 9.03692, 0.59 ) }
    dend_137 { pt3dadd( 140.531, -234.94, 9.04392, 0.59 ) }
    dend_137 { pt3dadd( 140.342, -235.506, 9.1299, 0.52 ) }
    dend_137 { pt3dadd( 139.998, -236.381, 9.32851, 0.52 ) }
    dend_137 { pt3dadd( 139.636, -237.221, 9.55439, 0.44 ) }
    dend_137 { pt3dadd( 139.04, -238.458, 9.92109, 0.44 ) }
    dend_137 { pt3dadd( 138.664, -239.167, 10.1823, 0.44 ) }
    dend_137 { pt3dadd( 137.942, -240.274, 10.7756, 0.81 ) }
    dend_137 { pt3dadd( 137.68, -240.594, 11.0177, 0.81 ) }
    dend_137 { pt3dadd( 137.639, -240.634, 11.0575, 0.81 ) }
    dend_137 { pt3dadd( 137.347, -240.876, 11.3691, 0.29 ) }
    dend_137 { pt3dadd( 136.608, -241.455, 12.159, 0.29 ) }
    dend_137 { pt3dadd( 135.91, -242.046, 12.8751, 1.03 ) }
    dend_137 { pt3dadd( 135.471, -242.464, 13.2814, 1.11 ) }
    dend_137 { pt3dadd( 135.034, -242.891, 13.6959, 1.11 ) }
    dend_137 { pt3dadd( 134.194, -243.733, 14.4904, 0.29 ) }
    dend_137 { pt3dadd( 133.559, -244.391, 15.0813, 0.29 ) }
    dend_137 { pt3dadd( 132.99, -244.981, 15.5364, 1.11 ) }
    dend_137 { pt3dadd( 132.498, -245.524, 15.8863, 1.84 ) }
    // Section: dend_136, id: dend_136, parent: dend_135 (entry count 57/100)
    dend_136 { pt3dclear() }
    dend_136 { pt3dadd( 140.653, -234.507, 9.03692, 0.15 ) }
    dend_136 { pt3dadd( 140.705, -234.112, 9.06527, 0.15 ) }
    dend_136 { pt3dadd( 140.724, -234.038, 9.08857, 0.15 ) }
    dend_136 { pt3dadd( 141.015, -233.343, 9.37754, 0.15 ) }
    dend_136 { pt3dadd( 141.075, -233.227, 9.43189, 0.15 ) }
    dend_136 { pt3dadd( 141.386, -232.624, 9.71454, 0.15 ) }
    dend_136 { pt3dadd( 141.416, -232.566, 9.74171, 0.15 ) }
    dend_136 { pt3dadd( 142.025, -231.581, 10.2439, 1.4 ) }
    dend_136 { pt3dadd( 142.347, -231.147, 10.508, 1.4 ) }
    dend_136 { pt3dadd( 142.39, -231.105, 10.5431, 1.4 ) }
    // Section: dend_124, id: dend_124, parent: dend_122 (entry count 67/100)
    dend_124 { pt3dclear() }
    dend_124 { pt3dadd( -135.307, -415.047, 0.785354, 0.22 ) }
    dend_124 { pt3dadd( -134.164, -416.037, -0.977054, 0.22 ) }
    dend_124 { pt3dadd( -133.888, -416.334, -1.45439, 0.22 ) }
    dend_124 { pt3dadd( -133.825, -416.416, -1.5649, 0.22 ) }
    dend_124 { pt3dadd( -133.638, -416.683, -1.90395, 0.22 ) }
    dend_124 { pt3dadd( -133.441, -416.989, -2.32484, 0.74 ) }
    dend_124 { pt3dadd( -133.32, -417.195, -2.60522, 0.88 ) }
    dend_124 { pt3dadd( -132.875, -418.109, -3.7106, 0.22 ) }
    dend_124 { pt3dadd( -132.55, -418.833, -4.63742, 0.22 ) }
    dend_124 { pt3dadd( -132.529, -418.879, -4.69999, 0.22 ) }
    dend_124 { pt3dadd( -132.17, -419.741, -5.9378, 0.96 ) }
    dend_124 { pt3dadd( -132.094, -419.942, -6.23888, 1.25 ) }
    dend_124 { pt3dadd( -132.066, -420.022, -6.36606, 1.25 ) }
    // Section: dend_123, id: dend_123, parent: dend_122 (entry count 80/100)
    dend_123 { pt3dclear() }
    dend_123 { pt3dadd( -135.307, -415.047, 0.785354, 0.52 ) }
    dend_123 { pt3dadd( -135.514, -415.988, 1.20139, 0.52 ) }
    dend_123 { pt3dadd( -135.581, -416.257, 1.31821, 0.74 ) }
    dend_123 { pt3dadd( -135.682, -416.791, 1.51814, 0.74 ) }
    dend_123 { pt3dadd( -135.714, -416.991, 1.58657, 0.74 ) }
    dend_123 { pt3dadd( -135.85, -418.145, 1.94857, 0.96 ) }
    dend_123 { pt3dadd( -135.894, -418.703, 2.11043, 0.66 ) }
    dend_123 { pt3dadd( -135.923, -419.341, 2.27089, 0.22 ) }
    dend_123 { pt3dadd( -135.936, -420.148, 2.41443, 0.22 ) }
    dend_123 { pt3dadd( -135.931, -420.269, 2.42544, 0.66 ) }
    dend_123 { pt3dadd( -135.903, -420.63, 2.4247, 0.88 ) }
    dend_123 { pt3dadd( -135.869, -420.948, 2.38428, 0.88 ) }
    dend_123 { pt3dadd( -135.723, -421.881, 2.25744, 0.22 ) }
    dend_123 { pt3dadd( -135.709, -421.95, 2.24805, 0.22 ) }
    dend_123 { pt3dadd( -135.626, -422.36, 2.20712, 0.22 ) }
    dend_123 { pt3dadd( -135.613, -422.429, 2.20223, 0.22 ) }
    dend_123 { pt3dadd( -135.501, -423.242, 2.16781, 0.22 ) }
    dend_123 { pt3dadd( -135.48, -423.44, 2.16479, 0.22 ) }
    dend_123 { pt3dadd( -135.442, -424.036, 2.17442, 0.22 ) }
    dend_123 { pt3dadd( -135.423, -425.227, 2.1929, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_63()
}

proc basic_shape_63() {
    dend_123 { pt3dadd( -135.426, -425.359, 2.19483, 0.22 ) }
    dend_123 { pt3dadd( -135.475, -426.253, 2.20676, 0.22 ) }
    dend_123 { pt3dadd( -135.482, -426.333, 2.20773, 0.22 ) }
    dend_123 { pt3dadd( -135.631, -427.56, 2.25913, 0.22 ) }
    dend_123 { pt3dadd( -135.64, -427.63, 2.26386, 0.22 ) }
    dend_123 { pt3dadd( -135.683, -428.091, 2.30438, 0.66 ) }
    dend_123 { pt3dadd( -135.703, -428.524, 2.34686, 0.66 ) }
    dend_123 { pt3dadd( -135.702, -428.594, 2.35459, 0.66 ) }
    dend_123 { pt3dadd( -135.682, -429.458, 2.45817, 0.29 ) }
    dend_123 { pt3dadd( -135.633, -430.42, 2.59185, 0.29 ) }
    dend_123 { pt3dadd( -135.609, -430.865, 2.65529, 0.66 ) }
    dend_123 { pt3dadd( -135.578, -431.392, 2.7332, 0.96 ) }
    dend_123 { pt3dadd( -135.559, -431.648, 2.76988, 0.96 ) }
    // Section: dend_108, id: dend_108, parent: dend_106 (entry count 13/100)
    dend_108 { pt3dclear() }
    dend_108 { pt3dadd( -33.4508, -391.388, -0.312572, 0.29 ) }
    dend_108 { pt3dadd( -33.579, -391.858, -0.358506, 0.29 ) }
    dend_108 { pt3dadd( -33.6707, -392.441, -0.404429, 0.29 ) }
    dend_108 { pt3dadd( -33.6712, -392.511, -0.415132, 0.29 ) }
    dend_108 { pt3dadd( -33.5174, -393.437, -0.591915, 0.29 ) }
    dend_108 { pt3dadd( -33.4946, -393.574, -0.618072, 0.29 ) }
    dend_108 { pt3dadd( -33.3183, -394.637, -0.820748, 0.29 ) }
    dend_108 { pt3dadd( -33.276, -394.801, -0.847502, 0.29 ) }
    dend_108 { pt3dadd( -32.9437, -395.601, -1.01154, 2.06 ) }
    dend_108 { pt3dadd( -32.5941, -396.214, -1.1615, 2.73 ) }
    // Section: dend_107, id: dend_107, parent: dend_106 (entry count 23/100)
    dend_107 { pt3dclear() }
    dend_107 { pt3dadd( -33.4508, -391.388, -0.312572, 0.52 ) }
    dend_107 { pt3dadd( -34.3575, -391.278, -0.694379, 0.52 ) }
    dend_107 { pt3dadd( -34.9702, -391.204, -0.921938, 0.52 ) }
    dend_107 { pt3dadd( -35.5342, -391.137, -1.13144, 0.81 ) }
    dend_107 { pt3dadd( -35.882, -391.095, -1.26063, 1.11 ) }
    dend_107 { pt3dadd( -36.0903, -391.07, -1.33801, 1.11 ) }
    dend_107 { pt3dadd( -36.5748, -391.012, -1.51797, 1.11 ) }
    dend_107 { pt3dadd( -36.6441, -391.003, -1.52859, 1.11 ) }
    // Section: dend_69, id: dend_69, parent: dend_67 (entry count 31/100)
    dend_69 { pt3dclear() }
    dend_69 { pt3dadd( -75.1964, 290.971, -52.7643, 0.29 ) }
    dend_69 { pt3dadd( -74.8149, 292.503, -52.5181, 0.29 ) }
    dend_69 { pt3dadd( -74.6972, 293.005, -52.5025, 0.29 ) }
    dend_69 { pt3dadd( -74.2963, 294.863, -52.5842, 0.29 ) }
    dend_69 { pt3dadd( -74.0288, 296.084, -52.6823, 0.29 ) }
    dend_69 { pt3dadd( -74.0134, 296.152, -52.6892, 0.29 ) }
    dend_69 { pt3dadd( -73.8272, 296.998, -52.7815, 0.29 ) }
    dend_69 { pt3dadd( -73.5285, 298.389, -53.0507, 0.88 ) }
    dend_69 { pt3dadd( -73.3516, 299.235, -53.2269, 1.18 ) }
    dend_69 { pt3dadd( -73.3012, 299.493, -53.2852, 0.29 ) }
    dend_69 { pt3dadd( -73.1263, 300.567, -53.5142, 0.29 ) }
    dend_69 { pt3dadd( -73.0105, 301.285, -53.6489, 0.29 ) }
    dend_69 { pt3dadd( -72.9621, 301.58, -53.6874, 0.66 ) }
    dend_69 { pt3dadd( -72.9508, 301.66, -53.6889, 0.66 ) }
    dend_69 { pt3dadd( -72.8923, 302.123, -53.6844, 0.66 ) }
    dend_69 { pt3dadd( -72.8803, 302.287, -53.6783, 0.66 ) }
    dend_69 { pt3dadd( -72.8685, 302.533, -53.6622, 0.22 ) }
    dend_69 { pt3dadd( -72.8609, 303.179, -53.6397, 0.22 ) }
    dend_69 { pt3dadd( -72.9216, 304.104, -53.6402, 0.22 ) }
    dend_69 { pt3dadd( -72.9696, 304.595, -53.6305, 0.59 ) }
    dend_69 { pt3dadd( -73.0372, 305.183, -53.6092, 0.59 ) }
    dend_69 { pt3dadd( -73.0483, 305.263, -53.6055, 0.59 ) }
    dend_69 { pt3dadd( -73.1935, 306.105, -53.5588, 0.22 ) }
    dend_69 { pt3dadd( -73.5051, 307.574, -53.4852, 0.22 ) }
    dend_69 { pt3dadd( -73.7232, 308.451, -53.451, 0.22 ) }
    dend_69 { pt3dadd( -73.7369, 308.509, -53.4497, 0.88 ) }
    dend_69 { pt3dadd( -73.8659, 309.08, -53.4292, 1.18 ) }
    dend_69 { pt3dadd( -73.9672, 309.537, -53.4068, 1.18 ) }
    dend_69 { pt3dadd( -73.9796, 309.599, -53.4022, 1.18 ) }
    dend_69 { pt3dadd( -74.0381, 309.867, -53.3603, 1.18 ) }
    dend_69 { pt3dadd( -74.2074, 310.573, -53.2141, 0.29 ) }
    dend_69 { pt3dadd( -74.2248, 310.641, -53.1961, 0.29 ) }
    dend_69 { pt3dadd( -74.537, 311.956, -52.7806, 0.29 ) }
    dend_69 { pt3dadd( -74.5537, 312.033, -52.7537, 0.29 ) }
    dend_69 { pt3dadd( -74.7992, 313.171, -52.3139, 0.29 ) }
    dend_69 { pt3dadd( -74.8125, 313.235, -52.2868, 0.29 ) }
    dend_69 { pt3dadd( -74.8656, 313.514, -52.1681, 0.22 ) }
    dend_69 { pt3dadd( -74.9683, 314.121, -51.9249, 0.22 ) }
    dend_69 { pt3dadd( -74.9883, 314.256, -51.8584, 0.22 ) }
    dend_69 { pt3dadd( -75.1132, 315.147, -51.4148, 0.29 ) }
    dend_69 { pt3dadd( -75.1213, 315.211, -51.3863, 0.29 ) }
    dend_69 { pt3dadd( -75.2173, 315.921, -51.0081, 0.44 ) }
    dend_69 { pt3dadd( -75.2274, 315.989, -50.9634, 0.44 ) }
    dend_69 { pt3dadd( -75.3616, 316.794, -50.3844, 0.44 ) }
    dend_69 { pt3dadd( -75.3724, 316.847, -50.3583, 0.44 ) }
    dend_69 { pt3dadd( -75.4663, 317.251, -50.2428, 0.44 ) }
    dend_69 { pt3dadd( -75.5478, 317.571, -50.1787, 0.22 ) }
    dend_69 { pt3dadd( -75.5655, 317.638, -50.1705, 0.22 ) }
    dend_69 { pt3dadd( -75.7524, 318.485, -50.004, 0.22 ) }
    dend_69 { pt3dadd( -76.024, 319.912, -49.7092, 0.22 ) }
    dend_69 { pt3dadd( -76.1694, 320.793, -49.5006, 0.22 ) }
    dend_69 { pt3dadd( -76.181, 320.871, -49.481, 0.22 ) }
    dend_69 { pt3dadd( -76.2683, 321.535, -49.3144, 1.18 ) }
    dend_69 { pt3dadd( -76.4189, 323.233, -48.8837, 1.69 ) }
    dend_69 { pt3dadd( -76.4412, 323.735, -48.749, 1.69 ) }
    dend_69 { pt3dadd( -76.4389, 324.23, -48.6244, 1.4 ) }
    dend_69 { pt3dadd( -76.4368, 324.944, -48.4844, 1.18 ) }
    dend_69 { pt3dadd( -76.4549, 325.889, -48.3594, 0.29 ) }
    dend_69 { pt3dadd( -76.4732, 326.656, -48.3093, 0.29 ) }
    dend_69 { pt3dadd( -76.4753, 326.726, -48.3101, 0.29 ) }
    dend_69 { pt3dadd( -76.5018, 327.997, -48.3362, 0.29 ) }
    dend_69 { pt3dadd( -76.5101, 329.299, -48.3714, 0.29 ) }
    dend_69 { pt3dadd( -76.4944, 330.365, -48.4057, 0.29 ) }
    dend_69 { pt3dadd( -76.4579, 331.598, -48.4506, 0.22 ) }
    dend_69 { pt3dadd( -76.4264, 332.047, -48.4675, 0.88 ) }
    dend_69 { pt3dadd( -76.3374, 332.774, -48.4948, 1.25 ) }
    dend_69 { pt3dadd( -76.2531, 333.211, -48.5119, 1.25 ) }
    dend_69 { pt3dadd( -76.0694, 333.92, -48.5375, 0.52 ) }
    dend_69 { pt3dadd( -75.9188, 334.413, -48.5426, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_64()
}

proc basic_shape_64() {
    dend_69 { pt3dadd( -75.4648, 335.623, -48.5167, 0.22 ) }
    dend_69 { pt3dadd( -75.2629, 336.102, -48.4925, 0.81 ) }
    dend_69 { pt3dadd( -75.2302, 336.176, -48.488, 0.81 ) }
    dend_69 { pt3dadd( -74.8857, 336.922, -48.4356, 0.81 ) }
    dend_69 { pt3dadd( -74.6694, 337.362, -48.399, 0.22 ) }
    dend_69 { pt3dadd( -74.1215, 338.412, -48.2954, 0.22 ) }
    dend_69 { pt3dadd( -73.9012, 338.796, -48.2474, 0.81 ) }
    dend_69 { pt3dadd( -73.6236, 339.238, -48.1881, 0.81 ) }
    // Section: dend_68, id: dend_68, parent: dend_67 (entry count 8/100)
    dend_68 { pt3dclear() }
    dend_68 { pt3dadd( -75.1964, 290.971, -52.7643, 0.29 ) }
    dend_68 { pt3dadd( -74.5924, 291.07, -53.3892, 0.29 ) }
    dend_68 { pt3dadd( -73.6749, 291.089, -54.1567, 0.29 ) }
    dend_68 { pt3dadd( -72.7476, 291.075, -54.8905, 0.29 ) }
    dend_68 { pt3dadd( -72.6617, 291.074, -54.9532, 0.29 ) }
    dend_68 { pt3dadd( -72.2835, 291.063, -55.2172, 0.29 ) }
    dend_68 { pt3dadd( -70.9545, 291.006, -56.1722, 0.29 ) }
    dend_68 { pt3dadd( -69.6, 290.843, -57.1708, 0.22 ) }
    dend_68 { pt3dadd( -69.5418, 290.834, -57.2136, 0.22 ) }
    dend_68 { pt3dadd( -68.7161, 290.742, -57.7438, 0.22 ) }
    dend_68 { pt3dadd( -68.6563, 290.741, -57.7853, 0.22 ) }
    dend_68 { pt3dadd( -67.8585, 290.771, -58.3721, 1.03 ) }
    dend_68 { pt3dadd( -67.7994, 290.775, -58.4108, 1.03 ) }
    dend_68 { pt3dadd( -67.4638, 290.804, -58.6847, 1.03 ) }
    dend_68 { pt3dadd( -67.1206, 290.827, -58.9537, 1.03 ) }
    dend_68 { pt3dadd( -65.9593, 290.885, -60.2081, 0.22 ) }
    dend_68 { pt3dadd( -65.913, 290.889, -60.2605, 0.22 ) }
    dend_68 { pt3dadd( -64.9998, 290.968, -61.3132, 0.22 ) }
    dend_68 { pt3dadd( -64.0293, 291.047, -62.4331, 0.81 ) }
    dend_68 { pt3dadd( -63.5953, 291.077, -62.9451, 0.81 ) }
    dend_68 { pt3dadd( -61.8366, 291.1, -65.6222, 0.22 ) }
    dend_68 { pt3dadd( -61.3134, 291.06, -66.4991, 0.22 ) }
    dend_68 { pt3dadd( -61.2321, 291.05, -66.6491, 0.96 ) }
    dend_68 { pt3dadd( -60.9733, 291.014, -67.1784, 0.96 ) }
    dend_68 { pt3dadd( -60.9352, 291.007, -67.2553, 0.96 ) }
    dend_68 { pt3dadd( -58.9403, 290.726, -71.2555, 0.22 ) }
    dend_68 { pt3dadd( -58.4424, 290.663, -72.1444, 0.22 ) }
    dend_68 { pt3dadd( -58.3988, 290.657, -72.2142, 0.22 ) }
    dend_68 { pt3dadd( -58.0437, 290.613, -72.6746, 0.22 ) }
    dend_68 { pt3dadd( -57.7907, 290.592, -72.9266, 1.03 ) }
    dend_68 { pt3dadd( -57.253, 290.567, -73.3214, 1.25 ) }
    dend_68 { pt3dadd( -55.9308, 290.548, -73.9226, 0.22 ) }
    dend_68 { pt3dadd( -54.4595, 290.524, -74.7722, 0.22 ) }
    dend_68 { pt3dadd( -53.5797, 290.497, -75.3187, 0.22 ) }
    dend_68 { pt3dadd( -52.3312, 290.493, -76.2525, 0.22 ) }
    dend_68 { pt3dadd( -52.2029, 290.495, -76.3584, 0.96 ) }
    dend_68 { pt3dadd( -52.0386, 290.502, -76.5076, 0.96 ) }
    dend_68 { pt3dadd( -50.8464, 290.609, -77.8037, 0.22 ) }
    dend_68 { pt3dadd( -50.1067, 290.684, -78.7841, 0.22 ) }
    dend_68 { pt3dadd( -48.6021, 290.807, -80.9941, 0.22 ) }
    dend_68 { pt3dadd( -48.6021, 290.807, -80.9941, 0.96 ) }
    dend_68 { pt3dadd( -48.0293, 290.788, -81.9132, 0.52 ) }
    dend_68 { pt3dadd( -47.1639, 290.739, -83.3297, 0.81 ) }
    dend_68 { pt3dadd( -46.8211, 290.696, -83.8892, 0.66 ) }
    dend_68 { pt3dadd( -46.7917, 290.684, -83.9548, 0.66 ) }
    dend_68 { pt3dadd( -46.634, 290.444, -84.436, 0.66 ) }
    // Section: dend_44, id: dend_44, parent: dend_38 (entry count 54/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 82.7443, 296.463, -63.5453, 0.29 ) }
    dend_44 { pt3dadd( 82.8899, 297.538, -63.8544, 0.29 ) }
    dend_44 { pt3dadd( 83.0772, 298.291, -64.0548, 0.29 ) }
    dend_44 { pt3dadd( 83.1013, 298.366, -64.0739, 0.29 ) }
    dend_44 { pt3dadd( 83.2666, 298.762, -64.1658, 0.29 ) }
    dend_44 { pt3dadd( 83.3097, 298.856, -64.1991, 0.29 ) }
    dend_44 { pt3dadd( 83.4914, 299.224, -64.3515, 0.59 ) }
    dend_44 { pt3dadd( 83.6635, 299.489, -64.4678, 0.88 ) }
    dend_44 { pt3dadd( 83.702, 299.544, -64.4957, 0.88 ) }
    dend_44 { pt3dadd( 83.927, 299.862, -64.6831, 0.88 ) }
    dend_44 { pt3dadd( 84.5148, 300.802, -65.2346, 1.25 ) }
    dend_44 { pt3dadd( 84.5439, 300.859, -65.2631, 1.25 ) }
    dend_44 { pt3dadd( 84.6808, 301.237, -65.4426, 1.47 ) }
    dend_44 { pt3dadd( 84.774, 301.572, -65.5825, 1.69 ) }
    dend_44 { pt3dadd( 84.9811, 302.457, -65.9182, 1.69 ) }
    dend_44 { pt3dadd( 85.1285, 303.166, -66.171, 1.25 ) }
    dend_44 { pt3dadd( 85.3179, 304.184, -66.4888, 0.88 ) }
    dend_44 { pt3dadd( 85.5092, 305.35, -66.8527, 0.29 ) }
    dend_44 { pt3dadd( 85.664, 306.519, -67.2181, 0.29 ) }
    dend_44 { pt3dadd( 85.6707, 306.598, -67.2414, 0.29 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 74/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 82.7443, 296.463, -63.5453, 0.22 ) }
    dend_39 { pt3dadd( 84.2516, 296.168, -64.423, 0.22 ) }
    dend_39 { pt3dadd( 84.3181, 296.157, -64.4704, 0.22 ) }
    dend_39 { pt3dadd( 84.9812, 296.058, -64.9731, 0.59 ) }
    dend_39 { pt3dadd( 85.0402, 296.051, -65.015, 0.59 ) }
    dend_39 { pt3dadd( 85.4286, 295.999, -65.3199, 0.81 ) }
    dend_39 { pt3dadd( 85.811, 295.965, -65.682, 0.88 ) }
    dend_39 { pt3dadd( 86.6866, 295.942, -66.6516, 0.37 ) }
    dend_39 { pt3dadd( 86.7511, 295.939, -66.7267, 0.37 ) }
    dend_39 { pt3dadd( 87.2213, 295.936, -67.3131, 0.37 ) }
    dend_39 { pt3dadd( 87.9628, 295.96, -68.2702, 0.44 ) }
    dend_39 { pt3dadd( 88.6235, 296.045, -69.1577, 1.03 ) }
    dend_39 { pt3dadd( 88.7131, 296.066, -69.2777, 1.03 ) }
    dend_39 { pt3dadd( 89.2836, 296.286, -69.8704, 0.29 ) }
    dend_39 { pt3dadd( 89.6342, 296.459, -70.2052, 0.29 ) }
    dend_39 { pt3dadd( 89.7866, 296.556, -70.3371, 0.29 ) }
    dend_39 { pt3dadd( 90.205, 296.827, -70.5804, 0.29 ) }
    dend_39 { pt3dadd( 90.2603, 296.86, -70.6075, 0.29 ) }
    dend_39 { pt3dadd( 90.8278, 297.216, -70.8986, 0.29 ) }
    dend_39 { pt3dadd( 91.8725, 297.766, -71.4764, 0.66 ) }
    dend_39 { pt3dadd( 91.9335, 297.785, -71.5068, 0.66 ) }
    dend_39 { pt3dadd( 92.3684, 297.896, -71.691, 0.66 ) }
    dend_39 { pt3dadd( 92.4324, 297.91, -71.7154, 0.66 ) }
    dend_39 { pt3dadd( 92.8592, 297.995, -71.893, 0.66 ) }
    dend_39 { pt3dadd( 94.1311, 298.232, -72.4246, 0.29 ) }
    dend_39 { pt3dadd( 94.9676, 298.38, -72.7444, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_65()
}

proc basic_shape_65() {
    dend_39 { pt3dadd( 96.0257, 298.542, -73.158, 0.29 ) }
    dend_39 { pt3dadd( 96.0927, 298.551, -73.1851, 0.29 ) }
    dend_39 { pt3dadd( 97.5497, 298.695, -73.9017, 0.29 ) }
    dend_39 { pt3dadd( 97.9209, 298.721, -74.1188, 0.96 ) }
    dend_39 { pt3dadd( 98.3565, 298.744, -74.4055, 1.33 ) }
    dend_39 { pt3dadd( 98.6467, 298.75, -74.6312, 1.33 ) }
    dend_39 { pt3dadd( 98.7099, 298.745, -74.681, 1.33 ) }
    dend_39 { pt3dadd( 100.128, 298.609, -75.7944, 0.29 ) }
    dend_39 { pt3dadd( 100.2, 298.6, -75.8505, 0.29 ) }
    dend_39 { pt3dadd( 100.784, 298.527, -76.3443, 0.29 ) }
    dend_39 { pt3dadd( 101.425, 298.461, -76.9287, 0.66 ) }
    dend_39 { pt3dadd( 102.044, 298.41, -77.4969, 1.03 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 12/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 64.1377, 317.22, -65.0881, 0.22 ) }
    dend_37 { pt3dadd( 63.8201, 318.533, -66.1207, 0.22 ) }
    dend_37 { pt3dadd( 63.6837, 319.314, -66.6186, 0.22 ) }
    dend_37 { pt3dadd( 63.6763, 319.385, -66.6567, 0.22 ) }
    dend_37 { pt3dadd( 63.6624, 319.714, -66.8041, 0.22 ) }
    dend_37 { pt3dadd( 63.6627, 319.92, -66.8863, 0.44 ) }
    dend_37 { pt3dadd( 63.6726, 320.052, -66.9349, 0.44 ) }
    dend_37 { pt3dadd( 63.7487, 320.478, -66.9881, 0.44 ) }
    dend_37 { pt3dadd( 63.8003, 320.683, -67.0192, 0.44 ) }
    dend_37 { pt3dadd( 63.8667, 320.966, -67.0644, 0.44 ) }
    dend_37 { pt3dadd( 63.8814, 321.037, -67.0758, 0.44 ) }
    dend_37 { pt3dadd( 64.0264, 321.993, -67.2719, 0.29 ) }
    dend_37 { pt3dadd( 64.0632, 322.656, -67.4197, 0.29 ) }
    dend_37 { pt3dadd( 64.053, 323.139, -67.5334, 0.29 ) }
    dend_37 { pt3dadd( 64.044, 323.208, -67.5491, 0.52 ) }
    dend_37 { pt3dadd( 63.9634, 323.56, -67.6672, 0.52 ) }
    dend_37 { pt3dadd( 63.7853, 324.168, -67.9765, 0.52 ) }
    dend_37 { pt3dadd( 63.545, 324.844, -68.4898, 0.52 ) }
    dend_37 { pt3dadd( 63.5176, 324.912, -68.5616, 0.52 ) }
    dend_37 { pt3dadd( 63.3403, 325.337, -69.0822, 0.52 ) }
    dend_37 { pt3dadd( 63.0344, 326.107, -70.1003, 0.81 ) }
    dend_37 { pt3dadd( 62.8245, 326.879, -71.039, 1.18 ) }
    dend_37 { pt3dadd( 62.7213, 327.561, -71.8361, 0.74 ) }
    dend_37 { pt3dadd( 62.68, 328.341, -72.7239, 0.74 ) }
    dend_37 { pt3dadd( 62.6804, 328.39, -72.7743, 0.74 ) }
    dend_37 { pt3dadd( 62.6986, 328.608, -72.9728, 0.29 ) }
    dend_37 { pt3dadd( 62.9104, 330.208, -74.141, 0.29 ) }
    dend_37 { pt3dadd( 63.0185, 330.881, -74.5329, 0.66 ) }
    dend_37 { pt3dadd( 63.0386, 331.007, -74.5926, 0.66 ) }
    dend_37 { pt3dadd( 63.125, 331.578, -74.8437, 0.66 ) }
    dend_37 { pt3dadd( 63.2884, 333.057, -75.4778, 0.66 ) }
    dend_37 { pt3dadd( 63.3289, 333.382, -75.631, 1.33 ) }
    dend_37 { pt3dadd( 63.4488, 334.189, -75.9869, 1.77 ) }
    dend_37 { pt3dadd( 63.5228, 334.631, -76.1624, 1.77 ) }
    dend_37 { pt3dadd( 63.6811, 335.508, -76.4925, 0.44 ) }
    dend_37 { pt3dadd( 63.8782, 336.537, -76.86, 0.44 ) }
    dend_37 { pt3dadd( 64.3918, 339.663, -77.9712, 0.29 ) }
    dend_37 { pt3dadd( 64.6121, 341.373, -78.6102, 0.29 ) }
    dend_37 { pt3dadd( 64.6267, 341.506, -78.6614, 0.29 ) }
    dend_37 { pt3dadd( 64.6627, 341.923, -78.8284, 0.29 ) }
    dend_37 { pt3dadd( 64.6652, 341.988, -78.8563, 0.29 ) }
    dend_37 { pt3dadd( 64.647, 344.578, -80.0646, 0.29 ) }
    dend_37 { pt3dadd( 64.5748, 345.5, -80.5029, 0.29 ) }
    dend_37 { pt3dadd( 64.5688, 345.571, -80.5398, 0.29 ) }
    dend_37 { pt3dadd( 64.5224, 346.555, -81.0397, 1.18 ) }
    dend_37 { pt3dadd( 64.5386, 347.217, -81.3268, 0.22 ) }
    dend_37 { pt3dadd( 64.6408, 348.414, -81.7517, 0.22 ) }
    dend_37 { pt3dadd( 64.719, 348.864, -81.861, 0.96 ) }
    dend_37 { pt3dadd( 64.7755, 349.146, -81.9193, 0.96 ) }
    dend_37 { pt3dadd( 64.8684, 349.606, -81.9937, 0.22 ) }
    dend_37 { pt3dadd( 65.3064, 351.753, -82.1776, 0.22 ) }
    dend_37 { pt3dadd( 65.3458, 351.955, -82.1876, 0.81 ) }
    dend_37 { pt3dadd( 65.3953, 352.244, -82.2027, 0.81 ) }
    dend_37 { pt3dadd( 65.4732, 352.726, -82.2271, 0.15 ) }
    dend_37 { pt3dadd( 65.4957, 352.865, -82.2338, 0.15 ) }
    dend_37 { pt3dadd( 65.748, 354.464, -82.302, 0.15 ) }
    dend_37 { pt3dadd( 65.8385, 354.972, -82.3273, 0.59 ) }
    dend_37 { pt3dadd( 65.8522, 355.041, -82.3304, 0.59 ) }
    dend_37 { pt3dadd( 65.8971, 355.259, -82.3372, 0.59 ) }
    dend_37 { pt3dadd( 65.9124, 355.327, -82.3372, 0.59 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 72/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 64.1377, 317.22, -65.0881, 0.29 ) }
    dend_36 { pt3dadd( 62.7304, 317.021, -65.9266, 0.29 ) }
    dend_36 { pt3dadd( 61.8362, 316.927, -66.4413, 0.52 ) }
    dend_36 { pt3dadd( 61.4054, 316.892, -66.6792, 0.66 ) }
    dend_36 { pt3dadd( 61.3438, 316.889, -66.7122, 0.66 ) }
    dend_36 { pt3dadd( 60.6913, 316.865, -67.0567, 0.66 ) }
    dend_36 { pt3dadd( 60.1035, 316.85, -67.3587, 0.66 ) }
    dend_36 { pt3dadd( 57.2656, 316.822, -68.7022, 0.22 ) }
    dend_36 { pt3dadd( 56.9277, 316.835, -68.8687, 0.59 ) }
    dend_36 { pt3dadd( 56.6575, 316.861, -69.0102, 0.59 ) }
    dend_36 { pt3dadd( 56.5871, 316.872, -69.048, 0.59 ) }
    dend_36 { pt3dadd( 56.2645, 316.948, -69.2138, 0.59 ) }
    dend_36 { pt3dadd( 56.1526, 316.981, -69.2741, 0.59 ) }
    dend_36 { pt3dadd( 53.6969, 317.884, -70.5619, 0.22 ) }
    dend_36 { pt3dadd( 53.1451, 318.089, -70.861, 0.22 ) }
    dend_36 { pt3dadd( 52.9271, 318.172, -70.9943, 0.44 ) }
    dend_36 { pt3dadd( 51.6636, 318.678, -71.8302, 0.22 ) }
    dend_36 { pt3dadd( 50.7597, 319.106, -72.398, 0.74 ) }
    dend_36 { pt3dadd( 50.4229, 319.287, -72.6005, 0.88 ) }
    dend_36 { pt3dadd( 50.3616, 319.327, -72.6348, 0.88 ) }
    dend_36 { pt3dadd( 49.2648, 320.056, -73.1291, 0.22 ) }
    dend_36 { pt3dadd( 49.19, 320.107, -73.156, 0.22 ) }
    dend_36 { pt3dadd( 47.0972, 321.63, -73.6685, 0.22 ) }
    dend_36 { pt3dadd( 46.312, 322.265, -73.6502, 1.18 ) }
    dend_36 { pt3dadd( 45.9574, 322.566, -73.6074, 1.47 ) }
    dend_36 { pt3dadd( 44.7354, 323.612, -73.3945, 0.22 ) }
    dend_36 { pt3dadd( 44.683, 323.657, -73.3833, 0.22 ) }
    dend_36 { pt3dadd( 43.868, 324.361, -73.1857, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_66()
}

proc basic_shape_66() {
    dend_36 { pt3dadd( 40.3138, 327.469, -72.2209, 0.22 ) }
    dend_36 { pt3dadd( 40.2622, 327.514, -72.2051, 0.22 ) }
    dend_36 { pt3dadd( 37.7812, 329.646, -71.4403, 0.22 ) }
    dend_36 { pt3dadd( 36.7427, 330.545, -71.131, 0.22 ) }
    dend_36 { pt3dadd( 36.0893, 331.11, -70.9271, 0.88 ) }
    dend_36 { pt3dadd( 35.7703, 331.383, -70.8216, 1.11 ) }
    dend_36 { pt3dadd( 34.7353, 332.242, -70.4683, 1.11 ) }
    dend_36 { pt3dadd( 33.978, 332.886, -70.1695, 0.22 ) }
    dend_36 { pt3dadd( 33.7359, 333.119, -70.0137, 0.52 ) }
    dend_36 { pt3dadd( 33.6072, 333.253, -69.9193, 0.74 ) }
    dend_36 { pt3dadd( 33.3739, 333.505, -69.7788, 0.74 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 11/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 26.5917, 126.319, -147.951, 0.29 ) }
    dend_31 { pt3dadd( 26.0359, 126.694, -147.734, 0.29 ) }
    dend_31 { pt3dadd( 26.0052, 126.707, -147.672, 0.29 ) }
    dend_31 { pt3dadd( 24.9836, 127.114, -145.5, 0.29 ) }
    dend_31 { pt3dadd( 24.8323, 127.174, -145.186, 0.81 ) }
    dend_31 { pt3dadd( 24.1842, 127.426, -143.872, 0.22 ) }
    dend_31 { pt3dadd( 23.1418, 127.845, -141.883, 0.22 ) }
    dend_31 { pt3dadd( 17.8592, 129.958, -131.855, 0.22 ) }
    dend_31 { pt3dadd( 17.7546, 129.998, -131.652, 0.66 ) }
    dend_31 { pt3dadd( 17.3839, 130.133, -130.893, 0.66 ) }
    dend_31 { pt3dadd( 17.2588, 130.177, -130.632, 0.22 ) }
    dend_31 { pt3dadd( 16.5893, 130.394, -129.211, 0.22 ) }
    dend_31 { pt3dadd( 16.3901, 130.451, -128.715, 0.59 ) }
    dend_31 { pt3dadd( 16.2603, 130.529, -128.697, 0.59 ) }
    dend_31 { pt3dadd( 15.7654, 130.841, -128.617, 0.59 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 26/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 26.5917, 126.319, -147.951, 0.66 ) }
    dend_30 { pt3dadd( 25.3956, 125.245, -148.391, 0.66 ) }
    dend_30 { pt3dadd( 24.618, 124.602, -148.626, 0.44 ) }
    dend_30 { pt3dadd( 24.0221, 124.153, -148.768, 0.44 ) }
    dend_30 { pt3dadd( 23.3644, 123.694, -148.917, 0.22 ) }
    dend_30 { pt3dadd( 23.2396, 123.61, -148.945, 0.22 ) }
    dend_30 { pt3dadd( 22.4702, 123.069, -149.075, 0.22 ) }
    dend_30 { pt3dadd( 22.2246, 122.91, -149.087, 0.52 ) }
    dend_30 { pt3dadd( 21.5705, 122.471, -149.093, 0.52 ) }
    dend_30 { pt3dadd( 20.9058, 121.975, -149.089, 0.22 ) }
    dend_30 { pt3dadd( 20.8509, 121.931, -149.088, 0.22 ) }
    dend_30 { pt3dadd( 19.356, 120.741, -149.047, 0.22 ) }
    dend_30 { pt3dadd( 19.2993, 120.695, -149.045, 0.22 ) }
    dend_30 { pt3dadd( 18.1794, 119.776, -148.925, 0.22 ) }
    dend_30 { pt3dadd( 17.5425, 119.248, -148.815, 0.88 ) }
    dend_30 { pt3dadd( 17.0271, 118.824, -148.7, 0.88 ) }
    dend_30 { pt3dadd( 16.6404, 118.515, -148.609, 0.88 ) }
    dend_30 { pt3dadd( 16.5751, 118.467, -148.594, 0.88 ) }
    dend_30 { pt3dadd( 15.6896, 117.822, -148.372, 0.22 ) }
    dend_30 { pt3dadd( 14.4056, 116.772, -147.6, 0.22 ) }
    dend_30 { pt3dadd( 14.1862, 116.574, -147.405, 0.88 ) }
    dend_30 { pt3dadd( 14.1455, 116.523, -147.357, 0.88 ) }
    dend_30 { pt3dadd( 13.8241, 116.026, -146.902, 0.88 ) }
    dend_30 { pt3dadd( 13.7703, 115.921, -146.804, 0.88 ) }
    dend_30 { pt3dadd( 12.811, 113.404, -144.49, 0.22 ) }
    dend_30 { pt3dadd( 12.7952, 113.35, -144.431, 0.22 ) }
    dend_30 { pt3dadd( 12.4637, 112.121, -143.029, 0.22 ) }
    dend_30 { pt3dadd( 12.4382, 112.009, -142.904, 0.22 ) }
    dend_30 { pt3dadd( 12.2624, 111.049, -141.835, 0.66 ) }
    dend_30 { pt3dadd( 12.1785, 110.547, -141.299, 0.66 ) }
    dend_30 { pt3dadd( 11.8964, 108.592, -139.404, 0.15 ) }
    dend_30 { pt3dadd( 11.8909, 108.546, -139.352, 0.15 ) }
    dend_30 { pt3dadd( 11.84, 108.022, -138.666, 0.29 ) }
    dend_30 { pt3dadd( 11.8392, 107.973, -138.602, 0.29 ) }
    dend_30 { pt3dadd( 11.8575, 107.745, -138.356, 0.59 ) }
    dend_30 { pt3dadd( 11.865, 107.693, -138.309, 0.59 ) }
    dend_30 { pt3dadd( 12.1381, 105.914, -137.142, 0.59 ) }
    dend_30 { pt3dadd( 12.1906, 105.448, -136.888, 0.59 ) }
    dend_30 { pt3dadd( 12.2534, 104.735, -136.549, 0.22 ) }
    dend_30 { pt3dadd( 12.35, 103.197, -135.933, 0.22 ) }
    dend_30 { pt3dadd( 12.3788, 102.601, -135.75, 1.03 ) }
    dend_30 { pt3dadd( 12.4136, 101.67, -135.541, 1.4 ) }
    dend_30 { pt3dadd( 12.4492, 100.436, -135.398, 1.4 ) }
    dend_30 { pt3dadd( 12.4606, 100.125, -135.36, 1.4 ) }
    dend_30 { pt3dadd( 12.4909, 99.0411, -135.236, 0.29 ) }
    dend_30 { pt3dadd( 12.5008, 97.5986, -135.033, 0.29 ) }
    dend_30 { pt3dadd( 12.5006, 97.5288, -135.022, 0.29 ) }
    dend_30 { pt3dadd( 12.5007, 96.2572, -134.797, 0.29 ) }
    dend_30 { pt3dadd( 12.4883, 95.3779, -134.625, 0.96 ) }
    dend_30 { pt3dadd( 12.4733, 94.7091, -134.427, 1.18 ) }
    dend_30 { pt3dadd( 12.4581, 94.0975, -134.178, 1.18 ) }
    dend_30 { pt3dadd( 12.4581, 94.0439, -134.151, 1.18 ) }
    dend_30 { pt3dadd( 12.4619, 93.6413, -133.866, 1.18 ) }
    dend_30 { pt3dadd( 12.4628, 93.5942, -133.824, 1.18 ) }
    dend_30 { pt3dadd( 12.4135, 92.287, -132.44, 0.29 ) }
    dend_30 { pt3dadd( 12.3794, 91.6941, -131.746, 0.29 ) }
    dend_30 { pt3dadd( 12.3273, 91.0351, -130.965, 0.29 ) }
    dend_30 { pt3dadd( 12.154, 89.5533, -129.277, 0.29 ) }
    dend_30 { pt3dadd( 12.1425, 89.4799, -129.199, 0.29 ) }
    dend_30 { pt3dadd( 11.802, 87.6225, -127.253, 0.29 ) }
    dend_30 { pt3dadd( 11.7886, 87.565, -127.195, 0.29 ) }
    dend_30 { pt3dadd( 11.6465, 87.0766, -126.666, 1.18 ) }
    dend_30 { pt3dadd( 11.4721, 86.5932, -126.143, 1.69 ) }
    dend_30 { pt3dadd( 11.2852, 86.0177, -125.717, 2.21 ) }
    // Section: dend_21, id: dend_21, parent: dend_7 (entry count 90/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 57.0945, 277.016, -124.756, 0.52 ) }
    dend_21 { pt3dadd( 58.0738, 277.264, -124.876, 0.52 ) }
    dend_21 { pt3dadd( 59.3012, 277.601, -125.146, 0.52 ) }
    dend_21 { pt3dadd( 59.367, 277.62, -125.163, 0.52 ) }
    dend_21 { pt3dadd( 61.0511, 278.194, -125.647, 0.52 ) }
    dend_21 { pt3dadd( 61.2086, 278.252, -125.694, 0.52 ) }
    dend_21 { pt3dadd( 62.0229, 278.59, -125.947, 1.03 ) }
    dend_21 { pt3dadd( 63.0352, 279.077, -126.385, 1.03 ) }
    dend_21 { pt3dadd( 63.0973, 279.117, -126.417, 1.03 ) }
    dend_21 { pt3dadd( 63.7672, 279.623, -126.779, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_67()
}

proc basic_shape_67() {
    dend_21 { pt3dadd( 63.8149, 279.666, -126.807, 0.81 ) }
    dend_21 { pt3dadd( 64.2933, 280.113, -127.11, 1.03 ) }
    dend_21 { pt3dadd( 65.0646, 280.868, -127.62, 1.03 ) }
    dend_21 { pt3dadd( 65.7565, 281.55, -128.141, 0.22 ) }
    dend_21 { pt3dadd( 66.5542, 282.343, -128.82, 0.22 ) }
    dend_21 { pt3dadd( 66.5963, 282.384, -128.859, 0.22 ) }
    dend_21 { pt3dadd( 67.0532, 282.82, -129.264, 0.44 ) }
    dend_21 { pt3dadd( 67.5199, 283.25, -129.686, 0.44 ) }
    dend_21 { pt3dadd( 68.4832, 284.139, -130.62, 0.44 ) }
    dend_21 { pt3dadd( 69.168, 284.807, -131.394, 0.15 ) }
    dend_21 { pt3dadd( 69.2473, 284.894, -131.489, 0.15 ) }
    dend_21 { pt3dadd( 69.8274, 285.599, -132.244, 0.15 ) }
    dend_21 { pt3dadd( 70.3405, 286.282, -132.945, 0.15 ) }
    dend_21 { pt3dadd( 70.917, 287.183, -133.888, 0.44 ) }
    dend_21 { pt3dadd( 71.2866, 287.876, -134.617, 0.44 ) }
    dend_21 { pt3dadd( 71.6381, 288.638, -135.472, 0.44 ) }
    dend_21 { pt3dadd( 72.0662, 289.595, -136.595, 1.25 ) }
    dend_21 { pt3dadd( 72.1295, 289.735, -136.771, 1.25 ) }
    dend_21 { pt3dadd( 72.486, 290.487, -137.728, 1.92 ) }
    dend_21 { pt3dadd( 73.0744, 291.604, -139.167, 0.44 ) }
    dend_21 { pt3dadd( 73.58, 292.441, -140.304, 0.29 ) }
    dend_21 { pt3dadd( 74.1296, 293.209, -141.398, 0.29 ) }
    dend_21 { pt3dadd( 74.5693, 293.739, -142.137, 0.59 ) }
    dend_21 { pt3dadd( 74.6035, 293.775, -142.188, 0.59 ) }
    dend_21 { pt3dadd( 74.8982, 294.04, -142.54, 0.88 ) }
    dend_21 { pt3dadd( 74.9398, 294.077, -142.584, 0.88 ) }
    dend_21 { pt3dadd( 75.3239, 294.428, -142.925, 0.88 ) }
    dend_21 { pt3dadd( 75.3668, 294.469, -142.961, 0.88 ) }
    dend_21 { pt3dadd( 76.3228, 295.423, -143.772, 0.29 ) }
    dend_21 { pt3dadd( 76.781, 295.879, -144.153, 0.29 ) }
    dend_21 { pt3dadd( 77.4596, 296.553, -144.68, 0.29 ) }
    dend_21 { pt3dadd( 78.2493, 297.33, -145.25, 0.15 ) }
    dend_21 { pt3dadd( 78.9476, 298.011, -145.728, 1.18 ) }
    dend_21 { pt3dadd( 79.0008, 298.063, -145.761, 1.18 ) }
    dend_21 { pt3dadd( 79.4908, 298.539, -146.034, 1.62 ) }
    dend_21 { pt3dadd( 80.0994, 299.135, -146.62, 1.62 ) }
    dend_21 { pt3dadd( 81.0087, 300.022, -147.698, 1.03 ) }
    dend_21 { pt3dadd( 81.6833, 300.708, -148.594, 0.52 ) }
    dend_21 { pt3dadd( 82.151, 301.196, -149.25, 1.25 ) }
    dend_21 { pt3dadd( 82.6549, 301.731, -150.026, 1.69 ) }
    dend_21 { pt3dadd( 84.9531, 304.183, -153.846, 0.22 ) }
    dend_21 { pt3dadd( 85.3387, 304.588, -154.55, 0.22 ) }
    dend_21 { pt3dadd( 85.9264, 305.194, -155.698, 0.22 ) }
    dend_21 { pt3dadd( 85.9549, 305.223, -155.756, 0.22 ) }
    dend_21 { pt3dadd( 86.4517, 305.742, -156.756, 0.66 ) }
    dend_21 { pt3dadd( 86.7726, 306.086, -157.33, 0.66 ) }
    dend_21 { pt3dadd( 87.4926, 306.967, -158.254, 0.22 ) }
    dend_21 { pt3dadd( 87.5227, 307.008, -158.302, 0.22 ) }
    dend_21 { pt3dadd( 87.7057, 307.264, -158.699, 0.44 ) }
    dend_21 { pt3dadd( 87.9199, 307.581, -159.168, 0.44 ) }
    dend_21 { pt3dadd( 88.3221, 308.185, -159.989, 1.25 ) }
    dend_21 { pt3dadd( 88.5082, 308.469, -160.373, 1.25 ) }
    dend_21 { pt3dadd( 88.5359, 308.508, -160.424, 1.25 ) }
    dend_21 { pt3dadd( 89.7223, 310.081, -162.497, 0.22 ) }
    dend_21 { pt3dadd( 90.1406, 310.57, -163.191, 0.22 ) }
    dend_21 { pt3dadd( 90.3932, 310.845, -163.639, 0.22 ) }
    dend_21 { pt3dadd( 90.4264, 310.88, -163.693, 0.22 ) }
    dend_21 { pt3dadd( 90.7759, 311.254, -164.327, 0.66 ) }
    dend_21 { pt3dadd( 90.9668, 311.462, -164.673, 1.03 ) }
    dend_21 { pt3dadd( 91.6644, 312.237, -165.934, 1.33 ) }
    dend_21 { pt3dadd( 92.6952, 313.387, -167.997, 0.22 ) }
    dend_21 { pt3dadd( 93.0906, 313.844, -168.853, 0.22 ) }
    dend_21 { pt3dadd( 93.8905, 314.788, -170.655, 1.11 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 63/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 57.0945, 277.016, -124.756, 0.22 ) }
    dend_8 { pt3dadd( 56.8205, 278.358, -124.846, 0.22 ) }
    dend_8 { pt3dadd( 56.5148, 280.304, -125.187, 0.22 ) }
    dend_8 { pt3dadd( 56.5007, 280.898, -125.312, 0.59 ) }
    dend_8 { pt3dadd( 56.5219, 281.63, -125.475, 0.81 ) }
    dend_8 { pt3dadd( 56.5317, 281.836, -125.532, 0.81 ) }
    dend_8 { pt3dadd( 56.5821, 282.707, -125.803, 0.81 ) }
    dend_8 { pt3dadd( 56.7588, 284.308, -126.376, 0.22 ) }
    dend_8 { pt3dadd( 57.0438, 286.262, -127.299, 0.22 ) }
    dend_8 { pt3dadd( 57.0517, 286.323, -127.334, 0.22 ) }
    dend_8 { pt3dadd( 57.1878, 287.525, -128.114, 0.52 ) }
    dend_8 { pt3dadd( 57.1989, 287.65, -128.198, 0.52 ) }
    dend_8 { pt3dadd( 57.2364, 288.469, -128.767, 0.52 ) }
    dend_8 { pt3dadd( 57.2123, 289.668, -129.589, 0.52 ) }
    dend_8 { pt3dadd( 57.1375, 290.51, -130.206, 0.29 ) }
    dend_8 { pt3dadd( 57.1336, 290.57, -130.244, 0.29 ) }
    dend_8 { pt3dadd( 57.0908, 291.725, -130.853, 0.29 ) }
    dend_8 { pt3dadd( 57.0654, 292.569, -131.257, 0.96 ) }
    dend_8 { pt3dadd( 57.0641, 292.643, -131.287, 0.96 ) }
    dend_8 { pt3dadd( 57.0603, 292.859, -131.348, 0.96 ) }
    dend_8 { pt3dadd( 57.0096, 294.0, -131.668, 0.29 ) }
    dend_8 { pt3dadd( 57.0056, 294.067, -131.689, 0.29 ) }
    dend_8 { pt3dadd( 56.8792, 295.296, -132.093, 0.29 ) }
    dend_8 { pt3dadd( 56.8697, 295.363, -132.113, 0.29 ) }
    dend_8 { pt3dadd( 56.7155, 296.36, -132.428, 0.96 ) }
    dend_8 { pt3dadd( 56.5013, 297.572, -132.826, 1.4 ) }
    dend_8 { pt3dadd( 56.4577, 297.778, -132.897, 1.4 ) }
    dend_8 { pt3dadd( 56.2691, 298.607, -133.174, 1.4 ) }
    dend_8 { pt3dadd( 56.1046, 299.228, -133.36, 1.4 ) }
    // Section: dend_154, id: dend_154, parent: dend_150 (entry count 92/100)
    dend_154 { pt3dclear() }
    dend_154 { pt3dadd( 197.905, -284.769, 60.1452, 0.22 ) }
    dend_154 { pt3dadd( 197.227, -287.697, 66.3296, 0.22 ) }
    dend_154 { pt3dadd( 197.178, -287.871, 66.667, 0.52 ) }
    dend_154 { pt3dadd( 197.067, -288.192, 67.2183, 0.52 ) }
    dend_154 { pt3dadd( 197.05, -288.236, 67.2863, 0.52 ) }
    dend_154 { pt3dadd( 196.838, -288.671, 67.8732, 0.22 ) }
    dend_154 { pt3dadd( 196.531, -289.119, 68.3724, 0.22 ) }
    dend_154 { pt3dadd( 196.346, -289.257, 68.3724, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_68()
}

proc basic_shape_68() {
    dend_154 { pt3dadd( 195.634, -289.512, 68.353, 0.22 ) }
    dend_154 { pt3dadd( 195.565, -289.526, 68.3503, 0.22 ) }
    dend_154 { pt3dadd( 194.415, -289.586, 68.2995, 0.22 ) }
    dend_154 { pt3dadd( 192.877, -289.491, 68.2243, 0.22 ) }
    dend_154 { pt3dadd( 192.673, -289.435, 68.2097, 0.22 ) }
    dend_154 { pt3dadd( 189.919, -288.225, 67.962, 0.22 ) }
    dend_154 { pt3dadd( 189.727, -288.093, 67.9518, 0.22 ) }
    dend_154 { pt3dadd( 189.027, -287.386, 67.9644, 0.22 ) }
    dend_154 { pt3dadd( 188.899, -287.201, 67.9782, 0.22 ) }
    dend_154 { pt3dadd( 187.711, -284.744, 68.2655, 0.22 ) }
    dend_154 { pt3dadd( 187.688, -284.679, 68.2755, 0.22 ) }
    dend_154 { pt3dadd( 187.324, -282.847, 68.6334, 0.22 ) }
    dend_154 { pt3dadd( 187.155, -281.799, 68.855, 0.22 ) }
    dend_154 { pt3dadd( 187.124, -281.546, 68.9161, 0.22 ) }
    dend_154 { pt3dadd( 187.047, -280.811, 69.123, 0.22 ) }
    dend_154 { pt3dadd( 187.045, -280.711, 69.1635, 0.22 ) }
    dend_154 { pt3dadd( 187.031, -279.868, 69.4647, 0.22 ) }
    dend_154 { pt3dadd( 187.032, -279.718, 69.4839, 0.22 ) }
    // Section: dend_151, id: dend_151, parent: dend_150 (entry count 18/100)
    dend_151 { pt3dclear() }
    dend_151 { pt3dadd( 197.905, -284.769, 60.1452, 0.44 ) }
    dend_151 { pt3dadd( 199.71, -286.762, 64.1309, 0.44 ) }
    dend_151 { pt3dadd( 200.264, -287.289, 65.1349, 0.44 ) }
    dend_151 { pt3dadd( 200.374, -287.377, 65.2931, 1.03 ) }
    dend_151 { pt3dadd( 200.409, -287.402, 65.3365, 1.03 ) }
    dend_151 { pt3dadd( 200.964, -287.762, 65.9247, 1.4 ) }
    dend_151 { pt3dadd( 201.014, -287.795, 65.9783, 1.4 ) }
    dend_151 { pt3dadd( 202.106, -288.271, 66.3321, 1.4 ) }
    dend_151 { pt3dadd( 202.837, -288.52, 66.6107, 0.74 ) }
    dend_151 { pt3dadd( 202.901, -288.539, 66.6353, 0.74 ) }
    dend_151 { pt3dadd( 203.558, -288.715, 66.9005, 0.74 ) }
    // Section: dend_139, id: dend_139, parent: dend_137 (entry count 29/100)
    dend_139 { pt3dclear() }
    dend_139 { pt3dadd( 132.498, -245.524, 15.8863, 1.25 ) }
    dend_139 { pt3dadd( 132.114, -245.935, 16.188, 1.25 ) }
    dend_139 { pt3dadd( 131.24, -246.754, 16.7984, 0.44 ) }
    dend_139 { pt3dadd( 130.795, -247.12, 17.0676, 0.37 ) }
    dend_139 { pt3dadd( 130.481, -247.379, 17.2577, 0.37 ) }
    dend_139 { pt3dadd( 129.801, -247.939, 17.6691, 0.37 ) }
    dend_139 { pt3dadd( 129.274, -248.373, 17.9877, 0.22 ) }
    dend_139 { pt3dadd( 129.035, -248.545, 18.1256, 0.44 ) }
    dend_139 { pt3dadd( 128.577, -248.802, 18.3133, 0.44 ) }
    // Section: dend_138, id: dend_138, parent: dend_137 (entry count 38/100)
    dend_138 { pt3dclear() }
    dend_138 { pt3dadd( 132.498, -245.524, 15.8863, 0.37 ) }
    dend_138 { pt3dadd( 133.565, -245.773, 15.8863, 0.37 ) }
    dend_138 { pt3dadd( 134.0, -245.871, 15.8863, 0.37 ) }
    dend_138 { pt3dadd( 134.792, -245.996, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.317, -245.955, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.317, -245.955, 15.8863, 0.44 ) }
    dend_138 { pt3dadd( 135.383, -245.879, 15.8863, 0.66 ) }
    dend_138 { pt3dadd( 135.411, -245.783, 15.8863, 0.66 ) }
    dend_138 { pt3dadd( 135.505, -245.123, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.593, -243.425, 15.8863, 0.22 ) }
    dend_138 { pt3dadd( 135.598, -242.897, 15.8863, 0.22 ) }
    // Section: dend_112, id: dend_112, parent: dend_108 (entry count 49/100)
    dend_112 { pt3dclear() }
    dend_112 { pt3dadd( -32.5941, -396.214, -1.1615, 0.52 ) }
    dend_112 { pt3dadd( -30.8913, -396.121, -1.82953, 0.52 ) }
    dend_112 { pt3dadd( -29.413, -396.055, -2.42355, 0.22 ) }
    dend_112 { pt3dadd( -28.085, -396.01, -2.96142, 0.22 ) }
    dend_112 { pt3dadd( -28.0285, -396.01, -2.98399, 0.22 ) }
    dend_112 { pt3dadd( -26.4866, -396.041, -3.58039, 0.22 ) }
    dend_112 { pt3dadd( -25.7187, -396.065, -3.86798, 0.22 ) }
    dend_112 { pt3dadd( -25.507, -396.074, -3.96238, 0.52 ) }
    dend_112 { pt3dadd( -25.4066, -396.074, -3.99728, 0.52 ) }
    dend_112 { pt3dadd( -24.9195, -396.11, -4.18166, 0.52 ) }
    dend_112 { pt3dadd( -24.6617, -396.14, -4.26419, 0.22 ) }
    dend_112 { pt3dadd( -24.4627, -396.189, -4.28582, 0.22 ) }
    dend_112 { pt3dadd( -23.5631, -396.305, -4.45504, 0.22 ) }
    dend_112 { pt3dadd( -22.9303, -396.316, -4.60094, 0.52 ) }
    dend_112 { pt3dadd( -22.8626, -396.31, -4.62075, 0.52 ) }
    // Section: dend_109, id: dend_109, parent: dend_108 (entry count 64/100)
    dend_109 { pt3dclear() }
    dend_109 { pt3dadd( -32.5941, -396.214, -1.1615, 0.29 ) }
    dend_109 { pt3dadd( -32.4633, -397.757, -0.973891, 0.29 ) }
    dend_109 { pt3dadd( -32.2845, -398.829, -0.74813, 0.29 ) }
    dend_109 { pt3dadd( -32.2199, -399.097, -0.677796, 0.29 ) }
    dend_109 { pt3dadd( -31.9709, -400.026, -0.416886, 0.29 ) }
    dend_109 { pt3dadd( -31.9413, -400.133, -0.390474, 0.29 ) }
    dend_109 { pt3dadd( -31.6229, -401.277, -0.12821, 0.29 ) }
    dend_109 { pt3dadd( -31.567, -401.419, -0.103219, 0.29 ) }
    dend_109 { pt3dadd( -31.1241, -402.472, -0.0101152, 0.29 ) }
    dend_109 { pt3dadd( -31.042, -402.678, -0.00737784, 0.29 ) }
    dend_109 { pt3dadd( -30.642, -403.707, -0.0675814, 0.29 ) }
    dend_109 { pt3dadd( -30.6163, -403.774, -0.0748556, 0.29 ) }
    dend_109 { pt3dadd( -30.1491, -405.044, -0.274469, 0.29 ) }
    dend_109 { pt3dadd( -29.8848, -405.726, -0.372356, 0.59 ) }
    dend_109 { pt3dadd( -29.7767, -405.982, -0.422827, 0.59 ) }
    dend_109 { pt3dadd( -29.3964, -406.88, -0.622662, 0.59 ) }
    dend_109 { pt3dadd( -29.1255, -407.521, -0.77618, 0.81 ) }
    dend_109 { pt3dadd( -28.8573, -408.27, -0.973719, 0.81 ) }
    dend_109 { pt3dadd( -28.5965, -409.162, -1.22388, 0.81 ) }
    dend_109 { pt3dadd( -28.3419, -410.374, -1.5903, 0.29 ) }
    dend_109 { pt3dadd( -28.2191, -411.146, -1.8365, 0.29 ) }
    dend_109 { pt3dadd( -28.2096, -411.222, -1.86223, 0.29 ) }
    dend_109 { pt3dadd( -28.0428, -412.687, -2.37735, 0.29 ) }
    dend_109 { pt3dadd( -28.021, -412.836, -2.42526, 0.29 ) }
    dend_109 { pt3dadd( -27.8091, -413.735, -2.67092, 0.29 ) }
    dend_109 { pt3dadd( -27.754, -413.864, -2.69303, 0.29 ) }
    dend_109 { pt3dadd( -27.4043, -414.503, -2.82123, 0.29 ) }
    dend_109 { pt3dadd( -27.3664, -414.561, -2.83368, 0.29 ) }
    dend_109 { pt3dadd( -26.627, -415.481, -3.03054, 0.29 ) }
    dend_109 { pt3dadd( -26.2041, -416.012, -3.16155, 1.25 ) }
    dend_109 { pt3dadd( -25.8677, -416.545, -3.3403, 1.4 ) }
    dend_109 { pt3dadd( -25.6622, -417.54, -3.68983, 0.59 ) }
    dend_109 { pt3dadd( -25.6711, -417.602, -3.72238, 0.59 ) }
    dend_109 { pt3dadd( -25.7408, -417.807, -4.03759, 0.29 ) }
    dend_109 { pt3dadd( -25.7549, -417.838, -4.09873, 0.29 ) }
    dend_109 { pt3dadd( -26.0354, -418.341, -5.10767, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_69()
}

proc basic_shape_69() {
    dend_109 { pt3dadd( -26.3149, -418.796, -6.00335, 0.29 ) }
    dend_109 { pt3dadd( -26.7217, -419.455, -7.315, 1.4 ) }
    dend_109 { pt3dadd( -28.1946, -421.645, -12.152, 0.22 ) }
    dend_109 { pt3dadd( -28.2112, -421.669, -12.2188, 0.22 ) }
    dend_109 { pt3dadd( -28.4645, -422.101, -13.494, 0.22 ) }
    dend_109 { pt3dadd( -28.6317, -422.415, -14.4813, 0.22 ) }
    dend_109 { pt3dadd( -28.6426, -422.437, -14.5471, 0.22 ) }
    dend_109 { pt3dadd( -29.1428, -423.416, -17.3666, 1.4 ) }
    dend_109 { pt3dadd( -30.1052, -425.329, -22.1407, 0.22 ) }
    dend_109 { pt3dadd( -30.3543, -425.85, -23.4137, 0.22 ) }
    dend_109 { pt3dadd( -30.4234, -426.012, -23.8066, 0.22 ) }
    dend_109 { pt3dadd( -30.6286, -426.515, -24.9193, 0.22 ) }
    dend_109 { pt3dadd( -30.6759, -426.632, -25.1141, 0.22 ) }
    dend_109 { pt3dadd( -30.9896, -427.388, -25.8363, 0.22 ) }
    dend_109 { pt3dadd( -31.0167, -427.446, -25.8717, 0.22 ) }
    dend_109 { pt3dadd( -31.2211, -427.951, -26.2649, 0.22 ) }
    dend_109 { pt3dadd( -31.4532, -428.827, -27.0303, 1.03 ) }
    dend_109 { pt3dadd( -31.5244, -429.43, -27.6685, 1.4 ) }
    dend_109 { pt3dadd( -31.5974, -430.869, -29.3236, 0.22 ) }
    dend_109 { pt3dadd( -31.5918, -430.961, -29.4409, 0.22 ) }
    dend_109 { pt3dadd( -31.4596, -431.94, -30.7368, 0.22 ) }
    dend_109 { pt3dadd( -31.2866, -432.747, -31.8443, 1.33 ) }
    dend_109 { pt3dadd( -30.8905, -433.957, -33.6994, 0.29 ) }
    dend_109 { pt3dadd( -30.8668, -434.006, -33.7838, 0.29 ) }
    dend_109 { pt3dadd( -30.329, -434.81, -35.2715, 0.29 ) }
    dend_109 { pt3dadd( -30.241, -434.922, -35.4908, 0.88 ) }
    dend_109 { pt3dadd( -30.1824, -434.979, -35.6184, 0.88 ) }
    dend_109 { pt3dadd( -29.17, -435.866, -37.5372, 0.29 ) }
    dend_109 { pt3dadd( -28.9458, -436.1, -37.9265, 0.29 ) }
    dend_109 { pt3dadd( -28.8394, -436.264, -38.1579, 0.29 ) }
    dend_109 { pt3dadd( -28.7004, -436.867, -38.7837, 0.29 ) }
    dend_109 { pt3dadd( -28.6956, -436.927, -38.838, 0.29 ) }
    dend_109 { pt3dadd( -28.7076, -437.714, -39.4669, 1.11 ) }
    dend_109 { pt3dadd( -28.7802, -438.25, -39.8449, 1.47 ) }
    dend_109 { pt3dadd( -29.0196, -439.434, -40.7325, 0.22 ) }
    dend_109 { pt3dadd( -29.3906, -440.94, -41.9051, 0.22 ) }
    dend_109 { pt3dadd( -29.4062, -440.994, -41.9485, 0.44 ) }
    dend_109 { pt3dadd( -29.4227, -441.046, -41.9918, 0.44 ) }
    dend_109 { pt3dadd( -29.8012, -442.102, -42.8783, 0.22 ) }
    dend_109 { pt3dadd( -29.8831, -442.332, -43.0683, 0.66 ) }
    dend_109 { pt3dadd( -29.9926, -442.676, -43.315, 0.66 ) }
    dend_109 { pt3dadd( -30.0041, -442.741, -43.3608, 0.66 ) }
    dend_109 { pt3dadd( -30.0629, -443.618, -43.9326, 0.22 ) }
    dend_109 { pt3dadd( -30.0597, -443.693, -43.9748, 0.22 ) }
    dend_109 { pt3dadd( -29.9419, -444.354, -44.2622, 0.22 ) }
    dend_109 { pt3dadd( -29.9126, -444.482, -44.3128, 0.22 ) }
    dend_109 { pt3dadd( -29.5713, -445.604, -44.8192, 0.22 ) }
    dend_109 { pt3dadd( -29.5087, -445.747, -44.8804, 0.22 ) }
    dend_109 { pt3dadd( -29.238, -446.246, -45.0801, 0.96 ) }
    dend_109 { pt3dadd( -28.9963, -446.643, -45.2265, 1.25 ) }
    dend_109 { pt3dadd( -28.9578, -446.701, -45.2475, 1.25 ) }
    dend_109 { pt3dadd( -28.1258, -447.94, -45.5198, 0.22 ) }
    dend_109 { pt3dadd( -27.3021, -449.163, -45.6487, 0.22 ) }
    dend_109 { pt3dadd( -27.2456, -449.246, -45.6517, 0.22 ) }
    dend_109 { pt3dadd( -26.3554, -450.538, -45.5941, 0.22 ) }
    dend_109 { pt3dadd( -26.3113, -450.605, -45.5851, 0.22 ) }
    dend_109 { pt3dadd( -25.4237, -452.04, -45.2409, 0.22 ) }
    dend_109 { pt3dadd( -25.3477, -452.176, -45.1876, 0.81 ) }
    dend_109 { pt3dadd( -25.3129, -452.244, -45.163, 0.81 ) }
    dend_109 { pt3dadd( -25.074, -452.74, -45.0718, 0.81 ) }
    dend_109 { pt3dadd( -24.9851, -452.934, -45.0631, 0.81 ) }
    dend_109 { pt3dadd( -24.5783, -453.714, -45.1098, 0.81 ) }
    dend_109 { pt3dadd( -24.3186, -454.183, -45.1868, 0.81 ) }
    dend_109 { pt3dadd( -23.973, -454.808, -45.2799, 0.22 ) }
    dend_109 { pt3dadd( -23.1302, -456.342, -45.5662, 0.22 ) }
    dend_109 { pt3dadd( -23.0967, -456.403, -45.5795, 0.22 ) }
    dend_109 { pt3dadd( -22.6181, -457.263, -45.786, 0.22 ) }
    dend_109 { pt3dadd( -22.557, -457.387, -45.8174, 0.22 ) }
    dend_109 { pt3dadd( -22.0908, -458.437, -46.0802, 0.22 ) }
    dend_109 { pt3dadd( -21.8442, -459.092, -46.2031, 1.18 ) }
    dend_109 { pt3dadd( -21.811, -459.19, -46.2239, 1.18 ) }
    dend_109 { pt3dadd( -21.6544, -459.562, -46.286, 1.18 ) }
    dend_109 { pt3dadd( -21.3829, -460.183, -46.3699, 0.22 ) }
    dend_109 { pt3dadd( -21.3509, -460.243, -46.388, 0.22 ) }
    dend_109 { pt3dadd( -20.5453, -461.553, -46.9229, 0.22 ) }
    dend_109 { pt3dadd( -20.5096, -461.608, -46.9479, 0.22 ) }
    dend_109 { pt3dadd( -19.748, -462.754, -47.5446, 0.22 ) }
    dend_109 { pt3dadd( -19.668, -462.866, -47.6117, 0.22 ) }
    dend_109 { pt3dadd( -18.5066, -464.303, -48.6002, 0.22 ) }
    dend_109 { pt3dadd( -18.4628, -464.355, -48.6432, 0.22 ) }
    dend_109 { pt3dadd( -18.3871, -464.438, -48.7466, 1.03 ) }
    dend_109 { pt3dadd( -18.1762, -464.692, -49.1002, 1.4 ) }
    dend_109 { pt3dadd( -18.1241, -464.79, -49.2811, 1.4 ) }
    // Section: dend_46, id: dend_46, parent: dend_44 (entry count 83/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 85.6707, 306.598, -67.2414, 0.29 ) }
    dend_46 { pt3dadd( 86.2375, 307.581, -67.7275, 0.29 ) }
    dend_46 { pt3dadd( 86.3093, 307.696, -67.7979, 0.29 ) }
    dend_46 { pt3dadd( 86.9245, 308.662, -68.4271, 0.29 ) }
    dend_46 { pt3dadd( 87.3587, 309.342, -68.8512, 0.66 ) }
    dend_46 { pt3dadd( 87.6623, 309.814, -69.137, 0.66 ) }
    dend_46 { pt3dadd( 87.7109, 309.889, -69.1828, 0.66 ) }
    dend_46 { pt3dadd( 88.3873, 310.873, -69.7627, 0.29 ) }
    dend_46 { pt3dadd( 88.461, 310.976, -69.8251, 0.29 ) }
    dend_46 { pt3dadd( 88.9248, 311.615, -70.1863, 0.29 ) }
    dend_46 { pt3dadd( 88.9799, 311.693, -70.2247, 0.29 ) }
    dend_46 { pt3dadd( 90.2915, 313.61, -71.08, 0.29 ) }
    dend_46 { pt3dadd( 90.5959, 314.055, -71.2872, 0.29 ) }
    dend_46 { pt3dadd( 90.6686, 314.165, -71.3357, 0.29 ) }
    dend_46 { pt3dadd( 91.8244, 315.899, -72.1344, 0.29 ) }
    dend_46 { pt3dadd( 92.0103, 316.178, -72.264, 0.66 ) }
    dend_46 { pt3dadd( 92.3498, 316.691, -72.5052, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_70()
}

proc basic_shape_70() {
    dend_46 { pt3dadd( 93.084, 317.795, -73.0068, 0.29 ) }
    dend_46 { pt3dadd( 93.618, 318.599, -73.3862, 0.29 ) }
    dend_46 { pt3dadd( 93.9559, 319.101, -73.6222, 1.18 ) }
    dend_46 { pt3dadd( 94.3643, 319.697, -73.9035, 1.62 ) }
    dend_46 { pt3dadd( 95.0816, 320.707, -74.332, 0.22 ) }
    dend_46 { pt3dadd( 95.504, 321.296, -74.5427, 0.22 ) }
    dend_46 { pt3dadd( 95.5467, 321.351, -74.5557, 0.22 ) }
    dend_46 { pt3dadd( 95.9816, 321.849, -74.687, 0.22 ) }
    dend_46 { pt3dadd( 96.0963, 321.971, -74.7179, 0.22 ) }
    dend_46 { pt3dadd( 96.7743, 322.605, -74.8737, 0.22 ) }
    dend_46 { pt3dadd( 96.8551, 322.673, -74.8948, 0.22 ) }
    dend_46 { pt3dadd( 97.6226, 323.292, -75.1544, 0.22 ) }
    dend_46 { pt3dadd( 98.2345, 323.77, -75.3778, 0.66 ) }
    dend_46 { pt3dadd( 98.7029, 324.126, -75.5625, 1.03 ) }
    dend_46 { pt3dadd( 98.9377, 324.308, -75.6547, 1.03 ) }
    dend_46 { pt3dadd( 99.9365, 325.1, -76.0549, 0.22 ) }
    dend_46 { pt3dadd( 99.9876, 325.145, -76.074, 0.22 ) }
    dend_46 { pt3dadd( 100.756, 325.901, -76.3069, 0.22 ) }
    dend_46 { pt3dadd( 100.803, 325.952, -76.3151, 0.22 ) }
    dend_46 { pt3dadd( 101.442, 326.764, -76.3584, 0.22 ) }
    dend_46 { pt3dadd( 101.486, 326.834, -76.3554, 0.22 ) }
    dend_46 { pt3dadd( 101.973, 327.664, -76.293, 0.22 ) }
    dend_46 { pt3dadd( 102.254, 328.112, -76.3065, 1.11 ) }
    dend_46 { pt3dadd( 102.693, 328.815, -76.3791, 1.84 ) }
    dend_46 { pt3dadd( 103.028, 329.332, -76.5135, 0.22 ) }
    dend_46 { pt3dadd( 103.779, 330.518, -76.9638, 0.22 ) }
    dend_46 { pt3dadd( 104.607, 331.798, -77.6348, 0.22 ) }
    dend_46 { pt3dadd( 105.324, 332.858, -78.3358, 1.33 ) }
    dend_46 { pt3dadd( 105.603, 333.271, -78.6453, 1.47 ) }
    dend_46 { pt3dadd( 106.455, 334.491, -79.6652, 0.44 ) }
    dend_46 { pt3dadd( 106.768, 334.929, -80.067, 0.29 ) }
    dend_46 { pt3dadd( 107.383, 335.813, -80.909, 0.29 ) }
    dend_46 { pt3dadd( 107.506, 336.041, -81.0865, 0.59 ) }
    dend_46 { pt3dadd( 107.783, 336.631, -81.4262, 0.59 ) }
    dend_46 { pt3dadd( 107.864, 336.799, -81.505, 0.29 ) }
    dend_46 { pt3dadd( 107.898, 336.869, -81.5256, 0.29 ) }
    dend_46 { pt3dadd( 108.317, 337.692, -81.7329, 0.22 ) }
    dend_46 { pt3dadd( 108.977, 338.987, -82.0994, 0.22 ) }
    dend_46 { pt3dadd( 109.083, 339.189, -82.1779, 0.44 ) }
    dend_46 { pt3dadd( 109.157, 339.329, -82.2423, 0.44 ) }
    dend_46 { pt3dadd( 109.373, 339.749, -82.4495, 0.44 ) }
    dend_46 { pt3dadd( 109.407, 339.814, -82.4831, 0.44 ) }
    dend_46 { pt3dadd( 109.998, 340.947, -83.1196, 0.29 ) }
    dend_46 { pt3dadd( 110.031, 341.006, -83.1474, 0.29 ) }
    dend_46 { pt3dadd( 110.612, 342.042, -83.5638, 0.29 ) }
    dend_46 { pt3dadd( 110.736, 342.256, -83.629, 0.29 ) }
    dend_46 { pt3dadd( 110.935, 342.594, -83.7035, 0.29 ) }
    dend_46 { pt3dadd( 111.007, 342.713, -83.7304, 0.29 ) }
    dend_46 { pt3dadd( 111.644, 343.746, -83.9937, 0.29 ) }
    dend_46 { pt3dadd( 111.7, 343.831, -84.0248, 0.29 ) }
    dend_46 { pt3dadd( 112.188, 344.501, -84.3526, 0.29 ) }
    dend_46 { pt3dadd( 112.227, 344.553, -84.3797, 0.29 ) }
    dend_46 { pt3dadd( 113.112, 345.644, -84.9175, 0.88 ) }
    dend_46 { pt3dadd( 113.654, 346.281, -85.2176, 1.18 ) }
    dend_46 { pt3dadd( 113.955, 346.625, -85.3757, 1.18 ) }
    dend_46 { pt3dadd( 114.001, 346.676, -85.3958, 1.18 ) }
    dend_46 { pt3dadd( 114.505, 347.206, -85.5718, 0.22 ) }
    dend_46 { pt3dadd( 115.586, 348.302, -85.7972, 0.22 ) }
    dend_46 { pt3dadd( 115.753, 348.465, -85.7993, 0.59 ) }
    dend_46 { pt3dadd( 115.846, 348.573, -85.7937, 0.59 ) }
    dend_46 { pt3dadd( 116.116, 348.958, -85.7796, 0.59 ) }
    dend_46 { pt3dadd( 116.154, 349.016, -85.7781, 0.59 ) }
    dend_46 { pt3dadd( 116.443, 349.568, -85.7781, 0.81 ) }
    dend_46 { pt3dadd( 116.54, 349.845, -85.7781, 0.81 ) }
    dend_46 { pt3dadd( 116.932, 351.093, -85.7781, 0.29 ) }
    dend_46 { pt3dadd( 117.019, 351.42, -85.7781, 0.66 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 66/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 85.6707, 306.598, -67.2414, 0.29 ) }
    dend_45 { pt3dadd( 85.3172, 307.258, -66.4482, 0.29 ) }
    dend_45 { pt3dadd( 85.105, 308.36, -65.5697, 0.29 ) }
    dend_45 { pt3dadd( 85.003, 309.19, -65.0729, 0.29 ) }
    dend_45 { pt3dadd( 84.9327, 309.928, -64.7598, 0.29 ) }
    dend_45 { pt3dadd( 84.8246, 310.635, -64.4956, 0.29 ) }
    dend_45 { pt3dadd( 84.7598, 311.051, -64.3664, 0.22 ) }
    dend_45 { pt3dadd( 84.7011, 311.654, -64.2621, 0.22 ) }
    dend_45 { pt3dadd( 84.683, 312.074, -64.2436, 0.22 ) }
    dend_45 { pt3dadd( 84.6976, 312.84, -64.2441, 0.22 ) }
    dend_45 { pt3dadd( 84.7262, 313.33, -64.2921, 1.03 ) }
    dend_45 { pt3dadd( 84.8182, 313.987, -64.4164, 1.03 ) }
    dend_45 { pt3dadd( 84.8547, 314.121, -64.4529, 1.03 ) }
    dend_45 { pt3dadd( 85.0055, 314.525, -64.5823, 1.03 ) }
    dend_45 { pt3dadd( 85.3457, 315.284, -64.8391, 0.22 ) }
    dend_45 { pt3dadd( 85.824, 316.258, -65.1424, 0.22 ) }
    dend_45 { pt3dadd( 85.824, 316.258, -65.1424, 0.66 ) }
    dend_45 { pt3dadd( 85.9528, 316.515, -65.2037, 0.52 ) }
    dend_45 { pt3dadd( 86.2908, 317.238, -65.3479, 0.22 ) }
    dend_45 { pt3dadd( 86.343, 317.371, -65.3569, 0.22 ) }
    dend_45 { pt3dadd( 86.6661, 318.467, -65.2614, 0.22 ) }
    dend_45 { pt3dadd( 86.8175, 319.109, -65.1472, 1.03 ) }
    dend_45 { pt3dadd( 86.9378, 319.609, -65.0526, 1.11 ) }
    dend_45 { pt3dadd( 86.9546, 319.679, -65.0384, 1.11 ) }
    dend_45 { pt3dadd( 87.2312, 320.786, -64.8311, 1.11 ) }
    dend_45 { pt3dadd( 87.5288, 321.76, -64.6855, 0.29 ) }
    dend_45 { pt3dadd( 87.5508, 321.826, -64.6771, 0.29 ) }
    dend_45 { pt3dadd( 87.9974, 323.073, -64.5471, 0.29 ) }
    dend_45 { pt3dadd( 88.0234, 323.138, -64.5419, 0.29 ) }
    dend_45 { pt3dadd( 88.723, 324.754, -64.4634, 0.29 ) }
    dend_45 { pt3dadd( 89.4757, 326.29, -64.4634, 0.29 ) }
    dend_45 { pt3dadd( 89.5394, 326.418, -64.4634, 0.29 ) }
    dend_45 { pt3dadd( 89.6067, 326.561, -64.4623, 1.18 ) }
    dend_45 { pt3dadd( 89.6402, 326.634, -64.4613, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_71()
}

proc basic_shape_71() {
    dend_45 { pt3dadd( 89.8427, 327.125, -64.4537, 1.18 ) }
    dend_45 { pt3dadd( 90.2729, 328.227, -64.4309, 0.29 ) }
    dend_45 { pt3dadd( 91.0123, 330.3, -64.3826, 0.29 ) }
    dend_45 { pt3dadd( 91.5108, 331.773, -64.3476, 0.22 ) }
    dend_45 { pt3dadd( 91.5319, 331.841, -64.3459, 0.22 ) }
    dend_45 { pt3dadd( 92.141, 334.028, -64.1897, 0.22 ) }
    dend_45 { pt3dadd( 92.1976, 334.277, -64.1597, 0.88 ) }
    dend_45 { pt3dadd( 92.3122, 334.904, -64.0417, 1.33 ) }
    dend_45 { pt3dadd( 92.4075, 335.566, -63.8693, 1.33 ) }
    dend_45 { pt3dadd( 92.4574, 335.967, -63.7478, 1.33 ) }
    dend_45 { pt3dadd( 92.66, 337.488, -63.2293, 0.22 ) }
    dend_45 { pt3dadd( 92.8793, 339.12, -62.6009, 0.22 ) }
    dend_45 { pt3dadd( 93.0489, 340.144, -62.1929, 0.22 ) }
    dend_45 { pt3dadd( 93.4183, 341.978, -61.4251, 0.22 ) }
    dend_45 { pt3dadd( 93.4476, 342.095, -61.3755, 0.22 ) }
    dend_45 { pt3dadd( 93.7852, 343.19, -60.9258, 0.22 ) }
    dend_45 { pt3dadd( 93.8054, 343.243, -60.9064, 0.22 ) }
    dend_45 { pt3dadd( 94.2232, 344.061, -60.4869, 0.88 ) }
    dend_45 { pt3dadd( 94.2539, 344.105, -60.46, 0.88 ) }
    dend_45 { pt3dadd( 94.5021, 344.371, -60.2628, 0.88 ) }
    dend_45 { pt3dadd( 94.7126, 344.558, -60.0947, 0.88 ) }
    dend_45 { pt3dadd( 94.767, 344.599, -60.0514, 0.88 ) }
    dend_45 { pt3dadd( 95.8678, 345.353, -59.1735, 0.22 ) }
    dend_45 { pt3dadd( 96.4617, 345.722, -58.6375, 0.22 ) }
    dend_45 { pt3dadd( 96.5102, 345.751, -58.5915, 0.22 ) }
    dend_45 { pt3dadd( 97.4563, 346.261, -57.7831, 0.96 ) }
    dend_45 { pt3dadd( 97.6431, 346.354, -57.6371, 1.18 ) }
    dend_45 { pt3dadd( 97.7639, 346.407, -57.5628, 1.18 ) }
    dend_45 { pt3dadd( 99.4512, 347.137, -56.8066, 0.22 ) }
    dend_45 { pt3dadd( 99.521, 347.169, -56.7819, 0.22 ) }
    dend_45 { pt3dadd( 101.002, 347.89, -56.3807, 0.22 ) }
    dend_45 { pt3dadd( 101.091, 347.933, -56.3647, 0.22 ) }
    dend_45 { pt3dadd( 102.484, 348.6, -56.176, 0.22 ) }
    dend_45 { pt3dadd( 103.574, 349.118, -56.0918, 0.22 ) }
    dend_45 { pt3dadd( 104.576, 349.582, -56.1027, 0.22 ) }
    dend_45 { pt3dadd( 104.967, 349.764, -56.107, 0.66 ) }
    dend_45 { pt3dadd( 105.623, 350.083, -56.1144, 1.03 ) }
    dend_45 { pt3dadd( 105.687, 350.114, -56.115, 1.03 ) }
    dend_45 { pt3dadd( 106.109, 350.33, -56.115, 1.03 ) }
    dend_45 { pt3dadd( 106.186, 350.354, -56.115, 1.03 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 40/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 102.044, 298.41, -77.4969, 0.88 ) }
    dend_41 { pt3dadd( 104.197, 297.869, -78.0752, 0.88 ) }
    dend_41 { pt3dadd( 105.142, 297.656, -78.4193, 0.29 ) }
    dend_41 { pt3dadd( 105.658, 297.561, -78.66, 0.29 ) }
    dend_41 { pt3dadd( 106.132, 297.485, -78.8903, 0.29 ) }
    dend_41 { pt3dadd( 106.936, 297.365, -79.2568, 0.29 ) }
    dend_41 { pt3dadd( 107.0, 297.356, -79.285, 0.29 ) }
    dend_41 { pt3dadd( 107.808, 297.238, -79.6595, 0.29 ) }
    dend_41 { pt3dadd( 108.4, 297.158, -79.9915, 1.03 ) }
    dend_41 { pt3dadd( 108.774, 297.114, -80.2067, 1.25 ) }
    dend_41 { pt3dadd( 109.44, 297.042, -80.5444, 1.25 ) }
    dend_41 { pt3dadd( 109.502, 297.034, -80.5764, 1.25 ) }
    dend_41 { pt3dadd( 111.234, 296.813, -81.4075, 0.22 ) }
    dend_41 { pt3dadd( 112.658, 296.61, -82.0123, 0.22 ) }
    dend_41 { pt3dadd( 112.797, 296.589, -82.0692, 0.22 ) }
    dend_41 { pt3dadd( 114.221, 296.374, -82.6761, 0.22 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 102.044, 298.41, -77.4969, 0.29 ) }
    dend_40 { pt3dadd( 101.964, 299.17, -77.5514, 0.29 ) }
    dend_40 { pt3dadd( 101.803, 300.686, -77.6603, 0.29 ) }
    dend_40 { pt3dadd( 101.737, 301.309, -77.705, 0.22 ) }
    dend_40 { pt3dadd( 101.721, 301.461, -77.7159, 0.22 ) }
    dend_40 { pt3dadd( 101.606, 302.548, -77.794, 0.22 ) }
    dend_40 { pt3dadd( 101.528, 303.284, -77.8469, 0.22 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 63/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 93.8905, 314.788, -170.655, 0.22 ) }
    dend_25 { pt3dadd( 93.9395, 315.224, -171.163, 0.22 ) }
    dend_25 { pt3dadd( 94.0498, 316.324, -172.548, 0.22 ) }
    dend_25 { pt3dadd( 94.0892, 316.952, -173.266, 1.03 ) }
    dend_25 { pt3dadd( 94.1196, 317.614, -173.98, 1.03 ) }
    dend_25 { pt3dadd( 94.1595, 319.151, -175.427, 0.81 ) }
    dend_25 { pt3dadd( 94.1743, 320.126, -176.324, 0.15 ) }
    dend_25 { pt3dadd( 94.1742, 320.179, -176.371, 0.15 ) }
    dend_25 { pt3dadd( 94.1442, 321.219, -177.402, 0.15 ) }
    dend_25 { pt3dadd( 94.143, 321.319, -177.504, 0.15 ) }
    dend_25 { pt3dadd( 94.1555, 322.276, -178.571, 0.15 ) }
    dend_25 { pt3dadd( 94.1987, 323.167, -179.567, 0.66 ) }
    dend_25 { pt3dadd( 94.2239, 323.503, -179.953, 0.66 ) }
    dend_25 { pt3dadd( 94.3224, 325.233, -182.365, 0.22 ) }
    dend_25 { pt3dadd( 94.3397, 326.128, -183.786, 0.22 ) }
    dend_25 { pt3dadd( 94.3172, 326.914, -185.141, 1.18 ) }
    dend_25 { pt3dadd( 94.3141, 326.949, -185.205, 1.18 ) }
    dend_25 { pt3dadd( 94.254, 327.337, -185.894, 1.47 ) }
    dend_25 { pt3dadd( 93.9149, 328.76, -188.55, 0.15 ) }
    dend_25 { pt3dadd( 93.7684, 329.165, -189.313, 0.15 ) }
    dend_25 { pt3dadd( 93.5341, 329.605, -190.144, 0.52 ) }
    dend_25 { pt3dadd( 93.4092, 329.807, -190.476, 0.66 ) }
    dend_25 { pt3dadd( 93.2353, 330.087, -190.895, 0.66 ) }
    dend_25 { pt3dadd( 92.8333, 330.717, -191.744, 0.15 ) }
    dend_25 { pt3dadd( 92.8073, 330.767, -191.787, 0.15 ) }
    dend_25 { pt3dadd( 92.4365, 331.457, -192.415, 0.15 ) }
    dend_25 { pt3dadd( 92.1504, 331.965, -192.853, 0.15 ) }
    dend_25 { pt3dadd( 91.7388, 332.756, -193.492, 0.88 ) }
    dend_25 { pt3dadd( 91.7043, 332.827, -193.544, 0.88 ) }
    dend_25 { pt3dadd( 91.5395, 333.181, -193.726, 0.88 ) }
    dend_25 { pt3dadd( 91.1049, 334.025, -194.241, 0.22 ) }
    dend_25 { pt3dadd( 91.0645, 334.1, -194.293, 0.22 ) }
    dend_25 { pt3dadd( 90.6653, 334.765, -194.859, 0.22 ) }
    dend_25 { pt3dadd( 90.567, 334.912, -194.993, 0.22 ) }
    dend_25 { pt3dadd( 89.8631, 335.904, -195.951, 0.22 ) }
    dend_25 { pt3dadd( 89.0611, 336.977, -197.043, 0.22 ) }
    dend_25 { pt3dadd( 89.0022, 337.054, -197.13, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_72()
}

proc basic_shape_72() {
    dend_25 { pt3dadd( 88.38, 337.806, -198.224, 0.22 ) }
    dend_25 { pt3dadd( 88.2803, 337.914, -198.404, 0.22 ) }
    dend_25 { pt3dadd( 87.9772, 338.2, -199.007, 0.22 ) }
    dend_25 { pt3dadd( 87.9494, 338.223, -199.07, 0.22 ) }
    dend_25 { pt3dadd( 87.0786, 338.845, -200.847, 0.22 ) }
    dend_25 { pt3dadd( 86.3373, 339.289, -202.25, 1.18 ) }
    dend_25 { pt3dadd( 85.9627, 339.481, -202.917, 1.62 ) }
    dend_25 { pt3dadd( 84.9135, 339.964, -204.737, 1.62 ) }
    dend_25 { pt3dadd( 84.3034, 340.228, -205.751, 0.22 ) }
    dend_25 { pt3dadd( 83.655, 340.519, -206.775, 0.22 ) }
    dend_25 { pt3dadd( 83.1672, 340.736, -207.467, 0.88 ) }
    dend_25 { pt3dadd( 83.0755, 340.787, -207.585, 0.88 ) }
    dend_25 { pt3dadd( 82.9004, 340.924, -207.807, 0.88 ) }
    dend_25 { pt3dadd( 82.5064, 341.385, -208.218, 0.29 ) }
    dend_25 { pt3dadd( 81.9621, 342.197, -208.769, 0.29 ) }
    dend_25 { pt3dadd( 81.9333, 342.257, -208.815, 0.29 ) }
    dend_25 { pt3dadd( 81.6827, 342.839, -209.274, 0.29 ) }
    dend_25 { pt3dadd( 81.3911, 343.52, -209.837, 0.29 ) }
    dend_25 { pt3dadd( 81.2788, 343.786, -210.069, 0.81 ) }
    dend_25 { pt3dadd( 81.1891, 344.014, -210.265, 0.81 ) }
    dend_25 { pt3dadd( 80.741, 345.335, -211.317, 0.29 ) }
    dend_25 { pt3dadd( 80.6082, 345.788, -211.669, 0.29 ) }
    dend_25 { pt3dadd( 80.5485, 346.063, -211.906, 0.29 ) }
    dend_25 { pt3dadd( 80.5352, 346.182, -212.001, 0.29 ) }
    dend_25 { pt3dadd( 80.5019, 346.775, -212.442, 0.29 ) }
    dend_25 { pt3dadd( 80.4855, 347.848, -213.157, 1.33 ) }
    dend_25 { pt3dadd( 80.4913, 348.19, -213.406, 1.62 ) }
    dend_25 { pt3dadd( 80.5637, 349.538, -214.481, 0.15 ) }
    dend_25 { pt3dadd( 80.5955, 350.598, -215.327, 0.15 ) }
    dend_25 { pt3dadd( 80.5948, 350.9, -215.56, 0.96 ) }
    dend_25 { pt3dadd( 80.5896, 351.17, -215.764, 1.33 ) }
    dend_25 { pt3dadd( 80.5073, 353.149, -217.058, 0.22 ) }
    dend_25 { pt3dadd( 80.4444, 354.038, -217.562, 0.22 ) }
    dend_25 { pt3dadd( 80.3273, 354.893, -217.939, 0.22 ) }
    dend_25 { pt3dadd( 80.214, 355.439, -218.14, 0.22 ) }
    dend_25 { pt3dadd( 80.1968, 355.515, -218.161, 0.22 ) }
    dend_25 { pt3dadd( 79.9279, 356.584, -218.333, 0.22 ) }
    dend_25 { pt3dadd( 79.8031, 357.012, -218.335, 1.03 ) }
    dend_25 { pt3dadd( 79.6326, 357.512, -218.335, 0.15 ) }
    dend_25 { pt3dadd( 79.1913, 358.776, -218.329, 0.15 ) }
    dend_25 { pt3dadd( 79.0889, 359.089, -218.326, 0.96 ) }
    dend_25 { pt3dadd( 78.9211, 359.638, -218.318, 0.96 ) }
    dend_25 { pt3dadd( 78.7831, 360.11, -218.31, 0.15 ) }
    dend_25 { pt3dadd( 78.5547, 360.965, -218.292, 0.15 ) }
    dend_25 { pt3dadd( 78.5366, 361.045, -218.291, 0.15 ) }
    dend_25 { pt3dadd( 78.1622, 362.914, -218.291, 0.15 ) }
    dend_25 { pt3dadd( 78.0813, 363.375, -218.296, 0.15 ) }
    dend_25 { pt3dadd( 78.0677, 363.469, -218.299, 0.44 ) }
    dend_25 { pt3dadd( 78.0124, 363.901, -218.316, 0.44 ) }
    dend_25 { pt3dadd( 77.9832, 364.135, -218.327, 0.15 ) }
    dend_25 { pt3dadd( 77.8072, 365.167, -218.442, 0.15 ) }
    dend_25 { pt3dadd( 77.7903, 365.237, -218.456, 0.15 ) }
    dend_25 { pt3dadd( 77.6487, 365.894, -218.657, 0.15 ) }
    dend_25 { pt3dadd( 77.6086, 366.23, -218.782, 0.81 ) }
    dend_25 { pt3dadd( 77.5925, 366.37, -218.842, 0.81 ) }
    dend_25 { pt3dadd( 77.5074, 367.172, -219.211, 0.22 ) }
    dend_25 { pt3dadd( 77.4996, 367.306, -219.281, 0.22 ) }
    dend_25 { pt3dadd( 77.5316, 368.331, -219.711, 0.22 ) }
    dend_25 { pt3dadd( 77.614, 369.098, -219.99, 1.55 ) }
    dend_25 { pt3dadd( 77.7536, 369.94, -220.223, 0.15 ) }
    dend_25 { pt3dadd( 77.8322, 370.286, -220.317, 0.15 ) }
    dend_25 { pt3dadd( 77.8716, 370.441, -220.354, 0.15 ) }
    dend_25 { pt3dadd( 78.309, 372.154, -220.762, 0.15 ) }
    dend_25 { pt3dadd( 78.3794, 372.491, -220.835, 0.44 ) }
    dend_25 { pt3dadd( 78.4993, 373.207, -220.992, 0.44 ) }
    dend_25 { pt3dadd( 78.6873, 374.513, -221.287, 1.03 ) }
    dend_25 { pt3dadd( 78.7533, 375.241, -221.457, 1.25 ) }
    dend_25 { pt3dadd( 78.7566, 375.535, -221.527, 0.15 ) }
    dend_25 { pt3dadd( 78.6173, 376.651, -221.784, 0.15 ) }
    dend_25 { pt3dadd( 78.5989, 376.746, -221.811, 0.15 ) }
    dend_25 { pt3dadd( 78.2857, 377.851, -222.141, 0.15 ) }
    dend_25 { pt3dadd( 78.2669, 377.916, -222.162, 0.15 ) }
    dend_25 { pt3dadd( 78.1734, 378.269, -222.294, 1.11 ) }
    dend_25 { pt3dadd( 78.0169, 378.94, -222.552, 1.47 ) }
    dend_25 { pt3dadd( 77.749, 380.297, -223.055, 0.15 ) }
    dend_25 { pt3dadd( 77.4141, 382.127, -223.703, 0.15 ) }
    dend_25 { pt3dadd( 77.047, 384.31, -224.507, 0.15 ) }
    dend_25 { pt3dadd( 77.002, 384.582, -224.609, 0.59 ) }
    dend_25 { pt3dadd( 76.9116, 385.13, -224.808, 0.59 ) }
    dend_25 { pt3dadd( 76.7117, 386.38, -225.304, 0.15 ) }
    dend_25 { pt3dadd( 76.6984, 386.454, -225.333, 0.15 ) }
    dend_25 { pt3dadd( 76.5145, 387.192, -225.815, 0.44 ) }
    dend_25 { pt3dadd( 76.4439, 387.389, -225.985, 0.44 ) }
    dend_25 { pt3dadd( 76.1479, 388.076, -226.678, 0.15 ) }
    dend_25 { pt3dadd( 75.7128, 388.955, -227.652, 0.66 ) }
    dend_25 { pt3dadd( 75.5651, 389.225, -227.953, 0.66 ) }
    dend_25 { pt3dadd( 74.8038, 390.617, -229.475, 0.22 ) }
    dend_25 { pt3dadd( 74.7742, 390.67, -229.531, 0.22 ) }
    dend_25 { pt3dadd( 74.6474, 390.898, -229.777, 0.52 ) }
    dend_25 { pt3dadd( 74.4328, 391.266, -230.184, 0.74 ) }
    dend_25 { pt3dadd( 74.0864, 391.862, -230.659, 0.74 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 91/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 93.8905, 314.788, -170.655, 0.74 ) }
    dend_22 { pt3dadd( 94.5455, 314.899, -170.868, 0.74 ) }
    dend_22 { pt3dadd( 95.796, 315.138, -171.338, 0.22 ) }
    dend_22 { pt3dadd( 95.8716, 315.155, -171.366, 0.22 ) }
    dend_22 { pt3dadd( 96.8781, 315.407, -171.733, 0.22 ) }
    dend_22 { pt3dadd( 96.9428, 315.427, -171.753, 0.22 ) }
    dend_22 { pt3dadd( 98.0429, 315.795, -172.076, 1.11 ) }
    dend_22 { pt3dadd( 98.1052, 315.825, -172.091, 1.11 ) }
    dend_22 { pt3dadd( 98.8676, 316.267, -172.247, 1.33 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_73()
}

proc basic_shape_73() {
    dend_22 { pt3dadd( 98.9281, 316.301, -172.26, 1.33 ) }
    dend_22 { pt3dadd( 99.8901, 316.828, -172.481, 0.15 ) }
    dend_22 { pt3dadd( 99.952, 316.859, -172.494, 0.15 ) }
    dend_22 { pt3dadd( 101.288, 317.511, -172.724, 0.15 ) }
    dend_22 { pt3dadd( 101.834, 317.759, -172.827, 1.03 ) }
    dend_22 { pt3dadd( 102.777, 318.188, -173.064, 1.77 ) }
    dend_22 { pt3dadd( 103.044, 318.309, -173.143, 1.77 ) }
    dend_22 { pt3dadd( 103.475, 318.509, -173.341, 1.77 ) }
    dend_22 { pt3dadd( 103.545, 318.545, -173.376, 1.77 ) }
    dend_22 { pt3dadd( 104.008, 318.803, -173.645, 1.77 ) }
    dend_22 { pt3dadd( 104.904, 319.346, -174.114, 1.47 ) }
    dend_22 { pt3dadd( 104.958, 319.382, -174.143, 1.47 ) }
    dend_22 { pt3dadd( 106.189, 320.281, -174.809, 0.59 ) }
    dend_22 { pt3dadd( 107.208, 321.005, -175.336, 0.15 ) }
    dend_22 { pt3dadd( 107.296, 321.065, -175.376, 0.15 ) }
    dend_22 { pt3dadd( 108.255, 321.709, -175.763, 0.15 ) }
    dend_22 { pt3dadd( 108.95, 322.145, -176.016, 0.88 ) }
    dend_22 { pt3dadd( 109.659, 322.577, -176.256, 1.18 ) }
    dend_22 { pt3dadd( 110.941, 323.335, -176.636, 0.22 ) }
    dend_22 { pt3dadd( 112.154, 324.054, -177.024, 0.22 ) }
    dend_22 { pt3dadd( 112.243, 324.109, -177.052, 0.22 ) }
    dend_22 { pt3dadd( 113.052, 324.636, -177.282, 1.03 ) }
    dend_22 { pt3dadd( 113.401, 324.87, -177.373, 1.33 ) }
    dend_22 { pt3dadd( 113.457, 324.911, -177.388, 1.33 ) }
    dend_22 { pt3dadd( 114.012, 325.401, -177.532, 1.33 ) }
    dend_22 { pt3dadd( 114.69, 326.116, -177.699, 0.29 ) }
    dend_22 { pt3dadd( 115.302, 326.838, -177.834, 0.29 ) }
    dend_22 { pt3dadd( 115.754, 327.418, -177.912, 0.59 ) }
    dend_22 { pt3dadd( 116.241, 328.06, -177.994, 0.59 ) }
    dend_22 { pt3dadd( 116.846, 328.847, -178.081, 0.29 ) }
    dend_22 { pt3dadd( 117.69, 329.947, -178.185, 0.29 ) }
    dend_22 { pt3dadd( 117.733, 330.002, -178.189, 0.29 ) }
    dend_22 { pt3dadd( 118.245, 330.648, -178.202, 0.29 ) }
    dend_22 { pt3dadd( 118.338, 330.767, -178.197, 0.29 ) }
    dend_22 { pt3dadd( 119.411, 332.205, -178.11, 0.29 ) }
    dend_22 { pt3dadd( 119.452, 332.263, -178.108, 0.29 ) }
    dend_22 { pt3dadd( 120.361, 333.653, -178.091, 0.37 ) }
    dend_22 { pt3dadd( 120.672, 334.204, -178.011, 1.33 ) }
    dend_22 { pt3dadd( 121.071, 334.984, -177.885, 1.33 ) }
    dend_22 { pt3dadd( 121.659, 336.246, -177.657, 0.88 ) }
    dend_22 { pt3dadd( 121.941, 336.979, -177.496, 1.18 ) }
    dend_22 { pt3dadd( 122.297, 337.991, -177.245, 1.18 ) }
    dend_22 { pt3dadd( 122.991, 340.607, -176.415, 1.18 ) }
    // Section: dend_16, id: dend_16, parent: dend_8 (entry count 43/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 56.1046, 299.228, -133.36, 0.22 ) }
    dend_16 { pt3dadd( 56.9794, 301.187, -136.201, 0.22 ) }
    dend_16 { pt3dadd( 57.3958, 302.261, -137.456, 0.22 ) }
    dend_16 { pt3dadd( 57.6009, 302.846, -138.065, 0.22 ) }
    dend_16 { pt3dadd( 57.6147, 302.898, -138.111, 0.22 ) }
    dend_16 { pt3dadd( 57.8038, 303.916, -138.881, 0.22 ) }
    dend_16 { pt3dadd( 57.8124, 303.975, -138.922, 0.22 ) }
    dend_16 { pt3dadd( 57.8457, 305.609, -139.579, 0.22 ) }
    dend_16 { pt3dadd( 57.836, 305.753, -139.622, 0.22 ) }
    dend_16 { pt3dadd( 57.6726, 307.466, -140.178, 0.22 ) }
    dend_16 { pt3dadd( 57.5852, 308.397, -140.524, 0.22 ) }
    dend_16 { pt3dadd( 57.5814, 308.453, -140.545, 0.22 ) }
    dend_16 { pt3dadd( 57.5652, 308.993, -140.78, 1.33 ) }
    dend_16 { pt3dadd( 57.5644, 309.969, -141.266, 1.33 ) }
    dend_16 { pt3dadd( 57.581, 311.425, -141.983, 0.44 ) }
    dend_16 { pt3dadd( 57.6034, 312.729, -142.673, 0.22 ) }
    dend_16 { pt3dadd( 57.6542, 313.957, -143.359, 0.22 ) }
    dend_16 { pt3dadd( 57.7021, 314.952, -143.929, 0.22 ) }
    dend_16 { pt3dadd( 57.7078, 315.043, -143.983, 0.22 ) }
    dend_16 { pt3dadd( 57.779, 316.222, -144.697, 0.22 ) }
    dend_16 { pt3dadd( 57.774, 317.341, -145.245, 1.03 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 56.1046, 299.228, -133.36, 0.29 ) }
    dend_9 { pt3dadd( 55.1251, 300.463, -133.504, 0.29 ) }
    dend_9 { pt3dadd( 54.7638, 300.903, -133.54, 0.29 ) }
    dend_9 { pt3dadd( 54.0449, 301.762, -133.597, 0.29 ) }
    dend_9 { pt3dadd( 53.3608, 302.598, -133.642, 0.29 ) }
    dend_9 { pt3dadd( 52.3029, 303.888, -133.652, 0.29 ) }
    dend_9 { pt3dadd( 52.2429, 303.961, -133.65, 0.29 ) }
    dend_9 { pt3dadd( 51.2328, 305.198, -133.528, 0.29 ) }
    dend_9 { pt3dadd( 51.1883, 305.252, -133.522, 0.29 ) }
    dend_9 { pt3dadd( 50.4893, 306.112, -133.357, 0.29 ) }
    dend_9 { pt3dadd( 49.9243, 306.802, -133.202, 0.74 ) }
    dend_9 { pt3dadd( 49.484, 307.377, -133.073, 1.18 ) }
    dend_9 { pt3dadd( 49.0753, 307.965, -132.979, 1.18 ) }
    dend_9 { pt3dadd( 49.0314, 308.032, -132.968, 1.18 ) }
    dend_9 { pt3dadd( 48.4503, 308.931, -132.847, 1.18 ) }
    dend_9 { pt3dadd( 47.7016, 310.114, -132.731, 0.22 ) }
    dend_9 { pt3dadd( 47.0183, 311.279, -132.697, 0.22 ) }
    dend_9 { pt3dadd( 46.4658, 312.273, -132.691, 0.22 ) }
    // Section: dend_153, id: dend_153, parent: dend_151 (entry count 82/100)
    dend_153 { pt3dclear() }
    dend_153 { pt3dadd( 203.558, -288.715, 66.9005, 0.37 ) }
    dend_153 { pt3dadd( 204.643, -287.983, 67.1134, 0.37 ) }
    dend_153 { pt3dadd( 204.712, -287.942, 67.1235, 0.37 ) }
    dend_153 { pt3dadd( 205.512, -287.574, 67.2068, 0.29 ) }
    dend_153 { pt3dadd( 206.38, -287.229, 67.2819, 0.29 ) }
    dend_153 { pt3dadd( 206.943, -287.036, 67.3239, 0.81 ) }
    dend_153 { pt3dadd( 208.091, -286.664, 67.3991, 0.22 ) }
    dend_153 { pt3dadd( 208.594, -286.518, 67.3813, 0.22 ) }
    dend_153 { pt3dadd( 209.612, -286.24, 67.3261, 0.22 ) }
    dend_153 { pt3dadd( 209.681, -286.224, 67.321, 0.22 ) }
    dend_153 { pt3dadd( 210.043, -286.156, 67.287, 0.22 ) }
    dend_153 { pt3dadd( 210.55, -286.073, 67.2318, 0.22 ) }
    dend_153 { pt3dadd( 211.635, -285.874, 67.0911, 0.22 ) }
    dend_153 { pt3dadd( 211.702, -285.855, 67.0825, 0.22 ) }
    dend_153 { pt3dadd( 212.399, -285.589, 66.9969, 0.22 ) }
    dend_153 { pt3dadd( 212.463, -285.56, 66.9902, 0.22 ) }
    dend_153 { pt3dadd( 212.801, -285.4, 66.9573, 0.22 ) }
    dend_153 { pt3dadd( 212.865, -285.371, 66.9527, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_74()
}

proc basic_shape_74() {
    dend_153 { pt3dadd( 213.681, -284.995, 66.9527, 0.22 ) }
    dend_153 { pt3dadd( 213.805, -284.927, 66.9527, 0.22 ) }
    dend_153 { pt3dadd( 214.373, -284.5, 66.9527, 0.22 ) }
    // Section: dend_152, id: dend_152, parent: dend_151 (entry count 3/100)
    dend_152 { pt3dclear() }
    dend_152 { pt3dadd( 203.558, -288.715, 66.9005, 0.37 ) }
    dend_152 { pt3dadd( 203.868, -289.428, 67.1078, 0.37 ) }
    dend_152 { pt3dadd( 204.295, -290.405, 67.392, 0.37 ) }
    dend_152 { pt3dadd( 204.322, -290.467, 67.4102, 0.37 ) }
    dend_152 { pt3dadd( 204.89, -291.77, 67.789, 0.37 ) }
    dend_152 { pt3dadd( 205.187, -292.452, 67.9874, 0.37 ) }
    dend_152 { pt3dadd( 205.542, -293.265, 68.2241, 0.37 ) }
    // Section: dend_111, id: dend_111, parent: dend_109 (entry count 10/100)
    dend_111 { pt3dclear() }
    dend_111 { pt3dadd( -18.1241, -464.79, -49.2811, 0.29 ) }
    dend_111 { pt3dadd( -18.4862, -467.314, -51.5875, 0.29 ) }
    dend_111 { pt3dadd( -18.5866, -468.014, -52.227, 0.29 ) }
    dend_111 { pt3dadd( -18.822, -469.655, -53.7264, 0.29 ) }
    dend_111 { pt3dadd( -18.8305, -469.715, -53.7805, 0.29 ) }
    dend_111 { pt3dadd( -19.1441, -471.9, -55.7775, 0.22 ) }
    dend_111 { pt3dadd( -19.1719, -472.094, -55.9546, 0.52 ) }
    // Section: dend_110, id: dend_110, parent: dend_109 (entry count 17/100)
    dend_110 { pt3dclear() }
    dend_110 { pt3dadd( -18.1241, -464.79, -49.2811, 0.22 ) }
    dend_110 { pt3dadd( -19.5486, -465.164, -52.6954, 0.22 ) }
    dend_110 { pt3dadd( -19.7565, -465.218, -53.1938, 0.44 ) }
    // Section: dend_48, id: dend_48, parent: dend_46 (entry count 20/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 117.019, 351.42, -85.7781, 0.22 ) }
    dend_48 { pt3dadd( 117.496, 352.048, -85.805, 0.22 ) }
    dend_48 { pt3dadd( 117.547, 352.112, -85.8076, 0.22 ) }
    dend_48 { pt3dadd( 118.377, 353.184, -85.8464, 0.22 ) }
    dend_48 { pt3dadd( 118.427, 353.249, -85.8486, 0.22 ) }
    dend_48 { pt3dadd( 119.767, 354.98, -85.9708, 0.22 ) }
    dend_48 { pt3dadd( 120.05, 355.355, -86.0063, 0.52 ) }
    dend_48 { pt3dadd( 120.409, 355.873, -86.0932, 0.52 ) }
    dend_48 { pt3dadd( 120.811, 356.48, -86.2344, 0.52 ) }
    dend_48 { pt3dadd( 120.847, 356.538, -86.2511, 0.52 ) }
    dend_48 { pt3dadd( 121.163, 357.081, -86.4213, 0.88 ) }
    dend_48 { pt3dadd( 121.464, 357.642, -86.6035, 0.44 ) }
    dend_48 { pt3dadd( 122.456, 359.447, -87.223, 0.22 ) }
    dend_48 { pt3dadd( 122.533, 359.585, -87.2717, 0.22 ) }
    dend_48 { pt3dadd( 123.192, 360.734, -87.6714, 0.22 ) }
    dend_48 { pt3dadd( 123.226, 360.793, -87.6929, 0.22 ) }
    dend_48 { pt3dadd( 123.922, 361.967, -88.1301, 0.22 ) }
    dend_48 { pt3dadd( 124.246, 362.506, -88.3482, 0.59 ) }
    dend_48 { pt3dadd( 124.28, 362.563, -88.3723, 0.59 ) }
    dend_48 { pt3dadd( 124.472, 362.919, -88.5331, 0.59 ) }
    dend_48 { pt3dadd( 124.969, 363.951, -89.0578, 0.22 ) }
    dend_48 { pt3dadd( 124.998, 364.019, -89.0898, 0.22 ) }
    dend_48 { pt3dadd( 125.29, 364.856, -89.4456, 0.22 ) }
    dend_48 { pt3dadd( 125.318, 364.929, -89.467, 0.22 ) }
    dend_48 { pt3dadd( 125.425, 365.185, -89.5272, 0.44 ) }
    dend_48 { pt3dadd( 125.471, 365.264, -89.5424, 0.44 ) }
    dend_48 { pt3dadd( 125.844, 365.803, -89.6037, 0.44 ) }
    dend_48 { pt3dadd( 125.954, 365.937, -89.6237, 0.44 ) }
    dend_48 { pt3dadd( 126.42, 366.416, -89.7145, 0.44 ) }
    dend_48 { pt3dadd( 126.488, 366.489, -89.727, 0.44 ) }
    dend_48 { pt3dadd( 127.346, 367.359, -89.8591, 0.22 ) }
    dend_48 { pt3dadd( 127.453, 367.464, -89.874, 0.22 ) }
    dend_48 { pt3dadd( 127.918, 367.878, -89.9255, 0.22 ) }
    dend_48 { pt3dadd( 127.97, 367.924, -89.9303, 0.22 ) }
    dend_48 { pt3dadd( 128.921, 368.781, -89.9969, 0.22 ) }
    dend_48 { pt3dadd( 130.073, 369.832, -90.0513, 0.22 ) }
    dend_48 { pt3dadd( 130.127, 369.88, -90.0521, 0.22 ) }
    dend_48 { pt3dadd( 131.216, 370.809, -90.0676, 0.22 ) }
    dend_48 { pt3dadd( 131.389, 370.95, -90.0699, 0.22 ) }
    dend_48 { pt3dadd( 132.122, 371.558, -90.0782, 0.22 ) }
    dend_48 { pt3dadd( 132.175, 371.605, -90.0731, 0.22 ) }
    dend_48 { pt3dadd( 132.578, 372.192, -89.9505, 0.22 ) }
    dend_48 { pt3dadd( 132.613, 372.263, -89.9346, 0.22 ) }
    dend_48 { pt3dadd( 132.635, 372.331, -89.9193, 0.59 ) }
    dend_48 { pt3dadd( 132.951, 373.433, -89.6692, 0.59 ) }
    dend_48 { pt3dadd( 133.249, 374.625, -89.3511, 0.22 ) }
    dend_48 { pt3dadd( 133.766, 376.704, -88.8284, 0.22 ) }
    dend_48 { pt3dadd( 133.939, 377.465, -88.6422, 0.96 ) }
    dend_48 { pt3dadd( 134.076, 378.06, -88.5008, 1.18 ) }
    dend_48 { pt3dadd( 134.111, 378.203, -88.4685, 1.18 ) }
    dend_48 { pt3dadd( 134.319, 379.028, -88.3005, 0.22 ) }
    dend_48 { pt3dadd( 135.067, 381.796, -87.8677, 0.22 ) }
    dend_48 { pt3dadd( 135.191, 382.197, -87.7833, 0.66 ) }
    dend_48 { pt3dadd( 135.218, 382.273, -87.7658, 0.66 ) }
    dend_48 { pt3dadd( 135.45, 382.88, -87.6223, 0.66 ) }
    dend_48 { pt3dadd( 135.613, 383.283, -87.5314, 0.66 ) }
    dend_48 { pt3dadd( 135.741, 383.572, -87.4727, 0.66 ) }
    dend_48 { pt3dadd( 136.473, 384.889, -86.8928, 0.22 ) }
    dend_48 { pt3dadd( 136.63, 385.19, -86.7326, 0.66 ) }
    dend_48 { pt3dadd( 136.657, 385.248, -86.6976, 0.66 ) }
    dend_48 { pt3dadd( 136.851, 385.807, -86.3347, 0.66 ) }
    dend_48 { pt3dadd( 136.871, 385.889, -86.2804, 0.66 ) }
    dend_48 { pt3dadd( 136.984, 387.426, -85.3669, 0.22 ) }
    dend_48 { pt3dadd( 136.913, 388.196, -84.9454, 0.22 ) }
    dend_48 { pt3dadd( 136.892, 388.337, -84.8762, 0.22 ) }
    dend_48 { pt3dadd( 136.753, 389.241, -84.4692, 0.22 ) }
    dend_48 { pt3dadd( 136.741, 389.317, -84.4386, 0.22 ) }
    dend_48 { pt3dadd( 136.63, 390.235, -84.1382, 0.22 ) }
    dend_48 { pt3dadd( 136.551, 391.473, -83.8702, 1.03 ) }
    dend_48 { pt3dadd( 136.55, 392.213, -83.7131, 1.33 ) }
    dend_48 { pt3dadd( 136.563, 392.85, -83.604, 0.22 ) }
    dend_48 { pt3dadd( 136.575, 393.141, -83.5557, 0.22 ) }
    dend_48 { pt3dadd( 136.614, 394.024, -83.4184, 0.22 ) }
    dend_48 { pt3dadd( 136.686, 395.26, -83.2397, 0.22 ) }
    dend_48 { pt3dadd( 136.694, 395.359, -83.2278, 0.22 ) }
    dend_48 { pt3dadd( 136.888, 397.574, -82.9136, 0.22 ) }
    dend_48 { pt3dadd( 137.009, 398.951, -82.6922, 0.22 ) }
    dend_48 { pt3dadd( 137.015, 399.022, -82.6762, 0.22 ) }
    dend_48 { pt3dadd( 137.076, 399.625, -82.5064, 0.88 ) }
    dend_48 { pt3dadd( 137.138, 400.213, -82.311, 1.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_75()
}

proc basic_shape_75() {
    dend_48 { pt3dadd( 137.205, 400.856, -82.084, 1.25 ) }
    dend_48 { pt3dadd( 137.217, 400.968, -82.0424, 1.25 ) }
    dend_48 { pt3dadd( 137.332, 402.251, -81.5065, 0.22 ) }
    dend_48 { pt3dadd( 137.455, 403.654, -80.9117, 0.22 ) }
    dend_48 { pt3dadd( 137.623, 405.727, -80.0282, 0.22 ) }
    dend_48 { pt3dadd( 137.65, 406.087, -79.8685, 0.74 ) }
    dend_48 { pt3dadd( 137.688, 406.551, -79.6603, 1.11 ) }
    dend_48 { pt3dadd( 137.834, 408.314, -78.8598, 0.22 ) }
    dend_48 { pt3dadd( 137.984, 410.01, -78.0752, 0.22 ) }
    dend_48 { pt3dadd( 137.991, 410.072, -78.0411, 0.22 ) }
    dend_48 { pt3dadd( 138.182, 411.343, -77.2504, 0.22 ) }
    dend_48 { pt3dadd( 138.191, 411.394, -77.2189, 0.22 ) }
    dend_48 { pt3dadd( 138.246, 411.678, -77.0444, 0.66 ) }
    dend_48 { pt3dadd( 138.315, 411.994, -76.8745, 0.66 ) }
    dend_48 { pt3dadd( 138.531, 413.127, -76.2735, 1.03 ) }
    dend_48 { pt3dadd( 138.553, 413.264, -76.2161, 1.03 ) }
    dend_48 { pt3dadd( 138.683, 414.097, -75.9572, 1.03 ) }
    dend_48 { pt3dadd( 138.717, 414.345, -75.8986, 1.03 ) }
    dend_48 { pt3dadd( 138.768, 414.716, -75.8375, 0.22 ) }
    dend_48 { pt3dadd( 138.935, 416.058, -75.704, 0.22 ) }
    dend_48 { pt3dadd( 138.982, 416.499, -75.6636, 0.37 ) }
    dend_48 { pt3dadd( 138.994, 416.58, -75.6597, 0.37 ) }
    dend_48 { pt3dadd( 139.193, 417.655, -75.6333, 0.37 ) }
    dend_48 { pt3dadd( 139.382, 418.523, -75.6311, 0.66 ) }
    dend_48 { pt3dadd( 139.399, 418.592, -75.6349, 0.66 ) }
    dend_48 { pt3dadd( 139.712, 419.746, -75.7728, 0.22 ) }
    dend_48 { pt3dadd( 140.315, 422.068, -76.191, 0.22 ) }
    dend_48 { pt3dadd( 140.329, 422.133, -76.2141, 0.59 ) }
    dend_48 { pt3dadd( 140.338, 422.185, -76.242, 0.59 ) }
    dend_48 { pt3dadd( 140.424, 422.835, -76.6325, 0.59 ) }
    dend_48 { pt3dadd( 140.457, 423.142, -76.8304, 0.59 ) }
    dend_48 { pt3dadd( 140.467, 423.258, -76.9215, 0.59 ) }
    dend_48 { pt3dadd( 140.549, 424.526, -78.1907, 0.22 ) }
    dend_48 { pt3dadd( 140.575, 425.371, -79.1066, 0.22 ) }
    dend_48 { pt3dadd( 140.583, 426.088, -79.9339, 0.22 ) }
    dend_48 { pt3dadd( 140.582, 426.123, -79.9826, 0.22 ) }
    dend_48 { pt3dadd( 140.475, 427.087, -81.5409, 0.59 ) }
    dend_48 { pt3dadd( 140.295, 428.15, -83.46, 0.88 ) }
    dend_48 { pt3dadd( 140.195, 428.498, -84.3038, 1.11 ) }
    dend_48 { pt3dadd( 140.153, 428.6, -84.5936, 1.11 ) }
    dend_48 { pt3dadd( 139.781, 429.325, -86.9142, 1.11 ) }
    dend_48 { pt3dadd( 139.769, 429.346, -86.9809, 1.11 ) }
    dend_48 { pt3dadd( 139.673, 429.482, -87.4592, 1.11 ) }
    dend_48 { pt3dadd( 138.932, 430.545, -91.0442, 0.37 ) }
    dend_48 { pt3dadd( 138.808, 430.755, -91.7942, 0.37 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 45/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 117.019, 351.42, -85.7781, 0.22 ) }
    dend_47 { pt3dadd( 116.606, 351.933, -85.7781, 0.22 ) }
    dend_47 { pt3dadd( 115.976, 352.716, -85.7781, 0.22 ) }
    dend_47 { pt3dadd( 115.908, 352.8, -85.7781, 0.44 ) }
    dend_47 { pt3dadd( 115.645, 353.127, -85.7781, 0.44 ) }
    dend_47 { pt3dadd( 115.537, 353.261, -85.7781, 0.44 ) }
    dend_47 { pt3dadd( 115.486, 353.324, -85.7781, 0.44 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 52/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 114.221, 296.374, -82.6761, 0.22 ) }
    dend_43 { pt3dadd( 115.058, 296.411, -82.9468, 0.22 ) }
    dend_43 { pt3dadd( 116.269, 296.458, -83.3099, 0.22 ) }
    dend_43 { pt3dadd( 116.336, 296.46, -83.3296, 0.22 ) }
    dend_43 { pt3dadd( 117.876, 296.45, -83.7418, 0.22 ) }
    dend_43 { pt3dadd( 117.972, 296.448, -83.7662, 0.22 ) }
    dend_43 { pt3dadd( 119.565, 296.386, -84.1524, 0.22 ) }
    dend_43 { pt3dadd( 119.633, 296.38, -84.1714, 0.22 ) }
    dend_43 { pt3dadd( 120.153, 296.302, -84.3259, 1.03 ) }
    dend_43 { pt3dadd( 120.955, 296.141, -84.5442, 1.33 ) }
    dend_43 { pt3dadd( 121.021, 296.124, -84.5597, 1.33 ) }
    dend_43 { pt3dadd( 121.308, 296.047, -84.6161, 1.33 ) }
    dend_43 { pt3dadd( 122.494, 295.699, -84.8233, 0.37 ) }
    dend_43 { pt3dadd( 123.533, 295.409, -84.9573, 0.37 ) }
    dend_43 { pt3dadd( 124.045, 295.299, -85.0828, 0.37 ) }
    dend_43 { pt3dadd( 124.187, 295.283, -85.1308, 0.37 ) }
    dend_43 { pt3dadd( 125.163, 295.234, -85.5039, 0.29 ) }
    dend_43 { pt3dadd( 125.511, 295.247, -85.6627, 0.88 ) }
    dend_43 { pt3dadd( 125.958, 295.307, -85.8941, 1.03 ) }
    dend_43 { pt3dadd( 127.998, 295.862, -87.1161, 0.22 ) }
    dend_43 { pt3dadd( 128.815, 296.177, -87.6652, 0.22 ) }
    dend_43 { pt3dadd( 128.891, 296.214, -87.7253, 0.22 ) }
    dend_43 { pt3dadd( 129.554, 296.582, -88.3723, 0.22 ) }
    dend_43 { pt3dadd( 129.601, 296.61, -88.4202, 0.22 ) }
    dend_43 { pt3dadd( 130.335, 297.053, -89.2383, 0.22 ) }
    dend_43 { pt3dadd( 130.663, 297.239, -89.7664, 0.96 ) }
    dend_43 { pt3dadd( 131.586, 297.774, -91.4105, 0.22 ) }
    dend_43 { pt3dadd( 132.071, 298.063, -92.3294, 0.22 ) }
    dend_43 { pt3dadd( 132.283, 298.189, -92.7261, 1.03 ) }
    dend_43 { pt3dadd( 132.788, 298.488, -93.6738, 1.03 ) }
    dend_43 { pt3dadd( 134.846, 299.705, -97.6542, 0.22 ) }
    dend_43 { pt3dadd( 135.544, 300.139, -99.0012, 0.22 ) }
    dend_43 { pt3dadd( 136.073, 300.493, -100.128, 0.66 ) }
    dend_43 { pt3dadd( 136.631, 300.853, -101.184, 0.22 ) }
    dend_43 { pt3dadd( 136.66, 300.871, -101.234, 0.22 ) }
    dend_43 { pt3dadd( 137.5, 301.396, -102.524, 1.33 ) }
    dend_43 { pt3dadd( 137.54, 301.419, -102.58, 1.33 ) }
    dend_43 { pt3dadd( 139.594, 302.542, -105.514, 0.22 ) }
    dend_43 { pt3dadd( 141.032, 303.301, -107.498, 0.22 ) }
    dend_43 { pt3dadd( 141.398, 303.485, -107.985, 0.96 ) }
    dend_43 { pt3dadd( 143.2, 304.444, -109.989, 0.22 ) }
    dend_43 { pt3dadd( 143.255, 304.475, -110.043, 0.22 ) }
    dend_43 { pt3dadd( 143.638, 304.695, -110.379, 0.59 ) }
    dend_43 { pt3dadd( 143.698, 304.73, -110.423, 0.59 ) }
    dend_43 { pt3dadd( 146.188, 306.197, -112.267, 0.22 ) }
    dend_43 { pt3dadd( 148.208, 307.36, -113.665, 0.22 ) }
    dend_43 { pt3dadd( 149.218, 307.932, -114.259, 0.22 ) }
    dend_43 { pt3dadd( 149.771, 308.248, -114.586, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_76()
}

proc basic_shape_76() {
    dend_43 { pt3dadd( 150.339, 308.583, -114.926, 0.88 ) }
    dend_43 { pt3dadd( 150.395, 308.616, -114.958, 0.88 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 2/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 114.221, 296.374, -82.6761, 0.22 ) }
    dend_42 { pt3dadd( 114.574, 297.285, -82.294, 0.22 ) }
    dend_42 { pt3dadd( 114.643, 297.478, -82.2105, 0.59 ) }
    dend_42 { pt3dadd( 114.67, 297.553, -82.1781, 0.59 ) }
    dend_42 { pt3dadd( 115.014, 298.505, -81.7669, 0.22 ) }
    dend_42 { pt3dadd( 115.173, 298.945, -81.5767, 0.59 ) }
    dend_42 { pt3dadd( 115.333, 299.388, -81.3855, 0.59 ) }
    dend_42 { pt3dadd( 115.349, 299.456, -81.3457, 0.59 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 10/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 122.991, 340.607, -176.415, 0.59 ) }
    dend_24 { pt3dadd( 123.728, 344.015, -179.755, 0.59 ) }
    dend_24 { pt3dadd( 124.444, 348.132, -183.447, 0.22 ) }
    dend_24 { pt3dadd( 124.702, 349.942, -184.996, 0.88 ) }
    dend_24 { pt3dadd( 124.924, 351.808, -186.525, 1.18 ) }
    dend_24 { pt3dadd( 124.984, 352.428, -187.042, 1.18 ) }
    dend_24 { pt3dadd( 125.053, 353.406, -187.872, 0.22 ) }
    dend_24 { pt3dadd( 125.059, 355.55, -189.492, 0.22 ) }
    dend_24 { pt3dadd( 124.986, 356.191, -190.048, 0.66 ) }
    dend_24 { pt3dadd( 124.917, 356.632, -190.377, 0.88 ) }
    dend_24 { pt3dadd( 124.684, 357.939, -191.335, 0.88 ) }
    dend_24 { pt3dadd( 124.456, 359.118, -192.342, 0.15 ) }
    dend_24 { pt3dadd( 124.41, 359.346, -192.573, 0.15 ) }
    dend_24 { pt3dadd( 124.402, 359.436, -192.695, 0.15 ) }
    dend_24 { pt3dadd( 124.416, 359.88, -193.361, 0.15 ) }
    dend_24 { pt3dadd( 124.533, 360.439, -194.121, 0.88 ) }
    dend_24 { pt3dadd( 124.577, 360.555, -194.225, 0.88 ) }
    dend_24 { pt3dadd( 124.604, 360.609, -194.265, 0.88 ) }
    dend_24 { pt3dadd( 125.869, 363.034, -195.853, 0.22 ) }
    dend_24 { pt3dadd( 125.899, 363.091, -195.886, 0.22 ) }
    dend_24 { pt3dadd( 126.679, 364.534, -196.579, 0.22 ) }
    dend_24 { pt3dadd( 127.913, 366.818, -197.489, 0.22 ) }
    dend_24 { pt3dadd( 128.128, 367.222, -197.628, 0.88 ) }
    dend_24 { pt3dadd( 128.16, 367.281, -197.648, 0.88 ) }
    dend_24 { pt3dadd( 128.531, 368.062, -197.851, 0.88 ) }
    dend_24 { pt3dadd( 128.558, 368.123, -197.873, 0.88 ) }
    dend_24 { pt3dadd( 128.9, 369.168, -198.426, 1.62 ) }
    dend_24 { pt3dadd( 128.942, 369.344, -198.553, 1.62 ) }
    dend_24 { pt3dadd( 129.216, 370.693, -199.58, 0.22 ) }
    dend_24 { pt3dadd( 129.424, 371.8, -200.47, 0.22 ) }
    dend_24 { pt3dadd( 129.447, 371.945, -200.597, 0.59 ) }
    dend_24 { pt3dadd( 129.489, 372.32, -200.915, 0.59 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 42/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 122.991, 340.607, -176.415, 0.22 ) }
    dend_23 { pt3dadd( 124.304, 341.341, -176.015, 0.22 ) }
    dend_23 { pt3dadd( 126.382, 342.372, -175.201, 0.22 ) }
    dend_23 { pt3dadd( 126.591, 342.465, -175.112, 0.59 ) }
    dend_23 { pt3dadd( 126.684, 342.502, -175.072, 0.59 ) }
    dend_23 { pt3dadd( 128.883, 343.304, -174.168, 0.22 ) }
    dend_23 { pt3dadd( 128.946, 343.325, -174.143, 0.22 ) }
    dend_23 { pt3dadd( 129.855, 343.542, -173.755, 1.18 ) }
    dend_23 { pt3dadd( 130.165, 343.593, -173.55, 1.62 ) }
    dend_23 { pt3dadd( 130.644, 343.659, -173.19, 1.62 ) }
    dend_23 { pt3dadd( 131.657, 343.712, -172.311, 0.22 ) }
    dend_23 { pt3dadd( 131.7, 343.711, -172.268, 0.22 ) }
    dend_23 { pt3dadd( 132.424, 343.688, -171.387, 0.22 ) }
    dend_23 { pt3dadd( 134.187, 343.539, -168.727, 1.03 ) }
    dend_23 { pt3dadd( 134.6, 343.485, -168.02, 1.69 ) }
    dend_23 { pt3dadd( 135.547, 343.308, -166.327, 1.69 ) }
    dend_23 { pt3dadd( 135.604, 343.294, -166.222, 1.69 ) }
    dend_23 { pt3dadd( 137.053, 342.948, -163.814, 1.03 ) }
    dend_23 { pt3dadd( 137.967, 342.725, -162.434, 0.15 ) }
    dend_23 { pt3dadd( 138.018, 342.714, -162.373, 0.15 ) }
    dend_23 { pt3dadd( 138.8, 342.566, -161.4, 0.15 ) }
    dend_23 { pt3dadd( 138.898, 342.552, -161.284, 0.15 ) }
    dend_23 { pt3dadd( 139.884, 342.508, -160.152, 0.15 ) }
    dend_23 { pt3dadd( 139.934, 342.511, -160.099, 0.15 ) }
    dend_23 { pt3dadd( 141.122, 342.749, -158.837, 0.96 ) }
    dend_23 { pt3dadd( 142.443, 343.043, -157.355, 0.96 ) }
    dend_23 { pt3dadd( 142.48, 343.053, -157.308, 0.96 ) }
    dend_23 { pt3dadd( 143.14, 343.326, -156.127, 0.66 ) }
    dend_23 { pt3dadd( 143.329, 343.442, -155.644, 0.66 ) }
    dend_23 { pt3dadd( 143.347, 343.462, -155.568, 0.66 ) }
    dend_23 { pt3dadd( 143.528, 343.739, -154.574, 0.66 ) }
    dend_23 { pt3dadd( 143.539, 343.759, -154.507, 0.66 ) }
    dend_23 { pt3dadd( 144.128, 344.873, -150.899, 1.55 ) }
    dend_23 { pt3dadd( 144.136, 344.89, -150.842, 1.55 ) }
    dend_23 { pt3dadd( 144.754, 346.256, -146.305, 1.55 ) }
    dend_23 { pt3dadd( 144.763, 346.278, -146.24, 1.55 ) }
    dend_23 { pt3dadd( 144.926, 346.702, -145.076, 0.52 ) }
    dend_23 { pt3dadd( 145.282, 347.422, -143.26, 0.52 ) }
    dend_23 { pt3dadd( 145.314, 347.471, -143.155, 0.52 ) }
    dend_23 { pt3dadd( 145.576, 347.84, -142.434, 1.4 ) }
    dend_23 { pt3dadd( 146.368, 348.835, -140.908, 0.15 ) }
    dend_23 { pt3dadd( 146.392, 348.865, -140.862, 0.15 ) }
    dend_23 { pt3dadd( 146.9, 349.49, -139.903, 0.15 ) }
    dend_23 { pt3dadd( 147.062, 349.681, -139.702, 1.03 ) }
    dend_23 { pt3dadd( 147.101, 349.725, -139.663, 1.03 ) }
    dend_23 { pt3dadd( 147.2, 349.827, -139.605, 1.03 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 88/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 57.774, 317.341, -145.245, 0.22 ) }
    dend_18 { pt3dadd( 57.924, 317.875, -145.426, 0.22 ) }
    dend_18 { pt3dadd( 57.9464, 317.95, -145.451, 0.22 ) }
    dend_18 { pt3dadd( 58.3681, 319.4, -146.023, 0.22 ) }
    dend_18 { pt3dadd( 58.3856, 319.463, -146.048, 0.22 ) }
    dend_18 { pt3dadd( 58.5602, 320.345, -146.374, 0.22 ) }
    dend_18 { pt3dadd( 58.5702, 320.41, -146.399, 0.22 ) }
    dend_18 { pt3dadd( 58.5991, 320.976, -146.588, 0.22 ) }
    dend_18 { pt3dadd( 58.5866, 321.658, -146.807, 0.88 ) }
    dend_18 { pt3dadd( 58.5566, 322.215, -146.999, 1.11 ) }
    dend_18 { pt3dadd( 58.5079, 323.06, -147.271, 1.11 ) }
    dend_18 { pt3dadd( 58.4817, 323.607, -147.433, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_77()
}

proc basic_shape_77() {
    dend_18 { pt3dadd( 58.4695, 324.873, -147.78, 0.22 ) }
    dend_18 { pt3dadd( 58.4757, 326.491, -148.265, 0.22 ) }
    dend_18 { pt3dadd( 58.4843, 327.807, -148.66, 0.88 ) }
    dend_18 { pt3dadd( 58.4875, 328.568, -148.906, 1.25 ) }
    dend_18 { pt3dadd( 58.4978, 329.494, -149.214, 1.69 ) }
    dend_18 { pt3dadd( 58.5051, 330.662, -149.658, 1.69 ) }
    dend_18 { pt3dadd( 58.5233, 331.774, -150.137, 0.15 ) }
    dend_18 { pt3dadd( 58.5163, 332.742, -150.612, 0.15 ) }
    dend_18 { pt3dadd( 58.4684, 334.377, -151.488, 0.15 ) }
    dend_18 { pt3dadd( 58.4612, 334.516, -151.569, 0.74 ) }
    dend_18 { pt3dadd( 58.3604, 335.874, -152.433, 0.22 ) }
    dend_18 { pt3dadd( 58.3102, 336.684, -152.954, 0.22 ) }
    dend_18 { pt3dadd( 58.2922, 337.466, -153.415, 0.88 ) }
    dend_18 { pt3dadd( 58.2904, 337.588, -153.485, 0.88 ) }
    dend_18 { pt3dadd( 58.2745, 338.071, -153.763, 0.88 ) }
    dend_18 { pt3dadd( 58.2191, 338.6, -153.998, 0.22 ) }
    dend_18 { pt3dadd( 58.0704, 339.497, -154.246, 0.22 ) }
    dend_18 { pt3dadd( 58.0276, 339.699, -154.289, 0.44 ) }
    dend_18 { pt3dadd( 57.8382, 340.564, -154.515, 0.44 ) }
    dend_18 { pt3dadd( 57.6796, 341.267, -154.736, 0.15 ) }
    dend_18 { pt3dadd( 57.3236, 343.002, -155.314, 0.15 ) }
    dend_18 { pt3dadd( 57.203, 343.674, -155.525, 0.88 ) }
    dend_18 { pt3dadd( 57.0919, 344.357, -155.738, 0.88 ) }
    dend_18 { pt3dadd( 56.8544, 346.174, -156.27, 0.66 ) }
    dend_18 { pt3dadd( 56.8268, 346.451, -156.36, 0.15 ) }
    dend_18 { pt3dadd( 56.7483, 347.783, -156.779, 0.15 ) }
    dend_18 { pt3dadd( 56.7186, 349.192, -157.236, 0.15 ) }
    dend_18 { pt3dadd( 56.7169, 349.415, -157.305, 0.74 ) }
    dend_18 { pt3dadd( 56.7223, 350.14, -157.499, 0.74 ) }
    dend_18 { pt3dadd( 56.7368, 351.663, -157.802, 0.15 ) }
    dend_18 { pt3dadd( 56.7375, 353.208, -158.21, 0.15 ) }
    dend_18 { pt3dadd( 56.7205, 354.235, -158.536, 0.15 ) }
    dend_18 { pt3dadd( 56.7157, 354.443, -158.618, 0.59 ) }
    dend_18 { pt3dadd( 56.7141, 354.499, -158.641, 0.59 ) }
    dend_18 { pt3dadd( 56.6854, 355.187, -158.941, 0.59 ) }
    dend_18 { pt3dadd( 56.5975, 356.469, -159.505, 0.15 ) }
    dend_18 { pt3dadd( 56.4199, 358.259, -160.433, 0.15 ) }
    dend_18 { pt3dadd( 56.3298, 359.151, -160.88, 0.52 ) }
    dend_18 { pt3dadd( 56.277, 359.701, -161.115, 0.52 ) }
    dend_18 { pt3dadd( 56.25, 359.999, -161.216, 0.66 ) }
    dend_18 { pt3dadd( 56.1931, 360.541, -161.377, 0.15 ) }
    dend_18 { pt3dadd( 56.1823, 360.64, -161.397, 0.15 ) }
    dend_18 { pt3dadd( 56.0105, 362.104, -161.683, 0.15 ) }
    dend_18 { pt3dadd( 55.939, 362.762, -161.772, 0.88 ) }
    dend_18 { pt3dadd( 55.9209, 363.299, -161.856, 1.11 ) }
    dend_18 { pt3dadd( 55.9671, 364.404, -162.038, 1.03 ) }
    dend_18 { pt3dadd( 55.9767, 364.473, -162.049, 1.03 ) }
    dend_18 { pt3dadd( 56.0345, 364.774, -162.128, 0.15 ) }
    dend_18 { pt3dadd( 56.0557, 364.846, -162.155, 0.15 ) }
    dend_18 { pt3dadd( 56.3983, 366.0, -162.61, 0.15 ) }
    dend_18 { pt3dadd( 56.4124, 366.057, -162.627, 0.15 ) }
    dend_18 { pt3dadd( 56.521, 366.648, -162.729, 0.15 ) }
    dend_18 { pt3dadd( 56.6035, 367.37, -162.869, 0.44 ) }
    dend_18 { pt3dadd( 56.643, 368.022, -162.994, 0.44 ) }
    dend_18 { pt3dadd( 56.6486, 368.178, -163.023, 0.44 ) }
    dend_18 { pt3dadd( 56.6397, 369.308, -163.312, 0.44 ) }
    dend_18 { pt3dadd( 56.6181, 370.566, -163.669, 0.15 ) }
    dend_18 { pt3dadd( 56.6016, 371.198, -163.858, 0.88 ) }
    dend_18 { pt3dadd( 56.5784, 372.034, -164.103, 1.25 ) }
    dend_18 { pt3dadd( 56.5637, 372.458, -164.24, 1.25 ) }
    dend_18 { pt3dadd( 56.5349, 373.963, -164.744, 0.15 ) }
    dend_18 { pt3dadd( 56.5267, 374.574, -164.968, 0.15 ) }
    dend_18 { pt3dadd( 56.5234, 374.651, -164.996, 0.15 ) }
    dend_18 { pt3dadd( 56.4907, 375.249, -165.171, 0.15 ) }
    dend_18 { pt3dadd( 56.4866, 375.328, -165.188, 0.15 ) }
    dend_18 { pt3dadd( 56.4645, 376.193, -165.288, 0.15 ) }
    dend_18 { pt3dadd( 56.4624, 376.274, -165.288, 0.15 ) }
    dend_18 { pt3dadd( 56.4116, 377.024, -165.37, 0.15 ) }
    dend_18 { pt3dadd( 56.4061, 377.093, -165.383, 0.15 ) }
    dend_18 { pt3dadd( 56.286, 378.433, -165.742, 0.15 ) }
    dend_18 { pt3dadd( 56.2393, 378.914, -165.895, 0.81 ) }
    dend_18 { pt3dadd( 56.1804, 379.553, -166.122, 0.96 ) }
    dend_18 { pt3dadd( 56.062, 380.878, -166.665, 0.96 ) }
    dend_18 { pt3dadd( 56.0157, 381.552, -166.948, 0.15 ) }
    dend_18 { pt3dadd( 55.9561, 382.351, -167.263, 1.4 ) }
    dend_18 { pt3dadd( 55.9509, 382.417, -167.288, 1.4 ) }
    dend_18 { pt3dadd( 55.9199, 382.984, -167.469, 1.77 ) }
    dend_18 { pt3dadd( 55.8928, 384.233, -167.771, 0.22 ) }
    dend_18 { pt3dadd( 55.8658, 385.611, -167.95, 0.22 ) }
    dend_18 { pt3dadd( 55.8449, 386.044, -168.002, 0.59 ) }
    dend_18 { pt3dadd( 55.8364, 386.21, -168.017, 0.22 ) }
    dend_18 { pt3dadd( 55.8139, 386.662, -168.05, 0.22 ) }
    dend_18 { pt3dadd( 55.8086, 386.78, -168.075, 0.22 ) }
    dend_18 { pt3dadd( 55.8216, 387.43, -168.271, 0.22 ) }
    dend_18 { pt3dadd( 55.8486, 387.901, -168.444, 1.11 ) }
    dend_18 { pt3dadd( 55.9068, 388.573, -168.721, 1.55 ) }
    dend_18 { pt3dadd( 55.9635, 389.119, -168.956, 1.55 ) }
    dend_18 { pt3dadd( 56.187, 390.877, -169.706, 0.15 ) }
    dend_18 { pt3dadd( 56.4046, 392.407, -170.355, 0.15 ) }
    dend_18 { pt3dadd( 56.5857, 393.531, -170.833, 0.15 ) }
    dend_18 { pt3dadd( 56.6521, 393.993, -171.005, 0.44 ) }
    dend_18 { pt3dadd( 56.6599, 394.062, -171.027, 0.44 ) }
    dend_18 { pt3dadd( 56.7403, 395.07, -171.236, 0.44 ) }
    dend_18 { pt3dadd( 56.7444, 395.183, -171.247, 0.15 ) }
    dend_18 { pt3dadd( 56.7418, 395.295, -171.262, 0.15 ) }
    dend_18 { pt3dadd( 56.674, 396.959, -171.485, 0.15 ) }
    dend_18 { pt3dadd( 56.6687, 397.355, -171.528, 0.59 ) }
    dend_18 { pt3dadd( 56.6752, 398.079, -171.642, 0.66 ) }
    dend_18 { pt3dadd( 56.6963, 398.777, -171.77, 0.15 ) }
    dend_18 { pt3dadd( 56.7019, 398.896, -171.794, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_78()
}

proc basic_shape_78() {
    dend_18 { pt3dadd( 56.7889, 400.264, -172.067, 0.15 ) }
    dend_18 { pt3dadd( 56.9556, 401.904, -172.382, 0.15 ) }
    dend_18 { pt3dadd( 57.0761, 402.917, -172.59, 1.03 ) }
    dend_18 { pt3dadd( 57.1598, 403.568, -172.721, 1.33 ) }
    dend_18 { pt3dadd( 57.2298, 404.072, -172.852, 0.81 ) }
    dend_18 { pt3dadd( 57.2892, 404.493, -172.993, 0.15 ) }
    dend_18 { pt3dadd( 57.545, 405.96, -173.584, 0.15 ) }
    dend_18 { pt3dadd( 57.7023, 406.742, -173.932, 0.96 ) }
    dend_18 { pt3dadd( 57.8833, 407.557, -174.393, 1.18 ) }
    dend_18 { pt3dadd( 58.2001, 408.92, -175.329, 0.15 ) }
    dend_18 { pt3dadd( 58.2118, 408.967, -175.365, 0.15 ) }
    dend_18 { pt3dadd( 58.625, 410.591, -176.723, 0.15 ) }
    dend_18 { pt3dadd( 58.6383, 410.641, -176.771, 0.15 ) }
    dend_18 { pt3dadd( 59.0728, 412.242, -178.308, 0.15 ) }
    dend_18 { pt3dadd( 59.0953, 412.32, -178.388, 0.15 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 15/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 57.774, 317.341, -145.245, 0.15 ) }
    dend_17 { pt3dadd( 57.426, 317.792, -145.169, 0.15 ) }
    dend_17 { pt3dadd( 57.0643, 318.261, -145.091, 0.15 ) }
    dend_17 { pt3dadd( 56.4603, 319.044, -144.96, 0.52 ) }
    // Section: dend_13, id: dend_13, parent: dend_9 (entry count 19/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 46.4658, 312.273, -132.691, 0.22 ) }
    dend_13 { pt3dadd( 45.2805, 314.48, -137.304, 0.22 ) }
    dend_13 { pt3dadd( 45.0662, 314.879, -138.138, 0.22 ) }
    dend_13 { pt3dadd( 45.0502, 314.909, -138.2, 0.22 ) }
    dend_13 { pt3dadd( 44.6946, 315.571, -139.584, 0.22 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 24/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 46.4658, 312.273, -132.691, 1.4 ) }
    dend_10 { pt3dadd( 45.9741, 312.669, -132.773, 1.4 ) }
    dend_10 { pt3dadd( 45.5817, 312.97, -132.817, 1.62 ) }
    dend_10 { pt3dadd( 45.1268, 313.324, -132.864, 1.62 ) }
    dend_10 { pt3dadd( 44.8326, 313.555, -132.887, 1.55 ) }
    dend_10 { pt3dadd( 44.7597, 313.615, -132.892, 1.55 ) }
    dend_10 { pt3dadd( 43.8188, 314.398, -132.95, 0.22 ) }
    dend_10 { pt3dadd( 41.9996, 315.93, -133.026, 0.22 ) }
    dend_10 { pt3dadd( 41.8691, 316.035, -133.03, 0.22 ) }
    dend_10 { pt3dadd( 39.993, 317.482, -133.052, 0.22 ) }
    dend_10 { pt3dadd( 38.6043, 318.499, -133.043, 0.22 ) }
    dend_10 { pt3dadd( 37.9928, 318.922, -133.03, 0.22 ) }
    dend_10 { pt3dadd( 37.8704, 319.001, -133.027, 0.22 ) }
    dend_10 { pt3dadd( 36.5167, 319.887, -132.975, 0.22 ) }
    dend_10 { pt3dadd( 36.1468, 320.135, -132.949, 0.74 ) }
    dend_10 { pt3dadd( 35.5335, 320.579, -132.879, 0.74 ) }
    dend_10 { pt3dadd( 35.4701, 320.631, -132.871, 0.74 ) }
    dend_10 { pt3dadd( 35.19, 320.923, -132.83, 0.22 ) }
    dend_10 { pt3dadd( 33.731, 322.764, -132.638, 0.22 ) }
    dend_10 { pt3dadd( 33.2969, 323.447, -132.582, 0.74 ) }
    dend_10 { pt3dadd( 32.8924, 324.126, -132.539, 0.74 ) }
    dend_10 { pt3dadd( 32.6724, 324.51, -132.489, 0.15 ) }
    dend_10 { pt3dadd( 32.1021, 325.435, -132.299, 0.15 ) }
    dend_10 { pt3dadd( 31.8731, 325.775, -132.2, 0.44 ) }
    dend_10 { pt3dadd( 31.7731, 325.898, -132.154, 0.44 ) }
    dend_10 { pt3dadd( 31.387, 326.31, -131.95, 0.44 ) }
    dend_10 { pt3dadd( 30.1579, 327.343, -131.247, 0.15 ) }
    dend_10 { pt3dadd( 29.6898, 327.674, -130.969, 0.15 ) }
    dend_10 { pt3dadd( 29.2506, 327.94, -130.724, 1.11 ) }
    dend_10 { pt3dadd( 28.6088, 328.304, -130.376, 1.33 ) }
    dend_10 { pt3dadd( 27.4379, 328.941, -129.763, 0.15 ) }
    dend_10 { pt3dadd( 26.6197, 329.37, -129.372, 0.15 ) }
    dend_10 { pt3dadd( 26.4886, 329.441, -129.304, 0.15 ) }
    dend_10 { pt3dadd( 25.4701, 330.167, -128.681, 0.15 ) }
    dend_10 { pt3dadd( 25.2058, 330.423, -128.454, 0.81 ) }
    dend_10 { pt3dadd( 25.1223, 330.531, -128.362, 0.81 ) }
    dend_10 { pt3dadd( 24.7575, 331.134, -127.93, 0.81 ) }
    dend_10 { pt3dadd( 24.0051, 332.681, -126.94, 0.22 ) }
    dend_10 { pt3dadd( 23.5589, 333.745, -126.332, 0.22 ) }
    dend_10 { pt3dadd( 23.156, 334.88, -125.752, 0.88 ) }
    dend_10 { pt3dadd( 22.9726, 335.415, -125.507, 0.88 ) }
    dend_10 { pt3dadd( 22.6869, 336.265, -125.151, 0.15 ) }
    dend_10 { pt3dadd( 22.3368, 337.294, -124.795, 0.22 ) }
    dend_10 { pt3dadd( 22.0703, 337.971, -124.656, 0.22 ) }
    dend_10 { pt3dadd( 21.8829, 338.354, -124.592, 1.03 ) }
    dend_10 { pt3dadd( 21.4807, 339.08, -124.512, 1.33 ) }
    dend_10 { pt3dadd( 21.4266, 339.17, -124.499, 1.33 ) }
    dend_10 { pt3dadd( 21.0678, 339.702, -124.383, 1.33 ) }
    dend_10 { pt3dadd( 20.88, 339.942, -124.335, 0.22 ) }
    dend_10 { pt3dadd( 19.9809, 341.023, -124.136, 0.22 ) }
    dend_10 { pt3dadd( 19.8461, 341.18, -124.113, 0.52 ) }
    dend_10 { pt3dadd( 19.527, 341.558, -124.072, 0.52 ) }
    dend_10 { pt3dadd( 18.5907, 342.694, -123.968, 0.22 ) }
    dend_10 { pt3dadd( 17.7419, 343.724, -123.885, 0.22 ) }
    dend_10 { pt3dadd( 17.651, 343.834, -123.877, 0.22 ) }
    dend_10 { pt3dadd( 16.8598, 344.777, -123.808, 0.22 ) }
    dend_10 { pt3dadd( 16.1849, 345.59, -123.811, 0.22 ) }
    dend_10 { pt3dadd( 15.2385, 346.688, -123.913, 0.22 ) }
    dend_10 { pt3dadd( 14.8026, 347.175, -124.01, 1.11 ) }
    dend_10 { pt3dadd( 14.3014, 347.693, -124.147, 1.47 ) }
    dend_10 { pt3dadd( 13.9994, 347.974, -124.26, 1.47 ) }
    dend_10 { pt3dadd( 12.8161, 348.979, -124.826, 0.22 ) }
    dend_10 { pt3dadd( 11.8355, 349.723, -125.426, 0.22 ) }
    dend_10 { pt3dadd( 11.7799, 349.766, -125.466, 0.22 ) }
    dend_10 { pt3dadd( 10.9569, 350.446, -126.14, 0.22 ) }
    dend_10 { pt3dadd( 10.2308, 351.099, -126.762, 0.96 ) }
    dend_10 { pt3dadd( 9.89176, 351.449, -127.06, 0.96 ) }
    dend_10 { pt3dadd( 9.40243, 352.047, -127.442, 0.22 ) }
    dend_10 { pt3dadd( 8.99203, 352.67, -127.821, 0.22 ) }
    dend_10 { pt3dadd( 8.8123, 352.974, -127.971, 0.52 ) }
    dend_10 { pt3dadd( 8.4917, 353.579, -128.208, 0.52 ) }
    dend_10 { pt3dadd( 8.38949, 353.77, -128.261, 0.22 ) }
    dend_10 { pt3dadd( 8.00275, 354.455, -128.43, 0.22 ) }
    dend_10 { pt3dadd( 7.9595, 354.528, -128.443, 0.22 ) }
    dend_10 { pt3dadd( 7.36445, 355.435, -128.617, 0.22 ) }
    dend_10 { pt3dadd( 6.72782, 356.337, -128.777, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_79()
}

proc basic_shape_79() {
    dend_10 { pt3dadd( 6.67871, 356.402, -128.79, 0.22 ) }
    dend_10 { pt3dadd( 6.6277, 356.464, -128.809, 0.66 ) }
    dend_10 { pt3dadd( 6.49192, 356.627, -128.873, 0.66 ) }
    dend_10 { pt3dadd( 6.13798, 357.055, -129.056, 0.66 ) }
    dend_10 { pt3dadd( 6.04553, 357.164, -129.104, 0.66 ) }
    dend_10 { pt3dadd( 5.83059, 357.418, -129.224, 0.66 ) }
    dend_10 { pt3dadd( 5.1902, 358.164, -129.584, 0.22 ) }
    dend_10 { pt3dadd( 4.52297, 358.884, -130.083, 0.22 ) }
    dend_10 { pt3dadd( 4.41817, 358.98, -130.165, 0.22 ) }
    dend_10 { pt3dadd( 3.95169, 359.387, -130.561, 0.22 ) }
    dend_10 { pt3dadd( 3.51949, 359.802, -130.95, 0.88 ) }
    dend_10 { pt3dadd( 3.12223, 360.216, -131.29, 1.18 ) }
    dend_10 { pt3dadd( 2.16715, 361.321, -132.009, 0.22 ) }
    dend_10 { pt3dadd( 1.58727, 362.058, -132.443, 0.22 ) }
    dend_10 { pt3dadd( 1.29828, 362.496, -132.597, 0.37 ) }
    dend_10 { pt3dadd( 0.766382, 363.466, -132.617, 0.15 ) }
    dend_10 { pt3dadd( 0.340456, 364.319, -132.415, 1.11 ) }
    dend_10 { pt3dadd( 0.0663538, 364.961, -132.203, 1.11 ) }
    dend_10 { pt3dadd( 0.0374295, 365.035, -132.179, 1.11 ) }
    dend_10 { pt3dadd( -0.383585, 366.2, -131.835, 0.15 ) }
    dend_10 { pt3dadd( -0.84931, 367.455, -131.505, 0.15 ) }
    dend_10 { pt3dadd( -0.998843, 367.853, -131.421, 0.22 ) }
    dend_10 { pt3dadd( -1.70426, 369.82, -131.114, 0.22 ) }
    dend_10 { pt3dadd( -2.07237, 370.975, -130.93, 0.22 ) }
    dend_10 { pt3dadd( -2.34083, 371.945, -130.758, 1.11 ) }
    dend_10 { pt3dadd( -2.51885, 372.76, -130.621, 1.33 ) }
    dend_10 { pt3dadd( -2.58879, 373.374, -130.492, 0.81 ) }
    dend_10 { pt3dadd( -2.5921, 373.458, -130.473, 0.81 ) }
    dend_10 { pt3dadd( -2.47514, 374.579, -130.14, 0.81 ) }
    dend_10 { pt3dadd( -2.28779, 375.334, -129.835, 1.18 ) }
    dend_10 { pt3dadd( -2.22992, 375.523, -129.759, 1.18 ) }
    dend_10 { pt3dadd( -1.83928, 376.676, -129.298, 0.52 ) }
    dend_10 { pt3dadd( -1.69585, 377.088, -129.143, 1.11 ) }
    dend_10 { pt3dadd( -1.37945, 378.041, -128.833, 1.92 ) }
    dend_10 { pt3dadd( -0.863213, 379.663, -128.356, 0.29 ) }
    dend_10 { pt3dadd( -0.661428, 380.471, -128.059, 0.29 ) }
    dend_10 { pt3dadd( -0.575622, 380.94, -127.854, 0.59 ) }
    dend_10 { pt3dadd( -0.568035, 381.004, -127.821, 0.59 ) }
    dend_10 { pt3dadd( -0.525003, 381.796, -127.418, 0.59 ) }
    dend_10 { pt3dadd( -0.53348, 382.305, -127.143, 0.29 ) }
    dend_10 { pt3dadd( -0.603927, 383.799, -126.472, 0.29 ) }
    dend_10 { pt3dadd( -0.641786, 384.597, -126.114, 0.29 ) }
    dend_10 { pt3dadd( -0.679412, 385.214, -125.852, 0.88 ) }
    dend_10 { pt3dadd( -0.714192, 385.748, -125.636, 0.88 ) }
    dend_10 { pt3dadd( -0.85251, 387.446, -125.016, 0.22 ) }
    dend_10 { pt3dadd( -1.00674, 389.394, -124.493, 0.22 ) }
    dend_10 { pt3dadd( -1.01437, 389.461, -124.47, 0.52 ) }
    dend_10 { pt3dadd( -1.0962, 389.887, -124.277, 0.37 ) }
    dend_10 { pt3dadd( -1.31383, 390.587, -123.824, 0.22 ) }
    dend_10 { pt3dadd( -1.62584, 391.237, -123.192, 0.22 ) }
    dend_10 { pt3dadd( -2.01944, 391.781, -122.471, 0.88 ) }
    dend_10 { pt3dadd( -3.35333, 393.264, -119.902, 0.15 ) }
    dend_10 { pt3dadd( -3.50271, 393.419, -119.603, 0.15 ) }
    dend_10 { pt3dadd( -4.10517, 393.967, -118.343, 0.15 ) }
    dend_10 { pt3dadd( -4.64857, 394.367, -117.172, 1.18 ) }
    dend_10 { pt3dadd( -4.95223, 394.554, -116.464, 1.18 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 56/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 59.0953, 412.32, -178.388, 0.22 ) }
    dend_20 { pt3dadd( 58.264, 412.951, -179.824, 0.22 ) }
    dend_20 { pt3dadd( 57.8181, 413.267, -180.472, 0.88 ) }
    dend_20 { pt3dadd( 57.4705, 413.507, -180.937, 0.88 ) }
    dend_20 { pt3dadd( 55.9072, 414.586, -183.027, 0.29 ) }
    dend_20 { pt3dadd( 55.5914, 414.804, -183.449, 1.03 ) }
    dend_20 { pt3dadd( 55.5511, 414.832, -183.503, 1.03 ) }
    dend_20 { pt3dadd( 54.8951, 415.158, -184.3, 1.25 ) }
    dend_20 { pt3dadd( 54.8513, 415.176, -184.352, 1.25 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 65/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 59.0953, 412.32, -178.388, 0.15 ) }
    dend_19 { pt3dadd( 59.6399, 412.983, -178.388, 0.15 ) }
    dend_19 { pt3dadd( 59.6848, 413.038, -178.388, 0.15 ) }
    dend_19 { pt3dadd( 59.8804, 413.276, -178.388, 1.03 ) }
    dend_19 { pt3dadd( 60.1632, 413.62, -178.388, 1.03 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 70/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 44.6946, 315.571, -139.584, 1.03 ) }
    dend_15 { pt3dadd( 44.5579, 316.0, -139.88, 1.03 ) }
    dend_15 { pt3dadd( 44.3467, 316.628, -140.312, 1.03 ) }
    dend_15 { pt3dadd( 43.835, 317.95, -141.142, 0.22 ) }
    dend_15 { pt3dadd( 43.2279, 319.432, -142.004, 0.22 ) }
    dend_15 { pt3dadd( 42.9111, 320.176, -142.417, 0.22 ) }
    dend_15 { pt3dadd( 42.5283, 321.032, -142.866, 0.22 ) }
    dend_15 { pt3dadd( 42.4404, 321.201, -142.949, 0.22 ) }
    dend_15 { pt3dadd( 41.7796, 322.306, -143.505, 0.22 ) }
    dend_15 { pt3dadd( 41.5622, 322.616, -143.642, 0.44 ) }
    dend_15 { pt3dadd( 41.5202, 322.667, -143.666, 0.44 ) }
    dend_15 { pt3dadd( 41.071, 323.133, -143.901, 0.44 ) }
    dend_15 { pt3dadd( 40.1134, 324.042, -144.303, 0.22 ) }
    dend_15 { pt3dadd( 39.4382, 324.617, -144.55, 0.29 ) }
    dend_15 { pt3dadd( 38.9342, 324.99, -144.729, 0.29 ) }
    dend_15 { pt3dadd( 38.4496, 325.302, -144.876, 0.22 ) }
    dend_15 { pt3dadd( 37.7026, 325.74, -145.069, 0.22 ) }
    dend_15 { pt3dadd( 37.2372, 325.975, -145.159, 0.74 ) }
    dend_15 { pt3dadd( 36.406, 326.343, -145.251, 0.74 ) }
    dend_15 { pt3dadd( 35.4986, 326.737, -145.31, 0.29 ) }
    dend_15 { pt3dadd( 34.6168, 327.115, -145.379, 0.29 ) }
    dend_15 { pt3dadd( 34.544, 327.148, -145.387, 0.29 ) }
    dend_15 { pt3dadd( 33.9055, 327.487, -145.491, 0.29 ) }
    dend_15 { pt3dadd( 33.6804, 327.614, -145.534, 0.29 ) }
    dend_15 { pt3dadd( 32.9634, 328.069, -145.667, 0.29 ) }
    dend_15 { pt3dadd( 32.9061, 328.113, -145.675, 0.29 ) }
    dend_15 { pt3dadd( 32.3881, 328.577, -145.786, 0.29 ) }
    dend_15 { pt3dadd( 31.8152, 329.174, -145.914, 1.11 ) }
    dend_15 { pt3dadd( 31.2658, 329.881, -146.038, 1.25 ) }
    dend_15 { pt3dadd( 30.9331, 330.354, -146.09, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_80()
}

proc basic_shape_80() {
    dend_15 { pt3dadd( 30.3104, 331.33, -146.123, 0.22 ) }
    dend_15 { pt3dadd( 29.9165, 331.975, -146.108, 0.22 ) }
    dend_15 { pt3dadd( 29.2755, 332.889, -146.03, 0.22 ) }
    dend_15 { pt3dadd( 28.515, 333.869, -145.92, 0.22 ) }
    dend_15 { pt3dadd( 28.0101, 334.493, -145.837, 0.88 ) }
    dend_15 { pt3dadd( 27.6004, 334.957, -145.764, 1.11 ) }
    dend_15 { pt3dadd( 27.5207, 335.037, -145.752, 0.22 ) }
    dend_15 { pt3dadd( 25.297, 337.286, -145.48, 0.22 ) }
    dend_15 { pt3dadd( 24.705, 337.902, -145.451, 0.81 ) }
    dend_15 { pt3dadd( 24.705, 337.902, -145.451, 0.81 ) }
    dend_15 { pt3dadd( 24.4868, 338.201, -145.475, 0.81 ) }
    dend_15 { pt3dadd( 24.1352, 338.827, -145.581, 0.22 ) }
    dend_15 { pt3dadd( 23.6756, 340.09, -145.919, 0.22 ) }
    dend_15 { pt3dadd( 23.5425, 341.011, -146.235, 0.22 ) }
    dend_15 { pt3dadd( 23.5343, 341.078, -146.257, 0.22 ) }
    dend_15 { pt3dadd( 23.3916, 342.173, -146.596, 0.22 ) }
    dend_15 { pt3dadd( 23.2479, 343.253, -146.914, 1.33 ) }
    dend_15 { pt3dadd( 23.0995, 344.329, -147.206, 1.47 ) }
    dend_15 { pt3dadd( 22.9006, 345.589, -147.547, 0.22 ) }
    dend_15 { pt3dadd( 22.644, 347.278, -147.966, 0.22 ) }
    dend_15 { pt3dadd( 22.5565, 347.89, -148.096, 0.22 ) }
    dend_15 { pt3dadd( 22.5386, 348.041, -148.118, 0.22 ) }
    dend_15 { pt3dadd( 22.4846, 348.626, -148.173, 0.22 ) }
    dend_15 { pt3dadd( 22.4764, 348.938, -148.203, 0.52 ) }
    dend_15 { pt3dadd( 22.4939, 349.52, -148.334, 0.52 ) }
    dend_15 { pt3dadd( 22.4986, 349.586, -148.356, 0.52 ) }
    dend_15 { pt3dadd( 22.5839, 350.544, -148.711, 0.52 ) }
    dend_15 { pt3dadd( 22.6694, 351.478, -149.065, 0.22 ) }
    dend_15 { pt3dadd( 22.836, 353.291, -149.858, 0.22 ) }
    dend_15 { pt3dadd( 22.9101, 354.127, -150.257, 0.44 ) }
    dend_15 { pt3dadd( 22.9134, 354.193, -150.288, 0.44 ) }
    dend_15 { pt3dadd( 22.9322, 355.061, -150.679, 0.44 ) }
    dend_15 { pt3dadd( 22.9018, 355.538, -150.856, 0.44 ) }
    dend_15 { pt3dadd( 22.79, 356.306, -151.115, 0.15 ) }
    dend_15 { pt3dadd( 22.7729, 356.371, -151.138, 0.15 ) }
    dend_15 { pt3dadd( 22.3426, 357.728, -151.578, 0.15 ) }
    dend_15 { pt3dadd( 22.318, 357.791, -151.599, 0.15 ) }
    dend_15 { pt3dadd( 21.6033, 359.256, -152.065, 0.15 ) }
    dend_15 { pt3dadd( 21.1422, 360.091, -152.441, 0.59 ) }
    dend_15 { pt3dadd( 20.7012, 360.773, -152.805, 0.59 ) }
    dend_15 { pt3dadd( 20.6622, 360.823, -152.837, 0.59 ) }
    dend_15 { pt3dadd( 20.2171, 361.267, -153.232, 0.59 ) }
    dend_15 { pt3dadd( 19.7506, 361.668, -153.634, 0.59 ) }
    dend_15 { pt3dadd( 18.2676, 362.718, -154.859, 0.15 ) }
    dend_15 { pt3dadd( 17.4572, 363.251, -155.47, 0.15 ) }
    dend_15 { pt3dadd( 16.7241, 363.705, -156.026, 0.15 ) }
    dend_15 { pt3dadd( 16.0361, 364.158, -156.504, 0.81 ) }
    dend_15 { pt3dadd( 15.4613, 364.574, -156.85, 1.18 ) }
    dend_15 { pt3dadd( 15.1376, 364.833, -156.996, 1.18 ) }
    dend_15 { pt3dadd( 15.0816, 364.89, -157.007, 1.18 ) }
    dend_15 { pt3dadd( 14.8528, 365.172, -157.042, 0.22 ) }
    dend_15 { pt3dadd( 14.1011, 366.301, -157.101, 0.22 ) }
    dend_15 { pt3dadd( 13.6788, 367.023, -157.12, 0.22 ) }
    dend_15 { pt3dadd( 13.6357, 367.107, -157.123, 0.22 ) }
    dend_15 { pt3dadd( 12.9399, 368.582, -157.2, 0.22 ) }
    dend_15 { pt3dadd( 12.8762, 368.72, -157.211, 0.22 ) }
    dend_15 { pt3dadd( 12.3441, 369.873, -157.317, 0.22 ) }
    dend_15 { pt3dadd( 12.069, 370.488, -157.385, 1.03 ) }
    dend_15 { pt3dadd( 11.7505, 371.207, -157.467, 1.47 ) }
    dend_15 { pt3dadd( 11.6067, 371.536, -157.505, 1.47 ) }
    dend_15 { pt3dadd( 11.3614, 372.095, -157.57, 0.15 ) }
    dend_15 { pt3dadd( 10.8851, 373.12, -157.678, 0.15 ) }
    dend_15 { pt3dadd( 10.7878, 373.313, -157.696, 0.15 ) }
    dend_15 { pt3dadd( 10.246, 374.289, -157.786, 0.15 ) }
    dend_15 { pt3dadd( 10.1412, 374.471, -157.809, 0.66 ) }
    dend_15 { pt3dadd( 10.0644, 374.602, -157.827, 0.66 ) }
    dend_15 { pt3dadd( 9.74589, 375.147, -157.909, 0.66 ) }
    dend_15 { pt3dadd( 9.71096, 375.206, -157.924, 0.66 ) }
    dend_15 { pt3dadd( 9.37716, 375.759, -158.101, 0.15 ) }
    dend_15 { pt3dadd( 8.94231, 376.456, -158.38, 0.15 ) }
    dend_15 { pt3dadd( 8.86394, 376.58, -158.446, 0.15 ) }
    dend_15 { pt3dadd( 8.61909, 377.038, -158.693, 0.15 ) }
    dend_15 { pt3dadd( 8.4107, 377.49, -158.953, 0.29 ) }
    dend_15 { pt3dadd( 8.38245, 377.557, -158.991, 0.29 ) }
    dend_15 { pt3dadd( 8.3353, 377.692, -159.059, 0.29 ) }
    dend_15 { pt3dadd( 8.02723, 378.715, -159.571, 0.15 ) }
    dend_15 { pt3dadd( 7.77421, 379.679, -159.938, 0.15 ) }
    dend_15 { pt3dadd( 7.58957, 380.442, -160.171, 0.15 ) }
    dend_15 { pt3dadd( 7.50806, 380.794, -160.254, 0.88 ) }
    dend_15 { pt3dadd( 7.36691, 381.427, -160.38, 0.88 ) }
    dend_15 { pt3dadd( 7.21845, 382.084, -160.478, 0.15 ) }
    dend_15 { pt3dadd( 6.76008, 384.146, -160.651, 0.15 ) }
    dend_15 { pt3dadd( 6.67808, 384.465, -160.681, 0.44 ) }
    dend_15 { pt3dadd( 6.56519, 384.832, -160.717, 0.59 ) }
    dend_15 { pt3dadd( 6.54039, 384.897, -160.725, 0.59 ) }
    dend_15 { pt3dadd( 6.32812, 385.369, -160.799, 0.59 ) }
    dend_15 { pt3dadd( 6.29222, 385.44, -160.812, 0.59 ) }
    dend_15 { pt3dadd( 5.8897, 386.164, -160.952, 0.15 ) }
    dend_15 { pt3dadd( 5.16367, 387.493, -161.166, 0.15 ) }
    dend_15 { pt3dadd( 4.9804, 387.868, -161.202, 0.44 ) }
    dend_15 { pt3dadd( 4.95206, 387.933, -161.204, 0.44 ) }
    dend_15 { pt3dadd( 4.6673, 388.67, -161.195, 0.44 ) }
    dend_15 { pt3dadd( 4.48535, 389.164, -161.191, 0.15 ) }
    dend_15 { pt3dadd( 4.4611, 389.23, -161.197, 0.15 ) }
    dend_15 { pt3dadd( 3.99723, 390.473, -161.487, 0.15 ) }
    dend_15 { pt3dadd( 3.97447, 390.539, -161.502, 0.15 ) }
    dend_15 { pt3dadd( 3.50004, 391.907, -161.794, 0.15 ) }
    dend_15 { pt3dadd( 3.24916, 392.616, -161.947, 0.88 ) }
    dend_15 { pt3dadd( 2.71927, 394.115, -162.237, 1.4 ) }
    dend_15 { pt3dadd( 2.62118, 394.396, -162.281, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_81()
}

proc basic_shape_81() {
    dend_15 { pt3dadd( 2.17051, 395.699, -162.445, 0.22 ) }
    dend_15 { pt3dadd( 1.66496, 397.21, -162.576, 0.22 ) }
    dend_15 { pt3dadd( 1.6403, 397.288, -162.579, 0.22 ) }
    dend_15 { pt3dadd( 1.17323, 398.841, -162.692, 0.22 ) }
    dend_15 { pt3dadd( 1.00392, 399.421, -162.758, 0.96 ) }
    dend_15 { pt3dadd( 0.815579, 400.142, -162.93, 1.25 ) }
    dend_15 { pt3dadd( 0.667951, 400.752, -163.129, 1.25 ) }
    dend_15 { pt3dadd( 0.654226, 400.818, -163.15, 1.25 ) }
    dend_15 { pt3dadd( 0.233456, 402.985, -163.845, 0.15 ) }
    dend_15 { pt3dadd( 0.220917, 403.053, -163.867, 0.15 ) }
    dend_15 { pt3dadd( -0.561344, 407.296, -165.235, 0.15 ) }
    dend_15 { pt3dadd( -0.587575, 407.439, -165.278, 0.15 ) }
    dend_15 { pt3dadd( -0.984122, 409.597, -165.858, 0.15 ) }
    dend_15 { pt3dadd( -1.15074, 410.468, -166.068, 0.96 ) }
    dend_15 { pt3dadd( -1.16548, 410.536, -166.079, 0.96 ) }
    dend_15 { pt3dadd( -1.24168, 410.836, -166.143, 1.25 ) }
    dend_15 { pt3dadd( -1.27734, 410.958, -166.177, 1.25 ) }
    dend_15 { pt3dadd( -1.38201, 411.305, -166.271, 1.25 ) }
    dend_15 { pt3dadd( -1.66805, 412.227, -166.507, 0.15 ) }
    dend_15 { pt3dadd( -2.75207, 415.878, -167.288, 0.15 ) }
    dend_15 { pt3dadd( -3.2809, 417.715, -167.654, 0.15 ) }
    dend_15 { pt3dadd( -3.32211, 417.86, -167.681, 0.74 ) }
    dend_15 { pt3dadd( -3.50984, 418.524, -167.792, 0.74 ) }
    dend_15 { pt3dadd( -3.64903, 419.015, -167.862, 0.74 ) }
    dend_15 { pt3dadd( -4.16531, 420.844, -168.03, 0.15 ) }
    dend_15 { pt3dadd( -4.2774, 421.228, -168.053, 0.74 ) }
    dend_15 { pt3dadd( -4.33415, 421.411, -168.052, 0.74 ) }
    dend_15 { pt3dadd( -4.57977, 422.065, -168.036, 0.74 ) }
    dend_15 { pt3dadd( -4.70825, 422.367, -168.023, 0.74 ) }
    dend_15 { pt3dadd( -4.99677, 423.021, -167.99, 0.74 ) }
    dend_15 { pt3dadd( -5.27145, 423.613, -167.956, 0.15 ) }
    dend_15 { pt3dadd( -5.29886, 423.677, -167.952, 0.15 ) }
    dend_15 { pt3dadd( -6.04821, 425.617, -167.896, 0.15 ) }
    dend_15 { pt3dadd( -6.10175, 425.762, -167.89, 0.15 ) }
    dend_15 { pt3dadd( -6.73028, 427.578, -167.805, 0.15 ) }
    dend_15 { pt3dadd( -6.97422, 428.331, -167.769, 0.74 ) }
    dend_15 { pt3dadd( -7.1891, 429.037, -167.738, 0.74 ) }
    dend_15 { pt3dadd( -7.30935, 429.458, -167.717, 0.74 ) }
    dend_15 { pt3dadd( -7.51558, 430.227, -167.668, 0.15 ) }
    dend_15 { pt3dadd( -8.11007, 432.431, -167.519, 0.15 ) }
    dend_15 { pt3dadd( -8.23994, 432.888, -167.484, 0.74 ) }
    dend_15 { pt3dadd( -8.40466, 433.466, -167.443, 0.74 ) }
    dend_15 { pt3dadd( -8.54735, 433.981, -167.425, 0.74 ) }
    dend_15 { pt3dadd( -8.72068, 434.684, -167.422, 0.15 ) }
    dend_15 { pt3dadd( -8.92342, 435.698, -167.477, 0.15 ) }
    dend_15 { pt3dadd( -8.95129, 435.861, -167.489, 0.15 ) }
    dend_15 { pt3dadd( -9.18787, 437.044, -167.57, 0.15 ) }
    dend_15 { pt3dadd( -9.3722, 437.851, -167.624, 1.18 ) }
    dend_15 { pt3dadd( -9.51996, 438.422, -167.66, 1.62 ) }
    dend_15 { pt3dadd( -9.71982, 439.121, -167.7, 1.62 ) }
    dend_15 { pt3dadd( -10.0778, 440.143, -167.743, 0.15 ) }
    dend_15 { pt3dadd( -10.6722, 441.601, -167.73, 0.15 ) }
    dend_15 { pt3dadd( -10.8511, 441.977, -167.709, 0.15 ) }
    dend_15 { pt3dadd( -11.0746, 442.405, -167.671, 0.15 ) }
    dend_15 { pt3dadd( -11.1503, 442.543, -167.652, 0.15 ) }
    dend_15 { pt3dadd( -11.9391, 443.951, -167.406, 0.15 ) }
    dend_15 { pt3dadd( -12.8877, 445.624, -167.065, 0.15 ) }
    dend_15 { pt3dadd( -13.6619, 446.997, -166.691, 0.15 ) }
    dend_15 { pt3dadd( -13.6941, 447.057, -166.673, 0.15 ) }
    dend_15 { pt3dadd( -14.1583, 447.971, -166.374, 0.15 ) }
    dend_15 { pt3dadd( -14.4778, 448.691, -166.155, 1.69 ) }
    dend_15 { pt3dadd( -14.821, 449.587, -165.897, 1.69 ) }
    dend_15 { pt3dadd( -15.1512, 450.598, -165.651, 0.15 ) }
    dend_15 { pt3dadd( -15.5946, 452.108, -165.333, 0.15 ) }
    dend_15 { pt3dadd( -15.6125, 452.175, -165.322, 0.15 ) }
    dend_15 { pt3dadd( -16.2256, 455.036, -164.876, 0.15 ) }
    dend_15 { pt3dadd( -16.3072, 455.499, -164.803, 0.15 ) }
    dend_15 { pt3dadd( -16.4156, 456.262, -164.695, 0.15 ) }
    dend_15 { pt3dadd( -16.4837, 456.831, -164.628, 1.18 ) }
    dend_15 { pt3dadd( -16.5696, 457.69, -164.513, 1.18 ) }
    dend_15 { pt3dadd( -16.7638, 459.853, -164.199, 0.15 ) }
    dend_15 { pt3dadd( -16.8788, 461.21, -163.923, 0.15 ) }
    dend_15 { pt3dadd( -16.9295, 461.736, -163.803, 1.18 ) }
    dend_15 { pt3dadd( -16.9616, 461.944, -163.756, 1.18 ) }
    dend_15 { pt3dadd( -17.1346, 462.721, -163.562, 1.18 ) }
    dend_15 { pt3dadd( -17.1682, 462.829, -163.533, 1.18 ) }
    dend_15 { pt3dadd( -17.72, 464.24, -163.101, 0.15 ) }
    dend_15 { pt3dadd( -17.7468, 464.302, -163.079, 0.15 ) }
    dend_15 { pt3dadd( -18.7896, 466.557, -162.185, 0.15 ) }
    dend_15 { pt3dadd( -19.1953, 467.398, -161.847, 0.52 ) }
    dend_15 { pt3dadd( -19.4874, 467.954, -161.617, 0.52 ) }
    dend_15 { pt3dadd( -19.8797, 468.655, -161.331, 0.52 ) }
    dend_15 { pt3dadd( -20.1412, 469.07, -161.175, 0.96 ) }
    dend_15 { pt3dadd( -20.4531, 469.53, -161.017, 0.96 ) }
    dend_15 { pt3dadd( -20.5293, 469.645, -160.992, 0.96 ) }
    dend_15 { pt3dadd( -20.7959, 470.1, -160.973, 0.96 ) }
    dend_15 { pt3dadd( -20.8294, 470.162, -160.975, 0.96 ) }
    dend_15 { pt3dadd( -21.1316, 470.761, -161.023, 0.15 ) }
    dend_15 { pt3dadd( -21.8129, 472.18, -161.145, 0.15 ) }
    dend_15 { pt3dadd( -22.5937, 473.87, -161.285, 0.15 ) }
    dend_15 { pt3dadd( -22.8886, 474.537, -161.357, 1.11 ) }
    dend_15 { pt3dadd( -23.1534, 475.16, -161.435, 1.47 ) }
    dend_15 { pt3dadd( -23.4239, 475.794, -161.525, 1.47 ) }
    dend_15 { pt3dadd( -23.5819, 476.178, -161.586, 0.15 ) }
    dend_15 { pt3dadd( -24.209, 477.733, -161.839, 0.15 ) }
    dend_15 { pt3dadd( -24.438, 478.32, -161.928, 0.52 ) }
    dend_15 { pt3dadd( -24.4611, 478.385, -161.935, 0.52 ) }
    dend_15 { pt3dadd( -24.6152, 478.898, -161.985, 0.52 ) }
    dend_15 { pt3dadd( -24.7909, 479.612, -162.076, 0.15 ) }
    dend_15 { pt3dadd( -25.0695, 481.019, -162.28, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_82()
}

proc basic_shape_82() {
    dend_15 { pt3dadd( -25.0764, 481.089, -162.289, 0.15 ) }
    dend_15 { pt3dadd( -25.1128, 481.757, -162.341, 0.88 ) }
    dend_15 { pt3dadd( -25.1414, 482.669, -162.4, 1.25 ) }
    dend_15 { pt3dadd( -25.1609, 483.664, -162.456, 0.15 ) }
    dend_15 { pt3dadd( -25.1621, 483.737, -162.46, 0.15 ) }
    dend_15 { pt3dadd( -25.2978, 486.816, -162.603, 0.15 ) }
    dend_15 { pt3dadd( -25.4031, 488.368, -162.663, 0.15 ) }
    dend_15 { pt3dadd( -25.4501, 488.921, -162.679, 0.74 ) }
    dend_15 { pt3dadd( -25.5176, 489.573, -162.686, 0.74 ) }
    dend_15 { pt3dadd( -25.565, 489.942, -162.681, 0.15 ) }
    dend_15 { pt3dadd( -26.058, 492.956, -162.576, 0.15 ) }
    dend_15 { pt3dadd( -26.0744, 493.024, -162.572, 0.15 ) }
    dend_15 { pt3dadd( -26.1053, 493.128, -162.564, 0.44 ) }
    dend_15 { pt3dadd( -26.1442, 493.25, -162.55, 0.15 ) }
    dend_15 { pt3dadd( -26.1758, 493.342, -162.53, 0.15 ) }
    dend_15 { pt3dadd( -26.6238, 494.563, -162.142, 0.15 ) }
    dend_15 { pt3dadd( -26.6824, 494.707, -162.08, 0.15 ) }
    dend_15 { pt3dadd( -27.3287, 496.288, -161.398, 0.15 ) }
    dend_15 { pt3dadd( -27.35, 496.34, -161.376, 0.15 ) }
    dend_15 { pt3dadd( -27.737, 497.264, -160.991, 0.59 ) }
    dend_15 { pt3dadd( -27.9198, 497.686, -160.82, 0.74 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 21/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 44.6946, 315.571, -139.584, 0.22 ) }
    dend_14 { pt3dadd( 45.9397, 315.272, -139.698, 0.22 ) }
    dend_14 { pt3dadd( 46.0879, 315.237, -139.712, 0.22 ) }
    dend_14 { pt3dadd( 46.9423, 315.032, -139.79, 0.22 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 25/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -4.95223, 394.554, -116.464, 0.15 ) }
    dend_12 { pt3dadd( -6.27255, 395.492, -113.5, 0.15 ) }
    dend_12 { pt3dadd( -7.16161, 396.138, -111.594, 0.15 ) }
    dend_12 { pt3dadd( -7.18731, 396.158, -111.544, 0.15 ) }
    dend_12 { pt3dadd( -7.88605, 396.738, -110.226, 0.74 ) }
    dend_12 { pt3dadd( -8.09992, 396.928, -109.833, 0.74 ) }
    dend_12 { pt3dadd( -8.82682, 397.597, -108.569, 0.44 ) }
    dend_12 { pt3dadd( -9.00653, 397.785, -108.329, 0.22 ) }
    dend_12 { pt3dadd( -9.5006, 398.338, -107.758, 0.22 ) }
    dend_12 { pt3dadd( -9.95328, 398.859, -107.282, 1.03 ) }
    dend_12 { pt3dadd( -10.2742, 399.224, -107.059, 0.88 ) }
    dend_12 { pt3dadd( -10.7149, 399.717, -106.825, 0.88 ) }
    dend_12 { pt3dadd( -11.0115, 400.042, -106.718, 0.22 ) }
    dend_12 { pt3dadd( -11.5086, 400.561, -106.567, 0.22 ) }
    dend_12 { pt3dadd( -11.5776, 400.631, -106.548, 0.22 ) }
    dend_12 { pt3dadd( -13.3608, 402.417, -106.189, 0.22 ) }
    dend_12 { pt3dadd( -13.495, 402.553, -106.165, 0.44 ) }
    dend_12 { pt3dadd( -13.5527, 402.611, -106.155, 0.44 ) }
    dend_12 { pt3dadd( -14.0391, 403.101, -106.084, 0.44 ) }
    dend_12 { pt3dadd( -14.6349, 403.695, -106.015, 0.22 ) }
    dend_12 { pt3dadd( -15.4042, 404.414, -105.936, 0.22 ) }
    dend_12 { pt3dadd( -15.5995, 404.586, -105.909, 0.22 ) }
    dend_12 { pt3dadd( -16.6306, 405.447, -105.754, 0.22 ) }
    dend_12 { pt3dadd( -16.7482, 405.537, -105.736, 0.22 ) }
    dend_12 { pt3dadd( -17.4257, 406.006, -105.641, 0.22 ) }
    dend_12 { pt3dadd( -18.6247, 406.762, -105.399, 0.22 ) }
    dend_12 { pt3dadd( -19.3109, 407.179, -105.208, 0.74 ) }
    dend_12 { pt3dadd( -19.7583, 407.467, -105.06, 1.18 ) }
    dend_12 { pt3dadd( -20.4774, 407.994, -104.726, 1.18 ) }
    dend_12 { pt3dadd( -20.5588, 408.06, -104.681, 1.18 ) }
    dend_12 { pt3dadd( -21.5244, 409.067, -104.096, 0.22 ) }
    dend_12 { pt3dadd( -21.9282, 409.606, -103.815, 0.22 ) }
    dend_12 { pt3dadd( -22.4546, 410.412, -103.447, 0.22 ) }
    dend_12 { pt3dadd( -23.3116, 411.887, -102.756, 0.22 ) }
    dend_12 { pt3dadd( -23.3567, 411.976, -102.714, 0.22 ) }
    dend_12 { pt3dadd( -24.2977, 413.982, -101.818, 0.22 ) }
    dend_12 { pt3dadd( -24.7587, 415.062, -101.387, 1.11 ) }
    dend_12 { pt3dadd( -24.9899, 415.646, -101.157, 1.62 ) }
    dend_12 { pt3dadd( -25.4088, 416.788, -100.728, 1.62 ) }
    dend_12 { pt3dadd( -25.736, 417.769, -100.401, 0.44 ) }
    dend_12 { pt3dadd( -26.0037, 418.647, -100.127, 0.44 ) }
    dend_12 { pt3dadd( -26.2018, 419.414, -99.8759, 0.22 ) }
    dend_12 { pt3dadd( -26.3334, 419.989, -99.7052, 0.59 ) }
    dend_12 { pt3dadd( -26.3997, 420.303, -99.6196, 0.59 ) }
    dend_12 { pt3dadd( -26.5139, 420.886, -99.4324, 0.15 ) }
    dend_12 { pt3dadd( -26.7586, 422.148, -98.9596, 0.15 ) }
    dend_12 { pt3dadd( -26.9691, 423.249, -98.5058, 0.22 ) }
    dend_12 { pt3dadd( -27.069, 423.747, -98.2828, 1.33 ) }
    dend_12 { pt3dadd( -27.2255, 424.491, -97.9442, 1.69 ) }
    dend_12 { pt3dadd( -27.5818, 426.114, -97.195, 0.22 ) }
    dend_12 { pt3dadd( -27.8669, 427.326, -96.5909, 0.22 ) }
    dend_12 { pt3dadd( -28.0671, 428.191, -96.1608, 0.22 ) }
    dend_12 { pt3dadd( -28.2241, 428.921, -95.8186, 0.74 ) }
    dend_12 { pt3dadd( -28.3849, 429.774, -95.4295, 0.74 ) }
    dend_12 { pt3dadd( -28.4011, 429.883, -95.3831, 0.74 ) }
    dend_12 { pt3dadd( -28.5879, 431.506, -94.6651, 0.22 ) }
    dend_12 { pt3dadd( -28.7099, 432.511, -93.9297, 0.22 ) }
    dend_12 { pt3dadd( -28.7722, 432.921, -93.5276, 0.88 ) }
    dend_12 { pt3dadd( -28.8488, 433.306, -93.0862, 0.96 ) }
    dend_12 { pt3dadd( -28.9553, 433.731, -92.4924, 0.96 ) }
    dend_12 { pt3dadd( -29.285, 434.817, -90.7394, 0.22 ) }
    dend_12 { pt3dadd( -29.8353, 436.275, -88.0343, 0.15 ) }
    dend_12 { pt3dadd( -29.9898, 436.658, -87.3083, 0.52 ) }
    dend_12 { pt3dadd( -30.0733, 436.861, -86.9334, 0.52 ) }
    dend_12 { pt3dadd( -30.3077, 437.414, -85.9027, 0.88 ) }
    dend_12 { pt3dadd( -30.3254, 437.449, -85.8306, 0.88 ) }
    dend_12 { pt3dadd( -30.2566, 438.991, -86.2069, 0.22 ) }
    dend_12 { pt3dadd( -30.1171, 440.729, -87.1174, 0.22 ) }
    dend_12 { pt3dadd( -30.1112, 440.798, -87.1587, 0.22 ) }
    dend_12 { pt3dadd( -30.0971, 440.936, -87.2498, 0.52 ) }
    dend_12 { pt3dadd( -30.016, 441.784, -87.8586, 0.22 ) }
    dend_12 { pt3dadd( -29.9217, 442.934, -88.6299, 0.22 ) }
    dend_12 { pt3dadd( -29.8934, 443.619, -89.0088, 0.81 ) }
    dend_12 { pt3dadd( -29.9283, 444.008, -89.3371, 0.81 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 99/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -4.95223, 394.554, -116.464, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_83()
}

proc basic_shape_83() {
    dend_11 { pt3dadd( -5.58409, 393.152, -118.646, 0.15 ) }
    dend_11 { pt3dadd( -5.76404, 392.753, -119.268, 0.81 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_2 = new SectionList()
    dend_155 ModelViewParmSubset_2.append()
    dend_84 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_127 ModelViewParmSubset_2.append()
    dend_85 ModelViewParmSubset_2.append()
    dend_81 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_129 ModelViewParmSubset_2.append()
    dend_128 ModelViewParmSubset_2.append()
    dend_114 ModelViewParmSubset_2.append()
    dend_86 ModelViewParmSubset_2.append()
    dend_83 ModelViewParmSubset_2.append()
    dend_82 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_131 ModelViewParmSubset_2.append()
    dend_130 ModelViewParmSubset_2.append()
    dend_116 ModelViewParmSubset_2.append()
    dend_115 ModelViewParmSubset_2.append()
    dend_93 ModelViewParmSubset_2.append()
    dend_87 ModelViewParmSubset_2.append()
    dend_74 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_132 ModelViewParmSubset_2.append()
    dend_118 ModelViewParmSubset_2.append()
    dend_117 ModelViewParmSubset_2.append()
    dend_101 ModelViewParmSubset_2.append()
    dend_94 ModelViewParmSubset_2.append()
    dend_89 ModelViewParmSubset_2.append()
    dend_88 ModelViewParmSubset_2.append()
    dend_76 ModelViewParmSubset_2.append()
    dend_75 ModelViewParmSubset_2.append()
    dend_71 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_144 ModelViewParmSubset_2.append()
    dend_133 ModelViewParmSubset_2.append()
    dend_120 ModelViewParmSubset_2.append()
    dend_119 ModelViewParmSubset_2.append()
    dend_103 ModelViewParmSubset_2.append()
    dend_102 ModelViewParmSubset_2.append()
    dend_96 ModelViewParmSubset_2.append()
    dend_95 ModelViewParmSubset_2.append()
    dend_92 ModelViewParmSubset_2.append()
    dend_91 ModelViewParmSubset_2.append()
    dend_90 ModelViewParmSubset_2.append()
    dend_80 ModelViewParmSubset_2.append()
    dend_77 ModelViewParmSubset_2.append()
    dend_73 ModelViewParmSubset_2.append()
    dend_72 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_146 ModelViewParmSubset_2.append()
    dend_145 ModelViewParmSubset_2.append()
    dend_141 ModelViewParmSubset_2.append()
    dend_134 ModelViewParmSubset_2.append()
    dend_126 ModelViewParmSubset_2.append()
    dend_121 ModelViewParmSubset_2.append()
    dend_113 ModelViewParmSubset_2.append()
    dend_104 ModelViewParmSubset_2.append()
    dend_100 ModelViewParmSubset_2.append()
    dend_97 ModelViewParmSubset_2.append()
    dend_79 ModelViewParmSubset_2.append()
    dend_78 ModelViewParmSubset_2.append()
    dend_70 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_148 ModelViewParmSubset_2.append()
    dend_147 ModelViewParmSubset_2.append()
    dend_143 ModelViewParmSubset_2.append()
    dend_142 ModelViewParmSubset_2.append()
    dend_140 ModelViewParmSubset_2.append()
    dend_135 ModelViewParmSubset_2.append()
    dend_125 ModelViewParmSubset_2.append()
    dend_122 ModelViewParmSubset_2.append()
    dend_106 ModelViewParmSubset_2.append()
    dend_105 ModelViewParmSubset_2.append()
    dend_99 ModelViewParmSubset_2.append()
    dend_98 ModelViewParmSubset_2.append()
    dend_67 ModelViewParmSubset_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_66 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_150 ModelViewParmSubset_2.append()
    dend_149 ModelViewParmSubset_2.append()
    dend_137 ModelViewParmSubset_2.append()
    dend_136 ModelViewParmSubset_2.append()
    dend_124 ModelViewParmSubset_2.append()
    dend_123 ModelViewParmSubset_2.append()
    dend_108 ModelViewParmSubset_2.append()
    dend_107 ModelViewParmSubset_2.append()
    dend_69 ModelViewParmSubset_2.append()
    dend_68 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_154 ModelViewParmSubset_2.append()
    dend_151 ModelViewParmSubset_2.append()
    dend_139 ModelViewParmSubset_2.append()
    dend_138 ModelViewParmSubset_2.append()
    dend_112 ModelViewParmSubset_2.append()
    dend_109 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_153 ModelViewParmSubset_2.append()
    dend_152 ModelViewParmSubset_2.append()
    dend_111 ModelViewParmSubset_2.append()
    dend_110 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_155, dend_84, dend_0, dend_127, dend_85, dend_81, dend_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_155 ModelViewParmSubset_4.append()
    dend_84 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_127 ModelViewParmSubset_4.append()
    dend_85 ModelViewParmSubset_4.append()
    dend_81 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_129 ModelViewParmSubset_4.append()
    dend_128 ModelViewParmSubset_4.append()
    dend_114 ModelViewParmSubset_4.append()
    dend_86 ModelViewParmSubset_4.append()
    dend_83 ModelViewParmSubset_4.append()
    dend_82 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_131 ModelViewParmSubset_4.append()
    dend_130 ModelViewParmSubset_4.append()
    dend_116 ModelViewParmSubset_4.append()
    dend_115 ModelViewParmSubset_4.append()
    dend_93 ModelViewParmSubset_4.append()
    dend_87 ModelViewParmSubset_4.append()
    dend_74 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_132 ModelViewParmSubset_4.append()
    dend_118 ModelViewParmSubset_4.append()
    dend_117 ModelViewParmSubset_4.append()
    dend_101 ModelViewParmSubset_4.append()
    dend_94 ModelViewParmSubset_4.append()
    dend_89 ModelViewParmSubset_4.append()
    dend_88 ModelViewParmSubset_4.append()
    dend_76 ModelViewParmSubset_4.append()
    dend_75 ModelViewParmSubset_4.append()
    dend_71 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_49 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_144 ModelViewParmSubset_4.append()
    dend_133 ModelViewParmSubset_4.append()
    dend_120 ModelViewParmSubset_4.append()
    dend_119 ModelViewParmSubset_4.append()
    dend_103 ModelViewParmSubset_4.append()
    dend_102 ModelViewParmSubset_4.append()
    dend_96 ModelViewParmSubset_4.append()
    dend_95 ModelViewParmSubset_4.append()
    dend_92 ModelViewParmSubset_4.append()
    dend_91 ModelViewParmSubset_4.append()
    dend_90 ModelViewParmSubset_4.append()
    dend_80 ModelViewParmSubset_4.append()
    dend_77 ModelViewParmSubset_4.append()
    dend_73 ModelViewParmSubset_4.append()
    dend_72 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_146 ModelViewParmSubset_4.append()
    dend_145 ModelViewParmSubset_4.append()
    dend_141 ModelViewParmSubset_4.append()
    dend_134 ModelViewParmSubset_4.append()
    dend_126 ModelViewParmSubset_4.append()
    dend_121 ModelViewParmSubset_4.append()
    dend_113 ModelViewParmSubset_4.append()
    dend_104 ModelViewParmSubset_4.append()
    dend_100 ModelViewParmSubset_4.append()
    dend_97 ModelViewParmSubset_4.append()
    dend_79 ModelViewParmSubset_4.append()
    dend_78 ModelViewParmSubset_4.append()
    dend_70 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_148 ModelViewParmSubset_4.append()
    dend_147 ModelViewParmSubset_4.append()
    dend_143 ModelViewParmSubset_4.append()
    dend_142 ModelViewParmSubset_4.append()
    dend_140 ModelViewParmSubset_4.append()
    dend_135 ModelViewParmSubset_4.append()
    dend_125 ModelViewParmSubset_4.append()
    dend_122 ModelViewParmSubset_4.append()
    dend_106 ModelViewParmSubset_4.append()
    dend_105 ModelViewParmSubset_4.append()
    dend_99 ModelViewParmSubset_4.append()
    dend_98 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_150 ModelViewParmSubset_4.append()
    dend_149 ModelViewParmSubset_4.append()
    dend_137 ModelViewParmSubset_4.append()
    dend_136 ModelViewParmSubset_4.append()
    dend_124 ModelViewParmSubset_4.append()
    dend_123 ModelViewParmSubset_4.append()
    dend_108 ModelViewParmSubset_4.append()
    dend_107 ModelViewParmSubset_4.append()
    dend_69 ModelViewParmSubset_4.append()
    dend_68 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_154 ModelViewParmSubset_4.append()
    dend_151 ModelViewParmSubset_4.append()
    dend_139 ModelViewParmSubset_4.append()
    dend_138 ModelViewParmSubset_4.append()
    dend_112 ModelViewParmSubset_4.append()
    dend_109 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_153 ModelViewParmSubset_4.append()
    dend_152 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_111 ModelViewParmSubset_4.append()
    dend_110 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_155, dend_84, dend_0, axon_0, dend_127, dend_85, dend_81, dend_1, axon_1, dend_129, dend_128, dend_114, dend_86, dend_83, dend_82, dend_58, dend_2, dend_131, dend_130, dend_116, dend_115, dend_93, dend_87, dend_74, dend_59, dend_50, dend_3, dend_132, dend_118, dend_117, dend_101, dend_94, dend_89, dend_88, dend_76, dend_75, dend_71, dend_60, dend_52, dend_51, dend_49, dend_4, dend_144, dend_133, dend_120, dend_119, dend_103, dend_102, dend_96, dend_95, dend_92, dend_91, dend_90, dend_80, dend_77, dend_73, dend_72, dend_64, dend_61, dend_54, dend_53, dend_32, dend_5, dend_146, dend_145, dend_141, dend_134, dend_126, dend_121, dend_113, dend_104, dend_100, dend_97, dend_79, dend_78, dend_70, dend_65, dend_63, dend_62, dend_57, dend_56, dend_55, dend_34, dend_33, dend_27, dend_6, dend_148, dend_147, dend_143, dend_142, dend_140, dend_135, dend_125, dend_122, dend_106, dend_105, dend_99, dend_98, dend_67, dend_66, dend_38, dend_35, dend_29, dend_28, dend_26, dend_7, dend_150, dend_149, dend_137, dend_136, dend_124, dend_123, dend_108, dend_107, dend_69, dend_68, dend_44, dend_39, dend_37, dend_36, dend_31, dend_30, dend_21, dend_8, dend_154, dend_151, dend_139, dend_138, dend_112, dend_109, dend_46, dend_45, dend_41, dend_40, dend_25, dend_22, dend_16, dend_9, dend_153, dend_152, dend_111, dend_110, dend_48, dend_47, dend_43, dend_42, dend_24, dend_23, dend_18, dend_17, dend_13, dend_10, dend_20, dend_19, dend_15, dend_14, dend_12, dend_11]}
    ModelViewParmSubset_5 = new SectionList()
    dend_155 ModelViewParmSubset_5.append()
    dend_84 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_127 ModelViewParmSubset_5.append()
    dend_85 ModelViewParmSubset_5.append()
    dend_81 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_129 ModelViewParmSubset_5.append()
    dend_128 ModelViewParmSubset_5.append()
    dend_114 ModelViewParmSubset_5.append()
    dend_86 ModelViewParmSubset_5.append()
    dend_83 ModelViewParmSubset_5.append()
    dend_82 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_131 ModelViewParmSubset_5.append()
    dend_130 ModelViewParmSubset_5.append()
    dend_116 ModelViewParmSubset_5.append()
    dend_115 ModelViewParmSubset_5.append()
    dend_93 ModelViewParmSubset_5.append()
    dend_87 ModelViewParmSubset_5.append()
    dend_74 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_132 ModelViewParmSubset_5.append()
    dend_118 ModelViewParmSubset_5.append()
    dend_117 ModelViewParmSubset_5.append()
    dend_101 ModelViewParmSubset_5.append()
    dend_94 ModelViewParmSubset_5.append()
    dend_89 ModelViewParmSubset_5.append()
    dend_88 ModelViewParmSubset_5.append()
    dend_76 ModelViewParmSubset_5.append()
    dend_75 ModelViewParmSubset_5.append()
    dend_71 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_144 ModelViewParmSubset_5.append()
    dend_133 ModelViewParmSubset_5.append()
    dend_120 ModelViewParmSubset_5.append()
    dend_119 ModelViewParmSubset_5.append()
    dend_103 ModelViewParmSubset_5.append()
    dend_102 ModelViewParmSubset_5.append()
    dend_96 ModelViewParmSubset_5.append()
    dend_95 ModelViewParmSubset_5.append()
    dend_92 ModelViewParmSubset_5.append()
    dend_91 ModelViewParmSubset_5.append()
    dend_90 ModelViewParmSubset_5.append()
    dend_80 ModelViewParmSubset_5.append()
    dend_77 ModelViewParmSubset_5.append()
    dend_73 ModelViewParmSubset_5.append()
    dend_72 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_146 ModelViewParmSubset_5.append()
    dend_145 ModelViewParmSubset_5.append()
    dend_141 ModelViewParmSubset_5.append()
    dend_134 ModelViewParmSubset_5.append()
    dend_126 ModelViewParmSubset_5.append()
    dend_121 ModelViewParmSubset_5.append()
    dend_113 ModelViewParmSubset_5.append()
    dend_104 ModelViewParmSubset_5.append()
    dend_100 ModelViewParmSubset_5.append()
    dend_97 ModelViewParmSubset_5.append()
    dend_79 ModelViewParmSubset_5.append()
    dend_78 ModelViewParmSubset_5.append()
    dend_70 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_148 ModelViewParmSubset_5.append()
    dend_147 ModelViewParmSubset_5.append()
    dend_143 ModelViewParmSubset_5.append()
    dend_142 ModelViewParmSubset_5.append()
    dend_140 ModelViewParmSubset_5.append()
    dend_135 ModelViewParmSubset_5.append()
    dend_125 ModelViewParmSubset_5.append()
    dend_122 ModelViewParmSubset_5.append()
    dend_106 ModelViewParmSubset_5.append()
    dend_105 ModelViewParmSubset_5.append()
    dend_99 ModelViewParmSubset_5.append()
    dend_98 ModelViewParmSubset_5.append()
    dend_67 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_150 ModelViewParmSubset_5.append()
    dend_149 ModelViewParmSubset_5.append()
    dend_137 ModelViewParmSubset_5.append()
    dend_136 ModelViewParmSubset_5.append()
    dend_124 ModelViewParmSubset_5.append()
    dend_123 ModelViewParmSubset_5.append()
    dend_108 ModelViewParmSubset_5.append()
    dend_107 ModelViewParmSubset_5.append()
    dend_69 ModelViewParmSubset_5.append()
    dend_68 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_154 ModelViewParmSubset_5.append()
    dend_151 ModelViewParmSubset_5.append()
    dend_139 ModelViewParmSubset_5.append()
    dend_138 ModelViewParmSubset_5.append()
    dend_112 ModelViewParmSubset_5.append()
    dend_109 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_153 ModelViewParmSubset_5.append()
    dend_152 ModelViewParmSubset_5.append()
    dend_111 ModelViewParmSubset_5.append()
    dend_110 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_155]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_155 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_84]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_84 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_127]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_127 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_81]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_81 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_114]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_114 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_86]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_86 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_58 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_2 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_131]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_131 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_93]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_93 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_87]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_87 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_74]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_74 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_59 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_50 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_3 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_89]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_89 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_76]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_76 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_75]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_75 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_71]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_71 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_60 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_52 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_120]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_120 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_119]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_119 OneSecGrp_SectionRef_47.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_92]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_92 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_90]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_90 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_80]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_80 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_77]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_77 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_61 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_32 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_141]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_141 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_121]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_121 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_113]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_113 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_82, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_82 = new SectionList()
    dend_56 OneSecGrp_SectionRef_82.append()

    // Group: {name=OneSecGrp_SectionRef_84, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_84 = new SectionList()
    dend_34 OneSecGrp_SectionRef_84.append()

    // Group: {name=OneSecGrp_SectionRef_86, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_86 = new SectionList()
    dend_27 OneSecGrp_SectionRef_86.append()

    // Group: {name=OneSecGrp_SectionRef_87, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_87 = new SectionList()
    dend_6 OneSecGrp_SectionRef_87.append()

    // Group: {name=OneSecGrp_SectionRef_95, groups=[], sections=[dend_122]}
    OneSecGrp_SectionRef_95 = new SectionList()
    dend_122 OneSecGrp_SectionRef_95.append()

    // Group: {name=OneSecGrp_SectionRef_98, groups=[], sections=[dend_99]}
    OneSecGrp_SectionRef_98 = new SectionList()
    dend_99 OneSecGrp_SectionRef_98.append()

    // Group: {name=OneSecGrp_SectionRef_104, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_104 = new SectionList()
    dend_29 OneSecGrp_SectionRef_104.append()

    // Group: {name=OneSecGrp_SectionRef_105, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_105 = new SectionList()
    dend_28 OneSecGrp_SectionRef_105.append()

    // Group: {name=OneSecGrp_SectionRef_107, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_107 = new SectionList()
    dend_7 OneSecGrp_SectionRef_107.append()

    // Group: {name=OneSecGrp_SectionRef_108, groups=[], sections=[dend_150]}
    OneSecGrp_SectionRef_108 = new SectionList()
    dend_150 OneSecGrp_SectionRef_108.append()

    // Group: {name=OneSecGrp_SectionRef_116, groups=[], sections=[dend_69]}
    OneSecGrp_SectionRef_116 = new SectionList()
    dend_69 OneSecGrp_SectionRef_116.append()

    // Group: {name=OneSecGrp_SectionRef_117, groups=[], sections=[dend_68]}
    OneSecGrp_SectionRef_117 = new SectionList()
    dend_68 OneSecGrp_SectionRef_117.append()

    // Group: {name=OneSecGrp_SectionRef_120, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_120 = new SectionList()
    dend_37 OneSecGrp_SectionRef_120.append()

    // Group: {name=OneSecGrp_SectionRef_123, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_123 = new SectionList()
    dend_30 OneSecGrp_SectionRef_123.append()

    // Group: {name=OneSecGrp_SectionRef_124, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_124 = new SectionList()
    dend_21 OneSecGrp_SectionRef_124.append()

    // Group: {name=OneSecGrp_SectionRef_131, groups=[], sections=[dend_109]}
    OneSecGrp_SectionRef_131 = new SectionList()
    dend_109 OneSecGrp_SectionRef_131.append()

    // Group: {name=OneSecGrp_SectionRef_132, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_132 = new SectionList()
    dend_46 OneSecGrp_SectionRef_132.append()

    // Group: {name=OneSecGrp_SectionRef_133, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_133 = new SectionList()
    dend_45 OneSecGrp_SectionRef_133.append()

    // Group: {name=OneSecGrp_SectionRef_136, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_136 = new SectionList()
    dend_25 OneSecGrp_SectionRef_136.append()

    // Group: {name=OneSecGrp_SectionRef_137, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_137 = new SectionList()
    dend_22 OneSecGrp_SectionRef_137.append()

    // Group: {name=OneSecGrp_SectionRef_144, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_144 = new SectionList()
    dend_48 OneSecGrp_SectionRef_144.append()

    // Group: {name=OneSecGrp_SectionRef_146, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_146 = new SectionList()
    dend_43 OneSecGrp_SectionRef_146.append()

    // Group: {name=OneSecGrp_SectionRef_148, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_148 = new SectionList()
    dend_24 OneSecGrp_SectionRef_148.append()

    // Group: {name=OneSecGrp_SectionRef_149, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_149 = new SectionList()
    dend_23 OneSecGrp_SectionRef_149.append()

    // Group: {name=OneSecGrp_SectionRef_150, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_150 = new SectionList()
    dend_18 OneSecGrp_SectionRef_150.append()

    // Group: {name=OneSecGrp_SectionRef_153, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_153 = new SectionList()
    dend_10 OneSecGrp_SectionRef_153.append()

    // Group: {name=OneSecGrp_SectionRef_156, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_156 = new SectionList()
    dend_15 OneSecGrp_SectionRef_156.append()

    // Group: {name=OneSecGrp_SectionRef_158, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_158 = new SectionList()
    dend_12 OneSecGrp_SectionRef_158.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_1 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_85]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_85 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_82]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_82 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_83]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_83 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_116]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_116 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_4 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_118]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_118 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_128]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_128 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_49 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_117]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_117 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_115]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_115 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_5 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_129]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_129 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_130]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_130 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_51 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_106, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_106 = new SectionList()
    dend_26 OneSecGrp_SectionRef_106.append()

    // Group: {name=OneSecGrp_SectionRef_85, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_85 = new SectionList()
    dend_33 OneSecGrp_SectionRef_85.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_132]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_132 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_133]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_133 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_144]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_144 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_145]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_145 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_122, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_122 = new SectionList()
    dend_31 OneSecGrp_SectionRef_122.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_126]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_126 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_134]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_134 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_92, groups=[], sections=[dend_140]}
    OneSecGrp_SectionRef_92 = new SectionList()
    dend_140 OneSecGrp_SectionRef_92.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_64 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_146]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_146 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_89, groups=[], sections=[dend_147]}
    OneSecGrp_SectionRef_89 = new SectionList()
    dend_147 OneSecGrp_SectionRef_89.append()

    // Group: {name=OneSecGrp_SectionRef_93, groups=[], sections=[dend_135]}
    OneSecGrp_SectionRef_93 = new SectionList()
    dend_135 OneSecGrp_SectionRef_93.append()

    // Group: {name=OneSecGrp_SectionRef_77, groups=[], sections=[dend_70]}
    OneSecGrp_SectionRef_77 = new SectionList()
    dend_70 OneSecGrp_SectionRef_77.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_53 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_111, groups=[], sections=[dend_136]}
    OneSecGrp_SectionRef_111 = new SectionList()
    dend_136 OneSecGrp_SectionRef_111.append()

    // Group: {name=OneSecGrp_SectionRef_78, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_78 = new SectionList()
    dend_65 OneSecGrp_SectionRef_78.append()

    // Group: {name=OneSecGrp_SectionRef_88, groups=[], sections=[dend_148]}
    OneSecGrp_SectionRef_88 = new SectionList()
    dend_148 OneSecGrp_SectionRef_88.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_72]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_72 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_73]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_73 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_110, groups=[], sections=[dend_137]}
    OneSecGrp_SectionRef_110 = new SectionList()
    dend_137 OneSecGrp_SectionRef_110.append()

    // Group: {name=OneSecGrp_SectionRef_109, groups=[], sections=[dend_149]}
    OneSecGrp_SectionRef_109 = new SectionList()
    dend_149 OneSecGrp_SectionRef_109.append()

    // Group: {name=OneSecGrp_SectionRef_101, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_101 = new SectionList()
    dend_66 OneSecGrp_SectionRef_101.append()

    // Group: {name=OneSecGrp_SectionRef_128, groups=[], sections=[dend_139]}
    OneSecGrp_SectionRef_128 = new SectionList()
    dend_139 OneSecGrp_SectionRef_128.append()

    // Group: {name=OneSecGrp_SectionRef_129, groups=[], sections=[dend_138]}
    OneSecGrp_SectionRef_129 = new SectionList()
    dend_138 OneSecGrp_SectionRef_129.append()

    // Group: {name=OneSecGrp_SectionRef_100, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_100 = new SectionList()
    dend_67 OneSecGrp_SectionRef_100.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_54 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_102, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_102 = new SectionList()
    dend_38 OneSecGrp_SectionRef_102.append()

    // Group: {name=OneSecGrp_SectionRef_83, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_83 = new SectionList()
    dend_55 OneSecGrp_SectionRef_83.append()

    // Group: {name=OneSecGrp_SectionRef_79, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_79 = new SectionList()
    dend_63 OneSecGrp_SectionRef_79.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_101]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_101 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_102]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_102 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_118, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_118 = new SectionList()
    dend_44 OneSecGrp_SectionRef_118.append()

    // Group: {name=OneSecGrp_SectionRef_125, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_125 = new SectionList()
    dend_8 OneSecGrp_SectionRef_125.append()

    // Group: {name=OneSecGrp_SectionRef_90, groups=[], sections=[dend_143]}
    OneSecGrp_SectionRef_90 = new SectionList()
    dend_143 OneSecGrp_SectionRef_90.append()

    // Group: {name=OneSecGrp_SectionRef_80, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_80 = new SectionList()
    dend_62 OneSecGrp_SectionRef_80.append()

    // Group: {name=OneSecGrp_SectionRef_103, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_103 = new SectionList()
    dend_35 OneSecGrp_SectionRef_103.append()

    // Group: {name=OneSecGrp_SectionRef_119, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_119 = new SectionList()
    dend_39 OneSecGrp_SectionRef_119.append()

    // Group: {name=OneSecGrp_SectionRef_81, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_81 = new SectionList()
    dend_57 OneSecGrp_SectionRef_81.append()

    // Group: {name=OneSecGrp_SectionRef_135, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_135 = new SectionList()
    dend_40 OneSecGrp_SectionRef_135.append()

    // Group: {name=OneSecGrp_SectionRef_139, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_139 = new SectionList()
    dend_9 OneSecGrp_SectionRef_139.append()

    // Group: {name=OneSecGrp_SectionRef_94, groups=[], sections=[dend_125]}
    OneSecGrp_SectionRef_94 = new SectionList()
    dend_125 OneSecGrp_SectionRef_94.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_103]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_103 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_94]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_94 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_138, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_138 = new SectionList()
    dend_16 OneSecGrp_SectionRef_138.append()

    // Group: {name=OneSecGrp_SectionRef_91, groups=[], sections=[dend_142]}
    OneSecGrp_SectionRef_91 = new SectionList()
    dend_142 OneSecGrp_SectionRef_91.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {

    // Group: {name=OneSecGrp_SectionRef_134, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_134 = new SectionList()
    dend_41 OneSecGrp_SectionRef_134.append()

    // Group: {name=OneSecGrp_SectionRef_152, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_152 = new SectionList()
    dend_13 OneSecGrp_SectionRef_152.append()

    // Group: {name=OneSecGrp_SectionRef_151, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_151 = new SectionList()
    dend_17 OneSecGrp_SectionRef_151.append()

    // Group: {name=OneSecGrp_SectionRef_157, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_157 = new SectionList()
    dend_14 OneSecGrp_SectionRef_157.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_95]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_95 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_147, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_147 = new SectionList()
    dend_42 OneSecGrp_SectionRef_147.append()

    // Group: {name=OneSecGrp_SectionRef_121, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_121 = new SectionList()
    dend_36 OneSecGrp_SectionRef_121.append()

    // Group: {name=OneSecGrp_SectionRef_145, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_145 = new SectionList()
    dend_47 OneSecGrp_SectionRef_145.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_96]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_96 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_72, groups=[], sections=[dend_104]}
    OneSecGrp_SectionRef_72 = new SectionList()
    dend_104 OneSecGrp_SectionRef_72.append()

    // Group: {name=OneSecGrp_SectionRef_127, groups=[], sections=[dend_151]}
    OneSecGrp_SectionRef_127 = new SectionList()
    dend_151 OneSecGrp_SectionRef_127.append()

    // Group: {name=OneSecGrp_SectionRef_73, groups=[], sections=[dend_100]}
    OneSecGrp_SectionRef_73 = new SectionList()
    dend_100 OneSecGrp_SectionRef_73.append()

    // Group: {name=OneSecGrp_SectionRef_96, groups=[], sections=[dend_106]}
    OneSecGrp_SectionRef_96 = new SectionList()
    dend_106 OneSecGrp_SectionRef_96.append()

    // Group: {name=OneSecGrp_SectionRef_141, groups=[], sections=[dend_152]}
    OneSecGrp_SectionRef_141 = new SectionList()
    dend_152 OneSecGrp_SectionRef_141.append()

    // Group: {name=OneSecGrp_SectionRef_115, groups=[], sections=[dend_107]}
    OneSecGrp_SectionRef_115 = new SectionList()
    dend_107 OneSecGrp_SectionRef_115.append()

    // Group: {name=OneSecGrp_SectionRef_114, groups=[], sections=[dend_108]}
    OneSecGrp_SectionRef_114 = new SectionList()
    dend_108 OneSecGrp_SectionRef_114.append()

    // Group: {name=OneSecGrp_SectionRef_97, groups=[], sections=[dend_105]}
    OneSecGrp_SectionRef_97 = new SectionList()
    dend_105 OneSecGrp_SectionRef_97.append()

    // Group: {name=OneSecGrp_SectionRef_140, groups=[], sections=[dend_153]}
    OneSecGrp_SectionRef_140 = new SectionList()
    dend_153 OneSecGrp_SectionRef_140.append()

    // Group: {name=OneSecGrp_SectionRef_126, groups=[], sections=[dend_154]}
    OneSecGrp_SectionRef_126 = new SectionList()
    dend_154 OneSecGrp_SectionRef_126.append()

    // Group: {name=OneSecGrp_SectionRef_130, groups=[], sections=[dend_112]}
    OneSecGrp_SectionRef_130 = new SectionList()
    dend_112 OneSecGrp_SectionRef_130.append()

    // Group: {name=OneSecGrp_SectionRef_76, groups=[], sections=[dend_78]}
    OneSecGrp_SectionRef_76 = new SectionList()
    dend_78 OneSecGrp_SectionRef_76.append()

    // Group: {name=OneSecGrp_SectionRef_74, groups=[], sections=[dend_97]}
    OneSecGrp_SectionRef_74 = new SectionList()
    dend_97 OneSecGrp_SectionRef_74.append()

    // Group: {name=OneSecGrp_SectionRef_99, groups=[], sections=[dend_98]}
    OneSecGrp_SectionRef_99 = new SectionList()
    dend_98 OneSecGrp_SectionRef_99.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_88]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_88 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_75, groups=[], sections=[dend_79]}
    OneSecGrp_SectionRef_75 = new SectionList()
    dend_79 OneSecGrp_SectionRef_75.append()

    // Group: {name=OneSecGrp_SectionRef_155, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_155 = new SectionList()
    dend_19 OneSecGrp_SectionRef_155.append()

    // Group: {name=OneSecGrp_SectionRef_159, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_159 = new SectionList()
    dend_11 OneSecGrp_SectionRef_159.append()

    // Group: {name=OneSecGrp_SectionRef_154, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_154 = new SectionList()
    dend_20 OneSecGrp_SectionRef_154.append()

    // Group: {name=OneSecGrp_SectionRef_112, groups=[], sections=[dend_124]}
    OneSecGrp_SectionRef_112 = new SectionList()
    dend_124 OneSecGrp_SectionRef_112.append()

    // Group: {name=OneSecGrp_SectionRef_113, groups=[], sections=[dend_123]}
    OneSecGrp_SectionRef_113 = new SectionList()
    dend_123 OneSecGrp_SectionRef_113.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_91]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_91 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_143, groups=[], sections=[dend_110]}
    OneSecGrp_SectionRef_143 = new SectionList()
    dend_110 OneSecGrp_SectionRef_143.append()

    // Group: {name=OneSecGrp_SectionRef_142, groups=[], sections=[dend_111]}
    OneSecGrp_SectionRef_142 = new SectionList()
    dend_111 OneSecGrp_SectionRef_142.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67, dend_68, dend_69, dend_70, dend_71, dend_72, dend_73, dend_74, dend_75, dend_76, dend_77, dend_78, dend_79, dend_80, dend_81, dend_82, dend_83, dend_84, dend_85, dend_86, dend_87, dend_88, dend_89, dend_90, dend_91, dend_92, dend_93, dend_94, dend_95, dend_96, dend_97, dend_98, dend_99, dend_100, dend_101, dend_102, dend_103, dend_104, dend_105, dend_106, dend_107, dend_108, dend_109, dend_110, dend_111, dend_112, dend_113, dend_114, dend_115, dend_116, dend_117, dend_118, dend_119, dend_120, dend_121, dend_122, dend_123, dend_124, dend_125, dend_126, dend_127, dend_128, dend_129, dend_130, dend_131, dend_132, dend_133, dend_134, dend_135, dend_136, dend_137, dend_138, dend_139, dend_140, dend_141, dend_142, dend_143, dend_144, dend_145, dend_146, dend_147, dend_148, dend_149, dend_150, dend_151, dend_152, dend_153, dend_154, dend_155], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_67 basal.append()
    dend_68 basal.append()
    dend_69 basal.append()
    dend_70 basal.append()
    dend_71 basal.append()
    dend_72 basal.append()
    dend_73 basal.append()
    dend_74 basal.append()
    dend_75 basal.append()
    dend_76 basal.append()
    dend_77 basal.append()
    dend_78 basal.append()
    dend_79 basal.append()
    dend_80 basal.append()
    dend_81 basal.append()
    dend_82 basal.append()
    dend_83 basal.append()
    dend_84 basal.append()
    dend_85 basal.append()
    dend_86 basal.append()
    dend_87 basal.append()
    dend_88 basal.append()
    dend_89 basal.append()
    dend_90 basal.append()
    dend_91 basal.append()
    dend_92 basal.append()
    dend_93 basal.append()
    dend_94 basal.append()
    dend_95 basal.append()
    dend_96 basal.append()
    dend_97 basal.append()
    dend_98 basal.append()
    dend_99 basal.append()
    dend_100 basal.append()
    dend_101 basal.append()
    dend_102 basal.append()
    dend_103 basal.append()
    dend_104 basal.append()
    dend_105 basal.append()
    dend_106 basal.append()
    dend_107 basal.append()
    dend_108 basal.append()
    dend_109 basal.append()
    dend_110 basal.append()
    dend_111 basal.append()
    dend_112 basal.append()
    dend_113 basal.append()
    dend_114 basal.append()
    dend_115 basal.append()
    dend_116 basal.append()
    dend_117 basal.append()
    dend_118 basal.append()
    dend_119 basal.append()
    dend_120 basal.append()
    dend_121 basal.append()
    dend_122 basal.append()
    dend_123 basal.append()
    dend_124 basal.append()
    dend_125 basal.append()
    dend_126 basal.append()
    dend_127 basal.append()
    dend_128 basal.append()
    dend_129 basal.append()
    dend_130 basal.append()
    dend_131 basal.append()
    dend_132 basal.append()
    dend_133 basal.append()
    dend_134 basal.append()
    dend_135 basal.append()
    dend_136 basal.append()
    dend_137 basal.append()
    dend_138 basal.append()
    dend_139 basal.append()
    dend_140 basal.append()
    dend_141 basal.append()
    dend_142 basal.append()
    dend_143 basal.append()
    dend_144 basal.append()
    dend_145 basal.append()
    dend_146 basal.append()
    dend_147 basal.append()
    dend_148 basal.append()
    dend_149 basal.append()
    dend_150 basal.append()
    dend_151 basal.append()
    dend_152 basal.append()
    dend_153 basal.append()
    dend_154 basal.append()
    dend_155 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_155, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_84, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_127, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_85, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_81, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_129, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_128, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_114, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_86, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_83, dend_82, dend_82, dend_82, dend_82, dend_82, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_131, dend_130, dend_130, dend_130, dend_130, dend_130, dend_130, dend_116, dend_116, dend_116, dend_116, dend_116, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_115, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_93, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_87, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_74, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_132, dend_118, dend_118, dend_118, dend_118, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_117, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_101, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_94, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_89, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_88, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_76, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_75, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_71, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_49, dend_49, dend_4, dend_4, dend_4, dend_4, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_144, dend_133, dend_133, dend_133, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_120, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_119, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_103, dend_102, dend_102, dend_102, dend_102, dend_102, dend_102, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_96, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_95, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_92, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_91, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_90, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_80, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_77, dend_73, dend_73, dend_73, dend_73, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_72, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_146, dend_145, dend_145, dend_145, dend_145, dend_145, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_141, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_134, dend_126, dend_126, dend_126, dend_126, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_121, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_113, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_104, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_100, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_97, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_79, dend_78, dend_78, dend_78, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_70, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_148, dend_147, dend_147, dend_147, dend_147, dend_147, dend_147, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_143, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_142, dend_140, dend_140, dend_140, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_135, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_125, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_122, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_106, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_105, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_99, dend_98, dend_98, dend_98, dend_98, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_150, dend_149, dend_149, dend_149, dend_149, dend_149, dend_149, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_137, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_136, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_124, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_123, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_108, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_107, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_69, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_68, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_154, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_151, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_139, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_138, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_112, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_109, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_153, dend_152, dend_152, dend_152, dend_152, dend_152, dend_152, dend_111, dend_111, dend_111, dend_111, dend_111, dend_111, dend_110, dend_110, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_11, dend_11]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_155 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_84 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_127 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()
    dend_85 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_85 all.append()
    dend_85 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_81 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_129 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_128 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_114 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_86 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_83 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()
    dend_82 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_82 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_131 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_130 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_116 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_115 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_93 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_87 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_74 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_132 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_118 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_117 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_101 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()
    dend_94 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_94 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_89 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_88 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_76 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_75 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_71 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_144 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_133 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_120 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_119 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_103 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_102 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_96 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_95 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_92 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_91 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_90 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_80 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_77 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_73 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_72 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_146 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_145 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_141 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_134 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_126 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_121 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_113 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_104 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_100 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_97 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_79 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_78 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_70 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_53()
}

proc subsets_53() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_54()
}

proc subsets_54() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_55()
}

proc subsets_55() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_56()
}

proc subsets_56() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_57()
}

proc subsets_57() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_148 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_147 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_143 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_58()
}

proc subsets_58() {
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_142 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_140 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_135 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_125 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_59()
}

proc subsets_59() {
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_60()
}

proc subsets_60() {
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_122 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_106 all.append()
    dend_105 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_61()
}

proc subsets_61() {
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_105 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_99 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()
    dend_98 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_62()
}

proc subsets_62() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_63()
}

proc subsets_63() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_64()
}

proc subsets_64() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_65()
}

proc subsets_65() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_66()
}

proc subsets_66() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_67()
}

proc subsets_67() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_68()
}

proc subsets_68() {
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_69()
}

proc subsets_69() {
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_150 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_149 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_137 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_136 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_124 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_123 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()
    dend_108 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_70()
}

proc subsets_70() {
    dend_108 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_107 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_69 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_71()
}

proc subsets_71() {
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_68 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_72()
}

proc subsets_72() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_73()
}

proc subsets_73() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_74()
}

proc subsets_74() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_154 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_151 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()
    dend_139 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_75()
}

proc subsets_75() {
    dend_139 all.append()
    dend_139 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_138 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_112 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_76()
}

proc subsets_76() {
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_109 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_77()
}

proc subsets_77() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_41 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_78()
}

proc subsets_78() {
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_79()
}

proc subsets_79() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_80()
}

proc subsets_80() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_153 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_152 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_111 all.append()
    dend_110 all.append()
    dend_110 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_81()
}

proc subsets_81() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_82()
}

proc subsets_82() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_83()
}

proc subsets_83() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_84()
}

proc subsets_84() {
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_85()
}

proc subsets_85() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_86()
}

proc subsets_86() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_87()
}

proc subsets_87() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_88()
}

proc subsets_88() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_89()
}

proc subsets_89() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_155 nseg = 3
    dend_84 nseg = 3
    dend_127 nseg = 3
    dend_81 nseg = 5
    dend_114 nseg = 3
    dend_86 nseg = 3
    dend_58 nseg = 3
    dend_2 nseg = 3
    dend_131 nseg = 3
    dend_93 nseg = 9
    dend_87 nseg = 15
    dend_74 nseg = 5
    dend_59 nseg = 5
    dend_50 nseg = 5
    dend_3 nseg = 3
    dend_89 nseg = 3
    dend_76 nseg = 7
    dend_75 nseg = 3
    dend_71 nseg = 7
    dend_60 nseg = 5
    dend_52 nseg = 5
    dend_120 nseg = 7
    dend_119 nseg = 3
    dend_92 nseg = 5
    dend_90 nseg = 5
    dend_80 nseg = 5
    dend_77 nseg = 7
    dend_61 nseg = 3
    dend_32 nseg = 5
    dend_141 nseg = 5
    dend_121 nseg = 3
    dend_113 nseg = 7
    dend_56 nseg = 3
    dend_34 nseg = 5
    dend_27 nseg = 3
    dend_6 nseg = 3
    dend_122 nseg = 7
    dend_99 nseg = 3
    dend_29 nseg = 3
    dend_28 nseg = 17
    dend_7 nseg = 5
    dend_150 nseg = 5
    dend_69 nseg = 3
    dend_68 nseg = 3
    dend_37 nseg = 3
    dend_30 nseg = 3
    dend_21 nseg = 3
    dend_109 nseg = 5
    dend_46 nseg = 3
    dend_45 nseg = 3
    dend_25 nseg = 5
    dend_22 nseg = 3
    dend_48 nseg = 5
    dend_43 nseg = 3
    dend_24 nseg = 3
    dend_23 nseg = 3
    dend_18 nseg = 5
    dend_10 nseg = 5
    dend_15 nseg = 11
    dend_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L6_MC_87e499e11e_0_0


