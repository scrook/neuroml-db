// Cell: cACint209_L23_NBC_ad562fc72b_0_0
/*
{
  "id" : "cACint209_L23_NBC_ad562fc72b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-1.33004, 6.9136, -1.72338, 3.35756", "-1.30767, 6.0419, -1.50091, 5.92196", "-1.2853, 5.17019, -1.27844, 10.136", "-1.26293, 4.29848, -1.05596, 12.0381", "-1.24056, 3.42677, -0.833493, 14.7633", "-1.21819, 2.55506, -0.61102, 15.4638", "-1.19582, 1.68335, -0.388548, 15.4684", "-1.17345, 0.811646, -0.166076, 15.4327", "-1.15108, -0.0600623, 0.0563968, 14.9176", "-1.12871, -0.931771, 0.278869, 14.1939", "-1.10634, -1.80348, 0.501341, 13.4702", "-1.08397, -2.67519, 0.723814, 12.7466", "-1.0616, -3.5469, 0.946286, 12.3598", "-1.03923, -4.4186, 1.16876, 12.0665", "-1.01686, -5.29031, 1.39123, 11.6276", "-0.994493, -6.16202, 1.6137, 11.1336", "-0.972123, -7.03373, 1.83618, 10.6396", "-0.949754, -7.90544, 2.05865, 9.89654", "-0.927384, -8.77715, 2.28112, 8.0678", "-0.905015, -9.64885, 2.50359, 6.12489", "-0.882645, -10.5206, 2.72606, 3.55851" ]
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-6.38069, 1.7615, -14.2729, 1.39", "-6.30967, 1.45207, -15.0185, 1.39", "-6.17967, 0.88562, -16.3834, 1.11", "-6.05293, 0.333396, -17.714, 1.11", "-5.55132, -1.85228, -22.9804, 1.11", "-5.35121, -2.72421, -25.0813, 1.11", "-5.23462, -3.23221, -26.3054, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-5.84069, 6.56, -3.83293, 1.11", "-10.8039, 9.28359, -4.95386, 0.83", "-13.9981, 11.0683, -5.2459, 0.83", "-16.5751, 12.7986, -5.63426, 0.83", "-22.126, 16.9377, -6.65064, 0.83", "-26.3678, 20.1483, -7.51574, 0.83", "-30.0314, 22.8189, -8.32286, 0.83", "-34.2164, 25.2854, -9.03513, 0.83", "-40.1506, 28.4916, -10.263, 0.83", "-42.0787, 29.5327, -10.738, 0.56", "-43.676, 30.458, -11.3154, 0.83", "-45.6702, 31.5252, -12.192, 0.83", "-48.2982, 32.6659, -13.5083, 0.83", "-51.6252, 33.5805, -14.7065, 0.28", "-54.6203, 34.6346, -15.53, 0.83", "-59.1681, 36.5299, -16.9229, 0.56", "-60.8203, 37.3657, -17.4774, 0.56", "-64.4739, 39.3072, -18.8307, 0.56", "-71.384, 43.0049, -21.6895, 0.56", "-78.1094, 46.4818, -24.8023, 0.56", "-83.9716, 49.3778, -27.8079, 0.56", "-88.5561, 51.6402, -30.2444, 0.56", "-91.5182, 53.0117, -31.9985, 0.56", "-94.4265, 54.2662, -33.9156, 0.56", "-97.1332, 55.3947, -35.9942, 0.56", "-99.6093, 56.2226, -37.8963, 0.56", "-101.087, 56.748, -39.0794, 0.56", "-104.581, 58.0426, -41.9974, 0.56", "-108.222, 59.5443, -45.0388, 0.56", "-111.505, 61.0249, -47.9089, 0.56", "-113.638, 62.024, -49.8542, 0.56", "-115.707, 63.0319, -51.7573, 0.28", "-118.873, 64.5593, -54.7249, 0.56", "-120.568, 65.3456, -56.2719, 0.56", "-122.787, 66.2835, -58.2647, 0.56", "-125.701, 67.5054, -60.7288, 0.28", "-127.865, 68.4419, -62.4403, 0.28", "-130.187, 69.5458, -64.1256, 0.56", "-132.631, 70.8482, -65.8686, 0.56", "-135.364, 72.4876, -67.7479, 0.28", "-136.408, 73.1234, -68.4237, 0.56", "-139.116, 74.8919, -70.181, 0.28", "-140.132, 75.56, -70.8526, 0.83", "-144.26, 78.3034, -73.4806, 0.28", "-147.775, 80.9391, -75.8223, 0.28", "-149.883, 82.5517, -77.2062, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "1.16931, 5.98249, 2.45707, 5.56", "1.51403, 7.47419, 2.45707, 5.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.99931, 5.216, -11.5829, 1.39", "3.31669, 6.3025, -12.6103, 1.11", "3.95893, 9.4783, -16.1646, 1.11", "4.27888, 11.387, -19.4709, 1.11", "4.56087, 12.5559, -23.0225, 1.11", "4.88367, 13.3203, -26.2785, 1.11", "5.23078, 13.8977, -28.8693, 1.11", "5.87173, 14.3105, -32.9144, 1.11", "7.05901, 14.0661, -39.4958, 1.11", "7.91167, 13.2785, -44.6385, 0.83", "8.20419, 12.8936, -46.3505, 0.83", "8.81053, 12.1064, -49.7003, 0.83", "9.55828, 11.171, -53.359, 0.83", "10.1398, 10.6048, -56.2049, 0.83", "11.4452, 9.5269, -62.6181, 0.83", "12.609, 8.55956, -68.4395, 0.83", "13.2942, 7.86789, -72.1725, 0.83", "13.8025, 7.33862, -74.8958, 0.83", "16.0839, 5.36468, -86.6173, 0.56", "16.7469, 4.89177, -89.8022, 0.56", "17.3285, 4.5371, -92.3732, 1.39", "19.1621, 3.40057, -100.234, 0.56", "20.0017, 2.85226, -103.489, 0.56" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "6.60931, 3.5885, -6.83293, 2.78", "7.25914, 4.66701, -7.52747, 2.78", "8.3192, 6.42639, -8.66047, 2.22", "9.70946, 8.7338, -10.1464, 3.06" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.46931, -10.6915, 3.82707, 1.94", "2.90941, -12.8768, 3.78331, 1.39", "3.28655, -14.7495, 3.74582, 2.22", "3.65652, -16.5866, 3.70903, 2.5", "4.50004, -20.7751, 3.62517, 1.39", "4.82728, -22.4001, 3.59263, 1.39", "5.70944, -26.7805, 3.50492, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-5.07069, -10.576, -1.42293, 2.78", "-5.84887, -11.8798, -2.12195, 2.22", "-6.91867, -13.6722, -3.08291, 2.22", "-8.32792, -16.0333, -4.34879, 2.78" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999989408307432
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.882645, -10.5206, 2.72606, 0.644939", "-0.497843, -25.5157, 2.72606, 0.644939", "-0.11304, -40.5107, 2.72606, 0.644939" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.23462, -3.23221, -26.3054, 1.11", "-8.30395, -3.4124, -26.5582, 1.11", "-11.5783, -3.72511, -28.1186, 1.11", "-16.4329, -4.18873, -30.4321, 1.11", "-22.0424, -4.72444, -33.1053, 1.11", "-24.83, -4.99067, -34.4338, 0.83", "-29.7035, -5.45609, -36.7563, 1.11", "-39.993, -7.10266, -42.9168, 1.39" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-5.23462, -3.23221, -26.3054, 0.83", "-6.85147, -7.55327, -26.4111, 0.83", "-7.84112, -10.3815, -26.3675, 0.28", "-8.41637, -12.0846, -26.3062, 0.56", "-9.67785, -16.0109, -26.1261, 0.28", "-10.3742, -18.3516, -26.0262, 0.56", "-11.1236, -21.0672, -25.914, 0.28", "-12.0908, -25.0306, -25.7144, 0.83", "-12.9075, -28.8371, -25.4822, 0.28", "-13.478, -31.7621, -25.3116, 0.83", "-13.9308, -34.5815, -25.1554, 0.28", "-14.1947, -36.604, -25.1024, 0.83", "-14.3828, -38.4676, -25.0092, 0.83", "-14.6334, -41.4338, -24.8196, 0.28", "-14.7489, -42.4713, -24.7421, 0.83", "-15.4671, -47.3656, -24.3372, 0.28", "-15.6064, -48.0504, -24.2834, 0.56", "-16.5231, -51.4668, -24.0507, 0.28", "-17.0984, -53.277, -23.9423, 0.83", "-19.3048, -59.1719, -23.8585, 0.28", "-20.1936, -61.1872, -23.898, 0.56", "-22.3951, -65.1821, -24.078, 0.28", "-24.4867, -68.4423, -24.2947, 0.28", "-25.2815, -69.5728, -24.41, 0.83", "-27.5599, -72.5487, -24.7335, 0.28", "-29.004, -74.1673, -24.9731, 0.56", "-31.6019, -76.7111, -25.4127, 0.28", "-33.4698, -78.2116, -25.7112, 0.56" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "1.51403, 7.47419, 2.45707, 0.56", "-3.74067, 10.9669, -0.521008, 0.56", "-6.19164, 12.8132, -1.64038, 0.56", "-8.67828, 14.7394, -2.47266, 0.56", "-10.7136, 16.4034, -2.96249, 0.83", "-12.9506, 18.3837, -3.46386, 0.56", "-13.8495, 19.2721, -3.6709, 0.83", "-16.6302, 22.6461, -4.13179, 0.56", "-18.7777, 25.8453, -4.37891, 0.56", "-20.0403, 27.8756, -4.50844, 0.56", "-21.9839, 31.0012, -4.64664, 0.56", "-23.8283, 33.845, -4.87143, 0.56", "-25.5475, 36.2294, -5.19927, 0.56", "-27.263, 38.3319, -5.70606, 0.56", "-29.4706, 40.6298, -6.39054, 0.56", "-30.7592, 41.7887, -6.77082, 0.83", "-32.6704, 43.14, -7.21908, 0.56", "-35.0414, 44.3292, -7.75908, 0.83", "-37.7918, 45.2429, -8.46572, 0.28", "-40.1441, 45.6693, -9.15298, 0.28" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "1.51403, 7.47419, 2.45707, 5.56", "1.58907, 7.67883, 3.08215, 5.56" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "9.70946, 8.7338, -10.1464, 0.83", "15.7869, 9.42927, -18.2962, 0.83", "17.6023, 9.7001, -20.9562, 0.56", "19.4038, 9.9543, -23.6215, 0.56", "21.9177, 10.1306, -27.7353, 0.56", "24.006, 10.2762, -31.3261, 0.56", "26.1211, 10.4957, -34.9654, 0.56", "27.3562, 10.6865, -37.1452, 0.56", "28.236, 10.8382, -38.6891, 0.83", "32.6218, 11.8949, -46.1274, 0.56", "33.9437, 12.3252, -48.2055, 0.83", "35.2168, 12.7457, -50.0709, 0.56", "37.1465, 13.4103, -52.7794, 0.83", "40.2101, 14.5446, -56.9964, 0.56", "43.0406, 15.5923, -60.9461, 0.28", "44.3633, 16.0109, -62.7523, 0.56", "47.7509, 16.7452, -67.8657, 0.28", "49.5868, 16.9047, -70.8123, 1.11", "51.0142, 16.8643, -73.2253, 0.56", "53.2912, 16.3873, -77.4582, 0.56", "54.5247, 15.9703, -79.7558, 0.56", "57.3279, 14.7801, -85.1675, 0.56", "61.466, 12.8013, -93.008, 0.28", "62.9595, 12.02, -95.7896, 0.83", "68.1433, 9.37508, -105.259, 0.28", "68.8326, 9.02001, -106.503, 0.83", "74.1854, 6.27997, -116.051, 0.28", "75.7633, 5.40584, -118.794, 0.56", "78.3532, 3.90444, -123.412, 0.28", "80.488, 2.80678, -126.98, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "9.70946, 8.7338, -10.1464, 2.5", "12.1113, 9.9566, -12.3277, 2.5", "14.8079, 11.3294, -14.7767, 1.94", "17.7988, 12.8521, -17.4929, 1.94" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "5.70944, -26.7805, 3.50492, 0.83", "7.1962, -28.4238, 3.41562, 0.83", "8.28778, -29.6304, 3.35006, 0.83", "10.4559, -32.0269, 3.21982, 0.83", "12.0255, -33.7618, 3.12555, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "5.70944, -26.7805, 3.50492, 0.83", "5.08704, -30.3521, 5.68539, 0.83", "4.96063, -31.0775, 6.12823, 0.83", "4.70284, -32.5568, 7.03135, 1.39", "4.37497, -34.4382, 8.17998, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-8.32792, -16.0333, -4.34879, 1.11", "-8.69213, -17.2391, -6.55145, 1.11", "-9.57779, -18.1036, -9.19451, 1.11", "-10.61, -18.581, -11.2917, 1.11", "-11.5527, -19.017, -13.2071, 1.11", "-12.2702, -19.3488, -14.665, 1.11", "-13.354, -19.8501, -16.8671, 1.11", "-15.3541, -20.0852, -19.4517, 1.11", "-16.5257, -19.9537, -20.5055, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.32792, -16.0333, -4.34879, 1.11", "-8.25347, -20.9798, -4.91233, 1.11", "-8.29613, -25.8482, -5.67514, 1.11", "-8.34294, -31.2493, -6.71296, 1.11", "-8.30305, -33.4832, -7.20004, 1.11", "-8.27212, -35.2155, -7.57776, 1.11", "-8.24583, -36.6884, -7.89891, 1.11", "-8.31556, -38.8589, -8.44476, 1.11", "-8.57963, -42.6275, -9.8451, 1.11", "-8.51211, -45.5122, -11.1043, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-0.11304, -40.5107, 2.72606, 0.56", "0.271762, -55.5058, 2.72606, 0.56", "0.656564, -70.5009, 2.72606, 0.56" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-39.993, -7.10266, -42.9168, 0.83", "-41.4439, -6.84748, -42.9193, 0.83", "-42.6892, -6.5639, -42.7788, 0.28", "-43.3161, -6.38129, -42.6887, 0.28", "-44.0024, -6.16905, -42.5847, 0.28", "-45.4646, -5.71055, -42.4133, 1.11", "-46.8307, -5.26551, -42.3043, 0.28", "-48.3483, -4.74551, -42.2227, 0.56", "-50.0714, -4.11355, -42.2137, 0.28", "-50.762, -3.86284, -42.2341, 0.83", "-52.4539, -3.26388, -42.3737, 0.56", "-53.3885, -2.95659, -42.4855, 0.28", "-55.1162, -2.42868, -42.7886, 0.56", "-56.6554, -1.98622, -43.122, 0.28", "-58.924, -1.42023, -43.61, 1.11", "-60.6385, -1.03483, -43.9921, 0.28", "-61.8753, -0.852952, -44.2691, 0.83", "-63.4199, -0.741647, -44.6073, 0.28", "-64.22, -0.740502, -44.7855, 0.56", "-65.588, -0.84771, -45.099, 0.28", "-67.0824, -1.09843, -45.4557, 0.56", "-69.6127, -1.64094, -46.0761, 0.28", "-71.1732, -1.99871, -46.4749, 0.28", "-71.7883, -2.13168, -46.6293, 0.56", "-72.8732, -2.34504, -46.9088, 0.28", "-75.0415, -2.73074, -47.484, 0.56", "-77.0938, -3.06662, -47.9936, 0.28", "-77.6201, -3.12638, -48.1187, 0.56", "-79.8172, -3.35118, -48.6171, 0.56", "-80.4603, -3.40706, -48.7564, 0.28", "-82.7874, -3.57338, -49.2073, 0.28", "-84.4763, -3.66028, -49.5236, 0.83", "-85.9612, -3.77548, -49.7453, 0.28", "-86.6021, -3.83311, -49.8388, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-39.993, -7.10266, -42.9168, 0.56", "-40.8179, -6.61499, -43.5316, 0.56", "-41.1134, -6.432, -43.7598, 0.56", "-42.6671, -5.24956, -45.4258, 0.28", "-43.6828, -4.42973, -46.9447, 0.83", "-45.916, -2.64411, -50.5941, 0.28", "-46.2659, -2.36837, -51.1861, 0.28", "-46.5266, -2.16913, -51.6813, 0.83", "-48.1506, -0.943598, -55.0174, 0.83", "-50.0079, 0.263229, -58.9048, 0.28", "-50.2881, 0.423624, -59.4456, 0.28", "-50.3978, 0.4653, -59.6188, 0.83", "-51.5376, 0.75967, -61.1401, 0.28", "-51.9593, 0.83494, -61.6523, 1.11", "-55.4271, 1.24301, -65.3672, 0.28", "-56.6795, 1.3504, -66.6463, 1.39", "-60.3333, 1.57104, -70.3617, 0.28", "-61.9137, 1.62552, -72.009, 1.11", "-64.5835, 1.60565, -74.8094, 0.28", "-65.0293, 1.60068, -75.2924, 0.56", "-66.3837, 1.58407, -76.7477, 0.28", "-68.0414, 1.6657, -78.5015, 0.56", "-69.3385, 1.85861, -79.7079, 0.28", "-69.9798, 2.01138, -80.3129, 0.83", "-72.3867, 2.78448, -82.3094, 0.28", "-73.1628, 3.10549, -82.9504, 0.83", "-74.2742, 3.75108, -83.7824, 0.28", "-75.8531, 4.91156, -84.6982, 0.56" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "1.58907, 7.67883, 3.08215, 0.56", "-1.49805, 11.6447, 4.01065, 0.56", "-3.97433, 15.0898, 5.07236, 0.56", "-6.11261, 18.1863, 6.21475, 0.56", "-7.16337, 19.7604, 6.79091, 0.56", "-9.25472, 22.8276, 7.95947, 0.56", "-11.5554, 26.0155, 9.25297, 0.56", "-12.5114, 27.1482, 9.79622, 0.56", "-14.3698, 29.2155, 11.0311, 0.28", "-15.6677, 30.6676, 11.9582, 0.56", "-17.5497, 32.6125, 13.1718, 0.56", "-19.1921, 34.0511, 14.0506, 0.56", "-22.4261, 36.868, 15.883, 0.56", "-24.1295, 38.2414, 16.9686, 0.56", "-26.7108, 40.2338, 18.8127, 0.56", "-29.1149, 42.0869, 20.7747, 0.56", "-32.2408, 44.5565, 23.5014, 0.56", "-36.7079, 48.0262, 27.595, 0.56", "-39.1576, 49.9019, 29.9358, 0.56", "-41.3989, 51.4818, 32.0031, 0.56", "-43.8587, 53.069, 34.3265, 0.56", "-45.7527, 54.4021, 36.3926, 0.56", "-47.9077, 56.0814, 38.8348, 0.83" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "1.58907, 7.67883, 3.08215, 2.22", "2.62662, 10.3692, 3.99192, 2.22", "3.39872, 12.3713, 4.66894, 1.11", "4.4083, 14.9892, 5.55419, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "17.7988, 12.8521, -17.4929, 0.83", "20.6253, 12.3079, -20.0453, 0.83", "23.4373, 11.9004, -22.2171, 0.83", "25.6865, 11.7045, -23.7731, 0.83", "32.0651, 11.5338, -28.0042, 0.83", "35.25, 11.6108, -30.1009, 0.83", "43.1301, 11.996, -35.7111, 0.83", "46.0539, 12.2164, -37.7422, 0.83", "48.6728, 12.4626, -39.4801, 0.83", "51.1745, 12.7406, -41.0696, 0.83", "57.8521, 13.6288, -44.7941, 0.83", "62.607, 14.3953, -47.8097, 0.83", "65.697, 15.1899, -50.5428, 1.39" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "17.7988, 12.8521, -17.4929, 1.11", "20.9539, 12.7899, -15.303, 1.11", "22.8426, 12.7527, -13.9921, 1.11", "25.2521, 12.7052, -12.3196, 1.11", "26.5587, 12.6794, -11.4127, 1.11", "27.8683, 12.6536, -10.5037, 1.11" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "12.0255, -33.7618, 3.12555, 0.83", "13.4585, -37.2864, 5.20577, 0.83", "14.7073, -39.9334, 6.87491, 0.56", "15.1271, -40.7289, 7.33855, 0.56", "16.3002, -42.9521, 8.63421, 0.28", "16.8816, -44.0539, 9.2764, 0.83", "17.8407, -45.8715, 10.3357, 0.56", "18.6095, -47.1133, 10.9684, 0.56", "19.9321, -49.3515, 12.2634, 0.56" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "12.0255, -33.7618, 3.12555, 0.83", "14.2137, -34.8802, 3.3392, 0.83", "17.308, -36.4338, 3.51662, 0.83", "18.3924, -36.974, 3.53058, 0.83", "19.5336, -37.6052, 3.48133, 1.11", "23.4525, -39.773, 3.3122, 0.83", "26.088, -41.2308, 3.19846, 0.83", "27.6026, -42.061, 3.1206, 0.83", "29.9506, -43.3543, 2.95422, 0.83", "32.622, -44.7698, 2.74902, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "4.37497, -34.4382, 8.17998, 0.56", "0.55258, -35.6647, 9.35449, 0.56", "-1.40017, -36.2913, 9.95452, 0.83", "-3.14714, -36.8518, 10.4913, 0.28", "-3.86014, -37.0806, 10.7104, 0.83", "-13.6402, -41.7069, 15.191, 0.83" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "4.37497, -34.4382, 8.17998, 0.56", "6.93275, -33.6496, 8.03381, 0.56", "8.45544, -33.3865, 7.89757, 0.56", "12.1387, -32.9028, 7.51372, 0.56", "15.8656, -32.6453, 7.09104, 0.56", "18.7967, -32.4429, 6.75862, 0.56", "23.5569, -32.1141, 6.21874, 0.28", "29.8045, -32.009, 5.46977, 0.28", "32.555, -32.0593, 5.10637, 0.28", "35.8689, -32.292, 4.57928, 0.28", "46.8309, -29.8932, 5.39803, 0.28" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-16.5257, -19.9537, -20.5055, 0.83", "-15.639, -21.6948, -22.4711, 0.83", "-13.0975, -27.5958, -26.5126, 0.28", "-12.6321, -28.8006, -27.0849, 0.56", "-11.7475, -31.0264, -27.8398, 0.56", "-10.8659, -33.3471, -28.4913, 0.56", "-9.81272, -36.1191, -29.2696, 0.28", "-8.18189, -40.4069, -30.0814, 0.28", "-7.57703, -42.0828, -30.0775, 0.83", "-6.02992, -46.6317, -29.9473, 0.28", "-5.65897, -47.8446, -29.8666, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-16.5257, -19.9537, -20.5055, 0.83", "-17.468, -18.258, -20.6783, 0.83", "-19.0599, -15.5914, -20.8297, 0.28", "-19.8465, -14.348, -20.866, 0.28", "-21.6846, -11.4329, -21.0301, 0.83", "-24.0044, -7.83192, -21.2336, 0.28", "-24.8053, -6.60334, -21.4609, 0.28", "-25.7117, -5.17978, -21.8332, 0.28", "-26.1553, -4.39652, -22.1021, 0.56", "-27.2945, -2.18047, -22.9332, 0.28", "-27.8482, -1.07402, -23.3751, 0.56", "-30.4753, 4.32421, -25.7137, 0.56", "-31.4748, 6.40625, -26.5271, 0.83", "-33.2127, 9.9398, -27.7255, 0.28", "-34.7583, 12.8444, -28.5641, 0.56", "-35.4825, 14.1256, -28.8286, 0.28", "-36.028, 15.0437, -28.959, 0.56", "-37.5716, 17.3856, -29.0087, 0.28", "-38.7064, 18.9098, -29.0404, 0.56", "-39.7524, 20.2079, -29.0433, 0.83", "-41.1132, 21.8728, -29.1147, 0.83", "-43.2477, 24.4852, -29.2729, 0.28", "-43.8363, 25.2074, -29.3214, 0.56", "-44.5061, 26.0435, -29.3819, 0.28", "-45.9949, 27.8058, -29.4774, 0.56", "-46.891, 28.8698, -29.51, 0.28", "-47.4788, 29.4879, -29.5213, 0.56", "-49.2585, 31.2752, -29.4625, 0.28", "-49.4725, 31.4911, -29.4578, 0.56", "-50.7475, 32.7358, -29.4343, 0.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-8.51211, -45.5122, -11.1043, 0.28", "-10.6397, -48.3699, -10.0803, 0.28", "-11.9964, -50.3234, -9.39437, 0.56", "-12.9729, -51.7732, -8.88467, 0.56", "-14.4711, -54.0309, -8.10869, 0.56", "-16.413, -57.1215, -7.03731, 0.28", "-18.0304, -59.8102, -6.11824, 0.28", "-19.1243, -61.7675, -5.5145, 0.83", "-19.8485, -63.1381, -5.06005, 0.28", "-20.2559, -63.9072, -4.80309, 0.83", "-21.4306, -66.1782, -4.03484, 0.28", "-21.9447, -67.1675, -3.74946, 0.28", "-22.3885, -67.9467, -3.60718, 0.56", "-23.1202, -69.1279, -3.46869, 0.28", "-23.9034, -70.4596, -3.48245, 0.56", "-25.4495, -73.1645, -3.73319, 0.28", "-26.0297, -74.2033, -3.90722, 0.83", "-27.893, -77.3115, -4.76659, 0.28", "-28.9252, -78.9338, -5.34884, 0.56", "-30.6603, -81.6127, -6.56897, 0.28", "-30.943, -82.04, -6.7959, 0.83", "-31.651, -83.1007, -7.4398, 0.83", "-34.7864, -87.5659, -10.3074, 0.28", "-35.34, -88.2803, -10.7972, 0.56", "-36.6585, -89.7538, -11.9033, 0.28", "-37.0723, -90.1336, -12.1957, 1.11" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.51211, -45.5122, -11.1043, 0.56", "-6.2198, -48.4315, -14.9467, 0.56", "-4.94752, -50.1115, -16.5982, 0.56", "-3.38568, -52.3163, -18.2557, 0.56", "-2.30264, -54.0469, -19.3342, 1.11", "-0.526026, -57.2232, -21.0462, 1.11", "0.81513, -59.9255, -22.4921, 0.56", "2.04158, -63.0133, -23.6983, 0.56", "2.85012, -65.3169, -24.4998, 0.28", "3.27246, -67.1103, -24.9895, 0.56", "3.45909, -68.1972, -25.3056, 0.28", "3.90539, -71.4614, -26.0981, 0.56", "4.30891, -74.067, -26.7178, 0.28", "4.42606, -74.8566, -26.8973, 0.83", "5.01592, -78.4364, -27.6467, 0.83", "5.43459, -80.5896, -28.0608, 0.56", "6.31277, -84.589, -28.7199, 0.56", "7.22248, -88.5059, -29.2071, 1.39", "8.34159, -93.0074, -29.6538, 0.28", "8.50871, -93.6945, -29.7041, 0.83", "9.12255, -96.4086, -29.8078, 0.28", "9.5905, -98.8655, -29.7665, 0.28", "9.77075, -99.9787, -29.7143, 0.83", "10.1855, -103.496, -29.4389, 0.28", "10.4061, -105.646, -29.2754, 0.28", "10.5335, -107.112, -29.2383, 0.83", "10.7393, -110.953, -29.2436, 0.28", "10.756, -112.073, -29.28, 0.83", "10.7927, -114.612, -29.4184, 1.39", "10.7496, -117.351, -29.5665, 1.39", "10.6454, -124.271, -29.8767, 0.28", "10.6326, -125.732, -29.9274, 0.83", "10.5247, -131.078, -30.1395, 0.28", "10.4602, -134.437, -30.1894, 0.28", "10.5568, -138.363, -30.0678, 0.83", "10.679, -140.765, -29.8816, 0.28", "10.8367, -142.769, -29.6619, 0.83", "11.3036, -146.575, -29.1132, 0.28", "11.6986, -149.103, -28.6805, 0.83", "13.1595, -158.145, -26.9934, 0.28", "13.4255, -159.683, -26.6969, 0.83", "13.7696, -162.558, -26.2645, 0.83", "14.1072, -168.493, -25.6131, 0.28", "14.1159, -169.192, -25.5898, 0.56", "14.0081, -171.684, -25.7198, 0.28", "13.8826, -173.843, -26.026, 1.39", "13.6575, -182.479, -27.6612, 0.28", "13.7656, -185.419, -28.403, 1.11", "14.3342, -191.252, -30.217, 0.28", "14.5526, -192.242, -30.5211, 0.83", "16.8983, -199.065, -32.5771, 0.28", "17.502, -200.339, -32.935, 0.83", "20.0254, -204.328, -33.7528, 0.28", "20.6656, -205.229, -33.8893, 0.56", "25.6516, -211.777, -34.3682, 0.28", "26.3661, -212.696, -34.39, 0.83", "27.265, -213.881, -34.3027, 0.83", "29.7299, -217.328, -33.8737, 0.28", "30.0485, -217.801, -33.783, 0.56", "30.9741, -219.246, -33.4664, 0.28", "31.481, -220.117, -33.2155, 0.83", "34.0448, -224.584, -31.9999, 0.28", "34.6028, -225.51, -31.7671, 0.56" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-47.9077, 56.0814, 38.8348, 0.56", "-50.7025, 55.2567, 39.6697, 0.56", "-54.243, 54.212, 40.7274, 0.56", "-64.0198, 51.2299, 44.9709, 0.56", "-74.3577, 47.8157, 47.035, 0.56", "-84.2778, 42.9028, 48.1288, 0.56", "-95.1336, 40.9302, 48.9944, 0.56", "-106.121, 39.6206, 48.9693, 0.56", "-117.119, 38.4275, 48.8222, 0.56" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-47.9077, 56.0814, 38.8348, 0.56", "-50.435, 54.5966, 39.7687, 0.56", "-51.6938, 53.857, 40.234, 0.56", "-52.9138, 53.1403, 40.6848, 0.56", "-56.6712, 50.9328, 42.0734, 0.56", "-59.5309, 49.2528, 43.1302, 0.56", "-65.931, 45.4927, 45.4954, 0.28", "-73.7719, 39.4012, 49.564, 0.28", "-80.8499, 31.7873, 52.525, 0.28", "-88.3895, 24.7158, 55.5823, 0.28", "-95.4547, 17.0432, 58.4355, 0.28" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.4083, 14.9892, 5.55419, 0.56", "1.64031, 14.5349, 8.2245, 0.56", "0.107443, 14.5971, 9.43735, 0.56", "-1.79563, 14.901, 10.8353, 0.56", "-3.73419, 15.2901, 12.1202, 0.83", "-6.72774, 15.8565, 13.8445, 0.56", "-7.63053, 16.0611, 14.3146, 0.83", "-10.5567, 17.073, 15.2975, 0.28", "-11.2437, 17.5656, 15.5545, 0.83", "-12.2005, 19.0464, 15.9968, 0.83", "-13.0362, 21.2959, 16.5491, 0.56", "-13.4066, 23.2615, 17.0003, 0.56", "-13.8665, 27.0691, 17.8528, 0.56", "-14.1305, 33.8346, 19.3583, 0.56", "-14.0964, 37.2667, 20.1302, 0.56", "-13.9938, 38.6814, 20.4505, 0.56", "-13.4318, 42.8313, 21.4427, 0.56", "-19.5782, 50.3249, 24.7146, 0.56", "-25.697, 58.0516, 27.5066, 0.56", "-32.7164, 65.2727, 29.1632, 0.56", "-39.0577, 73.305, 29.8591, 0.56", "-45.5633, 81.2115, 30.2705, 0.56", "-50.9718, 89.9636, 29.7255, 0.56" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "4.4083, 14.9892, 5.55419, 0.56", "6.61185, 15.3249, 5.1118, 0.56", "8.39599, 15.6747, 4.8791, 0.56", "11.3575, 16.2554, 4.49283, 0.56", "13.8169, 16.7376, 4.17206, 0.56", "15.3645, 17.041, 3.97021, 0.56", "17.3118, 17.4228, 3.71623, 0.56", "18.9225, 17.7026, 3.67111, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "65.697, 15.1899, -50.5428, 0.56", "68.268, 16.3027, -51.7744, 0.56", "69.5211, 16.8451, -52.3747, 0.56", "70.9765, 17.475, -53.072, 0.28", "72.0597, 17.9438, -53.5909, 0.28", "73.7021, 18.6547, -54.3777, 0.56" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "65.697, 15.1899, -50.5428, 0.83", "66.7895, 13.8955, -54.5736, 0.83", "67.7036, 13.0982, -57.5113, 0.83", "68.8549, 12.7332, -60.1672, 0.83", "70.0138, 12.5945, -62.3655, 0.56", "71.3244, 12.4071, -64.4346, 0.56", "72.8013, 12.2081, -66.4609, 0.28", "73.8209, 12.192, -67.5016, 0.83", "77.3492, 12.2917, -70.4244, 0.83", "79.4008, 12.3464, -71.9722, 0.83", "82.3418, 12.4989, -74.422, 0.56", "83.5887, 12.5164, -75.5811, 0.56", "84.7561, 12.5402, -76.8053, 0.56", "87.2783, 12.7281, -79.9615, 0.56", "88.6664, 13.0109, -81.9954, 0.83", "91.6123, 14.1566, -86.648, 0.56", "92.3079, 14.5753, -87.8465, 0.28", "93.3446, 15.3227, -89.6304, 1.11", "96.7003, 17.9486, -95.0459, 0.56", "98.2799, 19.3157, -97.1745, 0.56", "99.7773, 20.6305, -98.9478, 1.39", "104.365, 24.6616, -103.964, 0.28", "106.894, 26.8867, -106.59, 0.28", "109.92, 29.5376, -109.567, 1.39", "117.365, 36.0828, -116.391, 0.28", "119.373, 37.777, -118.18, 0.83", "121.73, 39.7062, -120.211, 0.28", "122.182, 40.0559, -120.585, 0.56", "125.07, 42.1803, -123.034, 0.28", "126.325, 43.0182, -124.101, 1.11", "131.342, 45.7834, -128.412, 0.28", "133.177, 46.6342, -129.944, 0.83", "137.285, 48.0921, -133.181, 0.28", "137.536, 48.1516, -133.396, 0.56", "139.297, 48.3375, -134.999, 0.28", "141.024, 48.3198, -136.757, 0.56", "142.185, 48.1428, -138.106, 0.28", "143.65, 47.8684, -139.961, 0.83", "147.037, 47.2641, -144.351, 0.28", "147.244, 47.237, -144.626, 0.56", "149.19, 47.1105, -147.374, 0.28", "149.809, 47.1097, -148.242, 0.56", "152.232, 47.301, -151.636, 0.28", "153.283, 47.4267, -153.117, 0.83", "153.468, 47.4997, -153.399, 0.83", "155.805, 48.7493, -157.413, 0.28", "156.128, 48.9701, -157.967, 0.28", "156.506, 49.257, -158.618, 0.83", "156.672, 49.3854, -158.892, 0.83", "163.595, 55.0381, -170.575, 0.28", "164.855, 56.1039, -172.685, 0.83", "168.904, 59.7113, -179.424, 0.28", "169.13, 59.913, -179.799, 0.28", "170.135, 60.8272, -181.436, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "27.8683, 12.6536, -10.5037, 0.56", "29.6803, 13.3127, -10.6976, 0.56", "31.8621, 14.0159, -10.6318, 0.56", "32.9842, 14.2961, -10.4899, 0.56", "34.7537, 14.6303, -10.1795, 0.56", "36.2325, 14.873, -9.82919, 0.56", "39.3435, 15.2716, -8.83589, 0.56", "40.8698, 15.3335, -8.08723, 0.56", "42.1183, 15.2922, -7.30395, 0.56", "42.9524, 15.2393, -6.66116, 0.56", "44.2785, 15.0835, -5.4357, 0.83", "45.6862, 14.7783, -3.95561, 0.56", "46.6183, 14.5001, -2.88136, 0.56", "47.7632, 14.2431, -1.52206, 0.56", "48.6752, 14.1273, -0.454883, 0.56", "49.2909, 14.1043, 0.21136, 0.56", "49.8993, 14.082, 0.773912, 0.83", "50.8148, 14.1202, 1.44782, 0.56", "51.4706, 14.18, 1.87412, 0.56", "52.5592, 14.28, 2.52173, 0.83", "54.7656, 14.5329, 3.75078, 0.83", "57.5886, 14.855, 5.08713, 0.56", "59.3406, 15.0017, 5.80268, 0.56", "60.3738, 15.0741, 6.15068, 0.56", "61.4274, 15.131, 6.3841, 0.56", "62.581, 15.1914, 6.49152, 0.56", "64.9238, 15.3568, 6.23592, 0.83", "66.4963, 15.581, 5.94257, 0.56", "67.6247, 15.7082, 5.74121, 0.83", "69.8148, 16.0298, 5.36254, 0.56", "70.8121, 16.223, 5.19867, 0.56", "72.1163, 16.5402, 5.0293, 0.56", "74.8548, 17.356, 4.88496, 0.28", "77.718, 18.1769, 4.85479, 0.28", "79.0246, 18.4859, 4.92024, 0.28", "80.4678, 18.8192, 5.0757, 0.28", "81.6569, 19.0881, 5.18951, 0.28", "82.6454, 19.2757, 5.27361, 0.56", "85.2993, 19.6131, 5.32061, 0.28", "86.3671, 19.7366, 5.44993, 0.28", "87.4841, 19.7289, 5.65865, 0.83" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "27.8683, 12.6536, -10.5037, 0.56", "31.6903, 10.992, -8.6644, 0.56", "33.8805, 10.0398, -7.61044, 0.83", "35.7957, 9.2071, -6.68878, 0.83", "37.9477, 8.27149, -5.65316, 0.56", "41.2561, 6.83314, -4.06108, 0.56" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "19.9321, -49.3515, 12.2634, 0.56", "18.9019, -51.0041, 11.7183, 0.56", "17.8536, -52.6859, 11.1636, 0.56", "13.375, -61.6541, 9.57758, 0.56", "8.53837, -70.0091, 6.57739, 0.56", "4.44563, -78.5705, 3.02298, 0.56", "1.5233, -88.02, 0.51182, 0.56", "-1.76069, -97.6074, -0.680869, 0.56", "-3.83381, -107.62, -0.224345, 0.56", "-4.03639, -117.894, -0.274868, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "19.9321, -49.3515, 12.2634, 0.56", "21.4541, -49.1187, 13.0874, 0.56", "24.7397, -48.5817, 14.8317, 0.56", "26.6862, -48.2636, 15.8651, 0.56", "28.6816, -47.9375, 16.9244, 0.56", "31.4033, -47.4927, 18.3693, 0.56", "34.612, -46.9683, 20.0727, 0.56", "36.8234, -46.6876, 21.1488, 0.56", "46.3792, -46.769, 23.8134, 0.56", "55.2189, -45.2013, 28.0449, 0.56", "64.1806, -43.2854, 31.8645, 0.56", "72.9268, -40.7342, 35.8384, 0.56", "80.8635, -38.2469, 41.2879, 0.56" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "32.622, -44.7698, 2.74902, 0.56", "34.6597, -47.1198, 1.96006, 0.56", "35.8335, -48.5233, 1.53315, 0.28", "37.5224, -50.8367, 0.90349, 0.56", "39.8053, -54.0212, 0.032173, 0.28", "40.0609, -54.378, -0.063333, 0.56", "40.9633, -55.6754, -0.383631, 0.28", "41.3791, -56.2591, -0.530602, 0.83", "43.3729, -59.0318, -1.2525, 0.28", "44.1678, -60.0673, -1.54081, 0.56", "45.3338, -61.4795, -1.96336, 0.28", "46.1757, -62.4659, -2.27444, 0.83", "48.1868, -64.6119, -3.05352, 0.83", "50.3003, -66.6373, -3.87003, 0.28", "51.599, -67.6615, -4.34216, 0.56" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "32.622, -44.7698, 2.74902, 0.56", "34.969, -44.67, 3.33494, 0.56", "36.1242, -44.5725, 3.52572, 0.56", "37.9353, -44.377, 3.69683, 0.56", "39.8375, -44.0738, 3.79637, 0.56", "41.9233, -43.7539, 3.70696, 0.83", "44.0733, -43.4339, 3.5823, 0.56", "45.3311, -43.2545, 3.36811, 0.56", "46.4397, -43.1723, 3.12692, 0.56", "47.6068, -43.0695, 2.85933, 0.56", "49.8892, -42.6378, 2.24902, 0.56", "51.4619, -42.2272, 1.88607, 0.56", "52.7663, -41.8646, 1.65419, 0.56", "54.4878, -41.4268, 1.39082, 0.56", "56.8751, -40.7759, 1.08434, 0.56", "58.1086, -40.4136, 0.959469, 0.56", "59.6577, -39.7981, 0.885882, 0.56", "61.6137, -38.8995, 0.666041, 0.28", "68.8259, -36.4467, 0.203234, 0.28", "75.5337, -32.9316, -1.04407, 0.28", "81.5599, -29.0133, -3.83008, 0.28" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "18.9225, 17.7026, 3.67111, 0.56", "21.4239, 20.2316, -2.26972, 0.56", "22.8592, 21.6744, -5.00826, 0.56", "23.1787, 22.0078, -5.59899, 0.56", "23.9453, 22.7961, -7.03411, 0.28", "25.106, 24.0054, -9.15785, 0.28", "25.9239, 24.9035, -10.635, 0.83", "27.6114, 26.7546, -13.1673, 0.28", "28.4664, 28.0173, -14.6062, 0.56", "29.5418, 29.9073, -16.5608, 0.28", "30.1644, 31.1753, -17.8398, 0.83", "30.5991, 32.2685, -18.8359, 0.28", "31.3313, 34.3584, -20.6255, 0.28", "32.2847, 37.135, -22.7783, 0.28", "33.0396, 39.5874, -24.3264, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "18.9225, 17.7026, 3.67111, 0.56", "21.885, 18.1625, 5.47144, 0.56", "24.145, 18.5133, 6.84489, 1.11", "28.0102, 19.1133, 9.1938, 0.56" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "41.2561, 6.83314, -4.06108, 0.56", "44.938, 2.5441, -2.19533, 0.56", "46.7038, 0.949839, -1.34258, 0.56", "47.4053, 0.316655, -1.0039, 0.56", "48.9678, -1.09396, -0.249371, 0.28", "51.4053, -3.29449, 0.927671, 0.56", "53.3886, -5.08498, 1.88539, 0.28", "54.8871, -5.93594, 2.6695, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "41.2561, 6.83314, -4.06108, 0.56", "45.8079, 8.92293, 2.01596, 0.56", "46.9856, 9.4636, 3.58834, 0.56", "47.7159, 9.7989, 4.56322, 0.56", "49.6465, 10.6853, 7.14078, 0.56", "51.2215, 11.4084, 9.24351, 0.56", "59.1973, 12.0831, 19.13, 0.56" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "28.0102, 19.1133, 9.1938, 0.56", "29.4732, 21.2029, 8.76241, 0.56", "31.4094, 23.8809, 8.19595, 0.56", "34.48, 28.1281, 7.29755, 0.28", "38.4301, 33.5918, 6.14185, 0.28", "39.9548, 35.7006, 5.6958, 0.28", "41.5051, 37.8449, 5.24221, 0.28", "42.5787, 39.2818, 4.93556, 0.56", "48.9194, 48.8465, 3.55805, 0.56", "54.4771, 59.045, 3.91766, 0.56", "61.4874, 68.1456, 4.96287, 0.56", "70.1315, 75.4256, 6.59706, 0.56", "78.6406, 82.7649, 8.65836, 0.56" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "28.0102, 19.1133, 9.1938, 0.83", "29.1241, 16.2731, 9.03159, 0.83", "29.7955, 14.5609, 8.93381, 0.83", "36.1227, 3.50743, 8.64888, 0.83", "42.0342, -7.77384, 7.76308, 0.83", "46.5977, -19.637, 6.09112, 0.83", "49.8941, -32.0052, 5.18139, 0.83" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "54.8871, -5.93594, 2.6695, 0.56", "56.6728, -5.40457, 1.44038, 0.56", "58.8784, -4.74826, -0.07775, 0.28", "59.9535, -4.42833, -0.817789, 0.56" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "54.8871, -5.93594, 2.6695, 0.28", "57.7225, -9.83698, 4.6836, 0.28", "59.8912, -11.7122, 6.1404, 0.56", "61.5293, -12.5579, 6.85268, 0.56", "64.517, -13.478, 7.75908, 0.56", "65.8219, -13.7791, 8.01263, 0.56", "69.9068, -14.505, 8.62903, 0.83", "75.3808, -14.7023, 8.98321, 0.83", "81.4538, -14.4274, 9.21526, 0.56", "83.3056, -14.2843, 9.21191, 0.56", "87.1702, -13.7327, 8.99273, 0.56", "90.2173, -13.2378, 8.64564, 0.28", "92.4046, -12.9176, 8.26399, 0.28", "94.2354, -12.7022, 7.91945, 0.56", "97.5181, -12.3235, 7.49356, 0.28", "101.582, -11.7124, 6.8517, 0.28", "102.9, -11.399, 6.59831, 0.56", "105.621, -10.6954, 5.83485, 0.83", "107.192, -10.265, 5.31314, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "49.8941, -32.0052, 5.18139, 0.56", "53.5798, -41.0952, 3.72087, 0.56", "59.0463, -49.1293, 2.15798, 0.56", "63.1606, -58.1112, 1.46009, 0.56", "65.771, -67.7018, 1.46003, 0.56", "67.858, -77.3198, -0.012734, 0.56", "71.8613, -86.3162, -1.11096, 0.56", "77.0934, -94.6363, -1.86215, 0.56", "81.7222, -103.304, -0.962452, 0.56", "85.9005, -111.808, 1.67699, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "49.8941, -32.0052, 5.18139, 0.56", "54.614, -43.2048, 4.81591, 0.56", "58.2608, -54.6871, 6.13303, 0.56", "64.5703, -64.7427, 8.07044, 0.56", "71.3867, -74.6949, 8.42914, 0.56", "77.6544, -84.9577, 6.74372, 0.56", "82.3844, -96.0327, 4.8095, 0.56", "84.7885, -107.816, 2.54743, 0.56", "86.5721, -119.868, 1.86382, 0.56" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_48", "dend_47", "dend_32", "dend_31", "dend_18", "dend_7", "dend_0", "axon_0", "dend_50", "dend_49", "dend_46", "dend_33", "dend_30", "dend_19", "dend_11", "dend_8", "dend_4", "dend_1", "axon_1", "dend_52", "dend_51", "dend_43", "dend_34", "dend_27", "dend_20", "dend_15", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_45", "dend_44", "dend_42", "dend_35", "dend_29", "dend_28", "dend_26", "dend_21", "dend_17", "dend_16", "dend_14", "dend_13", "dend_41", "dend_36", "dend_23", "dend_22", "dend_40", "dend_37", "dend_25", "dend_24", "dend_39", "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_18", "dend_18", "dend_18", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_34", "dend_34", "dend_34", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_36", "dend_36", "dend_36", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L23_NBC_ad562fc72b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_48, id: dend_48, parent: soma_0
create dend_48
public dend_48
// Section: dend_47, id: dend_47, parent: soma_0
create dend_47
public dend_47
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: soma_0
create dend_31
public dend_31
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_48
create dend_50
public dend_50
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_46, id: dend_46, parent: dend_32
create dend_46
public dend_46
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_18
create dend_30
public dend_30
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_43, id: dend_43, parent: dend_33
create dend_43
public dend_43
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_27, id: dend_27, parent: dend_19
create dend_27
public dend_27
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_17, id: dend_17, parent: dend_15
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_41, id: dend_41, parent: dend_35
create dend_41
public dend_41
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, axon_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, axon_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_39
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_48(0), soma_0(0.4999989408307432)
    connect dend_47(0), soma_0(0.4999989408307432)
    connect dend_32(0), soma_0(0.4999989408307432)
    connect dend_31(0), soma_0(0.4999989408307432)
    connect dend_18(0), soma_0(0.4999989408307432)
    connect dend_7(0), soma_0(0.4999989408307432)
    connect dend_0(0), soma_0(0.4999989408307432)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_46(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_43(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_27(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_17(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_41(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -1.33004, 6.9136, -1.72338, 3.35756 ) }
    soma_0 { pt3dadd( -1.30767, 6.0419, -1.50091, 5.92196 ) }
    soma_0 { pt3dadd( -1.2853, 5.17019, -1.27844, 10.136 ) }
    soma_0 { pt3dadd( -1.26293, 4.29848, -1.05596, 12.0381 ) }
    soma_0 { pt3dadd( -1.24056, 3.42677, -0.833493, 14.7633 ) }
    soma_0 { pt3dadd( -1.21819, 2.55506, -0.61102, 15.4638 ) }
    soma_0 { pt3dadd( -1.19582, 1.68335, -0.388548, 15.4684 ) }
    soma_0 { pt3dadd( -1.17345, 0.811646, -0.166076, 15.4327 ) }
    soma_0 { pt3dadd( -1.15108, -0.0600623, 0.0563968, 14.9176 ) }
    soma_0 { pt3dadd( -1.12871, -0.931771, 0.278869, 14.1939 ) }
    soma_0 { pt3dadd( -1.10634, -1.80348, 0.501341, 13.4702 ) }
    soma_0 { pt3dadd( -1.08397, -2.67519, 0.723814, 12.7466 ) }
    soma_0 { pt3dadd( -1.0616, -3.5469, 0.946286, 12.3598 ) }
    soma_0 { pt3dadd( -1.03923, -4.4186, 1.16876, 12.0665 ) }
    soma_0 { pt3dadd( -1.01686, -5.29031, 1.39123, 11.6276 ) }
    soma_0 { pt3dadd( -0.994493, -6.16202, 1.6137, 11.1336 ) }
    soma_0 { pt3dadd( -0.972123, -7.03373, 1.83618, 10.6396 ) }
    soma_0 { pt3dadd( -0.949754, -7.90544, 2.05865, 9.89654 ) }
    soma_0 { pt3dadd( -0.927384, -8.77715, 2.28112, 8.0678 ) }
    soma_0 { pt3dadd( -0.905015, -9.64885, 2.50359, 6.12489 ) }
    soma_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 3.55851 ) }
    // Section: dend_48, id: dend_48, parent: soma_0 (entry count 21/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -6.38069, 1.7615, -14.2729, 1.39 ) }
    dend_48 { pt3dadd( -6.30967, 1.45207, -15.0185, 1.39 ) }
    dend_48 { pt3dadd( -6.17967, 0.88562, -16.3834, 1.11 ) }
    dend_48 { pt3dadd( -6.05293, 0.333396, -17.714, 1.11 ) }
    dend_48 { pt3dadd( -5.55132, -1.85228, -22.9804, 1.11 ) }
    dend_48 { pt3dadd( -5.35121, -2.72421, -25.0813, 1.11 ) }
    dend_48 { pt3dadd( -5.23462, -3.23221, -26.3054, 1.11 ) }
    // Section: dend_47, id: dend_47, parent: soma_0 (entry count 28/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -5.84069, 6.56, -3.83293, 1.11 ) }
    dend_47 { pt3dadd( -10.8039, 9.28359, -4.95386, 0.83 ) }
    dend_47 { pt3dadd( -13.9981, 11.0683, -5.2459, 0.83 ) }
    dend_47 { pt3dadd( -16.5751, 12.7986, -5.63426, 0.83 ) }
    dend_47 { pt3dadd( -22.126, 16.9377, -6.65064, 0.83 ) }
    dend_47 { pt3dadd( -26.3678, 20.1483, -7.51574, 0.83 ) }
    dend_47 { pt3dadd( -30.0314, 22.8189, -8.32286, 0.83 ) }
    dend_47 { pt3dadd( -34.2164, 25.2854, -9.03513, 0.83 ) }
    dend_47 { pt3dadd( -40.1506, 28.4916, -10.263, 0.83 ) }
    dend_47 { pt3dadd( -42.0787, 29.5327, -10.738, 0.56 ) }
    dend_47 { pt3dadd( -43.676, 30.458, -11.3154, 0.83 ) }
    dend_47 { pt3dadd( -45.6702, 31.5252, -12.192, 0.83 ) }
    dend_47 { pt3dadd( -48.2982, 32.6659, -13.5083, 0.83 ) }
    dend_47 { pt3dadd( -51.6252, 33.5805, -14.7065, 0.28 ) }
    dend_47 { pt3dadd( -54.6203, 34.6346, -15.53, 0.83 ) }
    dend_47 { pt3dadd( -59.1681, 36.5299, -16.9229, 0.56 ) }
    dend_47 { pt3dadd( -60.8203, 37.3657, -17.4774, 0.56 ) }
    dend_47 { pt3dadd( -64.4739, 39.3072, -18.8307, 0.56 ) }
    dend_47 { pt3dadd( -71.384, 43.0049, -21.6895, 0.56 ) }
    dend_47 { pt3dadd( -78.1094, 46.4818, -24.8023, 0.56 ) }
    dend_47 { pt3dadd( -83.9716, 49.3778, -27.8079, 0.56 ) }
    dend_47 { pt3dadd( -88.5561, 51.6402, -30.2444, 0.56 ) }
    dend_47 { pt3dadd( -91.5182, 53.0117, -31.9985, 0.56 ) }
    dend_47 { pt3dadd( -94.4265, 54.2662, -33.9156, 0.56 ) }
    dend_47 { pt3dadd( -97.1332, 55.3947, -35.9942, 0.56 ) }
    dend_47 { pt3dadd( -99.6093, 56.2226, -37.8963, 0.56 ) }
    dend_47 { pt3dadd( -101.087, 56.748, -39.0794, 0.56 ) }
    dend_47 { pt3dadd( -104.581, 58.0426, -41.9974, 0.56 ) }
    dend_47 { pt3dadd( -108.222, 59.5443, -45.0388, 0.56 ) }
    dend_47 { pt3dadd( -111.505, 61.0249, -47.9089, 0.56 ) }
    dend_47 { pt3dadd( -113.638, 62.024, -49.8542, 0.56 ) }
    dend_47 { pt3dadd( -115.707, 63.0319, -51.7573, 0.28 ) }
    dend_47 { pt3dadd( -118.873, 64.5593, -54.7249, 0.56 ) }
    dend_47 { pt3dadd( -120.568, 65.3456, -56.2719, 0.56 ) }
    dend_47 { pt3dadd( -122.787, 66.2835, -58.2647, 0.56 ) }
    dend_47 { pt3dadd( -125.701, 67.5054, -60.7288, 0.28 ) }
    dend_47 { pt3dadd( -127.865, 68.4419, -62.4403, 0.28 ) }
    dend_47 { pt3dadd( -130.187, 69.5458, -64.1256, 0.56 ) }
    dend_47 { pt3dadd( -132.631, 70.8482, -65.8686, 0.56 ) }
    dend_47 { pt3dadd( -135.364, 72.4876, -67.7479, 0.28 ) }
    dend_47 { pt3dadd( -136.408, 73.1234, -68.4237, 0.56 ) }
    dend_47 { pt3dadd( -139.116, 74.8919, -70.181, 0.28 ) }
    dend_47 { pt3dadd( -140.132, 75.56, -70.8526, 0.83 ) }
    dend_47 { pt3dadd( -144.26, 78.3034, -73.4806, 0.28 ) }
    dend_47 { pt3dadd( -147.775, 80.9391, -75.8223, 0.28 ) }
    dend_47 { pt3dadd( -149.883, 82.5517, -77.2062, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 74/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 1.16931, 5.98249, 2.45707, 5.56 ) }
    dend_32 { pt3dadd( 1.51403, 7.47419, 2.45707, 5.56 ) }
    // Section: dend_31, id: dend_31, parent: soma_0 (entry count 76/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.99931, 5.216, -11.5829, 1.39 ) }
    dend_31 { pt3dadd( 3.31669, 6.3025, -12.6103, 1.11 ) }
    dend_31 { pt3dadd( 3.95893, 9.4783, -16.1646, 1.11 ) }
    dend_31 { pt3dadd( 4.27888, 11.387, -19.4709, 1.11 ) }
    dend_31 { pt3dadd( 4.56087, 12.5559, -23.0225, 1.11 ) }
    dend_31 { pt3dadd( 4.88367, 13.3203, -26.2785, 1.11 ) }
    dend_31 { pt3dadd( 5.23078, 13.8977, -28.8693, 1.11 ) }
    dend_31 { pt3dadd( 5.87173, 14.3105, -32.9144, 1.11 ) }
    dend_31 { pt3dadd( 7.05901, 14.0661, -39.4958, 1.11 ) }
    dend_31 { pt3dadd( 7.91167, 13.2785, -44.6385, 0.83 ) }
    dend_31 { pt3dadd( 8.20419, 12.8936, -46.3505, 0.83 ) }
    dend_31 { pt3dadd( 8.81053, 12.1064, -49.7003, 0.83 ) }
    dend_31 { pt3dadd( 9.55828, 11.171, -53.359, 0.83 ) }
    dend_31 { pt3dadd( 10.1398, 10.6048, -56.2049, 0.83 ) }
    dend_31 { pt3dadd( 11.4452, 9.5269, -62.6181, 0.83 ) }
    dend_31 { pt3dadd( 12.609, 8.55956, -68.4395, 0.83 ) }
    dend_31 { pt3dadd( 13.2942, 7.86789, -72.1725, 0.83 ) }
    dend_31 { pt3dadd( 13.8025, 7.33862, -74.8958, 0.83 ) }
    dend_31 { pt3dadd( 16.0839, 5.36468, -86.6173, 0.56 ) }
    dend_31 { pt3dadd( 16.7469, 4.89177, -89.8022, 0.56 ) }
    dend_31 { pt3dadd( 17.3285, 4.5371, -92.3732, 1.39 ) }
    dend_31 { pt3dadd( 19.1621, 3.40057, -100.234, 0.56 ) }
    dend_31 { pt3dadd( 20.0017, 2.85226, -103.489, 0.56 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 99/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 6.60931, 3.5885, -6.83293, 2.78 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_18 { pt3dadd( 7.25914, 4.66701, -7.52747, 2.78 ) }
    dend_18 { pt3dadd( 8.3192, 6.42639, -8.66047, 2.22 ) }
    dend_18 { pt3dadd( 9.70946, 8.7338, -10.1464, 3.06 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.46931, -10.6915, 3.82707, 1.94 ) }
    dend_7 { pt3dadd( 2.90941, -12.8768, 3.78331, 1.39 ) }
    dend_7 { pt3dadd( 3.28655, -14.7495, 3.74582, 2.22 ) }
    dend_7 { pt3dadd( 3.65652, -16.5866, 3.70903, 2.5 ) }
    dend_7 { pt3dadd( 4.50004, -20.7751, 3.62517, 1.39 ) }
    dend_7 { pt3dadd( 4.82728, -22.4001, 3.59263, 1.39 ) }
    dend_7 { pt3dadd( 5.70944, -26.7805, 3.50492, 1.11 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -5.07069, -10.576, -1.42293, 2.78 ) }
    dend_0 { pt3dadd( -5.84887, -11.8798, -2.12195, 2.22 ) }
    dend_0 { pt3dadd( -6.91867, -13.6722, -3.08291, 2.22 ) }
    dend_0 { pt3dadd( -8.32792, -16.0333, -4.34879, 2.78 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 14/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.882645, -10.5206, 2.72606, 0.644939 ) }
    axon_0 { pt3dadd( -0.497843, -25.5157, 2.72606, 0.644939 ) }
    axon_0 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.644939 ) }
    // Section: dend_50, id: dend_50, parent: dend_48 (entry count 17/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.23462, -3.23221, -26.3054, 1.11 ) }
    dend_50 { pt3dadd( -8.30395, -3.4124, -26.5582, 1.11 ) }
    dend_50 { pt3dadd( -11.5783, -3.72511, -28.1186, 1.11 ) }
    dend_50 { pt3dadd( -16.4329, -4.18873, -30.4321, 1.11 ) }
    dend_50 { pt3dadd( -22.0424, -4.72444, -33.1053, 1.11 ) }
    dend_50 { pt3dadd( -24.83, -4.99067, -34.4338, 0.83 ) }
    dend_50 { pt3dadd( -29.7035, -5.45609, -36.7563, 1.11 ) }
    dend_50 { pt3dadd( -39.993, -7.10266, -42.9168, 1.39 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 25/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -5.23462, -3.23221, -26.3054, 0.83 ) }
    dend_49 { pt3dadd( -6.85147, -7.55327, -26.4111, 0.83 ) }
    dend_49 { pt3dadd( -7.84112, -10.3815, -26.3675, 0.28 ) }
    dend_49 { pt3dadd( -8.41637, -12.0846, -26.3062, 0.56 ) }
    dend_49 { pt3dadd( -9.67785, -16.0109, -26.1261, 0.28 ) }
    dend_49 { pt3dadd( -10.3742, -18.3516, -26.0262, 0.56 ) }
    dend_49 { pt3dadd( -11.1236, -21.0672, -25.914, 0.28 ) }
    dend_49 { pt3dadd( -12.0908, -25.0306, -25.7144, 0.83 ) }
    dend_49 { pt3dadd( -12.9075, -28.8371, -25.4822, 0.28 ) }
    dend_49 { pt3dadd( -13.478, -31.7621, -25.3116, 0.83 ) }
    dend_49 { pt3dadd( -13.9308, -34.5815, -25.1554, 0.28 ) }
    dend_49 { pt3dadd( -14.1947, -36.604, -25.1024, 0.83 ) }
    dend_49 { pt3dadd( -14.3828, -38.4676, -25.0092, 0.83 ) }
    dend_49 { pt3dadd( -14.6334, -41.4338, -24.8196, 0.28 ) }
    dend_49 { pt3dadd( -14.7489, -42.4713, -24.7421, 0.83 ) }
    dend_49 { pt3dadd( -15.4671, -47.3656, -24.3372, 0.28 ) }
    dend_49 { pt3dadd( -15.6064, -48.0504, -24.2834, 0.56 ) }
    dend_49 { pt3dadd( -16.5231, -51.4668, -24.0507, 0.28 ) }
    dend_49 { pt3dadd( -17.0984, -53.277, -23.9423, 0.83 ) }
    dend_49 { pt3dadd( -19.3048, -59.1719, -23.8585, 0.28 ) }
    dend_49 { pt3dadd( -20.1936, -61.1872, -23.898, 0.56 ) }
    dend_49 { pt3dadd( -22.3951, -65.1821, -24.078, 0.28 ) }
    dend_49 { pt3dadd( -24.4867, -68.4423, -24.2947, 0.28 ) }
    dend_49 { pt3dadd( -25.2815, -69.5728, -24.41, 0.83 ) }
    dend_49 { pt3dadd( -27.5599, -72.5487, -24.7335, 0.28 ) }
    dend_49 { pt3dadd( -29.004, -74.1673, -24.9731, 0.56 ) }
    dend_49 { pt3dadd( -31.6019, -76.7111, -25.4127, 0.28 ) }
    dend_49 { pt3dadd( -33.4698, -78.2116, -25.7112, 0.56 ) }
    // Section: dend_46, id: dend_46, parent: dend_32 (entry count 53/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 1.51403, 7.47419, 2.45707, 0.56 ) }
    dend_46 { pt3dadd( -3.74067, 10.9669, -0.521008, 0.56 ) }
    dend_46 { pt3dadd( -6.19164, 12.8132, -1.64038, 0.56 ) }
    dend_46 { pt3dadd( -8.67828, 14.7394, -2.47266, 0.56 ) }
    dend_46 { pt3dadd( -10.7136, 16.4034, -2.96249, 0.83 ) }
    dend_46 { pt3dadd( -12.9506, 18.3837, -3.46386, 0.56 ) }
    dend_46 { pt3dadd( -13.8495, 19.2721, -3.6709, 0.83 ) }
    dend_46 { pt3dadd( -16.6302, 22.6461, -4.13179, 0.56 ) }
    dend_46 { pt3dadd( -18.7777, 25.8453, -4.37891, 0.56 ) }
    dend_46 { pt3dadd( -20.0403, 27.8756, -4.50844, 0.56 ) }
    dend_46 { pt3dadd( -21.9839, 31.0012, -4.64664, 0.56 ) }
    dend_46 { pt3dadd( -23.8283, 33.845, -4.87143, 0.56 ) }
    dend_46 { pt3dadd( -25.5475, 36.2294, -5.19927, 0.56 ) }
    dend_46 { pt3dadd( -27.263, 38.3319, -5.70606, 0.56 ) }
    dend_46 { pt3dadd( -29.4706, 40.6298, -6.39054, 0.56 ) }
    dend_46 { pt3dadd( -30.7592, 41.7887, -6.77082, 0.83 ) }
    dend_46 { pt3dadd( -32.6704, 43.14, -7.21908, 0.56 ) }
    dend_46 { pt3dadd( -35.0414, 44.3292, -7.75908, 0.83 ) }
    dend_46 { pt3dadd( -37.7918, 45.2429, -8.46572, 0.28 ) }
    dend_46 { pt3dadd( -40.1441, 45.6693, -9.15298, 0.28 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 73/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 1.51403, 7.47419, 2.45707, 5.56 ) }
    dend_33 { pt3dadd( 1.58907, 7.67883, 3.08215, 5.56 ) }
    // Section: dend_30, id: dend_30, parent: dend_18 (entry count 75/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 9.70946, 8.7338, -10.1464, 0.83 ) }
    dend_30 { pt3dadd( 15.7869, 9.42927, -18.2962, 0.83 ) }
    dend_30 { pt3dadd( 17.6023, 9.7001, -20.9562, 0.56 ) }
    dend_30 { pt3dadd( 19.4038, 9.9543, -23.6215, 0.56 ) }
    dend_30 { pt3dadd( 21.9177, 10.1306, -27.7353, 0.56 ) }
    dend_30 { pt3dadd( 24.006, 10.2762, -31.3261, 0.56 ) }
    dend_30 { pt3dadd( 26.1211, 10.4957, -34.9654, 0.56 ) }
    dend_30 { pt3dadd( 27.3562, 10.6865, -37.1452, 0.56 ) }
    dend_30 { pt3dadd( 28.236, 10.8382, -38.6891, 0.83 ) }
    dend_30 { pt3dadd( 32.6218, 11.8949, -46.1274, 0.56 ) }
    dend_30 { pt3dadd( 33.9437, 12.3252, -48.2055, 0.83 ) }
    dend_30 { pt3dadd( 35.2168, 12.7457, -50.0709, 0.56 ) }
    dend_30 { pt3dadd( 37.1465, 13.4103, -52.7794, 0.83 ) }
    dend_30 { pt3dadd( 40.2101, 14.5446, -56.9964, 0.56 ) }
    dend_30 { pt3dadd( 43.0406, 15.5923, -60.9461, 0.28 ) }
    dend_30 { pt3dadd( 44.3633, 16.0109, -62.7523, 0.56 ) }
    dend_30 { pt3dadd( 47.7509, 16.7452, -67.8657, 0.28 ) }
    dend_30 { pt3dadd( 49.5868, 16.9047, -70.8123, 1.11 ) }
    dend_30 { pt3dadd( 51.0142, 16.8643, -73.2253, 0.56 ) }
    dend_30 { pt3dadd( 53.2912, 16.3873, -77.4582, 0.56 ) }
    dend_30 { pt3dadd( 54.5247, 15.9703, -79.7558, 0.56 ) }
    dend_30 { pt3dadd( 57.3279, 14.7801, -85.1675, 0.56 ) }
    dend_30 { pt3dadd( 61.466, 12.8013, -93.008, 0.28 ) }
    dend_30 { pt3dadd( 62.9595, 12.02, -95.7896, 0.83 ) }
    dend_30 { pt3dadd( 68.1433, 9.37508, -105.259, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_30 { pt3dadd( 68.8326, 9.02001, -106.503, 0.83 ) }
    dend_30 { pt3dadd( 74.1854, 6.27997, -116.051, 0.28 ) }
    dend_30 { pt3dadd( 75.7633, 5.40584, -118.794, 0.56 ) }
    dend_30 { pt3dadd( 78.3532, 3.90444, -123.412, 0.28 ) }
    dend_30 { pt3dadd( 80.488, 2.80678, -126.98, 0.83 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 9.70946, 8.7338, -10.1464, 2.5 ) }
    dend_19 { pt3dadd( 12.1113, 9.9566, -12.3277, 2.5 ) }
    dend_19 { pt3dadd( 14.8079, 11.3294, -14.7767, 1.94 ) }
    dend_19 { pt3dadd( 17.7988, 12.8521, -17.4929, 1.94 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 9/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 5.70944, -26.7805, 3.50492, 0.83 ) }
    dend_11 { pt3dadd( 7.1962, -28.4238, 3.41562, 0.83 ) }
    dend_11 { pt3dadd( 8.28778, -29.6304, 3.35006, 0.83 ) }
    dend_11 { pt3dadd( 10.4559, -32.0269, 3.21982, 0.83 ) }
    dend_11 { pt3dadd( 12.0255, -33.7618, 3.12555, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 14/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 5.70944, -26.7805, 3.50492, 0.83 ) }
    dend_8 { pt3dadd( 5.08704, -30.3521, 5.68539, 0.83 ) }
    dend_8 { pt3dadd( 4.96063, -31.0775, 6.12823, 0.83 ) }
    dend_8 { pt3dadd( 4.70284, -32.5568, 7.03135, 1.39 ) }
    dend_8 { pt3dadd( 4.37497, -34.4382, 8.17998, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 19/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -8.32792, -16.0333, -4.34879, 1.11 ) }
    dend_4 { pt3dadd( -8.69213, -17.2391, -6.55145, 1.11 ) }
    dend_4 { pt3dadd( -9.57779, -18.1036, -9.19451, 1.11 ) }
    dend_4 { pt3dadd( -10.61, -18.581, -11.2917, 1.11 ) }
    dend_4 { pt3dadd( -11.5527, -19.017, -13.2071, 1.11 ) }
    dend_4 { pt3dadd( -12.2702, -19.3488, -14.665, 1.11 ) }
    dend_4 { pt3dadd( -13.354, -19.8501, -16.8671, 1.11 ) }
    dend_4 { pt3dadd( -15.3541, -20.0852, -19.4517, 1.11 ) }
    dend_4 { pt3dadd( -16.5257, -19.9537, -20.5055, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 28/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.32792, -16.0333, -4.34879, 1.11 ) }
    dend_1 { pt3dadd( -8.25347, -20.9798, -4.91233, 1.11 ) }
    dend_1 { pt3dadd( -8.29613, -25.8482, -5.67514, 1.11 ) }
    dend_1 { pt3dadd( -8.34294, -31.2493, -6.71296, 1.11 ) }
    dend_1 { pt3dadd( -8.30305, -33.4832, -7.20004, 1.11 ) }
    dend_1 { pt3dadd( -8.27212, -35.2155, -7.57776, 1.11 ) }
    dend_1 { pt3dadd( -8.24583, -36.6884, -7.89891, 1.11 ) }
    dend_1 { pt3dadd( -8.31556, -38.8589, -8.44476, 1.11 ) }
    dend_1 { pt3dadd( -8.57963, -42.6275, -9.8451, 1.11 ) }
    dend_1 { pt3dadd( -8.51211, -45.5122, -11.1043, 1.11 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 38/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -0.11304, -40.5107, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.271762, -55.5058, 2.72606, 0.56 ) }
    axon_1 { pt3dadd( 0.656564, -70.5009, 2.72606, 0.56 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 41/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -39.993, -7.10266, -42.9168, 0.83 ) }
    dend_52 { pt3dadd( -41.4439, -6.84748, -42.9193, 0.83 ) }
    dend_52 { pt3dadd( -42.6892, -6.5639, -42.7788, 0.28 ) }
    dend_52 { pt3dadd( -43.3161, -6.38129, -42.6887, 0.28 ) }
    dend_52 { pt3dadd( -44.0024, -6.16905, -42.5847, 0.28 ) }
    dend_52 { pt3dadd( -45.4646, -5.71055, -42.4133, 1.11 ) }
    dend_52 { pt3dadd( -46.8307, -5.26551, -42.3043, 0.28 ) }
    dend_52 { pt3dadd( -48.3483, -4.74551, -42.2227, 0.56 ) }
    dend_52 { pt3dadd( -50.0714, -4.11355, -42.2137, 0.28 ) }
    dend_52 { pt3dadd( -50.762, -3.86284, -42.2341, 0.83 ) }
    dend_52 { pt3dadd( -52.4539, -3.26388, -42.3737, 0.56 ) }
    dend_52 { pt3dadd( -53.3885, -2.95659, -42.4855, 0.28 ) }
    dend_52 { pt3dadd( -55.1162, -2.42868, -42.7886, 0.56 ) }
    dend_52 { pt3dadd( -56.6554, -1.98622, -43.122, 0.28 ) }
    dend_52 { pt3dadd( -58.924, -1.42023, -43.61, 1.11 ) }
    dend_52 { pt3dadd( -60.6385, -1.03483, -43.9921, 0.28 ) }
    dend_52 { pt3dadd( -61.8753, -0.852952, -44.2691, 0.83 ) }
    dend_52 { pt3dadd( -63.4199, -0.741647, -44.6073, 0.28 ) }
    dend_52 { pt3dadd( -64.22, -0.740502, -44.7855, 0.56 ) }
    dend_52 { pt3dadd( -65.588, -0.84771, -45.099, 0.28 ) }
    dend_52 { pt3dadd( -67.0824, -1.09843, -45.4557, 0.56 ) }
    dend_52 { pt3dadd( -69.6127, -1.64094, -46.0761, 0.28 ) }
    dend_52 { pt3dadd( -71.1732, -1.99871, -46.4749, 0.28 ) }
    dend_52 { pt3dadd( -71.7883, -2.13168, -46.6293, 0.56 ) }
    dend_52 { pt3dadd( -72.8732, -2.34504, -46.9088, 0.28 ) }
    dend_52 { pt3dadd( -75.0415, -2.73074, -47.484, 0.56 ) }
    dend_52 { pt3dadd( -77.0938, -3.06662, -47.9936, 0.28 ) }
    dend_52 { pt3dadd( -77.6201, -3.12638, -48.1187, 0.56 ) }
    dend_52 { pt3dadd( -79.8172, -3.35118, -48.6171, 0.56 ) }
    dend_52 { pt3dadd( -80.4603, -3.40706, -48.7564, 0.28 ) }
    dend_52 { pt3dadd( -82.7874, -3.57338, -49.2073, 0.28 ) }
    dend_52 { pt3dadd( -84.4763, -3.66028, -49.5236, 0.83 ) }
    dend_52 { pt3dadd( -85.9612, -3.77548, -49.7453, 0.28 ) }
    dend_52 { pt3dadd( -86.6021, -3.83311, -49.8388, 0.56 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 75/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -39.993, -7.10266, -42.9168, 0.56 ) }
    dend_51 { pt3dadd( -40.8179, -6.61499, -43.5316, 0.56 ) }
    dend_51 { pt3dadd( -41.1134, -6.432, -43.7598, 0.56 ) }
    dend_51 { pt3dadd( -42.6671, -5.24956, -45.4258, 0.28 ) }
    dend_51 { pt3dadd( -43.6828, -4.42973, -46.9447, 0.83 ) }
    dend_51 { pt3dadd( -45.916, -2.64411, -50.5941, 0.28 ) }
    dend_51 { pt3dadd( -46.2659, -2.36837, -51.1861, 0.28 ) }
    dend_51 { pt3dadd( -46.5266, -2.16913, -51.6813, 0.83 ) }
    dend_51 { pt3dadd( -48.1506, -0.943598, -55.0174, 0.83 ) }
    dend_51 { pt3dadd( -50.0079, 0.263229, -58.9048, 0.28 ) }
    dend_51 { pt3dadd( -50.2881, 0.423624, -59.4456, 0.28 ) }
    dend_51 { pt3dadd( -50.3978, 0.4653, -59.6188, 0.83 ) }
    dend_51 { pt3dadd( -51.5376, 0.75967, -61.1401, 0.28 ) }
    dend_51 { pt3dadd( -51.9593, 0.83494, -61.6523, 1.11 ) }
    dend_51 { pt3dadd( -55.4271, 1.24301, -65.3672, 0.28 ) }
    dend_51 { pt3dadd( -56.6795, 1.3504, -66.6463, 1.39 ) }
    dend_51 { pt3dadd( -60.3333, 1.57104, -70.3617, 0.28 ) }
    dend_51 { pt3dadd( -61.9137, 1.62552, -72.009, 1.11 ) }
    dend_51 { pt3dadd( -64.5835, 1.60565, -74.8094, 0.28 ) }
    dend_51 { pt3dadd( -65.0293, 1.60068, -75.2924, 0.56 ) }
    dend_51 { pt3dadd( -66.3837, 1.58407, -76.7477, 0.28 ) }
    dend_51 { pt3dadd( -68.0414, 1.6657, -78.5015, 0.56 ) }
    dend_51 { pt3dadd( -69.3385, 1.85861, -79.7079, 0.28 ) }
    dend_51 { pt3dadd( -69.9798, 2.01138, -80.3129, 0.83 ) }
    dend_51 { pt3dadd( -72.3867, 2.78448, -82.3094, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -73.1628, 3.10549, -82.9504, 0.83 ) }
    dend_51 { pt3dadd( -74.2742, 3.75108, -83.7824, 0.28 ) }
    dend_51 { pt3dadd( -75.8531, 4.91156, -84.6982, 0.56 ) }
    // Section: dend_43, id: dend_43, parent: dend_33 (entry count 3/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 1.58907, 7.67883, 3.08215, 0.56 ) }
    dend_43 { pt3dadd( -1.49805, 11.6447, 4.01065, 0.56 ) }
    dend_43 { pt3dadd( -3.97433, 15.0898, 5.07236, 0.56 ) }
    dend_43 { pt3dadd( -6.11261, 18.1863, 6.21475, 0.56 ) }
    dend_43 { pt3dadd( -7.16337, 19.7604, 6.79091, 0.56 ) }
    dend_43 { pt3dadd( -9.25472, 22.8276, 7.95947, 0.56 ) }
    dend_43 { pt3dadd( -11.5554, 26.0155, 9.25297, 0.56 ) }
    dend_43 { pt3dadd( -12.5114, 27.1482, 9.79622, 0.56 ) }
    dend_43 { pt3dadd( -14.3698, 29.2155, 11.0311, 0.28 ) }
    dend_43 { pt3dadd( -15.6677, 30.6676, 11.9582, 0.56 ) }
    dend_43 { pt3dadd( -17.5497, 32.6125, 13.1718, 0.56 ) }
    dend_43 { pt3dadd( -19.1921, 34.0511, 14.0506, 0.56 ) }
    dend_43 { pt3dadd( -22.4261, 36.868, 15.883, 0.56 ) }
    dend_43 { pt3dadd( -24.1295, 38.2414, 16.9686, 0.56 ) }
    dend_43 { pt3dadd( -26.7108, 40.2338, 18.8127, 0.56 ) }
    dend_43 { pt3dadd( -29.1149, 42.0869, 20.7747, 0.56 ) }
    dend_43 { pt3dadd( -32.2408, 44.5565, 23.5014, 0.56 ) }
    dend_43 { pt3dadd( -36.7079, 48.0262, 27.595, 0.56 ) }
    dend_43 { pt3dadd( -39.1576, 49.9019, 29.9358, 0.56 ) }
    dend_43 { pt3dadd( -41.3989, 51.4818, 32.0031, 0.56 ) }
    dend_43 { pt3dadd( -43.8587, 53.069, 34.3265, 0.56 ) }
    dend_43 { pt3dadd( -45.7527, 54.4021, 36.3926, 0.56 ) }
    dend_43 { pt3dadd( -47.9077, 56.0814, 38.8348, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 26/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 1.58907, 7.67883, 3.08215, 2.22 ) }
    dend_34 { pt3dadd( 2.62662, 10.3692, 3.99192, 2.22 ) }
    dend_34 { pt3dadd( 3.39872, 12.3713, 4.66894, 1.11 ) }
    dend_34 { pt3dadd( 4.4083, 14.9892, 5.55419, 1.11 ) }
    // Section: dend_27, id: dend_27, parent: dend_19 (entry count 30/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 17.7988, 12.8521, -17.4929, 0.83 ) }
    dend_27 { pt3dadd( 20.6253, 12.3079, -20.0453, 0.83 ) }
    dend_27 { pt3dadd( 23.4373, 11.9004, -22.2171, 0.83 ) }
    dend_27 { pt3dadd( 25.6865, 11.7045, -23.7731, 0.83 ) }
    dend_27 { pt3dadd( 32.0651, 11.5338, -28.0042, 0.83 ) }
    dend_27 { pt3dadd( 35.25, 11.6108, -30.1009, 0.83 ) }
    dend_27 { pt3dadd( 43.1301, 11.996, -35.7111, 0.83 ) }
    dend_27 { pt3dadd( 46.0539, 12.2164, -37.7422, 0.83 ) }
    dend_27 { pt3dadd( 48.6728, 12.4626, -39.4801, 0.83 ) }
    dend_27 { pt3dadd( 51.1745, 12.7406, -41.0696, 0.83 ) }
    dend_27 { pt3dadd( 57.8521, 13.6288, -44.7941, 0.83 ) }
    dend_27 { pt3dadd( 62.607, 14.3953, -47.8097, 0.83 ) }
    dend_27 { pt3dadd( 65.697, 15.1899, -50.5428, 1.39 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 43/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 17.7988, 12.8521, -17.4929, 1.11 ) }
    dend_20 { pt3dadd( 20.9539, 12.7899, -15.303, 1.11 ) }
    dend_20 { pt3dadd( 22.8426, 12.7527, -13.9921, 1.11 ) }
    dend_20 { pt3dadd( 25.2521, 12.7052, -12.3196, 1.11 ) }
    dend_20 { pt3dadd( 26.5587, 12.6794, -11.4127, 1.11 ) }
    dend_20 { pt3dadd( 27.8683, 12.6536, -10.5037, 1.11 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 49/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 12.0255, -33.7618, 3.12555, 0.83 ) }
    dend_15 { pt3dadd( 13.4585, -37.2864, 5.20577, 0.83 ) }
    dend_15 { pt3dadd( 14.7073, -39.9334, 6.87491, 0.56 ) }
    dend_15 { pt3dadd( 15.1271, -40.7289, 7.33855, 0.56 ) }
    dend_15 { pt3dadd( 16.3002, -42.9521, 8.63421, 0.28 ) }
    dend_15 { pt3dadd( 16.8816, -44.0539, 9.2764, 0.83 ) }
    dend_15 { pt3dadd( 17.8407, -45.8715, 10.3357, 0.56 ) }
    dend_15 { pt3dadd( 18.6095, -47.1133, 10.9684, 0.56 ) }
    dend_15 { pt3dadd( 19.9321, -49.3515, 12.2634, 0.56 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 58/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 12.0255, -33.7618, 3.12555, 0.83 ) }
    dend_12 { pt3dadd( 14.2137, -34.8802, 3.3392, 0.83 ) }
    dend_12 { pt3dadd( 17.308, -36.4338, 3.51662, 0.83 ) }
    dend_12 { pt3dadd( 18.3924, -36.974, 3.53058, 0.83 ) }
    dend_12 { pt3dadd( 19.5336, -37.6052, 3.48133, 1.11 ) }
    dend_12 { pt3dadd( 23.4525, -39.773, 3.3122, 0.83 ) }
    dend_12 { pt3dadd( 26.088, -41.2308, 3.19846, 0.83 ) }
    dend_12 { pt3dadd( 27.6026, -42.061, 3.1206, 0.83 ) }
    dend_12 { pt3dadd( 29.9506, -43.3543, 2.95422, 0.83 ) }
    dend_12 { pt3dadd( 32.622, -44.7698, 2.74902, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 68/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 4.37497, -34.4382, 8.17998, 0.56 ) }
    dend_10 { pt3dadd( 0.55258, -35.6647, 9.35449, 0.56 ) }
    dend_10 { pt3dadd( -1.40017, -36.2913, 9.95452, 0.83 ) }
    dend_10 { pt3dadd( -3.14714, -36.8518, 10.4913, 0.28 ) }
    dend_10 { pt3dadd( -3.86014, -37.0806, 10.7104, 0.83 ) }
    dend_10 { pt3dadd( -13.6402, -41.7069, 15.191, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 74/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 4.37497, -34.4382, 8.17998, 0.56 ) }
    dend_9 { pt3dadd( 6.93275, -33.6496, 8.03381, 0.56 ) }
    dend_9 { pt3dadd( 8.45544, -33.3865, 7.89757, 0.56 ) }
    dend_9 { pt3dadd( 12.1387, -32.9028, 7.51372, 0.56 ) }
    dend_9 { pt3dadd( 15.8656, -32.6453, 7.09104, 0.56 ) }
    dend_9 { pt3dadd( 18.7967, -32.4429, 6.75862, 0.56 ) }
    dend_9 { pt3dadd( 23.5569, -32.1141, 6.21874, 0.28 ) }
    dend_9 { pt3dadd( 29.8045, -32.009, 5.46977, 0.28 ) }
    dend_9 { pt3dadd( 32.555, -32.0593, 5.10637, 0.28 ) }
    dend_9 { pt3dadd( 35.8689, -32.292, 4.57928, 0.28 ) }
    dend_9 { pt3dadd( 46.8309, -29.8932, 5.39803, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 85/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -16.5257, -19.9537, -20.5055, 0.83 ) }
    dend_6 { pt3dadd( -15.639, -21.6948, -22.4711, 0.83 ) }
    dend_6 { pt3dadd( -13.0975, -27.5958, -26.5126, 0.28 ) }
    dend_6 { pt3dadd( -12.6321, -28.8006, -27.0849, 0.56 ) }
    dend_6 { pt3dadd( -11.7475, -31.0264, -27.8398, 0.56 ) }
    dend_6 { pt3dadd( -10.8659, -33.3471, -28.4913, 0.56 ) }
    dend_6 { pt3dadd( -9.81272, -36.1191, -29.2696, 0.28 ) }
    dend_6 { pt3dadd( -8.18189, -40.4069, -30.0814, 0.28 ) }
    dend_6 { pt3dadd( -7.57703, -42.0828, -30.0775, 0.83 ) }
    dend_6 { pt3dadd( -6.02992, -46.6317, -29.9473, 0.28 ) }
    dend_6 { pt3dadd( -5.65897, -47.8446, -29.8666, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 96/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -16.5257, -19.9537, -20.5055, 0.83 ) }
    dend_5 { pt3dadd( -17.468, -18.258, -20.6783, 0.83 ) }
    dend_5 { pt3dadd( -19.0599, -15.5914, -20.8297, 0.28 ) }
    dend_5 { pt3dadd( -19.8465, -14.348, -20.866, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_5 { pt3dadd( -21.6846, -11.4329, -21.0301, 0.83 ) }
    dend_5 { pt3dadd( -24.0044, -7.83192, -21.2336, 0.28 ) }
    dend_5 { pt3dadd( -24.8053, -6.60334, -21.4609, 0.28 ) }
    dend_5 { pt3dadd( -25.7117, -5.17978, -21.8332, 0.28 ) }
    dend_5 { pt3dadd( -26.1553, -4.39652, -22.1021, 0.56 ) }
    dend_5 { pt3dadd( -27.2945, -2.18047, -22.9332, 0.28 ) }
    dend_5 { pt3dadd( -27.8482, -1.07402, -23.3751, 0.56 ) }
    dend_5 { pt3dadd( -30.4753, 4.32421, -25.7137, 0.56 ) }
    dend_5 { pt3dadd( -31.4748, 6.40625, -26.5271, 0.83 ) }
    dend_5 { pt3dadd( -33.2127, 9.9398, -27.7255, 0.28 ) }
    dend_5 { pt3dadd( -34.7583, 12.8444, -28.5641, 0.56 ) }
    dend_5 { pt3dadd( -35.4825, 14.1256, -28.8286, 0.28 ) }
    dend_5 { pt3dadd( -36.028, 15.0437, -28.959, 0.56 ) }
    dend_5 { pt3dadd( -37.5716, 17.3856, -29.0087, 0.28 ) }
    dend_5 { pt3dadd( -38.7064, 18.9098, -29.0404, 0.56 ) }
    dend_5 { pt3dadd( -39.7524, 20.2079, -29.0433, 0.83 ) }
    dend_5 { pt3dadd( -41.1132, 21.8728, -29.1147, 0.83 ) }
    dend_5 { pt3dadd( -43.2477, 24.4852, -29.2729, 0.28 ) }
    dend_5 { pt3dadd( -43.8363, 25.2074, -29.3214, 0.56 ) }
    dend_5 { pt3dadd( -44.5061, 26.0435, -29.3819, 0.28 ) }
    dend_5 { pt3dadd( -45.9949, 27.8058, -29.4774, 0.56 ) }
    dend_5 { pt3dadd( -46.891, 28.8698, -29.51, 0.28 ) }
    dend_5 { pt3dadd( -47.4788, 29.4879, -29.5213, 0.56 ) }
    dend_5 { pt3dadd( -49.2585, 31.2752, -29.4625, 0.28 ) }
    dend_5 { pt3dadd( -49.4725, 31.4911, -29.4578, 0.56 ) }
    dend_5 { pt3dadd( -50.7475, 32.7358, -29.4343, 0.56 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 26/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -8.51211, -45.5122, -11.1043, 0.28 ) }
    dend_3 { pt3dadd( -10.6397, -48.3699, -10.0803, 0.28 ) }
    dend_3 { pt3dadd( -11.9964, -50.3234, -9.39437, 0.56 ) }
    dend_3 { pt3dadd( -12.9729, -51.7732, -8.88467, 0.56 ) }
    dend_3 { pt3dadd( -14.4711, -54.0309, -8.10869, 0.56 ) }
    dend_3 { pt3dadd( -16.413, -57.1215, -7.03731, 0.28 ) }
    dend_3 { pt3dadd( -18.0304, -59.8102, -6.11824, 0.28 ) }
    dend_3 { pt3dadd( -19.1243, -61.7675, -5.5145, 0.83 ) }
    dend_3 { pt3dadd( -19.8485, -63.1381, -5.06005, 0.28 ) }
    dend_3 { pt3dadd( -20.2559, -63.9072, -4.80309, 0.83 ) }
    dend_3 { pt3dadd( -21.4306, -66.1782, -4.03484, 0.28 ) }
    dend_3 { pt3dadd( -21.9447, -67.1675, -3.74946, 0.28 ) }
    dend_3 { pt3dadd( -22.3885, -67.9467, -3.60718, 0.56 ) }
    dend_3 { pt3dadd( -23.1202, -69.1279, -3.46869, 0.28 ) }
    dend_3 { pt3dadd( -23.9034, -70.4596, -3.48245, 0.56 ) }
    dend_3 { pt3dadd( -25.4495, -73.1645, -3.73319, 0.28 ) }
    dend_3 { pt3dadd( -26.0297, -74.2033, -3.90722, 0.83 ) }
    dend_3 { pt3dadd( -27.893, -77.3115, -4.76659, 0.28 ) }
    dend_3 { pt3dadd( -28.9252, -78.9338, -5.34884, 0.56 ) }
    dend_3 { pt3dadd( -30.6603, -81.6127, -6.56897, 0.28 ) }
    dend_3 { pt3dadd( -30.943, -82.04, -6.7959, 0.83 ) }
    dend_3 { pt3dadd( -31.651, -83.1007, -7.4398, 0.83 ) }
    dend_3 { pt3dadd( -34.7864, -87.5659, -10.3074, 0.28 ) }
    dend_3 { pt3dadd( -35.34, -88.2803, -10.7972, 0.56 ) }
    dend_3 { pt3dadd( -36.6585, -89.7538, -11.9033, 0.28 ) }
    dend_3 { pt3dadd( -37.0723, -90.1336, -12.1957, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.51211, -45.5122, -11.1043, 0.56 ) }
    dend_2 { pt3dadd( -6.2198, -48.4315, -14.9467, 0.56 ) }
    dend_2 { pt3dadd( -4.94752, -50.1115, -16.5982, 0.56 ) }
    dend_2 { pt3dadd( -3.38568, -52.3163, -18.2557, 0.56 ) }
    dend_2 { pt3dadd( -2.30264, -54.0469, -19.3342, 1.11 ) }
    dend_2 { pt3dadd( -0.526026, -57.2232, -21.0462, 1.11 ) }
    dend_2 { pt3dadd( 0.81513, -59.9255, -22.4921, 0.56 ) }
    dend_2 { pt3dadd( 2.04158, -63.0133, -23.6983, 0.56 ) }
    dend_2 { pt3dadd( 2.85012, -65.3169, -24.4998, 0.28 ) }
    dend_2 { pt3dadd( 3.27246, -67.1103, -24.9895, 0.56 ) }
    dend_2 { pt3dadd( 3.45909, -68.1972, -25.3056, 0.28 ) }
    dend_2 { pt3dadd( 3.90539, -71.4614, -26.0981, 0.56 ) }
    dend_2 { pt3dadd( 4.30891, -74.067, -26.7178, 0.28 ) }
    dend_2 { pt3dadd( 4.42606, -74.8566, -26.8973, 0.83 ) }
    dend_2 { pt3dadd( 5.01592, -78.4364, -27.6467, 0.83 ) }
    dend_2 { pt3dadd( 5.43459, -80.5896, -28.0608, 0.56 ) }
    dend_2 { pt3dadd( 6.31277, -84.589, -28.7199, 0.56 ) }
    dend_2 { pt3dadd( 7.22248, -88.5059, -29.2071, 1.39 ) }
    dend_2 { pt3dadd( 8.34159, -93.0074, -29.6538, 0.28 ) }
    dend_2 { pt3dadd( 8.50871, -93.6945, -29.7041, 0.83 ) }
    dend_2 { pt3dadd( 9.12255, -96.4086, -29.8078, 0.28 ) }
    dend_2 { pt3dadd( 9.5905, -98.8655, -29.7665, 0.28 ) }
    dend_2 { pt3dadd( 9.77075, -99.9787, -29.7143, 0.83 ) }
    dend_2 { pt3dadd( 10.1855, -103.496, -29.4389, 0.28 ) }
    dend_2 { pt3dadd( 10.4061, -105.646, -29.2754, 0.28 ) }
    dend_2 { pt3dadd( 10.5335, -107.112, -29.2383, 0.83 ) }
    dend_2 { pt3dadd( 10.7393, -110.953, -29.2436, 0.28 ) }
    dend_2 { pt3dadd( 10.756, -112.073, -29.28, 0.83 ) }
    dend_2 { pt3dadd( 10.7927, -114.612, -29.4184, 1.39 ) }
    dend_2 { pt3dadd( 10.7496, -117.351, -29.5665, 1.39 ) }
    dend_2 { pt3dadd( 10.6454, -124.271, -29.8767, 0.28 ) }
    dend_2 { pt3dadd( 10.6326, -125.732, -29.9274, 0.83 ) }
    dend_2 { pt3dadd( 10.5247, -131.078, -30.1395, 0.28 ) }
    dend_2 { pt3dadd( 10.4602, -134.437, -30.1894, 0.28 ) }
    dend_2 { pt3dadd( 10.5568, -138.363, -30.0678, 0.83 ) }
    dend_2 { pt3dadd( 10.679, -140.765, -29.8816, 0.28 ) }
    dend_2 { pt3dadd( 10.8367, -142.769, -29.6619, 0.83 ) }
    dend_2 { pt3dadd( 11.3036, -146.575, -29.1132, 0.28 ) }
    dend_2 { pt3dadd( 11.6986, -149.103, -28.6805, 0.83 ) }
    dend_2 { pt3dadd( 13.1595, -158.145, -26.9934, 0.28 ) }
    dend_2 { pt3dadd( 13.4255, -159.683, -26.6969, 0.83 ) }
    dend_2 { pt3dadd( 13.7696, -162.558, -26.2645, 0.83 ) }
    dend_2 { pt3dadd( 14.1072, -168.493, -25.6131, 0.28 ) }
    dend_2 { pt3dadd( 14.1159, -169.192, -25.5898, 0.56 ) }
    dend_2 { pt3dadd( 14.0081, -171.684, -25.7198, 0.28 ) }
    dend_2 { pt3dadd( 13.8826, -173.843, -26.026, 1.39 ) }
    dend_2 { pt3dadd( 13.6575, -182.479, -27.6612, 0.28 ) }
    dend_2 { pt3dadd( 13.7656, -185.419, -28.403, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 14.3342, -191.252, -30.217, 0.28 ) }
    dend_2 { pt3dadd( 14.5526, -192.242, -30.5211, 0.83 ) }
    dend_2 { pt3dadd( 16.8983, -199.065, -32.5771, 0.28 ) }
    dend_2 { pt3dadd( 17.502, -200.339, -32.935, 0.83 ) }
    dend_2 { pt3dadd( 20.0254, -204.328, -33.7528, 0.28 ) }
    dend_2 { pt3dadd( 20.6656, -205.229, -33.8893, 0.56 ) }
    dend_2 { pt3dadd( 25.6516, -211.777, -34.3682, 0.28 ) }
    dend_2 { pt3dadd( 26.3661, -212.696, -34.39, 0.83 ) }
    dend_2 { pt3dadd( 27.265, -213.881, -34.3027, 0.83 ) }
    dend_2 { pt3dadd( 29.7299, -217.328, -33.8737, 0.28 ) }
    dend_2 { pt3dadd( 30.0485, -217.801, -33.783, 0.56 ) }
    dend_2 { pt3dadd( 30.9741, -219.246, -33.4664, 0.28 ) }
    dend_2 { pt3dadd( 31.481, -220.117, -33.2155, 0.83 ) }
    dend_2 { pt3dadd( 34.0448, -224.584, -31.9999, 0.28 ) }
    dend_2 { pt3dadd( 34.6028, -225.51, -31.7671, 0.56 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 15/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -47.9077, 56.0814, 38.8348, 0.56 ) }
    dend_45 { pt3dadd( -50.7025, 55.2567, 39.6697, 0.56 ) }
    dend_45 { pt3dadd( -54.243, 54.212, 40.7274, 0.56 ) }
    dend_45 { pt3dadd( -64.0198, 51.2299, 44.9709, 0.56 ) }
    dend_45 { pt3dadd( -74.3577, 47.8157, 47.035, 0.56 ) }
    dend_45 { pt3dadd( -84.2778, 42.9028, 48.1288, 0.56 ) }
    dend_45 { pt3dadd( -95.1336, 40.9302, 48.9944, 0.56 ) }
    dend_45 { pt3dadd( -106.121, 39.6206, 48.9693, 0.56 ) }
    dend_45 { pt3dadd( -117.119, 38.4275, 48.8222, 0.56 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 24/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -47.9077, 56.0814, 38.8348, 0.56 ) }
    dend_44 { pt3dadd( -50.435, 54.5966, 39.7687, 0.56 ) }
    dend_44 { pt3dadd( -51.6938, 53.857, 40.234, 0.56 ) }
    dend_44 { pt3dadd( -52.9138, 53.1403, 40.6848, 0.56 ) }
    dend_44 { pt3dadd( -56.6712, 50.9328, 42.0734, 0.56 ) }
    dend_44 { pt3dadd( -59.5309, 49.2528, 43.1302, 0.56 ) }
    dend_44 { pt3dadd( -65.931, 45.4927, 45.4954, 0.28 ) }
    dend_44 { pt3dadd( -73.7719, 39.4012, 49.564, 0.28 ) }
    dend_44 { pt3dadd( -80.8499, 31.7873, 52.525, 0.28 ) }
    dend_44 { pt3dadd( -88.3895, 24.7158, 55.5823, 0.28 ) }
    dend_44 { pt3dadd( -95.4547, 17.0432, 58.4355, 0.28 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 35/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.4083, 14.9892, 5.55419, 0.56 ) }
    dend_42 { pt3dadd( 1.64031, 14.5349, 8.2245, 0.56 ) }
    dend_42 { pt3dadd( 0.107443, 14.5971, 9.43735, 0.56 ) }
    dend_42 { pt3dadd( -1.79563, 14.901, 10.8353, 0.56 ) }
    dend_42 { pt3dadd( -3.73419, 15.2901, 12.1202, 0.83 ) }
    dend_42 { pt3dadd( -6.72774, 15.8565, 13.8445, 0.56 ) }
    dend_42 { pt3dadd( -7.63053, 16.0611, 14.3146, 0.83 ) }
    dend_42 { pt3dadd( -10.5567, 17.073, 15.2975, 0.28 ) }
    dend_42 { pt3dadd( -11.2437, 17.5656, 15.5545, 0.83 ) }
    dend_42 { pt3dadd( -12.2005, 19.0464, 15.9968, 0.83 ) }
    dend_42 { pt3dadd( -13.0362, 21.2959, 16.5491, 0.56 ) }
    dend_42 { pt3dadd( -13.4066, 23.2615, 17.0003, 0.56 ) }
    dend_42 { pt3dadd( -13.8665, 27.0691, 17.8528, 0.56 ) }
    dend_42 { pt3dadd( -14.1305, 33.8346, 19.3583, 0.56 ) }
    dend_42 { pt3dadd( -14.0964, 37.2667, 20.1302, 0.56 ) }
    dend_42 { pt3dadd( -13.9938, 38.6814, 20.4505, 0.56 ) }
    dend_42 { pt3dadd( -13.4318, 42.8313, 21.4427, 0.56 ) }
    dend_42 { pt3dadd( -19.5782, 50.3249, 24.7146, 0.56 ) }
    dend_42 { pt3dadd( -25.697, 58.0516, 27.5066, 0.56 ) }
    dend_42 { pt3dadd( -32.7164, 65.2727, 29.1632, 0.56 ) }
    dend_42 { pt3dadd( -39.0577, 73.305, 29.8591, 0.56 ) }
    dend_42 { pt3dadd( -45.5633, 81.2115, 30.2705, 0.56 ) }
    dend_42 { pt3dadd( -50.9718, 89.9636, 29.7255, 0.56 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 4.4083, 14.9892, 5.55419, 0.56 ) }
    dend_35 { pt3dadd( 6.61185, 15.3249, 5.1118, 0.56 ) }
    dend_35 { pt3dadd( 8.39599, 15.6747, 4.8791, 0.56 ) }
    dend_35 { pt3dadd( 11.3575, 16.2554, 4.49283, 0.56 ) }
    dend_35 { pt3dadd( 13.8169, 16.7376, 4.17206, 0.56 ) }
    dend_35 { pt3dadd( 15.3645, 17.041, 3.97021, 0.56 ) }
    dend_35 { pt3dadd( 17.3118, 17.4228, 3.71623, 0.56 ) }
    dend_35 { pt3dadd( 18.9225, 17.7026, 3.67111, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 66/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 65.697, 15.1899, -50.5428, 0.56 ) }
    dend_29 { pt3dadd( 68.268, 16.3027, -51.7744, 0.56 ) }
    dend_29 { pt3dadd( 69.5211, 16.8451, -52.3747, 0.56 ) }
    dend_29 { pt3dadd( 70.9765, 17.475, -53.072, 0.28 ) }
    dend_29 { pt3dadd( 72.0597, 17.9438, -53.5909, 0.28 ) }
    dend_29 { pt3dadd( 73.7021, 18.6547, -54.3777, 0.56 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 72/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 65.697, 15.1899, -50.5428, 0.83 ) }
    dend_28 { pt3dadd( 66.7895, 13.8955, -54.5736, 0.83 ) }
    dend_28 { pt3dadd( 67.7036, 13.0982, -57.5113, 0.83 ) }
    dend_28 { pt3dadd( 68.8549, 12.7332, -60.1672, 0.83 ) }
    dend_28 { pt3dadd( 70.0138, 12.5945, -62.3655, 0.56 ) }
    dend_28 { pt3dadd( 71.3244, 12.4071, -64.4346, 0.56 ) }
    dend_28 { pt3dadd( 72.8013, 12.2081, -66.4609, 0.28 ) }
    dend_28 { pt3dadd( 73.8209, 12.192, -67.5016, 0.83 ) }
    dend_28 { pt3dadd( 77.3492, 12.2917, -70.4244, 0.83 ) }
    dend_28 { pt3dadd( 79.4008, 12.3464, -71.9722, 0.83 ) }
    dend_28 { pt3dadd( 82.3418, 12.4989, -74.422, 0.56 ) }
    dend_28 { pt3dadd( 83.5887, 12.5164, -75.5811, 0.56 ) }
    dend_28 { pt3dadd( 84.7561, 12.5402, -76.8053, 0.56 ) }
    dend_28 { pt3dadd( 87.2783, 12.7281, -79.9615, 0.56 ) }
    dend_28 { pt3dadd( 88.6664, 13.0109, -81.9954, 0.83 ) }
    dend_28 { pt3dadd( 91.6123, 14.1566, -86.648, 0.56 ) }
    dend_28 { pt3dadd( 92.3079, 14.5753, -87.8465, 0.28 ) }
    dend_28 { pt3dadd( 93.3446, 15.3227, -89.6304, 1.11 ) }
    dend_28 { pt3dadd( 96.7003, 17.9486, -95.0459, 0.56 ) }
    dend_28 { pt3dadd( 98.2799, 19.3157, -97.1745, 0.56 ) }
    dend_28 { pt3dadd( 99.7773, 20.6305, -98.9478, 1.39 ) }
    dend_28 { pt3dadd( 104.365, 24.6616, -103.964, 0.28 ) }
    dend_28 { pt3dadd( 106.894, 26.8867, -106.59, 0.28 ) }
    dend_28 { pt3dadd( 109.92, 29.5376, -109.567, 1.39 ) }
    dend_28 { pt3dadd( 117.365, 36.0828, -116.391, 0.28 ) }
    dend_28 { pt3dadd( 119.373, 37.777, -118.18, 0.83 ) }
    dend_28 { pt3dadd( 121.73, 39.7062, -120.211, 0.28 ) }
    dend_28 { pt3dadd( 122.182, 40.0559, -120.585, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_28 { pt3dadd( 125.07, 42.1803, -123.034, 0.28 ) }
    dend_28 { pt3dadd( 126.325, 43.0182, -124.101, 1.11 ) }
    dend_28 { pt3dadd( 131.342, 45.7834, -128.412, 0.28 ) }
    dend_28 { pt3dadd( 133.177, 46.6342, -129.944, 0.83 ) }
    dend_28 { pt3dadd( 137.285, 48.0921, -133.181, 0.28 ) }
    dend_28 { pt3dadd( 137.536, 48.1516, -133.396, 0.56 ) }
    dend_28 { pt3dadd( 139.297, 48.3375, -134.999, 0.28 ) }
    dend_28 { pt3dadd( 141.024, 48.3198, -136.757, 0.56 ) }
    dend_28 { pt3dadd( 142.185, 48.1428, -138.106, 0.28 ) }
    dend_28 { pt3dadd( 143.65, 47.8684, -139.961, 0.83 ) }
    dend_28 { pt3dadd( 147.037, 47.2641, -144.351, 0.28 ) }
    dend_28 { pt3dadd( 147.244, 47.237, -144.626, 0.56 ) }
    dend_28 { pt3dadd( 149.19, 47.1105, -147.374, 0.28 ) }
    dend_28 { pt3dadd( 149.809, 47.1097, -148.242, 0.56 ) }
    dend_28 { pt3dadd( 152.232, 47.301, -151.636, 0.28 ) }
    dend_28 { pt3dadd( 153.283, 47.4267, -153.117, 0.83 ) }
    dend_28 { pt3dadd( 153.468, 47.4997, -153.399, 0.83 ) }
    dend_28 { pt3dadd( 155.805, 48.7493, -157.413, 0.28 ) }
    dend_28 { pt3dadd( 156.128, 48.9701, -157.967, 0.28 ) }
    dend_28 { pt3dadd( 156.506, 49.257, -158.618, 0.83 ) }
    dend_28 { pt3dadd( 156.672, 49.3854, -158.892, 0.83 ) }
    dend_28 { pt3dadd( 163.595, 55.0381, -170.575, 0.28 ) }
    dend_28 { pt3dadd( 164.855, 56.1039, -172.685, 0.83 ) }
    dend_28 { pt3dadd( 168.904, 59.7113, -179.424, 0.28 ) }
    dend_28 { pt3dadd( 169.13, 59.913, -179.799, 0.28 ) }
    dend_28 { pt3dadd( 170.135, 60.8272, -181.436, 1.11 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 26/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 27.8683, 12.6536, -10.5037, 0.56 ) }
    dend_26 { pt3dadd( 29.6803, 13.3127, -10.6976, 0.56 ) }
    dend_26 { pt3dadd( 31.8621, 14.0159, -10.6318, 0.56 ) }
    dend_26 { pt3dadd( 32.9842, 14.2961, -10.4899, 0.56 ) }
    dend_26 { pt3dadd( 34.7537, 14.6303, -10.1795, 0.56 ) }
    dend_26 { pt3dadd( 36.2325, 14.873, -9.82919, 0.56 ) }
    dend_26 { pt3dadd( 39.3435, 15.2716, -8.83589, 0.56 ) }
    dend_26 { pt3dadd( 40.8698, 15.3335, -8.08723, 0.56 ) }
    dend_26 { pt3dadd( 42.1183, 15.2922, -7.30395, 0.56 ) }
    dend_26 { pt3dadd( 42.9524, 15.2393, -6.66116, 0.56 ) }
    dend_26 { pt3dadd( 44.2785, 15.0835, -5.4357, 0.83 ) }
    dend_26 { pt3dadd( 45.6862, 14.7783, -3.95561, 0.56 ) }
    dend_26 { pt3dadd( 46.6183, 14.5001, -2.88136, 0.56 ) }
    dend_26 { pt3dadd( 47.7632, 14.2431, -1.52206, 0.56 ) }
    dend_26 { pt3dadd( 48.6752, 14.1273, -0.454883, 0.56 ) }
    dend_26 { pt3dadd( 49.2909, 14.1043, 0.21136, 0.56 ) }
    dend_26 { pt3dadd( 49.8993, 14.082, 0.773912, 0.83 ) }
    dend_26 { pt3dadd( 50.8148, 14.1202, 1.44782, 0.56 ) }
    dend_26 { pt3dadd( 51.4706, 14.18, 1.87412, 0.56 ) }
    dend_26 { pt3dadd( 52.5592, 14.28, 2.52173, 0.83 ) }
    dend_26 { pt3dadd( 54.7656, 14.5329, 3.75078, 0.83 ) }
    dend_26 { pt3dadd( 57.5886, 14.855, 5.08713, 0.56 ) }
    dend_26 { pt3dadd( 59.3406, 15.0017, 5.80268, 0.56 ) }
    dend_26 { pt3dadd( 60.3738, 15.0741, 6.15068, 0.56 ) }
    dend_26 { pt3dadd( 61.4274, 15.131, 6.3841, 0.56 ) }
    dend_26 { pt3dadd( 62.581, 15.1914, 6.49152, 0.56 ) }
    dend_26 { pt3dadd( 64.9238, 15.3568, 6.23592, 0.83 ) }
    dend_26 { pt3dadd( 66.4963, 15.581, 5.94257, 0.56 ) }
    dend_26 { pt3dadd( 67.6247, 15.7082, 5.74121, 0.83 ) }
    dend_26 { pt3dadd( 69.8148, 16.0298, 5.36254, 0.56 ) }
    dend_26 { pt3dadd( 70.8121, 16.223, 5.19867, 0.56 ) }
    dend_26 { pt3dadd( 72.1163, 16.5402, 5.0293, 0.56 ) }
    dend_26 { pt3dadd( 74.8548, 17.356, 4.88496, 0.28 ) }
    dend_26 { pt3dadd( 77.718, 18.1769, 4.85479, 0.28 ) }
    dend_26 { pt3dadd( 79.0246, 18.4859, 4.92024, 0.28 ) }
    dend_26 { pt3dadd( 80.4678, 18.8192, 5.0757, 0.28 ) }
    dend_26 { pt3dadd( 81.6569, 19.0881, 5.18951, 0.28 ) }
    dend_26 { pt3dadd( 82.6454, 19.2757, 5.27361, 0.56 ) }
    dend_26 { pt3dadd( 85.2993, 19.6131, 5.32061, 0.28 ) }
    dend_26 { pt3dadd( 86.3671, 19.7366, 5.44993, 0.28 ) }
    dend_26 { pt3dadd( 87.4841, 19.7289, 5.65865, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 67/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 27.8683, 12.6536, -10.5037, 0.56 ) }
    dend_21 { pt3dadd( 31.6903, 10.992, -8.6644, 0.56 ) }
    dend_21 { pt3dadd( 33.8805, 10.0398, -7.61044, 0.83 ) }
    dend_21 { pt3dadd( 35.7957, 9.2071, -6.68878, 0.83 ) }
    dend_21 { pt3dadd( 37.9477, 8.27149, -5.65316, 0.56 ) }
    dend_21 { pt3dadd( 41.2561, 6.83314, -4.06108, 0.56 ) }
    // Section: dend_17, id: dend_17, parent: dend_15 (entry count 73/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 19.9321, -49.3515, 12.2634, 0.56 ) }
    dend_17 { pt3dadd( 18.9019, -51.0041, 11.7183, 0.56 ) }
    dend_17 { pt3dadd( 17.8536, -52.6859, 11.1636, 0.56 ) }
    dend_17 { pt3dadd( 13.375, -61.6541, 9.57758, 0.56 ) }
    dend_17 { pt3dadd( 8.53837, -70.0091, 6.57739, 0.56 ) }
    dend_17 { pt3dadd( 4.44563, -78.5705, 3.02298, 0.56 ) }
    dend_17 { pt3dadd( 1.5233, -88.02, 0.51182, 0.56 ) }
    dend_17 { pt3dadd( -1.76069, -97.6074, -0.680869, 0.56 ) }
    dend_17 { pt3dadd( -3.83381, -107.62, -0.224345, 0.56 ) }
    dend_17 { pt3dadd( -4.03639, -117.894, -0.274868, 0.56 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 83/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 19.9321, -49.3515, 12.2634, 0.56 ) }
    dend_16 { pt3dadd( 21.4541, -49.1187, 13.0874, 0.56 ) }
    dend_16 { pt3dadd( 24.7397, -48.5817, 14.8317, 0.56 ) }
    dend_16 { pt3dadd( 26.6862, -48.2636, 15.8651, 0.56 ) }
    dend_16 { pt3dadd( 28.6816, -47.9375, 16.9244, 0.56 ) }
    dend_16 { pt3dadd( 31.4033, -47.4927, 18.3693, 0.56 ) }
    dend_16 { pt3dadd( 34.612, -46.9683, 20.0727, 0.56 ) }
    dend_16 { pt3dadd( 36.8234, -46.6876, 21.1488, 0.56 ) }
    dend_16 { pt3dadd( 46.3792, -46.769, 23.8134, 0.56 ) }
    dend_16 { pt3dadd( 55.2189, -45.2013, 28.0449, 0.56 ) }
    dend_16 { pt3dadd( 64.1806, -43.2854, 31.8645, 0.56 ) }
    dend_16 { pt3dadd( 72.9268, -40.7342, 35.8384, 0.56 ) }
    dend_16 { pt3dadd( 80.8635, -38.2469, 41.2879, 0.56 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 96/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 32.622, -44.7698, 2.74902, 0.56 ) }
    dend_14 { pt3dadd( 34.6597, -47.1198, 1.96006, 0.56 ) }
    dend_14 { pt3dadd( 35.8335, -48.5233, 1.53315, 0.28 ) }
    dend_14 { pt3dadd( 37.5224, -50.8367, 0.90349, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 39.8053, -54.0212, 0.032173, 0.28 ) }
    dend_14 { pt3dadd( 40.0609, -54.378, -0.063333, 0.56 ) }
    dend_14 { pt3dadd( 40.9633, -55.6754, -0.383631, 0.28 ) }
    dend_14 { pt3dadd( 41.3791, -56.2591, -0.530602, 0.83 ) }
    dend_14 { pt3dadd( 43.3729, -59.0318, -1.2525, 0.28 ) }
    dend_14 { pt3dadd( 44.1678, -60.0673, -1.54081, 0.56 ) }
    dend_14 { pt3dadd( 45.3338, -61.4795, -1.96336, 0.28 ) }
    dend_14 { pt3dadd( 46.1757, -62.4659, -2.27444, 0.83 ) }
    dend_14 { pt3dadd( 48.1868, -64.6119, -3.05352, 0.83 ) }
    dend_14 { pt3dadd( 50.3003, -66.6373, -3.87003, 0.28 ) }
    dend_14 { pt3dadd( 51.599, -67.6615, -4.34216, 0.56 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 11/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 32.622, -44.7698, 2.74902, 0.56 ) }
    dend_13 { pt3dadd( 34.969, -44.67, 3.33494, 0.56 ) }
    dend_13 { pt3dadd( 36.1242, -44.5725, 3.52572, 0.56 ) }
    dend_13 { pt3dadd( 37.9353, -44.377, 3.69683, 0.56 ) }
    dend_13 { pt3dadd( 39.8375, -44.0738, 3.79637, 0.56 ) }
    dend_13 { pt3dadd( 41.9233, -43.7539, 3.70696, 0.83 ) }
    dend_13 { pt3dadd( 44.0733, -43.4339, 3.5823, 0.56 ) }
    dend_13 { pt3dadd( 45.3311, -43.2545, 3.36811, 0.56 ) }
    dend_13 { pt3dadd( 46.4397, -43.1723, 3.12692, 0.56 ) }
    dend_13 { pt3dadd( 47.6068, -43.0695, 2.85933, 0.56 ) }
    dend_13 { pt3dadd( 49.8892, -42.6378, 2.24902, 0.56 ) }
    dend_13 { pt3dadd( 51.4619, -42.2272, 1.88607, 0.56 ) }
    dend_13 { pt3dadd( 52.7663, -41.8646, 1.65419, 0.56 ) }
    dend_13 { pt3dadd( 54.4878, -41.4268, 1.39082, 0.56 ) }
    dend_13 { pt3dadd( 56.8751, -40.7759, 1.08434, 0.56 ) }
    dend_13 { pt3dadd( 58.1086, -40.4136, 0.959469, 0.56 ) }
    dend_13 { pt3dadd( 59.6577, -39.7981, 0.885882, 0.56 ) }
    dend_13 { pt3dadd( 61.6137, -38.8995, 0.666041, 0.28 ) }
    dend_13 { pt3dadd( 68.8259, -36.4467, 0.203234, 0.28 ) }
    dend_13 { pt3dadd( 75.5337, -32.9316, -1.04407, 0.28 ) }
    dend_13 { pt3dadd( 81.5599, -29.0133, -3.83008, 0.28 ) }
    // Section: dend_41, id: dend_41, parent: dend_35 (entry count 32/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 18.9225, 17.7026, 3.67111, 0.56 ) }
    dend_41 { pt3dadd( 21.4239, 20.2316, -2.26972, 0.56 ) }
    dend_41 { pt3dadd( 22.8592, 21.6744, -5.00826, 0.56 ) }
    dend_41 { pt3dadd( 23.1787, 22.0078, -5.59899, 0.56 ) }
    dend_41 { pt3dadd( 23.9453, 22.7961, -7.03411, 0.28 ) }
    dend_41 { pt3dadd( 25.106, 24.0054, -9.15785, 0.28 ) }
    dend_41 { pt3dadd( 25.9239, 24.9035, -10.635, 0.83 ) }
    dend_41 { pt3dadd( 27.6114, 26.7546, -13.1673, 0.28 ) }
    dend_41 { pt3dadd( 28.4664, 28.0173, -14.6062, 0.56 ) }
    dend_41 { pt3dadd( 29.5418, 29.9073, -16.5608, 0.28 ) }
    dend_41 { pt3dadd( 30.1644, 31.1753, -17.8398, 0.83 ) }
    dend_41 { pt3dadd( 30.5991, 32.2685, -18.8359, 0.28 ) }
    dend_41 { pt3dadd( 31.3313, 34.3584, -20.6255, 0.28 ) }
    dend_41 { pt3dadd( 32.2847, 37.135, -22.7783, 0.28 ) }
    dend_41 { pt3dadd( 33.0396, 39.5874, -24.3264, 0.56 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 47/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 18.9225, 17.7026, 3.67111, 0.56 ) }
    dend_36 { pt3dadd( 21.885, 18.1625, 5.47144, 0.56 ) }
    dend_36 { pt3dadd( 24.145, 18.5133, 6.84489, 1.11 ) }
    dend_36 { pt3dadd( 28.0102, 19.1133, 9.1938, 0.56 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 51/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 41.2561, 6.83314, -4.06108, 0.56 ) }
    dend_23 { pt3dadd( 44.938, 2.5441, -2.19533, 0.56 ) }
    dend_23 { pt3dadd( 46.7038, 0.949839, -1.34258, 0.56 ) }
    dend_23 { pt3dadd( 47.4053, 0.316655, -1.0039, 0.56 ) }
    dend_23 { pt3dadd( 48.9678, -1.09396, -0.249371, 0.28 ) }
    dend_23 { pt3dadd( 51.4053, -3.29449, 0.927671, 0.56 ) }
    dend_23 { pt3dadd( 53.3886, -5.08498, 1.88539, 0.28 ) }
    dend_23 { pt3dadd( 54.8871, -5.93594, 2.6695, 0.56 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 59/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 41.2561, 6.83314, -4.06108, 0.56 ) }
    dend_22 { pt3dadd( 45.8079, 8.92293, 2.01596, 0.56 ) }
    dend_22 { pt3dadd( 46.9856, 9.4636, 3.58834, 0.56 ) }
    dend_22 { pt3dadd( 47.7159, 9.7989, 4.56322, 0.56 ) }
    dend_22 { pt3dadd( 49.6465, 10.6853, 7.14078, 0.56 ) }
    dend_22 { pt3dadd( 51.2215, 11.4084, 9.24351, 0.56 ) }
    dend_22 { pt3dadd( 59.1973, 12.0831, 19.13, 0.56 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 66/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 28.0102, 19.1133, 9.1938, 0.56 ) }
    dend_40 { pt3dadd( 29.4732, 21.2029, 8.76241, 0.56 ) }
    dend_40 { pt3dadd( 31.4094, 23.8809, 8.19595, 0.56 ) }
    dend_40 { pt3dadd( 34.48, 28.1281, 7.29755, 0.28 ) }
    dend_40 { pt3dadd( 38.4301, 33.5918, 6.14185, 0.28 ) }
    dend_40 { pt3dadd( 39.9548, 35.7006, 5.6958, 0.28 ) }
    dend_40 { pt3dadd( 41.5051, 37.8449, 5.24221, 0.28 ) }
    dend_40 { pt3dadd( 42.5787, 39.2818, 4.93556, 0.56 ) }
    dend_40 { pt3dadd( 48.9194, 48.8465, 3.55805, 0.56 ) }
    dend_40 { pt3dadd( 54.4771, 59.045, 3.91766, 0.56 ) }
    dend_40 { pt3dadd( 61.4874, 68.1456, 4.96287, 0.56 ) }
    dend_40 { pt3dadd( 70.1315, 75.4256, 6.59706, 0.56 ) }
    dend_40 { pt3dadd( 78.6406, 82.7649, 8.65836, 0.56 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 79/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 28.0102, 19.1133, 9.1938, 0.83 ) }
    dend_37 { pt3dadd( 29.1241, 16.2731, 9.03159, 0.83 ) }
    dend_37 { pt3dadd( 29.7955, 14.5609, 8.93381, 0.83 ) }
    dend_37 { pt3dadd( 36.1227, 3.50743, 8.64888, 0.83 ) }
    dend_37 { pt3dadd( 42.0342, -7.77384, 7.76308, 0.83 ) }
    dend_37 { pt3dadd( 46.5977, -19.637, 6.09112, 0.83 ) }
    dend_37 { pt3dadd( 49.8941, -32.0052, 5.18139, 0.83 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 86/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 54.8871, -5.93594, 2.6695, 0.56 ) }
    dend_25 { pt3dadd( 56.6728, -5.40457, 1.44038, 0.56 ) }
    dend_25 { pt3dadd( 58.8784, -4.74826, -0.07775, 0.28 ) }
    dend_25 { pt3dadd( 59.9535, -4.42833, -0.817789, 0.56 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 90/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 54.8871, -5.93594, 2.6695, 0.28 ) }
    dend_24 { pt3dadd( 57.7225, -9.83698, 4.6836, 0.28 ) }
    dend_24 { pt3dadd( 59.8912, -11.7122, 6.1404, 0.56 ) }
    dend_24 { pt3dadd( 61.5293, -12.5579, 6.85268, 0.56 ) }
    dend_24 { pt3dadd( 64.517, -13.478, 7.75908, 0.56 ) }
    dend_24 { pt3dadd( 65.8219, -13.7791, 8.01263, 0.56 ) }
    dend_24 { pt3dadd( 69.9068, -14.505, 8.62903, 0.83 ) }
    dend_24 { pt3dadd( 75.3808, -14.7023, 8.98321, 0.83 ) }
    dend_24 { pt3dadd( 81.4538, -14.4274, 9.21526, 0.56 ) }
    dend_24 { pt3dadd( 83.3056, -14.2843, 9.21191, 0.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_24 { pt3dadd( 87.1702, -13.7327, 8.99273, 0.56 ) }
    dend_24 { pt3dadd( 90.2173, -13.2378, 8.64564, 0.28 ) }
    dend_24 { pt3dadd( 92.4046, -12.9176, 8.26399, 0.28 ) }
    dend_24 { pt3dadd( 94.2354, -12.7022, 7.91945, 0.56 ) }
    dend_24 { pt3dadd( 97.5181, -12.3235, 7.49356, 0.28 ) }
    dend_24 { pt3dadd( 101.582, -11.7124, 6.8517, 0.28 ) }
    dend_24 { pt3dadd( 102.9, -11.399, 6.59831, 0.56 ) }
    dend_24 { pt3dadd( 105.621, -10.6954, 5.83485, 0.83 ) }
    dend_24 { pt3dadd( 107.192, -10.265, 5.31314, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 9/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 49.8941, -32.0052, 5.18139, 0.56 ) }
    dend_39 { pt3dadd( 53.5798, -41.0952, 3.72087, 0.56 ) }
    dend_39 { pt3dadd( 59.0463, -49.1293, 2.15798, 0.56 ) }
    dend_39 { pt3dadd( 63.1606, -58.1112, 1.46009, 0.56 ) }
    dend_39 { pt3dadd( 65.771, -67.7018, 1.46003, 0.56 ) }
    dend_39 { pt3dadd( 67.858, -77.3198, -0.012734, 0.56 ) }
    dend_39 { pt3dadd( 71.8613, -86.3162, -1.11096, 0.56 ) }
    dend_39 { pt3dadd( 77.0934, -94.6363, -1.86215, 0.56 ) }
    dend_39 { pt3dadd( 81.7222, -103.304, -0.962452, 0.56 ) }
    dend_39 { pt3dadd( 85.9005, -111.808, 1.67699, 0.56 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 19/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 49.8941, -32.0052, 5.18139, 0.56 ) }
    dend_38 { pt3dadd( 54.614, -43.2048, 4.81591, 0.56 ) }
    dend_38 { pt3dadd( 58.2608, -54.6871, 6.13303, 0.56 ) }
    dend_38 { pt3dadd( 64.5703, -64.7427, 8.07044, 0.56 ) }
    dend_38 { pt3dadd( 71.3867, -74.6949, 8.42914, 0.56 ) }
    dend_38 { pt3dadd( 77.6544, -84.9577, 6.74372, 0.56 ) }
    dend_38 { pt3dadd( 82.3844, -96.0327, 4.8095, 0.56 ) }
    dend_38 { pt3dadd( 84.7885, -107.816, 2.54743, 0.56 ) }
    dend_38 { pt3dadd( 86.5721, -119.868, 1.86382, 0.56 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_2 = new SectionList()
    dend_48 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_48, dend_47, dend_32, dend_31, dend_18, dend_7, dend_0, axon_0, dend_50, dend_49, dend_46, dend_33, dend_30, dend_19, dend_11, dend_8, dend_4, dend_1, axon_1, dend_52, dend_51, dend_43, dend_34, dend_27, dend_20, dend_15, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_45, dend_44, dend_42, dend_35, dend_29, dend_28, dend_26, dend_21, dend_17, dend_16, dend_14, dend_13, dend_41, dend_36, dend_23, dend_22, dend_40, dend_37, dend_25, dend_24, dend_39, dend_38]}
    ModelViewParmSubset_5 = new SectionList()
    dend_48 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_47 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_31 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_49 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_46 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_30 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_52 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_51 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_43 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_27 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_9 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_5 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_3 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_2 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_45 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_44 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_42 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_26 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_17 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_16 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_13 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_40 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_37 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_39 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_38 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_32 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_33 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_18 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_0 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_34 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_48 OneSecGrp_SectionRef_2.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_7 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_19 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_35 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_8 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_11 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_4 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_20 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_36 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_1 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_15 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_10 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_21 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_12 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_50 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_6 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_41 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_23 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_22 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_14 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_29 OneSecGrp_SectionRef_39.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_18, dend_18, dend_18, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_34, dend_34, dend_34, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_20, dend_20, dend_20, dend_20, dend_20, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_36, dend_36, dend_36, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_47 nseg = 9
    dend_31 nseg = 5
    dend_49 nseg = 5
    dend_46 nseg = 3
    dend_30 nseg = 7
    dend_52 nseg = 3
    dend_51 nseg = 3
    dend_43 nseg = 3
    dend_27 nseg = 3
    dend_9 nseg = 3
    dend_5 nseg = 3
    dend_3 nseg = 3
    dend_2 nseg = 9
    dend_45 nseg = 3
    dend_44 nseg = 3
    dend_42 nseg = 5
    dend_28 nseg = 9
    dend_26 nseg = 3
    dend_17 nseg = 3
    dend_16 nseg = 3
    dend_13 nseg = 3
    dend_40 nseg = 5
    dend_37 nseg = 3
    dend_24 nseg = 3
    dend_39 nseg = 5
    dend_38 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L23_NBC_ad562fc72b_0_0


