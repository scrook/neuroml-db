// Cell: Cell_478810017
/*
{
  "id" : "Cell_478810017",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "509.61, 410.467, 25.2, 11.7526", "515.486, 410.467, 25.2, 11.7526", "521.363, 410.467, 25.2, 11.7526" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "515.486, 410.467, 25.2, 1.0", "521.328, 424.283, 25.2, 1.0", "527.169, 438.099, 25.2, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "509.633, 407.584, 25.0193, 2.2748", "508.591, 405.554, 25.2286, 1.4258", "506.862, 404.069, 25.6061, 1.3734", "505.084, 402.633, 25.8629, 1.3728", "503.21, 401.32, 25.9395, 1.3728", "501.59, 399.707, 26.0336, 1.3728", "500.76, 398.92, 26.0249, 1.252", "499.928, 398.134, 26.0148, 1.1282" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "519.23, 415.329, 24.1695, 1.0506", "520.069, 416.106, 24.1524, 1.0028", "520.911, 416.88, 24.139, 0.9894", "521.992, 417.244, 24.277, 0.8512", "523.078, 417.6, 24.4178, 0.7106", "524.22, 417.543, 24.4502, 0.7134", "525.363, 417.483, 24.482, 0.717" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "510.455, 411.045, 20.9783, 1.1688", "509.361, 411.319, 20.6518, 0.4512", "508.27, 411.661, 20.5824, 0.3892", "507.197, 412.055, 20.5126, 0.4244", "506.139, 412.489, 20.4424, 0.5362", "505.13, 413.017, 20.3461, 0.5956", "504.157, 413.619, 20.2297, 0.6146", "503.193, 414.231, 20.0777, 0.6028", "502.234, 414.851, 19.8986, 0.5674", "501.277, 415.471, 19.7022, 0.6662", "500.319, 416.091, 19.4926, 0.8672", "499.422, 416.791, 19.3, 0.9876", "498.571, 417.552, 19.1203, 1.0466", "497.56, 417.953, 18.9218, 0.9638", "496.427, 418.084, 18.7089, 0.7738", "495.289, 418.126, 18.4938, 0.6128", "494.148, 418.11, 18.2772, 0.4712", "493.008, 418.132, 18.0856, 0.4692", "491.867, 418.178, 17.9105, 0.5602", "490.731, 418.277, 17.7235, 0.5508", "489.598, 418.412, 17.5285, 0.4752", "488.535, 418.687, 16.8949, 0.5396", "487.519, 419.053, 15.9715, 0.6966", "486.647, 419.742, 15.3315, 0.885", "485.781, 420.444, 14.7035, 1.0746", "484.759, 420.954, 14.7507, 0.8932", "483.733, 421.462, 14.8034, 0.7086" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "513.514, 416.07, 27.4445, 0.4132", "513.073, 417.113, 27.8416, 0.4074", "512.624, 418.154, 28.2313, 0.4796", "511.905, 419.0, 28.8932, 0.4914", "511.184, 419.847, 29.5551, 0.5032" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "514.063, 405.119, 20.4866, 0.8534", "513.417, 404.238, 19.6583, 0.6968", "512.592, 403.571, 19.0542, 0.6044", "511.514, 403.205, 18.7668, 0.6028", "510.409, 403.075, 18.405, 0.6228", "509.283, 403.154, 17.9772, 0.6618", "508.479, 402.639, 17.3711, 0.617", "507.969, 401.677, 16.671, 0.5264", "508.081, 400.543, 16.391, 0.6156", "508.14, 399.414, 16.1326, 0.6896", "507.856, 398.306, 16.0096, 0.6702", "507.666, 397.2, 15.8815, 0.6406", "507.959, 396.096, 15.727, 0.5586", "508.273, 395.0, 15.5494, 0.4906", "508.698, 393.944, 15.2578, 0.492", "509.112, 392.886, 14.9405, 0.5116", "509.476, 391.817, 14.5067, 0.6136", "509.724, 390.743, 14.0371, 0.6996", "509.463, 389.659, 13.4111, 0.7174", "509.26, 388.562, 12.8573, 0.7078", "509.206, 387.428, 12.4966, 0.625", "509.347, 386.352, 12.095, 0.542", "509.968, 385.413, 11.5937, 0.4592", "510.397, 384.413, 11.0465, 0.4066", "510.477, 383.301, 10.4159, 0.409", "510.261, 382.224, 10.0988, 0.418", "509.806, 381.174, 10.0351, 0.4322", "509.808, 380.091, 9.9561, 0.482", "510.099, 378.986, 9.8673, 0.5548", "510.175, 377.867, 9.4644, 0.531", "510.163, 376.743, 8.9362, 0.4688", "509.84, 375.67, 8.5957, 0.4834", "509.419, 374.613, 8.3133, 0.522", "508.368, 374.418, 7.8088, 0.602", "507.25, 374.317, 7.28, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "516.0, 404.049, 24.3235, 1.2434", "516.287, 402.943, 24.2948, 1.2262", "516.577, 401.836, 24.2663, 1.2146", "517.202, 400.879, 24.2197, 1.1722", "517.829, 399.922, 24.1732, 1.13", "518.542, 399.027, 24.1462, 1.0672", "519.254, 398.131, 24.1192, 1.0044" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999574576703782
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "527.169, 438.099, 25.2, 1.0", "533.01, 451.915, 25.2, 1.0", "538.852, 465.731, 25.2, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_18",
    "id" : "apic_18",
    "points3d" : [ "499.928, 398.134, 26.0148, 1.1282", "498.595, 398.121, 27.5781, 0.9592", "497.472, 398.254, 27.9688, 1.0554", "496.346, 398.39, 28.3352, 1.1584", "495.528, 399.15, 28.9092, 1.1714", "494.715, 399.918, 29.4868, 1.1826" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "499.928, 398.134, 26.0148, 1.1282", "498.631, 397.397, 25.7818, 1.0526", "497.625, 396.856, 25.5874, 1.011", "496.633, 396.289, 25.685, 0.9652", "495.641, 395.72, 25.7859, 0.9192", "494.717, 395.057, 26.0891, 1.0248", "493.793, 394.395, 26.393, 1.1308", "493.071, 393.509, 26.4522, 1.0704", "492.349, 392.621, 26.511, 1.01" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "525.363, 417.483, 24.482, 0.717", "525.18, 418.564, 25.6904, 0.8664", "525.309, 419.591, 26.865, 1.0102", "525.272, 420.687, 27.6578, 0.8628", "525.18, 421.776, 28.4208, 0.7478", "524.777, 422.818, 29.0184, 0.813", "524.398, 423.861, 29.6769, 0.8438", "524.116, 424.905, 30.5981, 0.7266", "523.986, 425.982, 31.395, 0.6986", "523.997, 427.091, 32.0793, 0.7516", "523.62, 428.064, 32.739, 0.7604", "522.903, 428.917, 33.3771, 0.7306", "522.141, 429.74, 33.9128, 0.7414", "521.36, 430.55, 34.4042, 0.7698", "520.502, 431.273, 34.9325, 0.7082", "519.615, 431.961, 35.4752, 0.612", "519.359, 432.942, 36.4571, 0.4824", "519.247, 433.991, 37.5404, 0.345", "518.638, 434.917, 38.2231, 0.4242", "518.021, 435.84, 38.8987, 0.507", "517.308, 436.704, 39.4565, 0.5132", "516.593, 437.569, 40.0134, 0.5184", "515.86, 438.414, 40.5944, 0.6642", "515.127, 439.259, 41.176, 0.811", "514.427, 440.131, 41.769, 0.7358", "513.728, 441.003, 42.3623, 0.6586", "513.296, 442.026, 43.0335, 0.4844", "512.864, 443.049, 43.7055, 0.3094", "512.499, 444.086, 44.4886, 0.2922", "512.135, 445.121, 45.2721, 0.2752", "511.773, 446.157, 46.0729, 0.2762", "511.41, 447.191, 46.8734, 0.2774", "511.153, 448.284, 47.4006, 0.2806", "510.896, 449.378, 47.9273, 0.284" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "525.363, 417.483, 24.482, 0.717", "526.631, 416.977, 24.5873, 0.7948", "527.701, 416.577, 24.4914, 0.7898", "528.775, 416.19, 24.3078, 0.7514", "529.904, 416.067, 24.1447, 0.7726", "531.045, 415.993, 23.9854, 0.8048", "532.085, 415.541, 24.0607, 0.8036", "533.111, 415.038, 24.1679, 0.798", "534.036, 414.369, 24.3364, 0.836", "534.953, 413.689, 24.5099, 0.8774", "535.832, 412.958, 24.4688, 0.9548", "536.709, 412.224, 24.4149, 1.0344", "537.667, 411.61, 24.1435, 0.8998", "538.63, 411.001, 23.8608, 0.754", "539.359, 410.13, 23.6098, 0.7548", "540.08, 409.247, 23.3601, 0.7612", "540.78, 408.344, 23.2515, 0.7982", "541.48, 407.44, 23.1481, 0.8364", "542.205, 406.555, 23.1792, 0.7926", "542.93, 405.67, 23.2151, 0.746", "543.81, 404.942, 23.3395, 0.7918", "544.694, 404.217, 23.4669, 0.8406", "545.245, 403.222, 23.6981, 0.7698", "545.785, 402.219, 23.9326, 0.695" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "483.733, 421.462, 14.8034, 0.7086", "482.241, 421.098, 15.9459, 0.472", "481.169, 420.934, 16.8036, 0.418", "480.088, 420.858, 17.7016, 0.47", "479.0, 421.0, 18.3327, 0.5558", "477.906, 421.28, 18.7942, 0.663", "476.788, 421.36, 19.1858, 0.8134", "475.654, 421.316, 19.5338, 0.9908", "474.56, 421.04, 19.7481, 0.9736", "473.484, 420.653, 19.897, 0.8614", "472.431, 420.215, 19.8285, 0.8012", "471.385, 419.754, 19.6641, 0.764", "470.273, 419.676, 19.3511, 0.6944", "469.139, 419.714, 18.9953, 0.6148", "468.034, 419.419, 18.9952, 0.5368", "466.931, 419.119, 18.9904, 0.461", "465.948, 418.546, 18.6963, 0.524", "464.967, 417.968, 18.4139, 0.5832", "464.041, 417.298, 18.3698, 0.5662", "463.128, 416.612, 18.3586, 0.557", "462.31, 415.816, 18.5835, 0.6048", "461.453, 415.098, 18.7982, 0.6318", "460.33, 414.889, 18.9427, 0.517", "459.215, 414.651, 19.1019, 0.4218", "458.148, 414.252, 19.3416, 0.434", "457.138, 413.764, 19.579, 0.4464", "456.36, 412.931, 19.8075, 0.46", "455.552, 412.132, 20.0416, 0.4642", "454.635, 411.457, 20.2962, 0.4338", "453.659, 410.913, 20.5517, 0.4256", "452.54, 410.704, 20.809, 0.474", "451.419, 410.666, 20.9749, 0.5008", "450.298, 410.894, 21.0009, 0.495", "449.228, 410.78, 21.0661, 0.512", "448.221, 410.237, 21.1806, 0.558", "447.16, 409.852, 21.2839, 0.5774", "446.035, 409.651, 21.3739, 0.5656", "444.903, 409.612, 21.4466, 0.5218", "443.766, 409.729, 21.5025, 0.4462", "442.632, 409.879, 21.5731, 0.413", "441.503, 410.058, 21.6568, 0.4174", "440.423, 410.392, 21.8746, 0.4086", "439.382, 410.848, 22.199, 0.3894", "438.493, 411.555, 22.2795, 0.3928", "437.629, 412.305, 22.3178, 0.4", "436.878, 413.166, 22.3719, 0.4224", "436.144, 414.042, 22.4283, 0.447", "435.759, 415.106, 22.1498, 0.3438", "435.406, 416.187, 21.84, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "483.733, 421.462, 14.8034, 0.7086", "482.619, 422.367, 12.6742, 0.8362", "481.553, 422.734, 12.2022, 0.7356", "480.477, 423.071, 11.7785, 0.6476", "479.35, 423.251, 11.6036, 0.6254", "478.289, 423.55, 11.3822, 0.602", "477.554, 424.407, 10.9393, 0.5718", "476.894, 425.281, 10.263, 0.5644", "476.389, 426.193, 9.1063, 0.6042", "475.751, 427.037, 8.1107, 0.6612", "474.995, 427.822, 7.2596, 0.7332", "474.278, 428.677, 6.7779, 0.7884", "473.597, 429.594, 6.6046, 0.8294", "472.791, 430.396, 6.5642, 0.7578", "471.924, 431.143, 6.5888, 0.6308", "471.112, 431.931, 6.9247, 0.602", "470.318, 432.734, 7.3795, 0.6106", "469.699, 433.665, 7.8863, 0.5656", "469.142, 434.64, 8.4118, 0.5014", "468.112, 434.926, 8.7102, 0.3722", "466.981, 435.063, 8.96, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "511.184, 419.847, 29.5551, 0.5032", "510.843, 419.944, 30.2434, 0.515", "509.98, 420.021, 31.8872, 0.5358", "509.109, 419.503, 33.1864, 0.5248", "508.375, 418.823, 34.3336, 0.537", "507.892, 417.848, 35.2008, 0.5926", "507.489, 416.84, 36.0413, 0.6108", "507.229, 415.775, 36.8337, 0.56", "506.972, 414.719, 37.7023, 0.5082", "506.721, 413.68, 38.7005, 0.4538", "506.356, 412.68, 39.6864, 0.4344", "505.895, 411.712, 40.6624, 0.4446", "504.808, 411.642, 41.3227, 0.4142", "503.696, 411.609, 41.9706, 0.382", "502.701, 411.27, 43.0623, 0.4864", "501.737, 410.917, 44.2571, 0.603", "500.985, 410.526, 46.1401, 0.7784", "500.281, 410.715, 47.9074, 0.7158", "499.613, 411.34, 49.588, 0.4746", "498.821, 411.749, 51.3024, 0.3942", "497.981, 412.071, 53.03, 0.377", "497.063, 412.524, 54.2388, 0.3628", "496.125, 413.015, 55.295, 0.3494", "495.219, 413.655, 55.9199, 0.3924", "494.321, 414.331, 56.4438, 0.449", "493.39, 414.973, 56.8546, 0.5072", "492.428, 415.533, 56.7554, 0.4992", "491.431, 415.979, 55.9224, 0.3918", "490.501, 416.338, 54.6106, 0.3748", "489.606, 416.652, 53.046, 0.4056", "488.862, 417.374, 52.0694, 0.4168", "488.165, 418.22, 51.2744, 0.422", "487.169, 418.34, 50.4252, 0.3384", "486.086, 418.246, 49.56, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "511.184, 419.847, 29.5551, 0.5032", "511.416, 420.261, 29.8911, 0.4676", "511.953, 421.22, 30.669, 0.3856", "512.391, 422.23, 31.4034, 0.3494", "512.779, 423.266, 32.1149, 0.337", "512.96, 424.367, 32.6074, 0.3904", "513.05, 425.496, 33.0028, 0.4732", "513.008, 426.627, 33.3248, 0.5044", "512.911, 427.761, 33.6151, 0.5132", "512.806, 428.894, 33.9144, 0.609", "512.698, 430.026, 34.2177, 0.742", "512.741, 431.146, 34.7068, 0.8126", "512.846, 432.262, 35.2761, 0.8564", "512.609, 433.344, 35.7445, 0.8536", "512.248, 434.415, 36.1771, 0.8342", "511.655, 435.373, 36.4935, 0.748", "510.983, 436.292, 36.7693, 0.638", "510.591, 437.35, 37.0493, 0.7042", "510.264, 438.44, 37.3304, 0.8108", "509.806, 439.476, 37.6925, 0.8688", "509.321, 440.5, 38.071, 0.917", "508.874, 441.543, 38.4283, 0.8932", "508.432, 442.588, 38.7822, 0.8572", "507.884, 443.585, 39.0751, 0.7888", "507.323, 444.573, 39.3599, 0.716", "506.632, 445.48, 39.5979, 0.584", "505.936, 446.383, 39.8342, 0.4498", "505.624, 447.478, 40.087, 0.5698", "505.317, 448.575, 40.3399, 0.6938" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "519.254, 398.131, 24.1192, 1.0044", "519.292, 397.396, 23.6234, 0.8412", "519.352, 396.294, 22.881, 0.5968" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "519.254, 398.131, 24.1192, 1.0044", "520.273, 397.23, 24.1358, 0.9322", "521.198, 396.557, 24.1534, 0.9112", "522.323, 396.405, 24.1885, 0.8594", "523.461, 396.286, 24.2247, 0.8056", "524.604, 396.253, 24.2899, 0.803", "525.747, 396.223, 24.3566, 0.803", "526.875, 396.045, 24.5018, 0.8636", "528.002, 395.857, 24.6512, 0.9274", "529.142, 395.837, 24.8363, 0.9828", "530.284, 395.824, 25.023, 1.0376", "531.426, 395.816, 25.1811, 0.967", "532.569, 395.807, 25.3379, 0.8906", "533.675, 395.529, 25.2027, 0.8688", "534.78, 395.238, 25.0548, 0.8492", "535.679, 394.538, 24.8406, 0.7598", "536.577, 393.835, 24.6262, 0.67", "537.495, 393.154, 24.4757, 0.6946", "538.412, 392.473, 24.3252, 0.7194" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_26",
    "id" : "apic_26",
    "points3d" : [ "494.715, 399.918, 29.4868, 1.1826", "493.834, 399.471, 30.8624, 0.5018", "492.896, 398.985, 31.9038, 0.4284", "491.934, 398.484, 32.788, 0.635", "490.967, 397.922, 33.3729, 0.6374", "490.0, 397.348, 33.8892, 0.593", "489.32, 396.483, 34.5134, 0.6422", "488.692, 395.563, 35.1574, 0.7084", "487.718, 395.047, 35.7218, 0.7132", "486.694, 394.59, 36.2746, 0.7088", "485.588, 394.569, 36.955, 0.5646", "484.479, 394.566, 37.641, 0.4146", "483.472, 395.003, 38.416, 0.3592", "482.474, 395.457, 39.1938, 0.3092", "481.725, 396.253, 40.0168, 0.3828", "480.918, 396.97, 40.7898, 0.45", "479.859, 397.34, 41.3426, 0.4898", "478.787, 397.653, 41.8933, 0.4954", "477.673, 397.784, 42.4368, 0.387", "476.553, 397.887, 42.9262, 0.306", "475.415, 397.899, 43.2426, 0.3122", "474.297, 398.009, 43.4882, 0.3356", "473.229, 398.423, 43.5075, 0.4132", "472.154, 398.808, 43.4874, 0.4736", "471.055, 399.12, 43.3686, 0.4916", "469.995, 399.517, 43.4426, 0.5266", "469.009, 400.07, 43.8634, 0.5924", "467.993, 400.569, 44.2534, 0.633", "466.949, 401.011, 44.6127, 0.6482", "465.868, 401.327, 44.987, 0.605", "464.751, 401.519, 45.376, 0.5054", "463.63, 401.65, 45.8072, 0.4468", "462.504, 401.736, 46.2708, 0.4196", "461.426, 401.626, 47.0165, 0.4408", "460.38, 401.372, 47.9693, 0.4976", "459.413, 400.914, 48.8914, 0.4894", "458.483, 400.36, 49.7991, 0.4512", "457.401, 400.218, 50.4311, 0.4124", "456.281, 400.177, 50.9953, 0.3734", "455.16, 400.331, 51.3458, 0.4412", "454.039, 400.519, 51.6606, 0.5266", "452.934, 400.707, 52.213, 0.4602", "451.831, 400.893, 52.7912, 0.3774", "450.737, 400.847, 53.601, 0.3262", "449.645, 400.793, 54.4194, 0.2764", "448.562, 400.758, 55.321, 0.2746", "447.48, 400.723, 56.2257, 0.2746", "446.379, 400.783, 56.9663, 0.2746", "445.277, 400.847, 57.7007, 0.2746", "444.163, 400.913, 58.3215, 0.2746", "443.049, 400.978, 58.938, 0.2746", "441.931, 401.043, 59.5, 0.2744", "440.811, 401.108, 60.06, 0.2744", "439.691, 401.173, 60.6057, 0.2742", "438.571, 401.239, 61.1512, 0.2742", "437.45, 401.304, 61.6778, 0.2734", "436.327, 401.369, 62.204, 0.2728", "435.215, 401.203, 62.7024, 0.2706", "434.102, 401.029, 63.1996, 0.2684", "433.033, 400.659, 63.6056, 0.2612", "431.964, 400.287, 64.0114, 0.2538", "430.9, 399.917, 64.5042, 0.2414", "429.836, 399.548, 64.9975, 0.2288" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_19",
    "id" : "apic_19",
    "points3d" : [ "494.715, 399.918, 29.4868, 1.1826", "493.929, 400.462, 30.189, 0.9544" ],
    "parent" : "apic_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "492.349, 392.621, 26.511, 1.01", "490.685, 392.162, 26.4226, 1.0344", "489.607, 391.778, 26.3641, 1.1162", "488.495, 391.511, 26.347, 1.1476", "487.379, 391.255, 26.3329, 1.1752", "486.281, 390.935, 26.3374, 1.198", "485.184, 390.611, 26.3431, 1.2206", "484.121, 390.189, 26.354, 1.1206", "483.06, 389.762, 26.3651, 1.0144", "481.999, 389.334, 26.3865, 0.8726", "480.939, 388.905, 26.4084, 0.729", "479.82, 388.669, 26.4511, 0.7876", "478.699, 388.441, 26.4946, 0.8538", "477.654, 387.978, 26.5715, 0.8036", "476.61, 387.511, 26.649, 0.7512", "475.571, 387.039, 26.8372, 0.843", "474.532, 386.567, 27.0259, 0.9352", "473.502, 386.071, 27.1544, 0.9076", "472.472, 385.576, 27.2829, 0.8798" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "492.349, 392.621, 26.511, 1.01", "491.986, 391.441, 26.2277, 0.6918", "491.723, 390.337, 25.9872, 0.4784", "491.612, 389.201, 25.7901, 0.4316", "491.597, 388.069, 25.5548, 0.3926", "491.755, 386.943, 25.2515, 0.3674", "491.856, 385.814, 24.9289, 0.3706", "491.855, 384.679, 24.572, 0.424", "491.985, 383.566, 24.2086, 0.4758", "492.344, 382.491, 23.8341, 0.525", "492.721, 381.424, 23.4115, 0.5796", "493.126, 380.374, 22.9076, 0.6434", "493.548, 379.329, 22.4402, 0.6478", "493.994, 378.289, 22.0308, 0.557", "494.622, 377.401, 21.5625, 0.4936", "495.536, 376.752, 21.0008, 0.474", "496.539, 376.29, 20.4733, 0.5572", "497.631, 376.012, 19.9801, 0.7432", "498.719, 375.74, 19.432, 0.7948", "499.804, 375.474, 18.8298, 0.7138", "500.868, 375.139, 18.2302, 0.6508", "501.912, 374.739, 17.6331, 0.6052", "502.859, 374.16, 17.1789, 0.5818", "503.715, 373.412, 16.861, 0.5796", "504.637, 372.761, 16.5058, 0.5874", "505.616, 372.191, 16.119, 0.6034", "506.656, 371.753, 15.7447, 0.646", "507.731, 371.393, 15.3777, 0.7044", "508.781, 370.97, 14.9884, 0.7186", "509.816, 370.51, 14.5866, 0.7076", "510.789, 369.944, 14.1366, 0.6892", "511.728, 369.321, 13.6603, 0.6664", "512.774, 368.958, 13.157, 0.6424", "513.875, 368.727, 12.64, 0.6176", "514.914, 368.289, 12.3395, 0.677", "515.93, 367.771, 12.121, 0.768", "516.673, 366.94, 11.9866, 0.8192", "517.315, 365.994, 11.8836, 0.8558", "518.183, 365.27, 11.7387, 0.8752", "519.113, 364.608, 11.5824, 0.8898", "519.941, 363.823, 11.5861, 0.8382", "520.744, 363.008, 11.6284, 0.7708", "521.367, 362.055, 11.5467, 0.7368", "521.947, 361.07, 11.4358, 0.711", "522.432, 360.037, 11.283, 0.6722", "522.895, 358.994, 11.121, 0.6306", "523.56, 358.07, 11.082, 0.5618", "524.268, 357.171, 11.0695, 0.4872", "525.042, 356.331, 10.9831, 0.4918", "525.829, 355.501, 10.8823, 0.5118", "526.458, 354.552, 10.7045, 0.5106", "527.061, 353.583, 10.5139, 0.506", "527.934, 352.865, 10.2744, 0.5804", "528.846, 352.18, 10.0281, 0.6658", "529.666, 351.388, 9.852, 0.7374", "530.474, 350.58, 9.6852, 0.8072", "531.156, 349.665, 9.6027, 0.7152", "531.824, 348.736, 9.5302, 0.6046", "532.827, 348.213, 9.5031, 0.5232", "533.866, 347.734, 9.4809, 0.4452", "534.988, 347.517, 9.461, 0.4204", "536.112, 347.303, 9.441, 0.3968", "537.155, 346.835, 9.4071, 0.4358", "538.196, 346.361, 9.3722, 0.474", "539.044, 345.594, 9.264, 0.4604", "539.899, 344.839, 9.1567, 0.4458", "540.919, 344.321, 9.0691, 0.4126", "541.939, 343.804, 8.9769, 0.378", "542.966, 343.305, 8.8484, 0.3318", "543.983, 342.785, 8.7364, 0.2914", "544.941, 342.16, 8.714, 0.282", "545.913, 341.56, 8.7136, 0.2746", "546.94, 341.056, 8.7983, 0.2746", "547.953, 340.529, 8.8998, 0.2746", "548.917, 339.918, 9.061, 0.2746", "549.799, 339.224, 9.218, 0.2746", "550.413, 338.259, 9.3615, 0.2746", "551.056, 337.315, 9.4801, 0.2746", "551.778, 336.429, 9.5319, 0.2746", "552.52, 335.56, 9.5452, 0.2746", "553.312, 334.734, 9.4648, 0.2746", "554.13, 333.937, 9.3778, 0.2746", "555.009, 333.207, 9.2756, 0.2746", "555.832, 332.421, 9.2085, 0.2746", "556.538, 331.522, 9.214, 0.2746", "557.312, 330.689, 9.1879, 0.2746", "558.205, 329.973, 9.1073, 0.2746", "558.93, 329.128, 8.9756, 0.2746", "559.423, 328.099, 8.7727, 0.2748", "560.128, 327.259, 8.5444, 0.275", "561.094, 326.657, 8.2847, 0.2754", "562.088, 326.101, 8.0545, 0.2764", "563.102, 325.578, 7.8445, 0.278", "563.842, 324.767, 7.6958, 0.2816", "564.412, 323.775, 7.5852, 0.2866", "564.976, 322.781, 7.5034, 0.3002", "565.537, 321.784, 7.4395, 0.3192", "566.099, 320.788, 7.3645, 0.3688", "566.661, 319.793, 7.2829, 0.437", "567.226, 318.798, 7.1912, 0.417", "567.794, 317.806, 7.0933, 0.3442", "568.488, 316.905, 6.9933, 0.3034", "569.253, 316.055, 6.8921, 0.2806", "569.936, 315.142, 6.7476, 0.2722", "570.583, 314.201, 6.5831, 0.2702", "571.327, 313.335, 6.5447, 0.2634", "572.09, 312.483, 6.5277, 0.2556", "572.335, 311.369, 6.3451, 0.2422", "572.572, 310.253, 6.16, 0.2288" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "510.896, 449.378, 47.9273, 0.284", "510.499, 450.035, 48.2303, 0.2926", "509.914, 451.0, 48.6766, 0.3056", "509.32, 451.97, 48.9944, 0.34", "508.727, 452.939, 49.3074, 0.3752", "508.132, 453.908, 49.6205, 0.4324", "507.537, 454.877, 49.9335, 0.4904", "507.294, 455.987, 50.22, 0.4012", "507.065, 457.101, 50.505, 0.3058", "506.845, 458.213, 50.8715, 0.289", "506.623, 459.326, 51.2408, 0.2752", "506.403, 460.434, 51.688, 0.2752", "506.182, 461.541, 52.138, 0.2756", "506.172, 462.664, 52.6557, 0.277", "506.17, 463.788, 53.1756, 0.2782", "506.172, 464.91, 53.7222, 0.2824", "506.175, 466.032, 54.2696, 0.2868", "506.179, 467.154, 54.8285, 0.3", "506.182, 468.275, 55.3876, 0.3136", "505.952, 469.37, 55.9574, 0.3236", "505.713, 470.464, 56.5278, 0.3336", "505.289, 471.501, 57.0884, 0.3044", "504.862, 472.537, 57.6484, 0.2748", "504.436, 473.575, 58.2072, 0.2746", "504.011, 474.611, 58.7661, 0.2746", "503.584, 475.648, 59.3222, 0.2746", "503.158, 476.685, 59.8786, 0.2746", "502.731, 477.722, 60.4293, 0.2744", "502.303, 478.759, 60.9798, 0.2744", "501.876, 479.798, 61.5205, 0.2742", "501.449, 480.836, 62.0609, 0.274", "501.124, 481.912, 62.5755, 0.2734", "500.799, 482.989, 63.0899, 0.2728", "500.529, 484.082, 63.5723, 0.2706", "500.259, 485.176, 64.0548, 0.2684", "499.987, 486.274, 64.4879, 0.261", "499.716, 487.371, 64.9211, 0.2538", "499.449, 488.459, 65.4833, 0.2414", "499.18, 489.547, 66.0458, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "510.896, 449.378, 47.9273, 0.284", "511.685, 449.448, 49.0974, 0.3706", "512.66, 449.535, 50.5445, 0.478", "513.634, 449.841, 51.7843, 0.4068", "514.609, 450.18, 52.9936, 0.309", "515.133, 450.791, 54.9606, 0.3798", "515.636, 451.413, 56.9601, 0.4576" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "545.785, 402.219, 23.9326, 0.695", "546.045, 402.59, 23.7226, 0.6634", "546.691, 403.509, 23.2012, 0.5848", "547.761, 403.465, 23.0159, 0.6166", "548.889, 403.285, 22.8778, 0.6638", "549.976, 402.939, 22.7032, 0.608", "551.061, 402.584, 22.5269, 0.5474", "552.036, 401.988, 22.4983, 0.5542", "553.007, 401.383, 22.4749, 0.5636", "553.84, 400.601, 22.3502, 0.6562", "554.672, 399.817, 22.2233, 0.7508", "555.626, 399.225, 21.6886, 0.7156", "556.581, 398.637, 21.1473, 0.6784", "557.694, 398.49, 20.6177, 0.7194", "558.808, 398.344, 20.0882, 0.761", "559.701, 397.659, 19.5856, 0.6122", "560.57, 396.954, 19.0843, 0.476", "561.068, 395.943, 18.6054, 0.554", "561.566, 394.932, 18.1322, 0.6308", "562.067, 393.916, 17.7358, 0.6912", "562.575, 392.902, 17.3594, 0.7372", "563.125, 391.905, 17.1216, 0.6828", "563.742, 390.957, 16.8463, 0.6798", "564.529, 390.142, 16.4733, 0.8094", "565.161, 389.24, 16.0611, 0.8742", "565.459, 388.155, 15.5645, 0.7986", "565.664, 387.056, 15.0573, 0.7252", "565.683, 385.933, 14.5281, 0.6568", "565.785, 384.815, 14.0671, 0.609", "566.029, 383.707, 13.7227, 0.5966", "566.289, 382.603, 13.3591, 0.5816", "566.573, 381.506, 12.9637, 0.562", "566.797, 380.401, 12.5338, 0.5566", "566.927, 379.282, 12.0505, 0.5726", "567.347, 378.331, 11.4701, 0.5862", "568.208, 377.639, 10.7416, 0.596", "568.757, 376.762, 10.1494, 0.5768", "568.891, 375.638, 9.7387, 0.5186", "569.502, 374.788, 9.4624, 0.4942", "570.426, 374.119, 9.2741, 0.4916", "571.497, 373.764, 9.0955, 0.4722", "572.605, 373.491, 8.9193, 0.4484", "573.381, 372.688, 8.7128, 0.3738", "574.112, 371.81, 8.5021, 0.2924", "575.049, 371.166, 8.3103, 0.2586", "576.004, 370.542, 8.12, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "545.785, 402.219, 23.9326, 0.695", "546.546, 400.712, 24.3829, 0.5256", "547.085, 399.71, 24.6769, 0.4848", "547.525, 398.66, 24.8956, 0.5312", "547.939, 397.597, 25.0942, 0.6008", "548.089, 396.496, 25.6459, 0.6706", "548.402, 395.58, 26.3081, 0.7554", "549.471, 395.305, 27.0418, 0.889", "550.273, 394.725, 27.8133, 0.8932", "550.707, 393.72, 28.637, 0.718", "551.284, 392.818, 29.4784, 0.6148", "552.057, 392.051, 30.343, 0.607", "552.848, 391.294, 31.1408, 0.658", "553.662, 390.546, 31.8707, 0.7688", "554.505, 389.821, 32.5136, 0.8838", "555.38, 389.12, 33.0714, 1.0032", "556.122, 388.294, 33.5896, 1.0164", "556.741, 387.353, 34.0704, 0.9306", "557.381, 386.436, 34.6626, 0.915", "558.037, 385.544, 35.3564, 0.9628", "558.595, 384.599, 36.1049, 0.9566", "559.06, 383.606, 36.9034, 0.9012", "559.656, 382.703, 37.7367, 0.8614", "560.367, 381.88, 38.6011, 0.8354", "561.077, 381.047, 39.417, 0.7386", "561.786, 380.207, 40.1937, 0.585", "562.456, 379.364, 41.1278, 0.4662", "563.092, 378.518, 42.1879, 0.375", "563.705, 377.586, 42.7473, 0.335", "564.313, 376.634, 43.1869, 0.3074", "565.356, 376.295, 43.5198, 0.2912", "566.466, 376.053, 43.8357, 0.277", "567.416, 375.781, 45.204, 0.2802", "568.406, 375.495, 46.298, 0.287", "569.496, 375.192, 46.7141, 0.2976", "570.587, 374.881, 47.0397, 0.3144", "571.682, 374.557, 47.2164, 0.3416", "572.717, 374.109, 47.3942, 0.3438", "573.654, 373.455, 47.5742, 0.3054", "574.397, 372.637, 47.8019, 0.2822", "574.908, 371.62, 48.0866, 0.2772", "575.511, 370.662, 48.372, 0.2746", "576.211, 369.765, 48.6578, 0.2746", "576.869, 368.838, 48.9499, 0.2746", "577.484, 367.881, 49.2478, 0.2746", "578.306, 367.147, 49.5452, 0.2746", "579.309, 366.611, 49.8422, 0.2746", "580.103, 365.837, 50.1054, 0.2746", "580.752, 364.899, 50.3448, 0.2746", "581.332, 363.921, 50.5879, 0.2746", "581.864, 362.913, 50.8334, 0.2746", "582.311, 361.868, 51.0874, 0.2746", "582.702, 360.798, 51.347, 0.2746", "583.362, 359.894, 51.5724, 0.2746", "584.15, 359.071, 51.7815, 0.2746", "584.894, 358.205, 51.9669, 0.2746", "585.618, 357.322, 52.143, 0.2746", "586.49, 356.594, 52.2942, 0.2746", "587.41, 355.916, 52.4373, 0.2744", "588.342, 355.254, 52.5092, 0.2744", "589.28, 354.6, 52.5596, 0.2742", "590.211, 353.935, 52.5683, 0.2738", "591.141, 353.27, 52.5661, 0.2732", "592.173, 352.788, 52.5244, 0.2716", "593.233, 352.357, 52.4726, 0.2696", "593.818, 351.435, 52.4314, 0.2636", "594.286, 350.391, 52.3933, 0.2564", "595.134, 349.64, 52.3754, 0.243", "596.024, 348.92, 52.36, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "505.317, 448.575, 40.3399, 0.6938", "504.754, 449.5, 41.0194, 0.7544", "503.951, 450.174, 42.1355, 0.8164", "503.178, 450.877, 43.2412, 0.8696", "502.671, 451.815, 44.2543, 0.8484", "502.24, 452.783, 45.2346, 0.8152", "502.087, 453.861, 46.0936, 0.7382", "501.849, 454.923, 46.8726, 0.6394", "501.39, 455.945, 47.4452, 0.4842", "500.878, 456.944, 47.8318, 0.3978", "500.238, 457.893, 47.7814, 0.4732", "499.563, 458.815, 47.7649, 0.498", "498.817, 459.681, 47.8156, 0.4222", "498.309, 460.685, 47.9074, 0.4544", "497.932, 461.764, 48.0214, 0.5456", "497.313, 462.711, 48.0973, 0.6002", "496.609, 463.613, 48.1603, 0.642", "495.913, 464.519, 48.2728, 0.583", "495.217, 465.427, 48.4016, 0.4916", "494.469, 466.29, 48.5274, 0.4566", "493.705, 467.14, 48.6522, 0.4388", "492.897, 467.946, 48.8051, 0.417", "492.074, 468.739, 48.9664, 0.394", "491.161, 469.419, 49.1602, 0.4492", "490.221, 470.065, 49.3634, 0.5272", "489.632, 471.033, 49.6832, 0.4892", "489.057, 472.012, 50.0072, 0.447", "488.599, 473.047, 50.4185, 0.4722", "488.142, 474.083, 50.8295, 0.4976" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "505.317, 448.575, 40.3399, 0.6938", "506.037, 449.815, 40.5798, 0.6548", "505.944, 450.953, 40.7403, 0.469", "505.817, 452.087, 40.9044, 0.343", "505.599, 453.208, 41.0768, 0.3728", "505.265, 454.286, 41.2647, 0.4126", "504.716, 455.286, 41.4814, 0.4716", "504.246, 456.318, 41.7278, 0.5476", "503.907, 457.403, 42.0238, 0.6516", "503.681, 458.509, 42.3122, 0.6988", "503.646, 459.647, 42.5883, 0.6524", "503.714, 460.775, 42.9005, 0.637", "503.931, 461.888, 43.2656, 0.667", "504.009, 463.009, 43.6022, 0.679", "503.893, 464.141, 43.9001, 0.667", "503.462, 465.151, 44.2249, 0.5738", "502.801, 466.075, 44.5693, 0.4222", "502.004, 466.877, 44.947, 0.362", "501.173, 467.646, 45.3342, 0.3258", "500.495, 468.542, 45.7904, 0.3468", "499.858, 469.472, 46.265, 0.3828", "499.758, 470.547, 47.0274, 0.402", "499.737, 471.642, 47.8332, 0.4188", "500.196, 472.636, 48.51, 0.4324", "500.722, 473.615, 49.1686, 0.4454", "501.287, 474.582, 49.7442, 0.4008", "501.856, 475.547, 50.3101, 0.3492", "502.488, 476.475, 50.8374, 0.3128", "503.129, 477.398, 51.3601, 0.2778", "504.038, 478.049, 51.865, 0.2746", "504.977, 478.67, 52.3678, 0.2746", "506.055, 478.892, 53.0667, 0.2746", "507.146, 479.082, 53.7813, 0.2746", "508.24, 479.175, 54.5602, 0.2746", "509.335, 479.259, 55.344, 0.2746", "510.453, 479.193, 55.8964, 0.2744", "511.574, 479.116, 56.4337, 0.2744", "512.695, 479.156, 56.9713, 0.2742", "513.816, 479.203, 57.5092, 0.2742", "514.929, 479.259, 58.1501, 0.2734", "516.04, 479.314, 58.7975, 0.2728", "517.021, 479.78, 59.6414, 0.2706", "517.992, 480.273, 60.4979, 0.2684", "518.831, 480.962, 61.3766, 0.2606", "519.669, 481.653, 62.2558, 0.2526", "520.466, 482.311, 63.4494, 0.2408", "521.264, 482.97, 64.6481, 0.2288" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "519.352, 396.294, 22.881, 0.5968", "518.297, 395.668, 23.3315, 0.472", "518.057, 394.574, 23.7561, 0.5154", "517.837, 393.464, 24.1809, 0.5632", "517.66, 392.349, 24.6159, 0.6468", "517.483, 391.232, 25.0511, 0.731", "517.327, 390.106, 25.3806, 0.6598", "517.173, 388.981, 25.7088, 0.5868", "517.089, 387.841, 25.7919, 0.669", "517.006, 386.701, 25.8727, 0.7526", "517.274, 385.593, 26.1092, 0.826", "517.546, 384.486, 26.347, 0.8992" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "519.352, 396.294, 22.881, 0.5968", "519.653, 395.934, 22.1092, 0.6574", "520.219, 395.078, 20.986, 0.7532", "520.75, 394.109, 20.2499, 0.8248", "521.116, 393.07, 19.594, 0.8206", "521.367, 391.981, 18.9957, 0.7622", "521.95, 391.065, 18.641, 0.7658", "522.769, 390.27, 18.4577, 0.813", "523.52, 389.411, 18.3138, 0.942", "524.233, 388.518, 18.1915, 1.1158", "524.76, 387.519, 17.9682, 1.071", "525.199, 386.467, 17.6976, 0.9234", "526.103, 386.065, 17.2388, 0.862", "527.22, 385.958, 16.6941, 0.8398", "527.995, 386.736, 16.1293, 0.7734", "528.752, 387.562, 15.5633, 0.7044" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "538.412, 392.473, 24.3252, 0.7194", "539.25, 392.175, 24.9178, 0.664", "540.383, 392.067, 25.1867, 0.7282", "541.524, 392.082, 25.4208, 0.7738", "542.663, 392.098, 25.6544, 0.8192", "543.782, 392.326, 25.8089, 0.7346", "544.901, 392.557, 25.9622, 0.6482" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "538.412, 392.473, 24.3252, 0.7194", "538.777, 391.733, 23.4598, 0.7894", "539.248, 390.78, 22.4919, 0.8648", "539.767, 389.76, 22.4851, 0.8408", "540.328, 388.773, 22.4656, 0.8086", "541.188, 388.02, 22.3582, 0.7196", "541.939, 387.208, 22.2151, 0.6442", "542.095, 386.084, 21.8731, 0.6438", "542.159, 384.964, 21.4658, 0.6498", "541.997, 383.855, 20.8979, 0.6708", "541.975, 382.756, 20.3323, 0.7068", "542.29, 381.681, 19.7719, 0.7794", "542.649, 380.619, 19.2367, 0.8026", "543.088, 379.582, 18.7484, 0.7338", "543.479, 378.523, 18.3153, 0.6764", "543.783, 377.43, 17.9821, 0.6394", "543.991, 376.329, 17.5239, 0.6056", "544.03, 375.221, 16.8467, 0.5766", "544.085, 374.12, 16.0997, 0.5132", "544.161, 373.03, 15.2718, 0.4098", "544.732, 372.213, 14.2436, 0.4292", "545.515, 371.514, 13.1297, 0.5014", "546.257, 370.74, 12.1684, 0.5248", "546.981, 369.933, 11.269, 0.5284", "547.96, 369.518, 10.546, 0.513", "549.042, 369.258, 9.8934, 0.49", "550.067, 368.824, 9.2973, 0.4634", "551.075, 368.338, 8.719, 0.4358", "551.619, 367.41, 8.1972, 0.4908", "552.041, 366.367, 7.6903, 0.5678", "551.994, 365.244, 7.3699, 0.506", "551.892, 364.111, 7.0715, 0.428", "552.2, 363.034, 6.624, 0.438", "552.552, 361.962, 6.16, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_23",
    "id" : "apic_23",
    "points3d" : [ "493.929, 400.462, 30.189, 0.9544", "495.018, 400.058, 31.9715, 1.022", "496.005, 399.865, 33.3043, 0.9834", "497.076, 400.076, 34.0318, 1.0348", "498.156, 400.342, 34.6783, 1.098", "499.184, 400.696, 35.5443, 1.035", "500.205, 401.061, 36.4367, 0.957", "501.295, 401.249, 37.1347, 0.8324", "502.392, 401.416, 37.8115, 0.7026", "503.487, 401.507, 38.5944, 0.6622", "504.581, 401.594, 39.3834, 0.627" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_20",
    "id" : "apic_20",
    "points3d" : [ "493.929, 400.462, 30.189, 0.9544", "492.271, 401.125, 31.3009, 1.0144", "491.155, 401.156, 31.5619, 0.9344", "490.014, 401.084, 31.7083, 0.823", "488.958, 401.465, 31.7836, 0.837", "487.921, 401.945, 31.8433, 0.8788", "487.039, 402.664, 31.999, 0.798", "486.176, 403.412, 32.1667, 0.702", "485.237, 404.056, 32.4223, 0.7328", "484.303, 404.7, 32.6934, 0.7704", "483.907, 405.744, 33.3141, 0.631", "483.538, 406.797, 33.8864, 0.5076", "483.301, 407.909, 34.1953, 0.4718", "482.967, 408.979, 34.5128, 0.4538", "482.306, 409.901, 34.8594, 0.4962", "481.626, 410.809, 35.2122, 0.5298", "480.89, 411.671, 35.5838, 0.5356", "480.126, 412.508, 35.929, 0.54", "479.286, 413.277, 36.1973, 0.5406", "478.461, 414.063, 36.4412, 0.5304", "477.681, 414.896, 36.6164, 0.4888", "476.817, 415.567, 37.0684, 0.4844", "475.811, 415.961, 37.9946, 0.5438", "474.808, 416.399, 38.7806, 0.6012", "473.804, 416.875, 39.4517, 0.6568", "472.899, 417.519, 39.9756, 0.7096", "472.13, 418.327, 40.4062, 0.7484", "471.729, 419.377, 40.9175, 0.721", "471.26, 420.394, 41.3843, 0.7068", "470.565, 421.292, 41.7012, 0.737", "469.84, 422.165, 42.028, 0.7304", "469.046, 422.975, 42.378, 0.6384", "468.243, 423.779, 42.6941, 0.5706", "467.418, 424.567, 42.9313, 0.5584", "466.619, 425.379, 43.1231, 0.5352", "465.878, 426.25, 43.2113, 0.4864", "465.132, 427.115, 43.3572, 0.4878", "464.374, 427.964, 43.6332, 0.6018", "463.692, 428.864, 43.9443, 0.6428", "463.168, 429.868, 44.3296, 0.532", "462.722, 430.904, 44.7146, 0.4622", "462.413, 431.994, 45.0996, 0.4626", "462.056, 433.07, 45.4356, 0.5204", "461.633, 434.127, 45.7041, 0.6584", "461.295, 435.207, 46.037, 0.7162", "461.068, 436.316, 46.4548, 0.6676", "460.722, 437.383, 46.8636, 0.6012", "460.223, 438.4, 47.2601, 0.5114", "459.805, 439.441, 47.7453, 0.4256", "459.482, 440.512, 48.3372, 0.3444", "459.133, 441.581, 48.8373, 0.3108", "458.752, 442.648, 49.2327, 0.3314", "458.275, 443.665, 49.6706, 0.3992", "457.695, 444.633, 50.1528, 0.5166", "457.107, 445.596, 50.5896, 0.621", "456.509, 446.558, 50.9855, 0.7132", "455.901, 447.518, 51.3296, 0.6884", "455.288, 448.474, 51.6309, 0.5682", "454.69, 449.448, 51.7462, 0.507", "454.102, 450.428, 51.7569, 0.479", "453.267, 451.17, 51.6146, 0.4386", "452.312, 451.793, 51.3976, 0.392", "451.337, 452.372, 51.0443, 0.4046", "450.356, 452.938, 50.6523, 0.4338", "449.592, 453.707, 49.8638, 0.374", "448.885, 454.53, 48.97, 0.2906", "447.809, 454.753, 48.3882, 0.286", "446.7, 454.927, 47.8316, 0.2876", "445.732, 455.504, 47.4592, 0.305", "444.775, 456.113, 47.1002, 0.3236" ],
    "parent" : "apic_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_17",
    "id" : "apic_17",
    "points3d" : [ "472.472, 385.576, 27.2829, 0.8798", "471.767, 386.653, 27.9247, 0.326", "471.106, 387.537, 28.6586, 0.4432", "470.243, 388.195, 29.3846, 0.5594", "469.284, 388.743, 30.1067, 0.675", "468.371, 389.342, 30.9285, 0.7482", "467.48, 389.964, 31.7976, 0.8012", "466.479, 390.253, 32.8154, 0.7348", "465.434, 390.409, 33.8918, 0.6216", "464.473, 390.843, 34.8869, 0.5868", "463.544, 391.383, 35.8506, 0.582", "463.183, 392.121, 37.5813, 0.4908", "462.937, 392.803, 39.4923, 0.3884", "462.129, 392.24, 40.9164, 0.442", "461.325, 391.647, 42.2657, 0.4792", "460.538, 390.938, 43.3191, 0.452", "459.79, 390.198, 44.3954, 0.4292", "459.181, 389.352, 45.5518, 0.4222", "458.542, 388.525, 46.6774, 0.4348", "457.814, 387.75, 47.7114, 0.504", "457.147, 386.943, 48.8048, 0.5404", "456.64, 386.054, 50.0604, 0.4868", "455.949, 385.562, 51.2868, 0.4938", "454.931, 385.768, 52.4619, 0.6074", "454.039, 386.146, 53.825, 0.6228", "453.295, 386.726, 55.4092, 0.5222", "452.649, 387.459, 56.8025, 0.4686", "452.072, 388.303, 58.058, 0.4486", "451.381, 388.954, 59.5524, 0.445", "450.623, 389.492, 61.1839, 0.4506", "449.73, 389.467, 62.5803, 0.4004", "448.766, 389.136, 63.849, 0.32", "447.891, 388.478, 64.4932, 0.3198", "447.035, 387.749, 64.9975, 0.3376", "446.143, 387.037, 65.1448, 0.2882", "445.245, 386.329, 65.24, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "472.472, 385.576, 27.2829, 0.8798", "471.408, 385.002, 27.3047, 0.872", "470.399, 384.463, 27.3214, 0.8528", "469.301, 384.146, 27.3484, 0.7946", "468.198, 383.843, 27.3761, 0.7342", "467.241, 383.225, 27.493, 0.622", "466.29, 382.59, 27.6149, 0.5068" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "488.142, 474.083, 50.8295, 0.4976", "487.179, 474.591, 52.2312, 0.3354", "486.825, 475.659, 52.7212, 0.2998", "486.388, 476.693, 53.1266, 0.2746", "485.752, 477.641, 53.3277, 0.2746", "485.155, 478.612, 53.4702, 0.2746", "484.642, 479.633, 53.4909, 0.2746", "484.124, 480.654, 53.5083, 0.2746", "483.602, 481.672, 53.5212, 0.2746", "483.267, 482.759, 53.5422, 0.2744", "483.006, 483.873, 53.5665, 0.2744", "482.516, 484.898, 53.6113, 0.274", "481.96, 485.898, 53.662, 0.2734", "481.594, 486.976, 53.7384, 0.2722", "481.276, 488.074, 53.8213, 0.2706", "480.684, 489.036, 54.0831, 0.264", "480.03, 489.967, 54.3838, 0.2564", "479.237, 490.782, 54.6358, 0.243", "478.421, 491.577, 54.88, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "488.142, 474.083, 50.8295, 0.4976", "488.704, 475.237, 51.6566, 0.3082", "489.217, 476.109, 52.9648, 0.275", "489.957, 476.807, 54.2408, 0.2742", "490.702, 477.502, 55.5162, 0.2742", "491.499, 478.138, 56.782, 0.2734", "492.297, 478.774, 58.0479, 0.2728", "493.102, 479.442, 59.1836, 0.2704", "493.906, 480.111, 60.3179, 0.268", "494.273, 481.161, 60.9711, 0.2608", "494.64, 482.211, 61.6235, 0.2538", "495.012, 483.276, 62.0875, 0.2412", "495.384, 484.341, 62.5514, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "517.546, 384.486, 26.347, 0.8992", "517.125, 383.767, 28.0619, 0.4618", "517.217, 383.36, 30.6695, 0.64", "517.266, 382.497, 32.4131, 0.6684", "517.198, 381.59, 33.9444, 0.684", "516.428, 380.867, 35.0182, 0.7702", "515.708, 380.095, 36.0688, 0.8386", "515.094, 379.221, 37.0714, 0.8706", "514.266, 378.917, 38.1724, 0.8352", "513.249, 379.117, 39.3602, 0.7402", "512.233, 378.945, 40.3452, 0.6508", "511.25, 378.528, 41.2143, 0.563", "511.115, 377.472, 42.2355, 0.4288", "511.042, 376.371, 42.8504, 0.3474", "511.024, 375.232, 43.1178, 0.3112", "510.949, 374.101, 43.4518, 0.3078", "510.841, 372.971, 43.8253, 0.324", "510.928, 371.855, 44.2744, 0.3836", "511.124, 370.746, 44.7664, 0.468", "511.358, 369.64, 45.1895, 0.4888", "511.611, 368.536, 45.575, 0.474", "511.816, 367.416, 45.8122, 0.5218", "511.996, 366.288, 45.967, 0.6044", "512.288, 365.188, 46.1177, 0.6214", "512.64, 364.1, 46.2661, 0.6036", "513.313, 363.207, 46.4946, 0.5652", "514.1, 362.385, 46.7516, 0.5198", "514.688, 361.425, 47.143, 0.4608", "515.214, 360.425, 47.5748, 0.3976", "515.969, 359.584, 47.6095, 0.5274", "516.793, 358.79, 47.5261, 0.7144", "517.684, 358.075, 47.5406, 0.7406", "518.591, 357.38, 47.5784, 0.7286", "519.404, 356.581, 47.7764, 0.7602", "520.194, 355.76, 48.0091, 0.8012", "521.151, 355.213, 48.6503, 0.703", "522.14, 354.718, 49.3685, 0.5784", "523.007, 354.027, 50.0237, 0.4648", "523.852, 353.304, 50.6685, 0.3532", "524.908, 352.99, 51.2803, 0.3288", "525.997, 352.742, 51.8868, 0.318", "526.965, 352.204, 52.5392, 0.368", "527.916, 351.629, 53.1978, 0.4258", "529.005, 351.352, 53.7015, 0.4704", "530.1, 351.088, 54.1996, 0.5144", "531.227, 351.035, 54.644, 0.5318", "532.356, 350.99, 55.0872, 0.5486", "533.442, 350.703, 55.6181, 0.423", "534.518, 350.404, 56.17, 0.2972", "535.29, 349.74, 57.4507, 0.2816", "536.094, 349.105, 58.6886, 0.2746", "536.926, 348.492, 59.89, 0.2746", "537.961, 348.149, 60.5248, 0.2746", "539.06, 347.892, 60.9812, 0.2744", "540.028, 347.317, 61.1724, 0.2744", "540.958, 346.653, 61.2884, 0.2742", "541.954, 346.094, 61.3155, 0.2738", "542.968, 345.565, 61.3194, 0.2732", "543.887, 344.89, 61.32, 0.2716", "544.788, 344.183, 61.32, 0.2696", "545.635, 343.415, 61.32, 0.263", "546.477, 342.642, 61.32, 0.256", "547.341, 341.89, 61.32, 0.2426", "548.205, 341.141, 61.32, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "517.546, 384.486, 26.347, 0.8992", "517.848, 383.024, 26.6497, 0.8346", "518.2, 381.946, 26.8717, 0.8074", "518.841, 381.002, 27.0823, 0.7224", "519.367, 380.008, 27.328, 0.6558", "519.648, 378.906, 27.6485, 0.6282", "520.041, 377.854, 27.9655, 0.6084", "520.656, 376.899, 28.2752, 0.6038", "521.249, 375.926, 28.5331, 0.6138", "521.794, 374.923, 28.6947, 0.6514", "522.42, 373.978, 28.9509, 0.6342", "523.147, 373.109, 29.3306, 0.5456", "523.854, 372.226, 29.7489, 0.4752", "524.537, 371.328, 30.2103, 0.425", "525.118, 370.361, 30.4746, 0.425", "525.591, 369.319, 30.5304, 0.4776", "526.081, 368.286, 30.6166, 0.561", "526.586, 367.261, 30.7317, 0.6732", "527.09, 366.234, 30.7815, 0.7058", "527.593, 365.207, 30.7734, 0.6678", "527.992, 364.14, 30.7222, 0.6524", "528.31, 363.042, 30.6382, 0.6546", "528.76, 361.997, 30.6326, 0.641", "529.307, 360.993, 30.6846, 0.616", "529.765, 359.948, 30.802, 0.547", "530.159, 358.876, 30.9658, 0.4466", "530.286, 357.76, 31.1102, 0.4052", "530.267, 356.617, 31.2441, 0.3964", "530.347, 355.479, 31.3068, 0.4078", "530.482, 354.343, 31.3312, 0.4304", "530.705, 353.223, 31.302, 0.5108", "530.975, 352.111, 31.2446, 0.6222", "531.213, 350.992, 31.2441, 0.6202", "531.434, 349.87, 31.2715, 0.5626", "531.886, 348.833, 31.3034, 0.5052", "532.447, 347.837, 31.337, 0.4482", "533.041, 346.858, 31.3482, 0.3774", "533.646, 345.888, 31.3508, 0.3014", "534.329, 344.971, 31.3583, 0.2826", "535.028, 344.066, 31.3673, 0.276", "535.733, 343.164, 31.3858, 0.2754", "536.438, 342.263, 31.4062, 0.2758", "537.107, 341.336, 31.4322, 0.2774", "537.771, 340.405, 31.4594, 0.279", "538.285, 339.385, 31.5073, 0.2844", "538.781, 338.354, 31.5574, 0.29", "539.341, 337.358, 31.6445, 0.3084", "539.909, 336.365, 31.7355, 0.3282", "540.301, 335.296, 31.9659, 0.3758", "540.678, 334.221, 32.2084, 0.426", "540.871, 333.096, 32.396, 0.3716", "541.052, 331.969, 32.5808, 0.3118", "541.25, 330.842, 32.6603, 0.2928", "541.448, 329.717, 32.7373, 0.275", "541.623, 328.586, 32.746, 0.2746", "541.798, 327.455, 32.7533, 0.2748", "541.856, 326.313, 32.7505, 0.2748", "541.912, 325.171, 32.7474, 0.275", "542.11, 324.044, 32.7412, 0.2754", "542.311, 322.918, 32.7351, 0.2758", "542.669, 321.831, 32.7228, 0.2776", "543.029, 320.746, 32.7102, 0.2794", "543.045, 319.603, 32.6861, 0.2852", "543.057, 318.459, 32.662, 0.291", "543.057, 317.315, 32.6208, 0.31", "543.057, 316.171, 32.5794, 0.329", "543.225, 315.04, 32.4708, 0.3678", "543.395, 313.91, 32.3616, 0.4066", "543.341, 312.767, 32.2806, 0.318", "543.286, 311.626, 32.2, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "528.752, 387.562, 15.5633, 0.7044", "529.495, 387.687, 14.8511, 0.7622", "530.567, 387.678, 13.8785, 0.7454", "531.545, 387.371, 12.9629, 0.7344", "532.408, 386.704, 12.1165, 0.7304", "533.381, 386.342, 11.2942, 0.7562", "534.478, 386.325, 10.4993, 0.8154", "535.596, 386.377, 10.0488, 0.8744", "536.733, 386.488, 9.9034, 0.9332", "537.873, 386.561, 9.808, 0.9058", "539.016, 386.603, 9.7538, 0.8072", "540.158, 386.635, 9.6034, 0.8008", "541.297, 386.661, 9.3782, 0.866", "542.439, 386.643, 9.2289, 0.8038", "543.581, 386.591, 9.1382, 0.6434", "544.695, 386.377, 9.0628, 0.5926", "545.787, 386.038, 8.9988, 0.6244", "546.898, 385.774, 8.997, 0.653", "548.023, 385.562, 9.0403, 0.6792", "549.133, 385.292, 9.1025, 0.7072", "550.232, 384.979, 9.1785, 0.7366", "551.357, 384.898, 9.2361, 0.7868", "552.498, 384.978, 9.2809, 0.8518", "553.589, 385.276, 9.2616, 0.8394", "554.651, 385.701, 9.2056, 0.7826", "555.759, 385.944, 9.1112, 0.7546", "556.893, 386.084, 8.9953, 0.743", "558.026, 386.226, 8.8425, 0.753", "559.16, 386.368, 8.671, 0.7738", "559.826, 387.139, 8.3754, 0.7396", "560.298, 388.172, 8.0281, 0.6824", "560.038, 389.279, 7.7576, 0.6842", "559.775, 390.387, 7.4875, 0.6864" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "528.752, 387.562, 15.5633, 0.7044", "529.404, 387.23, 15.4194, 0.9498", "529.728, 386.258, 14.6584, 0.9348", "529.901, 385.185, 13.7803, 0.833", "529.343, 384.262, 12.941, 0.7838", "528.75, 383.344, 12.1036, 0.7372", "528.457, 382.293, 11.2717, 0.6988", "528.169, 381.239, 10.44, 0.6606" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "544.901, 392.557, 25.9622, 0.6482", "545.38, 392.911, 27.1906, 0.4748", "546.161, 393.557, 28.4682, 0.4236", "546.953, 394.222, 29.6596, 0.406", "547.132, 395.17, 31.0419, 0.4528", "547.282, 396.024, 32.5052, 0.5096", "547.935, 395.579, 34.5106, 0.5814", "548.063, 394.536, 35.6129, 0.584", "548.085, 393.562, 36.8166, 0.5864", "547.399, 393.065, 38.6968, 0.5884", "547.382, 392.626, 40.1719, 0.5754", "548.419, 392.283, 41.0091, 0.5388", "549.468, 392.088, 41.909, 0.5348", "550.535, 392.124, 42.908, 0.5828", "551.469, 391.786, 43.7788, 0.5766", "552.239, 390.991, 44.4934, 0.505", "553.01, 390.234, 45.3855, 0.4356", "553.784, 389.524, 46.4937, 0.369", "554.711, 389.114, 47.4855, 0.3172", "555.793, 389.008, 48.3602, 0.2802", "556.685, 389.293, 49.5468, 0.2576", "557.397, 389.951, 51.0334, 0.249", "556.699, 390.74, 52.0579, 0.239", "555.985, 391.532, 53.0774, 0.2288", "555.453, 392.162, 55.0186, 0.2288", "554.921, 392.791, 56.9601, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "544.901, 392.557, 25.9622, 0.6482", "545.607, 391.957, 25.9845, 0.6572", "546.326, 391.082, 25.9589, 0.6552", "546.95, 390.125, 25.9006, 0.645", "547.737, 389.309, 25.9121, 0.5746", "548.612, 388.572, 25.9615, 0.4716", "549.586, 387.99, 26.0659, 0.5018", "550.613, 387.489, 26.1993, 0.6024", "551.523, 386.813, 26.2675, 0.5838", "552.377, 386.052, 26.3032, 0.5056", "553.383, 385.546, 26.2378, 0.4992", "554.459, 385.163, 26.1246, 0.5268", "555.288, 384.423, 26.0041, 0.5748", "556.023, 383.548, 25.8807, 0.6306", "556.702, 382.629, 25.8038, 0.6952", "557.364, 381.696, 25.7433, 0.7628", "557.951, 380.719, 25.9243, 0.7814", "558.519, 379.731, 26.1696, 0.787", "559.354, 378.966, 26.2762, 0.7918", "560.241, 378.244, 26.3555, 0.7962", "561.234, 377.681, 26.3151, 0.8174", "562.244, 377.146, 26.2543, 0.8414", "563.231, 376.569, 26.1342, 0.8366", "564.215, 375.987, 26.0045, 0.8272", "565.16, 375.344, 25.9701, 0.7366", "566.103, 374.695, 25.945, 0.6378", "567.053, 374.059, 25.9972, 0.6388", "568.003, 373.423, 26.0529, 0.6444", "568.616, 372.458, 26.0929, 0.6346", "569.233, 371.493, 26.1387, 0.6254", "569.921, 370.584, 26.3169, 0.6278", "570.623, 369.684, 26.4903, 0.6336", "571.395, 368.842, 26.6347, 0.6614", "572.185, 368.019, 26.7891, 0.6818", "573.074, 367.304, 26.9988, 0.6612", "573.946, 366.571, 27.2109, 0.6284", "574.73, 365.742, 27.4342, 0.5362", "575.445, 364.874, 27.6964, 0.4604", "575.823, 363.81, 28.1459, 0.4632", "576.311, 362.858, 28.8453, 0.4364", "577.058, 362.172, 30.1412, 0.3396", "577.949, 361.478, 30.5589, 0.3456", "578.843, 360.784, 30.9532, 0.3542", "579.841, 360.248, 31.337, 0.3384", "580.779, 359.66, 31.7131, 0.3242", "581.134, 358.579, 32.0135, 0.3278", "581.501, 357.503, 32.3257, 0.3406", "581.96, 356.469, 32.7306, 0.4272", "582.415, 355.432, 33.1265, 0.5", "582.854, 354.386, 33.4956, 0.529", "583.352, 353.372, 33.845, 0.5252", "584.03, 352.46, 34.1348, 0.4196", "584.69, 351.533, 34.4011, 0.3326", "585.297, 350.565, 34.6016, 0.2984", "585.929, 349.618, 34.8057, 0.2746", "586.626, 348.715, 35.0196, 0.2746", "587.308, 347.801, 35.2461, 0.2746", "587.955, 346.864, 35.4992, 0.2746", "588.623, 345.942, 35.775, 0.2746", "589.326, 345.05, 36.0942, 0.2746", "590.059, 344.187, 36.4798, 0.2746", "590.841, 343.377, 36.9743, 0.2746", "591.705, 342.664, 37.3904, 0.2746", "592.681, 342.08, 37.7014, 0.2746", "593.6, 341.418, 37.9744, 0.2746", "594.442, 340.649, 38.1973, 0.2746", "595.328, 339.936, 38.4157, 0.2746", "596.272, 339.294, 38.6282, 0.2746", "596.993, 338.468, 38.8228, 0.2746", "597.449, 337.422, 38.9962, 0.2746", "597.768, 336.336, 39.1653, 0.2746", "597.928, 335.206, 39.3294, 0.2746", "598.213, 334.111, 39.5564, 0.2746", "598.641, 333.057, 39.8555, 0.2746", "599.138, 332.039, 40.1901, 0.2746", "599.706, 331.058, 40.5622, 0.2746", "600.272, 330.074, 40.9024, 0.2746", "600.836, 329.085, 41.209, 0.2746", "601.455, 328.138, 41.5769, 0.2746", "602.13, 327.231, 42.0076, 0.2746", "602.846, 326.365, 42.5099, 0.2746", "603.593, 325.53, 43.0676, 0.2746", "604.334, 324.708, 43.771, 0.2744", "605.073, 323.894, 44.5483, 0.2744", "606.064, 323.564, 45.2598, 0.2742", "607.168, 323.448, 45.9427, 0.2738", "608.066, 323.149, 47.3752, 0.2714", "608.876, 322.775, 49.1238, 0.2682", "610.001, 322.749, 49.6138, 0.2612", "611.128, 322.722, 50.1012, 0.2542", "612.27, 322.722, 50.2508, 0.2414", "613.413, 322.722, 50.4, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_25",
    "id" : "apic_25",
    "points3d" : [ "504.581, 401.594, 39.3834, 0.627", "504.577, 402.85, 40.3511, 0.592", "504.529, 403.943, 41.1421, 0.5688", "504.318, 405.04, 41.7348, 0.5742", "504.14, 406.136, 42.3886, 0.551", "504.051, 407.228, 43.1956, 0.4574", "503.958, 408.33, 43.8964, 0.3958", "503.859, 409.454, 44.3573, 0.4076", "503.872, 410.572, 44.7922, 0.4148", "504.116, 411.679, 45.1727, 0.412", "504.276, 412.796, 45.5176, 0.4232", "504.279, 413.936, 45.796, 0.4604", "504.362, 415.06, 46.1558, 0.5366", "504.592, 416.161, 46.667, 0.6846", "504.785, 417.268, 47.1755, 0.7184", "504.918, 418.386, 47.6801, 0.569", "505.236, 419.429, 48.242, 0.4634", "505.853, 420.356, 48.8961, 0.4278", "506.228, 421.384, 49.3562, 0.4876", "506.365, 422.515, 49.6258, 0.6412", "506.509, 423.642, 49.9584, 0.6192", "506.658, 424.766, 50.3224, 0.51", "507.251, 425.573, 51.2288, 0.488", "508.061, 426.224, 52.3989, 0.5084", "508.208, 427.278, 53.247, 0.4378", "508.296, 428.368, 54.0672, 0.3596", "508.322, 429.485, 54.6745, 0.3168", "508.342, 430.603, 55.2684, 0.2762", "508.513, 431.698, 55.956, 0.2736", "508.69, 432.792, 56.6482, 0.2728", "508.804, 433.876, 57.5058, 0.2704", "508.918, 434.958, 58.364, 0.268", "509.216, 436.032, 58.9996, 0.2608", "509.516, 437.105, 59.6352, 0.2536", "509.816, 438.183, 60.2196, 0.2412", "510.115, 439.26, 60.804, 0.2288" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_24",
    "id" : "apic_24",
    "points3d" : [ "504.581, 401.594, 39.3834, 0.627", "505.017, 401.618, 39.8045, 0.5698", "506.079, 401.678, 40.8299, 0.432", "507.127, 401.48, 41.4772, 0.4124", "508.158, 400.994, 41.7012, 0.5256", "509.244, 400.763, 41.8891, 0.6266", "510.385, 400.804, 42.0386, 0.7144", "511.521, 400.908, 42.1092, 0.76", "512.653, 401.076, 42.0991, 0.7626", "513.79, 401.198, 42.0638, 0.6672", "514.93, 401.277, 42.0048, 0.4784", "516.07, 401.255, 42.0423, 0.3868", "517.207, 401.14, 42.1658, 0.382", "518.27, 400.8, 42.4746, 0.4378", "519.276, 400.289, 42.926, 0.5402", "520.323, 399.897, 43.4518, 0.577", "521.4, 399.589, 44.0311, 0.5666", "522.513, 399.462, 44.4494, 0.5252", "523.65, 399.443, 44.7723, 0.4654", "524.771, 399.6, 44.9658, 0.4044", "525.884, 399.859, 45.0848, 0.3428", "526.768, 400.504, 45.2404, 0.3124", "527.532, 401.354, 45.416, 0.2984", "528.258, 402.202, 45.9693, 0.3232", "528.967, 403.049, 46.6855, 0.3646", "529.576, 403.968, 47.4387, 0.5446", "530.175, 404.892, 48.195, 0.7364", "531.12, 405.51, 48.6018, 0.827", "532.074, 406.12, 49.0, 0.9152" ],
    "parent" : "apic_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_22",
    "id" : "apic_22",
    "points3d" : [ "444.775, 456.113, 47.1002, 0.3236", "444.748, 456.123, 47.6146, 0.3176", "444.603, 456.179, 50.3888, 0.286", "443.953, 456.58, 51.8328, 0.2746", "443.017, 457.173, 52.528, 0.2744", "442.154, 457.894, 52.9091, 0.2744", "441.327, 458.68, 53.1342, 0.2742", "440.509, 459.478, 53.1888, 0.2736", "439.693, 460.28, 53.1983, 0.273", "438.895, 461.099, 53.2, 0.2712", "438.102, 461.924, 53.2, 0.269", "437.468, 462.872, 53.2, 0.2626", "436.868, 463.846, 53.2, 0.2554", "436.038, 464.625, 53.2, 0.2424", "435.178, 465.379, 53.2, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_21",
    "id" : "apic_21",
    "points3d" : [ "444.775, 456.113, 47.1002, 0.3236", "444.189, 456.189, 47.0215, 0.3382", "443.092, 456.485, 46.7558, 0.3668", "442.004, 456.815, 46.4612, 0.3954", "440.872, 456.893, 46.2042, 0.3536", "439.733, 456.923, 45.9542, 0.2984", "438.595, 457.0, 45.7542, 0.3048", "437.458, 457.086, 45.5636, 0.3224", "436.358, 456.821, 45.3158, 0.389", "435.267, 456.496, 45.0584, 0.4638", "434.191, 456.121, 44.7992, 0.4858", "433.118, 455.74, 44.5396, 0.5006", "431.977, 455.77, 44.5956, 0.4084", "430.834, 455.812, 44.6614, 0.313", "429.694, 455.738, 44.8185, 0.306", "428.555, 455.661, 44.9778, 0.3014", "427.416, 455.733, 45.1265, 0.3172", "426.275, 455.806, 45.2752, 0.333", "425.178, 456.017, 45.8758, 0.2812", "424.081, 456.227, 46.48, 0.2288" ],
    "parent" : "apic_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "466.29, 382.59, 27.6149, 0.5068", "465.602, 382.229, 27.806, 0.6218", "464.594, 381.7, 28.0862, 0.7902", "463.539, 381.261, 28.033, 0.804", "462.481, 380.825, 27.9726, 0.8142" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "466.29, 382.59, 27.6149, 0.5068", "466.663, 381.172, 28.5617, 0.5362", "466.771, 380.086, 29.2062, 0.562", "466.59, 378.976, 29.7139, 0.59", "466.371, 377.874, 30.2184, 0.5958", "466.092, 376.783, 30.7171, 0.5622", "465.796, 375.697, 31.2018, 0.538", "465.474, 374.614, 31.663, 0.5294", "465.24, 373.514, 32.0662, 0.5312", "465.155, 372.38, 32.3716, 0.55", "464.953, 371.27, 32.6606, 0.5896", "464.559, 370.201, 32.9232, 0.6638", "464.2, 369.124, 33.2416, 0.6804", "463.886, 368.036, 33.6381, 0.6166", "463.734, 366.93, 34.0712, 0.5794", "463.773, 365.803, 34.5484, 0.5746", "463.898, 364.706, 35.2447, 0.5674", "464.065, 363.623, 36.0458, 0.559", "463.754, 362.631, 36.9359, 0.5432", "463.248, 361.678, 37.8627, 0.5242", "462.707, 360.76, 38.878, 0.483", "462.157, 359.851, 39.9165, 0.436", "462.133, 358.801, 40.8248, 0.407", "462.228, 357.719, 41.7038, 0.3818", "462.314, 356.616, 42.4082, 0.3166", "462.222, 355.527, 42.978, 0.2746", "461.826, 354.463, 43.3303, 0.2746", "461.368, 353.427, 43.6808, 0.2746", "460.806, 352.442, 44.0278, 0.2746", "460.355, 351.409, 44.3472, 0.2746", "460.079, 350.305, 44.6239, 0.2746", "459.825, 349.195, 44.8762, 0.2746", "459.602, 348.077, 45.092, 0.2746", "459.37, 346.96, 45.3186, 0.2746", "459.124, 345.847, 45.5605, 0.2746", "458.803, 344.766, 45.932, 0.2746", "458.379, 343.727, 46.4853, 0.2746", "458.071, 342.657, 47.0162, 0.2746", "457.924, 341.54, 47.5152, 0.2746", "457.765, 340.428, 48.0385, 0.2746", "457.592, 339.321, 48.594, 0.2746", "457.492, 338.2, 49.0454, 0.2746", "457.488, 337.064, 49.3623, 0.2746", "457.486, 335.926, 49.6647, 0.2746", "457.486, 334.788, 49.9484, 0.2746", "457.486, 333.653, 50.2908, 0.2746", "457.486, 332.522, 50.7091, 0.2748", "457.511, 331.388, 51.0804, 0.2752", "457.567, 330.253, 51.3912, 0.2756", "457.599, 329.116, 51.6771, 0.2764", "457.6, 327.977, 51.9316, 0.2782", "457.6, 326.836, 52.1648, 0.2816", "457.6, 325.696, 52.3709, 0.287", "457.6, 324.555, 52.5745, 0.298", "457.6, 323.413, 52.7747, 0.3166", "457.6, 322.274, 53.004, 0.3556", "457.6, 321.134, 53.2714, 0.4212", "457.517, 320.035, 53.8628, 0.4894", "457.325, 318.984, 54.8663, 0.5608", "457.067, 318.008, 56.142, 0.5376", "456.756, 317.092, 57.6341, 0.4388", "456.583, 316.005, 58.1697, 0.4334", "456.445, 314.876, 58.4654, 0.4512", "456.441, 313.734, 58.424, 0.3832", "456.455, 312.591, 58.3383, 0.3038", "456.302, 311.47, 57.9351, 0.2938", "456.139, 310.351, 57.5151, 0.2872", "455.771, 309.287, 57.0181, 0.3094", "455.456, 308.228, 56.5264, 0.3388", "455.894, 307.183, 56.1403, 0.44", "456.069, 306.083, 56.1697, 0.4978", "456.068, 304.946, 56.4796, 0.5266", "456.252, 303.837, 56.8498, 0.5418", "456.544, 302.744, 57.2558, 0.549", "456.657, 301.638, 57.8441, 0.5134", "456.685, 300.529, 58.52, 0.4576" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "528.169, 381.239, 10.44, 0.6606", "527.846, 380.708, 10.2476, 0.7212", "527.255, 379.739, 9.896, 0.8322", "526.597, 378.81, 9.6249, 0.8634", "525.932, 377.886, 9.3624, 0.8862", "525.273, 376.977, 8.8405, 0.7426", "524.614, 376.068, 8.2914, 0.5816", "523.802, 375.297, 7.742, 0.5058", "522.975, 374.539, 7.1926, 0.4376", "522.364, 373.581, 6.9278, 0.5164", "521.767, 372.61, 6.6818, 0.6048", "521.427, 371.52, 6.5598, 0.646", "521.092, 370.427, 6.44, 0.6864" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "528.169, 381.239, 10.44, 0.6606", "529.42, 380.69, 9.5974, 0.6668", "529.933, 379.844, 9.1916, 0.628", "530.09, 378.713, 8.9819, 0.5584", "530.154, 377.615, 9.5699, 0.603", "530.185, 376.526, 10.4272, 0.6864" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "462.481, 380.825, 27.9726, 0.8142", "461.773, 381.411, 27.9046, 0.513", "460.722, 381.84, 27.6753, 0.459", "459.655, 382.239, 27.4322, 0.436", "458.83, 383.022, 27.5269, 0.4894", "458.021, 383.828, 27.6436, 0.548", "457.147, 384.565, 27.7772, 0.6152", "456.271, 385.298, 27.9118, 0.6828", "455.334, 385.954, 27.9286, 0.5942", "454.392, 386.604, 27.9392, 0.4972", "453.423, 387.211, 27.9692, 0.3638", "452.452, 387.816, 28.0, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "462.481, 380.825, 27.9726, 0.8142", "461.334, 380.031, 28.3788, 0.7828", "460.422, 379.352, 28.6485, 0.7626", "459.604, 378.552, 28.6776, 0.841", "458.78, 377.759, 28.7067, 0.9068", "457.884, 377.046, 28.7353, 0.8344", "456.982, 376.344, 28.7714, 0.7652", "456.01, 375.745, 28.8884, 0.7268", "455.02, 375.177, 29.0007, 0.7012", "453.959, 374.753, 29.0928, 0.7322", "452.895, 374.334, 29.188, 0.757", "451.825, 373.931, 29.2953, 0.7588", "450.807, 373.436, 29.4218, 0.7436", "449.914, 372.727, 29.5932, 0.6884", "448.955, 372.134, 29.7307, 0.6148", "447.868, 371.781, 29.8004, 0.5042", "446.764, 371.48, 29.7822, 0.517", "445.658, 371.188, 29.7483, 0.5522", "444.688, 370.601, 29.5887, 0.5792", "443.74, 369.964, 29.4078, 0.605", "443.388, 368.885, 29.379, 0.543", "443.059, 367.79, 29.3563, 0.4774", "442.612, 366.74, 29.5736, 0.5252", "442.164, 365.692, 29.7993, 0.5768", "441.254, 365.02, 30.1748, 0.5234", "440.338, 364.351, 30.5528, 0.4684" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "440.338, 364.351, 30.5528, 0.4684", "440.672, 363.754, 30.1372, 0.4156", "441.179, 362.763, 29.5621, 0.34", "441.522, 361.674, 29.4302, 0.309", "441.847, 360.58, 29.2947, 0.2862", "442.092, 359.463, 29.1452, 0.2976", "442.289, 358.345, 28.9302, 0.3116", "442.291, 357.217, 28.4567, 0.3356", "442.157, 356.124, 27.9176, 0.3436", "441.725, 355.101, 27.2349, 0.3172", "441.269, 354.094, 26.5187, 0.3106", "440.765, 353.12, 25.7305, 0.346", "440.198, 352.179, 24.9984, 0.3566", "439.502, 351.306, 24.3804, 0.3164", "438.656, 350.644, 23.7903, 0.2888", "437.593, 350.287, 23.2408, 0.28", "436.497, 350.086, 22.7925, 0.2756", "435.361, 350.072, 22.4662, 0.2766", "434.222, 350.064, 22.2005, 0.2786", "433.081, 350.064, 22.0068, 0.2816", "431.939, 350.064, 21.8385, 0.2882", "430.796, 350.064, 21.7002, 0.2988", "429.701, 350.278, 21.4948, 0.3232", "428.665, 350.747, 21.2099, 0.364", "427.651, 351.264, 20.9503, 0.4066", "426.659, 351.827, 20.7141, 0.4504", "425.625, 352.289, 20.4307, 0.4672", "424.552, 352.663, 20.1057, 0.4598", "423.438, 352.85, 19.8908, 0.4588", "422.297, 352.917, 19.7471, 0.4622", "421.16, 352.934, 19.4826, 0.4466", "420.024, 352.924, 19.1488, 0.4202", "418.906, 353.049, 18.7048, 0.47", "417.799, 353.249, 18.1994, 0.5622", "416.739, 353.041, 17.6707, 0.6276", "415.702, 352.608, 17.1292, 0.6782", "414.705, 352.098, 16.5766, 0.7154", "413.716, 351.569, 16.0214, 0.7496", "412.637, 351.306, 15.4118, 0.671", "411.543, 351.095, 14.7918, 0.5704", "410.495, 350.655, 14.6174, 0.5286", "409.453, 350.186, 14.5043, 0.4968", "408.367, 349.825, 14.4641, 0.5954", "407.28, 349.47, 14.4179, 0.689", "406.157, 349.269, 14.2145, 0.6468", "405.038, 349.049, 14.0489, 0.6046", "403.951, 348.697, 14.1619, 0.562", "402.863, 348.346, 14.2543, 0.528", "401.773, 347.999, 14.2628, 0.528", "400.679, 347.668, 14.1816, 0.5644", "399.581, 347.362, 13.9503, 0.661", "398.466, 347.198, 13.7692, 0.7098", "397.323, 347.247, 13.662, 0.688", "396.198, 347.404, 13.4994, 0.684", "395.093, 347.683, 13.2748, 0.7", "393.965, 347.818, 13.0469, 0.7176", "392.827, 347.882, 12.8174, 0.736", "391.688, 347.984, 12.7196, 0.6916", "390.55, 348.096, 12.6542, 0.6318", "389.579, 348.666, 13.0343, 0.4342", "388.617, 349.263, 13.44, 0.2288" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "440.338, 364.351, 30.5528, 0.4684", "439.306, 363.863, 31.1066, 0.534", "438.461, 363.095, 31.2808, 0.5596", "437.622, 362.321, 31.4446, 0.5842", "436.862, 361.467, 31.5106, 0.5992", "436.084, 360.632, 31.5745, 0.6152", "435.167, 359.947, 31.6221, 0.6384", "434.245, 359.271, 31.6719, 0.6616", "433.28, 358.658, 31.7397, 0.6834", "432.345, 358.008, 31.8016, 0.6832", "431.575, 357.161, 31.8301, 0.5608", "430.795, 356.326, 31.8713, 0.445", "429.956, 355.549, 31.9777, 0.3648", "429.102, 354.792, 32.086, 0.3062", "428.184, 354.11, 32.2008, 0.3314", "427.265, 353.432, 32.3238, 0.3648", "426.337, 352.765, 32.4741, 0.4258", "425.394, 352.121, 32.6147, 0.4952", "424.403, 351.551, 32.7242, 0.5922", "423.441, 350.94, 32.853, 0.6802", "422.554, 350.222, 33.0324, 0.745", "421.71, 349.459, 33.1349, 0.797", "420.979, 348.579, 33.0453, 0.8174", "420.169, 347.784, 32.935, 0.8626", "419.244, 347.115, 32.7947, 0.945", "418.352, 346.403, 32.7043, 0.9724", "417.504, 345.634, 32.6822, 0.9244", "416.63, 344.901, 32.7645, 0.9158", "415.72, 344.212, 32.9868, 0.9596", "414.881, 343.451, 33.2228, 0.9384", "414.129, 342.594, 33.4771, 0.8328", "413.294, 341.832, 33.7042, 0.7498", "412.35, 341.19, 33.8968, 0.6964", "411.386, 340.584, 34.1214, 0.6394", "410.396, 340.02, 34.3834, 0.5782", "409.431, 339.412, 34.5677, 0.5578", "408.481, 338.777, 34.6998, 0.5648", "407.479, 338.227, 34.7645, 0.5464", "406.467, 337.694, 34.8163, 0.5232", "405.465, 337.144, 34.7679, 0.5492", "404.462, 336.593, 34.7138, 0.578", "403.587, 335.865, 34.477, 0.606", "402.718, 335.127, 34.2308, 0.6342", "401.926, 334.302, 34.1768, 0.7442", "401.136, 333.475, 34.1278, 0.8564", "400.22, 332.795, 34.3454, 0.8438", "399.31, 332.109, 34.5523, 0.8202", "398.463, 331.341, 34.6296, 0.7226", "397.605, 330.586, 34.699, 0.646", "396.665, 329.935, 34.711, 0.7242", "395.715, 329.298, 34.6956, 0.7878", "394.721, 328.735, 34.5316, 0.7716", "393.765, 328.127, 34.3829, 0.7444", "392.997, 327.279, 34.3129, 0.6618", "392.167, 326.516, 34.2742, 0.632", "391.127, 326.04, 34.3414, 0.7824", "390.117, 325.514, 34.4005, 0.8958", "389.197, 324.833, 34.435, 0.8958", "388.277, 324.154, 34.4179, 0.8732", "387.356, 323.48, 34.2591, 0.7888", "386.483, 322.751, 34.1516, 0.7384", "385.742, 321.88, 34.1813, 0.779", "384.985, 321.026, 34.2924, 0.8116", "384.187, 320.216, 34.6083, 0.824", "383.341, 319.468, 34.9376, 0.8368", "382.383, 318.859, 35.2971, 0.8504", "381.392, 318.311, 35.5807, 0.875", "380.33, 317.891, 35.7084, 0.9224", "379.48, 317.229, 35.7613, 0.986", "378.933, 316.224, 35.7081, 1.0724", "378.296, 315.283, 35.6782, 1.0748", "377.536, 314.428, 35.679, 0.9638", "376.75, 313.599, 35.7736, 0.8768", "375.934, 312.801, 35.9713, 0.8166", "375.106, 312.015, 36.0976, 0.7948", "374.267, 311.238, 36.1648, 0.805", "373.422, 310.467, 36.1542, 0.7488", "372.572, 309.701, 36.0822, 0.6402", "371.76, 308.899, 36.146, 0.64", "370.974, 308.07, 36.3138, 0.7226", "370.075, 307.385, 36.4921, 0.8374", "369.091, 306.807, 36.6783, 0.976", "368.191, 306.117, 36.9065, 1.0784", "367.352, 305.346, 37.1652, 1.1552", "366.457, 304.642, 37.3458, 1.0256", "365.531, 303.972, 37.4842, 0.7834", "364.618, 303.282, 37.5533, 0.6682", "363.712, 302.585, 37.5883, 0.6148", "362.812, 301.881, 37.6961, 0.5094", "361.914, 301.175, 37.8347, 0.3816", "361.042, 300.435, 37.8686, 0.4046", "360.179, 299.683, 37.8692, 0.476", "359.229, 299.06, 38.0708, 0.6804", "358.25, 298.475, 38.3328, 0.9246", "357.372, 297.768, 38.7551, 1.0122", "356.513, 297.036, 39.212, 1.0658", "355.613, 296.33, 39.244, 1.004", "354.711, 295.628, 39.2384, 0.932", "353.885, 294.837, 39.2496, 0.9336", "353.061, 294.043, 39.2636, 0.94", "352.025, 293.564, 39.3758, 0.8406", "350.992, 293.076, 39.4979, 0.7416", "350.047, 292.443, 39.8132, 0.6528", "349.103, 291.809, 40.1218, 0.5688", "348.177, 291.141, 40.3256, 0.5596", "347.247, 290.482, 40.5177, 0.5638", "346.261, 289.903, 40.5922, 0.7024", "345.279, 289.321, 40.705, 0.8296", "344.311, 288.725, 41.0309, 0.8932", "343.358, 288.107, 41.3176, 0.9428", "342.48, 287.374, 41.4064, 0.9228", "341.585, 286.666, 41.4918, 0.931", "340.62, 286.05, 41.566, 1.0412", "339.71, 285.375, 41.6693, 1.1156", "338.964, 284.512, 41.8622, 1.08", "338.134, 283.751, 42.068, 1.0254", "337.134, 283.204, 42.2996, 0.9322", "336.147, 282.632, 42.4631, 0.8776", "335.187, 282.01, 42.4914, 0.8994", "334.229, 281.391, 42.6364, 0.9262", "333.273, 280.78, 43.0035, 0.9626", "332.385, 280.082, 43.3107, 0.941", "331.586, 279.27, 43.5383, 0.8426", "330.775, 278.466, 43.6106, 0.795", "329.951, 277.673, 43.5047, 0.8054", "329.098, 276.913, 43.4302, 0.845", "328.216, 276.185, 43.3868, 0.914", "327.354, 275.435, 43.2491, 0.8358", "326.514, 274.665, 43.0186, 0.6132", "325.66, 273.907, 42.8792, 0.4942", "324.797, 273.158, 42.8201, 0.4668", "323.912, 272.438, 42.95, 0.525", "323.008, 271.746, 43.2432, 0.6574", "322.098, 271.06, 43.4193, 0.7748", "321.179, 270.379, 43.4988, 0.8798", "320.282, 269.669, 43.547, 0.975", "319.402, 268.937, 43.5725, 1.0628", "318.444, 268.324, 43.6033, 1.005", "317.435, 267.786, 43.6374, 0.8536", "316.387, 267.337, 43.7573, 0.9202", "315.317, 266.934, 43.9233, 1.1042", "314.245, 266.554, 44.2061, 1.1288", "313.171, 266.182, 44.5267, 1.102", "312.177, 265.626, 44.5371, 0.9524", "311.199, 265.034, 44.483, 0.7772", "310.175, 264.527, 44.3372, 0.757", "309.149, 264.025, 44.1865, 0.7444", "308.128, 263.515, 43.9821, 0.7698", "307.109, 263.004, 43.7766, 0.7962", "306.068, 262.529, 43.738, 0.7506", "305.028, 262.053, 43.7018, 0.704" ],
    "parent" : "apic_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "305.028, 262.053, 43.7018, 0.704", "304.793, 261.481, 44.5203, 0.5312", "304.115, 260.627, 45.136, 0.472", "303.343, 259.797, 45.5221, 0.4842", "302.879, 258.768, 45.6196, 0.4842", "302.475, 257.7, 45.6425, 0.4806", "301.793, 256.786, 45.4633, 0.45", "301.112, 255.868, 45.297, 0.4234", "300.474, 254.919, 45.3754, 0.4724", "299.826, 253.978, 45.4586, 0.5252", "299.046, 253.143, 45.6016, 0.6232", "298.256, 252.32, 45.7215, 0.716", "297.347, 251.626, 45.5966, 0.7532", "296.425, 250.955, 45.5011, 0.7942", "295.407, 250.436, 45.6086, 0.8608", "294.409, 249.885, 45.6963, 0.8992", "293.54, 249.141, 45.6708, 0.7762", "292.657, 248.416, 45.6341, 0.6662", "291.713, 247.771, 45.5434, 0.6208", "290.728, 247.217, 45.4961, 0.5924", "289.614, 246.961, 45.5904, 0.62", "288.544, 246.606, 45.6772, 0.6332", "287.614, 245.941, 45.74, 0.6004", "286.708, 245.245, 45.7635, 0.5728", "285.87, 244.468, 45.6714, 0.5602", "284.988, 243.747, 45.6644, 0.5566", "284.022, 243.138, 45.8184, 0.5706", "283.147, 242.423, 45.9701, 0.5566", "282.401, 241.558, 46.1182, 0.5032", "281.564, 240.798, 46.2638, 0.4832", "280.598, 240.187, 46.4061, 0.5102", "279.589, 239.66, 46.4654, 0.5584", "278.526, 239.237, 46.4192, 0.633", "277.517, 238.713, 46.419, 0.6936", "276.576, 238.064, 46.4755, 0.7364", "275.576, 237.529, 46.6071, 0.7748", "274.509, 237.126, 46.8269, 0.8076", "273.461, 236.68, 47.0462, 0.8516", "272.432, 236.187, 47.2646, 0.9074", "271.413, 235.674, 47.4306, 0.905", "270.402, 235.139, 47.5415, 0.8402", "269.381, 234.623, 47.6008, 0.7516", "268.352, 234.126, 47.6104, 0.6394", "267.314, 233.645, 47.6742, 0.6318", "266.272, 233.176, 47.7856, 0.7156", "265.266, 232.637, 47.9066, 0.723", "264.292, 232.041, 48.0351, 0.6686", "263.295, 231.483, 48.1555, 0.6318", "262.281, 230.953, 48.27, 0.6078", "261.33, 230.334, 48.5201, 0.5556", "260.418, 229.657, 48.8219, 0.4918", "259.524, 228.961, 48.431, 0.5574", "258.628, 228.268, 48.057, 0.6312", "257.7, 227.601, 47.9158, 0.8112", "256.773, 226.933, 47.7848, 0.9752", "255.851, 226.256, 47.7277, 1.0242", "254.963, 225.542, 47.6395, 1.0194", "254.192, 224.7, 47.4454, 0.8306", "253.375, 223.909, 47.3144, 0.7066", "252.451, 223.234, 47.3262, 0.7302", "251.501, 222.604, 47.4163, 0.7714", "250.497, 222.065, 47.6711, 0.849", "249.535, 221.466, 47.9408, 0.8958", "248.643, 220.759, 48.2364, 0.8888", "247.741, 220.064, 48.5139, 0.8754", "246.824, 219.389, 48.7614, 0.8514", "245.971, 218.639, 48.8992, 0.8094", "245.206, 217.788, 48.8928, 0.744", "244.37, 217.014, 48.8726, 0.7146", "243.458, 216.324, 48.8376, 0.7236", "242.506, 215.693, 48.8821, 0.7838", "241.522, 215.112, 48.991, 0.8858", "240.571, 214.494, 49.2957, 0.804", "239.637, 213.855, 49.7132, 0.6158", "238.778, 213.116, 50.0654, 0.6344", "237.937, 212.353, 50.4022, 0.7012", "237.053, 211.633, 50.5982, 0.7176", "236.159, 210.922, 50.7646, 0.7232", "235.069, 210.608, 50.9172, 0.7892", "233.961, 210.329, 51.0684, 0.8604", "232.948, 209.805, 51.2187, 0.9062", "231.94, 209.267, 51.3688, 0.9506", "230.846, 208.946, 51.5648, 0.9832", "229.752, 208.62, 51.7667, 1.0136", "228.704, 208.185, 52.1228, 0.981", "227.663, 207.738, 52.4695, 0.9462", "226.744, 207.061, 52.6459, 0.871", "225.803, 206.424, 52.8116, 0.801", "224.724, 206.047, 52.9102, 0.7632", "223.642, 205.678, 53.0096, 0.7344", "222.547, 205.348, 53.1146, 0.7508", "221.445, 205.049, 53.2314, 0.7644", "220.318, 204.861, 53.3893, 0.768", "219.346, 204.409, 53.7004, 0.7754", "218.599, 203.57, 54.2371, 0.7882", "217.918, 202.673, 54.6717, 0.8192", "217.296, 201.724, 55.0147, 0.8662", "216.406, 201.077, 55.3932, 0.8902", "215.392, 200.572, 55.7886, 0.903", "214.474, 199.921, 56.1789, 0.8262", "213.597, 199.202, 56.567, 0.7084", "212.588, 198.732, 57.0318, 0.6438", "211.525, 198.363, 57.5277, 0.6008", "210.542, 197.817, 57.9928, 0.6814", "209.581, 197.226, 58.45, 0.7934" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "305.028, 262.053, 43.7018, 0.704", "303.765, 261.643, 43.6201, 0.7042", "302.71, 261.216, 43.5744, 0.6916", "301.733, 260.621, 43.5865, 0.6492", "300.762, 260.017, 43.5652, 0.6056", "299.801, 259.399, 43.4759, 0.5594", "298.83, 258.796, 43.4095, 0.5378", "297.839, 258.223, 43.3874, 0.563", "296.87, 257.621, 43.2578, 0.5852", "295.929, 256.981, 42.9881, 0.6028", "294.913, 256.474, 42.796, 0.5938", "293.851, 256.051, 42.6521, 0.5684", "292.82, 255.562, 42.5135, 0.596", "291.808, 255.032, 42.3783, 0.6546", "290.763, 254.576, 42.2122, 0.6216", "289.702, 254.154, 42.0316, 0.5456", "288.711, 253.592, 42.0106, 0.5874", "287.745, 252.981, 42.0442, 0.6696", "286.7, 252.525, 42.2075, 0.6482", "285.636, 252.114, 42.4052, 0.5988", "284.619, 251.601, 42.6283, 0.5696", "283.615, 251.061, 42.8579, 0.546", "282.666, 250.439, 43.1757, 0.5294", "281.731, 249.795, 43.5165, 0.5146", "280.855, 249.062, 43.5792, 0.4812", "279.993, 248.311, 43.5758, 0.4432", "279.035, 247.693, 43.7074, 0.5528", "278.055, 247.107, 43.8704, 0.6972", "277.06, 246.548, 44.044, 0.7192", "276.061, 245.995, 44.2198, 0.7134", "275.113, 245.358, 44.2893, 0.629", "274.172, 244.706, 44.3411, 0.5314", "273.576, 243.744, 44.2627, 0.4968", "273.024, 242.743, 44.1683, 0.47", "272.128, 242.051, 44.0334, 0.4254", "271.193, 241.394, 43.8934, 0.379", "270.185, 240.858, 43.7466, 0.4502", "269.175, 240.325, 43.6019, 0.5286", "268.262, 239.636, 43.6878, 0.6624", "267.346, 238.953, 43.7758, 0.7912", "266.299, 238.498, 43.9376, 0.7644", "265.252, 238.041, 44.0726, 0.75", "264.208, 237.572, 44.0639, 0.8008", "263.177, 237.079, 44.0457, 0.8408", "262.2, 236.485, 43.9886, 0.837", "261.267, 235.838, 43.9723, 0.7952", "260.503, 234.989, 44.1123, 0.6086", "259.655, 234.248, 44.0992, 0.5062", "258.655, 233.707, 43.8049, 0.5578", "257.653, 233.163, 43.5884, 0.5842", "256.651, 232.613, 43.5114, 0.5652", "255.65, 232.059, 43.4753, 0.6196", "254.651, 231.502, 43.4921, 0.768", "253.654, 230.939, 43.5028, 0.8042", "252.663, 230.37, 43.507, 0.7146", "251.701, 229.754, 43.5361, 0.69", "250.766, 229.094, 43.5879, 0.7244", "249.913, 228.34, 43.6828, 0.7554", "249.121, 227.516, 43.8102, 0.7836", "248.254, 226.774, 43.813, 0.7488", "247.363, 226.055, 43.7766, 0.6942", "246.475, 225.334, 43.7875, 0.6574", "245.588, 224.612, 43.8102, 0.6248", "244.974, 223.653, 44.046, 0.6598", "244.33, 222.719, 44.2837, 0.6922", "243.512, 221.925, 44.4982, 0.7034", "242.676, 221.154, 44.7602, 0.7218", "241.777, 220.468, 45.1906, 0.7652", "240.849, 219.827, 45.5809, 0.7672", "239.824, 219.33, 45.8419, 0.6348", "238.791, 218.874, 45.8198, 0.5446", "237.74, 218.506, 45.1676, 0.548", "236.691, 218.12, 44.6001, 0.5864", "235.642, 217.693, 44.1949, 0.692", "234.645, 217.176, 44.0628, 0.7974", "233.743, 216.488, 44.441, 0.9026", "232.757, 215.952, 44.6964, 0.988", "231.674, 215.587, 44.8123, 1.0508", "230.662, 215.082, 44.9915, 1.0356", "229.73, 214.428, 45.2399, 0.9348", "228.841, 213.742, 45.7153, 0.8686", "227.992, 213.028, 46.3921, 0.8332", "227.015, 212.497, 46.8432, 0.8192", "225.953, 212.091, 47.1405, 0.8198", "224.905, 211.643, 47.3528, 0.799", "223.865, 211.17, 47.5082, 0.7638", "222.76, 210.973, 47.6143, 0.749", "221.617, 210.931, 47.693, 0.7458", "220.498, 211.035, 48.1099, 0.6658", "219.389, 211.203, 48.6741, 0.5528", "218.263, 211.098, 48.683, 0.5964", "217.131, 210.934, 48.5724, 0.6736", "216.141, 210.41, 48.2306, 0.6828", "215.177, 209.814, 47.8419, 0.6782", "214.389, 209.008, 47.423, 0.7368", "213.618, 208.18, 47.0109, 0.8026", "212.666, 207.549, 47.14, 0.8666", "211.725, 206.903, 47.2839, 0.9172", "210.876, 206.144, 47.5446, 0.863", "210.045, 205.366, 47.7358, 0.8108", "209.309, 204.493, 47.5712, 0.7696", "208.535, 203.669, 47.3329, 0.7504", "207.591, 203.068, 46.7533, 0.8342", "206.598, 202.649, 46.2647, 0.8834", "205.465, 202.772, 46.048, 0.8304", "204.389, 202.657, 45.7876, 0.8154", "203.439, 202.036, 45.4345, 0.8814", "202.452, 201.485, 45.0909, 0.9206", "201.4, 201.056, 44.7647, 0.9118", "200.335, 200.655, 44.6051, 0.9148", "199.248, 200.301, 44.7364, 0.9386", "198.195, 199.872, 44.7706, 0.964", "197.184, 199.336, 44.6709, 0.9918", "196.186, 198.788, 44.4475, 0.924", "195.202, 198.224, 44.0684, 0.7356", "194.234, 197.627, 43.8094, 0.6008", "193.285, 196.992, 43.6842, 0.5256", "192.419, 196.259, 43.4129, 0.4694", "191.591, 195.481, 43.0763, 0.4218", "190.628, 194.916, 42.6258, 0.4948", "189.608, 194.44, 42.1268, 0.6188", "188.714, 193.763, 41.6839, 0.6964", "187.865, 193.017, 41.2602, 0.7578", "186.868, 192.502, 40.8985, 0.7476", "185.819, 192.066, 40.558, 0.713", "184.718, 191.917, 40.0232, 0.7148", "183.602, 191.855, 39.4304, 0.7276", "182.487, 191.809, 38.8046, 0.739", "181.374, 191.769, 38.171, 0.75", "180.706, 190.978, 37.4478, 0.7804", "180.067, 190.136, 36.643, 0.8106", "179.061, 189.893, 35.4446, 0.8166", "178.04, 189.505, 34.7886, 0.7274", "177.008, 189.03, 34.4554, 0.5818", "175.908, 188.803, 34.1603, 0.6234", "174.775, 188.706, 33.8848, 0.7606", "173.637, 188.601, 33.726, 0.745", "172.499, 188.493, 33.6252, 0.653", "171.396, 188.217, 33.6664, 0.6404", "170.31, 187.861, 33.7714, 0.664", "169.331, 187.293, 33.9452, 0.6748", "168.4, 186.634, 34.1477, 0.6806", "167.625, 185.816, 33.955, 0.6818", "166.911, 184.933, 33.6056, 0.6812", "165.911, 184.464, 33.1559, 0.6354", "164.848, 184.086, 32.6844, 0.5798", "163.726, 184.136, 32.1975, 0.5504", "162.604, 184.163, 31.7282, 0.5306", "161.52, 183.813, 31.46, 0.6076", "160.445, 183.44, 31.2306, 0.6694", "159.396, 182.984, 31.1545, 0.6722", "158.325, 182.652, 31.0971, 0.6436", "157.182, 182.714, 31.0988, 0.5146", "156.04, 182.733, 31.0626, 0.4334", "154.899, 182.671, 30.9523, 0.4442", "153.781, 182.513, 30.7154, 0.4456", "152.706, 182.173, 30.2389, 0.4296", "151.618, 182.11, 29.8785, 0.455", "150.514, 182.398, 29.6674, 0.533", "149.512, 182.229, 29.4865, 0.5984", "148.634, 181.498, 29.3437, 0.6488", "147.685, 180.877, 29.1743, 0.6358", "146.668, 180.359, 28.98, 0.5636", "145.66, 179.837, 28.6602, 0.4688", "144.659, 179.312, 28.2321, 0.3548", "143.79, 178.622, 27.7273, 0.295", "143.029, 177.801, 27.1607, 0.2788", "142.536, 176.809, 26.7279, 0.2722", "142.179, 175.732, 26.3618, 0.2706", "141.585, 174.79, 25.928, 0.2646", "140.88, 173.907, 25.4626, 0.2568", "141.128, 172.814, 25.0507, 0.243", "141.398, 171.714, 24.64, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "209.581, 197.226, 58.45, 0.7934", "208.094, 197.64, 59.0058, 0.4512", "207.05, 198.053, 59.5468, 0.3204", "205.938, 198.302, 59.7808, 0.3204", "204.829, 198.562, 60.0132, 0.3204", "203.828, 199.11, 60.1863, 0.3204", "202.833, 199.67, 60.363, 0.3204", "201.961, 200.402, 60.6012, 0.3204", "201.06, 201.085, 60.8532, 0.3204", "199.98, 201.436, 61.1993, 0.3204", "198.897, 201.772, 61.551, 0.3204", "197.799, 202.051, 61.9259, 0.3204", "196.693, 202.301, 62.2404, 0.3204", "195.559, 202.451, 62.3428, 0.3204", "194.448, 202.677, 62.4901, 0.3204", "193.406, 203.134, 62.7763, 0.3204", "192.397, 203.609, 63.2741, 0.3204", "191.476, 204.124, 64.3527, 0.3204", "190.551, 204.62, 65.4724, 0.3204", "189.625, 205.078, 66.6669, 0.3204", "188.704, 205.56, 67.8367, 0.3204", "187.793, 206.074, 68.9713, 0.3204", "186.904, 206.731, 69.6158, 0.3204", "186.021, 207.429, 70.1187, 0.3204", "185.097, 208.025, 70.8632, 0.3204", "184.161, 208.592, 71.6761, 0.3204", "183.355, 208.942, 73.386, 0.3204", "182.582, 209.238, 75.32, 0.3204" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "209.581, 197.226, 58.45, 0.7934", "208.826, 196.166, 58.7118, 0.5752", "208.133, 195.269, 59.0355, 0.4576", "207.387, 194.423, 59.509, 0.4576", "206.596, 193.62, 59.9598, 0.4576", "205.748, 192.872, 60.3806, 0.4576", "204.822, 192.247, 60.8476, 0.4576", "203.809, 191.758, 61.3656, 0.4576", "202.862, 191.157, 61.7915, 0.4576", "201.982, 190.437, 62.1219, 0.4576", "201.138, 189.681, 62.468, 0.4576", "200.329, 188.886, 62.8295, 0.4576", "199.555, 188.094, 63.4766, 0.4576", "198.809, 187.306, 64.367, 0.4576", "198.125, 186.461, 65.2246, 0.4576", "197.462, 185.595, 66.071, 0.4576", "196.792, 184.771, 67.1062, 0.4576", "196.12, 183.959, 68.1968, 0.4576", "195.48, 183.08, 69.0519, 0.4576", "194.848, 182.183, 69.8502, 0.4576", "194.479, 181.104, 69.8905, 0.4576", "194.122, 180.018, 69.8981, 0.4576", "193.596, 179.007, 70.126, 0.4576", "193.066, 177.997, 70.3584, 0.4576", "192.508, 177.036, 71.02, 0.4576", "191.951, 176.074, 71.6825, 0.4576" ],
    "parent" : "apic_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "191.951, 176.074, 71.6825, 0.4576", "191.1, 176.028, 71.6162, 0.4348", "190.008, 176.264, 71.9718, 0.378", "188.934, 176.598, 72.476, 0.3122", "187.869, 176.836, 73.3054, 0.328", "186.806, 177.057, 74.1905, 0.3578", "185.997, 177.193, 76.1046, 0.2978", "185.214, 177.32, 78.12, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "191.951, 176.074, 71.6825, 0.4576", "191.088, 174.867, 72.7045, 0.3178", "190.365, 174.031, 73.397, 0.2746", "189.585, 173.237, 74.0421, 0.2746", "188.773, 172.453, 74.4492, 0.2746", "187.94, 171.676, 74.7138, 0.2746", "187.404, 170.701, 74.9521, 0.2746", "187.015, 169.629, 75.1775, 0.2746", "186.843, 168.507, 75.3516, 0.2746", "186.732, 167.37, 75.511, 0.2746", "186.489, 166.273, 75.9923, 0.2746", "186.216, 165.187, 76.5503, 0.2746", "185.835, 164.126, 77.0291, 0.2746", "185.441, 163.069, 77.4984, 0.2746", "185.103, 161.99, 77.9136, 0.2746", "184.763, 160.911, 78.2858, 0.2746", "184.342, 159.848, 78.1463, 0.2746", "183.934, 158.781, 77.999, 0.2746", "183.604, 157.689, 77.803, 0.2746", "183.3, 156.592, 77.5732, 0.2746", "183.139, 155.473, 77.1476, 0.2746", "183.024, 154.351, 76.7603, 0.2746", "183.106, 153.212, 76.5447, 0.2746", "183.193, 152.075, 76.3445, 0.2746", "183.3, 150.937, 76.2048, 0.2746", "183.383, 149.799, 76.1564, 0.2746", "183.419, 148.657, 76.3162, 0.2746", "183.232, 147.557, 76.5226, 0.2746", "182.808, 146.499, 76.7788, 0.2746", "182.439, 145.422, 77.0378, 0.2746", "182.107, 144.333, 77.2982, 0.2746", "182.193, 143.225, 77.294, 0.2746", "182.444, 142.11, 77.1868, 0.2746", "182.475, 140.974, 77.2251, 0.2746", "182.43, 139.832, 77.3144, 0.2746", "182.497, 138.725, 77.9528, 0.2746", "182.582, 137.623, 78.68, 0.2746" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_604",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_605",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_26", "dend_23", "dend_16", "dend_15", "dend_0", "apic_18", "apic_1", "dend_30", "dend_27", "dend_25", "dend_24", "dend_22", "dend_17", "dend_6", "dend_1", "apic_26", "apic_19", "apic_3", "apic_2", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_12", "dend_7", "dend_3", "dend_2", "apic_23", "apic_20", "apic_17", "apic_4", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "apic_25", "apic_24", "apic_22", "apic_21", "apic_6", "apic_5", "dend_10", "dend_9", "apic_16", "apic_7", "apic_15", "apic_8", "apic_10", "apic_9", "apic_14", "apic_11", "apic_13", "apic_12" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_23", "dend_16", "dend_15", "dend_0", "dend_30", "dend_27", "dend_25", "dend_24", "dend_22", "dend_17", "dend_6", "dend_1", "dend_32", "dend_31", "dend_29", "dend_28", "dend_19", "dend_18", "dend_12", "dend_7", "dend_3", "dend_2", "dend_21", "dend_20", "dend_14", "dend_13", "dend_11", "dend_8", "dend_5", "dend_4", "dend_10", "dend_9" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_18", "apic_1", "apic_26", "apic_19", "apic_3", "apic_2", "apic_23", "apic_20", "apic_17", "apic_4", "apic_25", "apic_24", "apic_22", "apic_21", "apic_6", "apic_5", "apic_16", "apic_7", "apic_15", "apic_8", "apic_10", "apic_9", "apic_14", "apic_11", "apic_13", "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25497",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "apic_18", "apic_18", "apic_18", "apic_18", "apic_18", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_6", "dend_6", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_26", "apic_19", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_23", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_20", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_17", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_25", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_24", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_22", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_21", "apic_6", "apic_6", "apic_6", "apic_6", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "2.2597318"
  }, {
    "group" : "apic",
    "value" : "2.2597318"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "29.628654"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0017261315",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.40009573",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.8814761E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0039703567",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.16175993",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.016393103",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.0014963683",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.014139049",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "4.7244183E-7",
    "erev" : "-84.97303"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.4045983E-4",
    "erev" : "-84.97303"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "1.0092538E-7",
    "erev" : "-84.97303"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "3.2237687E-4",
    "erev" : "-84.97303"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "1.5987478E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0028974903",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478810017",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478810017

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: soma_0
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: soma_0
create dend_15
public dend_15
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_18, id: apic_18, parent: apic_0
create apic_18
public apic_18
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_16
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_6, id: dend_6, parent: dend_0
create dend_6
public dend_6
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_26, id: apic_26, parent: apic_18
create apic_26
public apic_26
// Section: apic_19, id: apic_19, parent: apic_18
create apic_19
public apic_19
// Section: apic_3, id: apic_3, parent: apic_1
create apic_3
public apic_3
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_12, id: dend_12, parent: dend_6
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_23, id: apic_23, parent: apic_19
create apic_23
public apic_23
// Section: apic_20, id: apic_20, parent: apic_19
create apic_20
public apic_20
// Section: apic_17, id: apic_17, parent: apic_3
create apic_17
public apic_17
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: apic_25, id: apic_25, parent: apic_23
create apic_25
public apic_25
// Section: apic_24, id: apic_24, parent: apic_23
create apic_24
public apic_24
// Section: apic_22, id: apic_22, parent: apic_20
create apic_22
public apic_22
// Section: apic_21, id: apic_21, parent: apic_20
create apic_21
public apic_21
// Section: apic_6, id: apic_6, parent: apic_4
create apic_6
public apic_6
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: apic_16, id: apic_16, parent: apic_6
create apic_16
public apic_16
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_15, id: apic_15, parent: apic_7
create apic_15
public apic_15
// Section: apic_8, id: apic_8, parent: apic_7
create apic_8
public apic_8
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_14, id: apic_14, parent: apic_10
create apic_14
public apic_14
// Section: apic_11, id: apic_11, parent: apic_10
create apic_11
public apic_11
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_604, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_604
// Group: {name=ModelViewParmSubset_605, groups=[], sections=[apic_0, dend_26, dend_23, dend_16, dend_15, dend_0, apic_18, apic_1, dend_30, dend_27, dend_25, dend_24, dend_22, dend_17, dend_6, dend_1, apic_26, apic_19, apic_3, apic_2, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_12, dend_7, dend_3, dend_2, apic_23, apic_20, apic_17, apic_4, dend_21, dend_20, dend_14, dend_13, dend_11, dend_8, dend_5, dend_4, apic_25, apic_24, apic_22, apic_21, apic_6, apic_5, dend_10, dend_9, apic_16, apic_7, apic_15, apic_8, apic_10, apic_9, apic_14, apic_11, apic_13, apic_12]}
objref ModelViewParmSubset_605
// Group: {name=dend, groups=[], sections=[dend_26, dend_23, dend_16, dend_15, dend_0, dend_30, dend_27, dend_25, dend_24, dend_22, dend_17, dend_6, dend_1, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_12, dend_7, dend_3, dend_2, dend_21, dend_20, dend_14, dend_13, dend_11, dend_8, dend_5, dend_4, dend_10, dend_9]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_26, apic_19, apic_3, apic_2, apic_23, apic_20, apic_17, apic_4, apic_25, apic_24, apic_22, apic_21, apic_6, apic_5, apic_16, apic_7, apic_15, apic_8, apic_10, apic_9, apic_14, apic_11, apic_13, apic_12]}
objref apic
// Group: {name=OneSecGrp_SectionRef_25497, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_25497
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_19, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478810017
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999574576703782)
    connect apic_0(0), soma_0(0.4999574576703782)
    connect dend_26(0), soma_0(0.4999574576703782)
    connect dend_23(0), soma_0(0.4999574576703782)
    connect dend_16(0), soma_0(0.4999574576703782)
    connect dend_15(0), soma_0(0.4999574576703782)
    connect dend_0(0), soma_0(0.4999574576703782)
    connect axon_1(0), axon_0(1.0)
    connect apic_18(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_6(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_26(0), apic_18(1.0)
    connect apic_19(0), apic_18(1.0)
    connect apic_3(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_12(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_23(0), apic_19(1.0)
    connect apic_20(0), apic_19(1.0)
    connect apic_17(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect apic_25(0), apic_23(1.0)
    connect apic_24(0), apic_23(1.0)
    connect apic_22(0), apic_20(1.0)
    connect apic_21(0), apic_20(1.0)
    connect apic_6(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect apic_16(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_15(0), apic_7(1.0)
    connect apic_8(0), apic_7(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_14(0), apic_10(1.0)
    connect apic_11(0), apic_10(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 509.61, 410.467, 25.2, 11.7526 ) }
    soma_0 { pt3dadd( 515.486, 410.467, 25.2, 11.7526 ) }
    soma_0 { pt3dadd( 521.363, 410.467, 25.2, 11.7526 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 515.486, 410.467, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 521.328, 424.283, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 527.169, 438.099, 25.2, 1.0 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 6/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 509.633, 407.584, 25.0193, 2.2748 ) }
    apic_0 { pt3dadd( 508.591, 405.554, 25.2286, 1.4258 ) }
    apic_0 { pt3dadd( 506.862, 404.069, 25.6061, 1.3734 ) }
    apic_0 { pt3dadd( 505.084, 402.633, 25.8629, 1.3728 ) }
    apic_0 { pt3dadd( 503.21, 401.32, 25.9395, 1.3728 ) }
    apic_0 { pt3dadd( 501.59, 399.707, 26.0336, 1.3728 ) }
    apic_0 { pt3dadd( 500.76, 398.92, 26.0249, 1.252 ) }
    apic_0 { pt3dadd( 499.928, 398.134, 26.0148, 1.1282 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 14/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 519.23, 415.329, 24.1695, 1.0506 ) }
    dend_26 { pt3dadd( 520.069, 416.106, 24.1524, 1.0028 ) }
    dend_26 { pt3dadd( 520.911, 416.88, 24.139, 0.9894 ) }
    dend_26 { pt3dadd( 521.992, 417.244, 24.277, 0.8512 ) }
    dend_26 { pt3dadd( 523.078, 417.6, 24.4178, 0.7106 ) }
    dend_26 { pt3dadd( 524.22, 417.543, 24.4502, 0.7134 ) }
    dend_26 { pt3dadd( 525.363, 417.483, 24.482, 0.717 ) }
    // Section: dend_23, id: dend_23, parent: soma_0 (entry count 21/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 510.455, 411.045, 20.9783, 1.1688 ) }
    dend_23 { pt3dadd( 509.361, 411.319, 20.6518, 0.4512 ) }
    dend_23 { pt3dadd( 508.27, 411.661, 20.5824, 0.3892 ) }
    dend_23 { pt3dadd( 507.197, 412.055, 20.5126, 0.4244 ) }
    dend_23 { pt3dadd( 506.139, 412.489, 20.4424, 0.5362 ) }
    dend_23 { pt3dadd( 505.13, 413.017, 20.3461, 0.5956 ) }
    dend_23 { pt3dadd( 504.157, 413.619, 20.2297, 0.6146 ) }
    dend_23 { pt3dadd( 503.193, 414.231, 20.0777, 0.6028 ) }
    dend_23 { pt3dadd( 502.234, 414.851, 19.8986, 0.5674 ) }
    dend_23 { pt3dadd( 501.277, 415.471, 19.7022, 0.6662 ) }
    dend_23 { pt3dadd( 500.319, 416.091, 19.4926, 0.8672 ) }
    dend_23 { pt3dadd( 499.422, 416.791, 19.3, 0.9876 ) }
    dend_23 { pt3dadd( 498.571, 417.552, 19.1203, 1.0466 ) }
    dend_23 { pt3dadd( 497.56, 417.953, 18.9218, 0.9638 ) }
    dend_23 { pt3dadd( 496.427, 418.084, 18.7089, 0.7738 ) }
    dend_23 { pt3dadd( 495.289, 418.126, 18.4938, 0.6128 ) }
    dend_23 { pt3dadd( 494.148, 418.11, 18.2772, 0.4712 ) }
    dend_23 { pt3dadd( 493.008, 418.132, 18.0856, 0.4692 ) }
    dend_23 { pt3dadd( 491.867, 418.178, 17.9105, 0.5602 ) }
    dend_23 { pt3dadd( 490.731, 418.277, 17.7235, 0.5508 ) }
    dend_23 { pt3dadd( 489.598, 418.412, 17.5285, 0.4752 ) }
    dend_23 { pt3dadd( 488.535, 418.687, 16.8949, 0.5396 ) }
    dend_23 { pt3dadd( 487.519, 419.053, 15.9715, 0.6966 ) }
    dend_23 { pt3dadd( 486.647, 419.742, 15.3315, 0.885 ) }
    dend_23 { pt3dadd( 485.781, 420.444, 14.7035, 1.0746 ) }
    dend_23 { pt3dadd( 484.759, 420.954, 14.7507, 0.8932 ) }
    dend_23 { pt3dadd( 483.733, 421.462, 14.8034, 0.7086 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 48/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 513.514, 416.07, 27.4445, 0.4132 ) }
    dend_16 { pt3dadd( 513.073, 417.113, 27.8416, 0.4074 ) }
    dend_16 { pt3dadd( 512.624, 418.154, 28.2313, 0.4796 ) }
    dend_16 { pt3dadd( 511.905, 419.0, 28.8932, 0.4914 ) }
    dend_16 { pt3dadd( 511.184, 419.847, 29.5551, 0.5032 ) }
    // Section: dend_15, id: dend_15, parent: soma_0 (entry count 53/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 514.063, 405.119, 20.4866, 0.8534 ) }
    dend_15 { pt3dadd( 513.417, 404.238, 19.6583, 0.6968 ) }
    dend_15 { pt3dadd( 512.592, 403.571, 19.0542, 0.6044 ) }
    dend_15 { pt3dadd( 511.514, 403.205, 18.7668, 0.6028 ) }
    dend_15 { pt3dadd( 510.409, 403.075, 18.405, 0.6228 ) }
    dend_15 { pt3dadd( 509.283, 403.154, 17.9772, 0.6618 ) }
    dend_15 { pt3dadd( 508.479, 402.639, 17.3711, 0.617 ) }
    dend_15 { pt3dadd( 507.969, 401.677, 16.671, 0.5264 ) }
    dend_15 { pt3dadd( 508.081, 400.543, 16.391, 0.6156 ) }
    dend_15 { pt3dadd( 508.14, 399.414, 16.1326, 0.6896 ) }
    dend_15 { pt3dadd( 507.856, 398.306, 16.0096, 0.6702 ) }
    dend_15 { pt3dadd( 507.666, 397.2, 15.8815, 0.6406 ) }
    dend_15 { pt3dadd( 507.959, 396.096, 15.727, 0.5586 ) }
    dend_15 { pt3dadd( 508.273, 395.0, 15.5494, 0.4906 ) }
    dend_15 { pt3dadd( 508.698, 393.944, 15.2578, 0.492 ) }
    dend_15 { pt3dadd( 509.112, 392.886, 14.9405, 0.5116 ) }
    dend_15 { pt3dadd( 509.476, 391.817, 14.5067, 0.6136 ) }
    dend_15 { pt3dadd( 509.724, 390.743, 14.0371, 0.6996 ) }
    dend_15 { pt3dadd( 509.463, 389.659, 13.4111, 0.7174 ) }
    dend_15 { pt3dadd( 509.26, 388.562, 12.8573, 0.7078 ) }
    dend_15 { pt3dadd( 509.206, 387.428, 12.4966, 0.625 ) }
    dend_15 { pt3dadd( 509.347, 386.352, 12.095, 0.542 ) }
    dend_15 { pt3dadd( 509.968, 385.413, 11.5937, 0.4592 ) }
    dend_15 { pt3dadd( 510.397, 384.413, 11.0465, 0.4066 ) }
    dend_15 { pt3dadd( 510.477, 383.301, 10.4159, 0.409 ) }
    dend_15 { pt3dadd( 510.261, 382.224, 10.0988, 0.418 ) }
    dend_15 { pt3dadd( 509.806, 381.174, 10.0351, 0.4322 ) }
    dend_15 { pt3dadd( 509.808, 380.091, 9.9561, 0.482 ) }
    dend_15 { pt3dadd( 510.099, 378.986, 9.8673, 0.5548 ) }
    dend_15 { pt3dadd( 510.175, 377.867, 9.4644, 0.531 ) }
    dend_15 { pt3dadd( 510.163, 376.743, 8.9362, 0.4688 ) }
    dend_15 { pt3dadd( 509.84, 375.67, 8.5957, 0.4834 ) }
    dend_15 { pt3dadd( 509.419, 374.613, 8.3133, 0.522 ) }
    dend_15 { pt3dadd( 508.368, 374.418, 7.8088, 0.602 ) }
    dend_15 { pt3dadd( 507.25, 374.317, 7.28, 0.6864 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 88/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 516.0, 404.049, 24.3235, 1.2434 ) }
    dend_0 { pt3dadd( 516.287, 402.943, 24.2948, 1.2262 ) }
    dend_0 { pt3dadd( 516.577, 401.836, 24.2663, 1.2146 ) }
    dend_0 { pt3dadd( 517.202, 400.879, 24.2197, 1.1722 ) }
    dend_0 { pt3dadd( 517.829, 399.922, 24.1732, 1.13 ) }
    dend_0 { pt3dadd( 518.542, 399.027, 24.1462, 1.0672 ) }
    dend_0 { pt3dadd( 519.254, 398.131, 24.1192, 1.0044 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 527.169, 438.099, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 533.01, 451.915, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 538.852, 465.731, 25.2, 1.0 ) }
    // Section: apic_18, id: apic_18, parent: apic_0 (entry count 98/100)
    apic_18 { pt3dclear() }
    apic_18 { pt3dadd( 499.928, 398.134, 26.0148, 1.1282 ) }
    apic_18 { pt3dadd( 498.595, 398.121, 27.5781, 0.9592 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    apic_18 { pt3dadd( 497.472, 398.254, 27.9688, 1.0554 ) }
    apic_18 { pt3dadd( 496.346, 398.39, 28.3352, 1.1584 ) }
    apic_18 { pt3dadd( 495.528, 399.15, 28.9092, 1.1714 ) }
    apic_18 { pt3dadd( 494.715, 399.918, 29.4868, 1.1826 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 4/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 499.928, 398.134, 26.0148, 1.1282 ) }
    apic_1 { pt3dadd( 498.631, 397.397, 25.7818, 1.0526 ) }
    apic_1 { pt3dadd( 497.625, 396.856, 25.5874, 1.011 ) }
    apic_1 { pt3dadd( 496.633, 396.289, 25.685, 0.9652 ) }
    apic_1 { pt3dadd( 495.641, 395.72, 25.7859, 0.9192 ) }
    apic_1 { pt3dadd( 494.717, 395.057, 26.0891, 1.0248 ) }
    apic_1 { pt3dadd( 493.793, 394.395, 26.393, 1.1308 ) }
    apic_1 { pt3dadd( 493.071, 393.509, 26.4522, 1.0704 ) }
    apic_1 { pt3dadd( 492.349, 392.621, 26.511, 1.01 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 13/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 525.363, 417.483, 24.482, 0.717 ) }
    dend_30 { pt3dadd( 525.18, 418.564, 25.6904, 0.8664 ) }
    dend_30 { pt3dadd( 525.309, 419.591, 26.865, 1.0102 ) }
    dend_30 { pt3dadd( 525.272, 420.687, 27.6578, 0.8628 ) }
    dend_30 { pt3dadd( 525.18, 421.776, 28.4208, 0.7478 ) }
    dend_30 { pt3dadd( 524.777, 422.818, 29.0184, 0.813 ) }
    dend_30 { pt3dadd( 524.398, 423.861, 29.6769, 0.8438 ) }
    dend_30 { pt3dadd( 524.116, 424.905, 30.5981, 0.7266 ) }
    dend_30 { pt3dadd( 523.986, 425.982, 31.395, 0.6986 ) }
    dend_30 { pt3dadd( 523.997, 427.091, 32.0793, 0.7516 ) }
    dend_30 { pt3dadd( 523.62, 428.064, 32.739, 0.7604 ) }
    dend_30 { pt3dadd( 522.903, 428.917, 33.3771, 0.7306 ) }
    dend_30 { pt3dadd( 522.141, 429.74, 33.9128, 0.7414 ) }
    dend_30 { pt3dadd( 521.36, 430.55, 34.4042, 0.7698 ) }
    dend_30 { pt3dadd( 520.502, 431.273, 34.9325, 0.7082 ) }
    dend_30 { pt3dadd( 519.615, 431.961, 35.4752, 0.612 ) }
    dend_30 { pt3dadd( 519.359, 432.942, 36.4571, 0.4824 ) }
    dend_30 { pt3dadd( 519.247, 433.991, 37.5404, 0.345 ) }
    dend_30 { pt3dadd( 518.638, 434.917, 38.2231, 0.4242 ) }
    dend_30 { pt3dadd( 518.021, 435.84, 38.8987, 0.507 ) }
    dend_30 { pt3dadd( 517.308, 436.704, 39.4565, 0.5132 ) }
    dend_30 { pt3dadd( 516.593, 437.569, 40.0134, 0.5184 ) }
    dend_30 { pt3dadd( 515.86, 438.414, 40.5944, 0.6642 ) }
    dend_30 { pt3dadd( 515.127, 439.259, 41.176, 0.811 ) }
    dend_30 { pt3dadd( 514.427, 440.131, 41.769, 0.7358 ) }
    dend_30 { pt3dadd( 513.728, 441.003, 42.3623, 0.6586 ) }
    dend_30 { pt3dadd( 513.296, 442.026, 43.0335, 0.4844 ) }
    dend_30 { pt3dadd( 512.864, 443.049, 43.7055, 0.3094 ) }
    dend_30 { pt3dadd( 512.499, 444.086, 44.4886, 0.2922 ) }
    dend_30 { pt3dadd( 512.135, 445.121, 45.2721, 0.2752 ) }
    dend_30 { pt3dadd( 511.773, 446.157, 46.0729, 0.2762 ) }
    dend_30 { pt3dadd( 511.41, 447.191, 46.8734, 0.2774 ) }
    dend_30 { pt3dadd( 511.153, 448.284, 47.4006, 0.2806 ) }
    dend_30 { pt3dadd( 510.896, 449.378, 47.9273, 0.284 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 47/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 525.363, 417.483, 24.482, 0.717 ) }
    dend_27 { pt3dadd( 526.631, 416.977, 24.5873, 0.7948 ) }
    dend_27 { pt3dadd( 527.701, 416.577, 24.4914, 0.7898 ) }
    dend_27 { pt3dadd( 528.775, 416.19, 24.3078, 0.7514 ) }
    dend_27 { pt3dadd( 529.904, 416.067, 24.1447, 0.7726 ) }
    dend_27 { pt3dadd( 531.045, 415.993, 23.9854, 0.8048 ) }
    dend_27 { pt3dadd( 532.085, 415.541, 24.0607, 0.8036 ) }
    dend_27 { pt3dadd( 533.111, 415.038, 24.1679, 0.798 ) }
    dend_27 { pt3dadd( 534.036, 414.369, 24.3364, 0.836 ) }
    dend_27 { pt3dadd( 534.953, 413.689, 24.5099, 0.8774 ) }
    dend_27 { pt3dadd( 535.832, 412.958, 24.4688, 0.9548 ) }
    dend_27 { pt3dadd( 536.709, 412.224, 24.4149, 1.0344 ) }
    dend_27 { pt3dadd( 537.667, 411.61, 24.1435, 0.8998 ) }
    dend_27 { pt3dadd( 538.63, 411.001, 23.8608, 0.754 ) }
    dend_27 { pt3dadd( 539.359, 410.13, 23.6098, 0.7548 ) }
    dend_27 { pt3dadd( 540.08, 409.247, 23.3601, 0.7612 ) }
    dend_27 { pt3dadd( 540.78, 408.344, 23.2515, 0.7982 ) }
    dend_27 { pt3dadd( 541.48, 407.44, 23.1481, 0.8364 ) }
    dend_27 { pt3dadd( 542.205, 406.555, 23.1792, 0.7926 ) }
    dend_27 { pt3dadd( 542.93, 405.67, 23.2151, 0.746 ) }
    dend_27 { pt3dadd( 543.81, 404.942, 23.3395, 0.7918 ) }
    dend_27 { pt3dadd( 544.694, 404.217, 23.4669, 0.8406 ) }
    dend_27 { pt3dadd( 545.245, 403.222, 23.6981, 0.7698 ) }
    dend_27 { pt3dadd( 545.785, 402.219, 23.9326, 0.695 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 71/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 483.733, 421.462, 14.8034, 0.7086 ) }
    dend_25 { pt3dadd( 482.241, 421.098, 15.9459, 0.472 ) }
    dend_25 { pt3dadd( 481.169, 420.934, 16.8036, 0.418 ) }
    dend_25 { pt3dadd( 480.088, 420.858, 17.7016, 0.47 ) }
    dend_25 { pt3dadd( 479.0, 421.0, 18.3327, 0.5558 ) }
    dend_25 { pt3dadd( 477.906, 421.28, 18.7942, 0.663 ) }
    dend_25 { pt3dadd( 476.788, 421.36, 19.1858, 0.8134 ) }
    dend_25 { pt3dadd( 475.654, 421.316, 19.5338, 0.9908 ) }
    dend_25 { pt3dadd( 474.56, 421.04, 19.7481, 0.9736 ) }
    dend_25 { pt3dadd( 473.484, 420.653, 19.897, 0.8614 ) }
    dend_25 { pt3dadd( 472.431, 420.215, 19.8285, 0.8012 ) }
    dend_25 { pt3dadd( 471.385, 419.754, 19.6641, 0.764 ) }
    dend_25 { pt3dadd( 470.273, 419.676, 19.3511, 0.6944 ) }
    dend_25 { pt3dadd( 469.139, 419.714, 18.9953, 0.6148 ) }
    dend_25 { pt3dadd( 468.034, 419.419, 18.9952, 0.5368 ) }
    dend_25 { pt3dadd( 466.931, 419.119, 18.9904, 0.461 ) }
    dend_25 { pt3dadd( 465.948, 418.546, 18.6963, 0.524 ) }
    dend_25 { pt3dadd( 464.967, 417.968, 18.4139, 0.5832 ) }
    dend_25 { pt3dadd( 464.041, 417.298, 18.3698, 0.5662 ) }
    dend_25 { pt3dadd( 463.128, 416.612, 18.3586, 0.557 ) }
    dend_25 { pt3dadd( 462.31, 415.816, 18.5835, 0.6048 ) }
    dend_25 { pt3dadd( 461.453, 415.098, 18.7982, 0.6318 ) }
    dend_25 { pt3dadd( 460.33, 414.889, 18.9427, 0.517 ) }
    dend_25 { pt3dadd( 459.215, 414.651, 19.1019, 0.4218 ) }
    dend_25 { pt3dadd( 458.148, 414.252, 19.3416, 0.434 ) }
    dend_25 { pt3dadd( 457.138, 413.764, 19.579, 0.4464 ) }
    dend_25 { pt3dadd( 456.36, 412.931, 19.8075, 0.46 ) }
    dend_25 { pt3dadd( 455.552, 412.132, 20.0416, 0.4642 ) }
    dend_25 { pt3dadd( 454.635, 411.457, 20.2962, 0.4338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( 453.659, 410.913, 20.5517, 0.4256 ) }
    dend_25 { pt3dadd( 452.54, 410.704, 20.809, 0.474 ) }
    dend_25 { pt3dadd( 451.419, 410.666, 20.9749, 0.5008 ) }
    dend_25 { pt3dadd( 450.298, 410.894, 21.0009, 0.495 ) }
    dend_25 { pt3dadd( 449.228, 410.78, 21.0661, 0.512 ) }
    dend_25 { pt3dadd( 448.221, 410.237, 21.1806, 0.558 ) }
    dend_25 { pt3dadd( 447.16, 409.852, 21.2839, 0.5774 ) }
    dend_25 { pt3dadd( 446.035, 409.651, 21.3739, 0.5656 ) }
    dend_25 { pt3dadd( 444.903, 409.612, 21.4466, 0.5218 ) }
    dend_25 { pt3dadd( 443.766, 409.729, 21.5025, 0.4462 ) }
    dend_25 { pt3dadd( 442.632, 409.879, 21.5731, 0.413 ) }
    dend_25 { pt3dadd( 441.503, 410.058, 21.6568, 0.4174 ) }
    dend_25 { pt3dadd( 440.423, 410.392, 21.8746, 0.4086 ) }
    dend_25 { pt3dadd( 439.382, 410.848, 22.199, 0.3894 ) }
    dend_25 { pt3dadd( 438.493, 411.555, 22.2795, 0.3928 ) }
    dend_25 { pt3dadd( 437.629, 412.305, 22.3178, 0.4 ) }
    dend_25 { pt3dadd( 436.878, 413.166, 22.3719, 0.4224 ) }
    dend_25 { pt3dadd( 436.144, 414.042, 22.4283, 0.447 ) }
    dend_25 { pt3dadd( 435.759, 415.106, 22.1498, 0.3438 ) }
    dend_25 { pt3dadd( 435.406, 416.187, 21.84, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 20/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 483.733, 421.462, 14.8034, 0.7086 ) }
    dend_24 { pt3dadd( 482.619, 422.367, 12.6742, 0.8362 ) }
    dend_24 { pt3dadd( 481.553, 422.734, 12.2022, 0.7356 ) }
    dend_24 { pt3dadd( 480.477, 423.071, 11.7785, 0.6476 ) }
    dend_24 { pt3dadd( 479.35, 423.251, 11.6036, 0.6254 ) }
    dend_24 { pt3dadd( 478.289, 423.55, 11.3822, 0.602 ) }
    dend_24 { pt3dadd( 477.554, 424.407, 10.9393, 0.5718 ) }
    dend_24 { pt3dadd( 476.894, 425.281, 10.263, 0.5644 ) }
    dend_24 { pt3dadd( 476.389, 426.193, 9.1063, 0.6042 ) }
    dend_24 { pt3dadd( 475.751, 427.037, 8.1107, 0.6612 ) }
    dend_24 { pt3dadd( 474.995, 427.822, 7.2596, 0.7332 ) }
    dend_24 { pt3dadd( 474.278, 428.677, 6.7779, 0.7884 ) }
    dend_24 { pt3dadd( 473.597, 429.594, 6.6046, 0.8294 ) }
    dend_24 { pt3dadd( 472.791, 430.396, 6.5642, 0.7578 ) }
    dend_24 { pt3dadd( 471.924, 431.143, 6.5888, 0.6308 ) }
    dend_24 { pt3dadd( 471.112, 431.931, 6.9247, 0.602 ) }
    dend_24 { pt3dadd( 470.318, 432.734, 7.3795, 0.6106 ) }
    dend_24 { pt3dadd( 469.699, 433.665, 7.8863, 0.5656 ) }
    dend_24 { pt3dadd( 469.142, 434.64, 8.4118, 0.5014 ) }
    dend_24 { pt3dadd( 468.112, 434.926, 8.7102, 0.3722 ) }
    dend_24 { pt3dadd( 466.981, 435.063, 8.96, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_16 (entry count 41/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 511.184, 419.847, 29.5551, 0.5032 ) }
    dend_22 { pt3dadd( 510.843, 419.944, 30.2434, 0.515 ) }
    dend_22 { pt3dadd( 509.98, 420.021, 31.8872, 0.5358 ) }
    dend_22 { pt3dadd( 509.109, 419.503, 33.1864, 0.5248 ) }
    dend_22 { pt3dadd( 508.375, 418.823, 34.3336, 0.537 ) }
    dend_22 { pt3dadd( 507.892, 417.848, 35.2008, 0.5926 ) }
    dend_22 { pt3dadd( 507.489, 416.84, 36.0413, 0.6108 ) }
    dend_22 { pt3dadd( 507.229, 415.775, 36.8337, 0.56 ) }
    dend_22 { pt3dadd( 506.972, 414.719, 37.7023, 0.5082 ) }
    dend_22 { pt3dadd( 506.721, 413.68, 38.7005, 0.4538 ) }
    dend_22 { pt3dadd( 506.356, 412.68, 39.6864, 0.4344 ) }
    dend_22 { pt3dadd( 505.895, 411.712, 40.6624, 0.4446 ) }
    dend_22 { pt3dadd( 504.808, 411.642, 41.3227, 0.4142 ) }
    dend_22 { pt3dadd( 503.696, 411.609, 41.9706, 0.382 ) }
    dend_22 { pt3dadd( 502.701, 411.27, 43.0623, 0.4864 ) }
    dend_22 { pt3dadd( 501.737, 410.917, 44.2571, 0.603 ) }
    dend_22 { pt3dadd( 500.985, 410.526, 46.1401, 0.7784 ) }
    dend_22 { pt3dadd( 500.281, 410.715, 47.9074, 0.7158 ) }
    dend_22 { pt3dadd( 499.613, 411.34, 49.588, 0.4746 ) }
    dend_22 { pt3dadd( 498.821, 411.749, 51.3024, 0.3942 ) }
    dend_22 { pt3dadd( 497.981, 412.071, 53.03, 0.377 ) }
    dend_22 { pt3dadd( 497.063, 412.524, 54.2388, 0.3628 ) }
    dend_22 { pt3dadd( 496.125, 413.015, 55.295, 0.3494 ) }
    dend_22 { pt3dadd( 495.219, 413.655, 55.9199, 0.3924 ) }
    dend_22 { pt3dadd( 494.321, 414.331, 56.4438, 0.449 ) }
    dend_22 { pt3dadd( 493.39, 414.973, 56.8546, 0.5072 ) }
    dend_22 { pt3dadd( 492.428, 415.533, 56.7554, 0.4992 ) }
    dend_22 { pt3dadd( 491.431, 415.979, 55.9224, 0.3918 ) }
    dend_22 { pt3dadd( 490.501, 416.338, 54.6106, 0.3748 ) }
    dend_22 { pt3dadd( 489.606, 416.652, 53.046, 0.4056 ) }
    dend_22 { pt3dadd( 488.862, 417.374, 52.0694, 0.4168 ) }
    dend_22 { pt3dadd( 488.165, 418.22, 51.2744, 0.422 ) }
    dend_22 { pt3dadd( 487.169, 418.34, 50.4252, 0.3384 ) }
    dend_22 { pt3dadd( 486.086, 418.246, 49.56, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 75/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 511.184, 419.847, 29.5551, 0.5032 ) }
    dend_17 { pt3dadd( 511.416, 420.261, 29.8911, 0.4676 ) }
    dend_17 { pt3dadd( 511.953, 421.22, 30.669, 0.3856 ) }
    dend_17 { pt3dadd( 512.391, 422.23, 31.4034, 0.3494 ) }
    dend_17 { pt3dadd( 512.779, 423.266, 32.1149, 0.337 ) }
    dend_17 { pt3dadd( 512.96, 424.367, 32.6074, 0.3904 ) }
    dend_17 { pt3dadd( 513.05, 425.496, 33.0028, 0.4732 ) }
    dend_17 { pt3dadd( 513.008, 426.627, 33.3248, 0.5044 ) }
    dend_17 { pt3dadd( 512.911, 427.761, 33.6151, 0.5132 ) }
    dend_17 { pt3dadd( 512.806, 428.894, 33.9144, 0.609 ) }
    dend_17 { pt3dadd( 512.698, 430.026, 34.2177, 0.742 ) }
    dend_17 { pt3dadd( 512.741, 431.146, 34.7068, 0.8126 ) }
    dend_17 { pt3dadd( 512.846, 432.262, 35.2761, 0.8564 ) }
    dend_17 { pt3dadd( 512.609, 433.344, 35.7445, 0.8536 ) }
    dend_17 { pt3dadd( 512.248, 434.415, 36.1771, 0.8342 ) }
    dend_17 { pt3dadd( 511.655, 435.373, 36.4935, 0.748 ) }
    dend_17 { pt3dadd( 510.983, 436.292, 36.7693, 0.638 ) }
    dend_17 { pt3dadd( 510.591, 437.35, 37.0493, 0.7042 ) }
    dend_17 { pt3dadd( 510.264, 438.44, 37.3304, 0.8108 ) }
    dend_17 { pt3dadd( 509.806, 439.476, 37.6925, 0.8688 ) }
    dend_17 { pt3dadd( 509.321, 440.5, 38.071, 0.917 ) }
    dend_17 { pt3dadd( 508.874, 441.543, 38.4283, 0.8932 ) }
    dend_17 { pt3dadd( 508.432, 442.588, 38.7822, 0.8572 ) }
    dend_17 { pt3dadd( 507.884, 443.585, 39.0751, 0.7888 ) }
    dend_17 { pt3dadd( 507.323, 444.573, 39.3599, 0.716 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_17 { pt3dadd( 506.632, 445.48, 39.5979, 0.584 ) }
    dend_17 { pt3dadd( 505.936, 446.383, 39.8342, 0.4498 ) }
    dend_17 { pt3dadd( 505.624, 447.478, 40.087, 0.5698 ) }
    dend_17 { pt3dadd( 505.317, 448.575, 40.3399, 0.6938 ) }
    // Section: dend_6, id: dend_6, parent: dend_0 (entry count 4/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 519.254, 398.131, 24.1192, 1.0044 ) }
    dend_6 { pt3dadd( 519.292, 397.396, 23.6234, 0.8412 ) }
    dend_6 { pt3dadd( 519.352, 396.294, 22.881, 0.5968 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 7/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 519.254, 398.131, 24.1192, 1.0044 ) }
    dend_1 { pt3dadd( 520.273, 397.23, 24.1358, 0.9322 ) }
    dend_1 { pt3dadd( 521.198, 396.557, 24.1534, 0.9112 ) }
    dend_1 { pt3dadd( 522.323, 396.405, 24.1885, 0.8594 ) }
    dend_1 { pt3dadd( 523.461, 396.286, 24.2247, 0.8056 ) }
    dend_1 { pt3dadd( 524.604, 396.253, 24.2899, 0.803 ) }
    dend_1 { pt3dadd( 525.747, 396.223, 24.3566, 0.803 ) }
    dend_1 { pt3dadd( 526.875, 396.045, 24.5018, 0.8636 ) }
    dend_1 { pt3dadd( 528.002, 395.857, 24.6512, 0.9274 ) }
    dend_1 { pt3dadd( 529.142, 395.837, 24.8363, 0.9828 ) }
    dend_1 { pt3dadd( 530.284, 395.824, 25.023, 1.0376 ) }
    dend_1 { pt3dadd( 531.426, 395.816, 25.1811, 0.967 ) }
    dend_1 { pt3dadd( 532.569, 395.807, 25.3379, 0.8906 ) }
    dend_1 { pt3dadd( 533.675, 395.529, 25.2027, 0.8688 ) }
    dend_1 { pt3dadd( 534.78, 395.238, 25.0548, 0.8492 ) }
    dend_1 { pt3dadd( 535.679, 394.538, 24.8406, 0.7598 ) }
    dend_1 { pt3dadd( 536.577, 393.835, 24.6262, 0.67 ) }
    dend_1 { pt3dadd( 537.495, 393.154, 24.4757, 0.6946 ) }
    dend_1 { pt3dadd( 538.412, 392.473, 24.3252, 0.7194 ) }
    // Section: apic_26, id: apic_26, parent: apic_18 (entry count 26/100)
    apic_26 { pt3dclear() }
    apic_26 { pt3dadd( 494.715, 399.918, 29.4868, 1.1826 ) }
    apic_26 { pt3dadd( 493.834, 399.471, 30.8624, 0.5018 ) }
    apic_26 { pt3dadd( 492.896, 398.985, 31.9038, 0.4284 ) }
    apic_26 { pt3dadd( 491.934, 398.484, 32.788, 0.635 ) }
    apic_26 { pt3dadd( 490.967, 397.922, 33.3729, 0.6374 ) }
    apic_26 { pt3dadd( 490.0, 397.348, 33.8892, 0.593 ) }
    apic_26 { pt3dadd( 489.32, 396.483, 34.5134, 0.6422 ) }
    apic_26 { pt3dadd( 488.692, 395.563, 35.1574, 0.7084 ) }
    apic_26 { pt3dadd( 487.718, 395.047, 35.7218, 0.7132 ) }
    apic_26 { pt3dadd( 486.694, 394.59, 36.2746, 0.7088 ) }
    apic_26 { pt3dadd( 485.588, 394.569, 36.955, 0.5646 ) }
    apic_26 { pt3dadd( 484.479, 394.566, 37.641, 0.4146 ) }
    apic_26 { pt3dadd( 483.472, 395.003, 38.416, 0.3592 ) }
    apic_26 { pt3dadd( 482.474, 395.457, 39.1938, 0.3092 ) }
    apic_26 { pt3dadd( 481.725, 396.253, 40.0168, 0.3828 ) }
    apic_26 { pt3dadd( 480.918, 396.97, 40.7898, 0.45 ) }
    apic_26 { pt3dadd( 479.859, 397.34, 41.3426, 0.4898 ) }
    apic_26 { pt3dadd( 478.787, 397.653, 41.8933, 0.4954 ) }
    apic_26 { pt3dadd( 477.673, 397.784, 42.4368, 0.387 ) }
    apic_26 { pt3dadd( 476.553, 397.887, 42.9262, 0.306 ) }
    apic_26 { pt3dadd( 475.415, 397.899, 43.2426, 0.3122 ) }
    apic_26 { pt3dadd( 474.297, 398.009, 43.4882, 0.3356 ) }
    apic_26 { pt3dadd( 473.229, 398.423, 43.5075, 0.4132 ) }
    apic_26 { pt3dadd( 472.154, 398.808, 43.4874, 0.4736 ) }
    apic_26 { pt3dadd( 471.055, 399.12, 43.3686, 0.4916 ) }
    apic_26 { pt3dadd( 469.995, 399.517, 43.4426, 0.5266 ) }
    apic_26 { pt3dadd( 469.009, 400.07, 43.8634, 0.5924 ) }
    apic_26 { pt3dadd( 467.993, 400.569, 44.2534, 0.633 ) }
    apic_26 { pt3dadd( 466.949, 401.011, 44.6127, 0.6482 ) }
    apic_26 { pt3dadd( 465.868, 401.327, 44.987, 0.605 ) }
    apic_26 { pt3dadd( 464.751, 401.519, 45.376, 0.5054 ) }
    apic_26 { pt3dadd( 463.63, 401.65, 45.8072, 0.4468 ) }
    apic_26 { pt3dadd( 462.504, 401.736, 46.2708, 0.4196 ) }
    apic_26 { pt3dadd( 461.426, 401.626, 47.0165, 0.4408 ) }
    apic_26 { pt3dadd( 460.38, 401.372, 47.9693, 0.4976 ) }
    apic_26 { pt3dadd( 459.413, 400.914, 48.8914, 0.4894 ) }
    apic_26 { pt3dadd( 458.483, 400.36, 49.7991, 0.4512 ) }
    apic_26 { pt3dadd( 457.401, 400.218, 50.4311, 0.4124 ) }
    apic_26 { pt3dadd( 456.281, 400.177, 50.9953, 0.3734 ) }
    apic_26 { pt3dadd( 455.16, 400.331, 51.3458, 0.4412 ) }
    apic_26 { pt3dadd( 454.039, 400.519, 51.6606, 0.5266 ) }
    apic_26 { pt3dadd( 452.934, 400.707, 52.213, 0.4602 ) }
    apic_26 { pt3dadd( 451.831, 400.893, 52.7912, 0.3774 ) }
    apic_26 { pt3dadd( 450.737, 400.847, 53.601, 0.3262 ) }
    apic_26 { pt3dadd( 449.645, 400.793, 54.4194, 0.2764 ) }
    apic_26 { pt3dadd( 448.562, 400.758, 55.321, 0.2746 ) }
    apic_26 { pt3dadd( 447.48, 400.723, 56.2257, 0.2746 ) }
    apic_26 { pt3dadd( 446.379, 400.783, 56.9663, 0.2746 ) }
    apic_26 { pt3dadd( 445.277, 400.847, 57.7007, 0.2746 ) }
    apic_26 { pt3dadd( 444.163, 400.913, 58.3215, 0.2746 ) }
    apic_26 { pt3dadd( 443.049, 400.978, 58.938, 0.2746 ) }
    apic_26 { pt3dadd( 441.931, 401.043, 59.5, 0.2744 ) }
    apic_26 { pt3dadd( 440.811, 401.108, 60.06, 0.2744 ) }
    apic_26 { pt3dadd( 439.691, 401.173, 60.6057, 0.2742 ) }
    apic_26 { pt3dadd( 438.571, 401.239, 61.1512, 0.2742 ) }
    apic_26 { pt3dadd( 437.45, 401.304, 61.6778, 0.2734 ) }
    apic_26 { pt3dadd( 436.327, 401.369, 62.204, 0.2728 ) }
    apic_26 { pt3dadd( 435.215, 401.203, 62.7024, 0.2706 ) }
    apic_26 { pt3dadd( 434.102, 401.029, 63.1996, 0.2684 ) }
    apic_26 { pt3dadd( 433.033, 400.659, 63.6056, 0.2612 ) }
    apic_26 { pt3dadd( 431.964, 400.287, 64.0114, 0.2538 ) }
    apic_26 { pt3dadd( 430.9, 399.917, 64.5042, 0.2414 ) }
    apic_26 { pt3dadd( 429.836, 399.548, 64.9975, 0.2288 ) }
    // Section: apic_19, id: apic_19, parent: apic_18 (entry count 89/100)
    apic_19 { pt3dclear() }
    apic_19 { pt3dadd( 494.715, 399.918, 29.4868, 1.1826 ) }
    apic_19 { pt3dadd( 493.929, 400.462, 30.189, 0.9544 ) }
    // Section: apic_3, id: apic_3, parent: apic_1 (entry count 91/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 492.349, 392.621, 26.511, 1.01 ) }
    apic_3 { pt3dadd( 490.685, 392.162, 26.4226, 1.0344 ) }
    apic_3 { pt3dadd( 489.607, 391.778, 26.3641, 1.1162 ) }
    apic_3 { pt3dadd( 488.495, 391.511, 26.347, 1.1476 ) }
    apic_3 { pt3dadd( 487.379, 391.255, 26.3329, 1.1752 ) }
    apic_3 { pt3dadd( 486.281, 390.935, 26.3374, 1.198 ) }
    apic_3 { pt3dadd( 485.184, 390.611, 26.3431, 1.2206 ) }
    apic_3 { pt3dadd( 484.121, 390.189, 26.354, 1.1206 ) }
    apic_3 { pt3dadd( 483.06, 389.762, 26.3651, 1.0144 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_3 { pt3dadd( 481.999, 389.334, 26.3865, 0.8726 ) }
    apic_3 { pt3dadd( 480.939, 388.905, 26.4084, 0.729 ) }
    apic_3 { pt3dadd( 479.82, 388.669, 26.4511, 0.7876 ) }
    apic_3 { pt3dadd( 478.699, 388.441, 26.4946, 0.8538 ) }
    apic_3 { pt3dadd( 477.654, 387.978, 26.5715, 0.8036 ) }
    apic_3 { pt3dadd( 476.61, 387.511, 26.649, 0.7512 ) }
    apic_3 { pt3dadd( 475.571, 387.039, 26.8372, 0.843 ) }
    apic_3 { pt3dadd( 474.532, 386.567, 27.0259, 0.9352 ) }
    apic_3 { pt3dadd( 473.502, 386.071, 27.1544, 0.9076 ) }
    apic_3 { pt3dadd( 472.472, 385.576, 27.2829, 0.8798 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 10/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 492.349, 392.621, 26.511, 1.01 ) }
    apic_2 { pt3dadd( 491.986, 391.441, 26.2277, 0.6918 ) }
    apic_2 { pt3dadd( 491.723, 390.337, 25.9872, 0.4784 ) }
    apic_2 { pt3dadd( 491.612, 389.201, 25.7901, 0.4316 ) }
    apic_2 { pt3dadd( 491.597, 388.069, 25.5548, 0.3926 ) }
    apic_2 { pt3dadd( 491.755, 386.943, 25.2515, 0.3674 ) }
    apic_2 { pt3dadd( 491.856, 385.814, 24.9289, 0.3706 ) }
    apic_2 { pt3dadd( 491.855, 384.679, 24.572, 0.424 ) }
    apic_2 { pt3dadd( 491.985, 383.566, 24.2086, 0.4758 ) }
    apic_2 { pt3dadd( 492.344, 382.491, 23.8341, 0.525 ) }
    apic_2 { pt3dadd( 492.721, 381.424, 23.4115, 0.5796 ) }
    apic_2 { pt3dadd( 493.126, 380.374, 22.9076, 0.6434 ) }
    apic_2 { pt3dadd( 493.548, 379.329, 22.4402, 0.6478 ) }
    apic_2 { pt3dadd( 493.994, 378.289, 22.0308, 0.557 ) }
    apic_2 { pt3dadd( 494.622, 377.401, 21.5625, 0.4936 ) }
    apic_2 { pt3dadd( 495.536, 376.752, 21.0008, 0.474 ) }
    apic_2 { pt3dadd( 496.539, 376.29, 20.4733, 0.5572 ) }
    apic_2 { pt3dadd( 497.631, 376.012, 19.9801, 0.7432 ) }
    apic_2 { pt3dadd( 498.719, 375.74, 19.432, 0.7948 ) }
    apic_2 { pt3dadd( 499.804, 375.474, 18.8298, 0.7138 ) }
    apic_2 { pt3dadd( 500.868, 375.139, 18.2302, 0.6508 ) }
    apic_2 { pt3dadd( 501.912, 374.739, 17.6331, 0.6052 ) }
    apic_2 { pt3dadd( 502.859, 374.16, 17.1789, 0.5818 ) }
    apic_2 { pt3dadd( 503.715, 373.412, 16.861, 0.5796 ) }
    apic_2 { pt3dadd( 504.637, 372.761, 16.5058, 0.5874 ) }
    apic_2 { pt3dadd( 505.616, 372.191, 16.119, 0.6034 ) }
    apic_2 { pt3dadd( 506.656, 371.753, 15.7447, 0.646 ) }
    apic_2 { pt3dadd( 507.731, 371.393, 15.3777, 0.7044 ) }
    apic_2 { pt3dadd( 508.781, 370.97, 14.9884, 0.7186 ) }
    apic_2 { pt3dadd( 509.816, 370.51, 14.5866, 0.7076 ) }
    apic_2 { pt3dadd( 510.789, 369.944, 14.1366, 0.6892 ) }
    apic_2 { pt3dadd( 511.728, 369.321, 13.6603, 0.6664 ) }
    apic_2 { pt3dadd( 512.774, 368.958, 13.157, 0.6424 ) }
    apic_2 { pt3dadd( 513.875, 368.727, 12.64, 0.6176 ) }
    apic_2 { pt3dadd( 514.914, 368.289, 12.3395, 0.677 ) }
    apic_2 { pt3dadd( 515.93, 367.771, 12.121, 0.768 ) }
    apic_2 { pt3dadd( 516.673, 366.94, 11.9866, 0.8192 ) }
    apic_2 { pt3dadd( 517.315, 365.994, 11.8836, 0.8558 ) }
    apic_2 { pt3dadd( 518.183, 365.27, 11.7387, 0.8752 ) }
    apic_2 { pt3dadd( 519.113, 364.608, 11.5824, 0.8898 ) }
    apic_2 { pt3dadd( 519.941, 363.823, 11.5861, 0.8382 ) }
    apic_2 { pt3dadd( 520.744, 363.008, 11.6284, 0.7708 ) }
    apic_2 { pt3dadd( 521.367, 362.055, 11.5467, 0.7368 ) }
    apic_2 { pt3dadd( 521.947, 361.07, 11.4358, 0.711 ) }
    apic_2 { pt3dadd( 522.432, 360.037, 11.283, 0.6722 ) }
    apic_2 { pt3dadd( 522.895, 358.994, 11.121, 0.6306 ) }
    apic_2 { pt3dadd( 523.56, 358.07, 11.082, 0.5618 ) }
    apic_2 { pt3dadd( 524.268, 357.171, 11.0695, 0.4872 ) }
    apic_2 { pt3dadd( 525.042, 356.331, 10.9831, 0.4918 ) }
    apic_2 { pt3dadd( 525.829, 355.501, 10.8823, 0.5118 ) }
    apic_2 { pt3dadd( 526.458, 354.552, 10.7045, 0.5106 ) }
    apic_2 { pt3dadd( 527.061, 353.583, 10.5139, 0.506 ) }
    apic_2 { pt3dadd( 527.934, 352.865, 10.2744, 0.5804 ) }
    apic_2 { pt3dadd( 528.846, 352.18, 10.0281, 0.6658 ) }
    apic_2 { pt3dadd( 529.666, 351.388, 9.852, 0.7374 ) }
    apic_2 { pt3dadd( 530.474, 350.58, 9.6852, 0.8072 ) }
    apic_2 { pt3dadd( 531.156, 349.665, 9.6027, 0.7152 ) }
    apic_2 { pt3dadd( 531.824, 348.736, 9.5302, 0.6046 ) }
    apic_2 { pt3dadd( 532.827, 348.213, 9.5031, 0.5232 ) }
    apic_2 { pt3dadd( 533.866, 347.734, 9.4809, 0.4452 ) }
    apic_2 { pt3dadd( 534.988, 347.517, 9.461, 0.4204 ) }
    apic_2 { pt3dadd( 536.112, 347.303, 9.441, 0.3968 ) }
    apic_2 { pt3dadd( 537.155, 346.835, 9.4071, 0.4358 ) }
    apic_2 { pt3dadd( 538.196, 346.361, 9.3722, 0.474 ) }
    apic_2 { pt3dadd( 539.044, 345.594, 9.264, 0.4604 ) }
    apic_2 { pt3dadd( 539.899, 344.839, 9.1567, 0.4458 ) }
    apic_2 { pt3dadd( 540.919, 344.321, 9.0691, 0.4126 ) }
    apic_2 { pt3dadd( 541.939, 343.804, 8.9769, 0.378 ) }
    apic_2 { pt3dadd( 542.966, 343.305, 8.8484, 0.3318 ) }
    apic_2 { pt3dadd( 543.983, 342.785, 8.7364, 0.2914 ) }
    apic_2 { pt3dadd( 544.941, 342.16, 8.714, 0.282 ) }
    apic_2 { pt3dadd( 545.913, 341.56, 8.7136, 0.2746 ) }
    apic_2 { pt3dadd( 546.94, 341.056, 8.7983, 0.2746 ) }
    apic_2 { pt3dadd( 547.953, 340.529, 8.8998, 0.2746 ) }
    apic_2 { pt3dadd( 548.917, 339.918, 9.061, 0.2746 ) }
    apic_2 { pt3dadd( 549.799, 339.224, 9.218, 0.2746 ) }
    apic_2 { pt3dadd( 550.413, 338.259, 9.3615, 0.2746 ) }
    apic_2 { pt3dadd( 551.056, 337.315, 9.4801, 0.2746 ) }
    apic_2 { pt3dadd( 551.778, 336.429, 9.5319, 0.2746 ) }
    apic_2 { pt3dadd( 552.52, 335.56, 9.5452, 0.2746 ) }
    apic_2 { pt3dadd( 553.312, 334.734, 9.4648, 0.2746 ) }
    apic_2 { pt3dadd( 554.13, 333.937, 9.3778, 0.2746 ) }
    apic_2 { pt3dadd( 555.009, 333.207, 9.2756, 0.2746 ) }
    apic_2 { pt3dadd( 555.832, 332.421, 9.2085, 0.2746 ) }
    apic_2 { pt3dadd( 556.538, 331.522, 9.214, 0.2746 ) }
    apic_2 { pt3dadd( 557.312, 330.689, 9.1879, 0.2746 ) }
    apic_2 { pt3dadd( 558.205, 329.973, 9.1073, 0.2746 ) }
    apic_2 { pt3dadd( 558.93, 329.128, 8.9756, 0.2746 ) }
    apic_2 { pt3dadd( 559.423, 328.099, 8.7727, 0.2748 ) }
    apic_2 { pt3dadd( 560.128, 327.259, 8.5444, 0.275 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_2 { pt3dadd( 561.094, 326.657, 8.2847, 0.2754 ) }
    apic_2 { pt3dadd( 562.088, 326.101, 8.0545, 0.2764 ) }
    apic_2 { pt3dadd( 563.102, 325.578, 7.8445, 0.278 ) }
    apic_2 { pt3dadd( 563.842, 324.767, 7.6958, 0.2816 ) }
    apic_2 { pt3dadd( 564.412, 323.775, 7.5852, 0.2866 ) }
    apic_2 { pt3dadd( 564.976, 322.781, 7.5034, 0.3002 ) }
    apic_2 { pt3dadd( 565.537, 321.784, 7.4395, 0.3192 ) }
    apic_2 { pt3dadd( 566.099, 320.788, 7.3645, 0.3688 ) }
    apic_2 { pt3dadd( 566.661, 319.793, 7.2829, 0.437 ) }
    apic_2 { pt3dadd( 567.226, 318.798, 7.1912, 0.417 ) }
    apic_2 { pt3dadd( 567.794, 317.806, 7.0933, 0.3442 ) }
    apic_2 { pt3dadd( 568.488, 316.905, 6.9933, 0.3034 ) }
    apic_2 { pt3dadd( 569.253, 316.055, 6.8921, 0.2806 ) }
    apic_2 { pt3dadd( 569.936, 315.142, 6.7476, 0.2722 ) }
    apic_2 { pt3dadd( 570.583, 314.201, 6.5831, 0.2702 ) }
    apic_2 { pt3dadd( 571.327, 313.335, 6.5447, 0.2634 ) }
    apic_2 { pt3dadd( 572.09, 312.483, 6.5277, 0.2556 ) }
    apic_2 { pt3dadd( 572.335, 311.369, 6.3451, 0.2422 ) }
    apic_2 { pt3dadd( 572.572, 310.253, 6.16, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 19/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 510.896, 449.378, 47.9273, 0.284 ) }
    dend_32 { pt3dadd( 510.499, 450.035, 48.2303, 0.2926 ) }
    dend_32 { pt3dadd( 509.914, 451.0, 48.6766, 0.3056 ) }
    dend_32 { pt3dadd( 509.32, 451.97, 48.9944, 0.34 ) }
    dend_32 { pt3dadd( 508.727, 452.939, 49.3074, 0.3752 ) }
    dend_32 { pt3dadd( 508.132, 453.908, 49.6205, 0.4324 ) }
    dend_32 { pt3dadd( 507.537, 454.877, 49.9335, 0.4904 ) }
    dend_32 { pt3dadd( 507.294, 455.987, 50.22, 0.4012 ) }
    dend_32 { pt3dadd( 507.065, 457.101, 50.505, 0.3058 ) }
    dend_32 { pt3dadd( 506.845, 458.213, 50.8715, 0.289 ) }
    dend_32 { pt3dadd( 506.623, 459.326, 51.2408, 0.2752 ) }
    dend_32 { pt3dadd( 506.403, 460.434, 51.688, 0.2752 ) }
    dend_32 { pt3dadd( 506.182, 461.541, 52.138, 0.2756 ) }
    dend_32 { pt3dadd( 506.172, 462.664, 52.6557, 0.277 ) }
    dend_32 { pt3dadd( 506.17, 463.788, 53.1756, 0.2782 ) }
    dend_32 { pt3dadd( 506.172, 464.91, 53.7222, 0.2824 ) }
    dend_32 { pt3dadd( 506.175, 466.032, 54.2696, 0.2868 ) }
    dend_32 { pt3dadd( 506.179, 467.154, 54.8285, 0.3 ) }
    dend_32 { pt3dadd( 506.182, 468.275, 55.3876, 0.3136 ) }
    dend_32 { pt3dadd( 505.952, 469.37, 55.9574, 0.3236 ) }
    dend_32 { pt3dadd( 505.713, 470.464, 56.5278, 0.3336 ) }
    dend_32 { pt3dadd( 505.289, 471.501, 57.0884, 0.3044 ) }
    dend_32 { pt3dadd( 504.862, 472.537, 57.6484, 0.2748 ) }
    dend_32 { pt3dadd( 504.436, 473.575, 58.2072, 0.2746 ) }
    dend_32 { pt3dadd( 504.011, 474.611, 58.7661, 0.2746 ) }
    dend_32 { pt3dadd( 503.584, 475.648, 59.3222, 0.2746 ) }
    dend_32 { pt3dadd( 503.158, 476.685, 59.8786, 0.2746 ) }
    dend_32 { pt3dadd( 502.731, 477.722, 60.4293, 0.2744 ) }
    dend_32 { pt3dadd( 502.303, 478.759, 60.9798, 0.2744 ) }
    dend_32 { pt3dadd( 501.876, 479.798, 61.5205, 0.2742 ) }
    dend_32 { pt3dadd( 501.449, 480.836, 62.0609, 0.274 ) }
    dend_32 { pt3dadd( 501.124, 481.912, 62.5755, 0.2734 ) }
    dend_32 { pt3dadd( 500.799, 482.989, 63.0899, 0.2728 ) }
    dend_32 { pt3dadd( 500.529, 484.082, 63.5723, 0.2706 ) }
    dend_32 { pt3dadd( 500.259, 485.176, 64.0548, 0.2684 ) }
    dend_32 { pt3dadd( 499.987, 486.274, 64.4879, 0.261 ) }
    dend_32 { pt3dadd( 499.716, 487.371, 64.9211, 0.2538 ) }
    dend_32 { pt3dadd( 499.449, 488.459, 65.4833, 0.2414 ) }
    dend_32 { pt3dadd( 499.18, 489.547, 66.0458, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 58/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 510.896, 449.378, 47.9273, 0.284 ) }
    dend_31 { pt3dadd( 511.685, 449.448, 49.0974, 0.3706 ) }
    dend_31 { pt3dadd( 512.66, 449.535, 50.5445, 0.478 ) }
    dend_31 { pt3dadd( 513.634, 449.841, 51.7843, 0.4068 ) }
    dend_31 { pt3dadd( 514.609, 450.18, 52.9936, 0.309 ) }
    dend_31 { pt3dadd( 515.133, 450.791, 54.9606, 0.3798 ) }
    dend_31 { pt3dadd( 515.636, 451.413, 56.9601, 0.4576 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 65/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 545.785, 402.219, 23.9326, 0.695 ) }
    dend_29 { pt3dadd( 546.045, 402.59, 23.7226, 0.6634 ) }
    dend_29 { pt3dadd( 546.691, 403.509, 23.2012, 0.5848 ) }
    dend_29 { pt3dadd( 547.761, 403.465, 23.0159, 0.6166 ) }
    dend_29 { pt3dadd( 548.889, 403.285, 22.8778, 0.6638 ) }
    dend_29 { pt3dadd( 549.976, 402.939, 22.7032, 0.608 ) }
    dend_29 { pt3dadd( 551.061, 402.584, 22.5269, 0.5474 ) }
    dend_29 { pt3dadd( 552.036, 401.988, 22.4983, 0.5542 ) }
    dend_29 { pt3dadd( 553.007, 401.383, 22.4749, 0.5636 ) }
    dend_29 { pt3dadd( 553.84, 400.601, 22.3502, 0.6562 ) }
    dend_29 { pt3dadd( 554.672, 399.817, 22.2233, 0.7508 ) }
    dend_29 { pt3dadd( 555.626, 399.225, 21.6886, 0.7156 ) }
    dend_29 { pt3dadd( 556.581, 398.637, 21.1473, 0.6784 ) }
    dend_29 { pt3dadd( 557.694, 398.49, 20.6177, 0.7194 ) }
    dend_29 { pt3dadd( 558.808, 398.344, 20.0882, 0.761 ) }
    dend_29 { pt3dadd( 559.701, 397.659, 19.5856, 0.6122 ) }
    dend_29 { pt3dadd( 560.57, 396.954, 19.0843, 0.476 ) }
    dend_29 { pt3dadd( 561.068, 395.943, 18.6054, 0.554 ) }
    dend_29 { pt3dadd( 561.566, 394.932, 18.1322, 0.6308 ) }
    dend_29 { pt3dadd( 562.067, 393.916, 17.7358, 0.6912 ) }
    dend_29 { pt3dadd( 562.575, 392.902, 17.3594, 0.7372 ) }
    dend_29 { pt3dadd( 563.125, 391.905, 17.1216, 0.6828 ) }
    dend_29 { pt3dadd( 563.742, 390.957, 16.8463, 0.6798 ) }
    dend_29 { pt3dadd( 564.529, 390.142, 16.4733, 0.8094 ) }
    dend_29 { pt3dadd( 565.161, 389.24, 16.0611, 0.8742 ) }
    dend_29 { pt3dadd( 565.459, 388.155, 15.5645, 0.7986 ) }
    dend_29 { pt3dadd( 565.664, 387.056, 15.0573, 0.7252 ) }
    dend_29 { pt3dadd( 565.683, 385.933, 14.5281, 0.6568 ) }
    dend_29 { pt3dadd( 565.785, 384.815, 14.0671, 0.609 ) }
    dend_29 { pt3dadd( 566.029, 383.707, 13.7227, 0.5966 ) }
    dend_29 { pt3dadd( 566.289, 382.603, 13.3591, 0.5816 ) }
    dend_29 { pt3dadd( 566.573, 381.506, 12.9637, 0.562 ) }
    dend_29 { pt3dadd( 566.797, 380.401, 12.5338, 0.5566 ) }
    dend_29 { pt3dadd( 566.927, 379.282, 12.0505, 0.5726 ) }
    dend_29 { pt3dadd( 567.347, 378.331, 11.4701, 0.5862 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_29 { pt3dadd( 568.208, 377.639, 10.7416, 0.596 ) }
    dend_29 { pt3dadd( 568.757, 376.762, 10.1494, 0.5768 ) }
    dend_29 { pt3dadd( 568.891, 375.638, 9.7387, 0.5186 ) }
    dend_29 { pt3dadd( 569.502, 374.788, 9.4624, 0.4942 ) }
    dend_29 { pt3dadd( 570.426, 374.119, 9.2741, 0.4916 ) }
    dend_29 { pt3dadd( 571.497, 373.764, 9.0955, 0.4722 ) }
    dend_29 { pt3dadd( 572.605, 373.491, 8.9193, 0.4484 ) }
    dend_29 { pt3dadd( 573.381, 372.688, 8.7128, 0.3738 ) }
    dend_29 { pt3dadd( 574.112, 371.81, 8.5021, 0.2924 ) }
    dend_29 { pt3dadd( 575.049, 371.166, 8.3103, 0.2586 ) }
    dend_29 { pt3dadd( 576.004, 370.542, 8.12, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 11/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 545.785, 402.219, 23.9326, 0.695 ) }
    dend_28 { pt3dadd( 546.546, 400.712, 24.3829, 0.5256 ) }
    dend_28 { pt3dadd( 547.085, 399.71, 24.6769, 0.4848 ) }
    dend_28 { pt3dadd( 547.525, 398.66, 24.8956, 0.5312 ) }
    dend_28 { pt3dadd( 547.939, 397.597, 25.0942, 0.6008 ) }
    dend_28 { pt3dadd( 548.089, 396.496, 25.6459, 0.6706 ) }
    dend_28 { pt3dadd( 548.402, 395.58, 26.3081, 0.7554 ) }
    dend_28 { pt3dadd( 549.471, 395.305, 27.0418, 0.889 ) }
    dend_28 { pt3dadd( 550.273, 394.725, 27.8133, 0.8932 ) }
    dend_28 { pt3dadd( 550.707, 393.72, 28.637, 0.718 ) }
    dend_28 { pt3dadd( 551.284, 392.818, 29.4784, 0.6148 ) }
    dend_28 { pt3dadd( 552.057, 392.051, 30.343, 0.607 ) }
    dend_28 { pt3dadd( 552.848, 391.294, 31.1408, 0.658 ) }
    dend_28 { pt3dadd( 553.662, 390.546, 31.8707, 0.7688 ) }
    dend_28 { pt3dadd( 554.505, 389.821, 32.5136, 0.8838 ) }
    dend_28 { pt3dadd( 555.38, 389.12, 33.0714, 1.0032 ) }
    dend_28 { pt3dadd( 556.122, 388.294, 33.5896, 1.0164 ) }
    dend_28 { pt3dadd( 556.741, 387.353, 34.0704, 0.9306 ) }
    dend_28 { pt3dadd( 557.381, 386.436, 34.6626, 0.915 ) }
    dend_28 { pt3dadd( 558.037, 385.544, 35.3564, 0.9628 ) }
    dend_28 { pt3dadd( 558.595, 384.599, 36.1049, 0.9566 ) }
    dend_28 { pt3dadd( 559.06, 383.606, 36.9034, 0.9012 ) }
    dend_28 { pt3dadd( 559.656, 382.703, 37.7367, 0.8614 ) }
    dend_28 { pt3dadd( 560.367, 381.88, 38.6011, 0.8354 ) }
    dend_28 { pt3dadd( 561.077, 381.047, 39.417, 0.7386 ) }
    dend_28 { pt3dadd( 561.786, 380.207, 40.1937, 0.585 ) }
    dend_28 { pt3dadd( 562.456, 379.364, 41.1278, 0.4662 ) }
    dend_28 { pt3dadd( 563.092, 378.518, 42.1879, 0.375 ) }
    dend_28 { pt3dadd( 563.705, 377.586, 42.7473, 0.335 ) }
    dend_28 { pt3dadd( 564.313, 376.634, 43.1869, 0.3074 ) }
    dend_28 { pt3dadd( 565.356, 376.295, 43.5198, 0.2912 ) }
    dend_28 { pt3dadd( 566.466, 376.053, 43.8357, 0.277 ) }
    dend_28 { pt3dadd( 567.416, 375.781, 45.204, 0.2802 ) }
    dend_28 { pt3dadd( 568.406, 375.495, 46.298, 0.287 ) }
    dend_28 { pt3dadd( 569.496, 375.192, 46.7141, 0.2976 ) }
    dend_28 { pt3dadd( 570.587, 374.881, 47.0397, 0.3144 ) }
    dend_28 { pt3dadd( 571.682, 374.557, 47.2164, 0.3416 ) }
    dend_28 { pt3dadd( 572.717, 374.109, 47.3942, 0.3438 ) }
    dend_28 { pt3dadd( 573.654, 373.455, 47.5742, 0.3054 ) }
    dend_28 { pt3dadd( 574.397, 372.637, 47.8019, 0.2822 ) }
    dend_28 { pt3dadd( 574.908, 371.62, 48.0866, 0.2772 ) }
    dend_28 { pt3dadd( 575.511, 370.662, 48.372, 0.2746 ) }
    dend_28 { pt3dadd( 576.211, 369.765, 48.6578, 0.2746 ) }
    dend_28 { pt3dadd( 576.869, 368.838, 48.9499, 0.2746 ) }
    dend_28 { pt3dadd( 577.484, 367.881, 49.2478, 0.2746 ) }
    dend_28 { pt3dadd( 578.306, 367.147, 49.5452, 0.2746 ) }
    dend_28 { pt3dadd( 579.309, 366.611, 49.8422, 0.2746 ) }
    dend_28 { pt3dadd( 580.103, 365.837, 50.1054, 0.2746 ) }
    dend_28 { pt3dadd( 580.752, 364.899, 50.3448, 0.2746 ) }
    dend_28 { pt3dadd( 581.332, 363.921, 50.5879, 0.2746 ) }
    dend_28 { pt3dadd( 581.864, 362.913, 50.8334, 0.2746 ) }
    dend_28 { pt3dadd( 582.311, 361.868, 51.0874, 0.2746 ) }
    dend_28 { pt3dadd( 582.702, 360.798, 51.347, 0.2746 ) }
    dend_28 { pt3dadd( 583.362, 359.894, 51.5724, 0.2746 ) }
    dend_28 { pt3dadd( 584.15, 359.071, 51.7815, 0.2746 ) }
    dend_28 { pt3dadd( 584.894, 358.205, 51.9669, 0.2746 ) }
    dend_28 { pt3dadd( 585.618, 357.322, 52.143, 0.2746 ) }
    dend_28 { pt3dadd( 586.49, 356.594, 52.2942, 0.2746 ) }
    dend_28 { pt3dadd( 587.41, 355.916, 52.4373, 0.2744 ) }
    dend_28 { pt3dadd( 588.342, 355.254, 52.5092, 0.2744 ) }
    dend_28 { pt3dadd( 589.28, 354.6, 52.5596, 0.2742 ) }
    dend_28 { pt3dadd( 590.211, 353.935, 52.5683, 0.2738 ) }
    dend_28 { pt3dadd( 591.141, 353.27, 52.5661, 0.2732 ) }
    dend_28 { pt3dadd( 592.173, 352.788, 52.5244, 0.2716 ) }
    dend_28 { pt3dadd( 593.233, 352.357, 52.4726, 0.2696 ) }
    dend_28 { pt3dadd( 593.818, 351.435, 52.4314, 0.2636 ) }
    dend_28 { pt3dadd( 594.286, 350.391, 52.3933, 0.2564 ) }
    dend_28 { pt3dadd( 595.134, 349.64, 52.3754, 0.243 ) }
    dend_28 { pt3dadd( 596.024, 348.92, 52.36, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 80/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 505.317, 448.575, 40.3399, 0.6938 ) }
    dend_19 { pt3dadd( 504.754, 449.5, 41.0194, 0.7544 ) }
    dend_19 { pt3dadd( 503.951, 450.174, 42.1355, 0.8164 ) }
    dend_19 { pt3dadd( 503.178, 450.877, 43.2412, 0.8696 ) }
    dend_19 { pt3dadd( 502.671, 451.815, 44.2543, 0.8484 ) }
    dend_19 { pt3dadd( 502.24, 452.783, 45.2346, 0.8152 ) }
    dend_19 { pt3dadd( 502.087, 453.861, 46.0936, 0.7382 ) }
    dend_19 { pt3dadd( 501.849, 454.923, 46.8726, 0.6394 ) }
    dend_19 { pt3dadd( 501.39, 455.945, 47.4452, 0.4842 ) }
    dend_19 { pt3dadd( 500.878, 456.944, 47.8318, 0.3978 ) }
    dend_19 { pt3dadd( 500.238, 457.893, 47.7814, 0.4732 ) }
    dend_19 { pt3dadd( 499.563, 458.815, 47.7649, 0.498 ) }
    dend_19 { pt3dadd( 498.817, 459.681, 47.8156, 0.4222 ) }
    dend_19 { pt3dadd( 498.309, 460.685, 47.9074, 0.4544 ) }
    dend_19 { pt3dadd( 497.932, 461.764, 48.0214, 0.5456 ) }
    dend_19 { pt3dadd( 497.313, 462.711, 48.0973, 0.6002 ) }
    dend_19 { pt3dadd( 496.609, 463.613, 48.1603, 0.642 ) }
    dend_19 { pt3dadd( 495.913, 464.519, 48.2728, 0.583 ) }
    dend_19 { pt3dadd( 495.217, 465.427, 48.4016, 0.4916 ) }
    dend_19 { pt3dadd( 494.469, 466.29, 48.5274, 0.4566 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_19 { pt3dadd( 493.705, 467.14, 48.6522, 0.4388 ) }
    dend_19 { pt3dadd( 492.897, 467.946, 48.8051, 0.417 ) }
    dend_19 { pt3dadd( 492.074, 468.739, 48.9664, 0.394 ) }
    dend_19 { pt3dadd( 491.161, 469.419, 49.1602, 0.4492 ) }
    dend_19 { pt3dadd( 490.221, 470.065, 49.3634, 0.5272 ) }
    dend_19 { pt3dadd( 489.632, 471.033, 49.6832, 0.4892 ) }
    dend_19 { pt3dadd( 489.057, 472.012, 50.0072, 0.447 ) }
    dend_19 { pt3dadd( 488.599, 473.047, 50.4185, 0.4722 ) }
    dend_19 { pt3dadd( 488.142, 474.083, 50.8295, 0.4976 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 9/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 505.317, 448.575, 40.3399, 0.6938 ) }
    dend_18 { pt3dadd( 506.037, 449.815, 40.5798, 0.6548 ) }
    dend_18 { pt3dadd( 505.944, 450.953, 40.7403, 0.469 ) }
    dend_18 { pt3dadd( 505.817, 452.087, 40.9044, 0.343 ) }
    dend_18 { pt3dadd( 505.599, 453.208, 41.0768, 0.3728 ) }
    dend_18 { pt3dadd( 505.265, 454.286, 41.2647, 0.4126 ) }
    dend_18 { pt3dadd( 504.716, 455.286, 41.4814, 0.4716 ) }
    dend_18 { pt3dadd( 504.246, 456.318, 41.7278, 0.5476 ) }
    dend_18 { pt3dadd( 503.907, 457.403, 42.0238, 0.6516 ) }
    dend_18 { pt3dadd( 503.681, 458.509, 42.3122, 0.6988 ) }
    dend_18 { pt3dadd( 503.646, 459.647, 42.5883, 0.6524 ) }
    dend_18 { pt3dadd( 503.714, 460.775, 42.9005, 0.637 ) }
    dend_18 { pt3dadd( 503.931, 461.888, 43.2656, 0.667 ) }
    dend_18 { pt3dadd( 504.009, 463.009, 43.6022, 0.679 ) }
    dend_18 { pt3dadd( 503.893, 464.141, 43.9001, 0.667 ) }
    dend_18 { pt3dadd( 503.462, 465.151, 44.2249, 0.5738 ) }
    dend_18 { pt3dadd( 502.801, 466.075, 44.5693, 0.4222 ) }
    dend_18 { pt3dadd( 502.004, 466.877, 44.947, 0.362 ) }
    dend_18 { pt3dadd( 501.173, 467.646, 45.3342, 0.3258 ) }
    dend_18 { pt3dadd( 500.495, 468.542, 45.7904, 0.3468 ) }
    dend_18 { pt3dadd( 499.858, 469.472, 46.265, 0.3828 ) }
    dend_18 { pt3dadd( 499.758, 470.547, 47.0274, 0.402 ) }
    dend_18 { pt3dadd( 499.737, 471.642, 47.8332, 0.4188 ) }
    dend_18 { pt3dadd( 500.196, 472.636, 48.51, 0.4324 ) }
    dend_18 { pt3dadd( 500.722, 473.615, 49.1686, 0.4454 ) }
    dend_18 { pt3dadd( 501.287, 474.582, 49.7442, 0.4008 ) }
    dend_18 { pt3dadd( 501.856, 475.547, 50.3101, 0.3492 ) }
    dend_18 { pt3dadd( 502.488, 476.475, 50.8374, 0.3128 ) }
    dend_18 { pt3dadd( 503.129, 477.398, 51.3601, 0.2778 ) }
    dend_18 { pt3dadd( 504.038, 478.049, 51.865, 0.2746 ) }
    dend_18 { pt3dadd( 504.977, 478.67, 52.3678, 0.2746 ) }
    dend_18 { pt3dadd( 506.055, 478.892, 53.0667, 0.2746 ) }
    dend_18 { pt3dadd( 507.146, 479.082, 53.7813, 0.2746 ) }
    dend_18 { pt3dadd( 508.24, 479.175, 54.5602, 0.2746 ) }
    dend_18 { pt3dadd( 509.335, 479.259, 55.344, 0.2746 ) }
    dend_18 { pt3dadd( 510.453, 479.193, 55.8964, 0.2744 ) }
    dend_18 { pt3dadd( 511.574, 479.116, 56.4337, 0.2744 ) }
    dend_18 { pt3dadd( 512.695, 479.156, 56.9713, 0.2742 ) }
    dend_18 { pt3dadd( 513.816, 479.203, 57.5092, 0.2742 ) }
    dend_18 { pt3dadd( 514.929, 479.259, 58.1501, 0.2734 ) }
    dend_18 { pt3dadd( 516.04, 479.314, 58.7975, 0.2728 ) }
    dend_18 { pt3dadd( 517.021, 479.78, 59.6414, 0.2706 ) }
    dend_18 { pt3dadd( 517.992, 480.273, 60.4979, 0.2684 ) }
    dend_18 { pt3dadd( 518.831, 480.962, 61.3766, 0.2606 ) }
    dend_18 { pt3dadd( 519.669, 481.653, 62.2558, 0.2526 ) }
    dend_18 { pt3dadd( 520.466, 482.311, 63.4494, 0.2408 ) }
    dend_18 { pt3dadd( 521.264, 482.97, 64.6481, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_6 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 519.352, 396.294, 22.881, 0.5968 ) }
    dend_12 { pt3dadd( 518.297, 395.668, 23.3315, 0.472 ) }
    dend_12 { pt3dadd( 518.057, 394.574, 23.7561, 0.5154 ) }
    dend_12 { pt3dadd( 517.837, 393.464, 24.1809, 0.5632 ) }
    dend_12 { pt3dadd( 517.66, 392.349, 24.6159, 0.6468 ) }
    dend_12 { pt3dadd( 517.483, 391.232, 25.0511, 0.731 ) }
    dend_12 { pt3dadd( 517.327, 390.106, 25.3806, 0.6598 ) }
    dend_12 { pt3dadd( 517.173, 388.981, 25.7088, 0.5868 ) }
    dend_12 { pt3dadd( 517.089, 387.841, 25.7919, 0.669 ) }
    dend_12 { pt3dadd( 517.006, 386.701, 25.8727, 0.7526 ) }
    dend_12 { pt3dadd( 517.274, 385.593, 26.1092, 0.826 ) }
    dend_12 { pt3dadd( 517.546, 384.486, 26.347, 0.8992 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 68/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 519.352, 396.294, 22.881, 0.5968 ) }
    dend_7 { pt3dadd( 519.653, 395.934, 22.1092, 0.6574 ) }
    dend_7 { pt3dadd( 520.219, 395.078, 20.986, 0.7532 ) }
    dend_7 { pt3dadd( 520.75, 394.109, 20.2499, 0.8248 ) }
    dend_7 { pt3dadd( 521.116, 393.07, 19.594, 0.8206 ) }
    dend_7 { pt3dadd( 521.367, 391.981, 18.9957, 0.7622 ) }
    dend_7 { pt3dadd( 521.95, 391.065, 18.641, 0.7658 ) }
    dend_7 { pt3dadd( 522.769, 390.27, 18.4577, 0.813 ) }
    dend_7 { pt3dadd( 523.52, 389.411, 18.3138, 0.942 ) }
    dend_7 { pt3dadd( 524.233, 388.518, 18.1915, 1.1158 ) }
    dend_7 { pt3dadd( 524.76, 387.519, 17.9682, 1.071 ) }
    dend_7 { pt3dadd( 525.199, 386.467, 17.6976, 0.9234 ) }
    dend_7 { pt3dadd( 526.103, 386.065, 17.2388, 0.862 ) }
    dend_7 { pt3dadd( 527.22, 385.958, 16.6941, 0.8398 ) }
    dend_7 { pt3dadd( 527.995, 386.736, 16.1293, 0.7734 ) }
    dend_7 { pt3dadd( 528.752, 387.562, 15.5633, 0.7044 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 84/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 538.412, 392.473, 24.3252, 0.7194 ) }
    dend_3 { pt3dadd( 539.25, 392.175, 24.9178, 0.664 ) }
    dend_3 { pt3dadd( 540.383, 392.067, 25.1867, 0.7282 ) }
    dend_3 { pt3dadd( 541.524, 392.082, 25.4208, 0.7738 ) }
    dend_3 { pt3dadd( 542.663, 392.098, 25.6544, 0.8192 ) }
    dend_3 { pt3dadd( 543.782, 392.326, 25.8089, 0.7346 ) }
    dend_3 { pt3dadd( 544.901, 392.557, 25.9622, 0.6482 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 91/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 538.412, 392.473, 24.3252, 0.7194 ) }
    dend_2 { pt3dadd( 538.777, 391.733, 23.4598, 0.7894 ) }
    dend_2 { pt3dadd( 539.248, 390.78, 22.4919, 0.8648 ) }
    dend_2 { pt3dadd( 539.767, 389.76, 22.4851, 0.8408 ) }
    dend_2 { pt3dadd( 540.328, 388.773, 22.4656, 0.8086 ) }
    dend_2 { pt3dadd( 541.188, 388.02, 22.3582, 0.7196 ) }
    dend_2 { pt3dadd( 541.939, 387.208, 22.2151, 0.6442 ) }
    dend_2 { pt3dadd( 542.095, 386.084, 21.8731, 0.6438 ) }
    dend_2 { pt3dadd( 542.159, 384.964, 21.4658, 0.6498 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_2 { pt3dadd( 541.997, 383.855, 20.8979, 0.6708 ) }
    dend_2 { pt3dadd( 541.975, 382.756, 20.3323, 0.7068 ) }
    dend_2 { pt3dadd( 542.29, 381.681, 19.7719, 0.7794 ) }
    dend_2 { pt3dadd( 542.649, 380.619, 19.2367, 0.8026 ) }
    dend_2 { pt3dadd( 543.088, 379.582, 18.7484, 0.7338 ) }
    dend_2 { pt3dadd( 543.479, 378.523, 18.3153, 0.6764 ) }
    dend_2 { pt3dadd( 543.783, 377.43, 17.9821, 0.6394 ) }
    dend_2 { pt3dadd( 543.991, 376.329, 17.5239, 0.6056 ) }
    dend_2 { pt3dadd( 544.03, 375.221, 16.8467, 0.5766 ) }
    dend_2 { pt3dadd( 544.085, 374.12, 16.0997, 0.5132 ) }
    dend_2 { pt3dadd( 544.161, 373.03, 15.2718, 0.4098 ) }
    dend_2 { pt3dadd( 544.732, 372.213, 14.2436, 0.4292 ) }
    dend_2 { pt3dadd( 545.515, 371.514, 13.1297, 0.5014 ) }
    dend_2 { pt3dadd( 546.257, 370.74, 12.1684, 0.5248 ) }
    dend_2 { pt3dadd( 546.981, 369.933, 11.269, 0.5284 ) }
    dend_2 { pt3dadd( 547.96, 369.518, 10.546, 0.513 ) }
    dend_2 { pt3dadd( 549.042, 369.258, 9.8934, 0.49 ) }
    dend_2 { pt3dadd( 550.067, 368.824, 9.2973, 0.4634 ) }
    dend_2 { pt3dadd( 551.075, 368.338, 8.719, 0.4358 ) }
    dend_2 { pt3dadd( 551.619, 367.41, 8.1972, 0.4908 ) }
    dend_2 { pt3dadd( 552.041, 366.367, 7.6903, 0.5678 ) }
    dend_2 { pt3dadd( 551.994, 365.244, 7.3699, 0.506 ) }
    dend_2 { pt3dadd( 551.892, 364.111, 7.0715, 0.428 ) }
    dend_2 { pt3dadd( 552.2, 363.034, 6.624, 0.438 ) }
    dend_2 { pt3dadd( 552.552, 361.962, 6.16, 0.4576 ) }
    // Section: apic_23, id: apic_23, parent: apic_19 (entry count 25/100)
    apic_23 { pt3dclear() }
    apic_23 { pt3dadd( 493.929, 400.462, 30.189, 0.9544 ) }
    apic_23 { pt3dadd( 495.018, 400.058, 31.9715, 1.022 ) }
    apic_23 { pt3dadd( 496.005, 399.865, 33.3043, 0.9834 ) }
    apic_23 { pt3dadd( 497.076, 400.076, 34.0318, 1.0348 ) }
    apic_23 { pt3dadd( 498.156, 400.342, 34.6783, 1.098 ) }
    apic_23 { pt3dadd( 499.184, 400.696, 35.5443, 1.035 ) }
    apic_23 { pt3dadd( 500.205, 401.061, 36.4367, 0.957 ) }
    apic_23 { pt3dadd( 501.295, 401.249, 37.1347, 0.8324 ) }
    apic_23 { pt3dadd( 502.392, 401.416, 37.8115, 0.7026 ) }
    apic_23 { pt3dadd( 503.487, 401.507, 38.5944, 0.6622 ) }
    apic_23 { pt3dadd( 504.581, 401.594, 39.3834, 0.627 ) }
    // Section: apic_20, id: apic_20, parent: apic_19 (entry count 36/100)
    apic_20 { pt3dclear() }
    apic_20 { pt3dadd( 493.929, 400.462, 30.189, 0.9544 ) }
    apic_20 { pt3dadd( 492.271, 401.125, 31.3009, 1.0144 ) }
    apic_20 { pt3dadd( 491.155, 401.156, 31.5619, 0.9344 ) }
    apic_20 { pt3dadd( 490.014, 401.084, 31.7083, 0.823 ) }
    apic_20 { pt3dadd( 488.958, 401.465, 31.7836, 0.837 ) }
    apic_20 { pt3dadd( 487.921, 401.945, 31.8433, 0.8788 ) }
    apic_20 { pt3dadd( 487.039, 402.664, 31.999, 0.798 ) }
    apic_20 { pt3dadd( 486.176, 403.412, 32.1667, 0.702 ) }
    apic_20 { pt3dadd( 485.237, 404.056, 32.4223, 0.7328 ) }
    apic_20 { pt3dadd( 484.303, 404.7, 32.6934, 0.7704 ) }
    apic_20 { pt3dadd( 483.907, 405.744, 33.3141, 0.631 ) }
    apic_20 { pt3dadd( 483.538, 406.797, 33.8864, 0.5076 ) }
    apic_20 { pt3dadd( 483.301, 407.909, 34.1953, 0.4718 ) }
    apic_20 { pt3dadd( 482.967, 408.979, 34.5128, 0.4538 ) }
    apic_20 { pt3dadd( 482.306, 409.901, 34.8594, 0.4962 ) }
    apic_20 { pt3dadd( 481.626, 410.809, 35.2122, 0.5298 ) }
    apic_20 { pt3dadd( 480.89, 411.671, 35.5838, 0.5356 ) }
    apic_20 { pt3dadd( 480.126, 412.508, 35.929, 0.54 ) }
    apic_20 { pt3dadd( 479.286, 413.277, 36.1973, 0.5406 ) }
    apic_20 { pt3dadd( 478.461, 414.063, 36.4412, 0.5304 ) }
    apic_20 { pt3dadd( 477.681, 414.896, 36.6164, 0.4888 ) }
    apic_20 { pt3dadd( 476.817, 415.567, 37.0684, 0.4844 ) }
    apic_20 { pt3dadd( 475.811, 415.961, 37.9946, 0.5438 ) }
    apic_20 { pt3dadd( 474.808, 416.399, 38.7806, 0.6012 ) }
    apic_20 { pt3dadd( 473.804, 416.875, 39.4517, 0.6568 ) }
    apic_20 { pt3dadd( 472.899, 417.519, 39.9756, 0.7096 ) }
    apic_20 { pt3dadd( 472.13, 418.327, 40.4062, 0.7484 ) }
    apic_20 { pt3dadd( 471.729, 419.377, 40.9175, 0.721 ) }
    apic_20 { pt3dadd( 471.26, 420.394, 41.3843, 0.7068 ) }
    apic_20 { pt3dadd( 470.565, 421.292, 41.7012, 0.737 ) }
    apic_20 { pt3dadd( 469.84, 422.165, 42.028, 0.7304 ) }
    apic_20 { pt3dadd( 469.046, 422.975, 42.378, 0.6384 ) }
    apic_20 { pt3dadd( 468.243, 423.779, 42.6941, 0.5706 ) }
    apic_20 { pt3dadd( 467.418, 424.567, 42.9313, 0.5584 ) }
    apic_20 { pt3dadd( 466.619, 425.379, 43.1231, 0.5352 ) }
    apic_20 { pt3dadd( 465.878, 426.25, 43.2113, 0.4864 ) }
    apic_20 { pt3dadd( 465.132, 427.115, 43.3572, 0.4878 ) }
    apic_20 { pt3dadd( 464.374, 427.964, 43.6332, 0.6018 ) }
    apic_20 { pt3dadd( 463.692, 428.864, 43.9443, 0.6428 ) }
    apic_20 { pt3dadd( 463.168, 429.868, 44.3296, 0.532 ) }
    apic_20 { pt3dadd( 462.722, 430.904, 44.7146, 0.4622 ) }
    apic_20 { pt3dadd( 462.413, 431.994, 45.0996, 0.4626 ) }
    apic_20 { pt3dadd( 462.056, 433.07, 45.4356, 0.5204 ) }
    apic_20 { pt3dadd( 461.633, 434.127, 45.7041, 0.6584 ) }
    apic_20 { pt3dadd( 461.295, 435.207, 46.037, 0.7162 ) }
    apic_20 { pt3dadd( 461.068, 436.316, 46.4548, 0.6676 ) }
    apic_20 { pt3dadd( 460.722, 437.383, 46.8636, 0.6012 ) }
    apic_20 { pt3dadd( 460.223, 438.4, 47.2601, 0.5114 ) }
    apic_20 { pt3dadd( 459.805, 439.441, 47.7453, 0.4256 ) }
    apic_20 { pt3dadd( 459.482, 440.512, 48.3372, 0.3444 ) }
    apic_20 { pt3dadd( 459.133, 441.581, 48.8373, 0.3108 ) }
    apic_20 { pt3dadd( 458.752, 442.648, 49.2327, 0.3314 ) }
    apic_20 { pt3dadd( 458.275, 443.665, 49.6706, 0.3992 ) }
    apic_20 { pt3dadd( 457.695, 444.633, 50.1528, 0.5166 ) }
    apic_20 { pt3dadd( 457.107, 445.596, 50.5896, 0.621 ) }
    apic_20 { pt3dadd( 456.509, 446.558, 50.9855, 0.7132 ) }
    apic_20 { pt3dadd( 455.901, 447.518, 51.3296, 0.6884 ) }
    apic_20 { pt3dadd( 455.288, 448.474, 51.6309, 0.5682 ) }
    apic_20 { pt3dadd( 454.69, 449.448, 51.7462, 0.507 ) }
    apic_20 { pt3dadd( 454.102, 450.428, 51.7569, 0.479 ) }
    apic_20 { pt3dadd( 453.267, 451.17, 51.6146, 0.4386 ) }
    apic_20 { pt3dadd( 452.312, 451.793, 51.3976, 0.392 ) }
    apic_20 { pt3dadd( 451.337, 452.372, 51.0443, 0.4046 ) }
    apic_20 { pt3dadd( 450.356, 452.938, 50.6523, 0.4338 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_20 { pt3dadd( 449.592, 453.707, 49.8638, 0.374 ) }
    apic_20 { pt3dadd( 448.885, 454.53, 48.97, 0.2906 ) }
    apic_20 { pt3dadd( 447.809, 454.753, 48.3882, 0.286 ) }
    apic_20 { pt3dadd( 446.7, 454.927, 47.8316, 0.2876 ) }
    apic_20 { pt3dadd( 445.732, 455.504, 47.4592, 0.305 ) }
    apic_20 { pt3dadd( 444.775, 456.113, 47.1002, 0.3236 ) }
    // Section: apic_17, id: apic_17, parent: apic_3 (entry count 6/100)
    apic_17 { pt3dclear() }
    apic_17 { pt3dadd( 472.472, 385.576, 27.2829, 0.8798 ) }
    apic_17 { pt3dadd( 471.767, 386.653, 27.9247, 0.326 ) }
    apic_17 { pt3dadd( 471.106, 387.537, 28.6586, 0.4432 ) }
    apic_17 { pt3dadd( 470.243, 388.195, 29.3846, 0.5594 ) }
    apic_17 { pt3dadd( 469.284, 388.743, 30.1067, 0.675 ) }
    apic_17 { pt3dadd( 468.371, 389.342, 30.9285, 0.7482 ) }
    apic_17 { pt3dadd( 467.48, 389.964, 31.7976, 0.8012 ) }
    apic_17 { pt3dadd( 466.479, 390.253, 32.8154, 0.7348 ) }
    apic_17 { pt3dadd( 465.434, 390.409, 33.8918, 0.6216 ) }
    apic_17 { pt3dadd( 464.473, 390.843, 34.8869, 0.5868 ) }
    apic_17 { pt3dadd( 463.544, 391.383, 35.8506, 0.582 ) }
    apic_17 { pt3dadd( 463.183, 392.121, 37.5813, 0.4908 ) }
    apic_17 { pt3dadd( 462.937, 392.803, 39.4923, 0.3884 ) }
    apic_17 { pt3dadd( 462.129, 392.24, 40.9164, 0.442 ) }
    apic_17 { pt3dadd( 461.325, 391.647, 42.2657, 0.4792 ) }
    apic_17 { pt3dadd( 460.538, 390.938, 43.3191, 0.452 ) }
    apic_17 { pt3dadd( 459.79, 390.198, 44.3954, 0.4292 ) }
    apic_17 { pt3dadd( 459.181, 389.352, 45.5518, 0.4222 ) }
    apic_17 { pt3dadd( 458.542, 388.525, 46.6774, 0.4348 ) }
    apic_17 { pt3dadd( 457.814, 387.75, 47.7114, 0.504 ) }
    apic_17 { pt3dadd( 457.147, 386.943, 48.8048, 0.5404 ) }
    apic_17 { pt3dadd( 456.64, 386.054, 50.0604, 0.4868 ) }
    apic_17 { pt3dadd( 455.949, 385.562, 51.2868, 0.4938 ) }
    apic_17 { pt3dadd( 454.931, 385.768, 52.4619, 0.6074 ) }
    apic_17 { pt3dadd( 454.039, 386.146, 53.825, 0.6228 ) }
    apic_17 { pt3dadd( 453.295, 386.726, 55.4092, 0.5222 ) }
    apic_17 { pt3dadd( 452.649, 387.459, 56.8025, 0.4686 ) }
    apic_17 { pt3dadd( 452.072, 388.303, 58.058, 0.4486 ) }
    apic_17 { pt3dadd( 451.381, 388.954, 59.5524, 0.445 ) }
    apic_17 { pt3dadd( 450.623, 389.492, 61.1839, 0.4506 ) }
    apic_17 { pt3dadd( 449.73, 389.467, 62.5803, 0.4004 ) }
    apic_17 { pt3dadd( 448.766, 389.136, 63.849, 0.32 ) }
    apic_17 { pt3dadd( 447.891, 388.478, 64.4932, 0.3198 ) }
    apic_17 { pt3dadd( 447.035, 387.749, 64.9975, 0.3376 ) }
    apic_17 { pt3dadd( 446.143, 387.037, 65.1448, 0.2882 ) }
    apic_17 { pt3dadd( 445.245, 386.329, 65.24, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 42/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 472.472, 385.576, 27.2829, 0.8798 ) }
    apic_4 { pt3dadd( 471.408, 385.002, 27.3047, 0.872 ) }
    apic_4 { pt3dadd( 470.399, 384.463, 27.3214, 0.8528 ) }
    apic_4 { pt3dadd( 469.301, 384.146, 27.3484, 0.7946 ) }
    apic_4 { pt3dadd( 468.198, 383.843, 27.3761, 0.7342 ) }
    apic_4 { pt3dadd( 467.241, 383.225, 27.493, 0.622 ) }
    apic_4 { pt3dadd( 466.29, 382.59, 27.6149, 0.5068 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 49/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 488.142, 474.083, 50.8295, 0.4976 ) }
    dend_21 { pt3dadd( 487.179, 474.591, 52.2312, 0.3354 ) }
    dend_21 { pt3dadd( 486.825, 475.659, 52.7212, 0.2998 ) }
    dend_21 { pt3dadd( 486.388, 476.693, 53.1266, 0.2746 ) }
    dend_21 { pt3dadd( 485.752, 477.641, 53.3277, 0.2746 ) }
    dend_21 { pt3dadd( 485.155, 478.612, 53.4702, 0.2746 ) }
    dend_21 { pt3dadd( 484.642, 479.633, 53.4909, 0.2746 ) }
    dend_21 { pt3dadd( 484.124, 480.654, 53.5083, 0.2746 ) }
    dend_21 { pt3dadd( 483.602, 481.672, 53.5212, 0.2746 ) }
    dend_21 { pt3dadd( 483.267, 482.759, 53.5422, 0.2744 ) }
    dend_21 { pt3dadd( 483.006, 483.873, 53.5665, 0.2744 ) }
    dend_21 { pt3dadd( 482.516, 484.898, 53.6113, 0.274 ) }
    dend_21 { pt3dadd( 481.96, 485.898, 53.662, 0.2734 ) }
    dend_21 { pt3dadd( 481.594, 486.976, 53.7384, 0.2722 ) }
    dend_21 { pt3dadd( 481.276, 488.074, 53.8213, 0.2706 ) }
    dend_21 { pt3dadd( 480.684, 489.036, 54.0831, 0.264 ) }
    dend_21 { pt3dadd( 480.03, 489.967, 54.3838, 0.2564 ) }
    dend_21 { pt3dadd( 479.237, 490.782, 54.6358, 0.243 ) }
    dend_21 { pt3dadd( 478.421, 491.577, 54.88, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 68/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 488.142, 474.083, 50.8295, 0.4976 ) }
    dend_20 { pt3dadd( 488.704, 475.237, 51.6566, 0.3082 ) }
    dend_20 { pt3dadd( 489.217, 476.109, 52.9648, 0.275 ) }
    dend_20 { pt3dadd( 489.957, 476.807, 54.2408, 0.2742 ) }
    dend_20 { pt3dadd( 490.702, 477.502, 55.5162, 0.2742 ) }
    dend_20 { pt3dadd( 491.499, 478.138, 56.782, 0.2734 ) }
    dend_20 { pt3dadd( 492.297, 478.774, 58.0479, 0.2728 ) }
    dend_20 { pt3dadd( 493.102, 479.442, 59.1836, 0.2704 ) }
    dend_20 { pt3dadd( 493.906, 480.111, 60.3179, 0.268 ) }
    dend_20 { pt3dadd( 494.273, 481.161, 60.9711, 0.2608 ) }
    dend_20 { pt3dadd( 494.64, 482.211, 61.6235, 0.2538 ) }
    dend_20 { pt3dadd( 495.012, 483.276, 62.0875, 0.2412 ) }
    dend_20 { pt3dadd( 495.384, 484.341, 62.5514, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 81/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 517.546, 384.486, 26.347, 0.8992 ) }
    dend_14 { pt3dadd( 517.125, 383.767, 28.0619, 0.4618 ) }
    dend_14 { pt3dadd( 517.217, 383.36, 30.6695, 0.64 ) }
    dend_14 { pt3dadd( 517.266, 382.497, 32.4131, 0.6684 ) }
    dend_14 { pt3dadd( 517.198, 381.59, 33.9444, 0.684 ) }
    dend_14 { pt3dadd( 516.428, 380.867, 35.0182, 0.7702 ) }
    dend_14 { pt3dadd( 515.708, 380.095, 36.0688, 0.8386 ) }
    dend_14 { pt3dadd( 515.094, 379.221, 37.0714, 0.8706 ) }
    dend_14 { pt3dadd( 514.266, 378.917, 38.1724, 0.8352 ) }
    dend_14 { pt3dadd( 513.249, 379.117, 39.3602, 0.7402 ) }
    dend_14 { pt3dadd( 512.233, 378.945, 40.3452, 0.6508 ) }
    dend_14 { pt3dadd( 511.25, 378.528, 41.2143, 0.563 ) }
    dend_14 { pt3dadd( 511.115, 377.472, 42.2355, 0.4288 ) }
    dend_14 { pt3dadd( 511.042, 376.371, 42.8504, 0.3474 ) }
    dend_14 { pt3dadd( 511.024, 375.232, 43.1178, 0.3112 ) }
    dend_14 { pt3dadd( 510.949, 374.101, 43.4518, 0.3078 ) }
    dend_14 { pt3dadd( 510.841, 372.971, 43.8253, 0.324 ) }
    dend_14 { pt3dadd( 510.928, 371.855, 44.2744, 0.3836 ) }
    dend_14 { pt3dadd( 511.124, 370.746, 44.7664, 0.468 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_14 { pt3dadd( 511.358, 369.64, 45.1895, 0.4888 ) }
    dend_14 { pt3dadd( 511.611, 368.536, 45.575, 0.474 ) }
    dend_14 { pt3dadd( 511.816, 367.416, 45.8122, 0.5218 ) }
    dend_14 { pt3dadd( 511.996, 366.288, 45.967, 0.6044 ) }
    dend_14 { pt3dadd( 512.288, 365.188, 46.1177, 0.6214 ) }
    dend_14 { pt3dadd( 512.64, 364.1, 46.2661, 0.6036 ) }
    dend_14 { pt3dadd( 513.313, 363.207, 46.4946, 0.5652 ) }
    dend_14 { pt3dadd( 514.1, 362.385, 46.7516, 0.5198 ) }
    dend_14 { pt3dadd( 514.688, 361.425, 47.143, 0.4608 ) }
    dend_14 { pt3dadd( 515.214, 360.425, 47.5748, 0.3976 ) }
    dend_14 { pt3dadd( 515.969, 359.584, 47.6095, 0.5274 ) }
    dend_14 { pt3dadd( 516.793, 358.79, 47.5261, 0.7144 ) }
    dend_14 { pt3dadd( 517.684, 358.075, 47.5406, 0.7406 ) }
    dend_14 { pt3dadd( 518.591, 357.38, 47.5784, 0.7286 ) }
    dend_14 { pt3dadd( 519.404, 356.581, 47.7764, 0.7602 ) }
    dend_14 { pt3dadd( 520.194, 355.76, 48.0091, 0.8012 ) }
    dend_14 { pt3dadd( 521.151, 355.213, 48.6503, 0.703 ) }
    dend_14 { pt3dadd( 522.14, 354.718, 49.3685, 0.5784 ) }
    dend_14 { pt3dadd( 523.007, 354.027, 50.0237, 0.4648 ) }
    dend_14 { pt3dadd( 523.852, 353.304, 50.6685, 0.3532 ) }
    dend_14 { pt3dadd( 524.908, 352.99, 51.2803, 0.3288 ) }
    dend_14 { pt3dadd( 525.997, 352.742, 51.8868, 0.318 ) }
    dend_14 { pt3dadd( 526.965, 352.204, 52.5392, 0.368 ) }
    dend_14 { pt3dadd( 527.916, 351.629, 53.1978, 0.4258 ) }
    dend_14 { pt3dadd( 529.005, 351.352, 53.7015, 0.4704 ) }
    dend_14 { pt3dadd( 530.1, 351.088, 54.1996, 0.5144 ) }
    dend_14 { pt3dadd( 531.227, 351.035, 54.644, 0.5318 ) }
    dend_14 { pt3dadd( 532.356, 350.99, 55.0872, 0.5486 ) }
    dend_14 { pt3dadd( 533.442, 350.703, 55.6181, 0.423 ) }
    dend_14 { pt3dadd( 534.518, 350.404, 56.17, 0.2972 ) }
    dend_14 { pt3dadd( 535.29, 349.74, 57.4507, 0.2816 ) }
    dend_14 { pt3dadd( 536.094, 349.105, 58.6886, 0.2746 ) }
    dend_14 { pt3dadd( 536.926, 348.492, 59.89, 0.2746 ) }
    dend_14 { pt3dadd( 537.961, 348.149, 60.5248, 0.2746 ) }
    dend_14 { pt3dadd( 539.06, 347.892, 60.9812, 0.2744 ) }
    dend_14 { pt3dadd( 540.028, 347.317, 61.1724, 0.2744 ) }
    dend_14 { pt3dadd( 540.958, 346.653, 61.2884, 0.2742 ) }
    dend_14 { pt3dadd( 541.954, 346.094, 61.3155, 0.2738 ) }
    dend_14 { pt3dadd( 542.968, 345.565, 61.3194, 0.2732 ) }
    dend_14 { pt3dadd( 543.887, 344.89, 61.32, 0.2716 ) }
    dend_14 { pt3dadd( 544.788, 344.183, 61.32, 0.2696 ) }
    dend_14 { pt3dadd( 545.635, 343.415, 61.32, 0.263 ) }
    dend_14 { pt3dadd( 546.477, 342.642, 61.32, 0.256 ) }
    dend_14 { pt3dadd( 547.341, 341.89, 61.32, 0.2426 ) }
    dend_14 { pt3dadd( 548.205, 341.141, 61.32, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 45/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 517.546, 384.486, 26.347, 0.8992 ) }
    dend_13 { pt3dadd( 517.848, 383.024, 26.6497, 0.8346 ) }
    dend_13 { pt3dadd( 518.2, 381.946, 26.8717, 0.8074 ) }
    dend_13 { pt3dadd( 518.841, 381.002, 27.0823, 0.7224 ) }
    dend_13 { pt3dadd( 519.367, 380.008, 27.328, 0.6558 ) }
    dend_13 { pt3dadd( 519.648, 378.906, 27.6485, 0.6282 ) }
    dend_13 { pt3dadd( 520.041, 377.854, 27.9655, 0.6084 ) }
    dend_13 { pt3dadd( 520.656, 376.899, 28.2752, 0.6038 ) }
    dend_13 { pt3dadd( 521.249, 375.926, 28.5331, 0.6138 ) }
    dend_13 { pt3dadd( 521.794, 374.923, 28.6947, 0.6514 ) }
    dend_13 { pt3dadd( 522.42, 373.978, 28.9509, 0.6342 ) }
    dend_13 { pt3dadd( 523.147, 373.109, 29.3306, 0.5456 ) }
    dend_13 { pt3dadd( 523.854, 372.226, 29.7489, 0.4752 ) }
    dend_13 { pt3dadd( 524.537, 371.328, 30.2103, 0.425 ) }
    dend_13 { pt3dadd( 525.118, 370.361, 30.4746, 0.425 ) }
    dend_13 { pt3dadd( 525.591, 369.319, 30.5304, 0.4776 ) }
    dend_13 { pt3dadd( 526.081, 368.286, 30.6166, 0.561 ) }
    dend_13 { pt3dadd( 526.586, 367.261, 30.7317, 0.6732 ) }
    dend_13 { pt3dadd( 527.09, 366.234, 30.7815, 0.7058 ) }
    dend_13 { pt3dadd( 527.593, 365.207, 30.7734, 0.6678 ) }
    dend_13 { pt3dadd( 527.992, 364.14, 30.7222, 0.6524 ) }
    dend_13 { pt3dadd( 528.31, 363.042, 30.6382, 0.6546 ) }
    dend_13 { pt3dadd( 528.76, 361.997, 30.6326, 0.641 ) }
    dend_13 { pt3dadd( 529.307, 360.993, 30.6846, 0.616 ) }
    dend_13 { pt3dadd( 529.765, 359.948, 30.802, 0.547 ) }
    dend_13 { pt3dadd( 530.159, 358.876, 30.9658, 0.4466 ) }
    dend_13 { pt3dadd( 530.286, 357.76, 31.1102, 0.4052 ) }
    dend_13 { pt3dadd( 530.267, 356.617, 31.2441, 0.3964 ) }
    dend_13 { pt3dadd( 530.347, 355.479, 31.3068, 0.4078 ) }
    dend_13 { pt3dadd( 530.482, 354.343, 31.3312, 0.4304 ) }
    dend_13 { pt3dadd( 530.705, 353.223, 31.302, 0.5108 ) }
    dend_13 { pt3dadd( 530.975, 352.111, 31.2446, 0.6222 ) }
    dend_13 { pt3dadd( 531.213, 350.992, 31.2441, 0.6202 ) }
    dend_13 { pt3dadd( 531.434, 349.87, 31.2715, 0.5626 ) }
    dend_13 { pt3dadd( 531.886, 348.833, 31.3034, 0.5052 ) }
    dend_13 { pt3dadd( 532.447, 347.837, 31.337, 0.4482 ) }
    dend_13 { pt3dadd( 533.041, 346.858, 31.3482, 0.3774 ) }
    dend_13 { pt3dadd( 533.646, 345.888, 31.3508, 0.3014 ) }
    dend_13 { pt3dadd( 534.329, 344.971, 31.3583, 0.2826 ) }
    dend_13 { pt3dadd( 535.028, 344.066, 31.3673, 0.276 ) }
    dend_13 { pt3dadd( 535.733, 343.164, 31.3858, 0.2754 ) }
    dend_13 { pt3dadd( 536.438, 342.263, 31.4062, 0.2758 ) }
    dend_13 { pt3dadd( 537.107, 341.336, 31.4322, 0.2774 ) }
    dend_13 { pt3dadd( 537.771, 340.405, 31.4594, 0.279 ) }
    dend_13 { pt3dadd( 538.285, 339.385, 31.5073, 0.2844 ) }
    dend_13 { pt3dadd( 538.781, 338.354, 31.5574, 0.29 ) }
    dend_13 { pt3dadd( 539.341, 337.358, 31.6445, 0.3084 ) }
    dend_13 { pt3dadd( 539.909, 336.365, 31.7355, 0.3282 ) }
    dend_13 { pt3dadd( 540.301, 335.296, 31.9659, 0.3758 ) }
    dend_13 { pt3dadd( 540.678, 334.221, 32.2084, 0.426 ) }
    dend_13 { pt3dadd( 540.871, 333.096, 32.396, 0.3716 ) }
    dend_13 { pt3dadd( 541.052, 331.969, 32.5808, 0.3118 ) }
    dend_13 { pt3dadd( 541.25, 330.842, 32.6603, 0.2928 ) }
    dend_13 { pt3dadd( 541.448, 329.717, 32.7373, 0.275 ) }
    dend_13 { pt3dadd( 541.623, 328.586, 32.746, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_13 { pt3dadd( 541.798, 327.455, 32.7533, 0.2748 ) }
    dend_13 { pt3dadd( 541.856, 326.313, 32.7505, 0.2748 ) }
    dend_13 { pt3dadd( 541.912, 325.171, 32.7474, 0.275 ) }
    dend_13 { pt3dadd( 542.11, 324.044, 32.7412, 0.2754 ) }
    dend_13 { pt3dadd( 542.311, 322.918, 32.7351, 0.2758 ) }
    dend_13 { pt3dadd( 542.669, 321.831, 32.7228, 0.2776 ) }
    dend_13 { pt3dadd( 543.029, 320.746, 32.7102, 0.2794 ) }
    dend_13 { pt3dadd( 543.045, 319.603, 32.6861, 0.2852 ) }
    dend_13 { pt3dadd( 543.057, 318.459, 32.662, 0.291 ) }
    dend_13 { pt3dadd( 543.057, 317.315, 32.6208, 0.31 ) }
    dend_13 { pt3dadd( 543.057, 316.171, 32.5794, 0.329 ) }
    dend_13 { pt3dadd( 543.225, 315.04, 32.4708, 0.3678 ) }
    dend_13 { pt3dadd( 543.395, 313.91, 32.3616, 0.4066 ) }
    dend_13 { pt3dadd( 543.341, 312.767, 32.2806, 0.318 ) }
    dend_13 { pt3dadd( 543.286, 311.626, 32.2, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 15/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 528.752, 387.562, 15.5633, 0.7044 ) }
    dend_11 { pt3dadd( 529.495, 387.687, 14.8511, 0.7622 ) }
    dend_11 { pt3dadd( 530.567, 387.678, 13.8785, 0.7454 ) }
    dend_11 { pt3dadd( 531.545, 387.371, 12.9629, 0.7344 ) }
    dend_11 { pt3dadd( 532.408, 386.704, 12.1165, 0.7304 ) }
    dend_11 { pt3dadd( 533.381, 386.342, 11.2942, 0.7562 ) }
    dend_11 { pt3dadd( 534.478, 386.325, 10.4993, 0.8154 ) }
    dend_11 { pt3dadd( 535.596, 386.377, 10.0488, 0.8744 ) }
    dend_11 { pt3dadd( 536.733, 386.488, 9.9034, 0.9332 ) }
    dend_11 { pt3dadd( 537.873, 386.561, 9.808, 0.9058 ) }
    dend_11 { pt3dadd( 539.016, 386.603, 9.7538, 0.8072 ) }
    dend_11 { pt3dadd( 540.158, 386.635, 9.6034, 0.8008 ) }
    dend_11 { pt3dadd( 541.297, 386.661, 9.3782, 0.866 ) }
    dend_11 { pt3dadd( 542.439, 386.643, 9.2289, 0.8038 ) }
    dend_11 { pt3dadd( 543.581, 386.591, 9.1382, 0.6434 ) }
    dend_11 { pt3dadd( 544.695, 386.377, 9.0628, 0.5926 ) }
    dend_11 { pt3dadd( 545.787, 386.038, 8.9988, 0.6244 ) }
    dend_11 { pt3dadd( 546.898, 385.774, 8.997, 0.653 ) }
    dend_11 { pt3dadd( 548.023, 385.562, 9.0403, 0.6792 ) }
    dend_11 { pt3dadd( 549.133, 385.292, 9.1025, 0.7072 ) }
    dend_11 { pt3dadd( 550.232, 384.979, 9.1785, 0.7366 ) }
    dend_11 { pt3dadd( 551.357, 384.898, 9.2361, 0.7868 ) }
    dend_11 { pt3dadd( 552.498, 384.978, 9.2809, 0.8518 ) }
    dend_11 { pt3dadd( 553.589, 385.276, 9.2616, 0.8394 ) }
    dend_11 { pt3dadd( 554.651, 385.701, 9.2056, 0.7826 ) }
    dend_11 { pt3dadd( 555.759, 385.944, 9.1112, 0.7546 ) }
    dend_11 { pt3dadd( 556.893, 386.084, 8.9953, 0.743 ) }
    dend_11 { pt3dadd( 558.026, 386.226, 8.8425, 0.753 ) }
    dend_11 { pt3dadd( 559.16, 386.368, 8.671, 0.7738 ) }
    dend_11 { pt3dadd( 559.826, 387.139, 8.3754, 0.7396 ) }
    dend_11 { pt3dadd( 560.298, 388.172, 8.0281, 0.6824 ) }
    dend_11 { pt3dadd( 560.038, 389.279, 7.7576, 0.6842 ) }
    dend_11 { pt3dadd( 559.775, 390.387, 7.4875, 0.6864 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 48/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 528.752, 387.562, 15.5633, 0.7044 ) }
    dend_8 { pt3dadd( 529.404, 387.23, 15.4194, 0.9498 ) }
    dend_8 { pt3dadd( 529.728, 386.258, 14.6584, 0.9348 ) }
    dend_8 { pt3dadd( 529.901, 385.185, 13.7803, 0.833 ) }
    dend_8 { pt3dadd( 529.343, 384.262, 12.941, 0.7838 ) }
    dend_8 { pt3dadd( 528.75, 383.344, 12.1036, 0.7372 ) }
    dend_8 { pt3dadd( 528.457, 382.293, 11.2717, 0.6988 ) }
    dend_8 { pt3dadd( 528.169, 381.239, 10.44, 0.6606 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 56/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 544.901, 392.557, 25.9622, 0.6482 ) }
    dend_5 { pt3dadd( 545.38, 392.911, 27.1906, 0.4748 ) }
    dend_5 { pt3dadd( 546.161, 393.557, 28.4682, 0.4236 ) }
    dend_5 { pt3dadd( 546.953, 394.222, 29.6596, 0.406 ) }
    dend_5 { pt3dadd( 547.132, 395.17, 31.0419, 0.4528 ) }
    dend_5 { pt3dadd( 547.282, 396.024, 32.5052, 0.5096 ) }
    dend_5 { pt3dadd( 547.935, 395.579, 34.5106, 0.5814 ) }
    dend_5 { pt3dadd( 548.063, 394.536, 35.6129, 0.584 ) }
    dend_5 { pt3dadd( 548.085, 393.562, 36.8166, 0.5864 ) }
    dend_5 { pt3dadd( 547.399, 393.065, 38.6968, 0.5884 ) }
    dend_5 { pt3dadd( 547.382, 392.626, 40.1719, 0.5754 ) }
    dend_5 { pt3dadd( 548.419, 392.283, 41.0091, 0.5388 ) }
    dend_5 { pt3dadd( 549.468, 392.088, 41.909, 0.5348 ) }
    dend_5 { pt3dadd( 550.535, 392.124, 42.908, 0.5828 ) }
    dend_5 { pt3dadd( 551.469, 391.786, 43.7788, 0.5766 ) }
    dend_5 { pt3dadd( 552.239, 390.991, 44.4934, 0.505 ) }
    dend_5 { pt3dadd( 553.01, 390.234, 45.3855, 0.4356 ) }
    dend_5 { pt3dadd( 553.784, 389.524, 46.4937, 0.369 ) }
    dend_5 { pt3dadd( 554.711, 389.114, 47.4855, 0.3172 ) }
    dend_5 { pt3dadd( 555.793, 389.008, 48.3602, 0.2802 ) }
    dend_5 { pt3dadd( 556.685, 389.293, 49.5468, 0.2576 ) }
    dend_5 { pt3dadd( 557.397, 389.951, 51.0334, 0.249 ) }
    dend_5 { pt3dadd( 556.699, 390.74, 52.0579, 0.239 ) }
    dend_5 { pt3dadd( 555.985, 391.532, 53.0774, 0.2288 ) }
    dend_5 { pt3dadd( 555.453, 392.162, 55.0186, 0.2288 ) }
    dend_5 { pt3dadd( 554.921, 392.791, 56.9601, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 82/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 544.901, 392.557, 25.9622, 0.6482 ) }
    dend_4 { pt3dadd( 545.607, 391.957, 25.9845, 0.6572 ) }
    dend_4 { pt3dadd( 546.326, 391.082, 25.9589, 0.6552 ) }
    dend_4 { pt3dadd( 546.95, 390.125, 25.9006, 0.645 ) }
    dend_4 { pt3dadd( 547.737, 389.309, 25.9121, 0.5746 ) }
    dend_4 { pt3dadd( 548.612, 388.572, 25.9615, 0.4716 ) }
    dend_4 { pt3dadd( 549.586, 387.99, 26.0659, 0.5018 ) }
    dend_4 { pt3dadd( 550.613, 387.489, 26.1993, 0.6024 ) }
    dend_4 { pt3dadd( 551.523, 386.813, 26.2675, 0.5838 ) }
    dend_4 { pt3dadd( 552.377, 386.052, 26.3032, 0.5056 ) }
    dend_4 { pt3dadd( 553.383, 385.546, 26.2378, 0.4992 ) }
    dend_4 { pt3dadd( 554.459, 385.163, 26.1246, 0.5268 ) }
    dend_4 { pt3dadd( 555.288, 384.423, 26.0041, 0.5748 ) }
    dend_4 { pt3dadd( 556.023, 383.548, 25.8807, 0.6306 ) }
    dend_4 { pt3dadd( 556.702, 382.629, 25.8038, 0.6952 ) }
    dend_4 { pt3dadd( 557.364, 381.696, 25.7433, 0.7628 ) }
    dend_4 { pt3dadd( 557.951, 380.719, 25.9243, 0.7814 ) }
    dend_4 { pt3dadd( 558.519, 379.731, 26.1696, 0.787 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_4 { pt3dadd( 559.354, 378.966, 26.2762, 0.7918 ) }
    dend_4 { pt3dadd( 560.241, 378.244, 26.3555, 0.7962 ) }
    dend_4 { pt3dadd( 561.234, 377.681, 26.3151, 0.8174 ) }
    dend_4 { pt3dadd( 562.244, 377.146, 26.2543, 0.8414 ) }
    dend_4 { pt3dadd( 563.231, 376.569, 26.1342, 0.8366 ) }
    dend_4 { pt3dadd( 564.215, 375.987, 26.0045, 0.8272 ) }
    dend_4 { pt3dadd( 565.16, 375.344, 25.9701, 0.7366 ) }
    dend_4 { pt3dadd( 566.103, 374.695, 25.945, 0.6378 ) }
    dend_4 { pt3dadd( 567.053, 374.059, 25.9972, 0.6388 ) }
    dend_4 { pt3dadd( 568.003, 373.423, 26.0529, 0.6444 ) }
    dend_4 { pt3dadd( 568.616, 372.458, 26.0929, 0.6346 ) }
    dend_4 { pt3dadd( 569.233, 371.493, 26.1387, 0.6254 ) }
    dend_4 { pt3dadd( 569.921, 370.584, 26.3169, 0.6278 ) }
    dend_4 { pt3dadd( 570.623, 369.684, 26.4903, 0.6336 ) }
    dend_4 { pt3dadd( 571.395, 368.842, 26.6347, 0.6614 ) }
    dend_4 { pt3dadd( 572.185, 368.019, 26.7891, 0.6818 ) }
    dend_4 { pt3dadd( 573.074, 367.304, 26.9988, 0.6612 ) }
    dend_4 { pt3dadd( 573.946, 366.571, 27.2109, 0.6284 ) }
    dend_4 { pt3dadd( 574.73, 365.742, 27.4342, 0.5362 ) }
    dend_4 { pt3dadd( 575.445, 364.874, 27.6964, 0.4604 ) }
    dend_4 { pt3dadd( 575.823, 363.81, 28.1459, 0.4632 ) }
    dend_4 { pt3dadd( 576.311, 362.858, 28.8453, 0.4364 ) }
    dend_4 { pt3dadd( 577.058, 362.172, 30.1412, 0.3396 ) }
    dend_4 { pt3dadd( 577.949, 361.478, 30.5589, 0.3456 ) }
    dend_4 { pt3dadd( 578.843, 360.784, 30.9532, 0.3542 ) }
    dend_4 { pt3dadd( 579.841, 360.248, 31.337, 0.3384 ) }
    dend_4 { pt3dadd( 580.779, 359.66, 31.7131, 0.3242 ) }
    dend_4 { pt3dadd( 581.134, 358.579, 32.0135, 0.3278 ) }
    dend_4 { pt3dadd( 581.501, 357.503, 32.3257, 0.3406 ) }
    dend_4 { pt3dadd( 581.96, 356.469, 32.7306, 0.4272 ) }
    dend_4 { pt3dadd( 582.415, 355.432, 33.1265, 0.5 ) }
    dend_4 { pt3dadd( 582.854, 354.386, 33.4956, 0.529 ) }
    dend_4 { pt3dadd( 583.352, 353.372, 33.845, 0.5252 ) }
    dend_4 { pt3dadd( 584.03, 352.46, 34.1348, 0.4196 ) }
    dend_4 { pt3dadd( 584.69, 351.533, 34.4011, 0.3326 ) }
    dend_4 { pt3dadd( 585.297, 350.565, 34.6016, 0.2984 ) }
    dend_4 { pt3dadd( 585.929, 349.618, 34.8057, 0.2746 ) }
    dend_4 { pt3dadd( 586.626, 348.715, 35.0196, 0.2746 ) }
    dend_4 { pt3dadd( 587.308, 347.801, 35.2461, 0.2746 ) }
    dend_4 { pt3dadd( 587.955, 346.864, 35.4992, 0.2746 ) }
    dend_4 { pt3dadd( 588.623, 345.942, 35.775, 0.2746 ) }
    dend_4 { pt3dadd( 589.326, 345.05, 36.0942, 0.2746 ) }
    dend_4 { pt3dadd( 590.059, 344.187, 36.4798, 0.2746 ) }
    dend_4 { pt3dadd( 590.841, 343.377, 36.9743, 0.2746 ) }
    dend_4 { pt3dadd( 591.705, 342.664, 37.3904, 0.2746 ) }
    dend_4 { pt3dadd( 592.681, 342.08, 37.7014, 0.2746 ) }
    dend_4 { pt3dadd( 593.6, 341.418, 37.9744, 0.2746 ) }
    dend_4 { pt3dadd( 594.442, 340.649, 38.1973, 0.2746 ) }
    dend_4 { pt3dadd( 595.328, 339.936, 38.4157, 0.2746 ) }
    dend_4 { pt3dadd( 596.272, 339.294, 38.6282, 0.2746 ) }
    dend_4 { pt3dadd( 596.993, 338.468, 38.8228, 0.2746 ) }
    dend_4 { pt3dadd( 597.449, 337.422, 38.9962, 0.2746 ) }
    dend_4 { pt3dadd( 597.768, 336.336, 39.1653, 0.2746 ) }
    dend_4 { pt3dadd( 597.928, 335.206, 39.3294, 0.2746 ) }
    dend_4 { pt3dadd( 598.213, 334.111, 39.5564, 0.2746 ) }
    dend_4 { pt3dadd( 598.641, 333.057, 39.8555, 0.2746 ) }
    dend_4 { pt3dadd( 599.138, 332.039, 40.1901, 0.2746 ) }
    dend_4 { pt3dadd( 599.706, 331.058, 40.5622, 0.2746 ) }
    dend_4 { pt3dadd( 600.272, 330.074, 40.9024, 0.2746 ) }
    dend_4 { pt3dadd( 600.836, 329.085, 41.209, 0.2746 ) }
    dend_4 { pt3dadd( 601.455, 328.138, 41.5769, 0.2746 ) }
    dend_4 { pt3dadd( 602.13, 327.231, 42.0076, 0.2746 ) }
    dend_4 { pt3dadd( 602.846, 326.365, 42.5099, 0.2746 ) }
    dend_4 { pt3dadd( 603.593, 325.53, 43.0676, 0.2746 ) }
    dend_4 { pt3dadd( 604.334, 324.708, 43.771, 0.2744 ) }
    dend_4 { pt3dadd( 605.073, 323.894, 44.5483, 0.2744 ) }
    dend_4 { pt3dadd( 606.064, 323.564, 45.2598, 0.2742 ) }
    dend_4 { pt3dadd( 607.168, 323.448, 45.9427, 0.2738 ) }
    dend_4 { pt3dadd( 608.066, 323.149, 47.3752, 0.2714 ) }
    dend_4 { pt3dadd( 608.876, 322.775, 49.1238, 0.2682 ) }
    dend_4 { pt3dadd( 610.001, 322.749, 49.6138, 0.2612 ) }
    dend_4 { pt3dadd( 611.128, 322.722, 50.1012, 0.2542 ) }
    dend_4 { pt3dadd( 612.27, 322.722, 50.2508, 0.2414 ) }
    dend_4 { pt3dadd( 613.413, 322.722, 50.4, 0.2288 ) }
    // Section: apic_25, id: apic_25, parent: apic_23 (entry count 74/100)
    apic_25 { pt3dclear() }
    apic_25 { pt3dadd( 504.581, 401.594, 39.3834, 0.627 ) }
    apic_25 { pt3dadd( 504.577, 402.85, 40.3511, 0.592 ) }
    apic_25 { pt3dadd( 504.529, 403.943, 41.1421, 0.5688 ) }
    apic_25 { pt3dadd( 504.318, 405.04, 41.7348, 0.5742 ) }
    apic_25 { pt3dadd( 504.14, 406.136, 42.3886, 0.551 ) }
    apic_25 { pt3dadd( 504.051, 407.228, 43.1956, 0.4574 ) }
    apic_25 { pt3dadd( 503.958, 408.33, 43.8964, 0.3958 ) }
    apic_25 { pt3dadd( 503.859, 409.454, 44.3573, 0.4076 ) }
    apic_25 { pt3dadd( 503.872, 410.572, 44.7922, 0.4148 ) }
    apic_25 { pt3dadd( 504.116, 411.679, 45.1727, 0.412 ) }
    apic_25 { pt3dadd( 504.276, 412.796, 45.5176, 0.4232 ) }
    apic_25 { pt3dadd( 504.279, 413.936, 45.796, 0.4604 ) }
    apic_25 { pt3dadd( 504.362, 415.06, 46.1558, 0.5366 ) }
    apic_25 { pt3dadd( 504.592, 416.161, 46.667, 0.6846 ) }
    apic_25 { pt3dadd( 504.785, 417.268, 47.1755, 0.7184 ) }
    apic_25 { pt3dadd( 504.918, 418.386, 47.6801, 0.569 ) }
    apic_25 { pt3dadd( 505.236, 419.429, 48.242, 0.4634 ) }
    apic_25 { pt3dadd( 505.853, 420.356, 48.8961, 0.4278 ) }
    apic_25 { pt3dadd( 506.228, 421.384, 49.3562, 0.4876 ) }
    apic_25 { pt3dadd( 506.365, 422.515, 49.6258, 0.6412 ) }
    apic_25 { pt3dadd( 506.509, 423.642, 49.9584, 0.6192 ) }
    apic_25 { pt3dadd( 506.658, 424.766, 50.3224, 0.51 ) }
    apic_25 { pt3dadd( 507.251, 425.573, 51.2288, 0.488 ) }
    apic_25 { pt3dadd( 508.061, 426.224, 52.3989, 0.5084 ) }
    apic_25 { pt3dadd( 508.208, 427.278, 53.247, 0.4378 ) }
    apic_25 { pt3dadd( 508.296, 428.368, 54.0672, 0.3596 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_25 { pt3dadd( 508.322, 429.485, 54.6745, 0.3168 ) }
    apic_25 { pt3dadd( 508.342, 430.603, 55.2684, 0.2762 ) }
    apic_25 { pt3dadd( 508.513, 431.698, 55.956, 0.2736 ) }
    apic_25 { pt3dadd( 508.69, 432.792, 56.6482, 0.2728 ) }
    apic_25 { pt3dadd( 508.804, 433.876, 57.5058, 0.2704 ) }
    apic_25 { pt3dadd( 508.918, 434.958, 58.364, 0.268 ) }
    apic_25 { pt3dadd( 509.216, 436.032, 58.9996, 0.2608 ) }
    apic_25 { pt3dadd( 509.516, 437.105, 59.6352, 0.2536 ) }
    apic_25 { pt3dadd( 509.816, 438.183, 60.2196, 0.2412 ) }
    apic_25 { pt3dadd( 510.115, 439.26, 60.804, 0.2288 ) }
    // Section: apic_24, id: apic_24, parent: apic_23 (entry count 10/100)
    apic_24 { pt3dclear() }
    apic_24 { pt3dadd( 504.581, 401.594, 39.3834, 0.627 ) }
    apic_24 { pt3dadd( 505.017, 401.618, 39.8045, 0.5698 ) }
    apic_24 { pt3dadd( 506.079, 401.678, 40.8299, 0.432 ) }
    apic_24 { pt3dadd( 507.127, 401.48, 41.4772, 0.4124 ) }
    apic_24 { pt3dadd( 508.158, 400.994, 41.7012, 0.5256 ) }
    apic_24 { pt3dadd( 509.244, 400.763, 41.8891, 0.6266 ) }
    apic_24 { pt3dadd( 510.385, 400.804, 42.0386, 0.7144 ) }
    apic_24 { pt3dadd( 511.521, 400.908, 42.1092, 0.76 ) }
    apic_24 { pt3dadd( 512.653, 401.076, 42.0991, 0.7626 ) }
    apic_24 { pt3dadd( 513.79, 401.198, 42.0638, 0.6672 ) }
    apic_24 { pt3dadd( 514.93, 401.277, 42.0048, 0.4784 ) }
    apic_24 { pt3dadd( 516.07, 401.255, 42.0423, 0.3868 ) }
    apic_24 { pt3dadd( 517.207, 401.14, 42.1658, 0.382 ) }
    apic_24 { pt3dadd( 518.27, 400.8, 42.4746, 0.4378 ) }
    apic_24 { pt3dadd( 519.276, 400.289, 42.926, 0.5402 ) }
    apic_24 { pt3dadd( 520.323, 399.897, 43.4518, 0.577 ) }
    apic_24 { pt3dadd( 521.4, 399.589, 44.0311, 0.5666 ) }
    apic_24 { pt3dadd( 522.513, 399.462, 44.4494, 0.5252 ) }
    apic_24 { pt3dadd( 523.65, 399.443, 44.7723, 0.4654 ) }
    apic_24 { pt3dadd( 524.771, 399.6, 44.9658, 0.4044 ) }
    apic_24 { pt3dadd( 525.884, 399.859, 45.0848, 0.3428 ) }
    apic_24 { pt3dadd( 526.768, 400.504, 45.2404, 0.3124 ) }
    apic_24 { pt3dadd( 527.532, 401.354, 45.416, 0.2984 ) }
    apic_24 { pt3dadd( 528.258, 402.202, 45.9693, 0.3232 ) }
    apic_24 { pt3dadd( 528.967, 403.049, 46.6855, 0.3646 ) }
    apic_24 { pt3dadd( 529.576, 403.968, 47.4387, 0.5446 ) }
    apic_24 { pt3dadd( 530.175, 404.892, 48.195, 0.7364 ) }
    apic_24 { pt3dadd( 531.12, 405.51, 48.6018, 0.827 ) }
    apic_24 { pt3dadd( 532.074, 406.12, 49.0, 0.9152 ) }
    // Section: apic_22, id: apic_22, parent: apic_20 (entry count 39/100)
    apic_22 { pt3dclear() }
    apic_22 { pt3dadd( 444.775, 456.113, 47.1002, 0.3236 ) }
    apic_22 { pt3dadd( 444.748, 456.123, 47.6146, 0.3176 ) }
    apic_22 { pt3dadd( 444.603, 456.179, 50.3888, 0.286 ) }
    apic_22 { pt3dadd( 443.953, 456.58, 51.8328, 0.2746 ) }
    apic_22 { pt3dadd( 443.017, 457.173, 52.528, 0.2744 ) }
    apic_22 { pt3dadd( 442.154, 457.894, 52.9091, 0.2744 ) }
    apic_22 { pt3dadd( 441.327, 458.68, 53.1342, 0.2742 ) }
    apic_22 { pt3dadd( 440.509, 459.478, 53.1888, 0.2736 ) }
    apic_22 { pt3dadd( 439.693, 460.28, 53.1983, 0.273 ) }
    apic_22 { pt3dadd( 438.895, 461.099, 53.2, 0.2712 ) }
    apic_22 { pt3dadd( 438.102, 461.924, 53.2, 0.269 ) }
    apic_22 { pt3dadd( 437.468, 462.872, 53.2, 0.2626 ) }
    apic_22 { pt3dadd( 436.868, 463.846, 53.2, 0.2554 ) }
    apic_22 { pt3dadd( 436.038, 464.625, 53.2, 0.2424 ) }
    apic_22 { pt3dadd( 435.178, 465.379, 53.2, 0.2288 ) }
    // Section: apic_21, id: apic_21, parent: apic_20 (entry count 54/100)
    apic_21 { pt3dclear() }
    apic_21 { pt3dadd( 444.775, 456.113, 47.1002, 0.3236 ) }
    apic_21 { pt3dadd( 444.189, 456.189, 47.0215, 0.3382 ) }
    apic_21 { pt3dadd( 443.092, 456.485, 46.7558, 0.3668 ) }
    apic_21 { pt3dadd( 442.004, 456.815, 46.4612, 0.3954 ) }
    apic_21 { pt3dadd( 440.872, 456.893, 46.2042, 0.3536 ) }
    apic_21 { pt3dadd( 439.733, 456.923, 45.9542, 0.2984 ) }
    apic_21 { pt3dadd( 438.595, 457.0, 45.7542, 0.3048 ) }
    apic_21 { pt3dadd( 437.458, 457.086, 45.5636, 0.3224 ) }
    apic_21 { pt3dadd( 436.358, 456.821, 45.3158, 0.389 ) }
    apic_21 { pt3dadd( 435.267, 456.496, 45.0584, 0.4638 ) }
    apic_21 { pt3dadd( 434.191, 456.121, 44.7992, 0.4858 ) }
    apic_21 { pt3dadd( 433.118, 455.74, 44.5396, 0.5006 ) }
    apic_21 { pt3dadd( 431.977, 455.77, 44.5956, 0.4084 ) }
    apic_21 { pt3dadd( 430.834, 455.812, 44.6614, 0.313 ) }
    apic_21 { pt3dadd( 429.694, 455.738, 44.8185, 0.306 ) }
    apic_21 { pt3dadd( 428.555, 455.661, 44.9778, 0.3014 ) }
    apic_21 { pt3dadd( 427.416, 455.733, 45.1265, 0.3172 ) }
    apic_21 { pt3dadd( 426.275, 455.806, 45.2752, 0.333 ) }
    apic_21 { pt3dadd( 425.178, 456.017, 45.8758, 0.2812 ) }
    apic_21 { pt3dadd( 424.081, 456.227, 46.48, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_4 (entry count 74/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 466.29, 382.59, 27.6149, 0.5068 ) }
    apic_6 { pt3dadd( 465.602, 382.229, 27.806, 0.6218 ) }
    apic_6 { pt3dadd( 464.594, 381.7, 28.0862, 0.7902 ) }
    apic_6 { pt3dadd( 463.539, 381.261, 28.033, 0.804 ) }
    apic_6 { pt3dadd( 462.481, 380.825, 27.9726, 0.8142 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 79/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 466.29, 382.59, 27.6149, 0.5068 ) }
    apic_5 { pt3dadd( 466.663, 381.172, 28.5617, 0.5362 ) }
    apic_5 { pt3dadd( 466.771, 380.086, 29.2062, 0.562 ) }
    apic_5 { pt3dadd( 466.59, 378.976, 29.7139, 0.59 ) }
    apic_5 { pt3dadd( 466.371, 377.874, 30.2184, 0.5958 ) }
    apic_5 { pt3dadd( 466.092, 376.783, 30.7171, 0.5622 ) }
    apic_5 { pt3dadd( 465.796, 375.697, 31.2018, 0.538 ) }
    apic_5 { pt3dadd( 465.474, 374.614, 31.663, 0.5294 ) }
    apic_5 { pt3dadd( 465.24, 373.514, 32.0662, 0.5312 ) }
    apic_5 { pt3dadd( 465.155, 372.38, 32.3716, 0.55 ) }
    apic_5 { pt3dadd( 464.953, 371.27, 32.6606, 0.5896 ) }
    apic_5 { pt3dadd( 464.559, 370.201, 32.9232, 0.6638 ) }
    apic_5 { pt3dadd( 464.2, 369.124, 33.2416, 0.6804 ) }
    apic_5 { pt3dadd( 463.886, 368.036, 33.6381, 0.6166 ) }
    apic_5 { pt3dadd( 463.734, 366.93, 34.0712, 0.5794 ) }
    apic_5 { pt3dadd( 463.773, 365.803, 34.5484, 0.5746 ) }
    apic_5 { pt3dadd( 463.898, 364.706, 35.2447, 0.5674 ) }
    apic_5 { pt3dadd( 464.065, 363.623, 36.0458, 0.559 ) }
    apic_5 { pt3dadd( 463.754, 362.631, 36.9359, 0.5432 ) }
    apic_5 { pt3dadd( 463.248, 361.678, 37.8627, 0.5242 ) }
    apic_5 { pt3dadd( 462.707, 360.76, 38.878, 0.483 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_5 { pt3dadd( 462.157, 359.851, 39.9165, 0.436 ) }
    apic_5 { pt3dadd( 462.133, 358.801, 40.8248, 0.407 ) }
    apic_5 { pt3dadd( 462.228, 357.719, 41.7038, 0.3818 ) }
    apic_5 { pt3dadd( 462.314, 356.616, 42.4082, 0.3166 ) }
    apic_5 { pt3dadd( 462.222, 355.527, 42.978, 0.2746 ) }
    apic_5 { pt3dadd( 461.826, 354.463, 43.3303, 0.2746 ) }
    apic_5 { pt3dadd( 461.368, 353.427, 43.6808, 0.2746 ) }
    apic_5 { pt3dadd( 460.806, 352.442, 44.0278, 0.2746 ) }
    apic_5 { pt3dadd( 460.355, 351.409, 44.3472, 0.2746 ) }
    apic_5 { pt3dadd( 460.079, 350.305, 44.6239, 0.2746 ) }
    apic_5 { pt3dadd( 459.825, 349.195, 44.8762, 0.2746 ) }
    apic_5 { pt3dadd( 459.602, 348.077, 45.092, 0.2746 ) }
    apic_5 { pt3dadd( 459.37, 346.96, 45.3186, 0.2746 ) }
    apic_5 { pt3dadd( 459.124, 345.847, 45.5605, 0.2746 ) }
    apic_5 { pt3dadd( 458.803, 344.766, 45.932, 0.2746 ) }
    apic_5 { pt3dadd( 458.379, 343.727, 46.4853, 0.2746 ) }
    apic_5 { pt3dadd( 458.071, 342.657, 47.0162, 0.2746 ) }
    apic_5 { pt3dadd( 457.924, 341.54, 47.5152, 0.2746 ) }
    apic_5 { pt3dadd( 457.765, 340.428, 48.0385, 0.2746 ) }
    apic_5 { pt3dadd( 457.592, 339.321, 48.594, 0.2746 ) }
    apic_5 { pt3dadd( 457.492, 338.2, 49.0454, 0.2746 ) }
    apic_5 { pt3dadd( 457.488, 337.064, 49.3623, 0.2746 ) }
    apic_5 { pt3dadd( 457.486, 335.926, 49.6647, 0.2746 ) }
    apic_5 { pt3dadd( 457.486, 334.788, 49.9484, 0.2746 ) }
    apic_5 { pt3dadd( 457.486, 333.653, 50.2908, 0.2746 ) }
    apic_5 { pt3dadd( 457.486, 332.522, 50.7091, 0.2748 ) }
    apic_5 { pt3dadd( 457.511, 331.388, 51.0804, 0.2752 ) }
    apic_5 { pt3dadd( 457.567, 330.253, 51.3912, 0.2756 ) }
    apic_5 { pt3dadd( 457.599, 329.116, 51.6771, 0.2764 ) }
    apic_5 { pt3dadd( 457.6, 327.977, 51.9316, 0.2782 ) }
    apic_5 { pt3dadd( 457.6, 326.836, 52.1648, 0.2816 ) }
    apic_5 { pt3dadd( 457.6, 325.696, 52.3709, 0.287 ) }
    apic_5 { pt3dadd( 457.6, 324.555, 52.5745, 0.298 ) }
    apic_5 { pt3dadd( 457.6, 323.413, 52.7747, 0.3166 ) }
    apic_5 { pt3dadd( 457.6, 322.274, 53.004, 0.3556 ) }
    apic_5 { pt3dadd( 457.6, 321.134, 53.2714, 0.4212 ) }
    apic_5 { pt3dadd( 457.517, 320.035, 53.8628, 0.4894 ) }
    apic_5 { pt3dadd( 457.325, 318.984, 54.8663, 0.5608 ) }
    apic_5 { pt3dadd( 457.067, 318.008, 56.142, 0.5376 ) }
    apic_5 { pt3dadd( 456.756, 317.092, 57.6341, 0.4388 ) }
    apic_5 { pt3dadd( 456.583, 316.005, 58.1697, 0.4334 ) }
    apic_5 { pt3dadd( 456.445, 314.876, 58.4654, 0.4512 ) }
    apic_5 { pt3dadd( 456.441, 313.734, 58.424, 0.3832 ) }
    apic_5 { pt3dadd( 456.455, 312.591, 58.3383, 0.3038 ) }
    apic_5 { pt3dadd( 456.302, 311.47, 57.9351, 0.2938 ) }
    apic_5 { pt3dadd( 456.139, 310.351, 57.5151, 0.2872 ) }
    apic_5 { pt3dadd( 455.771, 309.287, 57.0181, 0.3094 ) }
    apic_5 { pt3dadd( 455.456, 308.228, 56.5264, 0.3388 ) }
    apic_5 { pt3dadd( 455.894, 307.183, 56.1403, 0.44 ) }
    apic_5 { pt3dadd( 456.069, 306.083, 56.1697, 0.4978 ) }
    apic_5 { pt3dadd( 456.068, 304.946, 56.4796, 0.5266 ) }
    apic_5 { pt3dadd( 456.252, 303.837, 56.8498, 0.5418 ) }
    apic_5 { pt3dadd( 456.544, 302.744, 57.2558, 0.549 ) }
    apic_5 { pt3dadd( 456.657, 301.638, 57.8441, 0.5134 ) }
    apic_5 { pt3dadd( 456.685, 300.529, 58.52, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 55/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 528.169, 381.239, 10.44, 0.6606 ) }
    dend_10 { pt3dadd( 527.846, 380.708, 10.2476, 0.7212 ) }
    dend_10 { pt3dadd( 527.255, 379.739, 9.896, 0.8322 ) }
    dend_10 { pt3dadd( 526.597, 378.81, 9.6249, 0.8634 ) }
    dend_10 { pt3dadd( 525.932, 377.886, 9.3624, 0.8862 ) }
    dend_10 { pt3dadd( 525.273, 376.977, 8.8405, 0.7426 ) }
    dend_10 { pt3dadd( 524.614, 376.068, 8.2914, 0.5816 ) }
    dend_10 { pt3dadd( 523.802, 375.297, 7.742, 0.5058 ) }
    dend_10 { pt3dadd( 522.975, 374.539, 7.1926, 0.4376 ) }
    dend_10 { pt3dadd( 522.364, 373.581, 6.9278, 0.5164 ) }
    dend_10 { pt3dadd( 521.767, 372.61, 6.6818, 0.6048 ) }
    dend_10 { pt3dadd( 521.427, 371.52, 6.5598, 0.646 ) }
    dend_10 { pt3dadd( 521.092, 370.427, 6.44, 0.6864 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 68/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 528.169, 381.239, 10.44, 0.6606 ) }
    dend_9 { pt3dadd( 529.42, 380.69, 9.5974, 0.6668 ) }
    dend_9 { pt3dadd( 529.933, 379.844, 9.1916, 0.628 ) }
    dend_9 { pt3dadd( 530.09, 378.713, 8.9819, 0.5584 ) }
    dend_9 { pt3dadd( 530.154, 377.615, 9.5699, 0.603 ) }
    dend_9 { pt3dadd( 530.185, 376.526, 10.4272, 0.6864 ) }
    // Section: apic_16, id: apic_16, parent: apic_6 (entry count 74/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 462.481, 380.825, 27.9726, 0.8142 ) }
    apic_16 { pt3dadd( 461.773, 381.411, 27.9046, 0.513 ) }
    apic_16 { pt3dadd( 460.722, 381.84, 27.6753, 0.459 ) }
    apic_16 { pt3dadd( 459.655, 382.239, 27.4322, 0.436 ) }
    apic_16 { pt3dadd( 458.83, 383.022, 27.5269, 0.4894 ) }
    apic_16 { pt3dadd( 458.021, 383.828, 27.6436, 0.548 ) }
    apic_16 { pt3dadd( 457.147, 384.565, 27.7772, 0.6152 ) }
    apic_16 { pt3dadd( 456.271, 385.298, 27.9118, 0.6828 ) }
    apic_16 { pt3dadd( 455.334, 385.954, 27.9286, 0.5942 ) }
    apic_16 { pt3dadd( 454.392, 386.604, 27.9392, 0.4972 ) }
    apic_16 { pt3dadd( 453.423, 387.211, 27.9692, 0.3638 ) }
    apic_16 { pt3dadd( 452.452, 387.816, 28.0, 0.2288 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 86/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 462.481, 380.825, 27.9726, 0.8142 ) }
    apic_7 { pt3dadd( 461.334, 380.031, 28.3788, 0.7828 ) }
    apic_7 { pt3dadd( 460.422, 379.352, 28.6485, 0.7626 ) }
    apic_7 { pt3dadd( 459.604, 378.552, 28.6776, 0.841 ) }
    apic_7 { pt3dadd( 458.78, 377.759, 28.7067, 0.9068 ) }
    apic_7 { pt3dadd( 457.884, 377.046, 28.7353, 0.8344 ) }
    apic_7 { pt3dadd( 456.982, 376.344, 28.7714, 0.7652 ) }
    apic_7 { pt3dadd( 456.01, 375.745, 28.8884, 0.7268 ) }
    apic_7 { pt3dadd( 455.02, 375.177, 29.0007, 0.7012 ) }
    apic_7 { pt3dadd( 453.959, 374.753, 29.0928, 0.7322 ) }
    apic_7 { pt3dadd( 452.895, 374.334, 29.188, 0.757 ) }
    apic_7 { pt3dadd( 451.825, 373.931, 29.2953, 0.7588 ) }
    apic_7 { pt3dadd( 450.807, 373.436, 29.4218, 0.7436 ) }
    apic_7 { pt3dadd( 449.914, 372.727, 29.5932, 0.6884 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_7 { pt3dadd( 448.955, 372.134, 29.7307, 0.6148 ) }
    apic_7 { pt3dadd( 447.868, 371.781, 29.8004, 0.5042 ) }
    apic_7 { pt3dadd( 446.764, 371.48, 29.7822, 0.517 ) }
    apic_7 { pt3dadd( 445.658, 371.188, 29.7483, 0.5522 ) }
    apic_7 { pt3dadd( 444.688, 370.601, 29.5887, 0.5792 ) }
    apic_7 { pt3dadd( 443.74, 369.964, 29.4078, 0.605 ) }
    apic_7 { pt3dadd( 443.388, 368.885, 29.379, 0.543 ) }
    apic_7 { pt3dadd( 443.059, 367.79, 29.3563, 0.4774 ) }
    apic_7 { pt3dadd( 442.612, 366.74, 29.5736, 0.5252 ) }
    apic_7 { pt3dadd( 442.164, 365.692, 29.7993, 0.5768 ) }
    apic_7 { pt3dadd( 441.254, 365.02, 30.1748, 0.5234 ) }
    apic_7 { pt3dadd( 440.338, 364.351, 30.5528, 0.4684 ) }
    // Section: apic_15, id: apic_15, parent: apic_7 (entry count 12/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 440.338, 364.351, 30.5528, 0.4684 ) }
    apic_15 { pt3dadd( 440.672, 363.754, 30.1372, 0.4156 ) }
    apic_15 { pt3dadd( 441.179, 362.763, 29.5621, 0.34 ) }
    apic_15 { pt3dadd( 441.522, 361.674, 29.4302, 0.309 ) }
    apic_15 { pt3dadd( 441.847, 360.58, 29.2947, 0.2862 ) }
    apic_15 { pt3dadd( 442.092, 359.463, 29.1452, 0.2976 ) }
    apic_15 { pt3dadd( 442.289, 358.345, 28.9302, 0.3116 ) }
    apic_15 { pt3dadd( 442.291, 357.217, 28.4567, 0.3356 ) }
    apic_15 { pt3dadd( 442.157, 356.124, 27.9176, 0.3436 ) }
    apic_15 { pt3dadd( 441.725, 355.101, 27.2349, 0.3172 ) }
    apic_15 { pt3dadd( 441.269, 354.094, 26.5187, 0.3106 ) }
    apic_15 { pt3dadd( 440.765, 353.12, 25.7305, 0.346 ) }
    apic_15 { pt3dadd( 440.198, 352.179, 24.9984, 0.3566 ) }
    apic_15 { pt3dadd( 439.502, 351.306, 24.3804, 0.3164 ) }
    apic_15 { pt3dadd( 438.656, 350.644, 23.7903, 0.2888 ) }
    apic_15 { pt3dadd( 437.593, 350.287, 23.2408, 0.28 ) }
    apic_15 { pt3dadd( 436.497, 350.086, 22.7925, 0.2756 ) }
    apic_15 { pt3dadd( 435.361, 350.072, 22.4662, 0.2766 ) }
    apic_15 { pt3dadd( 434.222, 350.064, 22.2005, 0.2786 ) }
    apic_15 { pt3dadd( 433.081, 350.064, 22.0068, 0.2816 ) }
    apic_15 { pt3dadd( 431.939, 350.064, 21.8385, 0.2882 ) }
    apic_15 { pt3dadd( 430.796, 350.064, 21.7002, 0.2988 ) }
    apic_15 { pt3dadd( 429.701, 350.278, 21.4948, 0.3232 ) }
    apic_15 { pt3dadd( 428.665, 350.747, 21.2099, 0.364 ) }
    apic_15 { pt3dadd( 427.651, 351.264, 20.9503, 0.4066 ) }
    apic_15 { pt3dadd( 426.659, 351.827, 20.7141, 0.4504 ) }
    apic_15 { pt3dadd( 425.625, 352.289, 20.4307, 0.4672 ) }
    apic_15 { pt3dadd( 424.552, 352.663, 20.1057, 0.4598 ) }
    apic_15 { pt3dadd( 423.438, 352.85, 19.8908, 0.4588 ) }
    apic_15 { pt3dadd( 422.297, 352.917, 19.7471, 0.4622 ) }
    apic_15 { pt3dadd( 421.16, 352.934, 19.4826, 0.4466 ) }
    apic_15 { pt3dadd( 420.024, 352.924, 19.1488, 0.4202 ) }
    apic_15 { pt3dadd( 418.906, 353.049, 18.7048, 0.47 ) }
    apic_15 { pt3dadd( 417.799, 353.249, 18.1994, 0.5622 ) }
    apic_15 { pt3dadd( 416.739, 353.041, 17.6707, 0.6276 ) }
    apic_15 { pt3dadd( 415.702, 352.608, 17.1292, 0.6782 ) }
    apic_15 { pt3dadd( 414.705, 352.098, 16.5766, 0.7154 ) }
    apic_15 { pt3dadd( 413.716, 351.569, 16.0214, 0.7496 ) }
    apic_15 { pt3dadd( 412.637, 351.306, 15.4118, 0.671 ) }
    apic_15 { pt3dadd( 411.543, 351.095, 14.7918, 0.5704 ) }
    apic_15 { pt3dadd( 410.495, 350.655, 14.6174, 0.5286 ) }
    apic_15 { pt3dadd( 409.453, 350.186, 14.5043, 0.4968 ) }
    apic_15 { pt3dadd( 408.367, 349.825, 14.4641, 0.5954 ) }
    apic_15 { pt3dadd( 407.28, 349.47, 14.4179, 0.689 ) }
    apic_15 { pt3dadd( 406.157, 349.269, 14.2145, 0.6468 ) }
    apic_15 { pt3dadd( 405.038, 349.049, 14.0489, 0.6046 ) }
    apic_15 { pt3dadd( 403.951, 348.697, 14.1619, 0.562 ) }
    apic_15 { pt3dadd( 402.863, 348.346, 14.2543, 0.528 ) }
    apic_15 { pt3dadd( 401.773, 347.999, 14.2628, 0.528 ) }
    apic_15 { pt3dadd( 400.679, 347.668, 14.1816, 0.5644 ) }
    apic_15 { pt3dadd( 399.581, 347.362, 13.9503, 0.661 ) }
    apic_15 { pt3dadd( 398.466, 347.198, 13.7692, 0.7098 ) }
    apic_15 { pt3dadd( 397.323, 347.247, 13.662, 0.688 ) }
    apic_15 { pt3dadd( 396.198, 347.404, 13.4994, 0.684 ) }
    apic_15 { pt3dadd( 395.093, 347.683, 13.2748, 0.7 ) }
    apic_15 { pt3dadd( 393.965, 347.818, 13.0469, 0.7176 ) }
    apic_15 { pt3dadd( 392.827, 347.882, 12.8174, 0.736 ) }
    apic_15 { pt3dadd( 391.688, 347.984, 12.7196, 0.6916 ) }
    apic_15 { pt3dadd( 390.55, 348.096, 12.6542, 0.6318 ) }
    apic_15 { pt3dadd( 389.579, 348.666, 13.0343, 0.4342 ) }
    apic_15 { pt3dadd( 388.617, 349.263, 13.44, 0.2288 ) }
    // Section: apic_8, id: apic_8, parent: apic_7 (entry count 73/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 440.338, 364.351, 30.5528, 0.4684 ) }
    apic_8 { pt3dadd( 439.306, 363.863, 31.1066, 0.534 ) }
    apic_8 { pt3dadd( 438.461, 363.095, 31.2808, 0.5596 ) }
    apic_8 { pt3dadd( 437.622, 362.321, 31.4446, 0.5842 ) }
    apic_8 { pt3dadd( 436.862, 361.467, 31.5106, 0.5992 ) }
    apic_8 { pt3dadd( 436.084, 360.632, 31.5745, 0.6152 ) }
    apic_8 { pt3dadd( 435.167, 359.947, 31.6221, 0.6384 ) }
    apic_8 { pt3dadd( 434.245, 359.271, 31.6719, 0.6616 ) }
    apic_8 { pt3dadd( 433.28, 358.658, 31.7397, 0.6834 ) }
    apic_8 { pt3dadd( 432.345, 358.008, 31.8016, 0.6832 ) }
    apic_8 { pt3dadd( 431.575, 357.161, 31.8301, 0.5608 ) }
    apic_8 { pt3dadd( 430.795, 356.326, 31.8713, 0.445 ) }
    apic_8 { pt3dadd( 429.956, 355.549, 31.9777, 0.3648 ) }
    apic_8 { pt3dadd( 429.102, 354.792, 32.086, 0.3062 ) }
    apic_8 { pt3dadd( 428.184, 354.11, 32.2008, 0.3314 ) }
    apic_8 { pt3dadd( 427.265, 353.432, 32.3238, 0.3648 ) }
    apic_8 { pt3dadd( 426.337, 352.765, 32.4741, 0.4258 ) }
    apic_8 { pt3dadd( 425.394, 352.121, 32.6147, 0.4952 ) }
    apic_8 { pt3dadd( 424.403, 351.551, 32.7242, 0.5922 ) }
    apic_8 { pt3dadd( 423.441, 350.94, 32.853, 0.6802 ) }
    apic_8 { pt3dadd( 422.554, 350.222, 33.0324, 0.745 ) }
    apic_8 { pt3dadd( 421.71, 349.459, 33.1349, 0.797 ) }
    apic_8 { pt3dadd( 420.979, 348.579, 33.0453, 0.8174 ) }
    apic_8 { pt3dadd( 420.169, 347.784, 32.935, 0.8626 ) }
    apic_8 { pt3dadd( 419.244, 347.115, 32.7947, 0.945 ) }
    apic_8 { pt3dadd( 418.352, 346.403, 32.7043, 0.9724 ) }
    apic_8 { pt3dadd( 417.504, 345.634, 32.6822, 0.9244 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_8 { pt3dadd( 416.63, 344.901, 32.7645, 0.9158 ) }
    apic_8 { pt3dadd( 415.72, 344.212, 32.9868, 0.9596 ) }
    apic_8 { pt3dadd( 414.881, 343.451, 33.2228, 0.9384 ) }
    apic_8 { pt3dadd( 414.129, 342.594, 33.4771, 0.8328 ) }
    apic_8 { pt3dadd( 413.294, 341.832, 33.7042, 0.7498 ) }
    apic_8 { pt3dadd( 412.35, 341.19, 33.8968, 0.6964 ) }
    apic_8 { pt3dadd( 411.386, 340.584, 34.1214, 0.6394 ) }
    apic_8 { pt3dadd( 410.396, 340.02, 34.3834, 0.5782 ) }
    apic_8 { pt3dadd( 409.431, 339.412, 34.5677, 0.5578 ) }
    apic_8 { pt3dadd( 408.481, 338.777, 34.6998, 0.5648 ) }
    apic_8 { pt3dadd( 407.479, 338.227, 34.7645, 0.5464 ) }
    apic_8 { pt3dadd( 406.467, 337.694, 34.8163, 0.5232 ) }
    apic_8 { pt3dadd( 405.465, 337.144, 34.7679, 0.5492 ) }
    apic_8 { pt3dadd( 404.462, 336.593, 34.7138, 0.578 ) }
    apic_8 { pt3dadd( 403.587, 335.865, 34.477, 0.606 ) }
    apic_8 { pt3dadd( 402.718, 335.127, 34.2308, 0.6342 ) }
    apic_8 { pt3dadd( 401.926, 334.302, 34.1768, 0.7442 ) }
    apic_8 { pt3dadd( 401.136, 333.475, 34.1278, 0.8564 ) }
    apic_8 { pt3dadd( 400.22, 332.795, 34.3454, 0.8438 ) }
    apic_8 { pt3dadd( 399.31, 332.109, 34.5523, 0.8202 ) }
    apic_8 { pt3dadd( 398.463, 331.341, 34.6296, 0.7226 ) }
    apic_8 { pt3dadd( 397.605, 330.586, 34.699, 0.646 ) }
    apic_8 { pt3dadd( 396.665, 329.935, 34.711, 0.7242 ) }
    apic_8 { pt3dadd( 395.715, 329.298, 34.6956, 0.7878 ) }
    apic_8 { pt3dadd( 394.721, 328.735, 34.5316, 0.7716 ) }
    apic_8 { pt3dadd( 393.765, 328.127, 34.3829, 0.7444 ) }
    apic_8 { pt3dadd( 392.997, 327.279, 34.3129, 0.6618 ) }
    apic_8 { pt3dadd( 392.167, 326.516, 34.2742, 0.632 ) }
    apic_8 { pt3dadd( 391.127, 326.04, 34.3414, 0.7824 ) }
    apic_8 { pt3dadd( 390.117, 325.514, 34.4005, 0.8958 ) }
    apic_8 { pt3dadd( 389.197, 324.833, 34.435, 0.8958 ) }
    apic_8 { pt3dadd( 388.277, 324.154, 34.4179, 0.8732 ) }
    apic_8 { pt3dadd( 387.356, 323.48, 34.2591, 0.7888 ) }
    apic_8 { pt3dadd( 386.483, 322.751, 34.1516, 0.7384 ) }
    apic_8 { pt3dadd( 385.742, 321.88, 34.1813, 0.779 ) }
    apic_8 { pt3dadd( 384.985, 321.026, 34.2924, 0.8116 ) }
    apic_8 { pt3dadd( 384.187, 320.216, 34.6083, 0.824 ) }
    apic_8 { pt3dadd( 383.341, 319.468, 34.9376, 0.8368 ) }
    apic_8 { pt3dadd( 382.383, 318.859, 35.2971, 0.8504 ) }
    apic_8 { pt3dadd( 381.392, 318.311, 35.5807, 0.875 ) }
    apic_8 { pt3dadd( 380.33, 317.891, 35.7084, 0.9224 ) }
    apic_8 { pt3dadd( 379.48, 317.229, 35.7613, 0.986 ) }
    apic_8 { pt3dadd( 378.933, 316.224, 35.7081, 1.0724 ) }
    apic_8 { pt3dadd( 378.296, 315.283, 35.6782, 1.0748 ) }
    apic_8 { pt3dadd( 377.536, 314.428, 35.679, 0.9638 ) }
    apic_8 { pt3dadd( 376.75, 313.599, 35.7736, 0.8768 ) }
    apic_8 { pt3dadd( 375.934, 312.801, 35.9713, 0.8166 ) }
    apic_8 { pt3dadd( 375.106, 312.015, 36.0976, 0.7948 ) }
    apic_8 { pt3dadd( 374.267, 311.238, 36.1648, 0.805 ) }
    apic_8 { pt3dadd( 373.422, 310.467, 36.1542, 0.7488 ) }
    apic_8 { pt3dadd( 372.572, 309.701, 36.0822, 0.6402 ) }
    apic_8 { pt3dadd( 371.76, 308.899, 36.146, 0.64 ) }
    apic_8 { pt3dadd( 370.974, 308.07, 36.3138, 0.7226 ) }
    apic_8 { pt3dadd( 370.075, 307.385, 36.4921, 0.8374 ) }
    apic_8 { pt3dadd( 369.091, 306.807, 36.6783, 0.976 ) }
    apic_8 { pt3dadd( 368.191, 306.117, 36.9065, 1.0784 ) }
    apic_8 { pt3dadd( 367.352, 305.346, 37.1652, 1.1552 ) }
    apic_8 { pt3dadd( 366.457, 304.642, 37.3458, 1.0256 ) }
    apic_8 { pt3dadd( 365.531, 303.972, 37.4842, 0.7834 ) }
    apic_8 { pt3dadd( 364.618, 303.282, 37.5533, 0.6682 ) }
    apic_8 { pt3dadd( 363.712, 302.585, 37.5883, 0.6148 ) }
    apic_8 { pt3dadd( 362.812, 301.881, 37.6961, 0.5094 ) }
    apic_8 { pt3dadd( 361.914, 301.175, 37.8347, 0.3816 ) }
    apic_8 { pt3dadd( 361.042, 300.435, 37.8686, 0.4046 ) }
    apic_8 { pt3dadd( 360.179, 299.683, 37.8692, 0.476 ) }
    apic_8 { pt3dadd( 359.229, 299.06, 38.0708, 0.6804 ) }
    apic_8 { pt3dadd( 358.25, 298.475, 38.3328, 0.9246 ) }
    apic_8 { pt3dadd( 357.372, 297.768, 38.7551, 1.0122 ) }
    apic_8 { pt3dadd( 356.513, 297.036, 39.212, 1.0658 ) }
    apic_8 { pt3dadd( 355.613, 296.33, 39.244, 1.004 ) }
    apic_8 { pt3dadd( 354.711, 295.628, 39.2384, 0.932 ) }
    apic_8 { pt3dadd( 353.885, 294.837, 39.2496, 0.9336 ) }
    apic_8 { pt3dadd( 353.061, 294.043, 39.2636, 0.94 ) }
    apic_8 { pt3dadd( 352.025, 293.564, 39.3758, 0.8406 ) }
    apic_8 { pt3dadd( 350.992, 293.076, 39.4979, 0.7416 ) }
    apic_8 { pt3dadd( 350.047, 292.443, 39.8132, 0.6528 ) }
    apic_8 { pt3dadd( 349.103, 291.809, 40.1218, 0.5688 ) }
    apic_8 { pt3dadd( 348.177, 291.141, 40.3256, 0.5596 ) }
    apic_8 { pt3dadd( 347.247, 290.482, 40.5177, 0.5638 ) }
    apic_8 { pt3dadd( 346.261, 289.903, 40.5922, 0.7024 ) }
    apic_8 { pt3dadd( 345.279, 289.321, 40.705, 0.8296 ) }
    apic_8 { pt3dadd( 344.311, 288.725, 41.0309, 0.8932 ) }
    apic_8 { pt3dadd( 343.358, 288.107, 41.3176, 0.9428 ) }
    apic_8 { pt3dadd( 342.48, 287.374, 41.4064, 0.9228 ) }
    apic_8 { pt3dadd( 341.585, 286.666, 41.4918, 0.931 ) }
    apic_8 { pt3dadd( 340.62, 286.05, 41.566, 1.0412 ) }
    apic_8 { pt3dadd( 339.71, 285.375, 41.6693, 1.1156 ) }
    apic_8 { pt3dadd( 338.964, 284.512, 41.8622, 1.08 ) }
    apic_8 { pt3dadd( 338.134, 283.751, 42.068, 1.0254 ) }
    apic_8 { pt3dadd( 337.134, 283.204, 42.2996, 0.9322 ) }
    apic_8 { pt3dadd( 336.147, 282.632, 42.4631, 0.8776 ) }
    apic_8 { pt3dadd( 335.187, 282.01, 42.4914, 0.8994 ) }
    apic_8 { pt3dadd( 334.229, 281.391, 42.6364, 0.9262 ) }
    apic_8 { pt3dadd( 333.273, 280.78, 43.0035, 0.9626 ) }
    apic_8 { pt3dadd( 332.385, 280.082, 43.3107, 0.941 ) }
    apic_8 { pt3dadd( 331.586, 279.27, 43.5383, 0.8426 ) }
    apic_8 { pt3dadd( 330.775, 278.466, 43.6106, 0.795 ) }
    apic_8 { pt3dadd( 329.951, 277.673, 43.5047, 0.8054 ) }
    apic_8 { pt3dadd( 329.098, 276.913, 43.4302, 0.845 ) }
    apic_8 { pt3dadd( 328.216, 276.185, 43.3868, 0.914 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    apic_8 { pt3dadd( 327.354, 275.435, 43.2491, 0.8358 ) }
    apic_8 { pt3dadd( 326.514, 274.665, 43.0186, 0.6132 ) }
    apic_8 { pt3dadd( 325.66, 273.907, 42.8792, 0.4942 ) }
    apic_8 { pt3dadd( 324.797, 273.158, 42.8201, 0.4668 ) }
    apic_8 { pt3dadd( 323.912, 272.438, 42.95, 0.525 ) }
    apic_8 { pt3dadd( 323.008, 271.746, 43.2432, 0.6574 ) }
    apic_8 { pt3dadd( 322.098, 271.06, 43.4193, 0.7748 ) }
    apic_8 { pt3dadd( 321.179, 270.379, 43.4988, 0.8798 ) }
    apic_8 { pt3dadd( 320.282, 269.669, 43.547, 0.975 ) }
    apic_8 { pt3dadd( 319.402, 268.937, 43.5725, 1.0628 ) }
    apic_8 { pt3dadd( 318.444, 268.324, 43.6033, 1.005 ) }
    apic_8 { pt3dadd( 317.435, 267.786, 43.6374, 0.8536 ) }
    apic_8 { pt3dadd( 316.387, 267.337, 43.7573, 0.9202 ) }
    apic_8 { pt3dadd( 315.317, 266.934, 43.9233, 1.1042 ) }
    apic_8 { pt3dadd( 314.245, 266.554, 44.2061, 1.1288 ) }
    apic_8 { pt3dadd( 313.171, 266.182, 44.5267, 1.102 ) }
    apic_8 { pt3dadd( 312.177, 265.626, 44.5371, 0.9524 ) }
    apic_8 { pt3dadd( 311.199, 265.034, 44.483, 0.7772 ) }
    apic_8 { pt3dadd( 310.175, 264.527, 44.3372, 0.757 ) }
    apic_8 { pt3dadd( 309.149, 264.025, 44.1865, 0.7444 ) }
    apic_8 { pt3dadd( 308.128, 263.515, 43.9821, 0.7698 ) }
    apic_8 { pt3dadd( 307.109, 263.004, 43.7766, 0.7962 ) }
    apic_8 { pt3dadd( 306.068, 262.529, 43.738, 0.7506 ) }
    apic_8 { pt3dadd( 305.028, 262.053, 43.7018, 0.704 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 24/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 305.028, 262.053, 43.7018, 0.704 ) }
    apic_10 { pt3dadd( 304.793, 261.481, 44.5203, 0.5312 ) }
    apic_10 { pt3dadd( 304.115, 260.627, 45.136, 0.472 ) }
    apic_10 { pt3dadd( 303.343, 259.797, 45.5221, 0.4842 ) }
    apic_10 { pt3dadd( 302.879, 258.768, 45.6196, 0.4842 ) }
    apic_10 { pt3dadd( 302.475, 257.7, 45.6425, 0.4806 ) }
    apic_10 { pt3dadd( 301.793, 256.786, 45.4633, 0.45 ) }
    apic_10 { pt3dadd( 301.112, 255.868, 45.297, 0.4234 ) }
    apic_10 { pt3dadd( 300.474, 254.919, 45.3754, 0.4724 ) }
    apic_10 { pt3dadd( 299.826, 253.978, 45.4586, 0.5252 ) }
    apic_10 { pt3dadd( 299.046, 253.143, 45.6016, 0.6232 ) }
    apic_10 { pt3dadd( 298.256, 252.32, 45.7215, 0.716 ) }
    apic_10 { pt3dadd( 297.347, 251.626, 45.5966, 0.7532 ) }
    apic_10 { pt3dadd( 296.425, 250.955, 45.5011, 0.7942 ) }
    apic_10 { pt3dadd( 295.407, 250.436, 45.6086, 0.8608 ) }
    apic_10 { pt3dadd( 294.409, 249.885, 45.6963, 0.8992 ) }
    apic_10 { pt3dadd( 293.54, 249.141, 45.6708, 0.7762 ) }
    apic_10 { pt3dadd( 292.657, 248.416, 45.6341, 0.6662 ) }
    apic_10 { pt3dadd( 291.713, 247.771, 45.5434, 0.6208 ) }
    apic_10 { pt3dadd( 290.728, 247.217, 45.4961, 0.5924 ) }
    apic_10 { pt3dadd( 289.614, 246.961, 45.5904, 0.62 ) }
    apic_10 { pt3dadd( 288.544, 246.606, 45.6772, 0.6332 ) }
    apic_10 { pt3dadd( 287.614, 245.941, 45.74, 0.6004 ) }
    apic_10 { pt3dadd( 286.708, 245.245, 45.7635, 0.5728 ) }
    apic_10 { pt3dadd( 285.87, 244.468, 45.6714, 0.5602 ) }
    apic_10 { pt3dadd( 284.988, 243.747, 45.6644, 0.5566 ) }
    apic_10 { pt3dadd( 284.022, 243.138, 45.8184, 0.5706 ) }
    apic_10 { pt3dadd( 283.147, 242.423, 45.9701, 0.5566 ) }
    apic_10 { pt3dadd( 282.401, 241.558, 46.1182, 0.5032 ) }
    apic_10 { pt3dadd( 281.564, 240.798, 46.2638, 0.4832 ) }
    apic_10 { pt3dadd( 280.598, 240.187, 46.4061, 0.5102 ) }
    apic_10 { pt3dadd( 279.589, 239.66, 46.4654, 0.5584 ) }
    apic_10 { pt3dadd( 278.526, 239.237, 46.4192, 0.633 ) }
    apic_10 { pt3dadd( 277.517, 238.713, 46.419, 0.6936 ) }
    apic_10 { pt3dadd( 276.576, 238.064, 46.4755, 0.7364 ) }
    apic_10 { pt3dadd( 275.576, 237.529, 46.6071, 0.7748 ) }
    apic_10 { pt3dadd( 274.509, 237.126, 46.8269, 0.8076 ) }
    apic_10 { pt3dadd( 273.461, 236.68, 47.0462, 0.8516 ) }
    apic_10 { pt3dadd( 272.432, 236.187, 47.2646, 0.9074 ) }
    apic_10 { pt3dadd( 271.413, 235.674, 47.4306, 0.905 ) }
    apic_10 { pt3dadd( 270.402, 235.139, 47.5415, 0.8402 ) }
    apic_10 { pt3dadd( 269.381, 234.623, 47.6008, 0.7516 ) }
    apic_10 { pt3dadd( 268.352, 234.126, 47.6104, 0.6394 ) }
    apic_10 { pt3dadd( 267.314, 233.645, 47.6742, 0.6318 ) }
    apic_10 { pt3dadd( 266.272, 233.176, 47.7856, 0.7156 ) }
    apic_10 { pt3dadd( 265.266, 232.637, 47.9066, 0.723 ) }
    apic_10 { pt3dadd( 264.292, 232.041, 48.0351, 0.6686 ) }
    apic_10 { pt3dadd( 263.295, 231.483, 48.1555, 0.6318 ) }
    apic_10 { pt3dadd( 262.281, 230.953, 48.27, 0.6078 ) }
    apic_10 { pt3dadd( 261.33, 230.334, 48.5201, 0.5556 ) }
    apic_10 { pt3dadd( 260.418, 229.657, 48.8219, 0.4918 ) }
    apic_10 { pt3dadd( 259.524, 228.961, 48.431, 0.5574 ) }
    apic_10 { pt3dadd( 258.628, 228.268, 48.057, 0.6312 ) }
    apic_10 { pt3dadd( 257.7, 227.601, 47.9158, 0.8112 ) }
    apic_10 { pt3dadd( 256.773, 226.933, 47.7848, 0.9752 ) }
    apic_10 { pt3dadd( 255.851, 226.256, 47.7277, 1.0242 ) }
    apic_10 { pt3dadd( 254.963, 225.542, 47.6395, 1.0194 ) }
    apic_10 { pt3dadd( 254.192, 224.7, 47.4454, 0.8306 ) }
    apic_10 { pt3dadd( 253.375, 223.909, 47.3144, 0.7066 ) }
    apic_10 { pt3dadd( 252.451, 223.234, 47.3262, 0.7302 ) }
    apic_10 { pt3dadd( 251.501, 222.604, 47.4163, 0.7714 ) }
    apic_10 { pt3dadd( 250.497, 222.065, 47.6711, 0.849 ) }
    apic_10 { pt3dadd( 249.535, 221.466, 47.9408, 0.8958 ) }
    apic_10 { pt3dadd( 248.643, 220.759, 48.2364, 0.8888 ) }
    apic_10 { pt3dadd( 247.741, 220.064, 48.5139, 0.8754 ) }
    apic_10 { pt3dadd( 246.824, 219.389, 48.7614, 0.8514 ) }
    apic_10 { pt3dadd( 245.971, 218.639, 48.8992, 0.8094 ) }
    apic_10 { pt3dadd( 245.206, 217.788, 48.8928, 0.744 ) }
    apic_10 { pt3dadd( 244.37, 217.014, 48.8726, 0.7146 ) }
    apic_10 { pt3dadd( 243.458, 216.324, 48.8376, 0.7236 ) }
    apic_10 { pt3dadd( 242.506, 215.693, 48.8821, 0.7838 ) }
    apic_10 { pt3dadd( 241.522, 215.112, 48.991, 0.8858 ) }
    apic_10 { pt3dadd( 240.571, 214.494, 49.2957, 0.804 ) }
    apic_10 { pt3dadd( 239.637, 213.855, 49.7132, 0.6158 ) }
    apic_10 { pt3dadd( 238.778, 213.116, 50.0654, 0.6344 ) }
    apic_10 { pt3dadd( 237.937, 212.353, 50.4022, 0.7012 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    apic_10 { pt3dadd( 237.053, 211.633, 50.5982, 0.7176 ) }
    apic_10 { pt3dadd( 236.159, 210.922, 50.7646, 0.7232 ) }
    apic_10 { pt3dadd( 235.069, 210.608, 50.9172, 0.7892 ) }
    apic_10 { pt3dadd( 233.961, 210.329, 51.0684, 0.8604 ) }
    apic_10 { pt3dadd( 232.948, 209.805, 51.2187, 0.9062 ) }
    apic_10 { pt3dadd( 231.94, 209.267, 51.3688, 0.9506 ) }
    apic_10 { pt3dadd( 230.846, 208.946, 51.5648, 0.9832 ) }
    apic_10 { pt3dadd( 229.752, 208.62, 51.7667, 1.0136 ) }
    apic_10 { pt3dadd( 228.704, 208.185, 52.1228, 0.981 ) }
    apic_10 { pt3dadd( 227.663, 207.738, 52.4695, 0.9462 ) }
    apic_10 { pt3dadd( 226.744, 207.061, 52.6459, 0.871 ) }
    apic_10 { pt3dadd( 225.803, 206.424, 52.8116, 0.801 ) }
    apic_10 { pt3dadd( 224.724, 206.047, 52.9102, 0.7632 ) }
    apic_10 { pt3dadd( 223.642, 205.678, 53.0096, 0.7344 ) }
    apic_10 { pt3dadd( 222.547, 205.348, 53.1146, 0.7508 ) }
    apic_10 { pt3dadd( 221.445, 205.049, 53.2314, 0.7644 ) }
    apic_10 { pt3dadd( 220.318, 204.861, 53.3893, 0.768 ) }
    apic_10 { pt3dadd( 219.346, 204.409, 53.7004, 0.7754 ) }
    apic_10 { pt3dadd( 218.599, 203.57, 54.2371, 0.7882 ) }
    apic_10 { pt3dadd( 217.918, 202.673, 54.6717, 0.8192 ) }
    apic_10 { pt3dadd( 217.296, 201.724, 55.0147, 0.8662 ) }
    apic_10 { pt3dadd( 216.406, 201.077, 55.3932, 0.8902 ) }
    apic_10 { pt3dadd( 215.392, 200.572, 55.7886, 0.903 ) }
    apic_10 { pt3dadd( 214.474, 199.921, 56.1789, 0.8262 ) }
    apic_10 { pt3dadd( 213.597, 199.202, 56.567, 0.7084 ) }
    apic_10 { pt3dadd( 212.588, 198.732, 57.0318, 0.6438 ) }
    apic_10 { pt3dadd( 211.525, 198.363, 57.5277, 0.6008 ) }
    apic_10 { pt3dadd( 210.542, 197.817, 57.9928, 0.6814 ) }
    apic_10 { pt3dadd( 209.581, 197.226, 58.45, 0.7934 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 29/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 305.028, 262.053, 43.7018, 0.704 ) }
    apic_9 { pt3dadd( 303.765, 261.643, 43.6201, 0.7042 ) }
    apic_9 { pt3dadd( 302.71, 261.216, 43.5744, 0.6916 ) }
    apic_9 { pt3dadd( 301.733, 260.621, 43.5865, 0.6492 ) }
    apic_9 { pt3dadd( 300.762, 260.017, 43.5652, 0.6056 ) }
    apic_9 { pt3dadd( 299.801, 259.399, 43.4759, 0.5594 ) }
    apic_9 { pt3dadd( 298.83, 258.796, 43.4095, 0.5378 ) }
    apic_9 { pt3dadd( 297.839, 258.223, 43.3874, 0.563 ) }
    apic_9 { pt3dadd( 296.87, 257.621, 43.2578, 0.5852 ) }
    apic_9 { pt3dadd( 295.929, 256.981, 42.9881, 0.6028 ) }
    apic_9 { pt3dadd( 294.913, 256.474, 42.796, 0.5938 ) }
    apic_9 { pt3dadd( 293.851, 256.051, 42.6521, 0.5684 ) }
    apic_9 { pt3dadd( 292.82, 255.562, 42.5135, 0.596 ) }
    apic_9 { pt3dadd( 291.808, 255.032, 42.3783, 0.6546 ) }
    apic_9 { pt3dadd( 290.763, 254.576, 42.2122, 0.6216 ) }
    apic_9 { pt3dadd( 289.702, 254.154, 42.0316, 0.5456 ) }
    apic_9 { pt3dadd( 288.711, 253.592, 42.0106, 0.5874 ) }
    apic_9 { pt3dadd( 287.745, 252.981, 42.0442, 0.6696 ) }
    apic_9 { pt3dadd( 286.7, 252.525, 42.2075, 0.6482 ) }
    apic_9 { pt3dadd( 285.636, 252.114, 42.4052, 0.5988 ) }
    apic_9 { pt3dadd( 284.619, 251.601, 42.6283, 0.5696 ) }
    apic_9 { pt3dadd( 283.615, 251.061, 42.8579, 0.546 ) }
    apic_9 { pt3dadd( 282.666, 250.439, 43.1757, 0.5294 ) }
    apic_9 { pt3dadd( 281.731, 249.795, 43.5165, 0.5146 ) }
    apic_9 { pt3dadd( 280.855, 249.062, 43.5792, 0.4812 ) }
    apic_9 { pt3dadd( 279.993, 248.311, 43.5758, 0.4432 ) }
    apic_9 { pt3dadd( 279.035, 247.693, 43.7074, 0.5528 ) }
    apic_9 { pt3dadd( 278.055, 247.107, 43.8704, 0.6972 ) }
    apic_9 { pt3dadd( 277.06, 246.548, 44.044, 0.7192 ) }
    apic_9 { pt3dadd( 276.061, 245.995, 44.2198, 0.7134 ) }
    apic_9 { pt3dadd( 275.113, 245.358, 44.2893, 0.629 ) }
    apic_9 { pt3dadd( 274.172, 244.706, 44.3411, 0.5314 ) }
    apic_9 { pt3dadd( 273.576, 243.744, 44.2627, 0.4968 ) }
    apic_9 { pt3dadd( 273.024, 242.743, 44.1683, 0.47 ) }
    apic_9 { pt3dadd( 272.128, 242.051, 44.0334, 0.4254 ) }
    apic_9 { pt3dadd( 271.193, 241.394, 43.8934, 0.379 ) }
    apic_9 { pt3dadd( 270.185, 240.858, 43.7466, 0.4502 ) }
    apic_9 { pt3dadd( 269.175, 240.325, 43.6019, 0.5286 ) }
    apic_9 { pt3dadd( 268.262, 239.636, 43.6878, 0.6624 ) }
    apic_9 { pt3dadd( 267.346, 238.953, 43.7758, 0.7912 ) }
    apic_9 { pt3dadd( 266.299, 238.498, 43.9376, 0.7644 ) }
    apic_9 { pt3dadd( 265.252, 238.041, 44.0726, 0.75 ) }
    apic_9 { pt3dadd( 264.208, 237.572, 44.0639, 0.8008 ) }
    apic_9 { pt3dadd( 263.177, 237.079, 44.0457, 0.8408 ) }
    apic_9 { pt3dadd( 262.2, 236.485, 43.9886, 0.837 ) }
    apic_9 { pt3dadd( 261.267, 235.838, 43.9723, 0.7952 ) }
    apic_9 { pt3dadd( 260.503, 234.989, 44.1123, 0.6086 ) }
    apic_9 { pt3dadd( 259.655, 234.248, 44.0992, 0.5062 ) }
    apic_9 { pt3dadd( 258.655, 233.707, 43.8049, 0.5578 ) }
    apic_9 { pt3dadd( 257.653, 233.163, 43.5884, 0.5842 ) }
    apic_9 { pt3dadd( 256.651, 232.613, 43.5114, 0.5652 ) }
    apic_9 { pt3dadd( 255.65, 232.059, 43.4753, 0.6196 ) }
    apic_9 { pt3dadd( 254.651, 231.502, 43.4921, 0.768 ) }
    apic_9 { pt3dadd( 253.654, 230.939, 43.5028, 0.8042 ) }
    apic_9 { pt3dadd( 252.663, 230.37, 43.507, 0.7146 ) }
    apic_9 { pt3dadd( 251.701, 229.754, 43.5361, 0.69 ) }
    apic_9 { pt3dadd( 250.766, 229.094, 43.5879, 0.7244 ) }
    apic_9 { pt3dadd( 249.913, 228.34, 43.6828, 0.7554 ) }
    apic_9 { pt3dadd( 249.121, 227.516, 43.8102, 0.7836 ) }
    apic_9 { pt3dadd( 248.254, 226.774, 43.813, 0.7488 ) }
    apic_9 { pt3dadd( 247.363, 226.055, 43.7766, 0.6942 ) }
    apic_9 { pt3dadd( 246.475, 225.334, 43.7875, 0.6574 ) }
    apic_9 { pt3dadd( 245.588, 224.612, 43.8102, 0.6248 ) }
    apic_9 { pt3dadd( 244.974, 223.653, 44.046, 0.6598 ) }
    apic_9 { pt3dadd( 244.33, 222.719, 44.2837, 0.6922 ) }
    apic_9 { pt3dadd( 243.512, 221.925, 44.4982, 0.7034 ) }
    apic_9 { pt3dadd( 242.676, 221.154, 44.7602, 0.7218 ) }
    apic_9 { pt3dadd( 241.777, 220.468, 45.1906, 0.7652 ) }
    apic_9 { pt3dadd( 240.849, 219.827, 45.5809, 0.7672 ) }
    apic_9 { pt3dadd( 239.824, 219.33, 45.8419, 0.6348 ) }
    apic_9 { pt3dadd( 238.791, 218.874, 45.8198, 0.5446 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    apic_9 { pt3dadd( 237.74, 218.506, 45.1676, 0.548 ) }
    apic_9 { pt3dadd( 236.691, 218.12, 44.6001, 0.5864 ) }
    apic_9 { pt3dadd( 235.642, 217.693, 44.1949, 0.692 ) }
    apic_9 { pt3dadd( 234.645, 217.176, 44.0628, 0.7974 ) }
    apic_9 { pt3dadd( 233.743, 216.488, 44.441, 0.9026 ) }
    apic_9 { pt3dadd( 232.757, 215.952, 44.6964, 0.988 ) }
    apic_9 { pt3dadd( 231.674, 215.587, 44.8123, 1.0508 ) }
    apic_9 { pt3dadd( 230.662, 215.082, 44.9915, 1.0356 ) }
    apic_9 { pt3dadd( 229.73, 214.428, 45.2399, 0.9348 ) }
    apic_9 { pt3dadd( 228.841, 213.742, 45.7153, 0.8686 ) }
    apic_9 { pt3dadd( 227.992, 213.028, 46.3921, 0.8332 ) }
    apic_9 { pt3dadd( 227.015, 212.497, 46.8432, 0.8192 ) }
    apic_9 { pt3dadd( 225.953, 212.091, 47.1405, 0.8198 ) }
    apic_9 { pt3dadd( 224.905, 211.643, 47.3528, 0.799 ) }
    apic_9 { pt3dadd( 223.865, 211.17, 47.5082, 0.7638 ) }
    apic_9 { pt3dadd( 222.76, 210.973, 47.6143, 0.749 ) }
    apic_9 { pt3dadd( 221.617, 210.931, 47.693, 0.7458 ) }
    apic_9 { pt3dadd( 220.498, 211.035, 48.1099, 0.6658 ) }
    apic_9 { pt3dadd( 219.389, 211.203, 48.6741, 0.5528 ) }
    apic_9 { pt3dadd( 218.263, 211.098, 48.683, 0.5964 ) }
    apic_9 { pt3dadd( 217.131, 210.934, 48.5724, 0.6736 ) }
    apic_9 { pt3dadd( 216.141, 210.41, 48.2306, 0.6828 ) }
    apic_9 { pt3dadd( 215.177, 209.814, 47.8419, 0.6782 ) }
    apic_9 { pt3dadd( 214.389, 209.008, 47.423, 0.7368 ) }
    apic_9 { pt3dadd( 213.618, 208.18, 47.0109, 0.8026 ) }
    apic_9 { pt3dadd( 212.666, 207.549, 47.14, 0.8666 ) }
    apic_9 { pt3dadd( 211.725, 206.903, 47.2839, 0.9172 ) }
    apic_9 { pt3dadd( 210.876, 206.144, 47.5446, 0.863 ) }
    apic_9 { pt3dadd( 210.045, 205.366, 47.7358, 0.8108 ) }
    apic_9 { pt3dadd( 209.309, 204.493, 47.5712, 0.7696 ) }
    apic_9 { pt3dadd( 208.535, 203.669, 47.3329, 0.7504 ) }
    apic_9 { pt3dadd( 207.591, 203.068, 46.7533, 0.8342 ) }
    apic_9 { pt3dadd( 206.598, 202.649, 46.2647, 0.8834 ) }
    apic_9 { pt3dadd( 205.465, 202.772, 46.048, 0.8304 ) }
    apic_9 { pt3dadd( 204.389, 202.657, 45.7876, 0.8154 ) }
    apic_9 { pt3dadd( 203.439, 202.036, 45.4345, 0.8814 ) }
    apic_9 { pt3dadd( 202.452, 201.485, 45.0909, 0.9206 ) }
    apic_9 { pt3dadd( 201.4, 201.056, 44.7647, 0.9118 ) }
    apic_9 { pt3dadd( 200.335, 200.655, 44.6051, 0.9148 ) }
    apic_9 { pt3dadd( 199.248, 200.301, 44.7364, 0.9386 ) }
    apic_9 { pt3dadd( 198.195, 199.872, 44.7706, 0.964 ) }
    apic_9 { pt3dadd( 197.184, 199.336, 44.6709, 0.9918 ) }
    apic_9 { pt3dadd( 196.186, 198.788, 44.4475, 0.924 ) }
    apic_9 { pt3dadd( 195.202, 198.224, 44.0684, 0.7356 ) }
    apic_9 { pt3dadd( 194.234, 197.627, 43.8094, 0.6008 ) }
    apic_9 { pt3dadd( 193.285, 196.992, 43.6842, 0.5256 ) }
    apic_9 { pt3dadd( 192.419, 196.259, 43.4129, 0.4694 ) }
    apic_9 { pt3dadd( 191.591, 195.481, 43.0763, 0.4218 ) }
    apic_9 { pt3dadd( 190.628, 194.916, 42.6258, 0.4948 ) }
    apic_9 { pt3dadd( 189.608, 194.44, 42.1268, 0.6188 ) }
    apic_9 { pt3dadd( 188.714, 193.763, 41.6839, 0.6964 ) }
    apic_9 { pt3dadd( 187.865, 193.017, 41.2602, 0.7578 ) }
    apic_9 { pt3dadd( 186.868, 192.502, 40.8985, 0.7476 ) }
    apic_9 { pt3dadd( 185.819, 192.066, 40.558, 0.713 ) }
    apic_9 { pt3dadd( 184.718, 191.917, 40.0232, 0.7148 ) }
    apic_9 { pt3dadd( 183.602, 191.855, 39.4304, 0.7276 ) }
    apic_9 { pt3dadd( 182.487, 191.809, 38.8046, 0.739 ) }
    apic_9 { pt3dadd( 181.374, 191.769, 38.171, 0.75 ) }
    apic_9 { pt3dadd( 180.706, 190.978, 37.4478, 0.7804 ) }
    apic_9 { pt3dadd( 180.067, 190.136, 36.643, 0.8106 ) }
    apic_9 { pt3dadd( 179.061, 189.893, 35.4446, 0.8166 ) }
    apic_9 { pt3dadd( 178.04, 189.505, 34.7886, 0.7274 ) }
    apic_9 { pt3dadd( 177.008, 189.03, 34.4554, 0.5818 ) }
    apic_9 { pt3dadd( 175.908, 188.803, 34.1603, 0.6234 ) }
    apic_9 { pt3dadd( 174.775, 188.706, 33.8848, 0.7606 ) }
    apic_9 { pt3dadd( 173.637, 188.601, 33.726, 0.745 ) }
    apic_9 { pt3dadd( 172.499, 188.493, 33.6252, 0.653 ) }
    apic_9 { pt3dadd( 171.396, 188.217, 33.6664, 0.6404 ) }
    apic_9 { pt3dadd( 170.31, 187.861, 33.7714, 0.664 ) }
    apic_9 { pt3dadd( 169.331, 187.293, 33.9452, 0.6748 ) }
    apic_9 { pt3dadd( 168.4, 186.634, 34.1477, 0.6806 ) }
    apic_9 { pt3dadd( 167.625, 185.816, 33.955, 0.6818 ) }
    apic_9 { pt3dadd( 166.911, 184.933, 33.6056, 0.6812 ) }
    apic_9 { pt3dadd( 165.911, 184.464, 33.1559, 0.6354 ) }
    apic_9 { pt3dadd( 164.848, 184.086, 32.6844, 0.5798 ) }
    apic_9 { pt3dadd( 163.726, 184.136, 32.1975, 0.5504 ) }
    apic_9 { pt3dadd( 162.604, 184.163, 31.7282, 0.5306 ) }
    apic_9 { pt3dadd( 161.52, 183.813, 31.46, 0.6076 ) }
    apic_9 { pt3dadd( 160.445, 183.44, 31.2306, 0.6694 ) }
    apic_9 { pt3dadd( 159.396, 182.984, 31.1545, 0.6722 ) }
    apic_9 { pt3dadd( 158.325, 182.652, 31.0971, 0.6436 ) }
    apic_9 { pt3dadd( 157.182, 182.714, 31.0988, 0.5146 ) }
    apic_9 { pt3dadd( 156.04, 182.733, 31.0626, 0.4334 ) }
    apic_9 { pt3dadd( 154.899, 182.671, 30.9523, 0.4442 ) }
    apic_9 { pt3dadd( 153.781, 182.513, 30.7154, 0.4456 ) }
    apic_9 { pt3dadd( 152.706, 182.173, 30.2389, 0.4296 ) }
    apic_9 { pt3dadd( 151.618, 182.11, 29.8785, 0.455 ) }
    apic_9 { pt3dadd( 150.514, 182.398, 29.6674, 0.533 ) }
    apic_9 { pt3dadd( 149.512, 182.229, 29.4865, 0.5984 ) }
    apic_9 { pt3dadd( 148.634, 181.498, 29.3437, 0.6488 ) }
    apic_9 { pt3dadd( 147.685, 180.877, 29.1743, 0.6358 ) }
    apic_9 { pt3dadd( 146.668, 180.359, 28.98, 0.5636 ) }
    apic_9 { pt3dadd( 145.66, 179.837, 28.6602, 0.4688 ) }
    apic_9 { pt3dadd( 144.659, 179.312, 28.2321, 0.3548 ) }
    apic_9 { pt3dadd( 143.79, 178.622, 27.7273, 0.295 ) }
    apic_9 { pt3dadd( 143.029, 177.801, 27.1607, 0.2788 ) }
    apic_9 { pt3dadd( 142.536, 176.809, 26.7279, 0.2722 ) }
    apic_9 { pt3dadd( 142.179, 175.732, 26.3618, 0.2706 ) }
    apic_9 { pt3dadd( 141.585, 174.79, 25.928, 0.2646 ) }
    apic_9 { pt3dadd( 140.88, 173.907, 25.4626, 0.2568 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    apic_9 { pt3dadd( 141.128, 172.814, 25.0507, 0.243 ) }
    apic_9 { pt3dadd( 141.398, 171.714, 24.64, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_10 (entry count 2/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 209.581, 197.226, 58.45, 0.7934 ) }
    apic_14 { pt3dadd( 208.094, 197.64, 59.0058, 0.4512 ) }
    apic_14 { pt3dadd( 207.05, 198.053, 59.5468, 0.3204 ) }
    apic_14 { pt3dadd( 205.938, 198.302, 59.7808, 0.3204 ) }
    apic_14 { pt3dadd( 204.829, 198.562, 60.0132, 0.3204 ) }
    apic_14 { pt3dadd( 203.828, 199.11, 60.1863, 0.3204 ) }
    apic_14 { pt3dadd( 202.833, 199.67, 60.363, 0.3204 ) }
    apic_14 { pt3dadd( 201.961, 200.402, 60.6012, 0.3204 ) }
    apic_14 { pt3dadd( 201.06, 201.085, 60.8532, 0.3204 ) }
    apic_14 { pt3dadd( 199.98, 201.436, 61.1993, 0.3204 ) }
    apic_14 { pt3dadd( 198.897, 201.772, 61.551, 0.3204 ) }
    apic_14 { pt3dadd( 197.799, 202.051, 61.9259, 0.3204 ) }
    apic_14 { pt3dadd( 196.693, 202.301, 62.2404, 0.3204 ) }
    apic_14 { pt3dadd( 195.559, 202.451, 62.3428, 0.3204 ) }
    apic_14 { pt3dadd( 194.448, 202.677, 62.4901, 0.3204 ) }
    apic_14 { pt3dadd( 193.406, 203.134, 62.7763, 0.3204 ) }
    apic_14 { pt3dadd( 192.397, 203.609, 63.2741, 0.3204 ) }
    apic_14 { pt3dadd( 191.476, 204.124, 64.3527, 0.3204 ) }
    apic_14 { pt3dadd( 190.551, 204.62, 65.4724, 0.3204 ) }
    apic_14 { pt3dadd( 189.625, 205.078, 66.6669, 0.3204 ) }
    apic_14 { pt3dadd( 188.704, 205.56, 67.8367, 0.3204 ) }
    apic_14 { pt3dadd( 187.793, 206.074, 68.9713, 0.3204 ) }
    apic_14 { pt3dadd( 186.904, 206.731, 69.6158, 0.3204 ) }
    apic_14 { pt3dadd( 186.021, 207.429, 70.1187, 0.3204 ) }
    apic_14 { pt3dadd( 185.097, 208.025, 70.8632, 0.3204 ) }
    apic_14 { pt3dadd( 184.161, 208.592, 71.6761, 0.3204 ) }
    apic_14 { pt3dadd( 183.355, 208.942, 73.386, 0.3204 ) }
    apic_14 { pt3dadd( 182.582, 209.238, 75.32, 0.3204 ) }
    // Section: apic_11, id: apic_11, parent: apic_10 (entry count 30/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 209.581, 197.226, 58.45, 0.7934 ) }
    apic_11 { pt3dadd( 208.826, 196.166, 58.7118, 0.5752 ) }
    apic_11 { pt3dadd( 208.133, 195.269, 59.0355, 0.4576 ) }
    apic_11 { pt3dadd( 207.387, 194.423, 59.509, 0.4576 ) }
    apic_11 { pt3dadd( 206.596, 193.62, 59.9598, 0.4576 ) }
    apic_11 { pt3dadd( 205.748, 192.872, 60.3806, 0.4576 ) }
    apic_11 { pt3dadd( 204.822, 192.247, 60.8476, 0.4576 ) }
    apic_11 { pt3dadd( 203.809, 191.758, 61.3656, 0.4576 ) }
    apic_11 { pt3dadd( 202.862, 191.157, 61.7915, 0.4576 ) }
    apic_11 { pt3dadd( 201.982, 190.437, 62.1219, 0.4576 ) }
    apic_11 { pt3dadd( 201.138, 189.681, 62.468, 0.4576 ) }
    apic_11 { pt3dadd( 200.329, 188.886, 62.8295, 0.4576 ) }
    apic_11 { pt3dadd( 199.555, 188.094, 63.4766, 0.4576 ) }
    apic_11 { pt3dadd( 198.809, 187.306, 64.367, 0.4576 ) }
    apic_11 { pt3dadd( 198.125, 186.461, 65.2246, 0.4576 ) }
    apic_11 { pt3dadd( 197.462, 185.595, 66.071, 0.4576 ) }
    apic_11 { pt3dadd( 196.792, 184.771, 67.1062, 0.4576 ) }
    apic_11 { pt3dadd( 196.12, 183.959, 68.1968, 0.4576 ) }
    apic_11 { pt3dadd( 195.48, 183.08, 69.0519, 0.4576 ) }
    apic_11 { pt3dadd( 194.848, 182.183, 69.8502, 0.4576 ) }
    apic_11 { pt3dadd( 194.479, 181.104, 69.8905, 0.4576 ) }
    apic_11 { pt3dadd( 194.122, 180.018, 69.8981, 0.4576 ) }
    apic_11 { pt3dadd( 193.596, 179.007, 70.126, 0.4576 ) }
    apic_11 { pt3dadd( 193.066, 177.997, 70.3584, 0.4576 ) }
    apic_11 { pt3dadd( 192.508, 177.036, 71.02, 0.4576 ) }
    apic_11 { pt3dadd( 191.951, 176.074, 71.6825, 0.4576 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 56/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 191.951, 176.074, 71.6825, 0.4576 ) }
    apic_13 { pt3dadd( 191.1, 176.028, 71.6162, 0.4348 ) }
    apic_13 { pt3dadd( 190.008, 176.264, 71.9718, 0.378 ) }
    apic_13 { pt3dadd( 188.934, 176.598, 72.476, 0.3122 ) }
    apic_13 { pt3dadd( 187.869, 176.836, 73.3054, 0.328 ) }
    apic_13 { pt3dadd( 186.806, 177.057, 74.1905, 0.3578 ) }
    apic_13 { pt3dadd( 185.997, 177.193, 76.1046, 0.2978 ) }
    apic_13 { pt3dadd( 185.214, 177.32, 78.12, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 64/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 191.951, 176.074, 71.6825, 0.4576 ) }
    apic_12 { pt3dadd( 191.088, 174.867, 72.7045, 0.3178 ) }
    apic_12 { pt3dadd( 190.365, 174.031, 73.397, 0.2746 ) }
    apic_12 { pt3dadd( 189.585, 173.237, 74.0421, 0.2746 ) }
    apic_12 { pt3dadd( 188.773, 172.453, 74.4492, 0.2746 ) }
    apic_12 { pt3dadd( 187.94, 171.676, 74.7138, 0.2746 ) }
    apic_12 { pt3dadd( 187.404, 170.701, 74.9521, 0.2746 ) }
    apic_12 { pt3dadd( 187.015, 169.629, 75.1775, 0.2746 ) }
    apic_12 { pt3dadd( 186.843, 168.507, 75.3516, 0.2746 ) }
    apic_12 { pt3dadd( 186.732, 167.37, 75.511, 0.2746 ) }
    apic_12 { pt3dadd( 186.489, 166.273, 75.9923, 0.2746 ) }
    apic_12 { pt3dadd( 186.216, 165.187, 76.5503, 0.2746 ) }
    apic_12 { pt3dadd( 185.835, 164.126, 77.0291, 0.2746 ) }
    apic_12 { pt3dadd( 185.441, 163.069, 77.4984, 0.2746 ) }
    apic_12 { pt3dadd( 185.103, 161.99, 77.9136, 0.2746 ) }
    apic_12 { pt3dadd( 184.763, 160.911, 78.2858, 0.2746 ) }
    apic_12 { pt3dadd( 184.342, 159.848, 78.1463, 0.2746 ) }
    apic_12 { pt3dadd( 183.934, 158.781, 77.999, 0.2746 ) }
    apic_12 { pt3dadd( 183.604, 157.689, 77.803, 0.2746 ) }
    apic_12 { pt3dadd( 183.3, 156.592, 77.5732, 0.2746 ) }
    apic_12 { pt3dadd( 183.139, 155.473, 77.1476, 0.2746 ) }
    apic_12 { pt3dadd( 183.024, 154.351, 76.7603, 0.2746 ) }
    apic_12 { pt3dadd( 183.106, 153.212, 76.5447, 0.2746 ) }
    apic_12 { pt3dadd( 183.193, 152.075, 76.3445, 0.2746 ) }
    apic_12 { pt3dadd( 183.3, 150.937, 76.2048, 0.2746 ) }
    apic_12 { pt3dadd( 183.383, 149.799, 76.1564, 0.2746 ) }
    apic_12 { pt3dadd( 183.419, 148.657, 76.3162, 0.2746 ) }
    apic_12 { pt3dadd( 183.232, 147.557, 76.5226, 0.2746 ) }
    apic_12 { pt3dadd( 182.808, 146.499, 76.7788, 0.2746 ) }
    apic_12 { pt3dadd( 182.439, 145.422, 77.0378, 0.2746 ) }
    apic_12 { pt3dadd( 182.107, 144.333, 77.2982, 0.2746 ) }
    apic_12 { pt3dadd( 182.193, 143.225, 77.294, 0.2746 ) }
    apic_12 { pt3dadd( 182.444, 142.11, 77.1868, 0.2746 ) }
    apic_12 { pt3dadd( 182.475, 140.974, 77.2251, 0.2746 ) }
    apic_12 { pt3dadd( 182.43, 139.832, 77.3144, 0.2746 ) }
    apic_12 { pt3dadd( 182.497, 138.725, 77.9528, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    apic_12 { pt3dadd( 182.582, 137.623, 78.68, 0.2746 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_604, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_604 = new SectionList()
    soma_0 ModelViewParmSubset_604.append()
    axon_0 ModelViewParmSubset_604.append()
    axon_1 ModelViewParmSubset_604.append()

    // Group: {name=ModelViewParmSubset_605, groups=[], sections=[apic_0, dend_26, dend_23, dend_16, dend_15, dend_0, apic_18, apic_1, dend_30, dend_27, dend_25, dend_24, dend_22, dend_17, dend_6, dend_1, apic_26, apic_19, apic_3, apic_2, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_12, dend_7, dend_3, dend_2, apic_23, apic_20, apic_17, apic_4, dend_21, dend_20, dend_14, dend_13, dend_11, dend_8, dend_5, dend_4, apic_25, apic_24, apic_22, apic_21, apic_6, apic_5, dend_10, dend_9, apic_16, apic_7, apic_15, apic_8, apic_10, apic_9, apic_14, apic_11, apic_13, apic_12]}
    ModelViewParmSubset_605 = new SectionList()
    apic_0 ModelViewParmSubset_605.append()
    dend_26 ModelViewParmSubset_605.append()
    dend_23 ModelViewParmSubset_605.append()
    dend_16 ModelViewParmSubset_605.append()
    dend_15 ModelViewParmSubset_605.append()
    dend_0 ModelViewParmSubset_605.append()
    apic_18 ModelViewParmSubset_605.append()
    apic_1 ModelViewParmSubset_605.append()
    dend_30 ModelViewParmSubset_605.append()
    dend_27 ModelViewParmSubset_605.append()
    dend_25 ModelViewParmSubset_605.append()
    dend_24 ModelViewParmSubset_605.append()
    dend_22 ModelViewParmSubset_605.append()
    dend_17 ModelViewParmSubset_605.append()
    dend_6 ModelViewParmSubset_605.append()
    dend_1 ModelViewParmSubset_605.append()
    apic_26 ModelViewParmSubset_605.append()
    apic_19 ModelViewParmSubset_605.append()
    apic_3 ModelViewParmSubset_605.append()
    apic_2 ModelViewParmSubset_605.append()
    dend_32 ModelViewParmSubset_605.append()
    dend_31 ModelViewParmSubset_605.append()
    dend_29 ModelViewParmSubset_605.append()
    dend_28 ModelViewParmSubset_605.append()
    dend_19 ModelViewParmSubset_605.append()
    dend_18 ModelViewParmSubset_605.append()
    dend_12 ModelViewParmSubset_605.append()
    dend_7 ModelViewParmSubset_605.append()
    dend_3 ModelViewParmSubset_605.append()
    dend_2 ModelViewParmSubset_605.append()
    apic_23 ModelViewParmSubset_605.append()
    apic_20 ModelViewParmSubset_605.append()
    apic_17 ModelViewParmSubset_605.append()
    apic_4 ModelViewParmSubset_605.append()
    dend_21 ModelViewParmSubset_605.append()
    dend_20 ModelViewParmSubset_605.append()
    dend_14 ModelViewParmSubset_605.append()
    dend_13 ModelViewParmSubset_605.append()
    dend_11 ModelViewParmSubset_605.append()
    dend_8 ModelViewParmSubset_605.append()
    dend_5 ModelViewParmSubset_605.append()
    dend_4 ModelViewParmSubset_605.append()
    apic_25 ModelViewParmSubset_605.append()
    apic_24 ModelViewParmSubset_605.append()
    apic_22 ModelViewParmSubset_605.append()
    apic_21 ModelViewParmSubset_605.append()
    apic_6 ModelViewParmSubset_605.append()
    apic_5 ModelViewParmSubset_605.append()
    dend_10 ModelViewParmSubset_605.append()
    dend_9 ModelViewParmSubset_605.append()
    apic_16 ModelViewParmSubset_605.append()
    apic_7 ModelViewParmSubset_605.append()
    apic_15 ModelViewParmSubset_605.append()
    apic_8 ModelViewParmSubset_605.append()
    apic_10 ModelViewParmSubset_605.append()
    apic_9 ModelViewParmSubset_605.append()
    apic_14 ModelViewParmSubset_605.append()
    apic_11 ModelViewParmSubset_605.append()
    apic_13 ModelViewParmSubset_605.append()
    apic_12 ModelViewParmSubset_605.append()

    // Group: {name=dend, groups=[], sections=[dend_26, dend_23, dend_16, dend_15, dend_0, dend_30, dend_27, dend_25, dend_24, dend_22, dend_17, dend_6, dend_1, dend_32, dend_31, dend_29, dend_28, dend_19, dend_18, dend_12, dend_7, dend_3, dend_2, dend_21, dend_20, dend_14, dend_13, dend_11, dend_8, dend_5, dend_4, dend_10, dend_9]}
    dend = new SectionList()
    dend_26 dend.append()
    dend_23 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_0 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()
    dend_22 dend.append()
    dend_17 dend.append()
    dend_6 dend.append()
    dend_1 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_19 dend.append()
    dend_18 dend.append()
    dend_12 dend.append()
    dend_7 dend.append()
    dend_3 dend.append()
    dend_2 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_11 dend.append()
    dend_8 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_18, apic_1, apic_26, apic_19, apic_3, apic_2, apic_23, apic_20, apic_17, apic_4, apic_25, apic_24, apic_22, apic_21, apic_6, apic_5, apic_16, apic_7, apic_15, apic_8, apic_10, apic_9, apic_14, apic_11, apic_13, apic_12]}
    apic = new SectionList()
    apic_0 apic.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_18 apic.append()
    apic_1 apic.append()
    apic_26 apic.append()
    apic_19 apic.append()
    apic_3 apic.append()
    apic_2 apic.append()
    apic_23 apic.append()
    apic_20 apic.append()
    apic_17 apic.append()
    apic_4 apic.append()
    apic_25 apic.append()
    apic_24 apic.append()
    apic_22 apic.append()
    apic_21 apic.append()
    apic_6 apic.append()
    apic_5 apic.append()
    apic_16 apic.append()
    apic_7 apic.append()
    apic_15 apic.append()
    apic_8 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()
    apic_14 apic.append()
    apic_11 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()

    // Group: {name=OneSecGrp_SectionRef_25497, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_25497 = new SectionList()
    soma_0 OneSecGrp_SectionRef_25497.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, apic_18, apic_18, apic_18, apic_18, apic_18, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_6, dend_6, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_26, apic_19, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_23, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_20, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_17, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_25, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_24, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_22, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_21, apic_6, apic_6, apic_6, apic_6, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_9, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_18 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_26 all.append()
    apic_19 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_23 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_20 all.append()
    apic_17 all.append()
    apic_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_17 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_13 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_25 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_24 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_22 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_21 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 2.2597318  // units: uF/cm2
    forsec apic cm = 2.2597318  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 29.628654  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 0.0017261315  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.40009573  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 2.8814761E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.0039703567  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.16175993  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.016393103  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.0014963683  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.014139049  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 4.7244183E-7  // units: S cm-2
        e_pas_nml2 = -84.97303  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.4045983E-4  // units: S cm-2
        e_pas_nml2 = -84.97303  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 1.0092538E-7  // units: S cm-2
        e_pas_nml2 = -84.97303  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 3.2237687E-4  // units: S cm-2
        e_pas_nml2 = -84.97303  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 1.5987478E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0028974903  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478810017
    forsec soma {
        insert CaDynamics_478810017
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_15 nseg = 3
    dend_30 nseg = 3
    dend_25 nseg = 3
    dend_22 nseg = 3
    apic_26 nseg = 3
    apic_2 nseg = 7
    dend_32 nseg = 3
    dend_29 nseg = 3
    dend_28 nseg = 5
    dend_18 nseg = 3
    dend_2 nseg = 3
    apic_20 nseg = 5
    apic_17 nseg = 3
    dend_14 nseg = 5
    dend_13 nseg = 3
    dend_4 nseg = 5
    apic_25 nseg = 3
    apic_5 nseg = 5
    apic_15 nseg = 3
    apic_8 nseg = 9
    apic_10 nseg = 7
    apic_9 nseg = 11
    apic_12 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478810017


