// Cell: cIR216_L5_LBC_c3984af99c_0_0
/*
{
  "id" : "cIR216_L5_LBC_c3984af99c_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "5.31735, -9.24063, 0.0, 4.15585", "4.69678, -8.30052, 0.0, 7.05537", "4.07621, -7.3604, 0.0, 9.49099", "3.45565, -6.42028, 0.0, 11.817", "2.83508, -5.48017, 0.0, 13.4599", "2.21451, -4.54005, 0.0, 14.7908", "1.59394, -3.59994, 0.0, 16.0669", "0.973375, -2.65982, 0.0, 17.0826", "0.352808, -1.7197, 0.0, 17.8648", "-0.26776, -0.779586, 0.0, 18.3637", "-0.888328, 0.160531, 0.0, 18.8035", "-1.5089, 1.10065, 0.0, 19.2009", "-2.12946, 2.04076, 0.0, 19.0899", "-2.75003, 2.98088, 0.0, 18.8821", "-3.3706, 3.921, 0.0, 18.6116", "-3.99117, 4.86111, 0.0, 17.4033", "-4.61173, 5.80123, 0.0, 16.1027", "-5.2323, 6.74135, 0.0, 14.2403", "-5.85287, 7.68146, 0.0, 11.7641", "-6.47344, 8.62158, 0.0, 8.46221", "-7.094, 9.5617, 0.0, 4.77037" ]
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "6.24584, -7.07805, -7.59, 7.74", "6.24584, -7.07805, -7.59, 7.74", "6.83715, -8.25608, -7.37828, 6.71", "7.93325, -10.4397, -6.98585, 6.71", "9.15619, -12.8761, -6.54799, 5.68", "10.6998, -15.9512, -5.99533, 5.09" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-8.43415, -4.97801, 4.28, 6.78", "-8.43415, -4.97801, 4.28, 6.78", "-10.0679, -7.4288, 3.10308, 4.79" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "8.84582, -5.66801, -7.77, 1.99", "8.84582, -5.66801, -7.77, 1.99", "8.91264, -6.17067, -8.5118, 1.99", "9.01335, -7.46828, -10.3468, 1.84", "9.11118, -8.80046, -12.1631, 1.62", "9.26842, -10.1417, -13.9202, 1.47", "9.39042, -11.1825, -15.2835, 1.18", "9.48465, -12.1178, -16.5143, 1.4", "9.51094, -12.5093, -17.0343, 1.77", "9.53902, -13.4785, -18.2058, 2.06", "9.60752, -14.7396, -19.582, 2.58" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "6.40587, 2.88198, -15.77, 2.06", "6.40587, 2.88198, -15.77, 2.06", "6.95464, 3.10475, -16.9523, 1.55", "7.40903, 3.36411, -18.0396, 1.4", "8.14192, 3.86854, -19.8568, 1.25", "8.84242, 4.34114, -21.4232, 1.47", "9.33503, 4.65722, -22.424, 1.47", "9.59252, 4.83463, -22.9034, 1.47", "10.3599, 5.38722, -24.2446, 1.18", "11.369, 6.00405, -25.7299, 1.18", "12.0792, 6.31921, -26.5735, 1.33", "12.9085, 6.56803, -27.3757, 1.11", "13.7968, 6.72665, -28.0948, 0.81", "15.1872, 6.80696, -29.0866, 0.96", "16.2123, 6.71801, -29.7531, 1.18", "17.1853, 6.47591, -30.3665, 0.88", "17.7144, 6.24713, -30.7287, 1.03", "18.424, 5.76981, -31.2076, 0.74", "18.9252, 5.32939, -31.5538, 0.59", "19.7895, 4.49717, -32.1193, 0.74", "20.1355, 4.18994, -32.3953, 0.52", "20.4887, 3.98003, -32.7671, 0.52", "21.0423, 3.94216, -33.4614, 0.44", "21.6234, 4.16601, -34.2498, 0.52", "22.2509, 4.50063, -35.0087, 0.88", "23.1244, 4.99004, -35.9308, 1.03", "23.6282, 5.24722, -36.4231, 1.03", "24.4067, 5.58422, -37.1468, 0.66", "25.4327, 5.88993, -38.0587, 0.44", "26.3509, 5.83013, -38.7259, 0.29", "26.8918, 5.41455, -38.9339, 0.37", "27.4044, 4.62268, -38.9686, 0.22", "27.8805, 3.51236, -38.8932, 0.22", "28.2071, 2.4171, -38.7591, 0.15", "28.3887, 1.50101, -38.622, 0.15", "28.5381, -0.230669, -38.2914, 0.15", "28.5424, -1.26195, -38.0558, 0.15", "28.5091, -2.12774, -37.8351, 0.22", "28.4564, -2.78041, -37.6464, 0.22", "28.3587, -3.43767, -37.4367, 0.22", "28.0334, -4.8019, -36.9871, 0.15", "27.8866, -5.23806, -36.8654, 0.22", "35.3148, -8.63878, -43.039, 0.22", "41.2628, -12.6593, -50.3406, 0.22", "48.2969, -15.9405, -57.0198, 0.22", "56.0447, -17.8367, -63.441, 0.22", "61.6316, -21.251, -71.3141, 0.22", "67.2941, -24.3553, -79.2612, 0.22", "72.0796, -28.5262, -87.296, 0.22", "77.0299, -33.2405, -94.9201, 0.22", "82.0838, -36.9237, -103.029, 0.22", "87.8172, -41.4347, -110.214, 0.22", "93.8063, -47.244, -116.151, 0.22", "100.294, -50.9347, -123.161, 0.22", "106.916, -55.3311, -129.617, 0.22", "114.043, -60.9271, -134.385, 0.22", "121.439, -65.9823, -139.346, 0.22", "129.799, -69.0469, -144.403, 0.22", "138.276, -72.4969, -148.995, 0.22", "145.81, -76.7483, -154.474, 0.22", "152.096, -80.5562, -161.605, 0.22", "158.566, -85.456, -167.849, 0.22", "165.525, -89.3223, -174.29, 0.22", "171.104, -93.5192, -181.781, 0.22", "175.954, -98.54, -189.272, 0.22", "178.759, -102.963, -198.071, 0.22", "181.45, -109.179, -205.751, 0.22", "185.623, -114.625, -213.352, 0.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-4.51417, 8.71199, -10.34, 2.14", "-4.51417, 8.71199, -10.34, 2.14", "-4.53229, 9.80201, -9.95404, 2.14", "-4.55497, 10.8992, -9.63142, 1.84", "-4.57916, 12.3198, -9.34402, 1.62", "-4.60518, 14.1339, -9.08157, 1.99", "-4.61883, 14.9177, -9.03923, 2.21", "-4.63954, 16.4669, -9.10692, 1.4", "-4.65995, 17.8318, -9.31886, 0.96", "-4.69153, 19.3835, -9.70921, 1.11", "-4.72686, 20.5094, -10.1955, 0.66", "-4.80985, 22.2237, -11.1364, 0.96", "-4.87641, 23.2193, -11.7338, 0.96", "-4.97034, 24.2635, -12.3659, 1.4", "-5.12641, 25.6134, -13.1235, 1.11", "-5.56979, 28.2826, -14.3954, 1.18", "-5.79338, 29.3225, -14.7999, 1.47", "-5.99359, 30.1278, -15.013, 1.03", "-6.37554, 31.5215, -15.2681, 0.74", "-6.69495, 32.6828, -15.3712, 0.96", "-6.96849, 33.7354, -15.3321, 0.59", "-7.14534, 34.4505, -15.1933, 0.52", "-7.36296, 35.3589, -15.0085, 0.88", "-7.44706, 35.7523, -14.9228, 1.11", "-7.59097, 36.7229, -14.725, 1.11", "-7.72642, 38.0486, -14.4311, 1.03", "-7.82832, 39.5177, -14.0716, 0.96", "-7.86406, 40.157, -13.9345, 1.18", "-7.98239, 42.0231, -13.647, 0.96", "-8.07252, 43.4328, -13.5272, 0.88", "-8.14445, 44.7147, -13.5038, 1.11", "-8.19017, 45.553, -13.5719, 1.11", "-8.28244, 47.2506, -13.9017, 1.03", "-8.37835, 48.8502, -14.3392, 0.74", "-8.46264, 49.994, -14.7813, 0.74", "-8.52854, 50.7562, -15.1335, 0.81", "-8.63938, 52.2188, -15.8713, 0.59", "-8.71285, 53.4316, -16.5035, 0.74", "-8.72791, 54.0169, -16.7966, 1.18", "-8.69706, 55.2782, -17.4384, 0.96", "-8.65841, 56.1175, -17.8866, 1.03", "-8.59631, 57.0798, -18.4002, 0.96", "-8.5018, 58.0708, -18.8929, 0.81", "-8.3962, 59.0419, -19.3294, 0.74", "-8.28041, 60.1091, -19.8152, 0.88", "-8.1214, 61.3003, -20.3203, 1.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "2.31585, 9.99201, 0.0, 5.09", "2.31585, 9.99201, 0.0, 5.09", "2.67178, 11.6731, -0.0229001, 3.1", "3.25917, 14.132, -0.0939118, 2.43", "3.57473, 15.334, -0.183276, 2.43", "4.15835, 17.5353, -0.396409, 2.21", "4.66262, 19.5196, -0.610779, 1.99", "5.1542, 21.4922, -0.830466, 1.92", "5.83532, 24.2727, -1.14389, 1.84", "6.29065, 26.0733, -1.38546, 2.14", "6.56833, 27.2028, -1.5634, 2.43", "7.00983, 29.0553, -1.92657, 2.43", "7.34278, 30.5252, -2.25649, 2.43", "7.72822, 32.5003, -2.74616, 2.21" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.499999925181861
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-7.094, 9.5617, 0.0, 0.681836", "-15.3575, 22.0803, 0.0, 0.681836", "-23.6209, 34.5989, 0.0, 0.681836" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "10.6998, -15.9512, -5.99533, 1.99", "10.4734, -19.3162, -6.00934, 1.99", "10.2683, -22.6508, -5.97855, 2.21", "10.0761, -25.9084, -5.94676, 2.36", "9.98206, -27.3881, -5.92881, 2.51", "9.73258, -30.5448, -5.86238, 1.92", "9.61589, -32.0213, -5.83131, 1.84", "9.46408, -33.9668, -5.79718, 2.29", "9.314, -35.6984, -5.74235, 3.32", "9.25834, -36.2907, -5.69215, 3.32", "8.96717, -38.8663, -5.48713, 2.95" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "10.6998, -15.9512, -5.99533, 2.43", "12.242, -17.1962, -5.21718, 2.43", "13.4885, -18.2838, -4.49311, 2.43", "15.315, -19.9478, -3.26746, 2.21", "16.7015, -21.2138, -2.25035, 2.43", "18.0067, -22.4168, -1.32986, 2.58", "19.4944, -23.7879, -0.280716, 2.06", "21.0313, -25.296, 0.933145, 2.06", "22.4442, -26.7313, 2.11717, 2.43", "23.8424, -28.2013, 3.26587, 2.43", "25.0026, -29.4136, 4.28987, 2.51" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-10.0679, -7.4288, 3.10308, 3.76", "-10.8395, -9.21657, 2.20472, 3.76", "-11.5176, -10.7878, 1.41516, 2.36", "-12.8074, -13.7762, -0.0865046, 1.99", "-13.6003, -15.6135, -1.00976, 2.21" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-10.0679, -7.4288, 3.10308, 3.32", "-11.4664, -8.8472, 4.87416, 3.32", "-12.7251, -10.1239, 6.46828, 2.29", "-13.7765, -11.1903, 7.79979, 1.84", "-14.3185, -11.74, 8.48619, 1.62", "-15.0385, -12.4703, 9.3981, 1.92" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "9.60752, -14.7396, -19.582, 0.96", "10.9214, -14.8415, -19.524, 0.96", "11.8587, -14.8296, -19.4802, 0.81", "12.4054, -14.769, -19.453, 0.81", "13.0412, -14.633, -19.4583, 0.88", "13.7235, -14.4341, -19.4842, 1.11", "14.5997, -14.1362, -19.5303, 0.66", "15.359, -13.788, -19.5867, 0.59", "16.0943, -13.4126, -19.6468, 0.66", "17.2245, -12.8201, -19.7338, 0.59", "17.7496, -12.5409, -19.7703, 0.81", "18.3089, -12.2501, -19.7826, 1.18", "19.3593, -11.7348, -19.7579, 1.11", "20.0717, -11.3891, -19.7077, 0.88", "21.13, -10.8696, -19.6145, 0.59", "22.1504, -10.3306, -19.5283, 0.52", "22.929, -9.86527, -19.5127, 0.66", "23.5345, -9.44954, -19.5384, 1.11", "24.3654, -8.80107, -19.6528, 0.59", "25.3168, -7.9855, -19.877, 0.44", "25.9724, -7.36155, -20.1235, 0.59", "26.6131, -6.6969, -20.4421, 0.59", "27.2837, -5.97282, -20.8292, 0.22", "27.765, -5.45455, -21.1392, 0.22", "28.0823, -5.13517, -21.3347, 0.59", "28.6822, -4.56402, -21.6568, 0.96", "29.1193, -4.18424, -21.846, 0.96", "29.7386, -3.68791, -22.0623, 0.52", "30.6922, -2.95579, -22.3474, 0.37", "31.3909, -2.47717, -22.4887, 0.37", "32.0944, -2.04117, -22.5861, 0.37", "32.6996, -1.70562, -22.6363, 0.37", "33.3691, -1.36225, -22.6764, 0.59", "33.5381, -1.28572, -22.68, 0.59", "34.3735, -0.933044, -22.599, 0.29", "34.8354, -0.743756, -22.5387, 0.29", "35.4913, -0.49982, -22.4211, 0.59", "36.0634, -0.291533, -22.3063, 0.66", "37.1253, 0.119301, -22.0788, 0.52", "38.3852, 0.637096, -21.8041, 0.52", "38.9723, 0.881397, -21.6743, 0.37", "39.5873, 1.11589, -21.5236, 0.44", "40.4541, 1.43531, -21.2982, 0.52", "41.167, 1.71218, -21.1167, 0.52", "41.7747, 1.95378, -20.9734, 0.22", "42.3186, 2.16381, -20.8707, 0.22", "43.2007, 2.49244, -20.6987, 0.59", "43.9762, 2.78272, -20.5469, 0.29", "44.6822, 3.05286, -20.4581, 0.15", "45.0386, 3.20328, -20.4393, 0.37", "45.5712, 3.46723, -20.3982, 0.66", "46.3287, 3.90929, -20.3305, 0.15", "46.8343, 4.24627, -20.287, 0.29", "47.8163, 4.94687, -20.1661, 0.29", "48.6713, 5.61677, -20.0291, 0.15", "49.659, 6.49923, -19.8211, 0.22", "50.0064, 6.84319, -19.7299, 0.66", "50.2824, 7.14139, -19.6462, 0.66", "50.5164, 7.40409, -19.549, 0.66", "51.1068, 8.06488, -19.254, 0.15", "51.5276, 8.51349, -19.1209, 0.15", "52.1142, 9.08844, -19.075, 0.15", "52.8306, 9.72681, -19.0859, 0.22", "53.5511, 10.3086, -19.149, 0.37", "53.9923, 10.631, -19.2349, 0.81", "55.2566, 11.4417, -19.6643, 0.07", "56.0932, 11.8988, -20.0194, 0.07", "56.5222, 12.0937, -20.2411, 0.07", "56.8778, 12.2333, -20.4399, 0.44", "57.5136, 12.442, -20.7937, 0.59", "58.2122, 12.6329, -21.1423, 0.81", "59.3747, 12.8934, -21.6201, 0.29", "60.7002, 13.1765, -22.0922, 0.07", "61.2916, 13.3175, -22.281, 0.07", "62.0821, 13.538, -22.5334, 0.74", "62.5107, 13.6796, -22.6161, 0.74", "62.8864, 13.8331, -22.6415, 0.44", "63.4339, 14.0975, -22.6062, 0.66", "64.1984, 14.4835, -22.4191, 0.15", "65.2356, 14.9496, -22.0848, 0.15", "66.9625, 15.8404, -21.3741, 0.15", "67.2688, 15.9988, -21.2229, 0.44", "67.8482, 16.2624, -20.8664, 0.22", "68.3564, 16.3903, -20.4499, 0.22", "68.8423, 16.3356, -19.9557, 0.29", "77.2079, 18.7184, -20.8739, 0.29", "85.6633, 20.1229, -22.6163, 0.29", "94.3352, 20.0645, -23.7558, 0.29", "102.898, 18.9397, -25.1401, 0.29", "111.211, 16.9217, -26.9624, 0.29", "118.961, 15.0559, -30.5621, 0.29", "126.717, 12.3704, -33.5854, 0.29", "134.482, 9.95631, -36.807, 0.29", "142.793, 8.65492, -39.1998, 0.29", "150.773, 5.75975, -41.3108, 0.29", "158.97, 3.41992, -43.2668, 0.29", "167.468, 1.64351, -44.3355, 0.29", "175.134, -1.59605, -47.0266, 0.29", "182.842, -4.90134, -49.5069, 0.29", "189.181, -9.84035, -52.9608, 0.29", "195.936, -13.3422, -57.2751, 0.29", "203.504, -15.5534, -61.0627, 0.29", "210.664, -18.3696, -65.2222, 0.29", "218.755, -20.5724, -67.7088, 0.29", "227.228, -22.2465, -69.0931, 0.29", "235.725, -22.2899, -71.1662, 0.29", "244.131, -20.8641, -73.1172, 0.29" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "9.60752, -14.7396, -19.582, 1.11", "10.3904, -16.7859, -20.4378, 1.11", "11.1151, -18.3311, -21.0649, 0.96", "11.7661, -19.6043, -21.5479, 0.88", "12.8059, -21.4979, -22.368, 1.03", "13.321, -22.3844, -22.8124, 1.33", "14.0802, -23.584, -23.5207, 1.62", "15.0611, -24.6944, -24.5925, 0.81", "15.555, -25.0828, -25.1976, 0.66", "16.6437, -25.5841, -26.8173, 0.66", "17.11, -25.689, -27.597, 0.66", "17.775, -25.7548, -28.8647, 0.66", "18.5762, -25.8419, -30.5553, 0.66", "18.9874, -25.9576, -31.4711, 0.59", "20.0228, -26.6442, -33.6617, 0.66", "20.4271, -27.2212, -34.3958, 1.11", "20.6988, -27.8311, -34.7999, 1.62", "21.3035, -29.4278, -35.6308, 1.77", "22.0274, -31.4593, -36.4977, 1.47", "22.5554, -33.0706, -37.0838, 1.99", "23.0159, -34.5222, -37.5539, 1.7", "23.9203, -37.2229, -38.5004, 0.96", "24.6001, -38.9556, -39.186, 1.11", "25.0632, -39.891, -39.6361, 0.66", "25.6943, -40.8612, -40.2579, 0.59", "26.602, -41.8257, -41.0764, 0.44", "27.7889, -42.5247, -42.0592, 0.44", "28.8761, -42.6955, -42.8844, 0.37", "29.9115, -42.6061, -43.6232, 0.81", "30.3363, -42.5162, -43.9192, 0.81", "31.765, -42.1002, -44.9419, 0.59", "33.5963, -41.48, -46.2253, 0.59", "34.7708, -41.0556, -47.061, 0.44", "35.4571, -40.8241, -47.541, 0.29", "36.1964, -40.6151, -47.9993, 0.29", "37.9847, -40.1739, -48.9714, 0.29", "38.6467, -40.0446, -49.2752, 1.03", "39.5553, -39.9351, -49.5872, 1.25", "40.9946, -39.8029, -50.0218, 0.37", "42.7258, -39.6425, -50.5035, 0.22", "44.2663, -39.4713, -50.861, 0.22", "45.0183, -39.3917, -50.9633, 0.66", "45.8315, -39.3181, -51.0727, 0.88", "55.5849, -45.8376, -59.3017, 0.88", "64.2103, -53.1352, -68.1163, 0.88", "72.9947, -61.2735, -75.9873, 0.88", "82.432, -70.1142, -82.1621, 0.88", "94.3786, -75.9998, -87.4526, 0.88", "105.906, -82.9204, -92.4092, 0.88", "118.862, -88.206, -95.498, 0.88", "132.509, -92.1445, -97.3983, 0.88", "146.517, -95.1141, -96.8442, 0.88", "160.297, -98.8894, -95.7455, 0.88", "173.705, -103.864, -94.8457, 0.88", "187.761, -106.456, -95.8787, 0.88", "201.42, -110.455, -97.5479, 0.88", "215.392, -113.547, -98.3061, 0.88", "229.195, -117.396, -98.4599, 0.88", "241.915, -123.521, -100.914, 0.88", "255.519, -127.912, -101.916, 0.88", "268.886, -132.918, -103.189, 0.88", "282.787, -136.198, -102.028, 0.88", "296.991, -137.991, -101.424, 0.88", "311.193, -139.677, -102.336, 0.88", "325.518, -139.963, -102.533, 0.88", "339.656, -141.708, -104.096, 0.88", "353.47, -143.473, -107.472, 0.88", "366.332, -143.469, -113.791, 0.88" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "185.623, -114.625, -213.352, 0.15", "191.4, -117.852, -219.314, 0.15", "196.572, -121.634, -225.5, 0.15", "201.581, -123.763, -232.55, 0.15", "206.332, -124.258, -240.067, 0.15", "211.846, -123.936, -247.053, 0.15", "218.2, -122.769, -253.184, 0.15", "225.393, -123.104, -258.425, 0.15", "232.295, -122.469, -264.019, 0.15", "239.188, -122.98, -269.636, 0.15", "246.327, -123.886, -274.883, 0.15", "253.295, -123.62, -280.423, 0.15", "260.196, -122.428, -285.926, 0.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "185.623, -114.625, -213.352, 0.07", "191.857, -118.862, -220.396, 0.15", "198.358, -123.861, -226.654, 0.15", "205.532, -128.079, -232.751, 0.15", "214.048, -132.121, -236.942, 0.15", "222.563, -136.203, -241.096, 0.15", "231.51, -140.536, -243.856, 0.15", "241.326, -143.275, -245.452, 0.15", "251.275, -145.511, -247.02, 0.15", "260.787, -149.481, -247.439, 0.15", "269.668, -154.386, -249.311, 0.15", "279.403, -157.721, -250.043, 0.15", "288.767, -161.412, -252.303, 0.15" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-8.1214, 61.3003, -20.3203, 0.52", "-8.31805, 62.8491, -20.8065, 0.52", "-8.4416, 63.5643, -21.0043, 0.29", "-8.56748, 64.1494, -21.1478, 0.29", "-8.69597, 64.6871, -21.2612, 0.29", "-8.96909, 65.7093, -21.4535, 0.52", "-9.22483, 66.5926, -21.6032, 0.74", "-9.49296, 67.3853, -21.6953, 0.81", "-9.74917, 68.1389, -21.7547, 0.81", "-10.096, 69.1566, -21.7924, 0.29", "-10.3395, 69.8887, -21.7818, 0.37", "-10.5583, 70.5693, -21.7388, 0.44", "-10.7031, 71.0224, -21.7091, 0.29", "-10.8862, 71.6507, -21.7028, 0.29", "-11.0216, 72.165, -21.7306, 0.44", "-11.1712, 72.8221, -21.8066, 0.81", "-11.2496, 73.2776, -21.8735, 0.74", "-11.3602, 74.1011, -22.0083, 0.52", "-11.4644, 75.0414, -22.1666, 0.52", "-11.5091, 75.6986, -22.2772, 0.52", "-11.5259, 76.8183, -22.4235, 0.44", "-11.4867, 77.6963, -22.506, 0.44", "-11.4324, 78.3611, -22.5423, 0.52", "-11.3483, 79.0847, -22.5602, 0.66", "-11.2656, 79.6508, -22.5642, 0.66", "-11.1153, 80.5711, -22.5898, 0.44", "-10.948, 81.6027, -22.6778, 0.44", "-10.8855, 82.0649, -22.7474, 0.52", "-10.8535, 82.4502, -22.8254, 0.52", "-10.8698, 83.4464, -23.0673, 0.44", "-10.9694, 84.3255, -23.3405, 0.44", "-11.1619, 85.289, -23.7106, 0.59", "-11.3298, 85.885, -23.9632, 0.81", "-11.5451, 86.5477, -24.267, 1.03", "-11.9581, 87.6797, -24.805, 0.52", "-12.3274, 88.5759, -25.2315, 0.22", "-12.5502, 89.1387, -25.5162, 0.22", "-12.7774, 89.7498, -25.8113, 0.37", "-13.031, 90.5144, -26.1653, 0.52", "-13.153, 90.946, -26.3555, 0.52", "-13.2592, 91.3761, -26.5238, 0.22", "-13.5173, 92.5041, -26.8745, 0.22", "-13.6945, 93.3188, -27.0671, 0.22", "-13.85, 94.006, -27.1722, 0.52", "-14.0009, 94.593, -27.1974, 0.81", "-14.1728, 95.1835, -27.1753, 0.96", "-14.3246, 95.6329, -27.1214, 1.03", "-14.7077, 96.5296, -26.8847, 0.52", "-15.0579, 97.2485, -26.6543, 0.22", "-15.308, 97.6956, -26.4816, 0.22", "-15.5618, 98.1055, -26.3169, 0.37", "-15.8128, 98.4841, -26.1701, 0.59", "-16.5641, 99.5532, -25.7883, 0.22", "-16.9451, 100.1, -25.6247, 0.37", "-17.5108, 100.945, -25.4221, 0.81", "-18.0042, 101.743, -25.2679, 0.81", "-18.3588, 102.376, -25.1615, 1.03", "-18.5929, 102.835, -25.1034, 1.03", "-19.0009, 103.726, -25.0555, 0.52", "-19.1806, 104.167, -25.0442, 0.22", "-19.3481, 104.673, -25.0515, 0.22", "-19.4488, 105.045, -25.0546, 0.22", "-19.5434, 105.456, -25.0573, 0.22", "-19.6975, 106.212, -25.0618, 0.22", "-19.7956, 106.798, -25.0981, 0.22", "-19.8899, 107.464, -25.1661, 0.29", "-19.9425, 107.858, -25.2173, 0.59", "-19.9907, 108.3, -25.2804, 1.03", "-20.0443, 109.027, -25.3863, 0.81", "-20.1055, 110.068, -25.5383, 0.37", "-20.1475, 110.727, -25.6332, 0.22", "-20.1881, 111.327, -25.7126, 0.22", "-20.2291, 111.87, -25.7482, 0.22", "-20.308, 112.595, -25.7475, 0.29", "-20.428, 113.187, -25.7179, 0.81", "-20.5237, 113.51, -25.6881, 0.81", "-20.7274, 114.076, -25.6415, 0.81", "-21.1084, 115.023, -25.5746, 1.03", "-21.4654, 115.829, -25.5346, 0.74", "-22.0154, 116.989, -25.5019, 0.22", "-22.3299, 117.628, -25.499, 0.22", "-22.7712, 118.48, -25.5543, 0.37", "-23.0328, 118.976, -25.6213, 0.29", "-23.3273, 119.552, -25.7423, 0.66", "-23.6119, 120.156, -25.8819, 0.88", "-23.9121, 120.85, -26.0493, 0.22", "-24.2847, 121.74, -26.2681, 0.22", "-24.478, 122.236, -26.3786, 0.22", "-24.6405, 122.674, -26.4364, 0.29", "-24.844, 123.233, -26.4429, 0.29", "-25.11, 123.92, -26.3604, 0.44", "-25.3851, 124.603, -26.2079, 0.52", "-25.8327, 125.657, -25.9015, 0.22", "-26.2815, 126.643, -25.6055, 0.29", "-26.6872, 127.481, -25.3072, 0.44", "-27.0823, 128.244, -25.0135, 0.44", "-27.4464, 128.91, -24.7596, 0.88", "-27.886, 129.671, -24.4894, 0.59", "-28.3707, 130.488, -24.2448, 0.37", "-28.9439, 131.474, -24.0446, 0.37", "-29.4444, 132.424, -23.9186, 0.29", "-29.9602, 133.521, -23.8258, 0.29", "-30.2431, 134.196, -23.7818, 0.81", "-30.4772, 134.853, -23.7541, 1.4", "-30.7995, 135.959, -23.7396, 1.55", "-31.0563, 137.14, -23.7624, 0.74", "-31.1744, 138.137, -23.8133, 0.52", "-31.2111, 139.002, -23.8967, 0.52", "-31.2068, 139.659, -23.983, 0.52", "-31.1655, 140.572, -24.1367, 0.52", "-31.0769, 141.604, -24.3892, 0.44", "-30.9009, 143.203, -24.9407, 0.29", "-30.8168, 143.881, -25.2234, 0.29", "-30.7298, 144.656, -25.5873, 0.22", "-30.6618, 145.471, -25.9764, 0.29", "-30.6392, 146.6, -26.4915, 0.22", "-30.6962, 147.574, -26.8785, 0.22", "-30.7609, 148.11, -27.0422, 0.66", "-30.8394, 148.705, -27.2107, 1.55", "-31.0308, 150.164, -27.5965, 0.29", "-31.1838, 151.372, -27.8637, 0.22", "-31.2968, 152.435, -28.0767, 0.52", "-31.3353, 153.045, -28.2024, 0.15", "-31.3137, 154.099, -28.4971, 0.15", "-31.2667, 154.511, -28.6474, 0.37", "-31.1893, 154.853, -28.8096, 0.37", "-30.8888, 155.79, -29.3578, 0.66", "-30.7477, 156.175, -29.6064, 0.22", "-30.4686, 156.954, -30.1281, 0.15", "-30.3314, 157.367, -30.3952, 0.15", "-30.1062, 158.073, -30.883, 0.22", "-29.952, 158.58, -31.2445, 0.22", "-33.6508, 166.643, -32.5262, 0.22", "-38.4101, 174.234, -32.7859, 0.22", "-42.9223, 181.852, -34.1777, 0.22", "-47.3094, 189.245, -36.7158, 0.22", "-51.7989, 196.119, -40.3122, 0.22", "-54.6339, 203.378, -44.7402, 0.22", "-57.7964, 211.264, -47.5942, 0.22", "-60.6845, 219.233, -50.5087, 0.22", "-64.9359, 226.853, -52.5575, 0.22", "-67.8336, 235.318, -53.0963, 0.22", "-70.8754, 243.745, -52.8323, 0.22", "-72.4732, 252.416, -51.2193, 0.22", "-72.6325, 260.848, -48.1842, 0.22" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-8.1214, 61.3003, -20.3203, 0.59", "-8.08344, 62.0128, -20.9461, 0.59", "-8.06297, 62.3875, -21.2426, 0.59", "-8.00063, 63.5952, -22.1182, 0.52", "-7.9812, 64.0145, -22.4003, 0.37", "-7.96005, 64.3599, -22.6204, 0.22", "-7.9167, 64.8768, -22.9411, 0.22", "-7.86212, 65.4747, -23.3217, 0.29", "-7.8013, 66.0875, -23.7151, 0.44", "-7.7176, 66.8775, -24.1992, 0.74", "-7.62174, 67.6373, -24.679, 0.74", "-7.47575, 68.4497, -25.1749, 0.29", "-7.24298, 69.4504, -25.7647, 0.37", "-7.16838, 69.7468, -25.93, 0.37", "-7.04, 70.2108, -26.1673, 0.37", "-6.90078, 70.6856, -26.3884, 0.37", "-6.63958, 71.6982, -26.8433, 0.29", "-6.49598, 72.3815, -27.1239, 0.29", "-6.39102, 72.9891, -27.3719, 0.29", "-6.31695, 73.5288, -27.6063, 0.81", "-6.2359, 74.3017, -27.9748, 1.03", "-6.15372, 75.344, -28.4892, 0.29", "-6.11075, 75.9274, -28.8133, 0.29", "-6.04366, 76.5353, -29.1563, 0.29", "-5.94246, 77.1595, -29.5077, 0.66", "-5.77052, 77.928, -29.9273, 0.81", "-5.63482, 78.4023, -30.1719, 0.44", "-5.25738, 79.4839, -30.7547, 0.44", "-5.07256, 79.9716, -31.0296, 0.59", "-4.88707, 80.4783, -31.3013, 0.59", "-4.6523, 81.1946, -31.6773, 0.44", "-4.49747, 81.7845, -31.9557, 0.52", "-4.31727, 82.7398, -32.3507, 0.81", "-4.25708, 83.2154, -32.4987, 0.81", "-4.1992, 83.9351, -32.7513, 0.37", "-4.17649, 84.336, -32.9373, 0.37", "-4.14652, 84.8165, -33.2269, 0.37", "-4.11255, 85.1977, -33.5083, 0.59", "-4.06338, 85.6658, -33.896, 0.44", "-3.93547, 86.4896, -34.6675, 0.37", "-3.76062, 87.3341, -35.5089, 0.59", "-3.61555, 87.9116, -36.0652, 0.44", "-3.45994, 88.4782, -36.5723, 0.88", "-3.3596, 88.8572, -36.8578, 1.18", "-3.23706, 89.3921, -37.1605, 0.44", "-3.14931, 89.8766, -37.3451, 0.29", "-3.06969, 90.5781, -37.5326, 0.66", "-3.05987, 91.0881, -37.6716, 0.66", "-3.0971, 91.7668, -37.8836, 0.37", "-3.13416, 92.2211, -38.0969, 0.37", "-3.19608, 92.8111, -38.4935, 0.37", "-3.21316, 93.179, -38.7894, 0.37", "-3.20311, 93.8275, -39.3811, 0.88", "-3.16315, 94.2044, -39.7098, 0.66", "-3.01783, 95.1163, -40.4054, 0.29", "-2.94339, 95.6985, -40.7564, 0.29", "-2.88911, 96.3831, -41.1003, 0.44", "-2.85783, 96.6683, -41.2312, 0.44", "-2.76591, 97.5579, -41.5741, 0.37", "-2.76049, 98.1939, -41.7876, 0.37", "-2.90802, 99.2009, -41.9953, 0.37", "-3.06205, 99.8109, -42.0766, 0.29", "-3.74556, 107.2, -44.977, 0.29", "-5.04252, 114.732, -47.229, 0.29", "-5.8182, 122.17, -49.9776, 0.29", "-5.49508, 129.27, -53.5799, 0.29", "-5.72429, 136.96, -55.6526, 0.29", "-5.49344, 144.675, -57.6278, 0.29", "-5.61589, 152.551, -58.8265, 0.29", "-5.86765, 160.514, -58.7503, 0.29", "-7.0792, 168.375, -58.2721, 0.29", "-8.00931, 176.157, -56.8412, 0.29", "-9.20003, 184.013, -56.2412, 0.29", "-10.2007, 191.906, -56.6652, 0.29", "-12.7443, 199.435, -57.2299, 0.29", "-13.6785, 207.346, -57.0787, 0.29", "-13.7911, 215.3, -57.5389, 0.29", "-13.5605, 223.106, -59.1196, 0.29", "-14.3579, 230.649, -61.5593, 0.29", "-16.0034, 237.714, -64.8551, 0.29" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "7.72822, 32.5003, -2.74616, 0.96", "7.1037, 33.7815, -1.88235, 0.96", "6.23085, 35.3692, -0.755858, 0.52", "5.63662, 36.3615, -0.00782625, 0.81", "4.93391, 37.5061, 0.858877, 0.81", "4.33762, 38.4571, 1.59329, 0.74", "3.66271, 39.5101, 2.42873, 0.59", "2.96011, 40.5746, 3.31961, 0.74", "2.26255, 41.6123, 4.16428, 1.03", "1.37569, 42.9854, 5.16499, 0.81", "0.631668, 44.2129, 5.97089, 1.11", "0.141884, 45.0849, 6.50619, 1.25", "-0.303193, 45.9472, 7.00358, 1.11", "-0.893275, 47.1648, 7.62007, 0.66", "-1.36459, 48.1384, 8.04355, 0.52", "-1.93514, 49.3423, 8.49841, 0.66", "-2.2251, 49.9941, 8.70916, 0.81", "-2.67197, 51.052, 9.02172, 1.11", "-3.06082, 51.9782, 9.28039, 1.11", "-3.78807, 53.72, 9.7455, 0.74", "-4.49106, 55.4702, 10.1882, 0.66", "-4.9751, 56.7991, 10.4813, 0.88", "-5.4119, 58.1034, 10.7584, 0.74", "-5.76857, 59.2567, 10.9866, 0.52", "-6.0055, 60.014, 11.1364, 0.37", "-6.20516, 60.5682, 11.2465, 0.37", "-6.46521, 61.1728, 11.3645, 0.44", "-6.95195, 62.1764, 11.5549, 0.59", "-7.34916, 62.9619, 11.693, 0.88", "-7.65658, 63.5758, 11.7927, 1.18", "-8.51424, 65.3267, 12.0588, 0.74", "-9.00471, 66.3646, 12.2429, 0.52", "-9.38584, 67.2688, 12.4214, 0.52", "-9.72738, 68.2117, 12.6288, 0.74", "-9.89395, 68.756, 12.7642, 0.74", "-10.2192, 70.0506, 13.0931, 0.37", "-10.4183, 71.0252, 13.3593, 0.37", "-10.598, 71.907, 13.6268, 0.59", "-10.8009, 72.857, 13.9218, 0.88", "-11.0451, 73.9135, 14.2329, 0.88", "-11.2892, 74.9589, 14.5079, 0.74", "-11.574, 76.1795, 14.7536, 0.88", "-11.7367, 76.8909, 14.8558, 1.11", "-11.9289, 77.8079, 14.983, 1.11", "-12.1257, 78.804, 15.1657, 0.88", "-12.2583, 79.4823, 15.3217, 0.88", "-12.5496, 81.0292, 15.7316, 0.52", "-12.7619, 82.211, 16.0651, 0.44", "-13.0235, 83.7777, 16.5206, 0.37", "-13.2776, 85.3522, 17.0127, 0.37", "-13.4066, 86.0891, 17.2795, 0.66", "-13.5722, 86.8509, 17.6116, 0.96", "-13.7714, 87.6089, 17.983, 0.59", "-14.1827, 88.8446, 18.5959, 0.37", "-14.5885, 89.8979, 19.0921, 0.29", "-14.957, 90.819, 19.4943, 0.59", "-15.488, 92.1352, 20.081, 0.44", "-15.852, 93.0704, 20.4883, 0.22", "-16.1544, 93.8915, 20.8296, 0.22", "-16.402, 94.6135, 21.0906, 0.37", "-16.5824, 95.2359, 21.2353, 0.59", "-16.72, 95.8466, 21.3434, 0.74", "-16.8884, 96.9011, 21.5066, 0.66", "-16.9726, 97.5656, 21.6246, 0.74", "-17.0847, 98.3866, 21.8203, 0.81", "-17.3309, 99.8339, 22.2652, 0.22", "-17.5459, 100.987, 22.6704, 0.22", "-17.6272, 101.44, 22.8508, 0.52", "-17.7231, 102.07, 23.104, 0.66", "-17.9357, 103.604, 23.7845, 0.37", "-18.0718, 104.569, 24.2874, 0.37", "-18.2728, 105.694, 24.9626, 0.22", "-18.4843, 106.639, 25.559, 0.22", "-18.8397, 107.988, 26.451, 0.29", "-19.2319, 109.351, 27.352, 0.29", "-19.6205, 110.578, 28.1563, 0.81", "-20.0215, 111.634, 28.8474, 1.03", "-20.4897, 112.663, 29.5144, 0.96", "-21.0205, 113.716, 30.1331, 0.22", "-21.557, 114.764, 30.6806, 0.29", "-22.0945, 115.832, 31.1159, 0.59", "-22.511, 116.704, 31.433, 0.96", "-22.9164, 117.622, 31.7673, 0.96", "-23.2985, 118.501, 32.0982, 0.59", "-23.9728, 120.075, 32.7565, 0.22", "-24.4565, 121.22, 33.2642, 0.15", "-24.9657, 122.574, 33.9163, 0.15", "-25.4007, 123.884, 34.6664, 0.15", "-25.5628, 124.409, 35.0091, 0.66", "-25.8292, 125.322, 35.6796, 1.33", "-25.9725, 125.865, 36.1111, 1.33", "-26.3517, 127.512, 37.5508, 0.15", "-26.632, 128.723, 38.6492, 0.15", "-26.6938, 128.994, 38.9008, 0.15", "-26.9175, 129.866, 39.7213, 0.74", "-27.236, 130.985, 40.7597, 0.15", "-27.5978, 132.122, 41.8146, 0.66", "-27.8895, 132.859, 42.47, 1.18", "-28.0084, 133.122, 42.7062, 1.18", "-28.5716, 134.19, 43.7796, 0.22", "-28.9925, 134.884, 44.4264, 0.37", "-29.1633, 135.124, 44.6592, 0.37", "-30.0018, 136.16, 45.767, 0.15", "-30.9013, 137.179, 46.9784, 0.15", "-31.8896, 138.21, 48.1948, 0.37", "-33.3593, 139.716, 49.8721, 0.22", "-34.6479, 141.021, 51.3372, 0.44", "-35.5309, 141.957, 52.3512, 0.44", "-36.0483, 142.538, 52.9318, 0.44", "-36.9225, 143.658, 53.9934, 0.22", "-37.6831, 144.786, 55.1326, 0.15", "-38.3678, 145.955, 56.4265, 0.15", "-38.6486, 146.524, 56.9979, 0.81", "-38.878, 147.058, 57.5235, 0.29", "-39.3399, 148.349, 58.8182, 0.15", "-39.6065, 149.351, 59.9228, 0.15", "-39.7209, 149.939, 60.6303, 0.15", "-39.7818, 150.394, 61.1822, 0.52", "-39.7942, 150.57, 61.392, 0.52", "-39.8129, 151.327, 62.2955, 0.22", "-39.8263, 152.786, 63.931, 0.22", "-39.8117, 153.955, 65.1611, 0.22", "-39.7927, 154.687, 65.9669, 0.88", "-39.7873, 155.808, 67.2468, 0.15", "-39.8314, 157.027, 68.6158, 0.52", "-39.8742, 157.529, 69.1559, 0.52", "-39.963, 158.179, 69.7527, 0.15", "-40.2276, 159.698, 70.9235, 0.15", "-40.4286, 160.705, 71.6581, 0.15", "-40.6026, 161.501, 72.1806, 0.59", "-40.6912, 161.956, 72.4243, 1.25", "-40.8017, 162.634, 72.7442, 1.25", "-40.9487, 164.104, 73.2983, 0.22", "-40.9761, 166.087, 73.7991, 0.22", "-40.9308, 166.828, 73.9499, 0.22", "-40.8399, 167.679, 74.1004, 0.44", "-40.7759, 168.172, 74.1666, 0.59", "-40.581, 169.566, 74.363, 0.22", "-40.3067, 171.28, 74.5873, 0.15", "-40.1235, 172.343, 74.6985, 0.15", "-39.9879, 173.246, 74.8012, 0.66", "-39.7725, 175.136, 75.0185, 0.22", "-39.6096, 177.23, 75.2979, 0.22", "-39.5844, 178.118, 75.4295, 0.59", "-39.5976, 179.1, 75.5847, 0.88", "-39.705, 181.478, 75.9524, 0.15", "-39.8174, 182.88, 76.2039, 0.15", "-39.921, 183.658, 76.3469, 0.15", "-40.0667, 184.481, 76.4781, 0.52", "-40.1524, 184.887, 76.5757, 0.52", "-40.4649, 186.283, 77.0459, 0.22", "-40.7287, 187.472, 77.5925, 0.22", "-40.9764, 188.913, 78.3607, 0.22", "-41.0957, 189.914, 78.9391, 0.07", "-41.2195, 191.393, 79.8491, 0.07", "-41.2689, 192.133, 80.3135, 0.44", "-41.3165, 193.096, 80.9174, 0.74", "-41.3374, 194.604, 81.729, 0.15", "-41.2968, 195.663, 82.2805, 0.15", "-41.2296, 196.761, 82.7801, 0.37", "-41.19, 197.319, 82.9827, 1.47", "-41.1445, 197.957, 83.1829, 1.47", "-40.9967, 199.846, 83.6734, 0.07", "-40.8489, 201.781, 84.1531, 0.07", "-40.777, 202.664, 84.3687, 0.07", "-40.7254, 203.241, 84.516, 0.29", "-40.6611, 203.961, 84.7049, 0.29", "-40.5542, 205.19, 85.0203, 0.07", "-40.4801, 206.379, 85.3761, 0.07", "-40.4627, 206.767, 85.4911, 0.07", "-40.4309, 207.396, 85.7007, 0.44", "-40.4066, 207.878, 85.8713, 0.44", "-40.3548, 209.147, 86.3101, 0.15", "-40.3178, 210.701, 86.6726, 0.15", "-40.313, 211.2, 86.7205, 0.44", "-40.3225, 211.773, 86.7252, 0.44", "-40.3362, 212.121, 86.6982, 0.44", "-40.4042, 213.418, 86.4184, 0.15", "-40.5169, 215.072, 85.8789, 0.15", "-40.5524, 215.713, 85.6355, 0.44", "-40.5774, 216.681, 85.3668, 0.59", "-40.555, 218.248, 85.1962, 0.15", "-40.4685, 219.762, 85.2865, 0.15", "-40.4158, 220.427, 85.4343, 0.15", "-40.3137, 221.693, 85.8498, 0.29", "-40.1312, 223.998, 86.6985, 0.22", "-39.9752, 226.059, 87.5312, 0.22", "-39.8755, 227.772, 88.1982, 0.07", "-39.836, 229.011, 88.691, 0.07", "-39.8275, 230.356, 89.1759, 0.07", "-39.8651, 231.311, 89.4891, 0.29", "-39.9172, 231.865, 89.6261, 0.29", "-40.159, 233.628, 90.1499, 0.15", "-40.4817, 235.681, 91.0989, 0.15", "-40.5825, 236.314, 91.4678, 0.52", "-40.7748, 237.263, 92.125, 0.52", "-41.0396, 238.193, 92.84, 0.22", "-41.6632, 239.788, 94.1104, 0.22", "-41.9683, 240.407, 94.6089, 0.22", "-42.4482, 241.16, 95.0949, 0.96", "-43.0829, 242.015, 95.54, 0.15", "-43.8641, 242.987, 95.8748, 0.15", "-44.6624, 243.927, 96.1005, 0.29", "-45.1438, 244.485, 96.1645, 0.22", "-45.7894, 245.241, 96.2281, 0.37", "-46.1615, 245.696, 96.2629, 0.37", "-46.9431, 246.739, 96.3436, 0.15", "-47.4008, 247.378, 96.3869, 0.15", "-47.8101, 247.945, 96.4292, 0.52", "-48.3949, 248.703, 96.4831, 0.88", "-49.4939, 250.014, 96.5568, 0.15", "-50.3499, 250.963, 96.6167, 0.15", "-50.672, 251.292, 96.6433, 0.37", "-51.2608, 251.872, 96.6956, 0.66", "-51.9925, 252.579, 96.7285, 0.22", "-53.1048, 253.639, 96.7675, 0.15", "-54.0601, 254.56, 96.7878, 0.44", "-55.1867, 255.674, 96.7891, 0.44", "-56.3345, 256.894, 96.7524, 0.07", "-57.3812, 258.099, 96.6798, 0.07", "-57.8262, 258.663, 96.6271, 0.15", "-58.3539, 259.382, 96.593, 0.59", "-58.5945, 259.722, 96.5578, 0.59", "-59.4341, 260.969, 96.4033, 0.07", "-59.888, 261.658, 96.3298, 0.15", "-60.6587, 262.798, 96.3305, 0.07", "-61.7117, 264.307, 96.3769, 0.07", "-62.8883, 265.942, 96.5104, 0.44", "-63.1584, 266.313, 96.5552, 0.44", "-64.1498, 267.632, 96.901, 0.15", "-64.9786, 268.748, 97.279, 0.15", "-65.4299, 269.363, 97.517, 0.59", "-65.8022, 269.863, 97.7207, 0.59", "-66.6304, 270.928, 98.3387, 0.15", "-67.6368, 272.21, 99.1377, 0.15", "-68.074, 272.757, 99.4905, 0.29", "-68.4759, 273.277, 99.7789, 0.29", "-69.3526, 274.438, 100.478, 0.07", "-70.2542, 275.679, 101.234, 0.07", "-70.6656, 276.28, 101.585, 0.66", "-70.927, 276.701, 101.792, 0.66", "-71.7139, 278.04, 102.506, 0.15", "-72.4341, 279.364, 103.208, 0.15", "-72.789, 280.091, 103.566, 0.44", "-73.0379, 280.656, 103.81, 0.59", "-73.6065, 282.134, 104.403, 0.15", "-74.1066, 283.878, 104.962, 0.15", "-74.2077, 284.539, 105.113, 0.37", "-74.2305, 285.385, 105.182, 0.81", "-74.1501, 286.309, 105.178, 0.44", "-73.9016, 287.648, 105.063, 0.15", "-73.4488, 289.32, 104.795, 0.15", "-73.0738, 290.655, 104.522, 0.15", "-72.7565, 291.871, 104.278, 0.15", "-72.5343, 292.833, 104.092, 0.52", "-72.3621, 293.648, 103.935, 0.52", "-72.0591, 295.42, 103.618, 0.22", "-71.9478, 296.632, 103.456, 0.22", "-71.9384, 297.631, 103.349, 0.22", "-71.9697, 298.386, 103.316, 0.29" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "7.72822, 32.5003, -2.74616, 1.62", "8.30285, 33.4125, -2.19976, 1.62", "8.7039, 34.059, -1.79536, 1.4", "9.37584, 35.1421, -1.1178, 1.4", "10.3016, 36.6343, -0.184361, 1.25", "10.9901, 37.7442, 0.50992, 1.33", "11.6531, 38.813, 1.17851, 1.55", "12.118, 39.6547, 1.76797, 1.92" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-23.6209, 34.5989, 0.0, 0.670035", "-31.8844, 47.1175, 0.0, 0.670035", "-40.1479, 59.636, 0.0, 0.670035" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "8.96717, -38.8663, -5.48713, 1.99", "9.24002, -42.4418, -5.41856, 1.99", "9.35971, -44.3805, -5.49405, 1.7", "9.51928, -47.1969, -5.68365, 1.47", "9.59527, -49.3781, -5.86517, 1.92", "9.62002, -51.3107, -6.07333, 1.84", "9.63762, -53.6483, -6.3393, 1.77", "9.6351, -55.3121, -6.55589, 2.06", "9.65389, -56.7113, -6.72059, 1.84", "9.70949, -58.4357, -6.89549, 1.77", "9.78494, -61.55, -7.1365, 1.7", "9.88078, -64.0473, -7.30255, 1.77", "10.0491, -67.2949, -7.44789, 1.84", "10.243, -70.1642, -7.46701, 2.06", "10.3926, -71.901, -7.46234, 2.14" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "8.96717, -38.8663, -5.48713, 1.25", "8.41321, -39.152, -5.01858, 1.25", "7.54226, -39.7134, -4.21117, 0.66", "7.07905, -40.0718, -3.73038, 0.81", "6.3086, -40.7945, -2.87026, 0.96", "5.73532, -41.4096, -2.21904, 0.66", "5.37677, -41.8145, -1.83979, 0.37", "4.94155, -42.3964, -1.36589, 0.52", "4.58308, -42.9229, -0.970664, 0.44", "4.18693, -43.4734, -0.549381, 0.44", "3.70207, -44.0743, -0.105951, 0.52", "3.14669, -44.6251, 0.356656, 0.52", "2.50801, -45.1347, 0.86745, 0.74", "1.78851, -45.5763, 1.44786, 0.59", "1.24901, -45.8396, 1.88017, 0.59", "0.682171, -46.0766, 2.35562, 0.37", "0.0454286, -46.3514, 2.96043, 0.37", "-0.0786454, -46.412, 3.10037, 0.37", "-0.420336, -46.6203, 3.54518, 0.37", "-0.710516, -46.8459, 3.96228, 0.81", "-1.0213, -47.1618, 4.48798, 1.03", "-1.41313, -47.6211, 5.22381, 0.37", "-1.83386, -48.1761, 6.03742, 0.37", "-2.14584, -48.6265, 6.66212, 0.59", "-2.29461, -48.8529, 6.97385, 0.88", "-2.6573, -49.4026, 7.7324, 0.44", "-3.11289, -50.0765, 8.64079, 0.29", "-3.54551, -50.7092, 9.41397, 0.29", "-3.80108, -51.0862, 9.80879, 0.22", "-4.19126, -51.6092, 10.3248, 0.22", "-4.4493, -51.9317, 10.63, 0.44", "-4.98916, -52.5686, 11.1756, 1.11", "-5.35481, -52.9603, 11.5011, 1.11", "-5.93324, -53.5, 11.9967, 0.96", "-6.7493, -54.2092, 12.7093, 0.22", "-7.10354, -54.5167, 13.0267, 0.22", "-7.36385, -54.7371, 13.2812, 0.59", "-7.88661, -55.1702, 13.8107, 0.81", "-8.45685, -55.6535, 14.432, 0.22", "-8.92284, -56.0575, 14.9645, 0.22", "-9.52465, -56.6041, 15.6499, 0.22", "-10.0816, -57.1253, 16.2461, 0.22", "-10.3479, -57.4013, 16.5148, 0.37", "-10.6017, -57.6911, 16.7384, 0.37", "-10.8907, -58.0399, 16.9528, 0.52", "-11.1324, -58.3378, 17.1068, 1.18", "-11.7461, -59.1361, 17.5015, 0.37", "-12.4795, -60.1753, 17.9865, 0.22", "-12.8962, -60.7934, 18.2702, 0.22", "-13.1572, -61.1802, 18.4618, 0.81", "-13.6836, -61.9596, 18.87, 0.81", "-14.4303, -63.0342, 19.5042, 0.29", "-14.9194, -63.6873, 19.9274, 0.29", "-15.475, -64.347, 20.3986, 0.29", "-16.2183, -65.1788, 21.0763, 0.29", "-16.458, -65.4294, 21.3055, 0.74", "-17.1087, -66.0603, 21.9712, 1.18", "-17.7383, -66.6315, 22.6307, 0.44", "-18.4296, -67.2443, 23.3891, 0.29", "-19.0498, -67.7957, 24.0853, 0.29", "-19.5361, -68.2494, 24.6264, 0.88", "-20.1239, -68.8198, 25.2878, 0.96", "-20.6551, -69.3593, 25.8726, 0.22", "-20.9401, -69.6635, 26.1903, 0.15", "-21.128, -69.8749, 26.3757, 0.22", "-21.492, -70.2939, 26.6803, 0.15", "-21.679, -70.5242, 26.8171, 0.15", "-21.9244, -70.8438, 27.0026, 0.29", "-22.1492, -71.1345, 27.1911, 0.29", "-22.502, -71.5848, 27.5174, 0.15", "-22.7367, -71.8823, 27.7522, 0.15", "-22.9793, -72.1911, 28.0336, 0.22", "-23.5101, -72.8823, 28.7578, 0.22", "-23.7983, -73.2496, 29.1634, 0.66", "-24.1697, -73.727, 29.6846, 1.4", "-24.6011, -74.2874, 30.2687, 0.29", "-25.1023, -74.9627, 30.929, 0.15", "-25.6415, -75.7226, 31.6636, 0.15", "-26.0929, -76.3662, 32.274, 0.15", "-26.4566, -76.8763, 32.778, 0.15", "-26.7419, -77.2716, 33.1646, 0.52", "-27.227, -77.9494, 33.8011, 0.52", "-27.7847, -78.7035, 34.4839, 0.22", "-28.3066, -79.4128, 35.113, 0.22", "-28.6938, -79.9231, 35.5614, 0.22", "-28.9657, -80.2634, 35.8609, 0.81", "-29.3248, -80.7022, 36.2264, 0.88", "-30.0197, -81.5231, 36.8509, 0.15", "-30.3471, -81.9164, 37.1392, 0.15", "-31.0211, -82.7695, 37.7447, 0.15", "-31.5614, -83.4605, 38.2295, 0.15", "-31.8834, -83.8703, 38.5089, 0.52", "-32.3554, -84.4766, 38.9372, 0.81", "-32.9122, -85.2177, 39.4573, 0.22", "-33.3874, -85.8447, 39.8718, 0.15", "-33.6704, -86.2128, 40.0914, 0.22", "-34.5372, -87.2643, 40.5811, 0.15", "-35.5042, -88.3484, 40.9461, 0.15", "-35.9806, -88.8539, 41.0516, 1.03", "-36.8161, -89.6741, 41.1012, 0.52", "-37.5843, -90.3761, 41.0811, 0.37", "-38.5971, -91.2645, 40.9852, 0.22", "-39.56, -92.0665, 40.8243, 0.15", "-40.0187, -92.4483, 40.725, 0.52", "-41.1993, -93.4426, 40.4955, 0.15", "-41.7878, -93.9405, 40.4279, 0.15", "-42.0693, -94.1751, 40.4251, 0.44", "-42.4345, -94.4748, 40.4813, 0.44", "-43.2617, -95.1487, 40.7398, 0.15", "-43.661, -95.4875, 40.9463, 0.22", "-44.2627, -96.033, 41.3639, 0.07", "-44.689, -96.4372, 41.6868, 0.81", "-44.8671, -96.6065, 41.824, 0.81", "-45.8693, -97.5731, 42.5892, 0.15", "-46.9751, -98.6495, 43.37, 0.15", "-47.3743, -99.053, 43.6255, 0.22", "-47.7749, -99.4732, 43.8644, 0.88", "-48.1903, -99.921, 44.1073, 1.33", "-48.6672, -100.443, 44.3816, 0.22", "-49.5407, -101.426, 44.8597, 0.15", "-50.5712, -102.618, 45.3491, 0.15", "-51.0535, -103.196, 45.5862, 0.15", "-51.311, -103.522, 45.7305, 0.37", "-51.5827, -103.879, 45.9106, 0.88", "-52.1631, -104.637, 46.3382, 0.15", "-52.7324, -105.319, 46.7587, 0.15", "-53.1601, -105.771, 47.0417, 0.15", "-54.0173, -106.585, 47.5471, 0.22", "-54.5309, -107.033, 47.8259, 0.66", "-54.9948, -107.405, 48.0835, 0.81", "-56.0212, -108.18, 48.6321, 0.15", "-56.7789, -108.741, 49.0859, 0.15", "-57.2656, -109.099, 49.4324, 0.37", "-57.8417, -109.512, 49.8834, 0.81", "-58.5537, -110.016, 50.4952, 0.59", "-59.7011, -110.819, 51.5804, 0.15", "-60.6932, -111.507, 52.5955, 0.29", "-61.5426, -112.073, 53.468, 0.29", "-62.1633, -112.494, 54.0648, 0.15", "-62.8776, -113.015, 54.7295, 0.15", "-63.2289, -113.296, 55.0218, 0.44", "-63.54, -113.561, 55.2551, 0.52", "-63.9529, -113.947, 55.4965, 0.29", "-64.7974, -114.823, 55.9975, 0.15", "-65.6202, -115.771, 56.6056, 0.15", "-65.9513, -116.187, 56.8877, 0.66", "-66.3137, -116.66, 57.2226, 0.66", "-66.737, -117.24, 57.6695, 0.15", "-67.2993, -118.032, 58.3104, 0.15", "-67.7092, -118.617, 58.7976, 0.15", "-67.98, -119.014, 59.0903, 0.81", "-68.1546, -119.289, 59.2724, 0.81", "-68.8329, -120.422, 59.9312, 0.15", "-69.108, -120.888, 60.1936, 0.15", "-69.2168, -121.077, 60.2889, 0.22", "-69.8622, -122.215, 60.8293, 0.15", "-70.537, -123.373, 61.3923, 0.15", "-70.8541, -123.91, 61.6528, 0.37", "-71.5354, -125.011, 62.2406, 0.22", "-71.8796, -125.54, 62.5725, 0.37", "-72.2724, -126.118, 62.9682, 0.37", "-72.6095, -126.596, 63.3209, 0.37", "-72.8866, -126.971, 63.6024, 0.59", "-73.7099, -128.08, 64.4639, 0.15", "-74.4413, -129.082, 65.2507, 0.07", "-74.8709, -129.691, 65.747, 0.07", "-75.141, -130.101, 66.0767, 0.59", "-75.3449, -130.436, 66.3304, 0.59", "-75.9154, -131.527, 67.1185, 0.15", "-76.2151, -132.192, 67.5585, 0.15", "-76.3974, -132.638, 67.8487, 0.22", "-76.5565, -133.046, 68.0995, 0.59", "-76.6566, -133.317, 68.2493, 0.59", "-77.1393, -134.697, 68.8954, 0.15", "-77.3331, -135.24, 69.0891, 0.15", "-77.6226, -136.013, 69.3307, 0.15", "-77.9316, -136.786, 69.5181, 0.15", "-78.1048, -137.211, 69.5902, 0.29", "-78.3205, -137.728, 69.6372, 0.52", "-78.6578, -138.501, 69.5736, 0.15", "-78.8597, -138.965, 69.4844, 0.15", "-79.2705, -139.895, 69.1804, 0.15", "-79.4273, -140.244, 69.0394, 0.29", "-79.5397, -140.488, 68.9264, 0.59", "-80.1839, -141.936, 68.334, 0.07", "-80.7092, -143.219, 67.9809, 0.07", "-81.1985, -144.508, 67.8578, 0.15", "-81.2694, -144.704, 67.8753, 0.29", "-81.5359, -145.412, 68.0705, 0.52", "-82.1782, -147.071, 68.8867, 0.07", "-82.6904, -148.371, 69.8002, 0.07", "-82.9616, -149.046, 70.3565, 0.07", "-83.0851, -149.323, 70.5929, 0.29", "-83.6404, -150.462, 71.5086, 0.07", "-84.1273, -151.361, 72.1651, 0.07", "-84.2956, -151.635, 72.319, 0.37", "-84.4961, -151.932, 72.4596, 0.52", "-85.2249, -152.981, 72.906, 0.15", "-85.5966, -153.521, 73.1346, 0.15", "-86.0169, -154.146, 73.3758, 0.22", "-86.3191, -154.6, 73.541, 0.37", "-86.6069, -155.046, 73.707, 0.44", "-86.9409, -155.599, 73.9099, 0.22", "-87.4389, -156.527, 74.2269, 0.66", "-87.8681, -157.423, 74.513, 0.22", "-88.2611, -158.338, 74.816, 0.07", "-88.4317, -158.767, 74.958, 0.15", "-88.7317, -159.595, 75.2212, 0.59", "-89.1527, -160.826, 75.5861, 0.07", "-89.4304, -161.674, 75.81, 0.07", "-89.7972, -162.802, 76.1111, 0.15", "-89.9525, -163.257, 76.2354, 0.37", "-90.203, -163.924, 76.4198, 0.37", "-90.4913, -164.612, 76.6059, 0.37", "-90.8242, -165.348, 76.7882, 0.07", "-91.3368, -166.452, 77.0217, 0.07", "-91.5743, -166.971, 77.1157, 0.52", "-91.7016, -167.272, 77.1683, 0.52", "-92.1333, -168.373, 77.3957, 0.07", "-92.4909, -169.39, 77.6247, 0.07", "-92.6615, -169.951, 77.7637, 0.52", "-92.7611, -170.33, 77.8335, 0.52", "-93.0537, -171.551, 78.0026, 0.07", "-93.4027, -173.076, 78.1604, 0.07", "-93.5466, -173.688, 78.2085, 0.22", "-93.8732, -174.957, 78.2909, 0.07", "-94.3493, -176.737, 78.3884, 0.07", "-94.4589, -177.138, 78.4045, 0.37", "-95.0251, -179.147, 78.4365, 0.07", "-95.4945, -180.821, 78.4063, 0.07", "-95.8806, -182.153, 78.3942, 0.07", "-96.0545, -182.716, 78.4049, 0.44" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "25.0026, -29.4136, 4.28987, 1.03", "25.7967, -30.2688, 3.26766, 1.03", "26.8254, -31.3766, 1.94351, 1.03", "27.42, -32.0169, 1.1781, 1.11", "28.0717, -32.7187, 0.339241, 1.25", "28.5225, -33.2042, -0.241068, 1.47", "29.1894, -33.9223, -1.09943, 1.84" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "25.0026, -29.4136, 4.28987, 1.25", "24.9662, -30.9329, 3.12023, 1.25", "24.9729, -32.8882, 1.8189, 0.81", "25.0091, -33.9494, 1.2156, 0.74", "25.0779, -34.9887, 0.706728, 0.59", "25.1421, -35.6088, 0.449635, 0.66", "25.2584, -36.4718, 0.149539, 0.52", "25.4654, -37.4091, 0.0120081, 0.88", "25.7112, -38.2407, 0.0469722, 0.52", "25.936, -38.9273, 0.145587, 0.44", "26.224, -39.729, 0.312803, 0.59", "26.4815, -40.413, 0.471066, 0.74", "26.7772, -41.1842, 0.669493, 0.59", "27.0252, -41.8241, 0.851763, 0.59", "27.2241, -42.3824, 1.0164, 0.96", "27.4272, -43.0325, 1.21876, 1.03", "27.6416, -43.8814, 1.45949, 0.66", "27.8328, -44.7539, 1.67688, 0.44", "27.926, -45.1865, 1.7609, 0.29", "28.0249, -45.5629, 1.81804, 0.29", "28.1515, -45.8703, 1.86604, 0.29", "28.582, -46.5897, 2.01768, 0.44", "28.9245, -47.0085, 2.14923, 0.59", "29.3782, -47.4833, 2.3412, 0.81", "29.9136, -48.0071, 2.59446, 0.74", "30.6235, -48.6771, 2.958, 0.59", "31.1559, -49.1943, 3.25927, 0.59", "31.712, -49.7679, 3.6129, 0.59", "32.2911, -50.4229, 4.01269, 0.88", "33.0013, -51.3333, 4.53141, 1.03", "33.5499, -52.1435, 4.94007, 0.88", "33.9828, -52.8577, 5.2597, 0.88", "34.3873, -53.568, 5.5514, 1.18", "34.8116, -54.3623, 5.87671, 0.74", "35.2594, -55.2602, 6.26006, 0.66", "35.6194, -56.0195, 6.60424, 0.66", "35.8525, -56.5718, 6.81955, 0.52", "36.1547, -57.3402, 7.07835, 0.52", "36.4922, -58.2398, 7.35806, 0.52", "36.7814, -59.0941, 7.59539, 0.59", "37.0072, -59.8462, 7.79589, 0.74", "37.5068, -61.6796, 8.24636, 0.96", "37.7073, -62.4461, 8.42231, 0.66", "37.9836, -63.5079, 8.63513, 1.62", "38.2912, -64.6231, 8.83588, 1.47", "38.5748, -65.5889, 9.02453, 0.81", "38.8789, -66.4878, 9.2691, 0.74", "39.2007, -67.2479, 9.56604, 0.74", "39.3923, -67.6445, 9.7321, 0.52", "39.6403, -68.0694, 9.92079, 0.29", "39.861, -68.3647, 10.0677, 0.29", "40.4791, -69.0815, 10.4394, 0.37", "41.0151, -69.6606, 10.7708, 0.59", "41.4647, -70.1682, 11.0643, 0.74", "41.9689, -70.7787, 11.3944, 0.74", "42.345, -71.2509, 11.6319, 0.44", "42.7949, -71.819, 11.9084, 0.59", "43.3314, -72.5328, 12.2256, 0.66", "43.7781, -73.1748, 12.5098, 0.66", "44.3118, -74.0579, 12.8273, 0.59", "44.852, -75.0722, 13.1299, 0.37", "45.1571, -75.7033, 13.298, 0.37", "45.4135, -76.3107, 13.4368, 0.74", "45.7463, -77.177, 13.6282, 0.29", "46.1723, -78.3444, 13.9334, 0.37", "46.3798, -78.9825, 14.1443, 0.59", "46.5677, -79.6152, 14.3882, 0.81", "46.8226, -80.4469, 14.7589, 1.03", "47.1646, -81.3285, 15.2851, 0.59", "47.4486, -81.9142, 15.7129, 0.37", "47.7359, -82.4514, 16.1567, 0.37", "47.9443, -82.8465, 16.4699, 0.59", "48.195, -83.3345, 16.8378, 1.33", "48.6374, -84.2904, 17.5086, 0.66", "48.8418, -84.8149, 17.8352, 0.44", "49.1041, -85.6064, 18.2813, 0.52", "49.3446, -86.4705, 18.7511, 0.37", "49.5306, -87.369, 19.2145, 0.37", "49.6185, -88.0954, 19.5656, 0.37", "49.6248, -88.4625, 19.7164, 0.37", "49.582, -89.2971, 20.036, 0.22", "49.5196, -89.8787, 20.2494, 0.22", "49.4141, -90.4775, 20.4349, 0.66", "49.2805, -91.0494, 20.5775, 0.88", "49.0458, -91.9703, 20.7696, 0.22", "48.9075, -92.4885, 20.8688, 0.29", "48.7385, -93.0861, 20.9538, 0.66", "48.5209, -93.8814, 21.034, 1.18", "48.3486, -94.558, 21.1007, 1.47", "48.1432, -95.4449, 21.1763, 0.96", "47.9583, -96.3453, 21.2607, 0.37", "47.7638, -97.4599, 21.372, 0.29", "47.6258, -98.4144, 21.4841, 0.29", "47.5472, -99.0948, 21.5839, 0.37", "47.4702, -99.978, 21.7273, 0.66", "47.4029, -101.029, 21.9298, 0.59", "47.3713, -101.952, 22.1315, 0.29", "47.3857, -103.049, 22.4115, 0.22", "47.4116, -103.697, 22.5747, 0.22", "47.442, -104.194, 22.6928, 0.66", "47.4952, -104.852, 22.8394, 0.96", "47.5496, -105.401, 22.9496, 0.81", "47.6708, -106.575, 23.1571, 0.29", "47.7528, -107.358, 23.2861, 0.29", "47.8277, -108.016, 23.4063, 0.29", "47.8936, -108.616, 23.5241, 0.81", "47.9917, -109.496, 23.7084, 1.11", "48.0736, -110.301, 23.8962, 0.81", "48.1207, -110.794, 24.021, 0.44", "48.2191, -111.817, 24.2759, 0.22", "48.2709, -112.527, 24.4223, 0.52", "48.3053, -113.132, 24.5275, 0.81", "48.3448, -114.021, 24.6623, 0.37", "48.3634, -114.674, 24.7433, 0.15", "48.3748, -115.514, 24.8225, 0.15", "48.373, -116.373, 24.8666, 0.22", "48.3756, -116.882, 24.8854, 0.81", "48.3874, -117.602, 24.9132, 0.52", "48.4141, -118.357, 24.9531, 0.29", "48.4632, -119.193, 25.0442, 0.22", "48.543, -120.071, 25.1969, 0.22", "48.5933, -120.507, 25.2953, 0.22", "48.664, -121.098, 25.4423, 0.59", "48.7195, -121.582, 25.5795, 0.52", "48.7955, -122.321, 25.822, 0.29", "48.8374, -122.902, 26.0357, 0.29", "48.867, -123.369, 26.2195, 0.88", "48.9038, -123.944, 26.4374, 1.7", "48.9381, -124.511, 26.6441, 1.84", "48.9694, -125.041, 26.8285, 1.84", "49.0082, -125.741, 27.0585, 0.96", "49.0842, -126.771, 27.4038, 0.29", "49.1466, -127.402, 27.6159, 0.29", "49.2346, -128.045, 27.8275, 0.29", "49.3254, -128.629, 27.9912, 0.29", "49.3977, -129.115, 28.0944, 0.66", "49.4656, -129.595, 28.1688, 1.18", "49.553, -130.311, 28.2516, 0.29", "49.6639, -131.237, 28.3317, 0.22", "49.7884, -132.199, 28.4268, 0.22", "49.9003, -133.096, 28.5352, 0.22", "49.9587, -133.596, 28.6095, 0.22", "50.0307, -134.3, 28.7363, 0.81", "50.0993, -134.851, 28.8711, 0.29", "50.2319, -135.733, 29.1527, 0.15", "50.3717, -136.46, 29.4321, 0.15", "50.5168, -137.12, 29.6982, 0.15", "50.6346, -137.624, 29.8914, 0.96", "50.8171, -138.382, 30.1491, 1.47", "51.0188, -139.216, 30.3967, 0.81", "51.2585, -140.223, 30.6493, 0.29", "51.442, -141.004, 30.8352, 0.22", "51.5703, -141.61, 30.9737, 0.29", "51.6992, -142.31, 31.125, 0.81", "51.7652, -142.801, 31.21, 0.74", "51.8268, -143.407, 31.3025, 0.37", "51.8547, -143.86, 31.3673, 0.22", "51.8819, -144.38, 31.4558, 0.22", "51.8995, -144.61, 31.5013, 0.29", "51.9956, -145.363, 31.677, 0.37", "52.1052, -145.832, 31.8223, 0.37", "52.3239, -146.41, 32.0774, 0.22", "52.6254, -146.975, 32.4215, 0.37", "52.875, -147.37, 32.7055, 0.88", "53.1074, -147.707, 32.974, 1.84", "53.675, -148.46, 33.6109, 1.7", "54.3134, -149.229, 34.2847, 0.29", "54.88, -149.885, 34.8558, 0.29", "55.2209, -150.276, 35.2011, 0.29", "55.4367, -150.531, 35.4211, 0.74", "55.8261, -151.008, 35.8101, 0.81", "56.3047, -151.636, 36.2507, 0.29", "56.5878, -152.017, 36.4937, 0.15", "56.9982, -152.613, 36.8296, 0.15", "57.3132, -153.093, 37.0707, 0.22", "57.5223, -153.443, 37.2217, 0.37", "57.7583, -153.887, 37.3783, 0.88", "57.9682, -154.328, 37.4966, 0.59", "58.3255, -155.118, 37.6743, 0.15", "58.7892, -156.172, 37.9022, 0.15", "59.0329, -156.743, 38.0369, 0.15", "59.3516, -157.539, 38.2546, 0.22", "59.5893, -158.196, 38.4674, 0.22", "59.8661, -158.994, 38.7994, 0.29", "60.0737, -159.639, 39.1467, 0.88", "60.1544, -159.908, 39.3327, 0.88", "60.4144, -160.729, 40.0299, 0.22", "60.5998, -161.29, 40.5861, 0.37", "60.8269, -161.96, 41.339, 0.22", "60.9771, -162.408, 41.8748, 1.4", "61.1717, -162.978, 42.5683, 0.88", "61.4162, -163.697, 43.4598, 0.15", "61.5703, -164.202, 44.075, 0.15", "61.7364, -164.797, 44.7737, 0.15", "61.8057, -165.108, 45.106, 0.66", "61.9129, -165.691, 45.7076, 1.47", "61.9547, -166.108, 46.133, 1.25", "61.9577, -166.698, 46.7247, 0.29", "61.9143, -167.366, 47.3851, 0.22", "61.8591, -167.877, 47.9013, 0.59", "61.7522, -168.501, 48.5666, 0.15", "61.6168, -169.069, 49.2206, 0.15", "61.4887, -169.491, 49.7635, 0.15", "61.3114, -169.965, 50.4559, 0.22", "61.1626, -170.284, 50.9546, 0.59", "61.0384, -170.531, 51.3721, 0.88", "60.8892, -170.871, 51.9797, 0.22", "60.7274, -171.358, 52.8705, 0.15", "60.655, -171.62, 53.346, 0.52", "60.6081, -171.865, 53.7592, 1.11", "60.5237, -172.596, 54.8339, 0.07", "60.4988, -173.143, 55.5482, 0.07", "60.4778, -173.662, 56.1156, 0.07", "60.4679, -174.093, 56.5161, 1.03", "60.4439, -174.992, 57.2588, 0.15", "60.4262, -175.865, 57.8979, 0.15", "60.4139, -176.335, 58.2017, 0.44", "60.3529, -177.692, 59.0021, 0.22", "60.3092, -178.472, 59.4372, 0.22", "60.2428, -179.452, 59.9568, 0.22", "60.1517, -180.553, 60.4984, 0.07", "60.1044, -181.032, 60.7115, 0.07", "60.0084, -181.791, 60.9978, 0.07", "59.9484, -182.189, 61.1172, 0.07", "59.8837, -182.507, 61.1934, 0.52", "59.7606, -182.99, 61.2869, 0.52", "59.4425, -184.035, 61.4663, 0.07", "59.106, -185.063, 61.6426, 0.07", "58.9696, -185.461, 61.7145, 0.52", "58.7515, -186.101, 61.8858, 0.29", "58.3991, -187.181, 62.2687, 0.22", "58.2612, -187.629, 62.4654, 0.52", "58.1156, -188.146, 62.7201, 1.03", "57.9995, -188.592, 62.9605, 0.44", "57.6714, -189.909, 63.681, 0.07", "57.411, -191.04, 64.3121, 0.15", "57.2409, -191.851, 64.7822, 0.15", "57.1279, -192.449, 65.1418, 0.59" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-13.6003, -15.6135, -1.00976, 1.03", "-14.1443, -17.5126, -1.88007, 1.03", "-14.7812, -19.6998, -2.8917, 0.81", "-15.055, -20.6041, -3.33105, 0.81", "-15.4019, -21.7268, -3.86898, 0.88", "-15.9853, -23.5639, -4.79666, 1.11", "-16.4327, -24.921, -5.47734, 1.03", "-16.8672, -26.1686, -6.09461, 0.81", "-17.4955, -28.0004, -6.94416, 1.33", "-18.0094, -29.519, -7.61592, 1.18", "-18.5459, -31.1387, -8.26528, 1.4", "-19.2193, -33.1828, -8.98179, 0.59", "-19.7046, -34.6712, -9.42493, 0.59", "-20.122, -36.0209, -9.73401, 0.74", "-20.5561, -37.4705, -9.97251, 0.66", "-21.1287, -39.4193, -10.2015, 0.66", "-21.4759, -40.6182, -10.2843, 0.81", "-21.8803, -42.0935, -10.3383, 0.88", "-22.2596, -43.5363, -10.3637, 0.88", "-22.6312, -44.9931, -10.3755, 0.96", "-22.8849, -46.098, -10.3759, 1.18", "-23.1532, -47.4548, -10.3744, 1.47", "-23.4966, -49.5305, -10.334, 1.11", "-23.6454, -50.6053, -10.3104, 0.96", "-23.7422, -51.5062, -10.3088, 0.81", "-23.8828, -53.1401, -10.3564, 0.74", "-24.0003, -54.5499, -10.4566, 0.81", "-24.1405, -56.0249, -10.6597, 0.81", "-24.3045, -57.3396, -10.9338, 0.96", "-24.5592, -58.9759, -11.3628, 0.88", "-24.7597, -60.1086, -11.7198, 0.81", "-25.0764, -61.6204, -12.2678, 0.74", "-25.4249, -63.1847, -12.8689, 0.81", "-25.6831, -64.2644, -13.3173, 0.88", "-25.9688, -65.4159, -13.7956, 1.03", "-26.1959, -66.3071, -14.158, 1.03", "-26.8517, -68.7696, -15.0797, 0.44", "-27.2278, -70.0761, -15.5482, 0.44", "-27.6545, -71.5049, -16.0026, 0.66", "-27.8768, -72.2542, -16.2122, 0.88", "-28.1647, -73.2368, -16.4143, 1.11", "-28.6866, -74.9974, -16.6425, 0.88", "-29.1729, -76.7135, -16.6885, 0.44", "-29.4927, -77.9071, -16.6295, 0.44", "-29.8423, -79.3136, -16.4635, 0.59", "-30.2696, -81.1772, -16.1965, 0.44", "-30.5501, -82.579, -15.9764, 0.37", "-30.8502, -84.3716, -15.711, 0.52", "-31.0834, -85.8141, -15.5443, 0.88", "-31.2904, -87.0154, -15.4756, 0.88", "-31.5432, -88.3519, -15.4653, 1.47", "-31.7422, -89.3302, -15.5101, 1.47", "-32.1018, -90.9012, -15.6419, 0.88", "-32.5289, -92.5747, -15.8383, 0.52", "-32.978, -94.2294, -16.0083, 0.44", "-33.3036, -95.351, -16.1114, 0.52", "-33.5876, -96.2771, -16.1754, 0.59", "-33.8993, -97.2748, -16.2305, 0.37", "-34.2347, -98.3819, -16.2871, 0.37", "-34.6854, -99.881, -16.3748, 0.37", "-34.9176, -100.67, -16.3902, 0.74", "-35.2675, -101.886, -16.3872, 1.18", "-35.6209, -103.103, -16.4207, 1.25", "-36.0627, -104.564, -16.5083, 0.52", "-36.5619, -106.131, -16.6426, 0.29", "-37.3611, -108.557, -16.9001, 0.59", "-37.7688, -109.819, -17.042, 0.66", "-38.4023, -111.905, -17.2001, 0.96", "-38.889, -113.668, -17.2629, 1.03", "-39.2395, -115.203, -17.2523, 1.33", "-39.4189, -116.342, -17.199, 0.52", "-39.6232, -118.394, -17.058, 0.37", "-39.738, -120.541, -16.8015, 0.37", "-39.7667, -121.885, -16.5834, 0.66", "-39.7807, -123.278, -16.3801, 1.03", "-39.8137, -124.733, -16.212, 0.88", "-39.8747, -126.08, -16.1085, 0.59", "-40.0139, -127.719, -16.0559, 0.37", "-40.2236, -129.32, -16.1136, 0.44", "-40.5153, -131.028, -16.2402, 0.29", "-40.9332, -132.95, -16.4444, 0.22", "-41.1398, -133.755, -16.5263, 0.44", "-41.3987, -134.675, -16.6044, 0.88", "-41.5388, -135.134, -16.6389, 0.96", "-41.9844, -136.497, -16.6875, 0.44", "-42.5342, -138.083, -16.7036, 0.29", "-43.121, -139.673, -16.7074, 0.29", "-43.5259, -140.761, -16.7071, 0.52", "-43.8769, -141.704, -16.7143, 0.59", "-44.4505, -143.239, -16.7498, 0.52", "-44.8452, -144.305, -16.7951, 1.18", "-45.3087, -145.634, -16.8914, 1.4", "-45.8227, -147.181, -17.0628, 1.03", "-46.3111, -148.752, -17.2662, 0.44", "-46.7237, -150.162, -17.4853, 0.22", "-47.0324, -151.268, -17.6976, 0.22", "-47.2174, -151.955, -17.8307, 0.22", "-47.3424, -152.413, -17.9314, 0.44", "-47.4994, -152.942, -18.0541, 0.96", "-47.7722, -153.793, -18.2629, 0.59", "-48.2669, -155.211, -18.6187, 0.29", "-48.7212, -156.372, -18.9113, 0.22", "-49.1339, -157.414, -19.1776, 0.29", "-49.5463, -158.413, -19.4278, 0.52", "-49.9032, -159.234, -19.6556, 0.96", "-50.4233, -160.378, -19.9896, 1.77", "-51.2016, -162.027, -20.4778, 2.14", "-51.8784, -163.443, -20.8878, 1.62", "-52.6697, -165.107, -21.3475, 0.52", "-53.5326, -166.954, -21.8694, 0.44", "-54.1129, -168.214, -22.185, 0.22", "-54.6642, -169.429, -22.4557, 0.37", "-55.3717, -171.042, -22.7402, 0.22", "-55.9928, -172.506, -22.8847, 0.22", "-56.5545, -173.941, -22.9214, 0.22", "-57.0351, -175.263, -22.8132, 0.22", "-57.2532, -175.904, -22.699, 0.96", "-57.6453, -177.129, -22.3941, 1.33", "-58.0987, -178.604, -21.9115, 1.03", "-58.4715, -179.806, -21.4794, 0.29", "-58.9395, -181.306, -20.9309, 0.29", "-59.3672, -182.696, -20.4932, 0.44", "-59.7066, -183.798, -20.1735, 0.81", "-60.1556, -185.208, -19.8118, 0.59", "-60.5883, -186.548, -19.4885, 0.52", "-61.0006, -187.857, -19.1786, 0.22", "-61.4886, -189.4, -18.9158, 0.29", "-61.6956, -190.086, -18.8416, 0.66", "-61.8546, -190.647, -18.802, 0.74", "-62.226, -191.989, -18.7934, 0.74", "-62.6221, -193.483, -18.8457, 1.99", "-63.3337, -196.138, -19.0658, 0.44", "-63.8621, -198.134, -19.2665, 0.37", "-64.2651, -199.685, -19.4678, 0.29", "-64.5574, -200.821, -19.6609, 0.96", "-64.8276, -201.828, -19.9033, 1.47", "-65.2393, -203.308, -20.3364, 1.92" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-13.6003, -15.6135, -1.00976, 0.59", "-14.7558, -16.006, -1.5466, 0.59", "-15.8228, -16.2134, -2.08983, 0.44", "-16.6683, -16.3025, -2.49143, 0.44", "-17.0987, -16.3214, -2.67502, 0.44", "-17.8785, -16.3065, -2.92755, 0.44", "-18.5021, -16.259, -3.08085, 0.66", "-19.889, -16.0048, -3.37871, 0.66", "-20.6797, -15.7968, -3.49811, 0.52", "-21.3361, -15.6058, -3.57361, 0.52", "-22.5724, -15.228, -3.68686, 0.52", "-23.6174, -14.8884, -3.80372, 0.66", "-25.0781, -14.3921, -3.91959, 0.88", "-25.9438, -14.0897, -3.93775, 0.88", "-27.2191, -13.6412, -3.88157, 0.66", "-28.0343, -13.3764, -3.78338, 0.44", "-29.3558, -13.0115, -3.47859, 0.29", "-31.0426, -12.6692, -2.6411, 0.29", "-31.8267, -12.5595, -2.10928, 0.29", "-32.7825, -12.4675, -1.45522, 0.29", "-33.3843, -12.4402, -1.02212, 0.74", "-34.2011, -12.4449, -0.48392, 1.33", "-35.5517, -12.4745, 0.30913, 0.66", "-36.2991, -12.4711, 0.661308, 0.44", "-37.6058, -12.406, 1.22481, 0.37", "-38.6418, -12.3107, 1.65795, 0.37", "-39.4415, -12.2231, 2.00908, 0.44", "-40.0528, -12.1624, 2.28315, 0.44", "-40.979, -12.079, 2.68344, 0.44", "-41.6672, -12.0048, 2.98276, 0.29", "-41.9472, -11.948, 3.11674, 0.29", "-42.3825, -11.8071, 3.31808, 0.29", "-42.7338, -11.6472, 3.52397, 0.29", "-43.0303, -11.5034, 3.71857, 0.29", "-43.6831, -11.1786, 4.15158, 0.44", "-44.7552, -10.6126, 4.86827, 0.66", "-45.1205, -10.4194, 5.10799, 0.81", "-46.2136, -9.80466, 5.81159, 0.22", "-46.7454, -9.51409, 6.13272, 0.59", "-47.2353, -9.27667, 6.3966, 0.66", "-48.0928, -8.94017, 6.78545, 0.52", "-49.1109, -8.61986, 7.14909, 0.29", "-49.8064, -8.44154, 7.35889, 0.29", "-50.6635, -8.27332, 7.55079, 0.29", "-51.6075, -8.10635, 7.7316, 0.52", "-52.3372, -7.96301, 7.86424, 0.88", "-52.8508, -7.86285, 7.96664, 1.18", "-53.3047, -7.77205, 8.06128, 1.18", "-54.8906, -7.4683, 8.41669, 0.44", "-56.0025, -7.24235, 8.68479, 0.44", "-57.172, -7.02865, 8.97174, 0.29", "-58.0593, -6.90328, 9.21357, 0.29", "-58.9946, -6.82515, 9.47983, 0.66", "-59.4249, -6.82493, 9.62413, 0.88", "-59.9897, -6.8807, 9.83386, 0.74", "-61.1369, -7.10308, 10.2531, 0.29", "-62.2596, -7.39853, 10.671, 0.59", "-63.1117, -7.63613, 11.0027, 0.66", "-64.1957, -7.94123, 11.4622, 0.88", "-65.2618, -8.23304, 11.9272, 0.37", "-66.3973, -8.55363, 12.417, 0.15", "-67.0492, -8.73195, 12.6769, 0.15", "-67.6227, -8.87916, 12.8444, 0.15", "-68.2174, -9.01636, 12.9456, 0.37", "-69.0118, -9.18015, 12.9704, 0.81", "-69.8953, -9.3202, 12.8751, 0.44", "-71.0113, -9.42885, 12.6197, 0.29", "-71.9321, -9.49152, 12.3317, 0.29", "-72.8869, -9.51564, 11.996, 0.52", "-73.3355, -9.49854, 11.8365, 0.81", "-74.9143, -9.32143, 11.291, 0.37", "-75.7981, -9.15346, 11.0525, 0.22", "-76.4401, -9.00723, 10.935, 0.22", "-77.2955, -8.79339, 10.8872, 0.44", "-78.2024, -8.55073, 10.9392, 1.03", "-78.6355, -8.43338, 10.9997, 1.33", "-80.6422, -7.90932, 11.5148, 0.22", "-81.5384, -7.69951, 11.8462, 0.74", "-82.7683, -7.46456, 12.4397, 0.22", "-83.4904, -7.36625, 12.8502, 0.66", "-83.992, -7.31836, 13.1829, 0.66", "-84.7606, -7.26085, 13.7088, 0.66", "-85.9202, -7.22471, 14.5008, 0.22", "-86.6579, -7.21879, 14.9656, 0.22", "-87.4598, -7.221, 15.4109, 1.33", "-89.1626, -7.24351, 16.2168, 0.37", "-91.0121, -7.2791, 16.9312, 0.22", "-92.6142, -7.3242, 17.3992, 0.22", "-93.2929, -7.35191, 17.5589, 0.44", "-94.2323, -7.41418, 17.7876, 0.88", "-95.3322, -7.52785, 18.1095, 0.22", "-96.5055, -7.69668, 18.4999, 0.15", "-97.419, -7.86593, 18.8774, 0.59", "-98.9626, -8.11212, 19.6099, 0.15", "-100.171, -8.27309, 20.2405, 0.15", "-101.031, -8.388, 20.7237, 0.15", "-101.312, -8.41154, 20.8902, 1.03", "-101.87, -8.4372, 21.2188, 1.25", "-103.268, -8.46257, 21.8796, 0.29", "-103.98, -8.46258, 22.09, 0.22", "-104.768, -8.44159, 22.2368, 0.22", "-105.669, -8.3865, 22.4023, 0.22", "-106.25, -8.34124, 22.5582, 0.37", "-107.19, -8.2557, 22.8876, 0.22", "-108.206, -8.15738, 23.3922, 0.07", "-109.037, -8.06, 23.8835, 0.29", "-110.027, -7.90946, 24.5207, 0.15", "-111.084, -7.7362, 25.2314, 0.15", "-111.797, -7.59536, 25.7152, 0.74", "-113.064, -7.32724, 26.579, 0.74", "-113.907, -7.1554, 27.1254, 0.15", "-114.997, -6.92274, 27.7036, 0.15", "-115.644, -6.76841, 27.979, 0.59", "-116.54, -6.54951, 28.2977, 0.22", "-118.06, -6.17997, 28.7811, 0.22", "-118.846, -5.98834, 28.995, 0.29", "-120.269, -5.58865, 29.3875, 0.66", "-121.553, -5.22888, 29.7249, 0.15", "-122.437, -4.99067, 29.9462, 0.15", "-122.864, -4.86925, 30.0462, 0.15", "-123.384, -4.72311, 30.1506, 0.37", "-124.242, -4.48764, 30.3323, 0.37", "-125.162, -4.25887, 30.5756, 0.37", "-126.093, -4.02566, 30.8399, 0.37", "-126.784, -3.84334, 31.0607, 0.37", "-128.221, -3.47559, 31.5936, 0.15", "-129.439, -3.19526, 32.0811, 0.52", "-130.42, -3.00386, 32.5248, 0.15", "-131.564, -2.7996, 33.0756, 0.15", "-132.325, -2.68923, 33.4442, 0.81", "-132.876, -2.639, 33.7013, 0.81", "-134.347, -2.53382, 34.2292, 0.15", "-135.636, -2.46496, 34.5631, 0.15", "-136.166, -2.442, 34.664, 0.81", "-137.141, -2.41427, 34.8112, 1.11", "-138.716, -2.38622, 35.0239, 0.15", "-140.849, -2.3807, 35.323, 0.66", "-142.871, -2.39632, 35.6221, 0.07", "-144.326, -2.41929, 35.8379, 0.07", "-145.29, -2.43858, 36.0081, 0.66", "-146.324, -2.46534, 36.2272, 0.15", "-147.514, -2.5096, 36.5362, 0.15", "-148.104, -2.53402, 36.7234, 0.52", "-148.475, -2.52856, 36.8154, 0.52", "-149.079, -2.47086, 36.9377, 0.22", "-150.092, -2.27447, 37.1231, 0.07", "-150.453, -2.16554, 37.1899, 0.07", "-151.161, -1.8901, 37.3153, 0.29", "-152.073, -1.49061, 37.5039, 0.07", "-152.668, -1.20338, 37.6428, 0.07", "-153.367, -0.841977, 37.8419, 0.15", "-154.04, -0.475912, 38.0658, 0.15", "-154.798, -0.063222, 38.3489, 0.74", "-155.264, 0.192638, 38.5393, 0.15", "-156.023, 0.599999, 38.8422, 0.07", "-156.485, 0.847857, 39.0212, 0.07", "-157.011, 1.11358, 39.2095, 0.29", "-158.308, 1.76798, 39.6361, 0.15", "-158.865, 2.04701, 39.815, 0.52", "-159.956, 2.55009, 40.1854, 0.07", "-160.528, 2.79325, 40.396, 0.07", "-161.326, 3.10291, 40.6984, 0.07", "-161.764, 3.24231, 40.8934, 0.37", "-162.212, 3.32868, 41.161, 0.37", "-163.078, 3.40732, 41.7559, 0.22", "-163.83, 3.40936, 42.3094, 0.59", "-164.292, 3.35766, 42.7007, 0.59", "-165.33, 3.16839, 43.6527, 0.15", "-166.67, 2.88584, 44.8757, 0.15", "-167.414, 2.73385, 45.5061, 0.15", "-167.957, 2.62901, 45.9466, 0.29", "-170.193, 2.2167, 47.7386, 0.07", "-170.78, 2.12993, 48.1968, 0.07", "-171.623, 2.04537, 48.8178, 1.18", "-173.003, 2.00754, 49.7364, 0.07", "-173.962, 2.04775, 50.3538, 0.07", "-174.702, 2.13246, 50.7773, 0.07", "-175.281, 2.24451, 51.0336, 0.37", "-175.525, 2.30073, 51.1362, 0.37", "-176.446, 2.56971, 51.4223, 0.07", "-177.465, 2.92713, 51.6312, 0.07", "-178.089, 3.17427, 51.6968, 0.66", "-178.442, 3.32525, 51.7215, 0.66", "-179.227, 3.67867, 51.7706, 0.22", "-180.871, 4.47008, 51.8831, 0.07", "-181.673, 4.88624, 51.9397, 0.29", "-183.109, 5.66543, 52.0527, 0.07", "-183.612, 5.93408, 52.1182, 0.29", "-183.892, 6.071, 52.1681, 0.29", "-185.291, 6.63563, 52.4834, 0.07", "-185.583, 6.71748, 52.5611, 0.07", "-186.417, 6.87353, 52.6419, 0.15", "-187.45, 6.95348, 52.6081, 0.07", "-188.35, 6.95663, 52.4995, 0.66", "-189.379, 6.89848, 52.3032, 1.4", "-190.867, 6.74117, 51.9197, 0.07", "-193.467, 6.4688, 51.1642, 0.07", "-194.267, 6.39407, 50.9146, 0.07", "-194.682, 6.36796, 50.7796, 0.37", "-194.966, 6.3606, 50.6995, 0.37", "-195.674, 6.35939, 50.5906, 0.07", "-196.41, 6.37811, 50.6111, 0.59", "-197.591, 6.39461, 50.8325, 0.07", "-198.121, 6.40978, 50.8972, 0.07", "-198.805, 6.42856, 50.9363, 0.29", "-200.081, 6.44576, 50.9315, 0.07", "-200.776, 6.43759, 50.8934, 0.74", "-202.565, 6.34674, 50.7131, 0.07", "-204.129, 6.22028, 50.4942, 0.07", "-204.846, 6.16222, 50.3729, 0.07", "-205.63, 6.10662, 50.2066, 0.44", "-206.186, 6.07575, 50.0524, 0.59", "-207.632, 5.96098, 49.6155, 0.07", "-208.082, 5.88735, 49.4739, 0.22" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-15.0385, -12.4703, 9.3981, 0.96", "-15.8311, -13.3737, 8.91184, 0.96", "-16.8818, -14.561, 8.25743, 0.96", "-17.3601, -15.094, 7.95355, 1.11", "-18.1502, -15.9567, 7.45132, 0.74", "-18.7367, -16.5858, 7.09288, 0.81", "-19.3563, -17.2521, 6.71077, 0.74", "-19.9781, -17.942, 6.30084, 0.74", "-20.4982, -18.5446, 5.94192, 0.96", "-21.0274, -19.2047, 5.51499, 1.4", "-21.7063, -20.1374, 4.89886, 1.25", "-22.3133, -21.0282, 4.3071, 0.88", "-22.9794, -22.0671, 3.65742, 0.74", "-23.4961, -22.9623, 3.15347, 0.59", "-23.9458, -23.8044, 2.7153, 0.66", "-24.1714, -24.2695, 2.49459, 0.74", "-24.5347, -25.1023, 2.15072, 0.74", "-24.88, -25.9481, 1.91299, 0.88", "-25.2391, -26.8751, 1.77174, 0.96", "-25.493, -27.5598, 1.73878, 0.88", "-25.7003, -28.1234, 1.75067, 0.66", "-25.9781, -28.8752, 1.79346, 0.59", "-26.3426, -29.8749, 1.94103, 0.59", "-26.5235, -30.3468, 2.01738, 0.66", "-26.7753, -30.9412, 2.1163, 0.59", "-27.1506, -31.7238, 2.2343, 0.88", "-27.5355, -32.4468, 2.30647, 0.88", "-28.073, -33.388, 2.33817, 1.03", "-28.6273, -34.3071, 2.26257, 0.66", "-28.9775, -34.8481, 2.1908, 0.59", "-29.3071, -35.3267, 2.10627, 0.81", "-29.8501, -36.0556, 1.93875, 0.59", "-30.5571, -36.986, 1.68796, 0.52", "-31.0895, -37.6846, 1.46175, 0.66", "-31.4644, -38.178, 1.31409, 0.66", "-32.1032, -39.0244, 1.05867, 0.59", "-32.5946, -39.694, 0.910425, 0.59", "-32.9076, -40.1097, 0.880143, 0.81", "-33.414, -40.7957, 0.977129, 1.11", "-33.7248, -41.2342, 1.11599, 0.81", "-34.1677, -41.8896, 1.41256, 0.52", "-34.8097, -42.8679, 1.95254, 0.59", "-35.4433, -43.8276, 2.52652, 0.59", "-35.9197, -44.5341, 2.9561, 0.59", "-36.3872, -45.234, 3.37921, 0.88", "-36.9102, -46.0354, 3.79616, 1.11", "-37.283, -46.6045, 4.01889, 1.18", "-37.7645, -47.331, 4.17994, 0.88", "-38.0642, -47.7952, 4.24154, 1.03", "-38.3182, -48.1751, 4.27866, 1.18", "-38.9611, -49.0801, 4.37893, 0.81", "-39.6685, -50.0, 4.49382, 0.59", "-40.2655, -50.7169, 4.63666, 0.52", "-40.8237, -51.3311, 4.80269, 0.52", "-41.5036, -51.9827, 5.02334, 0.52", "-42.3309, -52.6625, 5.33077, 0.44", "-42.7588, -52.9517, 5.50127, 0.52", "-43.3522, -53.3065, 5.74153, 0.81", "-43.6978, -53.498, 5.87398, 0.81", "-44.6567, -54.0442, 6.17268, 0.52", "-45.4111, -54.5392, 6.34155, 0.44", "-46.1537, -55.1303, 6.41882, 0.29", "-46.5684, -55.5455, 6.43597, 0.29", "-46.9383, -56.0108, 6.44442, 0.52", "-47.4494, -56.8224, 6.46538, 0.81", "-47.9149, -57.7242, 6.50324, 0.81", "-48.2139, -58.3703, 6.54959, 1.18", "-48.5671, -59.1859, 6.64486, 1.55", "-48.9014, -59.9232, 6.75913, 0.88", "-49.4299, -61.0264, 6.96751, 0.74", "-49.8881, -61.9317, 7.16655, 0.52", "-50.2275, -62.5532, 7.30693, 0.66", "-50.7454, -63.3845, 7.47061, 0.81", "-51.1942, -64.0133, 7.56092, 0.59", "-51.5605, -64.4932, 7.60888, 0.29", "-52.0205, -65.0674, 7.65308, 0.29", "-52.3506, -65.4671, 7.66997, 0.29", "-53.0636, -66.3189, 7.71609, 0.37", "-53.6718, -67.0221, 7.77863, 0.37", "-54.3187, -67.7642, 7.86319, 0.44", "-54.8538, -68.384, 7.94154, 0.44", "-55.1892, -68.783, 7.9932, 0.81", "-55.6987, -69.4019, 8.06832, 1.33", "-56.0502, -69.833, 8.11566, 1.33", "-56.5112, -70.3894, 8.13259, 0.74", "-57.1992, -71.2112, 8.09277, 0.29", "-57.6693, -71.7818, 8.02812, 0.29", "-58.3286, -72.5787, 7.91871, 0.29", "-58.6595, -72.9805, 7.85402, 0.74", "-59.4715, -73.997, 7.70334, 1.11", "-60.1381, -74.8633, 7.59095, 0.52", "-60.6194, -75.4923, 7.52292, 0.29", "-61.1799, -76.2108, 7.48895, 0.29", "-61.6703, -76.8205, 7.5245, 0.44", "-62.0673, -77.2846, 7.59987, 0.52", "-62.8183, -78.0959, 7.83369, 0.29", "-63.2356, -78.5197, 7.97272, 0.44", "-63.9918, -79.2832, 8.22126, 0.59", "-64.6828, -79.9758, 8.42679, 1.11", "-65.1697, -80.4546, 8.5637, 1.62", "-65.8354, -81.0985, 8.74719, 2.06", "-66.432, -81.6783, 8.90129, 0.66", "-67.0722, -82.3582, 9.03863, 0.22", "-67.7351, -83.113, 9.13265, 0.22", "-68.0977, -83.5475, 9.16355, 0.29", "-68.342, -83.8552, 9.18229, 0.74", "-68.6853, -84.3057, 9.20205, 0.88", "-69.2854, -85.125, 9.22352, 0.22", "-69.5703, -85.5254, 9.23407, 0.22", "-69.861, -85.9619, 9.24235, 0.29", "-70.207, -86.5077, 9.24627, 0.29", "-70.5624, -87.0942, 9.24081, 0.29", "-70.8566, -87.5967, 9.26173, 0.29", "-71.1263, -88.0572, 9.30066, 0.59", "-71.3726, -88.4725, 9.34494, 1.25", "-71.6109, -88.8659, 9.39096, 1.25", "-71.9864, -89.464, 9.46252, 0.59", "-72.491, -90.2532, 9.55323, 1.25", "-73.0893, -91.1771, 9.66576, 0.44", "-73.5785, -91.9246, 9.74791, 0.29", "-74.0571, -92.6381, 9.82313, 0.29", "-74.5007, -93.2878, 9.84958, 0.29", "-74.8821, -93.8298, 9.83571, 0.52", "-75.278, -94.3795, 9.77855, 0.81", "-75.5931, -94.8089, 9.71661, 0.59", "-76.0892, -95.4841, 9.59866, 0.22", "-76.7688, -96.4219, 9.42201, 0.22", "-77.0178, -96.7746, 9.34937, 0.29", "-77.2744, -97.1462, 9.27028, 0.74", "-77.5708, -97.5834, 9.17767, 1.03", "-78.1331, -98.4491, 9.03199, 0.44", "-78.6719, -99.3696, 8.9321, 0.29", "-79.1333, -100.228, 8.89106, 0.29", "-79.3178, -100.594, 8.87579, 0.52", "-79.5304, -101.037, 8.86, 0.81", "-79.7607, -101.55, 8.84504, 0.96", "-80.2857, -102.771, 8.81906, 0.22", "-80.5072, -103.322, 8.81435, 0.22", "-80.7531, -103.988, 8.821, 0.37", "-80.9486, -104.542, 8.82365, 0.88", "-81.2941, -105.547, 8.81677, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-15.0385, -12.4703, 9.3981, 0.66", "-14.9502, -13.2293, 10.0008, 0.66", "-14.8607, -14.0149, 10.6499, 0.66", "-14.7842, -14.6846, 11.1685, 0.59", "-14.7146, -15.2003, 11.5388, 0.74", "-14.634, -15.7982, 11.9681, 0.44", "-14.5576, -16.3644, 12.3745, 0.44", "-14.4578, -17.0301, 12.8421, 0.52", "-14.3983, -17.4589, 13.0975, 1.03", "-14.3025, -18.0747, 13.4636, 1.62" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "244.131, -20.8641, -73.1172, 0.15", "255.066, -21.3347, -75.4966, 0.15", "266.191, -20.0442, -75.3341, 0.15", "277.289, -18.8184, -74.4494, 0.15", "288.081, -16.9348, -72.118, 0.15", "299.088, -15.0186, -71.3331, 0.15", "309.775, -12.1515, -69.5975, 0.15", "320.318, -9.20671, -67.2248, 0.15", "330.657, -4.9427, -66.6112, 0.15", "340.482, 0.358591, -65.7115, 0.15", "350.143, 5.92884, -66.7611, 0.15", "359.365, 12.1767, -67.9312, 0.15", "367.812, 19.0886, -70.4442, 0.15", "374.67, 27.6398, -72.747, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "244.131, -20.8641, -73.1172, 0.07", "253.64, -21.0445, -75.2856, 0.15" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "366.332, -143.469, -113.791, 0.15", "375.474, -147.287, -116.0, 0.15", "384.95, -150.838, -116.812, 0.15", "394.487, -153.802, -118.631, 0.15", "403.868, -157.101, -120.669, 0.15", "413.567, -159.642, -122.261, 0.15", "422.927, -163.432, -123.303, 0.15", "432.31, -166.895, -125.036, 0.15", "441.431, -170.616, -127.487, 0.15", "450.356, -174.21, -130.725, 0.15", "459.014, -179.051, -132.882, 0.15", "467.379, -184.781, -133.368, 0.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "366.332, -143.469, -113.791, 0.07", "377.272, -147.477, -116.625, 0.15", "388.016, -152.398, -118.662, 0.15", "398.589, -157.521, -121.062, 0.15", "409.589, -161.734, -123.303, 0.15", "420.03, -167.521, -124.441, 0.15", "430.939, -171.409, -127.549, 0.15", "441.94, -175.461, -130.071, 0.15", "453.272, -178.075, -132.992, 0.15", "465.111, -179.055, -134.627, 0.15", "476.979, -180.74, -134.967, 0.15", "488.643, -183.522, -135.047, 0.15", "499.583, -188.204, -136.527, 0.15" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-72.6325, 260.848, -48.1842, 0.15", "-76.2241, 271.447, -49.8994, 0.15", "-80.2529, 281.986, -50.8331, 0.15", "-85.4611, 291.993, -51.7966, 0.15", "-90.4331, 302.16, -51.4814, 0.15", "-93.8559, 312.822, -49.8125, 0.15", "-97.2096, 323.596, -48.8914, 0.15", "-99.4646, 334.688, -49.1834, 0.15", "-101.649, 345.782, -48.6164, 0.15", "-102.391, 357.074, -48.274, 0.15", "-101.082, 368.019, -45.6875, 0.15", "-101.78, 378.603, -41.7277, 0.15" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-72.6325, 260.848, -48.1842, 0.07", "-76.0383, 271.16, -49.4828, 0.15", "-77.1917, 281.901, -51.1986, 0.15", "-78.497, 292.33, -54.2241, 0.15", "-79.7099, 302.223, -58.7296, 0.15", "-80.7217, 312.193, -63.1131, 0.15", "-79.9206, 322.516, -66.6395, 0.15", "-80.7065, 332.578, -70.8546, 0.15", "-82.5531, 342.731, -74.479, 0.15", "-86.2884, 351.925, -79.0777, 0.15", "-90.5621, 360.819, -83.7967, 0.15", "-94.2461, 369.518, -89.3098, 0.15" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.0034, 237.714, -64.8551, 0.15", "-17.3666, 245.978, -66.248, 0.15", "-18.4091, 254.386, -66.8205, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-16.0034, 237.714, -64.8551, 0.07", "-15.8602, 245.084, -67.0996, 0.15" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-71.9697, 298.386, 103.316, 0.15", "-72.3149, 299.263, 102.547, 0.15", "-72.7899, 300.649, 101.479, 0.15", "-73.1142, 301.726, 100.742, 0.15", "-73.2342, 302.165, 100.47, 0.59", "-73.4069, 302.847, 100.082, 0.81", "-73.5996, 303.692, 99.633, 0.15", "-73.7851, 304.67, 99.1403, 0.15", "-73.877, 305.274, 98.8471, 0.15", "-73.9376, 305.724, 98.6062, 0.29", "-73.9945, 306.096, 98.3741, 0.29", "-74.057, 306.453, 98.1271, 0.29", "-74.331, 307.652, 97.3125, 0.15", "-74.6794, 308.857, 96.4993, 0.15", "-74.8607, 309.445, 96.169, 0.15", "-75.0851, 310.132, 95.8972, 0.52", "-75.2137, 310.489, 95.778, 0.52", "-75.7026, 311.802, 95.444, 0.07", "-76.0038, 312.615, 95.3217, 0.07", "-76.645, 314.32, 95.1552, 0.44", "-77.1685, 315.693, 95.0168, 0.07", "-77.7111, 317.08, 94.8073, 0.07", "-77.99, 317.762, 94.6723, 0.07", "-78.2536, 318.398, 94.5433, 0.37", "-78.3958, 318.737, 94.4767, 0.37", "-78.9913, 320.126, 94.1612, 0.15", "-79.4246, 321.22, 94.0601, 0.15", "-79.6943, 321.952, 94.0899, 0.15", "-80.0399, 322.859, 94.099, 0.59", "-80.1916, 323.23, 94.0741, 0.59", "-80.6817, 324.35, 93.8402, 0.07", "-81.1856, 325.596, 93.6373, 0.07", "-81.3607, 326.096, 93.5843, 0.29", "-81.8807, 327.905, 93.3986, 0.59", "-82.2145, 329.246, 93.1806, 0.07", "-82.5133, 330.599, 93.041, 0.07", "-83.1151, 333.6, 93.0888, 0.29", "-83.22, 334.113, 93.1406, 0.52", "-83.4358, 335.196, 93.3596, 0.15", "-83.731, 336.812, 93.8154, 0.22", "-84.0201, 338.468, 94.3095, 0.07", "-84.3069, 339.982, 94.7137, 0.07", "-84.5097, 340.95, 94.9242, 0.07", "-84.6664, 341.815, 95.1795, 0.22", "-84.7481, 342.462, 95.4328, 0.37", "-84.7768, 343.016, 95.6925, 0.44", "-84.7467, 343.892, 96.1256, 0.15", "-84.6012, 345.375, 96.9282, 0.15", "-84.4758, 346.266, 97.4805, 0.15", "-84.3806, 346.866, 97.8779, 0.15", "-84.2728, 347.684, 98.4224, 0.52", "-84.1291, 348.983, 99.2482, 0.07", "-84.0561, 349.815, 99.7279, 0.07", "-84.0221, 350.59, 100.085, 0.07", "-84.0229, 351.084, 100.282, 0.44", "-84.1089, 352.724, 100.771, 0.15", "-84.1634, 353.303, 100.911, 0.15", "-84.2425, 353.808, 100.961, 0.29", "-84.3899, 354.594, 100.965, 0.07", "-84.4887, 355.119, 100.931, 0.22", "-84.87, 357.228, 100.703, 0.07", "-85.0679, 358.426, 100.519, 0.07", "-85.352, 360.136, 100.151, 0.07", "-85.4755, 360.821, 99.9161, 0.29", "-85.6721, 361.848, 99.4611, 0.07", "-85.7662, 362.304, 99.2218, 0.44", "-86.0129, 363.381, 98.5798, 0.15", "-86.3901, 364.968, 97.5896, 0.15", "-86.8642, 366.81, 96.5095, 0.15", "-87.0323, 367.379, 96.1737, 0.37", "-87.1561, 367.747, 95.9619, 0.37", "-87.5383, 368.832, 95.4246, 0.15", "-87.8366, 369.679, 95.1723, 0.15", "-88.0249, 370.284, 95.1858, 0.29", "-88.2114, 370.967, 95.3615, 0.29", "-88.3751, 371.588, 95.5795, 0.29", "-88.7203, 372.887, 96.0919, 0.15", "-89.1414, 374.472, 96.7923, 0.15", "-89.4667, 375.73, 97.358, 0.52", "-89.6375, 376.395, 97.6255, 0.52", "-90.0004, 377.663, 98.0623, 0.07", "-90.2852, 378.548, 98.305, 0.07", "-90.3641, 378.763, 98.3444, 0.07", "-90.7422, 379.7, 98.3969, 0.59", "-91.298, 381.068, 98.382, 0.07", "-91.737, 382.22, 98.3431, 0.07", "-91.9592, 382.861, 98.3242, 0.52", "-92.0848, 383.275, 98.3143, 0.52", "-92.3662, 384.386, 98.2766, 0.15", "-92.5073, 385.097, 98.2445, 0.15", "-92.6615, 386.049, 98.1944, 0.15", "-92.7152, 386.418, 98.1844, 0.22", "-92.8536, 387.445, 98.1757, 0.22", "-92.9197, 387.944, 98.1507, 0.22", "-93.0697, 389.061, 98.0886, 0.22", "-93.2186, 390.084, 98.041, 0.07", "-93.3624, 391.071, 98.0002, 0.07", "-93.5006, 391.863, 97.9885, 0.22", "-93.8218, 393.36, 98.0017, 0.07", "-94.0165, 394.21, 98.0179, 0.07", "-94.1064, 394.654, 98.0414, 0.07", "-94.2432, 395.47, 98.0252, 0.15", "-94.4417, 397.015, 97.9226, 0.15", "-94.5421, 398.117, 97.8303, 0.44", "-94.5579, 399.603, 97.7687, 0.15", "-94.4771, 400.914, 97.7341, 0.15", "-94.1851, 403.197, 97.7692, 0.07", "-94.0465, 403.99, 97.82, 0.07", "-93.9085, 404.63, 97.9142, 0.22", "-93.5948, 406.647, 98.4529, 0.07", "-93.5381, 407.613, 98.8225, 0.07", "-93.5992, 408.532, 99.2535, 0.07", "-93.7022, 409.394, 99.7399, 0.07", "-93.934, 410.563, 100.414, 0.22", "-94.3742, 412.075, 101.3, 0.07", "-94.5996, 412.572, 101.571, 0.07", "-94.992, 413.283, 101.955, 0.15" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-71.9697, 298.386, 103.316, 0.07", "-71.739, 299.749, 104.018, 0.07", "-71.686, 300.193, 104.23, 0.22", "-71.5144, 302.105, 105.055, 0.07", "-71.4027, 303.146, 105.562, 0.07", "-71.3303, 303.68, 105.835, 0.29", "-71.2834, 303.921, 105.977, 0.29", "-71.1217, 304.545, 106.437, 0.07", "-70.9664, 305.023, 106.845, 0.44", "-70.4889, 306.277, 108.07, 0.07", "-70.3293, 306.666, 108.493, 0.29", "-69.7129, 308.059, 110.184, 0.07", "-69.2586, 309.037, 111.411, 0.07", "-69.007, 309.59, 112.157, 0.44", "-68.756, 310.187, 113.002, 0.66", "-68.2897, 311.449, 114.779, 0.07", "-67.9328, 312.521, 116.263, 0.07", "-67.804, 312.946, 116.826, 0.59", "-67.2874, 314.846, 119.103, 0.22", "-66.9373, 316.314, 120.64, 0.07", "-66.7496, 317.228, 121.442, 0.88", "-66.6405, 317.903, 121.905, 0.15", "-66.575, 318.437, 122.177, 0.44", "-66.4178, 319.774, 122.692, 0.15", "-66.285, 321.007, 122.913, 0.15", "-66.2033, 321.879, 122.964, 0.15", "-66.1369, 322.628, 122.977, 0.37", "-66.0812, 323.255, 122.997, 0.15", "-65.9952, 324.091, 123.041, 0.29" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.118, 39.6547, 1.76797, 0.37", "11.6102, 41.321, 2.65529, 0.37", "11.4395, 42.0003, 2.99015, 0.37", "11.2438, 42.9771, 3.46951, 0.37", "11.1025, 43.8984, 3.88632, 0.81", "11.0106, 44.7367, 4.22047, 1.03", "10.9202, 45.9219, 4.63515, 1.03", "10.9219, 46.899, 4.92347, 0.74", "10.9767, 48.3335, 5.293, 0.52", "11.0673, 49.5195, 5.52371, 0.29", "11.159, 50.4124, 5.65883, 0.22", "11.2845, 51.3987, 5.70492, 0.29", "11.4297, 52.3302, 5.62985, 0.59", "11.5458, 52.9447, 5.52638, 0.81", "11.7661, 53.9447, 5.24524, 0.81", "11.9414, 54.6743, 5.00913, 0.59", "12.3971, 56.5347, 4.37493, 0.29", "12.7287, 57.8433, 3.90117, 0.22", "12.8696, 58.3882, 3.68974, 0.29", "13.1495, 59.4887, 3.27311, 0.29", "13.4234, 60.6427, 2.86849, 0.22", "13.5634, 61.2974, 2.67435, 0.22", "13.7446, 62.2457, 2.47185, 0.37", "13.9026, 63.1542, 2.28074, 0.52", "14.0127, 63.837, 2.15831, 0.52", "14.1475, 64.7402, 2.03944, 0.66", "14.2363, 65.3112, 1.97347, 0.88", "14.34, 65.907, 1.9038, 1.4", "14.4845, 66.6652, 1.82081, 1.4", "14.7583, 67.9987, 1.69499, 0.59", "15.0336, 69.2402, 1.57837, 0.44", "15.2885, 70.3587, 1.53678, 0.22", "15.5006, 71.2824, 1.54944, 0.22", "15.6528, 71.937, 1.59088, 0.59", "15.7157, 72.1818, 1.61906, 0.59", "15.9621, 73.0617, 1.77086, 0.29", "16.3848, 74.5307, 2.09013, 0.29", "16.5617, 75.1838, 2.23632, 1.18", "16.7264, 75.8059, 2.36154, 1.47", "16.8796, 76.4246, 2.44769, 1.47", "17.0733, 77.2755, 2.51629, 0.52", "17.228, 77.968, 2.49908, 0.52", "17.5256, 79.3539, 2.32076, 0.22", "17.7059, 80.1966, 2.19077, 0.22", "17.8655, 80.9006, 2.07228, 0.37", "18.0277, 81.5747, 1.95259, 0.66", "18.3031, 82.5521, 1.78232, 0.96", "18.4619, 83.0227, 1.71701, 0.96", "18.9198, 84.1908, 1.60417, 0.22", "19.2634, 84.9679, 1.56968, 0.52", "19.4485, 85.3348, 1.57139, 0.52", "19.9671, 86.268, 1.63497, 0.22", "20.4621, 87.1012, 1.7659, 0.29", "20.785, 87.6105, 1.85445, 0.52", "21.106, 88.1029, 1.94065, 0.74", "21.4321, 88.6111, 2.02343, 0.74", "22.0885, 89.6548, 2.17448, 0.44", "22.8352, 90.898, 2.31022, 0.29", "23.2237, 91.5888, 2.35934, 0.52", "23.6053, 92.3281, 2.39473, 1.11", "23.9088, 92.9695, 2.41112, 0.96", "24.2364, 93.7289, 2.41217, 0.29", "24.7306, 94.9796, 2.37736, 0.22", "24.9583, 95.6031, 2.35262, 0.22", "25.2996, 96.5659, 2.33023, 0.29", "25.4748, 97.052, 2.32379, 0.29", "25.8238, 98.0151, 2.31636, 0.15", "26.0856, 98.762, 2.31411, 0.15", "26.2762, 99.3094, 2.31212, 0.22", "26.3808, 99.6056, 2.30836, 0.59", "26.5708, 100.146, 2.30591, 0.88", "26.8275, 100.888, 2.30815, 0.22", "27.0462, 101.592, 2.31242, 0.22", "27.2731, 102.446, 2.34589, 0.22", "27.3732, 102.845, 2.37144, 0.44", "27.4965, 103.342, 2.36302, 0.96", "27.6046, 103.78, 2.32026, 1.4", "27.8029, 104.596, 2.17406, 0.96", "27.9949, 105.417, 1.9814, 0.81", "28.1976, 106.297, 1.72157, 0.29", "28.576, 107.911, 1.22594, 0.37", "28.76, 108.636, 0.993683, 0.37", "29.018, 109.581, 0.69461, 0.37", "29.249, 110.377, 0.46031, 0.37", "29.4447, 111.061, 0.293588, 0.37", "29.6515, 111.798, 0.184055, 0.74", "29.7945, 112.287, 0.166984, 1.25", "30.0085, 112.995, 0.165374, 1.55", "30.3494, 114.079, 0.182901, 0.44", "30.7325, 115.325, 0.266561, 0.15", "30.9319, 115.993, 0.335513, 0.15", "31.163, 116.807, 0.421492, 0.29", "31.4462, 117.819, 0.560244, 0.15", "31.605, 118.391, 0.654142, 0.22", "31.9255, 119.495, 0.855891, 0.37", "32.0404, 119.852, 0.92219, 0.88", "32.1537, 120.182, 0.977326, 1.11", "32.4723, 121.058, 1.09556, 0.22", "32.847, 122.055, 1.19, 0.15", "33.1557, 122.879, 1.22679, 0.22", "33.5615, 123.907, 1.21608, 0.29", "33.852, 124.654, 1.20636, 0.29", "34.014, 125.072, 1.201, 0.59", "34.175, 125.483, 1.19643, 1.03", "34.3661, 125.96, 1.19288, 1.4", "34.6696, 126.749, 1.18803, 1.4", "35.0491, 127.749, 1.18563, 0.59", "35.6022, 129.156, 1.23694, 0.22", "35.8774, 129.826, 1.28457, 0.22", "36.2252, 130.636, 1.36307, 0.22", "36.4202, 131.094, 1.41782, 0.29", "36.5722, 131.478, 1.46941, 0.44", "36.8507, 132.195, 1.57538, 0.96", "36.9424, 132.472, 1.62843, 1.18", "37.0658, 132.917, 1.71815, 1.18", "37.1873, 133.396, 1.79928, 1.11", "37.5117, 134.72, 1.90319, 0.22", "37.6807, 135.428, 1.90359, 0.29", "37.9197, 136.434, 1.8189, 0.52", "38.0396, 136.899, 1.73797, 0.66", "38.2277, 137.553, 1.57394, 0.66", "38.6091, 138.72, 1.19445, 0.15", "38.7946, 139.258, 0.992909, 0.15", "38.9737, 139.781, 0.792427, 0.15", "39.3565, 140.864, 0.412916, 0.15", "39.4871, 141.244, 0.327361, 0.52", "39.6281, 141.663, 0.286523, 1.03", "39.9129, 142.503, 0.240024, 1.25", "40.0642, 142.936, 0.208317, 1.33", "40.4922, 144.118, 0.120117, 0.44", "40.9335, 145.367, 0.0195409, 0.15", "41.2198, 146.193, -0.0856585, 0.15", "41.5059, 147.005, -0.261494, 0.29", "41.7046, 147.555, -0.424046, 0.66", "41.9056, 148.118, -0.61592, 0.96", "42.0914, 148.686, -0.827269, 0.81", "42.3369, 149.514, -1.13367, 0.29", "42.7051, 150.835, -1.54936, 0.15", "42.8554, 151.387, -1.67138, 0.15", "42.9531, 151.711, -1.74935, 0.59", "43.0662, 152.043, -1.83987, 0.88", "43.239, 152.49, -1.96867, 1.11", "43.566, 153.278, -2.18665, 0.29", "44.0211, 154.319, -2.42199, 0.15", "44.5533, 155.447, -2.66072, 0.15", "44.7686, 155.867, -2.74026, 0.59", "45.0019, 156.296, -2.80726, 0.81", "45.4334, 157.073, -2.89937, 0.22", "45.9948, 158.101, -2.97098, 0.22", "46.3021, 158.666, -2.98047, 0.22", "46.6803, 159.367, -2.95612, 0.29", "47.2217, 160.343, -2.91995, 0.22", "47.6502, 161.095, -2.89031, 0.29", "48.343, 162.299, -2.84175, 0.29", "48.7508, 163.012, -2.81341, 0.29", "49.3156, 164.02, -2.74667, 0.22", "49.513, 164.38, -2.71457, 0.29", "49.7549, 164.819, -2.66602, 0.88", "49.9548, 165.177, -2.64079, 0.88", "50.3961, 165.983, -2.61653, 0.22", "51.0011, 167.119, -2.62641, 0.22", "51.5412, 168.168, -2.67104, 0.15", "51.8854, 168.835, -2.7376, 0.15", "52.415, 169.848, -2.90076, 0.29", "52.6351, 170.263, -2.99003, 0.74", "52.9855, 170.909, -3.17423, 0.22", "53.5456, 171.877, -3.51874, 0.15", "53.9925, 172.61, -3.7759, 0.15", "54.3731, 173.229, -3.95714, 0.37", "54.5709, 173.549, -4.02258, 0.59", "54.8503, 173.978, -4.1012, 1.03", "55.0249, 174.235, -4.13149, 1.03", "55.5075, 174.896, -4.13972, 0.22", "56.0573, 175.594, -4.13108, 0.15", "56.5344, 176.17, -4.12322, 0.15", "56.9257, 176.626, -4.11756, 0.96", "57.3491, 177.114, -4.09088, 0.96", "58.3999, 178.315, -3.99424, 0.15", "59.3779, 179.379, -3.93189, 0.15", "59.6903, 179.706, -3.91894, 0.15", "60.0447, 180.07, -3.91099, 0.29", "60.6579, 180.687, -3.9108, 0.96", "61.3357, 181.338, -3.92144, 0.07", "62.2006, 182.145, -3.89655, 0.07", "62.6333, 182.56, -3.85209, 0.52", "62.9145, 182.831, -3.82407, 0.59", "63.1436, 183.054, -3.83146, 0.59", "63.8845, 183.782, -3.99066, 0.15", "64.2353, 184.146, -4.10575, 0.15", "64.6853, 184.645, -4.22163, 0.29", "65.0963, 185.088, -4.30205, 0.66", "66.206, 186.206, -4.41744, 0.88", "66.7826, 186.755, -4.43169, 0.88", "67.3991, 187.3, -4.40385, 0.29", "68.5253, 188.239, -4.28315, 0.15", "69.1959, 188.813, -4.16684, 0.29", "70.0479, 189.585, -3.9624, 0.22", "70.5828, 190.086, -3.79527, 0.66", "71.0078, 190.501, -3.66102, 0.96", "71.4791, 191.009, -3.54395, 0.96", "72.8077, 192.642, -3.35035, 0.15", "73.0558, 193.018, -3.31775, 0.59", "73.2081, 193.299, -3.29853, 1.03", "73.3289, 193.562, -3.28437, 1.03", "73.7727, 194.734, -3.23905, 0.15", "74.011, 195.478, -3.21911, 0.15", "74.3691, 196.81, -3.15579, 0.15", "74.621, 197.791, -3.06839, 0.29", "74.7887, 198.466, -2.98824, 0.15", "75.0526, 199.485, -2.84204, 0.22", "75.1689, 199.906, -2.76647, 0.22", "75.4526, 200.888, -2.53666, 0.29", "75.6904, 201.639, -2.32391, 0.81", "75.8461, 202.097, -2.18444, 1.18", "76.2898, 203.26, -1.80535, 0.15", "76.5666, 203.926, -1.57254, 0.15", "76.9288, 204.778, -1.26332, 0.15", "77.1612, 205.295, -1.06439, 0.59", "77.4155, 205.845, -0.839376, 0.59", "78.0227, 207.166, -0.255788, 0.07", "78.4592, 208.092, 0.176744, 0.15", "78.7401, 208.677, 0.442792, 0.22", "79.108, 209.431, 0.753445, 0.22", "79.3352, 209.932, 0.940774, 0.96", "79.5441, 210.445, 1.11761, 1.11", "79.7948, 211.088, 1.25099, 0.88", "80.2686, 212.297, 1.36124, 0.22", "80.6793, 213.336, 1.36754, 0.22", "81.0151, 214.201, 1.31566, 0.22", "81.3496, 215.055, 1.23809, 0.22", "82.002, 216.783, 1.03525, 0.88", "82.2144, 217.368, 0.951442, 1.18", "82.3378, 217.726, 0.906995, 1.18", "82.665, 218.695, 0.844097, 0.59", "83.0078, 219.654, 0.765556, 0.22", "83.3636, 220.659, 0.683168, 0.29", "83.5368, 221.158, 0.637304, 0.22", "83.9853, 222.416, 0.429364, 0.29", "84.2303, 223.108, 0.274465, 0.52", "84.7966, 224.644, -0.193253, 0.88", "85.0074, 225.203, -0.398079, 0.88", "85.5368, 226.631, -0.958035, 0.22", "85.7131, 227.141, -1.13292, 0.22", "86.0395, 228.18, -1.43018, 0.15", "86.2271, 228.863, -1.53649, 0.74", "86.3973, 229.552, -1.54066, 0.74", "86.6833, 230.739, -1.47336, 0.15", "86.9913, 232.011, -1.35516, 0.15", "87.1883, 232.838, -1.28304, 0.22", "87.4365, 234.098, -1.16973, 0.22", "87.6145, 235.287, -1.06633, 0.22", "87.7319, 236.28, -0.958287, 0.22", "87.8065, 237.069, -0.868086, 0.29", "87.8618, 237.845, -0.79097, 0.44", "87.8997, 239.099, -0.626354, 0.66", "87.8908, 240.144, -0.464881, 0.22", "87.8642, 241.386, -0.258946, 0.22", "87.8564, 242.103, -0.134752, 0.66", "87.8596, 242.595, -0.0382578, 0.66", "87.9141, 243.912, 0.196702, 0.15", "87.9826, 244.828, 0.328458, 0.22", "88.046, 245.656, 0.470625, 0.22", "88.0802, 246.108, 0.572167, 0.52", "88.1386, 246.913, 0.844944, 0.96", "88.1748, 247.371, 1.04542, 0.96", "88.2586, 248.314, 1.54598, 0.22", "88.3806, 249.628, 2.37449, 0.22", "88.4675, 250.476, 2.96249, 0.22", "88.537, 251.075, 3.40919, 0.59", "88.5588, 251.25, 3.54014, 0.59", "88.6774, 252.08, 4.12472, 0.15", "88.8401, 253.031, 4.77727, 0.15", "88.9707, 253.627, 5.1734, 0.66", "89.1154, 254.148, 5.52759, 0.96", "89.3089, 254.754, 5.9717, 0.37", "89.679, 255.865, 6.80096, 0.15", "90.0267, 256.882, 7.56419, 0.15", "90.3369, 257.814, 8.20582, 0.15", "90.5744, 258.557, 8.69428, 0.29", "90.7476, 259.143, 9.05568, 0.74", "90.9065, 259.673, 9.38367, 1.11", "91.2212, 260.776, 10.0153, 0.15", "91.4151, 261.463, 10.337, 0.22", "91.5324, 261.825, 10.515, 0.22", "91.9539, 262.85, 11.0641, 0.15", "92.4363, 263.734, 11.5705, 0.15", "92.7048, 264.123, 11.811, 1.03", "92.9563, 264.433, 12.028, 1.7", "94.1065, 265.756, 13.0564, 0.37", "94.8087, 266.548, 13.7078, 0.15", "95.3263, 267.134, 14.1974, 0.15", "95.7025, 267.594, 14.5854, 0.74", "96.5786, 268.783, 15.6908, 0.15", "97.1006, 269.599, 16.4836, 0.15", "97.344, 270.054, 16.93, 0.66", "97.4362, 270.253, 17.1302, 0.66", "97.6991, 270.91, 17.8063, 0.15", "98.1499, 272.098, 18.8695, 0.15", "98.3375, 272.601, 19.204, 0.66", "98.4401, 272.906, 19.3498, 1.11", "98.8177, 274.102, 19.794, 0.15", "99.1276, 275.13, 20.0989, 0.15", "99.7621, 277.279, 20.545, 0.37", "99.9487, 277.947, 20.6789, 0.74", "100.4, 279.731, 21.1172, 0.07", "100.756, 281.277, 21.5664, 0.07", "100.85, 281.74, 21.7315, 0.37", "100.991, 282.487, 22.045, 0.07", "101.153, 283.533, 22.583, 0.07", "101.235, 284.111, 22.8548, 0.66", "101.291, 284.583, 23.034, 0.66", "101.383, 285.627, 23.3545, 0.15", "101.457, 286.479, 23.6074, 0.22", "101.517, 287.172, 23.7972, 0.37", "101.623, 288.199, 24.0369, 0.22", "101.724, 289.051, 24.2388, 0.44", "101.887, 290.122, 24.4744, 0.15", "102.172, 291.557, 24.7481, 0.15", "102.242, 291.809, 24.7726, 0.59", "102.411, 292.27, 24.7527, 0.88", "102.511, 292.5, 24.7126, 0.88", "103.122, 293.742, 24.3691, 0.07", "103.392, 294.25, 24.1926, 0.29", "104.293, 295.853, 23.5108, 0.07", "105.109, 297.281, 22.8854, 0.07", "105.513, 297.986, 22.5879, 0.22", "105.966, 298.778, 22.2519, 0.15", "106.29, 299.349, 22.0306, 0.37", "106.72, 300.145, 21.8179, 0.74", "106.96, 300.623, 21.7534, 1.25", "107.644, 302.049, 21.6777, 0.15", "108.117, 303.069, 21.6594, 0.15", "108.859, 304.801, 21.7643, 0.15", "109.408, 306.158, 21.963, 0.15", "109.58, 306.609, 22.0622, 0.66", "109.709, 306.952, 22.1535, 1.25", "110.074, 307.924, 22.4585, 1.33", "110.745, 309.627, 23.0092, 0.07", "111.199, 310.65, 23.2917, 0.07", "111.368, 310.986, 23.3568, 0.22", "111.691, 311.56, 23.4462, 0.66", "112.24, 312.475, 23.4961, 0.07", "112.799, 313.374, 23.4387, 0.07", "113.526, 314.501, 23.2251, 0.07", "113.839, 314.997, 23.1055, 0.07", "114.236, 315.668, 22.9442, 0.88", "115.001, 317.094, 22.6118, 0.15", "115.308, 317.747, 22.4707, 0.15", "115.528, 318.308, 22.402, 0.15", "115.734, 318.939, 22.3661, 0.66", "116.133, 320.351, 22.3726, 0.07", "116.318, 321.113, 22.414, 0.07", "116.446, 321.807, 22.4948, 0.22", "116.605, 323.36, 22.6726, 0.07", "116.595, 323.93, 22.7188, 0.07", "116.532, 324.308, 22.7134, 0.29", "116.317, 324.867, 22.6297, 0.74", "115.887, 325.574, 22.425, 0.22", "115.331, 326.285, 22.1409, 0.15", "114.847, 326.824, 21.8842, 0.59", "114.079, 327.622, 21.5149, 0.96", "113.453, 328.248, 21.2693, 0.22", "112.443, 329.24, 20.9424, 0.15", "112.031, 329.654, 20.8323, 0.52", "111.309, 330.405, 20.6887, 0.07", "110.977, 330.775, 20.6476, 0.15", "110.102, 331.835, 20.5991, 0.07", "109.676, 332.394, 20.5765, 0.22", "109.336, 332.859, 20.5565, 0.15", "108.865, 333.504, 20.5243, 0.81", "107.953, 334.748, 20.4456, 0.07", "107.563, 335.285, 20.4014, 0.59", "106.919, 336.193, 20.3048, 0.07", "106.52, 336.752, 20.247, 0.74", "105.689, 337.895, 20.1273, 0.07", "105.182, 338.512, 20.0558, 0.07", "104.754, 338.945, 20.023, 0.29", "103.998, 339.614, 19.9932, 0.07", "103.452, 340.054, 19.986, 0.52", "103.2, 340.238, 19.9709, 0.52", "101.599, 341.33, 19.7998, 0.15", "100.494, 342.069, 19.6504, 0.15", "100.045, 342.377, 19.576, 0.37", "99.486, 342.772, 19.4777, 0.59", "98.1901, 343.795, 19.2275, 0.07", "97.4547, 344.462, 19.0692, 0.07", "97.2262, 344.722, 19.0099, 0.07", "96.7856, 345.298, 18.9171, 0.15", "96.3638, 345.91, 18.8877, 0.15", "95.9706, 346.609, 18.928, 1.03", "95.8309, 346.932, 18.9766, 1.03", "95.423, 348.038, 19.1527, 0.07", "95.0226, 349.228, 19.3318, 0.07", "94.8788, 349.695, 19.418, 0.29", "94.4807, 351.084, 19.7663, 0.07", "94.2394, 351.963, 20.0442, 0.07", "94.1113, 352.462, 20.2479, 0.37", "94.0043, 352.906, 20.4594, 0.37", "93.6808, 354.196, 21.1721, 0.07", "93.3853, 355.306, 21.8877, 0.07", "93.2734, 355.713, 22.1829, 0.59", "92.8212, 357.19, 23.2572, 0.07", "92.7122, 357.533, 23.4764, 0.15", "92.3509, 358.736, 24.1018, 0.07", "92.2695, 359.014, 24.2048, 0.07", "92.1325, 359.483, 24.3214, 0.29", "91.7472, 360.715, 24.5079, 0.15", "91.1786, 362.431, 24.5826, 0.15", "90.8734, 363.377, 24.5829, 0.15", "90.6714, 364.009, 24.5518, 0.15", "90.5141, 364.486, 24.5246, 0.52", "90.083, 365.796, 24.4397, 0.07", "89.6196, 367.286, 24.3298, 0.07", "89.4622, 367.755, 24.2899, 0.29", "89.1832, 368.561, 24.2192, 0.07", "88.9533, 369.263, 24.1262, 0.22", "88.7249, 369.991, 23.9988, 0.07", "88.6035, 370.398, 23.9078, 0.07", "88.4649, 370.861, 23.7518, 0.22", "88.1718, 371.975, 23.2554, 0.07", "87.9566, 372.971, 22.8091, 0.07", "87.8874, 373.429, 22.6144, 0.59", "87.8564, 373.759, 22.4865, 0.59", "87.8126, 375.565, 21.914, 0.15", "87.8748, 376.885, 21.5735, 0.15", "88.0242, 378.067, 21.3524, 0.15", "88.1747, 379.056, 21.3268, 0.29", "88.3095, 379.927, 21.4937, 0.29", "88.468, 381.273, 22.251, 0.07", "88.4857, 381.523, 22.5215, 0.07", "88.4683, 381.896, 23.2034, 0.22", "88.3545, 382.802, 25.1836, 0.07", "88.1766, 383.548, 27.1799, 0.07", "87.9681, 384.13, 29.1386, 0.07", "87.8102, 384.431, 30.4721, 0.29", "87.4531, 384.96, 33.2297, 0.29" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.118, 39.6547, 1.76797, 0.81", "13.1204, 40.3703, 2.24318, 0.81", "13.9925, 41.0092, 2.57287, 0.66", "14.76, 41.5419, 2.74458, 0.52", "15.6653, 42.1297, 2.87233, 0.59", "17.1317, 43.0266, 2.93084, 0.81", "17.6419, 43.334, 2.92515, 0.88", "18.84, 44.0451, 2.82184, 0.44", "20.0648, 44.7812, 2.64867, 0.37", "20.6387, 45.1213, 2.52092, 0.37", "21.9076, 45.8887, 2.13239, 0.59", "22.8269, 46.4411, 1.78058, 0.66", "23.4534, 46.8249, 1.52332, 0.66", "24.3077, 47.3699, 1.17771, 0.52", "25.5, 48.1612, 0.691544, 0.22", "26.0973, 48.5729, 0.446373, 0.29", "26.8795, 49.1099, 0.158504, 0.52", "27.7699, 49.7055, -0.140628, 0.81", "28.2571, 50.042, -0.270685, 1.11", "28.892, 50.52, -0.384937, 1.11", "29.876, 51.3692, -0.453961, 0.74", "30.7629, 52.2385, -0.405826, 0.66", "31.1686, 52.6952, -0.329143, 0.52", "31.9451, 53.7249, -0.0629234, 0.29", "32.5143, 54.6279, 0.191168, 0.37", "33.1346, 55.7879, 0.533858, 0.52", "33.7018, 57.0204, 0.97747, 0.74", "34.1371, 58.0651, 1.36256, 0.96", "34.6451, 59.2982, 1.86027, 0.29", "34.9625, 60.0046, 2.20138, 0.29", "35.3013, 60.6605, 2.5975, 0.29", "35.9664, 61.7295, 3.36105, 0.66", "36.5824, 62.5508, 3.97787, 0.96", "37.184, 63.2617, 4.56869, 0.96", "38.0336, 64.1895, 5.39997, 0.66", "38.9742, 65.1974, 6.3306, 0.29", "39.9269, 66.1956, 7.25152, 0.22", "40.4563, 66.7278, 7.72562, 0.22", "41.0481, 67.3043, 8.24564, 0.44", "41.6885, 67.8981, 8.761, 0.81", "42.2965, 68.4122, 9.19625, 0.81", "43.1149, 68.9911, 9.6922, 0.59", "43.7226, 69.3465, 10.0318, 0.44", "44.3339, 69.648, 10.3408, 0.22", "45.4388, 70.0801, 10.6565, 0.29", "46.0755, 70.2836, 10.7214, 0.29", "47.0693, 70.562, 10.687, 0.37", "47.4829, 70.67, 10.6325, 0.37", "48.2494, 70.8492, 10.5382, 0.37", "50.8508, 71.404, 10.2506, 0.81", "51.7654, 71.6096, 10.1593, 0.96", "52.6715, 71.8515, 10.1594, 1.11", "53.7983, 72.1999, 10.2545, 0.52", "55.2051, 72.6812, 10.5045, 0.44", "55.7062, 72.8829, 10.6506, 0.44", "56.4143, 73.2339, 10.9515, 0.44", "57.4337, 73.8059, 11.371, 0.44", "58.2104, 74.2993, 11.6496, 0.96", "58.6891, 74.6326, 11.7856, 1.18", "59.5073, 75.2099, 11.9437, 0.66", "60.0936, 75.6124, 12.0374, 0.96", "60.5788, 75.9174, 12.1303, 0.96", "61.8365, 76.6656, 12.4678, 0.37", "62.4258, 77.0097, 12.717, 0.29", "62.9896, 77.3228, 13.0298, 0.29", "63.859, 77.7637, 13.6141, 0.29", "64.8932, 78.2799, 14.4347, 0.29", "65.7388, 78.7656, 15.2627, 0.22", "66.3425, 79.1635, 15.9746, 0.22", "66.7447, 79.458, 16.4857, 0.66", "67.2176, 79.85, 17.0778, 0.96", "67.6783, 80.272, 17.6334, 0.96", "68.757, 81.3622, 18.8471, 0.22", "69.223, 81.8525, 19.3519, 0.37", "69.5817, 82.2509, 19.7423, 0.37", "70.3976, 83.2132, 20.6351, 0.15", "70.8231, 83.71, 21.0909, 0.37", "71.291, 84.2495, 21.5851, 0.74", "72.0164, 85.0721, 22.3258, 1.33", "72.455, 85.6207, 22.7944, 1.03", "72.8632, 86.256, 23.2753, 0.22", "73.2302, 86.9049, 23.7031, 0.22", "73.5767, 87.5681, 24.0982, 0.22", "73.8261, 88.0609, 24.3642, 0.44", "74.2026, 88.8164, 24.768, 0.81", "74.8384, 90.0356, 25.4782, 0.15", "75.3522, 91.0982, 26.2247, 0.15", "75.7764, 92.096, 27.0537, 0.22", "75.8964, 92.3939, 27.3357, 0.74", "76.123, 93.0211, 27.9578, 0.96", "76.4823, 94.1011, 29.1173, 0.22", "76.8152, 95.2441, 30.3779, 0.44", "77.0678, 96.3336, 31.5209, 0.96", "77.2284, 97.1473, 32.3753, 1.33", "77.4033, 98.2426, 33.5756, 0.22", "77.5503, 99.2104, 34.6554, 0.22", "77.6103, 99.5777, 35.0598, 0.74", "77.7324, 100.047, 35.5312, 0.74", "78.4136, 101.972, 37.2444, 0.15", "78.9595, 103.258, 38.2989, 0.15", "79.2062, 103.731, 38.6288, 0.66", "79.5861, 104.397, 39.0205, 1.7", "80.3951, 105.731, 39.753, 0.44", "81.3003, 107.1, 40.4236, 0.22", "81.9289, 107.96, 40.7514, 0.22", "83.2771, 109.728, 41.4011, 0.22", "83.7677, 110.371, 41.663, 0.37", "84.3387, 111.096, 41.9932, 0.81", "84.79, 111.655, 42.2618, 1.25", "85.8231, 112.875, 42.9053, 0.15", "86.9692, 114.185, 43.6247, 0.15", "87.5346, 114.807, 43.9905, 0.66", "88.0222, 115.311, 44.2594, 0.74", "89.3828, 116.649, 44.9706, 0.15", "90.4174, 117.641, 45.5151, 0.15", "90.7445, 117.941, 45.6834, 0.52", "91.165, 118.314, 45.8714, 0.81", "92.7883, 119.711, 46.4572, 0.15", "93.6695, 120.454, 46.7177, 0.15", "93.9937, 120.718, 46.7888, 0.52", "94.3745, 121.021, 46.8408, 0.52", "95.6404, 122.023, 46.9754, 0.15", "96.7219, 122.877, 47.0717, 0.15", "97.2676, 123.327, 47.1363, 0.15", "97.6205, 123.649, 47.2101, 0.44", "98.1123, 124.144, 47.3718, 0.88", "98.653, 124.74, 47.606, 0.88", "99.4131, 125.639, 48.0239, 0.44", "100.281, 126.716, 48.5492, 0.15", "101.395, 128.065, 49.2054, 0.15", "102.101, 128.873, 49.5924, 0.22", "102.968, 129.829, 50.0273, 0.07", "103.517, 130.392, 50.2638, 0.07", "104.057, 130.884, 50.4715, 0.44", "104.703, 131.396, 50.6729, 0.96", "105.602, 132.04, 50.9053, 0.66", "106.244, 132.468, 51.087, 0.15", "107.065, 132.997, 51.3337, 0.22", "108.643, 134.011, 51.849, 0.07", "109.133, 134.328, 52.0244, 0.29", "109.43, 134.524, 52.1327, 0.29", "110.741, 135.36, 52.6089, 0.07", "111.071, 135.571, 52.7429, 0.22", "112.101, 136.257, 53.1356, 0.07", "112.543, 136.562, 53.2947, 0.07", "113.09, 136.962, 53.5009, 0.15", "113.78, 137.508, 53.7572, 0.07", "114.99, 138.542, 54.1964, 0.15", "115.889, 139.324, 54.5026, 0.15", "116.691, 140.027, 54.7465, 0.15", "117.818, 141.02, 55.1244, 0.29", "119.121, 142.15, 55.5785, 0.07", "119.688, 142.64, 55.7757, 0.44", "120.11, 143.0, 55.9134, 0.44", "121.239, 143.96, 56.3832, 0.15", "122.282, 144.839, 56.8496, 0.15", "122.743, 145.209, 57.0749, 0.74", "123.147, 145.508, 57.2767, 0.74", "124.698, 146.556, 58.0387, 0.07", "125.986, 147.36, 58.6505, 0.07", "126.503, 147.65, 58.8824, 0.29", "127.047, 147.917, 59.0977, 0.52", "128.705, 148.541, 59.706, 0.15", "129.938, 148.858, 60.1093, 0.15", "130.336, 148.924, 60.2299, 0.37", "130.817, 148.983, 60.3575, 0.88", "131.467, 149.058, 60.5277, 1.25", "133.612, 149.339, 61.223, 0.15", "135.084, 149.595, 61.8073, 0.15", "135.832, 149.771, 62.1392, 0.59", "136.277, 149.908, 62.3534, 0.59", "138.152, 150.64, 63.3021, 0.15", "139.879, 151.484, 64.2097, 0.15", "141.274, 152.38, 64.9379, 0.15", "141.673, 152.677, 65.1307, 0.59", "142.395, 153.239, 65.3866, 0.96", "143.49, 154.137, 65.6653, 0.15", "144.217, 154.766, 65.7597, 0.29", "146.018, 156.409, 65.7478, 0.07", "146.673, 157.044, 65.7097, 0.07", "148.024, 158.397, 65.6223, 0.07", "148.608, 158.999, 65.5815, 0.59", "149.103, 159.53, 65.5507, 1.03", "150.453, 161.042, 65.4915, 0.07", "151.406, 162.186, 65.5425, 0.07", "151.726, 162.6, 65.5975, 0.37", "152.081, 163.091, 65.7054, 0.37", "153.032, 164.407, 66.0603, 0.07", "153.384, 164.884, 66.2167, 0.22", "154.262, 165.958, 66.7244, 0.07", "154.827, 166.62, 67.1552, 0.96", "155.591, 167.475, 67.8095, 0.07", "156.363, 168.295, 68.513, 0.07", "157.069, 168.974, 69.1762, 0.44", "158.63, 170.344, 70.6551, 0.15", "159.618, 171.164, 71.6924, 0.15", "160.131, 171.578, 72.2981, 0.44", "160.486, 171.857, 72.7722, 0.88", "161.319, 172.478, 73.9511, 0.22", "161.971, 172.947, 74.913, 0.07", "163.173, 173.847, 76.624, 0.07", "163.7, 174.249, 77.3036, 0.52", "164.422, 174.811, 78.2065, 0.52", "165.165, 175.436, 79.0263, 0.07", "165.599, 175.835, 79.4348, 0.29", "166.606, 176.839, 80.1669, 0.07", "167.404, 177.721, 80.6563, 0.07", "167.723, 178.112, 80.8549, 0.22", "168.866, 179.602, 81.5199, 0.07", "169.283, 180.126, 81.761, 0.07", "169.947, 180.913, 82.1468, 0.15", "171.102, 182.138, 82.8159, 0.07", "171.701, 182.692, 83.1459, 0.81", "173.161, 183.796, 83.8605, 0.15", "175.409, 185.207, 84.9597, 0.15", "175.897, 185.485, 85.1888, 0.29", "177.18, 186.164, 85.7714, 0.07", "178.481, 186.813, 86.3145, 0.22", "180.795, 187.937, 87.2707, 0.07", "183.08, 189.008, 88.2284, 0.07", "183.697, 189.304, 88.4732, 0.22", "184.075, 189.501, 88.6172, 0.22", "185.3, 190.213, 89.0086, 0.07", "185.735, 190.492, 89.1227, 0.29", "186.169, 190.8, 89.1932, 0.29", "187.673, 191.87, 89.2469, 0.07", "188.852, 192.697, 89.2765, 0.07", "189.748, 193.326, 89.2934, 0.07", "190.119, 193.589, 89.3019, 0.07", "190.662, 193.982, 89.3675, 0.29", "190.906, 194.155, 89.4195, 0.29", "192.148, 195.037, 89.8587, 0.07", "192.755, 195.469, 90.1298, 0.52", "194.19, 196.495, 90.864, 0.07", "195.503, 197.402, 91.5342, 0.52", "196.968, 198.381, 92.2731, 0.07", "198.067, 199.072, 92.7939, 0.07", "198.639, 199.422, 93.0747, 0.37", "199.41, 199.87, 93.3778, 0.37", "200.906, 200.712, 93.8115, 0.07", "201.705, 201.151, 93.9424, 0.59", "203.412, 202.139, 94.1929, 0.07", "204.386, 202.746, 94.4179, 0.07", "206.275, 204.107, 95.1501, 0.22", "206.806, 204.567, 95.4755, 0.07", "207.306, 205.099, 95.8864, 0.15", "208.255, 206.209, 96.776, 0.07", "209.603, 207.893, 98.1362, 0.07", "210.487, 208.963, 98.9485, 0.15", "211.153, 209.752, 99.5536, 0.15", "212.192, 210.888, 100.399, 0.07", "212.672, 211.386, 100.785, 0.29", "213.311, 212.022, 101.249, 0.29", "214.636, 213.325, 102.196, 0.07", "214.989, 213.663, 102.469, 0.22", "216.963, 215.476, 104.003, 0.07", "218.319, 216.678, 105.093, 0.07", "219.023, 217.292, 105.652, 0.15", "220.248, 218.332, 106.619, 0.07", "221.124, 219.074, 107.285, 0.07", "222.561, 220.326, 108.214, 0.07", "222.879, 220.62, 108.388, 0.15", "224.615, 222.429, 109.249, 0.07", "225.078, 222.979, 109.519, 0.07", "225.76, 223.843, 109.919, 0.29", "227.227, 225.881, 110.851, 0.07", "228.264, 227.474, 111.569, 0.07", "229.711, 229.844, 112.627, 0.07", "230.92, 232.083, 113.585, 0.07" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "10.3926, -71.901, -7.46234, 1.62", "10.2335, -73.2752, -7.02492, 1.62", "10.128, -74.8327, -6.56475, 1.11", "10.0095, -76.849, -6.02058, 0.88", "9.91115, -78.2945, -5.62774, 0.88", "9.8572, -79.1574, -5.43584, 0.96", "9.76068, -80.8781, -5.10591, 1.33", "9.69525, -82.6596, -4.86131, 0.96", "9.65487, -83.9716, -4.74848, 0.96", "9.58686, -85.8272, -4.71995, 0.81", "9.50071, -87.8709, -4.76879, 0.81", "9.45962, -88.7637, -4.83028, 1.18", "9.40181, -89.7785, -4.96525, 1.47", "9.34971, -90.6062, -5.10548, 1.47", "9.31782, -91.4506, -5.26401, 1.25", "9.29531, -92.1248, -5.39273, 1.33", "9.25042, -93.1764, -5.52961, 1.11", "9.1979, -94.3301, -5.64617, 1.03", "9.13379, -95.6295, -5.7329, 1.25", "9.0817, -96.6155, -5.7692, 1.25", "9.00571, -97.6862, -5.78699, 1.25", "8.88941, -98.7953, -5.75016, 1.25", "8.6707, -100.416, -5.62271, 0.81", "8.54243, -101.31, -5.51303, 0.88", "8.28819, -103.054, -5.27896, 0.81", "8.12793, -104.207, -5.13338, 0.66", "7.96419, -105.762, -4.95566, 0.59", "7.89699, -106.648, -4.86789, 0.59", "7.85794, -107.762, -4.77807, 0.66", "7.85084, -109.072, -4.66451, 0.96", "7.87193, -110.484, -4.51074, 1.18", "7.928, -111.986, -4.33443, 1.33", "7.98516, -113.328, -4.1578, 1.03", "8.02563, -114.783, -3.9136, 0.81", "8.04976, -116.693, -3.50295, 1.11", "8.04425, -118.36, -3.07639, 0.96", "8.03132, -119.224, -2.84032, 1.03", "7.9985, -120.592, -2.47073, 1.03", "7.97438, -121.597, -2.22357, 0.88", "7.94368, -123.442, -1.83404, 1.11", "7.92147, -124.767, -1.61406, 1.55", "7.89835, -126.02, -1.44385, 1.77", "7.88368, -127.638, -1.27423, 2.14", "7.90612, -129.631, -1.13174, 1.25", "7.97246, -131.723, -1.04388, 0.59", "8.03391, -132.962, -1.04215, 0.52", "8.09892, -133.923, -1.06162, 0.52", "8.19533, -135.361, -1.12209, 0.66", "8.2715, -136.433, -1.18714, 0.66", "8.35073, -137.572, -1.27304, 0.59", "8.39784, -138.496, -1.31603, 1.03", "8.42146, -139.378, -1.28909, 1.25", "8.39894, -140.773, -1.11294, 0.88", "8.33175, -141.851, -0.843708, 0.81", "8.22312, -142.961, -0.44763, 0.88", "8.03268, -144.472, 0.227805, 0.44", "7.87783, -145.544, 0.793076, 0.44", "7.72293, -146.507, 1.35905, 0.52", "7.57013, -147.455, 1.95662, 0.52", "7.42845, -148.274, 2.49507, 0.59", "7.32616, -148.85, 2.87531, 0.81", "7.17806, -149.769, 3.43341, 0.74", "7.0468, -150.747, 3.98387, 1.03", "6.8896, -152.225, 4.72431, 0.88", "6.79129, -153.452, 5.27206, 0.59", "6.72913, -154.606, 5.7256, 0.59", "6.70625, -155.772, 6.04336, 1.11", "6.73205, -157.269, 6.23383, 1.18", "6.78575, -158.595, 6.22581, 1.25", "6.82401, -159.334, 6.10397, 1.33", "6.92173, -160.893, 5.63141, 0.74", "7.07871, -163.243, 4.69122, 0.52", "7.15317, -164.375, 4.13896, 0.52", "7.21004, -165.177, 3.69202, 0.44", "7.30097, -166.519, 2.90222, 0.37", "7.35032, -167.318, 2.39816, 0.37", "7.38351, -167.948, 2.00614, 0.37", "7.42816, -168.925, 1.4822, 0.52", "7.46796, -170.055, 0.937593, 0.81", "7.49545, -171.469, 0.486339, 0.74", "7.50415, -173.093, 0.262358, 0.96", "7.49126, -174.277, 0.269718, 1.62", "7.46702, -175.44, 0.421557, 1.4", "7.41354, -177.221, 0.877545, 0.81", "7.28163, -180.761, 2.11179, 0.44", "7.24847, -181.54, 2.43064, 0.44", "7.21541, -182.231, 2.69826, 0.59", "7.16828, -183.016, 2.93318, 1.18", "7.07751, -184.322, 3.18935, 1.18", "6.98975, -185.573, 3.27422, 1.03", "6.89324, -186.786, 3.19834, 0.88", "6.70926, -188.468, 3.04119, 0.59", "6.5512, -189.722, 2.89177, 0.44", "6.4373, -190.601, 2.75801, 0.52", "6.32027, -191.561, 2.57091, 0.52", "6.2276, -192.441, 2.38037, 0.74", "6.14136, -193.39, 2.18012, 0.59", "6.06683, -194.338, 2.00704, 0.59", "5.99031, -195.399, 1.86052, 1.11", "5.9138, -196.436, 1.76695, 1.11", "5.81111, -197.844, 1.76936, 1.55", "5.68745, -199.349, 1.88328, 0.88", "5.58163, -200.516, 2.04985, 0.96", "5.4311, -201.975, 2.32238, 0.59", "5.30695, -203.001, 2.54878, 0.59", "5.07956, -204.757, 2.91446, 0.59", "4.97114, -205.566, 3.06006, 0.81", "4.80045, -206.798, 3.2363, 0.59", "4.56733, -208.334, 3.38684, 0.44", "4.32456, -209.766, 3.44431, 0.52", "4.05228, -211.097, 3.47038, 0.52", "3.79089, -212.131, 3.46079, 0.74", "3.52723, -213.083, 3.46708, 1.03", "3.35605, -213.655, 3.4468, 1.25", "3.06681, -214.573, 3.36371, 1.03", "2.5999, -216.038, 3.18155, 0.59", "2.13963, -217.41, 2.99111, 0.52", "1.64381, -218.788, 2.74829, 0.37", "0.995136, -220.535, 2.40729, 0.37", "0.697204, -221.319, 2.22822, 0.37", "0.34203, -222.259, 1.9932, 0.88", "-0.0514124, -223.367, 1.68165, 0.96", "-0.419602, -224.488, 1.38894, 1.03", "-0.716322, -225.547, 1.16798, 0.66", "-1.02416, -226.951, 0.95381, 0.59", "-1.21055, -228.124, 0.829534, 0.52", "-1.33368, -229.487, 0.728616, 0.44", "-1.35131, -230.743, 0.721429, 0.44", "-1.28105, -232.269, 0.819653, 0.29", "-1.23128, -232.894, 0.925881, 0.29", "-1.10176, -234.219, 1.2928, 0.44", "-1.01774, -235.198, 1.65611, 0.52", "-0.921825, -236.7, 2.32538, 0.22", "-0.904765, -237.206, 2.58569, 0.59", "-0.902365, -238.231, 3.18464, 1.11", "-0.907645, -238.932, 3.62286, 1.25", "-0.930675, -240.188, 4.4148, 0.59", "-0.961845, -241.118, 5.01918, 0.44", "-1.02677, -242.579, 5.94099, 0.29", "-1.08831, -243.517, 6.50539, 0.29", "-1.16564, -244.457, 7.05098, 0.37", "-1.23796, -245.362, 7.59344, 0.52", "-1.30442, -246.165, 8.06263, 1.03", "-1.36594, -246.946, 8.49029, 1.84", "-1.40378, -247.746, 8.87398, 1.84", "-1.43606, -249.078, 9.43964, 1.55", "-1.43703, -250.957, 10.1855, 0.52", "-1.40615, -252.042, 10.5934, 0.52", "-1.35529, -253.095, 10.9309, 0.52", "-1.30515, -254.213, 11.2219, 0.74", "-1.26793, -255.455, 11.4408, 0.29", "-1.27591, -256.243, 11.4551, 0.37", "-1.31523, -256.902, 11.3669, 0.88", "-1.44171, -258.257, 11.0633, 0.88", "-1.59364, -259.37, 10.7408, 0.66", "-1.86286, -260.8, 10.2665, 0.52", "-2.22608, -262.309, 9.74972, 0.37", "-2.45793, -263.15, 9.48036, 0.37", "-2.59092, -263.562, 9.36962, 0.74", "-2.85052, -264.278, 9.2293, 1.03", "-3.24886, -265.291, 9.08136, 0.81", "-3.72516, -266.406, 8.99245, 0.29", "-4.26905, -267.608, 8.98164, 0.29", "-4.78118, -268.693, 8.98774, 0.29", "-5.17621, -269.529, 8.98991, 0.29", "-5.64368, -270.551, 8.9914, 0.59", "-6.08693, -271.597, 9.05091, 0.29", "-6.27651, -272.087, 9.10426, 0.44", "-6.58583, -272.955, 9.24068, 0.96", "-6.73616, -273.452, 9.33451, 0.96", "-7.12412, -274.9, 9.68474, 0.29", "-7.4572, -276.338, 10.0825, 0.74", "-7.5687, -276.902, 10.2442, 1.18", "-7.68952, -277.633, 10.4029, 1.25", "-7.88502, -279.097, 10.6102, 0.37", "-8.04639, -280.438, 10.6734, 0.44", "-8.12567, -281.25, 10.6346, 0.44", "-8.22467, -282.422, 10.482, 0.44", "-8.35533, -284.22, 10.2097, 0.44", "-8.40676, -285.0, 10.1121, 0.88", "-8.47241, -286.055, 10.0516, 1.03", "-8.50172, -286.52, 10.0681, 1.03", "-8.62763, -288.342, 10.3721, 0.37", "-8.71759, -289.566, 10.751, 0.44", "-8.81853, -291.138, 11.4273, 0.44", "-8.90005, -292.47, 12.0844, 0.44", "-8.94303, -293.309, 12.5434, 0.44", "-8.97329, -293.916, 12.9014, 0.88", "-9.00427, -294.629, 13.364, 1.62", "-9.05888, -295.766, 14.0947, 1.62", "-9.13979, -297.342, 14.9896, 0.66", "-9.21441, -298.583, 15.6389, 0.29", "-9.28409, -299.643, 16.2258, 0.29", "-9.33905, -300.489, 16.7362, 0.29", "-9.37101, -301.149, 17.1723, 0.88", "-9.40151, -302.184, 17.9022, 0.96", "-9.38218, -303.324, 18.6794, 0.22", "-9.31758, -304.439, 19.4044, 0.22", "-9.2804, -304.914, 19.7052, 0.44", "-9.20587, -305.815, 20.2905, 0.88", "-9.15486, -306.391, 20.6877, 1.77", "-9.05756, -307.313, 21.3225, 1.99", "-8.87214, -308.838, 22.3192, 0.74", "-8.70174, -310.223, 23.193, 0.37", "-8.50455, -311.801, 24.2069, 0.44", "-8.3895, -312.762, 24.8199, 0.37", "-8.29232, -313.548, 25.3294, 0.37", "-8.12082, -314.786, 26.1079, 0.37", "-8.00232, -315.523, 26.5211, 0.22", "-7.88995, -316.074, 26.7804, 0.22", "-7.70949, -316.765, 26.9985, 0.29", "-7.48614, -317.479, 27.1128, 0.81", "-7.13197, -318.462, 27.1242, 1.77", "-6.95632, -318.868, 27.0604, 1.62", "-6.46125, -319.959, 26.7723, 0.44", "-5.76266, -321.344, 26.244, 0.29", "-5.33665, -322.091, 25.8908, 0.29", "-4.96197, -322.688, 25.5748, 0.29", "-4.60628, -323.256, 25.2516, 0.44", "-4.01785, -324.278, 24.707, 0.66", "-3.57636, -325.146, 24.3014, 0.66", "-3.28367, -325.79, 24.0638, 1.84", "-2.88243, -326.721, 23.7739, 1.84", "-2.0567, -328.731, 23.2552, 1.11", "-1.61232, -329.9, 23.0171, 0.22", "-1.30209, -330.771, 22.8525, 0.29", "-1.06089, -331.521, 22.7294, 0.66", "-0.769889, -332.499, 22.5726, 1.11", "-0.507954, -333.428, 22.4376, 0.29", "-0.248701, -334.345, 22.3666, 0.22", "0.233161, -336.017, 22.2756, 0.22", "0.439942, -336.714, 22.2902, 0.29", "0.673448, -337.501, 22.3801, 0.37", "1.04228, -338.711, 22.6193, 0.29", "1.34503, -339.689, 22.9169, 0.52", "1.63266, -340.636, 23.2951, 1.62", "2.08132, -342.154, 24.0334, 0.37", "2.39912, -343.244, 24.5846, 0.29", "2.63731, -344.082, 25.0088, 0.29", "2.94437, -345.242, 25.4744, 0.29", "3.06858, -345.761, 25.6044, 0.29", "3.19236, -346.349, 25.6814, 0.74", "3.39037, -347.323, 25.629, 1.62", "3.65468, -348.633, 25.348, 2.73", "4.10457, -350.893, 24.6273, 0.44", "4.32682, -352.041, 24.166, 0.44", "4.48759, -352.871, 23.7959, 0.74", "4.80134, -354.53, 22.9655, 0.44", "5.02727, -355.695, 22.2898, 0.44", "5.16335, -356.37, 21.8322, 0.81", "5.27498, -356.919, 21.4279, 1.62" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "10.3926, -71.901, -7.46234, 1.55", "11.447, -72.4941, -8.43721, 1.55", "12.5431, -73.1996, -9.42934, 0.66", "13.402, -73.8525, -10.1802, 0.52", "13.7552, -74.1645, -10.4658, 0.52", "14.0797, -74.4739, -10.7058, 0.52", "14.509, -74.871, -10.989, 0.74", "14.8713, -75.1947, -11.139, 0.81", "15.3822, -75.5654, -11.2971, 0.66", "15.9553, -75.8808, -11.4538, 0.74", "17.0667, -76.2659, -11.7802, 0.66", "17.676, -76.3396, -11.9936, 0.59", "18.475, -76.271, -12.2824, 0.59", "19.481, -76.0372, -12.7146, 0.66", "20.151, -75.7902, -13.0654, 0.74", "20.6051, -75.5875, -13.3587, 0.81", "21.4012, -75.2104, -13.9892, 0.81", "22.1304, -74.891, -14.6975, 0.74", "23.0285, -74.5904, -15.7045, 0.44", "23.8511, -74.4379, -16.7082, 0.37", "24.6598, -74.4633, -17.7432, 0.59", "25.425, -74.6662, -18.7323, 0.96", "26.1177, -75.0057, -19.6056, 0.96", "26.9268, -75.5816, -20.6378, 0.88", "27.713, -76.2698, -21.5794, 0.81", "28.7265, -77.2712, -22.7119, 0.81", "29.5109, -78.0537, -23.5236, 0.52", "30.0044, -78.5066, -23.9871, 0.88", "30.8186, -79.1017, -24.6672, 0.37", "31.2447, -79.2939, -24.989, 0.37", "31.5891, -79.3393, -25.2359, 0.37", "32.5702, -79.231, -25.895, 0.59", "33.4947, -79.089, -26.5266, 0.81", "34.4554, -79.0226, -27.2779, 0.52", "34.9639, -79.0911, -27.7712, 0.52", "35.5194, -79.3657, -28.5272, 0.52", "35.8464, -79.626, -29.0535, 0.52", "36.4883, -80.2697, -30.147, 0.59", "37.1817, -81.0817, -31.3947, 0.66", "37.844, -81.9554, -32.5961, 0.66", "38.5883, -82.9845, -33.9068, 0.66", "39.3341, -84.0684, -35.1456, 0.52", "39.6657, -84.5607, -35.6546, 0.52", "40.1077, -85.201, -36.1994, 0.52", "40.7059, -86.0862, -36.746, 0.66", "41.3616, -87.1112, -37.1595, 0.96", "41.85, -87.899, -37.3808, 1.03", "42.2145, -88.5268, -37.539, 1.33", "42.7718, -89.4764, -37.7809, 1.47", "43.232, -90.2555, -37.9707, 1.25", "43.9684, -91.4712, -38.2635, 0.74", "44.8294, -92.8223, -38.5517, 0.74", "45.6094, -93.9769, -38.7673, 0.44", "45.9555, -94.4779, -38.8439, 0.44", "46.7683, -95.6615, -38.941, 0.44", "47.1348, -96.1872, -38.9377, 0.44", "47.8755, -97.1506, -38.8239, 0.29", "48.8137, -98.1551, -38.6431, 0.29", "49.3964, -98.6051, -38.5401, 0.37", "50.4807, -99.1302, -38.4111, 0.66", "51.6538, -99.3841, -38.3311, 0.52", "52.9726, -99.4264, -38.2927, 0.44", "54.6582, -99.188, -38.3102, 0.15", "55.9345, -98.7813, -38.3707, 0.22", "57.1244, -98.1945, -38.5015, 0.15", "57.8702, -97.6682, -38.6485, 0.15", "58.2081, -97.3178, -38.729, 0.59", "58.4299, -96.9879, -38.7889, 0.59", "58.8417, -96.0804, -38.8994, 0.37", "59.2209, -94.8032, -39.063, 0.15", "59.3211, -94.1312, -39.141, 0.15", "59.4436, -92.6513, -39.28, 0.15", "59.495, -91.9532, -39.3292, 0.15", "59.539, -91.4111, -39.3541, 0.29", "59.5816, -90.81, -39.3654, 0.29", "59.7056, -89.058, -39.3217, 0.15", "59.7918, -87.6217, -39.2987, 0.15", "59.8246, -86.7396, -39.3268, 0.29", "59.8471, -85.9976, -39.3508, 0.37", "68.4034, -87.3834, -45.5819, 0.37", "78.1173, -86.6311, -49.9443, 0.37", "87.4345, -84.5578, -54.7242, 0.37", "96.6132, -80.4209, -58.2731, 0.37", "105.284, -76.3071, -62.9473, 0.37", "112.999, -70.7451, -67.7946, 0.37", "121.117, -65.9201, -72.772, 0.37", "128.765, -61.0205, -78.3801, 0.37", "137.083, -55.8765, -82.6584, 0.37", "145.189, -51.1474, -87.7468, 0.37", "152.427, -46.6049, -94.145, 0.37", "160.809, -41.6793, -98.554, 0.37", "169.481, -37.3539, -103.03, 0.37", "177.922, -33.0812, -107.974, 0.37", "186.216, -29.5442, -113.689, 0.37", "193.595, -26.8042, -120.901, 0.37", "201.375, -24.2078, -127.733, 0.37", "209.079, -22.0822, -134.81, 0.37", "216.519, -20.1562, -142.22, 0.37", "223.351, -17.0173, -149.798, 0.37", "229.686, -12.7197, -157.238, 0.37", "234.691, -7.63332, -165.177, 0.37", "240.238, -3.91557, -173.505, 0.37", "245.91, -1.2054, -182.133, 0.37", "250.599, 2.14375, -191.12, 0.37" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "29.1894, -33.9223, -1.09943, 0.96", "30.1384, -33.4289, -0.630093, 0.96", "30.9674, -32.9288, -0.149926, 0.59", "32.206, -32.0352, 0.735476, 0.59", "33.2244, -31.182, 1.58132, 0.59", "33.9468, -30.5118, 2.21988, 0.59", "34.7269, -29.7195, 2.91906, 0.66", "35.4283, -28.8986, 3.6037, 0.59", "36.3362, -27.7241, 4.46483, 0.66", "37.0228, -26.8066, 5.04509, 0.66", "37.5212, -26.1929, 5.39437, 0.59", "38.3098, -25.3944, 5.86049, 0.52", "38.9379, -24.9104, 6.17878, 0.52", "39.7727, -24.4475, 6.53111, 0.52", "40.9617, -24.0077, 6.9641, 0.52", "42.0566, -23.7328, 7.37681, 0.59", "43.3791, -23.5149, 7.94017, 0.37", "44.1502, -23.4376, 8.3044, 0.29", "44.4093, -23.4161, 8.45585, 0.29", "44.716, -23.4028, 8.66795, 0.29", "45.4293, -23.3902, 9.2707, 0.29", "45.9448, -23.3607, 9.78294, 0.29", "46.7698, -23.2262, 10.7065, 0.59", "48.0602, -22.8808, 12.2052, 0.59", "48.5716, -22.7076, 12.8452, 0.59", "49.312, -22.4329, 13.8085, 0.59", "49.7237, -22.2738, 14.3571, 0.59", "50.5973, -21.9231, 15.4907, 0.59", "51.2685, -21.6361, 16.2753, 0.59", "52.9624, -20.9136, 17.7815, 0.59", "53.9701, -20.5368, 18.4887, 0.59", "55.4565, -20.1457, 19.3312, 0.81", "59.2466, -19.493, 21.4406, 1.11", "60.2504, -19.3678, 22.0254, 0.66", "61.8942, -19.138, 23.1041, 0.59", "62.9959, -18.8746, 23.9822, 0.59", "63.6138, -18.6328, 24.6196, 0.52", "64.5761, -18.0672, 25.8195, 0.52", "65.1095, -17.6923, 26.5542, 0.52", "65.5806, -17.3079, 27.2662, 0.52", "66.5287, -16.4295, 28.7764, 0.52", "67.1272, -15.8055, 29.7839, 0.59", "68.0529, -14.8206, 31.3118, 0.59", "68.5622, -14.3149, 32.1094, 0.59", "68.8904, -14.0358, 32.5756, 0.59", "69.4185, -13.6919, 33.2318, 0.59", "69.8914, -13.4907, 33.7049, 0.59", "70.7815, -13.2728, 34.4174, 0.29", "71.8811, -13.1005, 35.2091, 0.29", "72.4569, -12.9948, 35.6124, 0.52", "73.5261, -12.7093, 36.425, 0.52", "74.583, -12.3441, 37.2461, 0.15", "75.3866, -12.0131, 37.8794, 0.22", "76.9117, -11.2908, 39.1123, 0.22", "77.379, -11.0675, 39.4905, 0.22", "78.9072, -10.3604, 40.7638, 0.22", "79.674, -10.0265, 41.3947, 0.22", "80.0888, -9.85143, 41.7454, 0.22", "81.1015, -9.52326, 42.5224, 0.22", "81.9646, -9.37591, 43.0132, 0.22", "82.6944, -9.32657, 43.3535, 0.22", "83.6374, -9.32782, 43.8096, 0.22", "83.9227, -9.32248, 43.9701, 0.22", "84.3931, -9.26424, 44.277, 0.37", "84.9874, -9.12339, 44.7173, 0.81", "86.6706, -8.59331, 45.9566, 0.22", "88.5364, -7.93019, 47.3076, 0.22", "89.3847, -7.60145, 47.87, 0.81", "91.1327, -6.86737, 48.9647, 0.22", "92.7951, -6.10523, 49.9562, 0.22", "93.6515, -5.66601, 50.4, 0.74", "94.083, -5.41482, 50.5914, 0.74", "95.9014, -4.31601, 51.2717, 0.15", "97.7359, -3.25889, 51.9879, 0.59", "98.0964, -3.068, 52.1588, 0.59", "99.2186, -2.50886, 52.8277, 0.22", "101.394, -1.52432, 54.423, 0.22", "102.047, -1.27201, 54.9775, 0.44", "103.636, -0.750051, 56.5342, 0.44", "105.289, -0.238874, 58.2983, 0.44", "106.029, 0.006302, 59.1495, 0.44", "106.59, 0.215061, 59.8434, 0.44", "107.35, 0.555965, 60.757, 0.88", "108.652, 1.27322, 62.2733, 0.74", "110.245, 2.2867, 63.9404, 0.74", "111.195, 2.93628, 64.7836, 0.74", "112.014, 3.49824, 65.379, 0.74", "113.103, 4.24202, 65.9832, 0.22", "114.29, 5.00937, 66.4002, 0.22", "115.294, 5.54891, 66.4525, 0.52", "116.251, 5.99505, 66.3262, 0.66", "117.874, 6.65462, 65.9752, 0.15", "119.254, 7.13432, 65.6008, 0.81", "119.933, 7.34949, 65.4477, 0.22", "122.161, 8.0429, 65.0273, 0.15", "123.764, 8.56212, 64.8128, 0.15", "124.867, 8.92131, 64.7521, 0.59", "126.289, 9.37937, 64.8658, 0.15", "128.712, 10.1513, 65.319, 0.15", "129.824, 10.502, 65.5986, 0.15", "130.655, 10.756, 65.8577, 0.15", "131.378, 10.9688, 66.0545, 0.52", "132.786, 11.3674, 66.3856, 0.52", "134.825, 11.8834, 66.7371, 0.07", "135.283, 11.9702, 66.7604, 0.07", "135.925, 12.0793, 66.795, 0.59", "137.688, 12.3959, 66.9944, 0.07", "139.017, 12.6854, 67.1526, 0.07", "139.514, 12.8084, 67.2035, 0.29", "140.046, 12.9508, 67.2743, 0.29", "142.833, 13.7947, 67.6153, 0.15", "144.598, 14.4086, 67.8176, 0.15", "145.756, 14.8838, 67.9262, 0.15", "146.767, 15.3616, 67.9695, 0.15", "147.474, 15.713, 67.9668, 0.15", "148.664, 16.3142, 67.8745, 0.15", "149.376, 16.6406, 67.7219, 0.15", "150.165, 16.9702, 67.5132, 0.22", "152.096, 17.6876, 67.0256, 0.07", "152.792, 17.9215, 66.8368, 0.74", "153.387, 18.0984, 66.6548, 0.74", "154.956, 18.4763, 66.2103, 0.07", "155.566, 18.5983, 66.0334, 0.37", "156.312, 18.7192, 65.8066, 0.66", "157.575, 18.9023, 65.3566, 0.07", "158.246, 19.0147, 65.1517, 0.15", "159.888, 19.3309, 64.7402, 0.07", "160.575, 19.4823, 64.6272, 0.44", "161.197, 19.6315, 64.554, 0.44", "162.731, 20.0123, 64.4008, 0.15", "164.352, 20.4047, 64.2467, 0.15", "165.142, 20.6007, 64.1567, 0.37", "166.504, 20.9689, 63.9668, 0.81", "167.176, 21.1665, 63.8652, 0.59", "168.667, 21.6554, 63.5933, 0.15", "169.645, 22.0154, 63.3362, 0.15", "170.324, 22.2905, 63.0848, 0.15", "171.385, 22.7534, 62.636, 0.15", "172.075, 23.0684, 62.2931, 0.66", "172.744, 23.3796, 61.9469, 0.37", "174.454, 24.1119, 61.032, 0.07", "174.931, 24.2939, 60.81, 0.44", "175.331, 24.413, 60.6419, 0.44", "177.207, 24.7802, 59.9468, 0.15", "178.033, 24.8932, 59.7273, 0.37", "180.464, 25.1262, 59.315, 0.15", "182.41, 25.2836, 59.1439, 0.59", "183.537, 25.3747, 59.0956, 1.33", "185.342, 25.5382, 59.0613, 0.15", "187.291, 25.7528, 59.1369, 0.15", "188.239, 25.8827, 59.189, 0.15", "189.064, 26.0246, 59.2286, 0.37", "189.609, 26.1346, 59.2322, 0.37", "191.307, 26.5711, 59.3016, 0.15", "193.219, 27.0932, 59.4022, 0.15", "194.0, 27.2928, 59.4368, 0.52", "194.852, 27.5007, 59.4561, 0.59", "196.805, 27.966, 59.4766, 0.15", "198.606, 28.39, 59.4998, 0.15", "200.013, 28.6801, 59.4977, 0.29", "200.858, 28.8188, 59.4503, 0.29", "202.504, 28.9674, 59.3346, 0.29", "203.434, 28.9385, 59.2705, 0.29", "204.818, 28.6152, 59.1687, 0.29", "206.046, 28.0705, 59.1278, 0.29", "206.545, 27.776, 59.2263, 0.52", "207.542, 27.1314, 59.6723, 0.15", "208.399, 26.5479, 60.2674, 0.15", "208.951, 26.1466, 60.7884, 0.15", "209.408, 25.8001, 61.2935, 0.52", "211.012, 24.6396, 63.2265, 0.22", "212.247, 23.8121, 64.7319, 0.52", "213.466, 23.1165, 66.1927, 1.33", "215.152, 22.2956, 68.1367, 0.22", "215.547, 22.137, 68.5578, 0.37", "216.507, 21.8581, 69.5215, 0.15", "217.31, 21.6944, 70.2409, 0.59", "219.392, 21.4984, 71.9545, 0.15", "220.663, 21.5104, 72.9715, 0.44", "222.547, 21.6022, 74.4401, 0.07", "224.554, 21.7131, 76.0173, 0.07", "225.366, 21.752, 76.6581, 0.96", "228.358, 21.9462, 79.0617, 0.52", "230.032, 22.0679, 80.4281, 0.37", "231.098, 22.1537, 81.3296, 0.15", "231.654, 22.2034, 81.8375, 0.15", "232.138, 22.219, 82.2671, 0.44" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "29.1894, -33.9223, -1.09943, 0.66", "30.5658, -34.7753, 0.0200422, 0.66", "31.5836, -35.4768, 0.795506, 0.66", "32.4845, -36.1623, 1.45371, 0.66", "33.068, -36.6527, 1.88675, 0.66", "33.9314, -37.46, 2.57328, 0.81", "34.7072, -38.2694, 3.25623, 1.03", "35.28, -39.0078, 3.80808, 0.74", "35.658, -39.6498, 4.25721, 0.74", "35.8448, -40.092, 4.56325, 1.18", "36.1379, -40.943, 5.18813, 0.81", "36.4675, -42.0018, 5.95253, 0.59", "36.7413, -42.7119, 6.49669, 0.59", "36.9694, -43.1447, 6.82346, 0.81", "37.3868, -43.6955, 7.23655, 0.81", "38.0983, -44.2488, 7.62004, 0.81", "39.0309, -44.5684, 7.82677, 0.74", "40.2803, -44.7474, 7.91069, 0.88", "41.0592, -44.8071, 7.93321, 0.88", "41.7867, -44.8423, 7.9598, 0.96", "43.2915, -44.9192, 7.99643, 0.44", "44.3143, -45.0084, 8.02385, 0.44", "45.301, -45.1639, 8.07824, 0.52", "46.5155, -45.4885, 8.17102, 0.44", "47.6458, -45.9352, 8.30522, 0.74", "48.8715, -46.5902, 8.48498, 0.29", "49.5376, -47.0329, 8.5885, 0.29", "50.1786, -47.5158, 8.65599, 0.29", "50.6638, -47.9062, 8.68799, 0.29", "51.1461, -48.2981, 8.74386, 0.52", "51.85, -48.8938, 8.8776, 0.88", "52.3054, -49.2485, 9.05168, 0.66", "53.1775, -49.8406, 9.47066, 0.44", "53.8217, -50.2132, 9.84277, 0.22", "55.3079, -51.019, 10.817, 0.22", "55.6641, -51.2124, 11.0708, 0.22", "56.8182, -51.8568, 11.9002, 0.22", "57.3115, -52.1562, 12.2348, 0.29", "57.9129, -52.5307, 12.5795, 0.74", "58.501, -52.9053, 12.7894, 0.88", "59.1122, -53.2697, 12.851, 0.88", "59.8275, -53.6278, 12.8465, 0.88", "60.4351, -53.8989, 12.7995, 0.59", "61.1086, -54.1407, 12.7629, 0.44", "61.7363, -54.3377, 12.7382, 0.44", "62.6036, -54.5939, 12.7481, 0.29", "63.097, -54.7559, 12.7295, 0.29", "63.9213, -55.0923, 12.6557, 0.29", "64.367, -55.3492, 12.563, 0.74", "64.8399, -55.6932, 12.4561, 1.03", "65.4688, -56.2156, 12.3361, 0.29", "66.5888, -57.1912, 12.1761, 0.29", "67.1087, -57.6324, 12.1297, 0.29", "67.7851, -58.1938, 12.0896, 0.29", "68.674, -58.8945, 12.1082, 0.29", "69.2933, -59.3302, 12.194, 0.88", "69.953, -59.7607, 12.3544, 1.25", "70.889, -60.325, 12.6579, 0.37", "71.3009, -60.565, 12.7881, 0.37", "71.8668, -60.8881, 12.9684, 0.52", "72.6202, -61.3485, 13.1664, 0.52", "73.1887, -61.674, 13.323, 0.22", "73.4376, -61.7986, 13.3938, 0.22", "73.7683, -61.9324, 13.4857, 0.22", "74.5098, -62.1746, 13.6217, 0.22", "75.0794, -62.3384, 13.6689, 0.29", "75.8773, -62.5394, 13.7089, 0.66", "76.1002, -62.587, 13.727, 1.03", "76.9714, -62.7381, 13.8695, 1.47", "78.1103, -62.8693, 14.1353, 0.81", "79.0921, -62.9234, 14.4201, 0.44", "80.1925, -62.9363, 14.8115, 0.22", "80.9262, -62.9386, 15.1102, 0.22", "82.1639, -62.9521, 15.6839, 0.22", "82.8328, -62.9644, 16.0403, 0.37", "83.496, -63.0091, 16.4226, 0.66", "83.8921, -63.0686, 16.6495, 0.22", "84.3404, -63.1925, 16.898, 0.22", "84.9909, -63.4295, 17.2225, 0.22", "86.0871, -63.89, 17.7334, 0.22", "86.5293, -64.0942, 17.9358, 0.96", "87.6718, -64.6395, 18.4328, 1.55", "89.0825, -65.2836, 19.0123, 0.22", "89.7575, -65.5735, 19.268, 0.22", "90.6019, -65.9185, 19.5476, 0.59", "91.3392, -66.2359, 19.7435, 0.22", "92.2236, -66.632, 19.9093, 0.22", "92.6254, -66.8106, 19.9455, 0.22", "93.1614, -67.0158, 19.9706, 0.29", "93.6065, -67.1617, 20.0051, 0.96", "94.1512, -67.3208, 20.0511, 0.66", "94.8042, -67.4512, 20.159, 0.22", "95.8534, -67.5969, 20.3875, 0.29", "96.7221, -67.7074, 20.5524, 0.29", "97.1422, -67.7569, 20.6046, 0.37", "98.0775, -67.8566, 20.6631, 1.03", "99.6391, -68.0273, 20.6283, 0.66", "100.514, -68.1776, 20.4985, 0.22", "101.456, -68.4322, 20.2125, 0.22", "102.169, -68.6898, 19.8908, 0.22", "102.47, -68.8119, 19.7226, 0.29", "102.982, -69.0535, 19.3918, 0.29", "103.785, -69.5046, 18.8651, 0.29", "104.534, -69.9494, 18.4446, 0.29", "105.222, -70.3571, 18.146, 0.29", "106.061, -70.8601, 17.8383, 0.74", "106.848, -71.3283, 17.5721, 0.29", "107.683, -71.8114, 17.3158, 0.29", "108.265, -72.125, 17.1786, 0.96", "108.963, -72.4656, 17.0302, 1.7", "109.591, -72.7324, 16.8816, 0.96", "110.262, -72.9784, 16.67, 0.29", "110.93, -73.1644, 16.3844, 0.22", "111.557, -73.278, 16.0984, 0.22", "112.598, -73.4133, 15.6486, 0.29", "113.627, -73.5313, 15.3262, 0.22", "113.989, -73.5894, 15.2921, 0.22", "114.409, -73.7001, 15.3277, 0.22", "115.53, -74.085, 15.593, 0.22", "116.202, -74.3292, 15.8175, 0.52", "117.054, -74.6529, 16.1672, 0.96", "117.939, -75.0181, 16.5589, 0.96", "118.817, -75.4067, 16.9307, 0.22", "119.862, -75.8891, 17.3384, 0.29", "120.602, -76.2247, 17.5889, 0.74", "121.536, -76.6299, 17.8766, 1.47", "123.153, -77.299, 18.2709, 0.22", "123.689, -77.5004, 18.3716, 0.22", "124.111, -77.6483, 18.4307, 0.22", "125.047, -77.9957, 18.4892, 0.22", "125.444, -78.153, 18.4954, 0.66", "125.922, -78.3338, 18.4822, 0.96", "126.561, -78.5282, 18.4643, 0.59", "127.163, -78.6955, 18.4972, 0.22", "127.701, -78.8086, 18.5678, 0.22", "128.149, -78.8803, 18.6434, 0.22", "128.841, -78.9556, 18.7998, 0.74", "130.217, -79.054, 19.1501, 0.22", "131.255, -79.114, 19.4347, 0.22", "132.283, -79.1359, 19.7478, 0.22", "132.722, -79.1367, 19.8856, 0.66", "133.818, -79.1407, 20.2237, 1.03", "134.227, -79.1512, 20.3755, 1.03", "135.299, -79.2377, 20.8101, 0.15", "136.422, -79.3759, 21.2681, 0.15", "136.757, -79.423, 21.4091, 0.66", "137.233, -79.4852, 21.6075, 0.74", "139.133, -79.7535, 22.3617, 0.15", "139.463, -79.809, 22.4953, 0.22", "139.943, -79.9074, 22.6742, 0.22", "140.761, -80.1415, 22.9365, 0.15", "141.418, -80.378, 23.1227, 0.22", "141.834, -80.5714, 23.2031, 0.59", "142.872, -81.1726, 23.2535, 1.11", "143.403, -81.5152, 23.2574, 1.11", "143.948, -81.9128, 23.2324, 0.37", "144.619, -82.4717, 23.1448, 0.15", "145.256, -83.0125, 23.1063, 0.15", "145.512, -83.2298, 23.1063, 0.37", "145.864, -83.5259, 23.138, 0.66", "146.451, -83.9586, 23.2858, 0.22", "146.732, -84.1358, 23.4105, 0.22", "148.072, -84.9178, 24.2509, 0.22", "148.395, -85.1018, 24.4814, 0.44", "148.831, -85.3646, 24.8134, 0.88", "149.302, -85.683, 25.1564, 1.03", "150.138, -86.3264, 25.6707, 0.15", "150.59, -86.7122, 25.8607, 0.15", "150.925, -87.0409, 25.9034, 0.44", "151.112, -87.2197, 25.9081, 0.44", "152.053, -88.1191, 25.8449, 0.15", "152.783, -88.7989, 25.7715, 0.15", "153.098, -89.0612, 25.7182, 0.59", "153.795, -89.5777, 25.5908, 0.52", "154.722, -90.1643, 25.4365, 0.22", "155.5, -90.5495, 25.3147, 0.22", "155.971, -90.7036, 25.2663, 0.22", "156.543, -90.8138, 25.2274, 0.88", "156.759, -90.8323, 25.2069, 0.96", "157.342, -90.8035, 25.1208, 0.88", "158.384, -90.6422, 24.8369, 0.22", "159.131, -90.4619, 24.5707, 0.37", "159.852, -90.2521, 24.2658, 0.37", "160.246, -90.12, 24.091, 0.37", "161.133, -89.7952, 23.6626, 0.15", "162.137, -89.3953, 23.0932, 0.22", "162.652, -89.1833, 22.6883, 0.44", "162.946, -89.0818, 22.3892, 0.44", "163.597, -88.9078, 21.7127, 0.15", "163.844, -88.8563, 21.4821, 0.15", "164.396, -88.7937, 21.0886, 0.29", "165.912, -88.6778, 20.9133, 0.29", "166.4, -88.6434, 21.0704, 0.29", "167.781, -88.5488, 21.7274, 0.29", "168.785, -88.4778, 22.2653, 0.74", "169.327, -88.4489, 22.5718, 0.22", "170.486, -88.3852, 23.2835, 0.22", "171.408, -88.3306, 23.8755, 0.22", "171.597, -88.3172, 23.9946, 0.22", "172.255, -88.2846, 24.3619, 0.44", "173.33, -88.278, 24.8994, 0.15", "174.282, -88.3296, 25.2942, 0.15", "174.716, -88.3695, 25.4299, 0.44", "175.693, -88.4642, 25.677, 1.11", "176.423, -88.5397, 25.8256, 1.11", "177.221, -88.6255, 25.9348, 0.44", "178.626, -88.73, 25.9472, 0.15", "179.642, -88.7612, 25.878, 0.15", "180.07, -88.7522, 25.8285, 0.29", "180.687, -88.7092, 25.7243, 0.66", "181.167, -88.6378, 25.5847, 0.66", "182.484, -88.3357, 25.0404, 0.15", "183.43, -88.0633, 24.5514, 0.15", "183.768, -87.9679, 24.3263, 0.44", "184.247, -87.8304, 23.9902, 0.44", "185.987, -87.2968, 22.6597, 0.07", "186.932, -87.0111, 21.8566, 0.15", "187.258, -86.9229, 21.5298, 0.22", "188.189, -86.709, 20.451, 0.96" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "57.1279, -192.449, 65.1418, 0.22", "57.4644, -193.872, 66.4258, 0.22", "57.5958, -194.455, 66.9779, 0.22", "57.7298, -195.094, 67.5847, 1.18", "57.9051, -196.003, 68.4332, 0.22", "58.0796, -196.772, 69.2001, 0.15", "58.2534, -197.384, 69.8736, 0.15", "58.4215, -197.913, 70.5103, 0.15", "58.5549, -198.246, 70.9574, 0.52", "58.717, -198.548, 71.4033, 0.52", "59.3377, -199.391, 72.7527, 0.07", "59.9456, -200.084, 73.88, 0.07", "60.2686, -200.378, 74.4031, 0.07", "60.4515, -200.519, 74.6662, 0.66", "61.0228, -200.907, 75.4066, 0.88", "61.9993, -201.589, 76.5658, 0.22", "62.7232, -202.118, 77.3721, 0.22", "63.5269, -202.753, 78.2479, 0.22", "64.1921, -203.333, 78.9827, 0.96", "65.0755, -204.229, 80.0035, 0.52", "65.9962, -205.356, 81.1374, 0.22", "66.5733, -206.333, 81.9715, 0.22", "66.8423, -207.007, 82.478, 0.22", "67.0387, -207.859, 83.0561, 0.96", "67.1125, -208.812, 83.6722, 1.55", "67.1089, -209.365, 84.0425, 1.4", "67.0113, -211.108, 85.2718, 0.15", "66.9445, -211.964, 85.8811, 0.15", "66.8862, -212.743, 86.461, 0.59", "66.8201, -214.249, 87.6023, 0.07", "66.8138, -215.654, 88.6532, 0.07", "66.8333, -216.136, 88.9953, 0.74", "66.8712, -216.608, 89.3099, 0.81", "66.9474, -217.531, 89.8572, 0.15", "67.0506, -219.127, 90.7099, 0.15", "67.0771, -219.991, 91.1288, 0.81", "67.0455, -221.242, 91.7037, 2.06", "66.9998, -222.234, 92.1662, 2.06", "66.9017, -223.692, 92.8553, 0.52", "66.8029, -224.792, 93.3811, 0.15", "66.6105, -226.158, 93.9904, 0.15", "66.4489, -227.11, 94.3928, 0.15", "66.3018, -227.919, 94.7189, 0.22", "66.1373, -228.743, 95.0098, 0.74", "65.9619, -229.584, 95.2768, 0.81", "65.5529, -231.573, 95.8178, 0.15", "65.2585, -233.025, 96.1755, 0.15", "64.9989, -234.41, 96.5194, 0.15", "64.7626, -235.877, 96.9503, 0.22", "64.6564, -236.712, 97.24, 0.66", "64.5915, -237.46, 97.5486, 1.25", "64.5764, -238.406, 98.0616, 1.25", "64.6803, -240.089, 99.2009, 0.22", "64.838, -241.418, 100.266, 0.15", "64.9665, -242.151, 100.971, 0.96", "65.1708, -243.085, 101.996, 0.15", "65.4801, -244.222, 103.4, 0.15", "65.7845, -245.195, 104.724, 0.15", "65.9741, -245.754, 105.55, 1.18", "66.3949, -246.988, 107.447, 0.07", "66.7596, -248.026, 109.101, 0.07", "66.9768, -248.687, 110.145, 0.07", "67.0608, -249.049, 110.652, 0.81", "67.1087, -249.385, 111.082, 0.81", "67.2126, -250.398, 112.307, 0.15", "67.2397, -251.092, 113.066, 0.15", "67.2272, -251.919, 113.892, 1.33", "67.1723, -253.263, 115.143, 0.15", "67.1309, -254.195, 115.958, 0.15", "67.0796, -255.119, 116.711, 0.15", "67.0502, -255.529, 117.009, 0.29", "67.0276, -256.135, 117.398, 0.07", "67.0509, -256.678, 117.69, 0.22", "67.1888, -258.068, 118.207, 0.29", "67.2612, -258.605, 118.339, 0.88", "67.3972, -259.229, 118.462, 1.4", "67.7632, -260.457, 118.715, 0.22", "68.2791, -261.883, 119.013, 0.07", "68.8071, -263.141, 119.276, 0.07", "69.0531, -263.655, 119.392, 0.29", "70.1725, -265.856, 119.94, 0.07", "70.6593, -266.772, 120.179, 0.07", "70.9577, -267.276, 120.338, 0.59", "71.7574, -268.511, 120.772, 0.15", "72.2738, -269.27, 121.053, 1.25", "72.8291, -270.105, 121.339, 0.88", "73.6947, -271.499, 121.751, 0.15", "74.4709, -272.803, 122.112, 0.15", "74.7626, -273.325, 122.262, 0.22", "75.2099, -274.21, 122.523, 0.15", "75.3436, -274.49, 122.625, 0.37", "75.5995, -275.014, 122.909, 0.81", "75.8864, -275.642, 123.338, 0.22", "76.2561, -276.562, 124.018, 0.15", "76.4595, -277.172, 124.514, 0.22", "76.8647, -278.563, 125.757, 0.07", "77.2601, -280.112, 127.172, 0.07", "77.3956, -280.717, 127.729, 0.22", "77.5263, -281.444, 128.382, 0.88", "77.8, -283.073, 129.877, 0.15", "77.9729, -284.098, 130.826, 0.22", "78.0899, -284.878, 131.517, 0.29", "78.1904, -285.482, 132.045, 0.52", "78.4514, -286.55, 133.025, 0.07", "78.8715, -287.818, 134.213, 0.07", "79.3148, -288.875, 135.174, 0.07", "79.4657, -289.222, 135.471, 0.59", "79.627, -289.584, 135.771, 0.66", "80.0393, -290.547, 136.505, 0.15", "80.3783, -291.49, 137.098, 0.15", "80.6443, -292.38, 137.586, 0.15", "80.7763, -292.872, 137.852, 0.74", "80.8752, -293.286, 138.092, 0.74", "81.0137, -293.965, 138.508, 0.15", "81.2699, -295.419, 139.487, 0.07", "81.5113, -296.628, 140.406, 0.07", "81.6335, -297.192, 140.864, 0.74", "81.9367, -298.507, 141.955, 0.07", "82.0354, -298.945, 142.323, 0.22", "82.2485, -299.955, 143.152, 0.07", "82.5522, -301.499, 144.362, 0.07", "82.6495, -302.086, 144.776, 0.66", "82.7386, -302.627, 145.124, 0.22", "82.886, -303.624, 145.685, 0.07", "83.0307, -304.845, 146.305, 0.07", "83.0565, -305.367, 146.522, 0.07", "83.0506, -306.056, 146.78, 0.52", "83.0, -307.565, 147.332, 0.07", "82.837, -309.236, 147.915, 0.07", "82.7486, -309.777, 148.082, 0.59", "82.3963, -311.121, 148.486, 0.07", "82.108, -311.978, 148.743, 0.07", "81.8658, -312.519, 148.913, 0.44", "80.9592, -314.236, 149.534, 0.07", "80.5106, -315.039, 149.852, 0.22", "79.7837, -316.347, 150.421, 0.07", "79.4774, -316.907, 150.692, 0.37", "78.341, -318.968, 151.707, 0.07", "77.2758, -320.927, 152.715, 0.07", "77.0741, -321.317, 152.936, 0.15", "76.7288, -322.021, 153.366, 0.07", "76.494, -322.543, 153.685, 0.52" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "57.1279, -192.449, 65.1418, 0.15", "56.3712, -191.167, 65.4913, 0.15", "55.4869, -189.631, 65.8368, 0.15", "54.6869, -188.206, 66.0953, 0.15", "53.9817, -186.957, 66.2967, 0.15", "53.5315, -186.266, 66.4385, 0.22", "52.7204, -185.22, 66.7419, 0.07", "52.2477, -184.741, 66.9378, 0.15", "51.3765, -184.078, 67.3198, 0.07", "50.6632, -183.747, 67.659, 0.15", "48.2634, -183.255, 68.8616, 0.07", "46.5408, -183.112, 69.7801, 0.07", "45.5833, -183.16, 70.3203, 0.07", "44.9618, -183.264, 70.6825, 0.37", "43.3743, -183.78, 71.6338, 0.07", "42.973, -183.991, 71.8671, 0.59" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-65.2393, -203.308, -20.3364, 0.29", "-65.9621, -205.174, -19.9855, 0.29", "-66.3022, -206.043, -19.8232, 0.15", "-66.5132, -206.585, -19.7051, 0.22", "-66.8886, -207.52, -19.4957, 0.07", "-67.3002, -208.486, -19.2802, 0.07", "-67.4341, -208.785, -19.215, 0.22", "-67.7406, -209.39, -19.0918, 0.74", "-68.389, -210.518, -18.9249, 0.15", "-68.8222, -211.217, -18.8566, 0.15", "-69.3276, -211.938, -18.8626, 0.22", "-69.7204, -212.44, -18.9393, 0.52", "-70.3499, -213.222, -19.1333, 0.66", "-70.7719, -213.728, -19.3108, 0.15", "-71.6082, -214.726, -19.7513, 0.15", "-72.4188, -215.738, -20.2441, 0.15", "-73.0525, -216.576, -20.6763, 0.15", "-73.356, -217.041, -20.8908, 0.96", "-73.7265, -217.775, -21.1443, 0.96", "-74.0256, -218.629, -21.3423, 0.15", "-74.2914, -220.022, -21.4839, 0.15", "-74.3186, -220.5, -21.471, 1.11", "-74.2483, -222.109, -21.2657, 0.15", "-74.0678, -223.66, -20.9874, 0.15", "-73.8062, -225.222, -20.6466, 0.15", "-73.5169, -226.647, -20.2611, 0.15", "-73.2536, -227.829, -19.8846, 0.15", "-73.0569, -228.849, -19.5494, 0.15", "-72.9555, -229.578, -19.3123, 0.88", "-72.9249, -230.404, -19.033, 0.07", "-72.9897, -231.331, -18.6774, 0.07", "-73.0763, -231.767, -18.5045, 0.29", "-73.3602, -232.661, -18.1589, 0.07", "-73.5249, -233.068, -17.9995, 0.22", "-73.9964, -234.052, -17.5859, 0.07", "-74.2694, -234.577, -17.3704, 0.15", "-74.4935, -234.999, -17.209, 0.07", "-74.6456, -235.283, -17.102, 0.22", "-75.2034, -236.306, -16.7358, 0.07", "-75.7958, -237.359, -16.4017, 0.07", "-75.9869, -237.679, -16.3215, 0.29", "-76.4628, -238.471, -16.1383, 0.07", "-76.8134, -239.101, -15.982, 0.07", "-76.9705, -239.445, -15.871, 0.81", "-77.0562, -239.674, -15.7799, 0.81", "-77.2742, -240.334, -15.4647, 0.07", "-77.4735, -240.947, -15.1423, 0.44", "-77.7539, -241.816, -14.666, 0.15", "-78.1284, -243.009, -14.0023, 0.15", "-78.2488, -243.445, -13.7606, 0.37", "-78.39, -244.011, -13.4623, 0.22", "-78.5175, -244.697, -13.1237, 0.15", "-78.5718, -245.071, -12.9703, 0.15", "-78.6254, -245.692, -12.7459, 0.59", "-78.6518, -246.63, -12.4435, 0.15", "-78.6274, -247.071, -12.2651, 0.22", "-78.5749, -247.919, -11.8988, 0.07", "-78.5577, -248.295, -11.7279, 0.22", "-78.5167, -249.41, -11.162, 0.15", "-78.5106, -250.206, -10.7286, 1.18", "-78.5704, -251.627, -9.89716, 0.07", "-78.6507, -252.588, -9.29945, 0.07", "-78.6912, -252.856, -9.12909, 0.22", "-78.9202, -253.832, -8.49392, 0.07", "-79.0544, -254.223, -8.24828, 0.22", "-79.4063, -255.085, -7.67225, 0.22", "-79.5419, -255.376, -7.47495, 0.22", "-79.6746, -255.688, -7.22935, 0.59", "-80.0384, -256.645, -6.40688, 0.07", "-80.1494, -256.948, -6.13947, 0.22", "-80.38, -257.605, -5.54981, 0.07", "-80.4776, -257.92, -5.27866, 0.37", "-80.8218, -259.176, -4.23643, 0.07", "-81.0681, -260.119, -3.5048, 0.07", "-81.1205, -260.316, -3.3622, 0.07", "-81.3429, -261.059, -2.87248, 1.18", "-81.9416, -262.76, -1.92682, 0.07", "-82.068, -263.099, -1.77303, 0.66", "-82.355, -263.783, -1.56414, 0.07", "-82.5169, -264.167, -1.47625, 0.07", "-82.6453, -264.481, -1.4126, 0.22", "-82.8872, -265.1, -1.31723, 0.07", "-83.0503, -265.5, -1.28866, 0.22", "-83.208, -265.914, -1.2635, 0.07", "-83.5488, -266.871, -1.17072, 0.07", "-83.7129, -267.345, -1.11804, 0.22", "-83.9196, -267.91, -1.0428, 0.07", "-84.0883, -268.403, -0.952845, 0.07", "-84.3704, -269.345, -0.739884, 0.07", "-84.7008, -270.603, -0.433116, 0.07", "-84.7751, -270.941, -0.349464, 0.44", "-84.8583, -271.377, -0.227537, 0.44", "-85.0873, -272.593, 0.166597, 0.07", "-85.2135, -273.321, 0.411998, 0.07", "-85.2528, -273.623, 0.508616, 0.07", "-85.2966, -273.961, 0.598277, 0.52", "-85.4222, -274.761, 0.789822, 0.15", "-85.5561, -275.45, 0.928741, 0.15", "-85.7143, -276.016, 1.01698, 0.37", "-86.0313, -277.054, 1.19445, 0.07", "-86.4608, -278.403, 1.44933, 0.07", "-86.6281, -278.872, 1.54307, 0.37", "-86.819, -279.357, 1.63448, 0.37", "-87.3044, -280.536, 1.87259, 0.07", "-87.8251, -281.718, 2.13031, 0.07", "-88.0432, -282.21, 2.22208, 0.59", "-88.4834, -283.281, 2.37888, 0.07", "-88.8086, -284.223, 2.46468, 0.07", "-89.0362, -285.023, 2.48195, 0.07", "-89.1545, -285.557, 2.44993, 0.81", "-89.3727, -286.78, 2.27229, 0.07", "-89.4347, -287.27, 2.17426, 0.15", "-89.523, -288.382, 1.90079, 0.07", "-89.591, -289.345, 1.63185, 0.07", "-89.6206, -289.757, 1.50148, 0.59", "-89.6548, -290.209, 1.35861, 0.59", "-89.7384, -290.948, 1.13879, 0.07", "-89.8728, -291.869, 0.875831, 0.07", "-89.9898, -292.546, 0.68665, 0.29", "-90.0999, -293.285, 0.529302, 0.29", "-90.1772, -293.996, 0.436711, 0.29", "-90.256, -295.023, 0.357694, 0.07", "-90.2766, -295.969, 0.355913, 0.07", "-90.2638, -296.5, 0.386321, 0.22", "-90.1761, -298.274, 0.553259, 0.07", "-90.0952, -299.47, 0.69996, 0.07", "-90.0356, -300.056, 0.785021, 0.59", "-89.7904, -301.788, 1.07535, 0.07", "-89.5397, -303.338, 1.3714, 0.07", "-89.4529, -303.861, 1.47317, 0.52" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-65.2393, -203.308, -20.3364, 0.22", "-65.671, -205.402, -21.3882, 0.22", "-65.8655, -206.359, -21.9065, 0.22", "-66.0523, -207.269, -22.4387, 0.22", "-66.1909, -207.95, -22.8454, 0.29", "-66.3037, -208.503, -23.1709, 0.52", "-66.411, -209.035, -23.4759, 1.03", "-66.5442, -209.779, -23.9323, 0.74", "-66.7091, -210.643, -24.4481, 0.15", "-66.7982, -211.129, -24.7116, 0.29", "-66.9041, -211.756, -25.0292, 0.37", "-67.0411, -212.625, -25.4206, 0.07", "-67.1261, -213.193, -25.6552, 0.15", "-67.2745, -214.252, -26.0619, 0.07", "-67.3631, -214.917, -26.3204, 0.29", "-67.4441, -215.62, -26.6089, 0.29", "-67.5026, -216.272, -26.8854, 0.29", "-67.5296, -216.781, -27.1049, 1.03", "-67.5435, -217.481, -27.4112, 0.52", "-67.5433, -218.465, -27.8317, 0.22", "-67.5504, -219.167, -28.1358, 0.66", "-67.5555, -219.697, -28.3547, 0.29", "-67.5619, -220.355, -28.6074, 0.07", "-67.5793, -220.764, -28.7411, 0.29", "-67.6422, -221.61, -28.9659, 0.15", "-67.687, -222.052, -29.0554, 0.15", "-67.7532, -222.567, -29.1516, 0.52", "-67.8227, -223.062, -29.2392, 0.52", "-67.9783, -224.261, -29.4365, 0.15", "-68.0279, -224.903, -29.5113, 0.15", "-68.0391, -225.637, -29.5808, 0.15", "-68.0305, -225.94, -29.6059, 0.37", "-68.0078, -226.291, -29.6561, 0.37", "-67.9142, -227.285, -29.9261, 0.07", "-67.8096, -228.281, -30.4738, 0.07", "-67.7869, -228.609, -30.7793, 0.59", "-67.7802, -228.764, -30.9805, 1.11", "-67.7514, -229.45, -32.0613, 0.37", "-67.7327, -230.166, -33.3026, 0.15", "-67.7332, -230.766, -34.4563, 0.15", "-67.748, -231.07, -35.0864, 0.15", "-67.7559, -231.216, -35.3713, 0.37", "-67.7674, -231.587, -36.0053, 0.15", "-67.7501, -232.178, -36.7698, 0.15", "-67.7291, -232.466, -37.0565, 0.44", "-67.6686, -233.409, -37.7885, 0.07", "-67.6591, -233.711, -37.9903, 0.22", "-67.6498, -234.777, -38.6938, 0.07", "-67.6537, -235.548, -39.1864, 0.07", "-67.653, -235.731, -39.2954, 0.15", "-67.6493, -236.644, -39.7231, 0.07", "-67.6471, -236.89, -39.7862, 0.22" ],
    "parent" : "dend_38",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-81.2941, -105.547, 8.81677, 0.22", "-82.3074, -106.447, 9.13202, 0.22", "-82.99, -107.021, 9.35204, 0.22", "-83.5348, -107.478, 9.55095, 0.29", "-84.0116, -107.888, 9.73013, 0.66", "-84.3553, -108.197, 9.87826, 0.88", "-85.1335, -108.922, 10.2538, 0.22", "-85.742, -109.528, 10.6016, 0.29", "-86.2119, -110.013, 10.8803, 0.44", "-86.5703, -110.39, 11.0773, 0.44", "-87.2407, -111.146, 11.4851, 0.15", "-87.7659, -111.793, 11.8413, 0.15", "-88.0055, -112.108, 12.0125, 0.37", "-88.3063, -112.495, 12.2255, 0.81", "-88.8076, -113.111, 12.585, 0.59", "-89.4265, -113.843, 13.0316, 0.22", "-89.9051, -114.382, 13.374, 0.15", "-90.7354, -115.263, 14.0412, 0.22", "-91.3652, -115.88, 14.5931, 0.07", "-91.7873, -116.262, 14.9843, 0.07", "-91.9959, -116.437, 15.1836, 0.44", "-92.4418, -116.767, 15.572, 0.81", "-93.2702, -117.293, 16.2915, 0.22", "-93.9258, -117.657, 16.8182, 0.15", "-94.6677, -118.034, 17.3382, 0.15", "-95.1435, -118.261, 17.6235, 0.15", "-95.9107, -118.609, 18.0172, 0.37", "-96.7763, -118.986, 18.368, 0.15", "-97.449, -119.295, 18.5693, 0.22", "-97.91, -119.539, 18.6786, 0.81", "-98.5504, -119.931, 18.8156, 1.25", "-98.9018, -120.175, 18.8662, 1.25", "-100.062, -121.106, 18.9336, 0.22", "-100.865, -121.816, 18.9035, 0.22", "-101.838, -122.754, 18.8118, 0.22", "-102.439, -123.367, 18.7785, 0.22", "-103.243, -124.221, 18.7652, 0.37", "-103.798, -124.796, 18.7907, 1.03", "-104.322, -125.308, 18.8584, 0.37", "-105.167, -125.966, 19.1112, 0.15", "-106.43, -126.658, 19.777, 0.07", "-106.922, -126.872, 20.1133, 0.15", "-107.549, -127.108, 20.5971, 0.37", "-107.971, -127.242, 20.9319, 0.37", "-108.696, -127.431, 21.4942, 0.74", "-110.093, -127.734, 22.5084, 0.15", "-110.847, -127.903, 22.9782, 0.15", "-111.463, -128.057, 23.2942, 0.15", "-112.035, -128.213, 23.494, 0.74", "-112.361, -128.301, 23.5555, 0.74", "-113.334, -128.546, 23.5787, 0.15", "-113.874, -128.636, 23.506, 0.15", "-115.063, -128.747, 23.2805, 0.15", "-115.901, -128.8, 23.11, 0.15", "-116.385, -128.823, 23.0295, 0.66", "-116.87, -128.824, 22.9909, 0.96", "-117.632, -128.786, 23.0053, 0.52", "-118.426, -128.72, 23.134, 0.15", "-118.842, -128.686, 23.2603, 0.15", "-119.693, -128.605, 23.5691, 0.15", "-120.762, -128.462, 24.0433, 0.15", "-121.107, -128.402, 24.2128, 0.15", "-121.776, -128.269, 24.5546, 0.52", "-122.151, -128.196, 24.7477, 0.88", "-122.945, -128.047, 25.1463, 0.59", "-124.085, -127.882, 25.6897, 0.37", "-124.65, -127.843, 25.9667, 0.15", "-125.156, -127.84, 26.2175, 0.59", "-126.132, -127.956, 26.7129, 0.07", "-126.682, -128.103, 27.0089, 0.52", "-127.455, -128.426, 27.4341, 0.15", "-128.083, -128.759, 27.7645, 0.15", "-128.571, -129.069, 28.0522, 0.96", "-129.771, -129.908, 28.8299, 0.07", "-130.856, -130.74, 29.5666, 0.07", "-131.233, -131.042, 29.8333, 0.81", "-131.563, -131.296, 30.0687, 0.96", "-132.614, -132.066, 30.8698, 0.07", "-133.151, -132.423, 31.3283, 0.07", "-133.323, -132.507, 31.4838, 0.37", "-133.665, -132.617, 31.7859, 0.37", "-134.386, -132.783, 32.4174, 0.07", "-135.301, -132.969, 33.1163, 0.37", "-135.837, -133.073, 33.4388, 0.37", "-136.583, -133.268, 33.8307, 0.22", "-137.123, -133.441, 34.1295, 0.22", "-137.64, -133.642, 34.4109, 0.22", "-138.667, -134.1, 34.9409, 0.22", "-139.233, -134.356, 35.2003, 0.66", "-140.174, -134.815, 35.6334, 0.15", "-141.193, -135.351, 36.1463, 0.15", "-141.651, -135.591, 36.3307, 0.59", "-142.231, -135.893, 36.5256, 0.44", "-143.442, -136.525, 36.8562, 0.15", "-144.433, -137.061, 36.9975, 0.15", "-145.168, -137.464, 37.0423, 0.15", "-147.477, -138.731, 37.0602, 0.74", "-148.464, -139.266, 37.1227, 0.96", "-148.965, -139.539, 37.2037, 1.03", "-150.495, -140.381, 37.5742, 0.07", "-151.435, -140.886, 37.8792, 0.07", "-151.998, -141.178, 38.119, 0.52", "-153.196, -141.75, 38.7547, 0.15", "-154.333, -142.24, 39.3866, 0.15", "-154.824, -142.43, 39.6712, 0.88", "-155.705, -142.731, 40.1968, 1.62", "-156.671, -143.026, 40.7311, 0.74", "-157.791, -143.345, 41.3289, 0.15", "-158.83, -143.62, 41.8646, 0.15", "-159.183, -143.711, 42.0474, 0.15", "-159.666, -143.844, 42.3188, 0.81", "-160.014, -143.951, 42.5238, 0.81", "-161.157, -144.362, 43.1812, 0.07", "-162.129, -144.77, 43.7256, 0.07", "-162.708, -145.025, 44.0091, 0.37", "-164.245, -145.721, 44.7303, 0.07", "-165.084, -146.115, 45.0958, 0.07", "-165.542, -146.336, 45.2765, 0.96", "-165.751, -146.438, 45.3443, 0.96", "-167.019, -147.061, 45.7253, 0.15", "-168.109, -147.579, 46.0563, 0.15", "-168.62, -147.808, 46.2222, 0.44", "-168.914, -147.922, 46.3425, 0.44", "-169.781, -148.215, 46.7851, 0.15", "-170.376, -148.388, 47.1334, 0.15", "-170.77, -148.474, 47.3967, 0.37", "-171.703, -148.613, 48.0142, 0.07", "-172.497, -148.707, 48.5511, 0.07", "-172.995, -148.762, 48.8833, 0.07", "-173.502, -148.826, 49.2205, 1.11", "-174.736, -149.036, 50.0218, 0.07", "-175.172, -149.128, 50.3027, 0.59", "-176.464, -149.42, 51.0797, 0.07", "-177.063, -149.557, 51.4122, 0.52", "-177.858, -149.733, 51.815, 0.22", "-178.592, -149.894, 52.1653, 0.22", "-178.958, -149.966, 52.3067, 0.52", "-179.623, -150.077, 52.5013, 0.52", "-179.768, -150.098, 52.534, 0.52", "-180.825, -150.244, 52.806, 0.07", "-181.261, -150.305, 52.9236, 0.52", "-182.177, -150.446, 53.1938, 0.07", "-182.658, -150.535, 53.3807, 0.37", "-183.81, -150.791, 53.9317, 0.07", "-184.698, -151.016, 54.4483, 0.07", "-184.992, -151.098, 54.6567, 0.52", "-185.206, -151.159, 54.8233, 0.52", "-186.268, -151.456, 55.6871, 0.15", "-186.852, -151.614, 56.1542, 0.66", "-188.282, -151.993, 57.2064, 0.07", "-189.276, -152.285, 57.8644, 0.07", "-189.835, -152.464, 58.2021, 0.07", "-190.37, -152.657, 58.4658, 0.37", "-190.814, -152.832, 58.6264, 0.37", "-191.885, -153.289, 58.8913, 0.07", "-193.219, -153.907, 59.074, 0.07", "-193.713, -154.154, 59.1429, 0.29", "-195.041, -154.875, 59.4558, 0.07", "-195.584, -155.183, 59.6311, 0.52", "-196.611, -155.779, 60.1255, 0.07", "-196.947, -155.979, 60.3436, 0.22", "-198.255, -156.76, 61.3352, 0.07", "-199.429, -157.479, 62.3177, 0.07", "-199.874, -157.767, 62.7064, 0.15", "-201.247, -158.695, 63.8547, 0.07", "-201.825, -159.104, 64.2968, 0.07", "-202.771, -159.79, 64.8974, 0.07", "-202.958, -159.932, 64.9733, 0.15", "-204.198, -160.888, 65.2822, 0.07", "-204.733, -161.302, 65.3757, 0.29", "-205.65, -161.982, 65.4683, 0.07", "-206.001, -162.238, 65.4993, 0.29", "-208.187, -163.798, 65.6882, 0.07", "-209.574, -164.771, 65.7982, 0.07", "-210.258, -165.245, 65.8474, 0.15", "-211.215, -165.915, 65.9081, 0.15", "-211.731, -166.292, 65.9536, 0.22", "-212.865, -167.178, 66.1594, 0.07", "-213.769, -167.94, 66.4382, 0.07", "-214.057, -168.198, 66.5546, 0.37", "-214.351, -168.481, 66.6816, 0.37", "-215.904, -170.076, 67.3821, 0.07", "-217.339, -171.59, 68.0505, 0.07", "-218.011, -172.319, 68.3825, 0.07", "-218.527, -172.896, 68.6557, 0.29", "-220.157, -174.757, 69.5561, 0.07", "-220.59, -175.271, 69.7976, 0.07", "-220.763, -175.501, 69.9156, 0.22", "-221.747, -177.003, 70.9086, 0.07", "-222.574, -178.341, 71.8732, 0.07", "-223.068, -179.2, 72.6022, 0.07", "-223.293, -179.645, 73.0772, 0.29", "-223.988, -181.108, 74.8116, 0.07", "-224.509, -182.426, 76.5686, 0.07" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-81.2941, -105.547, 8.81677, 0.44", "-82.3268, -108.465, 9.09581, 0.44", "-83.0409, -110.373, 9.25294, 0.44", "-83.7477, -112.15, 9.29579, 0.37", "-84.4044, -113.768, 9.26546, 0.15", "-84.969, -115.138, 9.19255, 0.15", "-85.4747, -116.352, 9.10214, 0.15", "-85.707, -116.864, 9.03435, 0.37", "-86.3401, -118.211, 8.7345, 0.88", "-86.7591, -119.102, 8.50803, 0.74", "-87.6648, -120.97, 8.00383, 0.29", "-88.3421, -122.331, 7.65223, 0.15", "-88.9721, -123.61, 7.36894, 0.07", "-89.7765, -125.217, 6.9908, 0.07", "-90.027, -125.703, 6.87912, 0.44", "-90.4059, -126.399, 6.68668, 0.81", "-91.435, -128.198, 6.08554, 0.22", "-92.6955, -130.367, 5.31545, 0.22", "-93.763, -132.188, 4.64669, 0.22", "-94.1086, -132.777, 4.43392, 0.44", "-94.6707, -133.72, 4.05997, 0.81", "-95.2987, -134.769, 3.57761, 1.33" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-14.3025, -18.0747, 13.4636, 0.29", "-14.3422, -18.7244, 14.4001, 0.29", "-14.378, -19.1092, 14.9021, 0.22", "-14.4305, -19.5952, 15.4721, 0.22", "-14.4844, -20.0201, 15.9613, 0.22", "-14.5342, -20.3466, 16.3237, 0.37", "-14.5885, -20.6826, 16.667, 0.37", "-14.6555, -21.0854, 17.0464, 0.59", "-14.7366, -21.7858, 17.6969, 0.15", "-14.7725, -22.3211, 18.2107, 0.15", "-14.776, -22.5406, 18.4445, 0.15", "-14.7431, -23.0078, 18.9806, 1.03", "-14.6173, -23.8192, 20.0051, 0.29", "-14.5254, -24.2261, 20.6091, 0.29", "-14.3991, -24.6419, 21.2779, 0.29", "-14.2421, -25.0372, 21.9832, 0.29", "-14.113, -25.269, 22.4873, 0.66", "-13.888, -25.5374, 23.2884, 0.44", "-13.5609, -25.8008, 24.3626, 0.44", "-13.4382, -25.8688, 24.7294, 0.44", "-13.0858, -25.9946, 25.6185, 0.22", "-12.745, -26.0653, 26.3521, 0.15", "-12.3045, -26.1172, 27.244, 0.15", "-12.1205, -26.134, 27.5677, 0.15", "-11.9294, -26.1704, 27.8821, 0.37", "-11.6811, -26.2842, 28.3188, 0.37", "-11.4049, -26.6679, 28.9484, 0.15", "-11.2648, -27.1303, 29.4399, 0.15", "-11.223, -27.4052, 29.6612, 0.44", "-11.1733, -28.0695, 30.122, 0.15", "-11.1694, -28.6517, 30.4831, 0.22", "-11.1781, -29.5622, 30.9933, 0.22", "-11.1773, -29.7895, 31.1032, 0.37", "-11.1559, -30.2167, 31.3018, 0.44", "-11.0882, -30.7677, 31.5924, 0.66", "-10.9669, -31.3748, 31.9542, 0.15", "-10.8406, -31.8874, 32.3023, 0.15", "-10.759, -32.1646, 32.5083, 0.22", "-10.6713, -32.4365, 32.7573, 0.22", "-10.5259, -32.8562, 33.2274, 0.22", "-10.3156, -33.3979, 33.9613, 0.15", "-10.0768, -33.9408, 34.757, 0.22", "-9.85375, -34.3932, 35.4757, 0.29", "-9.54524, -34.9431, 36.3889, 0.22", "-9.23101, -35.4398, 37.2666, 0.59", "-8.78396, -36.0414, 38.3962, 0.59", "-8.53793, -36.3318, 38.967, 0.07", "-8.18295, -36.7366, 39.7347, 0.07", "-8.05479, -36.8814, 39.9861, 0.22", "-7.4604, -37.5947, 41.0386, 0.07", "-7.29043, -37.8366, 41.3543, 0.07", "-7.15895, -38.0539, 41.6067, 0.29", "-6.97383, -38.4, 42.0047, 0.74", "-6.75668, -38.8736, 42.4925, 0.22", "-6.528, -39.4504, 43.0535, 0.15", "-6.12071, -40.5436, 44.0149, 0.15", "-5.97555, -40.9361, 44.3509, 0.15", "-5.78512, -41.4821, 44.8082, 0.15", "-5.65506, -41.9381, 45.1796, 0.15", "-5.53547, -42.5319, 45.6388, 0.15", "-5.46537, -42.9598, 45.955, 0.37", "-5.42135, -43.3554, 46.2795, 0.37", "-5.38432, -43.9127, 46.793, 0.37", "-5.36085, -44.484, 47.382, 0.37", "-5.33812, -44.9839, 47.9347, 0.37", "-5.29058, -45.5214, 48.5823, 0.22", "-5.16918, -46.4198, 49.8136, 0.22", "-5.10374, -46.7443, 50.281, 0.22", "-4.95758, -47.227, 51.032, 0.22", "-4.80054, -47.6252, 51.676, 0.81", "-4.38857, -48.5795, 53.2065, 0.15", "-3.97497, -49.5474, 54.6841, 0.15", "-3.83274, -49.8651, 55.1511, 0.37", "-3.47157, -50.6495, 56.33, 0.37", "-3.36493, -50.8836, 56.6675, 0.52", "-3.18003, -51.2908, 57.2339, 0.22", "-2.81189, -52.1421, 58.2211, 0.22", "-2.57228, -52.7358, 58.8073, 0.22", "-2.29824, -53.4521, 59.4931, 0.22", "-2.12546, -53.9228, 59.9359, 0.74", "-2.01993, -54.2153, 60.2414, 0.74", "-1.80185, -54.7722, 60.8867, 0.22", "-1.51523, -55.4385, 61.7548, 0.29", "-1.19051, -56.1076, 62.6832, 0.29", "-0.763486, -56.9176, 63.841, 0.22", "-0.412489, -57.5701, 64.798, 0.29", "-0.0665614, -58.2169, 65.7299, 0.29", "0.241354, -58.7836, 66.5449, 0.29", "0.50041, -59.2144, 67.1801, 0.07", "0.89756, -59.8079, 68.0356, 0.07", "1.05059, -60.0233, 68.3394, 0.22", "1.32066, -60.4019, 68.8421, 0.22", "1.85507, -61.209, 69.8051, 0.15", "2.49086, -62.3322, 71.0532, 0.15", "2.70221, -62.813, 71.5682, 0.29", "2.95722, -63.568, 72.3524, 0.52", "3.0737, -64.0888, 72.9019, 0.81", "3.14733, -64.8401, 73.7202, 0.37", "3.15085, -65.539, 74.4932, 0.37", "3.12009, -66.3522, 75.4183, 0.15", "3.08538, -67.1339, 76.3976, 0.29", "3.07212, -67.9891, 77.6158, 0.29", "3.11538, -68.6922, 78.8335, 0.66", "3.20436, -69.1248, 79.739, 0.66", "3.34982, -69.4192, 80.424, 0.07", "3.46321, -69.554, 80.7666, 0.44", "3.92249, -69.9478, 81.7384, 0.22", "4.636, -70.5008, 82.998, 0.44", "4.80367, -70.642, 83.299, 0.59", "5.03569, -70.9041, 83.8504, 0.22", "5.22368, -71.1914, 84.478, 0.37", "5.41656, -71.5469, 85.3346, 0.37", "5.588, -71.934, 86.4043, 0.37", "5.65052, -72.1748, 87.1108, 0.22", "5.69676, -72.5274, 88.2126, 0.22", "5.69247, -72.6299, 88.5767, 0.22", "5.66748, -72.7465, 89.0549, 0.22", "5.57354, -73.0026, 90.2089, 0.22", "5.56606, -73.1759, 91.0546, 0.22", "5.62115, -73.2777, 91.5909, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-14.3025, -18.0747, 13.4636, 0.37", "-14.6571, -18.4259, 15.7705, 0.37", "-14.9158, -18.6639, 17.2563, 0.37", "-15.2669, -18.958, 19.0331, 0.37", "-15.729, -19.3666, 21.2598, 0.37", "-15.9804, -19.6241, 22.5116, 0.29", "-16.1944, -19.8826, 23.6721, 0.29", "-16.4522, -20.3618, 25.5331, 0.22", "-16.5764, -20.6705, 26.7082, 0.22", "-16.6707, -20.9354, 27.8004, 0.29", "-16.8038, -21.1954, 29.0549, 0.29", "-16.9129, -21.3145, 29.8705, 0.29", "-17.0347, -21.4045, 30.6584, 0.29", "-17.267, -21.5481, 31.7634, 0.29", "-17.4661, -21.623, 32.3599, 0.29", "-17.8865, -21.7399, 33.357, 0.29", "-18.4052, -21.8524, 34.3855, 0.29", "-18.7204, -21.9292, 34.9907, 0.29", "-19.4531, -22.166, 36.4737, 0.22", "-20.5727, -22.645, 38.9943, 0.22", "-21.1337, -22.9248, 40.3947, 0.22", "-21.482, -23.1312, 41.3998, 0.22", "-22.0016, -23.5092, 43.2632, 0.22", "-22.2519, -23.7472, 44.5076, 0.37", "-22.4066, -23.9845, 45.7928, 0.37", "-22.4634, -24.194, 46.817, 0.37", "-22.4427, -24.4311, 47.8845, 0.37", "-22.3374, -24.6377, 48.8321, 0.22", "-21.8703, -25.2295, 51.6139, 0.22", "-21.8032, -25.3038, 52.0008, 0.22", "-21.444, -25.6803, 54.0935, 0.22", "-21.3317, -25.859, 55.107, 0.15", "-21.3493, -26.2021, 57.0243, 0.15", "-21.4118, -26.2894, 57.5206, 0.22", "-21.9781, -26.7386, 59.9525, 0.22", "-22.1467, -26.8354, 60.498, 0.29", "-23.124, -27.3154, 62.933, 0.15", "-24.0915, -27.7289, 65.0601, 0.15", "-25.1227, -28.1273, 67.2152, 0.15", "-25.4326, -28.2364, 67.8897, 0.52", "-26.2556, -28.5111, 69.7696, 0.52", "-26.7734, -28.6567, 71.082, 0.37", "-27.6402, -28.8171, 73.4262, 0.29", "-28.5392, -28.8994, 76.0609, 0.29", "-29.0955, -28.9358, 77.7716, 0.29", "-29.6397, -28.9677, 79.6362, 0.29", "-30.2529, -28.9929, 81.8741, 0.29", "-30.384, -28.9881, 82.4127, 0.44", "-30.9171, -28.982, 84.6704, 0.44", "-31.1706, -29.0168, 85.6053, 0.44", "-31.5587, -29.119, 86.804, 0.44", "-32.046, -29.2907, 87.8845, 0.44", "-33.5395, -29.8636, 90.3165, 0.44", "-34.4551, -30.2189, 91.4183, 0.44", "-36.1968, -30.8647, 93.0611, 0.15", "-36.9553, -31.1371, 93.6549, 0.29", "-39.0419, -31.8801, 94.9702, 0.22", "-39.9051, -32.1897, 95.3826, 0.29", "-42.3781, -33.096, 96.2446, 0.07", "-43.9109, -33.6472, 96.6991, 0.07", "-45.0889, -34.0372, 97.0522, 0.52", "-46.1583, -34.3822, 97.3887, 0.96", "-48.3938, -35.1138, 98.0841, 0.07", "-49.3753, -35.4414, 98.4449, 0.07", "-50.321, -35.765, 98.8028, 0.07", "-51.6307, -36.2417, 99.3668, 0.22", "-52.1396, -36.4422, 99.6203, 0.44", "-53.3519, -36.9615, 100.283, 0.22", "-55.781, -38.1388, 101.95, 0.96", "-57.3801, -39.0412, 103.315, 0.15", "-58.3145, -39.6418, 104.291, 0.96", "-59.594, -40.5492, 105.823, 0.15", "-60.0544, -40.8952, 106.477, 0.29", "-61.4197, -42.0147, 109.004, 0.15", "-62.2739, -42.8345, 111.146, 0.22", "-62.6839, -43.3619, 112.903, 0.22", "-62.7308, -43.4703, 113.32, 0.22", "-62.7457, -43.7053, 114.436, 0.22", "-62.6942, -44.0353, 116.441, 0.22", "-62.6708, -44.1045, 117.192, 0.22", "-62.6789, -44.1352, 118.379, 0.22", "-62.7344, -44.135, 119.511, 0.22", "-62.9554, -44.1597, 121.158, 0.22", "-63.2676, -44.2289, 122.345, 0.22", "-63.7537, -44.3798, 123.393, 0.22", "-64.2831, -44.5519, 124.256, 0.81", "-64.978, -44.7848, 125.17, 0.81", "-65.7111, -45.0385, 126.057, 0.22", "-66.3901, -45.2881, 126.821, 0.81", "-68.2589, -45.9516, 128.839, 0.15", "-68.7006, -46.0917, 129.314, 0.37", "-69.8949, -46.3979, 130.572, 0.07", "-71.1452, -46.617, 131.844, 0.07", "-71.6745, -46.6655, 132.401, 0.29", "-72.829, -46.7178, 133.709, 0.07", "-73.6261, -46.7638, 134.71, 0.07", "-73.9921, -46.8257, 135.222, 0.52", "-74.7249, -47.054, 136.314, 0.74", "-75.7985, -47.5708, 137.963, 0.37", "-76.8563, -48.24, 139.6, 0.37", "-77.3841, -48.6407, 140.392, 0.59", "-78.4485, -49.4857, 141.88, 0.29", "-78.9787, -49.886, 142.542, 0.29", "-79.4565, -50.2226, 143.058, 0.88", "-80.5575, -50.9391, 144.062, 0.22", "-81.2971, -51.3563, 144.645, 0.66", "-81.6005, -51.4911, 144.885, 0.66", "-82.5405, -51.8402, 145.639, 0.07", "-83.9276, -52.2847, 146.727, 0.07", "-84.4735, -52.4354, 147.136, 0.07", "-84.8909, -52.5411, 147.426, 0.37", "-86.771, -53.0275, 148.649, 0.15", "-87.0996, -53.1194, 148.847, 0.15", "-88.1376, -53.3971, 149.369, 0.52", "-88.7938, -53.5752, 149.673, 0.15", "-89.5487, -53.8019, 150.041, 0.37", "-90.7312, -54.2077, 150.642, 0.07", "-91.189, -54.3848, 150.897, 0.37", "-92.2204, -54.7815, 151.621, 0.15", "-93.4424, -55.1544, 152.755, 0.15", "-94.249, -55.3084, 153.767, 0.37", "-94.6888, -55.3243, 154.524, 0.81", "-95.2111, -55.2358, 155.71, 1.4", "-95.7526, -55.0267, 157.284, 1.4", "-96.3565, -54.6179, 159.651, 0.37", "-96.8228, -54.0925, 162.29, 0.22", "-97.1164, -53.5902, 164.85, 0.22", "-97.2863, -53.1869, 166.839, 0.22", "-97.3316, -53.0149, 167.68, 0.22", "-97.3626, -52.75, 169.056, 0.44", "-97.2894, -52.2563, 172.089, 0.44", "-97.1637, -51.891, 174.737, 0.44" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "5.27498, -356.919, 21.4279, 1.33", "5.49447, -357.807, 21.0482, 1.33", "5.69008, -358.696, 20.6829, 0.37", "6.0048, -360.116, 20.0458, 0.22", "6.08792, -360.464, 19.895, 0.22", "6.18502, -360.887, 19.7319, 0.37", "6.36594, -361.682, 19.4617, 0.37", "6.66207, -363.012, 19.0452, 0.22", "6.8698, -363.992, 18.7846, 0.96", "7.04202, -364.895, 18.6118, 1.18", "7.27903, -366.277, 18.3216, 0.29", "7.42357, -367.19, 18.1283, 0.29", "7.48332, -367.598, 18.0516, 0.29", "7.53838, -368.003, 17.9811, 0.44", "7.60849, -368.613, 17.86, 0.44", "7.76727, -370.257, 17.463, 0.44", "7.82603, -370.871, 17.3006, 1.11", "7.90919, -371.947, 17.0236, 1.62", "7.97683, -373.036, 16.7715, 0.37", "8.02634, -374.43, 16.5038, 0.22", "8.03338, -375.188, 16.392, 0.29", "8.01594, -375.886, 16.3309, 0.29", "7.95843, -376.809, 16.2584, 0.29", "7.85032, -377.782, 16.2007, 0.29", "7.65139, -378.961, 16.1711, 0.22", "7.55998, -379.38, 16.1805, 0.22", "7.47303, -379.716, 16.187, 0.52", "7.30164, -380.311, 16.1971, 0.96", "7.02471, -381.24, 16.2121, 0.29", "6.75085, -382.106, 16.2248, 0.22", "6.33478, -383.405, 16.2431, 0.29", "6.03872, -384.355, 16.2568, 0.29", "5.76543, -385.241, 16.2695, 0.37", "5.50102, -386.118, 16.2821, 1.18", "5.27082, -386.887, 16.2929, 1.92", "5.02686, -387.701, 16.3036, 0.88", "4.53691, -389.272, 16.3226, 0.22", "4.23635, -390.224, 16.3338, 0.29", "4.01455, -390.917, 16.3417, 0.66", "3.76847, -391.689, 16.3505, 1.03", "3.43336, -392.739, 16.3626, 0.22", "3.05051, -393.922, 16.3756, 0.22", "2.61077, -395.281, 16.3906, 0.22", "2.39825, -395.959, 16.4215, 0.29", "2.19013, -396.635, 16.4692, 0.81", "2.02841, -397.15, 16.515, 0.81", "1.80314, -397.889, 16.5937, 0.44", "1.30657, -399.697, 16.7973, 0.15", "0.902309, -401.238, 16.9668, 0.15", "0.707809, -402.0, 17.0433, 0.59", "0.545669, -402.671, 17.1042, 1.99", "0.417758, -403.249, 17.1508, 2.36", "-0.0698344, -405.574, 17.3046, 0.44", "-0.312244, -406.797, 17.3603, 0.22", "-0.559649, -408.096, 17.3847, 0.29", "-0.710195, -408.914, 17.3993, 0.88", "-0.826155, -409.602, 17.4118, 1.03", "-0.993735, -410.668, 17.4575, 0.37", "-1.13432, -411.748, 17.5548, 0.22", "-1.24071, -412.99, 17.7508, 0.22", "-1.29665, -413.825, 17.9024, 0.96", "-1.3626, -414.979, 18.1402, 0.37", "-1.41901, -416.379, 18.4743, 0.22", "-1.42022, -417.162, 18.7031, 0.44", "-1.36946, -418.263, 19.1086, 1.18" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "5.27498, -356.919, 21.4279, 0.15", "4.94833, -357.984, 21.9011, 0.15", "4.79465, -358.573, 22.1414, 0.15", "4.67706, -359.049, 22.3289, 0.44", "4.18742, -360.877, 23.0096, 0.15", "4.11518, -361.141, 23.1023, 0.37", "4.02024, -361.488, 23.2165, 0.37", "3.60022, -363.212, 23.775, 0.07", "3.24615, -364.643, 24.238, 0.07", "2.83724, -366.202, 24.7153, 0.07", "2.65741, -366.829, 24.8764, 0.07", "2.449, -367.529, 25.0583, 0.37" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "250.599, 2.14375, -191.12, 0.15", "258.737, 4.38636, -199.351, 0.15", "265.744, 5.37074, -208.782, 0.15", "273.442, 4.53763, -217.674, 0.15", "280.896, 5.16085, -226.788, 0.15", "287.089, 5.75453, -236.804, 0.15", "293.554, 5.58364, -246.662, 0.15", "300.635, 4.10875, -255.973, 0.15", "307.507, 2.90466, -265.477, 0.15", "314.023, -0.564181, -274.671, 0.15", "321.293, -5.11258, -282.763, 0.15", "327.538, -8.55818, -292.151, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "250.599, 2.14375, -191.12, 0.07", "257.463, 4.30612, -196.2, 0.15" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "188.189, -86.709, 20.451, 0.15", "188.415, -87.3262, 19.7234, 0.15", "188.722, -87.96, 18.9854, 0.15", "188.796, -88.0837, 18.8484, 0.15", "188.949, -88.2928, 18.6323, 0.44", "189.077, -88.4566, 18.4648, 0.44", "189.396, -88.8445, 18.0448, 0.15", "189.672, -89.113, 17.7411, 0.29", "189.946, -89.3443, 17.4651, 0.29", "190.249, -89.5881, 17.1488, 0.07", "190.657, -89.8801, 16.6944, 0.07", "191.021, -90.101, 16.2803, 0.07", "191.144, -90.1578, 16.1399, 0.37", "191.402, -90.2534, 15.8525, 1.11", "191.497, -90.2798, 15.7524, 1.11", "192.011, -90.3879, 15.2403, 0.22", "192.615, -90.4854, 14.7254, 0.15", "193.02, -90.5626, 14.3601, 0.15", "193.269, -90.6306, 14.0774, 0.15", "193.561, -90.7313, 13.6703, 0.15", "193.706, -90.7919, 13.4245, 0.74", "193.928, -90.9042, 12.9585, 0.15", "194.321, -91.101, 11.9932, 0.15", "194.739, -91.2577, 11.058, 0.15", "194.889, -91.2909, 10.7801, 0.74", "195.03, -91.3116, 10.5754, 0.81", "195.179, -91.3372, 10.3938, 0.37", "195.727, -91.4407, 9.86087, 0.07", "196.391, -91.5774, 9.45282, 0.07", "196.921, -91.7069, 9.2671, 0.37", "197.588, -91.9289, 9.12662, 0.07", "198.478, -92.2966, 9.02631, 0.07", "198.787, -92.4476, 9.01668, 0.59", "199.63, -92.9274, 9.05448, 0.07", "200.55, -93.4995, 9.13055, 0.07", "201.108, -93.8198, 9.23505, 0.15", "201.467, -94.0039, 9.33653, 0.37", "201.798, -94.1583, 9.44836, 0.66", "202.094, -94.3006, 9.54683, 0.59", "202.414, -94.4726, 9.64348, 0.66", "203.3, -94.9987, 9.90324, 0.07", "203.918, -95.3729, 10.0938, 0.07", "204.308, -95.6231, 10.2159, 0.07", "204.582, -95.8098, 10.2915, 0.52", "205.205, -96.2625, 10.4316, 0.07", "205.551, -96.5229, 10.4738, 0.07", "205.672, -96.6245, 10.4567, 0.07", "205.975, -96.8758, 10.3519, 0.44", "206.58, -97.3164, 10.1022, 0.15", "206.805, -97.4503, 10.0091, 0.37", "207.197, -97.6323, 9.84275, 0.59", "208.185, -97.9999, 9.45694, 0.88", "208.5, -98.1229, 9.32051, 0.29", "209.29, -98.44, 8.98052, 0.15", "209.896, -98.6777, 8.72502, 0.15", "210.231, -98.8021, 8.58678, 0.22", "210.51, -98.8992, 8.47711, 0.52", "211.584, -99.2486, 8.03814, 0.52", "212.21, -99.4677, 7.71616, 0.37", "213.024, -99.7837, 7.20005, 0.15", "213.55, -100.009, 6.82231, 0.15", "213.77, -100.127, 6.62954, 0.15", "214.08, -100.323, 6.3178, 0.66", "214.206, -100.43, 6.17055, 0.66", "214.475, -100.804, 5.74199, 0.07", "214.631, -101.106, 5.46072, 0.22", "215.143, -102.168, 4.62292, 0.07", "215.298, -102.497, 4.39493, 0.22", "215.751, -103.439, 3.83025, 0.07", "215.935, -103.81, 3.64153, 0.22", "216.337, -104.573, 3.33629, 0.07", "216.701, -105.163, 3.18856, 0.07", "216.979, -105.508, 3.17646, 0.88", "217.243, -105.775, 3.207, 0.88", "217.738, -106.197, 3.32428, 0.22", "218.118, -106.501, 3.43369, 0.59", "218.785, -107.02, 3.66096, 0.07", "219.672, -107.725, 3.96883, 0.07", "220.136, -108.077, 4.14819, 0.07", "220.444, -108.312, 4.27471, 1.11", "220.892, -108.651, 4.46269, 0.15", "221.202, -108.883, 4.59733, 0.59", "222.019, -109.482, 4.96557, 0.15", "222.586, -109.917, 5.22123, 0.15", "222.85, -110.117, 5.34491, 0.29", "223.246, -110.399, 5.5233, 1.25", "224.048, -110.912, 5.86831, 0.07", "224.431, -111.123, 6.02551, 0.07", "224.781, -111.309, 6.13714, 0.29", "225.021, -111.447, 6.18357, 0.29", "225.488, -111.73, 6.22567, 0.07", "225.818, -111.948, 6.20656, 0.22", "226.253, -112.274, 6.08615, 0.07", "227.148, -113.15, 5.61596, 0.07", "227.293, -113.31, 5.51484, 0.29", "227.475, -113.527, 5.37032, 0.74", "227.575, -113.657, 5.28697, 0.96", "227.762, -113.904, 5.13862, 0.44", "228.39, -114.679, 4.69193, 0.15", "228.624, -114.961, 4.53891, 0.15", "228.889, -115.309, 4.35225, 0.29", "229.142, -115.627, 4.18416, 0.07", "229.395, -115.904, 4.03748, 0.88", "229.61, -116.104, 3.9261, 0.88", "230.509, -116.807, 3.53873, 0.15", "230.939, -117.12, 3.36017, 0.22", "231.524, -117.509, 3.1271, 0.07", "232.006, -117.836, 2.93955, 0.07", "232.213, -117.988, 2.86653, 0.37", "232.354, -118.101, 2.82673, 0.37", "232.864, -118.586, 2.70828, 0.15", "233.077, -118.867, 2.64089, 0.88", "233.548, -119.706, 2.43568, 0.15", "233.775, -120.188, 2.31402, 0.15", "233.906, -120.487, 2.22735, 0.44", "234.244, -121.197, 2.02217, 0.07", "234.456, -121.59, 1.91104, 0.07", "234.662, -121.864, 1.83056, 0.37", "234.824, -121.942, 1.81173, 0.37", "235.319, -121.954, 1.85311, 0.07", "236.474, -121.768, 2.039, 0.07", "236.939, -121.643, 2.13469, 0.07", "237.105, -121.593, 2.17299, 0.37", "237.799, -121.373, 2.33056, 0.59", "238.195, -121.253, 2.40963, 0.59", "238.828, -121.078, 2.49872, 0.22", "239.888, -120.865, 2.4911, 0.22", "240.628, -120.768, 2.38861, 0.07", "241.165, -120.741, 2.23116, 0.07", "241.575, -120.738, 2.06297, 0.88", "242.227, -120.711, 1.79264, 0.07", "243.756, -120.613, 1.14297, 0.22", "244.193, -120.582, 0.954591, 0.07", "244.569, -120.544, 0.808871, 0.52", "245.977, -120.381, 0.357551, 0.07", "247.146, -120.212, 0.0599909, 0.07", "247.355, -120.176, 0.0208521, 0.29", "247.88, -120.074, -0.048563, 0.59", "248.311, -120.001, -0.129873, 0.59", "249.062, -119.884, -0.343204, 0.07", "249.363, -119.847, -0.492266, 0.07", "249.511, -119.826, -0.599858, 0.29", "249.645, -119.797, -0.725181, 0.29", "250.038, -119.697, -1.26297, 0.07", "250.288, -119.64, -1.70239, 0.37", "250.546, -119.605, -2.25749, 0.15", "250.874, -119.6, -3.01111, 0.37", "251.205, -119.628, -3.79149, 0.07", "251.69, -119.712, -4.90364, 0.07", "251.827, -119.746, -5.21031, 0.37", "252.113, -119.826, -5.81501, 0.07", "252.268, -119.863, -6.08522, 0.07", "252.456, -119.891, -6.32876, 0.22", "252.958, -119.946, -6.83397, 0.07", "253.235, -119.953, -7.05669, 0.37", "253.442, -119.953, -7.21016, 0.74", "253.983, -119.967, -7.58638, 0.07", "254.276, -119.991, -7.78541, 0.07", "254.547, -120.037, -7.95681, 0.22", "254.928, -120.11, -8.1499, 0.07", "255.331, -120.196, -8.3183, 0.15", "256.469, -120.448, -8.65845, 0.07", "256.83, -120.531, -8.72939, 0.44", "257.575, -120.713, -8.82047, 0.07", "258.536, -120.96, -8.87455, 0.07", "258.937, -121.07, -8.87074, 0.29", "259.666, -121.284, -8.81181, 0.29", "260.078, -121.418, -8.74104, 0.07", "260.565, -121.586, -8.62405, 0.07", "260.706, -121.64, -8.57472, 0.07", "260.98, -121.758, -8.46154, 0.29", "261.28, -121.868, -8.31177, 0.07", "261.569, -121.971, -8.15691, 0.29", "262.273, -122.228, -7.75686, 0.07", "262.821, -122.441, -7.43303, 0.22", "263.365, -122.652, -7.1256, 0.07", "263.859, -122.85, -6.85658, 0.07", "264.199, -122.994, -6.68523, 0.44", "264.791, -123.226, -6.42172, 0.07", "265.003, -123.291, -6.33905, 0.15", "265.504, -123.448, -6.18789, 0.07", "265.762, -123.523, -6.12568, 0.07", "265.949, -123.561, -6.08903, 0.22", "266.932, -123.581, -5.89373, 0.07", "267.939, -123.478, -5.68438, 0.07", "269.391, -123.215, -5.39803, 0.07", "269.714, -123.123, -5.33552, 0.29", "270.172, -122.95, -5.24195, 0.29", "270.659, -122.708, -5.10447, 0.29" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "188.189, -86.709, 20.451, 0.07", "189.172, -86.206, 19.6647, 0.07", "189.94, -85.809, 19.0003, 0.07", "190.395, -85.5613, 18.5872, 0.29", "191.559, -84.8813, 17.603, 0.15", "192.046, -84.5844, 17.2211, 0.52", "193.011, -83.9712, 16.5079, 0.07", "193.911, -83.3682, 15.9328, 0.07", "194.36, -83.0394, 15.723, 0.07", "195.245, -82.3205, 15.4294, 0.22", "195.595, -82.0037, 15.366, 0.74", "195.904, -81.7037, 15.3486, 1.33", "196.892, -80.6864, 15.3782, 0.22", "197.354, -80.1724, 15.4028, 0.22", "197.842, -79.5878, 15.3726, 0.29", "198.861, -78.2812, 15.1788, 0.07", "199.719, -77.1542, 14.8765, 0.07", "200.16, -76.5814, 14.6122, 0.37", "201.147, -75.3325, 13.6985, 0.07", "201.918, -74.4455, 12.7891, 0.07", "202.151, -74.1833, 12.4646, 0.22", "202.883, -73.4255, 11.1702, 0.07", "203.582, -72.8192, 9.66568, 0.07", "203.906, -72.6172, 8.87857, 0.07", "204.077, -72.5853, 8.40585, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-95.2987, -134.769, 3.57761, 0.29", "-95.8155, -136.234, 3.2598, 0.29", "-96.15, -137.238, 3.07694, 0.22", "-96.4809, -138.276, 2.90908, 0.15", "-96.7089, -139.037, 2.79573, 0.22", "-96.9712, -139.961, 2.66819, 0.29", "-97.1482, -140.628, 2.6076, 0.22", "-97.3224, -141.411, 2.58992, 0.37", "-97.4191, -141.886, 2.61505, 0.74", "-97.5138, -142.36, 2.65375, 0.88", "-97.6751, -143.13, 2.7319, 1.47", "-97.9591, -144.406, 2.87264, 0.22", "-98.1825, -145.366, 2.97561, 0.15", "-98.337, -145.997, 3.04408, 0.15", "-98.4271, -146.36, 3.08282, 0.44", "-98.535, -146.828, 3.12603, 0.44", "-98.6683, -147.551, 3.11747, 0.15", "-98.7584, -148.324, 2.95387, 0.15", "-98.7892, -148.914, 2.72859, 0.22", "-98.799, -149.312, 2.5075, 0.52", "-98.8152, -149.806, 2.16002, 1.03", "-98.9103, -150.864, 1.19015, 0.22", "-99.0276, -151.454, 0.462425, 0.22", "-99.0927, -151.641, 0.184939, 0.22", "-99.2066, -151.843, -0.145689, 0.22", "-99.4066, -152.082, -0.554904, 0.96", "-99.9065, -152.507, -1.3358, 0.22", "-100.34, -152.788, -1.84693, 0.22", "-100.583, -152.921, -2.11104, 0.29", "-101.123, -153.186, -2.68454, 0.15", "-101.572, -153.389, -3.13146, 0.29", "-102.083, -153.595, -3.60522, 0.29", "-102.397, -153.708, -3.87194, 0.15", "-102.823, -153.892, -4.21409, 0.15", "-103.143, -154.073, -4.45815, 0.59", "-103.614, -154.444, -4.80154, 0.15", "-103.827, -154.671, -4.96347, 0.44", "-104.422, -155.451, -5.41882, 0.22", "-104.825, -156.058, -5.72732, 1.4", "-105.286, -156.815, -6.06565, 0.44", "-105.744, -157.606, -6.39406, 0.44", "-106.21, -158.442, -6.70846, 0.29", "-106.575, -159.103, -6.92542, 0.66", "-107.025, -159.93, -7.14992, 0.15", "-107.606, -160.956, -7.44395, 0.15", "-107.877, -161.434, -7.58095, 0.15", "-108.134, -161.864, -7.69078, 0.29", "-108.342, -162.198, -7.76754, 0.74", "-108.693, -162.765, -7.9181, 0.44", "-109.201, -163.598, -8.15515, 0.15", "-109.518, -164.145, -8.30845, 0.15", "-109.927, -164.912, -8.51424, 0.29", "-110.275, -165.613, -8.68742, 0.29", "-110.601, -166.329, -8.84633, 0.74", "-110.834, -166.889, -8.95692, 1.18", "-111.135, -167.679, -9.08546, 0.44", "-111.61, -168.861, -9.25893, 0.22", "-111.899, -169.553, -9.34794, 0.29", "-112.146, -170.102, -9.40439, 0.29", "-112.359, -170.548, -9.43665, 0.88", "-112.587, -171.0, -9.46814, 1.47", "-113.305, -172.299, -9.5513, 0.22", "-113.729, -173.02, -9.59291, 0.15", "-114.154, -173.733, -9.63017, 0.22", "-114.434, -174.205, -9.65236, 0.22", "-114.653, -174.573, -9.68209, 0.66", "-114.907, -175.024, -9.73432, 0.66", "-115.284, -175.713, -9.8354, 0.15", "-115.641, -176.404, -9.94673, 0.15", "-115.884, -176.908, -10.0327, 0.74", "-116.419, -178.133, -10.2402, 0.07", "-116.787, -179.121, -10.4222, 0.07", "-116.915, -179.528, -10.5012, 0.74", "-117.216, -180.83, -10.8379, 0.07", "-117.257, -181.12, -10.9292, 0.22", "-117.362, -182.327, -11.3242, 0.07", "-117.368, -183.412, -11.6903, 0.07", "-117.353, -183.714, -11.8097, 0.22", "-117.213, -185.158, -12.4688, 0.07", "-117.149, -185.568, -12.7108, 0.81", "-119.072, -193.324, -14.2835, 0.81", "-121.672, -201.025, -14.8044, 0.81", "-124.042, -208.816, -14.9376, 0.81", "-126.539, -216.455, -13.6198, 0.81", "-128.155, -224.325, -12.2857, 0.81", "-130.142, -231.955, -10.2413, 0.81", "-132.437, -239.755, -9.77534, 0.81", "-135.349, -247.188, -8.15891, 0.81", "-138.943, -254.258, -6.30724, 0.81", "-140.864, -261.806, -3.92731, 0.81", "-141.709, -269.227, -0.678591, 0.81", "-142.991, -276.293, 3.16266, 0.81", "-145.822, -282.337, 7.83043, 0.81", "-149.104, -287.361, 13.3369, 0.81", "-153.108, -292.884, 17.7867, 0.81", "-157.512, -296.71, 23.4693, 0.81", "-160.89, -301.41, 29.1996, 0.81", "-163.36, -306.161, 35.3365, 0.81" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-95.2987, -134.769, 3.57761, 0.15", "-96.9688, -136.609, 4.16965, 0.15", "-97.798, -137.522, 4.46364, 0.15", "-98.755, -138.576, 4.80289, 0.15", "-99.1789, -139.043, 4.95315, 0.88", "-99.9595, -139.903, 5.23, 1.7", "-100.529, -140.529, 5.4315, 1.7" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "5.62115, -73.2777, 91.5909, 0.07", "6.68317, -74.1242, 93.0092, 0.07", "7.9543, -75.2514, 94.7679, 0.07", "8.88365, -76.158, 96.0946, 0.07", "9.10677, -76.3775, 96.4471, 0.29", "10.329, -77.4889, 98.5004, 0.29", "10.7401, -77.8268, 99.2492, 0.29", "11.008, -78.0202, 99.8391, 0.15", "11.5141, -78.2852, 100.907, 0.37", "12.5376, -78.6832, 102.924, 0.37", "13.1618, -78.8756, 103.993, 0.37", "14.283, -79.1248, 105.616, 0.37", "16.2333, -79.4571, 108.111, 0.81", "17.9165, -79.6952, 110.058, 0.15", "18.6372, -79.7827, 110.779, 0.15", "19.5857, -79.888, 111.602, 0.37", "20.2146, -79.9465, 112.088, 0.37", "22.3886, -80.1185, 113.666, 0.07", "23.6979, -80.2167, 114.692, 0.07", "24.3739, -80.2806, 115.325, 0.59", "26.0139, -80.4836, 117.033, 0.15", "26.5589, -80.5778, 117.659, 0.29", "28.3128, -80.971, 119.704, 0.15", "29.6113, -81.3404, 121.209, 0.15", "31.1142, -81.9156, 123.212, 0.15", "31.3889, -82.0521, 123.66, 0.15", "31.9941, -82.4318, 124.799, 0.44", "32.7451, -82.9306, 126.297, 0.22", "33.5248, -83.4571, 127.927, 0.29", "35.1182, -84.5954, 131.487, 0.15", "36.3556, -85.6378, 134.789, 0.15", "36.732, -86.0009, 135.958, 0.15" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "5.62115, -73.2777, 91.5909, 0.07", "6.36439, -74.9774, 90.5682, 0.07", "6.74912, -75.9481, 90.1769, 0.07", "7.05897, -76.9062, 89.9588, 0.29", "7.17808, -77.3486, 89.9381, 0.44", "7.36736, -78.1236, 90.1153, 0.15", "7.46844, -78.5711, 90.3072, 0.37", "7.73044, -80.1804, 91.4565, 0.22", "7.77715, -80.6111, 91.8282, 0.37", "7.83985, -81.4183, 92.5905, 0.37", "7.85575, -82.6903, 93.9985, 0.15", "7.82453, -83.4215, 94.8979, 0.15", "7.80399, -83.7378, 95.3365, 0.37", "7.77507, -84.1405, 95.9284, 0.37", "7.75933, -84.3496, 96.2734, 0.44", "7.68605, -85.3832, 98.1594, 0.22", "7.71028, -85.6559, 98.6651, 0.22", "7.93275, -86.2787, 99.8749, 0.22", "8.08947, -86.5279, 100.354, 0.22", "8.29204, -86.7626, 100.765, 0.59", "8.76335, -87.2552, 101.467, 0.15", "9.61385, -88.1071, 102.622, 0.15", "10.0141, -88.5499, 103.242, 0.15", "10.2813, -88.8934, 103.701, 0.37", "10.484, -89.1863, 104.099, 0.74", "10.789, -89.7876, 104.923, 0.22", "11.3342, -91.7244, 107.355, 0.22", "11.4151, -92.3544, 108.081, 0.66", "11.4536, -93.1537, 108.951, 0.22", "11.45, -93.7227, 109.538, 0.44", "11.3831, -95.039, 110.797, 0.15", "11.2811, -96.1956, 111.776, 0.22", "11.1183, -97.4757, 112.63, 0.22", "11.0696, -97.778, 112.83, 0.22", "10.9802, -98.2228, 113.125, 0.44", "10.8613, -98.7898, 113.502, 0.44", "10.6947, -99.7121, 114.204, 0.22", "10.5614, -100.492, 114.911, 0.37", "10.4387, -101.191, 115.565, 0.37", "10.3594, -101.656, 115.972, 0.59", "10.2152, -102.558, 116.715, 0.07", "10.0018, -103.954, 117.751, 0.15", "9.89662, -104.709, 118.237, 0.15", "9.81926, -105.418, 118.638, 0.96", "9.66022, -107.35, 119.605, 0.15", "9.63654, -107.782, 119.783, 0.59", "9.59763, -109.753, 120.41, 0.22", "9.61148, -110.455, 120.57, 0.37", "9.67831, -111.129, 120.697, 0.74", "9.74984, -111.478, 120.763, 0.96", "10.1934, -112.846, 120.919, 0.22", "10.4849, -113.583, 120.943, 0.22", "10.7787, -114.23, 120.858, 0.59", "11.3599, -115.542, 120.472, 0.15", "11.7362, -116.475, 120.045, 0.15", "12.205, -117.753, 119.248, 0.59", "12.282, -117.979, 119.08, 0.59", "12.6516, -119.239, 118.089, 0.15", "12.9422, -120.419, 117.14, 0.59", "13.1334, -121.379, 116.384, 0.22", "13.3291, -122.446, 115.602, 0.81", "13.6383, -124.007, 114.747, 0.22", "13.7477, -124.508, 114.556, 0.22", "13.9205, -125.165, 114.463, 0.52", "14.3091, -126.479, 114.553, 0.15", "14.4896, -127.02, 114.671, 0.37", "15.3207, -128.998, 115.447, 0.07", "15.7196, -129.753, 115.838, 0.29", "16.2117, -130.468, 116.245, 0.29", "16.7316, -131.077, 116.609, 0.15", "17.1663, -131.518, 116.879, 0.29", "18.2448, -132.592, 117.513, 0.22", "18.6452, -132.982, 117.757, 0.74", "19.5041, -133.827, 118.387, 0.15", "19.9903, -134.38, 118.833, 0.15", "20.4001, -134.978, 119.324, 0.52", "20.8879, -136.038, 120.244, 0.22", "21.2455, -137.322, 121.383, 0.22", "21.3511, -137.854, 121.869, 0.96", "21.5033, -138.834, 122.818, 0.29", "21.6174, -139.714, 123.765, 0.59", "21.7438, -140.784, 124.979, 0.29", "21.7844, -141.514, 125.835, 0.29", "21.7915, -141.881, 126.272, 0.22", "21.7934, -142.622, 127.268, 0.74", "21.7998, -143.843, 129.17, 0.07", "21.8015, -144.19, 129.75, 0.07", "21.791, -144.633, 130.488, 0.29" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-1.36946, -418.263, 19.1086, 0.22", "-1.28187, -419.101, 19.0622, 0.22", "-1.24155, -419.948, 19.0869, 0.15", "-1.25383, -420.571, 19.223, 0.15", "-1.27, -420.768, 19.2857, 0.37", "-1.29646, -420.973, 19.3603, 0.81", "-1.34753, -421.314, 19.4858, 0.81", "-1.47315, -422.071, 19.7893, 0.22", "-1.63426, -423.075, 20.1931, 0.22", "-1.7451, -423.842, 20.4854, 0.29", "-1.81993, -424.343, 20.6523, 0.88", "-1.91794, -424.993, 20.8507, 1.62", "-2.0717, -425.98, 21.1062, 0.37", "-2.15952, -426.543, 21.2182, 0.52", "-2.24338, -427.062, 21.2957, 0.66", "-2.3714, -427.713, 21.3916, 0.22", "-2.52785, -428.374, 21.4856, 0.22", "-2.77996, -429.233, 21.6052, 0.07", "-2.92646, -429.648, 21.6774, 0.07", "-3.07218, -430.04, 21.7526, 0.88", "-3.40093, -430.93, 21.9261, 0.15", "-3.60183, -431.435, 22.0149, 0.44", "-3.87355, -432.03, 22.1211, 0.22", "-4.32987, -432.951, 22.3005, 0.22", "-4.53571, -433.343, 22.3799, 0.88", "-4.87535, -433.959, 22.5092, 1.4", "-5.52129, -435.072, 22.739, 0.15", "-6.14463, -436.088, 22.92, 0.15", "-6.35506, -436.428, 22.9689, 0.15", "-6.47615, -436.626, 22.9886, 0.52", "-6.71577, -437.028, 23.026, 1.03", "-7.12089, -437.745, 23.0796, 0.22", "-7.59506, -438.695, 23.1253, 0.15", "-7.99078, -439.546, 23.1399, 0.15", "-8.10025, -439.793, 23.1444, 0.66", "-8.28165, -440.225, 23.1516, 1.33", "-8.7636, -441.423, 23.2034, 0.15", "-9.11742, -442.408, 23.1815, 0.15", "-9.27435, -442.871, 23.1461, 0.66", "-9.38052, -443.169, 23.1086, 0.66", "-9.91735, -444.661, 22.8619, 0.07", "-10.2943, -445.727, 22.642, 0.07", "-10.8655, -447.402, 22.3228, 0.37", "-10.9753, -447.722, 22.284, 0.74", "-11.1771, -448.303, 22.2573, 0.96", "-11.3713, -448.824, 22.3195, 0.96", "-11.4238, -448.956, 22.3594, 0.96", "-11.9436, -450.209, 22.889, 0.07", "-12.3958, -451.232, 23.4226, 0.07", "-12.5629, -451.617, 23.6319, 0.15", "-13.1148, -452.913, 24.3707, 0.07", "-13.4117, -453.521, 24.7582, 0.07", "-13.5638, -453.8, 24.9589, 0.07", "-13.782, -454.145, 25.247, 0.52", "-14.1113, -454.616, 25.6983, 1.11", "-14.4072, -454.999, 26.1325, 1.25", "-15.0672, -455.786, 27.2249, 0.15", "-15.6484, -456.447, 28.2021, 0.15", "-15.9647, -456.803, 28.7246, 0.15", "-16.3061, -457.186, 29.2796, 0.74", "-17.0456, -458.018, 30.4167, 0.15", "-17.8527, -458.952, 31.5946, 0.74", "-18.3151, -459.524, 32.2304, 0.15", "-18.6059, -459.902, 32.5735, 0.29", "-19.2441, -460.78, 33.2543, 0.07", "-19.5745, -461.252, 33.5753, 0.07", "-19.6901, -461.426, 33.6641, 0.96", "-19.883, -461.733, 33.7839, 0.74", "-20.4631, -462.727, 34.2074, 0.15", "-20.9657, -463.666, 34.5889, 0.15", "-21.1639, -464.079, 34.7357, 0.66", "-21.2495, -464.27, 34.8029, 0.66", "-21.5763, -465.088, 35.0682, 0.07", "-21.8347, -465.851, 35.248, 0.07", "-22.0904, -466.781, 35.3718, 0.07", "-22.2023, -467.264, 35.3623, 0.07", "-22.3007, -467.7, 35.3135, 0.29", "-22.4759, -468.54, 35.1586, 0.15", "-22.6741, -469.531, 34.8361, 0.15", "-22.7569, -469.914, 34.6494, 0.29", "-22.8852, -470.467, 34.337, 0.81", "-22.9616, -470.746, 34.1587, 0.96", "-23.2027, -471.5, 33.6268, 0.22", "-23.5457, -472.417, 32.9505, 0.15", "-23.9549, -473.425, 32.2446, 0.15", "-24.1071, -473.792, 31.9892, 0.22", "-24.4355, -474.569, 31.4409, 0.07", "-24.6249, -475.022, 31.1084, 0.07", "-24.7683, -475.344, 30.8658, 0.66", "-24.9543, -475.754, 30.572, 1.25", "-25.2789, -476.457, 30.0511, 0.15", "-25.602, -477.153, 29.5221, 0.15", "-25.7776, -477.524, 29.241, 0.15", "-25.9385, -477.852, 28.9855, 0.29", "-26.3113, -478.57, 28.4012, 0.07", "-26.6319, -479.158, 27.9232, 0.07", "-26.8362, -479.521, 27.646, 0.88", "-27.1936, -480.14, 27.2466, 0.15", "-27.3936, -480.491, 27.0638, 0.22", "-27.7186, -481.078, 26.827, 0.22", "-27.8965, -481.409, 26.7342, 0.59", "-28.0158, -481.635, 26.69, 0.74", "-28.5051, -482.606, 26.5533, 0.07", "-28.9756, -483.63, 26.4652, 0.07", "-29.1947, -484.156, 26.4347, 0.07", "-29.2848, -484.404, 26.4445, 0.52", "-29.394, -484.743, 26.4777, 0.52", "-29.5835, -485.406, 26.5635, 0.07", "-29.7554, -486.131, 26.683, 0.07", "-29.8415, -486.538, 26.7501, 0.66", "-30.1003, -487.918, 26.952, 0.15", "-30.1547, -488.199, 26.9825, 0.15", "-30.293, -488.927, 27.0399, 0.15", "-30.371, -489.401, 27.0362, 0.15", "-30.4975, -490.216, 26.954, 0.15", "-30.6184, -491.029, 26.7733, 0.15", "-30.737, -491.907, 26.488, 0.15", "-30.7807, -492.201, 26.3855, 0.37", "-31.0105, -493.466, 25.918, 0.15", "-31.1262, -494.066, 25.676, 0.15", "-31.3017, -494.906, 25.3016, 0.37", "-31.3782, -495.231, 25.137, 0.37", "-31.5723, -496.001, 24.7137, 0.37", "-31.7091, -496.423, 24.4782, 0.07" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-1.36946, -418.263, 19.1086, 0.15", "-1.76063, -419.073, 19.6892, 0.15", "-1.98857, -419.538, 20.0205, 0.44", "-2.57672, -420.661, 20.7798, 0.15", "-3.21118, -421.817, 21.524, 0.15", "-3.5566, -422.395, 21.917, 0.15", "-3.78566, -422.747, 22.1772, 0.81", "-4.77818, -424.097, 23.314, 0.15", "-5.66185, -425.114, 24.2482, 0.15", "-5.99476, -425.428, 24.5591, 0.66", "-6.91891, -426.151, 25.3135, 0.15", "-7.80779, -426.746, 25.9737, 0.15", "-8.52312, -427.15, 26.4929, 0.15", "-9.03957, -427.384, 26.8434, 0.15", "-9.44893, -427.578, 27.1084, 0.88", "-9.76917, -427.755, 27.3005, 0.88", "-10.9866, -428.595, 27.9354, 0.07", "-11.4429, -428.972, 28.1569, 0.07", "-11.7636, -429.269, 28.3171, 0.66", "-13.016, -430.554, 28.9919, 0.07", "-13.3416, -430.917, 29.1768, 0.44", "-13.8166, -431.486, 29.4446, 0.07", "-14.0182, -431.752, 29.5389, 0.22" ],
    "parent" : "dend_59",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "-31.7091, -496.423, 24.4782, 0.07", "-33.0591, -496.627, 25.2995, 0.07", "-33.8675, -496.765, 25.7657, 0.15", "-34.8174, -496.976, 26.334, 0.07", "-35.2671, -497.098, 26.5589, 0.07", "-35.5001, -497.165, 26.6572, 0.37", "-36.3072, -497.427, 26.9447, 0.07", "-36.7065, -497.606, 27.0091, 0.22", "-37.6456, -498.094, 27.0231, 0.07", "-38.7711, -498.738, 26.9035, 0.07", "-39.2433, -499.031, 26.7918, 0.37", "-39.9365, -499.496, 26.504, 0.07", "-40.9178, -500.198, 25.8984, 0.07", "-41.2448, -500.451, 25.6338, 0.22", "-41.5523, -500.708, 25.3127, 0.22", "-42.1531, -501.242, 24.5553, 0.07", "-42.6863, -501.716, 23.7571, 0.07", "-43.0731, -502.052, 23.1227, 0.07", "-43.4159, -502.342, 22.5251, 0.22", "-43.7362, -502.615, 21.9289, 0.52", "-44.1821, -503.006, 21.0611, 0.22", "-44.7051, -503.465, 19.9308, 0.66" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-31.7091, -496.423, 24.4782, 0.07", "-31.612, -497.56, 24.5739, 0.07", "-31.5879, -498.102, 24.6142, 0.15", "-31.5988, -499.871, 24.7277, 0.07", "-31.6231, -500.43, 24.7548, 0.15", "-31.6614, -500.999, 24.7776, 0.15", "-31.7751, -502.693, 24.8457, 0.07", "-31.8437, -503.347, 24.867, 0.29", "-32.0204, -504.605, 24.8951, 0.07", "-32.2713, -505.965, 24.8993, 0.07", "-32.3721, -506.46, 24.8984, 0.29" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_41", "dend_24", "dend_17", "dend_14", "dend_7", "dend_0", "dend_51", "dend_42", "dend_36", "dend_25", "dend_21", "dend_18", "dend_16", "dend_15", "dend_11", "dend_8", "dend_4", "dend_1", "dend_53", "dend_52", "dend_46", "dend_43", "dend_38", "dend_37", "dend_31", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_13", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_57", "dend_54", "dend_50", "dend_47", "dend_45", "dend_44", "dend_40", "dend_39", "dend_35", "dend_32", "dend_28", "dend_27", "dend_59", "dend_58", "dend_56", "dend_55", "dend_49", "dend_48", "dend_34", "dend_33", "dend_30", "dend_29", "dend_61", "dend_60", "dend_63", "dend_62" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_41", "dend_24", "dend_17", "dend_14", "dend_7", "dend_0", "dend_51", "dend_42", "dend_36", "dend_25", "dend_21", "dend_18", "dend_16", "dend_15", "dend_11", "dend_8", "dend_4", "dend_1", "dend_53", "dend_52", "dend_46", "dend_43", "dend_38", "dend_37", "dend_31", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_13", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_57", "dend_54", "dend_50", "dend_47", "dend_45", "dend_44", "dend_40", "dend_39", "dend_35", "dend_32", "dend_28", "dend_27", "dend_59", "dend_58", "dend_56", "dend_55", "dend_49", "dend_48", "dend_34", "dend_33", "dend_30", "dend_29", "dend_61", "dend_60", "dend_63", "dend_62" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_41", "dend_24", "dend_17", "dend_14", "dend_7", "dend_0", "axon_0", "dend_51", "dend_42", "dend_36", "dend_25", "dend_21", "dend_18", "dend_16", "dend_15", "dend_11", "dend_8", "dend_4", "dend_1", "axon_1", "dend_53", "dend_52", "dend_46", "dend_43", "dend_38", "dend_37", "dend_31", "dend_26", "dend_23", "dend_22", "dend_20", "dend_19", "dend_13", "dend_12", "dend_10", "dend_9", "dend_6", "dend_5", "dend_3", "dend_2", "dend_57", "dend_54", "dend_50", "dend_47", "dend_45", "dend_44", "dend_40", "dend_39", "dend_35", "dend_32", "dend_28", "dend_27", "dend_59", "dend_58", "dend_56", "dend_55", "dend_49", "dend_48", "dend_34", "dend_33", "dend_30", "dend_29", "dend_61", "dend_60", "dend_63", "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_36", "dend_36", "dend_36", "dend_36", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_9", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_55", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_LBC_c3984af99c_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_41, id: dend_41, parent: soma_0
create dend_41
public dend_41
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: soma_0
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: soma_0
create dend_7
public dend_7
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_51, id: dend_51, parent: dend_41
create dend_51
public dend_51
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_36, id: dend_36, parent: dend_24
create dend_36
public dend_36
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_21, id: dend_21, parent: dend_17
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_11, id: dend_11, parent: dend_7
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_25
create dend_31
public dend_31
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_53
create dend_57
public dend_57
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_40, id: dend_40, parent: dend_38
create dend_40
public dend_40
// Section: dend_39, id: dend_39, parent: dend_38
create dend_39
public dend_39
// Section: dend_35, id: dend_35, parent: dend_31
create dend_35
public dend_35
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_56, id: dend_56, parent: dend_54
create dend_56
public dend_56
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_61, id: dend_61, parent: dend_59
create dend_61
public dend_61
// Section: dend_60, id: dend_60, parent: dend_59
create dend_60
public dend_60
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, axon_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, axon_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_66
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_41(0), soma_0(0.499999925181861)
    connect dend_24(0), soma_0(0.499999925181861)
    connect dend_17(0), soma_0(0.499999925181861)
    connect dend_14(0), soma_0(0.499999925181861)
    connect dend_7(0), soma_0(0.499999925181861)
    connect dend_0(0), soma_0(0.499999925181861)
    connect axon_0(0), soma_0(1.0)
    connect dend_51(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_36(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_21(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_11(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_40(0), dend_38(1.0)
    connect dend_39(0), dend_38(1.0)
    connect dend_35(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_56(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_61(0), dend_59(1.0)
    connect dend_60(0), dend_59(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 5.31735, -9.24063, 0.0, 4.15585 ) }
    soma_0 { pt3dadd( 4.69678, -8.30052, 0.0, 7.05537 ) }
    soma_0 { pt3dadd( 4.07621, -7.3604, 0.0, 9.49099 ) }
    soma_0 { pt3dadd( 3.45565, -6.42028, 0.0, 11.817 ) }
    soma_0 { pt3dadd( 2.83508, -5.48017, 0.0, 13.4599 ) }
    soma_0 { pt3dadd( 2.21451, -4.54005, 0.0, 14.7908 ) }
    soma_0 { pt3dadd( 1.59394, -3.59994, 0.0, 16.0669 ) }
    soma_0 { pt3dadd( 0.973375, -2.65982, 0.0, 17.0826 ) }
    soma_0 { pt3dadd( 0.352808, -1.7197, 0.0, 17.8648 ) }
    soma_0 { pt3dadd( -0.26776, -0.779586, 0.0, 18.3637 ) }
    soma_0 { pt3dadd( -0.888328, 0.160531, 0.0, 18.8035 ) }
    soma_0 { pt3dadd( -1.5089, 1.10065, 0.0, 19.2009 ) }
    soma_0 { pt3dadd( -2.12946, 2.04076, 0.0, 19.0899 ) }
    soma_0 { pt3dadd( -2.75003, 2.98088, 0.0, 18.8821 ) }
    soma_0 { pt3dadd( -3.3706, 3.921, 0.0, 18.6116 ) }
    soma_0 { pt3dadd( -3.99117, 4.86111, 0.0, 17.4033 ) }
    soma_0 { pt3dadd( -4.61173, 5.80123, 0.0, 16.1027 ) }
    soma_0 { pt3dadd( -5.2323, 6.74135, 0.0, 14.2403 ) }
    soma_0 { pt3dadd( -5.85287, 7.68146, 0.0, 11.7641 ) }
    soma_0 { pt3dadd( -6.47344, 8.62158, 0.0, 8.46221 ) }
    soma_0 { pt3dadd( -7.094, 9.5617, 0.0, 4.77037 ) }
    // Section: dend_41, id: dend_41, parent: soma_0 (entry count 21/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 6.24584, -7.07805, -7.59, 7.74 ) }
    dend_41 { pt3dadd( 6.24584, -7.07805, -7.59, 7.74 ) }
    dend_41 { pt3dadd( 6.83715, -8.25608, -7.37828, 6.71 ) }
    dend_41 { pt3dadd( 7.93325, -10.4397, -6.98585, 6.71 ) }
    dend_41 { pt3dadd( 9.15619, -12.8761, -6.54799, 5.68 ) }
    dend_41 { pt3dadd( 10.6998, -15.9512, -5.99533, 5.09 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 27/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -8.43415, -4.97801, 4.28, 6.78 ) }
    dend_24 { pt3dadd( -8.43415, -4.97801, 4.28, 6.78 ) }
    dend_24 { pt3dadd( -10.0679, -7.4288, 3.10308, 4.79 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 30/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 8.84582, -5.66801, -7.77, 1.99 ) }
    dend_17 { pt3dadd( 8.84582, -5.66801, -7.77, 1.99 ) }
    dend_17 { pt3dadd( 8.91264, -6.17067, -8.5118, 1.99 ) }
    dend_17 { pt3dadd( 9.01335, -7.46828, -10.3468, 1.84 ) }
    dend_17 { pt3dadd( 9.11118, -8.80046, -12.1631, 1.62 ) }
    dend_17 { pt3dadd( 9.26842, -10.1417, -13.9202, 1.47 ) }
    dend_17 { pt3dadd( 9.39042, -11.1825, -15.2835, 1.18 ) }
    dend_17 { pt3dadd( 9.48465, -12.1178, -16.5143, 1.4 ) }
    dend_17 { pt3dadd( 9.51094, -12.5093, -17.0343, 1.77 ) }
    dend_17 { pt3dadd( 9.53902, -13.4785, -18.2058, 2.06 ) }
    dend_17 { pt3dadd( 9.60752, -14.7396, -19.582, 2.58 ) }
    // Section: dend_14, id: dend_14, parent: soma_0 (entry count 41/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 6.40587, 2.88198, -15.77, 2.06 ) }
    dend_14 { pt3dadd( 6.40587, 2.88198, -15.77, 2.06 ) }
    dend_14 { pt3dadd( 6.95464, 3.10475, -16.9523, 1.55 ) }
    dend_14 { pt3dadd( 7.40903, 3.36411, -18.0396, 1.4 ) }
    dend_14 { pt3dadd( 8.14192, 3.86854, -19.8568, 1.25 ) }
    dend_14 { pt3dadd( 8.84242, 4.34114, -21.4232, 1.47 ) }
    dend_14 { pt3dadd( 9.33503, 4.65722, -22.424, 1.47 ) }
    dend_14 { pt3dadd( 9.59252, 4.83463, -22.9034, 1.47 ) }
    dend_14 { pt3dadd( 10.3599, 5.38722, -24.2446, 1.18 ) }
    dend_14 { pt3dadd( 11.369, 6.00405, -25.7299, 1.18 ) }
    dend_14 { pt3dadd( 12.0792, 6.31921, -26.5735, 1.33 ) }
    dend_14 { pt3dadd( 12.9085, 6.56803, -27.3757, 1.11 ) }
    dend_14 { pt3dadd( 13.7968, 6.72665, -28.0948, 0.81 ) }
    dend_14 { pt3dadd( 15.1872, 6.80696, -29.0866, 0.96 ) }
    dend_14 { pt3dadd( 16.2123, 6.71801, -29.7531, 1.18 ) }
    dend_14 { pt3dadd( 17.1853, 6.47591, -30.3665, 0.88 ) }
    dend_14 { pt3dadd( 17.7144, 6.24713, -30.7287, 1.03 ) }
    dend_14 { pt3dadd( 18.424, 5.76981, -31.2076, 0.74 ) }
    dend_14 { pt3dadd( 18.9252, 5.32939, -31.5538, 0.59 ) }
    dend_14 { pt3dadd( 19.7895, 4.49717, -32.1193, 0.74 ) }
    dend_14 { pt3dadd( 20.1355, 4.18994, -32.3953, 0.52 ) }
    dend_14 { pt3dadd( 20.4887, 3.98003, -32.7671, 0.52 ) }
    dend_14 { pt3dadd( 21.0423, 3.94216, -33.4614, 0.44 ) }
    dend_14 { pt3dadd( 21.6234, 4.16601, -34.2498, 0.52 ) }
    dend_14 { pt3dadd( 22.2509, 4.50063, -35.0087, 0.88 ) }
    dend_14 { pt3dadd( 23.1244, 4.99004, -35.9308, 1.03 ) }
    dend_14 { pt3dadd( 23.6282, 5.24722, -36.4231, 1.03 ) }
    dend_14 { pt3dadd( 24.4067, 5.58422, -37.1468, 0.66 ) }
    dend_14 { pt3dadd( 25.4327, 5.88993, -38.0587, 0.44 ) }
    dend_14 { pt3dadd( 26.3509, 5.83013, -38.7259, 0.29 ) }
    dend_14 { pt3dadd( 26.8918, 5.41455, -38.9339, 0.37 ) }
    dend_14 { pt3dadd( 27.4044, 4.62268, -38.9686, 0.22 ) }
    dend_14 { pt3dadd( 27.8805, 3.51236, -38.8932, 0.22 ) }
    dend_14 { pt3dadd( 28.2071, 2.4171, -38.7591, 0.15 ) }
    dend_14 { pt3dadd( 28.3887, 1.50101, -38.622, 0.15 ) }
    dend_14 { pt3dadd( 28.5381, -0.230669, -38.2914, 0.15 ) }
    dend_14 { pt3dadd( 28.5424, -1.26195, -38.0558, 0.15 ) }
    dend_14 { pt3dadd( 28.5091, -2.12774, -37.8351, 0.22 ) }
    dend_14 { pt3dadd( 28.4564, -2.78041, -37.6464, 0.22 ) }
    dend_14 { pt3dadd( 28.3587, -3.43767, -37.4367, 0.22 ) }
    dend_14 { pt3dadd( 28.0334, -4.8019, -36.9871, 0.15 ) }
    dend_14 { pt3dadd( 27.8866, -5.23806, -36.8654, 0.22 ) }
    dend_14 { pt3dadd( 35.3148, -8.63878, -43.039, 0.22 ) }
    dend_14 { pt3dadd( 41.2628, -12.6593, -50.3406, 0.22 ) }
    dend_14 { pt3dadd( 48.2969, -15.9405, -57.0198, 0.22 ) }
    dend_14 { pt3dadd( 56.0447, -17.8367, -63.441, 0.22 ) }
    dend_14 { pt3dadd( 61.6316, -21.251, -71.3141, 0.22 ) }
    dend_14 { pt3dadd( 67.2941, -24.3553, -79.2612, 0.22 ) }
    dend_14 { pt3dadd( 72.0796, -28.5262, -87.296, 0.22 ) }
    dend_14 { pt3dadd( 77.0299, -33.2405, -94.9201, 0.22 ) }
    dend_14 { pt3dadd( 82.0838, -36.9237, -103.029, 0.22 ) }
    dend_14 { pt3dadd( 87.8172, -41.4347, -110.214, 0.22 ) }
    dend_14 { pt3dadd( 93.8063, -47.244, -116.151, 0.22 ) }
    dend_14 { pt3dadd( 100.294, -50.9347, -123.161, 0.22 ) }
    dend_14 { pt3dadd( 106.916, -55.3311, -129.617, 0.22 ) }
    dend_14 { pt3dadd( 114.043, -60.9271, -134.385, 0.22 ) }
    dend_14 { pt3dadd( 121.439, -65.9823, -139.346, 0.22 ) }
    dend_14 { pt3dadd( 129.799, -69.0469, -144.403, 0.22 ) }
    dend_14 { pt3dadd( 138.276, -72.4969, -148.995, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_14 { pt3dadd( 145.81, -76.7483, -154.474, 0.22 ) }
    dend_14 { pt3dadd( 152.096, -80.5562, -161.605, 0.22 ) }
    dend_14 { pt3dadd( 158.566, -85.456, -167.849, 0.22 ) }
    dend_14 { pt3dadd( 165.525, -89.3223, -174.29, 0.22 ) }
    dend_14 { pt3dadd( 171.104, -93.5192, -181.781, 0.22 ) }
    dend_14 { pt3dadd( 175.954, -98.54, -189.272, 0.22 ) }
    dend_14 { pt3dadd( 178.759, -102.963, -198.071, 0.22 ) }
    dend_14 { pt3dadd( 181.45, -109.179, -205.751, 0.22 ) }
    dend_14 { pt3dadd( 185.623, -114.625, -213.352, 0.22 ) }
    // Section: dend_7, id: dend_7, parent: soma_0 (entry count 9/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -4.51417, 8.71199, -10.34, 2.14 ) }
    dend_7 { pt3dadd( -4.51417, 8.71199, -10.34, 2.14 ) }
    dend_7 { pt3dadd( -4.53229, 9.80201, -9.95404, 2.14 ) }
    dend_7 { pt3dadd( -4.55497, 10.8992, -9.63142, 1.84 ) }
    dend_7 { pt3dadd( -4.57916, 12.3198, -9.34402, 1.62 ) }
    dend_7 { pt3dadd( -4.60518, 14.1339, -9.08157, 1.99 ) }
    dend_7 { pt3dadd( -4.61883, 14.9177, -9.03923, 2.21 ) }
    dend_7 { pt3dadd( -4.63954, 16.4669, -9.10692, 1.4 ) }
    dend_7 { pt3dadd( -4.65995, 17.8318, -9.31886, 0.96 ) }
    dend_7 { pt3dadd( -4.69153, 19.3835, -9.70921, 1.11 ) }
    dend_7 { pt3dadd( -4.72686, 20.5094, -10.1955, 0.66 ) }
    dend_7 { pt3dadd( -4.80985, 22.2237, -11.1364, 0.96 ) }
    dend_7 { pt3dadd( -4.87641, 23.2193, -11.7338, 0.96 ) }
    dend_7 { pt3dadd( -4.97034, 24.2635, -12.3659, 1.4 ) }
    dend_7 { pt3dadd( -5.12641, 25.6134, -13.1235, 1.11 ) }
    dend_7 { pt3dadd( -5.56979, 28.2826, -14.3954, 1.18 ) }
    dend_7 { pt3dadd( -5.79338, 29.3225, -14.7999, 1.47 ) }
    dend_7 { pt3dadd( -5.99359, 30.1278, -15.013, 1.03 ) }
    dend_7 { pt3dadd( -6.37554, 31.5215, -15.2681, 0.74 ) }
    dend_7 { pt3dadd( -6.69495, 32.6828, -15.3712, 0.96 ) }
    dend_7 { pt3dadd( -6.96849, 33.7354, -15.3321, 0.59 ) }
    dend_7 { pt3dadd( -7.14534, 34.4505, -15.1933, 0.52 ) }
    dend_7 { pt3dadd( -7.36296, 35.3589, -15.0085, 0.88 ) }
    dend_7 { pt3dadd( -7.44706, 35.7523, -14.9228, 1.11 ) }
    dend_7 { pt3dadd( -7.59097, 36.7229, -14.725, 1.11 ) }
    dend_7 { pt3dadd( -7.72642, 38.0486, -14.4311, 1.03 ) }
    dend_7 { pt3dadd( -7.82832, 39.5177, -14.0716, 0.96 ) }
    dend_7 { pt3dadd( -7.86406, 40.157, -13.9345, 1.18 ) }
    dend_7 { pt3dadd( -7.98239, 42.0231, -13.647, 0.96 ) }
    dend_7 { pt3dadd( -8.07252, 43.4328, -13.5272, 0.88 ) }
    dend_7 { pt3dadd( -8.14445, 44.7147, -13.5038, 1.11 ) }
    dend_7 { pt3dadd( -8.19017, 45.553, -13.5719, 1.11 ) }
    dend_7 { pt3dadd( -8.28244, 47.2506, -13.9017, 1.03 ) }
    dend_7 { pt3dadd( -8.37835, 48.8502, -14.3392, 0.74 ) }
    dend_7 { pt3dadd( -8.46264, 49.994, -14.7813, 0.74 ) }
    dend_7 { pt3dadd( -8.52854, 50.7562, -15.1335, 0.81 ) }
    dend_7 { pt3dadd( -8.63938, 52.2188, -15.8713, 0.59 ) }
    dend_7 { pt3dadd( -8.71285, 53.4316, -16.5035, 0.74 ) }
    dend_7 { pt3dadd( -8.72791, 54.0169, -16.7966, 1.18 ) }
    dend_7 { pt3dadd( -8.69706, 55.2782, -17.4384, 0.96 ) }
    dend_7 { pt3dadd( -8.65841, 56.1175, -17.8866, 1.03 ) }
    dend_7 { pt3dadd( -8.59631, 57.0798, -18.4002, 0.96 ) }
    dend_7 { pt3dadd( -8.5018, 58.0708, -18.8929, 0.81 ) }
    dend_7 { pt3dadd( -8.3962, 59.0419, -19.3294, 0.74 ) }
    dend_7 { pt3dadd( -8.28041, 60.1091, -19.8152, 0.88 ) }
    dend_7 { pt3dadd( -8.1214, 61.3003, -20.3203, 1.18 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 55/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 2.31585, 9.99201, 0.0, 5.09 ) }
    dend_0 { pt3dadd( 2.31585, 9.99201, 0.0, 5.09 ) }
    dend_0 { pt3dadd( 2.67178, 11.6731, -0.0229001, 3.1 ) }
    dend_0 { pt3dadd( 3.25917, 14.132, -0.0939118, 2.43 ) }
    dend_0 { pt3dadd( 3.57473, 15.334, -0.183276, 2.43 ) }
    dend_0 { pt3dadd( 4.15835, 17.5353, -0.396409, 2.21 ) }
    dend_0 { pt3dadd( 4.66262, 19.5196, -0.610779, 1.99 ) }
    dend_0 { pt3dadd( 5.1542, 21.4922, -0.830466, 1.92 ) }
    dend_0 { pt3dadd( 5.83532, 24.2727, -1.14389, 1.84 ) }
    dend_0 { pt3dadd( 6.29065, 26.0733, -1.38546, 2.14 ) }
    dend_0 { pt3dadd( 6.56833, 27.2028, -1.5634, 2.43 ) }
    dend_0 { pt3dadd( 7.00983, 29.0553, -1.92657, 2.43 ) }
    dend_0 { pt3dadd( 7.34278, 30.5252, -2.25649, 2.43 ) }
    dend_0 { pt3dadd( 7.72822, 32.5003, -2.74616, 2.21 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 69/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -7.094, 9.5617, 0.0, 0.681836 ) }
    axon_0 { pt3dadd( -15.3575, 22.0803, 0.0, 0.681836 ) }
    axon_0 { pt3dadd( -23.6209, 34.5989, 0.0, 0.681836 ) }
    // Section: dend_51, id: dend_51, parent: dend_41 (entry count 72/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 10.6998, -15.9512, -5.99533, 1.99 ) }
    dend_51 { pt3dadd( 10.4734, -19.3162, -6.00934, 1.99 ) }
    dend_51 { pt3dadd( 10.2683, -22.6508, -5.97855, 2.21 ) }
    dend_51 { pt3dadd( 10.0761, -25.9084, -5.94676, 2.36 ) }
    dend_51 { pt3dadd( 9.98206, -27.3881, -5.92881, 2.51 ) }
    dend_51 { pt3dadd( 9.73258, -30.5448, -5.86238, 1.92 ) }
    dend_51 { pt3dadd( 9.61589, -32.0213, -5.83131, 1.84 ) }
    dend_51 { pt3dadd( 9.46408, -33.9668, -5.79718, 2.29 ) }
    dend_51 { pt3dadd( 9.314, -35.6984, -5.74235, 3.32 ) }
    dend_51 { pt3dadd( 9.25834, -36.2907, -5.69215, 3.32 ) }
    dend_51 { pt3dadd( 8.96717, -38.8663, -5.48713, 2.95 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 83/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 10.6998, -15.9512, -5.99533, 2.43 ) }
    dend_42 { pt3dadd( 12.242, -17.1962, -5.21718, 2.43 ) }
    dend_42 { pt3dadd( 13.4885, -18.2838, -4.49311, 2.43 ) }
    dend_42 { pt3dadd( 15.315, -19.9478, -3.26746, 2.21 ) }
    dend_42 { pt3dadd( 16.7015, -21.2138, -2.25035, 2.43 ) }
    dend_42 { pt3dadd( 18.0067, -22.4168, -1.32986, 2.58 ) }
    dend_42 { pt3dadd( 19.4944, -23.7879, -0.280716, 2.06 ) }
    dend_42 { pt3dadd( 21.0313, -25.296, 0.933145, 2.06 ) }
    dend_42 { pt3dadd( 22.4442, -26.7313, 2.11717, 2.43 ) }
    dend_42 { pt3dadd( 23.8424, -28.2013, 3.26587, 2.43 ) }
    dend_42 { pt3dadd( 25.0026, -29.4136, 4.28987, 2.51 ) }
    // Section: dend_36, id: dend_36, parent: dend_24 (entry count 94/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -10.0679, -7.4288, 3.10308, 3.76 ) }
    dend_36 { pt3dadd( -10.8395, -9.21657, 2.20472, 3.76 ) }
    dend_36 { pt3dadd( -11.5176, -10.7878, 1.41516, 2.36 ) }
    dend_36 { pt3dadd( -12.8074, -13.7762, -0.0865046, 1.99 ) }
    dend_36 { pt3dadd( -13.6003, -15.6135, -1.00976, 2.21 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 99/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -10.0679, -7.4288, 3.10308, 3.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_25 { pt3dadd( -11.4664, -8.8472, 4.87416, 3.32 ) }
    dend_25 { pt3dadd( -12.7251, -10.1239, 6.46828, 2.29 ) }
    dend_25 { pt3dadd( -13.7765, -11.1903, 7.79979, 1.84 ) }
    dend_25 { pt3dadd( -14.3185, -11.74, 8.48619, 1.62 ) }
    dend_25 { pt3dadd( -15.0385, -12.4703, 9.3981, 1.92 ) }
    // Section: dend_21, id: dend_21, parent: dend_17 (entry count 5/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 9.60752, -14.7396, -19.582, 0.96 ) }
    dend_21 { pt3dadd( 10.9214, -14.8415, -19.524, 0.96 ) }
    dend_21 { pt3dadd( 11.8587, -14.8296, -19.4802, 0.81 ) }
    dend_21 { pt3dadd( 12.4054, -14.769, -19.453, 0.81 ) }
    dend_21 { pt3dadd( 13.0412, -14.633, -19.4583, 0.88 ) }
    dend_21 { pt3dadd( 13.7235, -14.4341, -19.4842, 1.11 ) }
    dend_21 { pt3dadd( 14.5997, -14.1362, -19.5303, 0.66 ) }
    dend_21 { pt3dadd( 15.359, -13.788, -19.5867, 0.59 ) }
    dend_21 { pt3dadd( 16.0943, -13.4126, -19.6468, 0.66 ) }
    dend_21 { pt3dadd( 17.2245, -12.8201, -19.7338, 0.59 ) }
    dend_21 { pt3dadd( 17.7496, -12.5409, -19.7703, 0.81 ) }
    dend_21 { pt3dadd( 18.3089, -12.2501, -19.7826, 1.18 ) }
    dend_21 { pt3dadd( 19.3593, -11.7348, -19.7579, 1.11 ) }
    dend_21 { pt3dadd( 20.0717, -11.3891, -19.7077, 0.88 ) }
    dend_21 { pt3dadd( 21.13, -10.8696, -19.6145, 0.59 ) }
    dend_21 { pt3dadd( 22.1504, -10.3306, -19.5283, 0.52 ) }
    dend_21 { pt3dadd( 22.929, -9.86527, -19.5127, 0.66 ) }
    dend_21 { pt3dadd( 23.5345, -9.44954, -19.5384, 1.11 ) }
    dend_21 { pt3dadd( 24.3654, -8.80107, -19.6528, 0.59 ) }
    dend_21 { pt3dadd( 25.3168, -7.9855, -19.877, 0.44 ) }
    dend_21 { pt3dadd( 25.9724, -7.36155, -20.1235, 0.59 ) }
    dend_21 { pt3dadd( 26.6131, -6.6969, -20.4421, 0.59 ) }
    dend_21 { pt3dadd( 27.2837, -5.97282, -20.8292, 0.22 ) }
    dend_21 { pt3dadd( 27.765, -5.45455, -21.1392, 0.22 ) }
    dend_21 { pt3dadd( 28.0823, -5.13517, -21.3347, 0.59 ) }
    dend_21 { pt3dadd( 28.6822, -4.56402, -21.6568, 0.96 ) }
    dend_21 { pt3dadd( 29.1193, -4.18424, -21.846, 0.96 ) }
    dend_21 { pt3dadd( 29.7386, -3.68791, -22.0623, 0.52 ) }
    dend_21 { pt3dadd( 30.6922, -2.95579, -22.3474, 0.37 ) }
    dend_21 { pt3dadd( 31.3909, -2.47717, -22.4887, 0.37 ) }
    dend_21 { pt3dadd( 32.0944, -2.04117, -22.5861, 0.37 ) }
    dend_21 { pt3dadd( 32.6996, -1.70562, -22.6363, 0.37 ) }
    dend_21 { pt3dadd( 33.3691, -1.36225, -22.6764, 0.59 ) }
    dend_21 { pt3dadd( 33.5381, -1.28572, -22.68, 0.59 ) }
    dend_21 { pt3dadd( 34.3735, -0.933044, -22.599, 0.29 ) }
    dend_21 { pt3dadd( 34.8354, -0.743756, -22.5387, 0.29 ) }
    dend_21 { pt3dadd( 35.4913, -0.49982, -22.4211, 0.59 ) }
    dend_21 { pt3dadd( 36.0634, -0.291533, -22.3063, 0.66 ) }
    dend_21 { pt3dadd( 37.1253, 0.119301, -22.0788, 0.52 ) }
    dend_21 { pt3dadd( 38.3852, 0.637096, -21.8041, 0.52 ) }
    dend_21 { pt3dadd( 38.9723, 0.881397, -21.6743, 0.37 ) }
    dend_21 { pt3dadd( 39.5873, 1.11589, -21.5236, 0.44 ) }
    dend_21 { pt3dadd( 40.4541, 1.43531, -21.2982, 0.52 ) }
    dend_21 { pt3dadd( 41.167, 1.71218, -21.1167, 0.52 ) }
    dend_21 { pt3dadd( 41.7747, 1.95378, -20.9734, 0.22 ) }
    dend_21 { pt3dadd( 42.3186, 2.16381, -20.8707, 0.22 ) }
    dend_21 { pt3dadd( 43.2007, 2.49244, -20.6987, 0.59 ) }
    dend_21 { pt3dadd( 43.9762, 2.78272, -20.5469, 0.29 ) }
    dend_21 { pt3dadd( 44.6822, 3.05286, -20.4581, 0.15 ) }
    dend_21 { pt3dadd( 45.0386, 3.20328, -20.4393, 0.37 ) }
    dend_21 { pt3dadd( 45.5712, 3.46723, -20.3982, 0.66 ) }
    dend_21 { pt3dadd( 46.3287, 3.90929, -20.3305, 0.15 ) }
    dend_21 { pt3dadd( 46.8343, 4.24627, -20.287, 0.29 ) }
    dend_21 { pt3dadd( 47.8163, 4.94687, -20.1661, 0.29 ) }
    dend_21 { pt3dadd( 48.6713, 5.61677, -20.0291, 0.15 ) }
    dend_21 { pt3dadd( 49.659, 6.49923, -19.8211, 0.22 ) }
    dend_21 { pt3dadd( 50.0064, 6.84319, -19.7299, 0.66 ) }
    dend_21 { pt3dadd( 50.2824, 7.14139, -19.6462, 0.66 ) }
    dend_21 { pt3dadd( 50.5164, 7.40409, -19.549, 0.66 ) }
    dend_21 { pt3dadd( 51.1068, 8.06488, -19.254, 0.15 ) }
    dend_21 { pt3dadd( 51.5276, 8.51349, -19.1209, 0.15 ) }
    dend_21 { pt3dadd( 52.1142, 9.08844, -19.075, 0.15 ) }
    dend_21 { pt3dadd( 52.8306, 9.72681, -19.0859, 0.22 ) }
    dend_21 { pt3dadd( 53.5511, 10.3086, -19.149, 0.37 ) }
    dend_21 { pt3dadd( 53.9923, 10.631, -19.2349, 0.81 ) }
    dend_21 { pt3dadd( 55.2566, 11.4417, -19.6643, 0.07 ) }
    dend_21 { pt3dadd( 56.0932, 11.8988, -20.0194, 0.07 ) }
    dend_21 { pt3dadd( 56.5222, 12.0937, -20.2411, 0.07 ) }
    dend_21 { pt3dadd( 56.8778, 12.2333, -20.4399, 0.44 ) }
    dend_21 { pt3dadd( 57.5136, 12.442, -20.7937, 0.59 ) }
    dend_21 { pt3dadd( 58.2122, 12.6329, -21.1423, 0.81 ) }
    dend_21 { pt3dadd( 59.3747, 12.8934, -21.6201, 0.29 ) }
    dend_21 { pt3dadd( 60.7002, 13.1765, -22.0922, 0.07 ) }
    dend_21 { pt3dadd( 61.2916, 13.3175, -22.281, 0.07 ) }
    dend_21 { pt3dadd( 62.0821, 13.538, -22.5334, 0.74 ) }
    dend_21 { pt3dadd( 62.5107, 13.6796, -22.6161, 0.74 ) }
    dend_21 { pt3dadd( 62.8864, 13.8331, -22.6415, 0.44 ) }
    dend_21 { pt3dadd( 63.4339, 14.0975, -22.6062, 0.66 ) }
    dend_21 { pt3dadd( 64.1984, 14.4835, -22.4191, 0.15 ) }
    dend_21 { pt3dadd( 65.2356, 14.9496, -22.0848, 0.15 ) }
    dend_21 { pt3dadd( 66.9625, 15.8404, -21.3741, 0.15 ) }
    dend_21 { pt3dadd( 67.2688, 15.9988, -21.2229, 0.44 ) }
    dend_21 { pt3dadd( 67.8482, 16.2624, -20.8664, 0.22 ) }
    dend_21 { pt3dadd( 68.3564, 16.3903, -20.4499, 0.22 ) }
    dend_21 { pt3dadd( 68.8423, 16.3356, -19.9557, 0.29 ) }
    dend_21 { pt3dadd( 77.2079, 18.7184, -20.8739, 0.29 ) }
    dend_21 { pt3dadd( 85.6633, 20.1229, -22.6163, 0.29 ) }
    dend_21 { pt3dadd( 94.3352, 20.0645, -23.7558, 0.29 ) }
    dend_21 { pt3dadd( 102.898, 18.9397, -25.1401, 0.29 ) }
    dend_21 { pt3dadd( 111.211, 16.9217, -26.9624, 0.29 ) }
    dend_21 { pt3dadd( 118.961, 15.0559, -30.5621, 0.29 ) }
    dend_21 { pt3dadd( 126.717, 12.3704, -33.5854, 0.29 ) }
    dend_21 { pt3dadd( 134.482, 9.95631, -36.807, 0.29 ) }
    dend_21 { pt3dadd( 142.793, 8.65492, -39.1998, 0.29 ) }
    dend_21 { pt3dadd( 150.773, 5.75975, -41.3108, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_21 { pt3dadd( 158.97, 3.41992, -43.2668, 0.29 ) }
    dend_21 { pt3dadd( 167.468, 1.64351, -44.3355, 0.29 ) }
    dend_21 { pt3dadd( 175.134, -1.59605, -47.0266, 0.29 ) }
    dend_21 { pt3dadd( 182.842, -4.90134, -49.5069, 0.29 ) }
    dend_21 { pt3dadd( 189.181, -9.84035, -52.9608, 0.29 ) }
    dend_21 { pt3dadd( 195.936, -13.3422, -57.2751, 0.29 ) }
    dend_21 { pt3dadd( 203.504, -15.5534, -61.0627, 0.29 ) }
    dend_21 { pt3dadd( 210.664, -18.3696, -65.2222, 0.29 ) }
    dend_21 { pt3dadd( 218.755, -20.5724, -67.7088, 0.29 ) }
    dend_21 { pt3dadd( 227.228, -22.2465, -69.0931, 0.29 ) }
    dend_21 { pt3dadd( 235.725, -22.2899, -71.1662, 0.29 ) }
    dend_21 { pt3dadd( 244.131, -20.8641, -73.1172, 0.29 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 9.60752, -14.7396, -19.582, 1.11 ) }
    dend_18 { pt3dadd( 10.3904, -16.7859, -20.4378, 1.11 ) }
    dend_18 { pt3dadd( 11.1151, -18.3311, -21.0649, 0.96 ) }
    dend_18 { pt3dadd( 11.7661, -19.6043, -21.5479, 0.88 ) }
    dend_18 { pt3dadd( 12.8059, -21.4979, -22.368, 1.03 ) }
    dend_18 { pt3dadd( 13.321, -22.3844, -22.8124, 1.33 ) }
    dend_18 { pt3dadd( 14.0802, -23.584, -23.5207, 1.62 ) }
    dend_18 { pt3dadd( 15.0611, -24.6944, -24.5925, 0.81 ) }
    dend_18 { pt3dadd( 15.555, -25.0828, -25.1976, 0.66 ) }
    dend_18 { pt3dadd( 16.6437, -25.5841, -26.8173, 0.66 ) }
    dend_18 { pt3dadd( 17.11, -25.689, -27.597, 0.66 ) }
    dend_18 { pt3dadd( 17.775, -25.7548, -28.8647, 0.66 ) }
    dend_18 { pt3dadd( 18.5762, -25.8419, -30.5553, 0.66 ) }
    dend_18 { pt3dadd( 18.9874, -25.9576, -31.4711, 0.59 ) }
    dend_18 { pt3dadd( 20.0228, -26.6442, -33.6617, 0.66 ) }
    dend_18 { pt3dadd( 20.4271, -27.2212, -34.3958, 1.11 ) }
    dend_18 { pt3dadd( 20.6988, -27.8311, -34.7999, 1.62 ) }
    dend_18 { pt3dadd( 21.3035, -29.4278, -35.6308, 1.77 ) }
    dend_18 { pt3dadd( 22.0274, -31.4593, -36.4977, 1.47 ) }
    dend_18 { pt3dadd( 22.5554, -33.0706, -37.0838, 1.99 ) }
    dend_18 { pt3dadd( 23.0159, -34.5222, -37.5539, 1.7 ) }
    dend_18 { pt3dadd( 23.9203, -37.2229, -38.5004, 0.96 ) }
    dend_18 { pt3dadd( 24.6001, -38.9556, -39.186, 1.11 ) }
    dend_18 { pt3dadd( 25.0632, -39.891, -39.6361, 0.66 ) }
    dend_18 { pt3dadd( 25.6943, -40.8612, -40.2579, 0.59 ) }
    dend_18 { pt3dadd( 26.602, -41.8257, -41.0764, 0.44 ) }
    dend_18 { pt3dadd( 27.7889, -42.5247, -42.0592, 0.44 ) }
    dend_18 { pt3dadd( 28.8761, -42.6955, -42.8844, 0.37 ) }
    dend_18 { pt3dadd( 29.9115, -42.6061, -43.6232, 0.81 ) }
    dend_18 { pt3dadd( 30.3363, -42.5162, -43.9192, 0.81 ) }
    dend_18 { pt3dadd( 31.765, -42.1002, -44.9419, 0.59 ) }
    dend_18 { pt3dadd( 33.5963, -41.48, -46.2253, 0.59 ) }
    dend_18 { pt3dadd( 34.7708, -41.0556, -47.061, 0.44 ) }
    dend_18 { pt3dadd( 35.4571, -40.8241, -47.541, 0.29 ) }
    dend_18 { pt3dadd( 36.1964, -40.6151, -47.9993, 0.29 ) }
    dend_18 { pt3dadd( 37.9847, -40.1739, -48.9714, 0.29 ) }
    dend_18 { pt3dadd( 38.6467, -40.0446, -49.2752, 1.03 ) }
    dend_18 { pt3dadd( 39.5553, -39.9351, -49.5872, 1.25 ) }
    dend_18 { pt3dadd( 40.9946, -39.8029, -50.0218, 0.37 ) }
    dend_18 { pt3dadd( 42.7258, -39.6425, -50.5035, 0.22 ) }
    dend_18 { pt3dadd( 44.2663, -39.4713, -50.861, 0.22 ) }
    dend_18 { pt3dadd( 45.0183, -39.3917, -50.9633, 0.66 ) }
    dend_18 { pt3dadd( 45.8315, -39.3181, -51.0727, 0.88 ) }
    dend_18 { pt3dadd( 55.5849, -45.8376, -59.3017, 0.88 ) }
    dend_18 { pt3dadd( 64.2103, -53.1352, -68.1163, 0.88 ) }
    dend_18 { pt3dadd( 72.9947, -61.2735, -75.9873, 0.88 ) }
    dend_18 { pt3dadd( 82.432, -70.1142, -82.1621, 0.88 ) }
    dend_18 { pt3dadd( 94.3786, -75.9998, -87.4526, 0.88 ) }
    dend_18 { pt3dadd( 105.906, -82.9204, -92.4092, 0.88 ) }
    dend_18 { pt3dadd( 118.862, -88.206, -95.498, 0.88 ) }
    dend_18 { pt3dadd( 132.509, -92.1445, -97.3983, 0.88 ) }
    dend_18 { pt3dadd( 146.517, -95.1141, -96.8442, 0.88 ) }
    dend_18 { pt3dadd( 160.297, -98.8894, -95.7455, 0.88 ) }
    dend_18 { pt3dadd( 173.705, -103.864, -94.8457, 0.88 ) }
    dend_18 { pt3dadd( 187.761, -106.456, -95.8787, 0.88 ) }
    dend_18 { pt3dadd( 201.42, -110.455, -97.5479, 0.88 ) }
    dend_18 { pt3dadd( 215.392, -113.547, -98.3061, 0.88 ) }
    dend_18 { pt3dadd( 229.195, -117.396, -98.4599, 0.88 ) }
    dend_18 { pt3dadd( 241.915, -123.521, -100.914, 0.88 ) }
    dend_18 { pt3dadd( 255.519, -127.912, -101.916, 0.88 ) }
    dend_18 { pt3dadd( 268.886, -132.918, -103.189, 0.88 ) }
    dend_18 { pt3dadd( 282.787, -136.198, -102.028, 0.88 ) }
    dend_18 { pt3dadd( 296.991, -137.991, -101.424, 0.88 ) }
    dend_18 { pt3dadd( 311.193, -139.677, -102.336, 0.88 ) }
    dend_18 { pt3dadd( 325.518, -139.963, -102.533, 0.88 ) }
    dend_18 { pt3dadd( 339.656, -141.708, -104.096, 0.88 ) }
    dend_18 { pt3dadd( 353.47, -143.473, -107.472, 0.88 ) }
    dend_18 { pt3dadd( 366.332, -143.469, -113.791, 0.88 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 80/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 185.623, -114.625, -213.352, 0.15 ) }
    dend_16 { pt3dadd( 191.4, -117.852, -219.314, 0.15 ) }
    dend_16 { pt3dadd( 196.572, -121.634, -225.5, 0.15 ) }
    dend_16 { pt3dadd( 201.581, -123.763, -232.55, 0.15 ) }
    dend_16 { pt3dadd( 206.332, -124.258, -240.067, 0.15 ) }
    dend_16 { pt3dadd( 211.846, -123.936, -247.053, 0.15 ) }
    dend_16 { pt3dadd( 218.2, -122.769, -253.184, 0.15 ) }
    dend_16 { pt3dadd( 225.393, -123.104, -258.425, 0.15 ) }
    dend_16 { pt3dadd( 232.295, -122.469, -264.019, 0.15 ) }
    dend_16 { pt3dadd( 239.188, -122.98, -269.636, 0.15 ) }
    dend_16 { pt3dadd( 246.327, -123.886, -274.883, 0.15 ) }
    dend_16 { pt3dadd( 253.295, -123.62, -280.423, 0.15 ) }
    dend_16 { pt3dadd( 260.196, -122.428, -285.926, 0.15 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 93/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 185.623, -114.625, -213.352, 0.07 ) }
    dend_15 { pt3dadd( 191.857, -118.862, -220.396, 0.15 ) }
    dend_15 { pt3dadd( 198.358, -123.861, -226.654, 0.15 ) }
    dend_15 { pt3dadd( 205.532, -128.079, -232.751, 0.15 ) }
    dend_15 { pt3dadd( 214.048, -132.121, -236.942, 0.15 ) }
    dend_15 { pt3dadd( 222.563, -136.203, -241.096, 0.15 ) }
    dend_15 { pt3dadd( 231.51, -140.536, -243.856, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_15 { pt3dadd( 241.326, -143.275, -245.452, 0.15 ) }
    dend_15 { pt3dadd( 251.275, -145.511, -247.02, 0.15 ) }
    dend_15 { pt3dadd( 260.787, -149.481, -247.439, 0.15 ) }
    dend_15 { pt3dadd( 269.668, -154.386, -249.311, 0.15 ) }
    dend_15 { pt3dadd( 279.403, -157.721, -250.043, 0.15 ) }
    dend_15 { pt3dadd( 288.767, -161.412, -252.303, 0.15 ) }
    // Section: dend_11, id: dend_11, parent: dend_7 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -8.1214, 61.3003, -20.3203, 0.52 ) }
    dend_11 { pt3dadd( -8.31805, 62.8491, -20.8065, 0.52 ) }
    dend_11 { pt3dadd( -8.4416, 63.5643, -21.0043, 0.29 ) }
    dend_11 { pt3dadd( -8.56748, 64.1494, -21.1478, 0.29 ) }
    dend_11 { pt3dadd( -8.69597, 64.6871, -21.2612, 0.29 ) }
    dend_11 { pt3dadd( -8.96909, 65.7093, -21.4535, 0.52 ) }
    dend_11 { pt3dadd( -9.22483, 66.5926, -21.6032, 0.74 ) }
    dend_11 { pt3dadd( -9.49296, 67.3853, -21.6953, 0.81 ) }
    dend_11 { pt3dadd( -9.74917, 68.1389, -21.7547, 0.81 ) }
    dend_11 { pt3dadd( -10.096, 69.1566, -21.7924, 0.29 ) }
    dend_11 { pt3dadd( -10.3395, 69.8887, -21.7818, 0.37 ) }
    dend_11 { pt3dadd( -10.5583, 70.5693, -21.7388, 0.44 ) }
    dend_11 { pt3dadd( -10.7031, 71.0224, -21.7091, 0.29 ) }
    dend_11 { pt3dadd( -10.8862, 71.6507, -21.7028, 0.29 ) }
    dend_11 { pt3dadd( -11.0216, 72.165, -21.7306, 0.44 ) }
    dend_11 { pt3dadd( -11.1712, 72.8221, -21.8066, 0.81 ) }
    dend_11 { pt3dadd( -11.2496, 73.2776, -21.8735, 0.74 ) }
    dend_11 { pt3dadd( -11.3602, 74.1011, -22.0083, 0.52 ) }
    dend_11 { pt3dadd( -11.4644, 75.0414, -22.1666, 0.52 ) }
    dend_11 { pt3dadd( -11.5091, 75.6986, -22.2772, 0.52 ) }
    dend_11 { pt3dadd( -11.5259, 76.8183, -22.4235, 0.44 ) }
    dend_11 { pt3dadd( -11.4867, 77.6963, -22.506, 0.44 ) }
    dend_11 { pt3dadd( -11.4324, 78.3611, -22.5423, 0.52 ) }
    dend_11 { pt3dadd( -11.3483, 79.0847, -22.5602, 0.66 ) }
    dend_11 { pt3dadd( -11.2656, 79.6508, -22.5642, 0.66 ) }
    dend_11 { pt3dadd( -11.1153, 80.5711, -22.5898, 0.44 ) }
    dend_11 { pt3dadd( -10.948, 81.6027, -22.6778, 0.44 ) }
    dend_11 { pt3dadd( -10.8855, 82.0649, -22.7474, 0.52 ) }
    dend_11 { pt3dadd( -10.8535, 82.4502, -22.8254, 0.52 ) }
    dend_11 { pt3dadd( -10.8698, 83.4464, -23.0673, 0.44 ) }
    dend_11 { pt3dadd( -10.9694, 84.3255, -23.3405, 0.44 ) }
    dend_11 { pt3dadd( -11.1619, 85.289, -23.7106, 0.59 ) }
    dend_11 { pt3dadd( -11.3298, 85.885, -23.9632, 0.81 ) }
    dend_11 { pt3dadd( -11.5451, 86.5477, -24.267, 1.03 ) }
    dend_11 { pt3dadd( -11.9581, 87.6797, -24.805, 0.52 ) }
    dend_11 { pt3dadd( -12.3274, 88.5759, -25.2315, 0.22 ) }
    dend_11 { pt3dadd( -12.5502, 89.1387, -25.5162, 0.22 ) }
    dend_11 { pt3dadd( -12.7774, 89.7498, -25.8113, 0.37 ) }
    dend_11 { pt3dadd( -13.031, 90.5144, -26.1653, 0.52 ) }
    dend_11 { pt3dadd( -13.153, 90.946, -26.3555, 0.52 ) }
    dend_11 { pt3dadd( -13.2592, 91.3761, -26.5238, 0.22 ) }
    dend_11 { pt3dadd( -13.5173, 92.5041, -26.8745, 0.22 ) }
    dend_11 { pt3dadd( -13.6945, 93.3188, -27.0671, 0.22 ) }
    dend_11 { pt3dadd( -13.85, 94.006, -27.1722, 0.52 ) }
    dend_11 { pt3dadd( -14.0009, 94.593, -27.1974, 0.81 ) }
    dend_11 { pt3dadd( -14.1728, 95.1835, -27.1753, 0.96 ) }
    dend_11 { pt3dadd( -14.3246, 95.6329, -27.1214, 1.03 ) }
    dend_11 { pt3dadd( -14.7077, 96.5296, -26.8847, 0.52 ) }
    dend_11 { pt3dadd( -15.0579, 97.2485, -26.6543, 0.22 ) }
    dend_11 { pt3dadd( -15.308, 97.6956, -26.4816, 0.22 ) }
    dend_11 { pt3dadd( -15.5618, 98.1055, -26.3169, 0.37 ) }
    dend_11 { pt3dadd( -15.8128, 98.4841, -26.1701, 0.59 ) }
    dend_11 { pt3dadd( -16.5641, 99.5532, -25.7883, 0.22 ) }
    dend_11 { pt3dadd( -16.9451, 100.1, -25.6247, 0.37 ) }
    dend_11 { pt3dadd( -17.5108, 100.945, -25.4221, 0.81 ) }
    dend_11 { pt3dadd( -18.0042, 101.743, -25.2679, 0.81 ) }
    dend_11 { pt3dadd( -18.3588, 102.376, -25.1615, 1.03 ) }
    dend_11 { pt3dadd( -18.5929, 102.835, -25.1034, 1.03 ) }
    dend_11 { pt3dadd( -19.0009, 103.726, -25.0555, 0.52 ) }
    dend_11 { pt3dadd( -19.1806, 104.167, -25.0442, 0.22 ) }
    dend_11 { pt3dadd( -19.3481, 104.673, -25.0515, 0.22 ) }
    dend_11 { pt3dadd( -19.4488, 105.045, -25.0546, 0.22 ) }
    dend_11 { pt3dadd( -19.5434, 105.456, -25.0573, 0.22 ) }
    dend_11 { pt3dadd( -19.6975, 106.212, -25.0618, 0.22 ) }
    dend_11 { pt3dadd( -19.7956, 106.798, -25.0981, 0.22 ) }
    dend_11 { pt3dadd( -19.8899, 107.464, -25.1661, 0.29 ) }
    dend_11 { pt3dadd( -19.9425, 107.858, -25.2173, 0.59 ) }
    dend_11 { pt3dadd( -19.9907, 108.3, -25.2804, 1.03 ) }
    dend_11 { pt3dadd( -20.0443, 109.027, -25.3863, 0.81 ) }
    dend_11 { pt3dadd( -20.1055, 110.068, -25.5383, 0.37 ) }
    dend_11 { pt3dadd( -20.1475, 110.727, -25.6332, 0.22 ) }
    dend_11 { pt3dadd( -20.1881, 111.327, -25.7126, 0.22 ) }
    dend_11 { pt3dadd( -20.2291, 111.87, -25.7482, 0.22 ) }
    dend_11 { pt3dadd( -20.308, 112.595, -25.7475, 0.29 ) }
    dend_11 { pt3dadd( -20.428, 113.187, -25.7179, 0.81 ) }
    dend_11 { pt3dadd( -20.5237, 113.51, -25.6881, 0.81 ) }
    dend_11 { pt3dadd( -20.7274, 114.076, -25.6415, 0.81 ) }
    dend_11 { pt3dadd( -21.1084, 115.023, -25.5746, 1.03 ) }
    dend_11 { pt3dadd( -21.4654, 115.829, -25.5346, 0.74 ) }
    dend_11 { pt3dadd( -22.0154, 116.989, -25.5019, 0.22 ) }
    dend_11 { pt3dadd( -22.3299, 117.628, -25.499, 0.22 ) }
    dend_11 { pt3dadd( -22.7712, 118.48, -25.5543, 0.37 ) }
    dend_11 { pt3dadd( -23.0328, 118.976, -25.6213, 0.29 ) }
    dend_11 { pt3dadd( -23.3273, 119.552, -25.7423, 0.66 ) }
    dend_11 { pt3dadd( -23.6119, 120.156, -25.8819, 0.88 ) }
    dend_11 { pt3dadd( -23.9121, 120.85, -26.0493, 0.22 ) }
    dend_11 { pt3dadd( -24.2847, 121.74, -26.2681, 0.22 ) }
    dend_11 { pt3dadd( -24.478, 122.236, -26.3786, 0.22 ) }
    dend_11 { pt3dadd( -24.6405, 122.674, -26.4364, 0.29 ) }
    dend_11 { pt3dadd( -24.844, 123.233, -26.4429, 0.29 ) }
    dend_11 { pt3dadd( -25.11, 123.92, -26.3604, 0.44 ) }
    dend_11 { pt3dadd( -25.3851, 124.603, -26.2079, 0.52 ) }
    dend_11 { pt3dadd( -25.8327, 125.657, -25.9015, 0.22 ) }
    dend_11 { pt3dadd( -26.2815, 126.643, -25.6055, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_11 { pt3dadd( -26.6872, 127.481, -25.3072, 0.44 ) }
    dend_11 { pt3dadd( -27.0823, 128.244, -25.0135, 0.44 ) }
    dend_11 { pt3dadd( -27.4464, 128.91, -24.7596, 0.88 ) }
    dend_11 { pt3dadd( -27.886, 129.671, -24.4894, 0.59 ) }
    dend_11 { pt3dadd( -28.3707, 130.488, -24.2448, 0.37 ) }
    dend_11 { pt3dadd( -28.9439, 131.474, -24.0446, 0.37 ) }
    dend_11 { pt3dadd( -29.4444, 132.424, -23.9186, 0.29 ) }
    dend_11 { pt3dadd( -29.9602, 133.521, -23.8258, 0.29 ) }
    dend_11 { pt3dadd( -30.2431, 134.196, -23.7818, 0.81 ) }
    dend_11 { pt3dadd( -30.4772, 134.853, -23.7541, 1.4 ) }
    dend_11 { pt3dadd( -30.7995, 135.959, -23.7396, 1.55 ) }
    dend_11 { pt3dadd( -31.0563, 137.14, -23.7624, 0.74 ) }
    dend_11 { pt3dadd( -31.1744, 138.137, -23.8133, 0.52 ) }
    dend_11 { pt3dadd( -31.2111, 139.002, -23.8967, 0.52 ) }
    dend_11 { pt3dadd( -31.2068, 139.659, -23.983, 0.52 ) }
    dend_11 { pt3dadd( -31.1655, 140.572, -24.1367, 0.52 ) }
    dend_11 { pt3dadd( -31.0769, 141.604, -24.3892, 0.44 ) }
    dend_11 { pt3dadd( -30.9009, 143.203, -24.9407, 0.29 ) }
    dend_11 { pt3dadd( -30.8168, 143.881, -25.2234, 0.29 ) }
    dend_11 { pt3dadd( -30.7298, 144.656, -25.5873, 0.22 ) }
    dend_11 { pt3dadd( -30.6618, 145.471, -25.9764, 0.29 ) }
    dend_11 { pt3dadd( -30.6392, 146.6, -26.4915, 0.22 ) }
    dend_11 { pt3dadd( -30.6962, 147.574, -26.8785, 0.22 ) }
    dend_11 { pt3dadd( -30.7609, 148.11, -27.0422, 0.66 ) }
    dend_11 { pt3dadd( -30.8394, 148.705, -27.2107, 1.55 ) }
    dend_11 { pt3dadd( -31.0308, 150.164, -27.5965, 0.29 ) }
    dend_11 { pt3dadd( -31.1838, 151.372, -27.8637, 0.22 ) }
    dend_11 { pt3dadd( -31.2968, 152.435, -28.0767, 0.52 ) }
    dend_11 { pt3dadd( -31.3353, 153.045, -28.2024, 0.15 ) }
    dend_11 { pt3dadd( -31.3137, 154.099, -28.4971, 0.15 ) }
    dend_11 { pt3dadd( -31.2667, 154.511, -28.6474, 0.37 ) }
    dend_11 { pt3dadd( -31.1893, 154.853, -28.8096, 0.37 ) }
    dend_11 { pt3dadd( -30.8888, 155.79, -29.3578, 0.66 ) }
    dend_11 { pt3dadd( -30.7477, 156.175, -29.6064, 0.22 ) }
    dend_11 { pt3dadd( -30.4686, 156.954, -30.1281, 0.15 ) }
    dend_11 { pt3dadd( -30.3314, 157.367, -30.3952, 0.15 ) }
    dend_11 { pt3dadd( -30.1062, 158.073, -30.883, 0.22 ) }
    dend_11 { pt3dadd( -29.952, 158.58, -31.2445, 0.22 ) }
    dend_11 { pt3dadd( -33.6508, 166.643, -32.5262, 0.22 ) }
    dend_11 { pt3dadd( -38.4101, 174.234, -32.7859, 0.22 ) }
    dend_11 { pt3dadd( -42.9223, 181.852, -34.1777, 0.22 ) }
    dend_11 { pt3dadd( -47.3094, 189.245, -36.7158, 0.22 ) }
    dend_11 { pt3dadd( -51.7989, 196.119, -40.3122, 0.22 ) }
    dend_11 { pt3dadd( -54.6339, 203.378, -44.7402, 0.22 ) }
    dend_11 { pt3dadd( -57.7964, 211.264, -47.5942, 0.22 ) }
    dend_11 { pt3dadd( -60.6845, 219.233, -50.5087, 0.22 ) }
    dend_11 { pt3dadd( -64.9359, 226.853, -52.5575, 0.22 ) }
    dend_11 { pt3dadd( -67.8336, 235.318, -53.0963, 0.22 ) }
    dend_11 { pt3dadd( -70.8754, 243.745, -52.8323, 0.22 ) }
    dend_11 { pt3dadd( -72.4732, 252.416, -51.2193, 0.22 ) }
    dend_11 { pt3dadd( -72.6325, 260.848, -48.1842, 0.22 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 51/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -8.1214, 61.3003, -20.3203, 0.59 ) }
    dend_8 { pt3dadd( -8.08344, 62.0128, -20.9461, 0.59 ) }
    dend_8 { pt3dadd( -8.06297, 62.3875, -21.2426, 0.59 ) }
    dend_8 { pt3dadd( -8.00063, 63.5952, -22.1182, 0.52 ) }
    dend_8 { pt3dadd( -7.9812, 64.0145, -22.4003, 0.37 ) }
    dend_8 { pt3dadd( -7.96005, 64.3599, -22.6204, 0.22 ) }
    dend_8 { pt3dadd( -7.9167, 64.8768, -22.9411, 0.22 ) }
    dend_8 { pt3dadd( -7.86212, 65.4747, -23.3217, 0.29 ) }
    dend_8 { pt3dadd( -7.8013, 66.0875, -23.7151, 0.44 ) }
    dend_8 { pt3dadd( -7.7176, 66.8775, -24.1992, 0.74 ) }
    dend_8 { pt3dadd( -7.62174, 67.6373, -24.679, 0.74 ) }
    dend_8 { pt3dadd( -7.47575, 68.4497, -25.1749, 0.29 ) }
    dend_8 { pt3dadd( -7.24298, 69.4504, -25.7647, 0.37 ) }
    dend_8 { pt3dadd( -7.16838, 69.7468, -25.93, 0.37 ) }
    dend_8 { pt3dadd( -7.04, 70.2108, -26.1673, 0.37 ) }
    dend_8 { pt3dadd( -6.90078, 70.6856, -26.3884, 0.37 ) }
    dend_8 { pt3dadd( -6.63958, 71.6982, -26.8433, 0.29 ) }
    dend_8 { pt3dadd( -6.49598, 72.3815, -27.1239, 0.29 ) }
    dend_8 { pt3dadd( -6.39102, 72.9891, -27.3719, 0.29 ) }
    dend_8 { pt3dadd( -6.31695, 73.5288, -27.6063, 0.81 ) }
    dend_8 { pt3dadd( -6.2359, 74.3017, -27.9748, 1.03 ) }
    dend_8 { pt3dadd( -6.15372, 75.344, -28.4892, 0.29 ) }
    dend_8 { pt3dadd( -6.11075, 75.9274, -28.8133, 0.29 ) }
    dend_8 { pt3dadd( -6.04366, 76.5353, -29.1563, 0.29 ) }
    dend_8 { pt3dadd( -5.94246, 77.1595, -29.5077, 0.66 ) }
    dend_8 { pt3dadd( -5.77052, 77.928, -29.9273, 0.81 ) }
    dend_8 { pt3dadd( -5.63482, 78.4023, -30.1719, 0.44 ) }
    dend_8 { pt3dadd( -5.25738, 79.4839, -30.7547, 0.44 ) }
    dend_8 { pt3dadd( -5.07256, 79.9716, -31.0296, 0.59 ) }
    dend_8 { pt3dadd( -4.88707, 80.4783, -31.3013, 0.59 ) }
    dend_8 { pt3dadd( -4.6523, 81.1946, -31.6773, 0.44 ) }
    dend_8 { pt3dadd( -4.49747, 81.7845, -31.9557, 0.52 ) }
    dend_8 { pt3dadd( -4.31727, 82.7398, -32.3507, 0.81 ) }
    dend_8 { pt3dadd( -4.25708, 83.2154, -32.4987, 0.81 ) }
    dend_8 { pt3dadd( -4.1992, 83.9351, -32.7513, 0.37 ) }
    dend_8 { pt3dadd( -4.17649, 84.336, -32.9373, 0.37 ) }
    dend_8 { pt3dadd( -4.14652, 84.8165, -33.2269, 0.37 ) }
    dend_8 { pt3dadd( -4.11255, 85.1977, -33.5083, 0.59 ) }
    dend_8 { pt3dadd( -4.06338, 85.6658, -33.896, 0.44 ) }
    dend_8 { pt3dadd( -3.93547, 86.4896, -34.6675, 0.37 ) }
    dend_8 { pt3dadd( -3.76062, 87.3341, -35.5089, 0.59 ) }
    dend_8 { pt3dadd( -3.61555, 87.9116, -36.0652, 0.44 ) }
    dend_8 { pt3dadd( -3.45994, 88.4782, -36.5723, 0.88 ) }
    dend_8 { pt3dadd( -3.3596, 88.8572, -36.8578, 1.18 ) }
    dend_8 { pt3dadd( -3.23706, 89.3921, -37.1605, 0.44 ) }
    dend_8 { pt3dadd( -3.14931, 89.8766, -37.3451, 0.29 ) }
    dend_8 { pt3dadd( -3.06969, 90.5781, -37.5326, 0.66 ) }
    dend_8 { pt3dadd( -3.05987, 91.0881, -37.6716, 0.66 ) }
    dend_8 { pt3dadd( -3.0971, 91.7668, -37.8836, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_8 { pt3dadd( -3.13416, 92.2211, -38.0969, 0.37 ) }
    dend_8 { pt3dadd( -3.19608, 92.8111, -38.4935, 0.37 ) }
    dend_8 { pt3dadd( -3.21316, 93.179, -38.7894, 0.37 ) }
    dend_8 { pt3dadd( -3.20311, 93.8275, -39.3811, 0.88 ) }
    dend_8 { pt3dadd( -3.16315, 94.2044, -39.7098, 0.66 ) }
    dend_8 { pt3dadd( -3.01783, 95.1163, -40.4054, 0.29 ) }
    dend_8 { pt3dadd( -2.94339, 95.6985, -40.7564, 0.29 ) }
    dend_8 { pt3dadd( -2.88911, 96.3831, -41.1003, 0.44 ) }
    dend_8 { pt3dadd( -2.85783, 96.6683, -41.2312, 0.44 ) }
    dend_8 { pt3dadd( -2.76591, 97.5579, -41.5741, 0.37 ) }
    dend_8 { pt3dadd( -2.76049, 98.1939, -41.7876, 0.37 ) }
    dend_8 { pt3dadd( -2.90802, 99.2009, -41.9953, 0.37 ) }
    dend_8 { pt3dadd( -3.06205, 99.8109, -42.0766, 0.29 ) }
    dend_8 { pt3dadd( -3.74556, 107.2, -44.977, 0.29 ) }
    dend_8 { pt3dadd( -5.04252, 114.732, -47.229, 0.29 ) }
    dend_8 { pt3dadd( -5.8182, 122.17, -49.9776, 0.29 ) }
    dend_8 { pt3dadd( -5.49508, 129.27, -53.5799, 0.29 ) }
    dend_8 { pt3dadd( -5.72429, 136.96, -55.6526, 0.29 ) }
    dend_8 { pt3dadd( -5.49344, 144.675, -57.6278, 0.29 ) }
    dend_8 { pt3dadd( -5.61589, 152.551, -58.8265, 0.29 ) }
    dend_8 { pt3dadd( -5.86765, 160.514, -58.7503, 0.29 ) }
    dend_8 { pt3dadd( -7.0792, 168.375, -58.2721, 0.29 ) }
    dend_8 { pt3dadd( -8.00931, 176.157, -56.8412, 0.29 ) }
    dend_8 { pt3dadd( -9.20003, 184.013, -56.2412, 0.29 ) }
    dend_8 { pt3dadd( -10.2007, 191.906, -56.6652, 0.29 ) }
    dend_8 { pt3dadd( -12.7443, 199.435, -57.2299, 0.29 ) }
    dend_8 { pt3dadd( -13.6785, 207.346, -57.0787, 0.29 ) }
    dend_8 { pt3dadd( -13.7911, 215.3, -57.5389, 0.29 ) }
    dend_8 { pt3dadd( -13.5605, 223.106, -59.1196, 0.29 ) }
    dend_8 { pt3dadd( -14.3579, 230.649, -61.5593, 0.29 ) }
    dend_8 { pt3dadd( -16.0034, 237.714, -64.8551, 0.29 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 31/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 7.72822, 32.5003, -2.74616, 0.96 ) }
    dend_4 { pt3dadd( 7.1037, 33.7815, -1.88235, 0.96 ) }
    dend_4 { pt3dadd( 6.23085, 35.3692, -0.755858, 0.52 ) }
    dend_4 { pt3dadd( 5.63662, 36.3615, -0.00782625, 0.81 ) }
    dend_4 { pt3dadd( 4.93391, 37.5061, 0.858877, 0.81 ) }
    dend_4 { pt3dadd( 4.33762, 38.4571, 1.59329, 0.74 ) }
    dend_4 { pt3dadd( 3.66271, 39.5101, 2.42873, 0.59 ) }
    dend_4 { pt3dadd( 2.96011, 40.5746, 3.31961, 0.74 ) }
    dend_4 { pt3dadd( 2.26255, 41.6123, 4.16428, 1.03 ) }
    dend_4 { pt3dadd( 1.37569, 42.9854, 5.16499, 0.81 ) }
    dend_4 { pt3dadd( 0.631668, 44.2129, 5.97089, 1.11 ) }
    dend_4 { pt3dadd( 0.141884, 45.0849, 6.50619, 1.25 ) }
    dend_4 { pt3dadd( -0.303193, 45.9472, 7.00358, 1.11 ) }
    dend_4 { pt3dadd( -0.893275, 47.1648, 7.62007, 0.66 ) }
    dend_4 { pt3dadd( -1.36459, 48.1384, 8.04355, 0.52 ) }
    dend_4 { pt3dadd( -1.93514, 49.3423, 8.49841, 0.66 ) }
    dend_4 { pt3dadd( -2.2251, 49.9941, 8.70916, 0.81 ) }
    dend_4 { pt3dadd( -2.67197, 51.052, 9.02172, 1.11 ) }
    dend_4 { pt3dadd( -3.06082, 51.9782, 9.28039, 1.11 ) }
    dend_4 { pt3dadd( -3.78807, 53.72, 9.7455, 0.74 ) }
    dend_4 { pt3dadd( -4.49106, 55.4702, 10.1882, 0.66 ) }
    dend_4 { pt3dadd( -4.9751, 56.7991, 10.4813, 0.88 ) }
    dend_4 { pt3dadd( -5.4119, 58.1034, 10.7584, 0.74 ) }
    dend_4 { pt3dadd( -5.76857, 59.2567, 10.9866, 0.52 ) }
    dend_4 { pt3dadd( -6.0055, 60.014, 11.1364, 0.37 ) }
    dend_4 { pt3dadd( -6.20516, 60.5682, 11.2465, 0.37 ) }
    dend_4 { pt3dadd( -6.46521, 61.1728, 11.3645, 0.44 ) }
    dend_4 { pt3dadd( -6.95195, 62.1764, 11.5549, 0.59 ) }
    dend_4 { pt3dadd( -7.34916, 62.9619, 11.693, 0.88 ) }
    dend_4 { pt3dadd( -7.65658, 63.5758, 11.7927, 1.18 ) }
    dend_4 { pt3dadd( -8.51424, 65.3267, 12.0588, 0.74 ) }
    dend_4 { pt3dadd( -9.00471, 66.3646, 12.2429, 0.52 ) }
    dend_4 { pt3dadd( -9.38584, 67.2688, 12.4214, 0.52 ) }
    dend_4 { pt3dadd( -9.72738, 68.2117, 12.6288, 0.74 ) }
    dend_4 { pt3dadd( -9.89395, 68.756, 12.7642, 0.74 ) }
    dend_4 { pt3dadd( -10.2192, 70.0506, 13.0931, 0.37 ) }
    dend_4 { pt3dadd( -10.4183, 71.0252, 13.3593, 0.37 ) }
    dend_4 { pt3dadd( -10.598, 71.907, 13.6268, 0.59 ) }
    dend_4 { pt3dadd( -10.8009, 72.857, 13.9218, 0.88 ) }
    dend_4 { pt3dadd( -11.0451, 73.9135, 14.2329, 0.88 ) }
    dend_4 { pt3dadd( -11.2892, 74.9589, 14.5079, 0.74 ) }
    dend_4 { pt3dadd( -11.574, 76.1795, 14.7536, 0.88 ) }
    dend_4 { pt3dadd( -11.7367, 76.8909, 14.8558, 1.11 ) }
    dend_4 { pt3dadd( -11.9289, 77.8079, 14.983, 1.11 ) }
    dend_4 { pt3dadd( -12.1257, 78.804, 15.1657, 0.88 ) }
    dend_4 { pt3dadd( -12.2583, 79.4823, 15.3217, 0.88 ) }
    dend_4 { pt3dadd( -12.5496, 81.0292, 15.7316, 0.52 ) }
    dend_4 { pt3dadd( -12.7619, 82.211, 16.0651, 0.44 ) }
    dend_4 { pt3dadd( -13.0235, 83.7777, 16.5206, 0.37 ) }
    dend_4 { pt3dadd( -13.2776, 85.3522, 17.0127, 0.37 ) }
    dend_4 { pt3dadd( -13.4066, 86.0891, 17.2795, 0.66 ) }
    dend_4 { pt3dadd( -13.5722, 86.8509, 17.6116, 0.96 ) }
    dend_4 { pt3dadd( -13.7714, 87.6089, 17.983, 0.59 ) }
    dend_4 { pt3dadd( -14.1827, 88.8446, 18.5959, 0.37 ) }
    dend_4 { pt3dadd( -14.5885, 89.8979, 19.0921, 0.29 ) }
    dend_4 { pt3dadd( -14.957, 90.819, 19.4943, 0.59 ) }
    dend_4 { pt3dadd( -15.488, 92.1352, 20.081, 0.44 ) }
    dend_4 { pt3dadd( -15.852, 93.0704, 20.4883, 0.22 ) }
    dend_4 { pt3dadd( -16.1544, 93.8915, 20.8296, 0.22 ) }
    dend_4 { pt3dadd( -16.402, 94.6135, 21.0906, 0.37 ) }
    dend_4 { pt3dadd( -16.5824, 95.2359, 21.2353, 0.59 ) }
    dend_4 { pt3dadd( -16.72, 95.8466, 21.3434, 0.74 ) }
    dend_4 { pt3dadd( -16.8884, 96.9011, 21.5066, 0.66 ) }
    dend_4 { pt3dadd( -16.9726, 97.5656, 21.6246, 0.74 ) }
    dend_4 { pt3dadd( -17.0847, 98.3866, 21.8203, 0.81 ) }
    dend_4 { pt3dadd( -17.3309, 99.8339, 22.2652, 0.22 ) }
    dend_4 { pt3dadd( -17.5459, 100.987, 22.6704, 0.22 ) }
    dend_4 { pt3dadd( -17.6272, 101.44, 22.8508, 0.52 ) }
    dend_4 { pt3dadd( -17.7231, 102.07, 23.104, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_4 { pt3dadd( -17.9357, 103.604, 23.7845, 0.37 ) }
    dend_4 { pt3dadd( -18.0718, 104.569, 24.2874, 0.37 ) }
    dend_4 { pt3dadd( -18.2728, 105.694, 24.9626, 0.22 ) }
    dend_4 { pt3dadd( -18.4843, 106.639, 25.559, 0.22 ) }
    dend_4 { pt3dadd( -18.8397, 107.988, 26.451, 0.29 ) }
    dend_4 { pt3dadd( -19.2319, 109.351, 27.352, 0.29 ) }
    dend_4 { pt3dadd( -19.6205, 110.578, 28.1563, 0.81 ) }
    dend_4 { pt3dadd( -20.0215, 111.634, 28.8474, 1.03 ) }
    dend_4 { pt3dadd( -20.4897, 112.663, 29.5144, 0.96 ) }
    dend_4 { pt3dadd( -21.0205, 113.716, 30.1331, 0.22 ) }
    dend_4 { pt3dadd( -21.557, 114.764, 30.6806, 0.29 ) }
    dend_4 { pt3dadd( -22.0945, 115.832, 31.1159, 0.59 ) }
    dend_4 { pt3dadd( -22.511, 116.704, 31.433, 0.96 ) }
    dend_4 { pt3dadd( -22.9164, 117.622, 31.7673, 0.96 ) }
    dend_4 { pt3dadd( -23.2985, 118.501, 32.0982, 0.59 ) }
    dend_4 { pt3dadd( -23.9728, 120.075, 32.7565, 0.22 ) }
    dend_4 { pt3dadd( -24.4565, 121.22, 33.2642, 0.15 ) }
    dend_4 { pt3dadd( -24.9657, 122.574, 33.9163, 0.15 ) }
    dend_4 { pt3dadd( -25.4007, 123.884, 34.6664, 0.15 ) }
    dend_4 { pt3dadd( -25.5628, 124.409, 35.0091, 0.66 ) }
    dend_4 { pt3dadd( -25.8292, 125.322, 35.6796, 1.33 ) }
    dend_4 { pt3dadd( -25.9725, 125.865, 36.1111, 1.33 ) }
    dend_4 { pt3dadd( -26.3517, 127.512, 37.5508, 0.15 ) }
    dend_4 { pt3dadd( -26.632, 128.723, 38.6492, 0.15 ) }
    dend_4 { pt3dadd( -26.6938, 128.994, 38.9008, 0.15 ) }
    dend_4 { pt3dadd( -26.9175, 129.866, 39.7213, 0.74 ) }
    dend_4 { pt3dadd( -27.236, 130.985, 40.7597, 0.15 ) }
    dend_4 { pt3dadd( -27.5978, 132.122, 41.8146, 0.66 ) }
    dend_4 { pt3dadd( -27.8895, 132.859, 42.47, 1.18 ) }
    dend_4 { pt3dadd( -28.0084, 133.122, 42.7062, 1.18 ) }
    dend_4 { pt3dadd( -28.5716, 134.19, 43.7796, 0.22 ) }
    dend_4 { pt3dadd( -28.9925, 134.884, 44.4264, 0.37 ) }
    dend_4 { pt3dadd( -29.1633, 135.124, 44.6592, 0.37 ) }
    dend_4 { pt3dadd( -30.0018, 136.16, 45.767, 0.15 ) }
    dend_4 { pt3dadd( -30.9013, 137.179, 46.9784, 0.15 ) }
    dend_4 { pt3dadd( -31.8896, 138.21, 48.1948, 0.37 ) }
    dend_4 { pt3dadd( -33.3593, 139.716, 49.8721, 0.22 ) }
    dend_4 { pt3dadd( -34.6479, 141.021, 51.3372, 0.44 ) }
    dend_4 { pt3dadd( -35.5309, 141.957, 52.3512, 0.44 ) }
    dend_4 { pt3dadd( -36.0483, 142.538, 52.9318, 0.44 ) }
    dend_4 { pt3dadd( -36.9225, 143.658, 53.9934, 0.22 ) }
    dend_4 { pt3dadd( -37.6831, 144.786, 55.1326, 0.15 ) }
    dend_4 { pt3dadd( -38.3678, 145.955, 56.4265, 0.15 ) }
    dend_4 { pt3dadd( -38.6486, 146.524, 56.9979, 0.81 ) }
    dend_4 { pt3dadd( -38.878, 147.058, 57.5235, 0.29 ) }
    dend_4 { pt3dadd( -39.3399, 148.349, 58.8182, 0.15 ) }
    dend_4 { pt3dadd( -39.6065, 149.351, 59.9228, 0.15 ) }
    dend_4 { pt3dadd( -39.7209, 149.939, 60.6303, 0.15 ) }
    dend_4 { pt3dadd( -39.7818, 150.394, 61.1822, 0.52 ) }
    dend_4 { pt3dadd( -39.7942, 150.57, 61.392, 0.52 ) }
    dend_4 { pt3dadd( -39.8129, 151.327, 62.2955, 0.22 ) }
    dend_4 { pt3dadd( -39.8263, 152.786, 63.931, 0.22 ) }
    dend_4 { pt3dadd( -39.8117, 153.955, 65.1611, 0.22 ) }
    dend_4 { pt3dadd( -39.7927, 154.687, 65.9669, 0.88 ) }
    dend_4 { pt3dadd( -39.7873, 155.808, 67.2468, 0.15 ) }
    dend_4 { pt3dadd( -39.8314, 157.027, 68.6158, 0.52 ) }
    dend_4 { pt3dadd( -39.8742, 157.529, 69.1559, 0.52 ) }
    dend_4 { pt3dadd( -39.963, 158.179, 69.7527, 0.15 ) }
    dend_4 { pt3dadd( -40.2276, 159.698, 70.9235, 0.15 ) }
    dend_4 { pt3dadd( -40.4286, 160.705, 71.6581, 0.15 ) }
    dend_4 { pt3dadd( -40.6026, 161.501, 72.1806, 0.59 ) }
    dend_4 { pt3dadd( -40.6912, 161.956, 72.4243, 1.25 ) }
    dend_4 { pt3dadd( -40.8017, 162.634, 72.7442, 1.25 ) }
    dend_4 { pt3dadd( -40.9487, 164.104, 73.2983, 0.22 ) }
    dend_4 { pt3dadd( -40.9761, 166.087, 73.7991, 0.22 ) }
    dend_4 { pt3dadd( -40.9308, 166.828, 73.9499, 0.22 ) }
    dend_4 { pt3dadd( -40.8399, 167.679, 74.1004, 0.44 ) }
    dend_4 { pt3dadd( -40.7759, 168.172, 74.1666, 0.59 ) }
    dend_4 { pt3dadd( -40.581, 169.566, 74.363, 0.22 ) }
    dend_4 { pt3dadd( -40.3067, 171.28, 74.5873, 0.15 ) }
    dend_4 { pt3dadd( -40.1235, 172.343, 74.6985, 0.15 ) }
    dend_4 { pt3dadd( -39.9879, 173.246, 74.8012, 0.66 ) }
    dend_4 { pt3dadd( -39.7725, 175.136, 75.0185, 0.22 ) }
    dend_4 { pt3dadd( -39.6096, 177.23, 75.2979, 0.22 ) }
    dend_4 { pt3dadd( -39.5844, 178.118, 75.4295, 0.59 ) }
    dend_4 { pt3dadd( -39.5976, 179.1, 75.5847, 0.88 ) }
    dend_4 { pt3dadd( -39.705, 181.478, 75.9524, 0.15 ) }
    dend_4 { pt3dadd( -39.8174, 182.88, 76.2039, 0.15 ) }
    dend_4 { pt3dadd( -39.921, 183.658, 76.3469, 0.15 ) }
    dend_4 { pt3dadd( -40.0667, 184.481, 76.4781, 0.52 ) }
    dend_4 { pt3dadd( -40.1524, 184.887, 76.5757, 0.52 ) }
    dend_4 { pt3dadd( -40.4649, 186.283, 77.0459, 0.22 ) }
    dend_4 { pt3dadd( -40.7287, 187.472, 77.5925, 0.22 ) }
    dend_4 { pt3dadd( -40.9764, 188.913, 78.3607, 0.22 ) }
    dend_4 { pt3dadd( -41.0957, 189.914, 78.9391, 0.07 ) }
    dend_4 { pt3dadd( -41.2195, 191.393, 79.8491, 0.07 ) }
    dend_4 { pt3dadd( -41.2689, 192.133, 80.3135, 0.44 ) }
    dend_4 { pt3dadd( -41.3165, 193.096, 80.9174, 0.74 ) }
    dend_4 { pt3dadd( -41.3374, 194.604, 81.729, 0.15 ) }
    dend_4 { pt3dadd( -41.2968, 195.663, 82.2805, 0.15 ) }
    dend_4 { pt3dadd( -41.2296, 196.761, 82.7801, 0.37 ) }
    dend_4 { pt3dadd( -41.19, 197.319, 82.9827, 1.47 ) }
    dend_4 { pt3dadd( -41.1445, 197.957, 83.1829, 1.47 ) }
    dend_4 { pt3dadd( -40.9967, 199.846, 83.6734, 0.07 ) }
    dend_4 { pt3dadd( -40.8489, 201.781, 84.1531, 0.07 ) }
    dend_4 { pt3dadd( -40.777, 202.664, 84.3687, 0.07 ) }
    dend_4 { pt3dadd( -40.7254, 203.241, 84.516, 0.29 ) }
    dend_4 { pt3dadd( -40.6611, 203.961, 84.7049, 0.29 ) }
    dend_4 { pt3dadd( -40.5542, 205.19, 85.0203, 0.07 ) }
    dend_4 { pt3dadd( -40.4801, 206.379, 85.3761, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_4 { pt3dadd( -40.4627, 206.767, 85.4911, 0.07 ) }
    dend_4 { pt3dadd( -40.4309, 207.396, 85.7007, 0.44 ) }
    dend_4 { pt3dadd( -40.4066, 207.878, 85.8713, 0.44 ) }
    dend_4 { pt3dadd( -40.3548, 209.147, 86.3101, 0.15 ) }
    dend_4 { pt3dadd( -40.3178, 210.701, 86.6726, 0.15 ) }
    dend_4 { pt3dadd( -40.313, 211.2, 86.7205, 0.44 ) }
    dend_4 { pt3dadd( -40.3225, 211.773, 86.7252, 0.44 ) }
    dend_4 { pt3dadd( -40.3362, 212.121, 86.6982, 0.44 ) }
    dend_4 { pt3dadd( -40.4042, 213.418, 86.4184, 0.15 ) }
    dend_4 { pt3dadd( -40.5169, 215.072, 85.8789, 0.15 ) }
    dend_4 { pt3dadd( -40.5524, 215.713, 85.6355, 0.44 ) }
    dend_4 { pt3dadd( -40.5774, 216.681, 85.3668, 0.59 ) }
    dend_4 { pt3dadd( -40.555, 218.248, 85.1962, 0.15 ) }
    dend_4 { pt3dadd( -40.4685, 219.762, 85.2865, 0.15 ) }
    dend_4 { pt3dadd( -40.4158, 220.427, 85.4343, 0.15 ) }
    dend_4 { pt3dadd( -40.3137, 221.693, 85.8498, 0.29 ) }
    dend_4 { pt3dadd( -40.1312, 223.998, 86.6985, 0.22 ) }
    dend_4 { pt3dadd( -39.9752, 226.059, 87.5312, 0.22 ) }
    dend_4 { pt3dadd( -39.8755, 227.772, 88.1982, 0.07 ) }
    dend_4 { pt3dadd( -39.836, 229.011, 88.691, 0.07 ) }
    dend_4 { pt3dadd( -39.8275, 230.356, 89.1759, 0.07 ) }
    dend_4 { pt3dadd( -39.8651, 231.311, 89.4891, 0.29 ) }
    dend_4 { pt3dadd( -39.9172, 231.865, 89.6261, 0.29 ) }
    dend_4 { pt3dadd( -40.159, 233.628, 90.1499, 0.15 ) }
    dend_4 { pt3dadd( -40.4817, 235.681, 91.0989, 0.15 ) }
    dend_4 { pt3dadd( -40.5825, 236.314, 91.4678, 0.52 ) }
    dend_4 { pt3dadd( -40.7748, 237.263, 92.125, 0.52 ) }
    dend_4 { pt3dadd( -41.0396, 238.193, 92.84, 0.22 ) }
    dend_4 { pt3dadd( -41.6632, 239.788, 94.1104, 0.22 ) }
    dend_4 { pt3dadd( -41.9683, 240.407, 94.6089, 0.22 ) }
    dend_4 { pt3dadd( -42.4482, 241.16, 95.0949, 0.96 ) }
    dend_4 { pt3dadd( -43.0829, 242.015, 95.54, 0.15 ) }
    dend_4 { pt3dadd( -43.8641, 242.987, 95.8748, 0.15 ) }
    dend_4 { pt3dadd( -44.6624, 243.927, 96.1005, 0.29 ) }
    dend_4 { pt3dadd( -45.1438, 244.485, 96.1645, 0.22 ) }
    dend_4 { pt3dadd( -45.7894, 245.241, 96.2281, 0.37 ) }
    dend_4 { pt3dadd( -46.1615, 245.696, 96.2629, 0.37 ) }
    dend_4 { pt3dadd( -46.9431, 246.739, 96.3436, 0.15 ) }
    dend_4 { pt3dadd( -47.4008, 247.378, 96.3869, 0.15 ) }
    dend_4 { pt3dadd( -47.8101, 247.945, 96.4292, 0.52 ) }
    dend_4 { pt3dadd( -48.3949, 248.703, 96.4831, 0.88 ) }
    dend_4 { pt3dadd( -49.4939, 250.014, 96.5568, 0.15 ) }
    dend_4 { pt3dadd( -50.3499, 250.963, 96.6167, 0.15 ) }
    dend_4 { pt3dadd( -50.672, 251.292, 96.6433, 0.37 ) }
    dend_4 { pt3dadd( -51.2608, 251.872, 96.6956, 0.66 ) }
    dend_4 { pt3dadd( -51.9925, 252.579, 96.7285, 0.22 ) }
    dend_4 { pt3dadd( -53.1048, 253.639, 96.7675, 0.15 ) }
    dend_4 { pt3dadd( -54.0601, 254.56, 96.7878, 0.44 ) }
    dend_4 { pt3dadd( -55.1867, 255.674, 96.7891, 0.44 ) }
    dend_4 { pt3dadd( -56.3345, 256.894, 96.7524, 0.07 ) }
    dend_4 { pt3dadd( -57.3812, 258.099, 96.6798, 0.07 ) }
    dend_4 { pt3dadd( -57.8262, 258.663, 96.6271, 0.15 ) }
    dend_4 { pt3dadd( -58.3539, 259.382, 96.593, 0.59 ) }
    dend_4 { pt3dadd( -58.5945, 259.722, 96.5578, 0.59 ) }
    dend_4 { pt3dadd( -59.4341, 260.969, 96.4033, 0.07 ) }
    dend_4 { pt3dadd( -59.888, 261.658, 96.3298, 0.15 ) }
    dend_4 { pt3dadd( -60.6587, 262.798, 96.3305, 0.07 ) }
    dend_4 { pt3dadd( -61.7117, 264.307, 96.3769, 0.07 ) }
    dend_4 { pt3dadd( -62.8883, 265.942, 96.5104, 0.44 ) }
    dend_4 { pt3dadd( -63.1584, 266.313, 96.5552, 0.44 ) }
    dend_4 { pt3dadd( -64.1498, 267.632, 96.901, 0.15 ) }
    dend_4 { pt3dadd( -64.9786, 268.748, 97.279, 0.15 ) }
    dend_4 { pt3dadd( -65.4299, 269.363, 97.517, 0.59 ) }
    dend_4 { pt3dadd( -65.8022, 269.863, 97.7207, 0.59 ) }
    dend_4 { pt3dadd( -66.6304, 270.928, 98.3387, 0.15 ) }
    dend_4 { pt3dadd( -67.6368, 272.21, 99.1377, 0.15 ) }
    dend_4 { pt3dadd( -68.074, 272.757, 99.4905, 0.29 ) }
    dend_4 { pt3dadd( -68.4759, 273.277, 99.7789, 0.29 ) }
    dend_4 { pt3dadd( -69.3526, 274.438, 100.478, 0.07 ) }
    dend_4 { pt3dadd( -70.2542, 275.679, 101.234, 0.07 ) }
    dend_4 { pt3dadd( -70.6656, 276.28, 101.585, 0.66 ) }
    dend_4 { pt3dadd( -70.927, 276.701, 101.792, 0.66 ) }
    dend_4 { pt3dadd( -71.7139, 278.04, 102.506, 0.15 ) }
    dend_4 { pt3dadd( -72.4341, 279.364, 103.208, 0.15 ) }
    dend_4 { pt3dadd( -72.789, 280.091, 103.566, 0.44 ) }
    dend_4 { pt3dadd( -73.0379, 280.656, 103.81, 0.59 ) }
    dend_4 { pt3dadd( -73.6065, 282.134, 104.403, 0.15 ) }
    dend_4 { pt3dadd( -74.1066, 283.878, 104.962, 0.15 ) }
    dend_4 { pt3dadd( -74.2077, 284.539, 105.113, 0.37 ) }
    dend_4 { pt3dadd( -74.2305, 285.385, 105.182, 0.81 ) }
    dend_4 { pt3dadd( -74.1501, 286.309, 105.178, 0.44 ) }
    dend_4 { pt3dadd( -73.9016, 287.648, 105.063, 0.15 ) }
    dend_4 { pt3dadd( -73.4488, 289.32, 104.795, 0.15 ) }
    dend_4 { pt3dadd( -73.0738, 290.655, 104.522, 0.15 ) }
    dend_4 { pt3dadd( -72.7565, 291.871, 104.278, 0.15 ) }
    dend_4 { pt3dadd( -72.5343, 292.833, 104.092, 0.52 ) }
    dend_4 { pt3dadd( -72.3621, 293.648, 103.935, 0.52 ) }
    dend_4 { pt3dadd( -72.0591, 295.42, 103.618, 0.22 ) }
    dend_4 { pt3dadd( -71.9478, 296.632, 103.456, 0.22 ) }
    dend_4 { pt3dadd( -71.9384, 297.631, 103.349, 0.22 ) }
    dend_4 { pt3dadd( -71.9697, 298.386, 103.316, 0.29 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 91/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 7.72822, 32.5003, -2.74616, 1.62 ) }
    dend_1 { pt3dadd( 8.30285, 33.4125, -2.19976, 1.62 ) }
    dend_1 { pt3dadd( 8.7039, 34.059, -1.79536, 1.4 ) }
    dend_1 { pt3dadd( 9.37584, 35.1421, -1.1178, 1.4 ) }
    dend_1 { pt3dadd( 10.3016, 36.6343, -0.184361, 1.25 ) }
    dend_1 { pt3dadd( 10.9901, 37.7442, 0.50992, 1.33 ) }
    dend_1 { pt3dadd( 11.6531, 38.813, 1.17851, 1.55 ) }
    dend_1 { pt3dadd( 12.118, 39.6547, 1.76797, 1.92 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 99/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -23.6209, 34.5989, 0.0, 0.670035 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    axon_1 { pt3dadd( -31.8844, 47.1175, 0.0, 0.670035 ) }
    axon_1 { pt3dadd( -40.1479, 59.636, 0.0, 0.670035 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 2/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 8.96717, -38.8663, -5.48713, 1.99 ) }
    dend_53 { pt3dadd( 9.24002, -42.4418, -5.41856, 1.99 ) }
    dend_53 { pt3dadd( 9.35971, -44.3805, -5.49405, 1.7 ) }
    dend_53 { pt3dadd( 9.51928, -47.1969, -5.68365, 1.47 ) }
    dend_53 { pt3dadd( 9.59527, -49.3781, -5.86517, 1.92 ) }
    dend_53 { pt3dadd( 9.62002, -51.3107, -6.07333, 1.84 ) }
    dend_53 { pt3dadd( 9.63762, -53.6483, -6.3393, 1.77 ) }
    dend_53 { pt3dadd( 9.6351, -55.3121, -6.55589, 2.06 ) }
    dend_53 { pt3dadd( 9.65389, -56.7113, -6.72059, 1.84 ) }
    dend_53 { pt3dadd( 9.70949, -58.4357, -6.89549, 1.77 ) }
    dend_53 { pt3dadd( 9.78494, -61.55, -7.1365, 1.7 ) }
    dend_53 { pt3dadd( 9.88078, -64.0473, -7.30255, 1.77 ) }
    dend_53 { pt3dadd( 10.0491, -67.2949, -7.44789, 1.84 ) }
    dend_53 { pt3dadd( 10.243, -70.1642, -7.46701, 2.06 ) }
    dend_53 { pt3dadd( 10.3926, -71.901, -7.46234, 2.14 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 17/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 8.96717, -38.8663, -5.48713, 1.25 ) }
    dend_52 { pt3dadd( 8.41321, -39.152, -5.01858, 1.25 ) }
    dend_52 { pt3dadd( 7.54226, -39.7134, -4.21117, 0.66 ) }
    dend_52 { pt3dadd( 7.07905, -40.0718, -3.73038, 0.81 ) }
    dend_52 { pt3dadd( 6.3086, -40.7945, -2.87026, 0.96 ) }
    dend_52 { pt3dadd( 5.73532, -41.4096, -2.21904, 0.66 ) }
    dend_52 { pt3dadd( 5.37677, -41.8145, -1.83979, 0.37 ) }
    dend_52 { pt3dadd( 4.94155, -42.3964, -1.36589, 0.52 ) }
    dend_52 { pt3dadd( 4.58308, -42.9229, -0.970664, 0.44 ) }
    dend_52 { pt3dadd( 4.18693, -43.4734, -0.549381, 0.44 ) }
    dend_52 { pt3dadd( 3.70207, -44.0743, -0.105951, 0.52 ) }
    dend_52 { pt3dadd( 3.14669, -44.6251, 0.356656, 0.52 ) }
    dend_52 { pt3dadd( 2.50801, -45.1347, 0.86745, 0.74 ) }
    dend_52 { pt3dadd( 1.78851, -45.5763, 1.44786, 0.59 ) }
    dend_52 { pt3dadd( 1.24901, -45.8396, 1.88017, 0.59 ) }
    dend_52 { pt3dadd( 0.682171, -46.0766, 2.35562, 0.37 ) }
    dend_52 { pt3dadd( 0.0454286, -46.3514, 2.96043, 0.37 ) }
    dend_52 { pt3dadd( -0.0786454, -46.412, 3.10037, 0.37 ) }
    dend_52 { pt3dadd( -0.420336, -46.6203, 3.54518, 0.37 ) }
    dend_52 { pt3dadd( -0.710516, -46.8459, 3.96228, 0.81 ) }
    dend_52 { pt3dadd( -1.0213, -47.1618, 4.48798, 1.03 ) }
    dend_52 { pt3dadd( -1.41313, -47.6211, 5.22381, 0.37 ) }
    dend_52 { pt3dadd( -1.83386, -48.1761, 6.03742, 0.37 ) }
    dend_52 { pt3dadd( -2.14584, -48.6265, 6.66212, 0.59 ) }
    dend_52 { pt3dadd( -2.29461, -48.8529, 6.97385, 0.88 ) }
    dend_52 { pt3dadd( -2.6573, -49.4026, 7.7324, 0.44 ) }
    dend_52 { pt3dadd( -3.11289, -50.0765, 8.64079, 0.29 ) }
    dend_52 { pt3dadd( -3.54551, -50.7092, 9.41397, 0.29 ) }
    dend_52 { pt3dadd( -3.80108, -51.0862, 9.80879, 0.22 ) }
    dend_52 { pt3dadd( -4.19126, -51.6092, 10.3248, 0.22 ) }
    dend_52 { pt3dadd( -4.4493, -51.9317, 10.63, 0.44 ) }
    dend_52 { pt3dadd( -4.98916, -52.5686, 11.1756, 1.11 ) }
    dend_52 { pt3dadd( -5.35481, -52.9603, 11.5011, 1.11 ) }
    dend_52 { pt3dadd( -5.93324, -53.5, 11.9967, 0.96 ) }
    dend_52 { pt3dadd( -6.7493, -54.2092, 12.7093, 0.22 ) }
    dend_52 { pt3dadd( -7.10354, -54.5167, 13.0267, 0.22 ) }
    dend_52 { pt3dadd( -7.36385, -54.7371, 13.2812, 0.59 ) }
    dend_52 { pt3dadd( -7.88661, -55.1702, 13.8107, 0.81 ) }
    dend_52 { pt3dadd( -8.45685, -55.6535, 14.432, 0.22 ) }
    dend_52 { pt3dadd( -8.92284, -56.0575, 14.9645, 0.22 ) }
    dend_52 { pt3dadd( -9.52465, -56.6041, 15.6499, 0.22 ) }
    dend_52 { pt3dadd( -10.0816, -57.1253, 16.2461, 0.22 ) }
    dend_52 { pt3dadd( -10.3479, -57.4013, 16.5148, 0.37 ) }
    dend_52 { pt3dadd( -10.6017, -57.6911, 16.7384, 0.37 ) }
    dend_52 { pt3dadd( -10.8907, -58.0399, 16.9528, 0.52 ) }
    dend_52 { pt3dadd( -11.1324, -58.3378, 17.1068, 1.18 ) }
    dend_52 { pt3dadd( -11.7461, -59.1361, 17.5015, 0.37 ) }
    dend_52 { pt3dadd( -12.4795, -60.1753, 17.9865, 0.22 ) }
    dend_52 { pt3dadd( -12.8962, -60.7934, 18.2702, 0.22 ) }
    dend_52 { pt3dadd( -13.1572, -61.1802, 18.4618, 0.81 ) }
    dend_52 { pt3dadd( -13.6836, -61.9596, 18.87, 0.81 ) }
    dend_52 { pt3dadd( -14.4303, -63.0342, 19.5042, 0.29 ) }
    dend_52 { pt3dadd( -14.9194, -63.6873, 19.9274, 0.29 ) }
    dend_52 { pt3dadd( -15.475, -64.347, 20.3986, 0.29 ) }
    dend_52 { pt3dadd( -16.2183, -65.1788, 21.0763, 0.29 ) }
    dend_52 { pt3dadd( -16.458, -65.4294, 21.3055, 0.74 ) }
    dend_52 { pt3dadd( -17.1087, -66.0603, 21.9712, 1.18 ) }
    dend_52 { pt3dadd( -17.7383, -66.6315, 22.6307, 0.44 ) }
    dend_52 { pt3dadd( -18.4296, -67.2443, 23.3891, 0.29 ) }
    dend_52 { pt3dadd( -19.0498, -67.7957, 24.0853, 0.29 ) }
    dend_52 { pt3dadd( -19.5361, -68.2494, 24.6264, 0.88 ) }
    dend_52 { pt3dadd( -20.1239, -68.8198, 25.2878, 0.96 ) }
    dend_52 { pt3dadd( -20.6551, -69.3593, 25.8726, 0.22 ) }
    dend_52 { pt3dadd( -20.9401, -69.6635, 26.1903, 0.15 ) }
    dend_52 { pt3dadd( -21.128, -69.8749, 26.3757, 0.22 ) }
    dend_52 { pt3dadd( -21.492, -70.2939, 26.6803, 0.15 ) }
    dend_52 { pt3dadd( -21.679, -70.5242, 26.8171, 0.15 ) }
    dend_52 { pt3dadd( -21.9244, -70.8438, 27.0026, 0.29 ) }
    dend_52 { pt3dadd( -22.1492, -71.1345, 27.1911, 0.29 ) }
    dend_52 { pt3dadd( -22.502, -71.5848, 27.5174, 0.15 ) }
    dend_52 { pt3dadd( -22.7367, -71.8823, 27.7522, 0.15 ) }
    dend_52 { pt3dadd( -22.9793, -72.1911, 28.0336, 0.22 ) }
    dend_52 { pt3dadd( -23.5101, -72.8823, 28.7578, 0.22 ) }
    dend_52 { pt3dadd( -23.7983, -73.2496, 29.1634, 0.66 ) }
    dend_52 { pt3dadd( -24.1697, -73.727, 29.6846, 1.4 ) }
    dend_52 { pt3dadd( -24.6011, -74.2874, 30.2687, 0.29 ) }
    dend_52 { pt3dadd( -25.1023, -74.9627, 30.929, 0.15 ) }
    dend_52 { pt3dadd( -25.6415, -75.7226, 31.6636, 0.15 ) }
    dend_52 { pt3dadd( -26.0929, -76.3662, 32.274, 0.15 ) }
    dend_52 { pt3dadd( -26.4566, -76.8763, 32.778, 0.15 ) }
    dend_52 { pt3dadd( -26.7419, -77.2716, 33.1646, 0.52 ) }
    dend_52 { pt3dadd( -27.227, -77.9494, 33.8011, 0.52 ) }
    dend_52 { pt3dadd( -27.7847, -78.7035, 34.4839, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_52 { pt3dadd( -28.3066, -79.4128, 35.113, 0.22 ) }
    dend_52 { pt3dadd( -28.6938, -79.9231, 35.5614, 0.22 ) }
    dend_52 { pt3dadd( -28.9657, -80.2634, 35.8609, 0.81 ) }
    dend_52 { pt3dadd( -29.3248, -80.7022, 36.2264, 0.88 ) }
    dend_52 { pt3dadd( -30.0197, -81.5231, 36.8509, 0.15 ) }
    dend_52 { pt3dadd( -30.3471, -81.9164, 37.1392, 0.15 ) }
    dend_52 { pt3dadd( -31.0211, -82.7695, 37.7447, 0.15 ) }
    dend_52 { pt3dadd( -31.5614, -83.4605, 38.2295, 0.15 ) }
    dend_52 { pt3dadd( -31.8834, -83.8703, 38.5089, 0.52 ) }
    dend_52 { pt3dadd( -32.3554, -84.4766, 38.9372, 0.81 ) }
    dend_52 { pt3dadd( -32.9122, -85.2177, 39.4573, 0.22 ) }
    dend_52 { pt3dadd( -33.3874, -85.8447, 39.8718, 0.15 ) }
    dend_52 { pt3dadd( -33.6704, -86.2128, 40.0914, 0.22 ) }
    dend_52 { pt3dadd( -34.5372, -87.2643, 40.5811, 0.15 ) }
    dend_52 { pt3dadd( -35.5042, -88.3484, 40.9461, 0.15 ) }
    dend_52 { pt3dadd( -35.9806, -88.8539, 41.0516, 1.03 ) }
    dend_52 { pt3dadd( -36.8161, -89.6741, 41.1012, 0.52 ) }
    dend_52 { pt3dadd( -37.5843, -90.3761, 41.0811, 0.37 ) }
    dend_52 { pt3dadd( -38.5971, -91.2645, 40.9852, 0.22 ) }
    dend_52 { pt3dadd( -39.56, -92.0665, 40.8243, 0.15 ) }
    dend_52 { pt3dadd( -40.0187, -92.4483, 40.725, 0.52 ) }
    dend_52 { pt3dadd( -41.1993, -93.4426, 40.4955, 0.15 ) }
    dend_52 { pt3dadd( -41.7878, -93.9405, 40.4279, 0.15 ) }
    dend_52 { pt3dadd( -42.0693, -94.1751, 40.4251, 0.44 ) }
    dend_52 { pt3dadd( -42.4345, -94.4748, 40.4813, 0.44 ) }
    dend_52 { pt3dadd( -43.2617, -95.1487, 40.7398, 0.15 ) }
    dend_52 { pt3dadd( -43.661, -95.4875, 40.9463, 0.22 ) }
    dend_52 { pt3dadd( -44.2627, -96.033, 41.3639, 0.07 ) }
    dend_52 { pt3dadd( -44.689, -96.4372, 41.6868, 0.81 ) }
    dend_52 { pt3dadd( -44.8671, -96.6065, 41.824, 0.81 ) }
    dend_52 { pt3dadd( -45.8693, -97.5731, 42.5892, 0.15 ) }
    dend_52 { pt3dadd( -46.9751, -98.6495, 43.37, 0.15 ) }
    dend_52 { pt3dadd( -47.3743, -99.053, 43.6255, 0.22 ) }
    dend_52 { pt3dadd( -47.7749, -99.4732, 43.8644, 0.88 ) }
    dend_52 { pt3dadd( -48.1903, -99.921, 44.1073, 1.33 ) }
    dend_52 { pt3dadd( -48.6672, -100.443, 44.3816, 0.22 ) }
    dend_52 { pt3dadd( -49.5407, -101.426, 44.8597, 0.15 ) }
    dend_52 { pt3dadd( -50.5712, -102.618, 45.3491, 0.15 ) }
    dend_52 { pt3dadd( -51.0535, -103.196, 45.5862, 0.15 ) }
    dend_52 { pt3dadd( -51.311, -103.522, 45.7305, 0.37 ) }
    dend_52 { pt3dadd( -51.5827, -103.879, 45.9106, 0.88 ) }
    dend_52 { pt3dadd( -52.1631, -104.637, 46.3382, 0.15 ) }
    dend_52 { pt3dadd( -52.7324, -105.319, 46.7587, 0.15 ) }
    dend_52 { pt3dadd( -53.1601, -105.771, 47.0417, 0.15 ) }
    dend_52 { pt3dadd( -54.0173, -106.585, 47.5471, 0.22 ) }
    dend_52 { pt3dadd( -54.5309, -107.033, 47.8259, 0.66 ) }
    dend_52 { pt3dadd( -54.9948, -107.405, 48.0835, 0.81 ) }
    dend_52 { pt3dadd( -56.0212, -108.18, 48.6321, 0.15 ) }
    dend_52 { pt3dadd( -56.7789, -108.741, 49.0859, 0.15 ) }
    dend_52 { pt3dadd( -57.2656, -109.099, 49.4324, 0.37 ) }
    dend_52 { pt3dadd( -57.8417, -109.512, 49.8834, 0.81 ) }
    dend_52 { pt3dadd( -58.5537, -110.016, 50.4952, 0.59 ) }
    dend_52 { pt3dadd( -59.7011, -110.819, 51.5804, 0.15 ) }
    dend_52 { pt3dadd( -60.6932, -111.507, 52.5955, 0.29 ) }
    dend_52 { pt3dadd( -61.5426, -112.073, 53.468, 0.29 ) }
    dend_52 { pt3dadd( -62.1633, -112.494, 54.0648, 0.15 ) }
    dend_52 { pt3dadd( -62.8776, -113.015, 54.7295, 0.15 ) }
    dend_52 { pt3dadd( -63.2289, -113.296, 55.0218, 0.44 ) }
    dend_52 { pt3dadd( -63.54, -113.561, 55.2551, 0.52 ) }
    dend_52 { pt3dadd( -63.9529, -113.947, 55.4965, 0.29 ) }
    dend_52 { pt3dadd( -64.7974, -114.823, 55.9975, 0.15 ) }
    dend_52 { pt3dadd( -65.6202, -115.771, 56.6056, 0.15 ) }
    dend_52 { pt3dadd( -65.9513, -116.187, 56.8877, 0.66 ) }
    dend_52 { pt3dadd( -66.3137, -116.66, 57.2226, 0.66 ) }
    dend_52 { pt3dadd( -66.737, -117.24, 57.6695, 0.15 ) }
    dend_52 { pt3dadd( -67.2993, -118.032, 58.3104, 0.15 ) }
    dend_52 { pt3dadd( -67.7092, -118.617, 58.7976, 0.15 ) }
    dend_52 { pt3dadd( -67.98, -119.014, 59.0903, 0.81 ) }
    dend_52 { pt3dadd( -68.1546, -119.289, 59.2724, 0.81 ) }
    dend_52 { pt3dadd( -68.8329, -120.422, 59.9312, 0.15 ) }
    dend_52 { pt3dadd( -69.108, -120.888, 60.1936, 0.15 ) }
    dend_52 { pt3dadd( -69.2168, -121.077, 60.2889, 0.22 ) }
    dend_52 { pt3dadd( -69.8622, -122.215, 60.8293, 0.15 ) }
    dend_52 { pt3dadd( -70.537, -123.373, 61.3923, 0.15 ) }
    dend_52 { pt3dadd( -70.8541, -123.91, 61.6528, 0.37 ) }
    dend_52 { pt3dadd( -71.5354, -125.011, 62.2406, 0.22 ) }
    dend_52 { pt3dadd( -71.8796, -125.54, 62.5725, 0.37 ) }
    dend_52 { pt3dadd( -72.2724, -126.118, 62.9682, 0.37 ) }
    dend_52 { pt3dadd( -72.6095, -126.596, 63.3209, 0.37 ) }
    dend_52 { pt3dadd( -72.8866, -126.971, 63.6024, 0.59 ) }
    dend_52 { pt3dadd( -73.7099, -128.08, 64.4639, 0.15 ) }
    dend_52 { pt3dadd( -74.4413, -129.082, 65.2507, 0.07 ) }
    dend_52 { pt3dadd( -74.8709, -129.691, 65.747, 0.07 ) }
    dend_52 { pt3dadd( -75.141, -130.101, 66.0767, 0.59 ) }
    dend_52 { pt3dadd( -75.3449, -130.436, 66.3304, 0.59 ) }
    dend_52 { pt3dadd( -75.9154, -131.527, 67.1185, 0.15 ) }
    dend_52 { pt3dadd( -76.2151, -132.192, 67.5585, 0.15 ) }
    dend_52 { pt3dadd( -76.3974, -132.638, 67.8487, 0.22 ) }
    dend_52 { pt3dadd( -76.5565, -133.046, 68.0995, 0.59 ) }
    dend_52 { pt3dadd( -76.6566, -133.317, 68.2493, 0.59 ) }
    dend_52 { pt3dadd( -77.1393, -134.697, 68.8954, 0.15 ) }
    dend_52 { pt3dadd( -77.3331, -135.24, 69.0891, 0.15 ) }
    dend_52 { pt3dadd( -77.6226, -136.013, 69.3307, 0.15 ) }
    dend_52 { pt3dadd( -77.9316, -136.786, 69.5181, 0.15 ) }
    dend_52 { pt3dadd( -78.1048, -137.211, 69.5902, 0.29 ) }
    dend_52 { pt3dadd( -78.3205, -137.728, 69.6372, 0.52 ) }
    dend_52 { pt3dadd( -78.6578, -138.501, 69.5736, 0.15 ) }
    dend_52 { pt3dadd( -78.8597, -138.965, 69.4844, 0.15 ) }
    dend_52 { pt3dadd( -79.2705, -139.895, 69.1804, 0.15 ) }
    dend_52 { pt3dadd( -79.4273, -140.244, 69.0394, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( -79.5397, -140.488, 68.9264, 0.59 ) }
    dend_52 { pt3dadd( -80.1839, -141.936, 68.334, 0.07 ) }
    dend_52 { pt3dadd( -80.7092, -143.219, 67.9809, 0.07 ) }
    dend_52 { pt3dadd( -81.1985, -144.508, 67.8578, 0.15 ) }
    dend_52 { pt3dadd( -81.2694, -144.704, 67.8753, 0.29 ) }
    dend_52 { pt3dadd( -81.5359, -145.412, 68.0705, 0.52 ) }
    dend_52 { pt3dadd( -82.1782, -147.071, 68.8867, 0.07 ) }
    dend_52 { pt3dadd( -82.6904, -148.371, 69.8002, 0.07 ) }
    dend_52 { pt3dadd( -82.9616, -149.046, 70.3565, 0.07 ) }
    dend_52 { pt3dadd( -83.0851, -149.323, 70.5929, 0.29 ) }
    dend_52 { pt3dadd( -83.6404, -150.462, 71.5086, 0.07 ) }
    dend_52 { pt3dadd( -84.1273, -151.361, 72.1651, 0.07 ) }
    dend_52 { pt3dadd( -84.2956, -151.635, 72.319, 0.37 ) }
    dend_52 { pt3dadd( -84.4961, -151.932, 72.4596, 0.52 ) }
    dend_52 { pt3dadd( -85.2249, -152.981, 72.906, 0.15 ) }
    dend_52 { pt3dadd( -85.5966, -153.521, 73.1346, 0.15 ) }
    dend_52 { pt3dadd( -86.0169, -154.146, 73.3758, 0.22 ) }
    dend_52 { pt3dadd( -86.3191, -154.6, 73.541, 0.37 ) }
    dend_52 { pt3dadd( -86.6069, -155.046, 73.707, 0.44 ) }
    dend_52 { pt3dadd( -86.9409, -155.599, 73.9099, 0.22 ) }
    dend_52 { pt3dadd( -87.4389, -156.527, 74.2269, 0.66 ) }
    dend_52 { pt3dadd( -87.8681, -157.423, 74.513, 0.22 ) }
    dend_52 { pt3dadd( -88.2611, -158.338, 74.816, 0.07 ) }
    dend_52 { pt3dadd( -88.4317, -158.767, 74.958, 0.15 ) }
    dend_52 { pt3dadd( -88.7317, -159.595, 75.2212, 0.59 ) }
    dend_52 { pt3dadd( -89.1527, -160.826, 75.5861, 0.07 ) }
    dend_52 { pt3dadd( -89.4304, -161.674, 75.81, 0.07 ) }
    dend_52 { pt3dadd( -89.7972, -162.802, 76.1111, 0.15 ) }
    dend_52 { pt3dadd( -89.9525, -163.257, 76.2354, 0.37 ) }
    dend_52 { pt3dadd( -90.203, -163.924, 76.4198, 0.37 ) }
    dend_52 { pt3dadd( -90.4913, -164.612, 76.6059, 0.37 ) }
    dend_52 { pt3dadd( -90.8242, -165.348, 76.7882, 0.07 ) }
    dend_52 { pt3dadd( -91.3368, -166.452, 77.0217, 0.07 ) }
    dend_52 { pt3dadd( -91.5743, -166.971, 77.1157, 0.52 ) }
    dend_52 { pt3dadd( -91.7016, -167.272, 77.1683, 0.52 ) }
    dend_52 { pt3dadd( -92.1333, -168.373, 77.3957, 0.07 ) }
    dend_52 { pt3dadd( -92.4909, -169.39, 77.6247, 0.07 ) }
    dend_52 { pt3dadd( -92.6615, -169.951, 77.7637, 0.52 ) }
    dend_52 { pt3dadd( -92.7611, -170.33, 77.8335, 0.52 ) }
    dend_52 { pt3dadd( -93.0537, -171.551, 78.0026, 0.07 ) }
    dend_52 { pt3dadd( -93.4027, -173.076, 78.1604, 0.07 ) }
    dend_52 { pt3dadd( -93.5466, -173.688, 78.2085, 0.22 ) }
    dend_52 { pt3dadd( -93.8732, -174.957, 78.2909, 0.07 ) }
    dend_52 { pt3dadd( -94.3493, -176.737, 78.3884, 0.07 ) }
    dend_52 { pt3dadd( -94.4589, -177.138, 78.4045, 0.37 ) }
    dend_52 { pt3dadd( -95.0251, -179.147, 78.4365, 0.07 ) }
    dend_52 { pt3dadd( -95.4945, -180.821, 78.4063, 0.07 ) }
    dend_52 { pt3dadd( -95.8806, -182.153, 78.3942, 0.07 ) }
    dend_52 { pt3dadd( -96.0545, -182.716, 78.4049, 0.44 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 49/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 25.0026, -29.4136, 4.28987, 1.03 ) }
    dend_46 { pt3dadd( 25.7967, -30.2688, 3.26766, 1.03 ) }
    dend_46 { pt3dadd( 26.8254, -31.3766, 1.94351, 1.03 ) }
    dend_46 { pt3dadd( 27.42, -32.0169, 1.1781, 1.11 ) }
    dend_46 { pt3dadd( 28.0717, -32.7187, 0.339241, 1.25 ) }
    dend_46 { pt3dadd( 28.5225, -33.2042, -0.241068, 1.47 ) }
    dend_46 { pt3dadd( 29.1894, -33.9223, -1.09943, 1.84 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 25.0026, -29.4136, 4.28987, 1.25 ) }
    dend_43 { pt3dadd( 24.9662, -30.9329, 3.12023, 1.25 ) }
    dend_43 { pt3dadd( 24.9729, -32.8882, 1.8189, 0.81 ) }
    dend_43 { pt3dadd( 25.0091, -33.9494, 1.2156, 0.74 ) }
    dend_43 { pt3dadd( 25.0779, -34.9887, 0.706728, 0.59 ) }
    dend_43 { pt3dadd( 25.1421, -35.6088, 0.449635, 0.66 ) }
    dend_43 { pt3dadd( 25.2584, -36.4718, 0.149539, 0.52 ) }
    dend_43 { pt3dadd( 25.4654, -37.4091, 0.0120081, 0.88 ) }
    dend_43 { pt3dadd( 25.7112, -38.2407, 0.0469722, 0.52 ) }
    dend_43 { pt3dadd( 25.936, -38.9273, 0.145587, 0.44 ) }
    dend_43 { pt3dadd( 26.224, -39.729, 0.312803, 0.59 ) }
    dend_43 { pt3dadd( 26.4815, -40.413, 0.471066, 0.74 ) }
    dend_43 { pt3dadd( 26.7772, -41.1842, 0.669493, 0.59 ) }
    dend_43 { pt3dadd( 27.0252, -41.8241, 0.851763, 0.59 ) }
    dend_43 { pt3dadd( 27.2241, -42.3824, 1.0164, 0.96 ) }
    dend_43 { pt3dadd( 27.4272, -43.0325, 1.21876, 1.03 ) }
    dend_43 { pt3dadd( 27.6416, -43.8814, 1.45949, 0.66 ) }
    dend_43 { pt3dadd( 27.8328, -44.7539, 1.67688, 0.44 ) }
    dend_43 { pt3dadd( 27.926, -45.1865, 1.7609, 0.29 ) }
    dend_43 { pt3dadd( 28.0249, -45.5629, 1.81804, 0.29 ) }
    dend_43 { pt3dadd( 28.1515, -45.8703, 1.86604, 0.29 ) }
    dend_43 { pt3dadd( 28.582, -46.5897, 2.01768, 0.44 ) }
    dend_43 { pt3dadd( 28.9245, -47.0085, 2.14923, 0.59 ) }
    dend_43 { pt3dadd( 29.3782, -47.4833, 2.3412, 0.81 ) }
    dend_43 { pt3dadd( 29.9136, -48.0071, 2.59446, 0.74 ) }
    dend_43 { pt3dadd( 30.6235, -48.6771, 2.958, 0.59 ) }
    dend_43 { pt3dadd( 31.1559, -49.1943, 3.25927, 0.59 ) }
    dend_43 { pt3dadd( 31.712, -49.7679, 3.6129, 0.59 ) }
    dend_43 { pt3dadd( 32.2911, -50.4229, 4.01269, 0.88 ) }
    dend_43 { pt3dadd( 33.0013, -51.3333, 4.53141, 1.03 ) }
    dend_43 { pt3dadd( 33.5499, -52.1435, 4.94007, 0.88 ) }
    dend_43 { pt3dadd( 33.9828, -52.8577, 5.2597, 0.88 ) }
    dend_43 { pt3dadd( 34.3873, -53.568, 5.5514, 1.18 ) }
    dend_43 { pt3dadd( 34.8116, -54.3623, 5.87671, 0.74 ) }
    dend_43 { pt3dadd( 35.2594, -55.2602, 6.26006, 0.66 ) }
    dend_43 { pt3dadd( 35.6194, -56.0195, 6.60424, 0.66 ) }
    dend_43 { pt3dadd( 35.8525, -56.5718, 6.81955, 0.52 ) }
    dend_43 { pt3dadd( 36.1547, -57.3402, 7.07835, 0.52 ) }
    dend_43 { pt3dadd( 36.4922, -58.2398, 7.35806, 0.52 ) }
    dend_43 { pt3dadd( 36.7814, -59.0941, 7.59539, 0.59 ) }
    dend_43 { pt3dadd( 37.0072, -59.8462, 7.79589, 0.74 ) }
    dend_43 { pt3dadd( 37.5068, -61.6796, 8.24636, 0.96 ) }
    dend_43 { pt3dadd( 37.7073, -62.4461, 8.42231, 0.66 ) }
    dend_43 { pt3dadd( 37.9836, -63.5079, 8.63513, 1.62 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_43 { pt3dadd( 38.2912, -64.6231, 8.83588, 1.47 ) }
    dend_43 { pt3dadd( 38.5748, -65.5889, 9.02453, 0.81 ) }
    dend_43 { pt3dadd( 38.8789, -66.4878, 9.2691, 0.74 ) }
    dend_43 { pt3dadd( 39.2007, -67.2479, 9.56604, 0.74 ) }
    dend_43 { pt3dadd( 39.3923, -67.6445, 9.7321, 0.52 ) }
    dend_43 { pt3dadd( 39.6403, -68.0694, 9.92079, 0.29 ) }
    dend_43 { pt3dadd( 39.861, -68.3647, 10.0677, 0.29 ) }
    dend_43 { pt3dadd( 40.4791, -69.0815, 10.4394, 0.37 ) }
    dend_43 { pt3dadd( 41.0151, -69.6606, 10.7708, 0.59 ) }
    dend_43 { pt3dadd( 41.4647, -70.1682, 11.0643, 0.74 ) }
    dend_43 { pt3dadd( 41.9689, -70.7787, 11.3944, 0.74 ) }
    dend_43 { pt3dadd( 42.345, -71.2509, 11.6319, 0.44 ) }
    dend_43 { pt3dadd( 42.7949, -71.819, 11.9084, 0.59 ) }
    dend_43 { pt3dadd( 43.3314, -72.5328, 12.2256, 0.66 ) }
    dend_43 { pt3dadd( 43.7781, -73.1748, 12.5098, 0.66 ) }
    dend_43 { pt3dadd( 44.3118, -74.0579, 12.8273, 0.59 ) }
    dend_43 { pt3dadd( 44.852, -75.0722, 13.1299, 0.37 ) }
    dend_43 { pt3dadd( 45.1571, -75.7033, 13.298, 0.37 ) }
    dend_43 { pt3dadd( 45.4135, -76.3107, 13.4368, 0.74 ) }
    dend_43 { pt3dadd( 45.7463, -77.177, 13.6282, 0.29 ) }
    dend_43 { pt3dadd( 46.1723, -78.3444, 13.9334, 0.37 ) }
    dend_43 { pt3dadd( 46.3798, -78.9825, 14.1443, 0.59 ) }
    dend_43 { pt3dadd( 46.5677, -79.6152, 14.3882, 0.81 ) }
    dend_43 { pt3dadd( 46.8226, -80.4469, 14.7589, 1.03 ) }
    dend_43 { pt3dadd( 47.1646, -81.3285, 15.2851, 0.59 ) }
    dend_43 { pt3dadd( 47.4486, -81.9142, 15.7129, 0.37 ) }
    dend_43 { pt3dadd( 47.7359, -82.4514, 16.1567, 0.37 ) }
    dend_43 { pt3dadd( 47.9443, -82.8465, 16.4699, 0.59 ) }
    dend_43 { pt3dadd( 48.195, -83.3345, 16.8378, 1.33 ) }
    dend_43 { pt3dadd( 48.6374, -84.2904, 17.5086, 0.66 ) }
    dend_43 { pt3dadd( 48.8418, -84.8149, 17.8352, 0.44 ) }
    dend_43 { pt3dadd( 49.1041, -85.6064, 18.2813, 0.52 ) }
    dend_43 { pt3dadd( 49.3446, -86.4705, 18.7511, 0.37 ) }
    dend_43 { pt3dadd( 49.5306, -87.369, 19.2145, 0.37 ) }
    dend_43 { pt3dadd( 49.6185, -88.0954, 19.5656, 0.37 ) }
    dend_43 { pt3dadd( 49.6248, -88.4625, 19.7164, 0.37 ) }
    dend_43 { pt3dadd( 49.582, -89.2971, 20.036, 0.22 ) }
    dend_43 { pt3dadd( 49.5196, -89.8787, 20.2494, 0.22 ) }
    dend_43 { pt3dadd( 49.4141, -90.4775, 20.4349, 0.66 ) }
    dend_43 { pt3dadd( 49.2805, -91.0494, 20.5775, 0.88 ) }
    dend_43 { pt3dadd( 49.0458, -91.9703, 20.7696, 0.22 ) }
    dend_43 { pt3dadd( 48.9075, -92.4885, 20.8688, 0.29 ) }
    dend_43 { pt3dadd( 48.7385, -93.0861, 20.9538, 0.66 ) }
    dend_43 { pt3dadd( 48.5209, -93.8814, 21.034, 1.18 ) }
    dend_43 { pt3dadd( 48.3486, -94.558, 21.1007, 1.47 ) }
    dend_43 { pt3dadd( 48.1432, -95.4449, 21.1763, 0.96 ) }
    dend_43 { pt3dadd( 47.9583, -96.3453, 21.2607, 0.37 ) }
    dend_43 { pt3dadd( 47.7638, -97.4599, 21.372, 0.29 ) }
    dend_43 { pt3dadd( 47.6258, -98.4144, 21.4841, 0.29 ) }
    dend_43 { pt3dadd( 47.5472, -99.0948, 21.5839, 0.37 ) }
    dend_43 { pt3dadd( 47.4702, -99.978, 21.7273, 0.66 ) }
    dend_43 { pt3dadd( 47.4029, -101.029, 21.9298, 0.59 ) }
    dend_43 { pt3dadd( 47.3713, -101.952, 22.1315, 0.29 ) }
    dend_43 { pt3dadd( 47.3857, -103.049, 22.4115, 0.22 ) }
    dend_43 { pt3dadd( 47.4116, -103.697, 22.5747, 0.22 ) }
    dend_43 { pt3dadd( 47.442, -104.194, 22.6928, 0.66 ) }
    dend_43 { pt3dadd( 47.4952, -104.852, 22.8394, 0.96 ) }
    dend_43 { pt3dadd( 47.5496, -105.401, 22.9496, 0.81 ) }
    dend_43 { pt3dadd( 47.6708, -106.575, 23.1571, 0.29 ) }
    dend_43 { pt3dadd( 47.7528, -107.358, 23.2861, 0.29 ) }
    dend_43 { pt3dadd( 47.8277, -108.016, 23.4063, 0.29 ) }
    dend_43 { pt3dadd( 47.8936, -108.616, 23.5241, 0.81 ) }
    dend_43 { pt3dadd( 47.9917, -109.496, 23.7084, 1.11 ) }
    dend_43 { pt3dadd( 48.0736, -110.301, 23.8962, 0.81 ) }
    dend_43 { pt3dadd( 48.1207, -110.794, 24.021, 0.44 ) }
    dend_43 { pt3dadd( 48.2191, -111.817, 24.2759, 0.22 ) }
    dend_43 { pt3dadd( 48.2709, -112.527, 24.4223, 0.52 ) }
    dend_43 { pt3dadd( 48.3053, -113.132, 24.5275, 0.81 ) }
    dend_43 { pt3dadd( 48.3448, -114.021, 24.6623, 0.37 ) }
    dend_43 { pt3dadd( 48.3634, -114.674, 24.7433, 0.15 ) }
    dend_43 { pt3dadd( 48.3748, -115.514, 24.8225, 0.15 ) }
    dend_43 { pt3dadd( 48.373, -116.373, 24.8666, 0.22 ) }
    dend_43 { pt3dadd( 48.3756, -116.882, 24.8854, 0.81 ) }
    dend_43 { pt3dadd( 48.3874, -117.602, 24.9132, 0.52 ) }
    dend_43 { pt3dadd( 48.4141, -118.357, 24.9531, 0.29 ) }
    dend_43 { pt3dadd( 48.4632, -119.193, 25.0442, 0.22 ) }
    dend_43 { pt3dadd( 48.543, -120.071, 25.1969, 0.22 ) }
    dend_43 { pt3dadd( 48.5933, -120.507, 25.2953, 0.22 ) }
    dend_43 { pt3dadd( 48.664, -121.098, 25.4423, 0.59 ) }
    dend_43 { pt3dadd( 48.7195, -121.582, 25.5795, 0.52 ) }
    dend_43 { pt3dadd( 48.7955, -122.321, 25.822, 0.29 ) }
    dend_43 { pt3dadd( 48.8374, -122.902, 26.0357, 0.29 ) }
    dend_43 { pt3dadd( 48.867, -123.369, 26.2195, 0.88 ) }
    dend_43 { pt3dadd( 48.9038, -123.944, 26.4374, 1.7 ) }
    dend_43 { pt3dadd( 48.9381, -124.511, 26.6441, 1.84 ) }
    dend_43 { pt3dadd( 48.9694, -125.041, 26.8285, 1.84 ) }
    dend_43 { pt3dadd( 49.0082, -125.741, 27.0585, 0.96 ) }
    dend_43 { pt3dadd( 49.0842, -126.771, 27.4038, 0.29 ) }
    dend_43 { pt3dadd( 49.1466, -127.402, 27.6159, 0.29 ) }
    dend_43 { pt3dadd( 49.2346, -128.045, 27.8275, 0.29 ) }
    dend_43 { pt3dadd( 49.3254, -128.629, 27.9912, 0.29 ) }
    dend_43 { pt3dadd( 49.3977, -129.115, 28.0944, 0.66 ) }
    dend_43 { pt3dadd( 49.4656, -129.595, 28.1688, 1.18 ) }
    dend_43 { pt3dadd( 49.553, -130.311, 28.2516, 0.29 ) }
    dend_43 { pt3dadd( 49.6639, -131.237, 28.3317, 0.22 ) }
    dend_43 { pt3dadd( 49.7884, -132.199, 28.4268, 0.22 ) }
    dend_43 { pt3dadd( 49.9003, -133.096, 28.5352, 0.22 ) }
    dend_43 { pt3dadd( 49.9587, -133.596, 28.6095, 0.22 ) }
    dend_43 { pt3dadd( 50.0307, -134.3, 28.7363, 0.81 ) }
    dend_43 { pt3dadd( 50.0993, -134.851, 28.8711, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_43 { pt3dadd( 50.2319, -135.733, 29.1527, 0.15 ) }
    dend_43 { pt3dadd( 50.3717, -136.46, 29.4321, 0.15 ) }
    dend_43 { pt3dadd( 50.5168, -137.12, 29.6982, 0.15 ) }
    dend_43 { pt3dadd( 50.6346, -137.624, 29.8914, 0.96 ) }
    dend_43 { pt3dadd( 50.8171, -138.382, 30.1491, 1.47 ) }
    dend_43 { pt3dadd( 51.0188, -139.216, 30.3967, 0.81 ) }
    dend_43 { pt3dadd( 51.2585, -140.223, 30.6493, 0.29 ) }
    dend_43 { pt3dadd( 51.442, -141.004, 30.8352, 0.22 ) }
    dend_43 { pt3dadd( 51.5703, -141.61, 30.9737, 0.29 ) }
    dend_43 { pt3dadd( 51.6992, -142.31, 31.125, 0.81 ) }
    dend_43 { pt3dadd( 51.7652, -142.801, 31.21, 0.74 ) }
    dend_43 { pt3dadd( 51.8268, -143.407, 31.3025, 0.37 ) }
    dend_43 { pt3dadd( 51.8547, -143.86, 31.3673, 0.22 ) }
    dend_43 { pt3dadd( 51.8819, -144.38, 31.4558, 0.22 ) }
    dend_43 { pt3dadd( 51.8995, -144.61, 31.5013, 0.29 ) }
    dend_43 { pt3dadd( 51.9956, -145.363, 31.677, 0.37 ) }
    dend_43 { pt3dadd( 52.1052, -145.832, 31.8223, 0.37 ) }
    dend_43 { pt3dadd( 52.3239, -146.41, 32.0774, 0.22 ) }
    dend_43 { pt3dadd( 52.6254, -146.975, 32.4215, 0.37 ) }
    dend_43 { pt3dadd( 52.875, -147.37, 32.7055, 0.88 ) }
    dend_43 { pt3dadd( 53.1074, -147.707, 32.974, 1.84 ) }
    dend_43 { pt3dadd( 53.675, -148.46, 33.6109, 1.7 ) }
    dend_43 { pt3dadd( 54.3134, -149.229, 34.2847, 0.29 ) }
    dend_43 { pt3dadd( 54.88, -149.885, 34.8558, 0.29 ) }
    dend_43 { pt3dadd( 55.2209, -150.276, 35.2011, 0.29 ) }
    dend_43 { pt3dadd( 55.4367, -150.531, 35.4211, 0.74 ) }
    dend_43 { pt3dadd( 55.8261, -151.008, 35.8101, 0.81 ) }
    dend_43 { pt3dadd( 56.3047, -151.636, 36.2507, 0.29 ) }
    dend_43 { pt3dadd( 56.5878, -152.017, 36.4937, 0.15 ) }
    dend_43 { pt3dadd( 56.9982, -152.613, 36.8296, 0.15 ) }
    dend_43 { pt3dadd( 57.3132, -153.093, 37.0707, 0.22 ) }
    dend_43 { pt3dadd( 57.5223, -153.443, 37.2217, 0.37 ) }
    dend_43 { pt3dadd( 57.7583, -153.887, 37.3783, 0.88 ) }
    dend_43 { pt3dadd( 57.9682, -154.328, 37.4966, 0.59 ) }
    dend_43 { pt3dadd( 58.3255, -155.118, 37.6743, 0.15 ) }
    dend_43 { pt3dadd( 58.7892, -156.172, 37.9022, 0.15 ) }
    dend_43 { pt3dadd( 59.0329, -156.743, 38.0369, 0.15 ) }
    dend_43 { pt3dadd( 59.3516, -157.539, 38.2546, 0.22 ) }
    dend_43 { pt3dadd( 59.5893, -158.196, 38.4674, 0.22 ) }
    dend_43 { pt3dadd( 59.8661, -158.994, 38.7994, 0.29 ) }
    dend_43 { pt3dadd( 60.0737, -159.639, 39.1467, 0.88 ) }
    dend_43 { pt3dadd( 60.1544, -159.908, 39.3327, 0.88 ) }
    dend_43 { pt3dadd( 60.4144, -160.729, 40.0299, 0.22 ) }
    dend_43 { pt3dadd( 60.5998, -161.29, 40.5861, 0.37 ) }
    dend_43 { pt3dadd( 60.8269, -161.96, 41.339, 0.22 ) }
    dend_43 { pt3dadd( 60.9771, -162.408, 41.8748, 1.4 ) }
    dend_43 { pt3dadd( 61.1717, -162.978, 42.5683, 0.88 ) }
    dend_43 { pt3dadd( 61.4162, -163.697, 43.4598, 0.15 ) }
    dend_43 { pt3dadd( 61.5703, -164.202, 44.075, 0.15 ) }
    dend_43 { pt3dadd( 61.7364, -164.797, 44.7737, 0.15 ) }
    dend_43 { pt3dadd( 61.8057, -165.108, 45.106, 0.66 ) }
    dend_43 { pt3dadd( 61.9129, -165.691, 45.7076, 1.47 ) }
    dend_43 { pt3dadd( 61.9547, -166.108, 46.133, 1.25 ) }
    dend_43 { pt3dadd( 61.9577, -166.698, 46.7247, 0.29 ) }
    dend_43 { pt3dadd( 61.9143, -167.366, 47.3851, 0.22 ) }
    dend_43 { pt3dadd( 61.8591, -167.877, 47.9013, 0.59 ) }
    dend_43 { pt3dadd( 61.7522, -168.501, 48.5666, 0.15 ) }
    dend_43 { pt3dadd( 61.6168, -169.069, 49.2206, 0.15 ) }
    dend_43 { pt3dadd( 61.4887, -169.491, 49.7635, 0.15 ) }
    dend_43 { pt3dadd( 61.3114, -169.965, 50.4559, 0.22 ) }
    dend_43 { pt3dadd( 61.1626, -170.284, 50.9546, 0.59 ) }
    dend_43 { pt3dadd( 61.0384, -170.531, 51.3721, 0.88 ) }
    dend_43 { pt3dadd( 60.8892, -170.871, 51.9797, 0.22 ) }
    dend_43 { pt3dadd( 60.7274, -171.358, 52.8705, 0.15 ) }
    dend_43 { pt3dadd( 60.655, -171.62, 53.346, 0.52 ) }
    dend_43 { pt3dadd( 60.6081, -171.865, 53.7592, 1.11 ) }
    dend_43 { pt3dadd( 60.5237, -172.596, 54.8339, 0.07 ) }
    dend_43 { pt3dadd( 60.4988, -173.143, 55.5482, 0.07 ) }
    dend_43 { pt3dadd( 60.4778, -173.662, 56.1156, 0.07 ) }
    dend_43 { pt3dadd( 60.4679, -174.093, 56.5161, 1.03 ) }
    dend_43 { pt3dadd( 60.4439, -174.992, 57.2588, 0.15 ) }
    dend_43 { pt3dadd( 60.4262, -175.865, 57.8979, 0.15 ) }
    dend_43 { pt3dadd( 60.4139, -176.335, 58.2017, 0.44 ) }
    dend_43 { pt3dadd( 60.3529, -177.692, 59.0021, 0.22 ) }
    dend_43 { pt3dadd( 60.3092, -178.472, 59.4372, 0.22 ) }
    dend_43 { pt3dadd( 60.2428, -179.452, 59.9568, 0.22 ) }
    dend_43 { pt3dadd( 60.1517, -180.553, 60.4984, 0.07 ) }
    dend_43 { pt3dadd( 60.1044, -181.032, 60.7115, 0.07 ) }
    dend_43 { pt3dadd( 60.0084, -181.791, 60.9978, 0.07 ) }
    dend_43 { pt3dadd( 59.9484, -182.189, 61.1172, 0.07 ) }
    dend_43 { pt3dadd( 59.8837, -182.507, 61.1934, 0.52 ) }
    dend_43 { pt3dadd( 59.7606, -182.99, 61.2869, 0.52 ) }
    dend_43 { pt3dadd( 59.4425, -184.035, 61.4663, 0.07 ) }
    dend_43 { pt3dadd( 59.106, -185.063, 61.6426, 0.07 ) }
    dend_43 { pt3dadd( 58.9696, -185.461, 61.7145, 0.52 ) }
    dend_43 { pt3dadd( 58.7515, -186.101, 61.8858, 0.29 ) }
    dend_43 { pt3dadd( 58.3991, -187.181, 62.2687, 0.22 ) }
    dend_43 { pt3dadd( 58.2612, -187.629, 62.4654, 0.52 ) }
    dend_43 { pt3dadd( 58.1156, -188.146, 62.7201, 1.03 ) }
    dend_43 { pt3dadd( 57.9995, -188.592, 62.9605, 0.44 ) }
    dend_43 { pt3dadd( 57.6714, -189.909, 63.681, 0.07 ) }
    dend_43 { pt3dadd( 57.411, -191.04, 64.3121, 0.15 ) }
    dend_43 { pt3dadd( 57.2409, -191.851, 64.7822, 0.15 ) }
    dend_43 { pt3dadd( 57.1279, -192.449, 65.1418, 0.59 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 94/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -13.6003, -15.6135, -1.00976, 1.03 ) }
    dend_38 { pt3dadd( -14.1443, -17.5126, -1.88007, 1.03 ) }
    dend_38 { pt3dadd( -14.7812, -19.6998, -2.8917, 0.81 ) }
    dend_38 { pt3dadd( -15.055, -20.6041, -3.33105, 0.81 ) }
    dend_38 { pt3dadd( -15.4019, -21.7268, -3.86898, 0.88 ) }
    dend_38 { pt3dadd( -15.9853, -23.5639, -4.79666, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_38 { pt3dadd( -16.4327, -24.921, -5.47734, 1.03 ) }
    dend_38 { pt3dadd( -16.8672, -26.1686, -6.09461, 0.81 ) }
    dend_38 { pt3dadd( -17.4955, -28.0004, -6.94416, 1.33 ) }
    dend_38 { pt3dadd( -18.0094, -29.519, -7.61592, 1.18 ) }
    dend_38 { pt3dadd( -18.5459, -31.1387, -8.26528, 1.4 ) }
    dend_38 { pt3dadd( -19.2193, -33.1828, -8.98179, 0.59 ) }
    dend_38 { pt3dadd( -19.7046, -34.6712, -9.42493, 0.59 ) }
    dend_38 { pt3dadd( -20.122, -36.0209, -9.73401, 0.74 ) }
    dend_38 { pt3dadd( -20.5561, -37.4705, -9.97251, 0.66 ) }
    dend_38 { pt3dadd( -21.1287, -39.4193, -10.2015, 0.66 ) }
    dend_38 { pt3dadd( -21.4759, -40.6182, -10.2843, 0.81 ) }
    dend_38 { pt3dadd( -21.8803, -42.0935, -10.3383, 0.88 ) }
    dend_38 { pt3dadd( -22.2596, -43.5363, -10.3637, 0.88 ) }
    dend_38 { pt3dadd( -22.6312, -44.9931, -10.3755, 0.96 ) }
    dend_38 { pt3dadd( -22.8849, -46.098, -10.3759, 1.18 ) }
    dend_38 { pt3dadd( -23.1532, -47.4548, -10.3744, 1.47 ) }
    dend_38 { pt3dadd( -23.4966, -49.5305, -10.334, 1.11 ) }
    dend_38 { pt3dadd( -23.6454, -50.6053, -10.3104, 0.96 ) }
    dend_38 { pt3dadd( -23.7422, -51.5062, -10.3088, 0.81 ) }
    dend_38 { pt3dadd( -23.8828, -53.1401, -10.3564, 0.74 ) }
    dend_38 { pt3dadd( -24.0003, -54.5499, -10.4566, 0.81 ) }
    dend_38 { pt3dadd( -24.1405, -56.0249, -10.6597, 0.81 ) }
    dend_38 { pt3dadd( -24.3045, -57.3396, -10.9338, 0.96 ) }
    dend_38 { pt3dadd( -24.5592, -58.9759, -11.3628, 0.88 ) }
    dend_38 { pt3dadd( -24.7597, -60.1086, -11.7198, 0.81 ) }
    dend_38 { pt3dadd( -25.0764, -61.6204, -12.2678, 0.74 ) }
    dend_38 { pt3dadd( -25.4249, -63.1847, -12.8689, 0.81 ) }
    dend_38 { pt3dadd( -25.6831, -64.2644, -13.3173, 0.88 ) }
    dend_38 { pt3dadd( -25.9688, -65.4159, -13.7956, 1.03 ) }
    dend_38 { pt3dadd( -26.1959, -66.3071, -14.158, 1.03 ) }
    dend_38 { pt3dadd( -26.8517, -68.7696, -15.0797, 0.44 ) }
    dend_38 { pt3dadd( -27.2278, -70.0761, -15.5482, 0.44 ) }
    dend_38 { pt3dadd( -27.6545, -71.5049, -16.0026, 0.66 ) }
    dend_38 { pt3dadd( -27.8768, -72.2542, -16.2122, 0.88 ) }
    dend_38 { pt3dadd( -28.1647, -73.2368, -16.4143, 1.11 ) }
    dend_38 { pt3dadd( -28.6866, -74.9974, -16.6425, 0.88 ) }
    dend_38 { pt3dadd( -29.1729, -76.7135, -16.6885, 0.44 ) }
    dend_38 { pt3dadd( -29.4927, -77.9071, -16.6295, 0.44 ) }
    dend_38 { pt3dadd( -29.8423, -79.3136, -16.4635, 0.59 ) }
    dend_38 { pt3dadd( -30.2696, -81.1772, -16.1965, 0.44 ) }
    dend_38 { pt3dadd( -30.5501, -82.579, -15.9764, 0.37 ) }
    dend_38 { pt3dadd( -30.8502, -84.3716, -15.711, 0.52 ) }
    dend_38 { pt3dadd( -31.0834, -85.8141, -15.5443, 0.88 ) }
    dend_38 { pt3dadd( -31.2904, -87.0154, -15.4756, 0.88 ) }
    dend_38 { pt3dadd( -31.5432, -88.3519, -15.4653, 1.47 ) }
    dend_38 { pt3dadd( -31.7422, -89.3302, -15.5101, 1.47 ) }
    dend_38 { pt3dadd( -32.1018, -90.9012, -15.6419, 0.88 ) }
    dend_38 { pt3dadd( -32.5289, -92.5747, -15.8383, 0.52 ) }
    dend_38 { pt3dadd( -32.978, -94.2294, -16.0083, 0.44 ) }
    dend_38 { pt3dadd( -33.3036, -95.351, -16.1114, 0.52 ) }
    dend_38 { pt3dadd( -33.5876, -96.2771, -16.1754, 0.59 ) }
    dend_38 { pt3dadd( -33.8993, -97.2748, -16.2305, 0.37 ) }
    dend_38 { pt3dadd( -34.2347, -98.3819, -16.2871, 0.37 ) }
    dend_38 { pt3dadd( -34.6854, -99.881, -16.3748, 0.37 ) }
    dend_38 { pt3dadd( -34.9176, -100.67, -16.3902, 0.74 ) }
    dend_38 { pt3dadd( -35.2675, -101.886, -16.3872, 1.18 ) }
    dend_38 { pt3dadd( -35.6209, -103.103, -16.4207, 1.25 ) }
    dend_38 { pt3dadd( -36.0627, -104.564, -16.5083, 0.52 ) }
    dend_38 { pt3dadd( -36.5619, -106.131, -16.6426, 0.29 ) }
    dend_38 { pt3dadd( -37.3611, -108.557, -16.9001, 0.59 ) }
    dend_38 { pt3dadd( -37.7688, -109.819, -17.042, 0.66 ) }
    dend_38 { pt3dadd( -38.4023, -111.905, -17.2001, 0.96 ) }
    dend_38 { pt3dadd( -38.889, -113.668, -17.2629, 1.03 ) }
    dend_38 { pt3dadd( -39.2395, -115.203, -17.2523, 1.33 ) }
    dend_38 { pt3dadd( -39.4189, -116.342, -17.199, 0.52 ) }
    dend_38 { pt3dadd( -39.6232, -118.394, -17.058, 0.37 ) }
    dend_38 { pt3dadd( -39.738, -120.541, -16.8015, 0.37 ) }
    dend_38 { pt3dadd( -39.7667, -121.885, -16.5834, 0.66 ) }
    dend_38 { pt3dadd( -39.7807, -123.278, -16.3801, 1.03 ) }
    dend_38 { pt3dadd( -39.8137, -124.733, -16.212, 0.88 ) }
    dend_38 { pt3dadd( -39.8747, -126.08, -16.1085, 0.59 ) }
    dend_38 { pt3dadd( -40.0139, -127.719, -16.0559, 0.37 ) }
    dend_38 { pt3dadd( -40.2236, -129.32, -16.1136, 0.44 ) }
    dend_38 { pt3dadd( -40.5153, -131.028, -16.2402, 0.29 ) }
    dend_38 { pt3dadd( -40.9332, -132.95, -16.4444, 0.22 ) }
    dend_38 { pt3dadd( -41.1398, -133.755, -16.5263, 0.44 ) }
    dend_38 { pt3dadd( -41.3987, -134.675, -16.6044, 0.88 ) }
    dend_38 { pt3dadd( -41.5388, -135.134, -16.6389, 0.96 ) }
    dend_38 { pt3dadd( -41.9844, -136.497, -16.6875, 0.44 ) }
    dend_38 { pt3dadd( -42.5342, -138.083, -16.7036, 0.29 ) }
    dend_38 { pt3dadd( -43.121, -139.673, -16.7074, 0.29 ) }
    dend_38 { pt3dadd( -43.5259, -140.761, -16.7071, 0.52 ) }
    dend_38 { pt3dadd( -43.8769, -141.704, -16.7143, 0.59 ) }
    dend_38 { pt3dadd( -44.4505, -143.239, -16.7498, 0.52 ) }
    dend_38 { pt3dadd( -44.8452, -144.305, -16.7951, 1.18 ) }
    dend_38 { pt3dadd( -45.3087, -145.634, -16.8914, 1.4 ) }
    dend_38 { pt3dadd( -45.8227, -147.181, -17.0628, 1.03 ) }
    dend_38 { pt3dadd( -46.3111, -148.752, -17.2662, 0.44 ) }
    dend_38 { pt3dadd( -46.7237, -150.162, -17.4853, 0.22 ) }
    dend_38 { pt3dadd( -47.0324, -151.268, -17.6976, 0.22 ) }
    dend_38 { pt3dadd( -47.2174, -151.955, -17.8307, 0.22 ) }
    dend_38 { pt3dadd( -47.3424, -152.413, -17.9314, 0.44 ) }
    dend_38 { pt3dadd( -47.4994, -152.942, -18.0541, 0.96 ) }
    dend_38 { pt3dadd( -47.7722, -153.793, -18.2629, 0.59 ) }
    dend_38 { pt3dadd( -48.2669, -155.211, -18.6187, 0.29 ) }
    dend_38 { pt3dadd( -48.7212, -156.372, -18.9113, 0.22 ) }
    dend_38 { pt3dadd( -49.1339, -157.414, -19.1776, 0.29 ) }
    dend_38 { pt3dadd( -49.5463, -158.413, -19.4278, 0.52 ) }
    dend_38 { pt3dadd( -49.9032, -159.234, -19.6556, 0.96 ) }
    dend_38 { pt3dadd( -50.4233, -160.378, -19.9896, 1.77 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_38 { pt3dadd( -51.2016, -162.027, -20.4778, 2.14 ) }
    dend_38 { pt3dadd( -51.8784, -163.443, -20.8878, 1.62 ) }
    dend_38 { pt3dadd( -52.6697, -165.107, -21.3475, 0.52 ) }
    dend_38 { pt3dadd( -53.5326, -166.954, -21.8694, 0.44 ) }
    dend_38 { pt3dadd( -54.1129, -168.214, -22.185, 0.22 ) }
    dend_38 { pt3dadd( -54.6642, -169.429, -22.4557, 0.37 ) }
    dend_38 { pt3dadd( -55.3717, -171.042, -22.7402, 0.22 ) }
    dend_38 { pt3dadd( -55.9928, -172.506, -22.8847, 0.22 ) }
    dend_38 { pt3dadd( -56.5545, -173.941, -22.9214, 0.22 ) }
    dend_38 { pt3dadd( -57.0351, -175.263, -22.8132, 0.22 ) }
    dend_38 { pt3dadd( -57.2532, -175.904, -22.699, 0.96 ) }
    dend_38 { pt3dadd( -57.6453, -177.129, -22.3941, 1.33 ) }
    dend_38 { pt3dadd( -58.0987, -178.604, -21.9115, 1.03 ) }
    dend_38 { pt3dadd( -58.4715, -179.806, -21.4794, 0.29 ) }
    dend_38 { pt3dadd( -58.9395, -181.306, -20.9309, 0.29 ) }
    dend_38 { pt3dadd( -59.3672, -182.696, -20.4932, 0.44 ) }
    dend_38 { pt3dadd( -59.7066, -183.798, -20.1735, 0.81 ) }
    dend_38 { pt3dadd( -60.1556, -185.208, -19.8118, 0.59 ) }
    dend_38 { pt3dadd( -60.5883, -186.548, -19.4885, 0.52 ) }
    dend_38 { pt3dadd( -61.0006, -187.857, -19.1786, 0.22 ) }
    dend_38 { pt3dadd( -61.4886, -189.4, -18.9158, 0.29 ) }
    dend_38 { pt3dadd( -61.6956, -190.086, -18.8416, 0.66 ) }
    dend_38 { pt3dadd( -61.8546, -190.647, -18.802, 0.74 ) }
    dend_38 { pt3dadd( -62.226, -191.989, -18.7934, 0.74 ) }
    dend_38 { pt3dadd( -62.6221, -193.483, -18.8457, 1.99 ) }
    dend_38 { pt3dadd( -63.3337, -196.138, -19.0658, 0.44 ) }
    dend_38 { pt3dadd( -63.8621, -198.134, -19.2665, 0.37 ) }
    dend_38 { pt3dadd( -64.2651, -199.685, -19.4678, 0.29 ) }
    dend_38 { pt3dadd( -64.5574, -200.821, -19.6609, 0.96 ) }
    dend_38 { pt3dadd( -64.8276, -201.828, -19.9033, 1.47 ) }
    dend_38 { pt3dadd( -65.2393, -203.308, -20.3364, 1.92 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 31/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -13.6003, -15.6135, -1.00976, 0.59 ) }
    dend_37 { pt3dadd( -14.7558, -16.006, -1.5466, 0.59 ) }
    dend_37 { pt3dadd( -15.8228, -16.2134, -2.08983, 0.44 ) }
    dend_37 { pt3dadd( -16.6683, -16.3025, -2.49143, 0.44 ) }
    dend_37 { pt3dadd( -17.0987, -16.3214, -2.67502, 0.44 ) }
    dend_37 { pt3dadd( -17.8785, -16.3065, -2.92755, 0.44 ) }
    dend_37 { pt3dadd( -18.5021, -16.259, -3.08085, 0.66 ) }
    dend_37 { pt3dadd( -19.889, -16.0048, -3.37871, 0.66 ) }
    dend_37 { pt3dadd( -20.6797, -15.7968, -3.49811, 0.52 ) }
    dend_37 { pt3dadd( -21.3361, -15.6058, -3.57361, 0.52 ) }
    dend_37 { pt3dadd( -22.5724, -15.228, -3.68686, 0.52 ) }
    dend_37 { pt3dadd( -23.6174, -14.8884, -3.80372, 0.66 ) }
    dend_37 { pt3dadd( -25.0781, -14.3921, -3.91959, 0.88 ) }
    dend_37 { pt3dadd( -25.9438, -14.0897, -3.93775, 0.88 ) }
    dend_37 { pt3dadd( -27.2191, -13.6412, -3.88157, 0.66 ) }
    dend_37 { pt3dadd( -28.0343, -13.3764, -3.78338, 0.44 ) }
    dend_37 { pt3dadd( -29.3558, -13.0115, -3.47859, 0.29 ) }
    dend_37 { pt3dadd( -31.0426, -12.6692, -2.6411, 0.29 ) }
    dend_37 { pt3dadd( -31.8267, -12.5595, -2.10928, 0.29 ) }
    dend_37 { pt3dadd( -32.7825, -12.4675, -1.45522, 0.29 ) }
    dend_37 { pt3dadd( -33.3843, -12.4402, -1.02212, 0.74 ) }
    dend_37 { pt3dadd( -34.2011, -12.4449, -0.48392, 1.33 ) }
    dend_37 { pt3dadd( -35.5517, -12.4745, 0.30913, 0.66 ) }
    dend_37 { pt3dadd( -36.2991, -12.4711, 0.661308, 0.44 ) }
    dend_37 { pt3dadd( -37.6058, -12.406, 1.22481, 0.37 ) }
    dend_37 { pt3dadd( -38.6418, -12.3107, 1.65795, 0.37 ) }
    dend_37 { pt3dadd( -39.4415, -12.2231, 2.00908, 0.44 ) }
    dend_37 { pt3dadd( -40.0528, -12.1624, 2.28315, 0.44 ) }
    dend_37 { pt3dadd( -40.979, -12.079, 2.68344, 0.44 ) }
    dend_37 { pt3dadd( -41.6672, -12.0048, 2.98276, 0.29 ) }
    dend_37 { pt3dadd( -41.9472, -11.948, 3.11674, 0.29 ) }
    dend_37 { pt3dadd( -42.3825, -11.8071, 3.31808, 0.29 ) }
    dend_37 { pt3dadd( -42.7338, -11.6472, 3.52397, 0.29 ) }
    dend_37 { pt3dadd( -43.0303, -11.5034, 3.71857, 0.29 ) }
    dend_37 { pt3dadd( -43.6831, -11.1786, 4.15158, 0.44 ) }
    dend_37 { pt3dadd( -44.7552, -10.6126, 4.86827, 0.66 ) }
    dend_37 { pt3dadd( -45.1205, -10.4194, 5.10799, 0.81 ) }
    dend_37 { pt3dadd( -46.2136, -9.80466, 5.81159, 0.22 ) }
    dend_37 { pt3dadd( -46.7454, -9.51409, 6.13272, 0.59 ) }
    dend_37 { pt3dadd( -47.2353, -9.27667, 6.3966, 0.66 ) }
    dend_37 { pt3dadd( -48.0928, -8.94017, 6.78545, 0.52 ) }
    dend_37 { pt3dadd( -49.1109, -8.61986, 7.14909, 0.29 ) }
    dend_37 { pt3dadd( -49.8064, -8.44154, 7.35889, 0.29 ) }
    dend_37 { pt3dadd( -50.6635, -8.27332, 7.55079, 0.29 ) }
    dend_37 { pt3dadd( -51.6075, -8.10635, 7.7316, 0.52 ) }
    dend_37 { pt3dadd( -52.3372, -7.96301, 7.86424, 0.88 ) }
    dend_37 { pt3dadd( -52.8508, -7.86285, 7.96664, 1.18 ) }
    dend_37 { pt3dadd( -53.3047, -7.77205, 8.06128, 1.18 ) }
    dend_37 { pt3dadd( -54.8906, -7.4683, 8.41669, 0.44 ) }
    dend_37 { pt3dadd( -56.0025, -7.24235, 8.68479, 0.44 ) }
    dend_37 { pt3dadd( -57.172, -7.02865, 8.97174, 0.29 ) }
    dend_37 { pt3dadd( -58.0593, -6.90328, 9.21357, 0.29 ) }
    dend_37 { pt3dadd( -58.9946, -6.82515, 9.47983, 0.66 ) }
    dend_37 { pt3dadd( -59.4249, -6.82493, 9.62413, 0.88 ) }
    dend_37 { pt3dadd( -59.9897, -6.8807, 9.83386, 0.74 ) }
    dend_37 { pt3dadd( -61.1369, -7.10308, 10.2531, 0.29 ) }
    dend_37 { pt3dadd( -62.2596, -7.39853, 10.671, 0.59 ) }
    dend_37 { pt3dadd( -63.1117, -7.63613, 11.0027, 0.66 ) }
    dend_37 { pt3dadd( -64.1957, -7.94123, 11.4622, 0.88 ) }
    dend_37 { pt3dadd( -65.2618, -8.23304, 11.9272, 0.37 ) }
    dend_37 { pt3dadd( -66.3973, -8.55363, 12.417, 0.15 ) }
    dend_37 { pt3dadd( -67.0492, -8.73195, 12.6769, 0.15 ) }
    dend_37 { pt3dadd( -67.6227, -8.87916, 12.8444, 0.15 ) }
    dend_37 { pt3dadd( -68.2174, -9.01636, 12.9456, 0.37 ) }
    dend_37 { pt3dadd( -69.0118, -9.18015, 12.9704, 0.81 ) }
    dend_37 { pt3dadd( -69.8953, -9.3202, 12.8751, 0.44 ) }
    dend_37 { pt3dadd( -71.0113, -9.42885, 12.6197, 0.29 ) }
    dend_37 { pt3dadd( -71.9321, -9.49152, 12.3317, 0.29 ) }
    dend_37 { pt3dadd( -72.8869, -9.51564, 11.996, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_37 { pt3dadd( -73.3355, -9.49854, 11.8365, 0.81 ) }
    dend_37 { pt3dadd( -74.9143, -9.32143, 11.291, 0.37 ) }
    dend_37 { pt3dadd( -75.7981, -9.15346, 11.0525, 0.22 ) }
    dend_37 { pt3dadd( -76.4401, -9.00723, 10.935, 0.22 ) }
    dend_37 { pt3dadd( -77.2955, -8.79339, 10.8872, 0.44 ) }
    dend_37 { pt3dadd( -78.2024, -8.55073, 10.9392, 1.03 ) }
    dend_37 { pt3dadd( -78.6355, -8.43338, 10.9997, 1.33 ) }
    dend_37 { pt3dadd( -80.6422, -7.90932, 11.5148, 0.22 ) }
    dend_37 { pt3dadd( -81.5384, -7.69951, 11.8462, 0.74 ) }
    dend_37 { pt3dadd( -82.7683, -7.46456, 12.4397, 0.22 ) }
    dend_37 { pt3dadd( -83.4904, -7.36625, 12.8502, 0.66 ) }
    dend_37 { pt3dadd( -83.992, -7.31836, 13.1829, 0.66 ) }
    dend_37 { pt3dadd( -84.7606, -7.26085, 13.7088, 0.66 ) }
    dend_37 { pt3dadd( -85.9202, -7.22471, 14.5008, 0.22 ) }
    dend_37 { pt3dadd( -86.6579, -7.21879, 14.9656, 0.22 ) }
    dend_37 { pt3dadd( -87.4598, -7.221, 15.4109, 1.33 ) }
    dend_37 { pt3dadd( -89.1626, -7.24351, 16.2168, 0.37 ) }
    dend_37 { pt3dadd( -91.0121, -7.2791, 16.9312, 0.22 ) }
    dend_37 { pt3dadd( -92.6142, -7.3242, 17.3992, 0.22 ) }
    dend_37 { pt3dadd( -93.2929, -7.35191, 17.5589, 0.44 ) }
    dend_37 { pt3dadd( -94.2323, -7.41418, 17.7876, 0.88 ) }
    dend_37 { pt3dadd( -95.3322, -7.52785, 18.1095, 0.22 ) }
    dend_37 { pt3dadd( -96.5055, -7.69668, 18.4999, 0.15 ) }
    dend_37 { pt3dadd( -97.419, -7.86593, 18.8774, 0.59 ) }
    dend_37 { pt3dadd( -98.9626, -8.11212, 19.6099, 0.15 ) }
    dend_37 { pt3dadd( -100.171, -8.27309, 20.2405, 0.15 ) }
    dend_37 { pt3dadd( -101.031, -8.388, 20.7237, 0.15 ) }
    dend_37 { pt3dadd( -101.312, -8.41154, 20.8902, 1.03 ) }
    dend_37 { pt3dadd( -101.87, -8.4372, 21.2188, 1.25 ) }
    dend_37 { pt3dadd( -103.268, -8.46257, 21.8796, 0.29 ) }
    dend_37 { pt3dadd( -103.98, -8.46258, 22.09, 0.22 ) }
    dend_37 { pt3dadd( -104.768, -8.44159, 22.2368, 0.22 ) }
    dend_37 { pt3dadd( -105.669, -8.3865, 22.4023, 0.22 ) }
    dend_37 { pt3dadd( -106.25, -8.34124, 22.5582, 0.37 ) }
    dend_37 { pt3dadd( -107.19, -8.2557, 22.8876, 0.22 ) }
    dend_37 { pt3dadd( -108.206, -8.15738, 23.3922, 0.07 ) }
    dend_37 { pt3dadd( -109.037, -8.06, 23.8835, 0.29 ) }
    dend_37 { pt3dadd( -110.027, -7.90946, 24.5207, 0.15 ) }
    dend_37 { pt3dadd( -111.084, -7.7362, 25.2314, 0.15 ) }
    dend_37 { pt3dadd( -111.797, -7.59536, 25.7152, 0.74 ) }
    dend_37 { pt3dadd( -113.064, -7.32724, 26.579, 0.74 ) }
    dend_37 { pt3dadd( -113.907, -7.1554, 27.1254, 0.15 ) }
    dend_37 { pt3dadd( -114.997, -6.92274, 27.7036, 0.15 ) }
    dend_37 { pt3dadd( -115.644, -6.76841, 27.979, 0.59 ) }
    dend_37 { pt3dadd( -116.54, -6.54951, 28.2977, 0.22 ) }
    dend_37 { pt3dadd( -118.06, -6.17997, 28.7811, 0.22 ) }
    dend_37 { pt3dadd( -118.846, -5.98834, 28.995, 0.29 ) }
    dend_37 { pt3dadd( -120.269, -5.58865, 29.3875, 0.66 ) }
    dend_37 { pt3dadd( -121.553, -5.22888, 29.7249, 0.15 ) }
    dend_37 { pt3dadd( -122.437, -4.99067, 29.9462, 0.15 ) }
    dend_37 { pt3dadd( -122.864, -4.86925, 30.0462, 0.15 ) }
    dend_37 { pt3dadd( -123.384, -4.72311, 30.1506, 0.37 ) }
    dend_37 { pt3dadd( -124.242, -4.48764, 30.3323, 0.37 ) }
    dend_37 { pt3dadd( -125.162, -4.25887, 30.5756, 0.37 ) }
    dend_37 { pt3dadd( -126.093, -4.02566, 30.8399, 0.37 ) }
    dend_37 { pt3dadd( -126.784, -3.84334, 31.0607, 0.37 ) }
    dend_37 { pt3dadd( -128.221, -3.47559, 31.5936, 0.15 ) }
    dend_37 { pt3dadd( -129.439, -3.19526, 32.0811, 0.52 ) }
    dend_37 { pt3dadd( -130.42, -3.00386, 32.5248, 0.15 ) }
    dend_37 { pt3dadd( -131.564, -2.7996, 33.0756, 0.15 ) }
    dend_37 { pt3dadd( -132.325, -2.68923, 33.4442, 0.81 ) }
    dend_37 { pt3dadd( -132.876, -2.639, 33.7013, 0.81 ) }
    dend_37 { pt3dadd( -134.347, -2.53382, 34.2292, 0.15 ) }
    dend_37 { pt3dadd( -135.636, -2.46496, 34.5631, 0.15 ) }
    dend_37 { pt3dadd( -136.166, -2.442, 34.664, 0.81 ) }
    dend_37 { pt3dadd( -137.141, -2.41427, 34.8112, 1.11 ) }
    dend_37 { pt3dadd( -138.716, -2.38622, 35.0239, 0.15 ) }
    dend_37 { pt3dadd( -140.849, -2.3807, 35.323, 0.66 ) }
    dend_37 { pt3dadd( -142.871, -2.39632, 35.6221, 0.07 ) }
    dend_37 { pt3dadd( -144.326, -2.41929, 35.8379, 0.07 ) }
    dend_37 { pt3dadd( -145.29, -2.43858, 36.0081, 0.66 ) }
    dend_37 { pt3dadd( -146.324, -2.46534, 36.2272, 0.15 ) }
    dend_37 { pt3dadd( -147.514, -2.5096, 36.5362, 0.15 ) }
    dend_37 { pt3dadd( -148.104, -2.53402, 36.7234, 0.52 ) }
    dend_37 { pt3dadd( -148.475, -2.52856, 36.8154, 0.52 ) }
    dend_37 { pt3dadd( -149.079, -2.47086, 36.9377, 0.22 ) }
    dend_37 { pt3dadd( -150.092, -2.27447, 37.1231, 0.07 ) }
    dend_37 { pt3dadd( -150.453, -2.16554, 37.1899, 0.07 ) }
    dend_37 { pt3dadd( -151.161, -1.8901, 37.3153, 0.29 ) }
    dend_37 { pt3dadd( -152.073, -1.49061, 37.5039, 0.07 ) }
    dend_37 { pt3dadd( -152.668, -1.20338, 37.6428, 0.07 ) }
    dend_37 { pt3dadd( -153.367, -0.841977, 37.8419, 0.15 ) }
    dend_37 { pt3dadd( -154.04, -0.475912, 38.0658, 0.15 ) }
    dend_37 { pt3dadd( -154.798, -0.063222, 38.3489, 0.74 ) }
    dend_37 { pt3dadd( -155.264, 0.192638, 38.5393, 0.15 ) }
    dend_37 { pt3dadd( -156.023, 0.599999, 38.8422, 0.07 ) }
    dend_37 { pt3dadd( -156.485, 0.847857, 39.0212, 0.07 ) }
    dend_37 { pt3dadd( -157.011, 1.11358, 39.2095, 0.29 ) }
    dend_37 { pt3dadd( -158.308, 1.76798, 39.6361, 0.15 ) }
    dend_37 { pt3dadd( -158.865, 2.04701, 39.815, 0.52 ) }
    dend_37 { pt3dadd( -159.956, 2.55009, 40.1854, 0.07 ) }
    dend_37 { pt3dadd( -160.528, 2.79325, 40.396, 0.07 ) }
    dend_37 { pt3dadd( -161.326, 3.10291, 40.6984, 0.07 ) }
    dend_37 { pt3dadd( -161.764, 3.24231, 40.8934, 0.37 ) }
    dend_37 { pt3dadd( -162.212, 3.32868, 41.161, 0.37 ) }
    dend_37 { pt3dadd( -163.078, 3.40732, 41.7559, 0.22 ) }
    dend_37 { pt3dadd( -163.83, 3.40936, 42.3094, 0.59 ) }
    dend_37 { pt3dadd( -164.292, 3.35766, 42.7007, 0.59 ) }
    dend_37 { pt3dadd( -165.33, 3.16839, 43.6527, 0.15 ) }
    dend_37 { pt3dadd( -166.67, 2.88584, 44.8757, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_37 { pt3dadd( -167.414, 2.73385, 45.5061, 0.15 ) }
    dend_37 { pt3dadd( -167.957, 2.62901, 45.9466, 0.29 ) }
    dend_37 { pt3dadd( -170.193, 2.2167, 47.7386, 0.07 ) }
    dend_37 { pt3dadd( -170.78, 2.12993, 48.1968, 0.07 ) }
    dend_37 { pt3dadd( -171.623, 2.04537, 48.8178, 1.18 ) }
    dend_37 { pt3dadd( -173.003, 2.00754, 49.7364, 0.07 ) }
    dend_37 { pt3dadd( -173.962, 2.04775, 50.3538, 0.07 ) }
    dend_37 { pt3dadd( -174.702, 2.13246, 50.7773, 0.07 ) }
    dend_37 { pt3dadd( -175.281, 2.24451, 51.0336, 0.37 ) }
    dend_37 { pt3dadd( -175.525, 2.30073, 51.1362, 0.37 ) }
    dend_37 { pt3dadd( -176.446, 2.56971, 51.4223, 0.07 ) }
    dend_37 { pt3dadd( -177.465, 2.92713, 51.6312, 0.07 ) }
    dend_37 { pt3dadd( -178.089, 3.17427, 51.6968, 0.66 ) }
    dend_37 { pt3dadd( -178.442, 3.32525, 51.7215, 0.66 ) }
    dend_37 { pt3dadd( -179.227, 3.67867, 51.7706, 0.22 ) }
    dend_37 { pt3dadd( -180.871, 4.47008, 51.8831, 0.07 ) }
    dend_37 { pt3dadd( -181.673, 4.88624, 51.9397, 0.29 ) }
    dend_37 { pt3dadd( -183.109, 5.66543, 52.0527, 0.07 ) }
    dend_37 { pt3dadd( -183.612, 5.93408, 52.1182, 0.29 ) }
    dend_37 { pt3dadd( -183.892, 6.071, 52.1681, 0.29 ) }
    dend_37 { pt3dadd( -185.291, 6.63563, 52.4834, 0.07 ) }
    dend_37 { pt3dadd( -185.583, 6.71748, 52.5611, 0.07 ) }
    dend_37 { pt3dadd( -186.417, 6.87353, 52.6419, 0.15 ) }
    dend_37 { pt3dadd( -187.45, 6.95348, 52.6081, 0.07 ) }
    dend_37 { pt3dadd( -188.35, 6.95663, 52.4995, 0.66 ) }
    dend_37 { pt3dadd( -189.379, 6.89848, 52.3032, 1.4 ) }
    dend_37 { pt3dadd( -190.867, 6.74117, 51.9197, 0.07 ) }
    dend_37 { pt3dadd( -193.467, 6.4688, 51.1642, 0.07 ) }
    dend_37 { pt3dadd( -194.267, 6.39407, 50.9146, 0.07 ) }
    dend_37 { pt3dadd( -194.682, 6.36796, 50.7796, 0.37 ) }
    dend_37 { pt3dadd( -194.966, 6.3606, 50.6995, 0.37 ) }
    dend_37 { pt3dadd( -195.674, 6.35939, 50.5906, 0.07 ) }
    dend_37 { pt3dadd( -196.41, 6.37811, 50.6111, 0.59 ) }
    dend_37 { pt3dadd( -197.591, 6.39461, 50.8325, 0.07 ) }
    dend_37 { pt3dadd( -198.121, 6.40978, 50.8972, 0.07 ) }
    dend_37 { pt3dadd( -198.805, 6.42856, 50.9363, 0.29 ) }
    dend_37 { pt3dadd( -200.081, 6.44576, 50.9315, 0.07 ) }
    dend_37 { pt3dadd( -200.776, 6.43759, 50.8934, 0.74 ) }
    dend_37 { pt3dadd( -202.565, 6.34674, 50.7131, 0.07 ) }
    dend_37 { pt3dadd( -204.129, 6.22028, 50.4942, 0.07 ) }
    dend_37 { pt3dadd( -204.846, 6.16222, 50.3729, 0.07 ) }
    dend_37 { pt3dadd( -205.63, 6.10662, 50.2066, 0.44 ) }
    dend_37 { pt3dadd( -206.186, 6.07575, 50.0524, 0.59 ) }
    dend_37 { pt3dadd( -207.632, 5.96098, 49.6155, 0.07 ) }
    dend_37 { pt3dadd( -208.082, 5.88735, 49.4739, 0.22 ) }
    // Section: dend_31, id: dend_31, parent: dend_25 (entry count 45/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -15.0385, -12.4703, 9.3981, 0.96 ) }
    dend_31 { pt3dadd( -15.8311, -13.3737, 8.91184, 0.96 ) }
    dend_31 { pt3dadd( -16.8818, -14.561, 8.25743, 0.96 ) }
    dend_31 { pt3dadd( -17.3601, -15.094, 7.95355, 1.11 ) }
    dend_31 { pt3dadd( -18.1502, -15.9567, 7.45132, 0.74 ) }
    dend_31 { pt3dadd( -18.7367, -16.5858, 7.09288, 0.81 ) }
    dend_31 { pt3dadd( -19.3563, -17.2521, 6.71077, 0.74 ) }
    dend_31 { pt3dadd( -19.9781, -17.942, 6.30084, 0.74 ) }
    dend_31 { pt3dadd( -20.4982, -18.5446, 5.94192, 0.96 ) }
    dend_31 { pt3dadd( -21.0274, -19.2047, 5.51499, 1.4 ) }
    dend_31 { pt3dadd( -21.7063, -20.1374, 4.89886, 1.25 ) }
    dend_31 { pt3dadd( -22.3133, -21.0282, 4.3071, 0.88 ) }
    dend_31 { pt3dadd( -22.9794, -22.0671, 3.65742, 0.74 ) }
    dend_31 { pt3dadd( -23.4961, -22.9623, 3.15347, 0.59 ) }
    dend_31 { pt3dadd( -23.9458, -23.8044, 2.7153, 0.66 ) }
    dend_31 { pt3dadd( -24.1714, -24.2695, 2.49459, 0.74 ) }
    dend_31 { pt3dadd( -24.5347, -25.1023, 2.15072, 0.74 ) }
    dend_31 { pt3dadd( -24.88, -25.9481, 1.91299, 0.88 ) }
    dend_31 { pt3dadd( -25.2391, -26.8751, 1.77174, 0.96 ) }
    dend_31 { pt3dadd( -25.493, -27.5598, 1.73878, 0.88 ) }
    dend_31 { pt3dadd( -25.7003, -28.1234, 1.75067, 0.66 ) }
    dend_31 { pt3dadd( -25.9781, -28.8752, 1.79346, 0.59 ) }
    dend_31 { pt3dadd( -26.3426, -29.8749, 1.94103, 0.59 ) }
    dend_31 { pt3dadd( -26.5235, -30.3468, 2.01738, 0.66 ) }
    dend_31 { pt3dadd( -26.7753, -30.9412, 2.1163, 0.59 ) }
    dend_31 { pt3dadd( -27.1506, -31.7238, 2.2343, 0.88 ) }
    dend_31 { pt3dadd( -27.5355, -32.4468, 2.30647, 0.88 ) }
    dend_31 { pt3dadd( -28.073, -33.388, 2.33817, 1.03 ) }
    dend_31 { pt3dadd( -28.6273, -34.3071, 2.26257, 0.66 ) }
    dend_31 { pt3dadd( -28.9775, -34.8481, 2.1908, 0.59 ) }
    dend_31 { pt3dadd( -29.3071, -35.3267, 2.10627, 0.81 ) }
    dend_31 { pt3dadd( -29.8501, -36.0556, 1.93875, 0.59 ) }
    dend_31 { pt3dadd( -30.5571, -36.986, 1.68796, 0.52 ) }
    dend_31 { pt3dadd( -31.0895, -37.6846, 1.46175, 0.66 ) }
    dend_31 { pt3dadd( -31.4644, -38.178, 1.31409, 0.66 ) }
    dend_31 { pt3dadd( -32.1032, -39.0244, 1.05867, 0.59 ) }
    dend_31 { pt3dadd( -32.5946, -39.694, 0.910425, 0.59 ) }
    dend_31 { pt3dadd( -32.9076, -40.1097, 0.880143, 0.81 ) }
    dend_31 { pt3dadd( -33.414, -40.7957, 0.977129, 1.11 ) }
    dend_31 { pt3dadd( -33.7248, -41.2342, 1.11599, 0.81 ) }
    dend_31 { pt3dadd( -34.1677, -41.8896, 1.41256, 0.52 ) }
    dend_31 { pt3dadd( -34.8097, -42.8679, 1.95254, 0.59 ) }
    dend_31 { pt3dadd( -35.4433, -43.8276, 2.52652, 0.59 ) }
    dend_31 { pt3dadd( -35.9197, -44.5341, 2.9561, 0.59 ) }
    dend_31 { pt3dadd( -36.3872, -45.234, 3.37921, 0.88 ) }
    dend_31 { pt3dadd( -36.9102, -46.0354, 3.79616, 1.11 ) }
    dend_31 { pt3dadd( -37.283, -46.6045, 4.01889, 1.18 ) }
    dend_31 { pt3dadd( -37.7645, -47.331, 4.17994, 0.88 ) }
    dend_31 { pt3dadd( -38.0642, -47.7952, 4.24154, 1.03 ) }
    dend_31 { pt3dadd( -38.3182, -48.1751, 4.27866, 1.18 ) }
    dend_31 { pt3dadd( -38.9611, -49.0801, 4.37893, 0.81 ) }
    dend_31 { pt3dadd( -39.6685, -50.0, 4.49382, 0.59 ) }
    dend_31 { pt3dadd( -40.2655, -50.7169, 4.63666, 0.52 ) }
    dend_31 { pt3dadd( -40.8237, -51.3311, 4.80269, 0.52 ) }
    dend_31 { pt3dadd( -41.5036, -51.9827, 5.02334, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_31 { pt3dadd( -42.3309, -52.6625, 5.33077, 0.44 ) }
    dend_31 { pt3dadd( -42.7588, -52.9517, 5.50127, 0.52 ) }
    dend_31 { pt3dadd( -43.3522, -53.3065, 5.74153, 0.81 ) }
    dend_31 { pt3dadd( -43.6978, -53.498, 5.87398, 0.81 ) }
    dend_31 { pt3dadd( -44.6567, -54.0442, 6.17268, 0.52 ) }
    dend_31 { pt3dadd( -45.4111, -54.5392, 6.34155, 0.44 ) }
    dend_31 { pt3dadd( -46.1537, -55.1303, 6.41882, 0.29 ) }
    dend_31 { pt3dadd( -46.5684, -55.5455, 6.43597, 0.29 ) }
    dend_31 { pt3dadd( -46.9383, -56.0108, 6.44442, 0.52 ) }
    dend_31 { pt3dadd( -47.4494, -56.8224, 6.46538, 0.81 ) }
    dend_31 { pt3dadd( -47.9149, -57.7242, 6.50324, 0.81 ) }
    dend_31 { pt3dadd( -48.2139, -58.3703, 6.54959, 1.18 ) }
    dend_31 { pt3dadd( -48.5671, -59.1859, 6.64486, 1.55 ) }
    dend_31 { pt3dadd( -48.9014, -59.9232, 6.75913, 0.88 ) }
    dend_31 { pt3dadd( -49.4299, -61.0264, 6.96751, 0.74 ) }
    dend_31 { pt3dadd( -49.8881, -61.9317, 7.16655, 0.52 ) }
    dend_31 { pt3dadd( -50.2275, -62.5532, 7.30693, 0.66 ) }
    dend_31 { pt3dadd( -50.7454, -63.3845, 7.47061, 0.81 ) }
    dend_31 { pt3dadd( -51.1942, -64.0133, 7.56092, 0.59 ) }
    dend_31 { pt3dadd( -51.5605, -64.4932, 7.60888, 0.29 ) }
    dend_31 { pt3dadd( -52.0205, -65.0674, 7.65308, 0.29 ) }
    dend_31 { pt3dadd( -52.3506, -65.4671, 7.66997, 0.29 ) }
    dend_31 { pt3dadd( -53.0636, -66.3189, 7.71609, 0.37 ) }
    dend_31 { pt3dadd( -53.6718, -67.0221, 7.77863, 0.37 ) }
    dend_31 { pt3dadd( -54.3187, -67.7642, 7.86319, 0.44 ) }
    dend_31 { pt3dadd( -54.8538, -68.384, 7.94154, 0.44 ) }
    dend_31 { pt3dadd( -55.1892, -68.783, 7.9932, 0.81 ) }
    dend_31 { pt3dadd( -55.6987, -69.4019, 8.06832, 1.33 ) }
    dend_31 { pt3dadd( -56.0502, -69.833, 8.11566, 1.33 ) }
    dend_31 { pt3dadd( -56.5112, -70.3894, 8.13259, 0.74 ) }
    dend_31 { pt3dadd( -57.1992, -71.2112, 8.09277, 0.29 ) }
    dend_31 { pt3dadd( -57.6693, -71.7818, 8.02812, 0.29 ) }
    dend_31 { pt3dadd( -58.3286, -72.5787, 7.91871, 0.29 ) }
    dend_31 { pt3dadd( -58.6595, -72.9805, 7.85402, 0.74 ) }
    dend_31 { pt3dadd( -59.4715, -73.997, 7.70334, 1.11 ) }
    dend_31 { pt3dadd( -60.1381, -74.8633, 7.59095, 0.52 ) }
    dend_31 { pt3dadd( -60.6194, -75.4923, 7.52292, 0.29 ) }
    dend_31 { pt3dadd( -61.1799, -76.2108, 7.48895, 0.29 ) }
    dend_31 { pt3dadd( -61.6703, -76.8205, 7.5245, 0.44 ) }
    dend_31 { pt3dadd( -62.0673, -77.2846, 7.59987, 0.52 ) }
    dend_31 { pt3dadd( -62.8183, -78.0959, 7.83369, 0.29 ) }
    dend_31 { pt3dadd( -63.2356, -78.5197, 7.97272, 0.44 ) }
    dend_31 { pt3dadd( -63.9918, -79.2832, 8.22126, 0.59 ) }
    dend_31 { pt3dadd( -64.6828, -79.9758, 8.42679, 1.11 ) }
    dend_31 { pt3dadd( -65.1697, -80.4546, 8.5637, 1.62 ) }
    dend_31 { pt3dadd( -65.8354, -81.0985, 8.74719, 2.06 ) }
    dend_31 { pt3dadd( -66.432, -81.6783, 8.90129, 0.66 ) }
    dend_31 { pt3dadd( -67.0722, -82.3582, 9.03863, 0.22 ) }
    dend_31 { pt3dadd( -67.7351, -83.113, 9.13265, 0.22 ) }
    dend_31 { pt3dadd( -68.0977, -83.5475, 9.16355, 0.29 ) }
    dend_31 { pt3dadd( -68.342, -83.8552, 9.18229, 0.74 ) }
    dend_31 { pt3dadd( -68.6853, -84.3057, 9.20205, 0.88 ) }
    dend_31 { pt3dadd( -69.2854, -85.125, 9.22352, 0.22 ) }
    dend_31 { pt3dadd( -69.5703, -85.5254, 9.23407, 0.22 ) }
    dend_31 { pt3dadd( -69.861, -85.9619, 9.24235, 0.29 ) }
    dend_31 { pt3dadd( -70.207, -86.5077, 9.24627, 0.29 ) }
    dend_31 { pt3dadd( -70.5624, -87.0942, 9.24081, 0.29 ) }
    dend_31 { pt3dadd( -70.8566, -87.5967, 9.26173, 0.29 ) }
    dend_31 { pt3dadd( -71.1263, -88.0572, 9.30066, 0.59 ) }
    dend_31 { pt3dadd( -71.3726, -88.4725, 9.34494, 1.25 ) }
    dend_31 { pt3dadd( -71.6109, -88.8659, 9.39096, 1.25 ) }
    dend_31 { pt3dadd( -71.9864, -89.464, 9.46252, 0.59 ) }
    dend_31 { pt3dadd( -72.491, -90.2532, 9.55323, 1.25 ) }
    dend_31 { pt3dadd( -73.0893, -91.1771, 9.66576, 0.44 ) }
    dend_31 { pt3dadd( -73.5785, -91.9246, 9.74791, 0.29 ) }
    dend_31 { pt3dadd( -74.0571, -92.6381, 9.82313, 0.29 ) }
    dend_31 { pt3dadd( -74.5007, -93.2878, 9.84958, 0.29 ) }
    dend_31 { pt3dadd( -74.8821, -93.8298, 9.83571, 0.52 ) }
    dend_31 { pt3dadd( -75.278, -94.3795, 9.77855, 0.81 ) }
    dend_31 { pt3dadd( -75.5931, -94.8089, 9.71661, 0.59 ) }
    dend_31 { pt3dadd( -76.0892, -95.4841, 9.59866, 0.22 ) }
    dend_31 { pt3dadd( -76.7688, -96.4219, 9.42201, 0.22 ) }
    dend_31 { pt3dadd( -77.0178, -96.7746, 9.34937, 0.29 ) }
    dend_31 { pt3dadd( -77.2744, -97.1462, 9.27028, 0.74 ) }
    dend_31 { pt3dadd( -77.5708, -97.5834, 9.17767, 1.03 ) }
    dend_31 { pt3dadd( -78.1331, -98.4491, 9.03199, 0.44 ) }
    dend_31 { pt3dadd( -78.6719, -99.3696, 8.9321, 0.29 ) }
    dend_31 { pt3dadd( -79.1333, -100.228, 8.89106, 0.29 ) }
    dend_31 { pt3dadd( -79.3178, -100.594, 8.87579, 0.52 ) }
    dend_31 { pt3dadd( -79.5304, -101.037, 8.86, 0.81 ) }
    dend_31 { pt3dadd( -79.7607, -101.55, 8.84504, 0.96 ) }
    dend_31 { pt3dadd( -80.2857, -102.771, 8.81906, 0.22 ) }
    dend_31 { pt3dadd( -80.5072, -103.322, 8.81435, 0.22 ) }
    dend_31 { pt3dadd( -80.7531, -103.988, 8.821, 0.37 ) }
    dend_31 { pt3dadd( -80.9486, -104.542, 8.82365, 0.88 ) }
    dend_31 { pt3dadd( -81.2941, -105.547, 8.81677, 1.62 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 86/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -15.0385, -12.4703, 9.3981, 0.66 ) }
    dend_26 { pt3dadd( -14.9502, -13.2293, 10.0008, 0.66 ) }
    dend_26 { pt3dadd( -14.8607, -14.0149, 10.6499, 0.66 ) }
    dend_26 { pt3dadd( -14.7842, -14.6846, 11.1685, 0.59 ) }
    dend_26 { pt3dadd( -14.7146, -15.2003, 11.5388, 0.74 ) }
    dend_26 { pt3dadd( -14.634, -15.7982, 11.9681, 0.44 ) }
    dend_26 { pt3dadd( -14.5576, -16.3644, 12.3745, 0.44 ) }
    dend_26 { pt3dadd( -14.4578, -17.0301, 12.8421, 0.52 ) }
    dend_26 { pt3dadd( -14.3983, -17.4589, 13.0975, 1.03 ) }
    dend_26 { pt3dadd( -14.3025, -18.0747, 13.4636, 1.62 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 96/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 244.131, -20.8641, -73.1172, 0.15 ) }
    dend_23 { pt3dadd( 255.066, -21.3347, -75.4966, 0.15 ) }
    dend_23 { pt3dadd( 266.191, -20.0442, -75.3341, 0.15 ) }
    dend_23 { pt3dadd( 277.289, -18.8184, -74.4494, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_23 { pt3dadd( 288.081, -16.9348, -72.118, 0.15 ) }
    dend_23 { pt3dadd( 299.088, -15.0186, -71.3331, 0.15 ) }
    dend_23 { pt3dadd( 309.775, -12.1515, -69.5975, 0.15 ) }
    dend_23 { pt3dadd( 320.318, -9.20671, -67.2248, 0.15 ) }
    dend_23 { pt3dadd( 330.657, -4.9427, -66.6112, 0.15 ) }
    dend_23 { pt3dadd( 340.482, 0.358591, -65.7115, 0.15 ) }
    dend_23 { pt3dadd( 350.143, 5.92884, -66.7611, 0.15 ) }
    dend_23 { pt3dadd( 359.365, 12.1767, -67.9312, 0.15 ) }
    dend_23 { pt3dadd( 367.812, 19.0886, -70.4442, 0.15 ) }
    dend_23 { pt3dadd( 374.67, 27.6398, -72.747, 0.15 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 10/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 244.131, -20.8641, -73.1172, 0.07 ) }
    dend_22 { pt3dadd( 253.64, -21.0445, -75.2856, 0.15 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 12/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 366.332, -143.469, -113.791, 0.15 ) }
    dend_20 { pt3dadd( 375.474, -147.287, -116.0, 0.15 ) }
    dend_20 { pt3dadd( 384.95, -150.838, -116.812, 0.15 ) }
    dend_20 { pt3dadd( 394.487, -153.802, -118.631, 0.15 ) }
    dend_20 { pt3dadd( 403.868, -157.101, -120.669, 0.15 ) }
    dend_20 { pt3dadd( 413.567, -159.642, -122.261, 0.15 ) }
    dend_20 { pt3dadd( 422.927, -163.432, -123.303, 0.15 ) }
    dend_20 { pt3dadd( 432.31, -166.895, -125.036, 0.15 ) }
    dend_20 { pt3dadd( 441.431, -170.616, -127.487, 0.15 ) }
    dend_20 { pt3dadd( 450.356, -174.21, -130.725, 0.15 ) }
    dend_20 { pt3dadd( 459.014, -179.051, -132.882, 0.15 ) }
    dend_20 { pt3dadd( 467.379, -184.781, -133.368, 0.15 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 24/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 366.332, -143.469, -113.791, 0.07 ) }
    dend_19 { pt3dadd( 377.272, -147.477, -116.625, 0.15 ) }
    dend_19 { pt3dadd( 388.016, -152.398, -118.662, 0.15 ) }
    dend_19 { pt3dadd( 398.589, -157.521, -121.062, 0.15 ) }
    dend_19 { pt3dadd( 409.589, -161.734, -123.303, 0.15 ) }
    dend_19 { pt3dadd( 420.03, -167.521, -124.441, 0.15 ) }
    dend_19 { pt3dadd( 430.939, -171.409, -127.549, 0.15 ) }
    dend_19 { pt3dadd( 441.94, -175.461, -130.071, 0.15 ) }
    dend_19 { pt3dadd( 453.272, -178.075, -132.992, 0.15 ) }
    dend_19 { pt3dadd( 465.111, -179.055, -134.627, 0.15 ) }
    dend_19 { pt3dadd( 476.979, -180.74, -134.967, 0.15 ) }
    dend_19 { pt3dadd( 488.643, -183.522, -135.047, 0.15 ) }
    dend_19 { pt3dadd( 499.583, -188.204, -136.527, 0.15 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 37/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -72.6325, 260.848, -48.1842, 0.15 ) }
    dend_13 { pt3dadd( -76.2241, 271.447, -49.8994, 0.15 ) }
    dend_13 { pt3dadd( -80.2529, 281.986, -50.8331, 0.15 ) }
    dend_13 { pt3dadd( -85.4611, 291.993, -51.7966, 0.15 ) }
    dend_13 { pt3dadd( -90.4331, 302.16, -51.4814, 0.15 ) }
    dend_13 { pt3dadd( -93.8559, 312.822, -49.8125, 0.15 ) }
    dend_13 { pt3dadd( -97.2096, 323.596, -48.8914, 0.15 ) }
    dend_13 { pt3dadd( -99.4646, 334.688, -49.1834, 0.15 ) }
    dend_13 { pt3dadd( -101.649, 345.782, -48.6164, 0.15 ) }
    dend_13 { pt3dadd( -102.391, 357.074, -48.274, 0.15 ) }
    dend_13 { pt3dadd( -101.082, 368.019, -45.6875, 0.15 ) }
    dend_13 { pt3dadd( -101.78, 378.603, -41.7277, 0.15 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 49/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -72.6325, 260.848, -48.1842, 0.07 ) }
    dend_12 { pt3dadd( -76.0383, 271.16, -49.4828, 0.15 ) }
    dend_12 { pt3dadd( -77.1917, 281.901, -51.1986, 0.15 ) }
    dend_12 { pt3dadd( -78.497, 292.33, -54.2241, 0.15 ) }
    dend_12 { pt3dadd( -79.7099, 302.223, -58.7296, 0.15 ) }
    dend_12 { pt3dadd( -80.7217, 312.193, -63.1131, 0.15 ) }
    dend_12 { pt3dadd( -79.9206, 322.516, -66.6395, 0.15 ) }
    dend_12 { pt3dadd( -80.7065, 332.578, -70.8546, 0.15 ) }
    dend_12 { pt3dadd( -82.5531, 342.731, -74.479, 0.15 ) }
    dend_12 { pt3dadd( -86.2884, 351.925, -79.0777, 0.15 ) }
    dend_12 { pt3dadd( -90.5621, 360.819, -83.7967, 0.15 ) }
    dend_12 { pt3dadd( -94.2461, 369.518, -89.3098, 0.15 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 61/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.0034, 237.714, -64.8551, 0.15 ) }
    dend_10 { pt3dadd( -17.3666, 245.978, -66.248, 0.15 ) }
    dend_10 { pt3dadd( -18.4091, 254.386, -66.8205, 0.15 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 64/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -16.0034, 237.714, -64.8551, 0.07 ) }
    dend_9 { pt3dadd( -15.8602, 245.084, -67.0996, 0.15 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -71.9697, 298.386, 103.316, 0.15 ) }
    dend_6 { pt3dadd( -72.3149, 299.263, 102.547, 0.15 ) }
    dend_6 { pt3dadd( -72.7899, 300.649, 101.479, 0.15 ) }
    dend_6 { pt3dadd( -73.1142, 301.726, 100.742, 0.15 ) }
    dend_6 { pt3dadd( -73.2342, 302.165, 100.47, 0.59 ) }
    dend_6 { pt3dadd( -73.4069, 302.847, 100.082, 0.81 ) }
    dend_6 { pt3dadd( -73.5996, 303.692, 99.633, 0.15 ) }
    dend_6 { pt3dadd( -73.7851, 304.67, 99.1403, 0.15 ) }
    dend_6 { pt3dadd( -73.877, 305.274, 98.8471, 0.15 ) }
    dend_6 { pt3dadd( -73.9376, 305.724, 98.6062, 0.29 ) }
    dend_6 { pt3dadd( -73.9945, 306.096, 98.3741, 0.29 ) }
    dend_6 { pt3dadd( -74.057, 306.453, 98.1271, 0.29 ) }
    dend_6 { pt3dadd( -74.331, 307.652, 97.3125, 0.15 ) }
    dend_6 { pt3dadd( -74.6794, 308.857, 96.4993, 0.15 ) }
    dend_6 { pt3dadd( -74.8607, 309.445, 96.169, 0.15 ) }
    dend_6 { pt3dadd( -75.0851, 310.132, 95.8972, 0.52 ) }
    dend_6 { pt3dadd( -75.2137, 310.489, 95.778, 0.52 ) }
    dend_6 { pt3dadd( -75.7026, 311.802, 95.444, 0.07 ) }
    dend_6 { pt3dadd( -76.0038, 312.615, 95.3217, 0.07 ) }
    dend_6 { pt3dadd( -76.645, 314.32, 95.1552, 0.44 ) }
    dend_6 { pt3dadd( -77.1685, 315.693, 95.0168, 0.07 ) }
    dend_6 { pt3dadd( -77.7111, 317.08, 94.8073, 0.07 ) }
    dend_6 { pt3dadd( -77.99, 317.762, 94.6723, 0.07 ) }
    dend_6 { pt3dadd( -78.2536, 318.398, 94.5433, 0.37 ) }
    dend_6 { pt3dadd( -78.3958, 318.737, 94.4767, 0.37 ) }
    dend_6 { pt3dadd( -78.9913, 320.126, 94.1612, 0.15 ) }
    dend_6 { pt3dadd( -79.4246, 321.22, 94.0601, 0.15 ) }
    dend_6 { pt3dadd( -79.6943, 321.952, 94.0899, 0.15 ) }
    dend_6 { pt3dadd( -80.0399, 322.859, 94.099, 0.59 ) }
    dend_6 { pt3dadd( -80.1916, 323.23, 94.0741, 0.59 ) }
    dend_6 { pt3dadd( -80.6817, 324.35, 93.8402, 0.07 ) }
    dend_6 { pt3dadd( -81.1856, 325.596, 93.6373, 0.07 ) }
    dend_6 { pt3dadd( -81.3607, 326.096, 93.5843, 0.29 ) }
    dend_6 { pt3dadd( -81.8807, 327.905, 93.3986, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_6 { pt3dadd( -82.2145, 329.246, 93.1806, 0.07 ) }
    dend_6 { pt3dadd( -82.5133, 330.599, 93.041, 0.07 ) }
    dend_6 { pt3dadd( -83.1151, 333.6, 93.0888, 0.29 ) }
    dend_6 { pt3dadd( -83.22, 334.113, 93.1406, 0.52 ) }
    dend_6 { pt3dadd( -83.4358, 335.196, 93.3596, 0.15 ) }
    dend_6 { pt3dadd( -83.731, 336.812, 93.8154, 0.22 ) }
    dend_6 { pt3dadd( -84.0201, 338.468, 94.3095, 0.07 ) }
    dend_6 { pt3dadd( -84.3069, 339.982, 94.7137, 0.07 ) }
    dend_6 { pt3dadd( -84.5097, 340.95, 94.9242, 0.07 ) }
    dend_6 { pt3dadd( -84.6664, 341.815, 95.1795, 0.22 ) }
    dend_6 { pt3dadd( -84.7481, 342.462, 95.4328, 0.37 ) }
    dend_6 { pt3dadd( -84.7768, 343.016, 95.6925, 0.44 ) }
    dend_6 { pt3dadd( -84.7467, 343.892, 96.1256, 0.15 ) }
    dend_6 { pt3dadd( -84.6012, 345.375, 96.9282, 0.15 ) }
    dend_6 { pt3dadd( -84.4758, 346.266, 97.4805, 0.15 ) }
    dend_6 { pt3dadd( -84.3806, 346.866, 97.8779, 0.15 ) }
    dend_6 { pt3dadd( -84.2728, 347.684, 98.4224, 0.52 ) }
    dend_6 { pt3dadd( -84.1291, 348.983, 99.2482, 0.07 ) }
    dend_6 { pt3dadd( -84.0561, 349.815, 99.7279, 0.07 ) }
    dend_6 { pt3dadd( -84.0221, 350.59, 100.085, 0.07 ) }
    dend_6 { pt3dadd( -84.0229, 351.084, 100.282, 0.44 ) }
    dend_6 { pt3dadd( -84.1089, 352.724, 100.771, 0.15 ) }
    dend_6 { pt3dadd( -84.1634, 353.303, 100.911, 0.15 ) }
    dend_6 { pt3dadd( -84.2425, 353.808, 100.961, 0.29 ) }
    dend_6 { pt3dadd( -84.3899, 354.594, 100.965, 0.07 ) }
    dend_6 { pt3dadd( -84.4887, 355.119, 100.931, 0.22 ) }
    dend_6 { pt3dadd( -84.87, 357.228, 100.703, 0.07 ) }
    dend_6 { pt3dadd( -85.0679, 358.426, 100.519, 0.07 ) }
    dend_6 { pt3dadd( -85.352, 360.136, 100.151, 0.07 ) }
    dend_6 { pt3dadd( -85.4755, 360.821, 99.9161, 0.29 ) }
    dend_6 { pt3dadd( -85.6721, 361.848, 99.4611, 0.07 ) }
    dend_6 { pt3dadd( -85.7662, 362.304, 99.2218, 0.44 ) }
    dend_6 { pt3dadd( -86.0129, 363.381, 98.5798, 0.15 ) }
    dend_6 { pt3dadd( -86.3901, 364.968, 97.5896, 0.15 ) }
    dend_6 { pt3dadd( -86.8642, 366.81, 96.5095, 0.15 ) }
    dend_6 { pt3dadd( -87.0323, 367.379, 96.1737, 0.37 ) }
    dend_6 { pt3dadd( -87.1561, 367.747, 95.9619, 0.37 ) }
    dend_6 { pt3dadd( -87.5383, 368.832, 95.4246, 0.15 ) }
    dend_6 { pt3dadd( -87.8366, 369.679, 95.1723, 0.15 ) }
    dend_6 { pt3dadd( -88.0249, 370.284, 95.1858, 0.29 ) }
    dend_6 { pt3dadd( -88.2114, 370.967, 95.3615, 0.29 ) }
    dend_6 { pt3dadd( -88.3751, 371.588, 95.5795, 0.29 ) }
    dend_6 { pt3dadd( -88.7203, 372.887, 96.0919, 0.15 ) }
    dend_6 { pt3dadd( -89.1414, 374.472, 96.7923, 0.15 ) }
    dend_6 { pt3dadd( -89.4667, 375.73, 97.358, 0.52 ) }
    dend_6 { pt3dadd( -89.6375, 376.395, 97.6255, 0.52 ) }
    dend_6 { pt3dadd( -90.0004, 377.663, 98.0623, 0.07 ) }
    dend_6 { pt3dadd( -90.2852, 378.548, 98.305, 0.07 ) }
    dend_6 { pt3dadd( -90.3641, 378.763, 98.3444, 0.07 ) }
    dend_6 { pt3dadd( -90.7422, 379.7, 98.3969, 0.59 ) }
    dend_6 { pt3dadd( -91.298, 381.068, 98.382, 0.07 ) }
    dend_6 { pt3dadd( -91.737, 382.22, 98.3431, 0.07 ) }
    dend_6 { pt3dadd( -91.9592, 382.861, 98.3242, 0.52 ) }
    dend_6 { pt3dadd( -92.0848, 383.275, 98.3143, 0.52 ) }
    dend_6 { pt3dadd( -92.3662, 384.386, 98.2766, 0.15 ) }
    dend_6 { pt3dadd( -92.5073, 385.097, 98.2445, 0.15 ) }
    dend_6 { pt3dadd( -92.6615, 386.049, 98.1944, 0.15 ) }
    dend_6 { pt3dadd( -92.7152, 386.418, 98.1844, 0.22 ) }
    dend_6 { pt3dadd( -92.8536, 387.445, 98.1757, 0.22 ) }
    dend_6 { pt3dadd( -92.9197, 387.944, 98.1507, 0.22 ) }
    dend_6 { pt3dadd( -93.0697, 389.061, 98.0886, 0.22 ) }
    dend_6 { pt3dadd( -93.2186, 390.084, 98.041, 0.07 ) }
    dend_6 { pt3dadd( -93.3624, 391.071, 98.0002, 0.07 ) }
    dend_6 { pt3dadd( -93.5006, 391.863, 97.9885, 0.22 ) }
    dend_6 { pt3dadd( -93.8218, 393.36, 98.0017, 0.07 ) }
    dend_6 { pt3dadd( -94.0165, 394.21, 98.0179, 0.07 ) }
    dend_6 { pt3dadd( -94.1064, 394.654, 98.0414, 0.07 ) }
    dend_6 { pt3dadd( -94.2432, 395.47, 98.0252, 0.15 ) }
    dend_6 { pt3dadd( -94.4417, 397.015, 97.9226, 0.15 ) }
    dend_6 { pt3dadd( -94.5421, 398.117, 97.8303, 0.44 ) }
    dend_6 { pt3dadd( -94.5579, 399.603, 97.7687, 0.15 ) }
    dend_6 { pt3dadd( -94.4771, 400.914, 97.7341, 0.15 ) }
    dend_6 { pt3dadd( -94.1851, 403.197, 97.7692, 0.07 ) }
    dend_6 { pt3dadd( -94.0465, 403.99, 97.82, 0.07 ) }
    dend_6 { pt3dadd( -93.9085, 404.63, 97.9142, 0.22 ) }
    dend_6 { pt3dadd( -93.5948, 406.647, 98.4529, 0.07 ) }
    dend_6 { pt3dadd( -93.5381, 407.613, 98.8225, 0.07 ) }
    dend_6 { pt3dadd( -93.5992, 408.532, 99.2535, 0.07 ) }
    dend_6 { pt3dadd( -93.7022, 409.394, 99.7399, 0.07 ) }
    dend_6 { pt3dadd( -93.934, 410.563, 100.414, 0.22 ) }
    dend_6 { pt3dadd( -94.3742, 412.075, 101.3, 0.07 ) }
    dend_6 { pt3dadd( -94.5996, 412.572, 101.571, 0.07 ) }
    dend_6 { pt3dadd( -94.992, 413.283, 101.955, 0.15 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 83/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -71.9697, 298.386, 103.316, 0.07 ) }
    dend_5 { pt3dadd( -71.739, 299.749, 104.018, 0.07 ) }
    dend_5 { pt3dadd( -71.686, 300.193, 104.23, 0.22 ) }
    dend_5 { pt3dadd( -71.5144, 302.105, 105.055, 0.07 ) }
    dend_5 { pt3dadd( -71.4027, 303.146, 105.562, 0.07 ) }
    dend_5 { pt3dadd( -71.3303, 303.68, 105.835, 0.29 ) }
    dend_5 { pt3dadd( -71.2834, 303.921, 105.977, 0.29 ) }
    dend_5 { pt3dadd( -71.1217, 304.545, 106.437, 0.07 ) }
    dend_5 { pt3dadd( -70.9664, 305.023, 106.845, 0.44 ) }
    dend_5 { pt3dadd( -70.4889, 306.277, 108.07, 0.07 ) }
    dend_5 { pt3dadd( -70.3293, 306.666, 108.493, 0.29 ) }
    dend_5 { pt3dadd( -69.7129, 308.059, 110.184, 0.07 ) }
    dend_5 { pt3dadd( -69.2586, 309.037, 111.411, 0.07 ) }
    dend_5 { pt3dadd( -69.007, 309.59, 112.157, 0.44 ) }
    dend_5 { pt3dadd( -68.756, 310.187, 113.002, 0.66 ) }
    dend_5 { pt3dadd( -68.2897, 311.449, 114.779, 0.07 ) }
    dend_5 { pt3dadd( -67.9328, 312.521, 116.263, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_5 { pt3dadd( -67.804, 312.946, 116.826, 0.59 ) }
    dend_5 { pt3dadd( -67.2874, 314.846, 119.103, 0.22 ) }
    dend_5 { pt3dadd( -66.9373, 316.314, 120.64, 0.07 ) }
    dend_5 { pt3dadd( -66.7496, 317.228, 121.442, 0.88 ) }
    dend_5 { pt3dadd( -66.6405, 317.903, 121.905, 0.15 ) }
    dend_5 { pt3dadd( -66.575, 318.437, 122.177, 0.44 ) }
    dend_5 { pt3dadd( -66.4178, 319.774, 122.692, 0.15 ) }
    dend_5 { pt3dadd( -66.285, 321.007, 122.913, 0.15 ) }
    dend_5 { pt3dadd( -66.2033, 321.879, 122.964, 0.15 ) }
    dend_5 { pt3dadd( -66.1369, 322.628, 122.977, 0.37 ) }
    dend_5 { pt3dadd( -66.0812, 323.255, 122.997, 0.15 ) }
    dend_5 { pt3dadd( -65.9952, 324.091, 123.041, 0.29 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 12/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.118, 39.6547, 1.76797, 0.37 ) }
    dend_3 { pt3dadd( 11.6102, 41.321, 2.65529, 0.37 ) }
    dend_3 { pt3dadd( 11.4395, 42.0003, 2.99015, 0.37 ) }
    dend_3 { pt3dadd( 11.2438, 42.9771, 3.46951, 0.37 ) }
    dend_3 { pt3dadd( 11.1025, 43.8984, 3.88632, 0.81 ) }
    dend_3 { pt3dadd( 11.0106, 44.7367, 4.22047, 1.03 ) }
    dend_3 { pt3dadd( 10.9202, 45.9219, 4.63515, 1.03 ) }
    dend_3 { pt3dadd( 10.9219, 46.899, 4.92347, 0.74 ) }
    dend_3 { pt3dadd( 10.9767, 48.3335, 5.293, 0.52 ) }
    dend_3 { pt3dadd( 11.0673, 49.5195, 5.52371, 0.29 ) }
    dend_3 { pt3dadd( 11.159, 50.4124, 5.65883, 0.22 ) }
    dend_3 { pt3dadd( 11.2845, 51.3987, 5.70492, 0.29 ) }
    dend_3 { pt3dadd( 11.4297, 52.3302, 5.62985, 0.59 ) }
    dend_3 { pt3dadd( 11.5458, 52.9447, 5.52638, 0.81 ) }
    dend_3 { pt3dadd( 11.7661, 53.9447, 5.24524, 0.81 ) }
    dend_3 { pt3dadd( 11.9414, 54.6743, 5.00913, 0.59 ) }
    dend_3 { pt3dadd( 12.3971, 56.5347, 4.37493, 0.29 ) }
    dend_3 { pt3dadd( 12.7287, 57.8433, 3.90117, 0.22 ) }
    dend_3 { pt3dadd( 12.8696, 58.3882, 3.68974, 0.29 ) }
    dend_3 { pt3dadd( 13.1495, 59.4887, 3.27311, 0.29 ) }
    dend_3 { pt3dadd( 13.4234, 60.6427, 2.86849, 0.22 ) }
    dend_3 { pt3dadd( 13.5634, 61.2974, 2.67435, 0.22 ) }
    dend_3 { pt3dadd( 13.7446, 62.2457, 2.47185, 0.37 ) }
    dend_3 { pt3dadd( 13.9026, 63.1542, 2.28074, 0.52 ) }
    dend_3 { pt3dadd( 14.0127, 63.837, 2.15831, 0.52 ) }
    dend_3 { pt3dadd( 14.1475, 64.7402, 2.03944, 0.66 ) }
    dend_3 { pt3dadd( 14.2363, 65.3112, 1.97347, 0.88 ) }
    dend_3 { pt3dadd( 14.34, 65.907, 1.9038, 1.4 ) }
    dend_3 { pt3dadd( 14.4845, 66.6652, 1.82081, 1.4 ) }
    dend_3 { pt3dadd( 14.7583, 67.9987, 1.69499, 0.59 ) }
    dend_3 { pt3dadd( 15.0336, 69.2402, 1.57837, 0.44 ) }
    dend_3 { pt3dadd( 15.2885, 70.3587, 1.53678, 0.22 ) }
    dend_3 { pt3dadd( 15.5006, 71.2824, 1.54944, 0.22 ) }
    dend_3 { pt3dadd( 15.6528, 71.937, 1.59088, 0.59 ) }
    dend_3 { pt3dadd( 15.7157, 72.1818, 1.61906, 0.59 ) }
    dend_3 { pt3dadd( 15.9621, 73.0617, 1.77086, 0.29 ) }
    dend_3 { pt3dadd( 16.3848, 74.5307, 2.09013, 0.29 ) }
    dend_3 { pt3dadd( 16.5617, 75.1838, 2.23632, 1.18 ) }
    dend_3 { pt3dadd( 16.7264, 75.8059, 2.36154, 1.47 ) }
    dend_3 { pt3dadd( 16.8796, 76.4246, 2.44769, 1.47 ) }
    dend_3 { pt3dadd( 17.0733, 77.2755, 2.51629, 0.52 ) }
    dend_3 { pt3dadd( 17.228, 77.968, 2.49908, 0.52 ) }
    dend_3 { pt3dadd( 17.5256, 79.3539, 2.32076, 0.22 ) }
    dend_3 { pt3dadd( 17.7059, 80.1966, 2.19077, 0.22 ) }
    dend_3 { pt3dadd( 17.8655, 80.9006, 2.07228, 0.37 ) }
    dend_3 { pt3dadd( 18.0277, 81.5747, 1.95259, 0.66 ) }
    dend_3 { pt3dadd( 18.3031, 82.5521, 1.78232, 0.96 ) }
    dend_3 { pt3dadd( 18.4619, 83.0227, 1.71701, 0.96 ) }
    dend_3 { pt3dadd( 18.9198, 84.1908, 1.60417, 0.22 ) }
    dend_3 { pt3dadd( 19.2634, 84.9679, 1.56968, 0.52 ) }
    dend_3 { pt3dadd( 19.4485, 85.3348, 1.57139, 0.52 ) }
    dend_3 { pt3dadd( 19.9671, 86.268, 1.63497, 0.22 ) }
    dend_3 { pt3dadd( 20.4621, 87.1012, 1.7659, 0.29 ) }
    dend_3 { pt3dadd( 20.785, 87.6105, 1.85445, 0.52 ) }
    dend_3 { pt3dadd( 21.106, 88.1029, 1.94065, 0.74 ) }
    dend_3 { pt3dadd( 21.4321, 88.6111, 2.02343, 0.74 ) }
    dend_3 { pt3dadd( 22.0885, 89.6548, 2.17448, 0.44 ) }
    dend_3 { pt3dadd( 22.8352, 90.898, 2.31022, 0.29 ) }
    dend_3 { pt3dadd( 23.2237, 91.5888, 2.35934, 0.52 ) }
    dend_3 { pt3dadd( 23.6053, 92.3281, 2.39473, 1.11 ) }
    dend_3 { pt3dadd( 23.9088, 92.9695, 2.41112, 0.96 ) }
    dend_3 { pt3dadd( 24.2364, 93.7289, 2.41217, 0.29 ) }
    dend_3 { pt3dadd( 24.7306, 94.9796, 2.37736, 0.22 ) }
    dend_3 { pt3dadd( 24.9583, 95.6031, 2.35262, 0.22 ) }
    dend_3 { pt3dadd( 25.2996, 96.5659, 2.33023, 0.29 ) }
    dend_3 { pt3dadd( 25.4748, 97.052, 2.32379, 0.29 ) }
    dend_3 { pt3dadd( 25.8238, 98.0151, 2.31636, 0.15 ) }
    dend_3 { pt3dadd( 26.0856, 98.762, 2.31411, 0.15 ) }
    dend_3 { pt3dadd( 26.2762, 99.3094, 2.31212, 0.22 ) }
    dend_3 { pt3dadd( 26.3808, 99.6056, 2.30836, 0.59 ) }
    dend_3 { pt3dadd( 26.5708, 100.146, 2.30591, 0.88 ) }
    dend_3 { pt3dadd( 26.8275, 100.888, 2.30815, 0.22 ) }
    dend_3 { pt3dadd( 27.0462, 101.592, 2.31242, 0.22 ) }
    dend_3 { pt3dadd( 27.2731, 102.446, 2.34589, 0.22 ) }
    dend_3 { pt3dadd( 27.3732, 102.845, 2.37144, 0.44 ) }
    dend_3 { pt3dadd( 27.4965, 103.342, 2.36302, 0.96 ) }
    dend_3 { pt3dadd( 27.6046, 103.78, 2.32026, 1.4 ) }
    dend_3 { pt3dadd( 27.8029, 104.596, 2.17406, 0.96 ) }
    dend_3 { pt3dadd( 27.9949, 105.417, 1.9814, 0.81 ) }
    dend_3 { pt3dadd( 28.1976, 106.297, 1.72157, 0.29 ) }
    dend_3 { pt3dadd( 28.576, 107.911, 1.22594, 0.37 ) }
    dend_3 { pt3dadd( 28.76, 108.636, 0.993683, 0.37 ) }
    dend_3 { pt3dadd( 29.018, 109.581, 0.69461, 0.37 ) }
    dend_3 { pt3dadd( 29.249, 110.377, 0.46031, 0.37 ) }
    dend_3 { pt3dadd( 29.4447, 111.061, 0.293588, 0.37 ) }
    dend_3 { pt3dadd( 29.6515, 111.798, 0.184055, 0.74 ) }
    dend_3 { pt3dadd( 29.7945, 112.287, 0.166984, 1.25 ) }
    dend_3 { pt3dadd( 30.0085, 112.995, 0.165374, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_3 { pt3dadd( 30.3494, 114.079, 0.182901, 0.44 ) }
    dend_3 { pt3dadd( 30.7325, 115.325, 0.266561, 0.15 ) }
    dend_3 { pt3dadd( 30.9319, 115.993, 0.335513, 0.15 ) }
    dend_3 { pt3dadd( 31.163, 116.807, 0.421492, 0.29 ) }
    dend_3 { pt3dadd( 31.4462, 117.819, 0.560244, 0.15 ) }
    dend_3 { pt3dadd( 31.605, 118.391, 0.654142, 0.22 ) }
    dend_3 { pt3dadd( 31.9255, 119.495, 0.855891, 0.37 ) }
    dend_3 { pt3dadd( 32.0404, 119.852, 0.92219, 0.88 ) }
    dend_3 { pt3dadd( 32.1537, 120.182, 0.977326, 1.11 ) }
    dend_3 { pt3dadd( 32.4723, 121.058, 1.09556, 0.22 ) }
    dend_3 { pt3dadd( 32.847, 122.055, 1.19, 0.15 ) }
    dend_3 { pt3dadd( 33.1557, 122.879, 1.22679, 0.22 ) }
    dend_3 { pt3dadd( 33.5615, 123.907, 1.21608, 0.29 ) }
    dend_3 { pt3dadd( 33.852, 124.654, 1.20636, 0.29 ) }
    dend_3 { pt3dadd( 34.014, 125.072, 1.201, 0.59 ) }
    dend_3 { pt3dadd( 34.175, 125.483, 1.19643, 1.03 ) }
    dend_3 { pt3dadd( 34.3661, 125.96, 1.19288, 1.4 ) }
    dend_3 { pt3dadd( 34.6696, 126.749, 1.18803, 1.4 ) }
    dend_3 { pt3dadd( 35.0491, 127.749, 1.18563, 0.59 ) }
    dend_3 { pt3dadd( 35.6022, 129.156, 1.23694, 0.22 ) }
    dend_3 { pt3dadd( 35.8774, 129.826, 1.28457, 0.22 ) }
    dend_3 { pt3dadd( 36.2252, 130.636, 1.36307, 0.22 ) }
    dend_3 { pt3dadd( 36.4202, 131.094, 1.41782, 0.29 ) }
    dend_3 { pt3dadd( 36.5722, 131.478, 1.46941, 0.44 ) }
    dend_3 { pt3dadd( 36.8507, 132.195, 1.57538, 0.96 ) }
    dend_3 { pt3dadd( 36.9424, 132.472, 1.62843, 1.18 ) }
    dend_3 { pt3dadd( 37.0658, 132.917, 1.71815, 1.18 ) }
    dend_3 { pt3dadd( 37.1873, 133.396, 1.79928, 1.11 ) }
    dend_3 { pt3dadd( 37.5117, 134.72, 1.90319, 0.22 ) }
    dend_3 { pt3dadd( 37.6807, 135.428, 1.90359, 0.29 ) }
    dend_3 { pt3dadd( 37.9197, 136.434, 1.8189, 0.52 ) }
    dend_3 { pt3dadd( 38.0396, 136.899, 1.73797, 0.66 ) }
    dend_3 { pt3dadd( 38.2277, 137.553, 1.57394, 0.66 ) }
    dend_3 { pt3dadd( 38.6091, 138.72, 1.19445, 0.15 ) }
    dend_3 { pt3dadd( 38.7946, 139.258, 0.992909, 0.15 ) }
    dend_3 { pt3dadd( 38.9737, 139.781, 0.792427, 0.15 ) }
    dend_3 { pt3dadd( 39.3565, 140.864, 0.412916, 0.15 ) }
    dend_3 { pt3dadd( 39.4871, 141.244, 0.327361, 0.52 ) }
    dend_3 { pt3dadd( 39.6281, 141.663, 0.286523, 1.03 ) }
    dend_3 { pt3dadd( 39.9129, 142.503, 0.240024, 1.25 ) }
    dend_3 { pt3dadd( 40.0642, 142.936, 0.208317, 1.33 ) }
    dend_3 { pt3dadd( 40.4922, 144.118, 0.120117, 0.44 ) }
    dend_3 { pt3dadd( 40.9335, 145.367, 0.0195409, 0.15 ) }
    dend_3 { pt3dadd( 41.2198, 146.193, -0.0856585, 0.15 ) }
    dend_3 { pt3dadd( 41.5059, 147.005, -0.261494, 0.29 ) }
    dend_3 { pt3dadd( 41.7046, 147.555, -0.424046, 0.66 ) }
    dend_3 { pt3dadd( 41.9056, 148.118, -0.61592, 0.96 ) }
    dend_3 { pt3dadd( 42.0914, 148.686, -0.827269, 0.81 ) }
    dend_3 { pt3dadd( 42.3369, 149.514, -1.13367, 0.29 ) }
    dend_3 { pt3dadd( 42.7051, 150.835, -1.54936, 0.15 ) }
    dend_3 { pt3dadd( 42.8554, 151.387, -1.67138, 0.15 ) }
    dend_3 { pt3dadd( 42.9531, 151.711, -1.74935, 0.59 ) }
    dend_3 { pt3dadd( 43.0662, 152.043, -1.83987, 0.88 ) }
    dend_3 { pt3dadd( 43.239, 152.49, -1.96867, 1.11 ) }
    dend_3 { pt3dadd( 43.566, 153.278, -2.18665, 0.29 ) }
    dend_3 { pt3dadd( 44.0211, 154.319, -2.42199, 0.15 ) }
    dend_3 { pt3dadd( 44.5533, 155.447, -2.66072, 0.15 ) }
    dend_3 { pt3dadd( 44.7686, 155.867, -2.74026, 0.59 ) }
    dend_3 { pt3dadd( 45.0019, 156.296, -2.80726, 0.81 ) }
    dend_3 { pt3dadd( 45.4334, 157.073, -2.89937, 0.22 ) }
    dend_3 { pt3dadd( 45.9948, 158.101, -2.97098, 0.22 ) }
    dend_3 { pt3dadd( 46.3021, 158.666, -2.98047, 0.22 ) }
    dend_3 { pt3dadd( 46.6803, 159.367, -2.95612, 0.29 ) }
    dend_3 { pt3dadd( 47.2217, 160.343, -2.91995, 0.22 ) }
    dend_3 { pt3dadd( 47.6502, 161.095, -2.89031, 0.29 ) }
    dend_3 { pt3dadd( 48.343, 162.299, -2.84175, 0.29 ) }
    dend_3 { pt3dadd( 48.7508, 163.012, -2.81341, 0.29 ) }
    dend_3 { pt3dadd( 49.3156, 164.02, -2.74667, 0.22 ) }
    dend_3 { pt3dadd( 49.513, 164.38, -2.71457, 0.29 ) }
    dend_3 { pt3dadd( 49.7549, 164.819, -2.66602, 0.88 ) }
    dend_3 { pt3dadd( 49.9548, 165.177, -2.64079, 0.88 ) }
    dend_3 { pt3dadd( 50.3961, 165.983, -2.61653, 0.22 ) }
    dend_3 { pt3dadd( 51.0011, 167.119, -2.62641, 0.22 ) }
    dend_3 { pt3dadd( 51.5412, 168.168, -2.67104, 0.15 ) }
    dend_3 { pt3dadd( 51.8854, 168.835, -2.7376, 0.15 ) }
    dend_3 { pt3dadd( 52.415, 169.848, -2.90076, 0.29 ) }
    dend_3 { pt3dadd( 52.6351, 170.263, -2.99003, 0.74 ) }
    dend_3 { pt3dadd( 52.9855, 170.909, -3.17423, 0.22 ) }
    dend_3 { pt3dadd( 53.5456, 171.877, -3.51874, 0.15 ) }
    dend_3 { pt3dadd( 53.9925, 172.61, -3.7759, 0.15 ) }
    dend_3 { pt3dadd( 54.3731, 173.229, -3.95714, 0.37 ) }
    dend_3 { pt3dadd( 54.5709, 173.549, -4.02258, 0.59 ) }
    dend_3 { pt3dadd( 54.8503, 173.978, -4.1012, 1.03 ) }
    dend_3 { pt3dadd( 55.0249, 174.235, -4.13149, 1.03 ) }
    dend_3 { pt3dadd( 55.5075, 174.896, -4.13972, 0.22 ) }
    dend_3 { pt3dadd( 56.0573, 175.594, -4.13108, 0.15 ) }
    dend_3 { pt3dadd( 56.5344, 176.17, -4.12322, 0.15 ) }
    dend_3 { pt3dadd( 56.9257, 176.626, -4.11756, 0.96 ) }
    dend_3 { pt3dadd( 57.3491, 177.114, -4.09088, 0.96 ) }
    dend_3 { pt3dadd( 58.3999, 178.315, -3.99424, 0.15 ) }
    dend_3 { pt3dadd( 59.3779, 179.379, -3.93189, 0.15 ) }
    dend_3 { pt3dadd( 59.6903, 179.706, -3.91894, 0.15 ) }
    dend_3 { pt3dadd( 60.0447, 180.07, -3.91099, 0.29 ) }
    dend_3 { pt3dadd( 60.6579, 180.687, -3.9108, 0.96 ) }
    dend_3 { pt3dadd( 61.3357, 181.338, -3.92144, 0.07 ) }
    dend_3 { pt3dadd( 62.2006, 182.145, -3.89655, 0.07 ) }
    dend_3 { pt3dadd( 62.6333, 182.56, -3.85209, 0.52 ) }
    dend_3 { pt3dadd( 62.9145, 182.831, -3.82407, 0.59 ) }
    dend_3 { pt3dadd( 63.1436, 183.054, -3.83146, 0.59 ) }
    dend_3 { pt3dadd( 63.8845, 183.782, -3.99066, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_3 { pt3dadd( 64.2353, 184.146, -4.10575, 0.15 ) }
    dend_3 { pt3dadd( 64.6853, 184.645, -4.22163, 0.29 ) }
    dend_3 { pt3dadd( 65.0963, 185.088, -4.30205, 0.66 ) }
    dend_3 { pt3dadd( 66.206, 186.206, -4.41744, 0.88 ) }
    dend_3 { pt3dadd( 66.7826, 186.755, -4.43169, 0.88 ) }
    dend_3 { pt3dadd( 67.3991, 187.3, -4.40385, 0.29 ) }
    dend_3 { pt3dadd( 68.5253, 188.239, -4.28315, 0.15 ) }
    dend_3 { pt3dadd( 69.1959, 188.813, -4.16684, 0.29 ) }
    dend_3 { pt3dadd( 70.0479, 189.585, -3.9624, 0.22 ) }
    dend_3 { pt3dadd( 70.5828, 190.086, -3.79527, 0.66 ) }
    dend_3 { pt3dadd( 71.0078, 190.501, -3.66102, 0.96 ) }
    dend_3 { pt3dadd( 71.4791, 191.009, -3.54395, 0.96 ) }
    dend_3 { pt3dadd( 72.8077, 192.642, -3.35035, 0.15 ) }
    dend_3 { pt3dadd( 73.0558, 193.018, -3.31775, 0.59 ) }
    dend_3 { pt3dadd( 73.2081, 193.299, -3.29853, 1.03 ) }
    dend_3 { pt3dadd( 73.3289, 193.562, -3.28437, 1.03 ) }
    dend_3 { pt3dadd( 73.7727, 194.734, -3.23905, 0.15 ) }
    dend_3 { pt3dadd( 74.011, 195.478, -3.21911, 0.15 ) }
    dend_3 { pt3dadd( 74.3691, 196.81, -3.15579, 0.15 ) }
    dend_3 { pt3dadd( 74.621, 197.791, -3.06839, 0.29 ) }
    dend_3 { pt3dadd( 74.7887, 198.466, -2.98824, 0.15 ) }
    dend_3 { pt3dadd( 75.0526, 199.485, -2.84204, 0.22 ) }
    dend_3 { pt3dadd( 75.1689, 199.906, -2.76647, 0.22 ) }
    dend_3 { pt3dadd( 75.4526, 200.888, -2.53666, 0.29 ) }
    dend_3 { pt3dadd( 75.6904, 201.639, -2.32391, 0.81 ) }
    dend_3 { pt3dadd( 75.8461, 202.097, -2.18444, 1.18 ) }
    dend_3 { pt3dadd( 76.2898, 203.26, -1.80535, 0.15 ) }
    dend_3 { pt3dadd( 76.5666, 203.926, -1.57254, 0.15 ) }
    dend_3 { pt3dadd( 76.9288, 204.778, -1.26332, 0.15 ) }
    dend_3 { pt3dadd( 77.1612, 205.295, -1.06439, 0.59 ) }
    dend_3 { pt3dadd( 77.4155, 205.845, -0.839376, 0.59 ) }
    dend_3 { pt3dadd( 78.0227, 207.166, -0.255788, 0.07 ) }
    dend_3 { pt3dadd( 78.4592, 208.092, 0.176744, 0.15 ) }
    dend_3 { pt3dadd( 78.7401, 208.677, 0.442792, 0.22 ) }
    dend_3 { pt3dadd( 79.108, 209.431, 0.753445, 0.22 ) }
    dend_3 { pt3dadd( 79.3352, 209.932, 0.940774, 0.96 ) }
    dend_3 { pt3dadd( 79.5441, 210.445, 1.11761, 1.11 ) }
    dend_3 { pt3dadd( 79.7948, 211.088, 1.25099, 0.88 ) }
    dend_3 { pt3dadd( 80.2686, 212.297, 1.36124, 0.22 ) }
    dend_3 { pt3dadd( 80.6793, 213.336, 1.36754, 0.22 ) }
    dend_3 { pt3dadd( 81.0151, 214.201, 1.31566, 0.22 ) }
    dend_3 { pt3dadd( 81.3496, 215.055, 1.23809, 0.22 ) }
    dend_3 { pt3dadd( 82.002, 216.783, 1.03525, 0.88 ) }
    dend_3 { pt3dadd( 82.2144, 217.368, 0.951442, 1.18 ) }
    dend_3 { pt3dadd( 82.3378, 217.726, 0.906995, 1.18 ) }
    dend_3 { pt3dadd( 82.665, 218.695, 0.844097, 0.59 ) }
    dend_3 { pt3dadd( 83.0078, 219.654, 0.765556, 0.22 ) }
    dend_3 { pt3dadd( 83.3636, 220.659, 0.683168, 0.29 ) }
    dend_3 { pt3dadd( 83.5368, 221.158, 0.637304, 0.22 ) }
    dend_3 { pt3dadd( 83.9853, 222.416, 0.429364, 0.29 ) }
    dend_3 { pt3dadd( 84.2303, 223.108, 0.274465, 0.52 ) }
    dend_3 { pt3dadd( 84.7966, 224.644, -0.193253, 0.88 ) }
    dend_3 { pt3dadd( 85.0074, 225.203, -0.398079, 0.88 ) }
    dend_3 { pt3dadd( 85.5368, 226.631, -0.958035, 0.22 ) }
    dend_3 { pt3dadd( 85.7131, 227.141, -1.13292, 0.22 ) }
    dend_3 { pt3dadd( 86.0395, 228.18, -1.43018, 0.15 ) }
    dend_3 { pt3dadd( 86.2271, 228.863, -1.53649, 0.74 ) }
    dend_3 { pt3dadd( 86.3973, 229.552, -1.54066, 0.74 ) }
    dend_3 { pt3dadd( 86.6833, 230.739, -1.47336, 0.15 ) }
    dend_3 { pt3dadd( 86.9913, 232.011, -1.35516, 0.15 ) }
    dend_3 { pt3dadd( 87.1883, 232.838, -1.28304, 0.22 ) }
    dend_3 { pt3dadd( 87.4365, 234.098, -1.16973, 0.22 ) }
    dend_3 { pt3dadd( 87.6145, 235.287, -1.06633, 0.22 ) }
    dend_3 { pt3dadd( 87.7319, 236.28, -0.958287, 0.22 ) }
    dend_3 { pt3dadd( 87.8065, 237.069, -0.868086, 0.29 ) }
    dend_3 { pt3dadd( 87.8618, 237.845, -0.79097, 0.44 ) }
    dend_3 { pt3dadd( 87.8997, 239.099, -0.626354, 0.66 ) }
    dend_3 { pt3dadd( 87.8908, 240.144, -0.464881, 0.22 ) }
    dend_3 { pt3dadd( 87.8642, 241.386, -0.258946, 0.22 ) }
    dend_3 { pt3dadd( 87.8564, 242.103, -0.134752, 0.66 ) }
    dend_3 { pt3dadd( 87.8596, 242.595, -0.0382578, 0.66 ) }
    dend_3 { pt3dadd( 87.9141, 243.912, 0.196702, 0.15 ) }
    dend_3 { pt3dadd( 87.9826, 244.828, 0.328458, 0.22 ) }
    dend_3 { pt3dadd( 88.046, 245.656, 0.470625, 0.22 ) }
    dend_3 { pt3dadd( 88.0802, 246.108, 0.572167, 0.52 ) }
    dend_3 { pt3dadd( 88.1386, 246.913, 0.844944, 0.96 ) }
    dend_3 { pt3dadd( 88.1748, 247.371, 1.04542, 0.96 ) }
    dend_3 { pt3dadd( 88.2586, 248.314, 1.54598, 0.22 ) }
    dend_3 { pt3dadd( 88.3806, 249.628, 2.37449, 0.22 ) }
    dend_3 { pt3dadd( 88.4675, 250.476, 2.96249, 0.22 ) }
    dend_3 { pt3dadd( 88.537, 251.075, 3.40919, 0.59 ) }
    dend_3 { pt3dadd( 88.5588, 251.25, 3.54014, 0.59 ) }
    dend_3 { pt3dadd( 88.6774, 252.08, 4.12472, 0.15 ) }
    dend_3 { pt3dadd( 88.8401, 253.031, 4.77727, 0.15 ) }
    dend_3 { pt3dadd( 88.9707, 253.627, 5.1734, 0.66 ) }
    dend_3 { pt3dadd( 89.1154, 254.148, 5.52759, 0.96 ) }
    dend_3 { pt3dadd( 89.3089, 254.754, 5.9717, 0.37 ) }
    dend_3 { pt3dadd( 89.679, 255.865, 6.80096, 0.15 ) }
    dend_3 { pt3dadd( 90.0267, 256.882, 7.56419, 0.15 ) }
    dend_3 { pt3dadd( 90.3369, 257.814, 8.20582, 0.15 ) }
    dend_3 { pt3dadd( 90.5744, 258.557, 8.69428, 0.29 ) }
    dend_3 { pt3dadd( 90.7476, 259.143, 9.05568, 0.74 ) }
    dend_3 { pt3dadd( 90.9065, 259.673, 9.38367, 1.11 ) }
    dend_3 { pt3dadd( 91.2212, 260.776, 10.0153, 0.15 ) }
    dend_3 { pt3dadd( 91.4151, 261.463, 10.337, 0.22 ) }
    dend_3 { pt3dadd( 91.5324, 261.825, 10.515, 0.22 ) }
    dend_3 { pt3dadd( 91.9539, 262.85, 11.0641, 0.15 ) }
    dend_3 { pt3dadd( 92.4363, 263.734, 11.5705, 0.15 ) }
    dend_3 { pt3dadd( 92.7048, 264.123, 11.811, 1.03 ) }
    dend_3 { pt3dadd( 92.9563, 264.433, 12.028, 1.7 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_3 { pt3dadd( 94.1065, 265.756, 13.0564, 0.37 ) }
    dend_3 { pt3dadd( 94.8087, 266.548, 13.7078, 0.15 ) }
    dend_3 { pt3dadd( 95.3263, 267.134, 14.1974, 0.15 ) }
    dend_3 { pt3dadd( 95.7025, 267.594, 14.5854, 0.74 ) }
    dend_3 { pt3dadd( 96.5786, 268.783, 15.6908, 0.15 ) }
    dend_3 { pt3dadd( 97.1006, 269.599, 16.4836, 0.15 ) }
    dend_3 { pt3dadd( 97.344, 270.054, 16.93, 0.66 ) }
    dend_3 { pt3dadd( 97.4362, 270.253, 17.1302, 0.66 ) }
    dend_3 { pt3dadd( 97.6991, 270.91, 17.8063, 0.15 ) }
    dend_3 { pt3dadd( 98.1499, 272.098, 18.8695, 0.15 ) }
    dend_3 { pt3dadd( 98.3375, 272.601, 19.204, 0.66 ) }
    dend_3 { pt3dadd( 98.4401, 272.906, 19.3498, 1.11 ) }
    dend_3 { pt3dadd( 98.8177, 274.102, 19.794, 0.15 ) }
    dend_3 { pt3dadd( 99.1276, 275.13, 20.0989, 0.15 ) }
    dend_3 { pt3dadd( 99.7621, 277.279, 20.545, 0.37 ) }
    dend_3 { pt3dadd( 99.9487, 277.947, 20.6789, 0.74 ) }
    dend_3 { pt3dadd( 100.4, 279.731, 21.1172, 0.07 ) }
    dend_3 { pt3dadd( 100.756, 281.277, 21.5664, 0.07 ) }
    dend_3 { pt3dadd( 100.85, 281.74, 21.7315, 0.37 ) }
    dend_3 { pt3dadd( 100.991, 282.487, 22.045, 0.07 ) }
    dend_3 { pt3dadd( 101.153, 283.533, 22.583, 0.07 ) }
    dend_3 { pt3dadd( 101.235, 284.111, 22.8548, 0.66 ) }
    dend_3 { pt3dadd( 101.291, 284.583, 23.034, 0.66 ) }
    dend_3 { pt3dadd( 101.383, 285.627, 23.3545, 0.15 ) }
    dend_3 { pt3dadd( 101.457, 286.479, 23.6074, 0.22 ) }
    dend_3 { pt3dadd( 101.517, 287.172, 23.7972, 0.37 ) }
    dend_3 { pt3dadd( 101.623, 288.199, 24.0369, 0.22 ) }
    dend_3 { pt3dadd( 101.724, 289.051, 24.2388, 0.44 ) }
    dend_3 { pt3dadd( 101.887, 290.122, 24.4744, 0.15 ) }
    dend_3 { pt3dadd( 102.172, 291.557, 24.7481, 0.15 ) }
    dend_3 { pt3dadd( 102.242, 291.809, 24.7726, 0.59 ) }
    dend_3 { pt3dadd( 102.411, 292.27, 24.7527, 0.88 ) }
    dend_3 { pt3dadd( 102.511, 292.5, 24.7126, 0.88 ) }
    dend_3 { pt3dadd( 103.122, 293.742, 24.3691, 0.07 ) }
    dend_3 { pt3dadd( 103.392, 294.25, 24.1926, 0.29 ) }
    dend_3 { pt3dadd( 104.293, 295.853, 23.5108, 0.07 ) }
    dend_3 { pt3dadd( 105.109, 297.281, 22.8854, 0.07 ) }
    dend_3 { pt3dadd( 105.513, 297.986, 22.5879, 0.22 ) }
    dend_3 { pt3dadd( 105.966, 298.778, 22.2519, 0.15 ) }
    dend_3 { pt3dadd( 106.29, 299.349, 22.0306, 0.37 ) }
    dend_3 { pt3dadd( 106.72, 300.145, 21.8179, 0.74 ) }
    dend_3 { pt3dadd( 106.96, 300.623, 21.7534, 1.25 ) }
    dend_3 { pt3dadd( 107.644, 302.049, 21.6777, 0.15 ) }
    dend_3 { pt3dadd( 108.117, 303.069, 21.6594, 0.15 ) }
    dend_3 { pt3dadd( 108.859, 304.801, 21.7643, 0.15 ) }
    dend_3 { pt3dadd( 109.408, 306.158, 21.963, 0.15 ) }
    dend_3 { pt3dadd( 109.58, 306.609, 22.0622, 0.66 ) }
    dend_3 { pt3dadd( 109.709, 306.952, 22.1535, 1.25 ) }
    dend_3 { pt3dadd( 110.074, 307.924, 22.4585, 1.33 ) }
    dend_3 { pt3dadd( 110.745, 309.627, 23.0092, 0.07 ) }
    dend_3 { pt3dadd( 111.199, 310.65, 23.2917, 0.07 ) }
    dend_3 { pt3dadd( 111.368, 310.986, 23.3568, 0.22 ) }
    dend_3 { pt3dadd( 111.691, 311.56, 23.4462, 0.66 ) }
    dend_3 { pt3dadd( 112.24, 312.475, 23.4961, 0.07 ) }
    dend_3 { pt3dadd( 112.799, 313.374, 23.4387, 0.07 ) }
    dend_3 { pt3dadd( 113.526, 314.501, 23.2251, 0.07 ) }
    dend_3 { pt3dadd( 113.839, 314.997, 23.1055, 0.07 ) }
    dend_3 { pt3dadd( 114.236, 315.668, 22.9442, 0.88 ) }
    dend_3 { pt3dadd( 115.001, 317.094, 22.6118, 0.15 ) }
    dend_3 { pt3dadd( 115.308, 317.747, 22.4707, 0.15 ) }
    dend_3 { pt3dadd( 115.528, 318.308, 22.402, 0.15 ) }
    dend_3 { pt3dadd( 115.734, 318.939, 22.3661, 0.66 ) }
    dend_3 { pt3dadd( 116.133, 320.351, 22.3726, 0.07 ) }
    dend_3 { pt3dadd( 116.318, 321.113, 22.414, 0.07 ) }
    dend_3 { pt3dadd( 116.446, 321.807, 22.4948, 0.22 ) }
    dend_3 { pt3dadd( 116.605, 323.36, 22.6726, 0.07 ) }
    dend_3 { pt3dadd( 116.595, 323.93, 22.7188, 0.07 ) }
    dend_3 { pt3dadd( 116.532, 324.308, 22.7134, 0.29 ) }
    dend_3 { pt3dadd( 116.317, 324.867, 22.6297, 0.74 ) }
    dend_3 { pt3dadd( 115.887, 325.574, 22.425, 0.22 ) }
    dend_3 { pt3dadd( 115.331, 326.285, 22.1409, 0.15 ) }
    dend_3 { pt3dadd( 114.847, 326.824, 21.8842, 0.59 ) }
    dend_3 { pt3dadd( 114.079, 327.622, 21.5149, 0.96 ) }
    dend_3 { pt3dadd( 113.453, 328.248, 21.2693, 0.22 ) }
    dend_3 { pt3dadd( 112.443, 329.24, 20.9424, 0.15 ) }
    dend_3 { pt3dadd( 112.031, 329.654, 20.8323, 0.52 ) }
    dend_3 { pt3dadd( 111.309, 330.405, 20.6887, 0.07 ) }
    dend_3 { pt3dadd( 110.977, 330.775, 20.6476, 0.15 ) }
    dend_3 { pt3dadd( 110.102, 331.835, 20.5991, 0.07 ) }
    dend_3 { pt3dadd( 109.676, 332.394, 20.5765, 0.22 ) }
    dend_3 { pt3dadd( 109.336, 332.859, 20.5565, 0.15 ) }
    dend_3 { pt3dadd( 108.865, 333.504, 20.5243, 0.81 ) }
    dend_3 { pt3dadd( 107.953, 334.748, 20.4456, 0.07 ) }
    dend_3 { pt3dadd( 107.563, 335.285, 20.4014, 0.59 ) }
    dend_3 { pt3dadd( 106.919, 336.193, 20.3048, 0.07 ) }
    dend_3 { pt3dadd( 106.52, 336.752, 20.247, 0.74 ) }
    dend_3 { pt3dadd( 105.689, 337.895, 20.1273, 0.07 ) }
    dend_3 { pt3dadd( 105.182, 338.512, 20.0558, 0.07 ) }
    dend_3 { pt3dadd( 104.754, 338.945, 20.023, 0.29 ) }
    dend_3 { pt3dadd( 103.998, 339.614, 19.9932, 0.07 ) }
    dend_3 { pt3dadd( 103.452, 340.054, 19.986, 0.52 ) }
    dend_3 { pt3dadd( 103.2, 340.238, 19.9709, 0.52 ) }
    dend_3 { pt3dadd( 101.599, 341.33, 19.7998, 0.15 ) }
    dend_3 { pt3dadd( 100.494, 342.069, 19.6504, 0.15 ) }
    dend_3 { pt3dadd( 100.045, 342.377, 19.576, 0.37 ) }
    dend_3 { pt3dadd( 99.486, 342.772, 19.4777, 0.59 ) }
    dend_3 { pt3dadd( 98.1901, 343.795, 19.2275, 0.07 ) }
    dend_3 { pt3dadd( 97.4547, 344.462, 19.0692, 0.07 ) }
    dend_3 { pt3dadd( 97.2262, 344.722, 19.0099, 0.07 ) }
    dend_3 { pt3dadd( 96.7856, 345.298, 18.9171, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_24()
}

proc basic_shape_24() {
    dend_3 { pt3dadd( 96.3638, 345.91, 18.8877, 0.15 ) }
    dend_3 { pt3dadd( 95.9706, 346.609, 18.928, 1.03 ) }
    dend_3 { pt3dadd( 95.8309, 346.932, 18.9766, 1.03 ) }
    dend_3 { pt3dadd( 95.423, 348.038, 19.1527, 0.07 ) }
    dend_3 { pt3dadd( 95.0226, 349.228, 19.3318, 0.07 ) }
    dend_3 { pt3dadd( 94.8788, 349.695, 19.418, 0.29 ) }
    dend_3 { pt3dadd( 94.4807, 351.084, 19.7663, 0.07 ) }
    dend_3 { pt3dadd( 94.2394, 351.963, 20.0442, 0.07 ) }
    dend_3 { pt3dadd( 94.1113, 352.462, 20.2479, 0.37 ) }
    dend_3 { pt3dadd( 94.0043, 352.906, 20.4594, 0.37 ) }
    dend_3 { pt3dadd( 93.6808, 354.196, 21.1721, 0.07 ) }
    dend_3 { pt3dadd( 93.3853, 355.306, 21.8877, 0.07 ) }
    dend_3 { pt3dadd( 93.2734, 355.713, 22.1829, 0.59 ) }
    dend_3 { pt3dadd( 92.8212, 357.19, 23.2572, 0.07 ) }
    dend_3 { pt3dadd( 92.7122, 357.533, 23.4764, 0.15 ) }
    dend_3 { pt3dadd( 92.3509, 358.736, 24.1018, 0.07 ) }
    dend_3 { pt3dadd( 92.2695, 359.014, 24.2048, 0.07 ) }
    dend_3 { pt3dadd( 92.1325, 359.483, 24.3214, 0.29 ) }
    dend_3 { pt3dadd( 91.7472, 360.715, 24.5079, 0.15 ) }
    dend_3 { pt3dadd( 91.1786, 362.431, 24.5826, 0.15 ) }
    dend_3 { pt3dadd( 90.8734, 363.377, 24.5829, 0.15 ) }
    dend_3 { pt3dadd( 90.6714, 364.009, 24.5518, 0.15 ) }
    dend_3 { pt3dadd( 90.5141, 364.486, 24.5246, 0.52 ) }
    dend_3 { pt3dadd( 90.083, 365.796, 24.4397, 0.07 ) }
    dend_3 { pt3dadd( 89.6196, 367.286, 24.3298, 0.07 ) }
    dend_3 { pt3dadd( 89.4622, 367.755, 24.2899, 0.29 ) }
    dend_3 { pt3dadd( 89.1832, 368.561, 24.2192, 0.07 ) }
    dend_3 { pt3dadd( 88.9533, 369.263, 24.1262, 0.22 ) }
    dend_3 { pt3dadd( 88.7249, 369.991, 23.9988, 0.07 ) }
    dend_3 { pt3dadd( 88.6035, 370.398, 23.9078, 0.07 ) }
    dend_3 { pt3dadd( 88.4649, 370.861, 23.7518, 0.22 ) }
    dend_3 { pt3dadd( 88.1718, 371.975, 23.2554, 0.07 ) }
    dend_3 { pt3dadd( 87.9566, 372.971, 22.8091, 0.07 ) }
    dend_3 { pt3dadd( 87.8874, 373.429, 22.6144, 0.59 ) }
    dend_3 { pt3dadd( 87.8564, 373.759, 22.4865, 0.59 ) }
    dend_3 { pt3dadd( 87.8126, 375.565, 21.914, 0.15 ) }
    dend_3 { pt3dadd( 87.8748, 376.885, 21.5735, 0.15 ) }
    dend_3 { pt3dadd( 88.0242, 378.067, 21.3524, 0.15 ) }
    dend_3 { pt3dadd( 88.1747, 379.056, 21.3268, 0.29 ) }
    dend_3 { pt3dadd( 88.3095, 379.927, 21.4937, 0.29 ) }
    dend_3 { pt3dadd( 88.468, 381.273, 22.251, 0.07 ) }
    dend_3 { pt3dadd( 88.4857, 381.523, 22.5215, 0.07 ) }
    dend_3 { pt3dadd( 88.4683, 381.896, 23.2034, 0.22 ) }
    dend_3 { pt3dadd( 88.3545, 382.802, 25.1836, 0.07 ) }
    dend_3 { pt3dadd( 88.1766, 383.548, 27.1799, 0.07 ) }
    dend_3 { pt3dadd( 87.9681, 384.13, 29.1386, 0.07 ) }
    dend_3 { pt3dadd( 87.8102, 384.431, 30.4721, 0.29 ) }
    dend_3 { pt3dadd( 87.4531, 384.96, 33.2297, 0.29 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.118, 39.6547, 1.76797, 0.81 ) }
    dend_2 { pt3dadd( 13.1204, 40.3703, 2.24318, 0.81 ) }
    dend_2 { pt3dadd( 13.9925, 41.0092, 2.57287, 0.66 ) }
    dend_2 { pt3dadd( 14.76, 41.5419, 2.74458, 0.52 ) }
    dend_2 { pt3dadd( 15.6653, 42.1297, 2.87233, 0.59 ) }
    dend_2 { pt3dadd( 17.1317, 43.0266, 2.93084, 0.81 ) }
    dend_2 { pt3dadd( 17.6419, 43.334, 2.92515, 0.88 ) }
    dend_2 { pt3dadd( 18.84, 44.0451, 2.82184, 0.44 ) }
    dend_2 { pt3dadd( 20.0648, 44.7812, 2.64867, 0.37 ) }
    dend_2 { pt3dadd( 20.6387, 45.1213, 2.52092, 0.37 ) }
    dend_2 { pt3dadd( 21.9076, 45.8887, 2.13239, 0.59 ) }
    dend_2 { pt3dadd( 22.8269, 46.4411, 1.78058, 0.66 ) }
    dend_2 { pt3dadd( 23.4534, 46.8249, 1.52332, 0.66 ) }
    dend_2 { pt3dadd( 24.3077, 47.3699, 1.17771, 0.52 ) }
    dend_2 { pt3dadd( 25.5, 48.1612, 0.691544, 0.22 ) }
    dend_2 { pt3dadd( 26.0973, 48.5729, 0.446373, 0.29 ) }
    dend_2 { pt3dadd( 26.8795, 49.1099, 0.158504, 0.52 ) }
    dend_2 { pt3dadd( 27.7699, 49.7055, -0.140628, 0.81 ) }
    dend_2 { pt3dadd( 28.2571, 50.042, -0.270685, 1.11 ) }
    dend_2 { pt3dadd( 28.892, 50.52, -0.384937, 1.11 ) }
    dend_2 { pt3dadd( 29.876, 51.3692, -0.453961, 0.74 ) }
    dend_2 { pt3dadd( 30.7629, 52.2385, -0.405826, 0.66 ) }
    dend_2 { pt3dadd( 31.1686, 52.6952, -0.329143, 0.52 ) }
    dend_2 { pt3dadd( 31.9451, 53.7249, -0.0629234, 0.29 ) }
    dend_2 { pt3dadd( 32.5143, 54.6279, 0.191168, 0.37 ) }
    dend_2 { pt3dadd( 33.1346, 55.7879, 0.533858, 0.52 ) }
    dend_2 { pt3dadd( 33.7018, 57.0204, 0.97747, 0.74 ) }
    dend_2 { pt3dadd( 34.1371, 58.0651, 1.36256, 0.96 ) }
    dend_2 { pt3dadd( 34.6451, 59.2982, 1.86027, 0.29 ) }
    dend_2 { pt3dadd( 34.9625, 60.0046, 2.20138, 0.29 ) }
    dend_2 { pt3dadd( 35.3013, 60.6605, 2.5975, 0.29 ) }
    dend_2 { pt3dadd( 35.9664, 61.7295, 3.36105, 0.66 ) }
    dend_2 { pt3dadd( 36.5824, 62.5508, 3.97787, 0.96 ) }
    dend_2 { pt3dadd( 37.184, 63.2617, 4.56869, 0.96 ) }
    dend_2 { pt3dadd( 38.0336, 64.1895, 5.39997, 0.66 ) }
    dend_2 { pt3dadd( 38.9742, 65.1974, 6.3306, 0.29 ) }
    dend_2 { pt3dadd( 39.9269, 66.1956, 7.25152, 0.22 ) }
    dend_2 { pt3dadd( 40.4563, 66.7278, 7.72562, 0.22 ) }
    dend_2 { pt3dadd( 41.0481, 67.3043, 8.24564, 0.44 ) }
    dend_2 { pt3dadd( 41.6885, 67.8981, 8.761, 0.81 ) }
    dend_2 { pt3dadd( 42.2965, 68.4122, 9.19625, 0.81 ) }
    dend_2 { pt3dadd( 43.1149, 68.9911, 9.6922, 0.59 ) }
    dend_2 { pt3dadd( 43.7226, 69.3465, 10.0318, 0.44 ) }
    dend_2 { pt3dadd( 44.3339, 69.648, 10.3408, 0.22 ) }
    dend_2 { pt3dadd( 45.4388, 70.0801, 10.6565, 0.29 ) }
    dend_2 { pt3dadd( 46.0755, 70.2836, 10.7214, 0.29 ) }
    dend_2 { pt3dadd( 47.0693, 70.562, 10.687, 0.37 ) }
    dend_2 { pt3dadd( 47.4829, 70.67, 10.6325, 0.37 ) }
    dend_2 { pt3dadd( 48.2494, 70.8492, 10.5382, 0.37 ) }
    dend_2 { pt3dadd( 50.8508, 71.404, 10.2506, 0.81 ) }
    dend_2 { pt3dadd( 51.7654, 71.6096, 10.1593, 0.96 ) }
    dend_2 { pt3dadd( 52.6715, 71.8515, 10.1594, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_25()
}

proc basic_shape_25() {
    dend_2 { pt3dadd( 53.7983, 72.1999, 10.2545, 0.52 ) }
    dend_2 { pt3dadd( 55.2051, 72.6812, 10.5045, 0.44 ) }
    dend_2 { pt3dadd( 55.7062, 72.8829, 10.6506, 0.44 ) }
    dend_2 { pt3dadd( 56.4143, 73.2339, 10.9515, 0.44 ) }
    dend_2 { pt3dadd( 57.4337, 73.8059, 11.371, 0.44 ) }
    dend_2 { pt3dadd( 58.2104, 74.2993, 11.6496, 0.96 ) }
    dend_2 { pt3dadd( 58.6891, 74.6326, 11.7856, 1.18 ) }
    dend_2 { pt3dadd( 59.5073, 75.2099, 11.9437, 0.66 ) }
    dend_2 { pt3dadd( 60.0936, 75.6124, 12.0374, 0.96 ) }
    dend_2 { pt3dadd( 60.5788, 75.9174, 12.1303, 0.96 ) }
    dend_2 { pt3dadd( 61.8365, 76.6656, 12.4678, 0.37 ) }
    dend_2 { pt3dadd( 62.4258, 77.0097, 12.717, 0.29 ) }
    dend_2 { pt3dadd( 62.9896, 77.3228, 13.0298, 0.29 ) }
    dend_2 { pt3dadd( 63.859, 77.7637, 13.6141, 0.29 ) }
    dend_2 { pt3dadd( 64.8932, 78.2799, 14.4347, 0.29 ) }
    dend_2 { pt3dadd( 65.7388, 78.7656, 15.2627, 0.22 ) }
    dend_2 { pt3dadd( 66.3425, 79.1635, 15.9746, 0.22 ) }
    dend_2 { pt3dadd( 66.7447, 79.458, 16.4857, 0.66 ) }
    dend_2 { pt3dadd( 67.2176, 79.85, 17.0778, 0.96 ) }
    dend_2 { pt3dadd( 67.6783, 80.272, 17.6334, 0.96 ) }
    dend_2 { pt3dadd( 68.757, 81.3622, 18.8471, 0.22 ) }
    dend_2 { pt3dadd( 69.223, 81.8525, 19.3519, 0.37 ) }
    dend_2 { pt3dadd( 69.5817, 82.2509, 19.7423, 0.37 ) }
    dend_2 { pt3dadd( 70.3976, 83.2132, 20.6351, 0.15 ) }
    dend_2 { pt3dadd( 70.8231, 83.71, 21.0909, 0.37 ) }
    dend_2 { pt3dadd( 71.291, 84.2495, 21.5851, 0.74 ) }
    dend_2 { pt3dadd( 72.0164, 85.0721, 22.3258, 1.33 ) }
    dend_2 { pt3dadd( 72.455, 85.6207, 22.7944, 1.03 ) }
    dend_2 { pt3dadd( 72.8632, 86.256, 23.2753, 0.22 ) }
    dend_2 { pt3dadd( 73.2302, 86.9049, 23.7031, 0.22 ) }
    dend_2 { pt3dadd( 73.5767, 87.5681, 24.0982, 0.22 ) }
    dend_2 { pt3dadd( 73.8261, 88.0609, 24.3642, 0.44 ) }
    dend_2 { pt3dadd( 74.2026, 88.8164, 24.768, 0.81 ) }
    dend_2 { pt3dadd( 74.8384, 90.0356, 25.4782, 0.15 ) }
    dend_2 { pt3dadd( 75.3522, 91.0982, 26.2247, 0.15 ) }
    dend_2 { pt3dadd( 75.7764, 92.096, 27.0537, 0.22 ) }
    dend_2 { pt3dadd( 75.8964, 92.3939, 27.3357, 0.74 ) }
    dend_2 { pt3dadd( 76.123, 93.0211, 27.9578, 0.96 ) }
    dend_2 { pt3dadd( 76.4823, 94.1011, 29.1173, 0.22 ) }
    dend_2 { pt3dadd( 76.8152, 95.2441, 30.3779, 0.44 ) }
    dend_2 { pt3dadd( 77.0678, 96.3336, 31.5209, 0.96 ) }
    dend_2 { pt3dadd( 77.2284, 97.1473, 32.3753, 1.33 ) }
    dend_2 { pt3dadd( 77.4033, 98.2426, 33.5756, 0.22 ) }
    dend_2 { pt3dadd( 77.5503, 99.2104, 34.6554, 0.22 ) }
    dend_2 { pt3dadd( 77.6103, 99.5777, 35.0598, 0.74 ) }
    dend_2 { pt3dadd( 77.7324, 100.047, 35.5312, 0.74 ) }
    dend_2 { pt3dadd( 78.4136, 101.972, 37.2444, 0.15 ) }
    dend_2 { pt3dadd( 78.9595, 103.258, 38.2989, 0.15 ) }
    dend_2 { pt3dadd( 79.2062, 103.731, 38.6288, 0.66 ) }
    dend_2 { pt3dadd( 79.5861, 104.397, 39.0205, 1.7 ) }
    dend_2 { pt3dadd( 80.3951, 105.731, 39.753, 0.44 ) }
    dend_2 { pt3dadd( 81.3003, 107.1, 40.4236, 0.22 ) }
    dend_2 { pt3dadd( 81.9289, 107.96, 40.7514, 0.22 ) }
    dend_2 { pt3dadd( 83.2771, 109.728, 41.4011, 0.22 ) }
    dend_2 { pt3dadd( 83.7677, 110.371, 41.663, 0.37 ) }
    dend_2 { pt3dadd( 84.3387, 111.096, 41.9932, 0.81 ) }
    dend_2 { pt3dadd( 84.79, 111.655, 42.2618, 1.25 ) }
    dend_2 { pt3dadd( 85.8231, 112.875, 42.9053, 0.15 ) }
    dend_2 { pt3dadd( 86.9692, 114.185, 43.6247, 0.15 ) }
    dend_2 { pt3dadd( 87.5346, 114.807, 43.9905, 0.66 ) }
    dend_2 { pt3dadd( 88.0222, 115.311, 44.2594, 0.74 ) }
    dend_2 { pt3dadd( 89.3828, 116.649, 44.9706, 0.15 ) }
    dend_2 { pt3dadd( 90.4174, 117.641, 45.5151, 0.15 ) }
    dend_2 { pt3dadd( 90.7445, 117.941, 45.6834, 0.52 ) }
    dend_2 { pt3dadd( 91.165, 118.314, 45.8714, 0.81 ) }
    dend_2 { pt3dadd( 92.7883, 119.711, 46.4572, 0.15 ) }
    dend_2 { pt3dadd( 93.6695, 120.454, 46.7177, 0.15 ) }
    dend_2 { pt3dadd( 93.9937, 120.718, 46.7888, 0.52 ) }
    dend_2 { pt3dadd( 94.3745, 121.021, 46.8408, 0.52 ) }
    dend_2 { pt3dadd( 95.6404, 122.023, 46.9754, 0.15 ) }
    dend_2 { pt3dadd( 96.7219, 122.877, 47.0717, 0.15 ) }
    dend_2 { pt3dadd( 97.2676, 123.327, 47.1363, 0.15 ) }
    dend_2 { pt3dadd( 97.6205, 123.649, 47.2101, 0.44 ) }
    dend_2 { pt3dadd( 98.1123, 124.144, 47.3718, 0.88 ) }
    dend_2 { pt3dadd( 98.653, 124.74, 47.606, 0.88 ) }
    dend_2 { pt3dadd( 99.4131, 125.639, 48.0239, 0.44 ) }
    dend_2 { pt3dadd( 100.281, 126.716, 48.5492, 0.15 ) }
    dend_2 { pt3dadd( 101.395, 128.065, 49.2054, 0.15 ) }
    dend_2 { pt3dadd( 102.101, 128.873, 49.5924, 0.22 ) }
    dend_2 { pt3dadd( 102.968, 129.829, 50.0273, 0.07 ) }
    dend_2 { pt3dadd( 103.517, 130.392, 50.2638, 0.07 ) }
    dend_2 { pt3dadd( 104.057, 130.884, 50.4715, 0.44 ) }
    dend_2 { pt3dadd( 104.703, 131.396, 50.6729, 0.96 ) }
    dend_2 { pt3dadd( 105.602, 132.04, 50.9053, 0.66 ) }
    dend_2 { pt3dadd( 106.244, 132.468, 51.087, 0.15 ) }
    dend_2 { pt3dadd( 107.065, 132.997, 51.3337, 0.22 ) }
    dend_2 { pt3dadd( 108.643, 134.011, 51.849, 0.07 ) }
    dend_2 { pt3dadd( 109.133, 134.328, 52.0244, 0.29 ) }
    dend_2 { pt3dadd( 109.43, 134.524, 52.1327, 0.29 ) }
    dend_2 { pt3dadd( 110.741, 135.36, 52.6089, 0.07 ) }
    dend_2 { pt3dadd( 111.071, 135.571, 52.7429, 0.22 ) }
    dend_2 { pt3dadd( 112.101, 136.257, 53.1356, 0.07 ) }
    dend_2 { pt3dadd( 112.543, 136.562, 53.2947, 0.07 ) }
    dend_2 { pt3dadd( 113.09, 136.962, 53.5009, 0.15 ) }
    dend_2 { pt3dadd( 113.78, 137.508, 53.7572, 0.07 ) }
    dend_2 { pt3dadd( 114.99, 138.542, 54.1964, 0.15 ) }
    dend_2 { pt3dadd( 115.889, 139.324, 54.5026, 0.15 ) }
    dend_2 { pt3dadd( 116.691, 140.027, 54.7465, 0.15 ) }
    dend_2 { pt3dadd( 117.818, 141.02, 55.1244, 0.29 ) }
    dend_2 { pt3dadd( 119.121, 142.15, 55.5785, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_26()
}

proc basic_shape_26() {
    dend_2 { pt3dadd( 119.688, 142.64, 55.7757, 0.44 ) }
    dend_2 { pt3dadd( 120.11, 143.0, 55.9134, 0.44 ) }
    dend_2 { pt3dadd( 121.239, 143.96, 56.3832, 0.15 ) }
    dend_2 { pt3dadd( 122.282, 144.839, 56.8496, 0.15 ) }
    dend_2 { pt3dadd( 122.743, 145.209, 57.0749, 0.74 ) }
    dend_2 { pt3dadd( 123.147, 145.508, 57.2767, 0.74 ) }
    dend_2 { pt3dadd( 124.698, 146.556, 58.0387, 0.07 ) }
    dend_2 { pt3dadd( 125.986, 147.36, 58.6505, 0.07 ) }
    dend_2 { pt3dadd( 126.503, 147.65, 58.8824, 0.29 ) }
    dend_2 { pt3dadd( 127.047, 147.917, 59.0977, 0.52 ) }
    dend_2 { pt3dadd( 128.705, 148.541, 59.706, 0.15 ) }
    dend_2 { pt3dadd( 129.938, 148.858, 60.1093, 0.15 ) }
    dend_2 { pt3dadd( 130.336, 148.924, 60.2299, 0.37 ) }
    dend_2 { pt3dadd( 130.817, 148.983, 60.3575, 0.88 ) }
    dend_2 { pt3dadd( 131.467, 149.058, 60.5277, 1.25 ) }
    dend_2 { pt3dadd( 133.612, 149.339, 61.223, 0.15 ) }
    dend_2 { pt3dadd( 135.084, 149.595, 61.8073, 0.15 ) }
    dend_2 { pt3dadd( 135.832, 149.771, 62.1392, 0.59 ) }
    dend_2 { pt3dadd( 136.277, 149.908, 62.3534, 0.59 ) }
    dend_2 { pt3dadd( 138.152, 150.64, 63.3021, 0.15 ) }
    dend_2 { pt3dadd( 139.879, 151.484, 64.2097, 0.15 ) }
    dend_2 { pt3dadd( 141.274, 152.38, 64.9379, 0.15 ) }
    dend_2 { pt3dadd( 141.673, 152.677, 65.1307, 0.59 ) }
    dend_2 { pt3dadd( 142.395, 153.239, 65.3866, 0.96 ) }
    dend_2 { pt3dadd( 143.49, 154.137, 65.6653, 0.15 ) }
    dend_2 { pt3dadd( 144.217, 154.766, 65.7597, 0.29 ) }
    dend_2 { pt3dadd( 146.018, 156.409, 65.7478, 0.07 ) }
    dend_2 { pt3dadd( 146.673, 157.044, 65.7097, 0.07 ) }
    dend_2 { pt3dadd( 148.024, 158.397, 65.6223, 0.07 ) }
    dend_2 { pt3dadd( 148.608, 158.999, 65.5815, 0.59 ) }
    dend_2 { pt3dadd( 149.103, 159.53, 65.5507, 1.03 ) }
    dend_2 { pt3dadd( 150.453, 161.042, 65.4915, 0.07 ) }
    dend_2 { pt3dadd( 151.406, 162.186, 65.5425, 0.07 ) }
    dend_2 { pt3dadd( 151.726, 162.6, 65.5975, 0.37 ) }
    dend_2 { pt3dadd( 152.081, 163.091, 65.7054, 0.37 ) }
    dend_2 { pt3dadd( 153.032, 164.407, 66.0603, 0.07 ) }
    dend_2 { pt3dadd( 153.384, 164.884, 66.2167, 0.22 ) }
    dend_2 { pt3dadd( 154.262, 165.958, 66.7244, 0.07 ) }
    dend_2 { pt3dadd( 154.827, 166.62, 67.1552, 0.96 ) }
    dend_2 { pt3dadd( 155.591, 167.475, 67.8095, 0.07 ) }
    dend_2 { pt3dadd( 156.363, 168.295, 68.513, 0.07 ) }
    dend_2 { pt3dadd( 157.069, 168.974, 69.1762, 0.44 ) }
    dend_2 { pt3dadd( 158.63, 170.344, 70.6551, 0.15 ) }
    dend_2 { pt3dadd( 159.618, 171.164, 71.6924, 0.15 ) }
    dend_2 { pt3dadd( 160.131, 171.578, 72.2981, 0.44 ) }
    dend_2 { pt3dadd( 160.486, 171.857, 72.7722, 0.88 ) }
    dend_2 { pt3dadd( 161.319, 172.478, 73.9511, 0.22 ) }
    dend_2 { pt3dadd( 161.971, 172.947, 74.913, 0.07 ) }
    dend_2 { pt3dadd( 163.173, 173.847, 76.624, 0.07 ) }
    dend_2 { pt3dadd( 163.7, 174.249, 77.3036, 0.52 ) }
    dend_2 { pt3dadd( 164.422, 174.811, 78.2065, 0.52 ) }
    dend_2 { pt3dadd( 165.165, 175.436, 79.0263, 0.07 ) }
    dend_2 { pt3dadd( 165.599, 175.835, 79.4348, 0.29 ) }
    dend_2 { pt3dadd( 166.606, 176.839, 80.1669, 0.07 ) }
    dend_2 { pt3dadd( 167.404, 177.721, 80.6563, 0.07 ) }
    dend_2 { pt3dadd( 167.723, 178.112, 80.8549, 0.22 ) }
    dend_2 { pt3dadd( 168.866, 179.602, 81.5199, 0.07 ) }
    dend_2 { pt3dadd( 169.283, 180.126, 81.761, 0.07 ) }
    dend_2 { pt3dadd( 169.947, 180.913, 82.1468, 0.15 ) }
    dend_2 { pt3dadd( 171.102, 182.138, 82.8159, 0.07 ) }
    dend_2 { pt3dadd( 171.701, 182.692, 83.1459, 0.81 ) }
    dend_2 { pt3dadd( 173.161, 183.796, 83.8605, 0.15 ) }
    dend_2 { pt3dadd( 175.409, 185.207, 84.9597, 0.15 ) }
    dend_2 { pt3dadd( 175.897, 185.485, 85.1888, 0.29 ) }
    dend_2 { pt3dadd( 177.18, 186.164, 85.7714, 0.07 ) }
    dend_2 { pt3dadd( 178.481, 186.813, 86.3145, 0.22 ) }
    dend_2 { pt3dadd( 180.795, 187.937, 87.2707, 0.07 ) }
    dend_2 { pt3dadd( 183.08, 189.008, 88.2284, 0.07 ) }
    dend_2 { pt3dadd( 183.697, 189.304, 88.4732, 0.22 ) }
    dend_2 { pt3dadd( 184.075, 189.501, 88.6172, 0.22 ) }
    dend_2 { pt3dadd( 185.3, 190.213, 89.0086, 0.07 ) }
    dend_2 { pt3dadd( 185.735, 190.492, 89.1227, 0.29 ) }
    dend_2 { pt3dadd( 186.169, 190.8, 89.1932, 0.29 ) }
    dend_2 { pt3dadd( 187.673, 191.87, 89.2469, 0.07 ) }
    dend_2 { pt3dadd( 188.852, 192.697, 89.2765, 0.07 ) }
    dend_2 { pt3dadd( 189.748, 193.326, 89.2934, 0.07 ) }
    dend_2 { pt3dadd( 190.119, 193.589, 89.3019, 0.07 ) }
    dend_2 { pt3dadd( 190.662, 193.982, 89.3675, 0.29 ) }
    dend_2 { pt3dadd( 190.906, 194.155, 89.4195, 0.29 ) }
    dend_2 { pt3dadd( 192.148, 195.037, 89.8587, 0.07 ) }
    dend_2 { pt3dadd( 192.755, 195.469, 90.1298, 0.52 ) }
    dend_2 { pt3dadd( 194.19, 196.495, 90.864, 0.07 ) }
    dend_2 { pt3dadd( 195.503, 197.402, 91.5342, 0.52 ) }
    dend_2 { pt3dadd( 196.968, 198.381, 92.2731, 0.07 ) }
    dend_2 { pt3dadd( 198.067, 199.072, 92.7939, 0.07 ) }
    dend_2 { pt3dadd( 198.639, 199.422, 93.0747, 0.37 ) }
    dend_2 { pt3dadd( 199.41, 199.87, 93.3778, 0.37 ) }
    dend_2 { pt3dadd( 200.906, 200.712, 93.8115, 0.07 ) }
    dend_2 { pt3dadd( 201.705, 201.151, 93.9424, 0.59 ) }
    dend_2 { pt3dadd( 203.412, 202.139, 94.1929, 0.07 ) }
    dend_2 { pt3dadd( 204.386, 202.746, 94.4179, 0.07 ) }
    dend_2 { pt3dadd( 206.275, 204.107, 95.1501, 0.22 ) }
    dend_2 { pt3dadd( 206.806, 204.567, 95.4755, 0.07 ) }
    dend_2 { pt3dadd( 207.306, 205.099, 95.8864, 0.15 ) }
    dend_2 { pt3dadd( 208.255, 206.209, 96.776, 0.07 ) }
    dend_2 { pt3dadd( 209.603, 207.893, 98.1362, 0.07 ) }
    dend_2 { pt3dadd( 210.487, 208.963, 98.9485, 0.15 ) }
    dend_2 { pt3dadd( 211.153, 209.752, 99.5536, 0.15 ) }
    dend_2 { pt3dadd( 212.192, 210.888, 100.399, 0.07 ) }
    dend_2 { pt3dadd( 212.672, 211.386, 100.785, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_27()
}

proc basic_shape_27() {
    dend_2 { pt3dadd( 213.311, 212.022, 101.249, 0.29 ) }
    dend_2 { pt3dadd( 214.636, 213.325, 102.196, 0.07 ) }
    dend_2 { pt3dadd( 214.989, 213.663, 102.469, 0.22 ) }
    dend_2 { pt3dadd( 216.963, 215.476, 104.003, 0.07 ) }
    dend_2 { pt3dadd( 218.319, 216.678, 105.093, 0.07 ) }
    dend_2 { pt3dadd( 219.023, 217.292, 105.652, 0.15 ) }
    dend_2 { pt3dadd( 220.248, 218.332, 106.619, 0.07 ) }
    dend_2 { pt3dadd( 221.124, 219.074, 107.285, 0.07 ) }
    dend_2 { pt3dadd( 222.561, 220.326, 108.214, 0.07 ) }
    dend_2 { pt3dadd( 222.879, 220.62, 108.388, 0.15 ) }
    dend_2 { pt3dadd( 224.615, 222.429, 109.249, 0.07 ) }
    dend_2 { pt3dadd( 225.078, 222.979, 109.519, 0.07 ) }
    dend_2 { pt3dadd( 225.76, 223.843, 109.919, 0.29 ) }
    dend_2 { pt3dadd( 227.227, 225.881, 110.851, 0.07 ) }
    dend_2 { pt3dadd( 228.264, 227.474, 111.569, 0.07 ) }
    dend_2 { pt3dadd( 229.711, 229.844, 112.627, 0.07 ) }
    dend_2 { pt3dadd( 230.92, 232.083, 113.585, 0.07 ) }
    // Section: dend_57, id: dend_57, parent: dend_53 (entry count 17/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 10.3926, -71.901, -7.46234, 1.62 ) }
    dend_57 { pt3dadd( 10.2335, -73.2752, -7.02492, 1.62 ) }
    dend_57 { pt3dadd( 10.128, -74.8327, -6.56475, 1.11 ) }
    dend_57 { pt3dadd( 10.0095, -76.849, -6.02058, 0.88 ) }
    dend_57 { pt3dadd( 9.91115, -78.2945, -5.62774, 0.88 ) }
    dend_57 { pt3dadd( 9.8572, -79.1574, -5.43584, 0.96 ) }
    dend_57 { pt3dadd( 9.76068, -80.8781, -5.10591, 1.33 ) }
    dend_57 { pt3dadd( 9.69525, -82.6596, -4.86131, 0.96 ) }
    dend_57 { pt3dadd( 9.65487, -83.9716, -4.74848, 0.96 ) }
    dend_57 { pt3dadd( 9.58686, -85.8272, -4.71995, 0.81 ) }
    dend_57 { pt3dadd( 9.50071, -87.8709, -4.76879, 0.81 ) }
    dend_57 { pt3dadd( 9.45962, -88.7637, -4.83028, 1.18 ) }
    dend_57 { pt3dadd( 9.40181, -89.7785, -4.96525, 1.47 ) }
    dend_57 { pt3dadd( 9.34971, -90.6062, -5.10548, 1.47 ) }
    dend_57 { pt3dadd( 9.31782, -91.4506, -5.26401, 1.25 ) }
    dend_57 { pt3dadd( 9.29531, -92.1248, -5.39273, 1.33 ) }
    dend_57 { pt3dadd( 9.25042, -93.1764, -5.52961, 1.11 ) }
    dend_57 { pt3dadd( 9.1979, -94.3301, -5.64617, 1.03 ) }
    dend_57 { pt3dadd( 9.13379, -95.6295, -5.7329, 1.25 ) }
    dend_57 { pt3dadd( 9.0817, -96.6155, -5.7692, 1.25 ) }
    dend_57 { pt3dadd( 9.00571, -97.6862, -5.78699, 1.25 ) }
    dend_57 { pt3dadd( 8.88941, -98.7953, -5.75016, 1.25 ) }
    dend_57 { pt3dadd( 8.6707, -100.416, -5.62271, 0.81 ) }
    dend_57 { pt3dadd( 8.54243, -101.31, -5.51303, 0.88 ) }
    dend_57 { pt3dadd( 8.28819, -103.054, -5.27896, 0.81 ) }
    dend_57 { pt3dadd( 8.12793, -104.207, -5.13338, 0.66 ) }
    dend_57 { pt3dadd( 7.96419, -105.762, -4.95566, 0.59 ) }
    dend_57 { pt3dadd( 7.89699, -106.648, -4.86789, 0.59 ) }
    dend_57 { pt3dadd( 7.85794, -107.762, -4.77807, 0.66 ) }
    dend_57 { pt3dadd( 7.85084, -109.072, -4.66451, 0.96 ) }
    dend_57 { pt3dadd( 7.87193, -110.484, -4.51074, 1.18 ) }
    dend_57 { pt3dadd( 7.928, -111.986, -4.33443, 1.33 ) }
    dend_57 { pt3dadd( 7.98516, -113.328, -4.1578, 1.03 ) }
    dend_57 { pt3dadd( 8.02563, -114.783, -3.9136, 0.81 ) }
    dend_57 { pt3dadd( 8.04976, -116.693, -3.50295, 1.11 ) }
    dend_57 { pt3dadd( 8.04425, -118.36, -3.07639, 0.96 ) }
    dend_57 { pt3dadd( 8.03132, -119.224, -2.84032, 1.03 ) }
    dend_57 { pt3dadd( 7.9985, -120.592, -2.47073, 1.03 ) }
    dend_57 { pt3dadd( 7.97438, -121.597, -2.22357, 0.88 ) }
    dend_57 { pt3dadd( 7.94368, -123.442, -1.83404, 1.11 ) }
    dend_57 { pt3dadd( 7.92147, -124.767, -1.61406, 1.55 ) }
    dend_57 { pt3dadd( 7.89835, -126.02, -1.44385, 1.77 ) }
    dend_57 { pt3dadd( 7.88368, -127.638, -1.27423, 2.14 ) }
    dend_57 { pt3dadd( 7.90612, -129.631, -1.13174, 1.25 ) }
    dend_57 { pt3dadd( 7.97246, -131.723, -1.04388, 0.59 ) }
    dend_57 { pt3dadd( 8.03391, -132.962, -1.04215, 0.52 ) }
    dend_57 { pt3dadd( 8.09892, -133.923, -1.06162, 0.52 ) }
    dend_57 { pt3dadd( 8.19533, -135.361, -1.12209, 0.66 ) }
    dend_57 { pt3dadd( 8.2715, -136.433, -1.18714, 0.66 ) }
    dend_57 { pt3dadd( 8.35073, -137.572, -1.27304, 0.59 ) }
    dend_57 { pt3dadd( 8.39784, -138.496, -1.31603, 1.03 ) }
    dend_57 { pt3dadd( 8.42146, -139.378, -1.28909, 1.25 ) }
    dend_57 { pt3dadd( 8.39894, -140.773, -1.11294, 0.88 ) }
    dend_57 { pt3dadd( 8.33175, -141.851, -0.843708, 0.81 ) }
    dend_57 { pt3dadd( 8.22312, -142.961, -0.44763, 0.88 ) }
    dend_57 { pt3dadd( 8.03268, -144.472, 0.227805, 0.44 ) }
    dend_57 { pt3dadd( 7.87783, -145.544, 0.793076, 0.44 ) }
    dend_57 { pt3dadd( 7.72293, -146.507, 1.35905, 0.52 ) }
    dend_57 { pt3dadd( 7.57013, -147.455, 1.95662, 0.52 ) }
    dend_57 { pt3dadd( 7.42845, -148.274, 2.49507, 0.59 ) }
    dend_57 { pt3dadd( 7.32616, -148.85, 2.87531, 0.81 ) }
    dend_57 { pt3dadd( 7.17806, -149.769, 3.43341, 0.74 ) }
    dend_57 { pt3dadd( 7.0468, -150.747, 3.98387, 1.03 ) }
    dend_57 { pt3dadd( 6.8896, -152.225, 4.72431, 0.88 ) }
    dend_57 { pt3dadd( 6.79129, -153.452, 5.27206, 0.59 ) }
    dend_57 { pt3dadd( 6.72913, -154.606, 5.7256, 0.59 ) }
    dend_57 { pt3dadd( 6.70625, -155.772, 6.04336, 1.11 ) }
    dend_57 { pt3dadd( 6.73205, -157.269, 6.23383, 1.18 ) }
    dend_57 { pt3dadd( 6.78575, -158.595, 6.22581, 1.25 ) }
    dend_57 { pt3dadd( 6.82401, -159.334, 6.10397, 1.33 ) }
    dend_57 { pt3dadd( 6.92173, -160.893, 5.63141, 0.74 ) }
    dend_57 { pt3dadd( 7.07871, -163.243, 4.69122, 0.52 ) }
    dend_57 { pt3dadd( 7.15317, -164.375, 4.13896, 0.52 ) }
    dend_57 { pt3dadd( 7.21004, -165.177, 3.69202, 0.44 ) }
    dend_57 { pt3dadd( 7.30097, -166.519, 2.90222, 0.37 ) }
    dend_57 { pt3dadd( 7.35032, -167.318, 2.39816, 0.37 ) }
    dend_57 { pt3dadd( 7.38351, -167.948, 2.00614, 0.37 ) }
    dend_57 { pt3dadd( 7.42816, -168.925, 1.4822, 0.52 ) }
    dend_57 { pt3dadd( 7.46796, -170.055, 0.937593, 0.81 ) }
    dend_57 { pt3dadd( 7.49545, -171.469, 0.486339, 0.74 ) }
    dend_57 { pt3dadd( 7.50415, -173.093, 0.262358, 0.96 ) }
    dend_57 { pt3dadd( 7.49126, -174.277, 0.269718, 1.62 ) }
    dend_57 { pt3dadd( 7.46702, -175.44, 0.421557, 1.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_28()
}

proc basic_shape_28() {
    dend_57 { pt3dadd( 7.41354, -177.221, 0.877545, 0.81 ) }
    dend_57 { pt3dadd( 7.28163, -180.761, 2.11179, 0.44 ) }
    dend_57 { pt3dadd( 7.24847, -181.54, 2.43064, 0.44 ) }
    dend_57 { pt3dadd( 7.21541, -182.231, 2.69826, 0.59 ) }
    dend_57 { pt3dadd( 7.16828, -183.016, 2.93318, 1.18 ) }
    dend_57 { pt3dadd( 7.07751, -184.322, 3.18935, 1.18 ) }
    dend_57 { pt3dadd( 6.98975, -185.573, 3.27422, 1.03 ) }
    dend_57 { pt3dadd( 6.89324, -186.786, 3.19834, 0.88 ) }
    dend_57 { pt3dadd( 6.70926, -188.468, 3.04119, 0.59 ) }
    dend_57 { pt3dadd( 6.5512, -189.722, 2.89177, 0.44 ) }
    dend_57 { pt3dadd( 6.4373, -190.601, 2.75801, 0.52 ) }
    dend_57 { pt3dadd( 6.32027, -191.561, 2.57091, 0.52 ) }
    dend_57 { pt3dadd( 6.2276, -192.441, 2.38037, 0.74 ) }
    dend_57 { pt3dadd( 6.14136, -193.39, 2.18012, 0.59 ) }
    dend_57 { pt3dadd( 6.06683, -194.338, 2.00704, 0.59 ) }
    dend_57 { pt3dadd( 5.99031, -195.399, 1.86052, 1.11 ) }
    dend_57 { pt3dadd( 5.9138, -196.436, 1.76695, 1.11 ) }
    dend_57 { pt3dadd( 5.81111, -197.844, 1.76936, 1.55 ) }
    dend_57 { pt3dadd( 5.68745, -199.349, 1.88328, 0.88 ) }
    dend_57 { pt3dadd( 5.58163, -200.516, 2.04985, 0.96 ) }
    dend_57 { pt3dadd( 5.4311, -201.975, 2.32238, 0.59 ) }
    dend_57 { pt3dadd( 5.30695, -203.001, 2.54878, 0.59 ) }
    dend_57 { pt3dadd( 5.07956, -204.757, 2.91446, 0.59 ) }
    dend_57 { pt3dadd( 4.97114, -205.566, 3.06006, 0.81 ) }
    dend_57 { pt3dadd( 4.80045, -206.798, 3.2363, 0.59 ) }
    dend_57 { pt3dadd( 4.56733, -208.334, 3.38684, 0.44 ) }
    dend_57 { pt3dadd( 4.32456, -209.766, 3.44431, 0.52 ) }
    dend_57 { pt3dadd( 4.05228, -211.097, 3.47038, 0.52 ) }
    dend_57 { pt3dadd( 3.79089, -212.131, 3.46079, 0.74 ) }
    dend_57 { pt3dadd( 3.52723, -213.083, 3.46708, 1.03 ) }
    dend_57 { pt3dadd( 3.35605, -213.655, 3.4468, 1.25 ) }
    dend_57 { pt3dadd( 3.06681, -214.573, 3.36371, 1.03 ) }
    dend_57 { pt3dadd( 2.5999, -216.038, 3.18155, 0.59 ) }
    dend_57 { pt3dadd( 2.13963, -217.41, 2.99111, 0.52 ) }
    dend_57 { pt3dadd( 1.64381, -218.788, 2.74829, 0.37 ) }
    dend_57 { pt3dadd( 0.995136, -220.535, 2.40729, 0.37 ) }
    dend_57 { pt3dadd( 0.697204, -221.319, 2.22822, 0.37 ) }
    dend_57 { pt3dadd( 0.34203, -222.259, 1.9932, 0.88 ) }
    dend_57 { pt3dadd( -0.0514124, -223.367, 1.68165, 0.96 ) }
    dend_57 { pt3dadd( -0.419602, -224.488, 1.38894, 1.03 ) }
    dend_57 { pt3dadd( -0.716322, -225.547, 1.16798, 0.66 ) }
    dend_57 { pt3dadd( -1.02416, -226.951, 0.95381, 0.59 ) }
    dend_57 { pt3dadd( -1.21055, -228.124, 0.829534, 0.52 ) }
    dend_57 { pt3dadd( -1.33368, -229.487, 0.728616, 0.44 ) }
    dend_57 { pt3dadd( -1.35131, -230.743, 0.721429, 0.44 ) }
    dend_57 { pt3dadd( -1.28105, -232.269, 0.819653, 0.29 ) }
    dend_57 { pt3dadd( -1.23128, -232.894, 0.925881, 0.29 ) }
    dend_57 { pt3dadd( -1.10176, -234.219, 1.2928, 0.44 ) }
    dend_57 { pt3dadd( -1.01774, -235.198, 1.65611, 0.52 ) }
    dend_57 { pt3dadd( -0.921825, -236.7, 2.32538, 0.22 ) }
    dend_57 { pt3dadd( -0.904765, -237.206, 2.58569, 0.59 ) }
    dend_57 { pt3dadd( -0.902365, -238.231, 3.18464, 1.11 ) }
    dend_57 { pt3dadd( -0.907645, -238.932, 3.62286, 1.25 ) }
    dend_57 { pt3dadd( -0.930675, -240.188, 4.4148, 0.59 ) }
    dend_57 { pt3dadd( -0.961845, -241.118, 5.01918, 0.44 ) }
    dend_57 { pt3dadd( -1.02677, -242.579, 5.94099, 0.29 ) }
    dend_57 { pt3dadd( -1.08831, -243.517, 6.50539, 0.29 ) }
    dend_57 { pt3dadd( -1.16564, -244.457, 7.05098, 0.37 ) }
    dend_57 { pt3dadd( -1.23796, -245.362, 7.59344, 0.52 ) }
    dend_57 { pt3dadd( -1.30442, -246.165, 8.06263, 1.03 ) }
    dend_57 { pt3dadd( -1.36594, -246.946, 8.49029, 1.84 ) }
    dend_57 { pt3dadd( -1.40378, -247.746, 8.87398, 1.84 ) }
    dend_57 { pt3dadd( -1.43606, -249.078, 9.43964, 1.55 ) }
    dend_57 { pt3dadd( -1.43703, -250.957, 10.1855, 0.52 ) }
    dend_57 { pt3dadd( -1.40615, -252.042, 10.5934, 0.52 ) }
    dend_57 { pt3dadd( -1.35529, -253.095, 10.9309, 0.52 ) }
    dend_57 { pt3dadd( -1.30515, -254.213, 11.2219, 0.74 ) }
    dend_57 { pt3dadd( -1.26793, -255.455, 11.4408, 0.29 ) }
    dend_57 { pt3dadd( -1.27591, -256.243, 11.4551, 0.37 ) }
    dend_57 { pt3dadd( -1.31523, -256.902, 11.3669, 0.88 ) }
    dend_57 { pt3dadd( -1.44171, -258.257, 11.0633, 0.88 ) }
    dend_57 { pt3dadd( -1.59364, -259.37, 10.7408, 0.66 ) }
    dend_57 { pt3dadd( -1.86286, -260.8, 10.2665, 0.52 ) }
    dend_57 { pt3dadd( -2.22608, -262.309, 9.74972, 0.37 ) }
    dend_57 { pt3dadd( -2.45793, -263.15, 9.48036, 0.37 ) }
    dend_57 { pt3dadd( -2.59092, -263.562, 9.36962, 0.74 ) }
    dend_57 { pt3dadd( -2.85052, -264.278, 9.2293, 1.03 ) }
    dend_57 { pt3dadd( -3.24886, -265.291, 9.08136, 0.81 ) }
    dend_57 { pt3dadd( -3.72516, -266.406, 8.99245, 0.29 ) }
    dend_57 { pt3dadd( -4.26905, -267.608, 8.98164, 0.29 ) }
    dend_57 { pt3dadd( -4.78118, -268.693, 8.98774, 0.29 ) }
    dend_57 { pt3dadd( -5.17621, -269.529, 8.98991, 0.29 ) }
    dend_57 { pt3dadd( -5.64368, -270.551, 8.9914, 0.59 ) }
    dend_57 { pt3dadd( -6.08693, -271.597, 9.05091, 0.29 ) }
    dend_57 { pt3dadd( -6.27651, -272.087, 9.10426, 0.44 ) }
    dend_57 { pt3dadd( -6.58583, -272.955, 9.24068, 0.96 ) }
    dend_57 { pt3dadd( -6.73616, -273.452, 9.33451, 0.96 ) }
    dend_57 { pt3dadd( -7.12412, -274.9, 9.68474, 0.29 ) }
    dend_57 { pt3dadd( -7.4572, -276.338, 10.0825, 0.74 ) }
    dend_57 { pt3dadd( -7.5687, -276.902, 10.2442, 1.18 ) }
    dend_57 { pt3dadd( -7.68952, -277.633, 10.4029, 1.25 ) }
    dend_57 { pt3dadd( -7.88502, -279.097, 10.6102, 0.37 ) }
    dend_57 { pt3dadd( -8.04639, -280.438, 10.6734, 0.44 ) }
    dend_57 { pt3dadd( -8.12567, -281.25, 10.6346, 0.44 ) }
    dend_57 { pt3dadd( -8.22467, -282.422, 10.482, 0.44 ) }
    dend_57 { pt3dadd( -8.35533, -284.22, 10.2097, 0.44 ) }
    dend_57 { pt3dadd( -8.40676, -285.0, 10.1121, 0.88 ) }
    dend_57 { pt3dadd( -8.47241, -286.055, 10.0516, 1.03 ) }
    dend_57 { pt3dadd( -8.50172, -286.52, 10.0681, 1.03 ) }
    dend_57 { pt3dadd( -8.62763, -288.342, 10.3721, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_29()
}

proc basic_shape_29() {
    dend_57 { pt3dadd( -8.71759, -289.566, 10.751, 0.44 ) }
    dend_57 { pt3dadd( -8.81853, -291.138, 11.4273, 0.44 ) }
    dend_57 { pt3dadd( -8.90005, -292.47, 12.0844, 0.44 ) }
    dend_57 { pt3dadd( -8.94303, -293.309, 12.5434, 0.44 ) }
    dend_57 { pt3dadd( -8.97329, -293.916, 12.9014, 0.88 ) }
    dend_57 { pt3dadd( -9.00427, -294.629, 13.364, 1.62 ) }
    dend_57 { pt3dadd( -9.05888, -295.766, 14.0947, 1.62 ) }
    dend_57 { pt3dadd( -9.13979, -297.342, 14.9896, 0.66 ) }
    dend_57 { pt3dadd( -9.21441, -298.583, 15.6389, 0.29 ) }
    dend_57 { pt3dadd( -9.28409, -299.643, 16.2258, 0.29 ) }
    dend_57 { pt3dadd( -9.33905, -300.489, 16.7362, 0.29 ) }
    dend_57 { pt3dadd( -9.37101, -301.149, 17.1723, 0.88 ) }
    dend_57 { pt3dadd( -9.40151, -302.184, 17.9022, 0.96 ) }
    dend_57 { pt3dadd( -9.38218, -303.324, 18.6794, 0.22 ) }
    dend_57 { pt3dadd( -9.31758, -304.439, 19.4044, 0.22 ) }
    dend_57 { pt3dadd( -9.2804, -304.914, 19.7052, 0.44 ) }
    dend_57 { pt3dadd( -9.20587, -305.815, 20.2905, 0.88 ) }
    dend_57 { pt3dadd( -9.15486, -306.391, 20.6877, 1.77 ) }
    dend_57 { pt3dadd( -9.05756, -307.313, 21.3225, 1.99 ) }
    dend_57 { pt3dadd( -8.87214, -308.838, 22.3192, 0.74 ) }
    dend_57 { pt3dadd( -8.70174, -310.223, 23.193, 0.37 ) }
    dend_57 { pt3dadd( -8.50455, -311.801, 24.2069, 0.44 ) }
    dend_57 { pt3dadd( -8.3895, -312.762, 24.8199, 0.37 ) }
    dend_57 { pt3dadd( -8.29232, -313.548, 25.3294, 0.37 ) }
    dend_57 { pt3dadd( -8.12082, -314.786, 26.1079, 0.37 ) }
    dend_57 { pt3dadd( -8.00232, -315.523, 26.5211, 0.22 ) }
    dend_57 { pt3dadd( -7.88995, -316.074, 26.7804, 0.22 ) }
    dend_57 { pt3dadd( -7.70949, -316.765, 26.9985, 0.29 ) }
    dend_57 { pt3dadd( -7.48614, -317.479, 27.1128, 0.81 ) }
    dend_57 { pt3dadd( -7.13197, -318.462, 27.1242, 1.77 ) }
    dend_57 { pt3dadd( -6.95632, -318.868, 27.0604, 1.62 ) }
    dend_57 { pt3dadd( -6.46125, -319.959, 26.7723, 0.44 ) }
    dend_57 { pt3dadd( -5.76266, -321.344, 26.244, 0.29 ) }
    dend_57 { pt3dadd( -5.33665, -322.091, 25.8908, 0.29 ) }
    dend_57 { pt3dadd( -4.96197, -322.688, 25.5748, 0.29 ) }
    dend_57 { pt3dadd( -4.60628, -323.256, 25.2516, 0.44 ) }
    dend_57 { pt3dadd( -4.01785, -324.278, 24.707, 0.66 ) }
    dend_57 { pt3dadd( -3.57636, -325.146, 24.3014, 0.66 ) }
    dend_57 { pt3dadd( -3.28367, -325.79, 24.0638, 1.84 ) }
    dend_57 { pt3dadd( -2.88243, -326.721, 23.7739, 1.84 ) }
    dend_57 { pt3dadd( -2.0567, -328.731, 23.2552, 1.11 ) }
    dend_57 { pt3dadd( -1.61232, -329.9, 23.0171, 0.22 ) }
    dend_57 { pt3dadd( -1.30209, -330.771, 22.8525, 0.29 ) }
    dend_57 { pt3dadd( -1.06089, -331.521, 22.7294, 0.66 ) }
    dend_57 { pt3dadd( -0.769889, -332.499, 22.5726, 1.11 ) }
    dend_57 { pt3dadd( -0.507954, -333.428, 22.4376, 0.29 ) }
    dend_57 { pt3dadd( -0.248701, -334.345, 22.3666, 0.22 ) }
    dend_57 { pt3dadd( 0.233161, -336.017, 22.2756, 0.22 ) }
    dend_57 { pt3dadd( 0.439942, -336.714, 22.2902, 0.29 ) }
    dend_57 { pt3dadd( 0.673448, -337.501, 22.3801, 0.37 ) }
    dend_57 { pt3dadd( 1.04228, -338.711, 22.6193, 0.29 ) }
    dend_57 { pt3dadd( 1.34503, -339.689, 22.9169, 0.52 ) }
    dend_57 { pt3dadd( 1.63266, -340.636, 23.2951, 1.62 ) }
    dend_57 { pt3dadd( 2.08132, -342.154, 24.0334, 0.37 ) }
    dend_57 { pt3dadd( 2.39912, -343.244, 24.5846, 0.29 ) }
    dend_57 { pt3dadd( 2.63731, -344.082, 25.0088, 0.29 ) }
    dend_57 { pt3dadd( 2.94437, -345.242, 25.4744, 0.29 ) }
    dend_57 { pt3dadd( 3.06858, -345.761, 25.6044, 0.29 ) }
    dend_57 { pt3dadd( 3.19236, -346.349, 25.6814, 0.74 ) }
    dend_57 { pt3dadd( 3.39037, -347.323, 25.629, 1.62 ) }
    dend_57 { pt3dadd( 3.65468, -348.633, 25.348, 2.73 ) }
    dend_57 { pt3dadd( 4.10457, -350.893, 24.6273, 0.44 ) }
    dend_57 { pt3dadd( 4.32682, -352.041, 24.166, 0.44 ) }
    dend_57 { pt3dadd( 4.48759, -352.871, 23.7959, 0.74 ) }
    dend_57 { pt3dadd( 4.80134, -354.53, 22.9655, 0.44 ) }
    dend_57 { pt3dadd( 5.02727, -355.695, 22.2898, 0.44 ) }
    dend_57 { pt3dadd( 5.16335, -356.37, 21.8322, 0.81 ) }
    dend_57 { pt3dadd( 5.27498, -356.919, 21.4279, 1.62 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 68/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 10.3926, -71.901, -7.46234, 1.55 ) }
    dend_54 { pt3dadd( 11.447, -72.4941, -8.43721, 1.55 ) }
    dend_54 { pt3dadd( 12.5431, -73.1996, -9.42934, 0.66 ) }
    dend_54 { pt3dadd( 13.402, -73.8525, -10.1802, 0.52 ) }
    dend_54 { pt3dadd( 13.7552, -74.1645, -10.4658, 0.52 ) }
    dend_54 { pt3dadd( 14.0797, -74.4739, -10.7058, 0.52 ) }
    dend_54 { pt3dadd( 14.509, -74.871, -10.989, 0.74 ) }
    dend_54 { pt3dadd( 14.8713, -75.1947, -11.139, 0.81 ) }
    dend_54 { pt3dadd( 15.3822, -75.5654, -11.2971, 0.66 ) }
    dend_54 { pt3dadd( 15.9553, -75.8808, -11.4538, 0.74 ) }
    dend_54 { pt3dadd( 17.0667, -76.2659, -11.7802, 0.66 ) }
    dend_54 { pt3dadd( 17.676, -76.3396, -11.9936, 0.59 ) }
    dend_54 { pt3dadd( 18.475, -76.271, -12.2824, 0.59 ) }
    dend_54 { pt3dadd( 19.481, -76.0372, -12.7146, 0.66 ) }
    dend_54 { pt3dadd( 20.151, -75.7902, -13.0654, 0.74 ) }
    dend_54 { pt3dadd( 20.6051, -75.5875, -13.3587, 0.81 ) }
    dend_54 { pt3dadd( 21.4012, -75.2104, -13.9892, 0.81 ) }
    dend_54 { pt3dadd( 22.1304, -74.891, -14.6975, 0.74 ) }
    dend_54 { pt3dadd( 23.0285, -74.5904, -15.7045, 0.44 ) }
    dend_54 { pt3dadd( 23.8511, -74.4379, -16.7082, 0.37 ) }
    dend_54 { pt3dadd( 24.6598, -74.4633, -17.7432, 0.59 ) }
    dend_54 { pt3dadd( 25.425, -74.6662, -18.7323, 0.96 ) }
    dend_54 { pt3dadd( 26.1177, -75.0057, -19.6056, 0.96 ) }
    dend_54 { pt3dadd( 26.9268, -75.5816, -20.6378, 0.88 ) }
    dend_54 { pt3dadd( 27.713, -76.2698, -21.5794, 0.81 ) }
    dend_54 { pt3dadd( 28.7265, -77.2712, -22.7119, 0.81 ) }
    dend_54 { pt3dadd( 29.5109, -78.0537, -23.5236, 0.52 ) }
    dend_54 { pt3dadd( 30.0044, -78.5066, -23.9871, 0.88 ) }
    dend_54 { pt3dadd( 30.8186, -79.1017, -24.6672, 0.37 ) }
    dend_54 { pt3dadd( 31.2447, -79.2939, -24.989, 0.37 ) }
    dend_54 { pt3dadd( 31.5891, -79.3393, -25.2359, 0.37 ) }
    dend_54 { pt3dadd( 32.5702, -79.231, -25.895, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_30()
}

proc basic_shape_30() {
    dend_54 { pt3dadd( 33.4947, -79.089, -26.5266, 0.81 ) }
    dend_54 { pt3dadd( 34.4554, -79.0226, -27.2779, 0.52 ) }
    dend_54 { pt3dadd( 34.9639, -79.0911, -27.7712, 0.52 ) }
    dend_54 { pt3dadd( 35.5194, -79.3657, -28.5272, 0.52 ) }
    dend_54 { pt3dadd( 35.8464, -79.626, -29.0535, 0.52 ) }
    dend_54 { pt3dadd( 36.4883, -80.2697, -30.147, 0.59 ) }
    dend_54 { pt3dadd( 37.1817, -81.0817, -31.3947, 0.66 ) }
    dend_54 { pt3dadd( 37.844, -81.9554, -32.5961, 0.66 ) }
    dend_54 { pt3dadd( 38.5883, -82.9845, -33.9068, 0.66 ) }
    dend_54 { pt3dadd( 39.3341, -84.0684, -35.1456, 0.52 ) }
    dend_54 { pt3dadd( 39.6657, -84.5607, -35.6546, 0.52 ) }
    dend_54 { pt3dadd( 40.1077, -85.201, -36.1994, 0.52 ) }
    dend_54 { pt3dadd( 40.7059, -86.0862, -36.746, 0.66 ) }
    dend_54 { pt3dadd( 41.3616, -87.1112, -37.1595, 0.96 ) }
    dend_54 { pt3dadd( 41.85, -87.899, -37.3808, 1.03 ) }
    dend_54 { pt3dadd( 42.2145, -88.5268, -37.539, 1.33 ) }
    dend_54 { pt3dadd( 42.7718, -89.4764, -37.7809, 1.47 ) }
    dend_54 { pt3dadd( 43.232, -90.2555, -37.9707, 1.25 ) }
    dend_54 { pt3dadd( 43.9684, -91.4712, -38.2635, 0.74 ) }
    dend_54 { pt3dadd( 44.8294, -92.8223, -38.5517, 0.74 ) }
    dend_54 { pt3dadd( 45.6094, -93.9769, -38.7673, 0.44 ) }
    dend_54 { pt3dadd( 45.9555, -94.4779, -38.8439, 0.44 ) }
    dend_54 { pt3dadd( 46.7683, -95.6615, -38.941, 0.44 ) }
    dend_54 { pt3dadd( 47.1348, -96.1872, -38.9377, 0.44 ) }
    dend_54 { pt3dadd( 47.8755, -97.1506, -38.8239, 0.29 ) }
    dend_54 { pt3dadd( 48.8137, -98.1551, -38.6431, 0.29 ) }
    dend_54 { pt3dadd( 49.3964, -98.6051, -38.5401, 0.37 ) }
    dend_54 { pt3dadd( 50.4807, -99.1302, -38.4111, 0.66 ) }
    dend_54 { pt3dadd( 51.6538, -99.3841, -38.3311, 0.52 ) }
    dend_54 { pt3dadd( 52.9726, -99.4264, -38.2927, 0.44 ) }
    dend_54 { pt3dadd( 54.6582, -99.188, -38.3102, 0.15 ) }
    dend_54 { pt3dadd( 55.9345, -98.7813, -38.3707, 0.22 ) }
    dend_54 { pt3dadd( 57.1244, -98.1945, -38.5015, 0.15 ) }
    dend_54 { pt3dadd( 57.8702, -97.6682, -38.6485, 0.15 ) }
    dend_54 { pt3dadd( 58.2081, -97.3178, -38.729, 0.59 ) }
    dend_54 { pt3dadd( 58.4299, -96.9879, -38.7889, 0.59 ) }
    dend_54 { pt3dadd( 58.8417, -96.0804, -38.8994, 0.37 ) }
    dend_54 { pt3dadd( 59.2209, -94.8032, -39.063, 0.15 ) }
    dend_54 { pt3dadd( 59.3211, -94.1312, -39.141, 0.15 ) }
    dend_54 { pt3dadd( 59.4436, -92.6513, -39.28, 0.15 ) }
    dend_54 { pt3dadd( 59.495, -91.9532, -39.3292, 0.15 ) }
    dend_54 { pt3dadd( 59.539, -91.4111, -39.3541, 0.29 ) }
    dend_54 { pt3dadd( 59.5816, -90.81, -39.3654, 0.29 ) }
    dend_54 { pt3dadd( 59.7056, -89.058, -39.3217, 0.15 ) }
    dend_54 { pt3dadd( 59.7918, -87.6217, -39.2987, 0.15 ) }
    dend_54 { pt3dadd( 59.8246, -86.7396, -39.3268, 0.29 ) }
    dend_54 { pt3dadd( 59.8471, -85.9976, -39.3508, 0.37 ) }
    dend_54 { pt3dadd( 68.4034, -87.3834, -45.5819, 0.37 ) }
    dend_54 { pt3dadd( 78.1173, -86.6311, -49.9443, 0.37 ) }
    dend_54 { pt3dadd( 87.4345, -84.5578, -54.7242, 0.37 ) }
    dend_54 { pt3dadd( 96.6132, -80.4209, -58.2731, 0.37 ) }
    dend_54 { pt3dadd( 105.284, -76.3071, -62.9473, 0.37 ) }
    dend_54 { pt3dadd( 112.999, -70.7451, -67.7946, 0.37 ) }
    dend_54 { pt3dadd( 121.117, -65.9201, -72.772, 0.37 ) }
    dend_54 { pt3dadd( 128.765, -61.0205, -78.3801, 0.37 ) }
    dend_54 { pt3dadd( 137.083, -55.8765, -82.6584, 0.37 ) }
    dend_54 { pt3dadd( 145.189, -51.1474, -87.7468, 0.37 ) }
    dend_54 { pt3dadd( 152.427, -46.6049, -94.145, 0.37 ) }
    dend_54 { pt3dadd( 160.809, -41.6793, -98.554, 0.37 ) }
    dend_54 { pt3dadd( 169.481, -37.3539, -103.03, 0.37 ) }
    dend_54 { pt3dadd( 177.922, -33.0812, -107.974, 0.37 ) }
    dend_54 { pt3dadd( 186.216, -29.5442, -113.689, 0.37 ) }
    dend_54 { pt3dadd( 193.595, -26.8042, -120.901, 0.37 ) }
    dend_54 { pt3dadd( 201.375, -24.2078, -127.733, 0.37 ) }
    dend_54 { pt3dadd( 209.079, -22.0822, -134.81, 0.37 ) }
    dend_54 { pt3dadd( 216.519, -20.1562, -142.22, 0.37 ) }
    dend_54 { pt3dadd( 223.351, -17.0173, -149.798, 0.37 ) }
    dend_54 { pt3dadd( 229.686, -12.7197, -157.238, 0.37 ) }
    dend_54 { pt3dadd( 234.691, -7.63332, -165.177, 0.37 ) }
    dend_54 { pt3dadd( 240.238, -3.91557, -173.505, 0.37 ) }
    dend_54 { pt3dadd( 245.91, -1.2054, -182.133, 0.37 ) }
    dend_54 { pt3dadd( 250.599, 2.14375, -191.12, 0.37 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 72/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 29.1894, -33.9223, -1.09943, 0.96 ) }
    dend_50 { pt3dadd( 30.1384, -33.4289, -0.630093, 0.96 ) }
    dend_50 { pt3dadd( 30.9674, -32.9288, -0.149926, 0.59 ) }
    dend_50 { pt3dadd( 32.206, -32.0352, 0.735476, 0.59 ) }
    dend_50 { pt3dadd( 33.2244, -31.182, 1.58132, 0.59 ) }
    dend_50 { pt3dadd( 33.9468, -30.5118, 2.21988, 0.59 ) }
    dend_50 { pt3dadd( 34.7269, -29.7195, 2.91906, 0.66 ) }
    dend_50 { pt3dadd( 35.4283, -28.8986, 3.6037, 0.59 ) }
    dend_50 { pt3dadd( 36.3362, -27.7241, 4.46483, 0.66 ) }
    dend_50 { pt3dadd( 37.0228, -26.8066, 5.04509, 0.66 ) }
    dend_50 { pt3dadd( 37.5212, -26.1929, 5.39437, 0.59 ) }
    dend_50 { pt3dadd( 38.3098, -25.3944, 5.86049, 0.52 ) }
    dend_50 { pt3dadd( 38.9379, -24.9104, 6.17878, 0.52 ) }
    dend_50 { pt3dadd( 39.7727, -24.4475, 6.53111, 0.52 ) }
    dend_50 { pt3dadd( 40.9617, -24.0077, 6.9641, 0.52 ) }
    dend_50 { pt3dadd( 42.0566, -23.7328, 7.37681, 0.59 ) }
    dend_50 { pt3dadd( 43.3791, -23.5149, 7.94017, 0.37 ) }
    dend_50 { pt3dadd( 44.1502, -23.4376, 8.3044, 0.29 ) }
    dend_50 { pt3dadd( 44.4093, -23.4161, 8.45585, 0.29 ) }
    dend_50 { pt3dadd( 44.716, -23.4028, 8.66795, 0.29 ) }
    dend_50 { pt3dadd( 45.4293, -23.3902, 9.2707, 0.29 ) }
    dend_50 { pt3dadd( 45.9448, -23.3607, 9.78294, 0.29 ) }
    dend_50 { pt3dadd( 46.7698, -23.2262, 10.7065, 0.59 ) }
    dend_50 { pt3dadd( 48.0602, -22.8808, 12.2052, 0.59 ) }
    dend_50 { pt3dadd( 48.5716, -22.7076, 12.8452, 0.59 ) }
    dend_50 { pt3dadd( 49.312, -22.4329, 13.8085, 0.59 ) }
    dend_50 { pt3dadd( 49.7237, -22.2738, 14.3571, 0.59 ) }
    dend_50 { pt3dadd( 50.5973, -21.9231, 15.4907, 0.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_31()
}

proc basic_shape_31() {
    dend_50 { pt3dadd( 51.2685, -21.6361, 16.2753, 0.59 ) }
    dend_50 { pt3dadd( 52.9624, -20.9136, 17.7815, 0.59 ) }
    dend_50 { pt3dadd( 53.9701, -20.5368, 18.4887, 0.59 ) }
    dend_50 { pt3dadd( 55.4565, -20.1457, 19.3312, 0.81 ) }
    dend_50 { pt3dadd( 59.2466, -19.493, 21.4406, 1.11 ) }
    dend_50 { pt3dadd( 60.2504, -19.3678, 22.0254, 0.66 ) }
    dend_50 { pt3dadd( 61.8942, -19.138, 23.1041, 0.59 ) }
    dend_50 { pt3dadd( 62.9959, -18.8746, 23.9822, 0.59 ) }
    dend_50 { pt3dadd( 63.6138, -18.6328, 24.6196, 0.52 ) }
    dend_50 { pt3dadd( 64.5761, -18.0672, 25.8195, 0.52 ) }
    dend_50 { pt3dadd( 65.1095, -17.6923, 26.5542, 0.52 ) }
    dend_50 { pt3dadd( 65.5806, -17.3079, 27.2662, 0.52 ) }
    dend_50 { pt3dadd( 66.5287, -16.4295, 28.7764, 0.52 ) }
    dend_50 { pt3dadd( 67.1272, -15.8055, 29.7839, 0.59 ) }
    dend_50 { pt3dadd( 68.0529, -14.8206, 31.3118, 0.59 ) }
    dend_50 { pt3dadd( 68.5622, -14.3149, 32.1094, 0.59 ) }
    dend_50 { pt3dadd( 68.8904, -14.0358, 32.5756, 0.59 ) }
    dend_50 { pt3dadd( 69.4185, -13.6919, 33.2318, 0.59 ) }
    dend_50 { pt3dadd( 69.8914, -13.4907, 33.7049, 0.59 ) }
    dend_50 { pt3dadd( 70.7815, -13.2728, 34.4174, 0.29 ) }
    dend_50 { pt3dadd( 71.8811, -13.1005, 35.2091, 0.29 ) }
    dend_50 { pt3dadd( 72.4569, -12.9948, 35.6124, 0.52 ) }
    dend_50 { pt3dadd( 73.5261, -12.7093, 36.425, 0.52 ) }
    dend_50 { pt3dadd( 74.583, -12.3441, 37.2461, 0.15 ) }
    dend_50 { pt3dadd( 75.3866, -12.0131, 37.8794, 0.22 ) }
    dend_50 { pt3dadd( 76.9117, -11.2908, 39.1123, 0.22 ) }
    dend_50 { pt3dadd( 77.379, -11.0675, 39.4905, 0.22 ) }
    dend_50 { pt3dadd( 78.9072, -10.3604, 40.7638, 0.22 ) }
    dend_50 { pt3dadd( 79.674, -10.0265, 41.3947, 0.22 ) }
    dend_50 { pt3dadd( 80.0888, -9.85143, 41.7454, 0.22 ) }
    dend_50 { pt3dadd( 81.1015, -9.52326, 42.5224, 0.22 ) }
    dend_50 { pt3dadd( 81.9646, -9.37591, 43.0132, 0.22 ) }
    dend_50 { pt3dadd( 82.6944, -9.32657, 43.3535, 0.22 ) }
    dend_50 { pt3dadd( 83.6374, -9.32782, 43.8096, 0.22 ) }
    dend_50 { pt3dadd( 83.9227, -9.32248, 43.9701, 0.22 ) }
    dend_50 { pt3dadd( 84.3931, -9.26424, 44.277, 0.37 ) }
    dend_50 { pt3dadd( 84.9874, -9.12339, 44.7173, 0.81 ) }
    dend_50 { pt3dadd( 86.6706, -8.59331, 45.9566, 0.22 ) }
    dend_50 { pt3dadd( 88.5364, -7.93019, 47.3076, 0.22 ) }
    dend_50 { pt3dadd( 89.3847, -7.60145, 47.87, 0.81 ) }
    dend_50 { pt3dadd( 91.1327, -6.86737, 48.9647, 0.22 ) }
    dend_50 { pt3dadd( 92.7951, -6.10523, 49.9562, 0.22 ) }
    dend_50 { pt3dadd( 93.6515, -5.66601, 50.4, 0.74 ) }
    dend_50 { pt3dadd( 94.083, -5.41482, 50.5914, 0.74 ) }
    dend_50 { pt3dadd( 95.9014, -4.31601, 51.2717, 0.15 ) }
    dend_50 { pt3dadd( 97.7359, -3.25889, 51.9879, 0.59 ) }
    dend_50 { pt3dadd( 98.0964, -3.068, 52.1588, 0.59 ) }
    dend_50 { pt3dadd( 99.2186, -2.50886, 52.8277, 0.22 ) }
    dend_50 { pt3dadd( 101.394, -1.52432, 54.423, 0.22 ) }
    dend_50 { pt3dadd( 102.047, -1.27201, 54.9775, 0.44 ) }
    dend_50 { pt3dadd( 103.636, -0.750051, 56.5342, 0.44 ) }
    dend_50 { pt3dadd( 105.289, -0.238874, 58.2983, 0.44 ) }
    dend_50 { pt3dadd( 106.029, 0.006302, 59.1495, 0.44 ) }
    dend_50 { pt3dadd( 106.59, 0.215061, 59.8434, 0.44 ) }
    dend_50 { pt3dadd( 107.35, 0.555965, 60.757, 0.88 ) }
    dend_50 { pt3dadd( 108.652, 1.27322, 62.2733, 0.74 ) }
    dend_50 { pt3dadd( 110.245, 2.2867, 63.9404, 0.74 ) }
    dend_50 { pt3dadd( 111.195, 2.93628, 64.7836, 0.74 ) }
    dend_50 { pt3dadd( 112.014, 3.49824, 65.379, 0.74 ) }
    dend_50 { pt3dadd( 113.103, 4.24202, 65.9832, 0.22 ) }
    dend_50 { pt3dadd( 114.29, 5.00937, 66.4002, 0.22 ) }
    dend_50 { pt3dadd( 115.294, 5.54891, 66.4525, 0.52 ) }
    dend_50 { pt3dadd( 116.251, 5.99505, 66.3262, 0.66 ) }
    dend_50 { pt3dadd( 117.874, 6.65462, 65.9752, 0.15 ) }
    dend_50 { pt3dadd( 119.254, 7.13432, 65.6008, 0.81 ) }
    dend_50 { pt3dadd( 119.933, 7.34949, 65.4477, 0.22 ) }
    dend_50 { pt3dadd( 122.161, 8.0429, 65.0273, 0.15 ) }
    dend_50 { pt3dadd( 123.764, 8.56212, 64.8128, 0.15 ) }
    dend_50 { pt3dadd( 124.867, 8.92131, 64.7521, 0.59 ) }
    dend_50 { pt3dadd( 126.289, 9.37937, 64.8658, 0.15 ) }
    dend_50 { pt3dadd( 128.712, 10.1513, 65.319, 0.15 ) }
    dend_50 { pt3dadd( 129.824, 10.502, 65.5986, 0.15 ) }
    dend_50 { pt3dadd( 130.655, 10.756, 65.8577, 0.15 ) }
    dend_50 { pt3dadd( 131.378, 10.9688, 66.0545, 0.52 ) }
    dend_50 { pt3dadd( 132.786, 11.3674, 66.3856, 0.52 ) }
    dend_50 { pt3dadd( 134.825, 11.8834, 66.7371, 0.07 ) }
    dend_50 { pt3dadd( 135.283, 11.9702, 66.7604, 0.07 ) }
    dend_50 { pt3dadd( 135.925, 12.0793, 66.795, 0.59 ) }
    dend_50 { pt3dadd( 137.688, 12.3959, 66.9944, 0.07 ) }
    dend_50 { pt3dadd( 139.017, 12.6854, 67.1526, 0.07 ) }
    dend_50 { pt3dadd( 139.514, 12.8084, 67.2035, 0.29 ) }
    dend_50 { pt3dadd( 140.046, 12.9508, 67.2743, 0.29 ) }
    dend_50 { pt3dadd( 142.833, 13.7947, 67.6153, 0.15 ) }
    dend_50 { pt3dadd( 144.598, 14.4086, 67.8176, 0.15 ) }
    dend_50 { pt3dadd( 145.756, 14.8838, 67.9262, 0.15 ) }
    dend_50 { pt3dadd( 146.767, 15.3616, 67.9695, 0.15 ) }
    dend_50 { pt3dadd( 147.474, 15.713, 67.9668, 0.15 ) }
    dend_50 { pt3dadd( 148.664, 16.3142, 67.8745, 0.15 ) }
    dend_50 { pt3dadd( 149.376, 16.6406, 67.7219, 0.15 ) }
    dend_50 { pt3dadd( 150.165, 16.9702, 67.5132, 0.22 ) }
    dend_50 { pt3dadd( 152.096, 17.6876, 67.0256, 0.07 ) }
    dend_50 { pt3dadd( 152.792, 17.9215, 66.8368, 0.74 ) }
    dend_50 { pt3dadd( 153.387, 18.0984, 66.6548, 0.74 ) }
    dend_50 { pt3dadd( 154.956, 18.4763, 66.2103, 0.07 ) }
    dend_50 { pt3dadd( 155.566, 18.5983, 66.0334, 0.37 ) }
    dend_50 { pt3dadd( 156.312, 18.7192, 65.8066, 0.66 ) }
    dend_50 { pt3dadd( 157.575, 18.9023, 65.3566, 0.07 ) }
    dend_50 { pt3dadd( 158.246, 19.0147, 65.1517, 0.15 ) }
    dend_50 { pt3dadd( 159.888, 19.3309, 64.7402, 0.07 ) }
    dend_50 { pt3dadd( 160.575, 19.4823, 64.6272, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_32()
}

proc basic_shape_32() {
    dend_50 { pt3dadd( 161.197, 19.6315, 64.554, 0.44 ) }
    dend_50 { pt3dadd( 162.731, 20.0123, 64.4008, 0.15 ) }
    dend_50 { pt3dadd( 164.352, 20.4047, 64.2467, 0.15 ) }
    dend_50 { pt3dadd( 165.142, 20.6007, 64.1567, 0.37 ) }
    dend_50 { pt3dadd( 166.504, 20.9689, 63.9668, 0.81 ) }
    dend_50 { pt3dadd( 167.176, 21.1665, 63.8652, 0.59 ) }
    dend_50 { pt3dadd( 168.667, 21.6554, 63.5933, 0.15 ) }
    dend_50 { pt3dadd( 169.645, 22.0154, 63.3362, 0.15 ) }
    dend_50 { pt3dadd( 170.324, 22.2905, 63.0848, 0.15 ) }
    dend_50 { pt3dadd( 171.385, 22.7534, 62.636, 0.15 ) }
    dend_50 { pt3dadd( 172.075, 23.0684, 62.2931, 0.66 ) }
    dend_50 { pt3dadd( 172.744, 23.3796, 61.9469, 0.37 ) }
    dend_50 { pt3dadd( 174.454, 24.1119, 61.032, 0.07 ) }
    dend_50 { pt3dadd( 174.931, 24.2939, 60.81, 0.44 ) }
    dend_50 { pt3dadd( 175.331, 24.413, 60.6419, 0.44 ) }
    dend_50 { pt3dadd( 177.207, 24.7802, 59.9468, 0.15 ) }
    dend_50 { pt3dadd( 178.033, 24.8932, 59.7273, 0.37 ) }
    dend_50 { pt3dadd( 180.464, 25.1262, 59.315, 0.15 ) }
    dend_50 { pt3dadd( 182.41, 25.2836, 59.1439, 0.59 ) }
    dend_50 { pt3dadd( 183.537, 25.3747, 59.0956, 1.33 ) }
    dend_50 { pt3dadd( 185.342, 25.5382, 59.0613, 0.15 ) }
    dend_50 { pt3dadd( 187.291, 25.7528, 59.1369, 0.15 ) }
    dend_50 { pt3dadd( 188.239, 25.8827, 59.189, 0.15 ) }
    dend_50 { pt3dadd( 189.064, 26.0246, 59.2286, 0.37 ) }
    dend_50 { pt3dadd( 189.609, 26.1346, 59.2322, 0.37 ) }
    dend_50 { pt3dadd( 191.307, 26.5711, 59.3016, 0.15 ) }
    dend_50 { pt3dadd( 193.219, 27.0932, 59.4022, 0.15 ) }
    dend_50 { pt3dadd( 194.0, 27.2928, 59.4368, 0.52 ) }
    dend_50 { pt3dadd( 194.852, 27.5007, 59.4561, 0.59 ) }
    dend_50 { pt3dadd( 196.805, 27.966, 59.4766, 0.15 ) }
    dend_50 { pt3dadd( 198.606, 28.39, 59.4998, 0.15 ) }
    dend_50 { pt3dadd( 200.013, 28.6801, 59.4977, 0.29 ) }
    dend_50 { pt3dadd( 200.858, 28.8188, 59.4503, 0.29 ) }
    dend_50 { pt3dadd( 202.504, 28.9674, 59.3346, 0.29 ) }
    dend_50 { pt3dadd( 203.434, 28.9385, 59.2705, 0.29 ) }
    dend_50 { pt3dadd( 204.818, 28.6152, 59.1687, 0.29 ) }
    dend_50 { pt3dadd( 206.046, 28.0705, 59.1278, 0.29 ) }
    dend_50 { pt3dadd( 206.545, 27.776, 59.2263, 0.52 ) }
    dend_50 { pt3dadd( 207.542, 27.1314, 59.6723, 0.15 ) }
    dend_50 { pt3dadd( 208.399, 26.5479, 60.2674, 0.15 ) }
    dend_50 { pt3dadd( 208.951, 26.1466, 60.7884, 0.15 ) }
    dend_50 { pt3dadd( 209.408, 25.8001, 61.2935, 0.52 ) }
    dend_50 { pt3dadd( 211.012, 24.6396, 63.2265, 0.22 ) }
    dend_50 { pt3dadd( 212.247, 23.8121, 64.7319, 0.52 ) }
    dend_50 { pt3dadd( 213.466, 23.1165, 66.1927, 1.33 ) }
    dend_50 { pt3dadd( 215.152, 22.2956, 68.1367, 0.22 ) }
    dend_50 { pt3dadd( 215.547, 22.137, 68.5578, 0.37 ) }
    dend_50 { pt3dadd( 216.507, 21.8581, 69.5215, 0.15 ) }
    dend_50 { pt3dadd( 217.31, 21.6944, 70.2409, 0.59 ) }
    dend_50 { pt3dadd( 219.392, 21.4984, 71.9545, 0.15 ) }
    dend_50 { pt3dadd( 220.663, 21.5104, 72.9715, 0.44 ) }
    dend_50 { pt3dadd( 222.547, 21.6022, 74.4401, 0.07 ) }
    dend_50 { pt3dadd( 224.554, 21.7131, 76.0173, 0.07 ) }
    dend_50 { pt3dadd( 225.366, 21.752, 76.6581, 0.96 ) }
    dend_50 { pt3dadd( 228.358, 21.9462, 79.0617, 0.52 ) }
    dend_50 { pt3dadd( 230.032, 22.0679, 80.4281, 0.37 ) }
    dend_50 { pt3dadd( 231.098, 22.1537, 81.3296, 0.15 ) }
    dend_50 { pt3dadd( 231.654, 22.2034, 81.8375, 0.15 ) }
    dend_50 { pt3dadd( 232.138, 22.219, 82.2671, 0.44 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 59/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 29.1894, -33.9223, -1.09943, 0.66 ) }
    dend_47 { pt3dadd( 30.5658, -34.7753, 0.0200422, 0.66 ) }
    dend_47 { pt3dadd( 31.5836, -35.4768, 0.795506, 0.66 ) }
    dend_47 { pt3dadd( 32.4845, -36.1623, 1.45371, 0.66 ) }
    dend_47 { pt3dadd( 33.068, -36.6527, 1.88675, 0.66 ) }
    dend_47 { pt3dadd( 33.9314, -37.46, 2.57328, 0.81 ) }
    dend_47 { pt3dadd( 34.7072, -38.2694, 3.25623, 1.03 ) }
    dend_47 { pt3dadd( 35.28, -39.0078, 3.80808, 0.74 ) }
    dend_47 { pt3dadd( 35.658, -39.6498, 4.25721, 0.74 ) }
    dend_47 { pt3dadd( 35.8448, -40.092, 4.56325, 1.18 ) }
    dend_47 { pt3dadd( 36.1379, -40.943, 5.18813, 0.81 ) }
    dend_47 { pt3dadd( 36.4675, -42.0018, 5.95253, 0.59 ) }
    dend_47 { pt3dadd( 36.7413, -42.7119, 6.49669, 0.59 ) }
    dend_47 { pt3dadd( 36.9694, -43.1447, 6.82346, 0.81 ) }
    dend_47 { pt3dadd( 37.3868, -43.6955, 7.23655, 0.81 ) }
    dend_47 { pt3dadd( 38.0983, -44.2488, 7.62004, 0.81 ) }
    dend_47 { pt3dadd( 39.0309, -44.5684, 7.82677, 0.74 ) }
    dend_47 { pt3dadd( 40.2803, -44.7474, 7.91069, 0.88 ) }
    dend_47 { pt3dadd( 41.0592, -44.8071, 7.93321, 0.88 ) }
    dend_47 { pt3dadd( 41.7867, -44.8423, 7.9598, 0.96 ) }
    dend_47 { pt3dadd( 43.2915, -44.9192, 7.99643, 0.44 ) }
    dend_47 { pt3dadd( 44.3143, -45.0084, 8.02385, 0.44 ) }
    dend_47 { pt3dadd( 45.301, -45.1639, 8.07824, 0.52 ) }
    dend_47 { pt3dadd( 46.5155, -45.4885, 8.17102, 0.44 ) }
    dend_47 { pt3dadd( 47.6458, -45.9352, 8.30522, 0.74 ) }
    dend_47 { pt3dadd( 48.8715, -46.5902, 8.48498, 0.29 ) }
    dend_47 { pt3dadd( 49.5376, -47.0329, 8.5885, 0.29 ) }
    dend_47 { pt3dadd( 50.1786, -47.5158, 8.65599, 0.29 ) }
    dend_47 { pt3dadd( 50.6638, -47.9062, 8.68799, 0.29 ) }
    dend_47 { pt3dadd( 51.1461, -48.2981, 8.74386, 0.52 ) }
    dend_47 { pt3dadd( 51.85, -48.8938, 8.8776, 0.88 ) }
    dend_47 { pt3dadd( 52.3054, -49.2485, 9.05168, 0.66 ) }
    dend_47 { pt3dadd( 53.1775, -49.8406, 9.47066, 0.44 ) }
    dend_47 { pt3dadd( 53.8217, -50.2132, 9.84277, 0.22 ) }
    dend_47 { pt3dadd( 55.3079, -51.019, 10.817, 0.22 ) }
    dend_47 { pt3dadd( 55.6641, -51.2124, 11.0708, 0.22 ) }
    dend_47 { pt3dadd( 56.8182, -51.8568, 11.9002, 0.22 ) }
    dend_47 { pt3dadd( 57.3115, -52.1562, 12.2348, 0.29 ) }
    dend_47 { pt3dadd( 57.9129, -52.5307, 12.5795, 0.74 ) }
    dend_47 { pt3dadd( 58.501, -52.9053, 12.7894, 0.88 ) }
    dend_47 { pt3dadd( 59.1122, -53.2697, 12.851, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_33()
}

proc basic_shape_33() {
    dend_47 { pt3dadd( 59.8275, -53.6278, 12.8465, 0.88 ) }
    dend_47 { pt3dadd( 60.4351, -53.8989, 12.7995, 0.59 ) }
    dend_47 { pt3dadd( 61.1086, -54.1407, 12.7629, 0.44 ) }
    dend_47 { pt3dadd( 61.7363, -54.3377, 12.7382, 0.44 ) }
    dend_47 { pt3dadd( 62.6036, -54.5939, 12.7481, 0.29 ) }
    dend_47 { pt3dadd( 63.097, -54.7559, 12.7295, 0.29 ) }
    dend_47 { pt3dadd( 63.9213, -55.0923, 12.6557, 0.29 ) }
    dend_47 { pt3dadd( 64.367, -55.3492, 12.563, 0.74 ) }
    dend_47 { pt3dadd( 64.8399, -55.6932, 12.4561, 1.03 ) }
    dend_47 { pt3dadd( 65.4688, -56.2156, 12.3361, 0.29 ) }
    dend_47 { pt3dadd( 66.5888, -57.1912, 12.1761, 0.29 ) }
    dend_47 { pt3dadd( 67.1087, -57.6324, 12.1297, 0.29 ) }
    dend_47 { pt3dadd( 67.7851, -58.1938, 12.0896, 0.29 ) }
    dend_47 { pt3dadd( 68.674, -58.8945, 12.1082, 0.29 ) }
    dend_47 { pt3dadd( 69.2933, -59.3302, 12.194, 0.88 ) }
    dend_47 { pt3dadd( 69.953, -59.7607, 12.3544, 1.25 ) }
    dend_47 { pt3dadd( 70.889, -60.325, 12.6579, 0.37 ) }
    dend_47 { pt3dadd( 71.3009, -60.565, 12.7881, 0.37 ) }
    dend_47 { pt3dadd( 71.8668, -60.8881, 12.9684, 0.52 ) }
    dend_47 { pt3dadd( 72.6202, -61.3485, 13.1664, 0.52 ) }
    dend_47 { pt3dadd( 73.1887, -61.674, 13.323, 0.22 ) }
    dend_47 { pt3dadd( 73.4376, -61.7986, 13.3938, 0.22 ) }
    dend_47 { pt3dadd( 73.7683, -61.9324, 13.4857, 0.22 ) }
    dend_47 { pt3dadd( 74.5098, -62.1746, 13.6217, 0.22 ) }
    dend_47 { pt3dadd( 75.0794, -62.3384, 13.6689, 0.29 ) }
    dend_47 { pt3dadd( 75.8773, -62.5394, 13.7089, 0.66 ) }
    dend_47 { pt3dadd( 76.1002, -62.587, 13.727, 1.03 ) }
    dend_47 { pt3dadd( 76.9714, -62.7381, 13.8695, 1.47 ) }
    dend_47 { pt3dadd( 78.1103, -62.8693, 14.1353, 0.81 ) }
    dend_47 { pt3dadd( 79.0921, -62.9234, 14.4201, 0.44 ) }
    dend_47 { pt3dadd( 80.1925, -62.9363, 14.8115, 0.22 ) }
    dend_47 { pt3dadd( 80.9262, -62.9386, 15.1102, 0.22 ) }
    dend_47 { pt3dadd( 82.1639, -62.9521, 15.6839, 0.22 ) }
    dend_47 { pt3dadd( 82.8328, -62.9644, 16.0403, 0.37 ) }
    dend_47 { pt3dadd( 83.496, -63.0091, 16.4226, 0.66 ) }
    dend_47 { pt3dadd( 83.8921, -63.0686, 16.6495, 0.22 ) }
    dend_47 { pt3dadd( 84.3404, -63.1925, 16.898, 0.22 ) }
    dend_47 { pt3dadd( 84.9909, -63.4295, 17.2225, 0.22 ) }
    dend_47 { pt3dadd( 86.0871, -63.89, 17.7334, 0.22 ) }
    dend_47 { pt3dadd( 86.5293, -64.0942, 17.9358, 0.96 ) }
    dend_47 { pt3dadd( 87.6718, -64.6395, 18.4328, 1.55 ) }
    dend_47 { pt3dadd( 89.0825, -65.2836, 19.0123, 0.22 ) }
    dend_47 { pt3dadd( 89.7575, -65.5735, 19.268, 0.22 ) }
    dend_47 { pt3dadd( 90.6019, -65.9185, 19.5476, 0.59 ) }
    dend_47 { pt3dadd( 91.3392, -66.2359, 19.7435, 0.22 ) }
    dend_47 { pt3dadd( 92.2236, -66.632, 19.9093, 0.22 ) }
    dend_47 { pt3dadd( 92.6254, -66.8106, 19.9455, 0.22 ) }
    dend_47 { pt3dadd( 93.1614, -67.0158, 19.9706, 0.29 ) }
    dend_47 { pt3dadd( 93.6065, -67.1617, 20.0051, 0.96 ) }
    dend_47 { pt3dadd( 94.1512, -67.3208, 20.0511, 0.66 ) }
    dend_47 { pt3dadd( 94.8042, -67.4512, 20.159, 0.22 ) }
    dend_47 { pt3dadd( 95.8534, -67.5969, 20.3875, 0.29 ) }
    dend_47 { pt3dadd( 96.7221, -67.7074, 20.5524, 0.29 ) }
    dend_47 { pt3dadd( 97.1422, -67.7569, 20.6046, 0.37 ) }
    dend_47 { pt3dadd( 98.0775, -67.8566, 20.6631, 1.03 ) }
    dend_47 { pt3dadd( 99.6391, -68.0273, 20.6283, 0.66 ) }
    dend_47 { pt3dadd( 100.514, -68.1776, 20.4985, 0.22 ) }
    dend_47 { pt3dadd( 101.456, -68.4322, 20.2125, 0.22 ) }
    dend_47 { pt3dadd( 102.169, -68.6898, 19.8908, 0.22 ) }
    dend_47 { pt3dadd( 102.47, -68.8119, 19.7226, 0.29 ) }
    dend_47 { pt3dadd( 102.982, -69.0535, 19.3918, 0.29 ) }
    dend_47 { pt3dadd( 103.785, -69.5046, 18.8651, 0.29 ) }
    dend_47 { pt3dadd( 104.534, -69.9494, 18.4446, 0.29 ) }
    dend_47 { pt3dadd( 105.222, -70.3571, 18.146, 0.29 ) }
    dend_47 { pt3dadd( 106.061, -70.8601, 17.8383, 0.74 ) }
    dend_47 { pt3dadd( 106.848, -71.3283, 17.5721, 0.29 ) }
    dend_47 { pt3dadd( 107.683, -71.8114, 17.3158, 0.29 ) }
    dend_47 { pt3dadd( 108.265, -72.125, 17.1786, 0.96 ) }
    dend_47 { pt3dadd( 108.963, -72.4656, 17.0302, 1.7 ) }
    dend_47 { pt3dadd( 109.591, -72.7324, 16.8816, 0.96 ) }
    dend_47 { pt3dadd( 110.262, -72.9784, 16.67, 0.29 ) }
    dend_47 { pt3dadd( 110.93, -73.1644, 16.3844, 0.22 ) }
    dend_47 { pt3dadd( 111.557, -73.278, 16.0984, 0.22 ) }
    dend_47 { pt3dadd( 112.598, -73.4133, 15.6486, 0.29 ) }
    dend_47 { pt3dadd( 113.627, -73.5313, 15.3262, 0.22 ) }
    dend_47 { pt3dadd( 113.989, -73.5894, 15.2921, 0.22 ) }
    dend_47 { pt3dadd( 114.409, -73.7001, 15.3277, 0.22 ) }
    dend_47 { pt3dadd( 115.53, -74.085, 15.593, 0.22 ) }
    dend_47 { pt3dadd( 116.202, -74.3292, 15.8175, 0.52 ) }
    dend_47 { pt3dadd( 117.054, -74.6529, 16.1672, 0.96 ) }
    dend_47 { pt3dadd( 117.939, -75.0181, 16.5589, 0.96 ) }
    dend_47 { pt3dadd( 118.817, -75.4067, 16.9307, 0.22 ) }
    dend_47 { pt3dadd( 119.862, -75.8891, 17.3384, 0.29 ) }
    dend_47 { pt3dadd( 120.602, -76.2247, 17.5889, 0.74 ) }
    dend_47 { pt3dadd( 121.536, -76.6299, 17.8766, 1.47 ) }
    dend_47 { pt3dadd( 123.153, -77.299, 18.2709, 0.22 ) }
    dend_47 { pt3dadd( 123.689, -77.5004, 18.3716, 0.22 ) }
    dend_47 { pt3dadd( 124.111, -77.6483, 18.4307, 0.22 ) }
    dend_47 { pt3dadd( 125.047, -77.9957, 18.4892, 0.22 ) }
    dend_47 { pt3dadd( 125.444, -78.153, 18.4954, 0.66 ) }
    dend_47 { pt3dadd( 125.922, -78.3338, 18.4822, 0.96 ) }
    dend_47 { pt3dadd( 126.561, -78.5282, 18.4643, 0.59 ) }
    dend_47 { pt3dadd( 127.163, -78.6955, 18.4972, 0.22 ) }
    dend_47 { pt3dadd( 127.701, -78.8086, 18.5678, 0.22 ) }
    dend_47 { pt3dadd( 128.149, -78.8803, 18.6434, 0.22 ) }
    dend_47 { pt3dadd( 128.841, -78.9556, 18.7998, 0.74 ) }
    dend_47 { pt3dadd( 130.217, -79.054, 19.1501, 0.22 ) }
    dend_47 { pt3dadd( 131.255, -79.114, 19.4347, 0.22 ) }
    dend_47 { pt3dadd( 132.283, -79.1359, 19.7478, 0.22 ) }
    dend_47 { pt3dadd( 132.722, -79.1367, 19.8856, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_34()
}

proc basic_shape_34() {
    dend_47 { pt3dadd( 133.818, -79.1407, 20.2237, 1.03 ) }
    dend_47 { pt3dadd( 134.227, -79.1512, 20.3755, 1.03 ) }
    dend_47 { pt3dadd( 135.299, -79.2377, 20.8101, 0.15 ) }
    dend_47 { pt3dadd( 136.422, -79.3759, 21.2681, 0.15 ) }
    dend_47 { pt3dadd( 136.757, -79.423, 21.4091, 0.66 ) }
    dend_47 { pt3dadd( 137.233, -79.4852, 21.6075, 0.74 ) }
    dend_47 { pt3dadd( 139.133, -79.7535, 22.3617, 0.15 ) }
    dend_47 { pt3dadd( 139.463, -79.809, 22.4953, 0.22 ) }
    dend_47 { pt3dadd( 139.943, -79.9074, 22.6742, 0.22 ) }
    dend_47 { pt3dadd( 140.761, -80.1415, 22.9365, 0.15 ) }
    dend_47 { pt3dadd( 141.418, -80.378, 23.1227, 0.22 ) }
    dend_47 { pt3dadd( 141.834, -80.5714, 23.2031, 0.59 ) }
    dend_47 { pt3dadd( 142.872, -81.1726, 23.2535, 1.11 ) }
    dend_47 { pt3dadd( 143.403, -81.5152, 23.2574, 1.11 ) }
    dend_47 { pt3dadd( 143.948, -81.9128, 23.2324, 0.37 ) }
    dend_47 { pt3dadd( 144.619, -82.4717, 23.1448, 0.15 ) }
    dend_47 { pt3dadd( 145.256, -83.0125, 23.1063, 0.15 ) }
    dend_47 { pt3dadd( 145.512, -83.2298, 23.1063, 0.37 ) }
    dend_47 { pt3dadd( 145.864, -83.5259, 23.138, 0.66 ) }
    dend_47 { pt3dadd( 146.451, -83.9586, 23.2858, 0.22 ) }
    dend_47 { pt3dadd( 146.732, -84.1358, 23.4105, 0.22 ) }
    dend_47 { pt3dadd( 148.072, -84.9178, 24.2509, 0.22 ) }
    dend_47 { pt3dadd( 148.395, -85.1018, 24.4814, 0.44 ) }
    dend_47 { pt3dadd( 148.831, -85.3646, 24.8134, 0.88 ) }
    dend_47 { pt3dadd( 149.302, -85.683, 25.1564, 1.03 ) }
    dend_47 { pt3dadd( 150.138, -86.3264, 25.6707, 0.15 ) }
    dend_47 { pt3dadd( 150.59, -86.7122, 25.8607, 0.15 ) }
    dend_47 { pt3dadd( 150.925, -87.0409, 25.9034, 0.44 ) }
    dend_47 { pt3dadd( 151.112, -87.2197, 25.9081, 0.44 ) }
    dend_47 { pt3dadd( 152.053, -88.1191, 25.8449, 0.15 ) }
    dend_47 { pt3dadd( 152.783, -88.7989, 25.7715, 0.15 ) }
    dend_47 { pt3dadd( 153.098, -89.0612, 25.7182, 0.59 ) }
    dend_47 { pt3dadd( 153.795, -89.5777, 25.5908, 0.52 ) }
    dend_47 { pt3dadd( 154.722, -90.1643, 25.4365, 0.22 ) }
    dend_47 { pt3dadd( 155.5, -90.5495, 25.3147, 0.22 ) }
    dend_47 { pt3dadd( 155.971, -90.7036, 25.2663, 0.22 ) }
    dend_47 { pt3dadd( 156.543, -90.8138, 25.2274, 0.88 ) }
    dend_47 { pt3dadd( 156.759, -90.8323, 25.2069, 0.96 ) }
    dend_47 { pt3dadd( 157.342, -90.8035, 25.1208, 0.88 ) }
    dend_47 { pt3dadd( 158.384, -90.6422, 24.8369, 0.22 ) }
    dend_47 { pt3dadd( 159.131, -90.4619, 24.5707, 0.37 ) }
    dend_47 { pt3dadd( 159.852, -90.2521, 24.2658, 0.37 ) }
    dend_47 { pt3dadd( 160.246, -90.12, 24.091, 0.37 ) }
    dend_47 { pt3dadd( 161.133, -89.7952, 23.6626, 0.15 ) }
    dend_47 { pt3dadd( 162.137, -89.3953, 23.0932, 0.22 ) }
    dend_47 { pt3dadd( 162.652, -89.1833, 22.6883, 0.44 ) }
    dend_47 { pt3dadd( 162.946, -89.0818, 22.3892, 0.44 ) }
    dend_47 { pt3dadd( 163.597, -88.9078, 21.7127, 0.15 ) }
    dend_47 { pt3dadd( 163.844, -88.8563, 21.4821, 0.15 ) }
    dend_47 { pt3dadd( 164.396, -88.7937, 21.0886, 0.29 ) }
    dend_47 { pt3dadd( 165.912, -88.6778, 20.9133, 0.29 ) }
    dend_47 { pt3dadd( 166.4, -88.6434, 21.0704, 0.29 ) }
    dend_47 { pt3dadd( 167.781, -88.5488, 21.7274, 0.29 ) }
    dend_47 { pt3dadd( 168.785, -88.4778, 22.2653, 0.74 ) }
    dend_47 { pt3dadd( 169.327, -88.4489, 22.5718, 0.22 ) }
    dend_47 { pt3dadd( 170.486, -88.3852, 23.2835, 0.22 ) }
    dend_47 { pt3dadd( 171.408, -88.3306, 23.8755, 0.22 ) }
    dend_47 { pt3dadd( 171.597, -88.3172, 23.9946, 0.22 ) }
    dend_47 { pt3dadd( 172.255, -88.2846, 24.3619, 0.44 ) }
    dend_47 { pt3dadd( 173.33, -88.278, 24.8994, 0.15 ) }
    dend_47 { pt3dadd( 174.282, -88.3296, 25.2942, 0.15 ) }
    dend_47 { pt3dadd( 174.716, -88.3695, 25.4299, 0.44 ) }
    dend_47 { pt3dadd( 175.693, -88.4642, 25.677, 1.11 ) }
    dend_47 { pt3dadd( 176.423, -88.5397, 25.8256, 1.11 ) }
    dend_47 { pt3dadd( 177.221, -88.6255, 25.9348, 0.44 ) }
    dend_47 { pt3dadd( 178.626, -88.73, 25.9472, 0.15 ) }
    dend_47 { pt3dadd( 179.642, -88.7612, 25.878, 0.15 ) }
    dend_47 { pt3dadd( 180.07, -88.7522, 25.8285, 0.29 ) }
    dend_47 { pt3dadd( 180.687, -88.7092, 25.7243, 0.66 ) }
    dend_47 { pt3dadd( 181.167, -88.6378, 25.5847, 0.66 ) }
    dend_47 { pt3dadd( 182.484, -88.3357, 25.0404, 0.15 ) }
    dend_47 { pt3dadd( 183.43, -88.0633, 24.5514, 0.15 ) }
    dend_47 { pt3dadd( 183.768, -87.9679, 24.3263, 0.44 ) }
    dend_47 { pt3dadd( 184.247, -87.8304, 23.9902, 0.44 ) }
    dend_47 { pt3dadd( 185.987, -87.2968, 22.6597, 0.07 ) }
    dend_47 { pt3dadd( 186.932, -87.0111, 21.8566, 0.15 ) }
    dend_47 { pt3dadd( 187.258, -86.9229, 21.5298, 0.22 ) }
    dend_47 { pt3dadd( 188.189, -86.709, 20.451, 0.96 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 78/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 57.1279, -192.449, 65.1418, 0.22 ) }
    dend_45 { pt3dadd( 57.4644, -193.872, 66.4258, 0.22 ) }
    dend_45 { pt3dadd( 57.5958, -194.455, 66.9779, 0.22 ) }
    dend_45 { pt3dadd( 57.7298, -195.094, 67.5847, 1.18 ) }
    dend_45 { pt3dadd( 57.9051, -196.003, 68.4332, 0.22 ) }
    dend_45 { pt3dadd( 58.0796, -196.772, 69.2001, 0.15 ) }
    dend_45 { pt3dadd( 58.2534, -197.384, 69.8736, 0.15 ) }
    dend_45 { pt3dadd( 58.4215, -197.913, 70.5103, 0.15 ) }
    dend_45 { pt3dadd( 58.5549, -198.246, 70.9574, 0.52 ) }
    dend_45 { pt3dadd( 58.717, -198.548, 71.4033, 0.52 ) }
    dend_45 { pt3dadd( 59.3377, -199.391, 72.7527, 0.07 ) }
    dend_45 { pt3dadd( 59.9456, -200.084, 73.88, 0.07 ) }
    dend_45 { pt3dadd( 60.2686, -200.378, 74.4031, 0.07 ) }
    dend_45 { pt3dadd( 60.4515, -200.519, 74.6662, 0.66 ) }
    dend_45 { pt3dadd( 61.0228, -200.907, 75.4066, 0.88 ) }
    dend_45 { pt3dadd( 61.9993, -201.589, 76.5658, 0.22 ) }
    dend_45 { pt3dadd( 62.7232, -202.118, 77.3721, 0.22 ) }
    dend_45 { pt3dadd( 63.5269, -202.753, 78.2479, 0.22 ) }
    dend_45 { pt3dadd( 64.1921, -203.333, 78.9827, 0.96 ) }
    dend_45 { pt3dadd( 65.0755, -204.229, 80.0035, 0.52 ) }
    dend_45 { pt3dadd( 65.9962, -205.356, 81.1374, 0.22 ) }
    dend_45 { pt3dadd( 66.5733, -206.333, 81.9715, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_35()
}

proc basic_shape_35() {
    dend_45 { pt3dadd( 66.8423, -207.007, 82.478, 0.22 ) }
    dend_45 { pt3dadd( 67.0387, -207.859, 83.0561, 0.96 ) }
    dend_45 { pt3dadd( 67.1125, -208.812, 83.6722, 1.55 ) }
    dend_45 { pt3dadd( 67.1089, -209.365, 84.0425, 1.4 ) }
    dend_45 { pt3dadd( 67.0113, -211.108, 85.2718, 0.15 ) }
    dend_45 { pt3dadd( 66.9445, -211.964, 85.8811, 0.15 ) }
    dend_45 { pt3dadd( 66.8862, -212.743, 86.461, 0.59 ) }
    dend_45 { pt3dadd( 66.8201, -214.249, 87.6023, 0.07 ) }
    dend_45 { pt3dadd( 66.8138, -215.654, 88.6532, 0.07 ) }
    dend_45 { pt3dadd( 66.8333, -216.136, 88.9953, 0.74 ) }
    dend_45 { pt3dadd( 66.8712, -216.608, 89.3099, 0.81 ) }
    dend_45 { pt3dadd( 66.9474, -217.531, 89.8572, 0.15 ) }
    dend_45 { pt3dadd( 67.0506, -219.127, 90.7099, 0.15 ) }
    dend_45 { pt3dadd( 67.0771, -219.991, 91.1288, 0.81 ) }
    dend_45 { pt3dadd( 67.0455, -221.242, 91.7037, 2.06 ) }
    dend_45 { pt3dadd( 66.9998, -222.234, 92.1662, 2.06 ) }
    dend_45 { pt3dadd( 66.9017, -223.692, 92.8553, 0.52 ) }
    dend_45 { pt3dadd( 66.8029, -224.792, 93.3811, 0.15 ) }
    dend_45 { pt3dadd( 66.6105, -226.158, 93.9904, 0.15 ) }
    dend_45 { pt3dadd( 66.4489, -227.11, 94.3928, 0.15 ) }
    dend_45 { pt3dadd( 66.3018, -227.919, 94.7189, 0.22 ) }
    dend_45 { pt3dadd( 66.1373, -228.743, 95.0098, 0.74 ) }
    dend_45 { pt3dadd( 65.9619, -229.584, 95.2768, 0.81 ) }
    dend_45 { pt3dadd( 65.5529, -231.573, 95.8178, 0.15 ) }
    dend_45 { pt3dadd( 65.2585, -233.025, 96.1755, 0.15 ) }
    dend_45 { pt3dadd( 64.9989, -234.41, 96.5194, 0.15 ) }
    dend_45 { pt3dadd( 64.7626, -235.877, 96.9503, 0.22 ) }
    dend_45 { pt3dadd( 64.6564, -236.712, 97.24, 0.66 ) }
    dend_45 { pt3dadd( 64.5915, -237.46, 97.5486, 1.25 ) }
    dend_45 { pt3dadd( 64.5764, -238.406, 98.0616, 1.25 ) }
    dend_45 { pt3dadd( 64.6803, -240.089, 99.2009, 0.22 ) }
    dend_45 { pt3dadd( 64.838, -241.418, 100.266, 0.15 ) }
    dend_45 { pt3dadd( 64.9665, -242.151, 100.971, 0.96 ) }
    dend_45 { pt3dadd( 65.1708, -243.085, 101.996, 0.15 ) }
    dend_45 { pt3dadd( 65.4801, -244.222, 103.4, 0.15 ) }
    dend_45 { pt3dadd( 65.7845, -245.195, 104.724, 0.15 ) }
    dend_45 { pt3dadd( 65.9741, -245.754, 105.55, 1.18 ) }
    dend_45 { pt3dadd( 66.3949, -246.988, 107.447, 0.07 ) }
    dend_45 { pt3dadd( 66.7596, -248.026, 109.101, 0.07 ) }
    dend_45 { pt3dadd( 66.9768, -248.687, 110.145, 0.07 ) }
    dend_45 { pt3dadd( 67.0608, -249.049, 110.652, 0.81 ) }
    dend_45 { pt3dadd( 67.1087, -249.385, 111.082, 0.81 ) }
    dend_45 { pt3dadd( 67.2126, -250.398, 112.307, 0.15 ) }
    dend_45 { pt3dadd( 67.2397, -251.092, 113.066, 0.15 ) }
    dend_45 { pt3dadd( 67.2272, -251.919, 113.892, 1.33 ) }
    dend_45 { pt3dadd( 67.1723, -253.263, 115.143, 0.15 ) }
    dend_45 { pt3dadd( 67.1309, -254.195, 115.958, 0.15 ) }
    dend_45 { pt3dadd( 67.0796, -255.119, 116.711, 0.15 ) }
    dend_45 { pt3dadd( 67.0502, -255.529, 117.009, 0.29 ) }
    dend_45 { pt3dadd( 67.0276, -256.135, 117.398, 0.07 ) }
    dend_45 { pt3dadd( 67.0509, -256.678, 117.69, 0.22 ) }
    dend_45 { pt3dadd( 67.1888, -258.068, 118.207, 0.29 ) }
    dend_45 { pt3dadd( 67.2612, -258.605, 118.339, 0.88 ) }
    dend_45 { pt3dadd( 67.3972, -259.229, 118.462, 1.4 ) }
    dend_45 { pt3dadd( 67.7632, -260.457, 118.715, 0.22 ) }
    dend_45 { pt3dadd( 68.2791, -261.883, 119.013, 0.07 ) }
    dend_45 { pt3dadd( 68.8071, -263.141, 119.276, 0.07 ) }
    dend_45 { pt3dadd( 69.0531, -263.655, 119.392, 0.29 ) }
    dend_45 { pt3dadd( 70.1725, -265.856, 119.94, 0.07 ) }
    dend_45 { pt3dadd( 70.6593, -266.772, 120.179, 0.07 ) }
    dend_45 { pt3dadd( 70.9577, -267.276, 120.338, 0.59 ) }
    dend_45 { pt3dadd( 71.7574, -268.511, 120.772, 0.15 ) }
    dend_45 { pt3dadd( 72.2738, -269.27, 121.053, 1.25 ) }
    dend_45 { pt3dadd( 72.8291, -270.105, 121.339, 0.88 ) }
    dend_45 { pt3dadd( 73.6947, -271.499, 121.751, 0.15 ) }
    dend_45 { pt3dadd( 74.4709, -272.803, 122.112, 0.15 ) }
    dend_45 { pt3dadd( 74.7626, -273.325, 122.262, 0.22 ) }
    dend_45 { pt3dadd( 75.2099, -274.21, 122.523, 0.15 ) }
    dend_45 { pt3dadd( 75.3436, -274.49, 122.625, 0.37 ) }
    dend_45 { pt3dadd( 75.5995, -275.014, 122.909, 0.81 ) }
    dend_45 { pt3dadd( 75.8864, -275.642, 123.338, 0.22 ) }
    dend_45 { pt3dadd( 76.2561, -276.562, 124.018, 0.15 ) }
    dend_45 { pt3dadd( 76.4595, -277.172, 124.514, 0.22 ) }
    dend_45 { pt3dadd( 76.8647, -278.563, 125.757, 0.07 ) }
    dend_45 { pt3dadd( 77.2601, -280.112, 127.172, 0.07 ) }
    dend_45 { pt3dadd( 77.3956, -280.717, 127.729, 0.22 ) }
    dend_45 { pt3dadd( 77.5263, -281.444, 128.382, 0.88 ) }
    dend_45 { pt3dadd( 77.8, -283.073, 129.877, 0.15 ) }
    dend_45 { pt3dadd( 77.9729, -284.098, 130.826, 0.22 ) }
    dend_45 { pt3dadd( 78.0899, -284.878, 131.517, 0.29 ) }
    dend_45 { pt3dadd( 78.1904, -285.482, 132.045, 0.52 ) }
    dend_45 { pt3dadd( 78.4514, -286.55, 133.025, 0.07 ) }
    dend_45 { pt3dadd( 78.8715, -287.818, 134.213, 0.07 ) }
    dend_45 { pt3dadd( 79.3148, -288.875, 135.174, 0.07 ) }
    dend_45 { pt3dadd( 79.4657, -289.222, 135.471, 0.59 ) }
    dend_45 { pt3dadd( 79.627, -289.584, 135.771, 0.66 ) }
    dend_45 { pt3dadd( 80.0393, -290.547, 136.505, 0.15 ) }
    dend_45 { pt3dadd( 80.3783, -291.49, 137.098, 0.15 ) }
    dend_45 { pt3dadd( 80.6443, -292.38, 137.586, 0.15 ) }
    dend_45 { pt3dadd( 80.7763, -292.872, 137.852, 0.74 ) }
    dend_45 { pt3dadd( 80.8752, -293.286, 138.092, 0.74 ) }
    dend_45 { pt3dadd( 81.0137, -293.965, 138.508, 0.15 ) }
    dend_45 { pt3dadd( 81.2699, -295.419, 139.487, 0.07 ) }
    dend_45 { pt3dadd( 81.5113, -296.628, 140.406, 0.07 ) }
    dend_45 { pt3dadd( 81.6335, -297.192, 140.864, 0.74 ) }
    dend_45 { pt3dadd( 81.9367, -298.507, 141.955, 0.07 ) }
    dend_45 { pt3dadd( 82.0354, -298.945, 142.323, 0.22 ) }
    dend_45 { pt3dadd( 82.2485, -299.955, 143.152, 0.07 ) }
    dend_45 { pt3dadd( 82.5522, -301.499, 144.362, 0.07 ) }
    dend_45 { pt3dadd( 82.6495, -302.086, 144.776, 0.66 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_36()
}

proc basic_shape_36() {
    dend_45 { pt3dadd( 82.7386, -302.627, 145.124, 0.22 ) }
    dend_45 { pt3dadd( 82.886, -303.624, 145.685, 0.07 ) }
    dend_45 { pt3dadd( 83.0307, -304.845, 146.305, 0.07 ) }
    dend_45 { pt3dadd( 83.0565, -305.367, 146.522, 0.07 ) }
    dend_45 { pt3dadd( 83.0506, -306.056, 146.78, 0.52 ) }
    dend_45 { pt3dadd( 83.0, -307.565, 147.332, 0.07 ) }
    dend_45 { pt3dadd( 82.837, -309.236, 147.915, 0.07 ) }
    dend_45 { pt3dadd( 82.7486, -309.777, 148.082, 0.59 ) }
    dend_45 { pt3dadd( 82.3963, -311.121, 148.486, 0.07 ) }
    dend_45 { pt3dadd( 82.108, -311.978, 148.743, 0.07 ) }
    dend_45 { pt3dadd( 81.8658, -312.519, 148.913, 0.44 ) }
    dend_45 { pt3dadd( 80.9592, -314.236, 149.534, 0.07 ) }
    dend_45 { pt3dadd( 80.5106, -315.039, 149.852, 0.22 ) }
    dend_45 { pt3dadd( 79.7837, -316.347, 150.421, 0.07 ) }
    dend_45 { pt3dadd( 79.4774, -316.907, 150.692, 0.37 ) }
    dend_45 { pt3dadd( 78.341, -318.968, 151.707, 0.07 ) }
    dend_45 { pt3dadd( 77.2758, -320.927, 152.715, 0.07 ) }
    dend_45 { pt3dadd( 77.0741, -321.317, 152.936, 0.15 ) }
    dend_45 { pt3dadd( 76.7288, -322.021, 153.366, 0.07 ) }
    dend_45 { pt3dadd( 76.494, -322.543, 153.685, 0.52 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 20/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 57.1279, -192.449, 65.1418, 0.15 ) }
    dend_44 { pt3dadd( 56.3712, -191.167, 65.4913, 0.15 ) }
    dend_44 { pt3dadd( 55.4869, -189.631, 65.8368, 0.15 ) }
    dend_44 { pt3dadd( 54.6869, -188.206, 66.0953, 0.15 ) }
    dend_44 { pt3dadd( 53.9817, -186.957, 66.2967, 0.15 ) }
    dend_44 { pt3dadd( 53.5315, -186.266, 66.4385, 0.22 ) }
    dend_44 { pt3dadd( 52.7204, -185.22, 66.7419, 0.07 ) }
    dend_44 { pt3dadd( 52.2477, -184.741, 66.9378, 0.15 ) }
    dend_44 { pt3dadd( 51.3765, -184.078, 67.3198, 0.07 ) }
    dend_44 { pt3dadd( 50.6632, -183.747, 67.659, 0.15 ) }
    dend_44 { pt3dadd( 48.2634, -183.255, 68.8616, 0.07 ) }
    dend_44 { pt3dadd( 46.5408, -183.112, 69.7801, 0.07 ) }
    dend_44 { pt3dadd( 45.5833, -183.16, 70.3203, 0.07 ) }
    dend_44 { pt3dadd( 44.9618, -183.264, 70.6825, 0.37 ) }
    dend_44 { pt3dadd( 43.3743, -183.78, 71.6338, 0.07 ) }
    dend_44 { pt3dadd( 42.973, -183.991, 71.8671, 0.59 ) }
    // Section: dend_40, id: dend_40, parent: dend_38 (entry count 36/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -65.2393, -203.308, -20.3364, 0.29 ) }
    dend_40 { pt3dadd( -65.9621, -205.174, -19.9855, 0.29 ) }
    dend_40 { pt3dadd( -66.3022, -206.043, -19.8232, 0.15 ) }
    dend_40 { pt3dadd( -66.5132, -206.585, -19.7051, 0.22 ) }
    dend_40 { pt3dadd( -66.8886, -207.52, -19.4957, 0.07 ) }
    dend_40 { pt3dadd( -67.3002, -208.486, -19.2802, 0.07 ) }
    dend_40 { pt3dadd( -67.4341, -208.785, -19.215, 0.22 ) }
    dend_40 { pt3dadd( -67.7406, -209.39, -19.0918, 0.74 ) }
    dend_40 { pt3dadd( -68.389, -210.518, -18.9249, 0.15 ) }
    dend_40 { pt3dadd( -68.8222, -211.217, -18.8566, 0.15 ) }
    dend_40 { pt3dadd( -69.3276, -211.938, -18.8626, 0.22 ) }
    dend_40 { pt3dadd( -69.7204, -212.44, -18.9393, 0.52 ) }
    dend_40 { pt3dadd( -70.3499, -213.222, -19.1333, 0.66 ) }
    dend_40 { pt3dadd( -70.7719, -213.728, -19.3108, 0.15 ) }
    dend_40 { pt3dadd( -71.6082, -214.726, -19.7513, 0.15 ) }
    dend_40 { pt3dadd( -72.4188, -215.738, -20.2441, 0.15 ) }
    dend_40 { pt3dadd( -73.0525, -216.576, -20.6763, 0.15 ) }
    dend_40 { pt3dadd( -73.356, -217.041, -20.8908, 0.96 ) }
    dend_40 { pt3dadd( -73.7265, -217.775, -21.1443, 0.96 ) }
    dend_40 { pt3dadd( -74.0256, -218.629, -21.3423, 0.15 ) }
    dend_40 { pt3dadd( -74.2914, -220.022, -21.4839, 0.15 ) }
    dend_40 { pt3dadd( -74.3186, -220.5, -21.471, 1.11 ) }
    dend_40 { pt3dadd( -74.2483, -222.109, -21.2657, 0.15 ) }
    dend_40 { pt3dadd( -74.0678, -223.66, -20.9874, 0.15 ) }
    dend_40 { pt3dadd( -73.8062, -225.222, -20.6466, 0.15 ) }
    dend_40 { pt3dadd( -73.5169, -226.647, -20.2611, 0.15 ) }
    dend_40 { pt3dadd( -73.2536, -227.829, -19.8846, 0.15 ) }
    dend_40 { pt3dadd( -73.0569, -228.849, -19.5494, 0.15 ) }
    dend_40 { pt3dadd( -72.9555, -229.578, -19.3123, 0.88 ) }
    dend_40 { pt3dadd( -72.9249, -230.404, -19.033, 0.07 ) }
    dend_40 { pt3dadd( -72.9897, -231.331, -18.6774, 0.07 ) }
    dend_40 { pt3dadd( -73.0763, -231.767, -18.5045, 0.29 ) }
    dend_40 { pt3dadd( -73.3602, -232.661, -18.1589, 0.07 ) }
    dend_40 { pt3dadd( -73.5249, -233.068, -17.9995, 0.22 ) }
    dend_40 { pt3dadd( -73.9964, -234.052, -17.5859, 0.07 ) }
    dend_40 { pt3dadd( -74.2694, -234.577, -17.3704, 0.15 ) }
    dend_40 { pt3dadd( -74.4935, -234.999, -17.209, 0.07 ) }
    dend_40 { pt3dadd( -74.6456, -235.283, -17.102, 0.22 ) }
    dend_40 { pt3dadd( -75.2034, -236.306, -16.7358, 0.07 ) }
    dend_40 { pt3dadd( -75.7958, -237.359, -16.4017, 0.07 ) }
    dend_40 { pt3dadd( -75.9869, -237.679, -16.3215, 0.29 ) }
    dend_40 { pt3dadd( -76.4628, -238.471, -16.1383, 0.07 ) }
    dend_40 { pt3dadd( -76.8134, -239.101, -15.982, 0.07 ) }
    dend_40 { pt3dadd( -76.9705, -239.445, -15.871, 0.81 ) }
    dend_40 { pt3dadd( -77.0562, -239.674, -15.7799, 0.81 ) }
    dend_40 { pt3dadd( -77.2742, -240.334, -15.4647, 0.07 ) }
    dend_40 { pt3dadd( -77.4735, -240.947, -15.1423, 0.44 ) }
    dend_40 { pt3dadd( -77.7539, -241.816, -14.666, 0.15 ) }
    dend_40 { pt3dadd( -78.1284, -243.009, -14.0023, 0.15 ) }
    dend_40 { pt3dadd( -78.2488, -243.445, -13.7606, 0.37 ) }
    dend_40 { pt3dadd( -78.39, -244.011, -13.4623, 0.22 ) }
    dend_40 { pt3dadd( -78.5175, -244.697, -13.1237, 0.15 ) }
    dend_40 { pt3dadd( -78.5718, -245.071, -12.9703, 0.15 ) }
    dend_40 { pt3dadd( -78.6254, -245.692, -12.7459, 0.59 ) }
    dend_40 { pt3dadd( -78.6518, -246.63, -12.4435, 0.15 ) }
    dend_40 { pt3dadd( -78.6274, -247.071, -12.2651, 0.22 ) }
    dend_40 { pt3dadd( -78.5749, -247.919, -11.8988, 0.07 ) }
    dend_40 { pt3dadd( -78.5577, -248.295, -11.7279, 0.22 ) }
    dend_40 { pt3dadd( -78.5167, -249.41, -11.162, 0.15 ) }
    dend_40 { pt3dadd( -78.5106, -250.206, -10.7286, 1.18 ) }
    dend_40 { pt3dadd( -78.5704, -251.627, -9.89716, 0.07 ) }
    dend_40 { pt3dadd( -78.6507, -252.588, -9.29945, 0.07 ) }
    dend_40 { pt3dadd( -78.6912, -252.856, -9.12909, 0.22 ) }
    dend_40 { pt3dadd( -78.9202, -253.832, -8.49392, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_37()
}

proc basic_shape_37() {
    dend_40 { pt3dadd( -79.0544, -254.223, -8.24828, 0.22 ) }
    dend_40 { pt3dadd( -79.4063, -255.085, -7.67225, 0.22 ) }
    dend_40 { pt3dadd( -79.5419, -255.376, -7.47495, 0.22 ) }
    dend_40 { pt3dadd( -79.6746, -255.688, -7.22935, 0.59 ) }
    dend_40 { pt3dadd( -80.0384, -256.645, -6.40688, 0.07 ) }
    dend_40 { pt3dadd( -80.1494, -256.948, -6.13947, 0.22 ) }
    dend_40 { pt3dadd( -80.38, -257.605, -5.54981, 0.07 ) }
    dend_40 { pt3dadd( -80.4776, -257.92, -5.27866, 0.37 ) }
    dend_40 { pt3dadd( -80.8218, -259.176, -4.23643, 0.07 ) }
    dend_40 { pt3dadd( -81.0681, -260.119, -3.5048, 0.07 ) }
    dend_40 { pt3dadd( -81.1205, -260.316, -3.3622, 0.07 ) }
    dend_40 { pt3dadd( -81.3429, -261.059, -2.87248, 1.18 ) }
    dend_40 { pt3dadd( -81.9416, -262.76, -1.92682, 0.07 ) }
    dend_40 { pt3dadd( -82.068, -263.099, -1.77303, 0.66 ) }
    dend_40 { pt3dadd( -82.355, -263.783, -1.56414, 0.07 ) }
    dend_40 { pt3dadd( -82.5169, -264.167, -1.47625, 0.07 ) }
    dend_40 { pt3dadd( -82.6453, -264.481, -1.4126, 0.22 ) }
    dend_40 { pt3dadd( -82.8872, -265.1, -1.31723, 0.07 ) }
    dend_40 { pt3dadd( -83.0503, -265.5, -1.28866, 0.22 ) }
    dend_40 { pt3dadd( -83.208, -265.914, -1.2635, 0.07 ) }
    dend_40 { pt3dadd( -83.5488, -266.871, -1.17072, 0.07 ) }
    dend_40 { pt3dadd( -83.7129, -267.345, -1.11804, 0.22 ) }
    dend_40 { pt3dadd( -83.9196, -267.91, -1.0428, 0.07 ) }
    dend_40 { pt3dadd( -84.0883, -268.403, -0.952845, 0.07 ) }
    dend_40 { pt3dadd( -84.3704, -269.345, -0.739884, 0.07 ) }
    dend_40 { pt3dadd( -84.7008, -270.603, -0.433116, 0.07 ) }
    dend_40 { pt3dadd( -84.7751, -270.941, -0.349464, 0.44 ) }
    dend_40 { pt3dadd( -84.8583, -271.377, -0.227537, 0.44 ) }
    dend_40 { pt3dadd( -85.0873, -272.593, 0.166597, 0.07 ) }
    dend_40 { pt3dadd( -85.2135, -273.321, 0.411998, 0.07 ) }
    dend_40 { pt3dadd( -85.2528, -273.623, 0.508616, 0.07 ) }
    dend_40 { pt3dadd( -85.2966, -273.961, 0.598277, 0.52 ) }
    dend_40 { pt3dadd( -85.4222, -274.761, 0.789822, 0.15 ) }
    dend_40 { pt3dadd( -85.5561, -275.45, 0.928741, 0.15 ) }
    dend_40 { pt3dadd( -85.7143, -276.016, 1.01698, 0.37 ) }
    dend_40 { pt3dadd( -86.0313, -277.054, 1.19445, 0.07 ) }
    dend_40 { pt3dadd( -86.4608, -278.403, 1.44933, 0.07 ) }
    dend_40 { pt3dadd( -86.6281, -278.872, 1.54307, 0.37 ) }
    dend_40 { pt3dadd( -86.819, -279.357, 1.63448, 0.37 ) }
    dend_40 { pt3dadd( -87.3044, -280.536, 1.87259, 0.07 ) }
    dend_40 { pt3dadd( -87.8251, -281.718, 2.13031, 0.07 ) }
    dend_40 { pt3dadd( -88.0432, -282.21, 2.22208, 0.59 ) }
    dend_40 { pt3dadd( -88.4834, -283.281, 2.37888, 0.07 ) }
    dend_40 { pt3dadd( -88.8086, -284.223, 2.46468, 0.07 ) }
    dend_40 { pt3dadd( -89.0362, -285.023, 2.48195, 0.07 ) }
    dend_40 { pt3dadd( -89.1545, -285.557, 2.44993, 0.81 ) }
    dend_40 { pt3dadd( -89.3727, -286.78, 2.27229, 0.07 ) }
    dend_40 { pt3dadd( -89.4347, -287.27, 2.17426, 0.15 ) }
    dend_40 { pt3dadd( -89.523, -288.382, 1.90079, 0.07 ) }
    dend_40 { pt3dadd( -89.591, -289.345, 1.63185, 0.07 ) }
    dend_40 { pt3dadd( -89.6206, -289.757, 1.50148, 0.59 ) }
    dend_40 { pt3dadd( -89.6548, -290.209, 1.35861, 0.59 ) }
    dend_40 { pt3dadd( -89.7384, -290.948, 1.13879, 0.07 ) }
    dend_40 { pt3dadd( -89.8728, -291.869, 0.875831, 0.07 ) }
    dend_40 { pt3dadd( -89.9898, -292.546, 0.68665, 0.29 ) }
    dend_40 { pt3dadd( -90.0999, -293.285, 0.529302, 0.29 ) }
    dend_40 { pt3dadd( -90.1772, -293.996, 0.436711, 0.29 ) }
    dend_40 { pt3dadd( -90.256, -295.023, 0.357694, 0.07 ) }
    dend_40 { pt3dadd( -90.2766, -295.969, 0.355913, 0.07 ) }
    dend_40 { pt3dadd( -90.2638, -296.5, 0.386321, 0.22 ) }
    dend_40 { pt3dadd( -90.1761, -298.274, 0.553259, 0.07 ) }
    dend_40 { pt3dadd( -90.0952, -299.47, 0.69996, 0.07 ) }
    dend_40 { pt3dadd( -90.0356, -300.056, 0.785021, 0.59 ) }
    dend_40 { pt3dadd( -89.7904, -301.788, 1.07535, 0.07 ) }
    dend_40 { pt3dadd( -89.5397, -303.338, 1.3714, 0.07 ) }
    dend_40 { pt3dadd( -89.4529, -303.861, 1.47317, 0.52 ) }
    // Section: dend_39, id: dend_39, parent: dend_38 (entry count 66/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -65.2393, -203.308, -20.3364, 0.22 ) }
    dend_39 { pt3dadd( -65.671, -205.402, -21.3882, 0.22 ) }
    dend_39 { pt3dadd( -65.8655, -206.359, -21.9065, 0.22 ) }
    dend_39 { pt3dadd( -66.0523, -207.269, -22.4387, 0.22 ) }
    dend_39 { pt3dadd( -66.1909, -207.95, -22.8454, 0.29 ) }
    dend_39 { pt3dadd( -66.3037, -208.503, -23.1709, 0.52 ) }
    dend_39 { pt3dadd( -66.411, -209.035, -23.4759, 1.03 ) }
    dend_39 { pt3dadd( -66.5442, -209.779, -23.9323, 0.74 ) }
    dend_39 { pt3dadd( -66.7091, -210.643, -24.4481, 0.15 ) }
    dend_39 { pt3dadd( -66.7982, -211.129, -24.7116, 0.29 ) }
    dend_39 { pt3dadd( -66.9041, -211.756, -25.0292, 0.37 ) }
    dend_39 { pt3dadd( -67.0411, -212.625, -25.4206, 0.07 ) }
    dend_39 { pt3dadd( -67.1261, -213.193, -25.6552, 0.15 ) }
    dend_39 { pt3dadd( -67.2745, -214.252, -26.0619, 0.07 ) }
    dend_39 { pt3dadd( -67.3631, -214.917, -26.3204, 0.29 ) }
    dend_39 { pt3dadd( -67.4441, -215.62, -26.6089, 0.29 ) }
    dend_39 { pt3dadd( -67.5026, -216.272, -26.8854, 0.29 ) }
    dend_39 { pt3dadd( -67.5296, -216.781, -27.1049, 1.03 ) }
    dend_39 { pt3dadd( -67.5435, -217.481, -27.4112, 0.52 ) }
    dend_39 { pt3dadd( -67.5433, -218.465, -27.8317, 0.22 ) }
    dend_39 { pt3dadd( -67.5504, -219.167, -28.1358, 0.66 ) }
    dend_39 { pt3dadd( -67.5555, -219.697, -28.3547, 0.29 ) }
    dend_39 { pt3dadd( -67.5619, -220.355, -28.6074, 0.07 ) }
    dend_39 { pt3dadd( -67.5793, -220.764, -28.7411, 0.29 ) }
    dend_39 { pt3dadd( -67.6422, -221.61, -28.9659, 0.15 ) }
    dend_39 { pt3dadd( -67.687, -222.052, -29.0554, 0.15 ) }
    dend_39 { pt3dadd( -67.7532, -222.567, -29.1516, 0.52 ) }
    dend_39 { pt3dadd( -67.8227, -223.062, -29.2392, 0.52 ) }
    dend_39 { pt3dadd( -67.9783, -224.261, -29.4365, 0.15 ) }
    dend_39 { pt3dadd( -68.0279, -224.903, -29.5113, 0.15 ) }
    dend_39 { pt3dadd( -68.0391, -225.637, -29.5808, 0.15 ) }
    dend_39 { pt3dadd( -68.0305, -225.94, -29.6059, 0.37 ) }
    dend_39 { pt3dadd( -68.0078, -226.291, -29.6561, 0.37 ) }
    dend_39 { pt3dadd( -67.9142, -227.285, -29.9261, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_38()
}

proc basic_shape_38() {
    dend_39 { pt3dadd( -67.8096, -228.281, -30.4738, 0.07 ) }
    dend_39 { pt3dadd( -67.7869, -228.609, -30.7793, 0.59 ) }
    dend_39 { pt3dadd( -67.7802, -228.764, -30.9805, 1.11 ) }
    dend_39 { pt3dadd( -67.7514, -229.45, -32.0613, 0.37 ) }
    dend_39 { pt3dadd( -67.7327, -230.166, -33.3026, 0.15 ) }
    dend_39 { pt3dadd( -67.7332, -230.766, -34.4563, 0.15 ) }
    dend_39 { pt3dadd( -67.748, -231.07, -35.0864, 0.15 ) }
    dend_39 { pt3dadd( -67.7559, -231.216, -35.3713, 0.37 ) }
    dend_39 { pt3dadd( -67.7674, -231.587, -36.0053, 0.15 ) }
    dend_39 { pt3dadd( -67.7501, -232.178, -36.7698, 0.15 ) }
    dend_39 { pt3dadd( -67.7291, -232.466, -37.0565, 0.44 ) }
    dend_39 { pt3dadd( -67.6686, -233.409, -37.7885, 0.07 ) }
    dend_39 { pt3dadd( -67.6591, -233.711, -37.9903, 0.22 ) }
    dend_39 { pt3dadd( -67.6498, -234.777, -38.6938, 0.07 ) }
    dend_39 { pt3dadd( -67.6537, -235.548, -39.1864, 0.07 ) }
    dend_39 { pt3dadd( -67.653, -235.731, -39.2954, 0.15 ) }
    dend_39 { pt3dadd( -67.6493, -236.644, -39.7231, 0.07 ) }
    dend_39 { pt3dadd( -67.6471, -236.89, -39.7862, 0.22 ) }
    // Section: dend_35, id: dend_35, parent: dend_31 (entry count 18/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -81.2941, -105.547, 8.81677, 0.22 ) }
    dend_35 { pt3dadd( -82.3074, -106.447, 9.13202, 0.22 ) }
    dend_35 { pt3dadd( -82.99, -107.021, 9.35204, 0.22 ) }
    dend_35 { pt3dadd( -83.5348, -107.478, 9.55095, 0.29 ) }
    dend_35 { pt3dadd( -84.0116, -107.888, 9.73013, 0.66 ) }
    dend_35 { pt3dadd( -84.3553, -108.197, 9.87826, 0.88 ) }
    dend_35 { pt3dadd( -85.1335, -108.922, 10.2538, 0.22 ) }
    dend_35 { pt3dadd( -85.742, -109.528, 10.6016, 0.29 ) }
    dend_35 { pt3dadd( -86.2119, -110.013, 10.8803, 0.44 ) }
    dend_35 { pt3dadd( -86.5703, -110.39, 11.0773, 0.44 ) }
    dend_35 { pt3dadd( -87.2407, -111.146, 11.4851, 0.15 ) }
    dend_35 { pt3dadd( -87.7659, -111.793, 11.8413, 0.15 ) }
    dend_35 { pt3dadd( -88.0055, -112.108, 12.0125, 0.37 ) }
    dend_35 { pt3dadd( -88.3063, -112.495, 12.2255, 0.81 ) }
    dend_35 { pt3dadd( -88.8076, -113.111, 12.585, 0.59 ) }
    dend_35 { pt3dadd( -89.4265, -113.843, 13.0316, 0.22 ) }
    dend_35 { pt3dadd( -89.9051, -114.382, 13.374, 0.15 ) }
    dend_35 { pt3dadd( -90.7354, -115.263, 14.0412, 0.22 ) }
    dend_35 { pt3dadd( -91.3652, -115.88, 14.5931, 0.07 ) }
    dend_35 { pt3dadd( -91.7873, -116.262, 14.9843, 0.07 ) }
    dend_35 { pt3dadd( -91.9959, -116.437, 15.1836, 0.44 ) }
    dend_35 { pt3dadd( -92.4418, -116.767, 15.572, 0.81 ) }
    dend_35 { pt3dadd( -93.2702, -117.293, 16.2915, 0.22 ) }
    dend_35 { pt3dadd( -93.9258, -117.657, 16.8182, 0.15 ) }
    dend_35 { pt3dadd( -94.6677, -118.034, 17.3382, 0.15 ) }
    dend_35 { pt3dadd( -95.1435, -118.261, 17.6235, 0.15 ) }
    dend_35 { pt3dadd( -95.9107, -118.609, 18.0172, 0.37 ) }
    dend_35 { pt3dadd( -96.7763, -118.986, 18.368, 0.15 ) }
    dend_35 { pt3dadd( -97.449, -119.295, 18.5693, 0.22 ) }
    dend_35 { pt3dadd( -97.91, -119.539, 18.6786, 0.81 ) }
    dend_35 { pt3dadd( -98.5504, -119.931, 18.8156, 1.25 ) }
    dend_35 { pt3dadd( -98.9018, -120.175, 18.8662, 1.25 ) }
    dend_35 { pt3dadd( -100.062, -121.106, 18.9336, 0.22 ) }
    dend_35 { pt3dadd( -100.865, -121.816, 18.9035, 0.22 ) }
    dend_35 { pt3dadd( -101.838, -122.754, 18.8118, 0.22 ) }
    dend_35 { pt3dadd( -102.439, -123.367, 18.7785, 0.22 ) }
    dend_35 { pt3dadd( -103.243, -124.221, 18.7652, 0.37 ) }
    dend_35 { pt3dadd( -103.798, -124.796, 18.7907, 1.03 ) }
    dend_35 { pt3dadd( -104.322, -125.308, 18.8584, 0.37 ) }
    dend_35 { pt3dadd( -105.167, -125.966, 19.1112, 0.15 ) }
    dend_35 { pt3dadd( -106.43, -126.658, 19.777, 0.07 ) }
    dend_35 { pt3dadd( -106.922, -126.872, 20.1133, 0.15 ) }
    dend_35 { pt3dadd( -107.549, -127.108, 20.5971, 0.37 ) }
    dend_35 { pt3dadd( -107.971, -127.242, 20.9319, 0.37 ) }
    dend_35 { pt3dadd( -108.696, -127.431, 21.4942, 0.74 ) }
    dend_35 { pt3dadd( -110.093, -127.734, 22.5084, 0.15 ) }
    dend_35 { pt3dadd( -110.847, -127.903, 22.9782, 0.15 ) }
    dend_35 { pt3dadd( -111.463, -128.057, 23.2942, 0.15 ) }
    dend_35 { pt3dadd( -112.035, -128.213, 23.494, 0.74 ) }
    dend_35 { pt3dadd( -112.361, -128.301, 23.5555, 0.74 ) }
    dend_35 { pt3dadd( -113.334, -128.546, 23.5787, 0.15 ) }
    dend_35 { pt3dadd( -113.874, -128.636, 23.506, 0.15 ) }
    dend_35 { pt3dadd( -115.063, -128.747, 23.2805, 0.15 ) }
    dend_35 { pt3dadd( -115.901, -128.8, 23.11, 0.15 ) }
    dend_35 { pt3dadd( -116.385, -128.823, 23.0295, 0.66 ) }
    dend_35 { pt3dadd( -116.87, -128.824, 22.9909, 0.96 ) }
    dend_35 { pt3dadd( -117.632, -128.786, 23.0053, 0.52 ) }
    dend_35 { pt3dadd( -118.426, -128.72, 23.134, 0.15 ) }
    dend_35 { pt3dadd( -118.842, -128.686, 23.2603, 0.15 ) }
    dend_35 { pt3dadd( -119.693, -128.605, 23.5691, 0.15 ) }
    dend_35 { pt3dadd( -120.762, -128.462, 24.0433, 0.15 ) }
    dend_35 { pt3dadd( -121.107, -128.402, 24.2128, 0.15 ) }
    dend_35 { pt3dadd( -121.776, -128.269, 24.5546, 0.52 ) }
    dend_35 { pt3dadd( -122.151, -128.196, 24.7477, 0.88 ) }
    dend_35 { pt3dadd( -122.945, -128.047, 25.1463, 0.59 ) }
    dend_35 { pt3dadd( -124.085, -127.882, 25.6897, 0.37 ) }
    dend_35 { pt3dadd( -124.65, -127.843, 25.9667, 0.15 ) }
    dend_35 { pt3dadd( -125.156, -127.84, 26.2175, 0.59 ) }
    dend_35 { pt3dadd( -126.132, -127.956, 26.7129, 0.07 ) }
    dend_35 { pt3dadd( -126.682, -128.103, 27.0089, 0.52 ) }
    dend_35 { pt3dadd( -127.455, -128.426, 27.4341, 0.15 ) }
    dend_35 { pt3dadd( -128.083, -128.759, 27.7645, 0.15 ) }
    dend_35 { pt3dadd( -128.571, -129.069, 28.0522, 0.96 ) }
    dend_35 { pt3dadd( -129.771, -129.908, 28.8299, 0.07 ) }
    dend_35 { pt3dadd( -130.856, -130.74, 29.5666, 0.07 ) }
    dend_35 { pt3dadd( -131.233, -131.042, 29.8333, 0.81 ) }
    dend_35 { pt3dadd( -131.563, -131.296, 30.0687, 0.96 ) }
    dend_35 { pt3dadd( -132.614, -132.066, 30.8698, 0.07 ) }
    dend_35 { pt3dadd( -133.151, -132.423, 31.3283, 0.07 ) }
    dend_35 { pt3dadd( -133.323, -132.507, 31.4838, 0.37 ) }
    dend_35 { pt3dadd( -133.665, -132.617, 31.7859, 0.37 ) }
    dend_35 { pt3dadd( -134.386, -132.783, 32.4174, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_39()
}

proc basic_shape_39() {
    dend_35 { pt3dadd( -135.301, -132.969, 33.1163, 0.37 ) }
    dend_35 { pt3dadd( -135.837, -133.073, 33.4388, 0.37 ) }
    dend_35 { pt3dadd( -136.583, -133.268, 33.8307, 0.22 ) }
    dend_35 { pt3dadd( -137.123, -133.441, 34.1295, 0.22 ) }
    dend_35 { pt3dadd( -137.64, -133.642, 34.4109, 0.22 ) }
    dend_35 { pt3dadd( -138.667, -134.1, 34.9409, 0.22 ) }
    dend_35 { pt3dadd( -139.233, -134.356, 35.2003, 0.66 ) }
    dend_35 { pt3dadd( -140.174, -134.815, 35.6334, 0.15 ) }
    dend_35 { pt3dadd( -141.193, -135.351, 36.1463, 0.15 ) }
    dend_35 { pt3dadd( -141.651, -135.591, 36.3307, 0.59 ) }
    dend_35 { pt3dadd( -142.231, -135.893, 36.5256, 0.44 ) }
    dend_35 { pt3dadd( -143.442, -136.525, 36.8562, 0.15 ) }
    dend_35 { pt3dadd( -144.433, -137.061, 36.9975, 0.15 ) }
    dend_35 { pt3dadd( -145.168, -137.464, 37.0423, 0.15 ) }
    dend_35 { pt3dadd( -147.477, -138.731, 37.0602, 0.74 ) }
    dend_35 { pt3dadd( -148.464, -139.266, 37.1227, 0.96 ) }
    dend_35 { pt3dadd( -148.965, -139.539, 37.2037, 1.03 ) }
    dend_35 { pt3dadd( -150.495, -140.381, 37.5742, 0.07 ) }
    dend_35 { pt3dadd( -151.435, -140.886, 37.8792, 0.07 ) }
    dend_35 { pt3dadd( -151.998, -141.178, 38.119, 0.52 ) }
    dend_35 { pt3dadd( -153.196, -141.75, 38.7547, 0.15 ) }
    dend_35 { pt3dadd( -154.333, -142.24, 39.3866, 0.15 ) }
    dend_35 { pt3dadd( -154.824, -142.43, 39.6712, 0.88 ) }
    dend_35 { pt3dadd( -155.705, -142.731, 40.1968, 1.62 ) }
    dend_35 { pt3dadd( -156.671, -143.026, 40.7311, 0.74 ) }
    dend_35 { pt3dadd( -157.791, -143.345, 41.3289, 0.15 ) }
    dend_35 { pt3dadd( -158.83, -143.62, 41.8646, 0.15 ) }
    dend_35 { pt3dadd( -159.183, -143.711, 42.0474, 0.15 ) }
    dend_35 { pt3dadd( -159.666, -143.844, 42.3188, 0.81 ) }
    dend_35 { pt3dadd( -160.014, -143.951, 42.5238, 0.81 ) }
    dend_35 { pt3dadd( -161.157, -144.362, 43.1812, 0.07 ) }
    dend_35 { pt3dadd( -162.129, -144.77, 43.7256, 0.07 ) }
    dend_35 { pt3dadd( -162.708, -145.025, 44.0091, 0.37 ) }
    dend_35 { pt3dadd( -164.245, -145.721, 44.7303, 0.07 ) }
    dend_35 { pt3dadd( -165.084, -146.115, 45.0958, 0.07 ) }
    dend_35 { pt3dadd( -165.542, -146.336, 45.2765, 0.96 ) }
    dend_35 { pt3dadd( -165.751, -146.438, 45.3443, 0.96 ) }
    dend_35 { pt3dadd( -167.019, -147.061, 45.7253, 0.15 ) }
    dend_35 { pt3dadd( -168.109, -147.579, 46.0563, 0.15 ) }
    dend_35 { pt3dadd( -168.62, -147.808, 46.2222, 0.44 ) }
    dend_35 { pt3dadd( -168.914, -147.922, 46.3425, 0.44 ) }
    dend_35 { pt3dadd( -169.781, -148.215, 46.7851, 0.15 ) }
    dend_35 { pt3dadd( -170.376, -148.388, 47.1334, 0.15 ) }
    dend_35 { pt3dadd( -170.77, -148.474, 47.3967, 0.37 ) }
    dend_35 { pt3dadd( -171.703, -148.613, 48.0142, 0.07 ) }
    dend_35 { pt3dadd( -172.497, -148.707, 48.5511, 0.07 ) }
    dend_35 { pt3dadd( -172.995, -148.762, 48.8833, 0.07 ) }
    dend_35 { pt3dadd( -173.502, -148.826, 49.2205, 1.11 ) }
    dend_35 { pt3dadd( -174.736, -149.036, 50.0218, 0.07 ) }
    dend_35 { pt3dadd( -175.172, -149.128, 50.3027, 0.59 ) }
    dend_35 { pt3dadd( -176.464, -149.42, 51.0797, 0.07 ) }
    dend_35 { pt3dadd( -177.063, -149.557, 51.4122, 0.52 ) }
    dend_35 { pt3dadd( -177.858, -149.733, 51.815, 0.22 ) }
    dend_35 { pt3dadd( -178.592, -149.894, 52.1653, 0.22 ) }
    dend_35 { pt3dadd( -178.958, -149.966, 52.3067, 0.52 ) }
    dend_35 { pt3dadd( -179.623, -150.077, 52.5013, 0.52 ) }
    dend_35 { pt3dadd( -179.768, -150.098, 52.534, 0.52 ) }
    dend_35 { pt3dadd( -180.825, -150.244, 52.806, 0.07 ) }
    dend_35 { pt3dadd( -181.261, -150.305, 52.9236, 0.52 ) }
    dend_35 { pt3dadd( -182.177, -150.446, 53.1938, 0.07 ) }
    dend_35 { pt3dadd( -182.658, -150.535, 53.3807, 0.37 ) }
    dend_35 { pt3dadd( -183.81, -150.791, 53.9317, 0.07 ) }
    dend_35 { pt3dadd( -184.698, -151.016, 54.4483, 0.07 ) }
    dend_35 { pt3dadd( -184.992, -151.098, 54.6567, 0.52 ) }
    dend_35 { pt3dadd( -185.206, -151.159, 54.8233, 0.52 ) }
    dend_35 { pt3dadd( -186.268, -151.456, 55.6871, 0.15 ) }
    dend_35 { pt3dadd( -186.852, -151.614, 56.1542, 0.66 ) }
    dend_35 { pt3dadd( -188.282, -151.993, 57.2064, 0.07 ) }
    dend_35 { pt3dadd( -189.276, -152.285, 57.8644, 0.07 ) }
    dend_35 { pt3dadd( -189.835, -152.464, 58.2021, 0.07 ) }
    dend_35 { pt3dadd( -190.37, -152.657, 58.4658, 0.37 ) }
    dend_35 { pt3dadd( -190.814, -152.832, 58.6264, 0.37 ) }
    dend_35 { pt3dadd( -191.885, -153.289, 58.8913, 0.07 ) }
    dend_35 { pt3dadd( -193.219, -153.907, 59.074, 0.07 ) }
    dend_35 { pt3dadd( -193.713, -154.154, 59.1429, 0.29 ) }
    dend_35 { pt3dadd( -195.041, -154.875, 59.4558, 0.07 ) }
    dend_35 { pt3dadd( -195.584, -155.183, 59.6311, 0.52 ) }
    dend_35 { pt3dadd( -196.611, -155.779, 60.1255, 0.07 ) }
    dend_35 { pt3dadd( -196.947, -155.979, 60.3436, 0.22 ) }
    dend_35 { pt3dadd( -198.255, -156.76, 61.3352, 0.07 ) }
    dend_35 { pt3dadd( -199.429, -157.479, 62.3177, 0.07 ) }
    dend_35 { pt3dadd( -199.874, -157.767, 62.7064, 0.15 ) }
    dend_35 { pt3dadd( -201.247, -158.695, 63.8547, 0.07 ) }
    dend_35 { pt3dadd( -201.825, -159.104, 64.2968, 0.07 ) }
    dend_35 { pt3dadd( -202.771, -159.79, 64.8974, 0.07 ) }
    dend_35 { pt3dadd( -202.958, -159.932, 64.9733, 0.15 ) }
    dend_35 { pt3dadd( -204.198, -160.888, 65.2822, 0.07 ) }
    dend_35 { pt3dadd( -204.733, -161.302, 65.3757, 0.29 ) }
    dend_35 { pt3dadd( -205.65, -161.982, 65.4683, 0.07 ) }
    dend_35 { pt3dadd( -206.001, -162.238, 65.4993, 0.29 ) }
    dend_35 { pt3dadd( -208.187, -163.798, 65.6882, 0.07 ) }
    dend_35 { pt3dadd( -209.574, -164.771, 65.7982, 0.07 ) }
    dend_35 { pt3dadd( -210.258, -165.245, 65.8474, 0.15 ) }
    dend_35 { pt3dadd( -211.215, -165.915, 65.9081, 0.15 ) }
    dend_35 { pt3dadd( -211.731, -166.292, 65.9536, 0.22 ) }
    dend_35 { pt3dadd( -212.865, -167.178, 66.1594, 0.07 ) }
    dend_35 { pt3dadd( -213.769, -167.94, 66.4382, 0.07 ) }
    dend_35 { pt3dadd( -214.057, -168.198, 66.5546, 0.37 ) }
    dend_35 { pt3dadd( -214.351, -168.481, 66.6816, 0.37 ) }
    dend_35 { pt3dadd( -215.904, -170.076, 67.3821, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_40()
}

proc basic_shape_40() {
    dend_35 { pt3dadd( -217.339, -171.59, 68.0505, 0.07 ) }
    dend_35 { pt3dadd( -218.011, -172.319, 68.3825, 0.07 ) }
    dend_35 { pt3dadd( -218.527, -172.896, 68.6557, 0.29 ) }
    dend_35 { pt3dadd( -220.157, -174.757, 69.5561, 0.07 ) }
    dend_35 { pt3dadd( -220.59, -175.271, 69.7976, 0.07 ) }
    dend_35 { pt3dadd( -220.763, -175.501, 69.9156, 0.22 ) }
    dend_35 { pt3dadd( -221.747, -177.003, 70.9086, 0.07 ) }
    dend_35 { pt3dadd( -222.574, -178.341, 71.8732, 0.07 ) }
    dend_35 { pt3dadd( -223.068, -179.2, 72.6022, 0.07 ) }
    dend_35 { pt3dadd( -223.293, -179.645, 73.0772, 0.29 ) }
    dend_35 { pt3dadd( -223.988, -181.108, 74.8116, 0.07 ) }
    dend_35 { pt3dadd( -224.509, -182.426, 76.5686, 0.07 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 12/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -81.2941, -105.547, 8.81677, 0.44 ) }
    dend_32 { pt3dadd( -82.3268, -108.465, 9.09581, 0.44 ) }
    dend_32 { pt3dadd( -83.0409, -110.373, 9.25294, 0.44 ) }
    dend_32 { pt3dadd( -83.7477, -112.15, 9.29579, 0.37 ) }
    dend_32 { pt3dadd( -84.4044, -113.768, 9.26546, 0.15 ) }
    dend_32 { pt3dadd( -84.969, -115.138, 9.19255, 0.15 ) }
    dend_32 { pt3dadd( -85.4747, -116.352, 9.10214, 0.15 ) }
    dend_32 { pt3dadd( -85.707, -116.864, 9.03435, 0.37 ) }
    dend_32 { pt3dadd( -86.3401, -118.211, 8.7345, 0.88 ) }
    dend_32 { pt3dadd( -86.7591, -119.102, 8.50803, 0.74 ) }
    dend_32 { pt3dadd( -87.6648, -120.97, 8.00383, 0.29 ) }
    dend_32 { pt3dadd( -88.3421, -122.331, 7.65223, 0.15 ) }
    dend_32 { pt3dadd( -88.9721, -123.61, 7.36894, 0.07 ) }
    dend_32 { pt3dadd( -89.7765, -125.217, 6.9908, 0.07 ) }
    dend_32 { pt3dadd( -90.027, -125.703, 6.87912, 0.44 ) }
    dend_32 { pt3dadd( -90.4059, -126.399, 6.68668, 0.81 ) }
    dend_32 { pt3dadd( -91.435, -128.198, 6.08554, 0.22 ) }
    dend_32 { pt3dadd( -92.6955, -130.367, 5.31545, 0.22 ) }
    dend_32 { pt3dadd( -93.763, -132.188, 4.64669, 0.22 ) }
    dend_32 { pt3dadd( -94.1086, -132.777, 4.43392, 0.44 ) }
    dend_32 { pt3dadd( -94.6707, -133.72, 4.05997, 0.81 ) }
    dend_32 { pt3dadd( -95.2987, -134.769, 3.57761, 1.33 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -14.3025, -18.0747, 13.4636, 0.29 ) }
    dend_28 { pt3dadd( -14.3422, -18.7244, 14.4001, 0.29 ) }
    dend_28 { pt3dadd( -14.378, -19.1092, 14.9021, 0.22 ) }
    dend_28 { pt3dadd( -14.4305, -19.5952, 15.4721, 0.22 ) }
    dend_28 { pt3dadd( -14.4844, -20.0201, 15.9613, 0.22 ) }
    dend_28 { pt3dadd( -14.5342, -20.3466, 16.3237, 0.37 ) }
    dend_28 { pt3dadd( -14.5885, -20.6826, 16.667, 0.37 ) }
    dend_28 { pt3dadd( -14.6555, -21.0854, 17.0464, 0.59 ) }
    dend_28 { pt3dadd( -14.7366, -21.7858, 17.6969, 0.15 ) }
    dend_28 { pt3dadd( -14.7725, -22.3211, 18.2107, 0.15 ) }
    dend_28 { pt3dadd( -14.776, -22.5406, 18.4445, 0.15 ) }
    dend_28 { pt3dadd( -14.7431, -23.0078, 18.9806, 1.03 ) }
    dend_28 { pt3dadd( -14.6173, -23.8192, 20.0051, 0.29 ) }
    dend_28 { pt3dadd( -14.5254, -24.2261, 20.6091, 0.29 ) }
    dend_28 { pt3dadd( -14.3991, -24.6419, 21.2779, 0.29 ) }
    dend_28 { pt3dadd( -14.2421, -25.0372, 21.9832, 0.29 ) }
    dend_28 { pt3dadd( -14.113, -25.269, 22.4873, 0.66 ) }
    dend_28 { pt3dadd( -13.888, -25.5374, 23.2884, 0.44 ) }
    dend_28 { pt3dadd( -13.5609, -25.8008, 24.3626, 0.44 ) }
    dend_28 { pt3dadd( -13.4382, -25.8688, 24.7294, 0.44 ) }
    dend_28 { pt3dadd( -13.0858, -25.9946, 25.6185, 0.22 ) }
    dend_28 { pt3dadd( -12.745, -26.0653, 26.3521, 0.15 ) }
    dend_28 { pt3dadd( -12.3045, -26.1172, 27.244, 0.15 ) }
    dend_28 { pt3dadd( -12.1205, -26.134, 27.5677, 0.15 ) }
    dend_28 { pt3dadd( -11.9294, -26.1704, 27.8821, 0.37 ) }
    dend_28 { pt3dadd( -11.6811, -26.2842, 28.3188, 0.37 ) }
    dend_28 { pt3dadd( -11.4049, -26.6679, 28.9484, 0.15 ) }
    dend_28 { pt3dadd( -11.2648, -27.1303, 29.4399, 0.15 ) }
    dend_28 { pt3dadd( -11.223, -27.4052, 29.6612, 0.44 ) }
    dend_28 { pt3dadd( -11.1733, -28.0695, 30.122, 0.15 ) }
    dend_28 { pt3dadd( -11.1694, -28.6517, 30.4831, 0.22 ) }
    dend_28 { pt3dadd( -11.1781, -29.5622, 30.9933, 0.22 ) }
    dend_28 { pt3dadd( -11.1773, -29.7895, 31.1032, 0.37 ) }
    dend_28 { pt3dadd( -11.1559, -30.2167, 31.3018, 0.44 ) }
    dend_28 { pt3dadd( -11.0882, -30.7677, 31.5924, 0.66 ) }
    dend_28 { pt3dadd( -10.9669, -31.3748, 31.9542, 0.15 ) }
    dend_28 { pt3dadd( -10.8406, -31.8874, 32.3023, 0.15 ) }
    dend_28 { pt3dadd( -10.759, -32.1646, 32.5083, 0.22 ) }
    dend_28 { pt3dadd( -10.6713, -32.4365, 32.7573, 0.22 ) }
    dend_28 { pt3dadd( -10.5259, -32.8562, 33.2274, 0.22 ) }
    dend_28 { pt3dadd( -10.3156, -33.3979, 33.9613, 0.15 ) }
    dend_28 { pt3dadd( -10.0768, -33.9408, 34.757, 0.22 ) }
    dend_28 { pt3dadd( -9.85375, -34.3932, 35.4757, 0.29 ) }
    dend_28 { pt3dadd( -9.54524, -34.9431, 36.3889, 0.22 ) }
    dend_28 { pt3dadd( -9.23101, -35.4398, 37.2666, 0.59 ) }
    dend_28 { pt3dadd( -8.78396, -36.0414, 38.3962, 0.59 ) }
    dend_28 { pt3dadd( -8.53793, -36.3318, 38.967, 0.07 ) }
    dend_28 { pt3dadd( -8.18295, -36.7366, 39.7347, 0.07 ) }
    dend_28 { pt3dadd( -8.05479, -36.8814, 39.9861, 0.22 ) }
    dend_28 { pt3dadd( -7.4604, -37.5947, 41.0386, 0.07 ) }
    dend_28 { pt3dadd( -7.29043, -37.8366, 41.3543, 0.07 ) }
    dend_28 { pt3dadd( -7.15895, -38.0539, 41.6067, 0.29 ) }
    dend_28 { pt3dadd( -6.97383, -38.4, 42.0047, 0.74 ) }
    dend_28 { pt3dadd( -6.75668, -38.8736, 42.4925, 0.22 ) }
    dend_28 { pt3dadd( -6.528, -39.4504, 43.0535, 0.15 ) }
    dend_28 { pt3dadd( -6.12071, -40.5436, 44.0149, 0.15 ) }
    dend_28 { pt3dadd( -5.97555, -40.9361, 44.3509, 0.15 ) }
    dend_28 { pt3dadd( -5.78512, -41.4821, 44.8082, 0.15 ) }
    dend_28 { pt3dadd( -5.65506, -41.9381, 45.1796, 0.15 ) }
    dend_28 { pt3dadd( -5.53547, -42.5319, 45.6388, 0.15 ) }
    dend_28 { pt3dadd( -5.46537, -42.9598, 45.955, 0.37 ) }
    dend_28 { pt3dadd( -5.42135, -43.3554, 46.2795, 0.37 ) }
    dend_28 { pt3dadd( -5.38432, -43.9127, 46.793, 0.37 ) }
    dend_28 { pt3dadd( -5.36085, -44.484, 47.382, 0.37 ) }
    dend_28 { pt3dadd( -5.33812, -44.9839, 47.9347, 0.37 ) }
    dend_28 { pt3dadd( -5.29058, -45.5214, 48.5823, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_41()
}

proc basic_shape_41() {
    dend_28 { pt3dadd( -5.16918, -46.4198, 49.8136, 0.22 ) }
    dend_28 { pt3dadd( -5.10374, -46.7443, 50.281, 0.22 ) }
    dend_28 { pt3dadd( -4.95758, -47.227, 51.032, 0.22 ) }
    dend_28 { pt3dadd( -4.80054, -47.6252, 51.676, 0.81 ) }
    dend_28 { pt3dadd( -4.38857, -48.5795, 53.2065, 0.15 ) }
    dend_28 { pt3dadd( -3.97497, -49.5474, 54.6841, 0.15 ) }
    dend_28 { pt3dadd( -3.83274, -49.8651, 55.1511, 0.37 ) }
    dend_28 { pt3dadd( -3.47157, -50.6495, 56.33, 0.37 ) }
    dend_28 { pt3dadd( -3.36493, -50.8836, 56.6675, 0.52 ) }
    dend_28 { pt3dadd( -3.18003, -51.2908, 57.2339, 0.22 ) }
    dend_28 { pt3dadd( -2.81189, -52.1421, 58.2211, 0.22 ) }
    dend_28 { pt3dadd( -2.57228, -52.7358, 58.8073, 0.22 ) }
    dend_28 { pt3dadd( -2.29824, -53.4521, 59.4931, 0.22 ) }
    dend_28 { pt3dadd( -2.12546, -53.9228, 59.9359, 0.74 ) }
    dend_28 { pt3dadd( -2.01993, -54.2153, 60.2414, 0.74 ) }
    dend_28 { pt3dadd( -1.80185, -54.7722, 60.8867, 0.22 ) }
    dend_28 { pt3dadd( -1.51523, -55.4385, 61.7548, 0.29 ) }
    dend_28 { pt3dadd( -1.19051, -56.1076, 62.6832, 0.29 ) }
    dend_28 { pt3dadd( -0.763486, -56.9176, 63.841, 0.22 ) }
    dend_28 { pt3dadd( -0.412489, -57.5701, 64.798, 0.29 ) }
    dend_28 { pt3dadd( -0.0665614, -58.2169, 65.7299, 0.29 ) }
    dend_28 { pt3dadd( 0.241354, -58.7836, 66.5449, 0.29 ) }
    dend_28 { pt3dadd( 0.50041, -59.2144, 67.1801, 0.07 ) }
    dend_28 { pt3dadd( 0.89756, -59.8079, 68.0356, 0.07 ) }
    dend_28 { pt3dadd( 1.05059, -60.0233, 68.3394, 0.22 ) }
    dend_28 { pt3dadd( 1.32066, -60.4019, 68.8421, 0.22 ) }
    dend_28 { pt3dadd( 1.85507, -61.209, 69.8051, 0.15 ) }
    dend_28 { pt3dadd( 2.49086, -62.3322, 71.0532, 0.15 ) }
    dend_28 { pt3dadd( 2.70221, -62.813, 71.5682, 0.29 ) }
    dend_28 { pt3dadd( 2.95722, -63.568, 72.3524, 0.52 ) }
    dend_28 { pt3dadd( 3.0737, -64.0888, 72.9019, 0.81 ) }
    dend_28 { pt3dadd( 3.14733, -64.8401, 73.7202, 0.37 ) }
    dend_28 { pt3dadd( 3.15085, -65.539, 74.4932, 0.37 ) }
    dend_28 { pt3dadd( 3.12009, -66.3522, 75.4183, 0.15 ) }
    dend_28 { pt3dadd( 3.08538, -67.1339, 76.3976, 0.29 ) }
    dend_28 { pt3dadd( 3.07212, -67.9891, 77.6158, 0.29 ) }
    dend_28 { pt3dadd( 3.11538, -68.6922, 78.8335, 0.66 ) }
    dend_28 { pt3dadd( 3.20436, -69.1248, 79.739, 0.66 ) }
    dend_28 { pt3dadd( 3.34982, -69.4192, 80.424, 0.07 ) }
    dend_28 { pt3dadd( 3.46321, -69.554, 80.7666, 0.44 ) }
    dend_28 { pt3dadd( 3.92249, -69.9478, 81.7384, 0.22 ) }
    dend_28 { pt3dadd( 4.636, -70.5008, 82.998, 0.44 ) }
    dend_28 { pt3dadd( 4.80367, -70.642, 83.299, 0.59 ) }
    dend_28 { pt3dadd( 5.03569, -70.9041, 83.8504, 0.22 ) }
    dend_28 { pt3dadd( 5.22368, -71.1914, 84.478, 0.37 ) }
    dend_28 { pt3dadd( 5.41656, -71.5469, 85.3346, 0.37 ) }
    dend_28 { pt3dadd( 5.588, -71.934, 86.4043, 0.37 ) }
    dend_28 { pt3dadd( 5.65052, -72.1748, 87.1108, 0.22 ) }
    dend_28 { pt3dadd( 5.69676, -72.5274, 88.2126, 0.22 ) }
    dend_28 { pt3dadd( 5.69247, -72.6299, 88.5767, 0.22 ) }
    dend_28 { pt3dadd( 5.66748, -72.7465, 89.0549, 0.22 ) }
    dend_28 { pt3dadd( 5.57354, -73.0026, 90.2089, 0.22 ) }
    dend_28 { pt3dadd( 5.56606, -73.1759, 91.0546, 0.22 ) }
    dend_28 { pt3dadd( 5.62115, -73.2777, 91.5909, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 54/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -14.3025, -18.0747, 13.4636, 0.37 ) }
    dend_27 { pt3dadd( -14.6571, -18.4259, 15.7705, 0.37 ) }
    dend_27 { pt3dadd( -14.9158, -18.6639, 17.2563, 0.37 ) }
    dend_27 { pt3dadd( -15.2669, -18.958, 19.0331, 0.37 ) }
    dend_27 { pt3dadd( -15.729, -19.3666, 21.2598, 0.37 ) }
    dend_27 { pt3dadd( -15.9804, -19.6241, 22.5116, 0.29 ) }
    dend_27 { pt3dadd( -16.1944, -19.8826, 23.6721, 0.29 ) }
    dend_27 { pt3dadd( -16.4522, -20.3618, 25.5331, 0.22 ) }
    dend_27 { pt3dadd( -16.5764, -20.6705, 26.7082, 0.22 ) }
    dend_27 { pt3dadd( -16.6707, -20.9354, 27.8004, 0.29 ) }
    dend_27 { pt3dadd( -16.8038, -21.1954, 29.0549, 0.29 ) }
    dend_27 { pt3dadd( -16.9129, -21.3145, 29.8705, 0.29 ) }
    dend_27 { pt3dadd( -17.0347, -21.4045, 30.6584, 0.29 ) }
    dend_27 { pt3dadd( -17.267, -21.5481, 31.7634, 0.29 ) }
    dend_27 { pt3dadd( -17.4661, -21.623, 32.3599, 0.29 ) }
    dend_27 { pt3dadd( -17.8865, -21.7399, 33.357, 0.29 ) }
    dend_27 { pt3dadd( -18.4052, -21.8524, 34.3855, 0.29 ) }
    dend_27 { pt3dadd( -18.7204, -21.9292, 34.9907, 0.29 ) }
    dend_27 { pt3dadd( -19.4531, -22.166, 36.4737, 0.22 ) }
    dend_27 { pt3dadd( -20.5727, -22.645, 38.9943, 0.22 ) }
    dend_27 { pt3dadd( -21.1337, -22.9248, 40.3947, 0.22 ) }
    dend_27 { pt3dadd( -21.482, -23.1312, 41.3998, 0.22 ) }
    dend_27 { pt3dadd( -22.0016, -23.5092, 43.2632, 0.22 ) }
    dend_27 { pt3dadd( -22.2519, -23.7472, 44.5076, 0.37 ) }
    dend_27 { pt3dadd( -22.4066, -23.9845, 45.7928, 0.37 ) }
    dend_27 { pt3dadd( -22.4634, -24.194, 46.817, 0.37 ) }
    dend_27 { pt3dadd( -22.4427, -24.4311, 47.8845, 0.37 ) }
    dend_27 { pt3dadd( -22.3374, -24.6377, 48.8321, 0.22 ) }
    dend_27 { pt3dadd( -21.8703, -25.2295, 51.6139, 0.22 ) }
    dend_27 { pt3dadd( -21.8032, -25.3038, 52.0008, 0.22 ) }
    dend_27 { pt3dadd( -21.444, -25.6803, 54.0935, 0.22 ) }
    dend_27 { pt3dadd( -21.3317, -25.859, 55.107, 0.15 ) }
    dend_27 { pt3dadd( -21.3493, -26.2021, 57.0243, 0.15 ) }
    dend_27 { pt3dadd( -21.4118, -26.2894, 57.5206, 0.22 ) }
    dend_27 { pt3dadd( -21.9781, -26.7386, 59.9525, 0.22 ) }
    dend_27 { pt3dadd( -22.1467, -26.8354, 60.498, 0.29 ) }
    dend_27 { pt3dadd( -23.124, -27.3154, 62.933, 0.15 ) }
    dend_27 { pt3dadd( -24.0915, -27.7289, 65.0601, 0.15 ) }
    dend_27 { pt3dadd( -25.1227, -28.1273, 67.2152, 0.15 ) }
    dend_27 { pt3dadd( -25.4326, -28.2364, 67.8897, 0.52 ) }
    dend_27 { pt3dadd( -26.2556, -28.5111, 69.7696, 0.52 ) }
    dend_27 { pt3dadd( -26.7734, -28.6567, 71.082, 0.37 ) }
    dend_27 { pt3dadd( -27.6402, -28.8171, 73.4262, 0.29 ) }
    dend_27 { pt3dadd( -28.5392, -28.8994, 76.0609, 0.29 ) }
    dend_27 { pt3dadd( -29.0955, -28.9358, 77.7716, 0.29 ) }
    dend_27 { pt3dadd( -29.6397, -28.9677, 79.6362, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_42()
}

proc basic_shape_42() {
    dend_27 { pt3dadd( -30.2529, -28.9929, 81.8741, 0.29 ) }
    dend_27 { pt3dadd( -30.384, -28.9881, 82.4127, 0.44 ) }
    dend_27 { pt3dadd( -30.9171, -28.982, 84.6704, 0.44 ) }
    dend_27 { pt3dadd( -31.1706, -29.0168, 85.6053, 0.44 ) }
    dend_27 { pt3dadd( -31.5587, -29.119, 86.804, 0.44 ) }
    dend_27 { pt3dadd( -32.046, -29.2907, 87.8845, 0.44 ) }
    dend_27 { pt3dadd( -33.5395, -29.8636, 90.3165, 0.44 ) }
    dend_27 { pt3dadd( -34.4551, -30.2189, 91.4183, 0.44 ) }
    dend_27 { pt3dadd( -36.1968, -30.8647, 93.0611, 0.15 ) }
    dend_27 { pt3dadd( -36.9553, -31.1371, 93.6549, 0.29 ) }
    dend_27 { pt3dadd( -39.0419, -31.8801, 94.9702, 0.22 ) }
    dend_27 { pt3dadd( -39.9051, -32.1897, 95.3826, 0.29 ) }
    dend_27 { pt3dadd( -42.3781, -33.096, 96.2446, 0.07 ) }
    dend_27 { pt3dadd( -43.9109, -33.6472, 96.6991, 0.07 ) }
    dend_27 { pt3dadd( -45.0889, -34.0372, 97.0522, 0.52 ) }
    dend_27 { pt3dadd( -46.1583, -34.3822, 97.3887, 0.96 ) }
    dend_27 { pt3dadd( -48.3938, -35.1138, 98.0841, 0.07 ) }
    dend_27 { pt3dadd( -49.3753, -35.4414, 98.4449, 0.07 ) }
    dend_27 { pt3dadd( -50.321, -35.765, 98.8028, 0.07 ) }
    dend_27 { pt3dadd( -51.6307, -36.2417, 99.3668, 0.22 ) }
    dend_27 { pt3dadd( -52.1396, -36.4422, 99.6203, 0.44 ) }
    dend_27 { pt3dadd( -53.3519, -36.9615, 100.283, 0.22 ) }
    dend_27 { pt3dadd( -55.781, -38.1388, 101.95, 0.96 ) }
    dend_27 { pt3dadd( -57.3801, -39.0412, 103.315, 0.15 ) }
    dend_27 { pt3dadd( -58.3145, -39.6418, 104.291, 0.96 ) }
    dend_27 { pt3dadd( -59.594, -40.5492, 105.823, 0.15 ) }
    dend_27 { pt3dadd( -60.0544, -40.8952, 106.477, 0.29 ) }
    dend_27 { pt3dadd( -61.4197, -42.0147, 109.004, 0.15 ) }
    dend_27 { pt3dadd( -62.2739, -42.8345, 111.146, 0.22 ) }
    dend_27 { pt3dadd( -62.6839, -43.3619, 112.903, 0.22 ) }
    dend_27 { pt3dadd( -62.7308, -43.4703, 113.32, 0.22 ) }
    dend_27 { pt3dadd( -62.7457, -43.7053, 114.436, 0.22 ) }
    dend_27 { pt3dadd( -62.6942, -44.0353, 116.441, 0.22 ) }
    dend_27 { pt3dadd( -62.6708, -44.1045, 117.192, 0.22 ) }
    dend_27 { pt3dadd( -62.6789, -44.1352, 118.379, 0.22 ) }
    dend_27 { pt3dadd( -62.7344, -44.135, 119.511, 0.22 ) }
    dend_27 { pt3dadd( -62.9554, -44.1597, 121.158, 0.22 ) }
    dend_27 { pt3dadd( -63.2676, -44.2289, 122.345, 0.22 ) }
    dend_27 { pt3dadd( -63.7537, -44.3798, 123.393, 0.22 ) }
    dend_27 { pt3dadd( -64.2831, -44.5519, 124.256, 0.81 ) }
    dend_27 { pt3dadd( -64.978, -44.7848, 125.17, 0.81 ) }
    dend_27 { pt3dadd( -65.7111, -45.0385, 126.057, 0.22 ) }
    dend_27 { pt3dadd( -66.3901, -45.2881, 126.821, 0.81 ) }
    dend_27 { pt3dadd( -68.2589, -45.9516, 128.839, 0.15 ) }
    dend_27 { pt3dadd( -68.7006, -46.0917, 129.314, 0.37 ) }
    dend_27 { pt3dadd( -69.8949, -46.3979, 130.572, 0.07 ) }
    dend_27 { pt3dadd( -71.1452, -46.617, 131.844, 0.07 ) }
    dend_27 { pt3dadd( -71.6745, -46.6655, 132.401, 0.29 ) }
    dend_27 { pt3dadd( -72.829, -46.7178, 133.709, 0.07 ) }
    dend_27 { pt3dadd( -73.6261, -46.7638, 134.71, 0.07 ) }
    dend_27 { pt3dadd( -73.9921, -46.8257, 135.222, 0.52 ) }
    dend_27 { pt3dadd( -74.7249, -47.054, 136.314, 0.74 ) }
    dend_27 { pt3dadd( -75.7985, -47.5708, 137.963, 0.37 ) }
    dend_27 { pt3dadd( -76.8563, -48.24, 139.6, 0.37 ) }
    dend_27 { pt3dadd( -77.3841, -48.6407, 140.392, 0.59 ) }
    dend_27 { pt3dadd( -78.4485, -49.4857, 141.88, 0.29 ) }
    dend_27 { pt3dadd( -78.9787, -49.886, 142.542, 0.29 ) }
    dend_27 { pt3dadd( -79.4565, -50.2226, 143.058, 0.88 ) }
    dend_27 { pt3dadd( -80.5575, -50.9391, 144.062, 0.22 ) }
    dend_27 { pt3dadd( -81.2971, -51.3563, 144.645, 0.66 ) }
    dend_27 { pt3dadd( -81.6005, -51.4911, 144.885, 0.66 ) }
    dend_27 { pt3dadd( -82.5405, -51.8402, 145.639, 0.07 ) }
    dend_27 { pt3dadd( -83.9276, -52.2847, 146.727, 0.07 ) }
    dend_27 { pt3dadd( -84.4735, -52.4354, 147.136, 0.07 ) }
    dend_27 { pt3dadd( -84.8909, -52.5411, 147.426, 0.37 ) }
    dend_27 { pt3dadd( -86.771, -53.0275, 148.649, 0.15 ) }
    dend_27 { pt3dadd( -87.0996, -53.1194, 148.847, 0.15 ) }
    dend_27 { pt3dadd( -88.1376, -53.3971, 149.369, 0.52 ) }
    dend_27 { pt3dadd( -88.7938, -53.5752, 149.673, 0.15 ) }
    dend_27 { pt3dadd( -89.5487, -53.8019, 150.041, 0.37 ) }
    dend_27 { pt3dadd( -90.7312, -54.2077, 150.642, 0.07 ) }
    dend_27 { pt3dadd( -91.189, -54.3848, 150.897, 0.37 ) }
    dend_27 { pt3dadd( -92.2204, -54.7815, 151.621, 0.15 ) }
    dend_27 { pt3dadd( -93.4424, -55.1544, 152.755, 0.15 ) }
    dend_27 { pt3dadd( -94.249, -55.3084, 153.767, 0.37 ) }
    dend_27 { pt3dadd( -94.6888, -55.3243, 154.524, 0.81 ) }
    dend_27 { pt3dadd( -95.2111, -55.2358, 155.71, 1.4 ) }
    dend_27 { pt3dadd( -95.7526, -55.0267, 157.284, 1.4 ) }
    dend_27 { pt3dadd( -96.3565, -54.6179, 159.651, 0.37 ) }
    dend_27 { pt3dadd( -96.8228, -54.0925, 162.29, 0.22 ) }
    dend_27 { pt3dadd( -97.1164, -53.5902, 164.85, 0.22 ) }
    dend_27 { pt3dadd( -97.2863, -53.1869, 166.839, 0.22 ) }
    dend_27 { pt3dadd( -97.3316, -53.0149, 167.68, 0.22 ) }
    dend_27 { pt3dadd( -97.3626, -52.75, 169.056, 0.44 ) }
    dend_27 { pt3dadd( -97.2894, -52.2563, 172.089, 0.44 ) }
    dend_27 { pt3dadd( -97.1637, -51.891, 174.737, 0.44 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 86/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 5.27498, -356.919, 21.4279, 1.33 ) }
    dend_59 { pt3dadd( 5.49447, -357.807, 21.0482, 1.33 ) }
    dend_59 { pt3dadd( 5.69008, -358.696, 20.6829, 0.37 ) }
    dend_59 { pt3dadd( 6.0048, -360.116, 20.0458, 0.22 ) }
    dend_59 { pt3dadd( 6.08792, -360.464, 19.895, 0.22 ) }
    dend_59 { pt3dadd( 6.18502, -360.887, 19.7319, 0.37 ) }
    dend_59 { pt3dadd( 6.36594, -361.682, 19.4617, 0.37 ) }
    dend_59 { pt3dadd( 6.66207, -363.012, 19.0452, 0.22 ) }
    dend_59 { pt3dadd( 6.8698, -363.992, 18.7846, 0.96 ) }
    dend_59 { pt3dadd( 7.04202, -364.895, 18.6118, 1.18 ) }
    dend_59 { pt3dadd( 7.27903, -366.277, 18.3216, 0.29 ) }
    dend_59 { pt3dadd( 7.42357, -367.19, 18.1283, 0.29 ) }
    dend_59 { pt3dadd( 7.48332, -367.598, 18.0516, 0.29 ) }
    dend_59 { pt3dadd( 7.53838, -368.003, 17.9811, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_43()
}

proc basic_shape_43() {
    dend_59 { pt3dadd( 7.60849, -368.613, 17.86, 0.44 ) }
    dend_59 { pt3dadd( 7.76727, -370.257, 17.463, 0.44 ) }
    dend_59 { pt3dadd( 7.82603, -370.871, 17.3006, 1.11 ) }
    dend_59 { pt3dadd( 7.90919, -371.947, 17.0236, 1.62 ) }
    dend_59 { pt3dadd( 7.97683, -373.036, 16.7715, 0.37 ) }
    dend_59 { pt3dadd( 8.02634, -374.43, 16.5038, 0.22 ) }
    dend_59 { pt3dadd( 8.03338, -375.188, 16.392, 0.29 ) }
    dend_59 { pt3dadd( 8.01594, -375.886, 16.3309, 0.29 ) }
    dend_59 { pt3dadd( 7.95843, -376.809, 16.2584, 0.29 ) }
    dend_59 { pt3dadd( 7.85032, -377.782, 16.2007, 0.29 ) }
    dend_59 { pt3dadd( 7.65139, -378.961, 16.1711, 0.22 ) }
    dend_59 { pt3dadd( 7.55998, -379.38, 16.1805, 0.22 ) }
    dend_59 { pt3dadd( 7.47303, -379.716, 16.187, 0.52 ) }
    dend_59 { pt3dadd( 7.30164, -380.311, 16.1971, 0.96 ) }
    dend_59 { pt3dadd( 7.02471, -381.24, 16.2121, 0.29 ) }
    dend_59 { pt3dadd( 6.75085, -382.106, 16.2248, 0.22 ) }
    dend_59 { pt3dadd( 6.33478, -383.405, 16.2431, 0.29 ) }
    dend_59 { pt3dadd( 6.03872, -384.355, 16.2568, 0.29 ) }
    dend_59 { pt3dadd( 5.76543, -385.241, 16.2695, 0.37 ) }
    dend_59 { pt3dadd( 5.50102, -386.118, 16.2821, 1.18 ) }
    dend_59 { pt3dadd( 5.27082, -386.887, 16.2929, 1.92 ) }
    dend_59 { pt3dadd( 5.02686, -387.701, 16.3036, 0.88 ) }
    dend_59 { pt3dadd( 4.53691, -389.272, 16.3226, 0.22 ) }
    dend_59 { pt3dadd( 4.23635, -390.224, 16.3338, 0.29 ) }
    dend_59 { pt3dadd( 4.01455, -390.917, 16.3417, 0.66 ) }
    dend_59 { pt3dadd( 3.76847, -391.689, 16.3505, 1.03 ) }
    dend_59 { pt3dadd( 3.43336, -392.739, 16.3626, 0.22 ) }
    dend_59 { pt3dadd( 3.05051, -393.922, 16.3756, 0.22 ) }
    dend_59 { pt3dadd( 2.61077, -395.281, 16.3906, 0.22 ) }
    dend_59 { pt3dadd( 2.39825, -395.959, 16.4215, 0.29 ) }
    dend_59 { pt3dadd( 2.19013, -396.635, 16.4692, 0.81 ) }
    dend_59 { pt3dadd( 2.02841, -397.15, 16.515, 0.81 ) }
    dend_59 { pt3dadd( 1.80314, -397.889, 16.5937, 0.44 ) }
    dend_59 { pt3dadd( 1.30657, -399.697, 16.7973, 0.15 ) }
    dend_59 { pt3dadd( 0.902309, -401.238, 16.9668, 0.15 ) }
    dend_59 { pt3dadd( 0.707809, -402.0, 17.0433, 0.59 ) }
    dend_59 { pt3dadd( 0.545669, -402.671, 17.1042, 1.99 ) }
    dend_59 { pt3dadd( 0.417758, -403.249, 17.1508, 2.36 ) }
    dend_59 { pt3dadd( -0.0698344, -405.574, 17.3046, 0.44 ) }
    dend_59 { pt3dadd( -0.312244, -406.797, 17.3603, 0.22 ) }
    dend_59 { pt3dadd( -0.559649, -408.096, 17.3847, 0.29 ) }
    dend_59 { pt3dadd( -0.710195, -408.914, 17.3993, 0.88 ) }
    dend_59 { pt3dadd( -0.826155, -409.602, 17.4118, 1.03 ) }
    dend_59 { pt3dadd( -0.993735, -410.668, 17.4575, 0.37 ) }
    dend_59 { pt3dadd( -1.13432, -411.748, 17.5548, 0.22 ) }
    dend_59 { pt3dadd( -1.24071, -412.99, 17.7508, 0.22 ) }
    dend_59 { pt3dadd( -1.29665, -413.825, 17.9024, 0.96 ) }
    dend_59 { pt3dadd( -1.3626, -414.979, 18.1402, 0.37 ) }
    dend_59 { pt3dadd( -1.41901, -416.379, 18.4743, 0.22 ) }
    dend_59 { pt3dadd( -1.42022, -417.162, 18.7031, 0.44 ) }
    dend_59 { pt3dadd( -1.36946, -418.263, 19.1086, 1.18 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 51/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 5.27498, -356.919, 21.4279, 0.15 ) }
    dend_58 { pt3dadd( 4.94833, -357.984, 21.9011, 0.15 ) }
    dend_58 { pt3dadd( 4.79465, -358.573, 22.1414, 0.15 ) }
    dend_58 { pt3dadd( 4.67706, -359.049, 22.3289, 0.44 ) }
    dend_58 { pt3dadd( 4.18742, -360.877, 23.0096, 0.15 ) }
    dend_58 { pt3dadd( 4.11518, -361.141, 23.1023, 0.37 ) }
    dend_58 { pt3dadd( 4.02024, -361.488, 23.2165, 0.37 ) }
    dend_58 { pt3dadd( 3.60022, -363.212, 23.775, 0.07 ) }
    dend_58 { pt3dadd( 3.24615, -364.643, 24.238, 0.07 ) }
    dend_58 { pt3dadd( 2.83724, -366.202, 24.7153, 0.07 ) }
    dend_58 { pt3dadd( 2.65741, -366.829, 24.8764, 0.07 ) }
    dend_58 { pt3dadd( 2.449, -367.529, 25.0583, 0.37 ) }
    // Section: dend_56, id: dend_56, parent: dend_54 (entry count 63/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 250.599, 2.14375, -191.12, 0.15 ) }
    dend_56 { pt3dadd( 258.737, 4.38636, -199.351, 0.15 ) }
    dend_56 { pt3dadd( 265.744, 5.37074, -208.782, 0.15 ) }
    dend_56 { pt3dadd( 273.442, 4.53763, -217.674, 0.15 ) }
    dend_56 { pt3dadd( 280.896, 5.16085, -226.788, 0.15 ) }
    dend_56 { pt3dadd( 287.089, 5.75453, -236.804, 0.15 ) }
    dend_56 { pt3dadd( 293.554, 5.58364, -246.662, 0.15 ) }
    dend_56 { pt3dadd( 300.635, 4.10875, -255.973, 0.15 ) }
    dend_56 { pt3dadd( 307.507, 2.90466, -265.477, 0.15 ) }
    dend_56 { pt3dadd( 314.023, -0.564181, -274.671, 0.15 ) }
    dend_56 { pt3dadd( 321.293, -5.11258, -282.763, 0.15 ) }
    dend_56 { pt3dadd( 327.538, -8.55818, -292.151, 0.15 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 75/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 250.599, 2.14375, -191.12, 0.07 ) }
    dend_55 { pt3dadd( 257.463, 4.30612, -196.2, 0.15 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 77/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 188.189, -86.709, 20.451, 0.15 ) }
    dend_49 { pt3dadd( 188.415, -87.3262, 19.7234, 0.15 ) }
    dend_49 { pt3dadd( 188.722, -87.96, 18.9854, 0.15 ) }
    dend_49 { pt3dadd( 188.796, -88.0837, 18.8484, 0.15 ) }
    dend_49 { pt3dadd( 188.949, -88.2928, 18.6323, 0.44 ) }
    dend_49 { pt3dadd( 189.077, -88.4566, 18.4648, 0.44 ) }
    dend_49 { pt3dadd( 189.396, -88.8445, 18.0448, 0.15 ) }
    dend_49 { pt3dadd( 189.672, -89.113, 17.7411, 0.29 ) }
    dend_49 { pt3dadd( 189.946, -89.3443, 17.4651, 0.29 ) }
    dend_49 { pt3dadd( 190.249, -89.5881, 17.1488, 0.07 ) }
    dend_49 { pt3dadd( 190.657, -89.8801, 16.6944, 0.07 ) }
    dend_49 { pt3dadd( 191.021, -90.101, 16.2803, 0.07 ) }
    dend_49 { pt3dadd( 191.144, -90.1578, 16.1399, 0.37 ) }
    dend_49 { pt3dadd( 191.402, -90.2534, 15.8525, 1.11 ) }
    dend_49 { pt3dadd( 191.497, -90.2798, 15.7524, 1.11 ) }
    dend_49 { pt3dadd( 192.011, -90.3879, 15.2403, 0.22 ) }
    dend_49 { pt3dadd( 192.615, -90.4854, 14.7254, 0.15 ) }
    dend_49 { pt3dadd( 193.02, -90.5626, 14.3601, 0.15 ) }
    dend_49 { pt3dadd( 193.269, -90.6306, 14.0774, 0.15 ) }
    dend_49 { pt3dadd( 193.561, -90.7313, 13.6703, 0.15 ) }
    dend_49 { pt3dadd( 193.706, -90.7919, 13.4245, 0.74 ) }
    dend_49 { pt3dadd( 193.928, -90.9042, 12.9585, 0.15 ) }
    dend_49 { pt3dadd( 194.321, -91.101, 11.9932, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_44()
}

proc basic_shape_44() {
    dend_49 { pt3dadd( 194.739, -91.2577, 11.058, 0.15 ) }
    dend_49 { pt3dadd( 194.889, -91.2909, 10.7801, 0.74 ) }
    dend_49 { pt3dadd( 195.03, -91.3116, 10.5754, 0.81 ) }
    dend_49 { pt3dadd( 195.179, -91.3372, 10.3938, 0.37 ) }
    dend_49 { pt3dadd( 195.727, -91.4407, 9.86087, 0.07 ) }
    dend_49 { pt3dadd( 196.391, -91.5774, 9.45282, 0.07 ) }
    dend_49 { pt3dadd( 196.921, -91.7069, 9.2671, 0.37 ) }
    dend_49 { pt3dadd( 197.588, -91.9289, 9.12662, 0.07 ) }
    dend_49 { pt3dadd( 198.478, -92.2966, 9.02631, 0.07 ) }
    dend_49 { pt3dadd( 198.787, -92.4476, 9.01668, 0.59 ) }
    dend_49 { pt3dadd( 199.63, -92.9274, 9.05448, 0.07 ) }
    dend_49 { pt3dadd( 200.55, -93.4995, 9.13055, 0.07 ) }
    dend_49 { pt3dadd( 201.108, -93.8198, 9.23505, 0.15 ) }
    dend_49 { pt3dadd( 201.467, -94.0039, 9.33653, 0.37 ) }
    dend_49 { pt3dadd( 201.798, -94.1583, 9.44836, 0.66 ) }
    dend_49 { pt3dadd( 202.094, -94.3006, 9.54683, 0.59 ) }
    dend_49 { pt3dadd( 202.414, -94.4726, 9.64348, 0.66 ) }
    dend_49 { pt3dadd( 203.3, -94.9987, 9.90324, 0.07 ) }
    dend_49 { pt3dadd( 203.918, -95.3729, 10.0938, 0.07 ) }
    dend_49 { pt3dadd( 204.308, -95.6231, 10.2159, 0.07 ) }
    dend_49 { pt3dadd( 204.582, -95.8098, 10.2915, 0.52 ) }
    dend_49 { pt3dadd( 205.205, -96.2625, 10.4316, 0.07 ) }
    dend_49 { pt3dadd( 205.551, -96.5229, 10.4738, 0.07 ) }
    dend_49 { pt3dadd( 205.672, -96.6245, 10.4567, 0.07 ) }
    dend_49 { pt3dadd( 205.975, -96.8758, 10.3519, 0.44 ) }
    dend_49 { pt3dadd( 206.58, -97.3164, 10.1022, 0.15 ) }
    dend_49 { pt3dadd( 206.805, -97.4503, 10.0091, 0.37 ) }
    dend_49 { pt3dadd( 207.197, -97.6323, 9.84275, 0.59 ) }
    dend_49 { pt3dadd( 208.185, -97.9999, 9.45694, 0.88 ) }
    dend_49 { pt3dadd( 208.5, -98.1229, 9.32051, 0.29 ) }
    dend_49 { pt3dadd( 209.29, -98.44, 8.98052, 0.15 ) }
    dend_49 { pt3dadd( 209.896, -98.6777, 8.72502, 0.15 ) }
    dend_49 { pt3dadd( 210.231, -98.8021, 8.58678, 0.22 ) }
    dend_49 { pt3dadd( 210.51, -98.8992, 8.47711, 0.52 ) }
    dend_49 { pt3dadd( 211.584, -99.2486, 8.03814, 0.52 ) }
    dend_49 { pt3dadd( 212.21, -99.4677, 7.71616, 0.37 ) }
    dend_49 { pt3dadd( 213.024, -99.7837, 7.20005, 0.15 ) }
    dend_49 { pt3dadd( 213.55, -100.009, 6.82231, 0.15 ) }
    dend_49 { pt3dadd( 213.77, -100.127, 6.62954, 0.15 ) }
    dend_49 { pt3dadd( 214.08, -100.323, 6.3178, 0.66 ) }
    dend_49 { pt3dadd( 214.206, -100.43, 6.17055, 0.66 ) }
    dend_49 { pt3dadd( 214.475, -100.804, 5.74199, 0.07 ) }
    dend_49 { pt3dadd( 214.631, -101.106, 5.46072, 0.22 ) }
    dend_49 { pt3dadd( 215.143, -102.168, 4.62292, 0.07 ) }
    dend_49 { pt3dadd( 215.298, -102.497, 4.39493, 0.22 ) }
    dend_49 { pt3dadd( 215.751, -103.439, 3.83025, 0.07 ) }
    dend_49 { pt3dadd( 215.935, -103.81, 3.64153, 0.22 ) }
    dend_49 { pt3dadd( 216.337, -104.573, 3.33629, 0.07 ) }
    dend_49 { pt3dadd( 216.701, -105.163, 3.18856, 0.07 ) }
    dend_49 { pt3dadd( 216.979, -105.508, 3.17646, 0.88 ) }
    dend_49 { pt3dadd( 217.243, -105.775, 3.207, 0.88 ) }
    dend_49 { pt3dadd( 217.738, -106.197, 3.32428, 0.22 ) }
    dend_49 { pt3dadd( 218.118, -106.501, 3.43369, 0.59 ) }
    dend_49 { pt3dadd( 218.785, -107.02, 3.66096, 0.07 ) }
    dend_49 { pt3dadd( 219.672, -107.725, 3.96883, 0.07 ) }
    dend_49 { pt3dadd( 220.136, -108.077, 4.14819, 0.07 ) }
    dend_49 { pt3dadd( 220.444, -108.312, 4.27471, 1.11 ) }
    dend_49 { pt3dadd( 220.892, -108.651, 4.46269, 0.15 ) }
    dend_49 { pt3dadd( 221.202, -108.883, 4.59733, 0.59 ) }
    dend_49 { pt3dadd( 222.019, -109.482, 4.96557, 0.15 ) }
    dend_49 { pt3dadd( 222.586, -109.917, 5.22123, 0.15 ) }
    dend_49 { pt3dadd( 222.85, -110.117, 5.34491, 0.29 ) }
    dend_49 { pt3dadd( 223.246, -110.399, 5.5233, 1.25 ) }
    dend_49 { pt3dadd( 224.048, -110.912, 5.86831, 0.07 ) }
    dend_49 { pt3dadd( 224.431, -111.123, 6.02551, 0.07 ) }
    dend_49 { pt3dadd( 224.781, -111.309, 6.13714, 0.29 ) }
    dend_49 { pt3dadd( 225.021, -111.447, 6.18357, 0.29 ) }
    dend_49 { pt3dadd( 225.488, -111.73, 6.22567, 0.07 ) }
    dend_49 { pt3dadd( 225.818, -111.948, 6.20656, 0.22 ) }
    dend_49 { pt3dadd( 226.253, -112.274, 6.08615, 0.07 ) }
    dend_49 { pt3dadd( 227.148, -113.15, 5.61596, 0.07 ) }
    dend_49 { pt3dadd( 227.293, -113.31, 5.51484, 0.29 ) }
    dend_49 { pt3dadd( 227.475, -113.527, 5.37032, 0.74 ) }
    dend_49 { pt3dadd( 227.575, -113.657, 5.28697, 0.96 ) }
    dend_49 { pt3dadd( 227.762, -113.904, 5.13862, 0.44 ) }
    dend_49 { pt3dadd( 228.39, -114.679, 4.69193, 0.15 ) }
    dend_49 { pt3dadd( 228.624, -114.961, 4.53891, 0.15 ) }
    dend_49 { pt3dadd( 228.889, -115.309, 4.35225, 0.29 ) }
    dend_49 { pt3dadd( 229.142, -115.627, 4.18416, 0.07 ) }
    dend_49 { pt3dadd( 229.395, -115.904, 4.03748, 0.88 ) }
    dend_49 { pt3dadd( 229.61, -116.104, 3.9261, 0.88 ) }
    dend_49 { pt3dadd( 230.509, -116.807, 3.53873, 0.15 ) }
    dend_49 { pt3dadd( 230.939, -117.12, 3.36017, 0.22 ) }
    dend_49 { pt3dadd( 231.524, -117.509, 3.1271, 0.07 ) }
    dend_49 { pt3dadd( 232.006, -117.836, 2.93955, 0.07 ) }
    dend_49 { pt3dadd( 232.213, -117.988, 2.86653, 0.37 ) }
    dend_49 { pt3dadd( 232.354, -118.101, 2.82673, 0.37 ) }
    dend_49 { pt3dadd( 232.864, -118.586, 2.70828, 0.15 ) }
    dend_49 { pt3dadd( 233.077, -118.867, 2.64089, 0.88 ) }
    dend_49 { pt3dadd( 233.548, -119.706, 2.43568, 0.15 ) }
    dend_49 { pt3dadd( 233.775, -120.188, 2.31402, 0.15 ) }
    dend_49 { pt3dadd( 233.906, -120.487, 2.22735, 0.44 ) }
    dend_49 { pt3dadd( 234.244, -121.197, 2.02217, 0.07 ) }
    dend_49 { pt3dadd( 234.456, -121.59, 1.91104, 0.07 ) }
    dend_49 { pt3dadd( 234.662, -121.864, 1.83056, 0.37 ) }
    dend_49 { pt3dadd( 234.824, -121.942, 1.81173, 0.37 ) }
    dend_49 { pt3dadd( 235.319, -121.954, 1.85311, 0.07 ) }
    dend_49 { pt3dadd( 236.474, -121.768, 2.039, 0.07 ) }
    dend_49 { pt3dadd( 236.939, -121.643, 2.13469, 0.07 ) }
    dend_49 { pt3dadd( 237.105, -121.593, 2.17299, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_45()
}

proc basic_shape_45() {
    dend_49 { pt3dadd( 237.799, -121.373, 2.33056, 0.59 ) }
    dend_49 { pt3dadd( 238.195, -121.253, 2.40963, 0.59 ) }
    dend_49 { pt3dadd( 238.828, -121.078, 2.49872, 0.22 ) }
    dend_49 { pt3dadd( 239.888, -120.865, 2.4911, 0.22 ) }
    dend_49 { pt3dadd( 240.628, -120.768, 2.38861, 0.07 ) }
    dend_49 { pt3dadd( 241.165, -120.741, 2.23116, 0.07 ) }
    dend_49 { pt3dadd( 241.575, -120.738, 2.06297, 0.88 ) }
    dend_49 { pt3dadd( 242.227, -120.711, 1.79264, 0.07 ) }
    dend_49 { pt3dadd( 243.756, -120.613, 1.14297, 0.22 ) }
    dend_49 { pt3dadd( 244.193, -120.582, 0.954591, 0.07 ) }
    dend_49 { pt3dadd( 244.569, -120.544, 0.808871, 0.52 ) }
    dend_49 { pt3dadd( 245.977, -120.381, 0.357551, 0.07 ) }
    dend_49 { pt3dadd( 247.146, -120.212, 0.0599909, 0.07 ) }
    dend_49 { pt3dadd( 247.355, -120.176, 0.0208521, 0.29 ) }
    dend_49 { pt3dadd( 247.88, -120.074, -0.048563, 0.59 ) }
    dend_49 { pt3dadd( 248.311, -120.001, -0.129873, 0.59 ) }
    dend_49 { pt3dadd( 249.062, -119.884, -0.343204, 0.07 ) }
    dend_49 { pt3dadd( 249.363, -119.847, -0.492266, 0.07 ) }
    dend_49 { pt3dadd( 249.511, -119.826, -0.599858, 0.29 ) }
    dend_49 { pt3dadd( 249.645, -119.797, -0.725181, 0.29 ) }
    dend_49 { pt3dadd( 250.038, -119.697, -1.26297, 0.07 ) }
    dend_49 { pt3dadd( 250.288, -119.64, -1.70239, 0.37 ) }
    dend_49 { pt3dadd( 250.546, -119.605, -2.25749, 0.15 ) }
    dend_49 { pt3dadd( 250.874, -119.6, -3.01111, 0.37 ) }
    dend_49 { pt3dadd( 251.205, -119.628, -3.79149, 0.07 ) }
    dend_49 { pt3dadd( 251.69, -119.712, -4.90364, 0.07 ) }
    dend_49 { pt3dadd( 251.827, -119.746, -5.21031, 0.37 ) }
    dend_49 { pt3dadd( 252.113, -119.826, -5.81501, 0.07 ) }
    dend_49 { pt3dadd( 252.268, -119.863, -6.08522, 0.07 ) }
    dend_49 { pt3dadd( 252.456, -119.891, -6.32876, 0.22 ) }
    dend_49 { pt3dadd( 252.958, -119.946, -6.83397, 0.07 ) }
    dend_49 { pt3dadd( 253.235, -119.953, -7.05669, 0.37 ) }
    dend_49 { pt3dadd( 253.442, -119.953, -7.21016, 0.74 ) }
    dend_49 { pt3dadd( 253.983, -119.967, -7.58638, 0.07 ) }
    dend_49 { pt3dadd( 254.276, -119.991, -7.78541, 0.07 ) }
    dend_49 { pt3dadd( 254.547, -120.037, -7.95681, 0.22 ) }
    dend_49 { pt3dadd( 254.928, -120.11, -8.1499, 0.07 ) }
    dend_49 { pt3dadd( 255.331, -120.196, -8.3183, 0.15 ) }
    dend_49 { pt3dadd( 256.469, -120.448, -8.65845, 0.07 ) }
    dend_49 { pt3dadd( 256.83, -120.531, -8.72939, 0.44 ) }
    dend_49 { pt3dadd( 257.575, -120.713, -8.82047, 0.07 ) }
    dend_49 { pt3dadd( 258.536, -120.96, -8.87455, 0.07 ) }
    dend_49 { pt3dadd( 258.937, -121.07, -8.87074, 0.29 ) }
    dend_49 { pt3dadd( 259.666, -121.284, -8.81181, 0.29 ) }
    dend_49 { pt3dadd( 260.078, -121.418, -8.74104, 0.07 ) }
    dend_49 { pt3dadd( 260.565, -121.586, -8.62405, 0.07 ) }
    dend_49 { pt3dadd( 260.706, -121.64, -8.57472, 0.07 ) }
    dend_49 { pt3dadd( 260.98, -121.758, -8.46154, 0.29 ) }
    dend_49 { pt3dadd( 261.28, -121.868, -8.31177, 0.07 ) }
    dend_49 { pt3dadd( 261.569, -121.971, -8.15691, 0.29 ) }
    dend_49 { pt3dadd( 262.273, -122.228, -7.75686, 0.07 ) }
    dend_49 { pt3dadd( 262.821, -122.441, -7.43303, 0.22 ) }
    dend_49 { pt3dadd( 263.365, -122.652, -7.1256, 0.07 ) }
    dend_49 { pt3dadd( 263.859, -122.85, -6.85658, 0.07 ) }
    dend_49 { pt3dadd( 264.199, -122.994, -6.68523, 0.44 ) }
    dend_49 { pt3dadd( 264.791, -123.226, -6.42172, 0.07 ) }
    dend_49 { pt3dadd( 265.003, -123.291, -6.33905, 0.15 ) }
    dend_49 { pt3dadd( 265.504, -123.448, -6.18789, 0.07 ) }
    dend_49 { pt3dadd( 265.762, -123.523, -6.12568, 0.07 ) }
    dend_49 { pt3dadd( 265.949, -123.561, -6.08903, 0.22 ) }
    dend_49 { pt3dadd( 266.932, -123.581, -5.89373, 0.07 ) }
    dend_49 { pt3dadd( 267.939, -123.478, -5.68438, 0.07 ) }
    dend_49 { pt3dadd( 269.391, -123.215, -5.39803, 0.07 ) }
    dend_49 { pt3dadd( 269.714, -123.123, -5.33552, 0.29 ) }
    dend_49 { pt3dadd( 270.172, -122.95, -5.24195, 0.29 ) }
    dend_49 { pt3dadd( 270.659, -122.708, -5.10447, 0.29 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 66/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 188.189, -86.709, 20.451, 0.07 ) }
    dend_48 { pt3dadd( 189.172, -86.206, 19.6647, 0.07 ) }
    dend_48 { pt3dadd( 189.94, -85.809, 19.0003, 0.07 ) }
    dend_48 { pt3dadd( 190.395, -85.5613, 18.5872, 0.29 ) }
    dend_48 { pt3dadd( 191.559, -84.8813, 17.603, 0.15 ) }
    dend_48 { pt3dadd( 192.046, -84.5844, 17.2211, 0.52 ) }
    dend_48 { pt3dadd( 193.011, -83.9712, 16.5079, 0.07 ) }
    dend_48 { pt3dadd( 193.911, -83.3682, 15.9328, 0.07 ) }
    dend_48 { pt3dadd( 194.36, -83.0394, 15.723, 0.07 ) }
    dend_48 { pt3dadd( 195.245, -82.3205, 15.4294, 0.22 ) }
    dend_48 { pt3dadd( 195.595, -82.0037, 15.366, 0.74 ) }
    dend_48 { pt3dadd( 195.904, -81.7037, 15.3486, 1.33 ) }
    dend_48 { pt3dadd( 196.892, -80.6864, 15.3782, 0.22 ) }
    dend_48 { pt3dadd( 197.354, -80.1724, 15.4028, 0.22 ) }
    dend_48 { pt3dadd( 197.842, -79.5878, 15.3726, 0.29 ) }
    dend_48 { pt3dadd( 198.861, -78.2812, 15.1788, 0.07 ) }
    dend_48 { pt3dadd( 199.719, -77.1542, 14.8765, 0.07 ) }
    dend_48 { pt3dadd( 200.16, -76.5814, 14.6122, 0.37 ) }
    dend_48 { pt3dadd( 201.147, -75.3325, 13.6985, 0.07 ) }
    dend_48 { pt3dadd( 201.918, -74.4455, 12.7891, 0.07 ) }
    dend_48 { pt3dadd( 202.151, -74.1833, 12.4646, 0.22 ) }
    dend_48 { pt3dadd( 202.883, -73.4255, 11.1702, 0.07 ) }
    dend_48 { pt3dadd( 203.582, -72.8192, 9.66568, 0.07 ) }
    dend_48 { pt3dadd( 203.906, -72.6172, 8.87857, 0.07 ) }
    dend_48 { pt3dadd( 204.077, -72.5853, 8.40585, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 91/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -95.2987, -134.769, 3.57761, 0.29 ) }
    dend_34 { pt3dadd( -95.8155, -136.234, 3.2598, 0.29 ) }
    dend_34 { pt3dadd( -96.15, -137.238, 3.07694, 0.22 ) }
    dend_34 { pt3dadd( -96.4809, -138.276, 2.90908, 0.15 ) }
    dend_34 { pt3dadd( -96.7089, -139.037, 2.79573, 0.22 ) }
    dend_34 { pt3dadd( -96.9712, -139.961, 2.66819, 0.29 ) }
    dend_34 { pt3dadd( -97.1482, -140.628, 2.6076, 0.22 ) }
    dend_34 { pt3dadd( -97.3224, -141.411, 2.58992, 0.37 ) }
    dend_34 { pt3dadd( -97.4191, -141.886, 2.61505, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_46()
}

proc basic_shape_46() {
    dend_34 { pt3dadd( -97.5138, -142.36, 2.65375, 0.88 ) }
    dend_34 { pt3dadd( -97.6751, -143.13, 2.7319, 1.47 ) }
    dend_34 { pt3dadd( -97.9591, -144.406, 2.87264, 0.22 ) }
    dend_34 { pt3dadd( -98.1825, -145.366, 2.97561, 0.15 ) }
    dend_34 { pt3dadd( -98.337, -145.997, 3.04408, 0.15 ) }
    dend_34 { pt3dadd( -98.4271, -146.36, 3.08282, 0.44 ) }
    dend_34 { pt3dadd( -98.535, -146.828, 3.12603, 0.44 ) }
    dend_34 { pt3dadd( -98.6683, -147.551, 3.11747, 0.15 ) }
    dend_34 { pt3dadd( -98.7584, -148.324, 2.95387, 0.15 ) }
    dend_34 { pt3dadd( -98.7892, -148.914, 2.72859, 0.22 ) }
    dend_34 { pt3dadd( -98.799, -149.312, 2.5075, 0.52 ) }
    dend_34 { pt3dadd( -98.8152, -149.806, 2.16002, 1.03 ) }
    dend_34 { pt3dadd( -98.9103, -150.864, 1.19015, 0.22 ) }
    dend_34 { pt3dadd( -99.0276, -151.454, 0.462425, 0.22 ) }
    dend_34 { pt3dadd( -99.0927, -151.641, 0.184939, 0.22 ) }
    dend_34 { pt3dadd( -99.2066, -151.843, -0.145689, 0.22 ) }
    dend_34 { pt3dadd( -99.4066, -152.082, -0.554904, 0.96 ) }
    dend_34 { pt3dadd( -99.9065, -152.507, -1.3358, 0.22 ) }
    dend_34 { pt3dadd( -100.34, -152.788, -1.84693, 0.22 ) }
    dend_34 { pt3dadd( -100.583, -152.921, -2.11104, 0.29 ) }
    dend_34 { pt3dadd( -101.123, -153.186, -2.68454, 0.15 ) }
    dend_34 { pt3dadd( -101.572, -153.389, -3.13146, 0.29 ) }
    dend_34 { pt3dadd( -102.083, -153.595, -3.60522, 0.29 ) }
    dend_34 { pt3dadd( -102.397, -153.708, -3.87194, 0.15 ) }
    dend_34 { pt3dadd( -102.823, -153.892, -4.21409, 0.15 ) }
    dend_34 { pt3dadd( -103.143, -154.073, -4.45815, 0.59 ) }
    dend_34 { pt3dadd( -103.614, -154.444, -4.80154, 0.15 ) }
    dend_34 { pt3dadd( -103.827, -154.671, -4.96347, 0.44 ) }
    dend_34 { pt3dadd( -104.422, -155.451, -5.41882, 0.22 ) }
    dend_34 { pt3dadd( -104.825, -156.058, -5.72732, 1.4 ) }
    dend_34 { pt3dadd( -105.286, -156.815, -6.06565, 0.44 ) }
    dend_34 { pt3dadd( -105.744, -157.606, -6.39406, 0.44 ) }
    dend_34 { pt3dadd( -106.21, -158.442, -6.70846, 0.29 ) }
    dend_34 { pt3dadd( -106.575, -159.103, -6.92542, 0.66 ) }
    dend_34 { pt3dadd( -107.025, -159.93, -7.14992, 0.15 ) }
    dend_34 { pt3dadd( -107.606, -160.956, -7.44395, 0.15 ) }
    dend_34 { pt3dadd( -107.877, -161.434, -7.58095, 0.15 ) }
    dend_34 { pt3dadd( -108.134, -161.864, -7.69078, 0.29 ) }
    dend_34 { pt3dadd( -108.342, -162.198, -7.76754, 0.74 ) }
    dend_34 { pt3dadd( -108.693, -162.765, -7.9181, 0.44 ) }
    dend_34 { pt3dadd( -109.201, -163.598, -8.15515, 0.15 ) }
    dend_34 { pt3dadd( -109.518, -164.145, -8.30845, 0.15 ) }
    dend_34 { pt3dadd( -109.927, -164.912, -8.51424, 0.29 ) }
    dend_34 { pt3dadd( -110.275, -165.613, -8.68742, 0.29 ) }
    dend_34 { pt3dadd( -110.601, -166.329, -8.84633, 0.74 ) }
    dend_34 { pt3dadd( -110.834, -166.889, -8.95692, 1.18 ) }
    dend_34 { pt3dadd( -111.135, -167.679, -9.08546, 0.44 ) }
    dend_34 { pt3dadd( -111.61, -168.861, -9.25893, 0.22 ) }
    dend_34 { pt3dadd( -111.899, -169.553, -9.34794, 0.29 ) }
    dend_34 { pt3dadd( -112.146, -170.102, -9.40439, 0.29 ) }
    dend_34 { pt3dadd( -112.359, -170.548, -9.43665, 0.88 ) }
    dend_34 { pt3dadd( -112.587, -171.0, -9.46814, 1.47 ) }
    dend_34 { pt3dadd( -113.305, -172.299, -9.5513, 0.22 ) }
    dend_34 { pt3dadd( -113.729, -173.02, -9.59291, 0.15 ) }
    dend_34 { pt3dadd( -114.154, -173.733, -9.63017, 0.22 ) }
    dend_34 { pt3dadd( -114.434, -174.205, -9.65236, 0.22 ) }
    dend_34 { pt3dadd( -114.653, -174.573, -9.68209, 0.66 ) }
    dend_34 { pt3dadd( -114.907, -175.024, -9.73432, 0.66 ) }
    dend_34 { pt3dadd( -115.284, -175.713, -9.8354, 0.15 ) }
    dend_34 { pt3dadd( -115.641, -176.404, -9.94673, 0.15 ) }
    dend_34 { pt3dadd( -115.884, -176.908, -10.0327, 0.74 ) }
    dend_34 { pt3dadd( -116.419, -178.133, -10.2402, 0.07 ) }
    dend_34 { pt3dadd( -116.787, -179.121, -10.4222, 0.07 ) }
    dend_34 { pt3dadd( -116.915, -179.528, -10.5012, 0.74 ) }
    dend_34 { pt3dadd( -117.216, -180.83, -10.8379, 0.07 ) }
    dend_34 { pt3dadd( -117.257, -181.12, -10.9292, 0.22 ) }
    dend_34 { pt3dadd( -117.362, -182.327, -11.3242, 0.07 ) }
    dend_34 { pt3dadd( -117.368, -183.412, -11.6903, 0.07 ) }
    dend_34 { pt3dadd( -117.353, -183.714, -11.8097, 0.22 ) }
    dend_34 { pt3dadd( -117.213, -185.158, -12.4688, 0.07 ) }
    dend_34 { pt3dadd( -117.149, -185.568, -12.7108, 0.81 ) }
    dend_34 { pt3dadd( -119.072, -193.324, -14.2835, 0.81 ) }
    dend_34 { pt3dadd( -121.672, -201.025, -14.8044, 0.81 ) }
    dend_34 { pt3dadd( -124.042, -208.816, -14.9376, 0.81 ) }
    dend_34 { pt3dadd( -126.539, -216.455, -13.6198, 0.81 ) }
    dend_34 { pt3dadd( -128.155, -224.325, -12.2857, 0.81 ) }
    dend_34 { pt3dadd( -130.142, -231.955, -10.2413, 0.81 ) }
    dend_34 { pt3dadd( -132.437, -239.755, -9.77534, 0.81 ) }
    dend_34 { pt3dadd( -135.349, -247.188, -8.15891, 0.81 ) }
    dend_34 { pt3dadd( -138.943, -254.258, -6.30724, 0.81 ) }
    dend_34 { pt3dadd( -140.864, -261.806, -3.92731, 0.81 ) }
    dend_34 { pt3dadd( -141.709, -269.227, -0.678591, 0.81 ) }
    dend_34 { pt3dadd( -142.991, -276.293, 3.16266, 0.81 ) }
    dend_34 { pt3dadd( -145.822, -282.337, 7.83043, 0.81 ) }
    dend_34 { pt3dadd( -149.104, -287.361, 13.3369, 0.81 ) }
    dend_34 { pt3dadd( -153.108, -292.884, 17.7867, 0.81 ) }
    dend_34 { pt3dadd( -157.512, -296.71, 23.4693, 0.81 ) }
    dend_34 { pt3dadd( -160.89, -301.41, 29.1996, 0.81 ) }
    dend_34 { pt3dadd( -163.36, -306.161, 35.3365, 0.81 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 89/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -95.2987, -134.769, 3.57761, 0.15 ) }
    dend_33 { pt3dadd( -96.9688, -136.609, 4.16965, 0.15 ) }
    dend_33 { pt3dadd( -97.798, -137.522, 4.46364, 0.15 ) }
    dend_33 { pt3dadd( -98.755, -138.576, 4.80289, 0.15 ) }
    dend_33 { pt3dadd( -99.1789, -139.043, 4.95315, 0.88 ) }
    dend_33 { pt3dadd( -99.9595, -139.903, 5.23, 1.7 ) }
    dend_33 { pt3dadd( -100.529, -140.529, 5.4315, 1.7 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 96/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 5.62115, -73.2777, 91.5909, 0.07 ) }
    dend_30 { pt3dadd( 6.68317, -74.1242, 93.0092, 0.07 ) }
    dend_30 { pt3dadd( 7.9543, -75.2514, 94.7679, 0.07 ) }
    dend_30 { pt3dadd( 8.88365, -76.158, 96.0946, 0.07 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_47()
}

proc basic_shape_47() {
    dend_30 { pt3dadd( 9.10677, -76.3775, 96.4471, 0.29 ) }
    dend_30 { pt3dadd( 10.329, -77.4889, 98.5004, 0.29 ) }
    dend_30 { pt3dadd( 10.7401, -77.8268, 99.2492, 0.29 ) }
    dend_30 { pt3dadd( 11.008, -78.0202, 99.8391, 0.15 ) }
    dend_30 { pt3dadd( 11.5141, -78.2852, 100.907, 0.37 ) }
    dend_30 { pt3dadd( 12.5376, -78.6832, 102.924, 0.37 ) }
    dend_30 { pt3dadd( 13.1618, -78.8756, 103.993, 0.37 ) }
    dend_30 { pt3dadd( 14.283, -79.1248, 105.616, 0.37 ) }
    dend_30 { pt3dadd( 16.2333, -79.4571, 108.111, 0.81 ) }
    dend_30 { pt3dadd( 17.9165, -79.6952, 110.058, 0.15 ) }
    dend_30 { pt3dadd( 18.6372, -79.7827, 110.779, 0.15 ) }
    dend_30 { pt3dadd( 19.5857, -79.888, 111.602, 0.37 ) }
    dend_30 { pt3dadd( 20.2146, -79.9465, 112.088, 0.37 ) }
    dend_30 { pt3dadd( 22.3886, -80.1185, 113.666, 0.07 ) }
    dend_30 { pt3dadd( 23.6979, -80.2167, 114.692, 0.07 ) }
    dend_30 { pt3dadd( 24.3739, -80.2806, 115.325, 0.59 ) }
    dend_30 { pt3dadd( 26.0139, -80.4836, 117.033, 0.15 ) }
    dend_30 { pt3dadd( 26.5589, -80.5778, 117.659, 0.29 ) }
    dend_30 { pt3dadd( 28.3128, -80.971, 119.704, 0.15 ) }
    dend_30 { pt3dadd( 29.6113, -81.3404, 121.209, 0.15 ) }
    dend_30 { pt3dadd( 31.1142, -81.9156, 123.212, 0.15 ) }
    dend_30 { pt3dadd( 31.3889, -82.0521, 123.66, 0.15 ) }
    dend_30 { pt3dadd( 31.9941, -82.4318, 124.799, 0.44 ) }
    dend_30 { pt3dadd( 32.7451, -82.9306, 126.297, 0.22 ) }
    dend_30 { pt3dadd( 33.5248, -83.4571, 127.927, 0.29 ) }
    dend_30 { pt3dadd( 35.1182, -84.5954, 131.487, 0.15 ) }
    dend_30 { pt3dadd( 36.3556, -85.6378, 134.789, 0.15 ) }
    dend_30 { pt3dadd( 36.732, -86.0009, 135.958, 0.15 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 28/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 5.62115, -73.2777, 91.5909, 0.07 ) }
    dend_29 { pt3dadd( 6.36439, -74.9774, 90.5682, 0.07 ) }
    dend_29 { pt3dadd( 6.74912, -75.9481, 90.1769, 0.07 ) }
    dend_29 { pt3dadd( 7.05897, -76.9062, 89.9588, 0.29 ) }
    dend_29 { pt3dadd( 7.17808, -77.3486, 89.9381, 0.44 ) }
    dend_29 { pt3dadd( 7.36736, -78.1236, 90.1153, 0.15 ) }
    dend_29 { pt3dadd( 7.46844, -78.5711, 90.3072, 0.37 ) }
    dend_29 { pt3dadd( 7.73044, -80.1804, 91.4565, 0.22 ) }
    dend_29 { pt3dadd( 7.77715, -80.6111, 91.8282, 0.37 ) }
    dend_29 { pt3dadd( 7.83985, -81.4183, 92.5905, 0.37 ) }
    dend_29 { pt3dadd( 7.85575, -82.6903, 93.9985, 0.15 ) }
    dend_29 { pt3dadd( 7.82453, -83.4215, 94.8979, 0.15 ) }
    dend_29 { pt3dadd( 7.80399, -83.7378, 95.3365, 0.37 ) }
    dend_29 { pt3dadd( 7.77507, -84.1405, 95.9284, 0.37 ) }
    dend_29 { pt3dadd( 7.75933, -84.3496, 96.2734, 0.44 ) }
    dend_29 { pt3dadd( 7.68605, -85.3832, 98.1594, 0.22 ) }
    dend_29 { pt3dadd( 7.71028, -85.6559, 98.6651, 0.22 ) }
    dend_29 { pt3dadd( 7.93275, -86.2787, 99.8749, 0.22 ) }
    dend_29 { pt3dadd( 8.08947, -86.5279, 100.354, 0.22 ) }
    dend_29 { pt3dadd( 8.29204, -86.7626, 100.765, 0.59 ) }
    dend_29 { pt3dadd( 8.76335, -87.2552, 101.467, 0.15 ) }
    dend_29 { pt3dadd( 9.61385, -88.1071, 102.622, 0.15 ) }
    dend_29 { pt3dadd( 10.0141, -88.5499, 103.242, 0.15 ) }
    dend_29 { pt3dadd( 10.2813, -88.8934, 103.701, 0.37 ) }
    dend_29 { pt3dadd( 10.484, -89.1863, 104.099, 0.74 ) }
    dend_29 { pt3dadd( 10.789, -89.7876, 104.923, 0.22 ) }
    dend_29 { pt3dadd( 11.3342, -91.7244, 107.355, 0.22 ) }
    dend_29 { pt3dadd( 11.4151, -92.3544, 108.081, 0.66 ) }
    dend_29 { pt3dadd( 11.4536, -93.1537, 108.951, 0.22 ) }
    dend_29 { pt3dadd( 11.45, -93.7227, 109.538, 0.44 ) }
    dend_29 { pt3dadd( 11.3831, -95.039, 110.797, 0.15 ) }
    dend_29 { pt3dadd( 11.2811, -96.1956, 111.776, 0.22 ) }
    dend_29 { pt3dadd( 11.1183, -97.4757, 112.63, 0.22 ) }
    dend_29 { pt3dadd( 11.0696, -97.778, 112.83, 0.22 ) }
    dend_29 { pt3dadd( 10.9802, -98.2228, 113.125, 0.44 ) }
    dend_29 { pt3dadd( 10.8613, -98.7898, 113.502, 0.44 ) }
    dend_29 { pt3dadd( 10.6947, -99.7121, 114.204, 0.22 ) }
    dend_29 { pt3dadd( 10.5614, -100.492, 114.911, 0.37 ) }
    dend_29 { pt3dadd( 10.4387, -101.191, 115.565, 0.37 ) }
    dend_29 { pt3dadd( 10.3594, -101.656, 115.972, 0.59 ) }
    dend_29 { pt3dadd( 10.2152, -102.558, 116.715, 0.07 ) }
    dend_29 { pt3dadd( 10.0018, -103.954, 117.751, 0.15 ) }
    dend_29 { pt3dadd( 9.89662, -104.709, 118.237, 0.15 ) }
    dend_29 { pt3dadd( 9.81926, -105.418, 118.638, 0.96 ) }
    dend_29 { pt3dadd( 9.66022, -107.35, 119.605, 0.15 ) }
    dend_29 { pt3dadd( 9.63654, -107.782, 119.783, 0.59 ) }
    dend_29 { pt3dadd( 9.59763, -109.753, 120.41, 0.22 ) }
    dend_29 { pt3dadd( 9.61148, -110.455, 120.57, 0.37 ) }
    dend_29 { pt3dadd( 9.67831, -111.129, 120.697, 0.74 ) }
    dend_29 { pt3dadd( 9.74984, -111.478, 120.763, 0.96 ) }
    dend_29 { pt3dadd( 10.1934, -112.846, 120.919, 0.22 ) }
    dend_29 { pt3dadd( 10.4849, -113.583, 120.943, 0.22 ) }
    dend_29 { pt3dadd( 10.7787, -114.23, 120.858, 0.59 ) }
    dend_29 { pt3dadd( 11.3599, -115.542, 120.472, 0.15 ) }
    dend_29 { pt3dadd( 11.7362, -116.475, 120.045, 0.15 ) }
    dend_29 { pt3dadd( 12.205, -117.753, 119.248, 0.59 ) }
    dend_29 { pt3dadd( 12.282, -117.979, 119.08, 0.59 ) }
    dend_29 { pt3dadd( 12.6516, -119.239, 118.089, 0.15 ) }
    dend_29 { pt3dadd( 12.9422, -120.419, 117.14, 0.59 ) }
    dend_29 { pt3dadd( 13.1334, -121.379, 116.384, 0.22 ) }
    dend_29 { pt3dadd( 13.3291, -122.446, 115.602, 0.81 ) }
    dend_29 { pt3dadd( 13.6383, -124.007, 114.747, 0.22 ) }
    dend_29 { pt3dadd( 13.7477, -124.508, 114.556, 0.22 ) }
    dend_29 { pt3dadd( 13.9205, -125.165, 114.463, 0.52 ) }
    dend_29 { pt3dadd( 14.3091, -126.479, 114.553, 0.15 ) }
    dend_29 { pt3dadd( 14.4896, -127.02, 114.671, 0.37 ) }
    dend_29 { pt3dadd( 15.3207, -128.998, 115.447, 0.07 ) }
    dend_29 { pt3dadd( 15.7196, -129.753, 115.838, 0.29 ) }
    dend_29 { pt3dadd( 16.2117, -130.468, 116.245, 0.29 ) }
    dend_29 { pt3dadd( 16.7316, -131.077, 116.609, 0.15 ) }
    dend_29 { pt3dadd( 17.1663, -131.518, 116.879, 0.29 ) }
    dend_29 { pt3dadd( 18.2448, -132.592, 117.513, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_48()
}

proc basic_shape_48() {
    dend_29 { pt3dadd( 18.6452, -132.982, 117.757, 0.74 ) }
    dend_29 { pt3dadd( 19.5041, -133.827, 118.387, 0.15 ) }
    dend_29 { pt3dadd( 19.9903, -134.38, 118.833, 0.15 ) }
    dend_29 { pt3dadd( 20.4001, -134.978, 119.324, 0.52 ) }
    dend_29 { pt3dadd( 20.8879, -136.038, 120.244, 0.22 ) }
    dend_29 { pt3dadd( 21.2455, -137.322, 121.383, 0.22 ) }
    dend_29 { pt3dadd( 21.3511, -137.854, 121.869, 0.96 ) }
    dend_29 { pt3dadd( 21.5033, -138.834, 122.818, 0.29 ) }
    dend_29 { pt3dadd( 21.6174, -139.714, 123.765, 0.59 ) }
    dend_29 { pt3dadd( 21.7438, -140.784, 124.979, 0.29 ) }
    dend_29 { pt3dadd( 21.7844, -141.514, 125.835, 0.29 ) }
    dend_29 { pt3dadd( 21.7915, -141.881, 126.272, 0.22 ) }
    dend_29 { pt3dadd( 21.7934, -142.622, 127.268, 0.74 ) }
    dend_29 { pt3dadd( 21.7998, -143.843, 129.17, 0.07 ) }
    dend_29 { pt3dadd( 21.8015, -144.19, 129.75, 0.07 ) }
    dend_29 { pt3dadd( 21.791, -144.633, 130.488, 0.29 ) }
    // Section: dend_61, id: dend_61, parent: dend_59 (entry count 16/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -1.36946, -418.263, 19.1086, 0.22 ) }
    dend_61 { pt3dadd( -1.28187, -419.101, 19.0622, 0.22 ) }
    dend_61 { pt3dadd( -1.24155, -419.948, 19.0869, 0.15 ) }
    dend_61 { pt3dadd( -1.25383, -420.571, 19.223, 0.15 ) }
    dend_61 { pt3dadd( -1.27, -420.768, 19.2857, 0.37 ) }
    dend_61 { pt3dadd( -1.29646, -420.973, 19.3603, 0.81 ) }
    dend_61 { pt3dadd( -1.34753, -421.314, 19.4858, 0.81 ) }
    dend_61 { pt3dadd( -1.47315, -422.071, 19.7893, 0.22 ) }
    dend_61 { pt3dadd( -1.63426, -423.075, 20.1931, 0.22 ) }
    dend_61 { pt3dadd( -1.7451, -423.842, 20.4854, 0.29 ) }
    dend_61 { pt3dadd( -1.81993, -424.343, 20.6523, 0.88 ) }
    dend_61 { pt3dadd( -1.91794, -424.993, 20.8507, 1.62 ) }
    dend_61 { pt3dadd( -2.0717, -425.98, 21.1062, 0.37 ) }
    dend_61 { pt3dadd( -2.15952, -426.543, 21.2182, 0.52 ) }
    dend_61 { pt3dadd( -2.24338, -427.062, 21.2957, 0.66 ) }
    dend_61 { pt3dadd( -2.3714, -427.713, 21.3916, 0.22 ) }
    dend_61 { pt3dadd( -2.52785, -428.374, 21.4856, 0.22 ) }
    dend_61 { pt3dadd( -2.77996, -429.233, 21.6052, 0.07 ) }
    dend_61 { pt3dadd( -2.92646, -429.648, 21.6774, 0.07 ) }
    dend_61 { pt3dadd( -3.07218, -430.04, 21.7526, 0.88 ) }
    dend_61 { pt3dadd( -3.40093, -430.93, 21.9261, 0.15 ) }
    dend_61 { pt3dadd( -3.60183, -431.435, 22.0149, 0.44 ) }
    dend_61 { pt3dadd( -3.87355, -432.03, 22.1211, 0.22 ) }
    dend_61 { pt3dadd( -4.32987, -432.951, 22.3005, 0.22 ) }
    dend_61 { pt3dadd( -4.53571, -433.343, 22.3799, 0.88 ) }
    dend_61 { pt3dadd( -4.87535, -433.959, 22.5092, 1.4 ) }
    dend_61 { pt3dadd( -5.52129, -435.072, 22.739, 0.15 ) }
    dend_61 { pt3dadd( -6.14463, -436.088, 22.92, 0.15 ) }
    dend_61 { pt3dadd( -6.35506, -436.428, 22.9689, 0.15 ) }
    dend_61 { pt3dadd( -6.47615, -436.626, 22.9886, 0.52 ) }
    dend_61 { pt3dadd( -6.71577, -437.028, 23.026, 1.03 ) }
    dend_61 { pt3dadd( -7.12089, -437.745, 23.0796, 0.22 ) }
    dend_61 { pt3dadd( -7.59506, -438.695, 23.1253, 0.15 ) }
    dend_61 { pt3dadd( -7.99078, -439.546, 23.1399, 0.15 ) }
    dend_61 { pt3dadd( -8.10025, -439.793, 23.1444, 0.66 ) }
    dend_61 { pt3dadd( -8.28165, -440.225, 23.1516, 1.33 ) }
    dend_61 { pt3dadd( -8.7636, -441.423, 23.2034, 0.15 ) }
    dend_61 { pt3dadd( -9.11742, -442.408, 23.1815, 0.15 ) }
    dend_61 { pt3dadd( -9.27435, -442.871, 23.1461, 0.66 ) }
    dend_61 { pt3dadd( -9.38052, -443.169, 23.1086, 0.66 ) }
    dend_61 { pt3dadd( -9.91735, -444.661, 22.8619, 0.07 ) }
    dend_61 { pt3dadd( -10.2943, -445.727, 22.642, 0.07 ) }
    dend_61 { pt3dadd( -10.8655, -447.402, 22.3228, 0.37 ) }
    dend_61 { pt3dadd( -10.9753, -447.722, 22.284, 0.74 ) }
    dend_61 { pt3dadd( -11.1771, -448.303, 22.2573, 0.96 ) }
    dend_61 { pt3dadd( -11.3713, -448.824, 22.3195, 0.96 ) }
    dend_61 { pt3dadd( -11.4238, -448.956, 22.3594, 0.96 ) }
    dend_61 { pt3dadd( -11.9436, -450.209, 22.889, 0.07 ) }
    dend_61 { pt3dadd( -12.3958, -451.232, 23.4226, 0.07 ) }
    dend_61 { pt3dadd( -12.5629, -451.617, 23.6319, 0.15 ) }
    dend_61 { pt3dadd( -13.1148, -452.913, 24.3707, 0.07 ) }
    dend_61 { pt3dadd( -13.4117, -453.521, 24.7582, 0.07 ) }
    dend_61 { pt3dadd( -13.5638, -453.8, 24.9589, 0.07 ) }
    dend_61 { pt3dadd( -13.782, -454.145, 25.247, 0.52 ) }
    dend_61 { pt3dadd( -14.1113, -454.616, 25.6983, 1.11 ) }
    dend_61 { pt3dadd( -14.4072, -454.999, 26.1325, 1.25 ) }
    dend_61 { pt3dadd( -15.0672, -455.786, 27.2249, 0.15 ) }
    dend_61 { pt3dadd( -15.6484, -456.447, 28.2021, 0.15 ) }
    dend_61 { pt3dadd( -15.9647, -456.803, 28.7246, 0.15 ) }
    dend_61 { pt3dadd( -16.3061, -457.186, 29.2796, 0.74 ) }
    dend_61 { pt3dadd( -17.0456, -458.018, 30.4167, 0.15 ) }
    dend_61 { pt3dadd( -17.8527, -458.952, 31.5946, 0.74 ) }
    dend_61 { pt3dadd( -18.3151, -459.524, 32.2304, 0.15 ) }
    dend_61 { pt3dadd( -18.6059, -459.902, 32.5735, 0.29 ) }
    dend_61 { pt3dadd( -19.2441, -460.78, 33.2543, 0.07 ) }
    dend_61 { pt3dadd( -19.5745, -461.252, 33.5753, 0.07 ) }
    dend_61 { pt3dadd( -19.6901, -461.426, 33.6641, 0.96 ) }
    dend_61 { pt3dadd( -19.883, -461.733, 33.7839, 0.74 ) }
    dend_61 { pt3dadd( -20.4631, -462.727, 34.2074, 0.15 ) }
    dend_61 { pt3dadd( -20.9657, -463.666, 34.5889, 0.15 ) }
    dend_61 { pt3dadd( -21.1639, -464.079, 34.7357, 0.66 ) }
    dend_61 { pt3dadd( -21.2495, -464.27, 34.8029, 0.66 ) }
    dend_61 { pt3dadd( -21.5763, -465.088, 35.0682, 0.07 ) }
    dend_61 { pt3dadd( -21.8347, -465.851, 35.248, 0.07 ) }
    dend_61 { pt3dadd( -22.0904, -466.781, 35.3718, 0.07 ) }
    dend_61 { pt3dadd( -22.2023, -467.264, 35.3623, 0.07 ) }
    dend_61 { pt3dadd( -22.3007, -467.7, 35.3135, 0.29 ) }
    dend_61 { pt3dadd( -22.4759, -468.54, 35.1586, 0.15 ) }
    dend_61 { pt3dadd( -22.6741, -469.531, 34.8361, 0.15 ) }
    dend_61 { pt3dadd( -22.7569, -469.914, 34.6494, 0.29 ) }
    dend_61 { pt3dadd( -22.8852, -470.467, 34.337, 0.81 ) }
    dend_61 { pt3dadd( -22.9616, -470.746, 34.1587, 0.96 ) }
    dend_61 { pt3dadd( -23.2027, -471.5, 33.6268, 0.22 ) }
    dend_61 { pt3dadd( -23.5457, -472.417, 32.9505, 0.15 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_49()
}

proc basic_shape_49() {
    dend_61 { pt3dadd( -23.9549, -473.425, 32.2446, 0.15 ) }
    dend_61 { pt3dadd( -24.1071, -473.792, 31.9892, 0.22 ) }
    dend_61 { pt3dadd( -24.4355, -474.569, 31.4409, 0.07 ) }
    dend_61 { pt3dadd( -24.6249, -475.022, 31.1084, 0.07 ) }
    dend_61 { pt3dadd( -24.7683, -475.344, 30.8658, 0.66 ) }
    dend_61 { pt3dadd( -24.9543, -475.754, 30.572, 1.25 ) }
    dend_61 { pt3dadd( -25.2789, -476.457, 30.0511, 0.15 ) }
    dend_61 { pt3dadd( -25.602, -477.153, 29.5221, 0.15 ) }
    dend_61 { pt3dadd( -25.7776, -477.524, 29.241, 0.15 ) }
    dend_61 { pt3dadd( -25.9385, -477.852, 28.9855, 0.29 ) }
    dend_61 { pt3dadd( -26.3113, -478.57, 28.4012, 0.07 ) }
    dend_61 { pt3dadd( -26.6319, -479.158, 27.9232, 0.07 ) }
    dend_61 { pt3dadd( -26.8362, -479.521, 27.646, 0.88 ) }
    dend_61 { pt3dadd( -27.1936, -480.14, 27.2466, 0.15 ) }
    dend_61 { pt3dadd( -27.3936, -480.491, 27.0638, 0.22 ) }
    dend_61 { pt3dadd( -27.7186, -481.078, 26.827, 0.22 ) }
    dend_61 { pt3dadd( -27.8965, -481.409, 26.7342, 0.59 ) }
    dend_61 { pt3dadd( -28.0158, -481.635, 26.69, 0.74 ) }
    dend_61 { pt3dadd( -28.5051, -482.606, 26.5533, 0.07 ) }
    dend_61 { pt3dadd( -28.9756, -483.63, 26.4652, 0.07 ) }
    dend_61 { pt3dadd( -29.1947, -484.156, 26.4347, 0.07 ) }
    dend_61 { pt3dadd( -29.2848, -484.404, 26.4445, 0.52 ) }
    dend_61 { pt3dadd( -29.394, -484.743, 26.4777, 0.52 ) }
    dend_61 { pt3dadd( -29.5835, -485.406, 26.5635, 0.07 ) }
    dend_61 { pt3dadd( -29.7554, -486.131, 26.683, 0.07 ) }
    dend_61 { pt3dadd( -29.8415, -486.538, 26.7501, 0.66 ) }
    dend_61 { pt3dadd( -30.1003, -487.918, 26.952, 0.15 ) }
    dend_61 { pt3dadd( -30.1547, -488.199, 26.9825, 0.15 ) }
    dend_61 { pt3dadd( -30.293, -488.927, 27.0399, 0.15 ) }
    dend_61 { pt3dadd( -30.371, -489.401, 27.0362, 0.15 ) }
    dend_61 { pt3dadd( -30.4975, -490.216, 26.954, 0.15 ) }
    dend_61 { pt3dadd( -30.6184, -491.029, 26.7733, 0.15 ) }
    dend_61 { pt3dadd( -30.737, -491.907, 26.488, 0.15 ) }
    dend_61 { pt3dadd( -30.7807, -492.201, 26.3855, 0.37 ) }
    dend_61 { pt3dadd( -31.0105, -493.466, 25.918, 0.15 ) }
    dend_61 { pt3dadd( -31.1262, -494.066, 25.676, 0.15 ) }
    dend_61 { pt3dadd( -31.3017, -494.906, 25.3016, 0.37 ) }
    dend_61 { pt3dadd( -31.3782, -495.231, 25.137, 0.37 ) }
    dend_61 { pt3dadd( -31.5723, -496.001, 24.7137, 0.37 ) }
    dend_61 { pt3dadd( -31.7091, -496.423, 24.4782, 0.07 ) }
    // Section: dend_60, id: dend_60, parent: dend_59 (entry count 40/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -1.36946, -418.263, 19.1086, 0.15 ) }
    dend_60 { pt3dadd( -1.76063, -419.073, 19.6892, 0.15 ) }
    dend_60 { pt3dadd( -1.98857, -419.538, 20.0205, 0.44 ) }
    dend_60 { pt3dadd( -2.57672, -420.661, 20.7798, 0.15 ) }
    dend_60 { pt3dadd( -3.21118, -421.817, 21.524, 0.15 ) }
    dend_60 { pt3dadd( -3.5566, -422.395, 21.917, 0.15 ) }
    dend_60 { pt3dadd( -3.78566, -422.747, 22.1772, 0.81 ) }
    dend_60 { pt3dadd( -4.77818, -424.097, 23.314, 0.15 ) }
    dend_60 { pt3dadd( -5.66185, -425.114, 24.2482, 0.15 ) }
    dend_60 { pt3dadd( -5.99476, -425.428, 24.5591, 0.66 ) }
    dend_60 { pt3dadd( -6.91891, -426.151, 25.3135, 0.15 ) }
    dend_60 { pt3dadd( -7.80779, -426.746, 25.9737, 0.15 ) }
    dend_60 { pt3dadd( -8.52312, -427.15, 26.4929, 0.15 ) }
    dend_60 { pt3dadd( -9.03957, -427.384, 26.8434, 0.15 ) }
    dend_60 { pt3dadd( -9.44893, -427.578, 27.1084, 0.88 ) }
    dend_60 { pt3dadd( -9.76917, -427.755, 27.3005, 0.88 ) }
    dend_60 { pt3dadd( -10.9866, -428.595, 27.9354, 0.07 ) }
    dend_60 { pt3dadd( -11.4429, -428.972, 28.1569, 0.07 ) }
    dend_60 { pt3dadd( -11.7636, -429.269, 28.3171, 0.66 ) }
    dend_60 { pt3dadd( -13.016, -430.554, 28.9919, 0.07 ) }
    dend_60 { pt3dadd( -13.3416, -430.917, 29.1768, 0.44 ) }
    dend_60 { pt3dadd( -13.8166, -431.486, 29.4446, 0.07 ) }
    dend_60 { pt3dadd( -14.0182, -431.752, 29.5389, 0.22 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 63/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( -31.7091, -496.423, 24.4782, 0.07 ) }
    dend_63 { pt3dadd( -33.0591, -496.627, 25.2995, 0.07 ) }
    dend_63 { pt3dadd( -33.8675, -496.765, 25.7657, 0.15 ) }
    dend_63 { pt3dadd( -34.8174, -496.976, 26.334, 0.07 ) }
    dend_63 { pt3dadd( -35.2671, -497.098, 26.5589, 0.07 ) }
    dend_63 { pt3dadd( -35.5001, -497.165, 26.6572, 0.37 ) }
    dend_63 { pt3dadd( -36.3072, -497.427, 26.9447, 0.07 ) }
    dend_63 { pt3dadd( -36.7065, -497.606, 27.0091, 0.22 ) }
    dend_63 { pt3dadd( -37.6456, -498.094, 27.0231, 0.07 ) }
    dend_63 { pt3dadd( -38.7711, -498.738, 26.9035, 0.07 ) }
    dend_63 { pt3dadd( -39.2433, -499.031, 26.7918, 0.37 ) }
    dend_63 { pt3dadd( -39.9365, -499.496, 26.504, 0.07 ) }
    dend_63 { pt3dadd( -40.9178, -500.198, 25.8984, 0.07 ) }
    dend_63 { pt3dadd( -41.2448, -500.451, 25.6338, 0.22 ) }
    dend_63 { pt3dadd( -41.5523, -500.708, 25.3127, 0.22 ) }
    dend_63 { pt3dadd( -42.1531, -501.242, 24.5553, 0.07 ) }
    dend_63 { pt3dadd( -42.6863, -501.716, 23.7571, 0.07 ) }
    dend_63 { pt3dadd( -43.0731, -502.052, 23.1227, 0.07 ) }
    dend_63 { pt3dadd( -43.4159, -502.342, 22.5251, 0.22 ) }
    dend_63 { pt3dadd( -43.7362, -502.615, 21.9289, 0.52 ) }
    dend_63 { pt3dadd( -44.1821, -503.006, 21.0611, 0.22 ) }
    dend_63 { pt3dadd( -44.7051, -503.465, 19.9308, 0.66 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 85/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -31.7091, -496.423, 24.4782, 0.07 ) }
    dend_62 { pt3dadd( -31.612, -497.56, 24.5739, 0.07 ) }
    dend_62 { pt3dadd( -31.5879, -498.102, 24.6142, 0.15 ) }
    dend_62 { pt3dadd( -31.5988, -499.871, 24.7277, 0.07 ) }
    dend_62 { pt3dadd( -31.6231, -500.43, 24.7548, 0.15 ) }
    dend_62 { pt3dadd( -31.6614, -500.999, 24.7776, 0.15 ) }
    dend_62 { pt3dadd( -31.7751, -502.693, 24.8457, 0.07 ) }
    dend_62 { pt3dadd( -31.8437, -503.347, 24.867, 0.29 ) }
    dend_62 { pt3dadd( -32.0204, -504.605, 24.8951, 0.07 ) }
    dend_62 { pt3dadd( -32.2713, -505.965, 24.8993, 0.07 ) }
    dend_62 { pt3dadd( -32.3721, -506.46, 24.8984, 0.29 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
    ModelViewParmSubset_2 = new SectionList()
    dend_41 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_13 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_41, dend_24, dend_17, dend_14, dend_7, dend_0, axon_0, dend_51, dend_42, dend_36, dend_25, dend_21, dend_18, dend_16, dend_15, dend_11, dend_8, dend_4, dend_1, axon_1, dend_53, dend_52, dend_46, dend_43, dend_38, dend_37, dend_31, dend_26, dend_23, dend_22, dend_20, dend_19, dend_13, dend_12, dend_10, dend_9, dend_6, dend_5, dend_3, dend_2, dend_57, dend_54, dend_50, dend_47, dend_45, dend_44, dend_40, dend_39, dend_35, dend_32, dend_28, dend_27, dend_59, dend_58, dend_56, dend_55, dend_49, dend_48, dend_34, dend_33, dend_30, dend_29, dend_61, dend_60, dend_63, dend_62]}
    ModelViewParmSubset_5 = new SectionList()
    dend_41 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_14 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_7 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_21 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_18 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_16 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_15 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_11 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_8 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_4 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_52 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_43 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_38 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_37 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_31 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_23 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_20 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_19 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_13 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_12 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_6 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_3 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_2 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_57 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_54 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_50 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_47 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_45 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_40 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_39 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_35 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_28 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_27 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_59 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_56 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_49 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_34 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_30 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_29 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_61 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_24 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_41 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_25 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_36 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_17 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_26 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_42 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_1 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_46 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_53 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_32 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_33 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_44 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_9 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_48 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_10 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_22 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_5 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_58 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_55 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_60 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_62 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_63 OneSecGrp_SectionRef_66.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_41, dend_41, dend_41, dend_41, dend_41, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_36, dend_36, dend_36, dend_36, dend_25, dend_25, dend_25, dend_25, dend_25, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_9, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_55, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_27()
}

proc subsets_27() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_28()
}

proc subsets_28() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_29()
}

proc subsets_29() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_30()
}

proc subsets_30() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_31()
}

proc subsets_31() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_32()
}

proc subsets_32() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_33()
}

proc subsets_33() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_34()
}

proc subsets_34() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_35()
}

proc subsets_35() {
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_36()
}

proc subsets_36() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_37()
}

proc subsets_37() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_38()
}

proc subsets_38() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_39()
}

proc subsets_39() {
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_40()
}

proc subsets_40() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_41()
}

proc subsets_41() {
    dend_39 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_42()
}

proc subsets_42() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_43()
}

proc subsets_43() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_44()
}

proc subsets_44() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_45()
}

proc subsets_45() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_46()
}

proc subsets_46() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_55 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_47()
}

proc subsets_47() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_48()
}

proc subsets_48() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_49()
}

proc subsets_49() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_50()
}

proc subsets_50() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_51()
}

proc subsets_51() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_52()
}

proc subsets_52() {
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_14 nseg = 15
    dend_7 nseg = 3
    dend_21 nseg = 13
    dend_18 nseg = 21
    dend_16 nseg = 5
    dend_15 nseg = 7
    dend_11 nseg = 11
    dend_8 nseg = 9
    dend_4 nseg = 15
    dend_52 nseg = 11
    dend_43 nseg = 9
    dend_38 nseg = 9
    dend_37 nseg = 11
    dend_31 nseg = 5
    dend_23 nseg = 7
    dend_20 nseg = 5
    dend_19 nseg = 7
    dend_13 nseg = 7
    dend_12 nseg = 7
    dend_6 nseg = 7
    dend_3 nseg = 21
    dend_2 nseg = 17
    dend_57 nseg = 15
    dend_54 nseg = 17
    dend_50 nseg = 13
    dend_47 nseg = 9
    dend_45 nseg = 9
    dend_40 nseg = 5
    dend_39 nseg = 3
    dend_35 nseg = 9
    dend_28 nseg = 5
    dend_27 nseg = 11
    dend_59 nseg = 3
    dend_56 nseg = 7
    dend_49 nseg = 5
    dend_34 nseg = 11
    dend_30 nseg = 3
    dend_29 nseg = 5
    dend_61 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_LBC_c3984af99c_0_0


