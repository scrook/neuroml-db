// Cell: dSTUT214_L6_BP_c8c05ef109_0_0
/*
{
  "id" : "dSTUT214_L6_BP_c8c05ef109_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.315243, 7.23141, -0.1126, 3.65998", "0.271602, 6.4127, -0.0980763, 4.39552", "0.227961, 5.59398, -0.0835529, 5.25923", "0.18432, 4.77527, -0.0690296, 6.08836", "0.140678, 3.95656, -0.0545062, 6.70354", "0.097037, 3.13785, -0.0399828, 7.14492", "0.0533957, 2.31914, -0.0254594, 7.42546", "0.00975445, 1.50042, -0.010936, 7.58498", "-0.0338868, 0.681711, 0.0035874, 7.49667", "-0.0775281, -0.137001, 0.0181108, 7.35456", "-0.121169, -0.955713, 0.0326342, 7.17071", "-0.164811, -1.77442, 0.0471576, 6.98232", "-0.208452, -2.59314, 0.061681, 6.7901", "-0.252093, -3.41185, 0.0762044, 6.3826", "-0.295735, -4.23056, 0.0907277, 5.97339", "-0.339376, -5.04927, 0.105251, 5.39392", "-0.383017, -5.86799, 0.119775, 4.67949", "-0.426658, -6.6867, 0.134298, 3.83979", "-0.4703, -7.50541, 0.148821, 2.99513", "-0.513941, -8.32412, 0.163345, 2.15046", "-0.557582, -9.14283, 0.177868, 1.23289" ]
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-1.05869, 6.22701, 2.40803, 0.83", "-2.41468, 7.60296, 2.69811, 0.83", "-4.31655, 9.07706, 2.98494, 1.11", "-5.43791, 9.94562, 3.13414, 0.83", "-6.52734, 10.7822, 3.26782, 0.83", "-7.17237, 11.2592, 3.34108, 1.11", "-9.19231, 12.7497, 3.57586, 1.11", "-12.8052, 15.3016, 3.99089, 0.83", "-14.1068, 16.1859, 4.12794, 0.83", "-15.1375, 16.8654, 4.21307, 0.83", "-16.1426, 17.5388, 4.28676, 0.83", "-16.9608, 18.0938, 4.32651, 0.55", "-17.5758, 18.4696, 4.36686, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "2.75131, 5.44701, -5.68197, 0.55", "4.45805, 6.17929, -6.18237, 0.55", "6.92348, 6.71261, -6.73295, 0.55", "8.35408, 6.84724, -7.46148, 0.83", "10.6182, 6.99052, -8.81477, 0.55", "11.7112, 7.05968, -9.46803, 1.38", "14.3986, 7.22973, -11.0742, 0.55", "15.5432, 7.17215, -11.8406, 0.83", "21.4639, 6.11608, -16.1467, 0.55", "22.0367, 5.97407, -16.6204, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.658688, -8.24299, 2.42803, 1.11", "-0.681899, -10.2909, 3.16221, 1.11", "-0.726007, -14.1825, 4.55733, 1.11", "-0.74397, -15.7674, 5.12552, 0.83", "-0.767834, -17.873, 5.88038, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.731312, 7.59701, -1.26197, 1.11", "0.715515, 9.61515, -1.36304, 1.11", "0.625257, 11.3881, -1.37336, 1.11", "0.429, 14.2794, -1.29625, 1.38", "0.419472, 14.4407, -1.28819, 1.38", "0.403334, 16.4466, -1.12242, 0.83", "0.419658, 18.5745, -0.809788, 0.83", "0.509494, 20.9933, -0.111836, 0.83", "0.601559, 21.92, 0.299192, 0.83", "0.722252, 22.5984, 0.692142, 1.11", "1.14558, 24.2651, 1.75362, 0.55", "1.64498, 26.0142, 3.0174, 0.83", "2.40661, 27.8408, 4.53368, 0.55", "2.83374, 28.6117, 5.25526, 0.83", "3.40213, 29.6579, 6.33874, 0.55", "4.06856, 30.9851, 7.76184, 0.55", "4.93392, 32.9697, 9.87165, 0.55", "5.87955, 35.232, 12.1976, 0.55", "6.39199, 36.6956, 13.8524, 0.55", "6.9189, 38.5405, 16.1049, 0.55", "7.01557, 38.9112, 16.6061, 0.83", "7.24085, 39.89, 17.9995, 0.55", "7.46194, 40.6578, 19.112, 0.83", "7.9187, 42.7303, 21.7233, 0.55", "8.16631, 43.4901, 22.5351, 0.83", "8.47619, 44.0613, 23.1456, 0.55", "8.8285, 44.5602, 23.6624, 0.83", "9.67764, 45.5064, 24.6876, 0.83", "10.8571, 46.7913, 25.903, 0.83", "11.6201, 47.6345, 26.5431, 0.55", "12.1933, 48.3548, 27.033, 0.55", "13.7104, 50.2188, 28.2891, 0.83", "14.7121, 51.4154, 29.0506, 0.55", "16.2702, 53.1751, 30.1318, 0.55", "17.7378, 54.6648, 31.0572, 0.55", "19.0734, 55.9349, 31.8454, 0.55", "20.8075, 57.4371, 32.7562, 0.55", "21.8976, 58.196, 33.279, 0.55", "22.6886, 58.637, 33.5413, 0.55", "23.7958, 59.0129, 33.8055, 0.55", "25.5273, 59.2955, 34.0775, 0.55", "26.6349, 59.3361, 34.2127, 0.55", "28.2148, 59.3523, 34.5134, 0.55", "31.1127, 59.4763, 35.3305, 0.55", "33.3127, 59.6806, 36.1229, 0.55", "35.5768, 60.014, 37.0965, 0.55", "36.9753, 60.2813, 37.8355, 0.55", "40.4702, 61.3477, 39.9967, 0.55", "42.4503, 62.1656, 41.4406, 0.55", "43.858, 62.8978, 42.679, 0.55", "44.6802, 63.5273, 43.4662, 0.55", "45.6204, 64.4314, 44.3677, 0.55", "47.2677, 66.1833, 45.7059, 0.55", "47.6709, 66.6034, 45.9479, 0.55", "48.8707, 67.7361, 46.5562, 0.55", "49.9622, 68.9236, 47.1063, 0.83", "50.5615, 69.5814, 47.3956, 0.55", "51.464, 70.6963, 47.7851, 0.83", "55.629, 76.6337, 51.2267, 0.83", "59.269, 83.3057, 53.8112, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500001823673623,
    "numberInternalDivisions" : 7
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.557582, -9.14283, 0.177868, 0.55", "-1.35602, -24.1216, 0.177868, 0.55", "-2.15446, -39.1003, 0.177868, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-17.5758, 18.4696, 4.36686, 0.55", "-19.5958, 19.1419, 3.65836, 0.55", "-21.7923, 19.873, 2.88794, 0.55", "-24.4431, 20.7552, 1.95821, 0.55", "-26.6319, 21.4837, 1.1905, 0.83", "-28.4661, 22.0942, 0.547165, 0.55", "-31.8707, 23.2273, -0.646962, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-17.5758, 18.4696, 4.36686, 0.55", "-19.6706, 18.8244, 4.20191, 0.55", "-21.8883, 19.1418, 4.24991, 0.55", "-24.4, 19.5002, 4.36579, 0.55", "-28.0211, 19.994, 4.8694, 0.55", "-31.0398, 20.3277, 5.51134, 0.55", "-34.1987, 20.6342, 6.32342, 0.55", "-37.2335, 20.735, 7.45118, 0.55", "-39.8304, 20.5732, 8.6916, 0.55", "-43.0462, 20.1539, 10.6042, 0.55", "-44.4334, 19.874, 11.6424, 0.55", "-45.9283, 19.5578, 12.8321, 0.55", "-48.5687, 18.7859, 14.8142, 0.55", "-49.9852, 18.37, 15.6374, 0.55", "-51.4687, 17.8868, 16.4926, 0.55", "-53.2422, 17.3275, 17.3231, 0.55", "-55.1727, 16.7587, 18.1695, 0.55", "-57.9309, 15.9374, 19.3157, 0.55", "-61.6343, 15.0792, 20.4956, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "22.0367, 5.97407, -16.6204, 0.55", "26.7977, 6.36552, -17.6831, 0.55", "29.492, 6.58391, -18.7018, 0.55", "32.12, 6.70559, -19.7838, 0.55", "33.8973, 6.72311, -20.5473, 0.55", "36.4797, 6.6859, -21.6653, 0.55", "41.8055, 6.57415, -24.1809, 0.55", "47.8267, 6.56063, -27.4356, 0.55", "50.693, 6.45842, -29.2737, 0.55", "52.2153, 6.40575, -30.3709, 0.55", "53.8848, 6.38162, -31.6381, 0.55", "56.8418, 6.25412, -33.9183, 0.55", "57.8975, 6.16042, -34.8053, 0.55", "62.388, 6.00879, -38.8696, 0.55", "65.5739, 6.04304, -41.9657, 0.55", "67.4165, 6.1173, -43.786, 0.55", "69.2499, 6.17501, -45.606, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "22.0367, 5.97407, -16.6204, 0.83", "24.1096, 7.61087, -16.8166, 0.83", "25.2975, 8.53601, -16.9871, 0.55", "27.0493, 9.91354, -17.405, 0.83", "28.2251, 10.8659, -17.7297, 0.55", "29.8397, 12.2297, -18.1595, 0.83", "31.7724, 13.923, -18.6053, 0.55", "32.752, 14.7043, -18.7731, 0.55", "35.0379, 16.2014, -18.9331, 0.83", "37.1308, 17.342, -18.7474, 0.55", "38.2962, 17.9857, -18.5231, 0.83", "40.0299, 19.0232, -17.998, 0.55", "42.4967, 20.615, -16.9107, 0.55", "45.9356, 22.6665, -15.1792, 0.55", "49.2174, 24.5359, -13.2632, 0.55", "51.8184, 25.9953, -11.6901, 0.55", "56.1025, 28.4266, -9.07589, 0.55", "59.2212, 30.3134, -7.1049, 0.55", "61.0792, 31.6339, -5.86789, 0.55", "64.4516, 34.4527, -3.61787, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-0.767834, -17.873, 5.88038, 0.83", "-0.939828, -20.8086, 5.7538, 0.83", "-1.1074, -23.6688, 5.63047, 0.83", "-1.29449, -26.8621, 5.49278, 0.83", "-1.39219, -28.5296, 5.42088, 1.38" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-0.767834, -17.873, 5.88038, 0.55", "0.0470853, -19.9354, 7.17915, 0.55", "0.812555, -22.4515, 8.90805, 0.55", "1.33881, -25.7296, 11.3657, 0.55", "1.45966, -27.0004, 12.3662, 0.83", "1.52034, -30.2345, 15.3236, 0.55", "1.41982, -31.8992, 16.8998, 0.55", "1.17343, -35.1348, 20.1104, 0.83", "0.871671, -37.533, 22.6643, 0.55", "0.443325, -39.5036, 24.7628, 0.55", "-0.460754, -43.2318, 28.68, 0.55", "-1.18273, -46.2031, 31.7668, 0.55", "-1.70876, -48.5874, 34.2686, 0.55", "-2.13758, -51.124, 36.827, 0.28", "-2.23249, -52.184, 37.8406, 0.55", "-2.3711, -54.143, 39.5956, 0.28", "-2.23291, -57.2144, 41.8085, 0.55", "-4.14399, -67.3359, 50.0311, 0.55", "-6.18152, -76.6808, 59.0991, 0.55", "-7.35703, -84.3915, 69.7231, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-2.15446, -39.1003, 0.177868, 0.28", "-2.9529, -54.079, 0.177868, 0.28", "-3.75134, -69.0578, 0.177868, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-31.8707, 23.2273, -0.646962, 0.55", "-33.4291, 23.5832, 0.690283, 0.55", "-34.0573, 23.7158, 1.35247, 0.83", "-34.7582, 23.8569, 2.25079, 0.55", "-35.2789, 23.9801, 2.99754, 0.83", "-36.6536, 24.3617, 4.92429, 0.55", "-37.1738, 24.5187, 5.6563, 0.28", "-38.0185, 24.8168, 6.9653, 0.55", "-39.1545, 25.2238, 8.71279, 0.55", "-40.0304, 25.5198, 9.98887, 0.55", "-41.2129, 25.9026, 11.6466, 0.28", "-41.5326, 25.9929, 12.0303, 0.55", "-42.2031, 26.1815, 12.7924, 0.28", "-42.6731, 26.3108, 13.2558, 0.55", "-43.6569, 26.5417, 14.1085, 0.28", "-44.2398, 26.6317, 14.5842, 0.55", "-45.2574, 26.7075, 15.4532, 0.28", "-45.9475, 26.7462, 16.0113, 0.55", "-49.5697, 27.1433, 21.5741, 0.55", "-52.6456, 27.0244, 27.4689, 0.55", "-55.5034, 26.2986, 33.4296, 0.55", "-58.3464, 24.7573, 39.2404, 0.55", "-60.3351, 23.675, 45.4932, 0.55", "-62.8805, 22.7481, 51.5665, 0.55", "-65.5387, 22.9234, 57.6597, 0.55", "-68.1543, 22.5661, 63.7633, 0.55", "-70.6439, 22.6866, 69.9286, 0.55", "-72.7845, 22.7702, 76.2242, 0.55", "-74.1883, 22.1941, 82.6989, 0.55", "-75.6746, 22.2418, 89.1806, 0.55", "-77.2386, 21.5943, 95.6116, 0.55", "-77.9721, 20.7632, 102.168, 0.55", "-77.5703, 20.5118, 108.801, 0.55", "-77.1271, 18.9817, 115.258, 0.55", "-75.7434, 17.3744, 121.561, 0.55", "-74.6998, 16.0483, 127.993, 0.55", "-74.3629, 15.1828, 134.578, 0.55", "-75.4773, 15.2426, 141.134, 0.55", "-75.9675, 14.6144, 147.736, 0.55", "-75.2319, 15.2158, 154.318, 0.55", "-75.6024, 16.2177, 160.881, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-31.8707, 23.2273, -0.646962, 0.55", "-33.7044, 23.5255, -2.32345, 0.55", "-35.2183, 23.8794, -4.26991, 0.55", "-36.684, 24.3977, -6.37362, 0.55", "-37.6018, 24.7223, -7.69093, 0.55", "-39.2759, 25.3144, -10.0939, 0.83", "-40.5007, 25.7475, -11.8519, 0.55", "-41.9949, 26.3178, -14.4668, 0.83", "-42.6373, 26.7734, -15.9867, 0.55" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-61.6343, 15.0792, 20.4956, 0.28", "-62.5487, 13.4592, 20.1916, 0.28", "-62.9877, 12.7635, 20.0032, 0.28", "-63.5616, 11.7803, 19.6991, 0.55", "-64.0354, 10.9157, 19.4383, 0.28", "-64.7344, 9.59833, 19.057, 0.55", "-66.6794, 5.72534, 17.9968, 0.28", "-67.3205, 4.36836, 17.515, 0.55", "-68.2958, 2.27941, 16.7016, 0.28", "-68.8597, 1.03056, 16.158, 0.55", "-69.2502, 0.170162, 15.7625, 0.28", "-69.695, -0.817449, 15.3167, 0.55", "-71.0423, -4.11466, 13.9061, 0.28", "-71.4669, -5.11161, 13.4445, 0.55", "-72.2122, -6.63397, 12.583, 0.28", "-72.822, -7.60739, 11.9494, 0.28", "-73.3637, -8.2567, 11.5049, 0.55", "-75.2346, -10.0776, 10.3168, 0.28", "-76.1001, -10.8144, 9.85391, 0.55", "-78.2187, -12.4902, 8.69672, 0.28", "-80.3337, -13.9715, 7.64046, 0.28", "-82.6307, -15.3821, 6.56381, 0.28", "-83.679, -15.9125, 6.15631, 0.55", "-88.7719, -21.8631, 3.25191, 0.55", "-94.3547, -27.9267, 1.89272, 0.55", "-99.8774, -33.6407, -0.682851, 0.55", "-105.566, -38.8212, -3.93513, 0.55", "-111.353, -43.3865, -7.86573, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-61.6343, 15.0792, 20.4956, 0.55", "-62.3107, 15.0243, 20.6186, 0.55", "-64.2072, 14.8803, 21.2148, 0.55", "-64.9181, 14.8089, 21.478, 0.55", "-66.5889, 14.5903, 22.1248, 0.55", "-69.164, 14.2765, 22.9922, 0.55", "-70.5033, 14.1545, 23.4175, 0.28", "-72.5894, 13.9172, 24.0393, 0.55", "-74.1411, 13.7067, 24.4458, 0.55", "-74.7962, 13.6135, 24.619, 0.28", "-78.7264, 13.0522, 25.6527, 0.55", "-80.5683, 12.7003, 26.0251, 0.28", "-83.0593, 12.2111, 26.3808, 0.28", "-85.2125, 11.8168, 26.5598, 0.55", "-93.5338, 11.5756, 29.0483, 0.55", "-101.525, 11.1472, 32.4311, 0.55", "-109.008, 9.86582, 36.6574, 0.55", "-116.235, 10.0633, 41.4763, 0.55", "-122.313, 10.0209, 47.6857, 0.55", "-127.085, 10.494, 54.9312, 0.55" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "69.2499, 6.17501, -45.606, 0.55", "73.2166, 7.40737, -48.9122, 0.55", "74.4572, 7.75732, -50.0457, 0.55", "76.0027, 8.14057, -51.455, 0.55", "78.7937, 8.84281, -54.1838, 0.55", "81.683, 9.46784, -57.1272, 0.55", "83.079, 9.65071, -58.5505, 0.83", "84.2097, 9.73615, -59.8274, 0.55", "85.0384, 9.74322, -60.8863, 0.83", "86.9782, 9.48688, -63.6429, 0.55", "88.5478, 9.11181, -65.9552, 0.55", "90.3567, 8.64731, -68.5158, 0.55", "92.3786, 8.20449, -71.4017, 0.55", "93.7267, 7.87848, -73.382, 0.55", "95.2437, 7.51577, -75.6724, 0.55", "96.5573, 7.275, -77.7469, 0.55", "97.3904, 7.23328, -79.162, 0.55", "98.3806, 7.3037, -81.9437, 0.55", "98.8965, 7.31115, -83.6845, 0.55", "99.2655, 7.27195, -85.9888, 0.55", "99.694, 7.12151, -89.8885, 0.55", "99.7693, 7.05884, -90.7719, 0.28", "100.786, 6.16629, -101.541, 0.28", "101.177, 5.91126, -104.706, 0.83", "102.799, 4.77913, -115.985, 0.83", "103.652, 4.03815, -121.268, 0.83", "104.089, 3.64178, -123.429, 0.55", "104.627, 3.22934, -125.546, 0.55", "106.304, 2.27434, -129.54, 0.55", "108.175, 1.3407, -133.086, 0.28", "108.806, 1.05106, -133.363, 0.55", "110.245, 0.418456, -133.419, 0.28", "111.153, 0.0675251, -133.308, 0.55", "112.102, -0.326271, -133.112, 0.28", "113.253, -0.751337, -132.814, 0.55", "114.982, -1.26217, -132.537, 0.28", "116.359, -1.70628, -132.367, 0.55", "117.895, -2.07361, -132.285, 0.28", "119.972, -2.5316, -132.357, 0.55", "122.303, -2.96515, -132.57, 0.55", "124.35, -3.29672, -132.889, 0.28", "127.178, -3.70046, -133.485, 0.55", "132.06, -4.16579, -135.017, 0.55", "134.221, -4.21035, -135.937, 0.55", "135.151, -4.17215, -136.427, 0.83", "136.915, -4.05639, -137.521, 0.55", "138.143, -3.91165, -138.35, 0.83", "141.46, -3.42783, -140.602, 0.55", "143.459, -3.26225, -142.054, 0.28", "144.298, -3.26347, -142.579, 0.55", "146.573, -3.53129, -143.792, 0.28", "147.361, -3.71037, -144.175, 0.55", "148.981, -4.23328, -144.722, 0.28", "150.619, -4.98699, -145.01, 0.55", "153.931, -6.80814, -145.01, 0.28", "155.456, -7.74973, -144.851, 0.55", "157.709, -9.30967, -144.512, 0.28", "160.562, -11.2887, -143.971, 0.55", "162.633, -12.6967, -143.541, 0.55", "166.243, -15.0294, -142.712, 0.28", "167.729, -15.8919, -142.487, 0.55", "170.3, -17.1732, -142.368, 0.28", "172.884, -18.2132, -142.399, 0.55", "174.318, -18.5819, -142.592, 0.28", "175.637, -18.7195, -142.839, 0.55", "179.376, -18.8225, -143.85, 0.28", "182.074, -18.7051, -144.583, 0.28", "184.446, -18.4293, -145.225, 0.55", "187.068, -18.0298, -146.052, 0.28", "187.737, -17.893, -146.231, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "69.2499, 6.17501, -45.606, 0.55", "69.693, 3.94538, -47.3617, 0.55", "69.8981, 2.04943, -48.6999, 0.28", "70.0906, 0.297291, -49.7717, 0.55", "70.6936, -3.41862, -52.0901, 0.28", "70.7236, -3.64893, -52.2696, 0.55", "70.9109, -4.84612, -53.3156, 0.28", "70.9631, -5.81722, -54.3415, 0.55", "70.9503, -6.81675, -55.5337, 0.28", "70.8862, -8.17198, -57.2266, 0.55", "70.7258, -11.582, -61.4066, 0.55", "70.5379, -14.6828, -65.2751, 0.55", "70.3606, -17.1601, -68.3694, 0.55", "70.1392, -19.5985, -71.3607, 0.55", "70.0809, -20.2314, -72.104, 0.28", "70.0424, -20.9142, -72.8374, 0.55", "70.0886, -21.8724, -73.7635, 0.28", "70.3647, -23.6126, -75.2656, 0.55", "71.2155, -27.0094, -77.6031, 0.55", "71.6965, -28.8533, -78.6924, 0.28", "72.0714, -30.716, -79.8774, 0.55", "72.3967, -33.3085, -81.6273, 0.28", "72.5193, -35.3915, -83.0829, 0.55", "72.5649, -38.5008, -85.2583, 0.28", "72.6406, -41.7289, -87.4071, 0.55", "72.6847, -46.4096, -90.5664, 0.28", "72.6516, -48.902, -92.2558, 0.55", "72.5723, -51.444, -94.044, 0.28", "72.472, -53.6674, -95.7617, 0.28", "72.4357, -56.4279, -98.1662, 0.55", "72.5911, -58.9997, -100.338, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "64.4516, 34.4527, -3.61787, 0.55", "67.2808, 34.4333, -3.00783, 0.55", "69.3498, 34.3276, -2.75358, 0.55", "73.8828, 34.0286, -2.42883, 0.55", "75.9242, 33.8404, -2.4604, 0.55", "78.1465, 33.6744, -2.61003, 0.55", "81.1236, 33.4893, -3.02423, 0.55", "84.2697, 33.1915, -3.75269, 0.55", "85.9214, 33.0013, -4.32125, 0.55", "89.2737, 32.5831, -5.93242, 0.55", "90.8159, 32.4, -6.72417, 0.55", "94.4351, 31.8955, -8.66858, 0.55", "96.896, 31.4568, -9.95924, 0.55", "98.7091, 31.1281, -10.8263, 0.83", "101.617, 30.498, -12.1725, 0.55", "104.478, 29.7503, -13.3727, 0.83", "106.918, 29.0113, -14.2987, 0.55", "109.088, 28.3924, -15.0129, 0.55", "110.317, 28.098, -15.3553, 0.83", "113.189, 27.4297, -16.0056, 0.28", "114.613, 27.1616, -16.2431, 0.28", "115.997, 26.8109, -16.5381, 0.28", "117.491, 26.4709, -16.866, 0.28", "119.875, 25.9678, -17.4422, 0.28", "120.834, 25.779, -17.6465, 0.55", "123.128, 25.3656, -17.9143, 0.55", "127.264, 24.5958, -18.1881, 0.55", "128.411, 24.3562, -18.2125, 0.55", "129.44, 24.1121, -18.1889, 0.83", "131.671, 23.6615, -17.9647, 0.55", "133.611, 23.2756, -17.7394, 0.55", "135.443, 22.9192, -17.5186, 0.55", "136.863, 22.6161, -17.3857, 0.55", "139.128, 21.9738, -17.2744, 0.55", "141.815, 20.9767, -17.2746, 0.55", "146.027, 18.9503, -17.534, 0.55", "148.365, 17.499, -17.8001, 0.55", "150.419, 15.9024, -18.1099, 0.28", "151.041, 15.2966, -18.229, 0.55", "152.449, 13.5644, -18.5378, 0.28", "153.699, 11.5886, -18.8353, 0.55", "154.928, 9.10094, -18.9955, 0.55", "155.755, 7.4734, -19.0208, 0.28", "156.057, 6.90141, -19.0009, 0.55", "156.834, 5.48501, -18.9316, 0.28", "157.887, 3.65017, -18.7958, 0.55", "160.605, -0.743165, -18.3569, 0.55", "162.016, -2.94929, -18.0874, 0.55", "163.324, -4.9681, -17.8216, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "64.4516, 34.4527, -3.61787, 0.55", "66.5712, 35.0633, -1.97155, 0.55", "67.2519, 35.2553, -1.482, 0.55", "69.8064, 35.8427, 0.232125, 0.55", "72.6502, 36.5568, 2.18774, 0.55", "76.2945, 37.4669, 4.79379, 0.55", "77.3011, 37.7192, 5.50668, 0.55", "79.1168, 38.1007, 6.76893, 0.55", "81.1022, 38.563, 8.07485, 0.55", "83.4033, 39.1627, 9.48559, 0.55", "85.5674, 39.7593, 10.8223, 0.55", "86.7481, 40.1399, 11.4979, 0.55", "88.1288, 40.6277, 12.2878, 0.55", "89.8303, 41.2809, 13.2321, 0.83", "92.6226, 42.3354, 14.4751, 0.55", "94.4831, 42.9557, 15.2073, 0.83", "97.0837, 43.6927, 16.1344, 0.55", "97.8885, 43.8745, 16.4082, 0.55", "100.404, 44.3117, 17.2068, 0.55", "104.942, 44.8165, 18.459, 0.55", "108.291, 45.0004, 19.303, 0.55", "110.958, 45.0265, 20.0352, 0.55", "113.694, 44.9156, 20.8764, 0.55", "114.272, 44.8773, 21.0565, 0.28", "115.449, 44.754, 21.4197, 0.83", "120.293, 44.1803, 22.9399, 0.55", "123.681, 43.7809, 23.9392, 0.55", "126.452, 43.5231, 24.8265, 0.55", "128.108, 43.3646, 25.3723, 0.83", "129.41, 43.2583, 25.8039, 0.28", "130.59, 43.1634, 26.1845, 0.55", "139.481, 44.6365, 30.4149, 0.55", "149.112, 44.632, 32.9347, 0.55", "158.54, 45.8278, 35.8997, 0.55", "167.126, 45.5683, 40.9314, 0.55", "175.289, 43.9292, 46.3895, 0.55", "184.377, 40.911, 49.1102, 0.55", "193.441, 36.9318, 50.1703, 0.55", "203.147, 34.7683, 50.6272, 0.55", "212.766, 32.459, 51.7465, 0.55", "222.635, 31.2421, 52.2287, 0.55", "232.405, 30.48, 53.9831, 0.55", "241.773, 27.9976, 56.2607, 0.55", "251.159, 27.2867, 59.5005, 0.55", "259.959, 28.0015, 64.1002, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-1.39219, -28.5296, 5.42088, 1.38", "1.36861, -31.2269, 5.04651, 1.38" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-1.39219, -28.5296, 5.42088, 0.55", "-2.86619, -30.5095, 5.15569, 0.55", "-4.48201, -33.0373, 4.86804, 0.55", "-5.75523, -34.7184, 4.65543, 0.55", "-6.79027, -36.125, 4.29632, 0.55", "-9.0042, -39.0445, 3.27359, 0.55", "-10.5505, -40.9977, 2.5062, 0.55", "-11.9121, -42.7487, 1.76485, 0.55", "-15.4208, -47.0187, -0.139008, 0.55", "-19.6526, -51.9694, -2.39058, 0.55", "-22.9194, -55.7225, -4.20021, 0.55", "-24.9942, -58.1845, -5.38886, 0.55", "-27.3712, -61.1335, -6.74276, 0.55", "-30.3764, -65.3455, -8.40861, 0.55", "-32.1223, -68.3169, -9.33383, 0.55", "-34.2981, -72.5743, -10.2478, 0.55", "-36.0257, -76.5502, -10.8902, 0.55", "-37.7408, -81.4943, -11.4933, 0.55", "-39.329, -87.2814, -11.9662, 0.55", "-40.1466, -91.6888, -12.1344, 0.55", "-40.439, -93.8758, -12.0478, 0.55", "-40.8854, -99.0019, -11.5071, 0.55", "-41.2462, -103.794, -10.861, 0.55", "-41.4429, -108.611, -9.80927, 0.55", "-41.6156, -111.374, -9.06464, 0.55", "-42.1651, -119.914, -6.44454, 0.55", "-42.212, -120.543, -6.24172, 0.55", "-42.448, -124.391, -4.89194, 0.55", "-43.218, -131.283, -2.38802, 0.55", "-43.4597, -133.59, -1.68731, 0.55", "-43.7946, -137.202, -1.21407, 0.55", "-43.8209, -138.545, -1.33012, 0.55", "-43.535, -143.087, -2.51152, 0.55", "-43.06, -146.028, -3.8464, 0.55", "-41.9788, -150.713, -6.87345, 0.55", "-40.3367, -156.44, -10.9598, 0.28", "-39.8689, -157.856, -12.1521, 0.55", "-39.1132, -160.004, -14.1427, 0.28", "-38.9986, -160.328, -14.4601, 0.55", "-38.4138, -162.101, -16.0522, 0.28", "-38.2845, -162.704, -16.4663, 0.55", "-37.8081, -165.836, -18.0447, 0.28", "-37.689, -166.902, -18.5774, 0.55", "-37.4189, -169.989, -19.955, 0.28", "-37.3304, -170.96, -20.3843, 0.55", "-37.0632, -174.313, -21.8183, 0.28", "-36.9307, -175.855, -22.4839, 0.55" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-7.35703, -84.3915, 69.7231, 0.55", "-10.2337, -91.1668, 77.2227, 0.55", "-13.9085, -96.9106, 85.2182, 0.55", "-17.5147, -103.356, 92.6934, 0.55", "-21.3366, -109.808, 100.054, 0.55", "-24.4366, -117.545, 106.453, 0.55", "-27.2751, -124.978, 113.317, 0.55", "-29.681, -134.115, 117.916, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-7.35703, -84.3915, 69.7231, 0.55", "-6.31868, -90.292, 75.0951, 0.55", "-5.22353, -97.079, 79.277, 0.55", "-5.40806, -103.828, 83.6546, 0.55", "-6.20162, -110.915, 87.3823, 0.55", "-6.65362, -117.998, 91.1751, 0.55", "-6.9384, -124.807, 95.4529, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-42.6373, 26.7734, -15.9867, 0.83", "-42.7345, 28.2018, -18.3702, 0.83", "-43.0285, 31.7207, -23.7552, 0.55", "-43.1265, 33.2748, -25.9193, 0.83", "-43.2006, 34.9697, -28.0961, 0.55", "-43.2283, 36.7812, -30.0373, 0.55", "-43.2113, 37.7227, -30.8781, 0.28", "-43.2152, 38.3834, -31.2511, 0.55", "-43.0736, 40.707, -32.0137, 0.28", "-42.9796, 41.7141, -32.2948, 0.55", "-42.6717, 45.2438, -33.1232, 0.28", "-42.4833, 48.0566, -33.6732, 0.55", "-42.3727, 52.4643, -34.3588, 0.28", "-42.3958, 56.3452, -34.8631, 0.28", "-42.5242, 58.5173, -35.0801, 0.55", "-42.8304, 61.0813, -35.3054, 0.28", "-43.0523, 62.3023, -35.3806, 0.55", "-43.75, 65.1339, -35.6524, 0.28", "-44.3566, 66.9893, -35.9056, 0.28", "-45.0012, 68.7958, -36.202, 0.28", "-45.3053, 69.7526, -36.3699, 0.55", "-46.3415, 73.6209, -37.1828, 0.28", "-47.4293, 78.1974, -38.2614, 0.55", "-47.7826, 79.7787, -38.6448, 0.55", "-48.1566, 81.3695, -38.9897, 0.55", "-49.1413, 84.7206, -39.7413, 0.55", "-49.9403, 86.8965, -40.2538, 0.28", "-50.3429, 87.7086, -40.4394, 0.55", "-51.5862, 89.9029, -40.8609, 0.28", "-53.0265, 92.2079, -41.3857, 0.55", "-55.4479, 95.4598, -42.2104, 0.28", "-56.6257, 96.7912, -42.5698, 0.28", "-58.5609, 98.5715, -43.2198, 0.55", "-60.7382, 100.387, -43.9801, 0.28", "-61.133, 100.664, -44.106, 0.55", "-62.5494, 101.52, -44.5205, 0.28", "-67.4091, 104.226, -45.8102, 0.55", "-74.1874, 107.398, -47.7095, 0.28", "-75.4491, 107.897, -48.1108, 0.55", "-78.9176, 109.136, -49.2374, 0.28", "-80.3798, 109.63, -49.741, 0.28", "-81.6596, 110.019, -50.2255, 0.55", "-85.4355, 110.703, -51.806, 0.28", "-88.0744, 110.967, -52.7781, 0.55" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-42.6373, 26.7734, -15.9867, 0.55", "-42.931, 27.9034, -16.307, 0.55", "-43.1113, 28.5813, -16.4292, 0.28", "-43.3185, 29.0814, -16.3796, 0.55", "-43.7945, 30.2299, -16.2656, 0.28", "-44.1288, 31.0366, -16.1855, 0.55", "-44.745, 32.5237, -16.0378, 0.28", "-45.1321, 33.3405, -15.8089, 0.55", "-46.5016, 35.3672, -14.5053, 0.28" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-111.353, -43.3865, -7.86573, 0.55", "-117.065, -50.2524, -11.1922, 0.55", "-121.317, -57.7333, -15.289, 0.55", "-124.896, -64.2962, -21.2005, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-111.353, -43.3865, -7.86573, 0.55", "-118.255, -49.642, -13.2433, 0.55", "-124.186, -55.7034, -19.8579, 0.55", "-129.705, -61.8574, -26.7393, 0.55" ],
    "parent" : "dend_48",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-127.085, 10.494, 54.9312, 0.55", "-135.908, 10.1875, 61.2784, 0.55", "-145.188, 11.404, 66.8114, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-127.085, 10.494, 54.9312, 0.55", "-138.484, 9.06776, 59.67, 0.55", "-149.934, 9.69636, 64.4558, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "72.5911, -58.9997, -100.338, 0.28", "78.3387, -62.7817, -111.279, 0.28", "78.9077, -63.211, -112.255, 0.55", "79.8683, -63.936, -113.901, 0.28", "80.6772, -64.5464, -115.288, 0.28", "81.7479, -65.3544, -117.123, 0.55", "83.1595, -66.4197, -119.543, 0.55", "85.0665, -68.2652, -120.832, 0.28" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "72.5911, -58.9997, -100.338, 0.55", "73.3554, -60.574, -102.242, 0.55", "73.5561, -61.2682, -103.088, 0.28", "73.8294, -62.4486, -104.565, 0.55", "74.4314, -65.049, -107.818, 0.28", "74.8486, -66.8511, -110.073, 0.55", "75.5554, -69.9043, -113.893, 0.28", "76.2966, -73.5873, -118.893, 0.28", "76.554, -75.269, -121.229, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "163.324, -4.9681, -17.8216, 0.28", "165.216, -6.63734, -16.5865, 0.28", "167.615, -8.77398, -14.7129, 0.28", "169.134, -10.1393, -13.4202, 0.55", "170.04, -10.8632, -12.6551, 0.28", "170.522, -11.2519, -12.2376, 0.28", "172.911, -13.1851, -10.2201, 0.55", "173.457, -13.583, -9.69029, 0.28", "174.759, -14.6146, -8.18258, 0.55", "175.875, -15.536, -6.93109, 0.28", "176.841, -16.2833, -5.93623, 0.55", "177.98, -17.212, -4.8329, 0.55", "179.802, -18.7869, -3.35752, 0.55", "180.242, -19.1817, -3.01498, 0.55", "181.829, -20.674, -1.75837, 0.28", "182.448, -21.2968, -1.26659, 0.55", "183.303, -22.0826, -0.642359, 0.28", "184.513, -23.2241, 0.175828, 0.55", "186.519, -25.1324, 1.12464, 0.28" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "163.324, -4.9681, -17.8216, 0.55", "160.702, -5.31595, -17.8032, 0.55", "158.573, -5.59845, -17.7883, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "1.36861, -31.2269, 5.04651, 0.83", "1.50584, -31.4682, 5.06458, 0.83", "2.99581, -33.5814, 5.45327, 0.83", "4.33945, -35.4311, 5.66912, 0.55", "5.41139, -36.9067, 5.84133, 0.55", "7.68983, -40.0433, 6.20737, 0.83", "10.4534, -43.8477, 6.65134, 0.55", "11.9408, -45.8354, 6.94, 0.83", "14.4999, -48.981, 7.61492, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "1.36861, -31.2269, 5.04651, 0.55", "0.484701, -32.3029, 2.12257, 0.55", "-0.464074, -33.4579, -1.01593, 0.55", "-1.58411, -34.8214, -4.72095, 0.55", "-2.9442, -36.4772, -9.22004, 0.55", "-3.71601, -37.4168, -11.7731, 0.55", "-3.87105, -37.6055, -12.286, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-6.9384, -124.807, 95.4529, 0.55", "-6.52068, -130.96, 99.7543, 0.55", "-5.19758, -137.526, 103.172, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-6.9384, -124.807, 95.4529, 0.55", "-7.14987, -132.869, 100.073, 0.55", "-7.76073, -140.735, 104.986, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-46.5016, 35.3672, -14.5053, 0.28", "-47.7053, 36.3087, -13.2732, 0.28", "-48.1604, 36.6612, -12.749, 0.55", "-49.464, 37.6828, -11.1996, 0.28", "-50.1109, 38.1945, -10.5047, 0.55", "-51.8758, 39.5824, -8.69279, 0.28", "-53.6696, 40.9931, -6.85119, 0.55", "-56.6168, 43.1642, -3.78591, 0.28", "-57.245, 43.6318, -3.13216, 0.55", "-58.6377, 44.7528, -1.74035, 0.28", "-59.1851, 45.2252, -1.19139, 0.55", "-65.0003, 47.9264, 3.38441, 0.55", "-71.4177, 51.5073, 6.22072, 0.55", "-77.0907, 55.346, 10.1106, 0.55", "-81.8806, 60.2925, 13.9368, 0.55", "-87.4167, 64.8533, 17.1928, 0.55", "-93.4452, 68.0808, 21.1031, 0.55", "-98.9176, 70.7162, 26.119, 0.55", "-103.594, 72.6146, 32.1669, 0.55", "-108.341, 74.9698, 37.995, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-46.5016, 35.3672, -14.5053, 0.55", "-48.2379, 34.7739, -13.1528, 0.55", "-49.1371, 34.4306, -12.4447, 0.28", "-49.8062, 34.1752, -11.9178, 0.55", "-50.3639, 33.9623, -11.4786, 0.28", "-50.7545, 33.8132, -11.171, 0.55", "-51.8317, 33.4021, -10.3228, 0.28", "-52.5619, 33.0353, -9.84653, 0.55" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-124.896, -64.2962, -21.2005, 0.55", "-129.195, -73.3053, -24.4635, 0.55", "-133.116, -82.7877, -26.7006, 0.55", "-136.537, -91.8167, -30.8326, 0.55", "-140.794, -101.053, -33.4514, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-124.896, -64.2962, -21.2005, 0.55", "-128.774, -66.4674, -26.5808, 0.55", "-132.435, -67.58, -32.4163, 0.55", "-136.546, -69.6581, -37.659, 0.55", "-141.931, -70.8775, -41.9261, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-129.705, -61.8574, -26.7393, 0.55", "-136.127, -66.2672, -36.2091, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-129.705, -61.8574, -26.7393, 0.55", "-133.79, -71.0706, -30.3909, 0.55" ],
    "parent" : "dend_49",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "85.0665, -68.2652, -120.832, 0.28", "89.3474, -70.4003, -123.521, 0.28", "91.3359, -71.392, -124.771, 0.55", "95.1279, -73.2833, -127.153, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "85.0665, -68.2652, -120.832, 0.55", "84.5908, -69.5479, -122.063, 0.55", "83.6391, -72.1136, -124.526, 0.28", "83.3291, -72.9494, -125.328, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "76.554, -75.269, -121.229, 0.28", "77.206, -77.8731, -124.168, 0.28", "77.5289, -79.1625, -125.623, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "76.554, -75.269, -121.229, 0.55", "74.3866, -75.9889, -120.308, 0.55", "68.3428, -77.9966, -117.74, 0.28", "66.907, -78.4735, -117.13, 0.55", "62.9795, -79.7782, -115.461, 0.28", "60.4478, -80.6191, -114.385, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "14.4999, -48.981, 7.61492, 0.83", "14.5427, -49.1707, 7.60196, 0.83", "15.1175, -51.6504, 7.51058, 0.83", "15.3561, -53.522, 7.50671, 0.83", "15.4075, -55.3395, 7.64311, 0.83", "15.3384, -57.7652, 7.97267, 0.83", "15.1538, -60.5662, 8.42701, 0.83", "14.9101, -63.6925, 9.09423, 0.83", "14.6312, -66.7291, 9.87592, 0.83", "14.0849, -70.4766, 10.6791, 0.83", "13.7745, -72.2059, 10.9267, 0.83", "13.5612, -73.5069, 11.034, 0.83", "13.1183, -76.0072, 11.1738, 0.83", "12.8085, -78.2427, 11.1983, 0.83", "12.5533, -82.9904, 10.8268, 0.83", "12.5457, -85.5851, 10.3117, 0.83", "12.5906, -87.9763, 9.6709, 0.83" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "14.4999, -48.981, 7.61492, 0.55", "13.464, -52.1852, 7.14047, 0.55", "12.6074, -54.5188, 6.93351, 0.55", "12.0292, -56.0122, 6.94851, 0.55", "11.1221, -58.3471, 7.21712, 0.55", "9.3012, -62.9696, 8.05939, 0.55", "7.73159, -66.4817, 9.01878, 0.55", "6.34652, -69.3051, 10.049, 0.55", "4.80126, -72.168, 11.2342, 0.55", "3.44972, -74.5473, 12.3154, 0.28", "2.20018, -76.5014, 13.4311, 0.55", "-0.355437, -80.0774, 15.8535, 0.55", "-2.12347, -82.285, 17.489, 0.55", "-3.12029, -83.5224, 18.3891, 0.55", "-4.32602, -84.9854, 19.3549, 0.83", "-7.81238, -89.319, 21.9576, 0.28", "-8.94856, -90.7521, 22.7864, 0.55", "-10.8963, -93.3309, 24.2451, 0.28", "-11.5206, -94.1272, 24.7444, 0.55", "-12.8827, -95.9886, 25.9295, 0.28", "-13.6183, -97.0444, 26.5399, 0.55", "-15.8013, -100.472, 27.6447, 0.55", "-21.2429, -109.63, 34.7072, 0.55", "-26.4085, -118.344, 42.5008, 0.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-3.87105, -37.6055, -12.286, 0.55", "-4.27404, -38.8935, -16.3667, 0.55", "-4.4157, -39.2006, -17.5427, 0.55", "-4.82605, -39.9675, -20.4344, 0.55", "-5.84708, -41.4919, -26.6192, 0.28", "-6.02702, -41.7, -27.5073, 0.55", "-6.85662, -42.6429, -31.1234, 0.55", "-8.2416, -43.9147, -35.7869, 0.55", "-8.79265, -44.3521, -37.5454, 0.28", "-9.3192, -44.642, -39.0327, 0.28", "-10.4091, -45.0763, -41.3453, 0.55", "-11.6678, -45.4853, -44.2494, 0.28", "-12.7842, -45.6538, -46.9842, 0.55", "-13.6626, -45.6233, -49.0767, 0.55", "-14.2354, -45.4942, -50.5547, 0.55", "-15.8353, -44.9465, -54.9949, 0.55", "-17.5547, -44.0884, -59.6203, 0.55", "-18.2871, -43.6385, -61.5027, 0.28", "-18.9656, -43.2381, -63.3132, 0.55", "-20.375, -42.6341, -66.9523, 0.28", "-20.8581, -42.4617, -68.1672, 0.83", "-21.8482, -42.1081, -70.3297, 0.28", "-22.6898, -41.9535, -71.7345, 0.55", "-23.9433, -41.8015, -73.738, 0.28", "-24.4597, -41.7285, -74.5145, 0.55", "-25.4718, -41.6183, -75.8861, 0.55", "-27.045, -41.2086, -77.8962, 0.55", "-28.1219, -40.8403, -79.1439, 0.28", "-29.0429, -40.3833, -80.0765, 0.55", "-30.1139, -39.6643, -81.1876, 0.28", "-30.284, -39.5272, -81.3777, 0.55", "-31.6152, -38.2322, -83.4456, 0.28", "-32.4742, -37.2692, -85.0863, 0.55", "-33.4185, -35.8733, -87.4929, 0.83", "-34.0723, -34.6938, -89.6355, 0.28", "-34.2136, -34.3948, -90.2249, 0.55", "-35.1796, -32.1639, -94.8999, 0.28", "-35.3116, -31.7871, -95.7661, 0.55", "-35.6227, -30.558, -98.4173, 0.28", "-35.7009, -30.2421, -99.1043, 0.55", "-35.9529, -29.4148, -100.803, 0.28", "-36.1649, -28.8159, -101.963, 0.55", "-36.8202, -27.4631, -104.324, 0.28", "-37.2429, -26.7385, -105.69, 0.55", "-38.238, -25.3386, -108.496, 0.28", "-38.5445, -24.9611, -109.321, 0.55", "-39.058, -24.4555, -110.581, 0.28", "-39.5226, -24.0273, -111.61, 0.55", "-40.5651, -23.159, -113.65, 0.28", "-40.8924, -22.9101, -114.248, 0.55", "-43.4483, -20.9615, -118.527, 0.28", "-44.4214, -20.1587, -119.919, 0.55", "-46.2571, -18.5811, -122.26, 0.28", "-47.1045, -17.8175, -123.284, 0.55", "-49.1492, -16.079, -125.495, 0.28", "-49.9312, -15.4862, -126.267, 0.55", "-52.9092, -13.6802, -128.88, 0.28", "-54.1749, -13.13, -129.951, 0.55", "-56.0254, -12.7247, -131.448, 0.55", "-57.1904, -12.5643, -132.338, 0.55", "-59.6992, -12.3014, -133.963, 0.28", "-62.2708, -12.0623, -135.408, 0.28", "-64.451, -11.8507, -136.552, 0.55", "-67.27, -11.3215, -137.682, 0.28", "-68.7526, -10.868, -138.075, 0.55", "-72.4098, -9.21152, -138.718, 0.28", "-74.4655, -7.98322, -138.672, 0.55", "-75.8919, -6.99404, -138.412, 0.28", "-77.6245, -5.86303, -137.822, 0.55", "-79.8668, -4.37713, -136.893, 0.28", "-80.7194, -3.85057, -136.549, 0.55", "-85.0261, -1.47456, -135.148, 0.28", "-86.4803, -0.721024, -134.688, 0.55", "-89.9735, 0.964189, -133.525, 0.28", "-91.8733, 1.86095, -132.895, 0.55", "-93.4353, 2.59579, -132.379, 0.55", "-95.2904, 3.46025, -131.801, 0.28", "-96.2164, 3.89507, -131.625, 0.55", "-99.2612, 5.43268, -131.195, 0.28", "-100.848, 6.40049, -130.943, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-3.87105, -37.6055, -12.286, 0.55", "-3.18988, -37.68, -13.919, 0.55", "-2.47632, -37.5596, -15.5354, 0.55", "-1.50151, -37.2508, -17.4959, 0.55", "-0.65445, -36.8546, -19.0505, 0.55", "5.49703, -33.033, -28.7239, 0.55", "6.83962, -31.8963, -30.9152, 0.55", "8.74845, -29.9607, -34.1919, 0.55", "10.0805, -28.5061, -36.5185, 0.55", "11.4002, -26.9415, -38.7368, 0.28", "13.5319, -24.309, -42.0003, 0.55", "16.8916, -20.2009, -46.6132, 0.28", "17.1208, -19.9462, -47.1174, 0.55", "17.8888, -19.0613, -50.9034, 0.28", "17.9986, -18.6799, -53.5607, 0.55", "17.8753, -18.5037, -56.4666, 0.55", "17.6141, -18.4578, -61.6996, 0.55", "17.1385, -18.4351, -71.9734, 0.55", "16.9493, -18.4737, -78.8798, 0.55", "16.9496, -18.4992, -81.2652, 0.55", "17.3024, -18.4931, -96.9306, 0.55", "17.5672, -18.4061, -101.163, 0.55", "17.8927, -18.3328, -103.525, 0.55", "19.1451, -18.2304, -108.967, 0.55", "22.9962, -18.5386, -121.877, 0.55", "24.2005, -18.7434, -125.317, 0.28", "25.0452, -18.9278, -127.228, 0.55", "26.3666, -19.3133, -130.043, 0.28", "27.0118, -19.5803, -131.165, 0.55", "29.7742, -20.8093, -133.981, 0.28", "32.5794, -22.6359, -134.701, 0.55", "34.3094, -23.9717, -135.03, 0.28", "35.9591, -25.4804, -135.152, 0.55", "37.4642, -27.1608, -135.145, 0.28", "38.1288, -28.0389, -135.166, 0.55", "39.718, -30.3599, -135.104, 0.28", "40.1222, -31.0578, -135.199, 0.55", "42.3894, -35.0573, -135.981, 0.28", "43.4606, -36.8954, -136.608, 0.55", "45.8395, -40.7919, -138.45, 0.28", "46.7579, -42.2146, -139.312, 0.55", "49.9351, -46.8519, -142.491, 0.28", "50.7084, -47.9771, -143.319, 0.55", "53.0272, -51.5533, -146.07, 0.28", "53.5259, -52.4002, -146.635, 0.55", "54.7651, -54.6503, -148.096, 0.28", "55.4786, -55.9514, -149.085, 0.55", "56.2127, -57.2199, -150.175, 0.55", "57.6818, -59.7512, -152.33, 0.28", "58.7247, -61.2906, -153.888, 0.55", "62.0456, -64.9946, -158.898, 0.28", "63.3218, -66.1541, -160.917, 0.55", "64.2199, -66.8745, -162.289, 0.28", "65.1466, -67.5125, -163.66, 0.55", "68.0621, -69.2425, -167.822, 0.28", "70.3109, -70.5921, -170.901, 0.55", "74.3309, -73.2312, -175.807, 0.28", "75.6006, -74.0494, -177.344, 0.55", "78.1406, -75.5305, -180.048, 0.28", "79.0181, -76.013, -180.873, 0.55", "80.5457, -76.7784, -181.935, 0.28", "81.9315, -77.4143, -182.754, 0.55", "85.7981, -78.9415, -184.581, 0.28", "90.2458, -80.5138, -186.601, 0.28", "92.5354, -81.2095, -187.466, 0.28", "94.8038, -81.8395, -188.47, 0.55", "98.1066, -82.6075, -189.948, 0.28", "99.583, -82.9271, -190.574, 0.83", "103.39, -83.7927, -192.03, 0.28", "105.02, -84.2045, -192.752, 0.55", "112.107, -86.2841, -196.257, 0.28", "115.571, -87.365, -198.292, 0.28", "118.04, -88.1503, -199.937, 0.55", "119.428, -88.6398, -201.061, 0.55", "123.008, -89.9947, -204.352, 0.28", "126.311, -91.4333, -207.58, 0.55", "129.323, -92.851, -210.522, 0.28", "131.992, -94.1792, -213.34, 0.55", "134.204, -95.2459, -215.654, 0.28", "136.047, -95.9659, -217.438, 0.55", "140.567, -97.4116, -221.511, 0.28", "142.896, -98.1396, -223.475, 0.55", "146.444, -99.2432, -226.288, 0.28", "149.369, -100.053, -228.517, 0.55", "156.197, -101.62, -233.74, 0.28", "158.898, -102.086, -236.057, 0.55" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-5.19758, -137.526, 103.172, 0.55", "-3.80316, -146.897, 108.134, 0.55", "-0.565638, -156.638, 111.139, 0.55", "1.58025, -166.243, 115.325, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.19758, -137.526, 103.172, 0.55", "-3.71472, -145.752, 109.862, 0.55", "-4.21281, -153.128, 117.606, 0.55", "-5.39203, -158.811, 126.602, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-7.76073, -140.735, 104.986, 0.55", "-7.08172, -148.701, 109.598, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-7.76073, -140.735, 104.986, 0.55", "-8.67484, -147.904, 109.312, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "12.5906, -87.9763, 9.6709, 0.83", "13.5255, -91.4781, 10.4803, 0.83", "14.3908, -94.4142, 11.4117, 0.83", "15.251, -97.3327, 12.3375, 0.83", "16.0679, -100.104, 13.2167, 0.83", "17.3268, -104.376, 14.5716, 0.83", "18.5766, -108.616, 15.9168, 0.83", "19.5334, -111.398, 17.2234, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "12.5906, -87.9763, 9.6709, 0.55", "14.2249, -89.9792, 10.0587, 0.55", "15.5411, -91.5494, 10.0769, 0.55", "16.4846, -92.717, 9.96023, 0.55", "17.4148, -94.1063, 9.60149, 0.83", "18.4067, -95.6962, 8.97743, 0.55", "19.3769, -97.2513, 8.36702, 0.83", "20.3662, -98.9483, 7.52743, 0.55", "20.9575, -99.9352, 6.94797, 0.83", "22.7887, -103.141, 4.79551, 0.55", "24.0524, -105.678, 2.90527, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-26.4085, -118.344, 42.5008, 0.55", "-30.7811, -125.814, 46.4442, 0.55", "-36.4317, -132.355, 50.4146, 0.55", "-42.7655, -138.014, 54.6966, 0.55", "-49.891, -142.562, 59.0572, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-26.4085, -118.344, 42.5008, 0.55", "-30.9222, -127.374, 49.0463, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "19.5334, -111.398, 17.2234, 0.55", "19.7694, -114.042, 18.0626, 0.55", "20.1511, -117.407, 19.2325, 0.55", "20.5152, -120.585, 20.3194, 0.55", "20.7527, -122.848, 21.0536, 0.55", "21.14, -126.891, 22.2941, 0.55", "22.4448, -138.257, 25.5132, 0.55", "23.0057, -142.116, 26.4513, 0.55", "23.4314, -144.841, 26.9763, 0.55", "23.9791, -147.963, 27.3278, 0.55", "24.392, -150.387, 27.3787, 0.55", "25.5583, -156.05, 27.2863, 0.55", "26.2943, -160.361, 27.1901, 0.55", "26.8421, -163.183, 27.2206, 0.55", "28.1845, -170.487, 27.672, 0.55", "29.0255, -175.392, 28.19, 0.55", "30.0912, -181.699, 29.2196, 0.55", "31.3183, -188.827, 30.9559, 0.55", "32.3138, -193.557, 32.4417, 0.55", "32.9606, -196.344, 33.4049, 0.55", "33.5093, -198.919, 34.279, 0.55", "34.2815, -202.179, 35.2364, 0.55", "36.1209, -210.069, 36.9887, 0.55", "36.953, -213.118, 37.5651, 0.55", "37.8004, -216.522, 38.1728, 0.55", "39.0338, -221.636, 39.053, 0.55", "39.7914, -225.581, 39.7441, 0.55", "40.2984, -229.348, 40.3236, 0.55", "40.6209, -232.952, 40.8561, 0.55", "40.8686, -236.472, 41.4193, 0.55", "41.0634, -238.977, 41.7971, 0.55", "41.4271, -243.079, 42.2763, 0.55", "41.8463, -248.023, 42.4663, 0.55", "42.1369, -250.427, 42.3857, 0.55", "42.4372, -252.542, 42.1579, 0.55", "43.2193, -256.526, 41.5148, 0.55", "43.6992, -259.057, 41.0332, 0.55", "44.3094, -262.169, 40.5623, 0.55", "44.6372, -264.358, 40.3536, 0.55", "45.3561, -270.048, 40.0209, 0.55", "45.747, -274.306, 40.064, 0.55", "46.1667, -280.885, 40.6572, 0.55", "46.473, -285.109, 41.4538, 0.55", "46.7399, -289.54, 42.4309, 0.28", "46.7924, -291.322, 42.8917, 0.28", "46.8433, -295.634, 44.4035, 0.28", "46.8078, -299.607, 46.1149, 0.28", "47.1727, -304.801, 48.9917, 0.28", "49.9873, -316.476, 52.6104, 0.28" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "19.5334, -111.398, 17.2234, 0.55", "20.4505, -111.74, 18.2043, 0.55", "22.2388, -112.663, 20.3749, 0.55", "23.7357, -113.596, 22.3268, 0.28", "25.3034, -114.668, 24.479, 0.55", "26.1329, -115.359, 25.9314, 0.28", "27.4308, -116.614, 28.6316, 0.55", "27.7937, -117.301, 29.9955, 0.28", "27.8792, -117.55, 30.5423, 0.28", "28.0159, -117.899, 31.4916, 0.55", "28.6864, -119.01, 35.0303, 0.28", "29.0035, -119.436, 36.5016, 0.55", "30.2556, -120.656, 40.656, 0.28", "31.0325, -121.241, 42.8101, 0.28", "32.1048, -121.996, 45.3931, 0.55", "33.9263, -123.174, 49.0117, 0.28", "34.2087, -123.328, 49.4632, 0.55", "35.7081, -124.077, 51.5657, 0.28", "35.86, -124.147, 51.7387, 0.55", "37.1794, -125.02, 53.3188, 0.28", "37.7756, -125.507, 54.1151, 0.55", "42.6068, -129.057, 60.7, 0.55" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-49.891, -142.562, 59.0572, 0.55", "-56.2584, -146.989, 64.8624, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-49.891, -142.562, 59.0572, 0.55", "-56.8765, -151.204, 61.3197, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_43", "dend_28", "dend_1", "dend_0", "dend_55", "dend_44", "dend_34", "dend_29", "dend_11", "dend_2", "dend_61", "dend_56", "dend_48", "dend_45", "dend_42", "dend_35", "dend_31", "dend_30", "dend_13", "dend_12", "dend_10", "dend_3", "dend_60", "dend_57", "dend_52", "dend_49", "dend_47", "dend_46", "dend_39", "dend_36", "dend_33", "dend_32", "dend_17", "dend_14", "dend_7", "dend_4", "dend_59", "dend_58", "dend_54", "dend_53", "dend_51", "dend_50", "dend_41", "dend_40", "dend_38", "dend_37", "dend_23", "dend_18", "dend_16", "dend_15", "dend_9", "dend_8", "dend_6", "dend_5", "dend_25", "dend_24", "dend_20", "dend_19", "dend_27", "dend_26", "dend_22", "dend_21" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_11", "dend_11", "dend_11", "dend_11", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "axon_1", "axon_1", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_52", "dend_52", "dend_52", "dend_49", "dend_49", "dend_49", "dend_47", "dend_47", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_7", "dend_7", "dend_4", "dend_4", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_50", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_6", "dend_5", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_21" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.7868198E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.8299998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.936579E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_KdShu2007",
    "ionChannel" : "KdShu2007",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.2499998E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__dSTUT_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate dSTUT214_L6_BP_c8c05ef109_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_28, id: dend_28, parent: soma_0
create dend_28
public dend_28
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_34, id: dend_34, parent: dend_28
create dend_34
public dend_34
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_11, id: dend_11, parent: dend_1
create dend_11
public dend_11
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_61, id: dend_61, parent: dend_55
create dend_61
public dend_61
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_48, id: dend_48, parent: dend_44
create dend_48
public dend_48
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_34
create dend_42
public dend_42
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_2
create dend_10
public dend_10
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_60, id: dend_60, parent: dend_56
create dend_60
public dend_60
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_52, id: dend_52, parent: dend_48
create dend_52
public dend_52
// Section: dend_49, id: dend_49, parent: dend_48
create dend_49
public dend_49
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_17, id: dend_17, parent: dend_13
create dend_17
public dend_17
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_59, id: dend_59, parent: dend_57
create dend_59
public dend_59
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_49
create dend_51
public dend_51
// Section: dend_50, id: dend_50, parent: dend_49
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_34
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_43(0), soma_0(0.4500001823673623)
    connect dend_28(0), soma_0(0.4500001823673623)
    connect dend_1(0), soma_0(0.4500001823673623)
    connect dend_0(0), soma_0(0.4500001823673623)
    connect axon_0(0), soma_0(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_34(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_11(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_61(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_48(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_60(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_52(0), dend_48(1.0)
    connect dend_49(0), dend_48(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_17(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_59(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_49(1.0)
    connect dend_50(0), dend_49(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.315243, 7.23141, -0.1126, 3.65998 ) }
    soma_0 { pt3dadd( 0.271602, 6.4127, -0.0980763, 4.39552 ) }
    soma_0 { pt3dadd( 0.227961, 5.59398, -0.0835529, 5.25923 ) }
    soma_0 { pt3dadd( 0.18432, 4.77527, -0.0690296, 6.08836 ) }
    soma_0 { pt3dadd( 0.140678, 3.95656, -0.0545062, 6.70354 ) }
    soma_0 { pt3dadd( 0.097037, 3.13785, -0.0399828, 7.14492 ) }
    soma_0 { pt3dadd( 0.0533957, 2.31914, -0.0254594, 7.42546 ) }
    soma_0 { pt3dadd( 0.00975445, 1.50042, -0.010936, 7.58498 ) }
    soma_0 { pt3dadd( -0.0338868, 0.681711, 0.0035874, 7.49667 ) }
    soma_0 { pt3dadd( -0.0775281, -0.137001, 0.0181108, 7.35456 ) }
    soma_0 { pt3dadd( -0.121169, -0.955713, 0.0326342, 7.17071 ) }
    soma_0 { pt3dadd( -0.164811, -1.77442, 0.0471576, 6.98232 ) }
    soma_0 { pt3dadd( -0.208452, -2.59314, 0.061681, 6.7901 ) }
    soma_0 { pt3dadd( -0.252093, -3.41185, 0.0762044, 6.3826 ) }
    soma_0 { pt3dadd( -0.295735, -4.23056, 0.0907277, 5.97339 ) }
    soma_0 { pt3dadd( -0.339376, -5.04927, 0.105251, 5.39392 ) }
    soma_0 { pt3dadd( -0.383017, -5.86799, 0.119775, 4.67949 ) }
    soma_0 { pt3dadd( -0.426658, -6.6867, 0.134298, 3.83979 ) }
    soma_0 { pt3dadd( -0.4703, -7.50541, 0.148821, 2.99513 ) }
    soma_0 { pt3dadd( -0.513941, -8.32412, 0.163345, 2.15046 ) }
    soma_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 1.23289 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 21/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -1.05869, 6.22701, 2.40803, 0.83 ) }
    dend_43 { pt3dadd( -2.41468, 7.60296, 2.69811, 0.83 ) }
    dend_43 { pt3dadd( -4.31655, 9.07706, 2.98494, 1.11 ) }
    dend_43 { pt3dadd( -5.43791, 9.94562, 3.13414, 0.83 ) }
    dend_43 { pt3dadd( -6.52734, 10.7822, 3.26782, 0.83 ) }
    dend_43 { pt3dadd( -7.17237, 11.2592, 3.34108, 1.11 ) }
    dend_43 { pt3dadd( -9.19231, 12.7497, 3.57586, 1.11 ) }
    dend_43 { pt3dadd( -12.8052, 15.3016, 3.99089, 0.83 ) }
    dend_43 { pt3dadd( -14.1068, 16.1859, 4.12794, 0.83 ) }
    dend_43 { pt3dadd( -15.1375, 16.8654, 4.21307, 0.83 ) }
    dend_43 { pt3dadd( -16.1426, 17.5388, 4.28676, 0.83 ) }
    dend_43 { pt3dadd( -16.9608, 18.0938, 4.32651, 0.55 ) }
    dend_43 { pt3dadd( -17.5758, 18.4696, 4.36686, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: soma_0 (entry count 34/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 2.75131, 5.44701, -5.68197, 0.55 ) }
    dend_28 { pt3dadd( 4.45805, 6.17929, -6.18237, 0.55 ) }
    dend_28 { pt3dadd( 6.92348, 6.71261, -6.73295, 0.55 ) }
    dend_28 { pt3dadd( 8.35408, 6.84724, -7.46148, 0.83 ) }
    dend_28 { pt3dadd( 10.6182, 6.99052, -8.81477, 0.55 ) }
    dend_28 { pt3dadd( 11.7112, 7.05968, -9.46803, 1.38 ) }
    dend_28 { pt3dadd( 14.3986, 7.22973, -11.0742, 0.55 ) }
    dend_28 { pt3dadd( 15.5432, 7.17215, -11.8406, 0.83 ) }
    dend_28 { pt3dadd( 21.4639, 6.11608, -16.1467, 0.55 ) }
    dend_28 { pt3dadd( 22.0367, 5.97407, -16.6204, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 44/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.658688, -8.24299, 2.42803, 1.11 ) }
    dend_1 { pt3dadd( -0.681899, -10.2909, 3.16221, 1.11 ) }
    dend_1 { pt3dadd( -0.726007, -14.1825, 4.55733, 1.11 ) }
    dend_1 { pt3dadd( -0.74397, -15.7674, 5.12552, 0.83 ) }
    dend_1 { pt3dadd( -0.767834, -17.873, 5.88038, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 49/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.731312, 7.59701, -1.26197, 1.11 ) }
    dend_0 { pt3dadd( 0.715515, 9.61515, -1.36304, 1.11 ) }
    dend_0 { pt3dadd( 0.625257, 11.3881, -1.37336, 1.11 ) }
    dend_0 { pt3dadd( 0.429, 14.2794, -1.29625, 1.38 ) }
    dend_0 { pt3dadd( 0.419472, 14.4407, -1.28819, 1.38 ) }
    dend_0 { pt3dadd( 0.403334, 16.4466, -1.12242, 0.83 ) }
    dend_0 { pt3dadd( 0.419658, 18.5745, -0.809788, 0.83 ) }
    dend_0 { pt3dadd( 0.509494, 20.9933, -0.111836, 0.83 ) }
    dend_0 { pt3dadd( 0.601559, 21.92, 0.299192, 0.83 ) }
    dend_0 { pt3dadd( 0.722252, 22.5984, 0.692142, 1.11 ) }
    dend_0 { pt3dadd( 1.14558, 24.2651, 1.75362, 0.55 ) }
    dend_0 { pt3dadd( 1.64498, 26.0142, 3.0174, 0.83 ) }
    dend_0 { pt3dadd( 2.40661, 27.8408, 4.53368, 0.55 ) }
    dend_0 { pt3dadd( 2.83374, 28.6117, 5.25526, 0.83 ) }
    dend_0 { pt3dadd( 3.40213, 29.6579, 6.33874, 0.55 ) }
    dend_0 { pt3dadd( 4.06856, 30.9851, 7.76184, 0.55 ) }
    dend_0 { pt3dadd( 4.93392, 32.9697, 9.87165, 0.55 ) }
    dend_0 { pt3dadd( 5.87955, 35.232, 12.1976, 0.55 ) }
    dend_0 { pt3dadd( 6.39199, 36.6956, 13.8524, 0.55 ) }
    dend_0 { pt3dadd( 6.9189, 38.5405, 16.1049, 0.55 ) }
    dend_0 { pt3dadd( 7.01557, 38.9112, 16.6061, 0.83 ) }
    dend_0 { pt3dadd( 7.24085, 39.89, 17.9995, 0.55 ) }
    dend_0 { pt3dadd( 7.46194, 40.6578, 19.112, 0.83 ) }
    dend_0 { pt3dadd( 7.9187, 42.7303, 21.7233, 0.55 ) }
    dend_0 { pt3dadd( 8.16631, 43.4901, 22.5351, 0.83 ) }
    dend_0 { pt3dadd( 8.47619, 44.0613, 23.1456, 0.55 ) }
    dend_0 { pt3dadd( 8.8285, 44.5602, 23.6624, 0.83 ) }
    dend_0 { pt3dadd( 9.67764, 45.5064, 24.6876, 0.83 ) }
    dend_0 { pt3dadd( 10.8571, 46.7913, 25.903, 0.83 ) }
    dend_0 { pt3dadd( 11.6201, 47.6345, 26.5431, 0.55 ) }
    dend_0 { pt3dadd( 12.1933, 48.3548, 27.033, 0.55 ) }
    dend_0 { pt3dadd( 13.7104, 50.2188, 28.2891, 0.83 ) }
    dend_0 { pt3dadd( 14.7121, 51.4154, 29.0506, 0.55 ) }
    dend_0 { pt3dadd( 16.2702, 53.1751, 30.1318, 0.55 ) }
    dend_0 { pt3dadd( 17.7378, 54.6648, 31.0572, 0.55 ) }
    dend_0 { pt3dadd( 19.0734, 55.9349, 31.8454, 0.55 ) }
    dend_0 { pt3dadd( 20.8075, 57.4371, 32.7562, 0.55 ) }
    dend_0 { pt3dadd( 21.8976, 58.196, 33.279, 0.55 ) }
    dend_0 { pt3dadd( 22.6886, 58.637, 33.5413, 0.55 ) }
    dend_0 { pt3dadd( 23.7958, 59.0129, 33.8055, 0.55 ) }
    dend_0 { pt3dadd( 25.5273, 59.2955, 34.0775, 0.55 ) }
    dend_0 { pt3dadd( 26.6349, 59.3361, 34.2127, 0.55 ) }
    dend_0 { pt3dadd( 28.2148, 59.3523, 34.5134, 0.55 ) }
    dend_0 { pt3dadd( 31.1127, 59.4763, 35.3305, 0.55 ) }
    dend_0 { pt3dadd( 33.3127, 59.6806, 36.1229, 0.55 ) }
    dend_0 { pt3dadd( 35.5768, 60.014, 37.0965, 0.55 ) }
    dend_0 { pt3dadd( 36.9753, 60.2813, 37.8355, 0.55 ) }
    dend_0 { pt3dadd( 40.4702, 61.3477, 39.9967, 0.55 ) }
    dend_0 { pt3dadd( 42.4503, 62.1656, 41.4406, 0.55 ) }
    dend_0 { pt3dadd( 43.858, 62.8978, 42.679, 0.55 ) }
    dend_0 { pt3dadd( 44.6802, 63.5273, 43.4662, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 45.6204, 64.4314, 44.3677, 0.55 ) }
    dend_0 { pt3dadd( 47.2677, 66.1833, 45.7059, 0.55 ) }
    dend_0 { pt3dadd( 47.6709, 66.6034, 45.9479, 0.55 ) }
    dend_0 { pt3dadd( 48.8707, 67.7361, 46.5562, 0.55 ) }
    dend_0 { pt3dadd( 49.9622, 68.9236, 47.1063, 0.83 ) }
    dend_0 { pt3dadd( 50.5615, 69.5814, 47.3956, 0.55 ) }
    dend_0 { pt3dadd( 51.464, 70.6963, 47.7851, 0.83 ) }
    dend_0 { pt3dadd( 55.629, 76.6337, 51.2267, 0.83 ) }
    dend_0 { pt3dadd( 59.269, 83.3057, 53.8112, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 9/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.557582, -9.14283, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -1.35602, -24.1216, 0.177868, 0.55 ) }
    axon_0 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.55 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 12/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -17.5758, 18.4696, 4.36686, 0.55 ) }
    dend_55 { pt3dadd( -19.5958, 19.1419, 3.65836, 0.55 ) }
    dend_55 { pt3dadd( -21.7923, 19.873, 2.88794, 0.55 ) }
    dend_55 { pt3dadd( -24.4431, 20.7552, 1.95821, 0.55 ) }
    dend_55 { pt3dadd( -26.6319, 21.4837, 1.1905, 0.83 ) }
    dend_55 { pt3dadd( -28.4661, 22.0942, 0.547165, 0.55 ) }
    dend_55 { pt3dadd( -31.8707, 23.2273, -0.646962, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 19/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -17.5758, 18.4696, 4.36686, 0.55 ) }
    dend_44 { pt3dadd( -19.6706, 18.8244, 4.20191, 0.55 ) }
    dend_44 { pt3dadd( -21.8883, 19.1418, 4.24991, 0.55 ) }
    dend_44 { pt3dadd( -24.4, 19.5002, 4.36579, 0.55 ) }
    dend_44 { pt3dadd( -28.0211, 19.994, 4.8694, 0.55 ) }
    dend_44 { pt3dadd( -31.0398, 20.3277, 5.51134, 0.55 ) }
    dend_44 { pt3dadd( -34.1987, 20.6342, 6.32342, 0.55 ) }
    dend_44 { pt3dadd( -37.2335, 20.735, 7.45118, 0.55 ) }
    dend_44 { pt3dadd( -39.8304, 20.5732, 8.6916, 0.55 ) }
    dend_44 { pt3dadd( -43.0462, 20.1539, 10.6042, 0.55 ) }
    dend_44 { pt3dadd( -44.4334, 19.874, 11.6424, 0.55 ) }
    dend_44 { pt3dadd( -45.9283, 19.5578, 12.8321, 0.55 ) }
    dend_44 { pt3dadd( -48.5687, 18.7859, 14.8142, 0.55 ) }
    dend_44 { pt3dadd( -49.9852, 18.37, 15.6374, 0.55 ) }
    dend_44 { pt3dadd( -51.4687, 17.8868, 16.4926, 0.55 ) }
    dend_44 { pt3dadd( -53.2422, 17.3275, 17.3231, 0.55 ) }
    dend_44 { pt3dadd( -55.1727, 16.7587, 18.1695, 0.55 ) }
    dend_44 { pt3dadd( -57.9309, 15.9374, 19.3157, 0.55 ) }
    dend_44 { pt3dadd( -61.6343, 15.0792, 20.4956, 0.55 ) }
    // Section: dend_34, id: dend_34, parent: dend_28 (entry count 38/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 22.0367, 5.97407, -16.6204, 0.55 ) }
    dend_34 { pt3dadd( 26.7977, 6.36552, -17.6831, 0.55 ) }
    dend_34 { pt3dadd( 29.492, 6.58391, -18.7018, 0.55 ) }
    dend_34 { pt3dadd( 32.12, 6.70559, -19.7838, 0.55 ) }
    dend_34 { pt3dadd( 33.8973, 6.72311, -20.5473, 0.55 ) }
    dend_34 { pt3dadd( 36.4797, 6.6859, -21.6653, 0.55 ) }
    dend_34 { pt3dadd( 41.8055, 6.57415, -24.1809, 0.55 ) }
    dend_34 { pt3dadd( 47.8267, 6.56063, -27.4356, 0.55 ) }
    dend_34 { pt3dadd( 50.693, 6.45842, -29.2737, 0.55 ) }
    dend_34 { pt3dadd( 52.2153, 6.40575, -30.3709, 0.55 ) }
    dend_34 { pt3dadd( 53.8848, 6.38162, -31.6381, 0.55 ) }
    dend_34 { pt3dadd( 56.8418, 6.25412, -33.9183, 0.55 ) }
    dend_34 { pt3dadd( 57.8975, 6.16042, -34.8053, 0.55 ) }
    dend_34 { pt3dadd( 62.388, 6.00879, -38.8696, 0.55 ) }
    dend_34 { pt3dadd( 65.5739, 6.04304, -41.9657, 0.55 ) }
    dend_34 { pt3dadd( 67.4165, 6.1173, -43.786, 0.55 ) }
    dend_34 { pt3dadd( 69.2499, 6.17501, -45.606, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 55/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 22.0367, 5.97407, -16.6204, 0.83 ) }
    dend_29 { pt3dadd( 24.1096, 7.61087, -16.8166, 0.83 ) }
    dend_29 { pt3dadd( 25.2975, 8.53601, -16.9871, 0.55 ) }
    dend_29 { pt3dadd( 27.0493, 9.91354, -17.405, 0.83 ) }
    dend_29 { pt3dadd( 28.2251, 10.8659, -17.7297, 0.55 ) }
    dend_29 { pt3dadd( 29.8397, 12.2297, -18.1595, 0.83 ) }
    dend_29 { pt3dadd( 31.7724, 13.923, -18.6053, 0.55 ) }
    dend_29 { pt3dadd( 32.752, 14.7043, -18.7731, 0.55 ) }
    dend_29 { pt3dadd( 35.0379, 16.2014, -18.9331, 0.83 ) }
    dend_29 { pt3dadd( 37.1308, 17.342, -18.7474, 0.55 ) }
    dend_29 { pt3dadd( 38.2962, 17.9857, -18.5231, 0.83 ) }
    dend_29 { pt3dadd( 40.0299, 19.0232, -17.998, 0.55 ) }
    dend_29 { pt3dadd( 42.4967, 20.615, -16.9107, 0.55 ) }
    dend_29 { pt3dadd( 45.9356, 22.6665, -15.1792, 0.55 ) }
    dend_29 { pt3dadd( 49.2174, 24.5359, -13.2632, 0.55 ) }
    dend_29 { pt3dadd( 51.8184, 25.9953, -11.6901, 0.55 ) }
    dend_29 { pt3dadd( 56.1025, 28.4266, -9.07589, 0.55 ) }
    dend_29 { pt3dadd( 59.2212, 30.3134, -7.1049, 0.55 ) }
    dend_29 { pt3dadd( 61.0792, 31.6339, -5.86789, 0.55 ) }
    dend_29 { pt3dadd( 64.4516, 34.4527, -3.61787, 0.55 ) }
    // Section: dend_11, id: dend_11, parent: dend_1 (entry count 75/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -0.767834, -17.873, 5.88038, 0.83 ) }
    dend_11 { pt3dadd( -0.939828, -20.8086, 5.7538, 0.83 ) }
    dend_11 { pt3dadd( -1.1074, -23.6688, 5.63047, 0.83 ) }
    dend_11 { pt3dadd( -1.29449, -26.8621, 5.49278, 0.83 ) }
    dend_11 { pt3dadd( -1.39219, -28.5296, 5.42088, 1.38 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 80/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -0.767834, -17.873, 5.88038, 0.55 ) }
    dend_2 { pt3dadd( 0.0470853, -19.9354, 7.17915, 0.55 ) }
    dend_2 { pt3dadd( 0.812555, -22.4515, 8.90805, 0.55 ) }
    dend_2 { pt3dadd( 1.33881, -25.7296, 11.3657, 0.55 ) }
    dend_2 { pt3dadd( 1.45966, -27.0004, 12.3662, 0.83 ) }
    dend_2 { pt3dadd( 1.52034, -30.2345, 15.3236, 0.55 ) }
    dend_2 { pt3dadd( 1.41982, -31.8992, 16.8998, 0.55 ) }
    dend_2 { pt3dadd( 1.17343, -35.1348, 20.1104, 0.83 ) }
    dend_2 { pt3dadd( 0.871671, -37.533, 22.6643, 0.55 ) }
    dend_2 { pt3dadd( 0.443325, -39.5036, 24.7628, 0.55 ) }
    dend_2 { pt3dadd( -0.460754, -43.2318, 28.68, 0.55 ) }
    dend_2 { pt3dadd( -1.18273, -46.2031, 31.7668, 0.55 ) }
    dend_2 { pt3dadd( -1.70876, -48.5874, 34.2686, 0.55 ) }
    dend_2 { pt3dadd( -2.13758, -51.124, 36.827, 0.28 ) }
    dend_2 { pt3dadd( -2.23249, -52.184, 37.8406, 0.55 ) }
    dend_2 { pt3dadd( -2.3711, -54.143, 39.5956, 0.28 ) }
    dend_2 { pt3dadd( -2.23291, -57.2144, 41.8085, 0.55 ) }
    dend_2 { pt3dadd( -4.14399, -67.3359, 50.0311, 0.55 ) }
    dend_2 { pt3dadd( -6.18152, -76.6808, 59.0991, 0.55 ) }
    dend_2 { pt3dadd( -7.35703, -84.3915, 69.7231, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 0/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -2.15446, -39.1003, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -2.9529, -54.079, 0.177868, 0.28 ) }
    axon_1 { pt3dadd( -3.75134, -69.0578, 0.177868, 0.28 ) }
    // Section: dend_61, id: dend_61, parent: dend_55 (entry count 3/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -31.8707, 23.2273, -0.646962, 0.55 ) }
    dend_61 { pt3dadd( -33.4291, 23.5832, 0.690283, 0.55 ) }
    dend_61 { pt3dadd( -34.0573, 23.7158, 1.35247, 0.83 ) }
    dend_61 { pt3dadd( -34.7582, 23.8569, 2.25079, 0.55 ) }
    dend_61 { pt3dadd( -35.2789, 23.9801, 2.99754, 0.83 ) }
    dend_61 { pt3dadd( -36.6536, 24.3617, 4.92429, 0.55 ) }
    dend_61 { pt3dadd( -37.1738, 24.5187, 5.6563, 0.28 ) }
    dend_61 { pt3dadd( -38.0185, 24.8168, 6.9653, 0.55 ) }
    dend_61 { pt3dadd( -39.1545, 25.2238, 8.71279, 0.55 ) }
    dend_61 { pt3dadd( -40.0304, 25.5198, 9.98887, 0.55 ) }
    dend_61 { pt3dadd( -41.2129, 25.9026, 11.6466, 0.28 ) }
    dend_61 { pt3dadd( -41.5326, 25.9929, 12.0303, 0.55 ) }
    dend_61 { pt3dadd( -42.2031, 26.1815, 12.7924, 0.28 ) }
    dend_61 { pt3dadd( -42.6731, 26.3108, 13.2558, 0.55 ) }
    dend_61 { pt3dadd( -43.6569, 26.5417, 14.1085, 0.28 ) }
    dend_61 { pt3dadd( -44.2398, 26.6317, 14.5842, 0.55 ) }
    dend_61 { pt3dadd( -45.2574, 26.7075, 15.4532, 0.28 ) }
    dend_61 { pt3dadd( -45.9475, 26.7462, 16.0113, 0.55 ) }
    dend_61 { pt3dadd( -49.5697, 27.1433, 21.5741, 0.55 ) }
    dend_61 { pt3dadd( -52.6456, 27.0244, 27.4689, 0.55 ) }
    dend_61 { pt3dadd( -55.5034, 26.2986, 33.4296, 0.55 ) }
    dend_61 { pt3dadd( -58.3464, 24.7573, 39.2404, 0.55 ) }
    dend_61 { pt3dadd( -60.3351, 23.675, 45.4932, 0.55 ) }
    dend_61 { pt3dadd( -62.8805, 22.7481, 51.5665, 0.55 ) }
    dend_61 { pt3dadd( -65.5387, 22.9234, 57.6597, 0.55 ) }
    dend_61 { pt3dadd( -68.1543, 22.5661, 63.7633, 0.55 ) }
    dend_61 { pt3dadd( -70.6439, 22.6866, 69.9286, 0.55 ) }
    dend_61 { pt3dadd( -72.7845, 22.7702, 76.2242, 0.55 ) }
    dend_61 { pt3dadd( -74.1883, 22.1941, 82.6989, 0.55 ) }
    dend_61 { pt3dadd( -75.6746, 22.2418, 89.1806, 0.55 ) }
    dend_61 { pt3dadd( -77.2386, 21.5943, 95.6116, 0.55 ) }
    dend_61 { pt3dadd( -77.9721, 20.7632, 102.168, 0.55 ) }
    dend_61 { pt3dadd( -77.5703, 20.5118, 108.801, 0.55 ) }
    dend_61 { pt3dadd( -77.1271, 18.9817, 115.258, 0.55 ) }
    dend_61 { pt3dadd( -75.7434, 17.3744, 121.561, 0.55 ) }
    dend_61 { pt3dadd( -74.6998, 16.0483, 127.993, 0.55 ) }
    dend_61 { pt3dadd( -74.3629, 15.1828, 134.578, 0.55 ) }
    dend_61 { pt3dadd( -75.4773, 15.2426, 141.134, 0.55 ) }
    dend_61 { pt3dadd( -75.9675, 14.6144, 147.736, 0.55 ) }
    dend_61 { pt3dadd( -75.2319, 15.2158, 154.318, 0.55 ) }
    dend_61 { pt3dadd( -75.6024, 16.2177, 160.881, 0.55 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 44/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -31.8707, 23.2273, -0.646962, 0.55 ) }
    dend_56 { pt3dadd( -33.7044, 23.5255, -2.32345, 0.55 ) }
    dend_56 { pt3dadd( -35.2183, 23.8794, -4.26991, 0.55 ) }
    dend_56 { pt3dadd( -36.684, 24.3977, -6.37362, 0.55 ) }
    dend_56 { pt3dadd( -37.6018, 24.7223, -7.69093, 0.55 ) }
    dend_56 { pt3dadd( -39.2759, 25.3144, -10.0939, 0.83 ) }
    dend_56 { pt3dadd( -40.5007, 25.7475, -11.8519, 0.55 ) }
    dend_56 { pt3dadd( -41.9949, 26.3178, -14.4668, 0.83 ) }
    dend_56 { pt3dadd( -42.6373, 26.7734, -15.9867, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_44 (entry count 53/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -61.6343, 15.0792, 20.4956, 0.28 ) }
    dend_48 { pt3dadd( -62.5487, 13.4592, 20.1916, 0.28 ) }
    dend_48 { pt3dadd( -62.9877, 12.7635, 20.0032, 0.28 ) }
    dend_48 { pt3dadd( -63.5616, 11.7803, 19.6991, 0.55 ) }
    dend_48 { pt3dadd( -64.0354, 10.9157, 19.4383, 0.28 ) }
    dend_48 { pt3dadd( -64.7344, 9.59833, 19.057, 0.55 ) }
    dend_48 { pt3dadd( -66.6794, 5.72534, 17.9968, 0.28 ) }
    dend_48 { pt3dadd( -67.3205, 4.36836, 17.515, 0.55 ) }
    dend_48 { pt3dadd( -68.2958, 2.27941, 16.7016, 0.28 ) }
    dend_48 { pt3dadd( -68.8597, 1.03056, 16.158, 0.55 ) }
    dend_48 { pt3dadd( -69.2502, 0.170162, 15.7625, 0.28 ) }
    dend_48 { pt3dadd( -69.695, -0.817449, 15.3167, 0.55 ) }
    dend_48 { pt3dadd( -71.0423, -4.11466, 13.9061, 0.28 ) }
    dend_48 { pt3dadd( -71.4669, -5.11161, 13.4445, 0.55 ) }
    dend_48 { pt3dadd( -72.2122, -6.63397, 12.583, 0.28 ) }
    dend_48 { pt3dadd( -72.822, -7.60739, 11.9494, 0.28 ) }
    dend_48 { pt3dadd( -73.3637, -8.2567, 11.5049, 0.55 ) }
    dend_48 { pt3dadd( -75.2346, -10.0776, 10.3168, 0.28 ) }
    dend_48 { pt3dadd( -76.1001, -10.8144, 9.85391, 0.55 ) }
    dend_48 { pt3dadd( -78.2187, -12.4902, 8.69672, 0.28 ) }
    dend_48 { pt3dadd( -80.3337, -13.9715, 7.64046, 0.28 ) }
    dend_48 { pt3dadd( -82.6307, -15.3821, 6.56381, 0.28 ) }
    dend_48 { pt3dadd( -83.679, -15.9125, 6.15631, 0.55 ) }
    dend_48 { pt3dadd( -88.7719, -21.8631, 3.25191, 0.55 ) }
    dend_48 { pt3dadd( -94.3547, -27.9267, 1.89272, 0.55 ) }
    dend_48 { pt3dadd( -99.8774, -33.6407, -0.682851, 0.55 ) }
    dend_48 { pt3dadd( -105.566, -38.8212, -3.93513, 0.55 ) }
    dend_48 { pt3dadd( -111.353, -43.3865, -7.86573, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 81/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -61.6343, 15.0792, 20.4956, 0.55 ) }
    dend_45 { pt3dadd( -62.3107, 15.0243, 20.6186, 0.55 ) }
    dend_45 { pt3dadd( -64.2072, 14.8803, 21.2148, 0.55 ) }
    dend_45 { pt3dadd( -64.9181, 14.8089, 21.478, 0.55 ) }
    dend_45 { pt3dadd( -66.5889, 14.5903, 22.1248, 0.55 ) }
    dend_45 { pt3dadd( -69.164, 14.2765, 22.9922, 0.55 ) }
    dend_45 { pt3dadd( -70.5033, 14.1545, 23.4175, 0.28 ) }
    dend_45 { pt3dadd( -72.5894, 13.9172, 24.0393, 0.55 ) }
    dend_45 { pt3dadd( -74.1411, 13.7067, 24.4458, 0.55 ) }
    dend_45 { pt3dadd( -74.7962, 13.6135, 24.619, 0.28 ) }
    dend_45 { pt3dadd( -78.7264, 13.0522, 25.6527, 0.55 ) }
    dend_45 { pt3dadd( -80.5683, 12.7003, 26.0251, 0.28 ) }
    dend_45 { pt3dadd( -83.0593, 12.2111, 26.3808, 0.28 ) }
    dend_45 { pt3dadd( -85.2125, 11.8168, 26.5598, 0.55 ) }
    dend_45 { pt3dadd( -93.5338, 11.5756, 29.0483, 0.55 ) }
    dend_45 { pt3dadd( -101.525, 11.1472, 32.4311, 0.55 ) }
    dend_45 { pt3dadd( -109.008, 9.86582, 36.6574, 0.55 ) }
    dend_45 { pt3dadd( -116.235, 10.0633, 41.4763, 0.55 ) }
    dend_45 { pt3dadd( -122.313, 10.0209, 47.6857, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_45 { pt3dadd( -127.085, 10.494, 54.9312, 0.55 ) }
    // Section: dend_42, id: dend_42, parent: dend_34 (entry count 1/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 69.2499, 6.17501, -45.606, 0.55 ) }
    dend_42 { pt3dadd( 73.2166, 7.40737, -48.9122, 0.55 ) }
    dend_42 { pt3dadd( 74.4572, 7.75732, -50.0457, 0.55 ) }
    dend_42 { pt3dadd( 76.0027, 8.14057, -51.455, 0.55 ) }
    dend_42 { pt3dadd( 78.7937, 8.84281, -54.1838, 0.55 ) }
    dend_42 { pt3dadd( 81.683, 9.46784, -57.1272, 0.55 ) }
    dend_42 { pt3dadd( 83.079, 9.65071, -58.5505, 0.83 ) }
    dend_42 { pt3dadd( 84.2097, 9.73615, -59.8274, 0.55 ) }
    dend_42 { pt3dadd( 85.0384, 9.74322, -60.8863, 0.83 ) }
    dend_42 { pt3dadd( 86.9782, 9.48688, -63.6429, 0.55 ) }
    dend_42 { pt3dadd( 88.5478, 9.11181, -65.9552, 0.55 ) }
    dend_42 { pt3dadd( 90.3567, 8.64731, -68.5158, 0.55 ) }
    dend_42 { pt3dadd( 92.3786, 8.20449, -71.4017, 0.55 ) }
    dend_42 { pt3dadd( 93.7267, 7.87848, -73.382, 0.55 ) }
    dend_42 { pt3dadd( 95.2437, 7.51577, -75.6724, 0.55 ) }
    dend_42 { pt3dadd( 96.5573, 7.275, -77.7469, 0.55 ) }
    dend_42 { pt3dadd( 97.3904, 7.23328, -79.162, 0.55 ) }
    dend_42 { pt3dadd( 98.3806, 7.3037, -81.9437, 0.55 ) }
    dend_42 { pt3dadd( 98.8965, 7.31115, -83.6845, 0.55 ) }
    dend_42 { pt3dadd( 99.2655, 7.27195, -85.9888, 0.55 ) }
    dend_42 { pt3dadd( 99.694, 7.12151, -89.8885, 0.55 ) }
    dend_42 { pt3dadd( 99.7693, 7.05884, -90.7719, 0.28 ) }
    dend_42 { pt3dadd( 100.786, 6.16629, -101.541, 0.28 ) }
    dend_42 { pt3dadd( 101.177, 5.91126, -104.706, 0.83 ) }
    dend_42 { pt3dadd( 102.799, 4.77913, -115.985, 0.83 ) }
    dend_42 { pt3dadd( 103.652, 4.03815, -121.268, 0.83 ) }
    dend_42 { pt3dadd( 104.089, 3.64178, -123.429, 0.55 ) }
    dend_42 { pt3dadd( 104.627, 3.22934, -125.546, 0.55 ) }
    dend_42 { pt3dadd( 106.304, 2.27434, -129.54, 0.55 ) }
    dend_42 { pt3dadd( 108.175, 1.3407, -133.086, 0.28 ) }
    dend_42 { pt3dadd( 108.806, 1.05106, -133.363, 0.55 ) }
    dend_42 { pt3dadd( 110.245, 0.418456, -133.419, 0.28 ) }
    dend_42 { pt3dadd( 111.153, 0.0675251, -133.308, 0.55 ) }
    dend_42 { pt3dadd( 112.102, -0.326271, -133.112, 0.28 ) }
    dend_42 { pt3dadd( 113.253, -0.751337, -132.814, 0.55 ) }
    dend_42 { pt3dadd( 114.982, -1.26217, -132.537, 0.28 ) }
    dend_42 { pt3dadd( 116.359, -1.70628, -132.367, 0.55 ) }
    dend_42 { pt3dadd( 117.895, -2.07361, -132.285, 0.28 ) }
    dend_42 { pt3dadd( 119.972, -2.5316, -132.357, 0.55 ) }
    dend_42 { pt3dadd( 122.303, -2.96515, -132.57, 0.55 ) }
    dend_42 { pt3dadd( 124.35, -3.29672, -132.889, 0.28 ) }
    dend_42 { pt3dadd( 127.178, -3.70046, -133.485, 0.55 ) }
    dend_42 { pt3dadd( 132.06, -4.16579, -135.017, 0.55 ) }
    dend_42 { pt3dadd( 134.221, -4.21035, -135.937, 0.55 ) }
    dend_42 { pt3dadd( 135.151, -4.17215, -136.427, 0.83 ) }
    dend_42 { pt3dadd( 136.915, -4.05639, -137.521, 0.55 ) }
    dend_42 { pt3dadd( 138.143, -3.91165, -138.35, 0.83 ) }
    dend_42 { pt3dadd( 141.46, -3.42783, -140.602, 0.55 ) }
    dend_42 { pt3dadd( 143.459, -3.26225, -142.054, 0.28 ) }
    dend_42 { pt3dadd( 144.298, -3.26347, -142.579, 0.55 ) }
    dend_42 { pt3dadd( 146.573, -3.53129, -143.792, 0.28 ) }
    dend_42 { pt3dadd( 147.361, -3.71037, -144.175, 0.55 ) }
    dend_42 { pt3dadd( 148.981, -4.23328, -144.722, 0.28 ) }
    dend_42 { pt3dadd( 150.619, -4.98699, -145.01, 0.55 ) }
    dend_42 { pt3dadd( 153.931, -6.80814, -145.01, 0.28 ) }
    dend_42 { pt3dadd( 155.456, -7.74973, -144.851, 0.55 ) }
    dend_42 { pt3dadd( 157.709, -9.30967, -144.512, 0.28 ) }
    dend_42 { pt3dadd( 160.562, -11.2887, -143.971, 0.55 ) }
    dend_42 { pt3dadd( 162.633, -12.6967, -143.541, 0.55 ) }
    dend_42 { pt3dadd( 166.243, -15.0294, -142.712, 0.28 ) }
    dend_42 { pt3dadd( 167.729, -15.8919, -142.487, 0.55 ) }
    dend_42 { pt3dadd( 170.3, -17.1732, -142.368, 0.28 ) }
    dend_42 { pt3dadd( 172.884, -18.2132, -142.399, 0.55 ) }
    dend_42 { pt3dadd( 174.318, -18.5819, -142.592, 0.28 ) }
    dend_42 { pt3dadd( 175.637, -18.7195, -142.839, 0.55 ) }
    dend_42 { pt3dadd( 179.376, -18.8225, -143.85, 0.28 ) }
    dend_42 { pt3dadd( 182.074, -18.7051, -144.583, 0.28 ) }
    dend_42 { pt3dadd( 184.446, -18.4293, -145.225, 0.55 ) }
    dend_42 { pt3dadd( 187.068, -18.0298, -146.052, 0.28 ) }
    dend_42 { pt3dadd( 187.737, -17.893, -146.231, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 69.2499, 6.17501, -45.606, 0.55 ) }
    dend_35 { pt3dadd( 69.693, 3.94538, -47.3617, 0.55 ) }
    dend_35 { pt3dadd( 69.8981, 2.04943, -48.6999, 0.28 ) }
    dend_35 { pt3dadd( 70.0906, 0.297291, -49.7717, 0.55 ) }
    dend_35 { pt3dadd( 70.6936, -3.41862, -52.0901, 0.28 ) }
    dend_35 { pt3dadd( 70.7236, -3.64893, -52.2696, 0.55 ) }
    dend_35 { pt3dadd( 70.9109, -4.84612, -53.3156, 0.28 ) }
    dend_35 { pt3dadd( 70.9631, -5.81722, -54.3415, 0.55 ) }
    dend_35 { pt3dadd( 70.9503, -6.81675, -55.5337, 0.28 ) }
    dend_35 { pt3dadd( 70.8862, -8.17198, -57.2266, 0.55 ) }
    dend_35 { pt3dadd( 70.7258, -11.582, -61.4066, 0.55 ) }
    dend_35 { pt3dadd( 70.5379, -14.6828, -65.2751, 0.55 ) }
    dend_35 { pt3dadd( 70.3606, -17.1601, -68.3694, 0.55 ) }
    dend_35 { pt3dadd( 70.1392, -19.5985, -71.3607, 0.55 ) }
    dend_35 { pt3dadd( 70.0809, -20.2314, -72.104, 0.28 ) }
    dend_35 { pt3dadd( 70.0424, -20.9142, -72.8374, 0.55 ) }
    dend_35 { pt3dadd( 70.0886, -21.8724, -73.7635, 0.28 ) }
    dend_35 { pt3dadd( 70.3647, -23.6126, -75.2656, 0.55 ) }
    dend_35 { pt3dadd( 71.2155, -27.0094, -77.6031, 0.55 ) }
    dend_35 { pt3dadd( 71.6965, -28.8533, -78.6924, 0.28 ) }
    dend_35 { pt3dadd( 72.0714, -30.716, -79.8774, 0.55 ) }
    dend_35 { pt3dadd( 72.3967, -33.3085, -81.6273, 0.28 ) }
    dend_35 { pt3dadd( 72.5193, -35.3915, -83.0829, 0.55 ) }
    dend_35 { pt3dadd( 72.5649, -38.5008, -85.2583, 0.28 ) }
    dend_35 { pt3dadd( 72.6406, -41.7289, -87.4071, 0.55 ) }
    dend_35 { pt3dadd( 72.6847, -46.4096, -90.5664, 0.28 ) }
    dend_35 { pt3dadd( 72.6516, -48.902, -92.2558, 0.55 ) }
    dend_35 { pt3dadd( 72.5723, -51.444, -94.044, 0.28 ) }
    dend_35 { pt3dadd( 72.472, -53.6674, -95.7617, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 72.4357, -56.4279, -98.1662, 0.55 ) }
    dend_35 { pt3dadd( 72.5911, -58.9997, -100.338, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 2/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 64.4516, 34.4527, -3.61787, 0.55 ) }
    dend_31 { pt3dadd( 67.2808, 34.4333, -3.00783, 0.55 ) }
    dend_31 { pt3dadd( 69.3498, 34.3276, -2.75358, 0.55 ) }
    dend_31 { pt3dadd( 73.8828, 34.0286, -2.42883, 0.55 ) }
    dend_31 { pt3dadd( 75.9242, 33.8404, -2.4604, 0.55 ) }
    dend_31 { pt3dadd( 78.1465, 33.6744, -2.61003, 0.55 ) }
    dend_31 { pt3dadd( 81.1236, 33.4893, -3.02423, 0.55 ) }
    dend_31 { pt3dadd( 84.2697, 33.1915, -3.75269, 0.55 ) }
    dend_31 { pt3dadd( 85.9214, 33.0013, -4.32125, 0.55 ) }
    dend_31 { pt3dadd( 89.2737, 32.5831, -5.93242, 0.55 ) }
    dend_31 { pt3dadd( 90.8159, 32.4, -6.72417, 0.55 ) }
    dend_31 { pt3dadd( 94.4351, 31.8955, -8.66858, 0.55 ) }
    dend_31 { pt3dadd( 96.896, 31.4568, -9.95924, 0.55 ) }
    dend_31 { pt3dadd( 98.7091, 31.1281, -10.8263, 0.83 ) }
    dend_31 { pt3dadd( 101.617, 30.498, -12.1725, 0.55 ) }
    dend_31 { pt3dadd( 104.478, 29.7503, -13.3727, 0.83 ) }
    dend_31 { pt3dadd( 106.918, 29.0113, -14.2987, 0.55 ) }
    dend_31 { pt3dadd( 109.088, 28.3924, -15.0129, 0.55 ) }
    dend_31 { pt3dadd( 110.317, 28.098, -15.3553, 0.83 ) }
    dend_31 { pt3dadd( 113.189, 27.4297, -16.0056, 0.28 ) }
    dend_31 { pt3dadd( 114.613, 27.1616, -16.2431, 0.28 ) }
    dend_31 { pt3dadd( 115.997, 26.8109, -16.5381, 0.28 ) }
    dend_31 { pt3dadd( 117.491, 26.4709, -16.866, 0.28 ) }
    dend_31 { pt3dadd( 119.875, 25.9678, -17.4422, 0.28 ) }
    dend_31 { pt3dadd( 120.834, 25.779, -17.6465, 0.55 ) }
    dend_31 { pt3dadd( 123.128, 25.3656, -17.9143, 0.55 ) }
    dend_31 { pt3dadd( 127.264, 24.5958, -18.1881, 0.55 ) }
    dend_31 { pt3dadd( 128.411, 24.3562, -18.2125, 0.55 ) }
    dend_31 { pt3dadd( 129.44, 24.1121, -18.1889, 0.83 ) }
    dend_31 { pt3dadd( 131.671, 23.6615, -17.9647, 0.55 ) }
    dend_31 { pt3dadd( 133.611, 23.2756, -17.7394, 0.55 ) }
    dend_31 { pt3dadd( 135.443, 22.9192, -17.5186, 0.55 ) }
    dend_31 { pt3dadd( 136.863, 22.6161, -17.3857, 0.55 ) }
    dend_31 { pt3dadd( 139.128, 21.9738, -17.2744, 0.55 ) }
    dend_31 { pt3dadd( 141.815, 20.9767, -17.2746, 0.55 ) }
    dend_31 { pt3dadd( 146.027, 18.9503, -17.534, 0.55 ) }
    dend_31 { pt3dadd( 148.365, 17.499, -17.8001, 0.55 ) }
    dend_31 { pt3dadd( 150.419, 15.9024, -18.1099, 0.28 ) }
    dend_31 { pt3dadd( 151.041, 15.2966, -18.229, 0.55 ) }
    dend_31 { pt3dadd( 152.449, 13.5644, -18.5378, 0.28 ) }
    dend_31 { pt3dadd( 153.699, 11.5886, -18.8353, 0.55 ) }
    dend_31 { pt3dadd( 154.928, 9.10094, -18.9955, 0.55 ) }
    dend_31 { pt3dadd( 155.755, 7.4734, -19.0208, 0.28 ) }
    dend_31 { pt3dadd( 156.057, 6.90141, -19.0009, 0.55 ) }
    dend_31 { pt3dadd( 156.834, 5.48501, -18.9316, 0.28 ) }
    dend_31 { pt3dadd( 157.887, 3.65017, -18.7958, 0.55 ) }
    dend_31 { pt3dadd( 160.605, -0.743165, -18.3569, 0.55 ) }
    dend_31 { pt3dadd( 162.016, -2.94929, -18.0874, 0.55 ) }
    dend_31 { pt3dadd( 163.324, -4.9681, -17.8216, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 51/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 64.4516, 34.4527, -3.61787, 0.55 ) }
    dend_30 { pt3dadd( 66.5712, 35.0633, -1.97155, 0.55 ) }
    dend_30 { pt3dadd( 67.2519, 35.2553, -1.482, 0.55 ) }
    dend_30 { pt3dadd( 69.8064, 35.8427, 0.232125, 0.55 ) }
    dend_30 { pt3dadd( 72.6502, 36.5568, 2.18774, 0.55 ) }
    dend_30 { pt3dadd( 76.2945, 37.4669, 4.79379, 0.55 ) }
    dend_30 { pt3dadd( 77.3011, 37.7192, 5.50668, 0.55 ) }
    dend_30 { pt3dadd( 79.1168, 38.1007, 6.76893, 0.55 ) }
    dend_30 { pt3dadd( 81.1022, 38.563, 8.07485, 0.55 ) }
    dend_30 { pt3dadd( 83.4033, 39.1627, 9.48559, 0.55 ) }
    dend_30 { pt3dadd( 85.5674, 39.7593, 10.8223, 0.55 ) }
    dend_30 { pt3dadd( 86.7481, 40.1399, 11.4979, 0.55 ) }
    dend_30 { pt3dadd( 88.1288, 40.6277, 12.2878, 0.55 ) }
    dend_30 { pt3dadd( 89.8303, 41.2809, 13.2321, 0.83 ) }
    dend_30 { pt3dadd( 92.6226, 42.3354, 14.4751, 0.55 ) }
    dend_30 { pt3dadd( 94.4831, 42.9557, 15.2073, 0.83 ) }
    dend_30 { pt3dadd( 97.0837, 43.6927, 16.1344, 0.55 ) }
    dend_30 { pt3dadd( 97.8885, 43.8745, 16.4082, 0.55 ) }
    dend_30 { pt3dadd( 100.404, 44.3117, 17.2068, 0.55 ) }
    dend_30 { pt3dadd( 104.942, 44.8165, 18.459, 0.55 ) }
    dend_30 { pt3dadd( 108.291, 45.0004, 19.303, 0.55 ) }
    dend_30 { pt3dadd( 110.958, 45.0265, 20.0352, 0.55 ) }
    dend_30 { pt3dadd( 113.694, 44.9156, 20.8764, 0.55 ) }
    dend_30 { pt3dadd( 114.272, 44.8773, 21.0565, 0.28 ) }
    dend_30 { pt3dadd( 115.449, 44.754, 21.4197, 0.83 ) }
    dend_30 { pt3dadd( 120.293, 44.1803, 22.9399, 0.55 ) }
    dend_30 { pt3dadd( 123.681, 43.7809, 23.9392, 0.55 ) }
    dend_30 { pt3dadd( 126.452, 43.5231, 24.8265, 0.55 ) }
    dend_30 { pt3dadd( 128.108, 43.3646, 25.3723, 0.83 ) }
    dend_30 { pt3dadd( 129.41, 43.2583, 25.8039, 0.28 ) }
    dend_30 { pt3dadd( 130.59, 43.1634, 26.1845, 0.55 ) }
    dend_30 { pt3dadd( 139.481, 44.6365, 30.4149, 0.55 ) }
    dend_30 { pt3dadd( 149.112, 44.632, 32.9347, 0.55 ) }
    dend_30 { pt3dadd( 158.54, 45.8278, 35.8997, 0.55 ) }
    dend_30 { pt3dadd( 167.126, 45.5683, 40.9314, 0.55 ) }
    dend_30 { pt3dadd( 175.289, 43.9292, 46.3895, 0.55 ) }
    dend_30 { pt3dadd( 184.377, 40.911, 49.1102, 0.55 ) }
    dend_30 { pt3dadd( 193.441, 36.9318, 50.1703, 0.55 ) }
    dend_30 { pt3dadd( 203.147, 34.7683, 50.6272, 0.55 ) }
    dend_30 { pt3dadd( 212.766, 32.459, 51.7465, 0.55 ) }
    dend_30 { pt3dadd( 222.635, 31.2421, 52.2287, 0.55 ) }
    dend_30 { pt3dadd( 232.405, 30.48, 53.9831, 0.55 ) }
    dend_30 { pt3dadd( 241.773, 27.9976, 56.2607, 0.55 ) }
    dend_30 { pt3dadd( 251.159, 27.2867, 59.5005, 0.55 ) }
    dend_30 { pt3dadd( 259.959, 28.0015, 64.1002, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 96/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -1.39219, -28.5296, 5.42088, 1.38 ) }
    dend_13 { pt3dadd( 1.36861, -31.2269, 5.04651, 1.38 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 98/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -1.39219, -28.5296, 5.42088, 0.55 ) }
    dend_12 { pt3dadd( -2.86619, -30.5095, 5.15569, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_12 { pt3dadd( -4.48201, -33.0373, 4.86804, 0.55 ) }
    dend_12 { pt3dadd( -5.75523, -34.7184, 4.65543, 0.55 ) }
    dend_12 { pt3dadd( -6.79027, -36.125, 4.29632, 0.55 ) }
    dend_12 { pt3dadd( -9.0042, -39.0445, 3.27359, 0.55 ) }
    dend_12 { pt3dadd( -10.5505, -40.9977, 2.5062, 0.55 ) }
    dend_12 { pt3dadd( -11.9121, -42.7487, 1.76485, 0.55 ) }
    dend_12 { pt3dadd( -15.4208, -47.0187, -0.139008, 0.55 ) }
    dend_12 { pt3dadd( -19.6526, -51.9694, -2.39058, 0.55 ) }
    dend_12 { pt3dadd( -22.9194, -55.7225, -4.20021, 0.55 ) }
    dend_12 { pt3dadd( -24.9942, -58.1845, -5.38886, 0.55 ) }
    dend_12 { pt3dadd( -27.3712, -61.1335, -6.74276, 0.55 ) }
    dend_12 { pt3dadd( -30.3764, -65.3455, -8.40861, 0.55 ) }
    dend_12 { pt3dadd( -32.1223, -68.3169, -9.33383, 0.55 ) }
    dend_12 { pt3dadd( -34.2981, -72.5743, -10.2478, 0.55 ) }
    dend_12 { pt3dadd( -36.0257, -76.5502, -10.8902, 0.55 ) }
    dend_12 { pt3dadd( -37.7408, -81.4943, -11.4933, 0.55 ) }
    dend_12 { pt3dadd( -39.329, -87.2814, -11.9662, 0.55 ) }
    dend_12 { pt3dadd( -40.1466, -91.6888, -12.1344, 0.55 ) }
    dend_12 { pt3dadd( -40.439, -93.8758, -12.0478, 0.55 ) }
    dend_12 { pt3dadd( -40.8854, -99.0019, -11.5071, 0.55 ) }
    dend_12 { pt3dadd( -41.2462, -103.794, -10.861, 0.55 ) }
    dend_12 { pt3dadd( -41.4429, -108.611, -9.80927, 0.55 ) }
    dend_12 { pt3dadd( -41.6156, -111.374, -9.06464, 0.55 ) }
    dend_12 { pt3dadd( -42.1651, -119.914, -6.44454, 0.55 ) }
    dend_12 { pt3dadd( -42.212, -120.543, -6.24172, 0.55 ) }
    dend_12 { pt3dadd( -42.448, -124.391, -4.89194, 0.55 ) }
    dend_12 { pt3dadd( -43.218, -131.283, -2.38802, 0.55 ) }
    dend_12 { pt3dadd( -43.4597, -133.59, -1.68731, 0.55 ) }
    dend_12 { pt3dadd( -43.7946, -137.202, -1.21407, 0.55 ) }
    dend_12 { pt3dadd( -43.8209, -138.545, -1.33012, 0.55 ) }
    dend_12 { pt3dadd( -43.535, -143.087, -2.51152, 0.55 ) }
    dend_12 { pt3dadd( -43.06, -146.028, -3.8464, 0.55 ) }
    dend_12 { pt3dadd( -41.9788, -150.713, -6.87345, 0.55 ) }
    dend_12 { pt3dadd( -40.3367, -156.44, -10.9598, 0.28 ) }
    dend_12 { pt3dadd( -39.8689, -157.856, -12.1521, 0.55 ) }
    dend_12 { pt3dadd( -39.1132, -160.004, -14.1427, 0.28 ) }
    dend_12 { pt3dadd( -38.9986, -160.328, -14.4601, 0.55 ) }
    dend_12 { pt3dadd( -38.4138, -162.101, -16.0522, 0.28 ) }
    dend_12 { pt3dadd( -38.2845, -162.704, -16.4663, 0.55 ) }
    dend_12 { pt3dadd( -37.8081, -165.836, -18.0447, 0.28 ) }
    dend_12 { pt3dadd( -37.689, -166.902, -18.5774, 0.55 ) }
    dend_12 { pt3dadd( -37.4189, -169.989, -19.955, 0.28 ) }
    dend_12 { pt3dadd( -37.3304, -170.96, -20.3843, 0.55 ) }
    dend_12 { pt3dadd( -37.0632, -174.313, -21.8183, 0.28 ) }
    dend_12 { pt3dadd( -36.9307, -175.855, -22.4839, 0.55 ) }
    // Section: dend_10, id: dend_10, parent: dend_2 (entry count 45/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -7.35703, -84.3915, 69.7231, 0.55 ) }
    dend_10 { pt3dadd( -10.2337, -91.1668, 77.2227, 0.55 ) }
    dend_10 { pt3dadd( -13.9085, -96.9106, 85.2182, 0.55 ) }
    dend_10 { pt3dadd( -17.5147, -103.356, 92.6934, 0.55 ) }
    dend_10 { pt3dadd( -21.3366, -109.808, 100.054, 0.55 ) }
    dend_10 { pt3dadd( -24.4366, -117.545, 106.453, 0.55 ) }
    dend_10 { pt3dadd( -27.2751, -124.978, 113.317, 0.55 ) }
    dend_10 { pt3dadd( -29.681, -134.115, 117.916, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 53/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -7.35703, -84.3915, 69.7231, 0.55 ) }
    dend_3 { pt3dadd( -6.31868, -90.292, 75.0951, 0.55 ) }
    dend_3 { pt3dadd( -5.22353, -97.079, 79.277, 0.55 ) }
    dend_3 { pt3dadd( -5.40806, -103.828, 83.6546, 0.55 ) }
    dend_3 { pt3dadd( -6.20162, -110.915, 87.3823, 0.55 ) }
    dend_3 { pt3dadd( -6.65362, -117.998, 91.1751, 0.55 ) }
    dend_3 { pt3dadd( -6.9384, -124.807, 95.4529, 0.55 ) }
    // Section: dend_60, id: dend_60, parent: dend_56 (entry count 60/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -42.6373, 26.7734, -15.9867, 0.83 ) }
    dend_60 { pt3dadd( -42.7345, 28.2018, -18.3702, 0.83 ) }
    dend_60 { pt3dadd( -43.0285, 31.7207, -23.7552, 0.55 ) }
    dend_60 { pt3dadd( -43.1265, 33.2748, -25.9193, 0.83 ) }
    dend_60 { pt3dadd( -43.2006, 34.9697, -28.0961, 0.55 ) }
    dend_60 { pt3dadd( -43.2283, 36.7812, -30.0373, 0.55 ) }
    dend_60 { pt3dadd( -43.2113, 37.7227, -30.8781, 0.28 ) }
    dend_60 { pt3dadd( -43.2152, 38.3834, -31.2511, 0.55 ) }
    dend_60 { pt3dadd( -43.0736, 40.707, -32.0137, 0.28 ) }
    dend_60 { pt3dadd( -42.9796, 41.7141, -32.2948, 0.55 ) }
    dend_60 { pt3dadd( -42.6717, 45.2438, -33.1232, 0.28 ) }
    dend_60 { pt3dadd( -42.4833, 48.0566, -33.6732, 0.55 ) }
    dend_60 { pt3dadd( -42.3727, 52.4643, -34.3588, 0.28 ) }
    dend_60 { pt3dadd( -42.3958, 56.3452, -34.8631, 0.28 ) }
    dend_60 { pt3dadd( -42.5242, 58.5173, -35.0801, 0.55 ) }
    dend_60 { pt3dadd( -42.8304, 61.0813, -35.3054, 0.28 ) }
    dend_60 { pt3dadd( -43.0523, 62.3023, -35.3806, 0.55 ) }
    dend_60 { pt3dadd( -43.75, 65.1339, -35.6524, 0.28 ) }
    dend_60 { pt3dadd( -44.3566, 66.9893, -35.9056, 0.28 ) }
    dend_60 { pt3dadd( -45.0012, 68.7958, -36.202, 0.28 ) }
    dend_60 { pt3dadd( -45.3053, 69.7526, -36.3699, 0.55 ) }
    dend_60 { pt3dadd( -46.3415, 73.6209, -37.1828, 0.28 ) }
    dend_60 { pt3dadd( -47.4293, 78.1974, -38.2614, 0.55 ) }
    dend_60 { pt3dadd( -47.7826, 79.7787, -38.6448, 0.55 ) }
    dend_60 { pt3dadd( -48.1566, 81.3695, -38.9897, 0.55 ) }
    dend_60 { pt3dadd( -49.1413, 84.7206, -39.7413, 0.55 ) }
    dend_60 { pt3dadd( -49.9403, 86.8965, -40.2538, 0.28 ) }
    dend_60 { pt3dadd( -50.3429, 87.7086, -40.4394, 0.55 ) }
    dend_60 { pt3dadd( -51.5862, 89.9029, -40.8609, 0.28 ) }
    dend_60 { pt3dadd( -53.0265, 92.2079, -41.3857, 0.55 ) }
    dend_60 { pt3dadd( -55.4479, 95.4598, -42.2104, 0.28 ) }
    dend_60 { pt3dadd( -56.6257, 96.7912, -42.5698, 0.28 ) }
    dend_60 { pt3dadd( -58.5609, 98.5715, -43.2198, 0.55 ) }
    dend_60 { pt3dadd( -60.7382, 100.387, -43.9801, 0.28 ) }
    dend_60 { pt3dadd( -61.133, 100.664, -44.106, 0.55 ) }
    dend_60 { pt3dadd( -62.5494, 101.52, -44.5205, 0.28 ) }
    dend_60 { pt3dadd( -67.4091, 104.226, -45.8102, 0.55 ) }
    dend_60 { pt3dadd( -74.1874, 107.398, -47.7095, 0.28 ) }
    dend_60 { pt3dadd( -75.4491, 107.897, -48.1108, 0.55 ) }
    dend_60 { pt3dadd( -78.9176, 109.136, -49.2374, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_60 { pt3dadd( -80.3798, 109.63, -49.741, 0.28 ) }
    dend_60 { pt3dadd( -81.6596, 110.019, -50.2255, 0.55 ) }
    dend_60 { pt3dadd( -85.4355, 110.703, -51.806, 0.28 ) }
    dend_60 { pt3dadd( -88.0744, 110.967, -52.7781, 0.55 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 4/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -42.6373, 26.7734, -15.9867, 0.55 ) }
    dend_57 { pt3dadd( -42.931, 27.9034, -16.307, 0.55 ) }
    dend_57 { pt3dadd( -43.1113, 28.5813, -16.4292, 0.28 ) }
    dend_57 { pt3dadd( -43.3185, 29.0814, -16.3796, 0.55 ) }
    dend_57 { pt3dadd( -43.7945, 30.2299, -16.2656, 0.28 ) }
    dend_57 { pt3dadd( -44.1288, 31.0366, -16.1855, 0.55 ) }
    dend_57 { pt3dadd( -44.745, 32.5237, -16.0378, 0.28 ) }
    dend_57 { pt3dadd( -45.1321, 33.3405, -15.8089, 0.55 ) }
    dend_57 { pt3dadd( -46.5016, 35.3672, -14.5053, 0.28 ) }
    // Section: dend_52, id: dend_52, parent: dend_48 (entry count 13/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -111.353, -43.3865, -7.86573, 0.55 ) }
    dend_52 { pt3dadd( -117.065, -50.2524, -11.1922, 0.55 ) }
    dend_52 { pt3dadd( -121.317, -57.7333, -15.289, 0.55 ) }
    dend_52 { pt3dadd( -124.896, -64.2962, -21.2005, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_48 (entry count 17/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -111.353, -43.3865, -7.86573, 0.55 ) }
    dend_49 { pt3dadd( -118.255, -49.642, -13.2433, 0.55 ) }
    dend_49 { pt3dadd( -124.186, -55.7034, -19.8579, 0.55 ) }
    dend_49 { pt3dadd( -129.705, -61.8574, -26.7393, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 21/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -127.085, 10.494, 54.9312, 0.55 ) }
    dend_47 { pt3dadd( -135.908, 10.1875, 61.2784, 0.55 ) }
    dend_47 { pt3dadd( -145.188, 11.404, 66.8114, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -127.085, 10.494, 54.9312, 0.55 ) }
    dend_46 { pt3dadd( -138.484, 9.06776, 59.67, 0.55 ) }
    dend_46 { pt3dadd( -149.934, 9.69636, 64.4558, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 27/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 72.5911, -58.9997, -100.338, 0.28 ) }
    dend_39 { pt3dadd( 78.3387, -62.7817, -111.279, 0.28 ) }
    dend_39 { pt3dadd( 78.9077, -63.211, -112.255, 0.55 ) }
    dend_39 { pt3dadd( 79.8683, -63.936, -113.901, 0.28 ) }
    dend_39 { pt3dadd( 80.6772, -64.5464, -115.288, 0.28 ) }
    dend_39 { pt3dadd( 81.7479, -65.3544, -117.123, 0.55 ) }
    dend_39 { pt3dadd( 83.1595, -66.4197, -119.543, 0.55 ) }
    dend_39 { pt3dadd( 85.0665, -68.2652, -120.832, 0.28 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 35/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 72.5911, -58.9997, -100.338, 0.55 ) }
    dend_36 { pt3dadd( 73.3554, -60.574, -102.242, 0.55 ) }
    dend_36 { pt3dadd( 73.5561, -61.2682, -103.088, 0.28 ) }
    dend_36 { pt3dadd( 73.8294, -62.4486, -104.565, 0.55 ) }
    dend_36 { pt3dadd( 74.4314, -65.049, -107.818, 0.28 ) }
    dend_36 { pt3dadd( 74.8486, -66.8511, -110.073, 0.55 ) }
    dend_36 { pt3dadd( 75.5554, -69.9043, -113.893, 0.28 ) }
    dend_36 { pt3dadd( 76.2966, -73.5873, -118.893, 0.28 ) }
    dend_36 { pt3dadd( 76.554, -75.269, -121.229, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 44/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 163.324, -4.9681, -17.8216, 0.28 ) }
    dend_33 { pt3dadd( 165.216, -6.63734, -16.5865, 0.28 ) }
    dend_33 { pt3dadd( 167.615, -8.77398, -14.7129, 0.28 ) }
    dend_33 { pt3dadd( 169.134, -10.1393, -13.4202, 0.55 ) }
    dend_33 { pt3dadd( 170.04, -10.8632, -12.6551, 0.28 ) }
    dend_33 { pt3dadd( 170.522, -11.2519, -12.2376, 0.28 ) }
    dend_33 { pt3dadd( 172.911, -13.1851, -10.2201, 0.55 ) }
    dend_33 { pt3dadd( 173.457, -13.583, -9.69029, 0.28 ) }
    dend_33 { pt3dadd( 174.759, -14.6146, -8.18258, 0.55 ) }
    dend_33 { pt3dadd( 175.875, -15.536, -6.93109, 0.28 ) }
    dend_33 { pt3dadd( 176.841, -16.2833, -5.93623, 0.55 ) }
    dend_33 { pt3dadd( 177.98, -17.212, -4.8329, 0.55 ) }
    dend_33 { pt3dadd( 179.802, -18.7869, -3.35752, 0.55 ) }
    dend_33 { pt3dadd( 180.242, -19.1817, -3.01498, 0.55 ) }
    dend_33 { pt3dadd( 181.829, -20.674, -1.75837, 0.28 ) }
    dend_33 { pt3dadd( 182.448, -21.2968, -1.26659, 0.55 ) }
    dend_33 { pt3dadd( 183.303, -22.0826, -0.642359, 0.28 ) }
    dend_33 { pt3dadd( 184.513, -23.2241, 0.175828, 0.55 ) }
    dend_33 { pt3dadd( 186.519, -25.1324, 1.12464, 0.28 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 163.324, -4.9681, -17.8216, 0.55 ) }
    dend_32 { pt3dadd( 160.702, -5.31595, -17.8032, 0.55 ) }
    dend_32 { pt3dadd( 158.573, -5.59845, -17.7883, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_13 (entry count 66/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 1.36861, -31.2269, 5.04651, 0.83 ) }
    dend_17 { pt3dadd( 1.50584, -31.4682, 5.06458, 0.83 ) }
    dend_17 { pt3dadd( 2.99581, -33.5814, 5.45327, 0.83 ) }
    dend_17 { pt3dadd( 4.33945, -35.4311, 5.66912, 0.55 ) }
    dend_17 { pt3dadd( 5.41139, -36.9067, 5.84133, 0.55 ) }
    dend_17 { pt3dadd( 7.68983, -40.0433, 6.20737, 0.83 ) }
    dend_17 { pt3dadd( 10.4534, -43.8477, 6.65134, 0.55 ) }
    dend_17 { pt3dadd( 11.9408, -45.8354, 6.94, 0.83 ) }
    dend_17 { pt3dadd( 14.4999, -48.981, 7.61492, 0.83 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 75/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 1.36861, -31.2269, 5.04651, 0.55 ) }
    dend_14 { pt3dadd( 0.484701, -32.3029, 2.12257, 0.55 ) }
    dend_14 { pt3dadd( -0.464074, -33.4579, -1.01593, 0.55 ) }
    dend_14 { pt3dadd( -1.58411, -34.8214, -4.72095, 0.55 ) }
    dend_14 { pt3dadd( -2.9442, -36.4772, -9.22004, 0.55 ) }
    dend_14 { pt3dadd( -3.71601, -37.4168, -11.7731, 0.55 ) }
    dend_14 { pt3dadd( -3.87105, -37.6055, -12.286, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 82/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -6.9384, -124.807, 95.4529, 0.55 ) }
    dend_7 { pt3dadd( -6.52068, -130.96, 99.7543, 0.55 ) }
    dend_7 { pt3dadd( -5.19758, -137.526, 103.172, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 85/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -6.9384, -124.807, 95.4529, 0.55 ) }
    dend_4 { pt3dadd( -7.14987, -132.869, 100.073, 0.55 ) }
    dend_4 { pt3dadd( -7.76073, -140.735, 104.986, 0.55 ) }
    // Section: dend_59, id: dend_59, parent: dend_57 (entry count 88/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -46.5016, 35.3672, -14.5053, 0.28 ) }
    dend_59 { pt3dadd( -47.7053, 36.3087, -13.2732, 0.28 ) }
    dend_59 { pt3dadd( -48.1604, 36.6612, -12.749, 0.55 ) }
    dend_59 { pt3dadd( -49.464, 37.6828, -11.1996, 0.28 ) }
    dend_59 { pt3dadd( -50.1109, 38.1945, -10.5047, 0.55 ) }
    dend_59 { pt3dadd( -51.8758, 39.5824, -8.69279, 0.28 ) }
    dend_59 { pt3dadd( -53.6696, 40.9931, -6.85119, 0.55 ) }
    dend_59 { pt3dadd( -56.6168, 43.1642, -3.78591, 0.28 ) }
    dend_59 { pt3dadd( -57.245, 43.6318, -3.13216, 0.55 ) }
    dend_59 { pt3dadd( -58.6377, 44.7528, -1.74035, 0.28 ) }
    dend_59 { pt3dadd( -59.1851, 45.2252, -1.19139, 0.55 ) }
    dend_59 { pt3dadd( -65.0003, 47.9264, 3.38441, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_59 { pt3dadd( -71.4177, 51.5073, 6.22072, 0.55 ) }
    dend_59 { pt3dadd( -77.0907, 55.346, 10.1106, 0.55 ) }
    dend_59 { pt3dadd( -81.8806, 60.2925, 13.9368, 0.55 ) }
    dend_59 { pt3dadd( -87.4167, 64.8533, 17.1928, 0.55 ) }
    dend_59 { pt3dadd( -93.4452, 68.0808, 21.1031, 0.55 ) }
    dend_59 { pt3dadd( -98.9176, 70.7162, 26.119, 0.55 ) }
    dend_59 { pt3dadd( -103.594, 72.6146, 32.1669, 0.55 ) }
    dend_59 { pt3dadd( -108.341, 74.9698, 37.995, 0.55 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 8/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -46.5016, 35.3672, -14.5053, 0.55 ) }
    dend_58 { pt3dadd( -48.2379, 34.7739, -13.1528, 0.55 ) }
    dend_58 { pt3dadd( -49.1371, 34.4306, -12.4447, 0.28 ) }
    dend_58 { pt3dadd( -49.8062, 34.1752, -11.9178, 0.55 ) }
    dend_58 { pt3dadd( -50.3639, 33.9623, -11.4786, 0.28 ) }
    dend_58 { pt3dadd( -50.7545, 33.8132, -11.171, 0.55 ) }
    dend_58 { pt3dadd( -51.8317, 33.4021, -10.3228, 0.28 ) }
    dend_58 { pt3dadd( -52.5619, 33.0353, -9.84653, 0.55 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 16/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -124.896, -64.2962, -21.2005, 0.55 ) }
    dend_54 { pt3dadd( -129.195, -73.3053, -24.4635, 0.55 ) }
    dend_54 { pt3dadd( -133.116, -82.7877, -26.7006, 0.55 ) }
    dend_54 { pt3dadd( -136.537, -91.8167, -30.8326, 0.55 ) }
    dend_54 { pt3dadd( -140.794, -101.053, -33.4514, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 21/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -124.896, -64.2962, -21.2005, 0.55 ) }
    dend_53 { pt3dadd( -128.774, -66.4674, -26.5808, 0.55 ) }
    dend_53 { pt3dadd( -132.435, -67.58, -32.4163, 0.55 ) }
    dend_53 { pt3dadd( -136.546, -69.6581, -37.659, 0.55 ) }
    dend_53 { pt3dadd( -141.931, -70.8775, -41.9261, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_49 (entry count 26/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -129.705, -61.8574, -26.7393, 0.55 ) }
    dend_51 { pt3dadd( -136.127, -66.2672, -36.2091, 0.55 ) }
    // Section: dend_50, id: dend_50, parent: dend_49 (entry count 28/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -129.705, -61.8574, -26.7393, 0.55 ) }
    dend_50 { pt3dadd( -133.79, -71.0706, -30.3909, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 30/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 85.0665, -68.2652, -120.832, 0.28 ) }
    dend_41 { pt3dadd( 89.3474, -70.4003, -123.521, 0.28 ) }
    dend_41 { pt3dadd( 91.3359, -71.392, -124.771, 0.55 ) }
    dend_41 { pt3dadd( 95.1279, -73.2833, -127.153, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 85.0665, -68.2652, -120.832, 0.55 ) }
    dend_40 { pt3dadd( 84.5908, -69.5479, -122.063, 0.55 ) }
    dend_40 { pt3dadd( 83.6391, -72.1136, -124.526, 0.28 ) }
    dend_40 { pt3dadd( 83.3291, -72.9494, -125.328, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 38/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 76.554, -75.269, -121.229, 0.28 ) }
    dend_38 { pt3dadd( 77.206, -77.8731, -124.168, 0.28 ) }
    dend_38 { pt3dadd( 77.5289, -79.1625, -125.623, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 41/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 76.554, -75.269, -121.229, 0.55 ) }
    dend_37 { pt3dadd( 74.3866, -75.9889, -120.308, 0.55 ) }
    dend_37 { pt3dadd( 68.3428, -77.9966, -117.74, 0.28 ) }
    dend_37 { pt3dadd( 66.907, -78.4735, -117.13, 0.55 ) }
    dend_37 { pt3dadd( 62.9795, -79.7782, -115.461, 0.28 ) }
    dend_37 { pt3dadd( 60.4478, -80.6191, -114.385, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 47/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 14.4999, -48.981, 7.61492, 0.83 ) }
    dend_23 { pt3dadd( 14.5427, -49.1707, 7.60196, 0.83 ) }
    dend_23 { pt3dadd( 15.1175, -51.6504, 7.51058, 0.83 ) }
    dend_23 { pt3dadd( 15.3561, -53.522, 7.50671, 0.83 ) }
    dend_23 { pt3dadd( 15.4075, -55.3395, 7.64311, 0.83 ) }
    dend_23 { pt3dadd( 15.3384, -57.7652, 7.97267, 0.83 ) }
    dend_23 { pt3dadd( 15.1538, -60.5662, 8.42701, 0.83 ) }
    dend_23 { pt3dadd( 14.9101, -63.6925, 9.09423, 0.83 ) }
    dend_23 { pt3dadd( 14.6312, -66.7291, 9.87592, 0.83 ) }
    dend_23 { pt3dadd( 14.0849, -70.4766, 10.6791, 0.83 ) }
    dend_23 { pt3dadd( 13.7745, -72.2059, 10.9267, 0.83 ) }
    dend_23 { pt3dadd( 13.5612, -73.5069, 11.034, 0.83 ) }
    dend_23 { pt3dadd( 13.1183, -76.0072, 11.1738, 0.83 ) }
    dend_23 { pt3dadd( 12.8085, -78.2427, 11.1983, 0.83 ) }
    dend_23 { pt3dadd( 12.5533, -82.9904, 10.8268, 0.83 ) }
    dend_23 { pt3dadd( 12.5457, -85.5851, 10.3117, 0.83 ) }
    dend_23 { pt3dadd( 12.5906, -87.9763, 9.6709, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 64/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 14.4999, -48.981, 7.61492, 0.55 ) }
    dend_18 { pt3dadd( 13.464, -52.1852, 7.14047, 0.55 ) }
    dend_18 { pt3dadd( 12.6074, -54.5188, 6.93351, 0.55 ) }
    dend_18 { pt3dadd( 12.0292, -56.0122, 6.94851, 0.55 ) }
    dend_18 { pt3dadd( 11.1221, -58.3471, 7.21712, 0.55 ) }
    dend_18 { pt3dadd( 9.3012, -62.9696, 8.05939, 0.55 ) }
    dend_18 { pt3dadd( 7.73159, -66.4817, 9.01878, 0.55 ) }
    dend_18 { pt3dadd( 6.34652, -69.3051, 10.049, 0.55 ) }
    dend_18 { pt3dadd( 4.80126, -72.168, 11.2342, 0.55 ) }
    dend_18 { pt3dadd( 3.44972, -74.5473, 12.3154, 0.28 ) }
    dend_18 { pt3dadd( 2.20018, -76.5014, 13.4311, 0.55 ) }
    dend_18 { pt3dadd( -0.355437, -80.0774, 15.8535, 0.55 ) }
    dend_18 { pt3dadd( -2.12347, -82.285, 17.489, 0.55 ) }
    dend_18 { pt3dadd( -3.12029, -83.5224, 18.3891, 0.55 ) }
    dend_18 { pt3dadd( -4.32602, -84.9854, 19.3549, 0.83 ) }
    dend_18 { pt3dadd( -7.81238, -89.319, 21.9576, 0.28 ) }
    dend_18 { pt3dadd( -8.94856, -90.7521, 22.7864, 0.55 ) }
    dend_18 { pt3dadd( -10.8963, -93.3309, 24.2451, 0.28 ) }
    dend_18 { pt3dadd( -11.5206, -94.1272, 24.7444, 0.55 ) }
    dend_18 { pt3dadd( -12.8827, -95.9886, 25.9295, 0.28 ) }
    dend_18 { pt3dadd( -13.6183, -97.0444, 26.5399, 0.55 ) }
    dend_18 { pt3dadd( -15.8013, -100.472, 27.6447, 0.55 ) }
    dend_18 { pt3dadd( -21.2429, -109.63, 34.7072, 0.55 ) }
    dend_18 { pt3dadd( -26.4085, -118.344, 42.5008, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 88/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -3.87105, -37.6055, -12.286, 0.55 ) }
    dend_16 { pt3dadd( -4.27404, -38.8935, -16.3667, 0.55 ) }
    dend_16 { pt3dadd( -4.4157, -39.2006, -17.5427, 0.55 ) }
    dend_16 { pt3dadd( -4.82605, -39.9675, -20.4344, 0.55 ) }
    dend_16 { pt3dadd( -5.84708, -41.4919, -26.6192, 0.28 ) }
    dend_16 { pt3dadd( -6.02702, -41.7, -27.5073, 0.55 ) }
    dend_16 { pt3dadd( -6.85662, -42.6429, -31.1234, 0.55 ) }
    dend_16 { pt3dadd( -8.2416, -43.9147, -35.7869, 0.55 ) }
    dend_16 { pt3dadd( -8.79265, -44.3521, -37.5454, 0.28 ) }
    dend_16 { pt3dadd( -9.3192, -44.642, -39.0327, 0.28 ) }
    dend_16 { pt3dadd( -10.4091, -45.0763, -41.3453, 0.55 ) }
    dend_16 { pt3dadd( -11.6678, -45.4853, -44.2494, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -12.7842, -45.6538, -46.9842, 0.55 ) }
    dend_16 { pt3dadd( -13.6626, -45.6233, -49.0767, 0.55 ) }
    dend_16 { pt3dadd( -14.2354, -45.4942, -50.5547, 0.55 ) }
    dend_16 { pt3dadd( -15.8353, -44.9465, -54.9949, 0.55 ) }
    dend_16 { pt3dadd( -17.5547, -44.0884, -59.6203, 0.55 ) }
    dend_16 { pt3dadd( -18.2871, -43.6385, -61.5027, 0.28 ) }
    dend_16 { pt3dadd( -18.9656, -43.2381, -63.3132, 0.55 ) }
    dend_16 { pt3dadd( -20.375, -42.6341, -66.9523, 0.28 ) }
    dend_16 { pt3dadd( -20.8581, -42.4617, -68.1672, 0.83 ) }
    dend_16 { pt3dadd( -21.8482, -42.1081, -70.3297, 0.28 ) }
    dend_16 { pt3dadd( -22.6898, -41.9535, -71.7345, 0.55 ) }
    dend_16 { pt3dadd( -23.9433, -41.8015, -73.738, 0.28 ) }
    dend_16 { pt3dadd( -24.4597, -41.7285, -74.5145, 0.55 ) }
    dend_16 { pt3dadd( -25.4718, -41.6183, -75.8861, 0.55 ) }
    dend_16 { pt3dadd( -27.045, -41.2086, -77.8962, 0.55 ) }
    dend_16 { pt3dadd( -28.1219, -40.8403, -79.1439, 0.28 ) }
    dend_16 { pt3dadd( -29.0429, -40.3833, -80.0765, 0.55 ) }
    dend_16 { pt3dadd( -30.1139, -39.6643, -81.1876, 0.28 ) }
    dend_16 { pt3dadd( -30.284, -39.5272, -81.3777, 0.55 ) }
    dend_16 { pt3dadd( -31.6152, -38.2322, -83.4456, 0.28 ) }
    dend_16 { pt3dadd( -32.4742, -37.2692, -85.0863, 0.55 ) }
    dend_16 { pt3dadd( -33.4185, -35.8733, -87.4929, 0.83 ) }
    dend_16 { pt3dadd( -34.0723, -34.6938, -89.6355, 0.28 ) }
    dend_16 { pt3dadd( -34.2136, -34.3948, -90.2249, 0.55 ) }
    dend_16 { pt3dadd( -35.1796, -32.1639, -94.8999, 0.28 ) }
    dend_16 { pt3dadd( -35.3116, -31.7871, -95.7661, 0.55 ) }
    dend_16 { pt3dadd( -35.6227, -30.558, -98.4173, 0.28 ) }
    dend_16 { pt3dadd( -35.7009, -30.2421, -99.1043, 0.55 ) }
    dend_16 { pt3dadd( -35.9529, -29.4148, -100.803, 0.28 ) }
    dend_16 { pt3dadd( -36.1649, -28.8159, -101.963, 0.55 ) }
    dend_16 { pt3dadd( -36.8202, -27.4631, -104.324, 0.28 ) }
    dend_16 { pt3dadd( -37.2429, -26.7385, -105.69, 0.55 ) }
    dend_16 { pt3dadd( -38.238, -25.3386, -108.496, 0.28 ) }
    dend_16 { pt3dadd( -38.5445, -24.9611, -109.321, 0.55 ) }
    dend_16 { pt3dadd( -39.058, -24.4555, -110.581, 0.28 ) }
    dend_16 { pt3dadd( -39.5226, -24.0273, -111.61, 0.55 ) }
    dend_16 { pt3dadd( -40.5651, -23.159, -113.65, 0.28 ) }
    dend_16 { pt3dadd( -40.8924, -22.9101, -114.248, 0.55 ) }
    dend_16 { pt3dadd( -43.4483, -20.9615, -118.527, 0.28 ) }
    dend_16 { pt3dadd( -44.4214, -20.1587, -119.919, 0.55 ) }
    dend_16 { pt3dadd( -46.2571, -18.5811, -122.26, 0.28 ) }
    dend_16 { pt3dadd( -47.1045, -17.8175, -123.284, 0.55 ) }
    dend_16 { pt3dadd( -49.1492, -16.079, -125.495, 0.28 ) }
    dend_16 { pt3dadd( -49.9312, -15.4862, -126.267, 0.55 ) }
    dend_16 { pt3dadd( -52.9092, -13.6802, -128.88, 0.28 ) }
    dend_16 { pt3dadd( -54.1749, -13.13, -129.951, 0.55 ) }
    dend_16 { pt3dadd( -56.0254, -12.7247, -131.448, 0.55 ) }
    dend_16 { pt3dadd( -57.1904, -12.5643, -132.338, 0.55 ) }
    dend_16 { pt3dadd( -59.6992, -12.3014, -133.963, 0.28 ) }
    dend_16 { pt3dadd( -62.2708, -12.0623, -135.408, 0.28 ) }
    dend_16 { pt3dadd( -64.451, -11.8507, -136.552, 0.55 ) }
    dend_16 { pt3dadd( -67.27, -11.3215, -137.682, 0.28 ) }
    dend_16 { pt3dadd( -68.7526, -10.868, -138.075, 0.55 ) }
    dend_16 { pt3dadd( -72.4098, -9.21152, -138.718, 0.28 ) }
    dend_16 { pt3dadd( -74.4655, -7.98322, -138.672, 0.55 ) }
    dend_16 { pt3dadd( -75.8919, -6.99404, -138.412, 0.28 ) }
    dend_16 { pt3dadd( -77.6245, -5.86303, -137.822, 0.55 ) }
    dend_16 { pt3dadd( -79.8668, -4.37713, -136.893, 0.28 ) }
    dend_16 { pt3dadd( -80.7194, -3.85057, -136.549, 0.55 ) }
    dend_16 { pt3dadd( -85.0261, -1.47456, -135.148, 0.28 ) }
    dend_16 { pt3dadd( -86.4803, -0.721024, -134.688, 0.55 ) }
    dend_16 { pt3dadd( -89.9735, 0.964189, -133.525, 0.28 ) }
    dend_16 { pt3dadd( -91.8733, 1.86095, -132.895, 0.55 ) }
    dend_16 { pt3dadd( -93.4353, 2.59579, -132.379, 0.55 ) }
    dend_16 { pt3dadd( -95.2904, 3.46025, -131.801, 0.28 ) }
    dend_16 { pt3dadd( -96.2164, 3.89507, -131.625, 0.55 ) }
    dend_16 { pt3dadd( -99.2612, 5.43268, -131.195, 0.28 ) }
    dend_16 { pt3dadd( -100.848, 6.40049, -130.943, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 68/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -3.87105, -37.6055, -12.286, 0.55 ) }
    dend_15 { pt3dadd( -3.18988, -37.68, -13.919, 0.55 ) }
    dend_15 { pt3dadd( -2.47632, -37.5596, -15.5354, 0.55 ) }
    dend_15 { pt3dadd( -1.50151, -37.2508, -17.4959, 0.55 ) }
    dend_15 { pt3dadd( -0.65445, -36.8546, -19.0505, 0.55 ) }
    dend_15 { pt3dadd( 5.49703, -33.033, -28.7239, 0.55 ) }
    dend_15 { pt3dadd( 6.83962, -31.8963, -30.9152, 0.55 ) }
    dend_15 { pt3dadd( 8.74845, -29.9607, -34.1919, 0.55 ) }
    dend_15 { pt3dadd( 10.0805, -28.5061, -36.5185, 0.55 ) }
    dend_15 { pt3dadd( 11.4002, -26.9415, -38.7368, 0.28 ) }
    dend_15 { pt3dadd( 13.5319, -24.309, -42.0003, 0.55 ) }
    dend_15 { pt3dadd( 16.8916, -20.2009, -46.6132, 0.28 ) }
    dend_15 { pt3dadd( 17.1208, -19.9462, -47.1174, 0.55 ) }
    dend_15 { pt3dadd( 17.8888, -19.0613, -50.9034, 0.28 ) }
    dend_15 { pt3dadd( 17.9986, -18.6799, -53.5607, 0.55 ) }
    dend_15 { pt3dadd( 17.8753, -18.5037, -56.4666, 0.55 ) }
    dend_15 { pt3dadd( 17.6141, -18.4578, -61.6996, 0.55 ) }
    dend_15 { pt3dadd( 17.1385, -18.4351, -71.9734, 0.55 ) }
    dend_15 { pt3dadd( 16.9493, -18.4737, -78.8798, 0.55 ) }
    dend_15 { pt3dadd( 16.9496, -18.4992, -81.2652, 0.55 ) }
    dend_15 { pt3dadd( 17.3024, -18.4931, -96.9306, 0.55 ) }
    dend_15 { pt3dadd( 17.5672, -18.4061, -101.163, 0.55 ) }
    dend_15 { pt3dadd( 17.8927, -18.3328, -103.525, 0.55 ) }
    dend_15 { pt3dadd( 19.1451, -18.2304, -108.967, 0.55 ) }
    dend_15 { pt3dadd( 22.9962, -18.5386, -121.877, 0.55 ) }
    dend_15 { pt3dadd( 24.2005, -18.7434, -125.317, 0.28 ) }
    dend_15 { pt3dadd( 25.0452, -18.9278, -127.228, 0.55 ) }
    dend_15 { pt3dadd( 26.3666, -19.3133, -130.043, 0.28 ) }
    dend_15 { pt3dadd( 27.0118, -19.5803, -131.165, 0.55 ) }
    dend_15 { pt3dadd( 29.7742, -20.8093, -133.981, 0.28 ) }
    dend_15 { pt3dadd( 32.5794, -22.6359, -134.701, 0.55 ) }
    dend_15 { pt3dadd( 34.3094, -23.9717, -135.03, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_15 { pt3dadd( 35.9591, -25.4804, -135.152, 0.55 ) }
    dend_15 { pt3dadd( 37.4642, -27.1608, -135.145, 0.28 ) }
    dend_15 { pt3dadd( 38.1288, -28.0389, -135.166, 0.55 ) }
    dend_15 { pt3dadd( 39.718, -30.3599, -135.104, 0.28 ) }
    dend_15 { pt3dadd( 40.1222, -31.0578, -135.199, 0.55 ) }
    dend_15 { pt3dadd( 42.3894, -35.0573, -135.981, 0.28 ) }
    dend_15 { pt3dadd( 43.4606, -36.8954, -136.608, 0.55 ) }
    dend_15 { pt3dadd( 45.8395, -40.7919, -138.45, 0.28 ) }
    dend_15 { pt3dadd( 46.7579, -42.2146, -139.312, 0.55 ) }
    dend_15 { pt3dadd( 49.9351, -46.8519, -142.491, 0.28 ) }
    dend_15 { pt3dadd( 50.7084, -47.9771, -143.319, 0.55 ) }
    dend_15 { pt3dadd( 53.0272, -51.5533, -146.07, 0.28 ) }
    dend_15 { pt3dadd( 53.5259, -52.4002, -146.635, 0.55 ) }
    dend_15 { pt3dadd( 54.7651, -54.6503, -148.096, 0.28 ) }
    dend_15 { pt3dadd( 55.4786, -55.9514, -149.085, 0.55 ) }
    dend_15 { pt3dadd( 56.2127, -57.2199, -150.175, 0.55 ) }
    dend_15 { pt3dadd( 57.6818, -59.7512, -152.33, 0.28 ) }
    dend_15 { pt3dadd( 58.7247, -61.2906, -153.888, 0.55 ) }
    dend_15 { pt3dadd( 62.0456, -64.9946, -158.898, 0.28 ) }
    dend_15 { pt3dadd( 63.3218, -66.1541, -160.917, 0.55 ) }
    dend_15 { pt3dadd( 64.2199, -66.8745, -162.289, 0.28 ) }
    dend_15 { pt3dadd( 65.1466, -67.5125, -163.66, 0.55 ) }
    dend_15 { pt3dadd( 68.0621, -69.2425, -167.822, 0.28 ) }
    dend_15 { pt3dadd( 70.3109, -70.5921, -170.901, 0.55 ) }
    dend_15 { pt3dadd( 74.3309, -73.2312, -175.807, 0.28 ) }
    dend_15 { pt3dadd( 75.6006, -74.0494, -177.344, 0.55 ) }
    dend_15 { pt3dadd( 78.1406, -75.5305, -180.048, 0.28 ) }
    dend_15 { pt3dadd( 79.0181, -76.013, -180.873, 0.55 ) }
    dend_15 { pt3dadd( 80.5457, -76.7784, -181.935, 0.28 ) }
    dend_15 { pt3dadd( 81.9315, -77.4143, -182.754, 0.55 ) }
    dend_15 { pt3dadd( 85.7981, -78.9415, -184.581, 0.28 ) }
    dend_15 { pt3dadd( 90.2458, -80.5138, -186.601, 0.28 ) }
    dend_15 { pt3dadd( 92.5354, -81.2095, -187.466, 0.28 ) }
    dend_15 { pt3dadd( 94.8038, -81.8395, -188.47, 0.55 ) }
    dend_15 { pt3dadd( 98.1066, -82.6075, -189.948, 0.28 ) }
    dend_15 { pt3dadd( 99.583, -82.9271, -190.574, 0.83 ) }
    dend_15 { pt3dadd( 103.39, -83.7927, -192.03, 0.28 ) }
    dend_15 { pt3dadd( 105.02, -84.2045, -192.752, 0.55 ) }
    dend_15 { pt3dadd( 112.107, -86.2841, -196.257, 0.28 ) }
    dend_15 { pt3dadd( 115.571, -87.365, -198.292, 0.28 ) }
    dend_15 { pt3dadd( 118.04, -88.1503, -199.937, 0.55 ) }
    dend_15 { pt3dadd( 119.428, -88.6398, -201.061, 0.55 ) }
    dend_15 { pt3dadd( 123.008, -89.9947, -204.352, 0.28 ) }
    dend_15 { pt3dadd( 126.311, -91.4333, -207.58, 0.55 ) }
    dend_15 { pt3dadd( 129.323, -92.851, -210.522, 0.28 ) }
    dend_15 { pt3dadd( 131.992, -94.1792, -213.34, 0.55 ) }
    dend_15 { pt3dadd( 134.204, -95.2459, -215.654, 0.28 ) }
    dend_15 { pt3dadd( 136.047, -95.9659, -217.438, 0.55 ) }
    dend_15 { pt3dadd( 140.567, -97.4116, -221.511, 0.28 ) }
    dend_15 { pt3dadd( 142.896, -98.1396, -223.475, 0.55 ) }
    dend_15 { pt3dadd( 146.444, -99.2432, -226.288, 0.28 ) }
    dend_15 { pt3dadd( 149.369, -100.053, -228.517, 0.55 ) }
    dend_15 { pt3dadd( 156.197, -101.62, -233.74, 0.28 ) }
    dend_15 { pt3dadd( 158.898, -102.086, -236.057, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 54/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -5.19758, -137.526, 103.172, 0.55 ) }
    dend_9 { pt3dadd( -3.80316, -146.897, 108.134, 0.55 ) }
    dend_9 { pt3dadd( -0.565638, -156.638, 111.139, 0.55 ) }
    dend_9 { pt3dadd( 1.58025, -166.243, 115.325, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 58/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.19758, -137.526, 103.172, 0.55 ) }
    dend_8 { pt3dadd( -3.71472, -145.752, 109.862, 0.55 ) }
    dend_8 { pt3dadd( -4.21281, -153.128, 117.606, 0.55 ) }
    dend_8 { pt3dadd( -5.39203, -158.811, 126.602, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -7.76073, -140.735, 104.986, 0.55 ) }
    dend_6 { pt3dadd( -7.08172, -148.701, 109.598, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 64/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -7.76073, -140.735, 104.986, 0.55 ) }
    dend_5 { pt3dadd( -8.67484, -147.904, 109.312, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 12.5906, -87.9763, 9.6709, 0.83 ) }
    dend_25 { pt3dadd( 13.5255, -91.4781, 10.4803, 0.83 ) }
    dend_25 { pt3dadd( 14.3908, -94.4142, 11.4117, 0.83 ) }
    dend_25 { pt3dadd( 15.251, -97.3327, 12.3375, 0.83 ) }
    dend_25 { pt3dadd( 16.0679, -100.104, 13.2167, 0.83 ) }
    dend_25 { pt3dadd( 17.3268, -104.376, 14.5716, 0.83 ) }
    dend_25 { pt3dadd( 18.5766, -108.616, 15.9168, 0.83 ) }
    dend_25 { pt3dadd( 19.5334, -111.398, 17.2234, 0.83 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 74/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 12.5906, -87.9763, 9.6709, 0.55 ) }
    dend_24 { pt3dadd( 14.2249, -89.9792, 10.0587, 0.55 ) }
    dend_24 { pt3dadd( 15.5411, -91.5494, 10.0769, 0.55 ) }
    dend_24 { pt3dadd( 16.4846, -92.717, 9.96023, 0.55 ) }
    dend_24 { pt3dadd( 17.4148, -94.1063, 9.60149, 0.83 ) }
    dend_24 { pt3dadd( 18.4067, -95.6962, 8.97743, 0.55 ) }
    dend_24 { pt3dadd( 19.3769, -97.2513, 8.36702, 0.83 ) }
    dend_24 { pt3dadd( 20.3662, -98.9483, 7.52743, 0.55 ) }
    dend_24 { pt3dadd( 20.9575, -99.9352, 6.94797, 0.83 ) }
    dend_24 { pt3dadd( 22.7887, -103.141, 4.79551, 0.55 ) }
    dend_24 { pt3dadd( 24.0524, -105.678, 2.90527, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 85/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -26.4085, -118.344, 42.5008, 0.55 ) }
    dend_20 { pt3dadd( -30.7811, -125.814, 46.4442, 0.55 ) }
    dend_20 { pt3dadd( -36.4317, -132.355, 50.4146, 0.55 ) }
    dend_20 { pt3dadd( -42.7655, -138.014, 54.6966, 0.55 ) }
    dend_20 { pt3dadd( -49.891, -142.562, 59.0572, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 90/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -26.4085, -118.344, 42.5008, 0.55 ) }
    dend_19 { pt3dadd( -30.9222, -127.374, 49.0463, 0.55 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 92/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 19.5334, -111.398, 17.2234, 0.55 ) }
    dend_27 { pt3dadd( 19.7694, -114.042, 18.0626, 0.55 ) }
    dend_27 { pt3dadd( 20.1511, -117.407, 19.2325, 0.55 ) }
    dend_27 { pt3dadd( 20.5152, -120.585, 20.3194, 0.55 ) }
    dend_27 { pt3dadd( 20.7527, -122.848, 21.0536, 0.55 ) }
    dend_27 { pt3dadd( 21.14, -126.891, 22.2941, 0.55 ) }
    dend_27 { pt3dadd( 22.4448, -138.257, 25.5132, 0.55 ) }
    dend_27 { pt3dadd( 23.0057, -142.116, 26.4513, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_27 { pt3dadd( 23.4314, -144.841, 26.9763, 0.55 ) }
    dend_27 { pt3dadd( 23.9791, -147.963, 27.3278, 0.55 ) }
    dend_27 { pt3dadd( 24.392, -150.387, 27.3787, 0.55 ) }
    dend_27 { pt3dadd( 25.5583, -156.05, 27.2863, 0.55 ) }
    dend_27 { pt3dadd( 26.2943, -160.361, 27.1901, 0.55 ) }
    dend_27 { pt3dadd( 26.8421, -163.183, 27.2206, 0.55 ) }
    dend_27 { pt3dadd( 28.1845, -170.487, 27.672, 0.55 ) }
    dend_27 { pt3dadd( 29.0255, -175.392, 28.19, 0.55 ) }
    dend_27 { pt3dadd( 30.0912, -181.699, 29.2196, 0.55 ) }
    dend_27 { pt3dadd( 31.3183, -188.827, 30.9559, 0.55 ) }
    dend_27 { pt3dadd( 32.3138, -193.557, 32.4417, 0.55 ) }
    dend_27 { pt3dadd( 32.9606, -196.344, 33.4049, 0.55 ) }
    dend_27 { pt3dadd( 33.5093, -198.919, 34.279, 0.55 ) }
    dend_27 { pt3dadd( 34.2815, -202.179, 35.2364, 0.55 ) }
    dend_27 { pt3dadd( 36.1209, -210.069, 36.9887, 0.55 ) }
    dend_27 { pt3dadd( 36.953, -213.118, 37.5651, 0.55 ) }
    dend_27 { pt3dadd( 37.8004, -216.522, 38.1728, 0.55 ) }
    dend_27 { pt3dadd( 39.0338, -221.636, 39.053, 0.55 ) }
    dend_27 { pt3dadd( 39.7914, -225.581, 39.7441, 0.55 ) }
    dend_27 { pt3dadd( 40.2984, -229.348, 40.3236, 0.55 ) }
    dend_27 { pt3dadd( 40.6209, -232.952, 40.8561, 0.55 ) }
    dend_27 { pt3dadd( 40.8686, -236.472, 41.4193, 0.55 ) }
    dend_27 { pt3dadd( 41.0634, -238.977, 41.7971, 0.55 ) }
    dend_27 { pt3dadd( 41.4271, -243.079, 42.2763, 0.55 ) }
    dend_27 { pt3dadd( 41.8463, -248.023, 42.4663, 0.55 ) }
    dend_27 { pt3dadd( 42.1369, -250.427, 42.3857, 0.55 ) }
    dend_27 { pt3dadd( 42.4372, -252.542, 42.1579, 0.55 ) }
    dend_27 { pt3dadd( 43.2193, -256.526, 41.5148, 0.55 ) }
    dend_27 { pt3dadd( 43.6992, -259.057, 41.0332, 0.55 ) }
    dend_27 { pt3dadd( 44.3094, -262.169, 40.5623, 0.55 ) }
    dend_27 { pt3dadd( 44.6372, -264.358, 40.3536, 0.55 ) }
    dend_27 { pt3dadd( 45.3561, -270.048, 40.0209, 0.55 ) }
    dend_27 { pt3dadd( 45.747, -274.306, 40.064, 0.55 ) }
    dend_27 { pt3dadd( 46.1667, -280.885, 40.6572, 0.55 ) }
    dend_27 { pt3dadd( 46.473, -285.109, 41.4538, 0.55 ) }
    dend_27 { pt3dadd( 46.7399, -289.54, 42.4309, 0.28 ) }
    dend_27 { pt3dadd( 46.7924, -291.322, 42.8917, 0.28 ) }
    dend_27 { pt3dadd( 46.8433, -295.634, 44.4035, 0.28 ) }
    dend_27 { pt3dadd( 46.8078, -299.607, 46.1149, 0.28 ) }
    dend_27 { pt3dadd( 47.1727, -304.801, 48.9917, 0.28 ) }
    dend_27 { pt3dadd( 49.9873, -316.476, 52.6104, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 19.5334, -111.398, 17.2234, 0.55 ) }
    dend_26 { pt3dadd( 20.4505, -111.74, 18.2043, 0.55 ) }
    dend_26 { pt3dadd( 22.2388, -112.663, 20.3749, 0.55 ) }
    dend_26 { pt3dadd( 23.7357, -113.596, 22.3268, 0.28 ) }
    dend_26 { pt3dadd( 25.3034, -114.668, 24.479, 0.55 ) }
    dend_26 { pt3dadd( 26.1329, -115.359, 25.9314, 0.28 ) }
    dend_26 { pt3dadd( 27.4308, -116.614, 28.6316, 0.55 ) }
    dend_26 { pt3dadd( 27.7937, -117.301, 29.9955, 0.28 ) }
    dend_26 { pt3dadd( 27.8792, -117.55, 30.5423, 0.28 ) }
    dend_26 { pt3dadd( 28.0159, -117.899, 31.4916, 0.55 ) }
    dend_26 { pt3dadd( 28.6864, -119.01, 35.0303, 0.28 ) }
    dend_26 { pt3dadd( 29.0035, -119.436, 36.5016, 0.55 ) }
    dend_26 { pt3dadd( 30.2556, -120.656, 40.656, 0.28 ) }
    dend_26 { pt3dadd( 31.0325, -121.241, 42.8101, 0.28 ) }
    dend_26 { pt3dadd( 32.1048, -121.996, 45.3931, 0.55 ) }
    dend_26 { pt3dadd( 33.9263, -123.174, 49.0117, 0.28 ) }
    dend_26 { pt3dadd( 34.2087, -123.328, 49.4632, 0.55 ) }
    dend_26 { pt3dadd( 35.7081, -124.077, 51.5657, 0.28 ) }
    dend_26 { pt3dadd( 35.86, -124.147, 51.7387, 0.55 ) }
    dend_26 { pt3dadd( 37.1794, -125.02, 53.3188, 0.28 ) }
    dend_26 { pt3dadd( 37.7756, -125.507, 54.1151, 0.55 ) }
    dend_26 { pt3dadd( 42.6068, -129.057, 60.7, 0.55 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 63/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -49.891, -142.562, 59.0572, 0.55 ) }
    dend_22 { pt3dadd( -56.2584, -146.989, 64.8624, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 65/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -49.891, -142.562, 59.0572, 0.55 ) }
    dend_21 { pt3dadd( -56.8765, -151.204, 61.3197, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_2 = new SectionList()
    dend_43 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[soma_0, dend_43, dend_28, dend_1, dend_0, dend_55, dend_44, dend_34, dend_29, dend_11, dend_2, dend_61, dend_56, dend_48, dend_45, dend_42, dend_35, dend_31, dend_30, dend_13, dend_12, dend_10, dend_3, dend_60, dend_57, dend_52, dend_49, dend_47, dend_46, dend_39, dend_36, dend_33, dend_32, dend_17, dend_14, dend_7, dend_4, dend_59, dend_58, dend_54, dend_53, dend_51, dend_50, dend_41, dend_40, dend_38, dend_37, dend_23, dend_18, dend_16, dend_15, dend_9, dend_8, dend_6, dend_5, dend_25, dend_24, dend_20, dend_19, dend_27, dend_26, dend_22, dend_21]}
    ModelViewParmSubset_3 = new SectionList()
    soma_0 ModelViewParmSubset_3.append()
    dend_43 ModelViewParmSubset_3.append()
    dend_28 ModelViewParmSubset_3.append()
    dend_1 ModelViewParmSubset_3.append()
    dend_0 ModelViewParmSubset_3.append()
    dend_55 ModelViewParmSubset_3.append()
    dend_44 ModelViewParmSubset_3.append()
    dend_34 ModelViewParmSubset_3.append()
    dend_29 ModelViewParmSubset_3.append()
    dend_11 ModelViewParmSubset_3.append()
    dend_2 ModelViewParmSubset_3.append()
    dend_61 ModelViewParmSubset_3.append()
    dend_56 ModelViewParmSubset_3.append()
    dend_48 ModelViewParmSubset_3.append()
    dend_45 ModelViewParmSubset_3.append()
    dend_42 ModelViewParmSubset_3.append()
    dend_35 ModelViewParmSubset_3.append()
    dend_31 ModelViewParmSubset_3.append()
    dend_30 ModelViewParmSubset_3.append()
    dend_13 ModelViewParmSubset_3.append()
    dend_12 ModelViewParmSubset_3.append()
    dend_10 ModelViewParmSubset_3.append()
    dend_3 ModelViewParmSubset_3.append()
    dend_60 ModelViewParmSubset_3.append()
    dend_57 ModelViewParmSubset_3.append()
    dend_52 ModelViewParmSubset_3.append()
    dend_49 ModelViewParmSubset_3.append()
    dend_47 ModelViewParmSubset_3.append()
    dend_46 ModelViewParmSubset_3.append()
    dend_39 ModelViewParmSubset_3.append()
    dend_36 ModelViewParmSubset_3.append()
    dend_33 ModelViewParmSubset_3.append()
    dend_32 ModelViewParmSubset_3.append()
    dend_17 ModelViewParmSubset_3.append()
    dend_14 ModelViewParmSubset_3.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_3.append()
    dend_4 ModelViewParmSubset_3.append()
    dend_59 ModelViewParmSubset_3.append()
    dend_58 ModelViewParmSubset_3.append()
    dend_54 ModelViewParmSubset_3.append()
    dend_53 ModelViewParmSubset_3.append()
    dend_51 ModelViewParmSubset_3.append()
    dend_50 ModelViewParmSubset_3.append()
    dend_41 ModelViewParmSubset_3.append()
    dend_40 ModelViewParmSubset_3.append()
    dend_38 ModelViewParmSubset_3.append()
    dend_37 ModelViewParmSubset_3.append()
    dend_23 ModelViewParmSubset_3.append()
    dend_18 ModelViewParmSubset_3.append()
    dend_16 ModelViewParmSubset_3.append()
    dend_15 ModelViewParmSubset_3.append()
    dend_9 ModelViewParmSubset_3.append()
    dend_8 ModelViewParmSubset_3.append()
    dend_6 ModelViewParmSubset_3.append()
    dend_5 ModelViewParmSubset_3.append()
    dend_25 ModelViewParmSubset_3.append()
    dend_24 ModelViewParmSubset_3.append()
    dend_20 ModelViewParmSubset_3.append()
    dend_19 ModelViewParmSubset_3.append()
    dend_27 ModelViewParmSubset_3.append()
    dend_26 ModelViewParmSubset_3.append()
    dend_22 ModelViewParmSubset_3.append()
    dend_21 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_4 = new SectionList()
    axon_0 ModelViewParmSubset_4.append()
    axon_1 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_0 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_44 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_34 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_29 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_2 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_61 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_48 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_45 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_42 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_31 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_30 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_12 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_10 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_3 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_60 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_59 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_54 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_16 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_27 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_26 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_1 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_43 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_11 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_28 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_13 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_55 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_14 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_17 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_56 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_57 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_58 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_23 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_24 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_25 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_19 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_47 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_4 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_46 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_20 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_5 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_6 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_52 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_22 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_49 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_21 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_39 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_36 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_50 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_51 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_38 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_40 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_32 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_9 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_8 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_41 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_53 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_37 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_33 OneSecGrp_SectionRef_34.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_11, dend_11, dend_11, dend_11, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, axon_1, axon_1, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_52, dend_52, dend_52, dend_49, dend_49, dend_49, dend_47, dend_47, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_7, dend_7, dend_4, dend_4, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_51, dend_50, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_6, dend_5, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_20, dend_20, dend_20, dend_20, dend_19, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_21]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_21 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.7868198E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert KdShu2007
        gmax_KdShu2007 = 4.8299998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 8.936579E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert KdShu2007
        gmax_KdShu2007 = 4.2499998E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__dSTUT_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__dSTUT_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__dSTUT_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__dSTUT_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 7
    dend_44 nseg = 3
    dend_34 nseg = 3
    dend_29 nseg = 3
    dend_2 nseg = 5
    dend_61 nseg = 9
    dend_48 nseg = 5
    dend_45 nseg = 3
    dend_42 nseg = 9
    dend_35 nseg = 5
    dend_31 nseg = 5
    dend_30 nseg = 11
    dend_12 nseg = 9
    dend_10 nseg = 3
    dend_3 nseg = 3
    dend_60 nseg = 5
    dend_59 nseg = 5
    dend_54 nseg = 3
    dend_18 nseg = 5
    dend_16 nseg = 9
    dend_15 nseg = 17
    dend_27 nseg = 11
    dend_26 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate dSTUT214_L6_BP_c8c05ef109_0_0


