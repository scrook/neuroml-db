// Cell: cSTUT189_L5_LBC_6f185d799a_0_0
/*
{
  "id" : "cSTUT189_L5_LBC_6f185d799a_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.291345, -11.9572, -0.745668, 2.83924", "0.329834, -10.8055, -0.67345, 4.66212", "0.368323, -9.65383, -0.601232, 6.28225", "0.406811, -8.50213, -0.529013, 7.64969", "0.4453, -7.35043, -0.456795, 8.93084", "0.483789, -6.19873, -0.384577, 10.0574", "0.522278, -5.04703, -0.312359, 10.8977", "0.560767, -3.89533, -0.24014, 11.5145", "0.599255, -2.74363, -0.167922, 11.78", "0.637744, -1.59192, -0.0957039, 11.9272", "0.676233, -0.440222, -0.0234857, 12.0017", "0.714722, 0.711479, 0.0487325, 11.8836", "0.75321, 1.86318, 0.120951, 11.6932", "0.791699, 3.01488, 0.193169, 11.3303", "0.830188, 4.16658, 0.265387, 10.9521", "0.868677, 5.31828, 0.337605, 9.94576", "0.907166, 6.46999, 0.409824, 8.97095", "0.945654, 7.62169, 0.482042, 7.75467", "0.984143, 8.77339, 0.55426, 5.92032", "1.02263, 9.92509, 0.626478, 4.15016", "1.06112, 11.0768, 0.698697, 2.55961" ]
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.13709, 10.8469, -8.92677, 1.08", "-1.83147, 11.0595, -8.88761, 0.96", "-2.56961, 11.2688, -8.80499, 1.44", "-3.0333, 11.3979, -8.74347, 1.68", "-3.60061, 11.5409, -8.66558, 1.68", "-4.63987, 11.7834, -8.5259, 1.2", "-5.50351, 11.9641, -8.43286, 0.72", "-6.16098, 12.0839, -8.39631, 0.6", "-6.37031, 12.1221, -8.41025, 0.6", "-7.02212, 12.2588, -8.5171, 1.44", "-7.56448, 12.3977, -8.67041, 2.28", "-8.35563, 12.6641, -9.01587, 2.16", "-9.25498, 13.084, -9.63935, 1.08", "-10.1305, 13.6651, -10.5191, 0.48", "-10.3351, 13.8694, -10.8108, 0.48", "-10.5428, 14.2066, -11.2685, 1.08", "-10.6671, 14.5482, -11.706, 1.68", "-10.8422, 15.6705, -13.039, 1.8", "-10.8515, 16.1662, -13.5848, 1.44", "-10.8241, 16.7475, -14.1792, 0.72", "-10.8173, 17.105, -14.5352, 0.12", "-10.8404, 17.332, -14.7349, 0.12", "-10.8888, 17.4938, -14.8451, 0.12", "-11.0599, 17.7901, -14.9361, 0.48", "-11.1231, 17.8715, -14.9553, 0.12", "-11.5286, 18.3233, -15.0425, 0.12", "-12.0573, 18.8944, -15.1585, 1.8", "-12.5084, 19.3886, -15.2613, 2.76", "-12.866, 19.7862, -15.3403, 3.0", "-13.3892, 20.3872, -15.4515, 1.92", "-13.926, 20.9907, -15.5513, 0.48", "-14.372, 21.4923, -15.6121, 0.36", "-14.8364, 22.0227, -15.6462, 0.84", "-15.2757, 22.5387, -15.6594, 0.6", "-15.6235, 22.9403, -15.6523, 0.36", "-16.1653, 23.5592, -15.6354, 0.36", "-16.5619, 24.0033, -15.6457, 1.56", "-17.233, 24.7258, -15.6879, 3.49", "-17.4366, 24.9417, -15.711, 3.85", "-17.9363, 25.4785, -15.763, 4.33", "-18.5187, 26.1094, -15.8214, 3.25", "-19.4879, 27.2052, -15.9114, 0.12", "-19.8585, 27.6285, -15.9418, 0.12", "-20.0499, 27.8568, -15.9495, 0.12", "-20.6045, 28.5622, -15.9469, 0.96", "-20.7634, 28.785, -15.9358, 1.08", "-21.2425, 29.4949, -15.8633, 0.72", "-21.658, 30.1488, -15.8743, 0.12", "-22.146, 30.9077, -15.9736, 0.12", "-22.3324, 31.196, -16.0385, 1.2", "-22.6252, 31.652, -16.1823, 2.16", "-22.9483, 32.142, -16.3808, 1.92", "-23.9363, 33.6011, -17.0803, 0.12", "-24.1115, 33.8584, -17.2265, 0.24", "-24.4049, 34.2921, -17.4928, 0.24", "-24.6147, 34.6028, -17.6922, 0.24", "-25.2906, 35.6087, -18.3638, 3.25", "-25.501, 35.9282, -18.5719, 3.97", "-25.8762, 36.5136, -18.8759, 3.97", "-26.15, 36.9403, -19.1217, 3.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "0.302907, 11.4619, 4.01323, 1.8", "-0.0258794, 12.0813, 4.41504, 1.32", "-0.404447, 12.7241, 5.1183, 0.72", "-0.620153, 13.1315, 5.68183, 0.48", "-0.824533, 13.5949, 6.42116, 0.48", "-0.980567, 14.1144, 7.31913, 0.6", "-1.06663, 14.856, 8.69492, 1.68", "-1.00342, 15.4846, 10.1039, 1.68", "-0.86149, 15.7929, 10.9455, 1.56", "-0.586112, 16.0713, 11.8305, 1.44", "-0.157714, 16.3015, 12.7282, 0.72", "0.558268, 16.5063, 13.7264, 0.84", "0.817793, 16.5329, 13.9752, 0.84", "1.59757, 16.5049, 14.5914, 0.6", "2.18638, 16.4428, 15.1386, 0.84", "2.83309, 16.3108, 15.7918, 1.08", "3.46351, 16.1571, 16.4958, 1.08", "4.02735, 16.0172, 17.1809, 1.2", "5.01355, 15.8024, 18.4128, 1.32", "6.73792, 15.5781, 20.6931, 1.32", "7.18326, 15.5768, 21.3043, 0.6", "7.50533, 15.6176, 21.7729, 0.96", "7.6715, 15.6696, 22.0366, 1.92", "8.04864, 15.8891, 22.6022, 2.16", "9.0321, 16.7542, 23.6517, 1.44", "9.57888, 17.3758, 23.9356, 0.84", "10.0183, 17.8879, 24.1255, 0.84", "10.5598, 18.475, 24.3294, 0.84", "11.0174, 19.0756, 24.4829, 0.84", "11.3148, 19.588, 24.5617, 0.48", "11.7609, 20.4144, 24.5603, 0.48", "12.1832, 21.1597, 24.562, 1.32", "12.2218, 21.2153, 24.5624, 1.56", "12.9007, 21.9861, 24.5802, 1.2", "13.2077, 22.3502, 24.6024, 1.68", "18.3627, 25.3646, 32.0204, 1.68" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "0.672909, -11.7953, -3.94677, 2.52", "0.695916, -12.6915, -4.30101, 1.8", "0.706786, -13.883, -4.7664, 1.92", "0.71069, -15.6311, -5.38042, 1.68", "0.70823, -17.4163, -5.94988, 2.64", "0.694781, -18.9912, -6.41008, 4.09", "0.663669, -21.0678, -6.97041, 3.49", "0.593674, -22.8723, -7.40876, 2.16", "0.509806, -24.0189, -7.6443, 1.56", "0.397785, -25.0488, -7.79345, 1.32", "0.262918, -26.0136, -7.87447, 1.2", "0.126199, -26.869, -7.91239, 1.44", "-0.143307, -28.2742, -7.93496, 1.92", "-0.390931, -29.3694, -7.93337, 2.88", "-0.67261, -30.4552, -7.97223, 3.0", "-0.835837, -31.0132, -7.99513, 2.88" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999990498682201
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "1.06112, 11.0768, 0.698697, 0.617911", "1.56213, 26.0684, 0.698697, 0.617911", "2.06313, 41.0601, 0.698697, 0.617911" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-26.15, 36.9403, -19.1217, 0.12", "-27.7541, 37.3938, -19.2914, 0.12", "-28.9215, 37.6918, -19.4208, 0.12", "-29.9991, 37.9308, -19.5464, 0.12", "-30.4305, 38.0219, -19.5825, 1.08", "-30.8538, 38.11, -19.611, 0.12", "-31.8094, 38.3001, -19.6398, 0.12", "-32.3852, 38.3913, -19.6281, 1.8", "-33.1348, 38.4889, -19.5761, 2.76", "-34.4266, 38.6465, -19.415, 0.12", "-34.6631, 38.6823, -19.3777, 0.12", "-35.3616, 38.8065, -19.2517, 0.12", "-35.795, 38.9068, -19.2091, 0.12", "-36.4582, 39.0785, -19.235, 0.96", "-36.8616, 39.192, -19.3114, 0.12", "-37.6172, 39.4173, -19.5714, 0.12", "-38.0159, 39.5376, -19.733, 0.96", "-39.3733, 39.9513, -20.3409, 0.12", "-40.0468, 40.1527, -20.6455, 0.12", "-40.4302, 40.2594, -20.8167, 0.96", "-40.9095, 40.3887, -21.0553, 0.12", "-41.2842, 40.4903, -21.2475, 0.12", "-42.0085, 40.6532, -21.5125, 0.12", "-42.6769, 40.7529, -21.6384, 1.56", "-43.2091, 40.8167, -21.7119, 2.4", "-44.2284, 40.891, -21.807, 2.4", "-44.47, 40.8994, -21.8099, 2.16", "-46.1956, 40.9134, -21.7285, 0.12", "-46.9478, 40.8759, -21.5962, 0.12", "-47.2792, 40.8555, -21.5146, 0.24", "-47.9131, 40.8204, -21.3426, 0.24", "-48.7624, 40.773, -21.0963, 1.92", "-49.0919, 40.7552, -21.0177, 2.16", "-50.652, 40.7292, -20.7402, 0.12", "-51.469, 40.7278, -20.6025, 0.12", "-52.2256, 40.7268, -20.4916, 0.96", "-52.5715, 40.734, -20.4531, 0.12", "-53.4415, 40.7648, -20.4006, 0.12", "-53.9802, 40.7911, -20.3601, 0.84", "-54.4111, 40.82, -20.3334, 0.12", "-55.4295, 40.8986, -20.2312, 0.12", "-56.1469, 40.977, -20.1523, 1.8", "-56.487, 41.0282, -20.1193, 2.04", "-57.4774, 41.2407, -20.0447, 1.92", "-58.2479, 41.4353, -20.0098, 0.12", "-59.2721, 41.7385, -19.989, 0.12", "-60.3429, 42.101, -20.0027, 2.52", "-61.3434, 42.4673, -20.0919, 0.12", "-62.8626, 43.0704, -20.3375, 0.12", "-63.5195, 43.3588, -20.4806, 1.08", "-63.7879, 43.4788, -20.5444, 0.12", "-64.6577, 43.869, -20.7709, 0.12", "-65.8302, 44.3569, -21.0538, 0.12", "-66.2805, 44.5106, -21.1484, 0.12", "-67.1245, 44.7351, -21.2857, 1.68", "-67.6911, 44.8535, -21.3575, 2.28", "-68.0277, 44.9078, -21.3884, 2.4", "-69.2485, 45.0588, -21.4437, 0.12", "-69.8924, 45.1391, -21.4157, 0.12", "-70.4281, 45.2138, -21.3951, 0.84", "-70.9396, 45.3026, -21.3551, 0.12", "-71.4718, 45.4372, -21.29, 0.12", "-72.0225, 45.6058, -21.2131, 0.48", "-73.1858, 46.009, -21.0355, 2.4", "-73.6346, 46.1748, -20.9506, 2.64", "-75.0155, 46.6994, -20.6396, 0.12", "-75.8377, 47.0365, -20.4177, 0.12", "-76.5715, 47.3533, -20.2009, 1.08" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-26.15, 36.9403, -19.1217, 0.72", "-26.8717, 38.5087, -19.8647, 0.72", "-27.1683, 39.1872, -20.197, 0.72", "-27.5479, 40.0395, -20.6421, 0.72", "-27.8948, 40.802, -21.0355, 0.36", "-28.1766, 41.427, -21.3637, 0.24", "-28.3074, 41.7355, -21.52, 0.24", "-28.5662, 42.4897, -21.8808, 0.6", "-28.761, 43.1059, -22.1488, 0.84", "-28.9728, 43.7792, -22.3756, 0.48", "-29.1332, 44.2532, -22.532, 0.24", "-29.3402, 44.8536, -22.7288, 0.24", "-29.4632, 45.2087, -22.8399, 0.36", "-29.7607, 46.0959, -23.0895, 0.6", "-30.0553, 46.9781, -23.3228, 0.6", "-30.3819, 47.9372, -23.6335, 0.12", "-30.5827, 48.5101, -23.8592, 0.12", "-30.93, 49.4285, -24.27, 2.04", "-31.0208, 49.6715, -24.3848, 2.64", "-31.2486, 50.355, -24.7153, 2.76", "-31.5229, 51.2446, -25.1176, 2.64", "-31.9294, 52.7199, -25.6357, 0.12", "-32.1677, 53.6462, -25.9065, 0.12", "-32.2505, 53.9995, -25.986, 0.12", "-32.4158, 54.711, -26.1219, 0.12", "-32.6292, 55.5847, -26.2597, 0.12", "-32.8757, 56.5866, -26.3621, 1.68", "-33.0349, 57.2413, -26.4224, 2.64", "-33.1301, 57.6301, -26.4682, 2.64", "-33.2793, 58.2088, -26.5444, 2.4", "-33.648, 59.5835, -26.7388, 0.36", "-34.0286, 61.0376, -27.0168, 0.36", "-34.0998, 61.3026, -27.0923, 0.36", "-34.1718, 61.5695, -27.1599, 0.12", "-34.5655, 63.0117, -27.4764, 0.12", "-34.8114, 63.8755, -27.6595, 1.92", "-35.166, 65.0347, -28.0245, 2.76", "-35.7589, 66.8344, -28.7232, 0.12", "-36.46, 68.9194, -29.5918, 0.12", "-36.7952, 69.8481, -30.0156, 2.04", "-37.0983, 70.6303, -30.4101, 2.76", "-38.192, 73.3024, -31.7812, 0.12", "-38.5365, 74.1, -32.1889, 0.12", "-39.0821, 75.2752, -32.8035, 0.12", "-39.5923, 76.3035, -33.4194, 0.48", "-39.8225, 76.7336, -33.6763, 0.12", "-40.456, 77.8896, -34.298, 0.12", "-41.1578, 79.1506, -34.8891, 2.88", "-41.4482, 79.6554, -35.1363, 3.12", "-42.0364, 80.6705, -35.6307, 2.16", "-42.7948, 82.0473, -36.2347, 0.12", "-43.1892, 82.7633, -36.573, 0.12", "-43.4165, 83.1816, -36.7868, 0.12", "-43.8046, 83.9088, -37.1649, 0.12", "-44.075, 84.4313, -37.4308, 1.2", "-44.3524, 84.9882, -37.6859, 1.44", "-45.107, 86.5019, -38.3688, 0.12", "-45.3418, 86.9552, -38.6134, 0.12", "-45.8762, 87.9964, -39.2102, 0.12", "-46.1552, 88.5608, -39.5428, 1.56", "-46.4265, 89.0925, -39.8508, 2.16", "-46.6147, 89.4587, -40.0475, 2.28", "-47.5372, 91.2703, -40.828, 0.48", "-47.8342, 91.8398, -41.0585, 0.48", "-47.9862, 92.1395, -41.1832, 0.48", "-48.19, 92.5544, -41.4409, 0.24", "-48.3575, 92.8995, -41.6869, 0.24", "-48.7052, 93.6453, -42.2712, 1.8", "-48.856, 93.9827, -42.5374, 2.64", "-49.2939, 95.0257, -43.391, 2.88", "-50.1248, 97.2342, -45.2432, 0.36", "-50.3518, 97.9173, -45.8022, 0.36", "-50.4968, 98.4119, -46.1871, 0.12", "-50.7081, 99.2352, -46.7757, 1.56", "-50.7564, 99.4448, -46.91, 1.68", "-50.9689, 100.442, -47.4543, 0.24", "-51.1709, 101.48, -47.9444, 0.24", "-51.4056, 102.74, -48.5569, 2.64", "-51.5347, 103.415, -48.8866, 3.0", "-51.9477, 105.516, -49.9702, 0.24", "-52.1756, 106.619, -50.548, 1.68", "-52.2848, 107.112, -50.8077, 1.68" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "18.3627, 25.3646, 32.0204, 0.12", "22.8908, 29.9178, 41.6617, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "18.3627, 25.3646, 32.0204, 0.12", "22.3596, 29.0683, 40.1228, 0.12" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.835837, -31.0132, -7.99513, 0.12", "-0.499655, -31.7199, -8.56768, 0.12", "-0.300974, -32.2229, -8.97598, 0.12", "-0.151792, -32.6583, -9.31057, 0.12", "0.144445, -33.6099, -10.0065, 1.56", "0.217857, -33.8727, -10.1999, 1.56", "0.513031, -34.9043, -10.9189, 0.12", "0.610775, -35.3657, -11.2583, 0.12", "0.685436, -35.7326, -11.531, 0.12", "0.727634, -35.9095, -11.6585, 0.12", "0.914452, -36.5636, -12.0924, 1.44", "1.12781, -37.1343, -12.5323, 1.68", "1.56862, -38.038, -13.2884, 0.12", "1.84724, -38.498, -13.6932, 0.12", "2.07813, -38.8184, -13.9709, 0.12", "2.26555, -39.0429, -14.1559, 0.12", "3.05357, -39.8898, -14.9065, 1.56", "3.33326, -40.1698, -15.1686, 1.56", "3.94697, -40.7137, -15.6488, 0.12", "4.47194, -41.1736, -16.0669, 0.12", "4.83657, -41.5069, -16.3511, 1.08", "5.64334, -42.3005, -16.9118, 0.72" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-0.835837, -31.0132, -7.99513, 1.32", "-1.32675, -32.1077, -8.34981, 1.32", "-1.6362, -32.7977, -8.57339, 1.32", "-1.86241, -33.302, -8.73682, 2.04", "-2.1766, -34.0025, -8.96383, 2.52", "-2.32204, -34.3268, -9.06891, 2.52" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "2.06313, 41.0601, 0.698697, 0.718264", "2.56414, 56.0517, 0.698697, 0.718264", "3.06515, 71.0433, 0.698697, 0.718264" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-52.2848, 107.112, -50.8077, 0.12", "-52.7249, 107.779, -51.0488, 0.12", "-52.9704, 108.238, -51.2678, 0.12", "-53.2578, 108.801, -51.5319, 0.72", "-53.5111, 109.261, -51.8362, 0.12", "-53.8625, 109.885, -52.2658, 0.12", "-54.5824, 111.198, -53.1594, 0.12", "-55.062, 112.123, -53.8478, 2.28", "-55.2824, 112.556, -54.1735, 2.52", "-56.379, 114.736, -55.8052, 0.12", "-56.6909, 115.329, -56.2358, 0.12", "-56.9267, 115.714, -56.5231, 0.48", "-57.3126, 116.277, -56.9178, 0.12", "-57.765, 116.867, -57.3572, 0.12", "-57.9963, 117.129, -57.6203, 1.2", "-58.3419, 117.457, -58.0204, 1.56", "-59.5383, 118.496, -59.4002, 0.24", "-59.8725, 118.772, -59.7779, 0.24", "-60.1895, 119.041, -60.2052, 0.96", "-61.8323, 120.521, -62.7424, 0.12", "-62.0316, 120.721, -63.0651, 0.12", "-62.6725, 121.432, -64.1322, 2.52", "-62.805, 121.587, -64.3569, 2.52", "-64.3393, 123.42, -66.9698, 0.12", "-64.5229, 123.649, -67.2688, 0.12", "-65.0534, 124.342, -68.0736, 0.84", "-65.2643, 124.61, -68.4126, 0.96", "-66.0964, 125.697, -69.7919, 0.12", "-66.2642, 125.926, -70.0519, 0.12", "-66.4768, 126.246, -70.3425, 0.6", "-67.2359, 127.521, -71.5449, 0.12", "-67.3837, 127.819, -71.8197, 0.12", "-67.721, 128.746, -72.5505, 0.12", "-67.8735, 129.461, -72.9785, 1.08", "-67.9368, 129.959, -73.2423, 1.08", "-67.9913, 130.842, -73.6722, 0.12", "-67.9825, 131.598, -73.977, 0.12", "-67.9693, 132.051, -74.195, 0.24", "-67.9296, 132.779, -74.5828, 0.12", "-67.89, 133.264, -74.8402, 0.12", "-67.7783, 134.068, -75.2679, 0.96", "-67.6774, 134.466, -75.4159, 0.96", "-67.2699, 135.704, -75.7422, 0.12", "-67.0537, 136.337, -75.9553, 0.12", "-66.9251, 136.715, -76.0989, 0.36", "-66.5993, 137.848, -76.6205, 0.36", "-66.3501, 139.622, -77.915, 0.72", "-66.3483, 139.85, -78.1196, 0.72", "-66.4822, 141.791, -79.9848, 1.56", "-66.5378, 142.267, -80.4717, 2.04", "-66.7004, 143.134, -81.3529, 2.52", "-67.2212, 144.999, -83.357, 0.12", "-67.3833, 145.55, -83.9401, 0.24", "-67.5082, 146.071, -84.3981, 0.12", "-67.5803, 146.471, -84.68, 0.12", "-67.7371, 147.449, -85.3048, 0.12", "-67.8822, 148.44, -85.8145, 0.12", "-68.0259, 149.346, -86.1905, 1.56", "-68.0929, 149.716, -86.3596, 1.92", "-68.4962, 151.631, -87.2337, 0.12", "-68.7887, 152.924, -87.794, 0.12", "-69.0193, 153.91, -88.2165, 1.56", "-69.1598, 154.423, -88.415, 1.92", "-69.5679, 155.768, -88.953, 0.12", "-69.888, 156.86, -89.3919, 0.12", "-70.0601, 157.525, -89.6398, 0.48", "-70.2027, 158.108, -89.8901, 0.12", "-70.3566, 158.872, -90.2988, 0.12", "-70.4839, 159.701, -90.7754, 0.12", "-70.5607, 160.478, -91.2148, 0.12", "-70.5968, 161.292, -91.7049, 1.32", "-70.5998, 161.659, -91.9157, 1.56", "-70.5812, 163.583, -92.9354, 0.12", "-70.5995, 164.329, -93.381, 0.12", "-70.6471, 165.039, -93.798, 0.12", "-70.6794, 165.49, -94.0567, 0.12", "-70.7699, 166.563, -94.6494, 1.68", "-70.7985, 166.822, -94.7916, 1.8", "-71.0684, 169.099, -95.9194, 0.12", "-71.2329, 170.55, -96.6757, 0.12", "-71.3238, 171.271, -97.0424, 1.08", "-71.3911, 171.79, -97.3001, 1.2", "-71.5014, 172.922, -97.8312, 0.12", "-71.6044, 174.311, -98.4144, 0.12", "-71.671, 175.627, -98.8843, 1.8", "-71.7128, 176.402, -99.1791, 2.04", "-71.753, 177.591, -99.6345, 0.12", "-71.7421, 178.81, -100.079, 0.12", "-71.7136, 179.37, -100.245, 0.48" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-52.2848, 107.112, -50.8077, 0.12", "-52.0568, 108.046, -50.7114, 0.12", "-51.8505, 108.945, -50.618, 0.12", "-51.6421, 109.951, -50.4671, 0.72", "-51.5078, 110.854, -50.3315, 0.12", "-51.3157, 112.366, -50.1131, 0.12", "-51.2672, 112.815, -50.0512, 1.2", "-51.2391, 113.194, -49.9799, 0.72", "-51.2049, 114.2, -49.779, 0.12", "-51.2128, 116.458, -49.339, 0.12", "-51.2221, 117.094, -49.2275, 0.96", "-51.2328, 117.613, -49.1135, 1.44", "-51.2661, 118.957, -48.7981, 0.12", "-51.2916, 119.85, -48.5516, 0.12", "-51.3095, 120.59, -48.3347, 0.24", "-51.3145, 121.213, -48.129, 0.24", "-51.3078, 122.215, -47.799, 0.24", "-51.2806, 123.532, -47.3001, 2.52", "-51.2224, 125.279, -46.6148, 0.24", "-51.1666, 126.343, -46.1767, 0.24", "-51.1397, 126.77, -45.9993, 0.48", "-51.1187, 127.042, -45.8957, 0.12", "-50.8445, 130.069, -44.8498, 0.12", "-50.7681, 130.807, -44.5985, 1.92", "-50.6845, 131.422, -44.4221, 2.16", "-50.4732, 132.721, -44.0693, 0.12", "-50.1454, 134.462, -43.6475, 0.12", "-50.1158, 134.586, -43.6272, 0.36", "-49.9989, 134.953, -43.6067, 0.12", "-49.3863, 136.742, -43.545, 0.12", "-48.963, 137.962, -43.4715, 2.04", "-48.7659, 138.506, -43.4297, 1.56", "-48.2722, 139.833, -43.2833, 0.12", "-48.0499, 140.422, -43.2082, 0.12", "-47.8142, 141.025, -43.1119, 0.12", "-47.3011, 142.371, -42.8516, 0.12", "-47.0518, 143.055, -42.7198, 1.56", "-46.9271, 143.385, -42.6338, 2.16", "-46.6031, 144.203, -42.349, 1.32", "-46.2618, 144.991, -42.0745, 0.12", "-46.0497, 145.424, -41.9365, 0.12", "-45.6994, 146.133, -41.7595, 0.12", "-45.3087, 146.956, -41.5563, 0.12", "-45.0211, 147.567, -41.4143, 1.08", "-44.7919, 148.072, -41.3109, 1.8", "-44.3221, 149.086, -41.0493, 0.12", "-43.8994, 149.958, -40.7271, 0.12", "-43.641, 150.498, -40.5011, 0.12", "-43.387, 151.036, -40.2696, 0.12", "-43.016, 151.784, -39.9505, 0.12", "-42.3038, 153.153, -39.3542, 1.32", "-41.6483, 154.363, -38.8623, 0.12", "-40.9682, 155.621, -38.4502, 0.12", "-40.8098, 155.939, -38.3804, 0.96", "-40.4256, 156.798, -38.3173, 0.48", "-40.2562, 157.228, -38.3446, 0.48", "-39.997, 158.043, -38.4895, 0.12", "-39.6912, 159.268, -38.7583, 2.04", "-39.523, 160.033, -38.904, 2.28", "-39.2635, 161.347, -39.0995, 0.12", "-39.1053, 162.222, -39.1518, 0.12", "-38.9619, 162.993, -39.1516, 0.12", "-38.8548, 163.502, -39.1233, 0.12", "-38.5252, 164.733, -39.0234, 0.12", "-38.2404, 165.581, -38.9371, 0.12", "-37.7846, 166.666, -38.8052, 1.32", "-37.5811, 167.069, -38.7561, 1.32", "-37.2223, 167.674, -38.6906, 0.12", "-36.479, 168.839, -38.68, 0.12", "-36.1321, 169.363, -38.7393, 0.12", "-35.7197, 169.944, -38.8625, 1.2", "-35.4511, 170.294, -38.9838, 1.56", "-34.7502, 171.17, -39.3362, 0.12", "-33.7332, 172.401, -39.8798, 0.12", "-33.1336, 173.135, -40.2399, 1.44", "-32.7931, 173.542, -40.447, 2.16", "-31.7892, 174.682, -41.0836, 0.12", "-31.505, 174.981, -41.2628, 0.12", "-31.0792, 175.37, -41.5287, 0.12", "-30.6887, 175.674, -41.7405, 0.12", "-30.0195, 176.186, -42.1099, 0.12", "-29.2661, 176.745, -42.512, 1.2", "-29.0787, 176.883, -42.6119, 1.2", "-28.2685, 177.474, -43.0585, 0.12", "-28.0184, 177.663, -43.2316, 0.12", "-27.5865, 178.0, -43.5542, 0.12", "-26.916, 178.585, -44.1035, 0.12", "-26.4834, 179.024, -44.5076, 1.32", "-26.2924, 179.24, -44.7216, 1.44", "-25.4466, 180.282, -45.7728, 0.12", "-25.1805, 180.623, -46.1406, 0.12", "-25.0526, 180.789, -46.3322, 0.12", "-24.4733, 181.608, -47.2689, 0.12", "-24.0298, 182.267, -47.9439, 1.44", "-23.8393, 182.56, -48.2265, 1.92", "-23.4777, 183.129, -48.7116, 1.44", "-22.9586, 184.021, -49.4514, 0.12", "-22.7624, 184.349, -49.7062, 0.12", "-22.2359, 185.089, -50.2137, 0.12", "-21.6679, 185.846, -50.6882, 1.44", "-21.3643, 186.223, -50.9117, 1.92", "-20.3333, 187.394, -51.5753, 0.12", "-19.7957, 187.981, -51.8848, 0.12", "-18.7399, 189.035, -52.4772, 0.12", "-18.5415, 189.208, -52.5832, 0.84", "-18.1292, 189.547, -52.7766, 0.96", "-17.3094, 190.178, -53.1524, 0.12", "-16.695, 190.623, -53.4125, 0.12", "-16.1253, 191.077, -53.7155, 0.72", "-15.5361, 191.651, -54.1353, 0.12", "-15.0208, 192.255, -54.5588, 0.12", "-14.7169, 192.7, -54.8457, 1.2", "-14.5346, 193.062, -55.0877, 1.44", "-14.0987, 194.11, -55.8023, 0.12", "-13.7047, 195.297, -56.5716, 0.12", "-13.4711, 196.137, -57.1079, 2.52", "-13.3522, 196.645, -57.4884, 2.52", "-12.9389, 198.567, -59.0116, 0.24", "-12.8027, 199.113, -59.464, 0.24", "-12.6642, 199.578, -59.8804, 0.24", "-12.4419, 200.134, -60.4247, 1.32", "-11.5572, 201.762, -62.2563, 0.12", "-11.253, 202.179, -62.8563, 0.12", "-10.8061, 202.659, -63.6378, 0.72", "-10.1204, 203.308, -64.7911, 0.12", "-9.85029, 203.536, -65.2398, 0.12", "-8.91241, 204.285, -66.7417, 2.76", "-7.07963, 205.732, -69.5487, 0.12", "-6.6878, 206.064, -70.2343, 0.12", "-6.5715, 206.181, -70.464, 1.32", "-5.7291, 207.153, -72.2194, 0.12", "-5.5014, 207.478, -72.7287, 0.12", "-5.33034, 207.779, -73.1073, 0.96", "-4.59742, 209.207, -74.534, 0.12", "-4.28313, 209.801, -75.1168, 0.12", "-3.67062, 210.868, -76.0559, 2.4", "-2.85375, 212.159, -77.0604, 0.12", "-2.37706, 212.843, -77.5877, 0.12", "-2.04315, 213.276, -77.9137, 1.44", "-1.09766, 214.415, -78.7223, 0.12", "-0.206193, 215.42, -79.4826, 0.12", "-0.0566334, 215.581, -79.6107, 0.84", "0.491488, 216.14, -80.0979, 0.12", "1.26977, 216.903, -80.7994, 0.48", "1.834, 217.446, -81.2862, 0.12", "2.23168, 217.82, -81.6091, 0.12", "3.07764, 218.601, -82.2806, 1.8", "3.76707, 219.248, -82.7551, 0.12", "4.26313, 219.719, -83.0257, 0.12", "4.69702, 220.149, -83.2029, 0.72", "5.18265, 220.634, -83.3193, 0.12", "5.94652, 221.392, -83.4186, 0.12", "6.43605, 221.891, -83.4601, 0.72", "6.85868, 222.264, -83.537, 0.12", "7.29233, 222.616, -83.6387, 0.12", "9.01418, 223.894, -84.3309, 0.12", "9.7106, 224.378, -84.6715, 1.92", "10.7133, 225.002, -85.3389, 0.12", "12.9803, 226.288, -87.2122, 0.12", "13.9448, 226.807, -88.1172, 0.12", "15.9442, 227.818, -90.1933, 0.12", "16.7774, 228.227, -91.197, 2.28", "18.4467, 228.993, -93.5845, 0.72", "19.0087, 229.194, -94.8944, 0.12", "18.9612, 229.233, -94.1011, 0.12", "19.0185, 229.325, -93.4512, 1.2", "19.2036, 229.54, -92.4, 0.6", "21.1082, 231.883, -82.3196, 0.12", "21.2265, 232.04, -81.7079, 0.12", "21.2962, 232.137, -81.3279, 0.6", "21.35, 232.212, -80.9915, 0.12", "21.5169, 232.442, -79.3478, 0.12", "21.3999, 232.107, -78.46, 0.12", "21.8293, 233.087, -79.1929, 1.56", "21.9223, 233.304, -79.3538, 1.8", "22.546, 234.672, -80.2973, 0.12", "23.156, 235.905, -81.0825, 0.12", "23.5214, 236.569, -81.4817, 0.12", "24.159, 237.602, -82.0792, 1.8", "24.9863, 238.763, -82.6804, 0.12", "25.9396, 239.946, -83.2539, 0.12", "26.3411, 240.378, -83.477, 1.08", "27.1674, 241.148, -83.9399, 0.12", "27.8533, 241.736, -84.3291, 0.12", "28.6218, 242.344, -84.7984, 0.12", "28.9539, 242.585, -85.0183, 1.08", "30.5405, 243.648, -86.2061, 0.12", "31.0196, 243.968, -86.5699, 0.12", "31.4872, 244.288, -86.9413, 1.44", "32.2305, 244.85, -87.7233, 1.92", "32.3719, 244.968, -87.897, 1.92", "33.0583, 245.579, -88.7792, 0.12", "33.5298, 246.027, -89.3948, 0.12", "34.0253, 246.528, -90.0952, 1.08", "35.1979, 247.774, -91.8572, 0.12", "35.3796, 247.969, -92.1518, 0.12", "35.5757, 248.164, -92.5137, 0.6", "35.966, 248.51, -93.2757, 0.12", "36.0871, 248.606, -93.5117, 0.12", "36.4105, 248.824, -94.0853, 1.2", "37.1574, 249.317, -95.2251, 1.2", "38.0351, 249.94, -96.5331, 0.24", "38.3273, 250.163, -96.9623, 0.24", "38.4526, 250.27, -97.1398, 0.84", "38.9565, 250.754, -97.8193, 0.12", "39.6563, 251.451, -98.6577, 0.12", "39.8508, 251.669, -98.8662, 0.12", "40.4886, 252.466, -99.5628, 0.96", "40.6713, 252.705, -99.7797, 0.96", "40.8056, 252.899, -99.9546, 0.96", "41.1971, 253.56, -100.585, 0.48", "41.3611, 253.856, -100.895, 0.48", "41.622, 254.401, -101.453, 0.12", "41.8118, 254.808, -101.805, 0.12", "42.3931, 256.033, -102.734, 0.12", "42.7469, 256.766, -103.2, 0.84", "42.9172, 257.137, -103.413, 1.08", "43.3553, 258.042, -103.915, 0.12", "43.8976, 259.2, -104.493, 0.12", "44.1162, 259.639, -104.688, 1.08", "44.4812, 260.26, -104.818, 1.08" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-2.32204, -34.3268, -9.06891, 0.48", "-3.92859, -34.7797, -9.61595, 0.48", "-4.80344, -35.047, -9.93223, 0.48", "-6.18919, -35.4928, -10.4501, 0.84", "-7.3592, -35.8984, -10.8948, 0.96", "-8.22655, -36.2095, -11.2262, 0.96", "-9.11617, -36.5404, -11.5649, 0.12", "-9.50565, -36.7118, -11.7665, 0.12", "-9.71246, -36.8088, -11.9034, 0.12", "-10.0435, -36.9695, -12.2111, 0.48", "-10.2966, -37.0994, -12.4909, 0.48", "-10.5973, -37.2492, -12.8331, 0.6", "-11.6983, -37.7349, -14.0815, 0.12", "-12.0794, -37.8887, -14.504, 0.12", "-12.8774, -38.2027, -15.3508, 2.16", "-13.1599, -38.3142, -15.6413, 3.0", "-13.7757, -38.5634, -16.2361, 3.12", "-15.5386, -39.2948, -17.7666, 0.12", "-15.8763, -39.4392, -18.0095, 0.12", "-16.2502, -39.6005, -18.2632, 0.12", "-16.5528, -39.7302, -18.4457, 0.12", "-16.9868, -39.9223, -18.716, 0.12", "-17.4334, -40.1269, -18.9949, 0.12", "-18.7702, -40.7853, -19.7677, 2.28", "-19.0992, -40.9563, -19.9678, 3.25", "-19.5187, -41.193, -20.2274, 3.25", "-20.3894, -41.7271, -20.7891, 2.52", "-21.53, -42.4835, -21.536, 0.12", "-21.8392, -42.7083, -21.828, 0.12", "-22.0092, -42.8486, -22.0289, 0.12", "-22.5619, -43.3335, -22.7651, 1.68", "-22.9872, -43.7222, -23.3494, 2.04", "-23.2944, -44.0095, -23.7659, 2.04", "-25.1037, -45.7608, -26.5027, 0.12", "-25.3307, -45.9763, -26.8675, 0.12", "-25.4989, -46.1336, -27.156, 0.12", "-26.0222, -46.6214, -28.1537, 2.4", "-26.2968, -46.8857, -28.6889, 3.12" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-2.32204, -34.3268, -9.06891, 0.96", "-1.91201, -35.7338, -9.12493, 0.96", "-1.73401, -36.3629, -9.14895, 0.48", "-1.59909, -36.8721, -9.18556, 0.48", "-1.42823, -37.6246, -9.26863, 0.6", "-1.24283, -38.6293, -9.44169, 0.6", "-1.11577, -39.6002, -9.64856, 0.6", "-1.03885, -40.7184, -9.95096, 0.6", "-1.02857, -41.6934, -10.2491, 1.44", "-1.0763, -42.4942, -10.5059, 2.04", "-1.2545, -43.6645, -10.8988, 1.92", "-1.57277, -44.9183, -11.3429, 1.08", "-1.93913, -45.9662, -11.7174, 0.48", "-2.21501, -46.6224, -11.9372, 0.36", "-2.45452, -47.1307, -12.0909, 0.36", "-2.6403, -47.4959, -12.1834, 0.36", "-2.96675, -48.0592, -12.2827, 0.36", "-3.43414, -48.7535, -12.3792, 2.04", "-4.12506, -49.698, -12.467, 3.97" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-71.7136, 179.37, -100.245, 0.12", "-71.6346, 179.34, -100.52, 0.12", "-71.4057, 179.251, -101.316, 0.12", "-71.3485, 179.229, -101.515, 0.84", "-71.0439, 179.112, -102.575, 0.12", "-70.9694, 179.083, -102.834, 0.12", "-70.9332, 179.069, -102.959, 0.6" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-71.7136, 179.37, -100.245, 0.24", "-72.0563, 180.279, -100.64, 0.24", "-72.3291, 180.943, -100.92, 0.24", "-72.5862, 181.56, -101.161, 0.24", "-72.7648, 181.979, -101.306, 1.44", "-72.9769, 182.477, -101.48, 2.04", "-73.5548, 183.834, -101.952, 0.12", "-73.9014, 184.644, -102.194, 0.24", "-74.1892, 185.269, -102.399, 0.24", "-74.5273, 185.972, -102.65, 0.96" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-26.2968, -46.8857, -28.6889, 1.68", "-27.415, -48.1315, -29.148, 1.68", "-28.0078, -48.8155, -29.3766, 2.28", "-28.8548, -49.7278, -29.6913, 0.12", "-29.2534, -50.1134, -29.8328, 0.12", "-29.7474, -50.5557, -30.0039, 0.12", "-29.9391, -50.7114, -30.069, 0.12", "-30.9278, -51.3391, -30.3255, 2.04", "-31.5929, -51.7159, -30.45, 2.28", "-32.7991, -52.3683, -30.6039, 0.12", "-33.3003, -52.632, -30.6606, 0.12", "-34.4153, -53.1956, -30.7576, 0.12", "-35.7246, -53.818, -30.8589, 1.68", "-36.4687, -54.1445, -30.9022, 2.04", "-37.2971, -54.5228, -30.9241, 0.12", "-38.2861, -54.9752, -30.9142, 0.12", "-38.9873, -55.308, -30.8982, 1.2" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-26.2968, -46.8857, -28.6889, 0.12", "-26.9691, -47.511, -30.1008, 0.12", "-27.0883, -47.6118, -30.3083, 0.12", "-27.2468, -47.7326, -30.5486, 0.84", "-27.4299, -47.8573, -30.7686, 0.84", "-28.2883, -48.4249, -31.6733, 0.12", "-28.4759, -48.539, -31.8483, 0.12", "-28.9883, -48.8119, -32.2361, 0.12", "-29.1865, -48.9046, -32.3759, 0.12", "-29.8921, -49.1972, -32.8269, 2.28", "-30.0525, -49.2583, -32.9161, 2.64", "-30.43, -49.3917, -33.1008, 2.76", "-31.3979, -49.733, -33.6301, 0.12", "-31.972, -49.931, -33.9719, 0.12", "-32.2205, -50.019, -34.1382, 0.48", "-32.4043, -50.0866, -34.2844, 0.48", "-32.7703, -50.2424, -34.5875, 0.12", "-33.0745, -50.4008, -34.9164, 0.84", "-33.2371, -50.5005, -35.119, 1.2", "-33.5141, -50.6972, -35.4852, 1.2", "-33.8688, -50.9623, -35.9379, 0.12", "-34.2636, -51.2681, -36.3885, 0.12", "-35.1595, -51.9812, -37.2899, 0.12", "-35.4324, -52.2052, -37.5427, 1.92", "-35.903, -52.6132, -37.9488, 2.88", "-36.7274, -53.3587, -38.5622, 0.12", "-37.3288, -53.9379, -38.9519, 0.12", "-37.695, -54.315, -39.1574, 1.68", "-37.9316, -54.5799, -39.2638, 2.04", "-38.4047, -55.158, -39.4864, 1.44", "-38.7158, -55.5833, -39.6337, 0.12", "-38.9511, -55.9413, -39.7343, 0.12", "-39.1127, -56.2027, -39.8096, 0.6", "-39.4108, -56.6965, -39.9447, 0.12", "-39.5157, -56.8545, -39.9942, 0.12", "-39.8469, -57.2817, -40.1427, 0.12", "-40.0038, -57.4574, -40.2174, 0.36", "-40.1333, -57.5824, -40.2839, 0.12", "-40.6472, -58.0377, -40.553, 0.12", "-41.2362, -58.5128, -40.8537, 1.2", "-41.5199, -58.723, -41.0162, 1.92", "-41.7757, -58.9052, -41.1882, 1.92", "-42.419, -59.3473, -41.6511, 0.12", "-42.5967, -59.4569, -41.7798, 0.12", "-42.7915, -59.562, -41.941, 0.12", "-43.4254, -59.8761, -42.4926, 0.72", "-43.7355, -60.017, -42.7928, 0.12", "-44.1079, -60.1637, -43.1683, 0.12", "-44.4631, -60.2754, -43.6441, 1.32", "-45.0511, -60.4223, -44.5333, 0.12", "-45.2753, -60.467, -44.899, 0.12", "-45.7566, -60.5386, -45.7137, 1.92", "-45.9126, -60.5739, -46.0352, 1.92", "-46.7867, -60.8602, -48.1547, 0.12", "-46.9608, -60.941, -48.6355, 0.12", "-47.3528, -61.1619, -49.7146, 2.4", "-47.4087, -61.1998, -49.8736, 2.64", "-48.3258, -61.8954, -52.4162, 0.12", "-48.6517, -62.1577, -53.2686, 0.84", "-48.9352, -62.3994, -53.9283, 0.12", "-49.2238, -62.6579, -54.594, 0.12", "-49.63, -63.0291, -55.4902, 1.44", "-49.7876, -63.163, -55.7895, 1.68", "-50.4175, -63.5891, -56.6219, 0.12", "-50.6425, -63.7347, -56.8922, 0.12", "-50.7624, -63.8066, -57.0352, 0.48", "-51.0699, -63.978, -57.4537, 0.12", "-51.3489, -64.1169, -57.8238, 0.12", "-51.7725, -64.2988, -58.3782, 1.68", "-51.8806, -64.334, -58.5082, 1.8", "-52.4243, -64.4518, -59.1477, 1.08", "-52.9538, -64.5395, -59.7374, 0.12", "-53.2087, -64.5696, -60.0253, 0.12", "-53.7533, -64.6061, -60.6557, 2.16", "-53.9846, -64.6122, -60.9256, 2.4", "-54.9317, -64.5815, -61.9915, 0.48", "-55.1741, -64.557, -62.2505, 0.48", "-55.9003, -64.4277, -63.0141, 0.12", "-56.1098, -64.3726, -63.2374, 0.12", "-56.3199, -64.2949, -63.4535, 0.12", "-56.6955, -64.1066, -63.8086, 0.12", "-57.0202, -63.9059, -64.1218, 0.6", "-57.1947, -63.7957, -64.3083, 0.96", "-57.7014, -63.5019, -64.8426, 0.12", "-57.9428, -63.3822, -65.18, 0.12", "-58.4233, -63.1827, -65.9322, 2.4", "-59.1863, -62.9257, -67.2647, 0.12", "-59.4853, -62.8267, -67.9211, 0.36", "-59.6075, -62.7886, -68.2529, 0.72", "-60.3114, -62.6209, -70.4932, 1.44", "-60.3878, -62.6092, -70.7547, 1.68", "-60.4859, -62.6032, -71.0964, 1.92", "-61.1851, -62.5723, -73.5673, 0.48", "-61.3899, -62.5602, -74.2592, 0.12", "-61.4876, -62.5526, -74.5543, 0.12", "-61.6357, -62.5457, -74.8887, 0.12", "-61.8316, -62.5569, -75.2822, 0.48", "-62.2413, -62.6142, -75.9803, 0.12", "-62.3939, -62.6596, -76.1844, 0.12", "-62.8435, -62.8174, -76.7506, 1.68", "-63.1297, -62.9389, -77.1209, 2.64", "-64.493, -63.6651, -78.8875, 0.24", "-64.6719, -63.7768, -79.1174, 0.24", "-64.9878, -63.9922, -79.5127, 0.24", "-65.2762, -64.1997, -79.8716, 0.36", "-65.5896, -64.4292, -80.2428, 0.12", "-65.8779, -64.6194, -80.5463, 0.12", "-66.4375, -64.9571, -81.0217, 0.6", "-66.7624, -65.1234, -81.2861, 0.12", "-67.71, -65.5218, -82.0109, 2.16", "-67.9269, -65.5933, -82.1609, 2.64", "-68.8312, -65.7935, -82.6888, 0.12", "-69.212, -65.8395, -82.8845, 0.12", "-69.5964, -65.8565, -83.0944, 0.96", "-69.8882, -65.8477, -83.2782, 0.96", "-70.1716, -65.813, -83.4872, 0.12", "-70.6337, -65.7387, -83.9056, 0.12", "-71.1647, -65.6516, -84.522, 1.68", "-71.9476, -65.5086, -85.6655, 1.68", "-72.3165, -65.4332, -86.2777, 0.12", "-72.4916, -65.3958, -86.5849, 0.12", "-72.7676, -65.337, -87.09, 0.12", "-73.2207, -65.2339, -87.9261, 1.68", "-73.8589, -65.0867, -89.0555, 0.12", "-74.0296, -65.0526, -89.3132, 0.12", "-74.285, -65.0011, -89.6675, 0.12", "-74.9574, -64.8463, -90.4836, 1.8", "-75.1716, -64.7906, -90.7021, 1.8", "-75.9683, -64.5724, -91.3707, 0.12", "-76.3215, -64.4857, -91.6305, 0.12", "-76.8457, -64.3616, -92.0068, 0.12", "-77.4454, -64.2024, -92.405, 1.2", "-77.5185, -64.1813, -92.4459, 1.68", "-77.7414, -64.1177, -92.5613, 1.68", "-78.5373, -63.8818, -92.9099, 0.12", "-78.8522, -63.8003, -93.05, 0.12", "-79.3496, -63.7006, -93.2686, 0.12", "-79.584, -63.652, -93.367, 0.12", "-79.8702, -63.5943, -93.4742, 1.08", "-80.1947, -63.5368, -93.5764, 1.08", "-80.806, -63.4665, -93.6486, 0.12", "-81.0781, -63.451, -93.6562, 0.12", "-81.5831, -63.4446, -93.6391, 0.24", "-82.0473, -63.4446, -93.6278, 0.24", "-82.4868, -63.4606, -93.6229, 0.24", "-83.6384, -63.5537, -93.654, 1.68", "-83.9946, -63.5957, -93.6754, 2.52", "-84.4199, -63.6551, -93.7176, 2.52", "-85.4008, -63.7853, -93.8609, 0.12", "-86.006, -63.8301, -93.9777, 0.48", "-86.4467, -63.8303, -94.0919, 0.12", "-86.6911, -63.8121, -94.1745, 0.12", "-86.9866, -63.7758, -94.2642, 0.12", "-87.4436, -63.7167, -94.4168, 0.36", "-87.7715, -63.6681, -94.5303, 0.12", "-88.4245, -63.613, -94.7624, 0.12", "-88.688, -63.6344, -94.8557, 1.56", "-88.8998, -63.714, -94.9487, 1.56", "-89.5907, -64.26, -95.2965, 1.2", "-89.6743, -64.3542, -95.3411, 0.12", "-89.9991, -64.8047, -95.5225, 0.12", "-90.0832, -64.9421, -95.5914, 0.12", "-90.1713, -65.0724, -95.668, 0.12", "-90.4925, -65.5065, -95.9838, 0.12", "-90.6243, -65.6531, -96.1312, 1.2", "-90.7859, -65.8254, -96.3371, 1.44", "-91.361, -66.3866, -97.1807, 0.12", "-91.5895, -66.5978, -97.5288, 0.96", "-91.9039, -66.8665, -98.0004, 1.2", "-92.4617, -67.284, -98.8023, 0.12", "-92.6505, -67.4193, -99.0733, 0.12", "-93.0879, -67.7122, -99.6794, 0.12", "-93.2698, -67.8239, -99.9015, 0.12", "-93.5978, -68.0159, -100.296, 0.12", "-94.3783, -68.398, -101.065, 2.64" ],
    "parent" : "dend_15",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-4.12506, -49.698, -12.467, 0.12", "-5.66774, -50.821, -11.9796, 0.12", "-5.82954, -50.9442, -11.9206, 0.12", "-6.39303, -51.3855, -11.7044, 0.12", "-6.79147, -51.6969, -11.5475, 0.12", "-7.47832, -52.2336, -11.2758, 0.12", "-8.13862, -52.7494, -11.016, 1.32", "-8.41886, -52.9786, -10.8943, 1.68", "-8.97061, -53.4435, -10.6576, 0.72", "-9.37208, -53.8147, -10.481, 0.12", "-9.63478, -54.0687, -10.3674, 0.12", "-9.88392, -54.3347, -10.2661, 0.12", "-10.1109, -54.6221, -10.151, 0.6", "-10.3125, -54.9175, -10.0109, 0.6", "-10.5872, -55.3428, -9.77748, 0.12", "-10.7202, -55.5169, -9.6849, 0.12", "-10.8765, -55.6791, -9.60971, 0.12", "-11.8759, -56.5191, -9.27033, 1.92", "-12.3202, -56.8051, -9.16293, 2.76", "-12.7806, -57.0497, -9.07964, 3.0", "-13.9309, -57.568, -8.92596, 1.68", "-14.7064, -57.8672, -8.86235, 0.12", "-15.2446, -58.0451, -8.84069, 0.12", "-16.1552, -58.3074, -8.84468, 0.12", "-16.6064, -58.4421, -8.83892, 0.6", "-16.8072, -58.5056, -8.84479, 0.84", "-17.5103, -58.7425, -8.87429, 0.12", "-18.3257, -59.0364, -8.93536, 0.12", "-18.7607, -59.2046, -9.00407, 0.6", "-19.0676, -59.3389, -9.07207, 0.12", "-20.298, -59.9097, -9.37563, 0.12", "-20.5604, -60.0499, -9.4429, 0.12", "-20.76, -60.1673, -9.49026, 0.12", "-21.4293, -60.5701, -9.66511, 1.32", "-21.8621, -60.856, -9.76939, 2.4", "-22.2517, -61.1354, -9.8471, 2.88", "-22.699, -61.4859, -9.90028, 1.92", "-23.2699, -61.9677, -9.9925, 1.2", "-24.0724, -62.709, -10.1369, 0.12", "-24.599, -63.2573, -10.2287, 0.12", "-24.8017, -63.4857, -10.2643, 0.72", "-25.1856, -63.9446, -10.3361, 0.96", "-25.7708, -64.6938, -10.4209, 0.12", "-26.0757, -65.1222, -10.4491, 0.12", "-26.5959, -65.8793, -10.4464, 0.12", "-26.904, -66.3058, -10.467, 0.12", "-27.4136, -67.0094, -10.5214, 1.44", "-27.8608, -67.6271, -10.5803, 2.4", "-28.001, -67.8193, -10.5988, 2.4", "-28.3536, -68.2977, -10.6585, 1.32", "-29.1923, -69.4279, -10.8592, 0.12", "-29.598, -69.9663, -10.9685, 0.12", "-29.8262, -70.2601, -11.0297, 0.48", "-29.9207, -70.3739, -11.0583, 0.12", "-30.3539, -70.8877, -11.1739, 0.12", "-30.8516, -71.4493, -11.2721, 0.96", "-31.0838, -71.6882, -11.3174, 1.56", "-31.4207, -72.0012, -11.4356, 1.56", "-32.0109, -72.5154, -11.742, 0.12", "-32.2755, -72.7359, -11.9072, 0.12", "-32.4944, -72.9385, -12.0603, 0.12", "-33.3446, -73.8013, -12.667, 0.48", "-33.897, -74.4131, -13.0778, 0.48", "-34.744, -75.3793, -13.7435, 2.64", "-35.2244, -75.9434, -14.1339, 3.61", "-36.1549, -77.0721, -14.9039, 0.12", "-36.5245, -77.5573, -15.2075, 0.12", "-36.6342, -77.7233, -15.2844, 0.36" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-4.12506, -49.698, -12.467, 3.25", "-3.96585, -50.3792, -12.7046, 3.25", "-3.60233, -52.0452, -13.156, 0.36", "-3.54098, -52.3576, -13.2234, 0.36", "-3.45333, -52.8418, -13.3071, 0.36", "-3.33649, -53.4845, -13.405, 0.36", "-3.23596, -54.1533, -13.4692, 0.36", "-3.11815, -55.1576, -13.5063, 2.64", "-3.04888, -55.9364, -13.4871, 3.85", "-2.98021, -56.9268, -13.4569, 4.21", "-2.9515, -57.5311, -13.4362, 3.61", "-2.87221, -59.3881, -13.3719, 0.24", "-2.86763, -59.5174, -13.3745, 0.24", "-2.83692, -60.5173, -13.4407, 0.36", "-2.78438, -61.4036, -13.5219, 1.08", "-2.68464, -62.4901, -13.6481, 2.04", "-2.5802, -63.3692, -13.7684, 1.56", "-2.33812, -64.9389, -13.9715, 0.48", "-2.25792, -65.4299, -14.015, 0.48", "-2.07993, -66.5604, -14.066, 0.48", "-1.9936, -67.2528, -14.0591, 0.48", "-1.92721, -68.0296, -14.0175, 0.48", "-1.90294, -69.0434, -13.9868, 0.48", "-1.92802, -69.7071, -13.9719, 2.04", "-2.01688, -70.5473, -14.0103, 3.0", "-2.12742, -71.2399, -14.0903, 3.49", "-2.28321, -72.1601, -14.2365, 2.52", "-2.51608, -73.7175, -14.5484, 0.48", "-2.57284, -74.2692, -14.675, 0.36", "-2.59451, -74.6547, -14.7568, 0.36", "-2.6, -75.3114, -14.8888, 0.6", "-2.59009, -75.9634, -14.9959, 0.6", "-2.5722, -76.7379, -15.0927, 0.36", "-2.52719, -77.8899, -15.1962, 0.36", "-2.50869, -78.3367, -15.2584, 0.36", "-2.48576, -79.1794, -15.4166, 1.68", "-2.48179, -80.2735, -15.6568, 3.49", "-2.51646, -80.9789, -15.8289, 4.09", "-2.59241, -81.7295, -16.0251, 3.49", "-2.86235, -83.5901, -16.5082, 0.96", "-2.97431, -84.3037, -16.697, 0.36", "-3.02709, -84.6473, -16.7848, 0.36", "-3.13471, -85.4078, -16.9749, 0.36", "-3.21349, -85.936, -17.0993, 0.36", "-3.35755, -86.7968, -17.2861, 1.2", "-3.50689, -87.7185, -17.4184, 2.88", "-3.58222, -88.4815, -17.5114, 2.76", "-3.60041, -89.0447, -17.5933, 2.64" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-74.5273, 185.972, -102.65, 0.24", "-75.3262, 185.887, -103.192, 0.24", "-75.7924, 185.889, -103.458, 0.24", "-77.6311, 185.897, -104.302, 1.2", "-78.0033, 185.865, -104.473, 1.2", "-78.9788, 185.7, -104.894, 0.12", "-79.6976, 185.533, -105.214, 0.12", "-80.5028, 185.289, -105.6, 0.12", "-81.2362, 185.007, -105.919, 0.12", "-82.6442, 184.364, -106.421, 0.12", "-83.2366, 184.043, -106.662, 0.12", "-83.8251, 183.663, -106.917, 0.96", "-84.0569, 183.486, -107.035, 1.08", "-84.2569, 183.317, -107.146, 1.08", "-84.7541, 182.953, -107.468, 0.48", "-85.2271, 182.655, -107.775, 0.48", "-85.3292, 182.596, -107.841, 0.48", "-85.5709, 182.456, -107.991, 0.48", "-85.89, 182.268, -108.199, 0.12", "-86.8359, 181.708, -108.791, 0.12", "-87.0142, 181.607, -108.898, 0.12", "-87.5309, 181.318, -109.207, 1.44", "-88.1978, 180.948, -109.61, 1.8", "-89.1532, 180.424, -110.183, 0.12", "-89.4834, 180.233, -110.37, 0.12", "-90.0134, 179.921, -110.631, 1.08" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-74.5273, 185.972, -102.65, 0.12", "-74.5051, 186.535, -102.957, 0.12", "-74.4695, 187.139, -103.287, 0.12", "-74.4101, 188.08, -103.757, 2.4", "-74.3967, 188.365, -103.903, 2.4", "-74.3735, 189.021, -104.222, 2.16", "-74.338, 190.199, -104.772, 0.12", "-74.324, 190.815, -105.076, 0.12", "-74.3378, 191.341, -105.33, 0.12", "-74.3753, 191.855, -105.588, 0.12", "-74.4441, 192.356, -105.901, 1.08", "-74.4937, 192.615, -106.081, 1.08", "-74.709, 193.423, -106.773, 0.12", "-74.8378, 193.808, -107.137, 0.12", "-75.0943, 194.424, -107.805, 0.84", "-75.5011, 195.33, -108.82, 0.12", "-75.686, 195.736, -109.296, 0.12", "-75.9235, 196.278, -109.927, 1.32", "-76.0076, 196.469, -110.154, 1.32", "-76.3839, 197.406, -111.268, 0.12", "-76.4841, 197.686, -111.587, 0.12", "-76.5943, 198.051, -111.967, 0.12", "-76.7671, 198.717, -112.645, 0.12", "-77.0709, 200.06, -114.009, 1.8", "-77.101, 200.231, -114.174, 1.8", "-77.1691, 200.835, -114.694, 0.12", "-77.2361, 201.579, -115.33, 0.12", "-77.2558, 201.915, -115.596, 0.6", "-77.2574, 202.748, -116.15, 0.12", "-77.2157, 203.606, -116.633, 0.12", "-77.1807, 204.287, -116.987, 1.32", "-77.1172, 205.383, -117.499, 0.12", "-77.0928, 206.089, -117.784, 0.12", "-77.0878, 207.149, -118.125, 0.12", "-77.0891, 207.257, -118.148, 0.12", "-77.135, 208.01, -118.259, 1.44", "-77.1896, 208.6, -118.279, 1.92", "-77.3153, 209.636, -118.189, 0.12", "-77.4037, 210.206, -118.108, 0.12", "-77.5002, 210.78, -117.959, 0.12", "-77.6073, 211.331, -117.777, 0.12", "-77.774, 212.04, -117.492, 0.12", "-77.9653, 212.772, -117.169, 1.68", "-78.0511, 213.05, -117.046, 1.68", "-78.4986, 214.196, -116.576, 0.12", "-78.7435, 214.732, -116.394, 0.12", "-78.9984, 215.271, -116.256, 1.08", "-79.1768, 215.618, -116.202, 1.08", "-79.4491, 216.095, -116.158, 0.12", "-79.8395, 216.76, -116.109, 0.12", "-80.1291, 217.224, -116.096, 0.12", "-80.3101, 217.517, -116.072, 0.12", "-80.6032, 218.025, -116.027, 0.12", "-81.1273, 218.961, -115.934, 0.12", "-81.4437, 219.538, -115.843, 1.32", "-81.5898, 219.798, -115.797, 1.68", "-82.1501, 220.707, -115.636, 0.24", "-82.6993, 221.555, -115.501, 0.12", "-83.0293, 222.07, -115.42, 0.12", "-83.6391, 223.04, -115.23, 1.8", "-83.8824, 223.425, -115.149, 2.04", "-84.4953, 224.427, -114.89, 0.12", "-84.9678, 225.262, -114.615, 0.12", "-85.3236, 225.934, -114.368, 0.72", "-85.6863, 226.711, -114.09, 0.12", "-86.1181, 227.804, -113.729, 0.12", "-86.3424, 228.536, -113.485, 1.32", "-86.4936, 229.315, -113.203, 0.12", "-86.6419, 230.561, -112.763, 0.12", "-86.6613, 230.971, -112.638, 1.32", "-86.645, 231.411, -112.533, 1.44", "-86.5525, 232.193, -112.372, 0.96", "-86.3939, 233.291, -112.204, 0.12", "-86.3258, 233.723, -112.159, 0.12", "-86.1857, 234.503, -112.129, 0.24", "-86.0519, 235.323, -112.161, 0.24", "-85.9409, 236.097, -112.248, 0.24", "-85.8318, 236.965, -112.409, 1.68", "-85.7661, 237.498, -112.533, 1.92", "-85.6411, 238.472, -112.763, 0.12", "-85.5156, 239.445, -112.992, 0.12", "-85.4317, 240.072, -113.151, 0.96", "-85.3006, 240.907, -113.377, 0.12", "-85.1188, 242.059, -113.693, 0.12", "-85.0498, 242.485, -113.803, 1.32", "-84.9678, 243.016, -113.924, 1.32", "-84.8883, 243.619, -114.063, 0.24", "-84.7822, 244.463, -114.257, 0.24", "-84.7227, 244.997, -114.377, 0.24", "-84.6436, 245.77, -114.542, 0.24", "-84.5715, 246.836, -114.796, 1.08", "-84.5609, 247.16, -114.89, 0.12", "-84.5621, 247.895, -115.118, 0.12", "-84.5876, 248.414, -115.305, 0.96", "-84.628, 248.836, -115.466, 0.12", "-84.8831, 250.566, -116.127, 0.12", "-85.0441, 251.494, -116.483, 1.44", "-85.13, 251.948, -116.651, 1.8", "-85.3243, 252.822, -116.976, 0.12", "-85.5229, 253.678, -117.28, 0.12", "-85.7348, 254.584, -117.571, 0.12", "-85.7997, 254.888, -117.649, 0.84", "-85.8777, 255.329, -117.721, 0.84", "-85.9943, 256.145, -117.803, 0.12", "-86.0678, 257.02, -117.846, 0.12", "-86.0882, 257.459, -117.87, 0.12", "-86.0979, 258.12, -117.898, 1.08", "-86.0956, 259.364, -117.931, 0.12", "-86.0717, 260.505, -117.945, 0.12", "-86.0278, 261.124, -117.895, 0.12", "-85.9557, 261.85, -117.809, 0.48", "-85.8929, 262.402, -117.734, 0.12", "-85.8324, 262.934, -117.652, 0.12", "-85.7437, 263.582, -117.561, 1.8", "-85.4965, 265.043, -117.247, 0.12", "-85.4052, 265.559, -117.12, 0.12", "-85.3131, 265.981, -117.016, 0.36", "-85.1672, 266.56, -116.907, 0.12", "-84.9705, 267.219, -116.797, 0.12", "-84.7729, 267.818, -116.727, 0.12", "-84.5719, 268.445, -116.676, 0.12", "-84.3369, 269.197, -116.602, 1.08", "-84.1584, 269.764, -116.553, 0.12", "-83.8855, 270.668, -116.494, 0.12", "-83.7468, 271.19, -116.464, 0.12", "-83.4642, 272.356, -116.468, 2.04", "-83.2618, 273.43, -116.523, 0.12", "-83.1084, 274.346, -116.617, 0.12", "-82.9928, 275.09, -116.735, 1.8", "-82.9554, 275.33, -116.779, 1.8", "-82.7581, 276.53, -116.999, 0.12", "-82.5294, 277.869, -117.259, 0.12", "-82.4208, 278.557, -117.371, 0.12", "-82.3251, 279.317, -117.456, 0.72", "-82.2208, 280.278, -117.486, 0.12", "-82.1296, 281.261, -117.443, 0.12", "-82.0954, 281.796, -117.372, 1.44", "-82.0855, 282.278, -117.272, 1.44", "-82.1216, 282.82, -117.145, 0.72", "-82.2393, 283.686, -116.925, 0.12", "-82.365, 284.314, -116.775, 0.12", "-82.4672, 284.729, -116.659, 0.12", "-82.6527, 285.436, -116.443, 0.12", "-82.813, 286.116, -116.244, 0.96", "-82.8952, 286.51, -116.143, 0.12", "-82.9738, 286.875, -116.038, 0.12", "-83.0435, 287.195, -115.928, 0.12", "-83.1382, 287.62, -115.786, 0.36", "-83.2524, 288.169, -115.631, 0.36", "-83.2998, 288.475, -115.52, 0.36", "-83.4062, 289.44, -115.153, 0.96", "-83.4361, 289.801, -115.017, 0.96", "-83.4827, 290.396, -114.801, 0.12", "-83.5336, 290.915, -114.627, 0.12", "-83.6554, 292.074, -114.245, 0.12", "-83.6981, 292.602, -114.089, 1.8", "-83.7195, 293.127, -113.964, 2.04", "-83.7409, 294.745, -113.618, 0.12", "-83.7225, 295.276, -113.511, 0.24", "-83.7187, 295.339, -113.501, 0.36", "-83.6838, 295.79, -113.46, 0.12", "-83.6425, 296.126, -113.437, 0.12", "-83.4885, 296.992, -113.424, 1.32", "-83.2225, 297.938, -113.349, 0.12", "-83.0309, 298.574, -113.273, 0.12", "-82.9435, 298.881, -113.24, 1.2", "-82.7511, 299.52, -113.192, 1.92", "-82.5951, 300.009, -113.166, 1.92", "-81.9624, 301.945, -113.07, 0.12", "-81.3253, 303.919, -112.994, 0.12", "-80.7837, 305.577, -112.925, 0.12", "-80.1868, 307.385, -112.858, 0.12", "-80.1069, 307.626, -112.852, 1.08" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-94.3783, -68.398, -101.065, 0.96", "-94.4654, -69.1952, -105.671, 0.96", "-94.5421, -69.4828, -107.463, 0.12", "-94.5545, -69.6792, -108.368, 0.12", "-94.5648, -69.8414, -109.116, 0.12", "-94.5716, -69.9482, -109.608, 1.56", "-94.628, -70.837, -113.707, 0.84", "-94.6561, -71.0904, -114.631, 1.08", "-94.637, -72.1445, -118.332, 0.84" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-94.3783, -68.398, -101.065, 0.36", "-95.3173, -69.15, -101.466, 0.36", "-95.5367, -69.3419, -101.565, 0.36", "-95.9301, -69.7314, -101.772, 0.36", "-96.333, -70.1591, -101.997, 0.36", "-96.5239, -70.367, -102.1, 0.96", "-96.9299, -70.8285, -102.333, 1.44", "-97.0196, -70.9349, -102.387, 1.44", "-97.4307, -71.4216, -102.659, 0.36", "-97.5632, -71.5705, -102.747, 0.36", "-97.9566, -71.9778, -102.992, 0.12", "-98.6188, -72.6028, -103.367, 1.68", "-98.9284, -72.869, -103.507, 2.52", "-99.9082, -73.6645, -103.916, 0.12", "-100.385, -74.0261, -104.089, 0.12", "-100.889, -74.3944, -104.254, 0.12", "-101.169, -74.5892, -104.335, 0.12", "-101.786, -74.99, -104.476, 0.84", "-102.156, -75.2324, -104.547, 0.12", "-102.797, -75.6329, -104.643, 0.12", "-103.313, -75.9636, -104.746, 0.72", "-103.584, -76.1419, -104.811, 0.12", "-103.975, -76.4096, -104.919, 0.12", "-104.826, -77.0287, -105.225, 0.12", "-105.059, -77.2107, -105.309, 1.44", "-105.494, -77.5806, -105.473, 1.92", "-105.634, -77.7062, -105.526, 1.92", "-105.949, -77.9927, -105.602, 1.92", "-106.586, -78.5737, -105.673, 0.12", "-107.027, -78.9937, -105.722, 0.12", "-107.556, -79.5032, -105.777, 0.12", "-107.916, -79.8309, -105.813, 0.12", "-108.849, -80.6723, -106.027, 1.56", "-109.269, -81.0352, -106.149, 1.56", "-109.968, -81.6778, -106.8, 1.56", "-110.214, -81.9101, -107.138, 0.12", "-110.631, -82.3087, -107.824, 0.12", "-111.07, -82.754, -108.623, 0.12", "-111.487, -83.2006, -109.453, 2.76", "-112.772, -84.6879, -112.205, 0.48", "-112.906, -84.8494, -112.483, 0.48", "-112.985, -84.955, -112.662, 0.12", "-113.157, -85.1915, -113.053, 0.12", "-113.402, -85.5294, -113.562, 1.08", "-113.83, -86.1204, -114.408, 0.12", "-114.146, -86.4868, -114.787, 0.12", "-114.58, -86.9847, -115.27, 0.84", "-114.892, -87.3327, -115.582, 0.84", "-115.149, -87.5826, -115.787, 0.12", "-115.442, -87.8508, -115.963, 0.12", "-116.04, -88.3591, -116.235, 0.12", "-116.314, -88.5982, -116.349, 0.12", "-116.538, -88.7996, -116.416, 0.12", "-117.067, -89.3005, -116.563, 0.12", "-117.643, -89.8344, -116.694, 1.32" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-3.60041, -89.0447, -17.5933, 0.12", "-3.14454, -89.7068, -17.6221, 0.12", "-2.90154, -90.0404, -17.6386, 0.12", "-2.66741, -90.3563, -17.655, 0.96", "-2.27744, -90.8298, -17.6115, 0.36", "-1.95494, -91.1735, -17.5278, 0.12", "-1.56456, -91.5395, -17.3859, 0.12", "-1.32059, -91.7598, -17.2827, 0.48", "-1.16491, -91.8908, -17.2097, 0.12", "-0.246219, -92.5886, -16.7378, 0.12", "0.749645, -93.2671, -16.1683, 2.76", "1.44604, -93.7131, -15.7244, 1.68" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-3.60041, -89.0447, -17.5933, 0.48", "-4.10672, -90.6988, -17.8133, 0.48", "-4.3258, -91.8001, -17.9443, 0.48", "-4.46876, -92.6786, -18.1266, 0.48", "-4.50579, -92.9509, -18.1887, 0.48", "-4.57256, -93.5574, -18.3189, 0.48", "-4.6307, -94.1085, -18.423, 0.48", "-4.7595, -95.2212, -18.6897, 0.48", "-4.94864, -96.6104, -19.0715, 2.04", "-5.09069, -97.5623, -19.3594, 3.49", "-5.19794, -98.1828, -19.5463, 3.85", "-5.41168, -99.1956, -19.837, 3.49", "-6.0084, -101.756, -20.5331, 0.48", "-6.25445, -102.809, -20.8189, 0.48", "-6.49477, -103.919, -21.0982, 0.48", "-6.57195, -104.32, -21.212, 0.48", "-6.68611, -105.006, -21.4452, 0.48", "-6.77164, -105.595, -21.6572, 0.48", "-6.85342, -106.285, -21.8833, 1.32", "-6.95389, -106.906, -22.1324, 1.44", "-7.16663, -107.994, -22.6404, 0.24", "-7.33371, -108.826, -23.0202, 0.24", "-7.53185, -109.791, -23.4648, 0.24", "-7.6695, -110.393, -23.7164, 0.24", "-7.89759, -111.415, -24.0713, 1.8", "-8.12413, -112.445, -24.3794, 2.76", "-8.34951, -113.6, -24.6574, 3.12", "-8.54704, -115.001, -24.9302, 1.92", "-8.63736, -116.085, -25.1274, 0.24", "-8.70105, -117.205, -25.2963, 0.24", "-8.70105, -117.205, -25.2963, 0.96", "-8.72404, -117.703, -25.3296, 1.32", "-8.78106, -118.459, -25.3854, 1.44", "-8.85933, -119.465, -25.3929, 0.48", "-8.88589, -119.727, -25.4028, 0.24", "-8.93847, -120.09, -25.4234, 0.36", "-9.09088, -121.053, -25.4864, 0.36", "-9.15074, -121.446, -25.5069, 0.36", "-9.29154, -122.304, -25.574, 0.36", "-9.38372, -122.907, -25.6296, 1.08", "-9.48327, -123.657, -25.6986, 2.04", "-9.55242, -124.293, -25.7616, 2.64", "-9.65588, -125.323, -25.9008, 1.56", "-9.78184, -126.289, -26.0694, 0.12", "-9.87307, -126.892, -26.1769, 0.12", "-10.0047, -127.765, -26.3234, 0.12", "-10.0834, -128.248, -26.4195, 0.12", "-10.221, -129.019, -26.6269, 1.32", "-10.4382, -130.133, -26.9803, 2.4", "-10.55, -130.794, -27.1705, 3.25", "-10.6581, -131.504, -27.3685, 3.37", "-10.7857, -132.533, -27.6346, 2.28", "-10.9235, -134.079, -27.9764, 0.48", "-10.9428, -134.478, -28.048, 0.48", "-10.9761, -135.52, -28.2119, 0.48", "-10.9903, -136.548, -28.3748, 0.6", "-10.978, -137.299, -28.4738, 0.6", "-10.9519, -137.917, -28.5204, 0.48", "-10.9449, -138.168, -28.5421, 0.48", "-10.9549, -138.845, -28.6522, 0.36", "-10.9941, -139.457, -28.7993, 0.24", "-11.0336, -139.828, -28.9069, 0.24", "-11.123, -140.522, -29.1287, 0.24", "-11.2592, -141.815, -29.5034, 0.36", "-11.3158, -142.545, -29.6954, 0.36", "-11.3439, -143.035, -29.809, 1.56", "-11.4142, -144.221, -30.0402, 2.88", "-11.4518, -144.955, -30.1694, 2.88", "-11.5122, -146.46, -30.4287, 0.24", "-11.5314, -146.975, -30.5011, 0.12", "-11.5665, -147.725, -30.5985, 0.12", "-11.6087, -148.281, -30.6832, 0.12", "-11.6726, -149.045, -30.811, 1.8", "-11.7626, -149.991, -30.9806, 2.64", "-11.8483, -150.864, -31.1423, 2.64", "-11.9697, -152.242, -31.3868, 0.36", "-12.0239, -153.175, -31.5379, 0.12", "-12.0533, -154.071, -31.6868, 0.12", "-12.0696, -154.711, -31.7985, 0.36", "-12.1049, -155.692, -31.9816, 0.36", "-12.1162, -155.969, -32.0441, 0.84", "-12.1538, -156.797, -32.3102, 1.2", "-12.1688, -157.761, -32.5897, 0.48", "-12.1708, -158.333, -32.7597, 0.12", "-12.154, -158.973, -32.9519, 0.12", "-12.0616, -160.09, -33.2183, 0.12", "-11.9186, -161.169, -33.4136, 0.12", "-11.7249, -162.308, -33.5585, 1.68", "-11.5371, -163.292, -33.659, 2.64", "-11.4335, -163.8, -33.7088, 3.0", "-11.1561, -165.271, -33.9359, 0.12", "-11.0997, -165.658, -34.0132, 0.12", "-11.0305, -166.382, -34.179, 0.12", "-11.0098, -167.127, -34.4304, 0.48", "-11.0209, -167.601, -34.6154, 0.48", "-11.0639, -168.567, -35.0667, 0.48", "-11.0869, -169.223, -35.4164, 0.48", "-11.0654, -169.621, -35.631, 0.48", "-11.024, -169.966, -35.8232, 0.48", "-10.961, -170.305, -35.9993, 0.48", "-10.7933, -171.154, -36.4148, 1.2", "-10.641, -171.858, -36.7284, 1.8", "-10.3487, -173.249, -37.3462, 0.6", "-10.1917, -174.029, -37.6944, 0.12", "-10.0878, -174.654, -37.9452, 0.12", "-10.0141, -175.341, -38.1688, 0.12", "-10.0004, -175.71, -38.2496, 0.24", "-10.0076, -176.214, -38.327, 0.24", "-10.0379, -176.755, -38.365, 1.32", "-10.0935, -177.613, -38.3895, 1.8", "-10.1537, -178.367, -38.4142, 2.88", "-10.1945, -179.122, -38.447, 3.25", "-10.2459, -180.05, -38.4831, 2.64" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-10.2459, -180.05, -38.4831, 1.08", "-10.3575, -180.713, -41.6898, 1.08", "-10.3693, -181.316, -44.3133, 0.48", "-10.3543, -181.571, -45.293, 1.32", "-10.3069, -181.893, -46.478, 1.08", "-10.2696, -182.056, -47.0614, 1.44", "-10.091, -182.571, -48.861, 1.2", "-9.85188, -182.953, -49.9846, 1.2", "-9.72101, -183.128, -50.4356, 1.56", "-9.39094, -183.568, -51.6616, 1.32", "-9.20212, -183.829, -52.4338, 0.72", "-8.98808, -184.172, -53.3898, 0.72", "-8.74835, -184.657, -54.5813, 0.72", "-8.63833, -184.935, -55.3212, 1.92", "-8.45973, -186.053, -59.0156, 0.84", "-8.478, -186.507, -60.6273, 0.6", "-8.52947, -186.752, -61.5375, 1.44", "-8.57454, -186.876, -62.0116, 1.44", "-9.17688, -187.946, -66.4383, 2.52", "-9.93946, -188.898, -70.8656, 0.96", "-10.0098, -188.966, -71.2041, 0.96", "-10.0917, -189.031, -71.5479, 0.96", "-10.1888, -189.1, -71.9285, 0.96", "-10.7683, -189.497, -74.058, 1.56", "-11.2545, -189.848, -75.7344, 1.56", "-11.7909, -190.299, -77.7623, 1.2", "-12.1025, -190.585, -79.0756, 1.92", "-13.0203, -191.524, -83.6348, 1.8", "-13.6921, -192.303, -87.5778, 1.32", "-13.9951, -192.766, -89.9724, 1.8", "-14.0461, -192.884, -90.6312, 0.96", "-14.0581, -193.023, -91.5241, 0.96", "-13.8846, -193.291, -93.7737, 0.84", "-13.8115, -193.311, -94.0794, 0.84", "-13.2024, -193.343, -95.6961, 0.12", "-12.8392, -193.336, -96.5682, 0.12", "-12.5087, -193.341, -97.4219, 1.08", "-11.8716, -193.435, -99.0674, 0.36", "-11.5305, -193.573, -99.8944, 1.44", "-11.3397, -193.742, -100.422, 0.12", "-11.2888, -193.838, -100.581, 0.12", "-11.2052, -194.179, -100.956, 0.12", "-11.1514, -194.651, -101.332, 1.2", "-11.1558, -194.903, -101.503, 1.2", "-11.2835, -196.039, -102.359, 0.12", "-11.3148, -196.275, -102.547, 0.12", "-11.3766, -196.656, -102.859, 0.12", "-11.5049, -197.319, -103.387, 1.08", "-11.6975, -198.157, -104.1, 1.68", "-11.915, -199.06, -104.855, 0.12", "-11.9959, -199.379, -105.098, 0.12", "-12.0387, -199.563, -105.229, 0.12", "-12.1631, -200.144, -105.651, 1.08", "-12.3757, -201.547, -106.583, 0.12", "-12.4099, -201.891, -106.794, 0.12", "-12.44, -202.357, -107.062, 0.12", "-12.4707, -203.159, -107.493, 1.68", "-12.4925, -204.232, -108.058, 0.12", "-12.4891, -205.371, -108.62, 0.12", "-12.4761, -205.952, -108.844, 0.12", "-12.4634, -206.335, -109.0, 0.12", "-12.4268, -206.984, -109.276, 1.56" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-10.2459, -180.05, -38.4831, 0.12", "-10.6501, -181.967, -39.0149, 0.12", "-10.7884, -182.678, -39.1906, 0.24", "-10.9934, -183.712, -39.5192, 0.24", "-11.1764, -184.671, -39.8487, 0.24", "-11.2282, -184.981, -39.9552, 0.72", "-11.2948, -185.508, -40.1279, 1.08", "-11.3184, -186.017, -40.2741, 1.08", "-11.3306, -187.335, -40.7177, 0.24", "-11.3133, -187.815, -40.939, 0.24", "-11.2605, -188.541, -41.3194, 0.36", "-11.1803, -189.381, -41.8013, 0.36", "-11.077, -190.304, -42.3903, 0.36", "-10.9585, -191.515, -43.1677, 1.8", "-10.8932, -192.489, -43.7492, 2.76", "-10.8976, -193.041, -44.1386, 2.76", "-10.9677, -194.632, -45.3332, 0.6", "-10.9929, -195.232, -45.7815, 0.12", "-10.9717, -196.084, -46.3531, 0.12", "-10.8869, -196.867, -46.81, 0.48", "-10.4777, -199.219, -48.1069, 0.48", "-10.2589, -200.183, -48.6179, 2.04", "-10.0133, -201.036, -49.0228, 2.28", "-9.49468, -202.652, -49.7004, 0.48", "-9.16732, -203.603, -50.0496, 0.12", "-9.03226, -203.993, -50.1608, 0.12", "-8.9153, -204.387, -50.2363, 0.12", "-8.84363, -204.798, -50.3349, 0.12", "-8.75983, -205.748, -50.5537, 0.12", "-8.70502, -206.784, -50.828, 0.12", "-8.67922, -207.19, -50.9617, 0.12", "-8.60024, -208.471, -51.4561, 1.44", "-8.53205, -209.455, -51.8728, 2.52", "-8.4502, -210.331, -52.2742, 2.4", "-8.2895, -211.719, -52.9641, 1.2", "-8.18248, -212.882, -53.552, 0.12", "-8.14288, -213.48, -53.8435, 0.12", "-8.12646, -213.972, -54.0656, 0.12", "-8.12738, -214.413, -54.2743, 0.12", "-8.15579, -215.236, -54.6526, 1.2", "-8.2036, -216.363, -55.0936, 2.16", "-8.22864, -217.365, -55.4458, 1.08", "-8.23645, -218.582, -55.9236, 0.36", "-8.23497, -219.29, -56.2323, 0.12", "-8.24363, -219.776, -56.4695, 0.12", "-8.24739, -220.148, -56.6563, 0.48", "-8.25059, -220.87, -57.0228, 0.6", "-8.27618, -222.138, -57.6326, 0.48", "-8.32583, -222.974, -57.9943, 0.36", "-8.44142, -223.945, -58.3695, 0.72", "-8.57982, -224.748, -58.6583, 1.8", "-8.74556, -225.551, -58.9133, 2.52", "-8.91255, -226.325, -59.0931, 2.76", "-9.27857, -228.015, -59.2887, 0.6", "-9.40791, -228.617, -59.3168, 0.24", "-9.52716, -229.248, -59.3146, 0.36", "-9.65326, -229.916, -59.3063, 0.36", "-9.79841, -230.776, -59.2657, 0.36", "-9.92126, -231.579, -59.2218, 0.36", "-9.96772, -231.959, -59.2056, 1.08", "-10.0779, -232.765, -59.1989, 1.68", "-10.1468, -233.178, -59.2062, 1.92", "-10.2805, -233.854, -59.2464, 2.04", "-10.4768, -234.832, -59.3473, 1.32", "-10.6043, -235.566, -59.4276, 0.36", "-10.6902, -236.235, -59.4948, 0.36", "-10.7604, -237.032, -59.5627, 0.36", "-10.7819, -237.438, -59.5878, 0.6", "-10.8057, -237.985, -59.6044, 0.72", "-10.8318, -238.527, -59.6011, 0.72", "-10.8834, -239.223, -59.569, 0.36", "-10.9661, -240.02, -59.5196, 0.36", "-11.0725, -240.836, -59.4597, 0.36", "-11.1356, -241.397, -59.4087, 0.6", "-11.1869, -242.004, -59.3494, 0.48", "-11.2448, -243.067, -59.2445, 0.36", "-11.243, -243.495, -59.2075, 0.36", "-11.2204, -244.089, -59.1535, 0.36", "-11.1109, -245.273, -59.046, 1.68", "-10.9624, -246.206, -58.9674, 3.12", "-10.8726, -246.601, -58.9379, 3.37", "-10.5424, -247.699, -58.8938, 2.16" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-10.5424, -247.699, -58.8938, 0.24", "-11.357, -249.019, -59.3396, 0.24", "-11.6755, -249.52, -59.4339, 0.24", "-11.9089, -249.872, -59.4711, 0.24", "-12.1304, -250.222, -59.4694, 0.24", "-12.4035, -250.684, -59.4366, 0.24", "-12.6961, -251.207, -59.381, 0.24", "-13.0277, -251.857, -59.2226, 0.96", "-13.1981, -252.186, -59.1397, 1.32", "-13.4798, -252.709, -58.9898, 0.72", "-13.7511, -253.169, -58.8455, 0.12", "-14.0674, -253.654, -58.6873, 0.12", "-14.3631, -254.148, -58.537, 0.12", "-14.5555, -254.493, -58.4553, 0.12", "-14.9661, -255.356, -58.2972, 1.44", "-15.1731, -255.851, -58.2435, 1.68", "-15.4247, -256.541, -58.1881, 1.08", "-15.6232, -257.179, -58.1035, 0.48", "-15.7198, -257.593, -58.0083, 0.12", "-15.8847, -258.421, -57.8214, 0.12", "-16.0273, -259.218, -57.546, 0.48", "-16.0769, -259.49, -57.4268, 0.48", "-16.2666, -260.433, -56.8914, 0.48", "-16.5021, -261.273, -56.3503, 0.96", "-16.6865, -261.867, -55.9361, 0.96", "-17.0779, -263.023, -55.1233, 0.12", "-17.1993, -263.403, -54.8518, 0.12", "-17.4157, -264.113, -54.3812, 1.2", "-17.6108, -264.766, -53.996, 1.68", "-17.732, -265.151, -53.7705, 2.16", "-17.849, -265.53, -53.5522, 2.16", "-18.3064, -267.006, -52.896, 0.36", "-18.4563, -267.451, -52.6582, 0.36", "-18.5864, -267.779, -52.4648, 1.08", "-18.8441, -268.361, -52.0908, 1.32", "-19.003, -268.68, -51.8815, 1.2", "-19.368, -269.316, -51.4593, 1.2", "-20.5184, -270.932, -50.2908, 0.12", "-20.7862, -271.234, -50.0415, 0.24", "-21.1204, -271.552, -49.7639, 0.24", "-21.3147, -271.727, -49.6213, 0.36", "-21.7514, -272.098, -49.297, 0.36", "-22.3498, -272.588, -48.8536, 0.12", "-22.7788, -272.891, -48.6949, 0.12", "-23.1532, -273.139, -48.529, 0.96", "-23.6748, -273.447, -48.2525, 1.44" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-10.5424, -247.699, -58.8938, 0.12", "-10.0565, -248.734, -59.2646, 0.12", "-9.80815, -249.248, -59.3925, 0.12", "-9.37736, -250.145, -59.5837, 0.84", "-8.86823, -251.259, -59.7821, 0.84", "-8.52902, -252.028, -59.9132, 0.12", "-8.22163, -252.777, -60.0315, 0.12", "-7.88823, -253.696, -60.1566, 0.48", "-7.68574, -254.372, -60.2259, 0.6", "-7.49324, -255.216, -60.2762, 0.24", "-7.40902, -255.72, -60.2874, 0.12", "-7.32605, -256.557, -60.3517, 0.24", "-7.28679, -257.402, -60.4797, 0.24", "-7.27968, -258.229, -60.6465, 0.24", "-7.28969, -258.649, -60.7274, 0.84", "-7.3402, -259.638, -60.9531, 1.32", "-7.38367, -260.436, -61.1661, 1.8", "-7.44313, -261.712, -61.5568, 2.4", "-7.49359, -262.523, -61.8205, 1.92", "-7.61113, -263.72, -62.2481, 0.48", "-7.70746, -264.474, -62.5321, 0.12", "-7.82322, -265.221, -62.8112, 0.12", "-7.88302, -265.644, -62.9536, 0.12", "-7.95677, -266.497, -63.2482, 0.6", "-7.9768, -267.303, -63.5512, 0.24", "-7.95619, -268.005, -63.8052, 0.24", "-7.92782, -268.555, -63.9731, 0.96", "-7.83892, -269.848, -64.3224, 1.8", "-7.68536, -271.232, -64.6592, 0.96", "-7.49648, -272.266, -64.8737, 0.36", "-7.27587, -273.224, -65.0331, 0.36", "-6.96097, -274.449, -65.2103, 0.36", "-6.74685, -275.274, -65.2765, 0.36", "-6.61944, -275.83, -65.2813, 0.36", "-6.3995, -276.911, -65.2389, 1.92", "-6.20672, -277.959, -65.1697, 3.12", "-6.07208, -278.842, -65.1116, 3.12", "-5.84576, -280.834, -64.8709, 0.36", "-5.73078, -282.506, -64.5558, 0.36", "-5.71471, -283.259, -64.3746, 0.96", "-5.73463, -284.093, -64.1253, 1.56", "-5.78594, -285.04, -63.7898, 1.68", "-5.90516, -286.743, -63.137, 0.84", "-5.9751, -287.6, -62.7269, 0.36", "-6.00425, -288.08, -62.4504, 0.36", "-6.02399, -288.69, -62.0891, 0.6", "-6.01894, -289.315, -61.7489, 0.36", "-5.95301, -290.232, -61.3733, 0.36", "-5.72113, -291.726, -61.0256, 0.12", "-5.54682, -292.454, -60.9183, 0.12", "-5.27887, -293.26, -60.8335, 1.32", "-4.92834, -294.049, -60.7939, 1.8", "-4.312, -295.214, -60.8101, 1.68", "-3.89574, -295.901, -60.8672, 1.32", "-3.50609, -296.48, -60.936, 0.36", "-3.27109, -296.802, -60.9597, 0.36", "-2.70759, -297.498, -60.9447, 0.48", "-2.14263, -298.134, -60.8371, 0.12", "-1.43814, -298.931, -60.5877, 0.12", "-0.938628, -299.517, -60.3433, 1.08", "-0.739272, -299.75, -60.2335, 1.32", "-0.181049, -300.411, -59.8284, 0.84", "0.259519, -300.943, -59.4281, 0.12", "0.901667, -301.769, -58.7478, 0.12", "1.50407, -302.658, -57.9745, 1.2", "1.76078, -303.072, -57.6284, 1.68", "2.5066, -304.336, -56.5423, 0.6", "2.77139, -304.807, -56.1402, 0.48", "2.99915, -305.19, -55.7874, 0.48", "3.37885, -305.748, -55.2167, 0.12", "3.88414, -306.401, -54.6123, 0.12", "4.23403, -306.799, -54.3248, 0.48", "4.65363, -307.223, -54.1419, 0.6", "5.23616, -307.868, -54.0151, 0.36", "5.55352, -308.263, -53.9667, 0.36", "6.16726, -309.258, -53.9264, 1.32", "6.64623, -310.32, -53.9154, 2.4", "6.7874, -310.735, -53.9217, 2.52", "7.19129, -312.219, -53.9385, 1.2", "7.47534, -313.314, -53.9785, 0.12", "7.73648, -314.232, -54.022, 0.12", "7.86223, -314.627, -54.0372, 0.12", "8.01244, -315.05, -54.072, 0.48", "8.60771, -316.539, -54.229, 0.48", "9.002, -317.485, -54.382, 0.48", "9.42507, -318.595, -54.6414, 0.48", "9.61291, -319.178, -54.7882, 0.12", "9.70227, -319.726, -54.9396, 0.12", "9.69516, -320.413, -55.1349, 1.44", "9.48489, -321.509, -55.4556, 2.52", "9.24415, -322.346, -55.6961, 2.64", "8.95447, -323.203, -55.9708, 2.4", "8.44641, -324.876, -56.5274, 0.6", "8.20926, -325.699, -56.8055, 0.36", "7.90002, -326.836, -57.1827, 0.48", "7.70744, -327.692, -57.4441, 0.48", "7.52186, -328.734, -57.7516, 0.36", "7.32831, -330.364, -58.1915, 0.36", "7.30267, -330.78, -58.2869, 1.32", "7.27003, -331.532, -58.4374, 1.68", "7.20003, -332.375, -58.5651, 1.92", "7.14811, -332.797, -58.6103, 2.04", "6.89854, -334.363, -58.7111, 0.36", "6.82095, -334.783, -58.7374, 0.36", "6.72958, -335.402, -58.7705, 0.36", "6.60983, -336.378, -58.9876, 0.36", "6.52092, -337.066, -59.1602, 0.36", "6.37253, -338.279, -59.5034, 0.36", "6.29096, -339.073, -59.7713, 1.68", "6.22311, -340.004, -60.1451, 2.64", "6.18039, -343.147, -61.7349, 2.64" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "6.18039, -343.147, -61.7349, 0.12", "6.80164, -344.676, -62.1071, 0.12", "6.92676, -345.016, -62.2219, 0.12", "7.0089, -345.247, -62.3084, 0.12", "7.19313, -345.803, -62.5636, 0.6", "7.3086, -346.278, -62.8324, 0.12", "7.35353, -346.497, -62.9646, 0.12", "7.41469, -347.165, -63.4639, 0.96", "7.42834, -347.673, -63.9391, 1.56", "7.41293, -348.436, -64.7336, 1.2", "7.36498, -349.301, -65.6414, 0.24", "7.31551, -349.56, -65.9515, 0.72", "7.136, -350.065, -66.6532, 1.08", "6.71071, -350.84, -67.9251, 0.12", "6.59785, -351.023, -68.2439, 0.12", "6.29667, -351.509, -69.0818, 1.8", "5.41203, -353.094, -71.7173, 1.68", "4.95787, -354.036, -73.1982, 1.32", "4.46026, -355.286, -75.0154, 0.84", "4.27676, -355.865, -75.7974, 1.44", "4.17431, -356.341, -76.3965, 2.16", "4.13094, -357.041, -77.1511, 0.24", "4.29983, -357.771, -77.6938, 0.24", "4.45709, -358.11, -77.8787, 0.72", "4.67159, -358.432, -78.0128, 0.96", "5.26002, -359.167, -78.3546, 0.12", "5.67354, -359.612, -78.5809, 0.12", "6.60025, -360.571, -79.0517, 0.12", "7.56451, -361.65, -79.5434, 1.2", "8.0099, -362.181, -79.7668, 1.92", "8.78718, -363.145, -80.1512, 0.12", "9.10186, -363.554, -80.3158, 0.12", "9.42441, -364.096, -80.614, 0.12", "9.70023, -364.814, -81.2546, 0.24", "9.81418, -365.268, -81.9231, 0.24", "9.85381, -365.444, -82.2859, 0.24", "9.95269, -365.941, -83.6054, 1.8", "10.085, -366.632, -85.6254, 1.8", "10.1152, -367.152, -87.52, 0.24", "10.0727, -367.41, -88.7461, 0.48", "10.0111, -367.547, -89.5128, 0.72", "9.92036, -367.703, -90.5117, 1.68", "9.8571, -367.781, -91.1306, 1.68", "9.61786, -368.136, -94.1289, 1.68", "9.40753, -368.463, -97.0395, 1.44", "9.34454, -368.583, -98.0883, 1.8", "9.31404, -368.653, -98.734, 1.92", "9.29225, -368.831, -100.426, 1.68", "9.32245, -368.944, -101.347, 0.24", "9.39701, -369.06, -101.839, 0.24", "9.54741, -369.318, -102.453, 0.24", "9.64829, -369.503, -102.804, 0.72", "9.75, -369.701, -103.131, 0.96", "10.047, -370.177, -103.786, 0.84", "10.3351, -370.479, -104.461, 0.12", "10.4498, -370.51, -104.794, 0.12", "10.6461, -370.489, -105.393, 0.24", "10.7947, -370.469, -105.827, 0.24", "10.8241, -370.478, -106.111, 0.24", "10.6864, -370.603, -107.615, 0.84", "10.3698, -370.698, -108.945, 1.32", "10.0119, -370.76, -110.075, 2.28", "9.81046, -370.772, -110.608, 2.76", "8.13609, -370.744, -114.573, 2.88", "6.99784, -370.652, -117.084, 2.16", "5.81203, -370.491, -119.613, 1.08", "5.52289, -370.44, -120.233, 1.08", "4.92038, -370.315, -121.548, 2.04", "4.76539, -370.278, -121.908, 2.04", "2.54301, -369.654, -127.843, 0.6", "2.30701, -369.613, -128.579, 0.48", "1.89644, -369.655, -130.098, 0.96", "1.62015, -369.765, -131.207, 0.12", "1.56723, -369.814, -131.452, 0.12", "1.51948, -369.873, -131.684, 0.12", "1.45811, -370.273, -132.404, 0.6", "1.37441, -370.697, -133.072, 0.12", "1.38193, -370.855, -133.275, 0.12", "1.56448, -371.471, -134.055, 1.32" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "6.18039, -343.147, -61.7349, 0.12", "6.19755, -344.647, -61.6716, 0.12", "6.2358, -345.449, -61.6892, 0.12", "6.29336, -346.217, -61.7286, 0.6", "6.33901, -346.68, -61.7598, 0.36", "6.42987, -347.446, -61.7688, 0.36", "6.54564, -348.24, -61.7899, 0.36", "6.75769, -349.212, -61.8487, 0.36", "6.84605, -349.538, -61.8446, 0.84", "6.98306, -349.994, -61.8069, 0.84", "7.36279, -351.145, -61.6572, 0.24", "7.79669, -352.399, -61.4131, 0.24", "8.09129, -353.217, -61.2163, 0.24", "8.6375, -354.592, -60.851, 0.84", "8.94415, -355.323, -60.6513, 1.44", "9.44318, -356.455, -60.3469, 0.72", "9.79735, -357.26, -60.1185, 0.12", "9.92231, -357.555, -60.0153, 0.12", "10.2205, -358.303, -59.7668, 0.12", "10.4681, -359.036, -59.5254, 0.72", "10.5905, -359.456, -59.3366, 0.72", "10.7969, -360.306, -58.9108, 0.12", "10.8999, -360.847, -58.667, 0.12", "10.9718, -361.243, -58.4896, 0.12", "11.2015, -362.513, -57.9527, 1.44", "11.3787, -363.362, -57.6041, 2.04", "11.5781, -364.248, -57.2514, 2.16", "11.8498, -365.353, -56.8527, 1.44", "12.1314, -366.374, -56.5096, 0.96", "12.3633, -367.117, -56.3057, 0.48", "12.5792, -367.784, -56.1738, 0.12", "12.7562, -368.3, -56.0932, 0.12", "12.9049, -368.708, -56.0251, 0.12", "13.2076, -369.505, -55.8987, 0.12", "13.5425, -370.443, -55.8026, 0.12", "13.75, -370.944, -55.7637, 0.84", "14.1653, -371.799, -55.6951, 1.56", "14.4877, -372.374, -55.6398, 1.8", "14.9816, -373.2, -55.5651, 1.32", "15.3915, -373.882, -55.5063, 0.12", "15.875, -374.703, -55.4455, 0.12", "16.2867, -375.429, -55.4052, 0.84", "16.6985, -376.196, -55.3778, 0.96", "16.9686, -376.736, -55.3768, 0.12", "17.1479, -377.151, -55.3937, 0.12", "17.4133, -377.855, -55.4759, 0.12", "17.5595, -378.282, -55.512, 0.12", "17.7878, -378.903, -55.5548, 1.56", "18.0703, -379.602, -55.5738, 1.92", "18.3118, -380.161, -55.5714, 2.28", "18.9427, -381.594, -55.5454, 1.2", "19.5354, -382.963, -55.5237, 0.12", "19.835, -383.753, -55.5368, 0.12", "19.9777, -384.208, -55.5558, 0.12", "20.1304, -384.791, -55.5967, 1.08", "20.2887, -385.529, -55.6685, 1.56", "20.3663, -386.178, -55.7629, 1.44", "20.4306, -387.029, -55.9637, 0.12", "20.4512, -387.322, -56.033, 0.12", "20.535, -388.166, -56.2289, 0.12", "20.636, -388.886, -56.4309, 0.12", "20.8188, -389.957, -56.7508, 0.12", "20.9006, -390.397, -56.8799, 0.84", "21.0566, -391.162, -57.1061, 1.2", "21.1526, -391.595, -57.2429, 1.2", "21.488, -392.926, -57.6839, 0.12", "21.6982, -393.6, -57.9077, 0.12", "21.7942, -393.873, -57.9914, 0.12", "22.071, -394.649, -58.1691, 0.72", "22.3178, -395.355, -58.2632, 0.72", "22.5284, -395.96, -58.2832, 0.12", "22.7339, -396.6, -58.227, 0.12", "22.881, -397.171, -58.1761, 0.12", "23.1019, -398.248, -58.066, 1.44", "23.2189, -398.983, -57.9837, 1.92", "23.2714, -399.457, -57.9494, 1.92", "23.3663, -400.813, -57.903, 0.12", "23.4639, -402.094, -57.9158, 0.12", "23.493, -402.324, -57.9302, 0.6", "23.6082, -403.112, -58.0293, 0.72", "23.7709, -404.131, -58.1974, 0.48", "23.8904, -404.879, -58.3379, 0.24", "24.018, -405.696, -58.5155, 0.36", "24.1609, -406.833, -58.7544, 0.36", "24.1905, -407.942, -58.9775, 0.36", "24.118, -408.673, -59.1019, 0.48", "24.0286, -409.283, -59.194, 0.72", "23.8596, -410.058, -59.3121, 0.72", "23.6571, -410.665, -59.3978, 0.72", "23.0354, -412.027, -59.5605, 2.04", "22.5382, -412.984, -59.6296, 3.25" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "22.5382, -412.984, -59.6296, 0.12", "24.2924, -413.964, -59.5641, 0.12", "24.8962, -414.267, -59.5413, 0.12", "25.0107, -414.32, -59.5391, 0.48", "25.3559, -414.475, -59.5473, 0.48", "25.6207, -414.597, -59.5599, 0.12", "26.2356, -414.884, -59.5939, 0.12", "26.6001, -415.043, -59.6241, 0.72", "26.9778, -415.234, -59.5816, 0.72", "27.4341, -415.511, -59.4545, 0.12", "28.3512, -416.166, -59.0767, 0.12", "28.7603, -416.493, -58.8617, 0.96", "29.0053, -416.704, -58.7064, 0.96", "30.4614, -418.036, -57.6, 0.12", "30.8982, -418.466, -57.1873, 0.12", "31.0816, -418.662, -56.9622, 0.12", "31.2771, -418.91, -56.6223, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "22.5382, -412.984, -59.6296, 2.64", "21.4604, -413.67, -59.8777, 2.64", "19.3355, -415.006, -60.1161, 0.24", "18.9705, -415.259, -60.1269, 0.24", "18.4864, -415.633, -60.1124, 0.24", "17.4165, -416.556, -59.9747, 0.24", "17.1089, -416.858, -59.9278, 0.24", "16.8027, -417.255, -59.7779, 0.24", "16.3958, -417.942, -59.4305, 0.24", "16.1227, -418.471, -59.1964, 1.08", "15.8192, -419.202, -58.9416, 1.56", "15.5156, -420.077, -58.7183, 1.68", "15.1365, -421.469, -58.3906, 0.12", "15.0786, -421.749, -58.3306, 0.12", "15.0144, -422.19, -58.2544, 0.48", "14.9581, -422.77, -58.1963, 0.48", "14.9498, -422.94, -58.1925, 0.12", "14.951, -424.101, -58.1919, 0.12", "14.9799, -424.692, -58.2288, 0.12", "15.0268, -425.849, -58.3039, 0.12", "15.0356, -426.311, -58.3481, 1.32", "15.0237, -426.911, -58.4172, 1.08", "14.9748, -427.487, -58.4863, 0.12", "14.8847, -428.081, -58.5551, 0.12", "14.7555, -428.636, -58.6082, 0.12", "14.5646, -429.308, -58.6536, 0.12", "14.2227, -430.355, -58.6917, 0.12", "13.8986, -431.255, -58.7243, 1.2", "13.6362, -431.937, -58.7487, 1.44", "13.3302, -432.695, -58.7666, 0.12", "12.9323, -433.635, -58.7641, 0.12", "12.6928, -434.205, -58.7312, 0.6" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_24", "dend_21", "dend_0", "dend_32", "dend_25", "dend_23", "dend_22", "dend_20", "dend_1", "dend_27", "dend_26", "dend_15", "dend_2", "dend_31", "dend_28", "dend_19", "dend_16", "dend_14", "dend_3", "dend_30", "dend_29", "dend_18", "dend_17", "dend_13", "dend_4", "dend_12", "dend_5", "dend_11", "dend_6", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_24", "dend_21", "dend_0", "dend_32", "dend_25", "dend_23", "dend_22", "dend_20", "dend_1", "dend_27", "dend_26", "dend_15", "dend_2", "dend_31", "dend_28", "dend_19", "dend_16", "dend_14", "dend_3", "dend_30", "dend_29", "dend_18", "dend_17", "dend_13", "dend_4", "dend_12", "dend_5", "dend_11", "dend_6", "dend_10", "dend_7", "dend_9", "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "5.67935E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.6794998E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cSTUT_7_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cSTUT189_L5_LBC_6f185d799a_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_24, id: dend_24, parent: soma_0
create dend_24
public dend_24
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_24
create dend_32
public dend_32
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_0
create dend_20
public dend_20
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_15, id: dend_15, parent: dend_1
create dend_15
public dend_15
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_19, id: dend_19, parent: dend_15
create dend_19
public dend_19
// Section: dend_16, id: dend_16, parent: dend_15
create dend_16
public dend_16
// Section: dend_14, id: dend_14, parent: dend_2
create dend_14
public dend_14
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_13, id: dend_13, parent: dend_3
create dend_13
public dend_13
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_11, id: dend_11, parent: dend_5
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_36
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_24(0), soma_0(0.4999990498682201)
    connect dend_21(0), soma_0(0.4999990498682201)
    connect dend_0(0), soma_0(0.4999990498682201)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_15(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_19(0), dend_15(1.0)
    connect dend_16(0), dend_15(1.0)
    connect dend_14(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_13(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_11(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.291345, -11.9572, -0.745668, 2.83924 ) }
    soma_0 { pt3dadd( 0.329834, -10.8055, -0.67345, 4.66212 ) }
    soma_0 { pt3dadd( 0.368323, -9.65383, -0.601232, 6.28225 ) }
    soma_0 { pt3dadd( 0.406811, -8.50213, -0.529013, 7.64969 ) }
    soma_0 { pt3dadd( 0.4453, -7.35043, -0.456795, 8.93084 ) }
    soma_0 { pt3dadd( 0.483789, -6.19873, -0.384577, 10.0574 ) }
    soma_0 { pt3dadd( 0.522278, -5.04703, -0.312359, 10.8977 ) }
    soma_0 { pt3dadd( 0.560767, -3.89533, -0.24014, 11.5145 ) }
    soma_0 { pt3dadd( 0.599255, -2.74363, -0.167922, 11.78 ) }
    soma_0 { pt3dadd( 0.637744, -1.59192, -0.0957039, 11.9272 ) }
    soma_0 { pt3dadd( 0.676233, -0.440222, -0.0234857, 12.0017 ) }
    soma_0 { pt3dadd( 0.714722, 0.711479, 0.0487325, 11.8836 ) }
    soma_0 { pt3dadd( 0.75321, 1.86318, 0.120951, 11.6932 ) }
    soma_0 { pt3dadd( 0.791699, 3.01488, 0.193169, 11.3303 ) }
    soma_0 { pt3dadd( 0.830188, 4.16658, 0.265387, 10.9521 ) }
    soma_0 { pt3dadd( 0.868677, 5.31828, 0.337605, 9.94576 ) }
    soma_0 { pt3dadd( 0.907166, 6.46999, 0.409824, 8.97095 ) }
    soma_0 { pt3dadd( 0.945654, 7.62169, 0.482042, 7.75467 ) }
    soma_0 { pt3dadd( 0.984143, 8.77339, 0.55426, 5.92032 ) }
    soma_0 { pt3dadd( 1.02263, 9.92509, 0.626478, 4.15016 ) }
    soma_0 { pt3dadd( 1.06112, 11.0768, 0.698697, 2.55961 ) }
    // Section: dend_24, id: dend_24, parent: soma_0 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.13709, 10.8469, -8.92677, 1.08 ) }
    dend_24 { pt3dadd( -1.83147, 11.0595, -8.88761, 0.96 ) }
    dend_24 { pt3dadd( -2.56961, 11.2688, -8.80499, 1.44 ) }
    dend_24 { pt3dadd( -3.0333, 11.3979, -8.74347, 1.68 ) }
    dend_24 { pt3dadd( -3.60061, 11.5409, -8.66558, 1.68 ) }
    dend_24 { pt3dadd( -4.63987, 11.7834, -8.5259, 1.2 ) }
    dend_24 { pt3dadd( -5.50351, 11.9641, -8.43286, 0.72 ) }
    dend_24 { pt3dadd( -6.16098, 12.0839, -8.39631, 0.6 ) }
    dend_24 { pt3dadd( -6.37031, 12.1221, -8.41025, 0.6 ) }
    dend_24 { pt3dadd( -7.02212, 12.2588, -8.5171, 1.44 ) }
    dend_24 { pt3dadd( -7.56448, 12.3977, -8.67041, 2.28 ) }
    dend_24 { pt3dadd( -8.35563, 12.6641, -9.01587, 2.16 ) }
    dend_24 { pt3dadd( -9.25498, 13.084, -9.63935, 1.08 ) }
    dend_24 { pt3dadd( -10.1305, 13.6651, -10.5191, 0.48 ) }
    dend_24 { pt3dadd( -10.3351, 13.8694, -10.8108, 0.48 ) }
    dend_24 { pt3dadd( -10.5428, 14.2066, -11.2685, 1.08 ) }
    dend_24 { pt3dadd( -10.6671, 14.5482, -11.706, 1.68 ) }
    dend_24 { pt3dadd( -10.8422, 15.6705, -13.039, 1.8 ) }
    dend_24 { pt3dadd( -10.8515, 16.1662, -13.5848, 1.44 ) }
    dend_24 { pt3dadd( -10.8241, 16.7475, -14.1792, 0.72 ) }
    dend_24 { pt3dadd( -10.8173, 17.105, -14.5352, 0.12 ) }
    dend_24 { pt3dadd( -10.8404, 17.332, -14.7349, 0.12 ) }
    dend_24 { pt3dadd( -10.8888, 17.4938, -14.8451, 0.12 ) }
    dend_24 { pt3dadd( -11.0599, 17.7901, -14.9361, 0.48 ) }
    dend_24 { pt3dadd( -11.1231, 17.8715, -14.9553, 0.12 ) }
    dend_24 { pt3dadd( -11.5286, 18.3233, -15.0425, 0.12 ) }
    dend_24 { pt3dadd( -12.0573, 18.8944, -15.1585, 1.8 ) }
    dend_24 { pt3dadd( -12.5084, 19.3886, -15.2613, 2.76 ) }
    dend_24 { pt3dadd( -12.866, 19.7862, -15.3403, 3.0 ) }
    dend_24 { pt3dadd( -13.3892, 20.3872, -15.4515, 1.92 ) }
    dend_24 { pt3dadd( -13.926, 20.9907, -15.5513, 0.48 ) }
    dend_24 { pt3dadd( -14.372, 21.4923, -15.6121, 0.36 ) }
    dend_24 { pt3dadd( -14.8364, 22.0227, -15.6462, 0.84 ) }
    dend_24 { pt3dadd( -15.2757, 22.5387, -15.6594, 0.6 ) }
    dend_24 { pt3dadd( -15.6235, 22.9403, -15.6523, 0.36 ) }
    dend_24 { pt3dadd( -16.1653, 23.5592, -15.6354, 0.36 ) }
    dend_24 { pt3dadd( -16.5619, 24.0033, -15.6457, 1.56 ) }
    dend_24 { pt3dadd( -17.233, 24.7258, -15.6879, 3.49 ) }
    dend_24 { pt3dadd( -17.4366, 24.9417, -15.711, 3.85 ) }
    dend_24 { pt3dadd( -17.9363, 25.4785, -15.763, 4.33 ) }
    dend_24 { pt3dadd( -18.5187, 26.1094, -15.8214, 3.25 ) }
    dend_24 { pt3dadd( -19.4879, 27.2052, -15.9114, 0.12 ) }
    dend_24 { pt3dadd( -19.8585, 27.6285, -15.9418, 0.12 ) }
    dend_24 { pt3dadd( -20.0499, 27.8568, -15.9495, 0.12 ) }
    dend_24 { pt3dadd( -20.6045, 28.5622, -15.9469, 0.96 ) }
    dend_24 { pt3dadd( -20.7634, 28.785, -15.9358, 1.08 ) }
    dend_24 { pt3dadd( -21.2425, 29.4949, -15.8633, 0.72 ) }
    dend_24 { pt3dadd( -21.658, 30.1488, -15.8743, 0.12 ) }
    dend_24 { pt3dadd( -22.146, 30.9077, -15.9736, 0.12 ) }
    dend_24 { pt3dadd( -22.3324, 31.196, -16.0385, 1.2 ) }
    dend_24 { pt3dadd( -22.6252, 31.652, -16.1823, 2.16 ) }
    dend_24 { pt3dadd( -22.9483, 32.142, -16.3808, 1.92 ) }
    dend_24 { pt3dadd( -23.9363, 33.6011, -17.0803, 0.12 ) }
    dend_24 { pt3dadd( -24.1115, 33.8584, -17.2265, 0.24 ) }
    dend_24 { pt3dadd( -24.4049, 34.2921, -17.4928, 0.24 ) }
    dend_24 { pt3dadd( -24.6147, 34.6028, -17.6922, 0.24 ) }
    dend_24 { pt3dadd( -25.2906, 35.6087, -18.3638, 3.25 ) }
    dend_24 { pt3dadd( -25.501, 35.9282, -18.5719, 3.97 ) }
    dend_24 { pt3dadd( -25.8762, 36.5136, -18.8759, 3.97 ) }
    dend_24 { pt3dadd( -26.15, 36.9403, -19.1217, 3.49 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 81/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 0.302907, 11.4619, 4.01323, 1.8 ) }
    dend_21 { pt3dadd( -0.0258794, 12.0813, 4.41504, 1.32 ) }
    dend_21 { pt3dadd( -0.404447, 12.7241, 5.1183, 0.72 ) }
    dend_21 { pt3dadd( -0.620153, 13.1315, 5.68183, 0.48 ) }
    dend_21 { pt3dadd( -0.824533, 13.5949, 6.42116, 0.48 ) }
    dend_21 { pt3dadd( -0.980567, 14.1144, 7.31913, 0.6 ) }
    dend_21 { pt3dadd( -1.06663, 14.856, 8.69492, 1.68 ) }
    dend_21 { pt3dadd( -1.00342, 15.4846, 10.1039, 1.68 ) }
    dend_21 { pt3dadd( -0.86149, 15.7929, 10.9455, 1.56 ) }
    dend_21 { pt3dadd( -0.586112, 16.0713, 11.8305, 1.44 ) }
    dend_21 { pt3dadd( -0.157714, 16.3015, 12.7282, 0.72 ) }
    dend_21 { pt3dadd( 0.558268, 16.5063, 13.7264, 0.84 ) }
    dend_21 { pt3dadd( 0.817793, 16.5329, 13.9752, 0.84 ) }
    dend_21 { pt3dadd( 1.59757, 16.5049, 14.5914, 0.6 ) }
    dend_21 { pt3dadd( 2.18638, 16.4428, 15.1386, 0.84 ) }
    dend_21 { pt3dadd( 2.83309, 16.3108, 15.7918, 1.08 ) }
    dend_21 { pt3dadd( 3.46351, 16.1571, 16.4958, 1.08 ) }
    dend_21 { pt3dadd( 4.02735, 16.0172, 17.1809, 1.2 ) }
    dend_21 { pt3dadd( 5.01355, 15.8024, 18.4128, 1.32 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_21 { pt3dadd( 6.73792, 15.5781, 20.6931, 1.32 ) }
    dend_21 { pt3dadd( 7.18326, 15.5768, 21.3043, 0.6 ) }
    dend_21 { pt3dadd( 7.50533, 15.6176, 21.7729, 0.96 ) }
    dend_21 { pt3dadd( 7.6715, 15.6696, 22.0366, 1.92 ) }
    dend_21 { pt3dadd( 8.04864, 15.8891, 22.6022, 2.16 ) }
    dend_21 { pt3dadd( 9.0321, 16.7542, 23.6517, 1.44 ) }
    dend_21 { pt3dadd( 9.57888, 17.3758, 23.9356, 0.84 ) }
    dend_21 { pt3dadd( 10.0183, 17.8879, 24.1255, 0.84 ) }
    dend_21 { pt3dadd( 10.5598, 18.475, 24.3294, 0.84 ) }
    dend_21 { pt3dadd( 11.0174, 19.0756, 24.4829, 0.84 ) }
    dend_21 { pt3dadd( 11.3148, 19.588, 24.5617, 0.48 ) }
    dend_21 { pt3dadd( 11.7609, 20.4144, 24.5603, 0.48 ) }
    dend_21 { pt3dadd( 12.1832, 21.1597, 24.562, 1.32 ) }
    dend_21 { pt3dadd( 12.2218, 21.2153, 24.5624, 1.56 ) }
    dend_21 { pt3dadd( 12.9007, 21.9861, 24.5802, 1.2 ) }
    dend_21 { pt3dadd( 13.2077, 22.3502, 24.6024, 1.68 ) }
    dend_21 { pt3dadd( 18.3627, 25.3646, 32.0204, 1.68 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 17/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 0.672909, -11.7953, -3.94677, 2.52 ) }
    dend_0 { pt3dadd( 0.695916, -12.6915, -4.30101, 1.8 ) }
    dend_0 { pt3dadd( 0.706786, -13.883, -4.7664, 1.92 ) }
    dend_0 { pt3dadd( 0.71069, -15.6311, -5.38042, 1.68 ) }
    dend_0 { pt3dadd( 0.70823, -17.4163, -5.94988, 2.64 ) }
    dend_0 { pt3dadd( 0.694781, -18.9912, -6.41008, 4.09 ) }
    dend_0 { pt3dadd( 0.663669, -21.0678, -6.97041, 3.49 ) }
    dend_0 { pt3dadd( 0.593674, -22.8723, -7.40876, 2.16 ) }
    dend_0 { pt3dadd( 0.509806, -24.0189, -7.6443, 1.56 ) }
    dend_0 { pt3dadd( 0.397785, -25.0488, -7.79345, 1.32 ) }
    dend_0 { pt3dadd( 0.262918, -26.0136, -7.87447, 1.2 ) }
    dend_0 { pt3dadd( 0.126199, -26.869, -7.91239, 1.44 ) }
    dend_0 { pt3dadd( -0.143307, -28.2742, -7.93496, 1.92 ) }
    dend_0 { pt3dadd( -0.390931, -29.3694, -7.93337, 2.88 ) }
    dend_0 { pt3dadd( -0.67261, -30.4552, -7.97223, 3.0 ) }
    dend_0 { pt3dadd( -0.835837, -31.0132, -7.99513, 2.88 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 33/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 1.06112, 11.0768, 0.698697, 0.617911 ) }
    axon_0 { pt3dadd( 1.56213, 26.0684, 0.698697, 0.617911 ) }
    axon_0 { pt3dadd( 2.06313, 41.0601, 0.698697, 0.617911 ) }
    // Section: dend_32, id: dend_32, parent: dend_24 (entry count 36/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -26.15, 36.9403, -19.1217, 0.12 ) }
    dend_32 { pt3dadd( -27.7541, 37.3938, -19.2914, 0.12 ) }
    dend_32 { pt3dadd( -28.9215, 37.6918, -19.4208, 0.12 ) }
    dend_32 { pt3dadd( -29.9991, 37.9308, -19.5464, 0.12 ) }
    dend_32 { pt3dadd( -30.4305, 38.0219, -19.5825, 1.08 ) }
    dend_32 { pt3dadd( -30.8538, 38.11, -19.611, 0.12 ) }
    dend_32 { pt3dadd( -31.8094, 38.3001, -19.6398, 0.12 ) }
    dend_32 { pt3dadd( -32.3852, 38.3913, -19.6281, 1.8 ) }
    dend_32 { pt3dadd( -33.1348, 38.4889, -19.5761, 2.76 ) }
    dend_32 { pt3dadd( -34.4266, 38.6465, -19.415, 0.12 ) }
    dend_32 { pt3dadd( -34.6631, 38.6823, -19.3777, 0.12 ) }
    dend_32 { pt3dadd( -35.3616, 38.8065, -19.2517, 0.12 ) }
    dend_32 { pt3dadd( -35.795, 38.9068, -19.2091, 0.12 ) }
    dend_32 { pt3dadd( -36.4582, 39.0785, -19.235, 0.96 ) }
    dend_32 { pt3dadd( -36.8616, 39.192, -19.3114, 0.12 ) }
    dend_32 { pt3dadd( -37.6172, 39.4173, -19.5714, 0.12 ) }
    dend_32 { pt3dadd( -38.0159, 39.5376, -19.733, 0.96 ) }
    dend_32 { pt3dadd( -39.3733, 39.9513, -20.3409, 0.12 ) }
    dend_32 { pt3dadd( -40.0468, 40.1527, -20.6455, 0.12 ) }
    dend_32 { pt3dadd( -40.4302, 40.2594, -20.8167, 0.96 ) }
    dend_32 { pt3dadd( -40.9095, 40.3887, -21.0553, 0.12 ) }
    dend_32 { pt3dadd( -41.2842, 40.4903, -21.2475, 0.12 ) }
    dend_32 { pt3dadd( -42.0085, 40.6532, -21.5125, 0.12 ) }
    dend_32 { pt3dadd( -42.6769, 40.7529, -21.6384, 1.56 ) }
    dend_32 { pt3dadd( -43.2091, 40.8167, -21.7119, 2.4 ) }
    dend_32 { pt3dadd( -44.2284, 40.891, -21.807, 2.4 ) }
    dend_32 { pt3dadd( -44.47, 40.8994, -21.8099, 2.16 ) }
    dend_32 { pt3dadd( -46.1956, 40.9134, -21.7285, 0.12 ) }
    dend_32 { pt3dadd( -46.9478, 40.8759, -21.5962, 0.12 ) }
    dend_32 { pt3dadd( -47.2792, 40.8555, -21.5146, 0.24 ) }
    dend_32 { pt3dadd( -47.9131, 40.8204, -21.3426, 0.24 ) }
    dend_32 { pt3dadd( -48.7624, 40.773, -21.0963, 1.92 ) }
    dend_32 { pt3dadd( -49.0919, 40.7552, -21.0177, 2.16 ) }
    dend_32 { pt3dadd( -50.652, 40.7292, -20.7402, 0.12 ) }
    dend_32 { pt3dadd( -51.469, 40.7278, -20.6025, 0.12 ) }
    dend_32 { pt3dadd( -52.2256, 40.7268, -20.4916, 0.96 ) }
    dend_32 { pt3dadd( -52.5715, 40.734, -20.4531, 0.12 ) }
    dend_32 { pt3dadd( -53.4415, 40.7648, -20.4006, 0.12 ) }
    dend_32 { pt3dadd( -53.9802, 40.7911, -20.3601, 0.84 ) }
    dend_32 { pt3dadd( -54.4111, 40.82, -20.3334, 0.12 ) }
    dend_32 { pt3dadd( -55.4295, 40.8986, -20.2312, 0.12 ) }
    dend_32 { pt3dadd( -56.1469, 40.977, -20.1523, 1.8 ) }
    dend_32 { pt3dadd( -56.487, 41.0282, -20.1193, 2.04 ) }
    dend_32 { pt3dadd( -57.4774, 41.2407, -20.0447, 1.92 ) }
    dend_32 { pt3dadd( -58.2479, 41.4353, -20.0098, 0.12 ) }
    dend_32 { pt3dadd( -59.2721, 41.7385, -19.989, 0.12 ) }
    dend_32 { pt3dadd( -60.3429, 42.101, -20.0027, 2.52 ) }
    dend_32 { pt3dadd( -61.3434, 42.4673, -20.0919, 0.12 ) }
    dend_32 { pt3dadd( -62.8626, 43.0704, -20.3375, 0.12 ) }
    dend_32 { pt3dadd( -63.5195, 43.3588, -20.4806, 1.08 ) }
    dend_32 { pt3dadd( -63.7879, 43.4788, -20.5444, 0.12 ) }
    dend_32 { pt3dadd( -64.6577, 43.869, -20.7709, 0.12 ) }
    dend_32 { pt3dadd( -65.8302, 44.3569, -21.0538, 0.12 ) }
    dend_32 { pt3dadd( -66.2805, 44.5106, -21.1484, 0.12 ) }
    dend_32 { pt3dadd( -67.1245, 44.7351, -21.2857, 1.68 ) }
    dend_32 { pt3dadd( -67.6911, 44.8535, -21.3575, 2.28 ) }
    dend_32 { pt3dadd( -68.0277, 44.9078, -21.3884, 2.4 ) }
    dend_32 { pt3dadd( -69.2485, 45.0588, -21.4437, 0.12 ) }
    dend_32 { pt3dadd( -69.8924, 45.1391, -21.4157, 0.12 ) }
    dend_32 { pt3dadd( -70.4281, 45.2138, -21.3951, 0.84 ) }
    dend_32 { pt3dadd( -70.9396, 45.3026, -21.3551, 0.12 ) }
    dend_32 { pt3dadd( -71.4718, 45.4372, -21.29, 0.12 ) }
    dend_32 { pt3dadd( -72.0225, 45.6058, -21.2131, 0.48 ) }
    dend_32 { pt3dadd( -73.1858, 46.009, -21.0355, 2.4 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_32 { pt3dadd( -73.6346, 46.1748, -20.9506, 2.64 ) }
    dend_32 { pt3dadd( -75.0155, 46.6994, -20.6396, 0.12 ) }
    dend_32 { pt3dadd( -75.8377, 47.0365, -20.4177, 0.12 ) }
    dend_32 { pt3dadd( -76.5715, 47.3533, -20.2009, 1.08 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 4/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -26.15, 36.9403, -19.1217, 0.72 ) }
    dend_25 { pt3dadd( -26.8717, 38.5087, -19.8647, 0.72 ) }
    dend_25 { pt3dadd( -27.1683, 39.1872, -20.197, 0.72 ) }
    dend_25 { pt3dadd( -27.5479, 40.0395, -20.6421, 0.72 ) }
    dend_25 { pt3dadd( -27.8948, 40.802, -21.0355, 0.36 ) }
    dend_25 { pt3dadd( -28.1766, 41.427, -21.3637, 0.24 ) }
    dend_25 { pt3dadd( -28.3074, 41.7355, -21.52, 0.24 ) }
    dend_25 { pt3dadd( -28.5662, 42.4897, -21.8808, 0.6 ) }
    dend_25 { pt3dadd( -28.761, 43.1059, -22.1488, 0.84 ) }
    dend_25 { pt3dadd( -28.9728, 43.7792, -22.3756, 0.48 ) }
    dend_25 { pt3dadd( -29.1332, 44.2532, -22.532, 0.24 ) }
    dend_25 { pt3dadd( -29.3402, 44.8536, -22.7288, 0.24 ) }
    dend_25 { pt3dadd( -29.4632, 45.2087, -22.8399, 0.36 ) }
    dend_25 { pt3dadd( -29.7607, 46.0959, -23.0895, 0.6 ) }
    dend_25 { pt3dadd( -30.0553, 46.9781, -23.3228, 0.6 ) }
    dend_25 { pt3dadd( -30.3819, 47.9372, -23.6335, 0.12 ) }
    dend_25 { pt3dadd( -30.5827, 48.5101, -23.8592, 0.12 ) }
    dend_25 { pt3dadd( -30.93, 49.4285, -24.27, 2.04 ) }
    dend_25 { pt3dadd( -31.0208, 49.6715, -24.3848, 2.64 ) }
    dend_25 { pt3dadd( -31.2486, 50.355, -24.7153, 2.76 ) }
    dend_25 { pt3dadd( -31.5229, 51.2446, -25.1176, 2.64 ) }
    dend_25 { pt3dadd( -31.9294, 52.7199, -25.6357, 0.12 ) }
    dend_25 { pt3dadd( -32.1677, 53.6462, -25.9065, 0.12 ) }
    dend_25 { pt3dadd( -32.2505, 53.9995, -25.986, 0.12 ) }
    dend_25 { pt3dadd( -32.4158, 54.711, -26.1219, 0.12 ) }
    dend_25 { pt3dadd( -32.6292, 55.5847, -26.2597, 0.12 ) }
    dend_25 { pt3dadd( -32.8757, 56.5866, -26.3621, 1.68 ) }
    dend_25 { pt3dadd( -33.0349, 57.2413, -26.4224, 2.64 ) }
    dend_25 { pt3dadd( -33.1301, 57.6301, -26.4682, 2.64 ) }
    dend_25 { pt3dadd( -33.2793, 58.2088, -26.5444, 2.4 ) }
    dend_25 { pt3dadd( -33.648, 59.5835, -26.7388, 0.36 ) }
    dend_25 { pt3dadd( -34.0286, 61.0376, -27.0168, 0.36 ) }
    dend_25 { pt3dadd( -34.0998, 61.3026, -27.0923, 0.36 ) }
    dend_25 { pt3dadd( -34.1718, 61.5695, -27.1599, 0.12 ) }
    dend_25 { pt3dadd( -34.5655, 63.0117, -27.4764, 0.12 ) }
    dend_25 { pt3dadd( -34.8114, 63.8755, -27.6595, 1.92 ) }
    dend_25 { pt3dadd( -35.166, 65.0347, -28.0245, 2.76 ) }
    dend_25 { pt3dadd( -35.7589, 66.8344, -28.7232, 0.12 ) }
    dend_25 { pt3dadd( -36.46, 68.9194, -29.5918, 0.12 ) }
    dend_25 { pt3dadd( -36.7952, 69.8481, -30.0156, 2.04 ) }
    dend_25 { pt3dadd( -37.0983, 70.6303, -30.4101, 2.76 ) }
    dend_25 { pt3dadd( -38.192, 73.3024, -31.7812, 0.12 ) }
    dend_25 { pt3dadd( -38.5365, 74.1, -32.1889, 0.12 ) }
    dend_25 { pt3dadd( -39.0821, 75.2752, -32.8035, 0.12 ) }
    dend_25 { pt3dadd( -39.5923, 76.3035, -33.4194, 0.48 ) }
    dend_25 { pt3dadd( -39.8225, 76.7336, -33.6763, 0.12 ) }
    dend_25 { pt3dadd( -40.456, 77.8896, -34.298, 0.12 ) }
    dend_25 { pt3dadd( -41.1578, 79.1506, -34.8891, 2.88 ) }
    dend_25 { pt3dadd( -41.4482, 79.6554, -35.1363, 3.12 ) }
    dend_25 { pt3dadd( -42.0364, 80.6705, -35.6307, 2.16 ) }
    dend_25 { pt3dadd( -42.7948, 82.0473, -36.2347, 0.12 ) }
    dend_25 { pt3dadd( -43.1892, 82.7633, -36.573, 0.12 ) }
    dend_25 { pt3dadd( -43.4165, 83.1816, -36.7868, 0.12 ) }
    dend_25 { pt3dadd( -43.8046, 83.9088, -37.1649, 0.12 ) }
    dend_25 { pt3dadd( -44.075, 84.4313, -37.4308, 1.2 ) }
    dend_25 { pt3dadd( -44.3524, 84.9882, -37.6859, 1.44 ) }
    dend_25 { pt3dadd( -45.107, 86.5019, -38.3688, 0.12 ) }
    dend_25 { pt3dadd( -45.3418, 86.9552, -38.6134, 0.12 ) }
    dend_25 { pt3dadd( -45.8762, 87.9964, -39.2102, 0.12 ) }
    dend_25 { pt3dadd( -46.1552, 88.5608, -39.5428, 1.56 ) }
    dend_25 { pt3dadd( -46.4265, 89.0925, -39.8508, 2.16 ) }
    dend_25 { pt3dadd( -46.6147, 89.4587, -40.0475, 2.28 ) }
    dend_25 { pt3dadd( -47.5372, 91.2703, -40.828, 0.48 ) }
    dend_25 { pt3dadd( -47.8342, 91.8398, -41.0585, 0.48 ) }
    dend_25 { pt3dadd( -47.9862, 92.1395, -41.1832, 0.48 ) }
    dend_25 { pt3dadd( -48.19, 92.5544, -41.4409, 0.24 ) }
    dend_25 { pt3dadd( -48.3575, 92.8995, -41.6869, 0.24 ) }
    dend_25 { pt3dadd( -48.7052, 93.6453, -42.2712, 1.8 ) }
    dend_25 { pt3dadd( -48.856, 93.9827, -42.5374, 2.64 ) }
    dend_25 { pt3dadd( -49.2939, 95.0257, -43.391, 2.88 ) }
    dend_25 { pt3dadd( -50.1248, 97.2342, -45.2432, 0.36 ) }
    dend_25 { pt3dadd( -50.3518, 97.9173, -45.8022, 0.36 ) }
    dend_25 { pt3dadd( -50.4968, 98.4119, -46.1871, 0.12 ) }
    dend_25 { pt3dadd( -50.7081, 99.2352, -46.7757, 1.56 ) }
    dend_25 { pt3dadd( -50.7564, 99.4448, -46.91, 1.68 ) }
    dend_25 { pt3dadd( -50.9689, 100.442, -47.4543, 0.24 ) }
    dend_25 { pt3dadd( -51.1709, 101.48, -47.9444, 0.24 ) }
    dend_25 { pt3dadd( -51.4056, 102.74, -48.5569, 2.64 ) }
    dend_25 { pt3dadd( -51.5347, 103.415, -48.8866, 3.0 ) }
    dend_25 { pt3dadd( -51.9477, 105.516, -49.9702, 0.24 ) }
    dend_25 { pt3dadd( -52.1756, 106.619, -50.548, 1.68 ) }
    dend_25 { pt3dadd( -52.2848, 107.112, -50.8077, 1.68 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 86/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 18.3627, 25.3646, 32.0204, 0.12 ) }
    dend_23 { pt3dadd( 22.8908, 29.9178, 41.6617, 0.12 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 88/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 18.3627, 25.3646, 32.0204, 0.12 ) }
    dend_22 { pt3dadd( 22.3596, 29.0683, 40.1228, 0.12 ) }
    // Section: dend_20, id: dend_20, parent: dend_0 (entry count 90/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.835837, -31.0132, -7.99513, 0.12 ) }
    dend_20 { pt3dadd( -0.499655, -31.7199, -8.56768, 0.12 ) }
    dend_20 { pt3dadd( -0.300974, -32.2229, -8.97598, 0.12 ) }
    dend_20 { pt3dadd( -0.151792, -32.6583, -9.31057, 0.12 ) }
    dend_20 { pt3dadd( 0.144445, -33.6099, -10.0065, 1.56 ) }
    dend_20 { pt3dadd( 0.217857, -33.8727, -10.1999, 1.56 ) }
    dend_20 { pt3dadd( 0.513031, -34.9043, -10.9189, 0.12 ) }
    dend_20 { pt3dadd( 0.610775, -35.3657, -11.2583, 0.12 ) }
    dend_20 { pt3dadd( 0.685436, -35.7326, -11.531, 0.12 ) }
    dend_20 { pt3dadd( 0.727634, -35.9095, -11.6585, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_20 { pt3dadd( 0.914452, -36.5636, -12.0924, 1.44 ) }
    dend_20 { pt3dadd( 1.12781, -37.1343, -12.5323, 1.68 ) }
    dend_20 { pt3dadd( 1.56862, -38.038, -13.2884, 0.12 ) }
    dend_20 { pt3dadd( 1.84724, -38.498, -13.6932, 0.12 ) }
    dend_20 { pt3dadd( 2.07813, -38.8184, -13.9709, 0.12 ) }
    dend_20 { pt3dadd( 2.26555, -39.0429, -14.1559, 0.12 ) }
    dend_20 { pt3dadd( 3.05357, -39.8898, -14.9065, 1.56 ) }
    dend_20 { pt3dadd( 3.33326, -40.1698, -15.1686, 1.56 ) }
    dend_20 { pt3dadd( 3.94697, -40.7137, -15.6488, 0.12 ) }
    dend_20 { pt3dadd( 4.47194, -41.1736, -16.0669, 0.12 ) }
    dend_20 { pt3dadd( 4.83657, -41.5069, -16.3511, 1.08 ) }
    dend_20 { pt3dadd( 5.64334, -42.3005, -16.9118, 0.72 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 12/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -0.835837, -31.0132, -7.99513, 1.32 ) }
    dend_1 { pt3dadd( -1.32675, -32.1077, -8.34981, 1.32 ) }
    dend_1 { pt3dadd( -1.6362, -32.7977, -8.57339, 1.32 ) }
    dend_1 { pt3dadd( -1.86241, -33.302, -8.73682, 2.04 ) }
    dend_1 { pt3dadd( -2.1766, -34.0025, -8.96383, 2.52 ) }
    dend_1 { pt3dadd( -2.32204, -34.3268, -9.06891, 2.52 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 18/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 2.06313, 41.0601, 0.698697, 0.718264 ) }
    axon_1 { pt3dadd( 2.56414, 56.0517, 0.698697, 0.718264 ) }
    axon_1 { pt3dadd( 3.06515, 71.0433, 0.698697, 0.718264 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 21/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -52.2848, 107.112, -50.8077, 0.12 ) }
    dend_27 { pt3dadd( -52.7249, 107.779, -51.0488, 0.12 ) }
    dend_27 { pt3dadd( -52.9704, 108.238, -51.2678, 0.12 ) }
    dend_27 { pt3dadd( -53.2578, 108.801, -51.5319, 0.72 ) }
    dend_27 { pt3dadd( -53.5111, 109.261, -51.8362, 0.12 ) }
    dend_27 { pt3dadd( -53.8625, 109.885, -52.2658, 0.12 ) }
    dend_27 { pt3dadd( -54.5824, 111.198, -53.1594, 0.12 ) }
    dend_27 { pt3dadd( -55.062, 112.123, -53.8478, 2.28 ) }
    dend_27 { pt3dadd( -55.2824, 112.556, -54.1735, 2.52 ) }
    dend_27 { pt3dadd( -56.379, 114.736, -55.8052, 0.12 ) }
    dend_27 { pt3dadd( -56.6909, 115.329, -56.2358, 0.12 ) }
    dend_27 { pt3dadd( -56.9267, 115.714, -56.5231, 0.48 ) }
    dend_27 { pt3dadd( -57.3126, 116.277, -56.9178, 0.12 ) }
    dend_27 { pt3dadd( -57.765, 116.867, -57.3572, 0.12 ) }
    dend_27 { pt3dadd( -57.9963, 117.129, -57.6203, 1.2 ) }
    dend_27 { pt3dadd( -58.3419, 117.457, -58.0204, 1.56 ) }
    dend_27 { pt3dadd( -59.5383, 118.496, -59.4002, 0.24 ) }
    dend_27 { pt3dadd( -59.8725, 118.772, -59.7779, 0.24 ) }
    dend_27 { pt3dadd( -60.1895, 119.041, -60.2052, 0.96 ) }
    dend_27 { pt3dadd( -61.8323, 120.521, -62.7424, 0.12 ) }
    dend_27 { pt3dadd( -62.0316, 120.721, -63.0651, 0.12 ) }
    dend_27 { pt3dadd( -62.6725, 121.432, -64.1322, 2.52 ) }
    dend_27 { pt3dadd( -62.805, 121.587, -64.3569, 2.52 ) }
    dend_27 { pt3dadd( -64.3393, 123.42, -66.9698, 0.12 ) }
    dend_27 { pt3dadd( -64.5229, 123.649, -67.2688, 0.12 ) }
    dend_27 { pt3dadd( -65.0534, 124.342, -68.0736, 0.84 ) }
    dend_27 { pt3dadd( -65.2643, 124.61, -68.4126, 0.96 ) }
    dend_27 { pt3dadd( -66.0964, 125.697, -69.7919, 0.12 ) }
    dend_27 { pt3dadd( -66.2642, 125.926, -70.0519, 0.12 ) }
    dend_27 { pt3dadd( -66.4768, 126.246, -70.3425, 0.6 ) }
    dend_27 { pt3dadd( -67.2359, 127.521, -71.5449, 0.12 ) }
    dend_27 { pt3dadd( -67.3837, 127.819, -71.8197, 0.12 ) }
    dend_27 { pt3dadd( -67.721, 128.746, -72.5505, 0.12 ) }
    dend_27 { pt3dadd( -67.8735, 129.461, -72.9785, 1.08 ) }
    dend_27 { pt3dadd( -67.9368, 129.959, -73.2423, 1.08 ) }
    dend_27 { pt3dadd( -67.9913, 130.842, -73.6722, 0.12 ) }
    dend_27 { pt3dadd( -67.9825, 131.598, -73.977, 0.12 ) }
    dend_27 { pt3dadd( -67.9693, 132.051, -74.195, 0.24 ) }
    dend_27 { pt3dadd( -67.9296, 132.779, -74.5828, 0.12 ) }
    dend_27 { pt3dadd( -67.89, 133.264, -74.8402, 0.12 ) }
    dend_27 { pt3dadd( -67.7783, 134.068, -75.2679, 0.96 ) }
    dend_27 { pt3dadd( -67.6774, 134.466, -75.4159, 0.96 ) }
    dend_27 { pt3dadd( -67.2699, 135.704, -75.7422, 0.12 ) }
    dend_27 { pt3dadd( -67.0537, 136.337, -75.9553, 0.12 ) }
    dend_27 { pt3dadd( -66.9251, 136.715, -76.0989, 0.36 ) }
    dend_27 { pt3dadd( -66.5993, 137.848, -76.6205, 0.36 ) }
    dend_27 { pt3dadd( -66.3501, 139.622, -77.915, 0.72 ) }
    dend_27 { pt3dadd( -66.3483, 139.85, -78.1196, 0.72 ) }
    dend_27 { pt3dadd( -66.4822, 141.791, -79.9848, 1.56 ) }
    dend_27 { pt3dadd( -66.5378, 142.267, -80.4717, 2.04 ) }
    dend_27 { pt3dadd( -66.7004, 143.134, -81.3529, 2.52 ) }
    dend_27 { pt3dadd( -67.2212, 144.999, -83.357, 0.12 ) }
    dend_27 { pt3dadd( -67.3833, 145.55, -83.9401, 0.24 ) }
    dend_27 { pt3dadd( -67.5082, 146.071, -84.3981, 0.12 ) }
    dend_27 { pt3dadd( -67.5803, 146.471, -84.68, 0.12 ) }
    dend_27 { pt3dadd( -67.7371, 147.449, -85.3048, 0.12 ) }
    dend_27 { pt3dadd( -67.8822, 148.44, -85.8145, 0.12 ) }
    dend_27 { pt3dadd( -68.0259, 149.346, -86.1905, 1.56 ) }
    dend_27 { pt3dadd( -68.0929, 149.716, -86.3596, 1.92 ) }
    dend_27 { pt3dadd( -68.4962, 151.631, -87.2337, 0.12 ) }
    dend_27 { pt3dadd( -68.7887, 152.924, -87.794, 0.12 ) }
    dend_27 { pt3dadd( -69.0193, 153.91, -88.2165, 1.56 ) }
    dend_27 { pt3dadd( -69.1598, 154.423, -88.415, 1.92 ) }
    dend_27 { pt3dadd( -69.5679, 155.768, -88.953, 0.12 ) }
    dend_27 { pt3dadd( -69.888, 156.86, -89.3919, 0.12 ) }
    dend_27 { pt3dadd( -70.0601, 157.525, -89.6398, 0.48 ) }
    dend_27 { pt3dadd( -70.2027, 158.108, -89.8901, 0.12 ) }
    dend_27 { pt3dadd( -70.3566, 158.872, -90.2988, 0.12 ) }
    dend_27 { pt3dadd( -70.4839, 159.701, -90.7754, 0.12 ) }
    dend_27 { pt3dadd( -70.5607, 160.478, -91.2148, 0.12 ) }
    dend_27 { pt3dadd( -70.5968, 161.292, -91.7049, 1.32 ) }
    dend_27 { pt3dadd( -70.5998, 161.659, -91.9157, 1.56 ) }
    dend_27 { pt3dadd( -70.5812, 163.583, -92.9354, 0.12 ) }
    dend_27 { pt3dadd( -70.5995, 164.329, -93.381, 0.12 ) }
    dend_27 { pt3dadd( -70.6471, 165.039, -93.798, 0.12 ) }
    dend_27 { pt3dadd( -70.6794, 165.49, -94.0567, 0.12 ) }
    dend_27 { pt3dadd( -70.7699, 166.563, -94.6494, 1.68 ) }
    dend_27 { pt3dadd( -70.7985, 166.822, -94.7916, 1.8 ) }
    dend_27 { pt3dadd( -71.0684, 169.099, -95.9194, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_27 { pt3dadd( -71.2329, 170.55, -96.6757, 0.12 ) }
    dend_27 { pt3dadd( -71.3238, 171.271, -97.0424, 1.08 ) }
    dend_27 { pt3dadd( -71.3911, 171.79, -97.3001, 1.2 ) }
    dend_27 { pt3dadd( -71.5014, 172.922, -97.8312, 0.12 ) }
    dend_27 { pt3dadd( -71.6044, 174.311, -98.4144, 0.12 ) }
    dend_27 { pt3dadd( -71.671, 175.627, -98.8843, 1.8 ) }
    dend_27 { pt3dadd( -71.7128, 176.402, -99.1791, 2.04 ) }
    dend_27 { pt3dadd( -71.753, 177.591, -99.6345, 0.12 ) }
    dend_27 { pt3dadd( -71.7421, 178.81, -100.079, 0.12 ) }
    dend_27 { pt3dadd( -71.7136, 179.37, -100.245, 0.48 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 10/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -52.2848, 107.112, -50.8077, 0.12 ) }
    dend_26 { pt3dadd( -52.0568, 108.046, -50.7114, 0.12 ) }
    dend_26 { pt3dadd( -51.8505, 108.945, -50.618, 0.12 ) }
    dend_26 { pt3dadd( -51.6421, 109.951, -50.4671, 0.72 ) }
    dend_26 { pt3dadd( -51.5078, 110.854, -50.3315, 0.12 ) }
    dend_26 { pt3dadd( -51.3157, 112.366, -50.1131, 0.12 ) }
    dend_26 { pt3dadd( -51.2672, 112.815, -50.0512, 1.2 ) }
    dend_26 { pt3dadd( -51.2391, 113.194, -49.9799, 0.72 ) }
    dend_26 { pt3dadd( -51.2049, 114.2, -49.779, 0.12 ) }
    dend_26 { pt3dadd( -51.2128, 116.458, -49.339, 0.12 ) }
    dend_26 { pt3dadd( -51.2221, 117.094, -49.2275, 0.96 ) }
    dend_26 { pt3dadd( -51.2328, 117.613, -49.1135, 1.44 ) }
    dend_26 { pt3dadd( -51.2661, 118.957, -48.7981, 0.12 ) }
    dend_26 { pt3dadd( -51.2916, 119.85, -48.5516, 0.12 ) }
    dend_26 { pt3dadd( -51.3095, 120.59, -48.3347, 0.24 ) }
    dend_26 { pt3dadd( -51.3145, 121.213, -48.129, 0.24 ) }
    dend_26 { pt3dadd( -51.3078, 122.215, -47.799, 0.24 ) }
    dend_26 { pt3dadd( -51.2806, 123.532, -47.3001, 2.52 ) }
    dend_26 { pt3dadd( -51.2224, 125.279, -46.6148, 0.24 ) }
    dend_26 { pt3dadd( -51.1666, 126.343, -46.1767, 0.24 ) }
    dend_26 { pt3dadd( -51.1397, 126.77, -45.9993, 0.48 ) }
    dend_26 { pt3dadd( -51.1187, 127.042, -45.8957, 0.12 ) }
    dend_26 { pt3dadd( -50.8445, 130.069, -44.8498, 0.12 ) }
    dend_26 { pt3dadd( -50.7681, 130.807, -44.5985, 1.92 ) }
    dend_26 { pt3dadd( -50.6845, 131.422, -44.4221, 2.16 ) }
    dend_26 { pt3dadd( -50.4732, 132.721, -44.0693, 0.12 ) }
    dend_26 { pt3dadd( -50.1454, 134.462, -43.6475, 0.12 ) }
    dend_26 { pt3dadd( -50.1158, 134.586, -43.6272, 0.36 ) }
    dend_26 { pt3dadd( -49.9989, 134.953, -43.6067, 0.12 ) }
    dend_26 { pt3dadd( -49.3863, 136.742, -43.545, 0.12 ) }
    dend_26 { pt3dadd( -48.963, 137.962, -43.4715, 2.04 ) }
    dend_26 { pt3dadd( -48.7659, 138.506, -43.4297, 1.56 ) }
    dend_26 { pt3dadd( -48.2722, 139.833, -43.2833, 0.12 ) }
    dend_26 { pt3dadd( -48.0499, 140.422, -43.2082, 0.12 ) }
    dend_26 { pt3dadd( -47.8142, 141.025, -43.1119, 0.12 ) }
    dend_26 { pt3dadd( -47.3011, 142.371, -42.8516, 0.12 ) }
    dend_26 { pt3dadd( -47.0518, 143.055, -42.7198, 1.56 ) }
    dend_26 { pt3dadd( -46.9271, 143.385, -42.6338, 2.16 ) }
    dend_26 { pt3dadd( -46.6031, 144.203, -42.349, 1.32 ) }
    dend_26 { pt3dadd( -46.2618, 144.991, -42.0745, 0.12 ) }
    dend_26 { pt3dadd( -46.0497, 145.424, -41.9365, 0.12 ) }
    dend_26 { pt3dadd( -45.6994, 146.133, -41.7595, 0.12 ) }
    dend_26 { pt3dadd( -45.3087, 146.956, -41.5563, 0.12 ) }
    dend_26 { pt3dadd( -45.0211, 147.567, -41.4143, 1.08 ) }
    dend_26 { pt3dadd( -44.7919, 148.072, -41.3109, 1.8 ) }
    dend_26 { pt3dadd( -44.3221, 149.086, -41.0493, 0.12 ) }
    dend_26 { pt3dadd( -43.8994, 149.958, -40.7271, 0.12 ) }
    dend_26 { pt3dadd( -43.641, 150.498, -40.5011, 0.12 ) }
    dend_26 { pt3dadd( -43.387, 151.036, -40.2696, 0.12 ) }
    dend_26 { pt3dadd( -43.016, 151.784, -39.9505, 0.12 ) }
    dend_26 { pt3dadd( -42.3038, 153.153, -39.3542, 1.32 ) }
    dend_26 { pt3dadd( -41.6483, 154.363, -38.8623, 0.12 ) }
    dend_26 { pt3dadd( -40.9682, 155.621, -38.4502, 0.12 ) }
    dend_26 { pt3dadd( -40.8098, 155.939, -38.3804, 0.96 ) }
    dend_26 { pt3dadd( -40.4256, 156.798, -38.3173, 0.48 ) }
    dend_26 { pt3dadd( -40.2562, 157.228, -38.3446, 0.48 ) }
    dend_26 { pt3dadd( -39.997, 158.043, -38.4895, 0.12 ) }
    dend_26 { pt3dadd( -39.6912, 159.268, -38.7583, 2.04 ) }
    dend_26 { pt3dadd( -39.523, 160.033, -38.904, 2.28 ) }
    dend_26 { pt3dadd( -39.2635, 161.347, -39.0995, 0.12 ) }
    dend_26 { pt3dadd( -39.1053, 162.222, -39.1518, 0.12 ) }
    dend_26 { pt3dadd( -38.9619, 162.993, -39.1516, 0.12 ) }
    dend_26 { pt3dadd( -38.8548, 163.502, -39.1233, 0.12 ) }
    dend_26 { pt3dadd( -38.5252, 164.733, -39.0234, 0.12 ) }
    dend_26 { pt3dadd( -38.2404, 165.581, -38.9371, 0.12 ) }
    dend_26 { pt3dadd( -37.7846, 166.666, -38.8052, 1.32 ) }
    dend_26 { pt3dadd( -37.5811, 167.069, -38.7561, 1.32 ) }
    dend_26 { pt3dadd( -37.2223, 167.674, -38.6906, 0.12 ) }
    dend_26 { pt3dadd( -36.479, 168.839, -38.68, 0.12 ) }
    dend_26 { pt3dadd( -36.1321, 169.363, -38.7393, 0.12 ) }
    dend_26 { pt3dadd( -35.7197, 169.944, -38.8625, 1.2 ) }
    dend_26 { pt3dadd( -35.4511, 170.294, -38.9838, 1.56 ) }
    dend_26 { pt3dadd( -34.7502, 171.17, -39.3362, 0.12 ) }
    dend_26 { pt3dadd( -33.7332, 172.401, -39.8798, 0.12 ) }
    dend_26 { pt3dadd( -33.1336, 173.135, -40.2399, 1.44 ) }
    dend_26 { pt3dadd( -32.7931, 173.542, -40.447, 2.16 ) }
    dend_26 { pt3dadd( -31.7892, 174.682, -41.0836, 0.12 ) }
    dend_26 { pt3dadd( -31.505, 174.981, -41.2628, 0.12 ) }
    dend_26 { pt3dadd( -31.0792, 175.37, -41.5287, 0.12 ) }
    dend_26 { pt3dadd( -30.6887, 175.674, -41.7405, 0.12 ) }
    dend_26 { pt3dadd( -30.0195, 176.186, -42.1099, 0.12 ) }
    dend_26 { pt3dadd( -29.2661, 176.745, -42.512, 1.2 ) }
    dend_26 { pt3dadd( -29.0787, 176.883, -42.6119, 1.2 ) }
    dend_26 { pt3dadd( -28.2685, 177.474, -43.0585, 0.12 ) }
    dend_26 { pt3dadd( -28.0184, 177.663, -43.2316, 0.12 ) }
    dend_26 { pt3dadd( -27.5865, 178.0, -43.5542, 0.12 ) }
    dend_26 { pt3dadd( -26.916, 178.585, -44.1035, 0.12 ) }
    dend_26 { pt3dadd( -26.4834, 179.024, -44.5076, 1.32 ) }
    dend_26 { pt3dadd( -26.2924, 179.24, -44.7216, 1.44 ) }
    dend_26 { pt3dadd( -25.4466, 180.282, -45.7728, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_26 { pt3dadd( -25.1805, 180.623, -46.1406, 0.12 ) }
    dend_26 { pt3dadd( -25.0526, 180.789, -46.3322, 0.12 ) }
    dend_26 { pt3dadd( -24.4733, 181.608, -47.2689, 0.12 ) }
    dend_26 { pt3dadd( -24.0298, 182.267, -47.9439, 1.44 ) }
    dend_26 { pt3dadd( -23.8393, 182.56, -48.2265, 1.92 ) }
    dend_26 { pt3dadd( -23.4777, 183.129, -48.7116, 1.44 ) }
    dend_26 { pt3dadd( -22.9586, 184.021, -49.4514, 0.12 ) }
    dend_26 { pt3dadd( -22.7624, 184.349, -49.7062, 0.12 ) }
    dend_26 { pt3dadd( -22.2359, 185.089, -50.2137, 0.12 ) }
    dend_26 { pt3dadd( -21.6679, 185.846, -50.6882, 1.44 ) }
    dend_26 { pt3dadd( -21.3643, 186.223, -50.9117, 1.92 ) }
    dend_26 { pt3dadd( -20.3333, 187.394, -51.5753, 0.12 ) }
    dend_26 { pt3dadd( -19.7957, 187.981, -51.8848, 0.12 ) }
    dend_26 { pt3dadd( -18.7399, 189.035, -52.4772, 0.12 ) }
    dend_26 { pt3dadd( -18.5415, 189.208, -52.5832, 0.84 ) }
    dend_26 { pt3dadd( -18.1292, 189.547, -52.7766, 0.96 ) }
    dend_26 { pt3dadd( -17.3094, 190.178, -53.1524, 0.12 ) }
    dend_26 { pt3dadd( -16.695, 190.623, -53.4125, 0.12 ) }
    dend_26 { pt3dadd( -16.1253, 191.077, -53.7155, 0.72 ) }
    dend_26 { pt3dadd( -15.5361, 191.651, -54.1353, 0.12 ) }
    dend_26 { pt3dadd( -15.0208, 192.255, -54.5588, 0.12 ) }
    dend_26 { pt3dadd( -14.7169, 192.7, -54.8457, 1.2 ) }
    dend_26 { pt3dadd( -14.5346, 193.062, -55.0877, 1.44 ) }
    dend_26 { pt3dadd( -14.0987, 194.11, -55.8023, 0.12 ) }
    dend_26 { pt3dadd( -13.7047, 195.297, -56.5716, 0.12 ) }
    dend_26 { pt3dadd( -13.4711, 196.137, -57.1079, 2.52 ) }
    dend_26 { pt3dadd( -13.3522, 196.645, -57.4884, 2.52 ) }
    dend_26 { pt3dadd( -12.9389, 198.567, -59.0116, 0.24 ) }
    dend_26 { pt3dadd( -12.8027, 199.113, -59.464, 0.24 ) }
    dend_26 { pt3dadd( -12.6642, 199.578, -59.8804, 0.24 ) }
    dend_26 { pt3dadd( -12.4419, 200.134, -60.4247, 1.32 ) }
    dend_26 { pt3dadd( -11.5572, 201.762, -62.2563, 0.12 ) }
    dend_26 { pt3dadd( -11.253, 202.179, -62.8563, 0.12 ) }
    dend_26 { pt3dadd( -10.8061, 202.659, -63.6378, 0.72 ) }
    dend_26 { pt3dadd( -10.1204, 203.308, -64.7911, 0.12 ) }
    dend_26 { pt3dadd( -9.85029, 203.536, -65.2398, 0.12 ) }
    dend_26 { pt3dadd( -8.91241, 204.285, -66.7417, 2.76 ) }
    dend_26 { pt3dadd( -7.07963, 205.732, -69.5487, 0.12 ) }
    dend_26 { pt3dadd( -6.6878, 206.064, -70.2343, 0.12 ) }
    dend_26 { pt3dadd( -6.5715, 206.181, -70.464, 1.32 ) }
    dend_26 { pt3dadd( -5.7291, 207.153, -72.2194, 0.12 ) }
    dend_26 { pt3dadd( -5.5014, 207.478, -72.7287, 0.12 ) }
    dend_26 { pt3dadd( -5.33034, 207.779, -73.1073, 0.96 ) }
    dend_26 { pt3dadd( -4.59742, 209.207, -74.534, 0.12 ) }
    dend_26 { pt3dadd( -4.28313, 209.801, -75.1168, 0.12 ) }
    dend_26 { pt3dadd( -3.67062, 210.868, -76.0559, 2.4 ) }
    dend_26 { pt3dadd( -2.85375, 212.159, -77.0604, 0.12 ) }
    dend_26 { pt3dadd( -2.37706, 212.843, -77.5877, 0.12 ) }
    dend_26 { pt3dadd( -2.04315, 213.276, -77.9137, 1.44 ) }
    dend_26 { pt3dadd( -1.09766, 214.415, -78.7223, 0.12 ) }
    dend_26 { pt3dadd( -0.206193, 215.42, -79.4826, 0.12 ) }
    dend_26 { pt3dadd( -0.0566334, 215.581, -79.6107, 0.84 ) }
    dend_26 { pt3dadd( 0.491488, 216.14, -80.0979, 0.12 ) }
    dend_26 { pt3dadd( 1.26977, 216.903, -80.7994, 0.48 ) }
    dend_26 { pt3dadd( 1.834, 217.446, -81.2862, 0.12 ) }
    dend_26 { pt3dadd( 2.23168, 217.82, -81.6091, 0.12 ) }
    dend_26 { pt3dadd( 3.07764, 218.601, -82.2806, 1.8 ) }
    dend_26 { pt3dadd( 3.76707, 219.248, -82.7551, 0.12 ) }
    dend_26 { pt3dadd( 4.26313, 219.719, -83.0257, 0.12 ) }
    dend_26 { pt3dadd( 4.69702, 220.149, -83.2029, 0.72 ) }
    dend_26 { pt3dadd( 5.18265, 220.634, -83.3193, 0.12 ) }
    dend_26 { pt3dadd( 5.94652, 221.392, -83.4186, 0.12 ) }
    dend_26 { pt3dadd( 6.43605, 221.891, -83.4601, 0.72 ) }
    dend_26 { pt3dadd( 6.85868, 222.264, -83.537, 0.12 ) }
    dend_26 { pt3dadd( 7.29233, 222.616, -83.6387, 0.12 ) }
    dend_26 { pt3dadd( 9.01418, 223.894, -84.3309, 0.12 ) }
    dend_26 { pt3dadd( 9.7106, 224.378, -84.6715, 1.92 ) }
    dend_26 { pt3dadd( 10.7133, 225.002, -85.3389, 0.12 ) }
    dend_26 { pt3dadd( 12.9803, 226.288, -87.2122, 0.12 ) }
    dend_26 { pt3dadd( 13.9448, 226.807, -88.1172, 0.12 ) }
    dend_26 { pt3dadd( 15.9442, 227.818, -90.1933, 0.12 ) }
    dend_26 { pt3dadd( 16.7774, 228.227, -91.197, 2.28 ) }
    dend_26 { pt3dadd( 18.4467, 228.993, -93.5845, 0.72 ) }
    dend_26 { pt3dadd( 19.0087, 229.194, -94.8944, 0.12 ) }
    dend_26 { pt3dadd( 18.9612, 229.233, -94.1011, 0.12 ) }
    dend_26 { pt3dadd( 19.0185, 229.325, -93.4512, 1.2 ) }
    dend_26 { pt3dadd( 19.2036, 229.54, -92.4, 0.6 ) }
    dend_26 { pt3dadd( 21.1082, 231.883, -82.3196, 0.12 ) }
    dend_26 { pt3dadd( 21.2265, 232.04, -81.7079, 0.12 ) }
    dend_26 { pt3dadd( 21.2962, 232.137, -81.3279, 0.6 ) }
    dend_26 { pt3dadd( 21.35, 232.212, -80.9915, 0.12 ) }
    dend_26 { pt3dadd( 21.5169, 232.442, -79.3478, 0.12 ) }
    dend_26 { pt3dadd( 21.3999, 232.107, -78.46, 0.12 ) }
    dend_26 { pt3dadd( 21.8293, 233.087, -79.1929, 1.56 ) }
    dend_26 { pt3dadd( 21.9223, 233.304, -79.3538, 1.8 ) }
    dend_26 { pt3dadd( 22.546, 234.672, -80.2973, 0.12 ) }
    dend_26 { pt3dadd( 23.156, 235.905, -81.0825, 0.12 ) }
    dend_26 { pt3dadd( 23.5214, 236.569, -81.4817, 0.12 ) }
    dend_26 { pt3dadd( 24.159, 237.602, -82.0792, 1.8 ) }
    dend_26 { pt3dadd( 24.9863, 238.763, -82.6804, 0.12 ) }
    dend_26 { pt3dadd( 25.9396, 239.946, -83.2539, 0.12 ) }
    dend_26 { pt3dadd( 26.3411, 240.378, -83.477, 1.08 ) }
    dend_26 { pt3dadd( 27.1674, 241.148, -83.9399, 0.12 ) }
    dend_26 { pt3dadd( 27.8533, 241.736, -84.3291, 0.12 ) }
    dend_26 { pt3dadd( 28.6218, 242.344, -84.7984, 0.12 ) }
    dend_26 { pt3dadd( 28.9539, 242.585, -85.0183, 1.08 ) }
    dend_26 { pt3dadd( 30.5405, 243.648, -86.2061, 0.12 ) }
    dend_26 { pt3dadd( 31.0196, 243.968, -86.5699, 0.12 ) }
    dend_26 { pt3dadd( 31.4872, 244.288, -86.9413, 1.44 ) }
    dend_26 { pt3dadd( 32.2305, 244.85, -87.7233, 1.92 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_26 { pt3dadd( 32.3719, 244.968, -87.897, 1.92 ) }
    dend_26 { pt3dadd( 33.0583, 245.579, -88.7792, 0.12 ) }
    dend_26 { pt3dadd( 33.5298, 246.027, -89.3948, 0.12 ) }
    dend_26 { pt3dadd( 34.0253, 246.528, -90.0952, 1.08 ) }
    dend_26 { pt3dadd( 35.1979, 247.774, -91.8572, 0.12 ) }
    dend_26 { pt3dadd( 35.3796, 247.969, -92.1518, 0.12 ) }
    dend_26 { pt3dadd( 35.5757, 248.164, -92.5137, 0.6 ) }
    dend_26 { pt3dadd( 35.966, 248.51, -93.2757, 0.12 ) }
    dend_26 { pt3dadd( 36.0871, 248.606, -93.5117, 0.12 ) }
    dend_26 { pt3dadd( 36.4105, 248.824, -94.0853, 1.2 ) }
    dend_26 { pt3dadd( 37.1574, 249.317, -95.2251, 1.2 ) }
    dend_26 { pt3dadd( 38.0351, 249.94, -96.5331, 0.24 ) }
    dend_26 { pt3dadd( 38.3273, 250.163, -96.9623, 0.24 ) }
    dend_26 { pt3dadd( 38.4526, 250.27, -97.1398, 0.84 ) }
    dend_26 { pt3dadd( 38.9565, 250.754, -97.8193, 0.12 ) }
    dend_26 { pt3dadd( 39.6563, 251.451, -98.6577, 0.12 ) }
    dend_26 { pt3dadd( 39.8508, 251.669, -98.8662, 0.12 ) }
    dend_26 { pt3dadd( 40.4886, 252.466, -99.5628, 0.96 ) }
    dend_26 { pt3dadd( 40.6713, 252.705, -99.7797, 0.96 ) }
    dend_26 { pt3dadd( 40.8056, 252.899, -99.9546, 0.96 ) }
    dend_26 { pt3dadd( 41.1971, 253.56, -100.585, 0.48 ) }
    dend_26 { pt3dadd( 41.3611, 253.856, -100.895, 0.48 ) }
    dend_26 { pt3dadd( 41.622, 254.401, -101.453, 0.12 ) }
    dend_26 { pt3dadd( 41.8118, 254.808, -101.805, 0.12 ) }
    dend_26 { pt3dadd( 42.3931, 256.033, -102.734, 0.12 ) }
    dend_26 { pt3dadd( 42.7469, 256.766, -103.2, 0.84 ) }
    dend_26 { pt3dadd( 42.9172, 257.137, -103.413, 1.08 ) }
    dend_26 { pt3dadd( 43.3553, 258.042, -103.915, 0.12 ) }
    dend_26 { pt3dadd( 43.8976, 259.2, -104.493, 0.12 ) }
    dend_26 { pt3dadd( 44.1162, 259.639, -104.688, 1.08 ) }
    dend_26 { pt3dadd( 44.4812, 260.26, -104.818, 1.08 ) }
    // Section: dend_15, id: dend_15, parent: dend_1 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -2.32204, -34.3268, -9.06891, 0.48 ) }
    dend_15 { pt3dadd( -3.92859, -34.7797, -9.61595, 0.48 ) }
    dend_15 { pt3dadd( -4.80344, -35.047, -9.93223, 0.48 ) }
    dend_15 { pt3dadd( -6.18919, -35.4928, -10.4501, 0.84 ) }
    dend_15 { pt3dadd( -7.3592, -35.8984, -10.8948, 0.96 ) }
    dend_15 { pt3dadd( -8.22655, -36.2095, -11.2262, 0.96 ) }
    dend_15 { pt3dadd( -9.11617, -36.5404, -11.5649, 0.12 ) }
    dend_15 { pt3dadd( -9.50565, -36.7118, -11.7665, 0.12 ) }
    dend_15 { pt3dadd( -9.71246, -36.8088, -11.9034, 0.12 ) }
    dend_15 { pt3dadd( -10.0435, -36.9695, -12.2111, 0.48 ) }
    dend_15 { pt3dadd( -10.2966, -37.0994, -12.4909, 0.48 ) }
    dend_15 { pt3dadd( -10.5973, -37.2492, -12.8331, 0.6 ) }
    dend_15 { pt3dadd( -11.6983, -37.7349, -14.0815, 0.12 ) }
    dend_15 { pt3dadd( -12.0794, -37.8887, -14.504, 0.12 ) }
    dend_15 { pt3dadd( -12.8774, -38.2027, -15.3508, 2.16 ) }
    dend_15 { pt3dadd( -13.1599, -38.3142, -15.6413, 3.0 ) }
    dend_15 { pt3dadd( -13.7757, -38.5634, -16.2361, 3.12 ) }
    dend_15 { pt3dadd( -15.5386, -39.2948, -17.7666, 0.12 ) }
    dend_15 { pt3dadd( -15.8763, -39.4392, -18.0095, 0.12 ) }
    dend_15 { pt3dadd( -16.2502, -39.6005, -18.2632, 0.12 ) }
    dend_15 { pt3dadd( -16.5528, -39.7302, -18.4457, 0.12 ) }
    dend_15 { pt3dadd( -16.9868, -39.9223, -18.716, 0.12 ) }
    dend_15 { pt3dadd( -17.4334, -40.1269, -18.9949, 0.12 ) }
    dend_15 { pt3dadd( -18.7702, -40.7853, -19.7677, 2.28 ) }
    dend_15 { pt3dadd( -19.0992, -40.9563, -19.9678, 3.25 ) }
    dend_15 { pt3dadd( -19.5187, -41.193, -20.2274, 3.25 ) }
    dend_15 { pt3dadd( -20.3894, -41.7271, -20.7891, 2.52 ) }
    dend_15 { pt3dadd( -21.53, -42.4835, -21.536, 0.12 ) }
    dend_15 { pt3dadd( -21.8392, -42.7083, -21.828, 0.12 ) }
    dend_15 { pt3dadd( -22.0092, -42.8486, -22.0289, 0.12 ) }
    dend_15 { pt3dadd( -22.5619, -43.3335, -22.7651, 1.68 ) }
    dend_15 { pt3dadd( -22.9872, -43.7222, -23.3494, 2.04 ) }
    dend_15 { pt3dadd( -23.2944, -44.0095, -23.7659, 2.04 ) }
    dend_15 { pt3dadd( -25.1037, -45.7608, -26.5027, 0.12 ) }
    dend_15 { pt3dadd( -25.3307, -45.9763, -26.8675, 0.12 ) }
    dend_15 { pt3dadd( -25.4989, -46.1336, -27.156, 0.12 ) }
    dend_15 { pt3dadd( -26.0222, -46.6214, -28.1537, 2.4 ) }
    dend_15 { pt3dadd( -26.2968, -46.8857, -28.6889, 3.12 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 69/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -2.32204, -34.3268, -9.06891, 0.96 ) }
    dend_2 { pt3dadd( -1.91201, -35.7338, -9.12493, 0.96 ) }
    dend_2 { pt3dadd( -1.73401, -36.3629, -9.14895, 0.48 ) }
    dend_2 { pt3dadd( -1.59909, -36.8721, -9.18556, 0.48 ) }
    dend_2 { pt3dadd( -1.42823, -37.6246, -9.26863, 0.6 ) }
    dend_2 { pt3dadd( -1.24283, -38.6293, -9.44169, 0.6 ) }
    dend_2 { pt3dadd( -1.11577, -39.6002, -9.64856, 0.6 ) }
    dend_2 { pt3dadd( -1.03885, -40.7184, -9.95096, 0.6 ) }
    dend_2 { pt3dadd( -1.02857, -41.6934, -10.2491, 1.44 ) }
    dend_2 { pt3dadd( -1.0763, -42.4942, -10.5059, 2.04 ) }
    dend_2 { pt3dadd( -1.2545, -43.6645, -10.8988, 1.92 ) }
    dend_2 { pt3dadd( -1.57277, -44.9183, -11.3429, 1.08 ) }
    dend_2 { pt3dadd( -1.93913, -45.9662, -11.7174, 0.48 ) }
    dend_2 { pt3dadd( -2.21501, -46.6224, -11.9372, 0.36 ) }
    dend_2 { pt3dadd( -2.45452, -47.1307, -12.0909, 0.36 ) }
    dend_2 { pt3dadd( -2.6403, -47.4959, -12.1834, 0.36 ) }
    dend_2 { pt3dadd( -2.96675, -48.0592, -12.2827, 0.36 ) }
    dend_2 { pt3dadd( -3.43414, -48.7535, -12.3792, 2.04 ) }
    dend_2 { pt3dadd( -4.12506, -49.698, -12.467, 3.97 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 88/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -71.7136, 179.37, -100.245, 0.12 ) }
    dend_31 { pt3dadd( -71.6346, 179.34, -100.52, 0.12 ) }
    dend_31 { pt3dadd( -71.4057, 179.251, -101.316, 0.12 ) }
    dend_31 { pt3dadd( -71.3485, 179.229, -101.515, 0.84 ) }
    dend_31 { pt3dadd( -71.0439, 179.112, -102.575, 0.12 ) }
    dend_31 { pt3dadd( -70.9694, 179.083, -102.834, 0.12 ) }
    dend_31 { pt3dadd( -70.9332, 179.069, -102.959, 0.6 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 95/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -71.7136, 179.37, -100.245, 0.24 ) }
    dend_28 { pt3dadd( -72.0563, 180.279, -100.64, 0.24 ) }
    dend_28 { pt3dadd( -72.3291, 180.943, -100.92, 0.24 ) }
    dend_28 { pt3dadd( -72.5862, 181.56, -101.161, 0.24 ) }
    dend_28 { pt3dadd( -72.7648, 181.979, -101.306, 1.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_28 { pt3dadd( -72.9769, 182.477, -101.48, 2.04 ) }
    dend_28 { pt3dadd( -73.5548, 183.834, -101.952, 0.12 ) }
    dend_28 { pt3dadd( -73.9014, 184.644, -102.194, 0.24 ) }
    dend_28 { pt3dadd( -74.1892, 185.269, -102.399, 0.24 ) }
    dend_28 { pt3dadd( -74.5273, 185.972, -102.65, 0.96 ) }
    // Section: dend_19, id: dend_19, parent: dend_15 (entry count 5/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -26.2968, -46.8857, -28.6889, 1.68 ) }
    dend_19 { pt3dadd( -27.415, -48.1315, -29.148, 1.68 ) }
    dend_19 { pt3dadd( -28.0078, -48.8155, -29.3766, 2.28 ) }
    dend_19 { pt3dadd( -28.8548, -49.7278, -29.6913, 0.12 ) }
    dend_19 { pt3dadd( -29.2534, -50.1134, -29.8328, 0.12 ) }
    dend_19 { pt3dadd( -29.7474, -50.5557, -30.0039, 0.12 ) }
    dend_19 { pt3dadd( -29.9391, -50.7114, -30.069, 0.12 ) }
    dend_19 { pt3dadd( -30.9278, -51.3391, -30.3255, 2.04 ) }
    dend_19 { pt3dadd( -31.5929, -51.7159, -30.45, 2.28 ) }
    dend_19 { pt3dadd( -32.7991, -52.3683, -30.6039, 0.12 ) }
    dend_19 { pt3dadd( -33.3003, -52.632, -30.6606, 0.12 ) }
    dend_19 { pt3dadd( -34.4153, -53.1956, -30.7576, 0.12 ) }
    dend_19 { pt3dadd( -35.7246, -53.818, -30.8589, 1.68 ) }
    dend_19 { pt3dadd( -36.4687, -54.1445, -30.9022, 2.04 ) }
    dend_19 { pt3dadd( -37.2971, -54.5228, -30.9241, 0.12 ) }
    dend_19 { pt3dadd( -38.2861, -54.9752, -30.9142, 0.12 ) }
    dend_19 { pt3dadd( -38.9873, -55.308, -30.8982, 1.2 ) }
    // Section: dend_16, id: dend_16, parent: dend_15 (entry count 22/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -26.2968, -46.8857, -28.6889, 0.12 ) }
    dend_16 { pt3dadd( -26.9691, -47.511, -30.1008, 0.12 ) }
    dend_16 { pt3dadd( -27.0883, -47.6118, -30.3083, 0.12 ) }
    dend_16 { pt3dadd( -27.2468, -47.7326, -30.5486, 0.84 ) }
    dend_16 { pt3dadd( -27.4299, -47.8573, -30.7686, 0.84 ) }
    dend_16 { pt3dadd( -28.2883, -48.4249, -31.6733, 0.12 ) }
    dend_16 { pt3dadd( -28.4759, -48.539, -31.8483, 0.12 ) }
    dend_16 { pt3dadd( -28.9883, -48.8119, -32.2361, 0.12 ) }
    dend_16 { pt3dadd( -29.1865, -48.9046, -32.3759, 0.12 ) }
    dend_16 { pt3dadd( -29.8921, -49.1972, -32.8269, 2.28 ) }
    dend_16 { pt3dadd( -30.0525, -49.2583, -32.9161, 2.64 ) }
    dend_16 { pt3dadd( -30.43, -49.3917, -33.1008, 2.76 ) }
    dend_16 { pt3dadd( -31.3979, -49.733, -33.6301, 0.12 ) }
    dend_16 { pt3dadd( -31.972, -49.931, -33.9719, 0.12 ) }
    dend_16 { pt3dadd( -32.2205, -50.019, -34.1382, 0.48 ) }
    dend_16 { pt3dadd( -32.4043, -50.0866, -34.2844, 0.48 ) }
    dend_16 { pt3dadd( -32.7703, -50.2424, -34.5875, 0.12 ) }
    dend_16 { pt3dadd( -33.0745, -50.4008, -34.9164, 0.84 ) }
    dend_16 { pt3dadd( -33.2371, -50.5005, -35.119, 1.2 ) }
    dend_16 { pt3dadd( -33.5141, -50.6972, -35.4852, 1.2 ) }
    dend_16 { pt3dadd( -33.8688, -50.9623, -35.9379, 0.12 ) }
    dend_16 { pt3dadd( -34.2636, -51.2681, -36.3885, 0.12 ) }
    dend_16 { pt3dadd( -35.1595, -51.9812, -37.2899, 0.12 ) }
    dend_16 { pt3dadd( -35.4324, -52.2052, -37.5427, 1.92 ) }
    dend_16 { pt3dadd( -35.903, -52.6132, -37.9488, 2.88 ) }
    dend_16 { pt3dadd( -36.7274, -53.3587, -38.5622, 0.12 ) }
    dend_16 { pt3dadd( -37.3288, -53.9379, -38.9519, 0.12 ) }
    dend_16 { pt3dadd( -37.695, -54.315, -39.1574, 1.68 ) }
    dend_16 { pt3dadd( -37.9316, -54.5799, -39.2638, 2.04 ) }
    dend_16 { pt3dadd( -38.4047, -55.158, -39.4864, 1.44 ) }
    dend_16 { pt3dadd( -38.7158, -55.5833, -39.6337, 0.12 ) }
    dend_16 { pt3dadd( -38.9511, -55.9413, -39.7343, 0.12 ) }
    dend_16 { pt3dadd( -39.1127, -56.2027, -39.8096, 0.6 ) }
    dend_16 { pt3dadd( -39.4108, -56.6965, -39.9447, 0.12 ) }
    dend_16 { pt3dadd( -39.5157, -56.8545, -39.9942, 0.12 ) }
    dend_16 { pt3dadd( -39.8469, -57.2817, -40.1427, 0.12 ) }
    dend_16 { pt3dadd( -40.0038, -57.4574, -40.2174, 0.36 ) }
    dend_16 { pt3dadd( -40.1333, -57.5824, -40.2839, 0.12 ) }
    dend_16 { pt3dadd( -40.6472, -58.0377, -40.553, 0.12 ) }
    dend_16 { pt3dadd( -41.2362, -58.5128, -40.8537, 1.2 ) }
    dend_16 { pt3dadd( -41.5199, -58.723, -41.0162, 1.92 ) }
    dend_16 { pt3dadd( -41.7757, -58.9052, -41.1882, 1.92 ) }
    dend_16 { pt3dadd( -42.419, -59.3473, -41.6511, 0.12 ) }
    dend_16 { pt3dadd( -42.5967, -59.4569, -41.7798, 0.12 ) }
    dend_16 { pt3dadd( -42.7915, -59.562, -41.941, 0.12 ) }
    dend_16 { pt3dadd( -43.4254, -59.8761, -42.4926, 0.72 ) }
    dend_16 { pt3dadd( -43.7355, -60.017, -42.7928, 0.12 ) }
    dend_16 { pt3dadd( -44.1079, -60.1637, -43.1683, 0.12 ) }
    dend_16 { pt3dadd( -44.4631, -60.2754, -43.6441, 1.32 ) }
    dend_16 { pt3dadd( -45.0511, -60.4223, -44.5333, 0.12 ) }
    dend_16 { pt3dadd( -45.2753, -60.467, -44.899, 0.12 ) }
    dend_16 { pt3dadd( -45.7566, -60.5386, -45.7137, 1.92 ) }
    dend_16 { pt3dadd( -45.9126, -60.5739, -46.0352, 1.92 ) }
    dend_16 { pt3dadd( -46.7867, -60.8602, -48.1547, 0.12 ) }
    dend_16 { pt3dadd( -46.9608, -60.941, -48.6355, 0.12 ) }
    dend_16 { pt3dadd( -47.3528, -61.1619, -49.7146, 2.4 ) }
    dend_16 { pt3dadd( -47.4087, -61.1998, -49.8736, 2.64 ) }
    dend_16 { pt3dadd( -48.3258, -61.8954, -52.4162, 0.12 ) }
    dend_16 { pt3dadd( -48.6517, -62.1577, -53.2686, 0.84 ) }
    dend_16 { pt3dadd( -48.9352, -62.3994, -53.9283, 0.12 ) }
    dend_16 { pt3dadd( -49.2238, -62.6579, -54.594, 0.12 ) }
    dend_16 { pt3dadd( -49.63, -63.0291, -55.4902, 1.44 ) }
    dend_16 { pt3dadd( -49.7876, -63.163, -55.7895, 1.68 ) }
    dend_16 { pt3dadd( -50.4175, -63.5891, -56.6219, 0.12 ) }
    dend_16 { pt3dadd( -50.6425, -63.7347, -56.8922, 0.12 ) }
    dend_16 { pt3dadd( -50.7624, -63.8066, -57.0352, 0.48 ) }
    dend_16 { pt3dadd( -51.0699, -63.978, -57.4537, 0.12 ) }
    dend_16 { pt3dadd( -51.3489, -64.1169, -57.8238, 0.12 ) }
    dend_16 { pt3dadd( -51.7725, -64.2988, -58.3782, 1.68 ) }
    dend_16 { pt3dadd( -51.8806, -64.334, -58.5082, 1.8 ) }
    dend_16 { pt3dadd( -52.4243, -64.4518, -59.1477, 1.08 ) }
    dend_16 { pt3dadd( -52.9538, -64.5395, -59.7374, 0.12 ) }
    dend_16 { pt3dadd( -53.2087, -64.5696, -60.0253, 0.12 ) }
    dend_16 { pt3dadd( -53.7533, -64.6061, -60.6557, 2.16 ) }
    dend_16 { pt3dadd( -53.9846, -64.6122, -60.9256, 2.4 ) }
    dend_16 { pt3dadd( -54.9317, -64.5815, -61.9915, 0.48 ) }
    dend_16 { pt3dadd( -55.1741, -64.557, -62.2505, 0.48 ) }
    dend_16 { pt3dadd( -55.9003, -64.4277, -63.0141, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_16 { pt3dadd( -56.1098, -64.3726, -63.2374, 0.12 ) }
    dend_16 { pt3dadd( -56.3199, -64.2949, -63.4535, 0.12 ) }
    dend_16 { pt3dadd( -56.6955, -64.1066, -63.8086, 0.12 ) }
    dend_16 { pt3dadd( -57.0202, -63.9059, -64.1218, 0.6 ) }
    dend_16 { pt3dadd( -57.1947, -63.7957, -64.3083, 0.96 ) }
    dend_16 { pt3dadd( -57.7014, -63.5019, -64.8426, 0.12 ) }
    dend_16 { pt3dadd( -57.9428, -63.3822, -65.18, 0.12 ) }
    dend_16 { pt3dadd( -58.4233, -63.1827, -65.9322, 2.4 ) }
    dend_16 { pt3dadd( -59.1863, -62.9257, -67.2647, 0.12 ) }
    dend_16 { pt3dadd( -59.4853, -62.8267, -67.9211, 0.36 ) }
    dend_16 { pt3dadd( -59.6075, -62.7886, -68.2529, 0.72 ) }
    dend_16 { pt3dadd( -60.3114, -62.6209, -70.4932, 1.44 ) }
    dend_16 { pt3dadd( -60.3878, -62.6092, -70.7547, 1.68 ) }
    dend_16 { pt3dadd( -60.4859, -62.6032, -71.0964, 1.92 ) }
    dend_16 { pt3dadd( -61.1851, -62.5723, -73.5673, 0.48 ) }
    dend_16 { pt3dadd( -61.3899, -62.5602, -74.2592, 0.12 ) }
    dend_16 { pt3dadd( -61.4876, -62.5526, -74.5543, 0.12 ) }
    dend_16 { pt3dadd( -61.6357, -62.5457, -74.8887, 0.12 ) }
    dend_16 { pt3dadd( -61.8316, -62.5569, -75.2822, 0.48 ) }
    dend_16 { pt3dadd( -62.2413, -62.6142, -75.9803, 0.12 ) }
    dend_16 { pt3dadd( -62.3939, -62.6596, -76.1844, 0.12 ) }
    dend_16 { pt3dadd( -62.8435, -62.8174, -76.7506, 1.68 ) }
    dend_16 { pt3dadd( -63.1297, -62.9389, -77.1209, 2.64 ) }
    dend_16 { pt3dadd( -64.493, -63.6651, -78.8875, 0.24 ) }
    dend_16 { pt3dadd( -64.6719, -63.7768, -79.1174, 0.24 ) }
    dend_16 { pt3dadd( -64.9878, -63.9922, -79.5127, 0.24 ) }
    dend_16 { pt3dadd( -65.2762, -64.1997, -79.8716, 0.36 ) }
    dend_16 { pt3dadd( -65.5896, -64.4292, -80.2428, 0.12 ) }
    dend_16 { pt3dadd( -65.8779, -64.6194, -80.5463, 0.12 ) }
    dend_16 { pt3dadd( -66.4375, -64.9571, -81.0217, 0.6 ) }
    dend_16 { pt3dadd( -66.7624, -65.1234, -81.2861, 0.12 ) }
    dend_16 { pt3dadd( -67.71, -65.5218, -82.0109, 2.16 ) }
    dend_16 { pt3dadd( -67.9269, -65.5933, -82.1609, 2.64 ) }
    dend_16 { pt3dadd( -68.8312, -65.7935, -82.6888, 0.12 ) }
    dend_16 { pt3dadd( -69.212, -65.8395, -82.8845, 0.12 ) }
    dend_16 { pt3dadd( -69.5964, -65.8565, -83.0944, 0.96 ) }
    dend_16 { pt3dadd( -69.8882, -65.8477, -83.2782, 0.96 ) }
    dend_16 { pt3dadd( -70.1716, -65.813, -83.4872, 0.12 ) }
    dend_16 { pt3dadd( -70.6337, -65.7387, -83.9056, 0.12 ) }
    dend_16 { pt3dadd( -71.1647, -65.6516, -84.522, 1.68 ) }
    dend_16 { pt3dadd( -71.9476, -65.5086, -85.6655, 1.68 ) }
    dend_16 { pt3dadd( -72.3165, -65.4332, -86.2777, 0.12 ) }
    dend_16 { pt3dadd( -72.4916, -65.3958, -86.5849, 0.12 ) }
    dend_16 { pt3dadd( -72.7676, -65.337, -87.09, 0.12 ) }
    dend_16 { pt3dadd( -73.2207, -65.2339, -87.9261, 1.68 ) }
    dend_16 { pt3dadd( -73.8589, -65.0867, -89.0555, 0.12 ) }
    dend_16 { pt3dadd( -74.0296, -65.0526, -89.3132, 0.12 ) }
    dend_16 { pt3dadd( -74.285, -65.0011, -89.6675, 0.12 ) }
    dend_16 { pt3dadd( -74.9574, -64.8463, -90.4836, 1.8 ) }
    dend_16 { pt3dadd( -75.1716, -64.7906, -90.7021, 1.8 ) }
    dend_16 { pt3dadd( -75.9683, -64.5724, -91.3707, 0.12 ) }
    dend_16 { pt3dadd( -76.3215, -64.4857, -91.6305, 0.12 ) }
    dend_16 { pt3dadd( -76.8457, -64.3616, -92.0068, 0.12 ) }
    dend_16 { pt3dadd( -77.4454, -64.2024, -92.405, 1.2 ) }
    dend_16 { pt3dadd( -77.5185, -64.1813, -92.4459, 1.68 ) }
    dend_16 { pt3dadd( -77.7414, -64.1177, -92.5613, 1.68 ) }
    dend_16 { pt3dadd( -78.5373, -63.8818, -92.9099, 0.12 ) }
    dend_16 { pt3dadd( -78.8522, -63.8003, -93.05, 0.12 ) }
    dend_16 { pt3dadd( -79.3496, -63.7006, -93.2686, 0.12 ) }
    dend_16 { pt3dadd( -79.584, -63.652, -93.367, 0.12 ) }
    dend_16 { pt3dadd( -79.8702, -63.5943, -93.4742, 1.08 ) }
    dend_16 { pt3dadd( -80.1947, -63.5368, -93.5764, 1.08 ) }
    dend_16 { pt3dadd( -80.806, -63.4665, -93.6486, 0.12 ) }
    dend_16 { pt3dadd( -81.0781, -63.451, -93.6562, 0.12 ) }
    dend_16 { pt3dadd( -81.5831, -63.4446, -93.6391, 0.24 ) }
    dend_16 { pt3dadd( -82.0473, -63.4446, -93.6278, 0.24 ) }
    dend_16 { pt3dadd( -82.4868, -63.4606, -93.6229, 0.24 ) }
    dend_16 { pt3dadd( -83.6384, -63.5537, -93.654, 1.68 ) }
    dend_16 { pt3dadd( -83.9946, -63.5957, -93.6754, 2.52 ) }
    dend_16 { pt3dadd( -84.4199, -63.6551, -93.7176, 2.52 ) }
    dend_16 { pt3dadd( -85.4008, -63.7853, -93.8609, 0.12 ) }
    dend_16 { pt3dadd( -86.006, -63.8301, -93.9777, 0.48 ) }
    dend_16 { pt3dadd( -86.4467, -63.8303, -94.0919, 0.12 ) }
    dend_16 { pt3dadd( -86.6911, -63.8121, -94.1745, 0.12 ) }
    dend_16 { pt3dadd( -86.9866, -63.7758, -94.2642, 0.12 ) }
    dend_16 { pt3dadd( -87.4436, -63.7167, -94.4168, 0.36 ) }
    dend_16 { pt3dadd( -87.7715, -63.6681, -94.5303, 0.12 ) }
    dend_16 { pt3dadd( -88.4245, -63.613, -94.7624, 0.12 ) }
    dend_16 { pt3dadd( -88.688, -63.6344, -94.8557, 1.56 ) }
    dend_16 { pt3dadd( -88.8998, -63.714, -94.9487, 1.56 ) }
    dend_16 { pt3dadd( -89.5907, -64.26, -95.2965, 1.2 ) }
    dend_16 { pt3dadd( -89.6743, -64.3542, -95.3411, 0.12 ) }
    dend_16 { pt3dadd( -89.9991, -64.8047, -95.5225, 0.12 ) }
    dend_16 { pt3dadd( -90.0832, -64.9421, -95.5914, 0.12 ) }
    dend_16 { pt3dadd( -90.1713, -65.0724, -95.668, 0.12 ) }
    dend_16 { pt3dadd( -90.4925, -65.5065, -95.9838, 0.12 ) }
    dend_16 { pt3dadd( -90.6243, -65.6531, -96.1312, 1.2 ) }
    dend_16 { pt3dadd( -90.7859, -65.8254, -96.3371, 1.44 ) }
    dend_16 { pt3dadd( -91.361, -66.3866, -97.1807, 0.12 ) }
    dend_16 { pt3dadd( -91.5895, -66.5978, -97.5288, 0.96 ) }
    dend_16 { pt3dadd( -91.9039, -66.8665, -98.0004, 1.2 ) }
    dend_16 { pt3dadd( -92.4617, -67.284, -98.8023, 0.12 ) }
    dend_16 { pt3dadd( -92.6505, -67.4193, -99.0733, 0.12 ) }
    dend_16 { pt3dadd( -93.0879, -67.7122, -99.6794, 0.12 ) }
    dend_16 { pt3dadd( -93.2698, -67.8239, -99.9015, 0.12 ) }
    dend_16 { pt3dadd( -93.5978, -68.0159, -100.296, 0.12 ) }
    dend_16 { pt3dadd( -94.3783, -68.398, -101.065, 2.64 ) }
    // Section: dend_14, id: dend_14, parent: dend_2 (entry count 97/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -4.12506, -49.698, -12.467, 0.12 ) }
    dend_14 { pt3dadd( -5.66774, -50.821, -11.9796, 0.12 ) }
    dend_14 { pt3dadd( -5.82954, -50.9442, -11.9206, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -6.39303, -51.3855, -11.7044, 0.12 ) }
    dend_14 { pt3dadd( -6.79147, -51.6969, -11.5475, 0.12 ) }
    dend_14 { pt3dadd( -7.47832, -52.2336, -11.2758, 0.12 ) }
    dend_14 { pt3dadd( -8.13862, -52.7494, -11.016, 1.32 ) }
    dend_14 { pt3dadd( -8.41886, -52.9786, -10.8943, 1.68 ) }
    dend_14 { pt3dadd( -8.97061, -53.4435, -10.6576, 0.72 ) }
    dend_14 { pt3dadd( -9.37208, -53.8147, -10.481, 0.12 ) }
    dend_14 { pt3dadd( -9.63478, -54.0687, -10.3674, 0.12 ) }
    dend_14 { pt3dadd( -9.88392, -54.3347, -10.2661, 0.12 ) }
    dend_14 { pt3dadd( -10.1109, -54.6221, -10.151, 0.6 ) }
    dend_14 { pt3dadd( -10.3125, -54.9175, -10.0109, 0.6 ) }
    dend_14 { pt3dadd( -10.5872, -55.3428, -9.77748, 0.12 ) }
    dend_14 { pt3dadd( -10.7202, -55.5169, -9.6849, 0.12 ) }
    dend_14 { pt3dadd( -10.8765, -55.6791, -9.60971, 0.12 ) }
    dend_14 { pt3dadd( -11.8759, -56.5191, -9.27033, 1.92 ) }
    dend_14 { pt3dadd( -12.3202, -56.8051, -9.16293, 2.76 ) }
    dend_14 { pt3dadd( -12.7806, -57.0497, -9.07964, 3.0 ) }
    dend_14 { pt3dadd( -13.9309, -57.568, -8.92596, 1.68 ) }
    dend_14 { pt3dadd( -14.7064, -57.8672, -8.86235, 0.12 ) }
    dend_14 { pt3dadd( -15.2446, -58.0451, -8.84069, 0.12 ) }
    dend_14 { pt3dadd( -16.1552, -58.3074, -8.84468, 0.12 ) }
    dend_14 { pt3dadd( -16.6064, -58.4421, -8.83892, 0.6 ) }
    dend_14 { pt3dadd( -16.8072, -58.5056, -8.84479, 0.84 ) }
    dend_14 { pt3dadd( -17.5103, -58.7425, -8.87429, 0.12 ) }
    dend_14 { pt3dadd( -18.3257, -59.0364, -8.93536, 0.12 ) }
    dend_14 { pt3dadd( -18.7607, -59.2046, -9.00407, 0.6 ) }
    dend_14 { pt3dadd( -19.0676, -59.3389, -9.07207, 0.12 ) }
    dend_14 { pt3dadd( -20.298, -59.9097, -9.37563, 0.12 ) }
    dend_14 { pt3dadd( -20.5604, -60.0499, -9.4429, 0.12 ) }
    dend_14 { pt3dadd( -20.76, -60.1673, -9.49026, 0.12 ) }
    dend_14 { pt3dadd( -21.4293, -60.5701, -9.66511, 1.32 ) }
    dend_14 { pt3dadd( -21.8621, -60.856, -9.76939, 2.4 ) }
    dend_14 { pt3dadd( -22.2517, -61.1354, -9.8471, 2.88 ) }
    dend_14 { pt3dadd( -22.699, -61.4859, -9.90028, 1.92 ) }
    dend_14 { pt3dadd( -23.2699, -61.9677, -9.9925, 1.2 ) }
    dend_14 { pt3dadd( -24.0724, -62.709, -10.1369, 0.12 ) }
    dend_14 { pt3dadd( -24.599, -63.2573, -10.2287, 0.12 ) }
    dend_14 { pt3dadd( -24.8017, -63.4857, -10.2643, 0.72 ) }
    dend_14 { pt3dadd( -25.1856, -63.9446, -10.3361, 0.96 ) }
    dend_14 { pt3dadd( -25.7708, -64.6938, -10.4209, 0.12 ) }
    dend_14 { pt3dadd( -26.0757, -65.1222, -10.4491, 0.12 ) }
    dend_14 { pt3dadd( -26.5959, -65.8793, -10.4464, 0.12 ) }
    dend_14 { pt3dadd( -26.904, -66.3058, -10.467, 0.12 ) }
    dend_14 { pt3dadd( -27.4136, -67.0094, -10.5214, 1.44 ) }
    dend_14 { pt3dadd( -27.8608, -67.6271, -10.5803, 2.4 ) }
    dend_14 { pt3dadd( -28.001, -67.8193, -10.5988, 2.4 ) }
    dend_14 { pt3dadd( -28.3536, -68.2977, -10.6585, 1.32 ) }
    dend_14 { pt3dadd( -29.1923, -69.4279, -10.8592, 0.12 ) }
    dend_14 { pt3dadd( -29.598, -69.9663, -10.9685, 0.12 ) }
    dend_14 { pt3dadd( -29.8262, -70.2601, -11.0297, 0.48 ) }
    dend_14 { pt3dadd( -29.9207, -70.3739, -11.0583, 0.12 ) }
    dend_14 { pt3dadd( -30.3539, -70.8877, -11.1739, 0.12 ) }
    dend_14 { pt3dadd( -30.8516, -71.4493, -11.2721, 0.96 ) }
    dend_14 { pt3dadd( -31.0838, -71.6882, -11.3174, 1.56 ) }
    dend_14 { pt3dadd( -31.4207, -72.0012, -11.4356, 1.56 ) }
    dend_14 { pt3dadd( -32.0109, -72.5154, -11.742, 0.12 ) }
    dend_14 { pt3dadd( -32.2755, -72.7359, -11.9072, 0.12 ) }
    dend_14 { pt3dadd( -32.4944, -72.9385, -12.0603, 0.12 ) }
    dend_14 { pt3dadd( -33.3446, -73.8013, -12.667, 0.48 ) }
    dend_14 { pt3dadd( -33.897, -74.4131, -13.0778, 0.48 ) }
    dend_14 { pt3dadd( -34.744, -75.3793, -13.7435, 2.64 ) }
    dend_14 { pt3dadd( -35.2244, -75.9434, -14.1339, 3.61 ) }
    dend_14 { pt3dadd( -36.1549, -77.0721, -14.9039, 0.12 ) }
    dend_14 { pt3dadd( -36.5245, -77.5573, -15.2075, 0.12 ) }
    dend_14 { pt3dadd( -36.6342, -77.7233, -15.2844, 0.36 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 65/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -4.12506, -49.698, -12.467, 3.25 ) }
    dend_3 { pt3dadd( -3.96585, -50.3792, -12.7046, 3.25 ) }
    dend_3 { pt3dadd( -3.60233, -52.0452, -13.156, 0.36 ) }
    dend_3 { pt3dadd( -3.54098, -52.3576, -13.2234, 0.36 ) }
    dend_3 { pt3dadd( -3.45333, -52.8418, -13.3071, 0.36 ) }
    dend_3 { pt3dadd( -3.33649, -53.4845, -13.405, 0.36 ) }
    dend_3 { pt3dadd( -3.23596, -54.1533, -13.4692, 0.36 ) }
    dend_3 { pt3dadd( -3.11815, -55.1576, -13.5063, 2.64 ) }
    dend_3 { pt3dadd( -3.04888, -55.9364, -13.4871, 3.85 ) }
    dend_3 { pt3dadd( -2.98021, -56.9268, -13.4569, 4.21 ) }
    dend_3 { pt3dadd( -2.9515, -57.5311, -13.4362, 3.61 ) }
    dend_3 { pt3dadd( -2.87221, -59.3881, -13.3719, 0.24 ) }
    dend_3 { pt3dadd( -2.86763, -59.5174, -13.3745, 0.24 ) }
    dend_3 { pt3dadd( -2.83692, -60.5173, -13.4407, 0.36 ) }
    dend_3 { pt3dadd( -2.78438, -61.4036, -13.5219, 1.08 ) }
    dend_3 { pt3dadd( -2.68464, -62.4901, -13.6481, 2.04 ) }
    dend_3 { pt3dadd( -2.5802, -63.3692, -13.7684, 1.56 ) }
    dend_3 { pt3dadd( -2.33812, -64.9389, -13.9715, 0.48 ) }
    dend_3 { pt3dadd( -2.25792, -65.4299, -14.015, 0.48 ) }
    dend_3 { pt3dadd( -2.07993, -66.5604, -14.066, 0.48 ) }
    dend_3 { pt3dadd( -1.9936, -67.2528, -14.0591, 0.48 ) }
    dend_3 { pt3dadd( -1.92721, -68.0296, -14.0175, 0.48 ) }
    dend_3 { pt3dadd( -1.90294, -69.0434, -13.9868, 0.48 ) }
    dend_3 { pt3dadd( -1.92802, -69.7071, -13.9719, 2.04 ) }
    dend_3 { pt3dadd( -2.01688, -70.5473, -14.0103, 3.0 ) }
    dend_3 { pt3dadd( -2.12742, -71.2399, -14.0903, 3.49 ) }
    dend_3 { pt3dadd( -2.28321, -72.1601, -14.2365, 2.52 ) }
    dend_3 { pt3dadd( -2.51608, -73.7175, -14.5484, 0.48 ) }
    dend_3 { pt3dadd( -2.57284, -74.2692, -14.675, 0.36 ) }
    dend_3 { pt3dadd( -2.59451, -74.6547, -14.7568, 0.36 ) }
    dend_3 { pt3dadd( -2.6, -75.3114, -14.8888, 0.6 ) }
    dend_3 { pt3dadd( -2.59009, -75.9634, -14.9959, 0.6 ) }
    dend_3 { pt3dadd( -2.5722, -76.7379, -15.0927, 0.36 ) }
    dend_3 { pt3dadd( -2.52719, -77.8899, -15.1962, 0.36 ) }
    dend_3 { pt3dadd( -2.50869, -78.3367, -15.2584, 0.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_3 { pt3dadd( -2.48576, -79.1794, -15.4166, 1.68 ) }
    dend_3 { pt3dadd( -2.48179, -80.2735, -15.6568, 3.49 ) }
    dend_3 { pt3dadd( -2.51646, -80.9789, -15.8289, 4.09 ) }
    dend_3 { pt3dadd( -2.59241, -81.7295, -16.0251, 3.49 ) }
    dend_3 { pt3dadd( -2.86235, -83.5901, -16.5082, 0.96 ) }
    dend_3 { pt3dadd( -2.97431, -84.3037, -16.697, 0.36 ) }
    dend_3 { pt3dadd( -3.02709, -84.6473, -16.7848, 0.36 ) }
    dend_3 { pt3dadd( -3.13471, -85.4078, -16.9749, 0.36 ) }
    dend_3 { pt3dadd( -3.21349, -85.936, -17.0993, 0.36 ) }
    dend_3 { pt3dadd( -3.35755, -86.7968, -17.2861, 1.2 ) }
    dend_3 { pt3dadd( -3.50689, -87.7185, -17.4184, 2.88 ) }
    dend_3 { pt3dadd( -3.58222, -88.4815, -17.5114, 2.76 ) }
    dend_3 { pt3dadd( -3.60041, -89.0447, -17.5933, 2.64 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 13/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -74.5273, 185.972, -102.65, 0.24 ) }
    dend_30 { pt3dadd( -75.3262, 185.887, -103.192, 0.24 ) }
    dend_30 { pt3dadd( -75.7924, 185.889, -103.458, 0.24 ) }
    dend_30 { pt3dadd( -77.6311, 185.897, -104.302, 1.2 ) }
    dend_30 { pt3dadd( -78.0033, 185.865, -104.473, 1.2 ) }
    dend_30 { pt3dadd( -78.9788, 185.7, -104.894, 0.12 ) }
    dend_30 { pt3dadd( -79.6976, 185.533, -105.214, 0.12 ) }
    dend_30 { pt3dadd( -80.5028, 185.289, -105.6, 0.12 ) }
    dend_30 { pt3dadd( -81.2362, 185.007, -105.919, 0.12 ) }
    dend_30 { pt3dadd( -82.6442, 184.364, -106.421, 0.12 ) }
    dend_30 { pt3dadd( -83.2366, 184.043, -106.662, 0.12 ) }
    dend_30 { pt3dadd( -83.8251, 183.663, -106.917, 0.96 ) }
    dend_30 { pt3dadd( -84.0569, 183.486, -107.035, 1.08 ) }
    dend_30 { pt3dadd( -84.2569, 183.317, -107.146, 1.08 ) }
    dend_30 { pt3dadd( -84.7541, 182.953, -107.468, 0.48 ) }
    dend_30 { pt3dadd( -85.2271, 182.655, -107.775, 0.48 ) }
    dend_30 { pt3dadd( -85.3292, 182.596, -107.841, 0.48 ) }
    dend_30 { pt3dadd( -85.5709, 182.456, -107.991, 0.48 ) }
    dend_30 { pt3dadd( -85.89, 182.268, -108.199, 0.12 ) }
    dend_30 { pt3dadd( -86.8359, 181.708, -108.791, 0.12 ) }
    dend_30 { pt3dadd( -87.0142, 181.607, -108.898, 0.12 ) }
    dend_30 { pt3dadd( -87.5309, 181.318, -109.207, 1.44 ) }
    dend_30 { pt3dadd( -88.1978, 180.948, -109.61, 1.8 ) }
    dend_30 { pt3dadd( -89.1532, 180.424, -110.183, 0.12 ) }
    dend_30 { pt3dadd( -89.4834, 180.233, -110.37, 0.12 ) }
    dend_30 { pt3dadd( -90.0134, 179.921, -110.631, 1.08 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 39/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -74.5273, 185.972, -102.65, 0.12 ) }
    dend_29 { pt3dadd( -74.5051, 186.535, -102.957, 0.12 ) }
    dend_29 { pt3dadd( -74.4695, 187.139, -103.287, 0.12 ) }
    dend_29 { pt3dadd( -74.4101, 188.08, -103.757, 2.4 ) }
    dend_29 { pt3dadd( -74.3967, 188.365, -103.903, 2.4 ) }
    dend_29 { pt3dadd( -74.3735, 189.021, -104.222, 2.16 ) }
    dend_29 { pt3dadd( -74.338, 190.199, -104.772, 0.12 ) }
    dend_29 { pt3dadd( -74.324, 190.815, -105.076, 0.12 ) }
    dend_29 { pt3dadd( -74.3378, 191.341, -105.33, 0.12 ) }
    dend_29 { pt3dadd( -74.3753, 191.855, -105.588, 0.12 ) }
    dend_29 { pt3dadd( -74.4441, 192.356, -105.901, 1.08 ) }
    dend_29 { pt3dadd( -74.4937, 192.615, -106.081, 1.08 ) }
    dend_29 { pt3dadd( -74.709, 193.423, -106.773, 0.12 ) }
    dend_29 { pt3dadd( -74.8378, 193.808, -107.137, 0.12 ) }
    dend_29 { pt3dadd( -75.0943, 194.424, -107.805, 0.84 ) }
    dend_29 { pt3dadd( -75.5011, 195.33, -108.82, 0.12 ) }
    dend_29 { pt3dadd( -75.686, 195.736, -109.296, 0.12 ) }
    dend_29 { pt3dadd( -75.9235, 196.278, -109.927, 1.32 ) }
    dend_29 { pt3dadd( -76.0076, 196.469, -110.154, 1.32 ) }
    dend_29 { pt3dadd( -76.3839, 197.406, -111.268, 0.12 ) }
    dend_29 { pt3dadd( -76.4841, 197.686, -111.587, 0.12 ) }
    dend_29 { pt3dadd( -76.5943, 198.051, -111.967, 0.12 ) }
    dend_29 { pt3dadd( -76.7671, 198.717, -112.645, 0.12 ) }
    dend_29 { pt3dadd( -77.0709, 200.06, -114.009, 1.8 ) }
    dend_29 { pt3dadd( -77.101, 200.231, -114.174, 1.8 ) }
    dend_29 { pt3dadd( -77.1691, 200.835, -114.694, 0.12 ) }
    dend_29 { pt3dadd( -77.2361, 201.579, -115.33, 0.12 ) }
    dend_29 { pt3dadd( -77.2558, 201.915, -115.596, 0.6 ) }
    dend_29 { pt3dadd( -77.2574, 202.748, -116.15, 0.12 ) }
    dend_29 { pt3dadd( -77.2157, 203.606, -116.633, 0.12 ) }
    dend_29 { pt3dadd( -77.1807, 204.287, -116.987, 1.32 ) }
    dend_29 { pt3dadd( -77.1172, 205.383, -117.499, 0.12 ) }
    dend_29 { pt3dadd( -77.0928, 206.089, -117.784, 0.12 ) }
    dend_29 { pt3dadd( -77.0878, 207.149, -118.125, 0.12 ) }
    dend_29 { pt3dadd( -77.0891, 207.257, -118.148, 0.12 ) }
    dend_29 { pt3dadd( -77.135, 208.01, -118.259, 1.44 ) }
    dend_29 { pt3dadd( -77.1896, 208.6, -118.279, 1.92 ) }
    dend_29 { pt3dadd( -77.3153, 209.636, -118.189, 0.12 ) }
    dend_29 { pt3dadd( -77.4037, 210.206, -118.108, 0.12 ) }
    dend_29 { pt3dadd( -77.5002, 210.78, -117.959, 0.12 ) }
    dend_29 { pt3dadd( -77.6073, 211.331, -117.777, 0.12 ) }
    dend_29 { pt3dadd( -77.774, 212.04, -117.492, 0.12 ) }
    dend_29 { pt3dadd( -77.9653, 212.772, -117.169, 1.68 ) }
    dend_29 { pt3dadd( -78.0511, 213.05, -117.046, 1.68 ) }
    dend_29 { pt3dadd( -78.4986, 214.196, -116.576, 0.12 ) }
    dend_29 { pt3dadd( -78.7435, 214.732, -116.394, 0.12 ) }
    dend_29 { pt3dadd( -78.9984, 215.271, -116.256, 1.08 ) }
    dend_29 { pt3dadd( -79.1768, 215.618, -116.202, 1.08 ) }
    dend_29 { pt3dadd( -79.4491, 216.095, -116.158, 0.12 ) }
    dend_29 { pt3dadd( -79.8395, 216.76, -116.109, 0.12 ) }
    dend_29 { pt3dadd( -80.1291, 217.224, -116.096, 0.12 ) }
    dend_29 { pt3dadd( -80.3101, 217.517, -116.072, 0.12 ) }
    dend_29 { pt3dadd( -80.6032, 218.025, -116.027, 0.12 ) }
    dend_29 { pt3dadd( -81.1273, 218.961, -115.934, 0.12 ) }
    dend_29 { pt3dadd( -81.4437, 219.538, -115.843, 1.32 ) }
    dend_29 { pt3dadd( -81.5898, 219.798, -115.797, 1.68 ) }
    dend_29 { pt3dadd( -82.1501, 220.707, -115.636, 0.24 ) }
    dend_29 { pt3dadd( -82.6993, 221.555, -115.501, 0.12 ) }
    dend_29 { pt3dadd( -83.0293, 222.07, -115.42, 0.12 ) }
    dend_29 { pt3dadd( -83.6391, 223.04, -115.23, 1.8 ) }
    dend_29 { pt3dadd( -83.8824, 223.425, -115.149, 2.04 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_29 { pt3dadd( -84.4953, 224.427, -114.89, 0.12 ) }
    dend_29 { pt3dadd( -84.9678, 225.262, -114.615, 0.12 ) }
    dend_29 { pt3dadd( -85.3236, 225.934, -114.368, 0.72 ) }
    dend_29 { pt3dadd( -85.6863, 226.711, -114.09, 0.12 ) }
    dend_29 { pt3dadd( -86.1181, 227.804, -113.729, 0.12 ) }
    dend_29 { pt3dadd( -86.3424, 228.536, -113.485, 1.32 ) }
    dend_29 { pt3dadd( -86.4936, 229.315, -113.203, 0.12 ) }
    dend_29 { pt3dadd( -86.6419, 230.561, -112.763, 0.12 ) }
    dend_29 { pt3dadd( -86.6613, 230.971, -112.638, 1.32 ) }
    dend_29 { pt3dadd( -86.645, 231.411, -112.533, 1.44 ) }
    dend_29 { pt3dadd( -86.5525, 232.193, -112.372, 0.96 ) }
    dend_29 { pt3dadd( -86.3939, 233.291, -112.204, 0.12 ) }
    dend_29 { pt3dadd( -86.3258, 233.723, -112.159, 0.12 ) }
    dend_29 { pt3dadd( -86.1857, 234.503, -112.129, 0.24 ) }
    dend_29 { pt3dadd( -86.0519, 235.323, -112.161, 0.24 ) }
    dend_29 { pt3dadd( -85.9409, 236.097, -112.248, 0.24 ) }
    dend_29 { pt3dadd( -85.8318, 236.965, -112.409, 1.68 ) }
    dend_29 { pt3dadd( -85.7661, 237.498, -112.533, 1.92 ) }
    dend_29 { pt3dadd( -85.6411, 238.472, -112.763, 0.12 ) }
    dend_29 { pt3dadd( -85.5156, 239.445, -112.992, 0.12 ) }
    dend_29 { pt3dadd( -85.4317, 240.072, -113.151, 0.96 ) }
    dend_29 { pt3dadd( -85.3006, 240.907, -113.377, 0.12 ) }
    dend_29 { pt3dadd( -85.1188, 242.059, -113.693, 0.12 ) }
    dend_29 { pt3dadd( -85.0498, 242.485, -113.803, 1.32 ) }
    dend_29 { pt3dadd( -84.9678, 243.016, -113.924, 1.32 ) }
    dend_29 { pt3dadd( -84.8883, 243.619, -114.063, 0.24 ) }
    dend_29 { pt3dadd( -84.7822, 244.463, -114.257, 0.24 ) }
    dend_29 { pt3dadd( -84.7227, 244.997, -114.377, 0.24 ) }
    dend_29 { pt3dadd( -84.6436, 245.77, -114.542, 0.24 ) }
    dend_29 { pt3dadd( -84.5715, 246.836, -114.796, 1.08 ) }
    dend_29 { pt3dadd( -84.5609, 247.16, -114.89, 0.12 ) }
    dend_29 { pt3dadd( -84.5621, 247.895, -115.118, 0.12 ) }
    dend_29 { pt3dadd( -84.5876, 248.414, -115.305, 0.96 ) }
    dend_29 { pt3dadd( -84.628, 248.836, -115.466, 0.12 ) }
    dend_29 { pt3dadd( -84.8831, 250.566, -116.127, 0.12 ) }
    dend_29 { pt3dadd( -85.0441, 251.494, -116.483, 1.44 ) }
    dend_29 { pt3dadd( -85.13, 251.948, -116.651, 1.8 ) }
    dend_29 { pt3dadd( -85.3243, 252.822, -116.976, 0.12 ) }
    dend_29 { pt3dadd( -85.5229, 253.678, -117.28, 0.12 ) }
    dend_29 { pt3dadd( -85.7348, 254.584, -117.571, 0.12 ) }
    dend_29 { pt3dadd( -85.7997, 254.888, -117.649, 0.84 ) }
    dend_29 { pt3dadd( -85.8777, 255.329, -117.721, 0.84 ) }
    dend_29 { pt3dadd( -85.9943, 256.145, -117.803, 0.12 ) }
    dend_29 { pt3dadd( -86.0678, 257.02, -117.846, 0.12 ) }
    dend_29 { pt3dadd( -86.0882, 257.459, -117.87, 0.12 ) }
    dend_29 { pt3dadd( -86.0979, 258.12, -117.898, 1.08 ) }
    dend_29 { pt3dadd( -86.0956, 259.364, -117.931, 0.12 ) }
    dend_29 { pt3dadd( -86.0717, 260.505, -117.945, 0.12 ) }
    dend_29 { pt3dadd( -86.0278, 261.124, -117.895, 0.12 ) }
    dend_29 { pt3dadd( -85.9557, 261.85, -117.809, 0.48 ) }
    dend_29 { pt3dadd( -85.8929, 262.402, -117.734, 0.12 ) }
    dend_29 { pt3dadd( -85.8324, 262.934, -117.652, 0.12 ) }
    dend_29 { pt3dadd( -85.7437, 263.582, -117.561, 1.8 ) }
    dend_29 { pt3dadd( -85.4965, 265.043, -117.247, 0.12 ) }
    dend_29 { pt3dadd( -85.4052, 265.559, -117.12, 0.12 ) }
    dend_29 { pt3dadd( -85.3131, 265.981, -117.016, 0.36 ) }
    dend_29 { pt3dadd( -85.1672, 266.56, -116.907, 0.12 ) }
    dend_29 { pt3dadd( -84.9705, 267.219, -116.797, 0.12 ) }
    dend_29 { pt3dadd( -84.7729, 267.818, -116.727, 0.12 ) }
    dend_29 { pt3dadd( -84.5719, 268.445, -116.676, 0.12 ) }
    dend_29 { pt3dadd( -84.3369, 269.197, -116.602, 1.08 ) }
    dend_29 { pt3dadd( -84.1584, 269.764, -116.553, 0.12 ) }
    dend_29 { pt3dadd( -83.8855, 270.668, -116.494, 0.12 ) }
    dend_29 { pt3dadd( -83.7468, 271.19, -116.464, 0.12 ) }
    dend_29 { pt3dadd( -83.4642, 272.356, -116.468, 2.04 ) }
    dend_29 { pt3dadd( -83.2618, 273.43, -116.523, 0.12 ) }
    dend_29 { pt3dadd( -83.1084, 274.346, -116.617, 0.12 ) }
    dend_29 { pt3dadd( -82.9928, 275.09, -116.735, 1.8 ) }
    dend_29 { pt3dadd( -82.9554, 275.33, -116.779, 1.8 ) }
    dend_29 { pt3dadd( -82.7581, 276.53, -116.999, 0.12 ) }
    dend_29 { pt3dadd( -82.5294, 277.869, -117.259, 0.12 ) }
    dend_29 { pt3dadd( -82.4208, 278.557, -117.371, 0.12 ) }
    dend_29 { pt3dadd( -82.3251, 279.317, -117.456, 0.72 ) }
    dend_29 { pt3dadd( -82.2208, 280.278, -117.486, 0.12 ) }
    dend_29 { pt3dadd( -82.1296, 281.261, -117.443, 0.12 ) }
    dend_29 { pt3dadd( -82.0954, 281.796, -117.372, 1.44 ) }
    dend_29 { pt3dadd( -82.0855, 282.278, -117.272, 1.44 ) }
    dend_29 { pt3dadd( -82.1216, 282.82, -117.145, 0.72 ) }
    dend_29 { pt3dadd( -82.2393, 283.686, -116.925, 0.12 ) }
    dend_29 { pt3dadd( -82.365, 284.314, -116.775, 0.12 ) }
    dend_29 { pt3dadd( -82.4672, 284.729, -116.659, 0.12 ) }
    dend_29 { pt3dadd( -82.6527, 285.436, -116.443, 0.12 ) }
    dend_29 { pt3dadd( -82.813, 286.116, -116.244, 0.96 ) }
    dend_29 { pt3dadd( -82.8952, 286.51, -116.143, 0.12 ) }
    dend_29 { pt3dadd( -82.9738, 286.875, -116.038, 0.12 ) }
    dend_29 { pt3dadd( -83.0435, 287.195, -115.928, 0.12 ) }
    dend_29 { pt3dadd( -83.1382, 287.62, -115.786, 0.36 ) }
    dend_29 { pt3dadd( -83.2524, 288.169, -115.631, 0.36 ) }
    dend_29 { pt3dadd( -83.2998, 288.475, -115.52, 0.36 ) }
    dend_29 { pt3dadd( -83.4062, 289.44, -115.153, 0.96 ) }
    dend_29 { pt3dadd( -83.4361, 289.801, -115.017, 0.96 ) }
    dend_29 { pt3dadd( -83.4827, 290.396, -114.801, 0.12 ) }
    dend_29 { pt3dadd( -83.5336, 290.915, -114.627, 0.12 ) }
    dend_29 { pt3dadd( -83.6554, 292.074, -114.245, 0.12 ) }
    dend_29 { pt3dadd( -83.6981, 292.602, -114.089, 1.8 ) }
    dend_29 { pt3dadd( -83.7195, 293.127, -113.964, 2.04 ) }
    dend_29 { pt3dadd( -83.7409, 294.745, -113.618, 0.12 ) }
    dend_29 { pt3dadd( -83.7225, 295.276, -113.511, 0.24 ) }
    dend_29 { pt3dadd( -83.7187, 295.339, -113.501, 0.36 ) }
    dend_29 { pt3dadd( -83.6838, 295.79, -113.46, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( -83.6425, 296.126, -113.437, 0.12 ) }
    dend_29 { pt3dadd( -83.4885, 296.992, -113.424, 1.32 ) }
    dend_29 { pt3dadd( -83.2225, 297.938, -113.349, 0.12 ) }
    dend_29 { pt3dadd( -83.0309, 298.574, -113.273, 0.12 ) }
    dend_29 { pt3dadd( -82.9435, 298.881, -113.24, 1.2 ) }
    dend_29 { pt3dadd( -82.7511, 299.52, -113.192, 1.92 ) }
    dend_29 { pt3dadd( -82.5951, 300.009, -113.166, 1.92 ) }
    dend_29 { pt3dadd( -81.9624, 301.945, -113.07, 0.12 ) }
    dend_29 { pt3dadd( -81.3253, 303.919, -112.994, 0.12 ) }
    dend_29 { pt3dadd( -80.7837, 305.577, -112.925, 0.12 ) }
    dend_29 { pt3dadd( -80.1868, 307.385, -112.858, 0.12 ) }
    dend_29 { pt3dadd( -80.1069, 307.626, -112.852, 1.08 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 12/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -94.3783, -68.398, -101.065, 0.96 ) }
    dend_18 { pt3dadd( -94.4654, -69.1952, -105.671, 0.96 ) }
    dend_18 { pt3dadd( -94.5421, -69.4828, -107.463, 0.12 ) }
    dend_18 { pt3dadd( -94.5545, -69.6792, -108.368, 0.12 ) }
    dend_18 { pt3dadd( -94.5648, -69.8414, -109.116, 0.12 ) }
    dend_18 { pt3dadd( -94.5716, -69.9482, -109.608, 1.56 ) }
    dend_18 { pt3dadd( -94.628, -70.837, -113.707, 0.84 ) }
    dend_18 { pt3dadd( -94.6561, -71.0904, -114.631, 1.08 ) }
    dend_18 { pt3dadd( -94.637, -72.1445, -118.332, 0.84 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 21/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -94.3783, -68.398, -101.065, 0.36 ) }
    dend_17 { pt3dadd( -95.3173, -69.15, -101.466, 0.36 ) }
    dend_17 { pt3dadd( -95.5367, -69.3419, -101.565, 0.36 ) }
    dend_17 { pt3dadd( -95.9301, -69.7314, -101.772, 0.36 ) }
    dend_17 { pt3dadd( -96.333, -70.1591, -101.997, 0.36 ) }
    dend_17 { pt3dadd( -96.5239, -70.367, -102.1, 0.96 ) }
    dend_17 { pt3dadd( -96.9299, -70.8285, -102.333, 1.44 ) }
    dend_17 { pt3dadd( -97.0196, -70.9349, -102.387, 1.44 ) }
    dend_17 { pt3dadd( -97.4307, -71.4216, -102.659, 0.36 ) }
    dend_17 { pt3dadd( -97.5632, -71.5705, -102.747, 0.36 ) }
    dend_17 { pt3dadd( -97.9566, -71.9778, -102.992, 0.12 ) }
    dend_17 { pt3dadd( -98.6188, -72.6028, -103.367, 1.68 ) }
    dend_17 { pt3dadd( -98.9284, -72.869, -103.507, 2.52 ) }
    dend_17 { pt3dadd( -99.9082, -73.6645, -103.916, 0.12 ) }
    dend_17 { pt3dadd( -100.385, -74.0261, -104.089, 0.12 ) }
    dend_17 { pt3dadd( -100.889, -74.3944, -104.254, 0.12 ) }
    dend_17 { pt3dadd( -101.169, -74.5892, -104.335, 0.12 ) }
    dend_17 { pt3dadd( -101.786, -74.99, -104.476, 0.84 ) }
    dend_17 { pt3dadd( -102.156, -75.2324, -104.547, 0.12 ) }
    dend_17 { pt3dadd( -102.797, -75.6329, -104.643, 0.12 ) }
    dend_17 { pt3dadd( -103.313, -75.9636, -104.746, 0.72 ) }
    dend_17 { pt3dadd( -103.584, -76.1419, -104.811, 0.12 ) }
    dend_17 { pt3dadd( -103.975, -76.4096, -104.919, 0.12 ) }
    dend_17 { pt3dadd( -104.826, -77.0287, -105.225, 0.12 ) }
    dend_17 { pt3dadd( -105.059, -77.2107, -105.309, 1.44 ) }
    dend_17 { pt3dadd( -105.494, -77.5806, -105.473, 1.92 ) }
    dend_17 { pt3dadd( -105.634, -77.7062, -105.526, 1.92 ) }
    dend_17 { pt3dadd( -105.949, -77.9927, -105.602, 1.92 ) }
    dend_17 { pt3dadd( -106.586, -78.5737, -105.673, 0.12 ) }
    dend_17 { pt3dadd( -107.027, -78.9937, -105.722, 0.12 ) }
    dend_17 { pt3dadd( -107.556, -79.5032, -105.777, 0.12 ) }
    dend_17 { pt3dadd( -107.916, -79.8309, -105.813, 0.12 ) }
    dend_17 { pt3dadd( -108.849, -80.6723, -106.027, 1.56 ) }
    dend_17 { pt3dadd( -109.269, -81.0352, -106.149, 1.56 ) }
    dend_17 { pt3dadd( -109.968, -81.6778, -106.8, 1.56 ) }
    dend_17 { pt3dadd( -110.214, -81.9101, -107.138, 0.12 ) }
    dend_17 { pt3dadd( -110.631, -82.3087, -107.824, 0.12 ) }
    dend_17 { pt3dadd( -111.07, -82.754, -108.623, 0.12 ) }
    dend_17 { pt3dadd( -111.487, -83.2006, -109.453, 2.76 ) }
    dend_17 { pt3dadd( -112.772, -84.6879, -112.205, 0.48 ) }
    dend_17 { pt3dadd( -112.906, -84.8494, -112.483, 0.48 ) }
    dend_17 { pt3dadd( -112.985, -84.955, -112.662, 0.12 ) }
    dend_17 { pt3dadd( -113.157, -85.1915, -113.053, 0.12 ) }
    dend_17 { pt3dadd( -113.402, -85.5294, -113.562, 1.08 ) }
    dend_17 { pt3dadd( -113.83, -86.1204, -114.408, 0.12 ) }
    dend_17 { pt3dadd( -114.146, -86.4868, -114.787, 0.12 ) }
    dend_17 { pt3dadd( -114.58, -86.9847, -115.27, 0.84 ) }
    dend_17 { pt3dadd( -114.892, -87.3327, -115.582, 0.84 ) }
    dend_17 { pt3dadd( -115.149, -87.5826, -115.787, 0.12 ) }
    dend_17 { pt3dadd( -115.442, -87.8508, -115.963, 0.12 ) }
    dend_17 { pt3dadd( -116.04, -88.3591, -116.235, 0.12 ) }
    dend_17 { pt3dadd( -116.314, -88.5982, -116.349, 0.12 ) }
    dend_17 { pt3dadd( -116.538, -88.7996, -116.416, 0.12 ) }
    dend_17 { pt3dadd( -117.067, -89.3005, -116.563, 0.12 ) }
    dend_17 { pt3dadd( -117.643, -89.8344, -116.694, 1.32 ) }
    // Section: dend_13, id: dend_13, parent: dend_3 (entry count 76/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -3.60041, -89.0447, -17.5933, 0.12 ) }
    dend_13 { pt3dadd( -3.14454, -89.7068, -17.6221, 0.12 ) }
    dend_13 { pt3dadd( -2.90154, -90.0404, -17.6386, 0.12 ) }
    dend_13 { pt3dadd( -2.66741, -90.3563, -17.655, 0.96 ) }
    dend_13 { pt3dadd( -2.27744, -90.8298, -17.6115, 0.36 ) }
    dend_13 { pt3dadd( -1.95494, -91.1735, -17.5278, 0.12 ) }
    dend_13 { pt3dadd( -1.56456, -91.5395, -17.3859, 0.12 ) }
    dend_13 { pt3dadd( -1.32059, -91.7598, -17.2827, 0.48 ) }
    dend_13 { pt3dadd( -1.16491, -91.8908, -17.2097, 0.12 ) }
    dend_13 { pt3dadd( -0.246219, -92.5886, -16.7378, 0.12 ) }
    dend_13 { pt3dadd( 0.749645, -93.2671, -16.1683, 2.76 ) }
    dend_13 { pt3dadd( 1.44604, -93.7131, -15.7244, 1.68 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 88/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -3.60041, -89.0447, -17.5933, 0.48 ) }
    dend_4 { pt3dadd( -4.10672, -90.6988, -17.8133, 0.48 ) }
    dend_4 { pt3dadd( -4.3258, -91.8001, -17.9443, 0.48 ) }
    dend_4 { pt3dadd( -4.46876, -92.6786, -18.1266, 0.48 ) }
    dend_4 { pt3dadd( -4.50579, -92.9509, -18.1887, 0.48 ) }
    dend_4 { pt3dadd( -4.57256, -93.5574, -18.3189, 0.48 ) }
    dend_4 { pt3dadd( -4.6307, -94.1085, -18.423, 0.48 ) }
    dend_4 { pt3dadd( -4.7595, -95.2212, -18.6897, 0.48 ) }
    dend_4 { pt3dadd( -4.94864, -96.6104, -19.0715, 2.04 ) }
    dend_4 { pt3dadd( -5.09069, -97.5623, -19.3594, 3.49 ) }
    dend_4 { pt3dadd( -5.19794, -98.1828, -19.5463, 3.85 ) }
    dend_4 { pt3dadd( -5.41168, -99.1956, -19.837, 3.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_4 { pt3dadd( -6.0084, -101.756, -20.5331, 0.48 ) }
    dend_4 { pt3dadd( -6.25445, -102.809, -20.8189, 0.48 ) }
    dend_4 { pt3dadd( -6.49477, -103.919, -21.0982, 0.48 ) }
    dend_4 { pt3dadd( -6.57195, -104.32, -21.212, 0.48 ) }
    dend_4 { pt3dadd( -6.68611, -105.006, -21.4452, 0.48 ) }
    dend_4 { pt3dadd( -6.77164, -105.595, -21.6572, 0.48 ) }
    dend_4 { pt3dadd( -6.85342, -106.285, -21.8833, 1.32 ) }
    dend_4 { pt3dadd( -6.95389, -106.906, -22.1324, 1.44 ) }
    dend_4 { pt3dadd( -7.16663, -107.994, -22.6404, 0.24 ) }
    dend_4 { pt3dadd( -7.33371, -108.826, -23.0202, 0.24 ) }
    dend_4 { pt3dadd( -7.53185, -109.791, -23.4648, 0.24 ) }
    dend_4 { pt3dadd( -7.6695, -110.393, -23.7164, 0.24 ) }
    dend_4 { pt3dadd( -7.89759, -111.415, -24.0713, 1.8 ) }
    dend_4 { pt3dadd( -8.12413, -112.445, -24.3794, 2.76 ) }
    dend_4 { pt3dadd( -8.34951, -113.6, -24.6574, 3.12 ) }
    dend_4 { pt3dadd( -8.54704, -115.001, -24.9302, 1.92 ) }
    dend_4 { pt3dadd( -8.63736, -116.085, -25.1274, 0.24 ) }
    dend_4 { pt3dadd( -8.70105, -117.205, -25.2963, 0.24 ) }
    dend_4 { pt3dadd( -8.70105, -117.205, -25.2963, 0.96 ) }
    dend_4 { pt3dadd( -8.72404, -117.703, -25.3296, 1.32 ) }
    dend_4 { pt3dadd( -8.78106, -118.459, -25.3854, 1.44 ) }
    dend_4 { pt3dadd( -8.85933, -119.465, -25.3929, 0.48 ) }
    dend_4 { pt3dadd( -8.88589, -119.727, -25.4028, 0.24 ) }
    dend_4 { pt3dadd( -8.93847, -120.09, -25.4234, 0.36 ) }
    dend_4 { pt3dadd( -9.09088, -121.053, -25.4864, 0.36 ) }
    dend_4 { pt3dadd( -9.15074, -121.446, -25.5069, 0.36 ) }
    dend_4 { pt3dadd( -9.29154, -122.304, -25.574, 0.36 ) }
    dend_4 { pt3dadd( -9.38372, -122.907, -25.6296, 1.08 ) }
    dend_4 { pt3dadd( -9.48327, -123.657, -25.6986, 2.04 ) }
    dend_4 { pt3dadd( -9.55242, -124.293, -25.7616, 2.64 ) }
    dend_4 { pt3dadd( -9.65588, -125.323, -25.9008, 1.56 ) }
    dend_4 { pt3dadd( -9.78184, -126.289, -26.0694, 0.12 ) }
    dend_4 { pt3dadd( -9.87307, -126.892, -26.1769, 0.12 ) }
    dend_4 { pt3dadd( -10.0047, -127.765, -26.3234, 0.12 ) }
    dend_4 { pt3dadd( -10.0834, -128.248, -26.4195, 0.12 ) }
    dend_4 { pt3dadd( -10.221, -129.019, -26.6269, 1.32 ) }
    dend_4 { pt3dadd( -10.4382, -130.133, -26.9803, 2.4 ) }
    dend_4 { pt3dadd( -10.55, -130.794, -27.1705, 3.25 ) }
    dend_4 { pt3dadd( -10.6581, -131.504, -27.3685, 3.37 ) }
    dend_4 { pt3dadd( -10.7857, -132.533, -27.6346, 2.28 ) }
    dend_4 { pt3dadd( -10.9235, -134.079, -27.9764, 0.48 ) }
    dend_4 { pt3dadd( -10.9428, -134.478, -28.048, 0.48 ) }
    dend_4 { pt3dadd( -10.9761, -135.52, -28.2119, 0.48 ) }
    dend_4 { pt3dadd( -10.9903, -136.548, -28.3748, 0.6 ) }
    dend_4 { pt3dadd( -10.978, -137.299, -28.4738, 0.6 ) }
    dend_4 { pt3dadd( -10.9519, -137.917, -28.5204, 0.48 ) }
    dend_4 { pt3dadd( -10.9449, -138.168, -28.5421, 0.48 ) }
    dend_4 { pt3dadd( -10.9549, -138.845, -28.6522, 0.36 ) }
    dend_4 { pt3dadd( -10.9941, -139.457, -28.7993, 0.24 ) }
    dend_4 { pt3dadd( -11.0336, -139.828, -28.9069, 0.24 ) }
    dend_4 { pt3dadd( -11.123, -140.522, -29.1287, 0.24 ) }
    dend_4 { pt3dadd( -11.2592, -141.815, -29.5034, 0.36 ) }
    dend_4 { pt3dadd( -11.3158, -142.545, -29.6954, 0.36 ) }
    dend_4 { pt3dadd( -11.3439, -143.035, -29.809, 1.56 ) }
    dend_4 { pt3dadd( -11.4142, -144.221, -30.0402, 2.88 ) }
    dend_4 { pt3dadd( -11.4518, -144.955, -30.1694, 2.88 ) }
    dend_4 { pt3dadd( -11.5122, -146.46, -30.4287, 0.24 ) }
    dend_4 { pt3dadd( -11.5314, -146.975, -30.5011, 0.12 ) }
    dend_4 { pt3dadd( -11.5665, -147.725, -30.5985, 0.12 ) }
    dend_4 { pt3dadd( -11.6087, -148.281, -30.6832, 0.12 ) }
    dend_4 { pt3dadd( -11.6726, -149.045, -30.811, 1.8 ) }
    dend_4 { pt3dadd( -11.7626, -149.991, -30.9806, 2.64 ) }
    dend_4 { pt3dadd( -11.8483, -150.864, -31.1423, 2.64 ) }
    dend_4 { pt3dadd( -11.9697, -152.242, -31.3868, 0.36 ) }
    dend_4 { pt3dadd( -12.0239, -153.175, -31.5379, 0.12 ) }
    dend_4 { pt3dadd( -12.0533, -154.071, -31.6868, 0.12 ) }
    dend_4 { pt3dadd( -12.0696, -154.711, -31.7985, 0.36 ) }
    dend_4 { pt3dadd( -12.1049, -155.692, -31.9816, 0.36 ) }
    dend_4 { pt3dadd( -12.1162, -155.969, -32.0441, 0.84 ) }
    dend_4 { pt3dadd( -12.1538, -156.797, -32.3102, 1.2 ) }
    dend_4 { pt3dadd( -12.1688, -157.761, -32.5897, 0.48 ) }
    dend_4 { pt3dadd( -12.1708, -158.333, -32.7597, 0.12 ) }
    dend_4 { pt3dadd( -12.154, -158.973, -32.9519, 0.12 ) }
    dend_4 { pt3dadd( -12.0616, -160.09, -33.2183, 0.12 ) }
    dend_4 { pt3dadd( -11.9186, -161.169, -33.4136, 0.12 ) }
    dend_4 { pt3dadd( -11.7249, -162.308, -33.5585, 1.68 ) }
    dend_4 { pt3dadd( -11.5371, -163.292, -33.659, 2.64 ) }
    dend_4 { pt3dadd( -11.4335, -163.8, -33.7088, 3.0 ) }
    dend_4 { pt3dadd( -11.1561, -165.271, -33.9359, 0.12 ) }
    dend_4 { pt3dadd( -11.0997, -165.658, -34.0132, 0.12 ) }
    dend_4 { pt3dadd( -11.0305, -166.382, -34.179, 0.12 ) }
    dend_4 { pt3dadd( -11.0098, -167.127, -34.4304, 0.48 ) }
    dend_4 { pt3dadd( -11.0209, -167.601, -34.6154, 0.48 ) }
    dend_4 { pt3dadd( -11.0639, -168.567, -35.0667, 0.48 ) }
    dend_4 { pt3dadd( -11.0869, -169.223, -35.4164, 0.48 ) }
    dend_4 { pt3dadd( -11.0654, -169.621, -35.631, 0.48 ) }
    dend_4 { pt3dadd( -11.024, -169.966, -35.8232, 0.48 ) }
    dend_4 { pt3dadd( -10.961, -170.305, -35.9993, 0.48 ) }
    dend_4 { pt3dadd( -10.7933, -171.154, -36.4148, 1.2 ) }
    dend_4 { pt3dadd( -10.641, -171.858, -36.7284, 1.8 ) }
    dend_4 { pt3dadd( -10.3487, -173.249, -37.3462, 0.6 ) }
    dend_4 { pt3dadd( -10.1917, -174.029, -37.6944, 0.12 ) }
    dend_4 { pt3dadd( -10.0878, -174.654, -37.9452, 0.12 ) }
    dend_4 { pt3dadd( -10.0141, -175.341, -38.1688, 0.12 ) }
    dend_4 { pt3dadd( -10.0004, -175.71, -38.2496, 0.24 ) }
    dend_4 { pt3dadd( -10.0076, -176.214, -38.327, 0.24 ) }
    dend_4 { pt3dadd( -10.0379, -176.755, -38.365, 1.32 ) }
    dend_4 { pt3dadd( -10.0935, -177.613, -38.3895, 1.8 ) }
    dend_4 { pt3dadd( -10.1537, -178.367, -38.4142, 2.88 ) }
    dend_4 { pt3dadd( -10.1945, -179.122, -38.447, 3.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_4 { pt3dadd( -10.2459, -180.05, -38.4831, 2.64 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 1/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -10.2459, -180.05, -38.4831, 1.08 ) }
    dend_12 { pt3dadd( -10.3575, -180.713, -41.6898, 1.08 ) }
    dend_12 { pt3dadd( -10.3693, -181.316, -44.3133, 0.48 ) }
    dend_12 { pt3dadd( -10.3543, -181.571, -45.293, 1.32 ) }
    dend_12 { pt3dadd( -10.3069, -181.893, -46.478, 1.08 ) }
    dend_12 { pt3dadd( -10.2696, -182.056, -47.0614, 1.44 ) }
    dend_12 { pt3dadd( -10.091, -182.571, -48.861, 1.2 ) }
    dend_12 { pt3dadd( -9.85188, -182.953, -49.9846, 1.2 ) }
    dend_12 { pt3dadd( -9.72101, -183.128, -50.4356, 1.56 ) }
    dend_12 { pt3dadd( -9.39094, -183.568, -51.6616, 1.32 ) }
    dend_12 { pt3dadd( -9.20212, -183.829, -52.4338, 0.72 ) }
    dend_12 { pt3dadd( -8.98808, -184.172, -53.3898, 0.72 ) }
    dend_12 { pt3dadd( -8.74835, -184.657, -54.5813, 0.72 ) }
    dend_12 { pt3dadd( -8.63833, -184.935, -55.3212, 1.92 ) }
    dend_12 { pt3dadd( -8.45973, -186.053, -59.0156, 0.84 ) }
    dend_12 { pt3dadd( -8.478, -186.507, -60.6273, 0.6 ) }
    dend_12 { pt3dadd( -8.52947, -186.752, -61.5375, 1.44 ) }
    dend_12 { pt3dadd( -8.57454, -186.876, -62.0116, 1.44 ) }
    dend_12 { pt3dadd( -9.17688, -187.946, -66.4383, 2.52 ) }
    dend_12 { pt3dadd( -9.93946, -188.898, -70.8656, 0.96 ) }
    dend_12 { pt3dadd( -10.0098, -188.966, -71.2041, 0.96 ) }
    dend_12 { pt3dadd( -10.0917, -189.031, -71.5479, 0.96 ) }
    dend_12 { pt3dadd( -10.1888, -189.1, -71.9285, 0.96 ) }
    dend_12 { pt3dadd( -10.7683, -189.497, -74.058, 1.56 ) }
    dend_12 { pt3dadd( -11.2545, -189.848, -75.7344, 1.56 ) }
    dend_12 { pt3dadd( -11.7909, -190.299, -77.7623, 1.2 ) }
    dend_12 { pt3dadd( -12.1025, -190.585, -79.0756, 1.92 ) }
    dend_12 { pt3dadd( -13.0203, -191.524, -83.6348, 1.8 ) }
    dend_12 { pt3dadd( -13.6921, -192.303, -87.5778, 1.32 ) }
    dend_12 { pt3dadd( -13.9951, -192.766, -89.9724, 1.8 ) }
    dend_12 { pt3dadd( -14.0461, -192.884, -90.6312, 0.96 ) }
    dend_12 { pt3dadd( -14.0581, -193.023, -91.5241, 0.96 ) }
    dend_12 { pt3dadd( -13.8846, -193.291, -93.7737, 0.84 ) }
    dend_12 { pt3dadd( -13.8115, -193.311, -94.0794, 0.84 ) }
    dend_12 { pt3dadd( -13.2024, -193.343, -95.6961, 0.12 ) }
    dend_12 { pt3dadd( -12.8392, -193.336, -96.5682, 0.12 ) }
    dend_12 { pt3dadd( -12.5087, -193.341, -97.4219, 1.08 ) }
    dend_12 { pt3dadd( -11.8716, -193.435, -99.0674, 0.36 ) }
    dend_12 { pt3dadd( -11.5305, -193.573, -99.8944, 1.44 ) }
    dend_12 { pt3dadd( -11.3397, -193.742, -100.422, 0.12 ) }
    dend_12 { pt3dadd( -11.2888, -193.838, -100.581, 0.12 ) }
    dend_12 { pt3dadd( -11.2052, -194.179, -100.956, 0.12 ) }
    dend_12 { pt3dadd( -11.1514, -194.651, -101.332, 1.2 ) }
    dend_12 { pt3dadd( -11.1558, -194.903, -101.503, 1.2 ) }
    dend_12 { pt3dadd( -11.2835, -196.039, -102.359, 0.12 ) }
    dend_12 { pt3dadd( -11.3148, -196.275, -102.547, 0.12 ) }
    dend_12 { pt3dadd( -11.3766, -196.656, -102.859, 0.12 ) }
    dend_12 { pt3dadd( -11.5049, -197.319, -103.387, 1.08 ) }
    dend_12 { pt3dadd( -11.6975, -198.157, -104.1, 1.68 ) }
    dend_12 { pt3dadd( -11.915, -199.06, -104.855, 0.12 ) }
    dend_12 { pt3dadd( -11.9959, -199.379, -105.098, 0.12 ) }
    dend_12 { pt3dadd( -12.0387, -199.563, -105.229, 0.12 ) }
    dend_12 { pt3dadd( -12.1631, -200.144, -105.651, 1.08 ) }
    dend_12 { pt3dadd( -12.3757, -201.547, -106.583, 0.12 ) }
    dend_12 { pt3dadd( -12.4099, -201.891, -106.794, 0.12 ) }
    dend_12 { pt3dadd( -12.44, -202.357, -107.062, 0.12 ) }
    dend_12 { pt3dadd( -12.4707, -203.159, -107.493, 1.68 ) }
    dend_12 { pt3dadd( -12.4925, -204.232, -108.058, 0.12 ) }
    dend_12 { pt3dadd( -12.4891, -205.371, -108.62, 0.12 ) }
    dend_12 { pt3dadd( -12.4761, -205.952, -108.844, 0.12 ) }
    dend_12 { pt3dadd( -12.4634, -206.335, -109.0, 0.12 ) }
    dend_12 { pt3dadd( -12.4268, -206.984, -109.276, 1.56 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -10.2459, -180.05, -38.4831, 0.12 ) }
    dend_5 { pt3dadd( -10.6501, -181.967, -39.0149, 0.12 ) }
    dend_5 { pt3dadd( -10.7884, -182.678, -39.1906, 0.24 ) }
    dend_5 { pt3dadd( -10.9934, -183.712, -39.5192, 0.24 ) }
    dend_5 { pt3dadd( -11.1764, -184.671, -39.8487, 0.24 ) }
    dend_5 { pt3dadd( -11.2282, -184.981, -39.9552, 0.72 ) }
    dend_5 { pt3dadd( -11.2948, -185.508, -40.1279, 1.08 ) }
    dend_5 { pt3dadd( -11.3184, -186.017, -40.2741, 1.08 ) }
    dend_5 { pt3dadd( -11.3306, -187.335, -40.7177, 0.24 ) }
    dend_5 { pt3dadd( -11.3133, -187.815, -40.939, 0.24 ) }
    dend_5 { pt3dadd( -11.2605, -188.541, -41.3194, 0.36 ) }
    dend_5 { pt3dadd( -11.1803, -189.381, -41.8013, 0.36 ) }
    dend_5 { pt3dadd( -11.077, -190.304, -42.3903, 0.36 ) }
    dend_5 { pt3dadd( -10.9585, -191.515, -43.1677, 1.8 ) }
    dend_5 { pt3dadd( -10.8932, -192.489, -43.7492, 2.76 ) }
    dend_5 { pt3dadd( -10.8976, -193.041, -44.1386, 2.76 ) }
    dend_5 { pt3dadd( -10.9677, -194.632, -45.3332, 0.6 ) }
    dend_5 { pt3dadd( -10.9929, -195.232, -45.7815, 0.12 ) }
    dend_5 { pt3dadd( -10.9717, -196.084, -46.3531, 0.12 ) }
    dend_5 { pt3dadd( -10.8869, -196.867, -46.81, 0.48 ) }
    dend_5 { pt3dadd( -10.4777, -199.219, -48.1069, 0.48 ) }
    dend_5 { pt3dadd( -10.2589, -200.183, -48.6179, 2.04 ) }
    dend_5 { pt3dadd( -10.0133, -201.036, -49.0228, 2.28 ) }
    dend_5 { pt3dadd( -9.49468, -202.652, -49.7004, 0.48 ) }
    dend_5 { pt3dadd( -9.16732, -203.603, -50.0496, 0.12 ) }
    dend_5 { pt3dadd( -9.03226, -203.993, -50.1608, 0.12 ) }
    dend_5 { pt3dadd( -8.9153, -204.387, -50.2363, 0.12 ) }
    dend_5 { pt3dadd( -8.84363, -204.798, -50.3349, 0.12 ) }
    dend_5 { pt3dadd( -8.75983, -205.748, -50.5537, 0.12 ) }
    dend_5 { pt3dadd( -8.70502, -206.784, -50.828, 0.12 ) }
    dend_5 { pt3dadd( -8.67922, -207.19, -50.9617, 0.12 ) }
    dend_5 { pt3dadd( -8.60024, -208.471, -51.4561, 1.44 ) }
    dend_5 { pt3dadd( -8.53205, -209.455, -51.8728, 2.52 ) }
    dend_5 { pt3dadd( -8.4502, -210.331, -52.2742, 2.4 ) }
    dend_5 { pt3dadd( -8.2895, -211.719, -52.9641, 1.2 ) }
    dend_5 { pt3dadd( -8.18248, -212.882, -53.552, 0.12 ) }
    dend_5 { pt3dadd( -8.14288, -213.48, -53.8435, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_5 { pt3dadd( -8.12646, -213.972, -54.0656, 0.12 ) }
    dend_5 { pt3dadd( -8.12738, -214.413, -54.2743, 0.12 ) }
    dend_5 { pt3dadd( -8.15579, -215.236, -54.6526, 1.2 ) }
    dend_5 { pt3dadd( -8.2036, -216.363, -55.0936, 2.16 ) }
    dend_5 { pt3dadd( -8.22864, -217.365, -55.4458, 1.08 ) }
    dend_5 { pt3dadd( -8.23645, -218.582, -55.9236, 0.36 ) }
    dend_5 { pt3dadd( -8.23497, -219.29, -56.2323, 0.12 ) }
    dend_5 { pt3dadd( -8.24363, -219.776, -56.4695, 0.12 ) }
    dend_5 { pt3dadd( -8.24739, -220.148, -56.6563, 0.48 ) }
    dend_5 { pt3dadd( -8.25059, -220.87, -57.0228, 0.6 ) }
    dend_5 { pt3dadd( -8.27618, -222.138, -57.6326, 0.48 ) }
    dend_5 { pt3dadd( -8.32583, -222.974, -57.9943, 0.36 ) }
    dend_5 { pt3dadd( -8.44142, -223.945, -58.3695, 0.72 ) }
    dend_5 { pt3dadd( -8.57982, -224.748, -58.6583, 1.8 ) }
    dend_5 { pt3dadd( -8.74556, -225.551, -58.9133, 2.52 ) }
    dend_5 { pt3dadd( -8.91255, -226.325, -59.0931, 2.76 ) }
    dend_5 { pt3dadd( -9.27857, -228.015, -59.2887, 0.6 ) }
    dend_5 { pt3dadd( -9.40791, -228.617, -59.3168, 0.24 ) }
    dend_5 { pt3dadd( -9.52716, -229.248, -59.3146, 0.36 ) }
    dend_5 { pt3dadd( -9.65326, -229.916, -59.3063, 0.36 ) }
    dend_5 { pt3dadd( -9.79841, -230.776, -59.2657, 0.36 ) }
    dend_5 { pt3dadd( -9.92126, -231.579, -59.2218, 0.36 ) }
    dend_5 { pt3dadd( -9.96772, -231.959, -59.2056, 1.08 ) }
    dend_5 { pt3dadd( -10.0779, -232.765, -59.1989, 1.68 ) }
    dend_5 { pt3dadd( -10.1468, -233.178, -59.2062, 1.92 ) }
    dend_5 { pt3dadd( -10.2805, -233.854, -59.2464, 2.04 ) }
    dend_5 { pt3dadd( -10.4768, -234.832, -59.3473, 1.32 ) }
    dend_5 { pt3dadd( -10.6043, -235.566, -59.4276, 0.36 ) }
    dend_5 { pt3dadd( -10.6902, -236.235, -59.4948, 0.36 ) }
    dend_5 { pt3dadd( -10.7604, -237.032, -59.5627, 0.36 ) }
    dend_5 { pt3dadd( -10.7819, -237.438, -59.5878, 0.6 ) }
    dend_5 { pt3dadd( -10.8057, -237.985, -59.6044, 0.72 ) }
    dend_5 { pt3dadd( -10.8318, -238.527, -59.6011, 0.72 ) }
    dend_5 { pt3dadd( -10.8834, -239.223, -59.569, 0.36 ) }
    dend_5 { pt3dadd( -10.9661, -240.02, -59.5196, 0.36 ) }
    dend_5 { pt3dadd( -11.0725, -240.836, -59.4597, 0.36 ) }
    dend_5 { pt3dadd( -11.1356, -241.397, -59.4087, 0.6 ) }
    dend_5 { pt3dadd( -11.1869, -242.004, -59.3494, 0.48 ) }
    dend_5 { pt3dadd( -11.2448, -243.067, -59.2445, 0.36 ) }
    dend_5 { pt3dadd( -11.243, -243.495, -59.2075, 0.36 ) }
    dend_5 { pt3dadd( -11.2204, -244.089, -59.1535, 0.36 ) }
    dend_5 { pt3dadd( -11.1109, -245.273, -59.046, 1.68 ) }
    dend_5 { pt3dadd( -10.9624, -246.206, -58.9674, 3.12 ) }
    dend_5 { pt3dadd( -10.8726, -246.601, -58.9379, 3.37 ) }
    dend_5 { pt3dadd( -10.5424, -247.699, -58.8938, 2.16 ) }
    // Section: dend_11, id: dend_11, parent: dend_5 (entry count 45/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -10.5424, -247.699, -58.8938, 0.24 ) }
    dend_11 { pt3dadd( -11.357, -249.019, -59.3396, 0.24 ) }
    dend_11 { pt3dadd( -11.6755, -249.52, -59.4339, 0.24 ) }
    dend_11 { pt3dadd( -11.9089, -249.872, -59.4711, 0.24 ) }
    dend_11 { pt3dadd( -12.1304, -250.222, -59.4694, 0.24 ) }
    dend_11 { pt3dadd( -12.4035, -250.684, -59.4366, 0.24 ) }
    dend_11 { pt3dadd( -12.6961, -251.207, -59.381, 0.24 ) }
    dend_11 { pt3dadd( -13.0277, -251.857, -59.2226, 0.96 ) }
    dend_11 { pt3dadd( -13.1981, -252.186, -59.1397, 1.32 ) }
    dend_11 { pt3dadd( -13.4798, -252.709, -58.9898, 0.72 ) }
    dend_11 { pt3dadd( -13.7511, -253.169, -58.8455, 0.12 ) }
    dend_11 { pt3dadd( -14.0674, -253.654, -58.6873, 0.12 ) }
    dend_11 { pt3dadd( -14.3631, -254.148, -58.537, 0.12 ) }
    dend_11 { pt3dadd( -14.5555, -254.493, -58.4553, 0.12 ) }
    dend_11 { pt3dadd( -14.9661, -255.356, -58.2972, 1.44 ) }
    dend_11 { pt3dadd( -15.1731, -255.851, -58.2435, 1.68 ) }
    dend_11 { pt3dadd( -15.4247, -256.541, -58.1881, 1.08 ) }
    dend_11 { pt3dadd( -15.6232, -257.179, -58.1035, 0.48 ) }
    dend_11 { pt3dadd( -15.7198, -257.593, -58.0083, 0.12 ) }
    dend_11 { pt3dadd( -15.8847, -258.421, -57.8214, 0.12 ) }
    dend_11 { pt3dadd( -16.0273, -259.218, -57.546, 0.48 ) }
    dend_11 { pt3dadd( -16.0769, -259.49, -57.4268, 0.48 ) }
    dend_11 { pt3dadd( -16.2666, -260.433, -56.8914, 0.48 ) }
    dend_11 { pt3dadd( -16.5021, -261.273, -56.3503, 0.96 ) }
    dend_11 { pt3dadd( -16.6865, -261.867, -55.9361, 0.96 ) }
    dend_11 { pt3dadd( -17.0779, -263.023, -55.1233, 0.12 ) }
    dend_11 { pt3dadd( -17.1993, -263.403, -54.8518, 0.12 ) }
    dend_11 { pt3dadd( -17.4157, -264.113, -54.3812, 1.2 ) }
    dend_11 { pt3dadd( -17.6108, -264.766, -53.996, 1.68 ) }
    dend_11 { pt3dadd( -17.732, -265.151, -53.7705, 2.16 ) }
    dend_11 { pt3dadd( -17.849, -265.53, -53.5522, 2.16 ) }
    dend_11 { pt3dadd( -18.3064, -267.006, -52.896, 0.36 ) }
    dend_11 { pt3dadd( -18.4563, -267.451, -52.6582, 0.36 ) }
    dend_11 { pt3dadd( -18.5864, -267.779, -52.4648, 1.08 ) }
    dend_11 { pt3dadd( -18.8441, -268.361, -52.0908, 1.32 ) }
    dend_11 { pt3dadd( -19.003, -268.68, -51.8815, 1.2 ) }
    dend_11 { pt3dadd( -19.368, -269.316, -51.4593, 1.2 ) }
    dend_11 { pt3dadd( -20.5184, -270.932, -50.2908, 0.12 ) }
    dend_11 { pt3dadd( -20.7862, -271.234, -50.0415, 0.24 ) }
    dend_11 { pt3dadd( -21.1204, -271.552, -49.7639, 0.24 ) }
    dend_11 { pt3dadd( -21.3147, -271.727, -49.6213, 0.36 ) }
    dend_11 { pt3dadd( -21.7514, -272.098, -49.297, 0.36 ) }
    dend_11 { pt3dadd( -22.3498, -272.588, -48.8536, 0.12 ) }
    dend_11 { pt3dadd( -22.7788, -272.891, -48.6949, 0.12 ) }
    dend_11 { pt3dadd( -23.1532, -273.139, -48.529, 0.96 ) }
    dend_11 { pt3dadd( -23.6748, -273.447, -48.2525, 1.44 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 91/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -10.5424, -247.699, -58.8938, 0.12 ) }
    dend_6 { pt3dadd( -10.0565, -248.734, -59.2646, 0.12 ) }
    dend_6 { pt3dadd( -9.80815, -249.248, -59.3925, 0.12 ) }
    dend_6 { pt3dadd( -9.37736, -250.145, -59.5837, 0.84 ) }
    dend_6 { pt3dadd( -8.86823, -251.259, -59.7821, 0.84 ) }
    dend_6 { pt3dadd( -8.52902, -252.028, -59.9132, 0.12 ) }
    dend_6 { pt3dadd( -8.22163, -252.777, -60.0315, 0.12 ) }
    dend_6 { pt3dadd( -7.88823, -253.696, -60.1566, 0.48 ) }
    dend_6 { pt3dadd( -7.68574, -254.372, -60.2259, 0.6 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_6 { pt3dadd( -7.49324, -255.216, -60.2762, 0.24 ) }
    dend_6 { pt3dadd( -7.40902, -255.72, -60.2874, 0.12 ) }
    dend_6 { pt3dadd( -7.32605, -256.557, -60.3517, 0.24 ) }
    dend_6 { pt3dadd( -7.28679, -257.402, -60.4797, 0.24 ) }
    dend_6 { pt3dadd( -7.27968, -258.229, -60.6465, 0.24 ) }
    dend_6 { pt3dadd( -7.28969, -258.649, -60.7274, 0.84 ) }
    dend_6 { pt3dadd( -7.3402, -259.638, -60.9531, 1.32 ) }
    dend_6 { pt3dadd( -7.38367, -260.436, -61.1661, 1.8 ) }
    dend_6 { pt3dadd( -7.44313, -261.712, -61.5568, 2.4 ) }
    dend_6 { pt3dadd( -7.49359, -262.523, -61.8205, 1.92 ) }
    dend_6 { pt3dadd( -7.61113, -263.72, -62.2481, 0.48 ) }
    dend_6 { pt3dadd( -7.70746, -264.474, -62.5321, 0.12 ) }
    dend_6 { pt3dadd( -7.82322, -265.221, -62.8112, 0.12 ) }
    dend_6 { pt3dadd( -7.88302, -265.644, -62.9536, 0.12 ) }
    dend_6 { pt3dadd( -7.95677, -266.497, -63.2482, 0.6 ) }
    dend_6 { pt3dadd( -7.9768, -267.303, -63.5512, 0.24 ) }
    dend_6 { pt3dadd( -7.95619, -268.005, -63.8052, 0.24 ) }
    dend_6 { pt3dadd( -7.92782, -268.555, -63.9731, 0.96 ) }
    dend_6 { pt3dadd( -7.83892, -269.848, -64.3224, 1.8 ) }
    dend_6 { pt3dadd( -7.68536, -271.232, -64.6592, 0.96 ) }
    dend_6 { pt3dadd( -7.49648, -272.266, -64.8737, 0.36 ) }
    dend_6 { pt3dadd( -7.27587, -273.224, -65.0331, 0.36 ) }
    dend_6 { pt3dadd( -6.96097, -274.449, -65.2103, 0.36 ) }
    dend_6 { pt3dadd( -6.74685, -275.274, -65.2765, 0.36 ) }
    dend_6 { pt3dadd( -6.61944, -275.83, -65.2813, 0.36 ) }
    dend_6 { pt3dadd( -6.3995, -276.911, -65.2389, 1.92 ) }
    dend_6 { pt3dadd( -6.20672, -277.959, -65.1697, 3.12 ) }
    dend_6 { pt3dadd( -6.07208, -278.842, -65.1116, 3.12 ) }
    dend_6 { pt3dadd( -5.84576, -280.834, -64.8709, 0.36 ) }
    dend_6 { pt3dadd( -5.73078, -282.506, -64.5558, 0.36 ) }
    dend_6 { pt3dadd( -5.71471, -283.259, -64.3746, 0.96 ) }
    dend_6 { pt3dadd( -5.73463, -284.093, -64.1253, 1.56 ) }
    dend_6 { pt3dadd( -5.78594, -285.04, -63.7898, 1.68 ) }
    dend_6 { pt3dadd( -5.90516, -286.743, -63.137, 0.84 ) }
    dend_6 { pt3dadd( -5.9751, -287.6, -62.7269, 0.36 ) }
    dend_6 { pt3dadd( -6.00425, -288.08, -62.4504, 0.36 ) }
    dend_6 { pt3dadd( -6.02399, -288.69, -62.0891, 0.6 ) }
    dend_6 { pt3dadd( -6.01894, -289.315, -61.7489, 0.36 ) }
    dend_6 { pt3dadd( -5.95301, -290.232, -61.3733, 0.36 ) }
    dend_6 { pt3dadd( -5.72113, -291.726, -61.0256, 0.12 ) }
    dend_6 { pt3dadd( -5.54682, -292.454, -60.9183, 0.12 ) }
    dend_6 { pt3dadd( -5.27887, -293.26, -60.8335, 1.32 ) }
    dend_6 { pt3dadd( -4.92834, -294.049, -60.7939, 1.8 ) }
    dend_6 { pt3dadd( -4.312, -295.214, -60.8101, 1.68 ) }
    dend_6 { pt3dadd( -3.89574, -295.901, -60.8672, 1.32 ) }
    dend_6 { pt3dadd( -3.50609, -296.48, -60.936, 0.36 ) }
    dend_6 { pt3dadd( -3.27109, -296.802, -60.9597, 0.36 ) }
    dend_6 { pt3dadd( -2.70759, -297.498, -60.9447, 0.48 ) }
    dend_6 { pt3dadd( -2.14263, -298.134, -60.8371, 0.12 ) }
    dend_6 { pt3dadd( -1.43814, -298.931, -60.5877, 0.12 ) }
    dend_6 { pt3dadd( -0.938628, -299.517, -60.3433, 1.08 ) }
    dend_6 { pt3dadd( -0.739272, -299.75, -60.2335, 1.32 ) }
    dend_6 { pt3dadd( -0.181049, -300.411, -59.8284, 0.84 ) }
    dend_6 { pt3dadd( 0.259519, -300.943, -59.4281, 0.12 ) }
    dend_6 { pt3dadd( 0.901667, -301.769, -58.7478, 0.12 ) }
    dend_6 { pt3dadd( 1.50407, -302.658, -57.9745, 1.2 ) }
    dend_6 { pt3dadd( 1.76078, -303.072, -57.6284, 1.68 ) }
    dend_6 { pt3dadd( 2.5066, -304.336, -56.5423, 0.6 ) }
    dend_6 { pt3dadd( 2.77139, -304.807, -56.1402, 0.48 ) }
    dend_6 { pt3dadd( 2.99915, -305.19, -55.7874, 0.48 ) }
    dend_6 { pt3dadd( 3.37885, -305.748, -55.2167, 0.12 ) }
    dend_6 { pt3dadd( 3.88414, -306.401, -54.6123, 0.12 ) }
    dend_6 { pt3dadd( 4.23403, -306.799, -54.3248, 0.48 ) }
    dend_6 { pt3dadd( 4.65363, -307.223, -54.1419, 0.6 ) }
    dend_6 { pt3dadd( 5.23616, -307.868, -54.0151, 0.36 ) }
    dend_6 { pt3dadd( 5.55352, -308.263, -53.9667, 0.36 ) }
    dend_6 { pt3dadd( 6.16726, -309.258, -53.9264, 1.32 ) }
    dend_6 { pt3dadd( 6.64623, -310.32, -53.9154, 2.4 ) }
    dend_6 { pt3dadd( 6.7874, -310.735, -53.9217, 2.52 ) }
    dend_6 { pt3dadd( 7.19129, -312.219, -53.9385, 1.2 ) }
    dend_6 { pt3dadd( 7.47534, -313.314, -53.9785, 0.12 ) }
    dend_6 { pt3dadd( 7.73648, -314.232, -54.022, 0.12 ) }
    dend_6 { pt3dadd( 7.86223, -314.627, -54.0372, 0.12 ) }
    dend_6 { pt3dadd( 8.01244, -315.05, -54.072, 0.48 ) }
    dend_6 { pt3dadd( 8.60771, -316.539, -54.229, 0.48 ) }
    dend_6 { pt3dadd( 9.002, -317.485, -54.382, 0.48 ) }
    dend_6 { pt3dadd( 9.42507, -318.595, -54.6414, 0.48 ) }
    dend_6 { pt3dadd( 9.61291, -319.178, -54.7882, 0.12 ) }
    dend_6 { pt3dadd( 9.70227, -319.726, -54.9396, 0.12 ) }
    dend_6 { pt3dadd( 9.69516, -320.413, -55.1349, 1.44 ) }
    dend_6 { pt3dadd( 9.48489, -321.509, -55.4556, 2.52 ) }
    dend_6 { pt3dadd( 9.24415, -322.346, -55.6961, 2.64 ) }
    dend_6 { pt3dadd( 8.95447, -323.203, -55.9708, 2.4 ) }
    dend_6 { pt3dadd( 8.44641, -324.876, -56.5274, 0.6 ) }
    dend_6 { pt3dadd( 8.20926, -325.699, -56.8055, 0.36 ) }
    dend_6 { pt3dadd( 7.90002, -326.836, -57.1827, 0.48 ) }
    dend_6 { pt3dadd( 7.70744, -327.692, -57.4441, 0.48 ) }
    dend_6 { pt3dadd( 7.52186, -328.734, -57.7516, 0.36 ) }
    dend_6 { pt3dadd( 7.32831, -330.364, -58.1915, 0.36 ) }
    dend_6 { pt3dadd( 7.30267, -330.78, -58.2869, 1.32 ) }
    dend_6 { pt3dadd( 7.27003, -331.532, -58.4374, 1.68 ) }
    dend_6 { pt3dadd( 7.20003, -332.375, -58.5651, 1.92 ) }
    dend_6 { pt3dadd( 7.14811, -332.797, -58.6103, 2.04 ) }
    dend_6 { pt3dadd( 6.89854, -334.363, -58.7111, 0.36 ) }
    dend_6 { pt3dadd( 6.82095, -334.783, -58.7374, 0.36 ) }
    dend_6 { pt3dadd( 6.72958, -335.402, -58.7705, 0.36 ) }
    dend_6 { pt3dadd( 6.60983, -336.378, -58.9876, 0.36 ) }
    dend_6 { pt3dadd( 6.52092, -337.066, -59.1602, 0.36 ) }
    dend_6 { pt3dadd( 6.37253, -338.279, -59.5034, 0.36 ) }
    dend_6 { pt3dadd( 6.29096, -339.073, -59.7713, 1.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_6 { pt3dadd( 6.22311, -340.004, -60.1451, 2.64 ) }
    dend_6 { pt3dadd( 6.18039, -343.147, -61.7349, 2.64 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 2/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 6.18039, -343.147, -61.7349, 0.12 ) }
    dend_10 { pt3dadd( 6.80164, -344.676, -62.1071, 0.12 ) }
    dend_10 { pt3dadd( 6.92676, -345.016, -62.2219, 0.12 ) }
    dend_10 { pt3dadd( 7.0089, -345.247, -62.3084, 0.12 ) }
    dend_10 { pt3dadd( 7.19313, -345.803, -62.5636, 0.6 ) }
    dend_10 { pt3dadd( 7.3086, -346.278, -62.8324, 0.12 ) }
    dend_10 { pt3dadd( 7.35353, -346.497, -62.9646, 0.12 ) }
    dend_10 { pt3dadd( 7.41469, -347.165, -63.4639, 0.96 ) }
    dend_10 { pt3dadd( 7.42834, -347.673, -63.9391, 1.56 ) }
    dend_10 { pt3dadd( 7.41293, -348.436, -64.7336, 1.2 ) }
    dend_10 { pt3dadd( 7.36498, -349.301, -65.6414, 0.24 ) }
    dend_10 { pt3dadd( 7.31551, -349.56, -65.9515, 0.72 ) }
    dend_10 { pt3dadd( 7.136, -350.065, -66.6532, 1.08 ) }
    dend_10 { pt3dadd( 6.71071, -350.84, -67.9251, 0.12 ) }
    dend_10 { pt3dadd( 6.59785, -351.023, -68.2439, 0.12 ) }
    dend_10 { pt3dadd( 6.29667, -351.509, -69.0818, 1.8 ) }
    dend_10 { pt3dadd( 5.41203, -353.094, -71.7173, 1.68 ) }
    dend_10 { pt3dadd( 4.95787, -354.036, -73.1982, 1.32 ) }
    dend_10 { pt3dadd( 4.46026, -355.286, -75.0154, 0.84 ) }
    dend_10 { pt3dadd( 4.27676, -355.865, -75.7974, 1.44 ) }
    dend_10 { pt3dadd( 4.17431, -356.341, -76.3965, 2.16 ) }
    dend_10 { pt3dadd( 4.13094, -357.041, -77.1511, 0.24 ) }
    dend_10 { pt3dadd( 4.29983, -357.771, -77.6938, 0.24 ) }
    dend_10 { pt3dadd( 4.45709, -358.11, -77.8787, 0.72 ) }
    dend_10 { pt3dadd( 4.67159, -358.432, -78.0128, 0.96 ) }
    dend_10 { pt3dadd( 5.26002, -359.167, -78.3546, 0.12 ) }
    dend_10 { pt3dadd( 5.67354, -359.612, -78.5809, 0.12 ) }
    dend_10 { pt3dadd( 6.60025, -360.571, -79.0517, 0.12 ) }
    dend_10 { pt3dadd( 7.56451, -361.65, -79.5434, 1.2 ) }
    dend_10 { pt3dadd( 8.0099, -362.181, -79.7668, 1.92 ) }
    dend_10 { pt3dadd( 8.78718, -363.145, -80.1512, 0.12 ) }
    dend_10 { pt3dadd( 9.10186, -363.554, -80.3158, 0.12 ) }
    dend_10 { pt3dadd( 9.42441, -364.096, -80.614, 0.12 ) }
    dend_10 { pt3dadd( 9.70023, -364.814, -81.2546, 0.24 ) }
    dend_10 { pt3dadd( 9.81418, -365.268, -81.9231, 0.24 ) }
    dend_10 { pt3dadd( 9.85381, -365.444, -82.2859, 0.24 ) }
    dend_10 { pt3dadd( 9.95269, -365.941, -83.6054, 1.8 ) }
    dend_10 { pt3dadd( 10.085, -366.632, -85.6254, 1.8 ) }
    dend_10 { pt3dadd( 10.1152, -367.152, -87.52, 0.24 ) }
    dend_10 { pt3dadd( 10.0727, -367.41, -88.7461, 0.48 ) }
    dend_10 { pt3dadd( 10.0111, -367.547, -89.5128, 0.72 ) }
    dend_10 { pt3dadd( 9.92036, -367.703, -90.5117, 1.68 ) }
    dend_10 { pt3dadd( 9.8571, -367.781, -91.1306, 1.68 ) }
    dend_10 { pt3dadd( 9.61786, -368.136, -94.1289, 1.68 ) }
    dend_10 { pt3dadd( 9.40753, -368.463, -97.0395, 1.44 ) }
    dend_10 { pt3dadd( 9.34454, -368.583, -98.0883, 1.8 ) }
    dend_10 { pt3dadd( 9.31404, -368.653, -98.734, 1.92 ) }
    dend_10 { pt3dadd( 9.29225, -368.831, -100.426, 1.68 ) }
    dend_10 { pt3dadd( 9.32245, -368.944, -101.347, 0.24 ) }
    dend_10 { pt3dadd( 9.39701, -369.06, -101.839, 0.24 ) }
    dend_10 { pt3dadd( 9.54741, -369.318, -102.453, 0.24 ) }
    dend_10 { pt3dadd( 9.64829, -369.503, -102.804, 0.72 ) }
    dend_10 { pt3dadd( 9.75, -369.701, -103.131, 0.96 ) }
    dend_10 { pt3dadd( 10.047, -370.177, -103.786, 0.84 ) }
    dend_10 { pt3dadd( 10.3351, -370.479, -104.461, 0.12 ) }
    dend_10 { pt3dadd( 10.4498, -370.51, -104.794, 0.12 ) }
    dend_10 { pt3dadd( 10.6461, -370.489, -105.393, 0.24 ) }
    dend_10 { pt3dadd( 10.7947, -370.469, -105.827, 0.24 ) }
    dend_10 { pt3dadd( 10.8241, -370.478, -106.111, 0.24 ) }
    dend_10 { pt3dadd( 10.6864, -370.603, -107.615, 0.84 ) }
    dend_10 { pt3dadd( 10.3698, -370.698, -108.945, 1.32 ) }
    dend_10 { pt3dadd( 10.0119, -370.76, -110.075, 2.28 ) }
    dend_10 { pt3dadd( 9.81046, -370.772, -110.608, 2.76 ) }
    dend_10 { pt3dadd( 8.13609, -370.744, -114.573, 2.88 ) }
    dend_10 { pt3dadd( 6.99784, -370.652, -117.084, 2.16 ) }
    dend_10 { pt3dadd( 5.81203, -370.491, -119.613, 1.08 ) }
    dend_10 { pt3dadd( 5.52289, -370.44, -120.233, 1.08 ) }
    dend_10 { pt3dadd( 4.92038, -370.315, -121.548, 2.04 ) }
    dend_10 { pt3dadd( 4.76539, -370.278, -121.908, 2.04 ) }
    dend_10 { pt3dadd( 2.54301, -369.654, -127.843, 0.6 ) }
    dend_10 { pt3dadd( 2.30701, -369.613, -128.579, 0.48 ) }
    dend_10 { pt3dadd( 1.89644, -369.655, -130.098, 0.96 ) }
    dend_10 { pt3dadd( 1.62015, -369.765, -131.207, 0.12 ) }
    dend_10 { pt3dadd( 1.56723, -369.814, -131.452, 0.12 ) }
    dend_10 { pt3dadd( 1.51948, -369.873, -131.684, 0.12 ) }
    dend_10 { pt3dadd( 1.45811, -370.273, -132.404, 0.6 ) }
    dend_10 { pt3dadd( 1.37441, -370.697, -133.072, 0.12 ) }
    dend_10 { pt3dadd( 1.38193, -370.855, -133.275, 0.12 ) }
    dend_10 { pt3dadd( 1.56448, -371.471, -134.055, 1.32 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 81/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 6.18039, -343.147, -61.7349, 0.12 ) }
    dend_7 { pt3dadd( 6.19755, -344.647, -61.6716, 0.12 ) }
    dend_7 { pt3dadd( 6.2358, -345.449, -61.6892, 0.12 ) }
    dend_7 { pt3dadd( 6.29336, -346.217, -61.7286, 0.6 ) }
    dend_7 { pt3dadd( 6.33901, -346.68, -61.7598, 0.36 ) }
    dend_7 { pt3dadd( 6.42987, -347.446, -61.7688, 0.36 ) }
    dend_7 { pt3dadd( 6.54564, -348.24, -61.7899, 0.36 ) }
    dend_7 { pt3dadd( 6.75769, -349.212, -61.8487, 0.36 ) }
    dend_7 { pt3dadd( 6.84605, -349.538, -61.8446, 0.84 ) }
    dend_7 { pt3dadd( 6.98306, -349.994, -61.8069, 0.84 ) }
    dend_7 { pt3dadd( 7.36279, -351.145, -61.6572, 0.24 ) }
    dend_7 { pt3dadd( 7.79669, -352.399, -61.4131, 0.24 ) }
    dend_7 { pt3dadd( 8.09129, -353.217, -61.2163, 0.24 ) }
    dend_7 { pt3dadd( 8.6375, -354.592, -60.851, 0.84 ) }
    dend_7 { pt3dadd( 8.94415, -355.323, -60.6513, 1.44 ) }
    dend_7 { pt3dadd( 9.44318, -356.455, -60.3469, 0.72 ) }
    dend_7 { pt3dadd( 9.79735, -357.26, -60.1185, 0.12 ) }
    dend_7 { pt3dadd( 9.92231, -357.555, -60.0153, 0.12 ) }
    dend_7 { pt3dadd( 10.2205, -358.303, -59.7668, 0.12 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_7 { pt3dadd( 10.4681, -359.036, -59.5254, 0.72 ) }
    dend_7 { pt3dadd( 10.5905, -359.456, -59.3366, 0.72 ) }
    dend_7 { pt3dadd( 10.7969, -360.306, -58.9108, 0.12 ) }
    dend_7 { pt3dadd( 10.8999, -360.847, -58.667, 0.12 ) }
    dend_7 { pt3dadd( 10.9718, -361.243, -58.4896, 0.12 ) }
    dend_7 { pt3dadd( 11.2015, -362.513, -57.9527, 1.44 ) }
    dend_7 { pt3dadd( 11.3787, -363.362, -57.6041, 2.04 ) }
    dend_7 { pt3dadd( 11.5781, -364.248, -57.2514, 2.16 ) }
    dend_7 { pt3dadd( 11.8498, -365.353, -56.8527, 1.44 ) }
    dend_7 { pt3dadd( 12.1314, -366.374, -56.5096, 0.96 ) }
    dend_7 { pt3dadd( 12.3633, -367.117, -56.3057, 0.48 ) }
    dend_7 { pt3dadd( 12.5792, -367.784, -56.1738, 0.12 ) }
    dend_7 { pt3dadd( 12.7562, -368.3, -56.0932, 0.12 ) }
    dend_7 { pt3dadd( 12.9049, -368.708, -56.0251, 0.12 ) }
    dend_7 { pt3dadd( 13.2076, -369.505, -55.8987, 0.12 ) }
    dend_7 { pt3dadd( 13.5425, -370.443, -55.8026, 0.12 ) }
    dend_7 { pt3dadd( 13.75, -370.944, -55.7637, 0.84 ) }
    dend_7 { pt3dadd( 14.1653, -371.799, -55.6951, 1.56 ) }
    dend_7 { pt3dadd( 14.4877, -372.374, -55.6398, 1.8 ) }
    dend_7 { pt3dadd( 14.9816, -373.2, -55.5651, 1.32 ) }
    dend_7 { pt3dadd( 15.3915, -373.882, -55.5063, 0.12 ) }
    dend_7 { pt3dadd( 15.875, -374.703, -55.4455, 0.12 ) }
    dend_7 { pt3dadd( 16.2867, -375.429, -55.4052, 0.84 ) }
    dend_7 { pt3dadd( 16.6985, -376.196, -55.3778, 0.96 ) }
    dend_7 { pt3dadd( 16.9686, -376.736, -55.3768, 0.12 ) }
    dend_7 { pt3dadd( 17.1479, -377.151, -55.3937, 0.12 ) }
    dend_7 { pt3dadd( 17.4133, -377.855, -55.4759, 0.12 ) }
    dend_7 { pt3dadd( 17.5595, -378.282, -55.512, 0.12 ) }
    dend_7 { pt3dadd( 17.7878, -378.903, -55.5548, 1.56 ) }
    dend_7 { pt3dadd( 18.0703, -379.602, -55.5738, 1.92 ) }
    dend_7 { pt3dadd( 18.3118, -380.161, -55.5714, 2.28 ) }
    dend_7 { pt3dadd( 18.9427, -381.594, -55.5454, 1.2 ) }
    dend_7 { pt3dadd( 19.5354, -382.963, -55.5237, 0.12 ) }
    dend_7 { pt3dadd( 19.835, -383.753, -55.5368, 0.12 ) }
    dend_7 { pt3dadd( 19.9777, -384.208, -55.5558, 0.12 ) }
    dend_7 { pt3dadd( 20.1304, -384.791, -55.5967, 1.08 ) }
    dend_7 { pt3dadd( 20.2887, -385.529, -55.6685, 1.56 ) }
    dend_7 { pt3dadd( 20.3663, -386.178, -55.7629, 1.44 ) }
    dend_7 { pt3dadd( 20.4306, -387.029, -55.9637, 0.12 ) }
    dend_7 { pt3dadd( 20.4512, -387.322, -56.033, 0.12 ) }
    dend_7 { pt3dadd( 20.535, -388.166, -56.2289, 0.12 ) }
    dend_7 { pt3dadd( 20.636, -388.886, -56.4309, 0.12 ) }
    dend_7 { pt3dadd( 20.8188, -389.957, -56.7508, 0.12 ) }
    dend_7 { pt3dadd( 20.9006, -390.397, -56.8799, 0.84 ) }
    dend_7 { pt3dadd( 21.0566, -391.162, -57.1061, 1.2 ) }
    dend_7 { pt3dadd( 21.1526, -391.595, -57.2429, 1.2 ) }
    dend_7 { pt3dadd( 21.488, -392.926, -57.6839, 0.12 ) }
    dend_7 { pt3dadd( 21.6982, -393.6, -57.9077, 0.12 ) }
    dend_7 { pt3dadd( 21.7942, -393.873, -57.9914, 0.12 ) }
    dend_7 { pt3dadd( 22.071, -394.649, -58.1691, 0.72 ) }
    dend_7 { pt3dadd( 22.3178, -395.355, -58.2632, 0.72 ) }
    dend_7 { pt3dadd( 22.5284, -395.96, -58.2832, 0.12 ) }
    dend_7 { pt3dadd( 22.7339, -396.6, -58.227, 0.12 ) }
    dend_7 { pt3dadd( 22.881, -397.171, -58.1761, 0.12 ) }
    dend_7 { pt3dadd( 23.1019, -398.248, -58.066, 1.44 ) }
    dend_7 { pt3dadd( 23.2189, -398.983, -57.9837, 1.92 ) }
    dend_7 { pt3dadd( 23.2714, -399.457, -57.9494, 1.92 ) }
    dend_7 { pt3dadd( 23.3663, -400.813, -57.903, 0.12 ) }
    dend_7 { pt3dadd( 23.4639, -402.094, -57.9158, 0.12 ) }
    dend_7 { pt3dadd( 23.493, -402.324, -57.9302, 0.6 ) }
    dend_7 { pt3dadd( 23.6082, -403.112, -58.0293, 0.72 ) }
    dend_7 { pt3dadd( 23.7709, -404.131, -58.1974, 0.48 ) }
    dend_7 { pt3dadd( 23.8904, -404.879, -58.3379, 0.24 ) }
    dend_7 { pt3dadd( 24.018, -405.696, -58.5155, 0.36 ) }
    dend_7 { pt3dadd( 24.1609, -406.833, -58.7544, 0.36 ) }
    dend_7 { pt3dadd( 24.1905, -407.942, -58.9775, 0.36 ) }
    dend_7 { pt3dadd( 24.118, -408.673, -59.1019, 0.48 ) }
    dend_7 { pt3dadd( 24.0286, -409.283, -59.194, 0.72 ) }
    dend_7 { pt3dadd( 23.8596, -410.058, -59.3121, 0.72 ) }
    dend_7 { pt3dadd( 23.6571, -410.665, -59.3978, 0.72 ) }
    dend_7 { pt3dadd( 23.0354, -412.027, -59.5605, 2.04 ) }
    dend_7 { pt3dadd( 22.5382, -412.984, -59.6296, 3.25 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 72/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 22.5382, -412.984, -59.6296, 0.12 ) }
    dend_9 { pt3dadd( 24.2924, -413.964, -59.5641, 0.12 ) }
    dend_9 { pt3dadd( 24.8962, -414.267, -59.5413, 0.12 ) }
    dend_9 { pt3dadd( 25.0107, -414.32, -59.5391, 0.48 ) }
    dend_9 { pt3dadd( 25.3559, -414.475, -59.5473, 0.48 ) }
    dend_9 { pt3dadd( 25.6207, -414.597, -59.5599, 0.12 ) }
    dend_9 { pt3dadd( 26.2356, -414.884, -59.5939, 0.12 ) }
    dend_9 { pt3dadd( 26.6001, -415.043, -59.6241, 0.72 ) }
    dend_9 { pt3dadd( 26.9778, -415.234, -59.5816, 0.72 ) }
    dend_9 { pt3dadd( 27.4341, -415.511, -59.4545, 0.12 ) }
    dend_9 { pt3dadd( 28.3512, -416.166, -59.0767, 0.12 ) }
    dend_9 { pt3dadd( 28.7603, -416.493, -58.8617, 0.96 ) }
    dend_9 { pt3dadd( 29.0053, -416.704, -58.7064, 0.96 ) }
    dend_9 { pt3dadd( 30.4614, -418.036, -57.6, 0.12 ) }
    dend_9 { pt3dadd( 30.8982, -418.466, -57.1873, 0.12 ) }
    dend_9 { pt3dadd( 31.0816, -418.662, -56.9622, 0.12 ) }
    dend_9 { pt3dadd( 31.2771, -418.91, -56.6223, 0.6 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 89/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 22.5382, -412.984, -59.6296, 2.64 ) }
    dend_8 { pt3dadd( 21.4604, -413.67, -59.8777, 2.64 ) }
    dend_8 { pt3dadd( 19.3355, -415.006, -60.1161, 0.24 ) }
    dend_8 { pt3dadd( 18.9705, -415.259, -60.1269, 0.24 ) }
    dend_8 { pt3dadd( 18.4864, -415.633, -60.1124, 0.24 ) }
    dend_8 { pt3dadd( 17.4165, -416.556, -59.9747, 0.24 ) }
    dend_8 { pt3dadd( 17.1089, -416.858, -59.9278, 0.24 ) }
    dend_8 { pt3dadd( 16.8027, -417.255, -59.7779, 0.24 ) }
    dend_8 { pt3dadd( 16.3958, -417.942, -59.4305, 0.24 ) }
    dend_8 { pt3dadd( 16.1227, -418.471, -59.1964, 1.08 ) }
    dend_8 { pt3dadd( 15.8192, -419.202, -58.9416, 1.56 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_8 { pt3dadd( 15.5156, -420.077, -58.7183, 1.68 ) }
    dend_8 { pt3dadd( 15.1365, -421.469, -58.3906, 0.12 ) }
    dend_8 { pt3dadd( 15.0786, -421.749, -58.3306, 0.12 ) }
    dend_8 { pt3dadd( 15.0144, -422.19, -58.2544, 0.48 ) }
    dend_8 { pt3dadd( 14.9581, -422.77, -58.1963, 0.48 ) }
    dend_8 { pt3dadd( 14.9498, -422.94, -58.1925, 0.12 ) }
    dend_8 { pt3dadd( 14.951, -424.101, -58.1919, 0.12 ) }
    dend_8 { pt3dadd( 14.9799, -424.692, -58.2288, 0.12 ) }
    dend_8 { pt3dadd( 15.0268, -425.849, -58.3039, 0.12 ) }
    dend_8 { pt3dadd( 15.0356, -426.311, -58.3481, 1.32 ) }
    dend_8 { pt3dadd( 15.0237, -426.911, -58.4172, 1.08 ) }
    dend_8 { pt3dadd( 14.9748, -427.487, -58.4863, 0.12 ) }
    dend_8 { pt3dadd( 14.8847, -428.081, -58.5551, 0.12 ) }
    dend_8 { pt3dadd( 14.7555, -428.636, -58.6082, 0.12 ) }
    dend_8 { pt3dadd( 14.5646, -429.308, -58.6536, 0.12 ) }
    dend_8 { pt3dadd( 14.2227, -430.355, -58.6917, 0.12 ) }
    dend_8 { pt3dadd( 13.8986, -431.255, -58.7243, 1.2 ) }
    dend_8 { pt3dadd( 13.6362, -431.937, -58.7487, 1.44 ) }
    dend_8 { pt3dadd( 13.3302, -432.695, -58.7666, 0.12 ) }
    dend_8 { pt3dadd( 12.9323, -433.635, -58.7641, 0.12 ) }
    dend_8 { pt3dadd( 12.6928, -434.205, -58.7312, 0.6 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_2 = new SectionList()
    dend_24 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_24, dend_21, dend_0, dend_32, dend_25, dend_23, dend_22, dend_20, dend_1, dend_27, dend_26, dend_15, dend_2, dend_31, dend_28, dend_19, dend_16, dend_14, dend_3, dend_30, dend_29, dend_18, dend_17, dend_13, dend_4, dend_12, dend_5, dend_11, dend_6, dend_10, dend_7, dend_9, dend_8]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_24 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_21 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_25 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_27 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_26 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_16 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_14 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_3 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_29 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_4 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_12 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_5 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_6 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_10 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_7 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_20 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_23 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_15 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_19 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_13 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_18 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_17 OneSecGrp_SectionRef_26.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_31 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_28 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_30 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_11 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_9 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_8 OneSecGrp_SectionRef_36.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 5.67935E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.6794998E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cSTUT_7_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cSTUT_7_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cSTUT_7_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cSTUT_7_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_24 nseg = 3
    dend_21 nseg = 3
    dend_32 nseg = 3
    dend_25 nseg = 5
    dend_27 nseg = 5
    dend_26 nseg = 11
    dend_16 nseg = 5
    dend_14 nseg = 3
    dend_3 nseg = 3
    dend_29 nseg = 7
    dend_4 nseg = 5
    dend_12 nseg = 5
    dend_5 nseg = 3
    dend_6 nseg = 5
    dend_10 nseg = 5
    dend_7 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cSTUT189_L5_LBC_6f185d799a_0_0


