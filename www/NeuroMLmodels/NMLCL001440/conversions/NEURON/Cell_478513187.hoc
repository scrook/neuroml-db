// Cell: Cell_478513187
/*
{
  "id" : "Cell_478513187",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "202.277, 187.502, 25.2, 10.7188", "207.636, 187.502, 25.2, 10.7188", "212.995, 187.502, 25.2, 10.7188" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "207.636, 187.502, 25.2, 1.0", "213.477, 201.318, 25.2, 1.0", "219.319, 215.134, 25.2, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "211.499, 186.091, 28.4326, 0.2288", "211.224, 185.071, 28.9668, 0.2288", "211.935, 184.238, 29.1998, 0.2288", "212.635, 183.486, 29.486, 0.2288", "213.578, 183.333, 29.8357, 0.2288", "213.716, 183.732, 30.2896, 0.2288", "214.596, 183.564, 30.9226, 0.2288", "215.615, 183.501, 31.5434, 0.2288", "216.268, 182.824, 32.1432, 0.2288", "217.382, 182.661, 32.6651, 0.2288", "218.312, 182.116, 33.0677, 0.2288", "218.393, 181.691, 33.6899, 0.2288", "219.372, 181.816, 34.2737, 0.2288", "220.282, 181.323, 34.7841, 0.2288", "220.906, 180.929, 35.4662, 0.2288", "221.033, 179.887, 35.9293, 0.2288", "220.906, 178.998, 36.3824, 0.2288", "221.239, 177.988, 36.7097, 0.2288", "221.363, 176.862, 36.9244, 0.2288", "221.413, 175.884, 37.0742, 0.2288", "221.25, 174.843, 37.0163, 0.2288", "221.159, 173.807, 37.0558, 0.2288", "220.883, 172.962, 36.8866, 0.2288", "220.436, 172.185, 36.8726, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "210.589, 183.041, 26.4141, 0.9826", "211.038, 182.173, 27.2045, 0.8568", "212.019, 181.65, 27.5391, 0.7074", "212.58, 180.95, 27.9462, 0.2288", "212.943, 180.293, 28.5135, 0.2288", "213.647, 179.575, 28.8929, 0.2288", "213.876, 178.577, 29.2793, 0.2288", "214.172, 177.81, 29.6584, 0.2288", "215.014, 177.095, 30.0048, 0.2288", "215.732, 176.241, 30.2246, 0.2288", "216.642, 175.571, 30.3652, 0.2288", "217.366, 174.716, 30.5368, 0.2288", "218.144, 174.105, 30.7387, 0.2288", "218.615, 173.394, 31.1083, 0.2288", "219.206, 172.545, 31.2665, 0.2288", "219.419, 171.602, 31.5258, 0.2288", "219.951, 170.787, 31.6456, 0.2288", "220.334, 169.77, 31.7061, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "206.841, 183.283, 28.1924, 0.4528", "207.112, 182.179, 28.6843, 0.3494", "206.936, 181.066, 28.9103, 0.4856", "206.252, 180.151, 29.1645, 0.8926", "205.486, 179.303, 29.4476, 0.5438", "205.21, 178.249, 29.7822, 0.6418", "205.468, 177.416, 30.3248, 0.3332", "206.258, 176.651, 30.8437, 0.2326", "206.089, 175.549, 31.2528, 0.6242", "205.4, 174.642, 31.5871, 0.229", "204.464, 173.986, 31.836, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "203.884, 184.186, 23.8935, 0.2288", "203.16, 183.364, 24.5344, 0.3788", "202.392, 182.658, 24.8805, 0.411", "201.46, 182.016, 25.1849, 0.2416", "200.514, 181.376, 25.3691, 0.2288", "199.531, 180.792, 25.4646, 0.4434", "198.534, 180.233, 25.4464, 0.667", "197.553, 179.646, 25.3366, 0.47", "196.484, 179.285, 25.1171, 0.4268", "195.452, 179.2, 24.7355, 0.3706", "194.366, 178.848, 24.4166, 0.2288", "193.796, 178.552, 24.1615, 0.3366", "192.725, 178.15, 23.9638, 0.348", "191.617, 177.918, 23.7994, 0.4196", "190.498, 177.892, 23.6107, 0.4506", "189.396, 177.892, 23.396, 0.4788", "188.253, 177.892, 23.2439, 0.5398", "187.133, 177.892, 23.205, 0.297", "185.994, 177.891, 23.1339, 0.4532", "184.855, 177.881, 23.0334, 0.2386", "183.718, 177.815, 22.9908, 0.4478", "182.628, 177.479, 22.9323, 0.4576", "181.645, 177.326, 22.6789, 0.5534", "180.611, 176.862, 22.447, 0.617", "179.607, 176.326, 22.3535, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "204.176, 192.074, 25.5354, 1.7288", "203.742, 193.132, 25.6505, 0.9254", "203.313, 194.185, 25.6984, 0.3556", "202.758, 195.156, 25.6796, 0.4288", "201.931, 195.945, 25.6617, 0.5558", "200.933, 196.506, 25.6466, 0.339" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "210.505, 183.656, 23.3512, 1.5014", "210.917, 182.605, 23.2456, 0.877", "211.187, 181.496, 23.2128, 0.7252", "211.276, 180.36, 23.1784, 0.4", "211.723, 179.331, 23.1252, 0.4496", "212.339, 178.369, 23.0185, 0.4868", "212.986, 177.429, 22.8404, 0.4634", "213.648, 176.5, 22.5873, 0.8278", "214.201, 175.77, 22.0788, 0.3974" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "204.914, 192.831, 23.9862, 1.1088", "205.148, 193.826, 22.8754, 0.4814", "206.105, 193.898, 22.353, 0.2288", "206.776, 193.766, 21.616, 0.2288", "207.839, 193.632, 21.0179, 0.2288", "208.763, 194.215, 20.6805, 0.2288", "209.494, 194.964, 20.4565, 0.2288", "210.427, 195.267, 20.232, 0.2978", "211.452, 194.916, 20.1617, 0.266", "212.476, 194.44, 20.1275, 0.2288", "213.481, 193.91, 20.0491, 0.2288", "214.389, 193.225, 19.8862, 0.311", "215.288, 192.541, 19.5709, 0.2586", "216.216, 192.42, 18.9834, 0.6432", "217.139, 192.189, 18.1656, 0.4744", "217.309, 192.849, 17.1906, 0.2288", "217.87, 192.623, 16.1269, 0.2288", "218.152, 193.026, 15.0998, 0.3458", "219.071, 193.702, 14.352, 0.3692", "219.919, 194.465, 13.8376, 0.337", "220.813, 195.164, 13.4896, 0.2962", "221.835, 195.226, 13.2863, 0.2288", "222.876, 194.758, 13.1348, 0.2288", "223.933, 194.989, 12.8988, 0.394", "224.731, 195.575, 11.8384, 0.9152" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "219.319, 215.134, 25.2, 1.0", "225.16, 228.95, 25.2, 1.0", "231.001, 242.766, 25.2, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "220.436, 172.185, 36.8726, 0.2288", "220.608, 171.85, 37.6382, 0.2288", "220.957, 170.911, 37.9336, 0.2288", "221.391, 169.922, 37.9912, 0.2288", "221.705, 168.898, 38.2225, 0.2288", "221.627, 167.948, 38.5876, 0.2288", "221.959, 166.922, 38.8884, 0.2288", "222.542, 166.023, 39.2924, 0.2288", "222.622, 165.206, 39.9504, 0.2288", "222.708, 164.833, 40.6722, 0.2288", "222.89, 164.035, 41.5514, 0.2288", "222.999, 163.034, 42.3517, 0.2288", "223.08, 161.893, 42.9467, 0.2288", "223.3, 160.788, 43.3381, 0.2288", "224.008, 160.072, 43.5557, 0.2288", "224.622, 159.132, 43.6576, 0.2288", "224.891, 158.03, 43.68, 0.2288", "225.201, 157.007, 43.68, 0.2288", "225.826, 156.281, 43.68, 0.2288", "226.404, 155.409, 43.68, 0.2288", "227.172, 154.77, 43.68, 0.2288", "227.773, 153.955, 43.68, 0.2288", "228.011, 152.867, 43.68, 0.2288", "228.776, 152.079, 43.68, 0.2288", "229.452, 151.164, 43.68, 0.2288", "230.088, 150.213, 43.68, 0.2288", "230.859, 149.521, 43.68, 0.2288" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "220.436, 172.185, 36.8726, 0.2288", "220.335, 171.909, 36.8393, 0.2288", "220.105, 171.192, 36.5733, 0.2288", "219.352, 170.506, 36.3896, 0.2288", "218.768, 169.839, 36.5025, 0.2288", "218.512, 168.779, 36.7853, 0.2288", "218.196, 167.775, 37.0717, 0.2288", "218.35, 167.22, 37.6046, 0.2288", "218.04, 166.211, 37.9946, 0.2288", "217.082, 165.885, 38.299, 0.2288", "217.394, 165.155, 38.5577, 0.2288", "217.781, 164.51, 38.8934, 0.2288", "217.475, 163.584, 38.955, 0.2288", "217.087, 162.706, 38.8962, 0.2288", "216.352, 161.995, 38.9673, 0.2288", "216.481, 161.218, 39.1664, 0.2288", "215.596, 160.539, 39.296, 0.2288", "214.867, 159.676, 39.4229, 0.2288", "214.001, 159.069, 39.6628, 0.2288", "213.076, 158.542, 39.9325, 0.2288", "211.98, 158.267, 40.14, 0.2288", "210.914, 157.917, 40.2643, 0.2288", "209.932, 157.334, 40.39, 0.2288", "209.045, 156.699, 40.6227, 0.2288", "208.253, 155.992, 40.724, 0.2288", "207.372, 155.621, 40.8489, 0.2288", "206.642, 155.582, 41.2474, 0.2288", "205.729, 156.255, 41.6377, 0.2288", "204.816, 156.929, 41.9966, 0.2288", "203.873, 157.572, 42.56, 0.2288" ],
    "parent" : "dend_61",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "220.334, 169.77, 31.7061, 0.2288", "221.398, 169.993, 31.9278, 0.2288", "222.513, 170.225, 32.0816, 0.2288", "223.634, 170.218, 32.0813, 0.2288", "224.436, 169.543, 32.1476, 0.2288", "225.433, 169.146, 32.2115, 0.2288", "226.488, 168.751, 32.3271, 0.2288", "227.526, 168.854, 32.3649, 0.2288", "228.559, 168.854, 32.3683, 0.2288", "229.61, 168.836, 32.3982, 0.2288", "230.154, 168.261, 32.7163, 0.2288", "230.649, 168.168, 33.3676, 0.2288", "231.651, 167.866, 33.9268, 0.2288", "232.679, 167.482, 34.4397, 0.2288", "233.314, 167.279, 35.0526, 0.2288", "234.05, 166.661, 35.525, 0.2288", "234.666, 165.727, 35.7697, 0.2288", "235.249, 165.203, 35.6384, 0.2288", "235.971, 164.505, 35.635, 0.2288", "236.471, 163.586, 35.6359, 0.2288", "237.314, 163.399, 35.6115, 0.2288", "238.071, 162.772, 35.7204, 0.2288", "238.57, 161.898, 36.0142, 0.2288", "239.275, 161.027, 36.304, 0.2288", "239.968, 160.277, 36.4633, 0.2288", "240.635, 159.638, 36.6904, 0.2288", "241.17, 158.837, 36.8606, 0.2288", "242.144, 158.291, 37.018, 0.2288", "243.181, 158.002, 37.1585, 0.2288", "244.063, 157.426, 37.4172, 0.2288", "245.173, 157.361, 37.5973, 0.2288", "246.193, 156.906, 37.7073, 0.2288", "247.123, 156.304, 37.931, 0.2288", "248.036, 155.633, 38.1847, 0.2288", "249.043, 155.297, 38.5428, 0.2288", "250.01, 154.891, 39.0135, 0.2288", "250.75, 154.243, 39.4901, 0.2288", "251.887, 154.211, 39.8493, 0.2288", "253.031, 154.211, 40.0893, 0.2288", "254.087, 153.842, 40.2357, 0.2288", "255.219, 153.754, 40.3029, 0.2288", "256.297, 153.372, 40.32, 0.2288", "257.418, 153.182, 40.32, 0.2288", "258.562, 153.182, 40.32, 0.2288", "259.672, 152.97, 40.32, 0.2288", "260.503, 152.381, 40.32, 0.2288", "261.633, 152.266, 40.32, 0.2288" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "220.334, 169.77, 31.7061, 0.2288", "220.5, 169.163, 31.6792, 0.2288", "220.316, 168.088, 31.5798, 0.2288", "220.08, 166.986, 31.6142, 0.2288", "220.106, 166.245, 31.8864, 0.2288", "219.921, 165.176, 32.2524, 0.2288", "219.996, 164.087, 32.5707, 0.2288", "219.918, 163.315, 33.0403, 0.2288", "219.618, 162.402, 33.3508, 0.2288", "219.264, 161.355, 33.4877, 0.2288", "218.711, 160.546, 33.4174, 0.2288", "218.046, 160.197, 33.0554, 0.2288", "217.788, 160.05, 32.7342, 0.2288", "216.831, 159.514, 32.3677, 0.2288", "215.748, 159.182, 32.0701, 0.2288", "214.677, 158.902, 31.7624, 0.2288", "213.9, 158.753, 31.3312, 0.2288", "212.85, 158.42, 30.9722, 0.2288", "212.047, 157.936, 30.5222, 0.2288", "211.981, 157.602, 30.0966, 0.2288", "211.006, 157.376, 29.6806, 0.2288", "210.067, 156.808, 29.2998, 0.2288", "209.082, 156.336, 28.9839, 0.2288", "208.838, 155.289, 28.7003, 0.2288", "207.971, 154.654, 28.5499, 0.2288", "207.328, 153.787, 28.4623, 0.2288", "206.708, 152.925, 28.343, 0.2288", "205.959, 152.128, 28.2974, 0.2288", "205.435, 151.268, 28.124, 0.2288", "204.947, 150.641, 27.753, 0.2288", "204.547, 149.726, 27.3764, 0.2288", "204.225, 148.726, 27.0617, 0.2288", "203.975, 147.821, 26.7277, 0.2288", "203.702, 147.104, 26.5462, 0.2288", "203.536, 146.159, 26.2534, 0.2288", "202.874, 145.428, 26.1873, 0.2288", "202.297, 144.602, 25.9949, 0.2288", "201.487, 143.605, 25.7975, 0.2288", "201.162, 142.592, 25.5528, 0.2288", "200.957, 141.54, 25.1866, 0.2288", "200.846, 140.434, 24.8615, 0.2288", "200.415, 139.375, 24.6, 0.2288", "199.984, 138.315, 24.4247, 0.2288", "199.663, 137.294, 24.2676, 0.2288", "199.446, 136.321, 24.1447, 0.2288", "199.566, 135.207, 24.1167, 0.2288", "199.742, 134.113, 24.1458, 0.2288", "199.514, 133.042, 24.1287, 0.2288", "199.455, 131.909, 24.1374, 0.2288", "199.314, 130.779, 24.1545, 0.2288", "199.146, 129.653, 24.1478, 0.2288", "198.827, 128.591, 24.1122, 0.2288", "198.224, 127.718, 24.0562, 0.2288", "197.711, 126.928, 23.8678, 0.2288", "196.801, 126.302, 23.7017, 0.2288", "196.305, 125.563, 23.5558, 0.2288", "195.822, 124.627, 23.4276, 0.2288", "195.395, 123.685, 23.3111, 0.2288", "195.128, 122.639, 23.2016, 0.2288", "194.442, 122.167, 23.1123, 0.2288", "193.59, 121.293, 22.8424, 0.2288", "192.59, 120.801, 22.57, 0.2288", "192.202, 119.771, 22.3157, 0.2288", "191.738, 118.804, 22.0629, 0.2288", "191.351, 117.746, 21.8084, 0.2288", "191.162, 116.666, 21.5309, 0.2288", "191.162, 115.561, 21.231, 0.2288", "191.258, 114.443, 20.977, 0.2288", "191.836, 113.561, 20.9415, 0.2288", "191.648, 113.207, 20.9451, 0.2288", "191.351, 112.333, 20.8219, 0.2288", "191.381, 111.682, 20.5643, 0.2288", "190.92, 110.735, 20.3686, 0.2288", "190.514, 109.907, 20.3134, 0.2288", "190.438, 108.909, 20.3753, 0.2288", "190.476, 108.54, 20.519, 0.2288", "190.702, 108.304, 20.7133, 0.2288", "190.942, 107.505, 20.8972, 0.2288", "190.59, 106.634, 20.9272, 0.2288", "190.453, 105.679, 20.816, 0.2288", "190.476, 104.621, 20.7824, 0.2288", "190.37, 103.66, 20.8141, 0.2288", "190.15, 102.925, 20.8264, 0.2288", "190.363, 102.027, 20.7637, 0.2288", "190.676, 100.948, 20.7346, 0.2288", "190.882, 100.494, 20.4784, 0.2288", "190.079, 100.242, 20.426, 0.2288", "189.673, 99.5358, 20.6195, 0.2288", "189.175, 98.9856, 20.8141, 0.2288", "189.18, 97.9082, 20.9597, 0.2288", "189.027, 96.9895, 20.8715, 0.2288", "189.561, 96.2104, 19.88, 0.2288" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "204.464, 173.986, 31.836, 0.2288", "204.095, 173.498, 31.9539, 0.2818", "204.536, 172.49, 32.0748, 0.2306", "205.08, 171.487, 32.1835, 0.2288", "205.573, 170.464, 32.3201, 0.3586", "206.151, 169.478, 32.4041, 0.3014", "206.371, 168.356, 32.4615, 0.6864" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "204.464, 173.986, 31.836, 0.2288", "204.052, 173.864, 32.0995, 0.4622", "203.133, 173.46, 33.5135, 0.284", "202.593, 172.744, 34.1852, 0.6864" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "179.607, 176.326, 22.3535, 0.4576", "178.744, 176.11, 22.538, 0.4576", "177.639, 175.84, 22.7161, 0.4576", "176.546, 175.704, 22.8469, 0.4122", "175.47, 176.023, 22.9978, 0.3632", "174.435, 176.384, 23.2252, 0.4024", "173.344, 176.405, 23.469, 0.4328", "172.273, 176.056, 23.6281, 0.4122", "171.313, 175.443, 23.7404, 0.4058", "170.44, 174.707, 23.8314, 0.4576", "169.622, 173.911, 23.8655, 0.4576", "169.067, 173.275, 23.826, 0.2288", "168.398, 172.925, 23.6205, 0.2288", "167.593, 172.693, 23.576, 0.2288", "166.729, 172.201, 23.5197, 0.2288", "166.221, 171.721, 23.4293, 0.2288", "165.651, 171.141, 23.3058, 0.2288", "165.466, 170.12, 23.2005, 0.2288", "164.85, 169.477, 23.1983, 0.2288" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "179.607, 176.326, 22.3535, 0.4576", "179.121, 175.693, 21.5891, 0.316", "179.042, 174.801, 21.11, 0.2332", "178.503, 173.946, 20.8972, 0.2288", "177.689, 173.237, 20.8673, 0.4146", "177.066, 172.313, 20.9124, 0.3222", "176.553, 171.299, 20.9272, 0.4098", "176.113, 170.263, 20.8788, 0.608", "175.723, 169.191, 20.8443, 0.624", "175.231, 168.184, 20.8827, 0.288", "174.737, 167.161, 20.9367, 0.2288", "174.394, 166.083, 20.9292, 0.6344", "174.234, 164.98, 20.8415, 0.319", "173.953, 163.889, 20.8085, 0.24", "173.513, 162.837, 20.8023, 0.2314", "173.25, 161.73, 20.8144, 0.2288", "172.9, 160.645, 20.8214, 0.2288", "172.69, 159.526, 20.8757, 0.2288", "172.345, 158.438, 20.9339, 0.3732", "172.0, 157.347, 20.9919, 0.2738", "171.905, 156.22, 21.1123, 0.2308", "171.655, 155.107, 21.2422, 0.2758", "171.328, 154.01, 21.3657, 0.3826", "171.029, 152.906, 21.4777, 0.436", "170.875, 151.788, 21.6558, 0.2872", "170.564, 150.698, 21.7694, 0.229", "170.514, 149.555, 21.905, 0.449" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "200.933, 196.506, 25.6466, 0.339", "200.067, 196.627, 23.5746, 0.2644", "199.134, 196.408, 22.3034, 0.2288", "198.119, 196.474, 21.7759, 0.2288", "197.508, 196.83, 21.1016, 0.2288", "197.993, 197.635, 20.3596, 0.2288", "197.199, 198.143, 19.77, 0.2288", "196.329, 198.76, 19.3178, 0.2288", "196.242, 199.782, 18.9252, 0.2288", "195.408, 200.086, 18.5777, 0.2288", "194.592, 199.39, 18.3201, 0.2288", "194.155, 199.781, 18.0505, 0.2288", "193.701, 200.795, 17.7551, 0.2288", "193.299, 201.804, 17.4283, 0.2288", "192.997, 202.889, 17.1396, 0.2288", "192.61, 203.959, 16.9193, 0.2288", "192.043, 204.952, 16.7476, 0.2288", "191.234, 205.761, 16.6219, 0.2288", "190.684, 206.724, 16.4917, 0.2288", "190.305, 207.789, 16.3332, 0.2288", "190.005, 208.886, 16.1876, 0.2288", "189.61, 209.954, 15.96, 0.2288" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "200.933, 196.506, 25.6466, 0.339", "200.049, 197.166, 25.6161, 0.6794", "199.011, 197.647, 25.6197, 0.4576" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "214.201, 175.77, 22.0788, 0.3974", "214.499, 175.683, 21.84, 0.2288", "215.177, 175.49, 20.3627, 0.2288", "215.865, 175.932, 19.7123, 0.2288", "216.905, 176.242, 19.1786, 0.2288", "217.853, 175.953, 18.5987, 0.2288", "218.733, 175.739, 18.062, 0.2288", "219.134, 176.292, 17.444, 0.2288", "220.075, 176.938, 16.9618, 0.2288", "220.936, 177.408, 16.5578, 0.2288", "221.793, 177.963, 16.1717, 0.2288", "221.834, 179.104, 15.876, 0.2288", "222.077, 180.082, 15.47, 0.2288", "222.839, 180.409, 14.9271, 0.2288", "223.597, 180.304, 14.5838, 0.2288", "223.892, 180.823, 14.6168, 0.2288", "224.793, 181.491, 14.6247, 0.2288", "225.419, 182.266, 14.6955, 0.2288", "226.067, 183.164, 14.8268, 0.2288", "225.885, 183.861, 15.0374, 0.2288", "226.632, 184.07, 15.1217, 0.2288", "227.316, 184.298, 14.9234, 0.2288", "228.315, 184.558, 14.8014, 0.2288", "229.375, 184.758, 14.5617, 0.2288", "230.349, 185.25, 14.2988, 0.2288", "231.007, 185.734, 14.1042, 0.2288", "231.809, 186.173, 13.8846, 0.2288", "232.234, 186.472, 13.4277, 0.2288", "233.162, 186.256, 13.1827, 0.2288", "234.036, 186.014, 12.875, 0.2288", "235.133, 186.208, 12.6053, 0.2288", "235.893, 186.811, 12.4331, 0.2288", "236.219, 187.09, 12.5768, 0.2288", "237.176, 187.48, 12.6448, 0.2288", "238.233, 187.286, 12.5896, 0.2288", "238.638, 187.387, 11.76, 0.2288" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "214.201, 175.77, 22.0788, 0.3974", "214.325, 175.32, 21.5902, 0.5176", "214.499, 174.207, 21.0994, 0.619", "214.49, 173.067, 20.6343, 0.2934", "214.418, 171.959, 20.1306, 0.4916", "214.033, 171.135, 19.469, 0.358", "213.866, 170.018, 18.8986, 0.3956", "213.486, 168.94, 18.4282, 0.2882", "212.852, 167.999, 17.9931, 0.4576" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "206.371, 168.356, 32.4615, 0.6864", "206.757, 167.175, 31.218, 0.5154", "207.087, 166.169, 30.1899, 0.37", "207.378, 165.189, 29.7035, 0.2288", "207.784, 164.363, 29.2208, 0.2288", "208.176, 163.592, 28.964, 0.2288", "208.773, 162.986, 28.5743, 0.2288", "208.78, 161.867, 28.2002, 0.2288", "209.123, 161.177, 27.7903, 0.2288", "209.352, 160.157, 27.405, 0.2288", "209.733, 159.168, 27.1186, 0.2288", "210.14, 158.902, 26.9609, 0.2288", "210.382, 158.902, 26.9206, 0.2288", "210.51, 158.436, 26.8629, 0.2288", "210.839, 157.382, 26.9063, 0.2288", "211.054, 156.441, 26.8293, 0.2288", "210.954, 155.348, 26.8901, 0.2288", "210.984, 154.27, 27.0612, 0.2288", "211.613, 153.527, 27.3588, 0.2288", "212.15, 152.771, 27.7127, 0.2288", "212.858, 152.036, 28.0171, 0.2288", "213.58, 151.175, 28.2556, 0.2288", "214.221, 150.316, 28.2559, 0.2288", "214.314, 149.331, 28.0974, 0.2288", "214.412, 148.491, 27.7712, 0.2288", "214.354, 147.662, 27.2488, 0.2288", "214.157, 146.599, 26.6918, 0.2288", "214.258, 145.667, 26.1058, 0.2288", "214.828, 144.851, 25.7152, 0.2288", "215.22, 144.012, 25.2854, 0.2288", "215.873, 143.448, 24.8088, 0.2288", "216.404, 142.579, 24.5739, 0.2288", "217.186, 141.783, 24.3085, 0.2288", "217.794, 140.945, 23.9117, 0.2288", "217.766, 139.847, 23.4735, 0.2288", "217.455, 138.768, 23.1207, 0.2288", "216.777, 138.13, 22.694, 0.2288", "216.123, 137.226, 22.3779, 0.2288", "216.316, 136.141, 22.1558, 0.2288", "216.79, 135.24, 22.0836, 0.2288", "216.962, 134.118, 22.0968, 0.2288", "217.871, 133.619, 22.2373, 0.2288", "218.161, 132.683, 22.3877, 0.2288", "218.518, 131.748, 22.5968, 0.2288", "218.931, 130.757, 22.7668, 0.2288", "219.991, 130.53, 22.96, 0.2288" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "206.371, 168.356, 32.4615, 0.6864", "206.628, 167.55, 32.4957, 0.6864", "206.91, 166.445, 32.5343, 0.6218", "207.255, 165.357, 32.5592, 0.3206", "207.583, 164.622, 32.5872, 0.2288", "207.993, 163.99, 32.592, 0.2288", "208.159, 162.898, 32.5508, 0.2288", "208.556, 161.865, 32.6032, 0.2288", "208.666, 160.867, 32.7606, 0.2288", "209.009, 159.927, 33.0277, 0.2288", "209.432, 158.994, 33.325, 0.2288", "209.755, 157.922, 33.668, 0.2288", "209.839, 156.792, 34.0197, 0.2288", "210.038, 155.679, 34.3655, 0.2288", "210.016, 154.763, 34.8718, 0.2288", "210.226, 153.72, 35.2803, 0.2288", "210.844, 152.945, 35.6286, 0.2288", "211.314, 151.94, 35.8058, 0.2288", "211.727, 150.889, 35.9696, 0.2288", "211.754, 149.856, 36.1225, 0.2288", "212.255, 148.846, 36.2158, 0.2288", "212.734, 147.818, 36.3126, 0.2288", "213.033, 146.743, 36.4893, 0.2288", "212.95, 145.809, 36.8575, 0.2288", "213.154, 144.768, 37.0852, 0.2288", "213.796, 143.94, 37.3629, 0.2288", "213.99, 142.846, 37.599, 0.2288", "214.674, 142.004, 37.8255, 0.2288", "215.428, 141.411, 38.0817, 0.2288", "215.548, 140.956, 38.274, 0.2288", "216.012, 140.04, 38.4989, 0.2288", "216.254, 139.188, 38.5991, 0.2288", "216.319, 138.208, 38.7685, 0.2288", "216.324, 137.168, 38.9332, 0.2288", "216.704, 136.1, 39.0471, 0.2288", "217.131, 135.069, 39.1866, 0.2288", "217.164, 134.709, 39.391, 0.2288", "217.274, 133.673, 39.7368, 0.2288", "217.36, 132.536, 40.0123, 0.2288", "217.391, 131.395, 40.2405, 0.2288", "217.577, 130.266, 40.4317, 0.2288", "217.896, 129.187, 40.5854, 0.2288", "218.161, 128.095, 40.7193, 0.2288", "218.161, 126.981, 40.9192, 0.2288", "218.389, 125.978, 41.2076, 0.2288", "218.701, 124.886, 41.4417, 0.2288", "218.933, 123.777, 41.6262, 0.2288", "219.533, 122.908, 41.7662, 0.2288", "219.939, 121.869, 41.9062, 0.2288", "220.501, 120.883, 41.9986, 0.2288", "221.234, 120.019, 42.0605, 0.2288", "221.588, 118.966, 42.1644, 0.2288", "221.707, 117.839, 42.2604, 0.2288", "222.094, 116.791, 42.3223, 0.2288", "222.628, 115.793, 42.3592, 0.2288", "223.312, 114.911, 42.3058, 0.2288", "223.723, 114.129, 42.1674, 0.2288", "223.738, 113.128, 42.0773, 0.2288", "223.773, 112.403, 42.2344, 0.2288", "223.567, 111.476, 42.4805, 0.2288", "223.488, 110.49, 42.723, 0.2288", "223.614, 109.786, 42.9982, 0.2288", "223.538, 109.43, 43.1175, 0.2288", "223.194, 108.68, 42.9778, 0.2288", "223.271, 108.451, 42.8072, 0.2288", "223.08, 108.133, 42.7596, 0.2288", "223.067, 107.892, 42.7398, 0.2288", "222.966, 107.612, 42.6756, 0.2288", "222.883, 106.345, 42.7148, 0.2288", "222.842, 105.43, 42.5354, 0.2288", "222.119, 104.818, 42.4105, 0.2288", "222.045, 104.078, 42.1439, 0.2288", "221.822, 103.471, 41.6377, 0.2288", "220.956, 103.051, 41.1939, 0.2288", "220.305, 102.393, 40.9746, 0.2288", "220.015, 101.621, 41.046, 0.2288", "219.742, 100.938, 41.2812, 0.2288", "218.954, 100.614, 41.2941, 0.2288", "218.624, 100.187, 41.0376, 0.2288", "218.187, 99.6122, 40.7481, 0.2288", "218.173, 98.6349, 40.4438, 0.2288", "218.694, 97.8453, 40.2534, 0.2288", "218.838, 97.241, 40.4144, 0.2288", "219.312, 96.5509, 40.7761, 0.2288", "220.01, 95.8098, 40.9721, 0.2288", "220.236, 94.8394, 40.9844, 0.2288", "220.702, 94.1458, 40.668, 0.2288", "221.379, 93.4575, 40.3998, 0.2288", "221.936, 93.2097, 40.0938, 0.2288", "222.483, 92.4672, 39.6676, 0.2288", "223.096, 92.3123, 39.0401, 0.2288", "223.475, 91.4852, 38.4101, 0.2288", "224.095, 90.8934, 37.7938, 0.2288", "224.27, 90.2728, 37.5757, 0.2288", "224.135, 89.7438, 37.7544, 0.2288", "224.426, 88.7137, 37.9504, 0.2288", "224.575, 87.681, 38.1245, 0.2288", "224.707, 86.9183, 38.3079, 0.2288", "225.562, 86.2594, 38.3412, 0.2288", "225.676, 85.2883, 38.1385, 0.2288", "226.287, 84.7516, 37.7513, 0.2288", "226.531, 83.7917, 37.3794, 0.2288", "226.775, 82.8979, 37.2014, 0.2288", "227.084, 82.0248, 36.96, 0.2288" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "202.593, 172.744, 34.1852, 0.6864", "202.171, 173.542, 35.6518, 0.3974", "201.424, 174.355, 36.0934, 0.2464", "200.87, 175.334, 36.2684, 0.2288", "200.433, 176.389, 36.4174, 0.4116", "200.026, 177.456, 36.5408, 0.498", "199.828, 178.572, 36.7038, 0.2984", "199.428, 179.613, 36.939, 0.6112", "198.692, 180.418, 37.2554, 0.2744", "197.767, 181.027, 37.6202, 0.2288", "196.712, 181.453, 37.8907, 0.498", "195.579, 181.564, 38.0646, 0.459", "194.45, 181.632, 38.2432, 0.234", "193.32, 181.805, 38.3734, 0.4566", "192.205, 181.555, 38.4734, 0.2468" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "202.593, 172.744, 34.1852, 0.6864", "202.149, 172.222, 34.9054, 0.447", "201.399, 171.387, 35.4998, 0.2468", "200.496, 170.687, 35.9372, 0.8274", "199.653, 169.916, 36.239, 0.6972", "198.761, 169.224, 36.3462, 0.6858", "197.811, 168.589, 36.3714, 0.4214", "196.838, 168.006, 36.3381, 0.3734", "195.885, 167.389, 36.3843, 0.2364", "195.221, 166.551, 36.6008, 0.2288" ],
    "parent" : "dend_44",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "164.85, 169.477, 23.1983, 0.2288", "164.683, 168.707, 23.21, 0.2288", "164.442, 167.589, 23.2602, 0.2288", "164.352, 166.452, 23.3355, 0.2288", "164.229, 165.334, 23.4265, 0.2288", "163.607, 164.376, 23.5231, 0.2288", "162.954, 163.451, 23.6656, 0.2288", "162.255, 162.559, 23.8672, 0.2288", "161.478, 161.732, 24.085, 0.2288", "160.739, 160.873, 24.288, 0.2288", "160.129, 159.911, 24.4888, 0.2288", "159.488, 159.034, 24.7996, 0.2288", "158.847, 158.147, 25.1535, 0.2288", "158.198, 157.204, 25.4257, 0.2288", "157.69, 156.182, 25.634, 0.2288", "157.157, 155.184, 25.7905, 0.2288", "156.347, 154.375, 25.9036, 0.2288", "155.538, 153.567, 25.9818, 0.2288", "154.941, 152.609, 26.0817, 0.2288", "154.425, 151.594, 26.2254, 0.2288", "153.909, 150.579, 26.4001, 0.2288", "153.437, 149.539, 26.5714, 0.2288", "152.986, 148.488, 26.7302, 0.2288", "152.535, 147.436, 26.8856, 0.2288", "152.257, 146.329, 27.0463, 0.2288", "152.02, 145.209, 27.2238, 0.2288", "151.822, 144.119, 27.5206, 0.2288", "151.628, 143.032, 27.9194, 0.2288", "151.434, 141.945, 28.3844, 0.2288", "151.239, 140.858, 28.8812, 0.2288", "151.225, 139.774, 29.3462, 0.2288", "151.604, 138.694, 29.6943, 0.2288", "151.982, 137.614, 29.9382, 0.2288", "152.334, 136.527, 30.1073, 0.2288", "152.596, 135.413, 30.2313, 0.2288", "152.372, 134.308, 30.3859, 0.2288", "152.12, 133.202, 30.5782, 0.2288", "151.666, 132.167, 30.7706, 0.2288", "151.219, 131.136, 30.9616, 0.2288", "151.024, 130.027, 31.1945, 0.2288", "150.778, 128.917, 31.404, 0.2288", "150.501, 127.808, 31.5605, 0.2288", "150.134, 126.728, 31.6789, 0.2288", "149.568, 125.748, 31.7733, 0.2288", "148.775, 124.928, 31.8727, 0.2288", "147.963, 124.127, 31.9841, 0.2288", "147.15, 123.328, 32.1096, 0.2288", "146.336, 122.53, 32.2437, 0.2288", "145.312, 122.021, 32.3439, 0.2288", "144.232, 121.644, 32.4131, 0.2288", "143.121, 121.446, 32.4542, 0.2288", "141.977, 121.446, 32.4738, 0.2288", "140.833, 121.445, 32.48, 0.2288", "139.702, 121.558, 32.48, 0.2288", "138.601, 121.529, 32.48, 0.2288", "137.528, 121.135, 32.48, 0.2288", "136.623, 121.781, 32.48, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "164.85, 169.477, 23.1983, 0.2288", "164.416, 169.047, 22.948, 0.2288", "163.669, 168.558, 22.3003, 0.2288", "163.01, 167.939, 22.1631, 0.2288", "162.01, 167.557, 22.0273, 0.2288", "161.115, 166.919, 21.8263, 0.2288", "160.495, 166.467, 21.6328, 0.2288", "159.968, 165.994, 21.2806, 0.2288", "159.143, 165.651, 21.1355, 0.2288", "159.09, 165.37, 20.9964, 0.2288", "158.27, 164.856, 20.7665, 0.2288", "157.289, 164.691, 20.634, 0.2288", "156.201, 164.445, 20.4828, 0.2288", "155.138, 164.039, 20.3316, 0.2288", "154.096, 163.574, 20.1709, 0.2288", "153.222, 163.029, 19.9878, 0.2288", "152.357, 162.523, 19.6843, 0.2288", "151.396, 162.067, 19.4099, 0.2288", "150.349, 161.703, 19.1954, 0.2288", "149.244, 161.418, 19.028, 0.2288", "148.1, 161.418, 18.8961, 0.2288", "146.956, 161.407, 18.7916, 0.2288", "145.879, 161.123, 18.6679, 0.2288", "145.098, 160.316, 18.5114, 0.2288", "144.003, 160.062, 18.3394, 0.2288", "142.876, 159.958, 18.1289, 0.2288", "141.807, 159.86, 17.8461, 0.2288", "140.848, 159.255, 17.6084, 0.2288", "139.872, 158.701, 17.386, 0.2288", "139.203, 157.778, 17.2267, 0.2288", "138.365, 157.046, 17.1416, 0.2288", "137.319, 156.613, 17.0775, 0.2288", "136.181, 156.527, 17.0215, 0.2288", "135.478, 155.792, 16.8344, 0.2288", "134.375, 155.491, 16.6726, 0.2288", "133.31, 155.072, 16.5248, 0.2288", "132.303, 154.537, 16.3876, 0.2288", "131.361, 153.933, 16.2607, 0.2288", "130.562, 153.151, 16.1188, 0.2288", "129.486, 152.937, 15.9342, 0.2288", "128.562, 152.284, 15.7282, 0.2288", "128.014, 151.354, 15.4697, 0.2288", "127.531, 150.405, 15.1735, 0.2288", "126.653, 149.706, 14.9895, 0.2288", "125.71, 149.08, 14.8677, 0.2288", "124.752, 148.467, 14.793, 0.2288", "123.991, 147.647, 14.7498, 0.2288", "123.197, 146.885, 14.6952, 0.2288", "122.286, 146.245, 14.6532, 0.2288", "121.534, 145.401, 14.6149, 0.2288", "120.719, 144.658, 14.5866, 0.2288", "120.12, 143.686, 14.56, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "164.85, 169.477, 23.1983, 0.2288", "164.111, 168.674, 22.96, 0.2288", "163.799, 167.807, 23.588, 0.2288", "163.208, 167.373, 23.9702, 0.2288", "163.134, 166.263, 24.2074, 0.2288", "162.393, 165.992, 24.2262, 0.2288", "161.6, 165.4, 24.1931, 0.2288", "160.809, 164.659, 24.2183, 0.2288", "160.511, 164.308, 24.176, 0.2288", "159.777, 163.468, 24.0808, 0.2288", "159.11, 162.654, 24.1178, 0.2288", "158.207, 162.138, 24.0898, 0.2288", "157.273, 161.585, 24.0436, 0.2288", "156.536, 160.928, 24.1282, 0.2288", "155.686, 160.732, 24.2194, 0.2288", "154.902, 160.095, 24.3124, 0.2288", "154.014, 159.373, 24.3967, 0.2288", "153.128, 158.651, 24.4849, 0.2288", "152.24, 157.93, 24.5602, 0.2288", "151.358, 157.203, 24.6154, 0.2288", "150.473, 156.482, 24.6632, 0.2288", "149.65, 155.688, 24.708, 0.2288", "148.75, 154.987, 24.7534, 0.2288", "148.02, 154.108, 24.8027, 0.2288", "147.455, 153.13, 24.859, 0.2288", "146.794, 152.366, 24.9869, 0.2288", "146.316, 151.432, 25.1255, 0.2288", "145.967, 150.436, 25.2554, 0.2288", "144.977, 149.99, 25.3831, 0.2288", "144.642, 148.908, 25.517, 0.2288", "144.372, 147.801, 25.6698, 0.2288", "144.092, 146.699, 25.8644, 0.2288", "144.025, 145.571, 26.1495, 0.2288", "143.915, 144.438, 26.5048, 0.2288", "143.915, 143.355, 26.9671, 0.2288", "143.535, 142.582, 27.6713, 0.2288", "142.886, 142.036, 28.4819, 0.2288", "142.539, 141.265, 29.3126, 0.2288", "141.461, 140.948, 29.9603, 0.2288", "140.521, 140.331, 30.4506, 0.2288", "139.741, 139.321, 30.8101, 0.2288", "138.965, 138.499, 31.0722, 0.2288", "137.976, 137.994, 31.3656, 0.2288", "136.976, 137.553, 31.7568, 0.2288", "135.994, 137.029, 32.2036, 0.2288", "135.027, 136.44, 32.6564, 0.2288", "134.06, 135.851, 33.1024, 0.2288", "133.093, 135.262, 33.5356, 0.2288", "132.243, 134.548, 33.9195, 0.2288", "131.305, 134.012, 34.2821, 0.2288", "130.258, 133.622, 34.6486, 0.2288", "129.21, 133.23, 35.0098, 0.2288", "128.077, 133.14, 35.56, 0.2288" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "170.514, 149.555, 21.905, 0.449", "170.066, 148.496, 21.0255, 0.2288", "169.697, 147.673, 20.9303, 0.2288", "169.0, 146.977, 20.8706, 0.2288", "168.168, 146.54, 20.7738, 0.2288", "168.077, 145.453, 20.5422, 0.2288", "167.868, 144.376, 20.2152, 0.2288", "167.196, 143.559, 19.9522, 0.2288", "166.295, 143.066, 19.6112, 0.2288", "165.472, 142.542, 19.2086, 0.2288", "165.143, 141.818, 18.8448, 0.2288", "164.747, 140.887, 18.3669, 0.2288", "164.736, 139.785, 17.9085, 0.2288", "164.266, 138.872, 17.5087, 0.2288", "163.821, 137.941, 17.1886, 0.2288", "163.65, 136.828, 16.9198, 0.2288", "163.176, 135.865, 16.5679, 0.2288", "162.894, 134.787, 16.2462, 0.2288", "161.981, 134.452, 15.8572, 0.2288", "161.517, 133.436, 15.4958, 0.2288", "160.982, 132.455, 15.1102, 0.2288", "160.519, 131.616, 14.6516, 0.2288", "160.046, 131.217, 13.44, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "170.514, 149.555, 21.905, 0.449", "170.207, 148.436, 22.0954, 0.3182", "170.112, 147.321, 22.395, 0.2288", "170.105, 146.178, 22.7178, 0.2288", "170.056, 145.039, 23.072, 0.2288", "170.058, 143.987, 23.5771, 0.2288", "170.533, 143.001, 24.1475, 0.2288", "170.57, 141.906, 24.7808, 0.23", "170.565, 140.806, 25.4372, 0.2342", "170.425, 139.801, 26.1612, 0.2288", "169.756, 138.969, 26.8755, 0.2288", "169.041, 138.182, 27.5117, 0.2288", "168.583, 137.134, 27.9826, 0.2288", "167.98, 136.171, 28.3203, 0.2288", "167.357, 135.349, 28.5986, 0.2288", "166.379, 134.871, 28.8344, 0.2288", "165.732, 133.972, 29.0609, 0.2288", "165.005, 133.107, 29.288, 0.2288", "164.417, 132.137, 29.4935, 0.2288", "163.889, 131.144, 29.7119, 0.2288", "163.134, 130.314, 29.9166, 0.2288", "162.622, 129.852, 30.1109, 0.2288", "161.802, 129.064, 30.3092, 0.2288", "161.273, 128.055, 30.5603, 0.2288", "160.838, 127.301, 31.0677, 0.2288", "160.355, 126.715, 31.8447, 0.2288", "159.302, 126.349, 32.5153, 0.2288", "158.348, 126.077, 33.2021, 0.2288", "157.595, 125.783, 33.9833, 0.2288", "156.654, 126.155, 34.5439, 0.2288", "155.725, 125.488, 34.9017, 0.2288", "154.805, 124.807, 35.1106, 0.2288", "153.868, 124.155, 35.2335, 0.2288", "152.865, 123.605, 35.28, 0.2288", "151.861, 123.055, 35.28, 0.2288", "150.858, 122.506, 35.28, 0.2288", "150.197, 121.627, 35.28, 0.2288", "149.996, 120.538, 35.28, 0.2288", "150.049, 119.395, 35.28, 0.2288" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "199.011, 197.647, 25.6197, 0.4576", "197.849, 198.434, 25.7449, 0.3954", "197.345, 199.395, 25.9406, 0.4414", "196.776, 200.375, 26.089, 0.3648", "196.409, 201.447, 26.1674, 0.4366", "196.117, 202.525, 26.2875, 0.4576", "195.529, 203.49, 26.3735, 0.4576" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "199.011, 197.647, 25.6197, 0.4576", "198.242, 198.073, 24.8038, 0.4576", "197.502, 198.919, 24.1962, 0.3044", "196.56, 199.536, 23.931, 0.4176", "195.487, 199.905, 23.6312, 0.3224", "194.419, 200.304, 23.3234, 0.2294", "193.54, 201.034, 23.0465, 0.4342", "192.571, 201.636, 22.7769, 0.2786" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "212.852, 167.999, 17.9931, 0.4576", "212.898, 167.096, 19.5779, 0.2288", "213.127, 166.092, 19.8125, 0.2288", "213.432, 165.207, 19.9469, 0.2288", "213.818, 164.286, 20.1401, 0.2288", "214.473, 163.531, 20.4557, 0.2288", "215.271, 162.921, 20.629, 0.2288", "215.491, 161.861, 20.697, 0.2288", "215.644, 161.025, 20.6794, 0.2288", "216.138, 160.316, 20.8314, 0.2288", "216.604, 159.519, 20.7444, 0.2288", "216.504, 158.689, 20.4551, 0.2288", "216.645, 157.587, 20.2401, 0.2288", "216.75, 157.009, 20.391, 0.2288", "216.833, 156.132, 20.5229, 0.2288", "217.111, 155.12, 20.5383, 0.2288", "217.025, 154.114, 20.6942, 0.2288", "217.129, 153.567, 21.0748, 0.2288", "217.063, 152.654, 21.2814, 0.2288", "217.462, 151.707, 21.4998, 0.2288", "217.309, 151.209, 21.8809, 0.2288", "217.065, 150.268, 22.2348, 0.2288", "217.703, 149.655, 22.7438, 0.2288", "218.077, 149.001, 23.1465, 0.2288", "218.287, 147.911, 23.5099, 0.2288", "218.177, 147.02, 23.7854, 0.2288", "218.164, 146.153, 24.054, 0.2288", "217.945, 145.105, 24.1049, 0.2288", "217.946, 144.113, 24.0212, 0.2288", "218.034, 142.987, 24.001, 0.2288", "218.275, 141.895, 24.0167, 0.2288", "218.3, 140.759, 24.0484, 0.2288", "218.695, 139.738, 24.1486, 0.2288", "219.234, 138.747, 24.2206, 0.2288", "219.745, 137.731, 24.2704, 0.2288", "220.464, 136.859, 24.2609, 0.2288", "221.107, 135.94, 24.1685, 0.2288", "221.593, 135.08, 23.9767, 0.2288", "222.269, 134.521, 23.7446, 0.2288", "222.685, 133.626, 23.543, 0.2288", "223.714, 133.21, 23.3646, 0.2288", "224.224, 132.472, 23.1664, 0.2288", "224.224, 131.328, 22.9964, 0.2288", "224.706, 130.473, 22.7601, 0.2288", "225.423, 129.595, 22.5476, 0.2288", "226.136, 129.043, 22.3054, 0.2288", "227.251, 129.043, 22.0167, 0.2288", "227.808, 128.28, 21.7832, 0.2288", "228.342, 127.713, 21.4354, 0.2288", "228.8, 126.755, 21.1848, 0.2288", "229.693, 126.056, 21.0244, 0.2288", "230.351, 125.166, 20.953, 0.2288", "230.958, 124.229, 20.9213, 0.2288", "231.758, 123.43, 20.9096, 0.2288", "232.249, 122.494, 20.9126, 0.2288", "233.27, 122.21, 20.8972, 0.2288", "233.916, 121.328, 20.8664, 0.2288", "234.557, 120.477, 20.8256, 0.2288", "235.502, 119.971, 20.7234, 0.2288", "236.237, 119.166, 20.6167, 0.2288", "237.266, 118.747, 20.44, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "212.852, 167.999, 17.9931, 0.4576", "212.473, 167.594, 17.5683, 0.3654", "211.653, 166.956, 17.129, 0.2676", "210.561, 166.723, 16.7611, 0.3712", "209.747, 166.087, 16.3436, 0.2912", "209.131, 165.204, 16.014, 0.3574", "208.314, 164.451, 15.8934, 0.4404", "207.52, 163.645, 15.8525, 0.4102", "206.897, 162.695, 15.85, 0.4264", "206.29, 161.734, 15.9006, 0.4576", "205.58, 160.839, 15.9785, 0.4576", "204.826, 159.98, 16.0269, 0.6088", "204.08, 159.118, 16.0152, 0.2564", "203.706, 158.04, 15.9902, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "192.205, 181.555, 38.4734, 0.2468", "192.168, 181.287, 38.7218, 0.241", "192.112, 180.187, 39.314, 0.2288", "191.97, 179.101, 39.571, 0.2288", "191.996, 177.986, 39.8594, 0.2288", "191.474, 176.993, 40.1475, 0.2288", "190.894, 176.016, 40.4292, 0.2288", "190.417, 174.995, 40.6874, 0.2288", "190.168, 173.879, 40.882, 0.2288", "189.724, 172.83, 41.0287, 0.2288", "189.212, 171.807, 41.1415, 0.2288", "188.554, 170.957, 41.2812, 0.2288", "187.77, 170.219, 41.72, 0.2288" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "192.205, 181.555, 38.4734, 0.2468", "191.76, 181.514, 38.5958, 0.239", "190.66, 181.343, 38.7453, 0.2288", "189.661, 181.396, 38.7355, 0.2288", "188.983, 181.398, 38.773, 0.2288", "187.999, 181.667, 38.8528, 0.2288", "186.871, 181.716, 38.9007, 0.2288", "185.918, 182.01, 38.8178, 0.2288", "184.898, 182.038, 38.8315, 0.2288", "183.85, 182.125, 38.7713, 0.2288", "182.881, 181.799, 38.724, 0.2288", "181.77, 181.667, 38.71, 0.2288", "181.217, 181.485, 38.4306, 0.2288", "180.267, 181.553, 38.2995, 0.2288", "179.418, 181.763, 38.3816, 0.2288", "178.445, 181.557, 38.4625, 0.2288", "177.386, 181.438, 38.3922, 0.2288", "176.564, 180.984, 38.2295, 0.2288", "175.515, 180.878, 38.1732, 0.2288", "174.588, 181.027, 37.9982, 0.2288", "173.497, 181.095, 37.926, 0.2288", "172.48, 180.84, 37.8969, 0.2288", "171.677, 180.63, 38.0464, 0.2288", "170.643, 180.834, 38.1422, 0.2288", "169.755, 181.391, 38.1338, 0.2288", "168.842, 181.826, 38.0313, 0.2288", "167.786, 182.044, 37.8748, 0.2288", "166.904, 182.468, 37.7434, 0.2288", "166.085, 183.111, 37.6158, 0.2288", "165.292, 183.9, 37.518, 0.2288", "164.702, 183.841, 37.214, 0.2288", "163.603, 183.841, 37.0938, 0.2288", "162.65, 184.203, 37.0082, 0.2288", "161.55, 184.298, 37.0325, 0.2288", "160.475, 184.409, 37.1028, 0.2288", "159.426, 184.587, 37.2882, 0.2288", "158.439, 184.715, 37.4973, 0.2288", "157.359, 184.488, 37.5906, 0.2288", "156.228, 184.384, 37.7068, 0.2288", "155.134, 184.184, 37.7745, 0.2288", "154.041, 184.128, 37.7955, 0.2288", "152.971, 183.951, 37.8462, 0.2288", "152.413, 183.18, 38.0324, 0.2288", "151.626, 182.926, 38.4146, 0.2288", "150.66, 183.097, 38.8408, 0.2288", "149.548, 182.91, 39.2879, 0.2288", "148.467, 182.625, 39.6892, 0.2288", "147.547, 182.748, 40.0924, 0.2288", "146.538, 183.059, 40.511, 0.2288", "145.453, 182.892, 40.9436, 0.2288", "144.358, 182.728, 41.3675, 0.2288", "143.223, 182.582, 42.0, 0.2288" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "195.221, 166.551, 36.6008, 0.2288", "195.798, 166.101, 38.239, 0.2288", "196.533, 165.386, 39.9328, 0.2288", "197.032, 164.679, 40.7128, 0.2288", "197.27, 163.838, 41.6125, 0.2288", "197.583, 162.755, 42.3758, 0.2288", "198.063, 161.773, 43.0881, 0.2288", "198.49, 160.844, 43.8427, 0.2288", "199.035, 159.865, 44.4321, 0.2288", "199.742, 159.019, 44.9484, 0.2288", "199.999, 158.015, 45.5874, 0.2288", "200.19, 156.957, 46.2146, 0.2288", "200.982, 156.131, 46.7928, 0.2288", "201.572, 155.33, 47.4323, 0.2288", "201.654, 154.576, 48.365, 0.2288", "202.114, 153.68, 49.373, 0.2288", "202.618, 152.781, 50.3583, 0.2288", "203.474, 152.55, 51.2898, 0.2288", "204.424, 152.699, 52.2138, 0.2288", "205.267, 151.941, 53.48, 0.2288" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "195.221, 166.551, 36.6008, 0.2288", "194.867, 166.16, 36.8264, 0.2318", "193.979, 165.483, 37.0748, 0.4522", "193.381, 165.078, 37.1375, 0.2288", "192.536, 165.059, 37.3537, 0.2288", "191.658, 164.698, 37.5774, 0.2288", "191.379, 164.291, 37.791, 0.2288" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "195.529, 203.49, 26.3735, 0.4576", "195.083, 202.977, 27.2653, 0.292", "194.313, 202.155, 28.4068, 0.2288", "193.625, 202.408, 28.9895, 0.2288", "193.589, 203.451, 29.5971, 0.2288", "193.285, 204.086, 30.4699, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "195.529, 203.49, 26.3735, 0.4576", "194.999, 204.479, 26.3354, 0.2288" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "192.571, 201.636, 22.7769, 0.2786", "192.391, 201.719, 22.7046, 0.2702", "191.506, 202.132, 21.2864, 0.2288", "190.667, 201.816, 20.769, 0.2288", "190.018, 201.23, 20.1796, 0.2288", "190.4, 200.834, 19.3791, 0.2288", "190.704, 199.746, 18.7118, 0.2288", "191.448, 198.937, 18.128, 0.2288", "191.963, 197.95, 17.6341, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "192.571, 201.636, 22.7769, 0.2786", "192.173, 202.118, 22.4196, 0.5564", "191.556, 203.015, 22.0427, 0.3442", "190.768, 203.828, 21.7638, 0.5798", "189.98, 204.651, 21.5718, 0.531", "189.237, 205.521, 21.4147, 0.4316", "188.593, 206.463, 21.2621, 0.4518", "187.96, 207.407, 21.0627, 0.7018", "187.182, 208.211, 20.7738, 0.7024", "186.474, 209.096, 20.4347, 0.682", "185.853, 209.933, 19.9528, 0.492", "184.992, 210.617, 19.4401, 0.5116", "183.995, 211.169, 19.0053, 0.4752", "182.871, 211.289, 18.6698, 0.4698", "181.729, 211.298, 18.3918, 0.4592", "180.886, 211.505, 17.9404, 0.2288" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "203.706, 158.04, 15.9902, 0.2288", "203.156, 158.007, 15.96, 0.2288", "202.014, 157.934, 16.3593, 0.2288", "201.032, 157.426, 16.5738, 0.2288", "200.205, 156.738, 16.8188, 0.2288", "199.094, 156.532, 17.0534, 0.2288", "198.203, 155.938, 17.3928, 0.2288", "197.744, 155.013, 17.6884, 0.2288", "197.105, 154.175, 18.0418, 0.2288", "196.338, 153.33, 18.2997, 0.2288", "195.84, 152.495, 18.6894, 0.2288", "195.657, 152.461, 18.8762, 0.2288", "195.146, 151.585, 18.846, 0.2288", "194.831, 150.524, 18.73, 0.2288", "194.461, 149.809, 18.6665, 0.2288", "194.361, 148.764, 18.73, 0.2288", "194.331, 147.99, 18.9232, 0.2288", "194.066, 146.906, 19.0316, 0.2288", "193.809, 145.969, 19.2464, 0.2288", "193.565, 144.969, 19.3474, 0.2288", "193.335, 143.857, 19.3732, 0.2288", "192.651, 142.973, 19.402, 0.2288", "191.836, 142.225, 19.4124, 0.2288", "191.162, 141.398, 19.6, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "203.706, 158.04, 15.9902, 0.2288", "203.823, 156.94, 15.962, 0.2288", "203.346, 155.904, 15.9289, 0.2288", "202.652, 154.996, 15.8953, 0.4534", "201.786, 154.257, 15.8458, 0.4576", "200.773, 153.738, 15.7914, 0.4576", "199.877, 153.331, 15.7604, 0.2642", "198.817, 152.907, 15.7839, 0.2288", "197.816, 152.363, 15.8945, 0.4246", "197.053, 151.772, 16.2523, 0.2294", "196.166, 151.051, 16.5612, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "191.379, 164.291, 37.791, 0.2288", "190.636, 164.393, 38.332, 0.2288", "189.668, 164.664, 37.847, 0.2288", "188.683, 164.665, 37.5687, 0.2288", "188.11, 164.175, 37.6541, 0.2288", "187.282, 164.106, 37.6379, 0.2288", "186.362, 164.434, 37.5822, 0.2288", "185.241, 164.447, 37.5892, 0.2288", "184.281, 164.331, 37.6818, 0.2288", "183.331, 164.221, 37.6264, 0.2288", "182.454, 164.052, 37.6314, 0.2288", "181.636, 164.417, 37.7236, 0.2288", "180.528, 164.393, 37.7278, 0.2288", "179.401, 164.393, 37.6452, 0.2288", "178.327, 164.475, 37.4657, 0.2288", "177.597, 164.427, 37.2341, 0.2288", "176.676, 164.507, 37.2296, 0.2288", "175.736, 164.467, 37.2372, 0.2288", "174.918, 164.507, 37.52, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "191.379, 164.291, 37.791, 0.2288", "190.98, 164.383, 37.963, 0.2288", "190.362, 163.656, 38.0803, 0.2288", "189.688, 162.797, 38.2043, 0.2288", "188.763, 162.297, 38.3967, 0.2288", "188.302, 161.368, 38.633, 0.2288" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "193.285, 204.086, 30.4699, 0.2288", "193.114, 204.877, 31.2276, 0.2288", "193.667, 205.756, 31.8287, 0.2288", "194.597, 206.298, 32.3677, 0.2288", "195.338, 207.022, 32.9011, 0.2288", "196.191, 207.771, 33.3007, 0.2288", "196.106, 208.86, 33.5714, 0.2288", "196.452, 209.911, 33.8587, 0.2288", "196.418, 210.989, 34.1085, 0.2288", "195.825, 211.892, 34.2737, 0.2288", "194.914, 212.583, 34.3776, 0.2288", "194.211, 213.375, 34.4523, 0.2288", "193.987, 214.498, 34.505, 0.2288", "193.725, 215.611, 34.5428, 0.2288", "193.355, 216.691, 34.5853, 0.2288", "192.742, 217.59, 34.6419, 0.2288", "191.774, 218.195, 34.7144, 0.2288", "190.876, 218.899, 34.8127, 0.2288", "190.087, 219.658, 35.0398, 0.2288", "189.578, 220.682, 35.2453, 0.2288", "188.536, 221.1, 35.4323, 0.2288", "187.718, 221.815, 35.6507, 0.2288", "187.045, 222.717, 35.915, 0.2288", "186.478, 223.709, 36.1407, 0.2288", "185.89, 224.689, 36.3401, 0.2288", "185.167, 225.575, 36.547, 0.2288", "184.652, 226.557, 36.7721, 0.2288", "184.344, 227.574, 37.0471, 0.2288", "183.456, 228.259, 37.4394, 0.2288", "182.564, 228.798, 38.0192, 0.2288", "181.6, 229.269, 38.6904, 0.2288", "180.531, 229.587, 39.3929, 0.2288", "179.465, 229.683, 40.164, 0.2288", "178.696, 230.488, 40.9318, 0.2288", "177.964, 231.047, 41.8239, 0.2288", "177.249, 231.44, 42.8439, 0.2288", "176.535, 231.833, 45.36, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "193.285, 204.086, 30.4699, 0.2288", "193.014, 203.923, 32.0214, 0.2288", "192.304, 203.117, 32.6836, 0.2288", "192.622, 202.029, 32.9204, 0.2288", "191.776, 201.513, 33.2161, 0.2288", "190.801, 201.874, 33.679, 0.2288", "189.923, 201.316, 34.1121, 0.2288", "189.277, 200.638, 34.6797, 0.2288", "188.251, 200.273, 35.1498, 0.2288" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "194.999, 204.479, 26.3354, 0.2288", "194.389, 205.01, 26.2405, 0.2288", "193.559, 205.796, 26.1674, 0.2428", "192.599, 206.395, 26.056, 0.5952", "191.535, 206.801, 25.9392, 0.4008", "190.47, 207.215, 25.8919, 0.2348", "189.513, 207.839, 25.8894, 0.3886", "188.548, 208.453, 25.9188, 0.234", "187.615, 209.099, 26.0039, 0.498", "186.703, 209.788, 26.0991, 0.4144", "185.834, 210.53, 26.1744, 0.616", "184.785, 210.98, 26.2377, 0.4602", "183.753, 211.454, 26.2167, 0.4836", "182.714, 211.932, 26.1671, 0.4578", "181.623, 212.265, 26.1307, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "194.999, 204.479, 26.3354, 0.2288", "194.938, 204.723, 26.3525, 0.2288", "195.003, 205.861, 26.3368, 0.316", "195.274, 206.967, 26.3032, 0.454", "195.284, 208.109, 26.2584, 0.2558", "195.301, 209.25, 26.248, 0.3604", "195.409, 210.386, 26.2531, 0.4702", "195.758, 211.475, 26.2466, 0.4578", "196.09, 212.568, 26.1873, 0.2726", "196.701, 213.535, 26.0996, 0.6854", "197.562, 214.286, 25.9834, 0.2288" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "191.963, 197.95, 17.6341, 0.2288", "191.85, 197.343, 17.0047, 0.2288", "191.258, 196.467, 16.3878, 0.2288", "190.674, 195.639, 15.9536, 0.2288", "190.514, 194.558, 15.524, 0.2288", "189.904, 193.736, 15.174, 0.2288", "189.943, 193.256, 14.6143, 0.2288", "189.77, 193.208, 13.8491, 0.2288", "189.5, 192.405, 13.2602, 0.2288", "189.371, 191.427, 12.7355, 0.2288", "190.115, 191.005, 12.5902, 0.2288", "190.133, 190.239, 12.7842, 0.2288", "190.133, 189.333, 12.8657, 0.2288", "189.848, 188.313, 12.9422, 0.2288", "189.092, 187.718, 13.1466, 0.2288", "188.876, 186.702, 13.211, 0.2288", "188.659, 185.823, 13.3638, 0.2288", "188.424, 184.981, 13.2964, 0.2288", "188.42, 183.959, 13.1886, 0.2288", "187.912, 183.264, 13.071, 0.2288", "187.387, 182.588, 13.207, 0.2288", "187.163, 181.732, 13.2406, 0.2288", "187.344, 180.673, 13.2331, 0.2288", "187.688, 179.614, 13.2474, 0.2288", "187.502, 178.781, 13.2028, 0.2288", "187.845, 177.881, 13.2244, 0.2288", "188.137, 177.063, 13.1267, 0.2288", "187.792, 176.169, 13.0063, 0.2288", "187.856, 175.51, 13.0242, 0.2288", "187.845, 174.741, 13.2815, 0.2288", "187.611, 174.117, 13.4532, 0.2288", "186.95, 174.221, 13.2969, 0.2288", "186.975, 173.648, 12.9478, 0.2288", "186.44, 172.989, 12.8444, 0.2288", "186.239, 172.029, 12.668, 0.2288", "186.117, 171.267, 12.3441, 0.2288", "186.004, 170.338, 12.2021, 0.2288", "185.731, 169.442, 12.0372, 0.2288", "186.129, 168.514, 12.0117, 0.2288", "185.641, 168.008, 11.9434, 0.2288", "185.671, 167.024, 12.04, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "191.963, 197.95, 17.6341, 0.2288", "192.445, 197.722, 18.1695, 0.2288", "192.922, 197.312, 16.9386, 0.2288", "193.863, 196.798, 16.4909, 0.2288", "194.99, 196.628, 16.1277, 0.2288", "196.084, 196.326, 15.8388, 0.2288", "196.712, 196.311, 15.3908, 0.2288", "197.744, 196.518, 15.0634, 0.2288", "198.183, 196.718, 15.1612, 0.2288", "199.225, 196.539, 15.1393, 0.2288", "199.939, 196.465, 14.861, 0.2288", "200.77, 196.156, 14.621, 0.2288", "201.658, 195.816, 14.4564, 0.2288", "202.37, 195.188, 14.2993, 0.2288", "203.076, 194.661, 14.0468, 0.2288", "203.815, 193.826, 13.8628, 0.2288", "204.624, 193.304, 13.7427, 0.2288", "205.691, 192.993, 13.44, 0.2288" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "180.886, 211.505, 17.9404, 0.2288", "180.554, 212.364, 16.7734, 0.661", "180.006, 213.365, 16.5511, 0.4938", "179.591, 214.428, 16.4623, 0.2776", "179.147, 215.482, 16.3607, 0.296", "178.815, 216.573, 16.2324, 0.6048", "178.551, 217.684, 16.1106, 0.4174", "178.618, 218.814, 15.9765, 0.2504", "178.807, 219.92, 15.7587, 0.6864", "178.805, 221.206, 15.3838, 0.4656", "178.791, 222.343, 15.0298, 0.2666", "178.702, 223.483, 14.7655, 0.5238", "178.321, 224.56, 14.544, 0.2288", "178.227, 224.875, 14.3592, 0.5494", "177.785, 225.911, 14.1935, 0.3272", "177.645, 227.02, 14.0143, 0.2658", "177.501, 228.109, 13.8146, 0.3586", "177.156, 229.197, 13.6909, 0.3844", "177.033, 230.314, 13.6643, 0.401", "177.216, 231.436, 13.6976, 0.3892", "177.355, 232.552, 13.7421, 0.3784", "177.105, 233.638, 13.8216, 0.4494", "176.673, 234.668, 13.9874, 0.4", "176.519, 235.726, 14.2652, 0.2288", "176.518, 236.819, 14.572, 0.2288", "176.477, 237.928, 14.7319, 0.3836", "176.173, 238.946, 14.6927, 0.504", "175.896, 240.051, 14.632, 0.241", "175.541, 241.138, 14.5144, 0.2288", "175.692, 242.267, 14.3578, 0.2288", "175.947, 242.596, 14.1114, 0.2288", "175.49, 243.266, 13.8754, 0.2288", "175.194, 244.273, 13.6564, 0.2288", "174.804, 245.054, 13.6114, 0.2288", "174.574, 245.629, 13.6461, 0.2288", "174.539, 246.484, 13.4546, 0.2288", "174.292, 247.441, 13.4053, 0.2288", "174.002, 248.251, 13.3367, 0.2288", "174.171, 249.233, 13.2012, 0.2288", "174.002, 250.029, 13.1947, 0.2288", "174.041, 251.029, 13.0794, 0.2288", "173.549, 252.012, 12.9847, 0.2288", "173.047, 252.865, 12.8747, 0.2288", "172.622, 253.795, 12.8596, 0.2288", "172.65, 254.696, 12.9301, 0.2288", "172.94, 255.706, 12.9671, 0.2288", "173.202, 256.714, 13.44, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "180.886, 211.505, 17.9404, 0.2288", "179.76, 210.999, 17.6235, 0.2288", "178.792, 210.414, 17.4616, 0.2288", "177.854, 209.76, 17.3628, 0.5854", "176.994, 209.025, 17.3558, 0.2354", "176.182, 208.224, 17.3292, 0.608", "175.344, 207.452, 17.2757, 0.4598", "174.389, 206.824, 17.1758, 0.231", "173.587, 206.052, 16.973, 0.6864", "173.19, 205.602, 16.7818, 0.4204", "172.538, 204.664, 16.6054, 0.2294", "171.785, 203.804, 16.4931, 0.2398", "171.335, 203.313, 16.4189, 0.2334", "170.702, 202.382, 16.3932, 0.3664", "170.09, 201.431, 16.4052, 0.3164", "169.359, 200.577, 16.3433, 0.3792", "168.531, 200.382, 16.1101, 0.2288", "167.958, 199.784, 15.7447, 0.2288", "168.384, 199.84, 15.2264, 0.2288", "168.319, 199.003, 15.0825, 0.2288", "167.485, 198.827, 15.2127, 0.2288", "166.913, 198.5, 15.6282, 0.2288", "166.387, 197.625, 15.9407, 0.2288", "166.057, 196.997, 16.1633, 0.2288", "165.208, 196.336, 16.3139, 0.2288", "164.361, 195.765, 16.3094, 0.2288", "163.451, 195.237, 16.1641, 0.2288", "162.447, 194.853, 15.9216, 0.2288", "161.838, 194.178, 15.6279, 0.2288", "161.328, 193.619, 15.2088, 0.2288", "160.536, 193.328, 14.9066, 0.2288", "160.017, 192.849, 14.8686, 0.2288", "159.135, 192.421, 14.8106, 0.2288", "158.716, 191.833, 14.546, 0.2288", "158.159, 191.089, 14.411, 0.2288", "157.569, 190.247, 14.2671, 0.2288", "157.252, 189.587, 14.0563, 0.2288", "156.344, 189.014, 13.8009, 0.2288", "155.315, 188.535, 13.6016, 0.2288", "154.597, 187.983, 13.428, 0.2288", "154.051, 187.562, 13.246, 0.2288", "153.036, 187.3, 13.1631, 0.2288", "152.053, 187.152, 13.251, 0.2288", "151.268, 187.044, 13.4534, 0.2288", "150.394, 186.656, 13.6044, 0.2288", "149.872, 186.124, 13.9488, 0.2288", "148.936, 185.58, 14.2327, 0.2288", "148.221, 184.766, 14.4194, 0.2288", "147.28, 184.428, 14.5894, 0.2288", "146.351, 183.967, 14.7795, 0.2288", "145.258, 183.717, 15.0553, 0.2288", "144.677, 183.185, 15.5669, 0.2288", "143.987, 182.307, 16.007, 0.2288", "143.488, 181.37, 16.4993, 0.2288", "142.497, 181.062, 16.9898, 0.2288", "141.687, 180.752, 17.4978, 0.2288", "140.952, 180.211, 17.9575, 0.2288", "140.71, 179.356, 18.4369, 0.2288", "139.702, 179.274, 18.9283, 0.2288", "139.759, 179.074, 20.16, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "196.166, 151.051, 16.5612, 0.2288", "196.294, 151.047, 15.2102, 0.4576", "196.468, 151.746, 14.3942, 0.2288", "196.396, 152.768, 14.0493, 0.2288", "197.065, 153.452, 13.5447, 0.2288", "197.936, 154.032, 13.0113, 0.2288", "198.463, 154.98, 12.614, 0.2924", "198.064, 155.879, 12.4334, 0.2714", "197.244, 156.661, 12.3763, 0.2288", "196.355, 157.371, 12.392, 0.2288", "196.314, 158.277, 12.4768, 0.2288", "196.969, 159.19, 12.4765, 0.2288", "196.551, 159.818, 12.2536, 0.2288", "195.47, 160.098, 11.993, 0.2288", "194.699, 160.869, 11.732, 0.2288", "194.319, 161.947, 11.4968, 0.2288", "194.301, 163.003, 11.284, 0.2288", "194.435, 163.962, 11.0384, 0.2288", "193.804, 164.88, 10.8228, 0.2288", "194.088, 165.698, 10.7668, 0.4172", "194.431, 166.763, 10.6649, 0.233", "194.823, 167.825, 10.36, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "196.166, 151.051, 16.5612, 0.2288", "195.076, 150.612, 16.9098, 0.3836", "194.536, 149.715, 17.2976, 0.2446", "194.311, 148.638, 17.6355, 0.276", "193.884, 147.676, 17.8802, 0.2784", "193.137, 147.551, 17.8248, 0.383", "192.381, 148.157, 17.4678, 0.2612", "191.435, 147.964, 16.9285, 0.4794", "190.674, 147.276, 16.3464, 0.4148", "190.129, 146.62, 15.9709, 0.2288", "189.252, 146.235, 15.6783, 0.2288", "188.232, 146.169, 15.4857, 0.2288", "187.591, 145.771, 15.2477, 0.2288", "186.967, 145.422, 15.202, 0.2288", "186.148, 145.011, 15.1147, 0.2288", "185.268, 144.544, 15.0335, 0.2288", "184.584, 143.992, 14.8585, 0.2288", "183.644, 143.445, 14.7652, 0.2288", "182.926, 142.768, 14.5345, 0.2288", "182.474, 142.682, 14.4365, 0.2288", "181.954, 141.847, 14.2831, 0.2288", "181.353, 141.004, 14.0904, 0.2288", "181.133, 139.911, 13.9406, 0.2288", "180.939, 139.624, 13.8054, 0.2288", "180.521, 138.576, 13.6615, 0.2288", "179.617, 137.966, 13.491, 0.2288", "178.916, 137.455, 13.3871, 0.2288", "178.083, 136.822, 13.2577, 0.2288", "177.434, 136.571, 13.046, 0.2288", "177.434, 135.435, 12.8346, 0.2288", "177.282, 134.312, 12.6006, 0.2288", "176.406, 133.732, 12.3446, 0.2288", "175.868, 132.744, 12.0982, 0.2288", "175.593, 131.677, 11.8479, 0.2288", "175.065, 130.779, 11.6043, 0.2288", "174.815, 129.715, 11.2946, 0.2288", "174.526, 128.669, 10.9085, 0.2288", "173.938, 127.79, 10.08, 0.2288" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "188.302, 161.368, 38.633, 0.2288", "188.06, 161.41, 40.2702, 0.2288", "187.665, 161.135, 41.8883, 0.2288", "186.769, 160.783, 42.4824, 0.2288", "185.641, 160.618, 42.9971, 0.2288", "184.721, 160.51, 43.5859, 0.2288", "183.779, 160.618, 44.2439, 0.2288", "182.636, 160.618, 44.7706, 0.2288", "182.03, 160.032, 45.0428, 0.2288", "181.119, 159.43, 45.3418, 0.2288", "180.728, 158.522, 45.8366, 0.2288", "180.092, 157.849, 46.4481, 0.2288", "179.951, 156.831, 47.0658, 0.2288", "180.238, 156.059, 47.7688, 0.2288", "179.648, 155.16, 48.3918, 0.2288", "179.265, 154.289, 48.9485, 0.2288", "178.815, 153.497, 49.4802, 0.2288", "178.573, 152.521, 49.7722, 0.2288", "178.04, 151.618, 50.1035, 0.2288", "177.774, 151.039, 50.7665, 0.2288", "177.432, 150.069, 51.4394, 0.2288", "177.253, 149.264, 52.2304, 0.2288", "176.988, 148.347, 52.9973, 0.2288", "176.86, 147.378, 53.6091, 0.2288", "176.977, 146.432, 54.6, 0.2288" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "188.302, 161.368, 38.633, 0.2288", "187.693, 160.766, 38.6806, 0.2288", "186.853, 160.503, 38.5498, 0.2288", "186.07, 159.805, 38.3681, 0.2288", "185.551, 159.366, 38.456, 0.2288", "184.769, 158.809, 38.6092, 0.2288", "184.154, 158.329, 38.554, 0.2288", "183.452, 157.909, 38.6848, 0.2288", "182.514, 157.862, 38.7461, 0.2288", "181.704, 157.453, 38.8444, 0.2288", "180.763, 157.529, 38.6529, 0.2288", "179.856, 157.162, 38.437, 0.2288", "179.038, 156.728, 38.4418, 0.2288", "178.202, 156.945, 38.374, 0.2288", "177.285, 156.876, 38.4796, 0.2288", "176.637, 156.945, 38.3684, 0.2288", "175.705, 156.624, 38.3872, 0.2288", "174.811, 156.842, 38.458, 0.2288", "173.788, 157.274, 38.4359, 0.2288", "172.698, 157.358, 38.3466, 0.2288", "171.869, 157.194, 38.2234, 0.2288", "170.907, 157.302, 38.2682, 0.2288", "169.819, 157.247, 38.2642, 0.2288", "168.788, 156.957, 38.1945, 0.2288", "167.781, 156.503, 38.2161, 0.2288", "166.825, 156.044, 38.2757, 0.2288", "166.176, 155.641, 38.32, 0.2288", "165.188, 155.417, 38.3502, 0.2288", "164.253, 154.821, 38.4104, 0.2288", "163.321, 154.342, 38.4471, 0.2288", "162.303, 153.819, 38.4448, 0.2288", "161.286, 153.296, 38.411, 0.2288", "160.353, 152.661, 38.3435, 0.2288", "159.387, 152.065, 38.2329, 0.2288", "158.49, 151.385, 38.0722, 0.2288", "157.554, 150.783, 37.8546, 0.2288", "156.818, 149.92, 37.5458, 0.2288", "156.074, 149.172, 37.0521, 0.2288", "155.252, 148.477, 36.4185, 0.2288", "154.294, 148.148, 35.7056, 0.2288", "153.15, 148.148, 35.0375, 0.2288", "152.436, 148.255, 34.153, 0.2288", "151.752, 148.777, 33.1262, 0.2288", "151.1, 149.609, 32.2269, 0.2288", "149.96, 149.635, 31.4675, 0.2288", "148.998, 149.635, 30.6502, 0.2288", "148.042, 149.771, 29.8298, 0.2288", "147.514, 150.587, 28.994, 0.2288", "147.346, 151.596, 28.1968, 0.2288", "146.664, 152.079, 27.3288, 0.2288", "145.665, 152.357, 26.6347, 0.2288", "144.634, 152.842, 26.1265, 0.2288", "143.602, 153.296, 25.7547, 0.2288", "142.733, 153.843, 25.3882, 0.2288", "141.676, 153.868, 25.0068, 0.2288", "140.543, 153.868, 24.6814, 0.2288", "139.403, 153.874, 24.4191, 0.2288", "138.767, 154.554, 24.08, 0.2288" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "188.251, 200.273, 35.1498, 0.2288", "188.389, 200.491, 36.6397, 0.2288", "188.769, 201.087, 38.7173, 0.2288", "189.149, 201.684, 39.6942, 0.2288", "188.698, 202.377, 40.5751, 0.2288", "188.933, 203.482, 41.2972, 0.2288", "188.348, 204.344, 41.9961, 0.2288", "187.25, 204.453, 42.5267, 0.2288", "186.692, 205.208, 43.0396, 0.2288", "186.433, 206.286, 43.5361, 0.2288", "185.73, 207.074, 43.9779, 0.2288", "185.512, 208.162, 44.4248, 0.2288", "185.185, 209.214, 44.7566, 0.2288", "184.472, 210.076, 45.0022, 0.2288", "184.221, 211.117, 45.64, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "188.251, 200.273, 35.1498, 0.2288", "187.791, 200.011, 35.4953, 0.2288", "187.203, 199.031, 35.7283, 0.2288", "186.647, 198.031, 35.8697, 0.2288", "186.093, 197.03, 35.9593, 0.2288", "185.493, 196.058, 36.0091, 0.2288", "184.762, 195.187, 36.0903, 0.2288", "183.996, 194.347, 36.2076, 0.2288", "183.231, 193.505, 36.3437, 0.2288", "182.522, 192.611, 36.4395, 0.2288", "181.649, 191.872, 36.4935, 0.2288", "180.82, 191.083, 36.5064, 0.2288", "180.075, 190.222, 36.4795, 0.2288", "179.392, 189.303, 36.4204, 0.2288", "178.631, 188.463, 36.3163, 0.2288", "177.848, 187.701, 36.1054, 0.2288", "176.943, 187.028, 35.9209, 0.2288", "176.278, 186.104, 35.7619, 0.2288", "175.346, 185.514, 35.5695, 0.2288", "174.273, 185.24, 35.359, 0.2288", "173.136, 185.12, 35.2103, 0.2288", "171.998, 185.001, 35.114, 0.2288", "170.859, 184.91, 35.049, 0.2288", "169.715, 184.866, 35.012, 0.2288", "168.586, 184.766, 35.0, 0.2288", "167.527, 184.342, 35.0, 0.2288", "166.411, 184.09, 35.0, 0.2288" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "181.623, 212.265, 26.1307, 0.2288", "180.535, 212.337, 26.6437, 0.2288", "179.447, 212.321, 27.0819, 0.2288", "178.922, 212.088, 27.3837, 0.2288", "178.159, 211.445, 27.7166, 0.2288", "177.372, 210.757, 28.0518, 0.2288", "176.288, 210.54, 28.383, 0.2288", "175.863, 209.639, 28.6062, 0.2288", "174.961, 209.167, 28.8789, 0.2288", "174.221, 208.709, 29.1673, 0.2288", "173.213, 208.845, 29.4837, 0.2288", "172.125, 209.112, 29.8642, 0.2288", "171.217, 209.357, 30.406, 0.2288", "170.348, 209.534, 30.8308, 0.2288", "169.643, 209.874, 31.2858, 0.2288", "169.319, 209.815, 31.7391, 0.2288", "168.298, 209.695, 32.2958, 0.2288", "167.467, 209.404, 32.9818, 0.2288", "166.389, 209.178, 33.5622, 0.2288", "165.617, 208.585, 34.0427, 0.2288", "164.884, 208.243, 34.6674, 0.2288", "164.115, 207.699, 35.2206, 0.2288", "163.065, 207.304, 35.6087, 0.2288", "161.966, 207.181, 35.9108, 0.2288", "161.342, 206.518, 36.157, 0.2288", "160.435, 205.912, 36.2967, 0.2288", "159.434, 205.657, 36.4851, 0.2288", "158.558, 205.005, 36.96, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "181.623, 212.265, 26.1307, 0.2288", "180.555, 212.585, 26.0837, 0.6786", "179.514, 213.059, 26.0168, 0.2326", "178.826, 213.966, 25.9028, 0.2288", "178.287, 214.367, 25.7771, 0.2288", "177.302, 214.778, 25.5427, 0.2288", "176.268, 214.701, 25.3442, 0.2288", "175.276, 214.204, 25.1289, 0.2288", "174.205, 214.224, 24.9782, 0.2288", "173.411, 214.252, 24.6641, 0.2288", "172.41, 213.93, 24.3743, 0.2288", "171.56, 213.477, 24.1632, 0.2288", "170.835, 213.208, 23.8594, 0.2288", "169.945, 213.152, 23.7499, 0.2288", "169.176, 212.852, 23.5511, 0.2288", "168.198, 212.615, 23.375, 0.2288", "167.693, 211.872, 23.2478, 0.2288", "166.974, 211.929, 23.3388, 0.2288", "166.356, 211.059, 23.3556, 0.2288", "165.462, 210.61, 23.2025, 0.2288", "164.604, 210.354, 22.9894, 0.2288", "163.992, 209.462, 22.8206, 0.2288", "163.598, 208.941, 22.4244, 0.2288", "163.026, 208.437, 22.0797, 0.2288", "162.055, 208.13, 21.9069, 0.2288", "161.26, 207.372, 21.7585, 0.2288", "160.766, 206.547, 21.5202, 0.2288", "160.462, 205.51, 21.4267, 0.2288", "159.443, 205.358, 21.4094, 0.2288", "158.569, 205.145, 21.516, 0.2288", "157.587, 204.662, 21.5172, 0.2288", "156.728, 204.58, 21.4054, 0.2288", "156.044, 204.449, 21.408, 0.2288", "155.584, 203.963, 21.4519, 0.2288", "155.022, 203.202, 21.3455, 0.2288", "154.584, 202.255, 21.1708, 0.2288", "153.932, 201.494, 21.1296, 0.2288", "153.807, 200.676, 20.9166, 0.2288", "154.099, 199.726, 20.7399, 0.2288", "153.989, 198.675, 20.6993, 0.2288", "153.535, 197.668, 20.8068, 0.2288", "153.524, 196.682, 21.0787, 0.2288", "153.619, 195.655, 21.3609, 0.2288", "153.409, 194.561, 21.5981, 0.2288", "153.067, 193.528, 21.908, 0.2288", "152.858, 192.496, 22.1007, 0.2288", "152.553, 191.519, 22.3507, 0.2288", "152.364, 190.514, 22.6831, 0.2288", "152.198, 189.454, 23.0734, 0.2288", "151.736, 188.471, 23.4598, 0.2288", "151.202, 187.575, 23.6424, 0.2288", "150.413, 186.838, 23.7504, 0.2288", "149.885, 186.187, 23.8658, 0.2288", "149.315, 185.401, 24.0836, 0.2288", "149.292, 184.289, 24.2004, 0.2288", "149.227, 183.262, 24.2746, 0.2288", "148.451, 182.523, 24.4527, 0.2288", "148.377, 181.855, 24.4815, 0.2288", "148.151, 180.919, 24.3547, 0.2288", "148.123, 179.781, 24.2214, 0.2288", "147.93, 178.667, 24.1671, 0.2288", "147.711, 177.59, 24.1752, 0.2288", "147.592, 176.608, 24.1626, 0.2288", "147.299, 175.618, 24.1058, 0.2288", "146.901, 174.558, 24.0394, 0.2288", "146.13, 173.752, 23.9596, 0.2288", "145.485, 172.967, 23.8851, 0.2288", "144.411, 172.706, 23.8538, 0.2288", "143.22, 172.189, 23.8454, 0.2288", "142.65, 171.338, 23.7555, 0.2288", "142.014, 170.459, 23.6452, 0.2288", "141.6, 169.416, 23.539, 0.2288", "140.886, 168.796, 23.4111, 0.2288", "140.513, 167.776, 23.2814, 0.2288", "140.059, 166.873, 23.2369, 0.2288", "139.978, 165.736, 23.2229, 0.2288", "139.2, 165.019, 23.2232, 0.2288", "138.812, 163.975, 23.2305, 0.2288", "137.854, 163.417, 23.2414, 0.2288", "136.741, 163.285, 23.2831, 0.2288", "135.644, 162.995, 23.2674, 0.2288", "134.521, 162.782, 23.2506, 0.2288", "133.442, 162.403, 23.2361, 0.2288", "132.579, 161.692, 23.2165, 0.2288", "132.055, 160.684, 23.1913, 0.2288", "131.877, 159.579, 23.1294, 0.2288", "131.228, 158.678, 23.1182, 0.2288", "130.26, 158.33, 23.1101, 0.2288", "129.123, 158.294, 23.0958, 0.2288", "128.746, 157.414, 23.0342, 0.2288", "127.602, 157.412, 22.9796, 0.2288", "127.098, 156.59, 22.9317, 0.2288", "126.518, 155.783, 22.8847, 0.2288", "125.675, 155.126, 22.8091, 0.2288", "124.696, 154.783, 22.68, 0.2288" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "197.562, 214.286, 25.9834, 0.2288", "197.78, 214.211, 25.8168, 0.2288", "198.652, 214.661, 25.5979, 0.2288", "199.645, 214.828, 25.2848, 0.2288", "200.456, 215.053, 24.747, 0.2288", "201.344, 215.374, 24.2365, 0.2288", "202.391, 215.578, 23.7796, 0.2288", "202.703, 215.629, 23.095, 0.2288", "203.577, 215.581, 22.5022, 0.2288", "204.61, 215.657, 22.0847, 0.2288", "205.442, 216.305, 21.8627, 0.2288", "205.923, 217.288, 21.7249, 0.2288", "206.666, 218.025, 21.4973, 0.2288", "207.317, 218.83, 21.3066, 0.2288", "207.76, 219.451, 21.0717, 0.2288", "208.094, 220.449, 20.8113, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "197.562, 214.286, 25.9834, 0.2288", "196.906, 215.265, 26.32, 0.2768", "196.477, 216.243, 26.1736, 0.2288", "196.4, 217.273, 26.0008, 0.2288", "196.646, 218.18, 25.926, 0.2288", "196.394, 219.22, 25.7961, 0.2288", "195.744, 220.125, 25.6343, 0.2288", "195.598, 221.08, 25.2988, 0.2288", "195.451, 221.748, 24.792, 0.2288", "194.872, 222.294, 24.2586, 0.2288", "194.443, 223.152, 23.9266, 0.2288", "193.663, 223.837, 23.5746, 0.2288", "193.219, 224.669, 23.371, 0.2288", "192.155, 224.621, 23.1426, 0.2288", "191.334, 224.9, 22.7814, 0.2288", "190.251, 224.746, 22.3524, 0.2288", "190.156, 223.92, 21.8957, 0.2288", "189.897, 222.848, 21.4819, 0.2288", "188.87, 222.779, 21.2206, 0.2288", "188.302, 223.603, 20.9418, 0.2288", "188.265, 224.512, 20.8838, 0.2288", "187.41, 224.211, 20.8034, 0.2288", "186.553, 224.209, 20.8183, 0.2288", "185.638, 224.215, 20.552, 0.2288", "185.144, 224.453, 20.011, 0.2288", "184.202, 224.799, 19.4466, 0.2288", "183.333, 225.081, 18.8003, 0.2288", "182.276, 225.169, 18.235, 0.2288", "181.343, 225.657, 17.7775, 0.2288", "180.599, 225.949, 17.2388, 0.2288", "179.608, 226.169, 16.24, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "208.094, 220.449, 20.8113, 0.2288", "207.976, 220.635, 20.4235, 0.2288", "207.827, 221.644, 20.2723, 0.2288", "207.844, 222.786, 20.2202, 0.2288", "207.89, 223.85, 19.994, 0.2288", "208.136, 224.867, 19.6465, 0.2288", "208.702, 225.776, 19.2758, 0.2288", "209.352, 226.596, 18.8796, 0.2288", "209.955, 227.505, 18.5539, 0.2288", "210.67, 228.283, 18.1969, 0.2288", "211.266, 229.147, 17.9578, 0.2288", "211.267, 230.291, 17.8052, 0.2288", "211.633, 231.314, 17.712, 0.2288", "212.638, 231.831, 17.6627, 0.2288", "213.099, 232.821, 17.64, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "208.094, 220.449, 20.8113, 0.2288", "208.46, 220.767, 20.6466, 0.2288", "209.209, 220.906, 20.7662, 0.2288", "210.102, 220.715, 20.8547, 0.2288", "211.005, 221.167, 20.9569, 0.2288", "211.307, 221.612, 21.2682, 0.2288", "212.171, 221.936, 21.4385, 0.2288", "213.101, 222.165, 21.7104, 0.2288", "214.105, 222.065, 21.8943, 0.2288", "214.614, 222.3, 22.351, 0.2288", "215.184, 222.731, 22.8124, 0.2288", "216.255, 222.851, 23.1339, 0.2288", "216.928, 223.344, 23.2834, 0.2288", "217.807, 223.806, 23.3296, 0.2288", "218.466, 224.224, 23.2828, 0.2288", "219.371, 224.06, 23.037, 0.2288", "220.412, 224.456, 22.9191, 0.2288", "221.345, 224.572, 22.8684, 0.2288", "222.426, 224.796, 23.0076, 0.2288", "223.399, 224.909, 23.3906, 0.2288", "224.224, 225.025, 23.8655, 0.2288", "224.559, 225.414, 24.4857, 0.2288", "225.222, 225.993, 24.8382, 0.2288", "226.188, 226.283, 24.906, 0.2288", "227.267, 226.345, 24.7542, 0.2288", "227.712, 226.377, 24.1654, 0.2288", "228.673, 226.148, 23.6354, 0.2288", "229.539, 225.948, 23.0054, 0.2288", "230.43, 225.605, 22.5624, 0.2288", "231.35, 225.33, 22.3037, 0.2288", "231.936, 224.579, 22.2331, 0.2288", "232.707, 224.218, 22.5425, 0.2288", "233.728, 223.947, 22.8071, 0.2288", "234.576, 223.509, 23.2708, 0.2288", "235.522, 223.019, 23.627, 0.2288", "236.333, 222.442, 24.0727, 0.2288", "237.216, 222.354, 24.3664, 0.2288", "238.275, 222.293, 24.5854, 0.2288", "238.784, 222.279, 24.852, 0.2288", "239.87, 222.165, 25.065, 0.2288", "241.014, 222.152, 25.2591, 0.2288", "241.961, 221.697, 25.3635, 0.2288", "242.291, 220.825, 25.3616, 0.2288", "242.528, 220.792, 25.7592, 0.2288", "243.337, 220.707, 26.2436, 0.2288", "243.75, 220.159, 26.8153, 0.2288", "244.74, 219.926, 27.0967, 0.2288", "245.622, 219.762, 27.067, 0.2288", "246.419, 219.54, 27.1446, 0.2288", "247.293, 219.19, 27.1278, 0.2288", "247.995, 219.19, 27.3126, 0.2288", "249.036, 219.222, 27.3395, 0.2288", "249.738, 219.489, 27.1043, 0.2288", "250.377, 219.893, 27.0332, 0.2288", "251.114, 219.937, 27.0959, 0.2288", "251.794, 219.762, 26.8996, 0.2288", "251.806, 219.762, 26.3063, 0.2288", "252.528, 220.416, 25.9269, 0.2288", "253.56, 220.678, 25.6281, 0.2288", "254.151, 220.792, 25.7127, 0.2288", "255.096, 220.719, 25.9087, 0.2288", "256.15, 220.673, 26.1526, 0.2288", "257.286, 220.563, 26.6, 0.2288" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_61", "dend_58", "dend_43", "dend_35", "dend_10", "dend_1", "dend_0", "dend_63", "dend_62", "dend_60", "dend_59", "dend_55", "dend_44", "dend_39", "dend_36", "dend_34", "dend_11", "dend_9", "dend_2", "dend_57", "dend_56", "dend_52", "dend_45", "dend_42", "dend_41", "dend_40", "dend_38", "dend_37", "dend_19", "dend_12", "dend_8", "dend_3", "dend_54", "dend_53", "dend_51", "dend_46", "dend_29", "dend_20", "dend_16", "dend_13", "dend_7", "dend_4", "dend_50", "dend_47", "dend_33", "dend_30", "dend_26", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_49", "dend_48", "dend_32", "dend_31", "dend_28", "dend_27", "dend_23", "dend_22", "dend_25", "dend_24" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13473",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_1", "axon_1", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_44", "dend_44", "dend_44", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_11", "dend_11", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.7795303"
  }, {
    "group" : "axon",
    "value" : "2.7795303"
  }, {
    "group" : "dend",
    "value" : "2.7795303"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "72.11366"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "1.6265817E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.2267895E-6",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.44329256",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.0013040187",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.08568174",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.01971026",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.576037E-4",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.3781628",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.3529466E-4",
    "erev" : "-92.82251"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "9.85049E-4",
    "erev" : "-92.82251"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "5.870819E-4",
    "erev" : "-92.82251"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "2.7902712E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.920973E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_478513187",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_478513187

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_61, id: dend_61, parent: soma_0
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: soma_0
create dend_58
public dend_58
// Section: dend_43, id: dend_43, parent: soma_0
create dend_43
public dend_43
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_10, id: dend_10, parent: soma_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: soma_0
create dend_1
public dend_1
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_63, id: dend_63, parent: dend_61
create dend_63
public dend_63
// Section: dend_62, id: dend_62, parent: dend_61
create dend_62
public dend_62
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_55, id: dend_55, parent: dend_43
create dend_55
public dend_55
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_34, id: dend_34, parent: dend_10
create dend_34
public dend_34
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_9, id: dend_9, parent: dend_1
create dend_9
public dend_9
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_52, id: dend_52, parent: dend_44
create dend_52
public dend_52
// Section: dend_45, id: dend_45, parent: dend_44
create dend_45
public dend_45
// Section: dend_42, id: dend_42, parent: dend_39
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_51, id: dend_51, parent: dend_45
create dend_51
public dend_51
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_29, id: dend_29, parent: dend_19
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_33, id: dend_33, parent: dend_29
create dend_33
public dend_33
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_61, dend_58, dend_43, dend_35, dend_10, dend_1, dend_0, dend_63, dend_62, dend_60, dend_59, dend_55, dend_44, dend_39, dend_36, dend_34, dend_11, dend_9, dend_2, dend_57, dend_56, dend_52, dend_45, dend_42, dend_41, dend_40, dend_38, dend_37, dend_19, dend_12, dend_8, dend_3, dend_54, dend_53, dend_51, dend_46, dend_29, dend_20, dend_16, dend_13, dend_7, dend_4, dend_50, dend_47, dend_33, dend_30, dend_26, dend_21, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_49, dend_48, dend_32, dend_31, dend_28, dend_27, dend_23, dend_22, dend_25, dend_24]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_13473, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_13473
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513187
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.5)
    connect dend_61(0), soma_0(0.5)
    connect dend_58(0), soma_0(0.5)
    connect dend_43(0), soma_0(0.5)
    connect dend_35(0), soma_0(0.5)
    connect dend_10(0), soma_0(0.5)
    connect dend_1(0), soma_0(0.5)
    connect dend_0(0), soma_0(0.5)
    connect axon_1(0), axon_0(1.0)
    connect dend_63(0), dend_61(1.0)
    connect dend_62(0), dend_61(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_55(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_34(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_9(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_52(0), dend_44(1.0)
    connect dend_45(0), dend_44(1.0)
    connect dend_42(0), dend_39(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_51(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_29(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_33(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 202.277, 187.502, 25.2, 10.7188 ) }
    soma_0 { pt3dadd( 207.636, 187.502, 25.2, 10.7188 ) }
    soma_0 { pt3dadd( 212.995, 187.502, 25.2, 10.7188 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 207.636, 187.502, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 213.477, 201.318, 25.2, 1.0 ) }
    axon_0 { pt3dadd( 219.319, 215.134, 25.2, 1.0 ) }
    // Section: dend_61, id: dend_61, parent: soma_0 (entry count 6/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 211.499, 186.091, 28.4326, 0.2288 ) }
    dend_61 { pt3dadd( 211.224, 185.071, 28.9668, 0.2288 ) }
    dend_61 { pt3dadd( 211.935, 184.238, 29.1998, 0.2288 ) }
    dend_61 { pt3dadd( 212.635, 183.486, 29.486, 0.2288 ) }
    dend_61 { pt3dadd( 213.578, 183.333, 29.8357, 0.2288 ) }
    dend_61 { pt3dadd( 213.716, 183.732, 30.2896, 0.2288 ) }
    dend_61 { pt3dadd( 214.596, 183.564, 30.9226, 0.2288 ) }
    dend_61 { pt3dadd( 215.615, 183.501, 31.5434, 0.2288 ) }
    dend_61 { pt3dadd( 216.268, 182.824, 32.1432, 0.2288 ) }
    dend_61 { pt3dadd( 217.382, 182.661, 32.6651, 0.2288 ) }
    dend_61 { pt3dadd( 218.312, 182.116, 33.0677, 0.2288 ) }
    dend_61 { pt3dadd( 218.393, 181.691, 33.6899, 0.2288 ) }
    dend_61 { pt3dadd( 219.372, 181.816, 34.2737, 0.2288 ) }
    dend_61 { pt3dadd( 220.282, 181.323, 34.7841, 0.2288 ) }
    dend_61 { pt3dadd( 220.906, 180.929, 35.4662, 0.2288 ) }
    dend_61 { pt3dadd( 221.033, 179.887, 35.9293, 0.2288 ) }
    dend_61 { pt3dadd( 220.906, 178.998, 36.3824, 0.2288 ) }
    dend_61 { pt3dadd( 221.239, 177.988, 36.7097, 0.2288 ) }
    dend_61 { pt3dadd( 221.363, 176.862, 36.9244, 0.2288 ) }
    dend_61 { pt3dadd( 221.413, 175.884, 37.0742, 0.2288 ) }
    dend_61 { pt3dadd( 221.25, 174.843, 37.0163, 0.2288 ) }
    dend_61 { pt3dadd( 221.159, 173.807, 37.0558, 0.2288 ) }
    dend_61 { pt3dadd( 220.883, 172.962, 36.8866, 0.2288 ) }
    dend_61 { pt3dadd( 220.436, 172.185, 36.8726, 0.2288 ) }
    // Section: dend_58, id: dend_58, parent: soma_0 (entry count 30/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 210.589, 183.041, 26.4141, 0.9826 ) }
    dend_58 { pt3dadd( 211.038, 182.173, 27.2045, 0.8568 ) }
    dend_58 { pt3dadd( 212.019, 181.65, 27.5391, 0.7074 ) }
    dend_58 { pt3dadd( 212.58, 180.95, 27.9462, 0.2288 ) }
    dend_58 { pt3dadd( 212.943, 180.293, 28.5135, 0.2288 ) }
    dend_58 { pt3dadd( 213.647, 179.575, 28.8929, 0.2288 ) }
    dend_58 { pt3dadd( 213.876, 178.577, 29.2793, 0.2288 ) }
    dend_58 { pt3dadd( 214.172, 177.81, 29.6584, 0.2288 ) }
    dend_58 { pt3dadd( 215.014, 177.095, 30.0048, 0.2288 ) }
    dend_58 { pt3dadd( 215.732, 176.241, 30.2246, 0.2288 ) }
    dend_58 { pt3dadd( 216.642, 175.571, 30.3652, 0.2288 ) }
    dend_58 { pt3dadd( 217.366, 174.716, 30.5368, 0.2288 ) }
    dend_58 { pt3dadd( 218.144, 174.105, 30.7387, 0.2288 ) }
    dend_58 { pt3dadd( 218.615, 173.394, 31.1083, 0.2288 ) }
    dend_58 { pt3dadd( 219.206, 172.545, 31.2665, 0.2288 ) }
    dend_58 { pt3dadd( 219.419, 171.602, 31.5258, 0.2288 ) }
    dend_58 { pt3dadd( 219.951, 170.787, 31.6456, 0.2288 ) }
    dend_58 { pt3dadd( 220.334, 169.77, 31.7061, 0.2288 ) }
    // Section: dend_43, id: dend_43, parent: soma_0 (entry count 48/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 206.841, 183.283, 28.1924, 0.4528 ) }
    dend_43 { pt3dadd( 207.112, 182.179, 28.6843, 0.3494 ) }
    dend_43 { pt3dadd( 206.936, 181.066, 28.9103, 0.4856 ) }
    dend_43 { pt3dadd( 206.252, 180.151, 29.1645, 0.8926 ) }
    dend_43 { pt3dadd( 205.486, 179.303, 29.4476, 0.5438 ) }
    dend_43 { pt3dadd( 205.21, 178.249, 29.7822, 0.6418 ) }
    dend_43 { pt3dadd( 205.468, 177.416, 30.3248, 0.3332 ) }
    dend_43 { pt3dadd( 206.258, 176.651, 30.8437, 0.2326 ) }
    dend_43 { pt3dadd( 206.089, 175.549, 31.2528, 0.6242 ) }
    dend_43 { pt3dadd( 205.4, 174.642, 31.5871, 0.229 ) }
    dend_43 { pt3dadd( 204.464, 173.986, 31.836, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 59/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 203.884, 184.186, 23.8935, 0.2288 ) }
    dend_35 { pt3dadd( 203.16, 183.364, 24.5344, 0.3788 ) }
    dend_35 { pt3dadd( 202.392, 182.658, 24.8805, 0.411 ) }
    dend_35 { pt3dadd( 201.46, 182.016, 25.1849, 0.2416 ) }
    dend_35 { pt3dadd( 200.514, 181.376, 25.3691, 0.2288 ) }
    dend_35 { pt3dadd( 199.531, 180.792, 25.4646, 0.4434 ) }
    dend_35 { pt3dadd( 198.534, 180.233, 25.4464, 0.667 ) }
    dend_35 { pt3dadd( 197.553, 179.646, 25.3366, 0.47 ) }
    dend_35 { pt3dadd( 196.484, 179.285, 25.1171, 0.4268 ) }
    dend_35 { pt3dadd( 195.452, 179.2, 24.7355, 0.3706 ) }
    dend_35 { pt3dadd( 194.366, 178.848, 24.4166, 0.2288 ) }
    dend_35 { pt3dadd( 193.796, 178.552, 24.1615, 0.3366 ) }
    dend_35 { pt3dadd( 192.725, 178.15, 23.9638, 0.348 ) }
    dend_35 { pt3dadd( 191.617, 177.918, 23.7994, 0.4196 ) }
    dend_35 { pt3dadd( 190.498, 177.892, 23.6107, 0.4506 ) }
    dend_35 { pt3dadd( 189.396, 177.892, 23.396, 0.4788 ) }
    dend_35 { pt3dadd( 188.253, 177.892, 23.2439, 0.5398 ) }
    dend_35 { pt3dadd( 187.133, 177.892, 23.205, 0.297 ) }
    dend_35 { pt3dadd( 185.994, 177.891, 23.1339, 0.4532 ) }
    dend_35 { pt3dadd( 184.855, 177.881, 23.0334, 0.2386 ) }
    dend_35 { pt3dadd( 183.718, 177.815, 22.9908, 0.4478 ) }
    dend_35 { pt3dadd( 182.628, 177.479, 22.9323, 0.4576 ) }
    dend_35 { pt3dadd( 181.645, 177.326, 22.6789, 0.5534 ) }
    dend_35 { pt3dadd( 180.611, 176.862, 22.447, 0.617 ) }
    dend_35 { pt3dadd( 179.607, 176.326, 22.3535, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: soma_0 (entry count 84/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 204.176, 192.074, 25.5354, 1.7288 ) }
    dend_10 { pt3dadd( 203.742, 193.132, 25.6505, 0.9254 ) }
    dend_10 { pt3dadd( 203.313, 194.185, 25.6984, 0.3556 ) }
    dend_10 { pt3dadd( 202.758, 195.156, 25.6796, 0.4288 ) }
    dend_10 { pt3dadd( 201.931, 195.945, 25.6617, 0.5558 ) }
    dend_10 { pt3dadd( 200.933, 196.506, 25.6466, 0.339 ) }
    // Section: dend_1, id: dend_1, parent: soma_0 (entry count 90/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 210.505, 183.656, 23.3512, 1.5014 ) }
    dend_1 { pt3dadd( 210.917, 182.605, 23.2456, 0.877 ) }
    dend_1 { pt3dadd( 211.187, 181.496, 23.2128, 0.7252 ) }
    dend_1 { pt3dadd( 211.276, 180.36, 23.1784, 0.4 ) }
    dend_1 { pt3dadd( 211.723, 179.331, 23.1252, 0.4496 ) }
    dend_1 { pt3dadd( 212.339, 178.369, 23.0185, 0.4868 ) }
    dend_1 { pt3dadd( 212.986, 177.429, 22.8404, 0.4634 ) }
    dend_1 { pt3dadd( 213.648, 176.5, 22.5873, 0.8278 ) }
    dend_1 { pt3dadd( 214.201, 175.77, 22.0788, 0.3974 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 99/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 204.914, 192.831, 23.9862, 1.1088 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_0 { pt3dadd( 205.148, 193.826, 22.8754, 0.4814 ) }
    dend_0 { pt3dadd( 206.105, 193.898, 22.353, 0.2288 ) }
    dend_0 { pt3dadd( 206.776, 193.766, 21.616, 0.2288 ) }
    dend_0 { pt3dadd( 207.839, 193.632, 21.0179, 0.2288 ) }
    dend_0 { pt3dadd( 208.763, 194.215, 20.6805, 0.2288 ) }
    dend_0 { pt3dadd( 209.494, 194.964, 20.4565, 0.2288 ) }
    dend_0 { pt3dadd( 210.427, 195.267, 20.232, 0.2978 ) }
    dend_0 { pt3dadd( 211.452, 194.916, 20.1617, 0.266 ) }
    dend_0 { pt3dadd( 212.476, 194.44, 20.1275, 0.2288 ) }
    dend_0 { pt3dadd( 213.481, 193.91, 20.0491, 0.2288 ) }
    dend_0 { pt3dadd( 214.389, 193.225, 19.8862, 0.311 ) }
    dend_0 { pt3dadd( 215.288, 192.541, 19.5709, 0.2586 ) }
    dend_0 { pt3dadd( 216.216, 192.42, 18.9834, 0.6432 ) }
    dend_0 { pt3dadd( 217.139, 192.189, 18.1656, 0.4744 ) }
    dend_0 { pt3dadd( 217.309, 192.849, 17.1906, 0.2288 ) }
    dend_0 { pt3dadd( 217.87, 192.623, 16.1269, 0.2288 ) }
    dend_0 { pt3dadd( 218.152, 193.026, 15.0998, 0.3458 ) }
    dend_0 { pt3dadd( 219.071, 193.702, 14.352, 0.3692 ) }
    dend_0 { pt3dadd( 219.919, 194.465, 13.8376, 0.337 ) }
    dend_0 { pt3dadd( 220.813, 195.164, 13.4896, 0.2962 ) }
    dend_0 { pt3dadd( 221.835, 195.226, 13.2863, 0.2288 ) }
    dend_0 { pt3dadd( 222.876, 194.758, 13.1348, 0.2288 ) }
    dend_0 { pt3dadd( 223.933, 194.989, 12.8988, 0.394 ) }
    dend_0 { pt3dadd( 224.731, 195.575, 11.8384, 0.9152 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 24/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 219.319, 215.134, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 225.16, 228.95, 25.2, 1.0 ) }
    axon_1 { pt3dadd( 231.001, 242.766, 25.2, 1.0 ) }
    // Section: dend_63, id: dend_63, parent: dend_61 (entry count 27/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 220.436, 172.185, 36.8726, 0.2288 ) }
    dend_63 { pt3dadd( 220.608, 171.85, 37.6382, 0.2288 ) }
    dend_63 { pt3dadd( 220.957, 170.911, 37.9336, 0.2288 ) }
    dend_63 { pt3dadd( 221.391, 169.922, 37.9912, 0.2288 ) }
    dend_63 { pt3dadd( 221.705, 168.898, 38.2225, 0.2288 ) }
    dend_63 { pt3dadd( 221.627, 167.948, 38.5876, 0.2288 ) }
    dend_63 { pt3dadd( 221.959, 166.922, 38.8884, 0.2288 ) }
    dend_63 { pt3dadd( 222.542, 166.023, 39.2924, 0.2288 ) }
    dend_63 { pt3dadd( 222.622, 165.206, 39.9504, 0.2288 ) }
    dend_63 { pt3dadd( 222.708, 164.833, 40.6722, 0.2288 ) }
    dend_63 { pt3dadd( 222.89, 164.035, 41.5514, 0.2288 ) }
    dend_63 { pt3dadd( 222.999, 163.034, 42.3517, 0.2288 ) }
    dend_63 { pt3dadd( 223.08, 161.893, 42.9467, 0.2288 ) }
    dend_63 { pt3dadd( 223.3, 160.788, 43.3381, 0.2288 ) }
    dend_63 { pt3dadd( 224.008, 160.072, 43.5557, 0.2288 ) }
    dend_63 { pt3dadd( 224.622, 159.132, 43.6576, 0.2288 ) }
    dend_63 { pt3dadd( 224.891, 158.03, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 225.201, 157.007, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 225.826, 156.281, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 226.404, 155.409, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 227.172, 154.77, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 227.773, 153.955, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 228.011, 152.867, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 228.776, 152.079, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 229.452, 151.164, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 230.088, 150.213, 43.68, 0.2288 ) }
    dend_63 { pt3dadd( 230.859, 149.521, 43.68, 0.2288 ) }
    // Section: dend_62, id: dend_62, parent: dend_61 (entry count 54/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 220.436, 172.185, 36.8726, 0.2288 ) }
    dend_62 { pt3dadd( 220.335, 171.909, 36.8393, 0.2288 ) }
    dend_62 { pt3dadd( 220.105, 171.192, 36.5733, 0.2288 ) }
    dend_62 { pt3dadd( 219.352, 170.506, 36.3896, 0.2288 ) }
    dend_62 { pt3dadd( 218.768, 169.839, 36.5025, 0.2288 ) }
    dend_62 { pt3dadd( 218.512, 168.779, 36.7853, 0.2288 ) }
    dend_62 { pt3dadd( 218.196, 167.775, 37.0717, 0.2288 ) }
    dend_62 { pt3dadd( 218.35, 167.22, 37.6046, 0.2288 ) }
    dend_62 { pt3dadd( 218.04, 166.211, 37.9946, 0.2288 ) }
    dend_62 { pt3dadd( 217.082, 165.885, 38.299, 0.2288 ) }
    dend_62 { pt3dadd( 217.394, 165.155, 38.5577, 0.2288 ) }
    dend_62 { pt3dadd( 217.781, 164.51, 38.8934, 0.2288 ) }
    dend_62 { pt3dadd( 217.475, 163.584, 38.955, 0.2288 ) }
    dend_62 { pt3dadd( 217.087, 162.706, 38.8962, 0.2288 ) }
    dend_62 { pt3dadd( 216.352, 161.995, 38.9673, 0.2288 ) }
    dend_62 { pt3dadd( 216.481, 161.218, 39.1664, 0.2288 ) }
    dend_62 { pt3dadd( 215.596, 160.539, 39.296, 0.2288 ) }
    dend_62 { pt3dadd( 214.867, 159.676, 39.4229, 0.2288 ) }
    dend_62 { pt3dadd( 214.001, 159.069, 39.6628, 0.2288 ) }
    dend_62 { pt3dadd( 213.076, 158.542, 39.9325, 0.2288 ) }
    dend_62 { pt3dadd( 211.98, 158.267, 40.14, 0.2288 ) }
    dend_62 { pt3dadd( 210.914, 157.917, 40.2643, 0.2288 ) }
    dend_62 { pt3dadd( 209.932, 157.334, 40.39, 0.2288 ) }
    dend_62 { pt3dadd( 209.045, 156.699, 40.6227, 0.2288 ) }
    dend_62 { pt3dadd( 208.253, 155.992, 40.724, 0.2288 ) }
    dend_62 { pt3dadd( 207.372, 155.621, 40.8489, 0.2288 ) }
    dend_62 { pt3dadd( 206.642, 155.582, 41.2474, 0.2288 ) }
    dend_62 { pt3dadd( 205.729, 156.255, 41.6377, 0.2288 ) }
    dend_62 { pt3dadd( 204.816, 156.929, 41.9966, 0.2288 ) }
    dend_62 { pt3dadd( 203.873, 157.572, 42.56, 0.2288 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 84/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 220.334, 169.77, 31.7061, 0.2288 ) }
    dend_60 { pt3dadd( 221.398, 169.993, 31.9278, 0.2288 ) }
    dend_60 { pt3dadd( 222.513, 170.225, 32.0816, 0.2288 ) }
    dend_60 { pt3dadd( 223.634, 170.218, 32.0813, 0.2288 ) }
    dend_60 { pt3dadd( 224.436, 169.543, 32.1476, 0.2288 ) }
    dend_60 { pt3dadd( 225.433, 169.146, 32.2115, 0.2288 ) }
    dend_60 { pt3dadd( 226.488, 168.751, 32.3271, 0.2288 ) }
    dend_60 { pt3dadd( 227.526, 168.854, 32.3649, 0.2288 ) }
    dend_60 { pt3dadd( 228.559, 168.854, 32.3683, 0.2288 ) }
    dend_60 { pt3dadd( 229.61, 168.836, 32.3982, 0.2288 ) }
    dend_60 { pt3dadd( 230.154, 168.261, 32.7163, 0.2288 ) }
    dend_60 { pt3dadd( 230.649, 168.168, 33.3676, 0.2288 ) }
    dend_60 { pt3dadd( 231.651, 167.866, 33.9268, 0.2288 ) }
    dend_60 { pt3dadd( 232.679, 167.482, 34.4397, 0.2288 ) }
    dend_60 { pt3dadd( 233.314, 167.279, 35.0526, 0.2288 ) }
    dend_60 { pt3dadd( 234.05, 166.661, 35.525, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_60 { pt3dadd( 234.666, 165.727, 35.7697, 0.2288 ) }
    dend_60 { pt3dadd( 235.249, 165.203, 35.6384, 0.2288 ) }
    dend_60 { pt3dadd( 235.971, 164.505, 35.635, 0.2288 ) }
    dend_60 { pt3dadd( 236.471, 163.586, 35.6359, 0.2288 ) }
    dend_60 { pt3dadd( 237.314, 163.399, 35.6115, 0.2288 ) }
    dend_60 { pt3dadd( 238.071, 162.772, 35.7204, 0.2288 ) }
    dend_60 { pt3dadd( 238.57, 161.898, 36.0142, 0.2288 ) }
    dend_60 { pt3dadd( 239.275, 161.027, 36.304, 0.2288 ) }
    dend_60 { pt3dadd( 239.968, 160.277, 36.4633, 0.2288 ) }
    dend_60 { pt3dadd( 240.635, 159.638, 36.6904, 0.2288 ) }
    dend_60 { pt3dadd( 241.17, 158.837, 36.8606, 0.2288 ) }
    dend_60 { pt3dadd( 242.144, 158.291, 37.018, 0.2288 ) }
    dend_60 { pt3dadd( 243.181, 158.002, 37.1585, 0.2288 ) }
    dend_60 { pt3dadd( 244.063, 157.426, 37.4172, 0.2288 ) }
    dend_60 { pt3dadd( 245.173, 157.361, 37.5973, 0.2288 ) }
    dend_60 { pt3dadd( 246.193, 156.906, 37.7073, 0.2288 ) }
    dend_60 { pt3dadd( 247.123, 156.304, 37.931, 0.2288 ) }
    dend_60 { pt3dadd( 248.036, 155.633, 38.1847, 0.2288 ) }
    dend_60 { pt3dadd( 249.043, 155.297, 38.5428, 0.2288 ) }
    dend_60 { pt3dadd( 250.01, 154.891, 39.0135, 0.2288 ) }
    dend_60 { pt3dadd( 250.75, 154.243, 39.4901, 0.2288 ) }
    dend_60 { pt3dadd( 251.887, 154.211, 39.8493, 0.2288 ) }
    dend_60 { pt3dadd( 253.031, 154.211, 40.0893, 0.2288 ) }
    dend_60 { pt3dadd( 254.087, 153.842, 40.2357, 0.2288 ) }
    dend_60 { pt3dadd( 255.219, 153.754, 40.3029, 0.2288 ) }
    dend_60 { pt3dadd( 256.297, 153.372, 40.32, 0.2288 ) }
    dend_60 { pt3dadd( 257.418, 153.182, 40.32, 0.2288 ) }
    dend_60 { pt3dadd( 258.562, 153.182, 40.32, 0.2288 ) }
    dend_60 { pt3dadd( 259.672, 152.97, 40.32, 0.2288 ) }
    dend_60 { pt3dadd( 260.503, 152.381, 40.32, 0.2288 ) }
    dend_60 { pt3dadd( 261.633, 152.266, 40.32, 0.2288 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 31/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 220.334, 169.77, 31.7061, 0.2288 ) }
    dend_59 { pt3dadd( 220.5, 169.163, 31.6792, 0.2288 ) }
    dend_59 { pt3dadd( 220.316, 168.088, 31.5798, 0.2288 ) }
    dend_59 { pt3dadd( 220.08, 166.986, 31.6142, 0.2288 ) }
    dend_59 { pt3dadd( 220.106, 166.245, 31.8864, 0.2288 ) }
    dend_59 { pt3dadd( 219.921, 165.176, 32.2524, 0.2288 ) }
    dend_59 { pt3dadd( 219.996, 164.087, 32.5707, 0.2288 ) }
    dend_59 { pt3dadd( 219.918, 163.315, 33.0403, 0.2288 ) }
    dend_59 { pt3dadd( 219.618, 162.402, 33.3508, 0.2288 ) }
    dend_59 { pt3dadd( 219.264, 161.355, 33.4877, 0.2288 ) }
    dend_59 { pt3dadd( 218.711, 160.546, 33.4174, 0.2288 ) }
    dend_59 { pt3dadd( 218.046, 160.197, 33.0554, 0.2288 ) }
    dend_59 { pt3dadd( 217.788, 160.05, 32.7342, 0.2288 ) }
    dend_59 { pt3dadd( 216.831, 159.514, 32.3677, 0.2288 ) }
    dend_59 { pt3dadd( 215.748, 159.182, 32.0701, 0.2288 ) }
    dend_59 { pt3dadd( 214.677, 158.902, 31.7624, 0.2288 ) }
    dend_59 { pt3dadd( 213.9, 158.753, 31.3312, 0.2288 ) }
    dend_59 { pt3dadd( 212.85, 158.42, 30.9722, 0.2288 ) }
    dend_59 { pt3dadd( 212.047, 157.936, 30.5222, 0.2288 ) }
    dend_59 { pt3dadd( 211.981, 157.602, 30.0966, 0.2288 ) }
    dend_59 { pt3dadd( 211.006, 157.376, 29.6806, 0.2288 ) }
    dend_59 { pt3dadd( 210.067, 156.808, 29.2998, 0.2288 ) }
    dend_59 { pt3dadd( 209.082, 156.336, 28.9839, 0.2288 ) }
    dend_59 { pt3dadd( 208.838, 155.289, 28.7003, 0.2288 ) }
    dend_59 { pt3dadd( 207.971, 154.654, 28.5499, 0.2288 ) }
    dend_59 { pt3dadd( 207.328, 153.787, 28.4623, 0.2288 ) }
    dend_59 { pt3dadd( 206.708, 152.925, 28.343, 0.2288 ) }
    dend_59 { pt3dadd( 205.959, 152.128, 28.2974, 0.2288 ) }
    dend_59 { pt3dadd( 205.435, 151.268, 28.124, 0.2288 ) }
    dend_59 { pt3dadd( 204.947, 150.641, 27.753, 0.2288 ) }
    dend_59 { pt3dadd( 204.547, 149.726, 27.3764, 0.2288 ) }
    dend_59 { pt3dadd( 204.225, 148.726, 27.0617, 0.2288 ) }
    dend_59 { pt3dadd( 203.975, 147.821, 26.7277, 0.2288 ) }
    dend_59 { pt3dadd( 203.702, 147.104, 26.5462, 0.2288 ) }
    dend_59 { pt3dadd( 203.536, 146.159, 26.2534, 0.2288 ) }
    dend_59 { pt3dadd( 202.874, 145.428, 26.1873, 0.2288 ) }
    dend_59 { pt3dadd( 202.297, 144.602, 25.9949, 0.2288 ) }
    dend_59 { pt3dadd( 201.487, 143.605, 25.7975, 0.2288 ) }
    dend_59 { pt3dadd( 201.162, 142.592, 25.5528, 0.2288 ) }
    dend_59 { pt3dadd( 200.957, 141.54, 25.1866, 0.2288 ) }
    dend_59 { pt3dadd( 200.846, 140.434, 24.8615, 0.2288 ) }
    dend_59 { pt3dadd( 200.415, 139.375, 24.6, 0.2288 ) }
    dend_59 { pt3dadd( 199.984, 138.315, 24.4247, 0.2288 ) }
    dend_59 { pt3dadd( 199.663, 137.294, 24.2676, 0.2288 ) }
    dend_59 { pt3dadd( 199.446, 136.321, 24.1447, 0.2288 ) }
    dend_59 { pt3dadd( 199.566, 135.207, 24.1167, 0.2288 ) }
    dend_59 { pt3dadd( 199.742, 134.113, 24.1458, 0.2288 ) }
    dend_59 { pt3dadd( 199.514, 133.042, 24.1287, 0.2288 ) }
    dend_59 { pt3dadd( 199.455, 131.909, 24.1374, 0.2288 ) }
    dend_59 { pt3dadd( 199.314, 130.779, 24.1545, 0.2288 ) }
    dend_59 { pt3dadd( 199.146, 129.653, 24.1478, 0.2288 ) }
    dend_59 { pt3dadd( 198.827, 128.591, 24.1122, 0.2288 ) }
    dend_59 { pt3dadd( 198.224, 127.718, 24.0562, 0.2288 ) }
    dend_59 { pt3dadd( 197.711, 126.928, 23.8678, 0.2288 ) }
    dend_59 { pt3dadd( 196.801, 126.302, 23.7017, 0.2288 ) }
    dend_59 { pt3dadd( 196.305, 125.563, 23.5558, 0.2288 ) }
    dend_59 { pt3dadd( 195.822, 124.627, 23.4276, 0.2288 ) }
    dend_59 { pt3dadd( 195.395, 123.685, 23.3111, 0.2288 ) }
    dend_59 { pt3dadd( 195.128, 122.639, 23.2016, 0.2288 ) }
    dend_59 { pt3dadd( 194.442, 122.167, 23.1123, 0.2288 ) }
    dend_59 { pt3dadd( 193.59, 121.293, 22.8424, 0.2288 ) }
    dend_59 { pt3dadd( 192.59, 120.801, 22.57, 0.2288 ) }
    dend_59 { pt3dadd( 192.202, 119.771, 22.3157, 0.2288 ) }
    dend_59 { pt3dadd( 191.738, 118.804, 22.0629, 0.2288 ) }
    dend_59 { pt3dadd( 191.351, 117.746, 21.8084, 0.2288 ) }
    dend_59 { pt3dadd( 191.162, 116.666, 21.5309, 0.2288 ) }
    dend_59 { pt3dadd( 191.162, 115.561, 21.231, 0.2288 ) }
    dend_59 { pt3dadd( 191.258, 114.443, 20.977, 0.2288 ) }
    dend_59 { pt3dadd( 191.836, 113.561, 20.9415, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_59 { pt3dadd( 191.648, 113.207, 20.9451, 0.2288 ) }
    dend_59 { pt3dadd( 191.351, 112.333, 20.8219, 0.2288 ) }
    dend_59 { pt3dadd( 191.381, 111.682, 20.5643, 0.2288 ) }
    dend_59 { pt3dadd( 190.92, 110.735, 20.3686, 0.2288 ) }
    dend_59 { pt3dadd( 190.514, 109.907, 20.3134, 0.2288 ) }
    dend_59 { pt3dadd( 190.438, 108.909, 20.3753, 0.2288 ) }
    dend_59 { pt3dadd( 190.476, 108.54, 20.519, 0.2288 ) }
    dend_59 { pt3dadd( 190.702, 108.304, 20.7133, 0.2288 ) }
    dend_59 { pt3dadd( 190.942, 107.505, 20.8972, 0.2288 ) }
    dend_59 { pt3dadd( 190.59, 106.634, 20.9272, 0.2288 ) }
    dend_59 { pt3dadd( 190.453, 105.679, 20.816, 0.2288 ) }
    dend_59 { pt3dadd( 190.476, 104.621, 20.7824, 0.2288 ) }
    dend_59 { pt3dadd( 190.37, 103.66, 20.8141, 0.2288 ) }
    dend_59 { pt3dadd( 190.15, 102.925, 20.8264, 0.2288 ) }
    dend_59 { pt3dadd( 190.363, 102.027, 20.7637, 0.2288 ) }
    dend_59 { pt3dadd( 190.676, 100.948, 20.7346, 0.2288 ) }
    dend_59 { pt3dadd( 190.882, 100.494, 20.4784, 0.2288 ) }
    dend_59 { pt3dadd( 190.079, 100.242, 20.426, 0.2288 ) }
    dend_59 { pt3dadd( 189.673, 99.5358, 20.6195, 0.2288 ) }
    dend_59 { pt3dadd( 189.175, 98.9856, 20.8141, 0.2288 ) }
    dend_59 { pt3dadd( 189.18, 97.9082, 20.9597, 0.2288 ) }
    dend_59 { pt3dadd( 189.027, 96.9895, 20.8715, 0.2288 ) }
    dend_59 { pt3dadd( 189.561, 96.2104, 19.88, 0.2288 ) }
    // Section: dend_55, id: dend_55, parent: dend_43 (entry count 23/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( 204.464, 173.986, 31.836, 0.2288 ) }
    dend_55 { pt3dadd( 204.095, 173.498, 31.9539, 0.2818 ) }
    dend_55 { pt3dadd( 204.536, 172.49, 32.0748, 0.2306 ) }
    dend_55 { pt3dadd( 205.08, 171.487, 32.1835, 0.2288 ) }
    dend_55 { pt3dadd( 205.573, 170.464, 32.3201, 0.3586 ) }
    dend_55 { pt3dadd( 206.151, 169.478, 32.4041, 0.3014 ) }
    dend_55 { pt3dadd( 206.371, 168.356, 32.4615, 0.6864 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 30/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 204.464, 173.986, 31.836, 0.2288 ) }
    dend_44 { pt3dadd( 204.052, 173.864, 32.0995, 0.4622 ) }
    dend_44 { pt3dadd( 203.133, 173.46, 33.5135, 0.284 ) }
    dend_44 { pt3dadd( 202.593, 172.744, 34.1852, 0.6864 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 34/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 179.607, 176.326, 22.3535, 0.4576 ) }
    dend_39 { pt3dadd( 178.744, 176.11, 22.538, 0.4576 ) }
    dend_39 { pt3dadd( 177.639, 175.84, 22.7161, 0.4576 ) }
    dend_39 { pt3dadd( 176.546, 175.704, 22.8469, 0.4122 ) }
    dend_39 { pt3dadd( 175.47, 176.023, 22.9978, 0.3632 ) }
    dend_39 { pt3dadd( 174.435, 176.384, 23.2252, 0.4024 ) }
    dend_39 { pt3dadd( 173.344, 176.405, 23.469, 0.4328 ) }
    dend_39 { pt3dadd( 172.273, 176.056, 23.6281, 0.4122 ) }
    dend_39 { pt3dadd( 171.313, 175.443, 23.7404, 0.4058 ) }
    dend_39 { pt3dadd( 170.44, 174.707, 23.8314, 0.4576 ) }
    dend_39 { pt3dadd( 169.622, 173.911, 23.8655, 0.4576 ) }
    dend_39 { pt3dadd( 169.067, 173.275, 23.826, 0.2288 ) }
    dend_39 { pt3dadd( 168.398, 172.925, 23.6205, 0.2288 ) }
    dend_39 { pt3dadd( 167.593, 172.693, 23.576, 0.2288 ) }
    dend_39 { pt3dadd( 166.729, 172.201, 23.5197, 0.2288 ) }
    dend_39 { pt3dadd( 166.221, 171.721, 23.4293, 0.2288 ) }
    dend_39 { pt3dadd( 165.651, 171.141, 23.3058, 0.2288 ) }
    dend_39 { pt3dadd( 165.466, 170.12, 23.2005, 0.2288 ) }
    dend_39 { pt3dadd( 164.85, 169.477, 23.1983, 0.2288 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 179.607, 176.326, 22.3535, 0.4576 ) }
    dend_36 { pt3dadd( 179.121, 175.693, 21.5891, 0.316 ) }
    dend_36 { pt3dadd( 179.042, 174.801, 21.11, 0.2332 ) }
    dend_36 { pt3dadd( 178.503, 173.946, 20.8972, 0.2288 ) }
    dend_36 { pt3dadd( 177.689, 173.237, 20.8673, 0.4146 ) }
    dend_36 { pt3dadd( 177.066, 172.313, 20.9124, 0.3222 ) }
    dend_36 { pt3dadd( 176.553, 171.299, 20.9272, 0.4098 ) }
    dend_36 { pt3dadd( 176.113, 170.263, 20.8788, 0.608 ) }
    dend_36 { pt3dadd( 175.723, 169.191, 20.8443, 0.624 ) }
    dend_36 { pt3dadd( 175.231, 168.184, 20.8827, 0.288 ) }
    dend_36 { pt3dadd( 174.737, 167.161, 20.9367, 0.2288 ) }
    dend_36 { pt3dadd( 174.394, 166.083, 20.9292, 0.6344 ) }
    dend_36 { pt3dadd( 174.234, 164.98, 20.8415, 0.319 ) }
    dend_36 { pt3dadd( 173.953, 163.889, 20.8085, 0.24 ) }
    dend_36 { pt3dadd( 173.513, 162.837, 20.8023, 0.2314 ) }
    dend_36 { pt3dadd( 173.25, 161.73, 20.8144, 0.2288 ) }
    dend_36 { pt3dadd( 172.9, 160.645, 20.8214, 0.2288 ) }
    dend_36 { pt3dadd( 172.69, 159.526, 20.8757, 0.2288 ) }
    dend_36 { pt3dadd( 172.345, 158.438, 20.9339, 0.3732 ) }
    dend_36 { pt3dadd( 172.0, 157.347, 20.9919, 0.2738 ) }
    dend_36 { pt3dadd( 171.905, 156.22, 21.1123, 0.2308 ) }
    dend_36 { pt3dadd( 171.655, 155.107, 21.2422, 0.2758 ) }
    dend_36 { pt3dadd( 171.328, 154.01, 21.3657, 0.3826 ) }
    dend_36 { pt3dadd( 171.029, 152.906, 21.4777, 0.436 ) }
    dend_36 { pt3dadd( 170.875, 151.788, 21.6558, 0.2872 ) }
    dend_36 { pt3dadd( 170.564, 150.698, 21.7694, 0.229 ) }
    dend_36 { pt3dadd( 170.514, 149.555, 21.905, 0.449 ) }
    // Section: dend_34, id: dend_34, parent: dend_10 (entry count 80/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 200.933, 196.506, 25.6466, 0.339 ) }
    dend_34 { pt3dadd( 200.067, 196.627, 23.5746, 0.2644 ) }
    dend_34 { pt3dadd( 199.134, 196.408, 22.3034, 0.2288 ) }
    dend_34 { pt3dadd( 198.119, 196.474, 21.7759, 0.2288 ) }
    dend_34 { pt3dadd( 197.508, 196.83, 21.1016, 0.2288 ) }
    dend_34 { pt3dadd( 197.993, 197.635, 20.3596, 0.2288 ) }
    dend_34 { pt3dadd( 197.199, 198.143, 19.77, 0.2288 ) }
    dend_34 { pt3dadd( 196.329, 198.76, 19.3178, 0.2288 ) }
    dend_34 { pt3dadd( 196.242, 199.782, 18.9252, 0.2288 ) }
    dend_34 { pt3dadd( 195.408, 200.086, 18.5777, 0.2288 ) }
    dend_34 { pt3dadd( 194.592, 199.39, 18.3201, 0.2288 ) }
    dend_34 { pt3dadd( 194.155, 199.781, 18.0505, 0.2288 ) }
    dend_34 { pt3dadd( 193.701, 200.795, 17.7551, 0.2288 ) }
    dend_34 { pt3dadd( 193.299, 201.804, 17.4283, 0.2288 ) }
    dend_34 { pt3dadd( 192.997, 202.889, 17.1396, 0.2288 ) }
    dend_34 { pt3dadd( 192.61, 203.959, 16.9193, 0.2288 ) }
    dend_34 { pt3dadd( 192.043, 204.952, 16.7476, 0.2288 ) }
    dend_34 { pt3dadd( 191.234, 205.761, 16.6219, 0.2288 ) }
    dend_34 { pt3dadd( 190.684, 206.724, 16.4917, 0.2288 ) }
    dend_34 { pt3dadd( 190.305, 207.789, 16.3332, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_34 { pt3dadd( 190.005, 208.886, 16.1876, 0.2288 ) }
    dend_34 { pt3dadd( 189.61, 209.954, 15.96, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 2/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 200.933, 196.506, 25.6466, 0.339 ) }
    dend_11 { pt3dadd( 200.049, 197.166, 25.6161, 0.6794 ) }
    dend_11 { pt3dadd( 199.011, 197.647, 25.6197, 0.4576 ) }
    // Section: dend_9, id: dend_9, parent: dend_1 (entry count 5/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 214.201, 175.77, 22.0788, 0.3974 ) }
    dend_9 { pt3dadd( 214.499, 175.683, 21.84, 0.2288 ) }
    dend_9 { pt3dadd( 215.177, 175.49, 20.3627, 0.2288 ) }
    dend_9 { pt3dadd( 215.865, 175.932, 19.7123, 0.2288 ) }
    dend_9 { pt3dadd( 216.905, 176.242, 19.1786, 0.2288 ) }
    dend_9 { pt3dadd( 217.853, 175.953, 18.5987, 0.2288 ) }
    dend_9 { pt3dadd( 218.733, 175.739, 18.062, 0.2288 ) }
    dend_9 { pt3dadd( 219.134, 176.292, 17.444, 0.2288 ) }
    dend_9 { pt3dadd( 220.075, 176.938, 16.9618, 0.2288 ) }
    dend_9 { pt3dadd( 220.936, 177.408, 16.5578, 0.2288 ) }
    dend_9 { pt3dadd( 221.793, 177.963, 16.1717, 0.2288 ) }
    dend_9 { pt3dadd( 221.834, 179.104, 15.876, 0.2288 ) }
    dend_9 { pt3dadd( 222.077, 180.082, 15.47, 0.2288 ) }
    dend_9 { pt3dadd( 222.839, 180.409, 14.9271, 0.2288 ) }
    dend_9 { pt3dadd( 223.597, 180.304, 14.5838, 0.2288 ) }
    dend_9 { pt3dadd( 223.892, 180.823, 14.6168, 0.2288 ) }
    dend_9 { pt3dadd( 224.793, 181.491, 14.6247, 0.2288 ) }
    dend_9 { pt3dadd( 225.419, 182.266, 14.6955, 0.2288 ) }
    dend_9 { pt3dadd( 226.067, 183.164, 14.8268, 0.2288 ) }
    dend_9 { pt3dadd( 225.885, 183.861, 15.0374, 0.2288 ) }
    dend_9 { pt3dadd( 226.632, 184.07, 15.1217, 0.2288 ) }
    dend_9 { pt3dadd( 227.316, 184.298, 14.9234, 0.2288 ) }
    dend_9 { pt3dadd( 228.315, 184.558, 14.8014, 0.2288 ) }
    dend_9 { pt3dadd( 229.375, 184.758, 14.5617, 0.2288 ) }
    dend_9 { pt3dadd( 230.349, 185.25, 14.2988, 0.2288 ) }
    dend_9 { pt3dadd( 231.007, 185.734, 14.1042, 0.2288 ) }
    dend_9 { pt3dadd( 231.809, 186.173, 13.8846, 0.2288 ) }
    dend_9 { pt3dadd( 232.234, 186.472, 13.4277, 0.2288 ) }
    dend_9 { pt3dadd( 233.162, 186.256, 13.1827, 0.2288 ) }
    dend_9 { pt3dadd( 234.036, 186.014, 12.875, 0.2288 ) }
    dend_9 { pt3dadd( 235.133, 186.208, 12.6053, 0.2288 ) }
    dend_9 { pt3dadd( 235.893, 186.811, 12.4331, 0.2288 ) }
    dend_9 { pt3dadd( 236.219, 187.09, 12.5768, 0.2288 ) }
    dend_9 { pt3dadd( 237.176, 187.48, 12.6448, 0.2288 ) }
    dend_9 { pt3dadd( 238.233, 187.286, 12.5896, 0.2288 ) }
    dend_9 { pt3dadd( 238.638, 187.387, 11.76, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 41/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 214.201, 175.77, 22.0788, 0.3974 ) }
    dend_2 { pt3dadd( 214.325, 175.32, 21.5902, 0.5176 ) }
    dend_2 { pt3dadd( 214.499, 174.207, 21.0994, 0.619 ) }
    dend_2 { pt3dadd( 214.49, 173.067, 20.6343, 0.2934 ) }
    dend_2 { pt3dadd( 214.418, 171.959, 20.1306, 0.4916 ) }
    dend_2 { pt3dadd( 214.033, 171.135, 19.469, 0.358 ) }
    dend_2 { pt3dadd( 213.866, 170.018, 18.8986, 0.3956 ) }
    dend_2 { pt3dadd( 213.486, 168.94, 18.4282, 0.2882 ) }
    dend_2 { pt3dadd( 212.852, 167.999, 17.9931, 0.4576 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 50/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 206.371, 168.356, 32.4615, 0.6864 ) }
    dend_57 { pt3dadd( 206.757, 167.175, 31.218, 0.5154 ) }
    dend_57 { pt3dadd( 207.087, 166.169, 30.1899, 0.37 ) }
    dend_57 { pt3dadd( 207.378, 165.189, 29.7035, 0.2288 ) }
    dend_57 { pt3dadd( 207.784, 164.363, 29.2208, 0.2288 ) }
    dend_57 { pt3dadd( 208.176, 163.592, 28.964, 0.2288 ) }
    dend_57 { pt3dadd( 208.773, 162.986, 28.5743, 0.2288 ) }
    dend_57 { pt3dadd( 208.78, 161.867, 28.2002, 0.2288 ) }
    dend_57 { pt3dadd( 209.123, 161.177, 27.7903, 0.2288 ) }
    dend_57 { pt3dadd( 209.352, 160.157, 27.405, 0.2288 ) }
    dend_57 { pt3dadd( 209.733, 159.168, 27.1186, 0.2288 ) }
    dend_57 { pt3dadd( 210.14, 158.902, 26.9609, 0.2288 ) }
    dend_57 { pt3dadd( 210.382, 158.902, 26.9206, 0.2288 ) }
    dend_57 { pt3dadd( 210.51, 158.436, 26.8629, 0.2288 ) }
    dend_57 { pt3dadd( 210.839, 157.382, 26.9063, 0.2288 ) }
    dend_57 { pt3dadd( 211.054, 156.441, 26.8293, 0.2288 ) }
    dend_57 { pt3dadd( 210.954, 155.348, 26.8901, 0.2288 ) }
    dend_57 { pt3dadd( 210.984, 154.27, 27.0612, 0.2288 ) }
    dend_57 { pt3dadd( 211.613, 153.527, 27.3588, 0.2288 ) }
    dend_57 { pt3dadd( 212.15, 152.771, 27.7127, 0.2288 ) }
    dend_57 { pt3dadd( 212.858, 152.036, 28.0171, 0.2288 ) }
    dend_57 { pt3dadd( 213.58, 151.175, 28.2556, 0.2288 ) }
    dend_57 { pt3dadd( 214.221, 150.316, 28.2559, 0.2288 ) }
    dend_57 { pt3dadd( 214.314, 149.331, 28.0974, 0.2288 ) }
    dend_57 { pt3dadd( 214.412, 148.491, 27.7712, 0.2288 ) }
    dend_57 { pt3dadd( 214.354, 147.662, 27.2488, 0.2288 ) }
    dend_57 { pt3dadd( 214.157, 146.599, 26.6918, 0.2288 ) }
    dend_57 { pt3dadd( 214.258, 145.667, 26.1058, 0.2288 ) }
    dend_57 { pt3dadd( 214.828, 144.851, 25.7152, 0.2288 ) }
    dend_57 { pt3dadd( 215.22, 144.012, 25.2854, 0.2288 ) }
    dend_57 { pt3dadd( 215.873, 143.448, 24.8088, 0.2288 ) }
    dend_57 { pt3dadd( 216.404, 142.579, 24.5739, 0.2288 ) }
    dend_57 { pt3dadd( 217.186, 141.783, 24.3085, 0.2288 ) }
    dend_57 { pt3dadd( 217.794, 140.945, 23.9117, 0.2288 ) }
    dend_57 { pt3dadd( 217.766, 139.847, 23.4735, 0.2288 ) }
    dend_57 { pt3dadd( 217.455, 138.768, 23.1207, 0.2288 ) }
    dend_57 { pt3dadd( 216.777, 138.13, 22.694, 0.2288 ) }
    dend_57 { pt3dadd( 216.123, 137.226, 22.3779, 0.2288 ) }
    dend_57 { pt3dadd( 216.316, 136.141, 22.1558, 0.2288 ) }
    dend_57 { pt3dadd( 216.79, 135.24, 22.0836, 0.2288 ) }
    dend_57 { pt3dadd( 216.962, 134.118, 22.0968, 0.2288 ) }
    dend_57 { pt3dadd( 217.871, 133.619, 22.2373, 0.2288 ) }
    dend_57 { pt3dadd( 218.161, 132.683, 22.3877, 0.2288 ) }
    dend_57 { pt3dadd( 218.518, 131.748, 22.5968, 0.2288 ) }
    dend_57 { pt3dadd( 218.931, 130.757, 22.7668, 0.2288 ) }
    dend_57 { pt3dadd( 219.991, 130.53, 22.96, 0.2288 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 96/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 206.371, 168.356, 32.4615, 0.6864 ) }
    dend_56 { pt3dadd( 206.628, 167.55, 32.4957, 0.6864 ) }
    dend_56 { pt3dadd( 206.91, 166.445, 32.5343, 0.6218 ) }
    dend_56 { pt3dadd( 207.255, 165.357, 32.5592, 0.3206 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_56 { pt3dadd( 207.583, 164.622, 32.5872, 0.2288 ) }
    dend_56 { pt3dadd( 207.993, 163.99, 32.592, 0.2288 ) }
    dend_56 { pt3dadd( 208.159, 162.898, 32.5508, 0.2288 ) }
    dend_56 { pt3dadd( 208.556, 161.865, 32.6032, 0.2288 ) }
    dend_56 { pt3dadd( 208.666, 160.867, 32.7606, 0.2288 ) }
    dend_56 { pt3dadd( 209.009, 159.927, 33.0277, 0.2288 ) }
    dend_56 { pt3dadd( 209.432, 158.994, 33.325, 0.2288 ) }
    dend_56 { pt3dadd( 209.755, 157.922, 33.668, 0.2288 ) }
    dend_56 { pt3dadd( 209.839, 156.792, 34.0197, 0.2288 ) }
    dend_56 { pt3dadd( 210.038, 155.679, 34.3655, 0.2288 ) }
    dend_56 { pt3dadd( 210.016, 154.763, 34.8718, 0.2288 ) }
    dend_56 { pt3dadd( 210.226, 153.72, 35.2803, 0.2288 ) }
    dend_56 { pt3dadd( 210.844, 152.945, 35.6286, 0.2288 ) }
    dend_56 { pt3dadd( 211.314, 151.94, 35.8058, 0.2288 ) }
    dend_56 { pt3dadd( 211.727, 150.889, 35.9696, 0.2288 ) }
    dend_56 { pt3dadd( 211.754, 149.856, 36.1225, 0.2288 ) }
    dend_56 { pt3dadd( 212.255, 148.846, 36.2158, 0.2288 ) }
    dend_56 { pt3dadd( 212.734, 147.818, 36.3126, 0.2288 ) }
    dend_56 { pt3dadd( 213.033, 146.743, 36.4893, 0.2288 ) }
    dend_56 { pt3dadd( 212.95, 145.809, 36.8575, 0.2288 ) }
    dend_56 { pt3dadd( 213.154, 144.768, 37.0852, 0.2288 ) }
    dend_56 { pt3dadd( 213.796, 143.94, 37.3629, 0.2288 ) }
    dend_56 { pt3dadd( 213.99, 142.846, 37.599, 0.2288 ) }
    dend_56 { pt3dadd( 214.674, 142.004, 37.8255, 0.2288 ) }
    dend_56 { pt3dadd( 215.428, 141.411, 38.0817, 0.2288 ) }
    dend_56 { pt3dadd( 215.548, 140.956, 38.274, 0.2288 ) }
    dend_56 { pt3dadd( 216.012, 140.04, 38.4989, 0.2288 ) }
    dend_56 { pt3dadd( 216.254, 139.188, 38.5991, 0.2288 ) }
    dend_56 { pt3dadd( 216.319, 138.208, 38.7685, 0.2288 ) }
    dend_56 { pt3dadd( 216.324, 137.168, 38.9332, 0.2288 ) }
    dend_56 { pt3dadd( 216.704, 136.1, 39.0471, 0.2288 ) }
    dend_56 { pt3dadd( 217.131, 135.069, 39.1866, 0.2288 ) }
    dend_56 { pt3dadd( 217.164, 134.709, 39.391, 0.2288 ) }
    dend_56 { pt3dadd( 217.274, 133.673, 39.7368, 0.2288 ) }
    dend_56 { pt3dadd( 217.36, 132.536, 40.0123, 0.2288 ) }
    dend_56 { pt3dadd( 217.391, 131.395, 40.2405, 0.2288 ) }
    dend_56 { pt3dadd( 217.577, 130.266, 40.4317, 0.2288 ) }
    dend_56 { pt3dadd( 217.896, 129.187, 40.5854, 0.2288 ) }
    dend_56 { pt3dadd( 218.161, 128.095, 40.7193, 0.2288 ) }
    dend_56 { pt3dadd( 218.161, 126.981, 40.9192, 0.2288 ) }
    dend_56 { pt3dadd( 218.389, 125.978, 41.2076, 0.2288 ) }
    dend_56 { pt3dadd( 218.701, 124.886, 41.4417, 0.2288 ) }
    dend_56 { pt3dadd( 218.933, 123.777, 41.6262, 0.2288 ) }
    dend_56 { pt3dadd( 219.533, 122.908, 41.7662, 0.2288 ) }
    dend_56 { pt3dadd( 219.939, 121.869, 41.9062, 0.2288 ) }
    dend_56 { pt3dadd( 220.501, 120.883, 41.9986, 0.2288 ) }
    dend_56 { pt3dadd( 221.234, 120.019, 42.0605, 0.2288 ) }
    dend_56 { pt3dadd( 221.588, 118.966, 42.1644, 0.2288 ) }
    dend_56 { pt3dadd( 221.707, 117.839, 42.2604, 0.2288 ) }
    dend_56 { pt3dadd( 222.094, 116.791, 42.3223, 0.2288 ) }
    dend_56 { pt3dadd( 222.628, 115.793, 42.3592, 0.2288 ) }
    dend_56 { pt3dadd( 223.312, 114.911, 42.3058, 0.2288 ) }
    dend_56 { pt3dadd( 223.723, 114.129, 42.1674, 0.2288 ) }
    dend_56 { pt3dadd( 223.738, 113.128, 42.0773, 0.2288 ) }
    dend_56 { pt3dadd( 223.773, 112.403, 42.2344, 0.2288 ) }
    dend_56 { pt3dadd( 223.567, 111.476, 42.4805, 0.2288 ) }
    dend_56 { pt3dadd( 223.488, 110.49, 42.723, 0.2288 ) }
    dend_56 { pt3dadd( 223.614, 109.786, 42.9982, 0.2288 ) }
    dend_56 { pt3dadd( 223.538, 109.43, 43.1175, 0.2288 ) }
    dend_56 { pt3dadd( 223.194, 108.68, 42.9778, 0.2288 ) }
    dend_56 { pt3dadd( 223.271, 108.451, 42.8072, 0.2288 ) }
    dend_56 { pt3dadd( 223.08, 108.133, 42.7596, 0.2288 ) }
    dend_56 { pt3dadd( 223.067, 107.892, 42.7398, 0.2288 ) }
    dend_56 { pt3dadd( 222.966, 107.612, 42.6756, 0.2288 ) }
    dend_56 { pt3dadd( 222.883, 106.345, 42.7148, 0.2288 ) }
    dend_56 { pt3dadd( 222.842, 105.43, 42.5354, 0.2288 ) }
    dend_56 { pt3dadd( 222.119, 104.818, 42.4105, 0.2288 ) }
    dend_56 { pt3dadd( 222.045, 104.078, 42.1439, 0.2288 ) }
    dend_56 { pt3dadd( 221.822, 103.471, 41.6377, 0.2288 ) }
    dend_56 { pt3dadd( 220.956, 103.051, 41.1939, 0.2288 ) }
    dend_56 { pt3dadd( 220.305, 102.393, 40.9746, 0.2288 ) }
    dend_56 { pt3dadd( 220.015, 101.621, 41.046, 0.2288 ) }
    dend_56 { pt3dadd( 219.742, 100.938, 41.2812, 0.2288 ) }
    dend_56 { pt3dadd( 218.954, 100.614, 41.2941, 0.2288 ) }
    dend_56 { pt3dadd( 218.624, 100.187, 41.0376, 0.2288 ) }
    dend_56 { pt3dadd( 218.187, 99.6122, 40.7481, 0.2288 ) }
    dend_56 { pt3dadd( 218.173, 98.6349, 40.4438, 0.2288 ) }
    dend_56 { pt3dadd( 218.694, 97.8453, 40.2534, 0.2288 ) }
    dend_56 { pt3dadd( 218.838, 97.241, 40.4144, 0.2288 ) }
    dend_56 { pt3dadd( 219.312, 96.5509, 40.7761, 0.2288 ) }
    dend_56 { pt3dadd( 220.01, 95.8098, 40.9721, 0.2288 ) }
    dend_56 { pt3dadd( 220.236, 94.8394, 40.9844, 0.2288 ) }
    dend_56 { pt3dadd( 220.702, 94.1458, 40.668, 0.2288 ) }
    dend_56 { pt3dadd( 221.379, 93.4575, 40.3998, 0.2288 ) }
    dend_56 { pt3dadd( 221.936, 93.2097, 40.0938, 0.2288 ) }
    dend_56 { pt3dadd( 222.483, 92.4672, 39.6676, 0.2288 ) }
    dend_56 { pt3dadd( 223.096, 92.3123, 39.0401, 0.2288 ) }
    dend_56 { pt3dadd( 223.475, 91.4852, 38.4101, 0.2288 ) }
    dend_56 { pt3dadd( 224.095, 90.8934, 37.7938, 0.2288 ) }
    dend_56 { pt3dadd( 224.27, 90.2728, 37.5757, 0.2288 ) }
    dend_56 { pt3dadd( 224.135, 89.7438, 37.7544, 0.2288 ) }
    dend_56 { pt3dadd( 224.426, 88.7137, 37.9504, 0.2288 ) }
    dend_56 { pt3dadd( 224.575, 87.681, 38.1245, 0.2288 ) }
    dend_56 { pt3dadd( 224.707, 86.9183, 38.3079, 0.2288 ) }
    dend_56 { pt3dadd( 225.562, 86.2594, 38.3412, 0.2288 ) }
    dend_56 { pt3dadd( 225.676, 85.2883, 38.1385, 0.2288 ) }
    dend_56 { pt3dadd( 226.287, 84.7516, 37.7513, 0.2288 ) }
    dend_56 { pt3dadd( 226.531, 83.7917, 37.3794, 0.2288 ) }
    dend_56 { pt3dadd( 226.775, 82.8979, 37.2014, 0.2288 ) }
    dend_56 { pt3dadd( 227.084, 82.0248, 36.96, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    // Section: dend_52, id: dend_52, parent: dend_44 (entry count 0/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 202.593, 172.744, 34.1852, 0.6864 ) }
    dend_52 { pt3dadd( 202.171, 173.542, 35.6518, 0.3974 ) }
    dend_52 { pt3dadd( 201.424, 174.355, 36.0934, 0.2464 ) }
    dend_52 { pt3dadd( 200.87, 175.334, 36.2684, 0.2288 ) }
    dend_52 { pt3dadd( 200.433, 176.389, 36.4174, 0.4116 ) }
    dend_52 { pt3dadd( 200.026, 177.456, 36.5408, 0.498 ) }
    dend_52 { pt3dadd( 199.828, 178.572, 36.7038, 0.2984 ) }
    dend_52 { pt3dadd( 199.428, 179.613, 36.939, 0.6112 ) }
    dend_52 { pt3dadd( 198.692, 180.418, 37.2554, 0.2744 ) }
    dend_52 { pt3dadd( 197.767, 181.027, 37.6202, 0.2288 ) }
    dend_52 { pt3dadd( 196.712, 181.453, 37.8907, 0.498 ) }
    dend_52 { pt3dadd( 195.579, 181.564, 38.0646, 0.459 ) }
    dend_52 { pt3dadd( 194.45, 181.632, 38.2432, 0.234 ) }
    dend_52 { pt3dadd( 193.32, 181.805, 38.3734, 0.4566 ) }
    dend_52 { pt3dadd( 192.205, 181.555, 38.4734, 0.2468 ) }
    // Section: dend_45, id: dend_45, parent: dend_44 (entry count 15/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 202.593, 172.744, 34.1852, 0.6864 ) }
    dend_45 { pt3dadd( 202.149, 172.222, 34.9054, 0.447 ) }
    dend_45 { pt3dadd( 201.399, 171.387, 35.4998, 0.2468 ) }
    dend_45 { pt3dadd( 200.496, 170.687, 35.9372, 0.8274 ) }
    dend_45 { pt3dadd( 199.653, 169.916, 36.239, 0.6972 ) }
    dend_45 { pt3dadd( 198.761, 169.224, 36.3462, 0.6858 ) }
    dend_45 { pt3dadd( 197.811, 168.589, 36.3714, 0.4214 ) }
    dend_45 { pt3dadd( 196.838, 168.006, 36.3381, 0.3734 ) }
    dend_45 { pt3dadd( 195.885, 167.389, 36.3843, 0.2364 ) }
    dend_45 { pt3dadd( 195.221, 166.551, 36.6008, 0.2288 ) }
    // Section: dend_42, id: dend_42, parent: dend_39 (entry count 25/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 164.85, 169.477, 23.1983, 0.2288 ) }
    dend_42 { pt3dadd( 164.683, 168.707, 23.21, 0.2288 ) }
    dend_42 { pt3dadd( 164.442, 167.589, 23.2602, 0.2288 ) }
    dend_42 { pt3dadd( 164.352, 166.452, 23.3355, 0.2288 ) }
    dend_42 { pt3dadd( 164.229, 165.334, 23.4265, 0.2288 ) }
    dend_42 { pt3dadd( 163.607, 164.376, 23.5231, 0.2288 ) }
    dend_42 { pt3dadd( 162.954, 163.451, 23.6656, 0.2288 ) }
    dend_42 { pt3dadd( 162.255, 162.559, 23.8672, 0.2288 ) }
    dend_42 { pt3dadd( 161.478, 161.732, 24.085, 0.2288 ) }
    dend_42 { pt3dadd( 160.739, 160.873, 24.288, 0.2288 ) }
    dend_42 { pt3dadd( 160.129, 159.911, 24.4888, 0.2288 ) }
    dend_42 { pt3dadd( 159.488, 159.034, 24.7996, 0.2288 ) }
    dend_42 { pt3dadd( 158.847, 158.147, 25.1535, 0.2288 ) }
    dend_42 { pt3dadd( 158.198, 157.204, 25.4257, 0.2288 ) }
    dend_42 { pt3dadd( 157.69, 156.182, 25.634, 0.2288 ) }
    dend_42 { pt3dadd( 157.157, 155.184, 25.7905, 0.2288 ) }
    dend_42 { pt3dadd( 156.347, 154.375, 25.9036, 0.2288 ) }
    dend_42 { pt3dadd( 155.538, 153.567, 25.9818, 0.2288 ) }
    dend_42 { pt3dadd( 154.941, 152.609, 26.0817, 0.2288 ) }
    dend_42 { pt3dadd( 154.425, 151.594, 26.2254, 0.2288 ) }
    dend_42 { pt3dadd( 153.909, 150.579, 26.4001, 0.2288 ) }
    dend_42 { pt3dadd( 153.437, 149.539, 26.5714, 0.2288 ) }
    dend_42 { pt3dadd( 152.986, 148.488, 26.7302, 0.2288 ) }
    dend_42 { pt3dadd( 152.535, 147.436, 26.8856, 0.2288 ) }
    dend_42 { pt3dadd( 152.257, 146.329, 27.0463, 0.2288 ) }
    dend_42 { pt3dadd( 152.02, 145.209, 27.2238, 0.2288 ) }
    dend_42 { pt3dadd( 151.822, 144.119, 27.5206, 0.2288 ) }
    dend_42 { pt3dadd( 151.628, 143.032, 27.9194, 0.2288 ) }
    dend_42 { pt3dadd( 151.434, 141.945, 28.3844, 0.2288 ) }
    dend_42 { pt3dadd( 151.239, 140.858, 28.8812, 0.2288 ) }
    dend_42 { pt3dadd( 151.225, 139.774, 29.3462, 0.2288 ) }
    dend_42 { pt3dadd( 151.604, 138.694, 29.6943, 0.2288 ) }
    dend_42 { pt3dadd( 151.982, 137.614, 29.9382, 0.2288 ) }
    dend_42 { pt3dadd( 152.334, 136.527, 30.1073, 0.2288 ) }
    dend_42 { pt3dadd( 152.596, 135.413, 30.2313, 0.2288 ) }
    dend_42 { pt3dadd( 152.372, 134.308, 30.3859, 0.2288 ) }
    dend_42 { pt3dadd( 152.12, 133.202, 30.5782, 0.2288 ) }
    dend_42 { pt3dadd( 151.666, 132.167, 30.7706, 0.2288 ) }
    dend_42 { pt3dadd( 151.219, 131.136, 30.9616, 0.2288 ) }
    dend_42 { pt3dadd( 151.024, 130.027, 31.1945, 0.2288 ) }
    dend_42 { pt3dadd( 150.778, 128.917, 31.404, 0.2288 ) }
    dend_42 { pt3dadd( 150.501, 127.808, 31.5605, 0.2288 ) }
    dend_42 { pt3dadd( 150.134, 126.728, 31.6789, 0.2288 ) }
    dend_42 { pt3dadd( 149.568, 125.748, 31.7733, 0.2288 ) }
    dend_42 { pt3dadd( 148.775, 124.928, 31.8727, 0.2288 ) }
    dend_42 { pt3dadd( 147.963, 124.127, 31.9841, 0.2288 ) }
    dend_42 { pt3dadd( 147.15, 123.328, 32.1096, 0.2288 ) }
    dend_42 { pt3dadd( 146.336, 122.53, 32.2437, 0.2288 ) }
    dend_42 { pt3dadd( 145.312, 122.021, 32.3439, 0.2288 ) }
    dend_42 { pt3dadd( 144.232, 121.644, 32.4131, 0.2288 ) }
    dend_42 { pt3dadd( 143.121, 121.446, 32.4542, 0.2288 ) }
    dend_42 { pt3dadd( 141.977, 121.446, 32.4738, 0.2288 ) }
    dend_42 { pt3dadd( 140.833, 121.445, 32.48, 0.2288 ) }
    dend_42 { pt3dadd( 139.702, 121.558, 32.48, 0.2288 ) }
    dend_42 { pt3dadd( 138.601, 121.529, 32.48, 0.2288 ) }
    dend_42 { pt3dadd( 137.528, 121.135, 32.48, 0.2288 ) }
    dend_42 { pt3dadd( 136.623, 121.781, 32.48, 0.2288 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 82/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 164.85, 169.477, 23.1983, 0.2288 ) }
    dend_41 { pt3dadd( 164.416, 169.047, 22.948, 0.2288 ) }
    dend_41 { pt3dadd( 163.669, 168.558, 22.3003, 0.2288 ) }
    dend_41 { pt3dadd( 163.01, 167.939, 22.1631, 0.2288 ) }
    dend_41 { pt3dadd( 162.01, 167.557, 22.0273, 0.2288 ) }
    dend_41 { pt3dadd( 161.115, 166.919, 21.8263, 0.2288 ) }
    dend_41 { pt3dadd( 160.495, 166.467, 21.6328, 0.2288 ) }
    dend_41 { pt3dadd( 159.968, 165.994, 21.2806, 0.2288 ) }
    dend_41 { pt3dadd( 159.143, 165.651, 21.1355, 0.2288 ) }
    dend_41 { pt3dadd( 159.09, 165.37, 20.9964, 0.2288 ) }
    dend_41 { pt3dadd( 158.27, 164.856, 20.7665, 0.2288 ) }
    dend_41 { pt3dadd( 157.289, 164.691, 20.634, 0.2288 ) }
    dend_41 { pt3dadd( 156.201, 164.445, 20.4828, 0.2288 ) }
    dend_41 { pt3dadd( 155.138, 164.039, 20.3316, 0.2288 ) }
    dend_41 { pt3dadd( 154.096, 163.574, 20.1709, 0.2288 ) }
    dend_41 { pt3dadd( 153.222, 163.029, 19.9878, 0.2288 ) }
    dend_41 { pt3dadd( 152.357, 162.523, 19.6843, 0.2288 ) }
    dend_41 { pt3dadd( 151.396, 162.067, 19.4099, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_41 { pt3dadd( 150.349, 161.703, 19.1954, 0.2288 ) }
    dend_41 { pt3dadd( 149.244, 161.418, 19.028, 0.2288 ) }
    dend_41 { pt3dadd( 148.1, 161.418, 18.8961, 0.2288 ) }
    dend_41 { pt3dadd( 146.956, 161.407, 18.7916, 0.2288 ) }
    dend_41 { pt3dadd( 145.879, 161.123, 18.6679, 0.2288 ) }
    dend_41 { pt3dadd( 145.098, 160.316, 18.5114, 0.2288 ) }
    dend_41 { pt3dadd( 144.003, 160.062, 18.3394, 0.2288 ) }
    dend_41 { pt3dadd( 142.876, 159.958, 18.1289, 0.2288 ) }
    dend_41 { pt3dadd( 141.807, 159.86, 17.8461, 0.2288 ) }
    dend_41 { pt3dadd( 140.848, 159.255, 17.6084, 0.2288 ) }
    dend_41 { pt3dadd( 139.872, 158.701, 17.386, 0.2288 ) }
    dend_41 { pt3dadd( 139.203, 157.778, 17.2267, 0.2288 ) }
    dend_41 { pt3dadd( 138.365, 157.046, 17.1416, 0.2288 ) }
    dend_41 { pt3dadd( 137.319, 156.613, 17.0775, 0.2288 ) }
    dend_41 { pt3dadd( 136.181, 156.527, 17.0215, 0.2288 ) }
    dend_41 { pt3dadd( 135.478, 155.792, 16.8344, 0.2288 ) }
    dend_41 { pt3dadd( 134.375, 155.491, 16.6726, 0.2288 ) }
    dend_41 { pt3dadd( 133.31, 155.072, 16.5248, 0.2288 ) }
    dend_41 { pt3dadd( 132.303, 154.537, 16.3876, 0.2288 ) }
    dend_41 { pt3dadd( 131.361, 153.933, 16.2607, 0.2288 ) }
    dend_41 { pt3dadd( 130.562, 153.151, 16.1188, 0.2288 ) }
    dend_41 { pt3dadd( 129.486, 152.937, 15.9342, 0.2288 ) }
    dend_41 { pt3dadd( 128.562, 152.284, 15.7282, 0.2288 ) }
    dend_41 { pt3dadd( 128.014, 151.354, 15.4697, 0.2288 ) }
    dend_41 { pt3dadd( 127.531, 150.405, 15.1735, 0.2288 ) }
    dend_41 { pt3dadd( 126.653, 149.706, 14.9895, 0.2288 ) }
    dend_41 { pt3dadd( 125.71, 149.08, 14.8677, 0.2288 ) }
    dend_41 { pt3dadd( 124.752, 148.467, 14.793, 0.2288 ) }
    dend_41 { pt3dadd( 123.991, 147.647, 14.7498, 0.2288 ) }
    dend_41 { pt3dadd( 123.197, 146.885, 14.6952, 0.2288 ) }
    dend_41 { pt3dadd( 122.286, 146.245, 14.6532, 0.2288 ) }
    dend_41 { pt3dadd( 121.534, 145.401, 14.6149, 0.2288 ) }
    dend_41 { pt3dadd( 120.719, 144.658, 14.5866, 0.2288 ) }
    dend_41 { pt3dadd( 120.12, 143.686, 14.56, 0.2288 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 34/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 164.85, 169.477, 23.1983, 0.2288 ) }
    dend_40 { pt3dadd( 164.111, 168.674, 22.96, 0.2288 ) }
    dend_40 { pt3dadd( 163.799, 167.807, 23.588, 0.2288 ) }
    dend_40 { pt3dadd( 163.208, 167.373, 23.9702, 0.2288 ) }
    dend_40 { pt3dadd( 163.134, 166.263, 24.2074, 0.2288 ) }
    dend_40 { pt3dadd( 162.393, 165.992, 24.2262, 0.2288 ) }
    dend_40 { pt3dadd( 161.6, 165.4, 24.1931, 0.2288 ) }
    dend_40 { pt3dadd( 160.809, 164.659, 24.2183, 0.2288 ) }
    dend_40 { pt3dadd( 160.511, 164.308, 24.176, 0.2288 ) }
    dend_40 { pt3dadd( 159.777, 163.468, 24.0808, 0.2288 ) }
    dend_40 { pt3dadd( 159.11, 162.654, 24.1178, 0.2288 ) }
    dend_40 { pt3dadd( 158.207, 162.138, 24.0898, 0.2288 ) }
    dend_40 { pt3dadd( 157.273, 161.585, 24.0436, 0.2288 ) }
    dend_40 { pt3dadd( 156.536, 160.928, 24.1282, 0.2288 ) }
    dend_40 { pt3dadd( 155.686, 160.732, 24.2194, 0.2288 ) }
    dend_40 { pt3dadd( 154.902, 160.095, 24.3124, 0.2288 ) }
    dend_40 { pt3dadd( 154.014, 159.373, 24.3967, 0.2288 ) }
    dend_40 { pt3dadd( 153.128, 158.651, 24.4849, 0.2288 ) }
    dend_40 { pt3dadd( 152.24, 157.93, 24.5602, 0.2288 ) }
    dend_40 { pt3dadd( 151.358, 157.203, 24.6154, 0.2288 ) }
    dend_40 { pt3dadd( 150.473, 156.482, 24.6632, 0.2288 ) }
    dend_40 { pt3dadd( 149.65, 155.688, 24.708, 0.2288 ) }
    dend_40 { pt3dadd( 148.75, 154.987, 24.7534, 0.2288 ) }
    dend_40 { pt3dadd( 148.02, 154.108, 24.8027, 0.2288 ) }
    dend_40 { pt3dadd( 147.455, 153.13, 24.859, 0.2288 ) }
    dend_40 { pt3dadd( 146.794, 152.366, 24.9869, 0.2288 ) }
    dend_40 { pt3dadd( 146.316, 151.432, 25.1255, 0.2288 ) }
    dend_40 { pt3dadd( 145.967, 150.436, 25.2554, 0.2288 ) }
    dend_40 { pt3dadd( 144.977, 149.99, 25.3831, 0.2288 ) }
    dend_40 { pt3dadd( 144.642, 148.908, 25.517, 0.2288 ) }
    dend_40 { pt3dadd( 144.372, 147.801, 25.6698, 0.2288 ) }
    dend_40 { pt3dadd( 144.092, 146.699, 25.8644, 0.2288 ) }
    dend_40 { pt3dadd( 144.025, 145.571, 26.1495, 0.2288 ) }
    dend_40 { pt3dadd( 143.915, 144.438, 26.5048, 0.2288 ) }
    dend_40 { pt3dadd( 143.915, 143.355, 26.9671, 0.2288 ) }
    dend_40 { pt3dadd( 143.535, 142.582, 27.6713, 0.2288 ) }
    dend_40 { pt3dadd( 142.886, 142.036, 28.4819, 0.2288 ) }
    dend_40 { pt3dadd( 142.539, 141.265, 29.3126, 0.2288 ) }
    dend_40 { pt3dadd( 141.461, 140.948, 29.9603, 0.2288 ) }
    dend_40 { pt3dadd( 140.521, 140.331, 30.4506, 0.2288 ) }
    dend_40 { pt3dadd( 139.741, 139.321, 30.8101, 0.2288 ) }
    dend_40 { pt3dadd( 138.965, 138.499, 31.0722, 0.2288 ) }
    dend_40 { pt3dadd( 137.976, 137.994, 31.3656, 0.2288 ) }
    dend_40 { pt3dadd( 136.976, 137.553, 31.7568, 0.2288 ) }
    dend_40 { pt3dadd( 135.994, 137.029, 32.2036, 0.2288 ) }
    dend_40 { pt3dadd( 135.027, 136.44, 32.6564, 0.2288 ) }
    dend_40 { pt3dadd( 134.06, 135.851, 33.1024, 0.2288 ) }
    dend_40 { pt3dadd( 133.093, 135.262, 33.5356, 0.2288 ) }
    dend_40 { pt3dadd( 132.243, 134.548, 33.9195, 0.2288 ) }
    dend_40 { pt3dadd( 131.305, 134.012, 34.2821, 0.2288 ) }
    dend_40 { pt3dadd( 130.258, 133.622, 34.6486, 0.2288 ) }
    dend_40 { pt3dadd( 129.21, 133.23, 35.0098, 0.2288 ) }
    dend_40 { pt3dadd( 128.077, 133.14, 35.56, 0.2288 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 87/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 170.514, 149.555, 21.905, 0.449 ) }
    dend_38 { pt3dadd( 170.066, 148.496, 21.0255, 0.2288 ) }
    dend_38 { pt3dadd( 169.697, 147.673, 20.9303, 0.2288 ) }
    dend_38 { pt3dadd( 169.0, 146.977, 20.8706, 0.2288 ) }
    dend_38 { pt3dadd( 168.168, 146.54, 20.7738, 0.2288 ) }
    dend_38 { pt3dadd( 168.077, 145.453, 20.5422, 0.2288 ) }
    dend_38 { pt3dadd( 167.868, 144.376, 20.2152, 0.2288 ) }
    dend_38 { pt3dadd( 167.196, 143.559, 19.9522, 0.2288 ) }
    dend_38 { pt3dadd( 166.295, 143.066, 19.6112, 0.2288 ) }
    dend_38 { pt3dadd( 165.472, 142.542, 19.2086, 0.2288 ) }
    dend_38 { pt3dadd( 165.143, 141.818, 18.8448, 0.2288 ) }
    dend_38 { pt3dadd( 164.747, 140.887, 18.3669, 0.2288 ) }
    dend_38 { pt3dadd( 164.736, 139.785, 17.9085, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_38 { pt3dadd( 164.266, 138.872, 17.5087, 0.2288 ) }
    dend_38 { pt3dadd( 163.821, 137.941, 17.1886, 0.2288 ) }
    dend_38 { pt3dadd( 163.65, 136.828, 16.9198, 0.2288 ) }
    dend_38 { pt3dadd( 163.176, 135.865, 16.5679, 0.2288 ) }
    dend_38 { pt3dadd( 162.894, 134.787, 16.2462, 0.2288 ) }
    dend_38 { pt3dadd( 161.981, 134.452, 15.8572, 0.2288 ) }
    dend_38 { pt3dadd( 161.517, 133.436, 15.4958, 0.2288 ) }
    dend_38 { pt3dadd( 160.982, 132.455, 15.1102, 0.2288 ) }
    dend_38 { pt3dadd( 160.519, 131.616, 14.6516, 0.2288 ) }
    dend_38 { pt3dadd( 160.046, 131.217, 13.44, 0.2288 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 10/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 170.514, 149.555, 21.905, 0.449 ) }
    dend_37 { pt3dadd( 170.207, 148.436, 22.0954, 0.3182 ) }
    dend_37 { pt3dadd( 170.112, 147.321, 22.395, 0.2288 ) }
    dend_37 { pt3dadd( 170.105, 146.178, 22.7178, 0.2288 ) }
    dend_37 { pt3dadd( 170.056, 145.039, 23.072, 0.2288 ) }
    dend_37 { pt3dadd( 170.058, 143.987, 23.5771, 0.2288 ) }
    dend_37 { pt3dadd( 170.533, 143.001, 24.1475, 0.2288 ) }
    dend_37 { pt3dadd( 170.57, 141.906, 24.7808, 0.23 ) }
    dend_37 { pt3dadd( 170.565, 140.806, 25.4372, 0.2342 ) }
    dend_37 { pt3dadd( 170.425, 139.801, 26.1612, 0.2288 ) }
    dend_37 { pt3dadd( 169.756, 138.969, 26.8755, 0.2288 ) }
    dend_37 { pt3dadd( 169.041, 138.182, 27.5117, 0.2288 ) }
    dend_37 { pt3dadd( 168.583, 137.134, 27.9826, 0.2288 ) }
    dend_37 { pt3dadd( 167.98, 136.171, 28.3203, 0.2288 ) }
    dend_37 { pt3dadd( 167.357, 135.349, 28.5986, 0.2288 ) }
    dend_37 { pt3dadd( 166.379, 134.871, 28.8344, 0.2288 ) }
    dend_37 { pt3dadd( 165.732, 133.972, 29.0609, 0.2288 ) }
    dend_37 { pt3dadd( 165.005, 133.107, 29.288, 0.2288 ) }
    dend_37 { pt3dadd( 164.417, 132.137, 29.4935, 0.2288 ) }
    dend_37 { pt3dadd( 163.889, 131.144, 29.7119, 0.2288 ) }
    dend_37 { pt3dadd( 163.134, 130.314, 29.9166, 0.2288 ) }
    dend_37 { pt3dadd( 162.622, 129.852, 30.1109, 0.2288 ) }
    dend_37 { pt3dadd( 161.802, 129.064, 30.3092, 0.2288 ) }
    dend_37 { pt3dadd( 161.273, 128.055, 30.5603, 0.2288 ) }
    dend_37 { pt3dadd( 160.838, 127.301, 31.0677, 0.2288 ) }
    dend_37 { pt3dadd( 160.355, 126.715, 31.8447, 0.2288 ) }
    dend_37 { pt3dadd( 159.302, 126.349, 32.5153, 0.2288 ) }
    dend_37 { pt3dadd( 158.348, 126.077, 33.2021, 0.2288 ) }
    dend_37 { pt3dadd( 157.595, 125.783, 33.9833, 0.2288 ) }
    dend_37 { pt3dadd( 156.654, 126.155, 34.5439, 0.2288 ) }
    dend_37 { pt3dadd( 155.725, 125.488, 34.9017, 0.2288 ) }
    dend_37 { pt3dadd( 154.805, 124.807, 35.1106, 0.2288 ) }
    dend_37 { pt3dadd( 153.868, 124.155, 35.2335, 0.2288 ) }
    dend_37 { pt3dadd( 152.865, 123.605, 35.28, 0.2288 ) }
    dend_37 { pt3dadd( 151.861, 123.055, 35.28, 0.2288 ) }
    dend_37 { pt3dadd( 150.858, 122.506, 35.28, 0.2288 ) }
    dend_37 { pt3dadd( 150.197, 121.627, 35.28, 0.2288 ) }
    dend_37 { pt3dadd( 149.996, 120.538, 35.28, 0.2288 ) }
    dend_37 { pt3dadd( 150.049, 119.395, 35.28, 0.2288 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 49/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 199.011, 197.647, 25.6197, 0.4576 ) }
    dend_19 { pt3dadd( 197.849, 198.434, 25.7449, 0.3954 ) }
    dend_19 { pt3dadd( 197.345, 199.395, 25.9406, 0.4414 ) }
    dend_19 { pt3dadd( 196.776, 200.375, 26.089, 0.3648 ) }
    dend_19 { pt3dadd( 196.409, 201.447, 26.1674, 0.4366 ) }
    dend_19 { pt3dadd( 196.117, 202.525, 26.2875, 0.4576 ) }
    dend_19 { pt3dadd( 195.529, 203.49, 26.3735, 0.4576 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 56/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 199.011, 197.647, 25.6197, 0.4576 ) }
    dend_12 { pt3dadd( 198.242, 198.073, 24.8038, 0.4576 ) }
    dend_12 { pt3dadd( 197.502, 198.919, 24.1962, 0.3044 ) }
    dend_12 { pt3dadd( 196.56, 199.536, 23.931, 0.4176 ) }
    dend_12 { pt3dadd( 195.487, 199.905, 23.6312, 0.3224 ) }
    dend_12 { pt3dadd( 194.419, 200.304, 23.3234, 0.2294 ) }
    dend_12 { pt3dadd( 193.54, 201.034, 23.0465, 0.4342 ) }
    dend_12 { pt3dadd( 192.571, 201.636, 22.7769, 0.2786 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 64/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 212.852, 167.999, 17.9931, 0.4576 ) }
    dend_8 { pt3dadd( 212.898, 167.096, 19.5779, 0.2288 ) }
    dend_8 { pt3dadd( 213.127, 166.092, 19.8125, 0.2288 ) }
    dend_8 { pt3dadd( 213.432, 165.207, 19.9469, 0.2288 ) }
    dend_8 { pt3dadd( 213.818, 164.286, 20.1401, 0.2288 ) }
    dend_8 { pt3dadd( 214.473, 163.531, 20.4557, 0.2288 ) }
    dend_8 { pt3dadd( 215.271, 162.921, 20.629, 0.2288 ) }
    dend_8 { pt3dadd( 215.491, 161.861, 20.697, 0.2288 ) }
    dend_8 { pt3dadd( 215.644, 161.025, 20.6794, 0.2288 ) }
    dend_8 { pt3dadd( 216.138, 160.316, 20.8314, 0.2288 ) }
    dend_8 { pt3dadd( 216.604, 159.519, 20.7444, 0.2288 ) }
    dend_8 { pt3dadd( 216.504, 158.689, 20.4551, 0.2288 ) }
    dend_8 { pt3dadd( 216.645, 157.587, 20.2401, 0.2288 ) }
    dend_8 { pt3dadd( 216.75, 157.009, 20.391, 0.2288 ) }
    dend_8 { pt3dadd( 216.833, 156.132, 20.5229, 0.2288 ) }
    dend_8 { pt3dadd( 217.111, 155.12, 20.5383, 0.2288 ) }
    dend_8 { pt3dadd( 217.025, 154.114, 20.6942, 0.2288 ) }
    dend_8 { pt3dadd( 217.129, 153.567, 21.0748, 0.2288 ) }
    dend_8 { pt3dadd( 217.063, 152.654, 21.2814, 0.2288 ) }
    dend_8 { pt3dadd( 217.462, 151.707, 21.4998, 0.2288 ) }
    dend_8 { pt3dadd( 217.309, 151.209, 21.8809, 0.2288 ) }
    dend_8 { pt3dadd( 217.065, 150.268, 22.2348, 0.2288 ) }
    dend_8 { pt3dadd( 217.703, 149.655, 22.7438, 0.2288 ) }
    dend_8 { pt3dadd( 218.077, 149.001, 23.1465, 0.2288 ) }
    dend_8 { pt3dadd( 218.287, 147.911, 23.5099, 0.2288 ) }
    dend_8 { pt3dadd( 218.177, 147.02, 23.7854, 0.2288 ) }
    dend_8 { pt3dadd( 218.164, 146.153, 24.054, 0.2288 ) }
    dend_8 { pt3dadd( 217.945, 145.105, 24.1049, 0.2288 ) }
    dend_8 { pt3dadd( 217.946, 144.113, 24.0212, 0.2288 ) }
    dend_8 { pt3dadd( 218.034, 142.987, 24.001, 0.2288 ) }
    dend_8 { pt3dadd( 218.275, 141.895, 24.0167, 0.2288 ) }
    dend_8 { pt3dadd( 218.3, 140.759, 24.0484, 0.2288 ) }
    dend_8 { pt3dadd( 218.695, 139.738, 24.1486, 0.2288 ) }
    dend_8 { pt3dadd( 219.234, 138.747, 24.2206, 0.2288 ) }
    dend_8 { pt3dadd( 219.745, 137.731, 24.2704, 0.2288 ) }
    dend_8 { pt3dadd( 220.464, 136.859, 24.2609, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_8 { pt3dadd( 221.107, 135.94, 24.1685, 0.2288 ) }
    dend_8 { pt3dadd( 221.593, 135.08, 23.9767, 0.2288 ) }
    dend_8 { pt3dadd( 222.269, 134.521, 23.7446, 0.2288 ) }
    dend_8 { pt3dadd( 222.685, 133.626, 23.543, 0.2288 ) }
    dend_8 { pt3dadd( 223.714, 133.21, 23.3646, 0.2288 ) }
    dend_8 { pt3dadd( 224.224, 132.472, 23.1664, 0.2288 ) }
    dend_8 { pt3dadd( 224.224, 131.328, 22.9964, 0.2288 ) }
    dend_8 { pt3dadd( 224.706, 130.473, 22.7601, 0.2288 ) }
    dend_8 { pt3dadd( 225.423, 129.595, 22.5476, 0.2288 ) }
    dend_8 { pt3dadd( 226.136, 129.043, 22.3054, 0.2288 ) }
    dend_8 { pt3dadd( 227.251, 129.043, 22.0167, 0.2288 ) }
    dend_8 { pt3dadd( 227.808, 128.28, 21.7832, 0.2288 ) }
    dend_8 { pt3dadd( 228.342, 127.713, 21.4354, 0.2288 ) }
    dend_8 { pt3dadd( 228.8, 126.755, 21.1848, 0.2288 ) }
    dend_8 { pt3dadd( 229.693, 126.056, 21.0244, 0.2288 ) }
    dend_8 { pt3dadd( 230.351, 125.166, 20.953, 0.2288 ) }
    dend_8 { pt3dadd( 230.958, 124.229, 20.9213, 0.2288 ) }
    dend_8 { pt3dadd( 231.758, 123.43, 20.9096, 0.2288 ) }
    dend_8 { pt3dadd( 232.249, 122.494, 20.9126, 0.2288 ) }
    dend_8 { pt3dadd( 233.27, 122.21, 20.8972, 0.2288 ) }
    dend_8 { pt3dadd( 233.916, 121.328, 20.8664, 0.2288 ) }
    dend_8 { pt3dadd( 234.557, 120.477, 20.8256, 0.2288 ) }
    dend_8 { pt3dadd( 235.502, 119.971, 20.7234, 0.2288 ) }
    dend_8 { pt3dadd( 236.237, 119.166, 20.6167, 0.2288 ) }
    dend_8 { pt3dadd( 237.266, 118.747, 20.44, 0.2288 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 25/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 212.852, 167.999, 17.9931, 0.4576 ) }
    dend_3 { pt3dadd( 212.473, 167.594, 17.5683, 0.3654 ) }
    dend_3 { pt3dadd( 211.653, 166.956, 17.129, 0.2676 ) }
    dend_3 { pt3dadd( 210.561, 166.723, 16.7611, 0.3712 ) }
    dend_3 { pt3dadd( 209.747, 166.087, 16.3436, 0.2912 ) }
    dend_3 { pt3dadd( 209.131, 165.204, 16.014, 0.3574 ) }
    dend_3 { pt3dadd( 208.314, 164.451, 15.8934, 0.4404 ) }
    dend_3 { pt3dadd( 207.52, 163.645, 15.8525, 0.4102 ) }
    dend_3 { pt3dadd( 206.897, 162.695, 15.85, 0.4264 ) }
    dend_3 { pt3dadd( 206.29, 161.734, 15.9006, 0.4576 ) }
    dend_3 { pt3dadd( 205.58, 160.839, 15.9785, 0.4576 ) }
    dend_3 { pt3dadd( 204.826, 159.98, 16.0269, 0.6088 ) }
    dend_3 { pt3dadd( 204.08, 159.118, 16.0152, 0.2564 ) }
    dend_3 { pt3dadd( 203.706, 158.04, 15.9902, 0.2288 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 39/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 192.205, 181.555, 38.4734, 0.2468 ) }
    dend_54 { pt3dadd( 192.168, 181.287, 38.7218, 0.241 ) }
    dend_54 { pt3dadd( 192.112, 180.187, 39.314, 0.2288 ) }
    dend_54 { pt3dadd( 191.97, 179.101, 39.571, 0.2288 ) }
    dend_54 { pt3dadd( 191.996, 177.986, 39.8594, 0.2288 ) }
    dend_54 { pt3dadd( 191.474, 176.993, 40.1475, 0.2288 ) }
    dend_54 { pt3dadd( 190.894, 176.016, 40.4292, 0.2288 ) }
    dend_54 { pt3dadd( 190.417, 174.995, 40.6874, 0.2288 ) }
    dend_54 { pt3dadd( 190.168, 173.879, 40.882, 0.2288 ) }
    dend_54 { pt3dadd( 189.724, 172.83, 41.0287, 0.2288 ) }
    dend_54 { pt3dadd( 189.212, 171.807, 41.1415, 0.2288 ) }
    dend_54 { pt3dadd( 188.554, 170.957, 41.2812, 0.2288 ) }
    dend_54 { pt3dadd( 187.77, 170.219, 41.72, 0.2288 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 52/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 192.205, 181.555, 38.4734, 0.2468 ) }
    dend_53 { pt3dadd( 191.76, 181.514, 38.5958, 0.239 ) }
    dend_53 { pt3dadd( 190.66, 181.343, 38.7453, 0.2288 ) }
    dend_53 { pt3dadd( 189.661, 181.396, 38.7355, 0.2288 ) }
    dend_53 { pt3dadd( 188.983, 181.398, 38.773, 0.2288 ) }
    dend_53 { pt3dadd( 187.999, 181.667, 38.8528, 0.2288 ) }
    dend_53 { pt3dadd( 186.871, 181.716, 38.9007, 0.2288 ) }
    dend_53 { pt3dadd( 185.918, 182.01, 38.8178, 0.2288 ) }
    dend_53 { pt3dadd( 184.898, 182.038, 38.8315, 0.2288 ) }
    dend_53 { pt3dadd( 183.85, 182.125, 38.7713, 0.2288 ) }
    dend_53 { pt3dadd( 182.881, 181.799, 38.724, 0.2288 ) }
    dend_53 { pt3dadd( 181.77, 181.667, 38.71, 0.2288 ) }
    dend_53 { pt3dadd( 181.217, 181.485, 38.4306, 0.2288 ) }
    dend_53 { pt3dadd( 180.267, 181.553, 38.2995, 0.2288 ) }
    dend_53 { pt3dadd( 179.418, 181.763, 38.3816, 0.2288 ) }
    dend_53 { pt3dadd( 178.445, 181.557, 38.4625, 0.2288 ) }
    dend_53 { pt3dadd( 177.386, 181.438, 38.3922, 0.2288 ) }
    dend_53 { pt3dadd( 176.564, 180.984, 38.2295, 0.2288 ) }
    dend_53 { pt3dadd( 175.515, 180.878, 38.1732, 0.2288 ) }
    dend_53 { pt3dadd( 174.588, 181.027, 37.9982, 0.2288 ) }
    dend_53 { pt3dadd( 173.497, 181.095, 37.926, 0.2288 ) }
    dend_53 { pt3dadd( 172.48, 180.84, 37.8969, 0.2288 ) }
    dend_53 { pt3dadd( 171.677, 180.63, 38.0464, 0.2288 ) }
    dend_53 { pt3dadd( 170.643, 180.834, 38.1422, 0.2288 ) }
    dend_53 { pt3dadd( 169.755, 181.391, 38.1338, 0.2288 ) }
    dend_53 { pt3dadd( 168.842, 181.826, 38.0313, 0.2288 ) }
    dend_53 { pt3dadd( 167.786, 182.044, 37.8748, 0.2288 ) }
    dend_53 { pt3dadd( 166.904, 182.468, 37.7434, 0.2288 ) }
    dend_53 { pt3dadd( 166.085, 183.111, 37.6158, 0.2288 ) }
    dend_53 { pt3dadd( 165.292, 183.9, 37.518, 0.2288 ) }
    dend_53 { pt3dadd( 164.702, 183.841, 37.214, 0.2288 ) }
    dend_53 { pt3dadd( 163.603, 183.841, 37.0938, 0.2288 ) }
    dend_53 { pt3dadd( 162.65, 184.203, 37.0082, 0.2288 ) }
    dend_53 { pt3dadd( 161.55, 184.298, 37.0325, 0.2288 ) }
    dend_53 { pt3dadd( 160.475, 184.409, 37.1028, 0.2288 ) }
    dend_53 { pt3dadd( 159.426, 184.587, 37.2882, 0.2288 ) }
    dend_53 { pt3dadd( 158.439, 184.715, 37.4973, 0.2288 ) }
    dend_53 { pt3dadd( 157.359, 184.488, 37.5906, 0.2288 ) }
    dend_53 { pt3dadd( 156.228, 184.384, 37.7068, 0.2288 ) }
    dend_53 { pt3dadd( 155.134, 184.184, 37.7745, 0.2288 ) }
    dend_53 { pt3dadd( 154.041, 184.128, 37.7955, 0.2288 ) }
    dend_53 { pt3dadd( 152.971, 183.951, 37.8462, 0.2288 ) }
    dend_53 { pt3dadd( 152.413, 183.18, 38.0324, 0.2288 ) }
    dend_53 { pt3dadd( 151.626, 182.926, 38.4146, 0.2288 ) }
    dend_53 { pt3dadd( 150.66, 183.097, 38.8408, 0.2288 ) }
    dend_53 { pt3dadd( 149.548, 182.91, 39.2879, 0.2288 ) }
    dend_53 { pt3dadd( 148.467, 182.625, 39.6892, 0.2288 ) }
    dend_53 { pt3dadd( 147.547, 182.748, 40.0924, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_53 { pt3dadd( 146.538, 183.059, 40.511, 0.2288 ) }
    dend_53 { pt3dadd( 145.453, 182.892, 40.9436, 0.2288 ) }
    dend_53 { pt3dadd( 144.358, 182.728, 41.3675, 0.2288 ) }
    dend_53 { pt3dadd( 143.223, 182.582, 42.0, 0.2288 ) }
    // Section: dend_51, id: dend_51, parent: dend_45 (entry count 4/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 195.221, 166.551, 36.6008, 0.2288 ) }
    dend_51 { pt3dadd( 195.798, 166.101, 38.239, 0.2288 ) }
    dend_51 { pt3dadd( 196.533, 165.386, 39.9328, 0.2288 ) }
    dend_51 { pt3dadd( 197.032, 164.679, 40.7128, 0.2288 ) }
    dend_51 { pt3dadd( 197.27, 163.838, 41.6125, 0.2288 ) }
    dend_51 { pt3dadd( 197.583, 162.755, 42.3758, 0.2288 ) }
    dend_51 { pt3dadd( 198.063, 161.773, 43.0881, 0.2288 ) }
    dend_51 { pt3dadd( 198.49, 160.844, 43.8427, 0.2288 ) }
    dend_51 { pt3dadd( 199.035, 159.865, 44.4321, 0.2288 ) }
    dend_51 { pt3dadd( 199.742, 159.019, 44.9484, 0.2288 ) }
    dend_51 { pt3dadd( 199.999, 158.015, 45.5874, 0.2288 ) }
    dend_51 { pt3dadd( 200.19, 156.957, 46.2146, 0.2288 ) }
    dend_51 { pt3dadd( 200.982, 156.131, 46.7928, 0.2288 ) }
    dend_51 { pt3dadd( 201.572, 155.33, 47.4323, 0.2288 ) }
    dend_51 { pt3dadd( 201.654, 154.576, 48.365, 0.2288 ) }
    dend_51 { pt3dadd( 202.114, 153.68, 49.373, 0.2288 ) }
    dend_51 { pt3dadd( 202.618, 152.781, 50.3583, 0.2288 ) }
    dend_51 { pt3dadd( 203.474, 152.55, 51.2898, 0.2288 ) }
    dend_51 { pt3dadd( 204.424, 152.699, 52.2138, 0.2288 ) }
    dend_51 { pt3dadd( 205.267, 151.941, 53.48, 0.2288 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 24/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 195.221, 166.551, 36.6008, 0.2288 ) }
    dend_46 { pt3dadd( 194.867, 166.16, 36.8264, 0.2318 ) }
    dend_46 { pt3dadd( 193.979, 165.483, 37.0748, 0.4522 ) }
    dend_46 { pt3dadd( 193.381, 165.078, 37.1375, 0.2288 ) }
    dend_46 { pt3dadd( 192.536, 165.059, 37.3537, 0.2288 ) }
    dend_46 { pt3dadd( 191.658, 164.698, 37.5774, 0.2288 ) }
    dend_46 { pt3dadd( 191.379, 164.291, 37.791, 0.2288 ) }
    // Section: dend_29, id: dend_29, parent: dend_19 (entry count 31/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 195.529, 203.49, 26.3735, 0.4576 ) }
    dend_29 { pt3dadd( 195.083, 202.977, 27.2653, 0.292 ) }
    dend_29 { pt3dadd( 194.313, 202.155, 28.4068, 0.2288 ) }
    dend_29 { pt3dadd( 193.625, 202.408, 28.9895, 0.2288 ) }
    dend_29 { pt3dadd( 193.589, 203.451, 29.5971, 0.2288 ) }
    dend_29 { pt3dadd( 193.285, 204.086, 30.4699, 0.2288 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 37/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 195.529, 203.49, 26.3735, 0.4576 ) }
    dend_20 { pt3dadd( 194.999, 204.479, 26.3354, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 192.571, 201.636, 22.7769, 0.2786 ) }
    dend_16 { pt3dadd( 192.391, 201.719, 22.7046, 0.2702 ) }
    dend_16 { pt3dadd( 191.506, 202.132, 21.2864, 0.2288 ) }
    dend_16 { pt3dadd( 190.667, 201.816, 20.769, 0.2288 ) }
    dend_16 { pt3dadd( 190.018, 201.23, 20.1796, 0.2288 ) }
    dend_16 { pt3dadd( 190.4, 200.834, 19.3791, 0.2288 ) }
    dend_16 { pt3dadd( 190.704, 199.746, 18.7118, 0.2288 ) }
    dend_16 { pt3dadd( 191.448, 198.937, 18.128, 0.2288 ) }
    dend_16 { pt3dadd( 191.963, 197.95, 17.6341, 0.2288 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 48/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 192.571, 201.636, 22.7769, 0.2786 ) }
    dend_13 { pt3dadd( 192.173, 202.118, 22.4196, 0.5564 ) }
    dend_13 { pt3dadd( 191.556, 203.015, 22.0427, 0.3442 ) }
    dend_13 { pt3dadd( 190.768, 203.828, 21.7638, 0.5798 ) }
    dend_13 { pt3dadd( 189.98, 204.651, 21.5718, 0.531 ) }
    dend_13 { pt3dadd( 189.237, 205.521, 21.4147, 0.4316 ) }
    dend_13 { pt3dadd( 188.593, 206.463, 21.2621, 0.4518 ) }
    dend_13 { pt3dadd( 187.96, 207.407, 21.0627, 0.7018 ) }
    dend_13 { pt3dadd( 187.182, 208.211, 20.7738, 0.7024 ) }
    dend_13 { pt3dadd( 186.474, 209.096, 20.4347, 0.682 ) }
    dend_13 { pt3dadd( 185.853, 209.933, 19.9528, 0.492 ) }
    dend_13 { pt3dadd( 184.992, 210.617, 19.4401, 0.5116 ) }
    dend_13 { pt3dadd( 183.995, 211.169, 19.0053, 0.4752 ) }
    dend_13 { pt3dadd( 182.871, 211.289, 18.6698, 0.4698 ) }
    dend_13 { pt3dadd( 181.729, 211.298, 18.3918, 0.4592 ) }
    dend_13 { pt3dadd( 180.886, 211.505, 17.9404, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 64/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 203.706, 158.04, 15.9902, 0.2288 ) }
    dend_7 { pt3dadd( 203.156, 158.007, 15.96, 0.2288 ) }
    dend_7 { pt3dadd( 202.014, 157.934, 16.3593, 0.2288 ) }
    dend_7 { pt3dadd( 201.032, 157.426, 16.5738, 0.2288 ) }
    dend_7 { pt3dadd( 200.205, 156.738, 16.8188, 0.2288 ) }
    dend_7 { pt3dadd( 199.094, 156.532, 17.0534, 0.2288 ) }
    dend_7 { pt3dadd( 198.203, 155.938, 17.3928, 0.2288 ) }
    dend_7 { pt3dadd( 197.744, 155.013, 17.6884, 0.2288 ) }
    dend_7 { pt3dadd( 197.105, 154.175, 18.0418, 0.2288 ) }
    dend_7 { pt3dadd( 196.338, 153.33, 18.2997, 0.2288 ) }
    dend_7 { pt3dadd( 195.84, 152.495, 18.6894, 0.2288 ) }
    dend_7 { pt3dadd( 195.657, 152.461, 18.8762, 0.2288 ) }
    dend_7 { pt3dadd( 195.146, 151.585, 18.846, 0.2288 ) }
    dend_7 { pt3dadd( 194.831, 150.524, 18.73, 0.2288 ) }
    dend_7 { pt3dadd( 194.461, 149.809, 18.6665, 0.2288 ) }
    dend_7 { pt3dadd( 194.361, 148.764, 18.73, 0.2288 ) }
    dend_7 { pt3dadd( 194.331, 147.99, 18.9232, 0.2288 ) }
    dend_7 { pt3dadd( 194.066, 146.906, 19.0316, 0.2288 ) }
    dend_7 { pt3dadd( 193.809, 145.969, 19.2464, 0.2288 ) }
    dend_7 { pt3dadd( 193.565, 144.969, 19.3474, 0.2288 ) }
    dend_7 { pt3dadd( 193.335, 143.857, 19.3732, 0.2288 ) }
    dend_7 { pt3dadd( 192.651, 142.973, 19.402, 0.2288 ) }
    dend_7 { pt3dadd( 191.836, 142.225, 19.4124, 0.2288 ) }
    dend_7 { pt3dadd( 191.162, 141.398, 19.6, 0.2288 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 88/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 203.706, 158.04, 15.9902, 0.2288 ) }
    dend_4 { pt3dadd( 203.823, 156.94, 15.962, 0.2288 ) }
    dend_4 { pt3dadd( 203.346, 155.904, 15.9289, 0.2288 ) }
    dend_4 { pt3dadd( 202.652, 154.996, 15.8953, 0.4534 ) }
    dend_4 { pt3dadd( 201.786, 154.257, 15.8458, 0.4576 ) }
    dend_4 { pt3dadd( 200.773, 153.738, 15.7914, 0.4576 ) }
    dend_4 { pt3dadd( 199.877, 153.331, 15.7604, 0.2642 ) }
    dend_4 { pt3dadd( 198.817, 152.907, 15.7839, 0.2288 ) }
    dend_4 { pt3dadd( 197.816, 152.363, 15.8945, 0.4246 ) }
    dend_4 { pt3dadd( 197.053, 151.772, 16.2523, 0.2294 ) }
    dend_4 { pt3dadd( 196.166, 151.051, 16.5612, 0.2288 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 99/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 191.379, 164.291, 37.791, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_50 { pt3dadd( 190.636, 164.393, 38.332, 0.2288 ) }
    dend_50 { pt3dadd( 189.668, 164.664, 37.847, 0.2288 ) }
    dend_50 { pt3dadd( 188.683, 164.665, 37.5687, 0.2288 ) }
    dend_50 { pt3dadd( 188.11, 164.175, 37.6541, 0.2288 ) }
    dend_50 { pt3dadd( 187.282, 164.106, 37.6379, 0.2288 ) }
    dend_50 { pt3dadd( 186.362, 164.434, 37.5822, 0.2288 ) }
    dend_50 { pt3dadd( 185.241, 164.447, 37.5892, 0.2288 ) }
    dend_50 { pt3dadd( 184.281, 164.331, 37.6818, 0.2288 ) }
    dend_50 { pt3dadd( 183.331, 164.221, 37.6264, 0.2288 ) }
    dend_50 { pt3dadd( 182.454, 164.052, 37.6314, 0.2288 ) }
    dend_50 { pt3dadd( 181.636, 164.417, 37.7236, 0.2288 ) }
    dend_50 { pt3dadd( 180.528, 164.393, 37.7278, 0.2288 ) }
    dend_50 { pt3dadd( 179.401, 164.393, 37.6452, 0.2288 ) }
    dend_50 { pt3dadd( 178.327, 164.475, 37.4657, 0.2288 ) }
    dend_50 { pt3dadd( 177.597, 164.427, 37.2341, 0.2288 ) }
    dend_50 { pt3dadd( 176.676, 164.507, 37.2296, 0.2288 ) }
    dend_50 { pt3dadd( 175.736, 164.467, 37.2372, 0.2288 ) }
    dend_50 { pt3dadd( 174.918, 164.507, 37.52, 0.2288 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 18/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 191.379, 164.291, 37.791, 0.2288 ) }
    dend_47 { pt3dadd( 190.98, 164.383, 37.963, 0.2288 ) }
    dend_47 { pt3dadd( 190.362, 163.656, 38.0803, 0.2288 ) }
    dend_47 { pt3dadd( 189.688, 162.797, 38.2043, 0.2288 ) }
    dend_47 { pt3dadd( 188.763, 162.297, 38.3967, 0.2288 ) }
    dend_47 { pt3dadd( 188.302, 161.368, 38.633, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_29 (entry count 24/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 193.285, 204.086, 30.4699, 0.2288 ) }
    dend_33 { pt3dadd( 193.114, 204.877, 31.2276, 0.2288 ) }
    dend_33 { pt3dadd( 193.667, 205.756, 31.8287, 0.2288 ) }
    dend_33 { pt3dadd( 194.597, 206.298, 32.3677, 0.2288 ) }
    dend_33 { pt3dadd( 195.338, 207.022, 32.9011, 0.2288 ) }
    dend_33 { pt3dadd( 196.191, 207.771, 33.3007, 0.2288 ) }
    dend_33 { pt3dadd( 196.106, 208.86, 33.5714, 0.2288 ) }
    dend_33 { pt3dadd( 196.452, 209.911, 33.8587, 0.2288 ) }
    dend_33 { pt3dadd( 196.418, 210.989, 34.1085, 0.2288 ) }
    dend_33 { pt3dadd( 195.825, 211.892, 34.2737, 0.2288 ) }
    dend_33 { pt3dadd( 194.914, 212.583, 34.3776, 0.2288 ) }
    dend_33 { pt3dadd( 194.211, 213.375, 34.4523, 0.2288 ) }
    dend_33 { pt3dadd( 193.987, 214.498, 34.505, 0.2288 ) }
    dend_33 { pt3dadd( 193.725, 215.611, 34.5428, 0.2288 ) }
    dend_33 { pt3dadd( 193.355, 216.691, 34.5853, 0.2288 ) }
    dend_33 { pt3dadd( 192.742, 217.59, 34.6419, 0.2288 ) }
    dend_33 { pt3dadd( 191.774, 218.195, 34.7144, 0.2288 ) }
    dend_33 { pt3dadd( 190.876, 218.899, 34.8127, 0.2288 ) }
    dend_33 { pt3dadd( 190.087, 219.658, 35.0398, 0.2288 ) }
    dend_33 { pt3dadd( 189.578, 220.682, 35.2453, 0.2288 ) }
    dend_33 { pt3dadd( 188.536, 221.1, 35.4323, 0.2288 ) }
    dend_33 { pt3dadd( 187.718, 221.815, 35.6507, 0.2288 ) }
    dend_33 { pt3dadd( 187.045, 222.717, 35.915, 0.2288 ) }
    dend_33 { pt3dadd( 186.478, 223.709, 36.1407, 0.2288 ) }
    dend_33 { pt3dadd( 185.89, 224.689, 36.3401, 0.2288 ) }
    dend_33 { pt3dadd( 185.167, 225.575, 36.547, 0.2288 ) }
    dend_33 { pt3dadd( 184.652, 226.557, 36.7721, 0.2288 ) }
    dend_33 { pt3dadd( 184.344, 227.574, 37.0471, 0.2288 ) }
    dend_33 { pt3dadd( 183.456, 228.259, 37.4394, 0.2288 ) }
    dend_33 { pt3dadd( 182.564, 228.798, 38.0192, 0.2288 ) }
    dend_33 { pt3dadd( 181.6, 229.269, 38.6904, 0.2288 ) }
    dend_33 { pt3dadd( 180.531, 229.587, 39.3929, 0.2288 ) }
    dend_33 { pt3dadd( 179.465, 229.683, 40.164, 0.2288 ) }
    dend_33 { pt3dadd( 178.696, 230.488, 40.9318, 0.2288 ) }
    dend_33 { pt3dadd( 177.964, 231.047, 41.8239, 0.2288 ) }
    dend_33 { pt3dadd( 177.249, 231.44, 42.8439, 0.2288 ) }
    dend_33 { pt3dadd( 176.535, 231.833, 45.36, 0.2288 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 61/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 193.285, 204.086, 30.4699, 0.2288 ) }
    dend_30 { pt3dadd( 193.014, 203.923, 32.0214, 0.2288 ) }
    dend_30 { pt3dadd( 192.304, 203.117, 32.6836, 0.2288 ) }
    dend_30 { pt3dadd( 192.622, 202.029, 32.9204, 0.2288 ) }
    dend_30 { pt3dadd( 191.776, 201.513, 33.2161, 0.2288 ) }
    dend_30 { pt3dadd( 190.801, 201.874, 33.679, 0.2288 ) }
    dend_30 { pt3dadd( 189.923, 201.316, 34.1121, 0.2288 ) }
    dend_30 { pt3dadd( 189.277, 200.638, 34.6797, 0.2288 ) }
    dend_30 { pt3dadd( 188.251, 200.273, 35.1498, 0.2288 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 70/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 194.999, 204.479, 26.3354, 0.2288 ) }
    dend_26 { pt3dadd( 194.389, 205.01, 26.2405, 0.2288 ) }
    dend_26 { pt3dadd( 193.559, 205.796, 26.1674, 0.2428 ) }
    dend_26 { pt3dadd( 192.599, 206.395, 26.056, 0.5952 ) }
    dend_26 { pt3dadd( 191.535, 206.801, 25.9392, 0.4008 ) }
    dend_26 { pt3dadd( 190.47, 207.215, 25.8919, 0.2348 ) }
    dend_26 { pt3dadd( 189.513, 207.839, 25.8894, 0.3886 ) }
    dend_26 { pt3dadd( 188.548, 208.453, 25.9188, 0.234 ) }
    dend_26 { pt3dadd( 187.615, 209.099, 26.0039, 0.498 ) }
    dend_26 { pt3dadd( 186.703, 209.788, 26.0991, 0.4144 ) }
    dend_26 { pt3dadd( 185.834, 210.53, 26.1744, 0.616 ) }
    dend_26 { pt3dadd( 184.785, 210.98, 26.2377, 0.4602 ) }
    dend_26 { pt3dadd( 183.753, 211.454, 26.2167, 0.4836 ) }
    dend_26 { pt3dadd( 182.714, 211.932, 26.1671, 0.4578 ) }
    dend_26 { pt3dadd( 181.623, 212.265, 26.1307, 0.2288 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 85/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 194.999, 204.479, 26.3354, 0.2288 ) }
    dend_21 { pt3dadd( 194.938, 204.723, 26.3525, 0.2288 ) }
    dend_21 { pt3dadd( 195.003, 205.861, 26.3368, 0.316 ) }
    dend_21 { pt3dadd( 195.274, 206.967, 26.3032, 0.454 ) }
    dend_21 { pt3dadd( 195.284, 208.109, 26.2584, 0.2558 ) }
    dend_21 { pt3dadd( 195.301, 209.25, 26.248, 0.3604 ) }
    dend_21 { pt3dadd( 195.409, 210.386, 26.2531, 0.4702 ) }
    dend_21 { pt3dadd( 195.758, 211.475, 26.2466, 0.4578 ) }
    dend_21 { pt3dadd( 196.09, 212.568, 26.1873, 0.2726 ) }
    dend_21 { pt3dadd( 196.701, 213.535, 26.0996, 0.6854 ) }
    dend_21 { pt3dadd( 197.562, 214.286, 25.9834, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 96/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 191.963, 197.95, 17.6341, 0.2288 ) }
    dend_18 { pt3dadd( 191.85, 197.343, 17.0047, 0.2288 ) }
    dend_18 { pt3dadd( 191.258, 196.467, 16.3878, 0.2288 ) }
    dend_18 { pt3dadd( 190.674, 195.639, 15.9536, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_18 { pt3dadd( 190.514, 194.558, 15.524, 0.2288 ) }
    dend_18 { pt3dadd( 189.904, 193.736, 15.174, 0.2288 ) }
    dend_18 { pt3dadd( 189.943, 193.256, 14.6143, 0.2288 ) }
    dend_18 { pt3dadd( 189.77, 193.208, 13.8491, 0.2288 ) }
    dend_18 { pt3dadd( 189.5, 192.405, 13.2602, 0.2288 ) }
    dend_18 { pt3dadd( 189.371, 191.427, 12.7355, 0.2288 ) }
    dend_18 { pt3dadd( 190.115, 191.005, 12.5902, 0.2288 ) }
    dend_18 { pt3dadd( 190.133, 190.239, 12.7842, 0.2288 ) }
    dend_18 { pt3dadd( 190.133, 189.333, 12.8657, 0.2288 ) }
    dend_18 { pt3dadd( 189.848, 188.313, 12.9422, 0.2288 ) }
    dend_18 { pt3dadd( 189.092, 187.718, 13.1466, 0.2288 ) }
    dend_18 { pt3dadd( 188.876, 186.702, 13.211, 0.2288 ) }
    dend_18 { pt3dadd( 188.659, 185.823, 13.3638, 0.2288 ) }
    dend_18 { pt3dadd( 188.424, 184.981, 13.2964, 0.2288 ) }
    dend_18 { pt3dadd( 188.42, 183.959, 13.1886, 0.2288 ) }
    dend_18 { pt3dadd( 187.912, 183.264, 13.071, 0.2288 ) }
    dend_18 { pt3dadd( 187.387, 182.588, 13.207, 0.2288 ) }
    dend_18 { pt3dadd( 187.163, 181.732, 13.2406, 0.2288 ) }
    dend_18 { pt3dadd( 187.344, 180.673, 13.2331, 0.2288 ) }
    dend_18 { pt3dadd( 187.688, 179.614, 13.2474, 0.2288 ) }
    dend_18 { pt3dadd( 187.502, 178.781, 13.2028, 0.2288 ) }
    dend_18 { pt3dadd( 187.845, 177.881, 13.2244, 0.2288 ) }
    dend_18 { pt3dadd( 188.137, 177.063, 13.1267, 0.2288 ) }
    dend_18 { pt3dadd( 187.792, 176.169, 13.0063, 0.2288 ) }
    dend_18 { pt3dadd( 187.856, 175.51, 13.0242, 0.2288 ) }
    dend_18 { pt3dadd( 187.845, 174.741, 13.2815, 0.2288 ) }
    dend_18 { pt3dadd( 187.611, 174.117, 13.4532, 0.2288 ) }
    dend_18 { pt3dadd( 186.95, 174.221, 13.2969, 0.2288 ) }
    dend_18 { pt3dadd( 186.975, 173.648, 12.9478, 0.2288 ) }
    dend_18 { pt3dadd( 186.44, 172.989, 12.8444, 0.2288 ) }
    dend_18 { pt3dadd( 186.239, 172.029, 12.668, 0.2288 ) }
    dend_18 { pt3dadd( 186.117, 171.267, 12.3441, 0.2288 ) }
    dend_18 { pt3dadd( 186.004, 170.338, 12.2021, 0.2288 ) }
    dend_18 { pt3dadd( 185.731, 169.442, 12.0372, 0.2288 ) }
    dend_18 { pt3dadd( 186.129, 168.514, 12.0117, 0.2288 ) }
    dend_18 { pt3dadd( 185.641, 168.008, 11.9434, 0.2288 ) }
    dend_18 { pt3dadd( 185.671, 167.024, 12.04, 0.2288 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 37/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 191.963, 197.95, 17.6341, 0.2288 ) }
    dend_17 { pt3dadd( 192.445, 197.722, 18.1695, 0.2288 ) }
    dend_17 { pt3dadd( 192.922, 197.312, 16.9386, 0.2288 ) }
    dend_17 { pt3dadd( 193.863, 196.798, 16.4909, 0.2288 ) }
    dend_17 { pt3dadd( 194.99, 196.628, 16.1277, 0.2288 ) }
    dend_17 { pt3dadd( 196.084, 196.326, 15.8388, 0.2288 ) }
    dend_17 { pt3dadd( 196.712, 196.311, 15.3908, 0.2288 ) }
    dend_17 { pt3dadd( 197.744, 196.518, 15.0634, 0.2288 ) }
    dend_17 { pt3dadd( 198.183, 196.718, 15.1612, 0.2288 ) }
    dend_17 { pt3dadd( 199.225, 196.539, 15.1393, 0.2288 ) }
    dend_17 { pt3dadd( 199.939, 196.465, 14.861, 0.2288 ) }
    dend_17 { pt3dadd( 200.77, 196.156, 14.621, 0.2288 ) }
    dend_17 { pt3dadd( 201.658, 195.816, 14.4564, 0.2288 ) }
    dend_17 { pt3dadd( 202.37, 195.188, 14.2993, 0.2288 ) }
    dend_17 { pt3dadd( 203.076, 194.661, 14.0468, 0.2288 ) }
    dend_17 { pt3dadd( 203.815, 193.826, 13.8628, 0.2288 ) }
    dend_17 { pt3dadd( 204.624, 193.304, 13.7427, 0.2288 ) }
    dend_17 { pt3dadd( 205.691, 192.993, 13.44, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 55/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 180.886, 211.505, 17.9404, 0.2288 ) }
    dend_15 { pt3dadd( 180.554, 212.364, 16.7734, 0.661 ) }
    dend_15 { pt3dadd( 180.006, 213.365, 16.5511, 0.4938 ) }
    dend_15 { pt3dadd( 179.591, 214.428, 16.4623, 0.2776 ) }
    dend_15 { pt3dadd( 179.147, 215.482, 16.3607, 0.296 ) }
    dend_15 { pt3dadd( 178.815, 216.573, 16.2324, 0.6048 ) }
    dend_15 { pt3dadd( 178.551, 217.684, 16.1106, 0.4174 ) }
    dend_15 { pt3dadd( 178.618, 218.814, 15.9765, 0.2504 ) }
    dend_15 { pt3dadd( 178.807, 219.92, 15.7587, 0.6864 ) }
    dend_15 { pt3dadd( 178.805, 221.206, 15.3838, 0.4656 ) }
    dend_15 { pt3dadd( 178.791, 222.343, 15.0298, 0.2666 ) }
    dend_15 { pt3dadd( 178.702, 223.483, 14.7655, 0.5238 ) }
    dend_15 { pt3dadd( 178.321, 224.56, 14.544, 0.2288 ) }
    dend_15 { pt3dadd( 178.227, 224.875, 14.3592, 0.5494 ) }
    dend_15 { pt3dadd( 177.785, 225.911, 14.1935, 0.3272 ) }
    dend_15 { pt3dadd( 177.645, 227.02, 14.0143, 0.2658 ) }
    dend_15 { pt3dadd( 177.501, 228.109, 13.8146, 0.3586 ) }
    dend_15 { pt3dadd( 177.156, 229.197, 13.6909, 0.3844 ) }
    dend_15 { pt3dadd( 177.033, 230.314, 13.6643, 0.401 ) }
    dend_15 { pt3dadd( 177.216, 231.436, 13.6976, 0.3892 ) }
    dend_15 { pt3dadd( 177.355, 232.552, 13.7421, 0.3784 ) }
    dend_15 { pt3dadd( 177.105, 233.638, 13.8216, 0.4494 ) }
    dend_15 { pt3dadd( 176.673, 234.668, 13.9874, 0.4 ) }
    dend_15 { pt3dadd( 176.519, 235.726, 14.2652, 0.2288 ) }
    dend_15 { pt3dadd( 176.518, 236.819, 14.572, 0.2288 ) }
    dend_15 { pt3dadd( 176.477, 237.928, 14.7319, 0.3836 ) }
    dend_15 { pt3dadd( 176.173, 238.946, 14.6927, 0.504 ) }
    dend_15 { pt3dadd( 175.896, 240.051, 14.632, 0.241 ) }
    dend_15 { pt3dadd( 175.541, 241.138, 14.5144, 0.2288 ) }
    dend_15 { pt3dadd( 175.692, 242.267, 14.3578, 0.2288 ) }
    dend_15 { pt3dadd( 175.947, 242.596, 14.1114, 0.2288 ) }
    dend_15 { pt3dadd( 175.49, 243.266, 13.8754, 0.2288 ) }
    dend_15 { pt3dadd( 175.194, 244.273, 13.6564, 0.2288 ) }
    dend_15 { pt3dadd( 174.804, 245.054, 13.6114, 0.2288 ) }
    dend_15 { pt3dadd( 174.574, 245.629, 13.6461, 0.2288 ) }
    dend_15 { pt3dadd( 174.539, 246.484, 13.4546, 0.2288 ) }
    dend_15 { pt3dadd( 174.292, 247.441, 13.4053, 0.2288 ) }
    dend_15 { pt3dadd( 174.002, 248.251, 13.3367, 0.2288 ) }
    dend_15 { pt3dadd( 174.171, 249.233, 13.2012, 0.2288 ) }
    dend_15 { pt3dadd( 174.002, 250.029, 13.1947, 0.2288 ) }
    dend_15 { pt3dadd( 174.041, 251.029, 13.0794, 0.2288 ) }
    dend_15 { pt3dadd( 173.549, 252.012, 12.9847, 0.2288 ) }
    dend_15 { pt3dadd( 173.047, 252.865, 12.8747, 0.2288 ) }
    dend_15 { pt3dadd( 172.622, 253.795, 12.8596, 0.2288 ) }
    dend_15 { pt3dadd( 172.65, 254.696, 12.9301, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_15 { pt3dadd( 172.94, 255.706, 12.9671, 0.2288 ) }
    dend_15 { pt3dadd( 173.202, 256.714, 13.44, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 2/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 180.886, 211.505, 17.9404, 0.2288 ) }
    dend_14 { pt3dadd( 179.76, 210.999, 17.6235, 0.2288 ) }
    dend_14 { pt3dadd( 178.792, 210.414, 17.4616, 0.2288 ) }
    dend_14 { pt3dadd( 177.854, 209.76, 17.3628, 0.5854 ) }
    dend_14 { pt3dadd( 176.994, 209.025, 17.3558, 0.2354 ) }
    dend_14 { pt3dadd( 176.182, 208.224, 17.3292, 0.608 ) }
    dend_14 { pt3dadd( 175.344, 207.452, 17.2757, 0.4598 ) }
    dend_14 { pt3dadd( 174.389, 206.824, 17.1758, 0.231 ) }
    dend_14 { pt3dadd( 173.587, 206.052, 16.973, 0.6864 ) }
    dend_14 { pt3dadd( 173.19, 205.602, 16.7818, 0.4204 ) }
    dend_14 { pt3dadd( 172.538, 204.664, 16.6054, 0.2294 ) }
    dend_14 { pt3dadd( 171.785, 203.804, 16.4931, 0.2398 ) }
    dend_14 { pt3dadd( 171.335, 203.313, 16.4189, 0.2334 ) }
    dend_14 { pt3dadd( 170.702, 202.382, 16.3932, 0.3664 ) }
    dend_14 { pt3dadd( 170.09, 201.431, 16.4052, 0.3164 ) }
    dend_14 { pt3dadd( 169.359, 200.577, 16.3433, 0.3792 ) }
    dend_14 { pt3dadd( 168.531, 200.382, 16.1101, 0.2288 ) }
    dend_14 { pt3dadd( 167.958, 199.784, 15.7447, 0.2288 ) }
    dend_14 { pt3dadd( 168.384, 199.84, 15.2264, 0.2288 ) }
    dend_14 { pt3dadd( 168.319, 199.003, 15.0825, 0.2288 ) }
    dend_14 { pt3dadd( 167.485, 198.827, 15.2127, 0.2288 ) }
    dend_14 { pt3dadd( 166.913, 198.5, 15.6282, 0.2288 ) }
    dend_14 { pt3dadd( 166.387, 197.625, 15.9407, 0.2288 ) }
    dend_14 { pt3dadd( 166.057, 196.997, 16.1633, 0.2288 ) }
    dend_14 { pt3dadd( 165.208, 196.336, 16.3139, 0.2288 ) }
    dend_14 { pt3dadd( 164.361, 195.765, 16.3094, 0.2288 ) }
    dend_14 { pt3dadd( 163.451, 195.237, 16.1641, 0.2288 ) }
    dend_14 { pt3dadd( 162.447, 194.853, 15.9216, 0.2288 ) }
    dend_14 { pt3dadd( 161.838, 194.178, 15.6279, 0.2288 ) }
    dend_14 { pt3dadd( 161.328, 193.619, 15.2088, 0.2288 ) }
    dend_14 { pt3dadd( 160.536, 193.328, 14.9066, 0.2288 ) }
    dend_14 { pt3dadd( 160.017, 192.849, 14.8686, 0.2288 ) }
    dend_14 { pt3dadd( 159.135, 192.421, 14.8106, 0.2288 ) }
    dend_14 { pt3dadd( 158.716, 191.833, 14.546, 0.2288 ) }
    dend_14 { pt3dadd( 158.159, 191.089, 14.411, 0.2288 ) }
    dend_14 { pt3dadd( 157.569, 190.247, 14.2671, 0.2288 ) }
    dend_14 { pt3dadd( 157.252, 189.587, 14.0563, 0.2288 ) }
    dend_14 { pt3dadd( 156.344, 189.014, 13.8009, 0.2288 ) }
    dend_14 { pt3dadd( 155.315, 188.535, 13.6016, 0.2288 ) }
    dend_14 { pt3dadd( 154.597, 187.983, 13.428, 0.2288 ) }
    dend_14 { pt3dadd( 154.051, 187.562, 13.246, 0.2288 ) }
    dend_14 { pt3dadd( 153.036, 187.3, 13.1631, 0.2288 ) }
    dend_14 { pt3dadd( 152.053, 187.152, 13.251, 0.2288 ) }
    dend_14 { pt3dadd( 151.268, 187.044, 13.4534, 0.2288 ) }
    dend_14 { pt3dadd( 150.394, 186.656, 13.6044, 0.2288 ) }
    dend_14 { pt3dadd( 149.872, 186.124, 13.9488, 0.2288 ) }
    dend_14 { pt3dadd( 148.936, 185.58, 14.2327, 0.2288 ) }
    dend_14 { pt3dadd( 148.221, 184.766, 14.4194, 0.2288 ) }
    dend_14 { pt3dadd( 147.28, 184.428, 14.5894, 0.2288 ) }
    dend_14 { pt3dadd( 146.351, 183.967, 14.7795, 0.2288 ) }
    dend_14 { pt3dadd( 145.258, 183.717, 15.0553, 0.2288 ) }
    dend_14 { pt3dadd( 144.677, 183.185, 15.5669, 0.2288 ) }
    dend_14 { pt3dadd( 143.987, 182.307, 16.007, 0.2288 ) }
    dend_14 { pt3dadd( 143.488, 181.37, 16.4993, 0.2288 ) }
    dend_14 { pt3dadd( 142.497, 181.062, 16.9898, 0.2288 ) }
    dend_14 { pt3dadd( 141.687, 180.752, 17.4978, 0.2288 ) }
    dend_14 { pt3dadd( 140.952, 180.211, 17.9575, 0.2288 ) }
    dend_14 { pt3dadd( 140.71, 179.356, 18.4369, 0.2288 ) }
    dend_14 { pt3dadd( 139.702, 179.274, 18.9283, 0.2288 ) }
    dend_14 { pt3dadd( 139.759, 179.074, 20.16, 0.2288 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 62/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 196.166, 151.051, 16.5612, 0.2288 ) }
    dend_6 { pt3dadd( 196.294, 151.047, 15.2102, 0.4576 ) }
    dend_6 { pt3dadd( 196.468, 151.746, 14.3942, 0.2288 ) }
    dend_6 { pt3dadd( 196.396, 152.768, 14.0493, 0.2288 ) }
    dend_6 { pt3dadd( 197.065, 153.452, 13.5447, 0.2288 ) }
    dend_6 { pt3dadd( 197.936, 154.032, 13.0113, 0.2288 ) }
    dend_6 { pt3dadd( 198.463, 154.98, 12.614, 0.2924 ) }
    dend_6 { pt3dadd( 198.064, 155.879, 12.4334, 0.2714 ) }
    dend_6 { pt3dadd( 197.244, 156.661, 12.3763, 0.2288 ) }
    dend_6 { pt3dadd( 196.355, 157.371, 12.392, 0.2288 ) }
    dend_6 { pt3dadd( 196.314, 158.277, 12.4768, 0.2288 ) }
    dend_6 { pt3dadd( 196.969, 159.19, 12.4765, 0.2288 ) }
    dend_6 { pt3dadd( 196.551, 159.818, 12.2536, 0.2288 ) }
    dend_6 { pt3dadd( 195.47, 160.098, 11.993, 0.2288 ) }
    dend_6 { pt3dadd( 194.699, 160.869, 11.732, 0.2288 ) }
    dend_6 { pt3dadd( 194.319, 161.947, 11.4968, 0.2288 ) }
    dend_6 { pt3dadd( 194.301, 163.003, 11.284, 0.2288 ) }
    dend_6 { pt3dadd( 194.435, 163.962, 11.0384, 0.2288 ) }
    dend_6 { pt3dadd( 193.804, 164.88, 10.8228, 0.2288 ) }
    dend_6 { pt3dadd( 194.088, 165.698, 10.7668, 0.4172 ) }
    dend_6 { pt3dadd( 194.431, 166.763, 10.6649, 0.233 ) }
    dend_6 { pt3dadd( 194.823, 167.825, 10.36, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 84/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 196.166, 151.051, 16.5612, 0.2288 ) }
    dend_5 { pt3dadd( 195.076, 150.612, 16.9098, 0.3836 ) }
    dend_5 { pt3dadd( 194.536, 149.715, 17.2976, 0.2446 ) }
    dend_5 { pt3dadd( 194.311, 148.638, 17.6355, 0.276 ) }
    dend_5 { pt3dadd( 193.884, 147.676, 17.8802, 0.2784 ) }
    dend_5 { pt3dadd( 193.137, 147.551, 17.8248, 0.383 ) }
    dend_5 { pt3dadd( 192.381, 148.157, 17.4678, 0.2612 ) }
    dend_5 { pt3dadd( 191.435, 147.964, 16.9285, 0.4794 ) }
    dend_5 { pt3dadd( 190.674, 147.276, 16.3464, 0.4148 ) }
    dend_5 { pt3dadd( 190.129, 146.62, 15.9709, 0.2288 ) }
    dend_5 { pt3dadd( 189.252, 146.235, 15.6783, 0.2288 ) }
    dend_5 { pt3dadd( 188.232, 146.169, 15.4857, 0.2288 ) }
    dend_5 { pt3dadd( 187.591, 145.771, 15.2477, 0.2288 ) }
    dend_5 { pt3dadd( 186.967, 145.422, 15.202, 0.2288 ) }
    dend_5 { pt3dadd( 186.148, 145.011, 15.1147, 0.2288 ) }
    dend_5 { pt3dadd( 185.268, 144.544, 15.0335, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_5 { pt3dadd( 184.584, 143.992, 14.8585, 0.2288 ) }
    dend_5 { pt3dadd( 183.644, 143.445, 14.7652, 0.2288 ) }
    dend_5 { pt3dadd( 182.926, 142.768, 14.5345, 0.2288 ) }
    dend_5 { pt3dadd( 182.474, 142.682, 14.4365, 0.2288 ) }
    dend_5 { pt3dadd( 181.954, 141.847, 14.2831, 0.2288 ) }
    dend_5 { pt3dadd( 181.353, 141.004, 14.0904, 0.2288 ) }
    dend_5 { pt3dadd( 181.133, 139.911, 13.9406, 0.2288 ) }
    dend_5 { pt3dadd( 180.939, 139.624, 13.8054, 0.2288 ) }
    dend_5 { pt3dadd( 180.521, 138.576, 13.6615, 0.2288 ) }
    dend_5 { pt3dadd( 179.617, 137.966, 13.491, 0.2288 ) }
    dend_5 { pt3dadd( 178.916, 137.455, 13.3871, 0.2288 ) }
    dend_5 { pt3dadd( 178.083, 136.822, 13.2577, 0.2288 ) }
    dend_5 { pt3dadd( 177.434, 136.571, 13.046, 0.2288 ) }
    dend_5 { pt3dadd( 177.434, 135.435, 12.8346, 0.2288 ) }
    dend_5 { pt3dadd( 177.282, 134.312, 12.6006, 0.2288 ) }
    dend_5 { pt3dadd( 176.406, 133.732, 12.3446, 0.2288 ) }
    dend_5 { pt3dadd( 175.868, 132.744, 12.0982, 0.2288 ) }
    dend_5 { pt3dadd( 175.593, 131.677, 11.8479, 0.2288 ) }
    dend_5 { pt3dadd( 175.065, 130.779, 11.6043, 0.2288 ) }
    dend_5 { pt3dadd( 174.815, 129.715, 11.2946, 0.2288 ) }
    dend_5 { pt3dadd( 174.526, 128.669, 10.9085, 0.2288 ) }
    dend_5 { pt3dadd( 173.938, 127.79, 10.08, 0.2288 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 22/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 188.302, 161.368, 38.633, 0.2288 ) }
    dend_49 { pt3dadd( 188.06, 161.41, 40.2702, 0.2288 ) }
    dend_49 { pt3dadd( 187.665, 161.135, 41.8883, 0.2288 ) }
    dend_49 { pt3dadd( 186.769, 160.783, 42.4824, 0.2288 ) }
    dend_49 { pt3dadd( 185.641, 160.618, 42.9971, 0.2288 ) }
    dend_49 { pt3dadd( 184.721, 160.51, 43.5859, 0.2288 ) }
    dend_49 { pt3dadd( 183.779, 160.618, 44.2439, 0.2288 ) }
    dend_49 { pt3dadd( 182.636, 160.618, 44.7706, 0.2288 ) }
    dend_49 { pt3dadd( 182.03, 160.032, 45.0428, 0.2288 ) }
    dend_49 { pt3dadd( 181.119, 159.43, 45.3418, 0.2288 ) }
    dend_49 { pt3dadd( 180.728, 158.522, 45.8366, 0.2288 ) }
    dend_49 { pt3dadd( 180.092, 157.849, 46.4481, 0.2288 ) }
    dend_49 { pt3dadd( 179.951, 156.831, 47.0658, 0.2288 ) }
    dend_49 { pt3dadd( 180.238, 156.059, 47.7688, 0.2288 ) }
    dend_49 { pt3dadd( 179.648, 155.16, 48.3918, 0.2288 ) }
    dend_49 { pt3dadd( 179.265, 154.289, 48.9485, 0.2288 ) }
    dend_49 { pt3dadd( 178.815, 153.497, 49.4802, 0.2288 ) }
    dend_49 { pt3dadd( 178.573, 152.521, 49.7722, 0.2288 ) }
    dend_49 { pt3dadd( 178.04, 151.618, 50.1035, 0.2288 ) }
    dend_49 { pt3dadd( 177.774, 151.039, 50.7665, 0.2288 ) }
    dend_49 { pt3dadd( 177.432, 150.069, 51.4394, 0.2288 ) }
    dend_49 { pt3dadd( 177.253, 149.264, 52.2304, 0.2288 ) }
    dend_49 { pt3dadd( 176.988, 148.347, 52.9973, 0.2288 ) }
    dend_49 { pt3dadd( 176.86, 147.378, 53.6091, 0.2288 ) }
    dend_49 { pt3dadd( 176.977, 146.432, 54.6, 0.2288 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 47/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 188.302, 161.368, 38.633, 0.2288 ) }
    dend_48 { pt3dadd( 187.693, 160.766, 38.6806, 0.2288 ) }
    dend_48 { pt3dadd( 186.853, 160.503, 38.5498, 0.2288 ) }
    dend_48 { pt3dadd( 186.07, 159.805, 38.3681, 0.2288 ) }
    dend_48 { pt3dadd( 185.551, 159.366, 38.456, 0.2288 ) }
    dend_48 { pt3dadd( 184.769, 158.809, 38.6092, 0.2288 ) }
    dend_48 { pt3dadd( 184.154, 158.329, 38.554, 0.2288 ) }
    dend_48 { pt3dadd( 183.452, 157.909, 38.6848, 0.2288 ) }
    dend_48 { pt3dadd( 182.514, 157.862, 38.7461, 0.2288 ) }
    dend_48 { pt3dadd( 181.704, 157.453, 38.8444, 0.2288 ) }
    dend_48 { pt3dadd( 180.763, 157.529, 38.6529, 0.2288 ) }
    dend_48 { pt3dadd( 179.856, 157.162, 38.437, 0.2288 ) }
    dend_48 { pt3dadd( 179.038, 156.728, 38.4418, 0.2288 ) }
    dend_48 { pt3dadd( 178.202, 156.945, 38.374, 0.2288 ) }
    dend_48 { pt3dadd( 177.285, 156.876, 38.4796, 0.2288 ) }
    dend_48 { pt3dadd( 176.637, 156.945, 38.3684, 0.2288 ) }
    dend_48 { pt3dadd( 175.705, 156.624, 38.3872, 0.2288 ) }
    dend_48 { pt3dadd( 174.811, 156.842, 38.458, 0.2288 ) }
    dend_48 { pt3dadd( 173.788, 157.274, 38.4359, 0.2288 ) }
    dend_48 { pt3dadd( 172.698, 157.358, 38.3466, 0.2288 ) }
    dend_48 { pt3dadd( 171.869, 157.194, 38.2234, 0.2288 ) }
    dend_48 { pt3dadd( 170.907, 157.302, 38.2682, 0.2288 ) }
    dend_48 { pt3dadd( 169.819, 157.247, 38.2642, 0.2288 ) }
    dend_48 { pt3dadd( 168.788, 156.957, 38.1945, 0.2288 ) }
    dend_48 { pt3dadd( 167.781, 156.503, 38.2161, 0.2288 ) }
    dend_48 { pt3dadd( 166.825, 156.044, 38.2757, 0.2288 ) }
    dend_48 { pt3dadd( 166.176, 155.641, 38.32, 0.2288 ) }
    dend_48 { pt3dadd( 165.188, 155.417, 38.3502, 0.2288 ) }
    dend_48 { pt3dadd( 164.253, 154.821, 38.4104, 0.2288 ) }
    dend_48 { pt3dadd( 163.321, 154.342, 38.4471, 0.2288 ) }
    dend_48 { pt3dadd( 162.303, 153.819, 38.4448, 0.2288 ) }
    dend_48 { pt3dadd( 161.286, 153.296, 38.411, 0.2288 ) }
    dend_48 { pt3dadd( 160.353, 152.661, 38.3435, 0.2288 ) }
    dend_48 { pt3dadd( 159.387, 152.065, 38.2329, 0.2288 ) }
    dend_48 { pt3dadd( 158.49, 151.385, 38.0722, 0.2288 ) }
    dend_48 { pt3dadd( 157.554, 150.783, 37.8546, 0.2288 ) }
    dend_48 { pt3dadd( 156.818, 149.92, 37.5458, 0.2288 ) }
    dend_48 { pt3dadd( 156.074, 149.172, 37.0521, 0.2288 ) }
    dend_48 { pt3dadd( 155.252, 148.477, 36.4185, 0.2288 ) }
    dend_48 { pt3dadd( 154.294, 148.148, 35.7056, 0.2288 ) }
    dend_48 { pt3dadd( 153.15, 148.148, 35.0375, 0.2288 ) }
    dend_48 { pt3dadd( 152.436, 148.255, 34.153, 0.2288 ) }
    dend_48 { pt3dadd( 151.752, 148.777, 33.1262, 0.2288 ) }
    dend_48 { pt3dadd( 151.1, 149.609, 32.2269, 0.2288 ) }
    dend_48 { pt3dadd( 149.96, 149.635, 31.4675, 0.2288 ) }
    dend_48 { pt3dadd( 148.998, 149.635, 30.6502, 0.2288 ) }
    dend_48 { pt3dadd( 148.042, 149.771, 29.8298, 0.2288 ) }
    dend_48 { pt3dadd( 147.514, 150.587, 28.994, 0.2288 ) }
    dend_48 { pt3dadd( 147.346, 151.596, 28.1968, 0.2288 ) }
    dend_48 { pt3dadd( 146.664, 152.079, 27.3288, 0.2288 ) }
    dend_48 { pt3dadd( 145.665, 152.357, 26.6347, 0.2288 ) }
    dend_48 { pt3dadd( 144.634, 152.842, 26.1265, 0.2288 ) }
    dend_48 { pt3dadd( 143.602, 153.296, 25.7547, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_48 { pt3dadd( 142.733, 153.843, 25.3882, 0.2288 ) }
    dend_48 { pt3dadd( 141.676, 153.868, 25.0068, 0.2288 ) }
    dend_48 { pt3dadd( 140.543, 153.868, 24.6814, 0.2288 ) }
    dend_48 { pt3dadd( 139.403, 153.874, 24.4191, 0.2288 ) }
    dend_48 { pt3dadd( 138.767, 154.554, 24.08, 0.2288 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 5/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 188.251, 200.273, 35.1498, 0.2288 ) }
    dend_32 { pt3dadd( 188.389, 200.491, 36.6397, 0.2288 ) }
    dend_32 { pt3dadd( 188.769, 201.087, 38.7173, 0.2288 ) }
    dend_32 { pt3dadd( 189.149, 201.684, 39.6942, 0.2288 ) }
    dend_32 { pt3dadd( 188.698, 202.377, 40.5751, 0.2288 ) }
    dend_32 { pt3dadd( 188.933, 203.482, 41.2972, 0.2288 ) }
    dend_32 { pt3dadd( 188.348, 204.344, 41.9961, 0.2288 ) }
    dend_32 { pt3dadd( 187.25, 204.453, 42.5267, 0.2288 ) }
    dend_32 { pt3dadd( 186.692, 205.208, 43.0396, 0.2288 ) }
    dend_32 { pt3dadd( 186.433, 206.286, 43.5361, 0.2288 ) }
    dend_32 { pt3dadd( 185.73, 207.074, 43.9779, 0.2288 ) }
    dend_32 { pt3dadd( 185.512, 208.162, 44.4248, 0.2288 ) }
    dend_32 { pt3dadd( 185.185, 209.214, 44.7566, 0.2288 ) }
    dend_32 { pt3dadd( 184.472, 210.076, 45.0022, 0.2288 ) }
    dend_32 { pt3dadd( 184.221, 211.117, 45.64, 0.2288 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 188.251, 200.273, 35.1498, 0.2288 ) }
    dend_31 { pt3dadd( 187.791, 200.011, 35.4953, 0.2288 ) }
    dend_31 { pt3dadd( 187.203, 199.031, 35.7283, 0.2288 ) }
    dend_31 { pt3dadd( 186.647, 198.031, 35.8697, 0.2288 ) }
    dend_31 { pt3dadd( 186.093, 197.03, 35.9593, 0.2288 ) }
    dend_31 { pt3dadd( 185.493, 196.058, 36.0091, 0.2288 ) }
    dend_31 { pt3dadd( 184.762, 195.187, 36.0903, 0.2288 ) }
    dend_31 { pt3dadd( 183.996, 194.347, 36.2076, 0.2288 ) }
    dend_31 { pt3dadd( 183.231, 193.505, 36.3437, 0.2288 ) }
    dend_31 { pt3dadd( 182.522, 192.611, 36.4395, 0.2288 ) }
    dend_31 { pt3dadd( 181.649, 191.872, 36.4935, 0.2288 ) }
    dend_31 { pt3dadd( 180.82, 191.083, 36.5064, 0.2288 ) }
    dend_31 { pt3dadd( 180.075, 190.222, 36.4795, 0.2288 ) }
    dend_31 { pt3dadd( 179.392, 189.303, 36.4204, 0.2288 ) }
    dend_31 { pt3dadd( 178.631, 188.463, 36.3163, 0.2288 ) }
    dend_31 { pt3dadd( 177.848, 187.701, 36.1054, 0.2288 ) }
    dend_31 { pt3dadd( 176.943, 187.028, 35.9209, 0.2288 ) }
    dend_31 { pt3dadd( 176.278, 186.104, 35.7619, 0.2288 ) }
    dend_31 { pt3dadd( 175.346, 185.514, 35.5695, 0.2288 ) }
    dend_31 { pt3dadd( 174.273, 185.24, 35.359, 0.2288 ) }
    dend_31 { pt3dadd( 173.136, 185.12, 35.2103, 0.2288 ) }
    dend_31 { pt3dadd( 171.998, 185.001, 35.114, 0.2288 ) }
    dend_31 { pt3dadd( 170.859, 184.91, 35.049, 0.2288 ) }
    dend_31 { pt3dadd( 169.715, 184.866, 35.012, 0.2288 ) }
    dend_31 { pt3dadd( 168.586, 184.766, 35.0, 0.2288 ) }
    dend_31 { pt3dadd( 167.527, 184.342, 35.0, 0.2288 ) }
    dend_31 { pt3dadd( 166.411, 184.09, 35.0, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 47/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 181.623, 212.265, 26.1307, 0.2288 ) }
    dend_28 { pt3dadd( 180.535, 212.337, 26.6437, 0.2288 ) }
    dend_28 { pt3dadd( 179.447, 212.321, 27.0819, 0.2288 ) }
    dend_28 { pt3dadd( 178.922, 212.088, 27.3837, 0.2288 ) }
    dend_28 { pt3dadd( 178.159, 211.445, 27.7166, 0.2288 ) }
    dend_28 { pt3dadd( 177.372, 210.757, 28.0518, 0.2288 ) }
    dend_28 { pt3dadd( 176.288, 210.54, 28.383, 0.2288 ) }
    dend_28 { pt3dadd( 175.863, 209.639, 28.6062, 0.2288 ) }
    dend_28 { pt3dadd( 174.961, 209.167, 28.8789, 0.2288 ) }
    dend_28 { pt3dadd( 174.221, 208.709, 29.1673, 0.2288 ) }
    dend_28 { pt3dadd( 173.213, 208.845, 29.4837, 0.2288 ) }
    dend_28 { pt3dadd( 172.125, 209.112, 29.8642, 0.2288 ) }
    dend_28 { pt3dadd( 171.217, 209.357, 30.406, 0.2288 ) }
    dend_28 { pt3dadd( 170.348, 209.534, 30.8308, 0.2288 ) }
    dend_28 { pt3dadd( 169.643, 209.874, 31.2858, 0.2288 ) }
    dend_28 { pt3dadd( 169.319, 209.815, 31.7391, 0.2288 ) }
    dend_28 { pt3dadd( 168.298, 209.695, 32.2958, 0.2288 ) }
    dend_28 { pt3dadd( 167.467, 209.404, 32.9818, 0.2288 ) }
    dend_28 { pt3dadd( 166.389, 209.178, 33.5622, 0.2288 ) }
    dend_28 { pt3dadd( 165.617, 208.585, 34.0427, 0.2288 ) }
    dend_28 { pt3dadd( 164.884, 208.243, 34.6674, 0.2288 ) }
    dend_28 { pt3dadd( 164.115, 207.699, 35.2206, 0.2288 ) }
    dend_28 { pt3dadd( 163.065, 207.304, 35.6087, 0.2288 ) }
    dend_28 { pt3dadd( 161.966, 207.181, 35.9108, 0.2288 ) }
    dend_28 { pt3dadd( 161.342, 206.518, 36.157, 0.2288 ) }
    dend_28 { pt3dadd( 160.435, 205.912, 36.2967, 0.2288 ) }
    dend_28 { pt3dadd( 159.434, 205.657, 36.4851, 0.2288 ) }
    dend_28 { pt3dadd( 158.558, 205.005, 36.96, 0.2288 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 75/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 181.623, 212.265, 26.1307, 0.2288 ) }
    dend_27 { pt3dadd( 180.555, 212.585, 26.0837, 0.6786 ) }
    dend_27 { pt3dadd( 179.514, 213.059, 26.0168, 0.2326 ) }
    dend_27 { pt3dadd( 178.826, 213.966, 25.9028, 0.2288 ) }
    dend_27 { pt3dadd( 178.287, 214.367, 25.7771, 0.2288 ) }
    dend_27 { pt3dadd( 177.302, 214.778, 25.5427, 0.2288 ) }
    dend_27 { pt3dadd( 176.268, 214.701, 25.3442, 0.2288 ) }
    dend_27 { pt3dadd( 175.276, 214.204, 25.1289, 0.2288 ) }
    dend_27 { pt3dadd( 174.205, 214.224, 24.9782, 0.2288 ) }
    dend_27 { pt3dadd( 173.411, 214.252, 24.6641, 0.2288 ) }
    dend_27 { pt3dadd( 172.41, 213.93, 24.3743, 0.2288 ) }
    dend_27 { pt3dadd( 171.56, 213.477, 24.1632, 0.2288 ) }
    dend_27 { pt3dadd( 170.835, 213.208, 23.8594, 0.2288 ) }
    dend_27 { pt3dadd( 169.945, 213.152, 23.7499, 0.2288 ) }
    dend_27 { pt3dadd( 169.176, 212.852, 23.5511, 0.2288 ) }
    dend_27 { pt3dadd( 168.198, 212.615, 23.375, 0.2288 ) }
    dend_27 { pt3dadd( 167.693, 211.872, 23.2478, 0.2288 ) }
    dend_27 { pt3dadd( 166.974, 211.929, 23.3388, 0.2288 ) }
    dend_27 { pt3dadd( 166.356, 211.059, 23.3556, 0.2288 ) }
    dend_27 { pt3dadd( 165.462, 210.61, 23.2025, 0.2288 ) }
    dend_27 { pt3dadd( 164.604, 210.354, 22.9894, 0.2288 ) }
    dend_27 { pt3dadd( 163.992, 209.462, 22.8206, 0.2288 ) }
    dend_27 { pt3dadd( 163.598, 208.941, 22.4244, 0.2288 ) }
    dend_27 { pt3dadd( 163.026, 208.437, 22.0797, 0.2288 ) }
    dend_27 { pt3dadd( 162.055, 208.13, 21.9069, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( 161.26, 207.372, 21.7585, 0.2288 ) }
    dend_27 { pt3dadd( 160.766, 206.547, 21.5202, 0.2288 ) }
    dend_27 { pt3dadd( 160.462, 205.51, 21.4267, 0.2288 ) }
    dend_27 { pt3dadd( 159.443, 205.358, 21.4094, 0.2288 ) }
    dend_27 { pt3dadd( 158.569, 205.145, 21.516, 0.2288 ) }
    dend_27 { pt3dadd( 157.587, 204.662, 21.5172, 0.2288 ) }
    dend_27 { pt3dadd( 156.728, 204.58, 21.4054, 0.2288 ) }
    dend_27 { pt3dadd( 156.044, 204.449, 21.408, 0.2288 ) }
    dend_27 { pt3dadd( 155.584, 203.963, 21.4519, 0.2288 ) }
    dend_27 { pt3dadd( 155.022, 203.202, 21.3455, 0.2288 ) }
    dend_27 { pt3dadd( 154.584, 202.255, 21.1708, 0.2288 ) }
    dend_27 { pt3dadd( 153.932, 201.494, 21.1296, 0.2288 ) }
    dend_27 { pt3dadd( 153.807, 200.676, 20.9166, 0.2288 ) }
    dend_27 { pt3dadd( 154.099, 199.726, 20.7399, 0.2288 ) }
    dend_27 { pt3dadd( 153.989, 198.675, 20.6993, 0.2288 ) }
    dend_27 { pt3dadd( 153.535, 197.668, 20.8068, 0.2288 ) }
    dend_27 { pt3dadd( 153.524, 196.682, 21.0787, 0.2288 ) }
    dend_27 { pt3dadd( 153.619, 195.655, 21.3609, 0.2288 ) }
    dend_27 { pt3dadd( 153.409, 194.561, 21.5981, 0.2288 ) }
    dend_27 { pt3dadd( 153.067, 193.528, 21.908, 0.2288 ) }
    dend_27 { pt3dadd( 152.858, 192.496, 22.1007, 0.2288 ) }
    dend_27 { pt3dadd( 152.553, 191.519, 22.3507, 0.2288 ) }
    dend_27 { pt3dadd( 152.364, 190.514, 22.6831, 0.2288 ) }
    dend_27 { pt3dadd( 152.198, 189.454, 23.0734, 0.2288 ) }
    dend_27 { pt3dadd( 151.736, 188.471, 23.4598, 0.2288 ) }
    dend_27 { pt3dadd( 151.202, 187.575, 23.6424, 0.2288 ) }
    dend_27 { pt3dadd( 150.413, 186.838, 23.7504, 0.2288 ) }
    dend_27 { pt3dadd( 149.885, 186.187, 23.8658, 0.2288 ) }
    dend_27 { pt3dadd( 149.315, 185.401, 24.0836, 0.2288 ) }
    dend_27 { pt3dadd( 149.292, 184.289, 24.2004, 0.2288 ) }
    dend_27 { pt3dadd( 149.227, 183.262, 24.2746, 0.2288 ) }
    dend_27 { pt3dadd( 148.451, 182.523, 24.4527, 0.2288 ) }
    dend_27 { pt3dadd( 148.377, 181.855, 24.4815, 0.2288 ) }
    dend_27 { pt3dadd( 148.151, 180.919, 24.3547, 0.2288 ) }
    dend_27 { pt3dadd( 148.123, 179.781, 24.2214, 0.2288 ) }
    dend_27 { pt3dadd( 147.93, 178.667, 24.1671, 0.2288 ) }
    dend_27 { pt3dadd( 147.711, 177.59, 24.1752, 0.2288 ) }
    dend_27 { pt3dadd( 147.592, 176.608, 24.1626, 0.2288 ) }
    dend_27 { pt3dadd( 147.299, 175.618, 24.1058, 0.2288 ) }
    dend_27 { pt3dadd( 146.901, 174.558, 24.0394, 0.2288 ) }
    dend_27 { pt3dadd( 146.13, 173.752, 23.9596, 0.2288 ) }
    dend_27 { pt3dadd( 145.485, 172.967, 23.8851, 0.2288 ) }
    dend_27 { pt3dadd( 144.411, 172.706, 23.8538, 0.2288 ) }
    dend_27 { pt3dadd( 143.22, 172.189, 23.8454, 0.2288 ) }
    dend_27 { pt3dadd( 142.65, 171.338, 23.7555, 0.2288 ) }
    dend_27 { pt3dadd( 142.014, 170.459, 23.6452, 0.2288 ) }
    dend_27 { pt3dadd( 141.6, 169.416, 23.539, 0.2288 ) }
    dend_27 { pt3dadd( 140.886, 168.796, 23.4111, 0.2288 ) }
    dend_27 { pt3dadd( 140.513, 167.776, 23.2814, 0.2288 ) }
    dend_27 { pt3dadd( 140.059, 166.873, 23.2369, 0.2288 ) }
    dend_27 { pt3dadd( 139.978, 165.736, 23.2229, 0.2288 ) }
    dend_27 { pt3dadd( 139.2, 165.019, 23.2232, 0.2288 ) }
    dend_27 { pt3dadd( 138.812, 163.975, 23.2305, 0.2288 ) }
    dend_27 { pt3dadd( 137.854, 163.417, 23.2414, 0.2288 ) }
    dend_27 { pt3dadd( 136.741, 163.285, 23.2831, 0.2288 ) }
    dend_27 { pt3dadd( 135.644, 162.995, 23.2674, 0.2288 ) }
    dend_27 { pt3dadd( 134.521, 162.782, 23.2506, 0.2288 ) }
    dend_27 { pt3dadd( 133.442, 162.403, 23.2361, 0.2288 ) }
    dend_27 { pt3dadd( 132.579, 161.692, 23.2165, 0.2288 ) }
    dend_27 { pt3dadd( 132.055, 160.684, 23.1913, 0.2288 ) }
    dend_27 { pt3dadd( 131.877, 159.579, 23.1294, 0.2288 ) }
    dend_27 { pt3dadd( 131.228, 158.678, 23.1182, 0.2288 ) }
    dend_27 { pt3dadd( 130.26, 158.33, 23.1101, 0.2288 ) }
    dend_27 { pt3dadd( 129.123, 158.294, 23.0958, 0.2288 ) }
    dend_27 { pt3dadd( 128.746, 157.414, 23.0342, 0.2288 ) }
    dend_27 { pt3dadd( 127.602, 157.412, 22.9796, 0.2288 ) }
    dend_27 { pt3dadd( 127.098, 156.59, 22.9317, 0.2288 ) }
    dend_27 { pt3dadd( 126.518, 155.783, 22.8847, 0.2288 ) }
    dend_27 { pt3dadd( 125.675, 155.126, 22.8091, 0.2288 ) }
    dend_27 { pt3dadd( 124.696, 154.783, 22.68, 0.2288 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 70/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 197.562, 214.286, 25.9834, 0.2288 ) }
    dend_23 { pt3dadd( 197.78, 214.211, 25.8168, 0.2288 ) }
    dend_23 { pt3dadd( 198.652, 214.661, 25.5979, 0.2288 ) }
    dend_23 { pt3dadd( 199.645, 214.828, 25.2848, 0.2288 ) }
    dend_23 { pt3dadd( 200.456, 215.053, 24.747, 0.2288 ) }
    dend_23 { pt3dadd( 201.344, 215.374, 24.2365, 0.2288 ) }
    dend_23 { pt3dadd( 202.391, 215.578, 23.7796, 0.2288 ) }
    dend_23 { pt3dadd( 202.703, 215.629, 23.095, 0.2288 ) }
    dend_23 { pt3dadd( 203.577, 215.581, 22.5022, 0.2288 ) }
    dend_23 { pt3dadd( 204.61, 215.657, 22.0847, 0.2288 ) }
    dend_23 { pt3dadd( 205.442, 216.305, 21.8627, 0.2288 ) }
    dend_23 { pt3dadd( 205.923, 217.288, 21.7249, 0.2288 ) }
    dend_23 { pt3dadd( 206.666, 218.025, 21.4973, 0.2288 ) }
    dend_23 { pt3dadd( 207.317, 218.83, 21.3066, 0.2288 ) }
    dend_23 { pt3dadd( 207.76, 219.451, 21.0717, 0.2288 ) }
    dend_23 { pt3dadd( 208.094, 220.449, 20.8113, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 86/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 197.562, 214.286, 25.9834, 0.2288 ) }
    dend_22 { pt3dadd( 196.906, 215.265, 26.32, 0.2768 ) }
    dend_22 { pt3dadd( 196.477, 216.243, 26.1736, 0.2288 ) }
    dend_22 { pt3dadd( 196.4, 217.273, 26.0008, 0.2288 ) }
    dend_22 { pt3dadd( 196.646, 218.18, 25.926, 0.2288 ) }
    dend_22 { pt3dadd( 196.394, 219.22, 25.7961, 0.2288 ) }
    dend_22 { pt3dadd( 195.744, 220.125, 25.6343, 0.2288 ) }
    dend_22 { pt3dadd( 195.598, 221.08, 25.2988, 0.2288 ) }
    dend_22 { pt3dadd( 195.451, 221.748, 24.792, 0.2288 ) }
    dend_22 { pt3dadd( 194.872, 222.294, 24.2586, 0.2288 ) }
    dend_22 { pt3dadd( 194.443, 223.152, 23.9266, 0.2288 ) }
    dend_22 { pt3dadd( 193.663, 223.837, 23.5746, 0.2288 ) }
    dend_22 { pt3dadd( 193.219, 224.669, 23.371, 0.2288 ) }
    dend_22 { pt3dadd( 192.155, 224.621, 23.1426, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_22 { pt3dadd( 191.334, 224.9, 22.7814, 0.2288 ) }
    dend_22 { pt3dadd( 190.251, 224.746, 22.3524, 0.2288 ) }
    dend_22 { pt3dadd( 190.156, 223.92, 21.8957, 0.2288 ) }
    dend_22 { pt3dadd( 189.897, 222.848, 21.4819, 0.2288 ) }
    dend_22 { pt3dadd( 188.87, 222.779, 21.2206, 0.2288 ) }
    dend_22 { pt3dadd( 188.302, 223.603, 20.9418, 0.2288 ) }
    dend_22 { pt3dadd( 188.265, 224.512, 20.8838, 0.2288 ) }
    dend_22 { pt3dadd( 187.41, 224.211, 20.8034, 0.2288 ) }
    dend_22 { pt3dadd( 186.553, 224.209, 20.8183, 0.2288 ) }
    dend_22 { pt3dadd( 185.638, 224.215, 20.552, 0.2288 ) }
    dend_22 { pt3dadd( 185.144, 224.453, 20.011, 0.2288 ) }
    dend_22 { pt3dadd( 184.202, 224.799, 19.4466, 0.2288 ) }
    dend_22 { pt3dadd( 183.333, 225.081, 18.8003, 0.2288 ) }
    dend_22 { pt3dadd( 182.276, 225.169, 18.235, 0.2288 ) }
    dend_22 { pt3dadd( 181.343, 225.657, 17.7775, 0.2288 ) }
    dend_22 { pt3dadd( 180.599, 225.949, 17.2388, 0.2288 ) }
    dend_22 { pt3dadd( 179.608, 226.169, 16.24, 0.2288 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 17/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 208.094, 220.449, 20.8113, 0.2288 ) }
    dend_25 { pt3dadd( 207.976, 220.635, 20.4235, 0.2288 ) }
    dend_25 { pt3dadd( 207.827, 221.644, 20.2723, 0.2288 ) }
    dend_25 { pt3dadd( 207.844, 222.786, 20.2202, 0.2288 ) }
    dend_25 { pt3dadd( 207.89, 223.85, 19.994, 0.2288 ) }
    dend_25 { pt3dadd( 208.136, 224.867, 19.6465, 0.2288 ) }
    dend_25 { pt3dadd( 208.702, 225.776, 19.2758, 0.2288 ) }
    dend_25 { pt3dadd( 209.352, 226.596, 18.8796, 0.2288 ) }
    dend_25 { pt3dadd( 209.955, 227.505, 18.5539, 0.2288 ) }
    dend_25 { pt3dadd( 210.67, 228.283, 18.1969, 0.2288 ) }
    dend_25 { pt3dadd( 211.266, 229.147, 17.9578, 0.2288 ) }
    dend_25 { pt3dadd( 211.267, 230.291, 17.8052, 0.2288 ) }
    dend_25 { pt3dadd( 211.633, 231.314, 17.712, 0.2288 ) }
    dend_25 { pt3dadd( 212.638, 231.831, 17.6627, 0.2288 ) }
    dend_25 { pt3dadd( 213.099, 232.821, 17.64, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 32/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 208.094, 220.449, 20.8113, 0.2288 ) }
    dend_24 { pt3dadd( 208.46, 220.767, 20.6466, 0.2288 ) }
    dend_24 { pt3dadd( 209.209, 220.906, 20.7662, 0.2288 ) }
    dend_24 { pt3dadd( 210.102, 220.715, 20.8547, 0.2288 ) }
    dend_24 { pt3dadd( 211.005, 221.167, 20.9569, 0.2288 ) }
    dend_24 { pt3dadd( 211.307, 221.612, 21.2682, 0.2288 ) }
    dend_24 { pt3dadd( 212.171, 221.936, 21.4385, 0.2288 ) }
    dend_24 { pt3dadd( 213.101, 222.165, 21.7104, 0.2288 ) }
    dend_24 { pt3dadd( 214.105, 222.065, 21.8943, 0.2288 ) }
    dend_24 { pt3dadd( 214.614, 222.3, 22.351, 0.2288 ) }
    dend_24 { pt3dadd( 215.184, 222.731, 22.8124, 0.2288 ) }
    dend_24 { pt3dadd( 216.255, 222.851, 23.1339, 0.2288 ) }
    dend_24 { pt3dadd( 216.928, 223.344, 23.2834, 0.2288 ) }
    dend_24 { pt3dadd( 217.807, 223.806, 23.3296, 0.2288 ) }
    dend_24 { pt3dadd( 218.466, 224.224, 23.2828, 0.2288 ) }
    dend_24 { pt3dadd( 219.371, 224.06, 23.037, 0.2288 ) }
    dend_24 { pt3dadd( 220.412, 224.456, 22.9191, 0.2288 ) }
    dend_24 { pt3dadd( 221.345, 224.572, 22.8684, 0.2288 ) }
    dend_24 { pt3dadd( 222.426, 224.796, 23.0076, 0.2288 ) }
    dend_24 { pt3dadd( 223.399, 224.909, 23.3906, 0.2288 ) }
    dend_24 { pt3dadd( 224.224, 225.025, 23.8655, 0.2288 ) }
    dend_24 { pt3dadd( 224.559, 225.414, 24.4857, 0.2288 ) }
    dend_24 { pt3dadd( 225.222, 225.993, 24.8382, 0.2288 ) }
    dend_24 { pt3dadd( 226.188, 226.283, 24.906, 0.2288 ) }
    dend_24 { pt3dadd( 227.267, 226.345, 24.7542, 0.2288 ) }
    dend_24 { pt3dadd( 227.712, 226.377, 24.1654, 0.2288 ) }
    dend_24 { pt3dadd( 228.673, 226.148, 23.6354, 0.2288 ) }
    dend_24 { pt3dadd( 229.539, 225.948, 23.0054, 0.2288 ) }
    dend_24 { pt3dadd( 230.43, 225.605, 22.5624, 0.2288 ) }
    dend_24 { pt3dadd( 231.35, 225.33, 22.3037, 0.2288 ) }
    dend_24 { pt3dadd( 231.936, 224.579, 22.2331, 0.2288 ) }
    dend_24 { pt3dadd( 232.707, 224.218, 22.5425, 0.2288 ) }
    dend_24 { pt3dadd( 233.728, 223.947, 22.8071, 0.2288 ) }
    dend_24 { pt3dadd( 234.576, 223.509, 23.2708, 0.2288 ) }
    dend_24 { pt3dadd( 235.522, 223.019, 23.627, 0.2288 ) }
    dend_24 { pt3dadd( 236.333, 222.442, 24.0727, 0.2288 ) }
    dend_24 { pt3dadd( 237.216, 222.354, 24.3664, 0.2288 ) }
    dend_24 { pt3dadd( 238.275, 222.293, 24.5854, 0.2288 ) }
    dend_24 { pt3dadd( 238.784, 222.279, 24.852, 0.2288 ) }
    dend_24 { pt3dadd( 239.87, 222.165, 25.065, 0.2288 ) }
    dend_24 { pt3dadd( 241.014, 222.152, 25.2591, 0.2288 ) }
    dend_24 { pt3dadd( 241.961, 221.697, 25.3635, 0.2288 ) }
    dend_24 { pt3dadd( 242.291, 220.825, 25.3616, 0.2288 ) }
    dend_24 { pt3dadd( 242.528, 220.792, 25.7592, 0.2288 ) }
    dend_24 { pt3dadd( 243.337, 220.707, 26.2436, 0.2288 ) }
    dend_24 { pt3dadd( 243.75, 220.159, 26.8153, 0.2288 ) }
    dend_24 { pt3dadd( 244.74, 219.926, 27.0967, 0.2288 ) }
    dend_24 { pt3dadd( 245.622, 219.762, 27.067, 0.2288 ) }
    dend_24 { pt3dadd( 246.419, 219.54, 27.1446, 0.2288 ) }
    dend_24 { pt3dadd( 247.293, 219.19, 27.1278, 0.2288 ) }
    dend_24 { pt3dadd( 247.995, 219.19, 27.3126, 0.2288 ) }
    dend_24 { pt3dadd( 249.036, 219.222, 27.3395, 0.2288 ) }
    dend_24 { pt3dadd( 249.738, 219.489, 27.1043, 0.2288 ) }
    dend_24 { pt3dadd( 250.377, 219.893, 27.0332, 0.2288 ) }
    dend_24 { pt3dadd( 251.114, 219.937, 27.0959, 0.2288 ) }
    dend_24 { pt3dadd( 251.794, 219.762, 26.8996, 0.2288 ) }
    dend_24 { pt3dadd( 251.806, 219.762, 26.3063, 0.2288 ) }
    dend_24 { pt3dadd( 252.528, 220.416, 25.9269, 0.2288 ) }
    dend_24 { pt3dadd( 253.56, 220.678, 25.6281, 0.2288 ) }
    dend_24 { pt3dadd( 254.151, 220.792, 25.7127, 0.2288 ) }
    dend_24 { pt3dadd( 255.096, 220.719, 25.9087, 0.2288 ) }
    dend_24 { pt3dadd( 256.15, 220.673, 26.1526, 0.2288 ) }
    dend_24 { pt3dadd( 257.286, 220.563, 26.6, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_61, dend_58, dend_43, dend_35, dend_10, dend_1, dend_0, dend_63, dend_62, dend_60, dend_59, dend_55, dend_44, dend_39, dend_36, dend_34, dend_11, dend_9, dend_2, dend_57, dend_56, dend_52, dend_45, dend_42, dend_41, dend_40, dend_38, dend_37, dend_19, dend_12, dend_8, dend_3, dend_54, dend_53, dend_51, dend_46, dend_29, dend_20, dend_16, dend_13, dend_7, dend_4, dend_50, dend_47, dend_33, dend_30, dend_26, dend_21, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_49, dend_48, dend_32, dend_31, dend_28, dend_27, dend_23, dend_22, dend_25, dend_24]}
    dend = new SectionList()
    dend_61 dend.append()
    dend_58 dend.append()
    dend_43 dend.append()
    dend_35 dend.append()
    dend_10 dend.append()
    dend_1 dend.append()
    dend_0 dend.append()
    dend_63 dend.append()
    dend_62 dend.append()
    dend_60 dend.append()
    dend_59 dend.append()
    dend_55 dend.append()
    dend_44 dend.append()
    dend_39 dend.append()
    dend_36 dend.append()
    dend_34 dend.append()
    dend_11 dend.append()
    dend_9 dend.append()
    dend_2 dend.append()
    dend_57 dend.append()
    dend_56 dend.append()
    dend_52 dend.append()
    dend_45 dend.append()
    dend_42 dend.append()
    dend_41 dend.append()
    dend_40 dend.append()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_19 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_3 dend.append()
    dend_54 dend.append()
    dend_53 dend.append()
    dend_51 dend.append()
    dend_46 dend.append()
    dend_29 dend.append()
    dend_20 dend.append()
    dend_16 dend.append()
    dend_13 dend.append()
    dend_7 dend.append()
    dend_4 dend.append()
    dend_50 dend.append()
    dend_47 dend.append()
    dend_33 dend.append()
    dend_30 dend.append()
    dend_26 dend.append()
    dend_21 dend.append()
    dend_18 dend.append()
    dend_17 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_6 dend.append()
    dend_5 dend.append()
    dend_49 dend.append()
    dend_48 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_28 dend.append()
    dend_27 dend.append()
    dend_23 dend.append()
    dend_22 dend.append()
    dend_25 dend.append()
    dend_24 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_13473, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_13473 = new SectionList()
    soma_0 OneSecGrp_SectionRef_13473.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_1, axon_1, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_44, dend_44, dend_44, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_11, dend_11, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_29, dend_29, dend_29, dend_29, dend_29, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.7795303  // units: uF/cm2
    forsec axon cm = 2.7795303  // units: uF/cm2
    forsec dend cm = 2.7795303  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 72.11366  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 1.6265817E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 2.2267895E-6  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.44329256  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 0.0013040187  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.08568174  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.01971026  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 5.576037E-4  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.3781628  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.3529466E-4  // units: S cm-2
        e_pas_nml2 = -92.82251  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 9.85049E-4  // units: S cm-2
        e_pas_nml2 = -92.82251  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 5.870819E-4  // units: S cm-2
        e_pas_nml2 = -92.82251  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 2.7902712E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 9.920973E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_478513187
    forsec soma {
        insert CaDynamics_478513187
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_60 nseg = 3
    dend_59 nseg = 5
    dend_57 nseg = 3
    dend_56 nseg = 5
    dend_42 nseg = 3
    dend_41 nseg = 3
    dend_40 nseg = 3
    dend_37 nseg = 3
    dend_8 nseg = 3
    dend_53 nseg = 3
    dend_33 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_48 nseg = 3
    dend_27 nseg = 5
    dend_24 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_478513187


