// Cell: bNAC219_L23_BTC_08c8d4004b_0_0
/*
{
  "id" : "bNAC219_L23_BTC_08c8d4004b_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "0.636547, -11.2268, 0.0, 2.0961", "0.598333, -10.0461, 0.0, 3.03421", "0.560118, -8.86534, 0.0, 4.26504", "0.521904, -7.68461, 0.0, 5.45891", "0.483689, -6.50388, 0.0, 6.32885", "0.445475, -5.32315, 0.0, 7.1195", "0.40726, -4.14242, 0.0, 7.67098", "0.369046, -2.96169, 0.0, 8.08337", "0.330831, -1.78096, 0.0, 8.48415", "0.292617, -0.600232, 0.0, 8.88493", "0.254403, 0.580499, 0.0, 9.09061", "0.216188, 1.76123, 0.0, 8.76211", "0.177974, 2.94196, 0.0, 8.30944", "0.139759, 4.12269, 0.0, 7.83318", "0.101545, 5.30342, 0.0, 7.35692", "0.0633304, 6.48415, 0.0, 6.86553", "0.0251159, 7.66488, 0.0, 6.11195", "-0.0130985, 8.84561, 0.0, 5.27833", "-0.051313, 10.0263, 0.0, 4.23957", "-0.0895274, 11.2071, 0.0, 3.09571", "-0.127742, 12.3878, 0.0, 1.86556" ]
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "0.781648, -9.38035, 7.16, 0.83", "0.750329, -11.781, 7.81999, 0.83", "0.856918, -13.1022, 8.34742, 0.55", "1.13822, -14.6293, 9.0155, 0.55", "1.49068, -15.9909, 9.59776, 0.55", "2.25059, -18.3911, 10.5805, 0.28", "2.46642, -19.0461, 10.8329, 0.55", "3.11685, -20.6306, 11.4548, 0.55", "3.67515, -21.8963, 11.9661, 0.55", "4.29424, -23.088, 12.3929, 0.28", "4.72605, -23.9132, 12.6397, 0.55", "5.13782, -24.7909, 12.8557, 0.55", "5.75012, -26.339, 13.2207, 0.55", "6.57362, -28.791, 13.7445, 0.55", "7.07135, -30.6026, 14.1475, 0.55", "7.49452, -32.4371, 14.5499, 0.55", "7.67551, -33.5291, 14.77, 0.55", "7.88054, -35.3161, 15.0909, 0.55", "7.93371, -36.2718, 15.2417, 0.55", "7.89614, -37.1092, 15.3214, 0.55", "7.69964, -38.5675, 15.4512, 0.55", "7.40882, -40.2285, 15.5534, 0.55", "7.36726, -40.4875, 15.5518, 0.55" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-1.99836, -4.56035, -13.53, 0.83", "-1.83467, -2.93306, -14.2207, 0.83", "-2.3309, 0.32799, -15.2345, 0.83", "-2.79216, 1.32161, -16.7838, 0.83", "-3.33111, 2.40728, -18.6531, 0.83", "-3.82524, 3.40267, -20.3669, 0.83", "-4.27696, 4.31263, -21.9337, 0.83", "-5.13175, 6.01464, -24.9847, 0.83", "-9.5186, 13.3324, -39.5321, 0.83", "-9.6533, 13.521, -39.9776, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-1.60835, 11.1896, -0.19, 1.11", "-3.3482, 12.2655, -0.115236, 1.11", "-5.68273, 13.709, -0.0149189, 1.11", "-7.7831, 15.0077, 0.0753366, 1.11", "-10.1245, 16.4555, 0.17595, 0.83", "-12.904, 18.1741, 0.295387, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "0.641648, -11.7204, -8.79, 2.77", "0.34055, -16.8095, -8.79, 2.77", "-0.0899215, -24.0854, -8.79, 2.77", "-0.304313, -27.7091, -8.79, 2.77" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-0.358352, 11.7297, -1.3, 0.83", "0.183514, 16.0907, -1.07355, 0.83", "0.507091, 18.2325, -0.818936, 1.11", "1.01005, 21.8039, -0.236012, 0.83", "1.45558, 25.2525, 0.383834, 0.83", "1.84928, 28.0873, 0.992057, 0.83", "2.48962, 32.641, 1.92634, 0.83", "2.83567, 35.6108, 2.56449, 0.83", "3.11608, 37.9792, 3.05548, 0.83", "3.60548, 41.7757, 3.88452, 0.83", "4.51377, 48.6246, 5.40608, 0.83", "4.9618, 52.0512, 6.13095, 0.83", "5.2125, 54.2683, 6.45871, 0.83", "5.66388, 58.5826, 6.96155, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999995701300415,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-0.127742, 12.3878, 0.0, 0.930718", "-0.612964, 27.38, 0.0, 0.930718", "-1.09819, 42.3721, 0.0, 0.930718" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "7.36726, -40.4875, 15.5518, 0.55", "7.33242, -40.9872, 15.9748, 0.55", "7.27852, -41.5505, 16.4154, 0.55", "7.04408, -43.2098, 17.5858, 0.55", "6.89187, -44.2847, 18.2758, 0.55", "6.63885, -46.0411, 19.2922, 0.55", "6.45181, -47.4837, 20.0522, 0.28", "6.34476, -48.4538, 20.5001, 0.55", "6.24555, -49.5395, 20.8932, 0.55", "6.17453, -50.3197, 21.0916, 0.55", "6.08993, -51.2991, 21.2889, 0.55", "6.0241, -52.0693, 21.4473, 0.55", "5.93683, -52.9379, 21.6661, 0.55", "5.79108, -54.0442, 21.9898, 0.55", "5.51271, -55.7682, 22.528, 0.55", "5.20553, -57.1248, 22.9479, 0.55", "4.62677, -59.4034, 23.6022, 0.55", "4.36663, -60.3472, 23.8492, 0.55", "3.916, -62.0343, 24.229, 0.55", "3.6681, -63.0726, 24.3708, 0.55", "3.33026, -64.9246, 24.4117, 0.55", "3.17016, -65.994, 24.3367, 0.55", "3.10364, -66.6141, 24.2324, 0.55", "3.04379, -67.8035, 24.0116, 0.55", "3.05153, -69.3855, 23.6184, 0.55", "3.05201, -70.3426, 23.3465, 0.55", "3.06628, -71.5068, 23.002, 0.28", "3.0312, -72.7361, 22.6627, 0.55", "3.0143, -73.167, 22.5474, 0.55", "2.93058, -74.6468, 22.2001, 0.28", "2.87662, -75.6207, 21.9651, 0.55", "2.85828, -76.834, 21.6234, 0.55", "2.8977, -77.5265, 21.4342, 0.55", "2.95433, -78.0912, 21.3026, 0.28", "3.08288, -79.2261, 21.0895, 0.55", "3.32853, -81.2015, 20.8183, 0.28", "3.49343, -82.3937, 20.6614, 0.55", "3.63422, -83.5185, 20.5618, 0.28", "3.85191, -85.2056, 20.4782, 0.28", "3.93281, -85.8407, 20.4928, 0.55", "4.02051, -86.4518, 20.553, 0.28", "4.14069, -87.1564, 20.6752, 0.55", "4.51258, -89.1028, 21.018, 0.28", "4.64692, -89.7067, 21.1153, 0.28", "4.97068, -90.8599, 21.3019, 0.55", "5.31689, -91.8597, 21.4592, 0.55", "5.90818, -93.3349, 21.6728, 0.55", "6.2217, -94.0642, 21.7592, 0.55", "6.79315, -95.3462, 21.8582, 0.55", "7.21446, -96.3326, 21.93, 0.55", "7.54331, -97.0825, 22.0053, 0.55", "7.91532, -97.8753, 22.1368, 0.55", "8.55779, -99.1293, 22.4142, 0.55", "8.93103, -99.8411, 22.6123, 0.55", "9.40658, -100.681, 22.8692, 0.28", "10.075, -101.879, 23.2308, 0.55", "10.5797, -102.802, 23.4361, 0.55", "11.1883, -103.788, 23.6036, 0.55", "11.982, -104.957, 23.7303, 0.28", "12.5483, -105.807, 23.7196, 0.55", "13.0247, -106.556, 23.6247, 0.55", "14.1789, -108.375, 23.1634, 0.55", "14.5434, -108.957, 22.9554, 0.55", "14.9598, -109.616, 22.6793, 0.55", "15.8348, -110.948, 22.0654, 0.55", "16.1294, -111.425, 21.8655, 0.55", "16.9905, -112.778, 21.3432, 0.28", "17.5879, -113.71, 21.0257, 0.55", "18.6121, -115.374, 20.5641, 0.28", "19.0145, -116.043, 20.4265, 0.28", "19.7879, -117.355, 20.2886, 0.55", "20.1796, -118.083, 20.2647, 0.28", "20.3064, -118.343, 20.2777, 0.55", "20.8735, -119.502, 20.3874, 0.28", "21.2444, -120.229, 20.4572, 0.55", "22.0055, -121.615, 20.6598, 0.28", "22.4848, -122.377, 20.7698, 0.55", "22.8288, -122.908, 20.8378, 0.55", "23.1693, -123.43, 20.903, 0.55", "24.1691, -124.965, 21.0716, 0.28", "24.8201, -126.019, 21.1834, 0.55", "25.6346, -127.552, 21.3244, 0.28", "26.4716, -129.356, 21.4621, 0.28", "26.8364, -130.422, 21.5281, 0.55", "27.2215, -131.99, 21.5429, 0.55", "27.3898, -133.139, 21.4909, 0.28", "27.5215, -135.013, 21.3178, 0.55", "27.5172, -135.285, 21.2911, 0.55", "27.3898, -137.389, 21.0233, 0.28", "27.3224, -138.748, 20.8204, 0.55", "27.3082, -139.997, 20.6519, 0.28", "27.3138, -140.554, 20.5748, 0.55", "27.3684, -141.88, 20.3969, 0.55", "27.5699, -144.722, 20.0709, 0.28", "27.6583, -145.44, 20.0194, 0.55", "27.8801, -147.074, 20.0195, 0.55" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "7.36726, -40.4875, 15.5518, 0.55", "6.1084, -41.0806, 15.2353, 0.55", "4.70201, -41.3966, 14.1962, 0.55", "3.92258, -41.3818, 13.4358, 0.55", "3.1425, -41.3902, 12.6834, 0.55", "2.1709, -41.4177, 11.7086, 0.55", "1.45103, -41.4356, 10.9988, 0.55", "-1.03099, -41.3475, 8.63054, 0.28", "-1.89149, -41.3173, 7.78082, 0.28", "-2.85474, -41.2576, 6.87221, 0.55", "-4.62357, -41.1336, 5.65574, 0.55", "-5.26067, -41.11, 5.38197, 0.55", "-6.99928, -41.1095, 5.07756, 0.83", "-8.44353, -41.1854, 5.30536, 0.55", "-9.60874, -41.2985, 5.69599, 0.55", "-14.0046, -41.9689, 7.81126, 0.55", "-14.5654, -42.1052, 8.19135, 0.55", "-14.9581, -42.2622, 8.53992, 0.55", "-17.0326, -43.4578, 10.9561, 0.28", "-17.7048, -43.963, 11.8846, 0.55", "-18.2947, -44.5263, 12.7886, 0.55", "-19.7182, -46.3859, 15.156, 0.55", "-21.2724, -48.8646, 18.0483, 0.55", "-22.1075, -50.5356, 19.8035, 0.55", "-22.3733, -51.1952, 20.4563, 0.55", "-22.5799, -51.7103, 20.9857, 0.55", "-22.9043, -52.783, 22.0421, 0.55", "-22.9401, -53.6947, 22.6164, 0.28", "-22.7667, -54.7584, 22.7961, 0.28" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "-9.6533, 13.521, -39.9776, 0.83", "-9.65424, 14.9168, -40.1257, 0.83", "-9.64885, 16.3039, -40.3725, 0.83", "-9.6647, 17.4157, -40.5923, 0.83", "-9.65729, 18.7997, -40.8564, 0.83", "-9.6515, 20.7097, -41.1965, 0.83", "-9.6838, 22.5486, -41.5007, 0.83", "-9.72632, 23.8146, -41.7047, 0.83", "-9.78758, 25.5145, -41.9668, 0.83", "-9.91324, 27.786, -42.2838, 0.83", "-9.99938, 29.3749, -42.468, 0.83", "-10.078, 30.8168, -42.5826, 0.83", "-10.1193, 32.2718, -42.6223, 0.83", "-10.1238, 32.9985, -42.6371, 0.83", "-10.0876, 34.2052, -42.6797, 0.83", "-10.0231, 35.4405, -42.7394, 0.83", "-9.92034, 36.4518, -42.7919, 0.55", "-9.7345, 37.8448, -42.8623, 1.11", "-9.59606, 38.7416, -42.9044, 0.83", "-9.35378, 40.289, -42.9699, 0.83", "-9.0257, 42.0293, -43.0349, 0.83", "-8.76039, 43.3093, -43.0737, 0.83", "-8.40485, 45.0119, -43.1092, 0.83", "-8.13956, 46.4543, -43.1237, 0.83", "-7.99613, 47.1959, -43.1221, 0.83", "-7.79484, 48.3174, -43.1219, 0.83", "-7.61189, 49.7521, -43.2102, 0.83", "-7.48663, 51.3487, -43.3857, 0.83", "-7.47575, 52.9671, -43.6447, 0.83", "-7.53358, 54.2127, -43.8979, 0.83", "-7.65953, 55.8498, -44.3099, 0.83", "-8.0372, 58.4485, -45.0473, 0.83", "-8.08042, 58.6975, -45.1403, 0.83", "-8.48538, 60.8528, -46.0851, 0.83", "-8.61601, 61.6111, -46.4482, 0.83", "-8.78581, 62.7613, -47.0179, 0.83", "-8.97272, 64.7095, -48.0127, 0.83", "-8.97764, 67.2423, -49.1208, 0.83", "-8.91103, 68.1333, -49.5082, 0.83", "-8.74664, 69.0719, -49.8818, 0.83", "-8.59849, 69.7178, -50.1034, 0.83", "-8.1577, 71.3615, -50.5203, 0.83", "-7.5184, 73.6513, -50.8569, 0.83", "-7.23812, 74.9115, -50.9042, 0.83", "-7.0276, 76.3798, -50.9218, 0.83", "-6.94224, 78.0707, -50.9014, 0.83", "-7.01307, 79.701, -50.8949, 0.83", "-7.23769, 81.5815, -50.9336, 0.83", "-7.60858, 83.1455, -51.0433, 0.83", "-8.07406, 84.6079, -51.1606, 0.83", "-8.38973, 85.385, -51.2605, 0.83", "-9.20518, 87.1259, -51.5548, 0.83", "-9.93538, 88.5498, -52.0255, 0.83", "-10.4163, 89.5346, -52.4815, 0.83", "-10.7763, 90.5071, -53.0989, 0.83", "-10.9101, 91.0811, -53.5133, 0.83", "-10.9979, 91.5532, -53.8783, 0.83", "-11.2283, 93.5798, -55.5461, 0.83", "-11.2791, 94.6719, -56.5293, 1.11", "-11.1672, 96.5772, -58.3628, 0.83", "-11.0758, 97.2302, -59.072, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-9.6533, 13.521, -39.9776, 0.55", "-10.7794, 13.0582, -42.5878, 0.55", "-13.5838, 11.6401, -48.237, 0.55", "-14.3833, 11.1708, -49.6736, 0.55", "-15.1482, 10.74, -50.9834, 0.55", "-15.8655, 10.5032, -52.2487, 0.55", "-18.2839, 9.77885, -57.2348, 0.55", "-19.2531, 9.43995, -59.3758, 0.55", "-19.8089, 9.253, -60.5467, 0.55", "-21.3676, 8.73268, -64.2642, 0.55", "-23.5857, 7.8818, -69.878, 1.11", "-26.2315, 6.77216, -76.5328, 0.83", "-26.87, 6.50753, -78.101, 0.83", "-27.4757, 6.27576, -79.6777, 0.83", "-30.0263, 5.20807, -86.5283, 0.83", "-30.5275, 4.90692, -87.8654, 0.83", "-31.2871, 4.21812, -89.74, 0.83", "-31.508, 4.08167, -90.183, 0.83" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-12.904, 18.1741, 0.295387, 0.83", "-13.7346, 20.6721, 1.60009, 0.83", "-14.2873, 21.9321, 2.54046, 0.83", "-14.7208, 22.8056, 3.28083, 0.83", "-16.9917, 26.5215, 6.62101, 0.83", "-18.0586, 28.0842, 7.98926, 0.83", "-19.3572, 29.9235, 9.60576, 0.83", "-22.5287, 34.1452, 13.5004, 0.83", "-23.9562, 35.9259, 15.1327, 0.83", "-25.7745, 38.1189, 17.1469, 0.83", "-28.1111, 40.864, 19.5616, 0.83", "-30.3254, 43.3193, 21.8743, 0.83", "-30.9, 43.9346, 22.4526, 0.83", "-31.6707, 44.8297, 23.0619, 0.83" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-12.904, 18.1741, 0.295387, 0.83", "-16.1489, 16.8683, 0.778066, 0.83", "-21.18, 15.1334, 1.37015, 0.83", "-22.9953, 14.4681, 1.52313, 0.83", "-25.8499, 13.4546, 1.35503, 0.83", "-27.3846, 12.9178, 1.11353, 0.83", "-29.0912, 12.272, 0.751149, 0.83", "-29.3499, 12.179, 0.672212, 0.83", "-31.3796, 11.3188, -0.492855, 0.83", "-34.544, 9.37117, -2.88565, 0.83", "-36.1756, 7.97724, -4.37756, 0.83", "-36.9788, 6.96904, -5.39201, 0.83", "-38.1263, 5.02016, -7.23094, 0.83", "-39.6411, 1.59087, -10.265, 0.83", "-40.1199, 0.0291484, -11.5115, 0.83", "-40.5808, -2.55614, -13.2197, 0.83", "-41.0637, -7.14937, -15.9491, 0.83", "-41.1437, -8.60595, -16.6923, 0.83", "-41.1453, -11.4948, -17.8998, 0.83", "-41.0948, -13.8702, -18.6776, 0.83", "-40.9017, -16.8597, -19.5672, 0.83", "-40.6432, -19.1174, -20.1238, 0.83", "-40.1917, -22.3416, -20.7139, 0.83", "-39.8556, -24.0188, -20.998, 0.83", "-38.7171, -28.1078, -22.0633, 0.83", "-38.1474, -29.7486, -22.6633, 0.83", "-37.0667, -32.4799, -24.026, 0.83", "-36.606, -33.5274, -24.6552, 0.83", "-35.6677, -35.5655, -26.0221, 0.83", "-33.1438, -41.0994, -29.7949, 0.83", "-32.6303, -42.1678, -30.6972, 0.83", "-31.5983, -44.3331, -32.7268, 0.28", "-31.2626, -45.0168, -33.4244, 1.38", "-30.3422, -46.9937, -35.4251, 0.28", "-29.5965, -48.6302, -37.0137, 1.11", "-27.2999, -53.7409, -41.3164, 0.28", "-26.8066, -54.7711, -42.2366, 1.11", "-26.6205, -55.1333, -42.5776, 1.11", "-26.122, -56.1199, -43.528, 0.28", "-25.886, -56.5679, -43.9421, 0.28", "-25.331, -57.6773, -44.6894, 0.28", "-24.7393, -58.9548, -45.2668, 1.66", "-23.7811, -60.8808, -46.3027, 0.28", "-23.3417, -61.7691, -46.8414, 0.55", "-22.6622, -63.1433, -47.7255, 0.28", "-22.0616, -64.2783, -48.4667, 0.55", "-20.4134, -66.8447, -50.9746, 0.28", "-20.0805, -67.3161, -51.5644, 0.28", "-19.3999, -68.246, -52.89, 0.83", "-18.7978, -69.1652, -54.2494, 0.83", "-18.4972, -69.7458, -55.0763, 0.83", "-17.0636, -73.8189, -60.1309, 0.28", "-16.8699, -74.9377, -61.2114, 0.28", "-16.8462, -75.4484, -61.6315, 0.55", "-16.908, -77.1199, -62.8932, 0.28", "-17.107, -78.6385, -63.9583, 0.55", "-17.3656, -80.2113, -64.9206, 0.28", "-17.5663, -81.8599, -65.6699, 0.55", "-17.7102, -83.299, -66.4682, 0.28", "-17.8414, -85.1444, -67.7029, 0.55", "-17.8984, -86.1663, -68.4656, 0.28", "-18.034, -87.9639, -70.0437, 0.83", "-18.2038, -90.0683, -72.0571, 0.28", "-18.5523, -92.7674, -74.6758, 1.11", "-18.8891, -94.7672, -76.7037, 0.55", "-19.0736, -95.7011, -77.6143, 0.83", "-19.5059, -97.8315, -79.9046, 0.28", "-19.6517, -98.4289, -80.5223, 0.28", "-19.9849, -100.046, -82.1685, 0.55", "-20.1576, -102.587, -84.4716, 0.28", "-20.1663, -103.685, -85.4786, 0.55", "-20.0775, -106.653, -88.1434, 0.28", "-19.8871, -109.466, -90.6943, 0.55", "-19.7569, -111.6, -92.8154, 0.28", "-19.6809, -112.664, -93.9238, 0.55", "-19.6001, -115.315, -96.5373, 0.28", "-19.658, -116.966, -98.0943, 0.55", "-19.8378, -118.595, -99.4517, 0.55", "-20.1961, -120.512, -101.018, 0.28", "-20.4311, -121.4, -101.536, 0.55", "-20.8348, -122.787, -102.111, 0.28", "-21.371, -124.672, -102.751, 0.55", "-21.7354, -126.006, -103.227, 0.28", "-22.1412, -127.547, -103.741, 0.55", "-22.4962, -129.165, -104.3, 0.28", "-22.6136, -129.755, -104.534, 0.55", "-23.0838, -133.318, -106.486, 0.28", "-23.1168, -133.872, -106.827, 0.55", "-23.1454, -134.94, -107.488, 0.28", "-23.2029, -136.633, -108.532, 0.55", "-23.3153, -138.45, -109.586, 0.28", "-23.5269, -141.73, -111.18, 0.28", "-23.6528, -143.428, -111.858, 0.28", "-23.8468, -145.335, -112.589, 0.55", "-24.2596, -149.398, -114.06, 0.28", "-24.4517, -151.137, -114.665, 0.55", "-24.6703, -153.323, -115.348, 0.28", "-24.7444, -154.106, -115.587, 0.55", "-25.0705, -158.59, -117.069, 0.28", "-25.1261, -160.255, -117.634, 0.83", "-25.1687, -166.089, -119.621, 0.28", "-25.1569, -167.73, -120.21, 0.55", "-25.0666, -170.763, -121.391, 0.28", "-25.015, -172.216, -121.953, 0.55", "-24.9547, -174.158, -122.643, 0.28", "-24.9665, -175.155, -122.962, 0.55", "-25.0189, -176.16, -123.251, 0.55", "-25.1916, -177.893, -123.729, 0.28", "-25.4388, -179.661, -124.14, 0.55", "-26.1467, -183.911, -125.174, 0.28", "-26.5569, -186.084, -125.686, 0.55", "-26.92, -188.109, -126.228, 0.28", "-27.2277, -189.705, -126.693, 0.55", "-27.5493, -191.298, -127.125, 0.28", "-27.7492, -192.429, -127.491, 0.55", "-28.02, -193.846, -128.02, 0.28", "-28.4226, -196.257, -128.937, 0.55", "-28.7188, -198.216, -129.638, 0.28", "-28.9514, -200.091, -130.41, 0.83", "-29.3127, -204.147, -132.181, 0.28", "-29.3468, -204.734, -132.421, 0.55", "-29.3673, -206.401, -133.017, 0.28", "-29.2892, -208.207, -133.503, 0.55", "-28.9626, -210.756, -134.013, 0.28", "-28.7281, -211.888, -134.258, 0.55", "-28.0974, -213.903, -134.595, 0.28", "-27.5101, -215.502, -134.872, 0.28", "-26.87, -217.109, -135.134, 0.55", "-25.5929, -219.987, -135.534, 0.28", "-24.174, -223.037, -135.819, 0.55", "-23.0225, -225.375, -136.155, 0.28", "-22.76, -225.873, -136.28, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-0.304313, -27.7091, -8.79, 2.77", "-0.182711, -28.8962, -8.78952, 2.77" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-0.304313, -27.7091, -8.79, 0.83", "-3.37836, -33.0031, -9.9907, 0.83", "-5.01067, -35.8142, -10.6283, 1.11" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "5.66388, 58.5826, 6.96155, 0.55", "4.91353, 60.7496, 7.15989, 0.55", "3.64364, 64.4171, 7.49556, 0.55", "3.05399, 66.12, 7.65142, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "5.66388, 58.5826, 6.96155, 0.55", "6.52557, 59.7395, 7.14034, 0.55", "7.47886, 60.9306, 7.33096, 0.55", "8.08614, 61.6531, 7.44061, 0.55", "9.71496, 63.606, 7.70474, 0.55", "10.7936, 65.0397, 7.87432, 0.55", "11.9868, 66.7306, 8.04474, 0.55", "13.0411, 68.3407, 8.16732, 0.55", "14.0438, 70.0769, 8.35168, 0.55", "15.1281, 72.0948, 8.61309, 0.55", "15.9635, 73.8001, 8.91325, 0.55", "16.6714, 75.5329, 9.28177, 0.55", "17.265, 77.2352, 9.67596, 0.55", "17.9299, 79.4924, 10.2261, 0.55", "18.298, 80.9013, 10.586, 0.55", "18.75, 82.6011, 11.0327, 0.55", "19.2242, 84.3533, 11.4857, 0.55", "19.7139, 86.2465, 11.9385, 0.55", "20.3796, 88.6573, 12.4556, 0.55", "20.6531, 89.4633, 12.5993, 0.55", "21.1195, 90.7996, 12.8773, 0.55", "21.5567, 92.0009, 13.1352, 0.55", "22.1382, 93.5962, 13.5747, 0.55", "23.0426, 96.1794, 14.5015, 0.55", "23.6696, 98.0157, 15.279, 0.55", "24.4559, 100.097, 16.2409, 0.55", "25.1442, 101.756, 17.0234, 0.55", "26.0786, 103.793, 17.9749, 0.55", "27.4034, 106.429, 19.1827, 0.55", "28.6728, 108.71, 20.2005, 0.55", "30.1109, 111.057, 21.1867, 0.55", "31.5704, 113.275, 22.0011, 0.55", "32.5989, 114.788, 22.4981, 0.55", "33.9472, 116.732, 22.9881, 0.55", "35.4595, 118.876, 23.3879, 0.55", "36.4698, 120.381, 23.6079, 0.55", "37.4342, 121.993, 23.8002, 0.55", "38.0418, 123.076, 23.9243, 0.55", "39.032, 124.96, 24.1065, 0.55", "39.7677, 126.509, 24.1965, 0.55", "40.4475, 127.953, 24.2102, 0.28", "40.7654, 128.646, 24.227, 0.55" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-1.09819, 42.3721, 0.0, 0.28", "-1.58341, 57.3643, 0.0, 0.28", "-2.06863, 72.3564, 0.0, 0.28" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "27.8801, -147.074, 20.0195, 0.28", "28.0943, -149.575, 19.5953, 0.28", "28.169, -152.078, 19.2021, 0.55", "28.18, -156.153, 18.2876, 0.28", "28.1432, -158.43, 17.7116, 0.55", "28.0485, -162.069, 16.7601, 0.28", "28.0418, -162.373, 16.6824, 0.55", "27.9916, -166.095, 15.4817, 0.28", "28.0359, -169.443, 14.1859, 0.55", "28.1381, -170.873, 13.6152, 0.55", "28.3857, -172.725, 12.7352, 0.55", "28.8091, -174.935, 11.5743, 0.55", "29.7892, -179.022, 9.61644, 0.28", "30.5115, -181.315, 8.63377, 0.28", "31.174, -183.361, 8.03787, 0.28", "31.9661, -185.834, 7.52418, 0.55", "32.4377, -187.283, 7.35917, 0.55", "33.5764, -191.1, 7.34993, 0.28", "33.8838, -192.276, 7.47313, 0.55", "35.0027, -197.076, 8.14357, 0.28", "35.5554, -199.828, 8.5661, 0.28", "36.1145, -203.133, 9.1021, 0.28", "36.3609, -204.857, 9.31173, 0.55", "36.4293, -205.536, 9.34557, 0.55", "36.5605, -207.882, 9.4175, 0.28", "36.5835, -208.573, 9.425, 0.55", "36.6121, -211.183, 9.24667, 0.28", "36.6189, -211.787, 9.16089, 0.55", "36.879, -214.962, 8.70137, 0.28", "37.1202, -216.726, 8.48115, 0.55", "37.3232, -218.008, 8.34234, 0.55", "37.7737, -220.756, 8.38627, 0.28", "37.9038, -221.656, 8.51589, 0.55", "38.0079, -224.816, 9.33059, 0.28", "37.9791, -225.394, 9.52525, 0.55", "37.8431, -227.056, 10.1927, 0.28", "37.2795, -231.207, 12.0777, 0.28", "37.1301, -232.054, 12.5375, 0.55", "36.1314, -236.265, 14.7814, 0.28", "35.484, -238.304, 15.7523, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "27.8801, -147.074, 20.0195, 0.28", "30.4579, -148.521, 20.9868, 0.28", "31.1176, -148.918, 21.1532, 0.55", "32.7634, -149.992, 21.4868, 0.28", "33.4161, -150.418, 21.6191, 0.55", "35.0717, -151.498, 21.9547, 0.28", "35.834, -151.995, 22.1093, 0.55", "38.5834, -153.733, 22.5901, 0.28", "39.4968, -154.335, 22.6908, 0.55" ],
    "parent" : "dend_52",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-11.0758, 97.2302, -59.072, 0.83", "-10.0061, 101.463, -58.9165, 0.83", "-9.25228, 104.94, -58.7746, 0.83", "-8.42184, 109.005, -58.6085, 0.83", "-7.79053, 112.411, -58.4763, 0.28", "-7.43852, 114.531, -58.3976, 0.55", "-7.06404, 116.963, -58.312, 0.28", "-6.59742, 120.581, -58.1238, 0.55", "-6.47242, 122.025, -58.0854, 0.28", "-6.42495, 124.612, -58.1081, 0.55", "-6.41405, 125.565, -58.1424, 0.28", "-6.37632, 127.286, -58.1651, 0.83", "-6.30433, 129.472, -58.1533, 0.28", "-6.15273, 132.053, -58.0591, 0.83", "-5.80368, 136.464, -57.6256, 0.55", "-5.46891, 139.559, -57.1246, 0.28", "-5.24673, 141.321, -56.7948, 0.55", "-5.14284, 142.052, -56.6269, 0.28", "-4.78783, 144.041, -56.0304, 0.55", "-4.26036, 146.581, -55.0404, 0.28", "-3.86449, 148.343, -54.0479, 0.83" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-11.0758, 97.2302, -59.072, 0.28", "-11.9479, 98.3255, -60.1102, 0.28", "-12.5353, 99.5795, -61.3269, 0.28", "-12.7094, 99.9934, -61.7457, 0.55", "-13.3595, 101.379, -63.1699, 0.28", "-13.9049, 102.35, -64.1551, 0.55", "-14.3858, 103.184, -65.2255, 0.55", "-15.3642, 104.814, -67.7903, 0.28", "-15.764, 105.395, -68.8454, 0.28", "-16.2562, 106.058, -70.0833, 0.55", "-16.8044, 106.823, -71.5055, 0.55", "-18.2584, 109.273, -75.9669, 0.28", "-18.5428, 109.781, -76.8594, 0.55", "-18.855, 110.32, -77.7631, 0.28", "-19.036, 110.727, -78.3781, 0.55", "-19.7718, 112.656, -80.9525, 0.28", "-20.3168, 114.248, -82.6724, 0.55", "-20.6244, 115.101, -83.3758, 0.28", "-20.8118, 115.64, -83.8195, 0.55", "-21.0677, 116.399, -84.4337, 0.28", "-21.4829, 117.655, -85.3402, 0.55", "-21.8275, 118.577, -85.9302, 0.28", "-22.3635, 120.016, -86.9056, 0.28", "-22.9394, 121.625, -88.0646, 0.28", "-23.3773, 122.725, -88.914, 0.28", "-23.6738, 123.402, -89.4509, 0.55", "-24.7497, 125.508, -90.9899, 0.55", "-25.5736, 126.882, -91.8888, 0.83", "-26.0943, 127.647, -92.3146, 0.83", "-28.0647, 130.309, -93.5926, 0.55", "-28.8645, 131.306, -94.0547, 0.83", "-30.4109, 133.133, -94.8182, 0.28", "-31.2311, 134.058, -95.1199, 0.28", "-31.7767, 134.644, -95.2855, 0.28", "-32.932, 135.847, -95.6042, 0.28", "-34.0909, 136.968, -95.8886, 0.55", "-34.7619, 137.567, -96.1033, 0.55", "-35.7832, 138.363, -96.5181, 0.55", "-36.8206, 139.037, -96.9244, 0.55", "-37.3925, 139.354, -97.1399, 0.28", "-38.6351, 139.921, -97.5891, 0.55", "-40.0253, 140.537, -98.1893, 0.55", "-41.5302, 141.228, -98.9835, 0.83", "-42.2769, 141.56, -99.3762, 0.28", "-43.0301, 141.905, -99.7684, 0.55", "-43.9141, 142.335, -100.222, 0.55", "-45.9884, 143.412, -101.223, 0.55", "-47.5088, 144.195, -101.931, 0.55", "-49.2215, 145.035, -102.68, 0.28", "-50.3315, 145.558, -103.131, 0.28", "-51.398, 146.086, -103.559, 0.28", "-51.8889, 146.337, -103.749, 0.55", "-53.7896, 147.257, -104.435, 0.28", "-55.1537, 147.912, -105.031, 0.28", "-56.3817, 148.532, -105.577, 0.83", "-57.6388, 149.178, -106.058, 0.28", "-58.6065, 149.678, -106.369, 0.28", "-59.6012, 150.184, -106.635, 0.28", "-60.394, 150.598, -106.795, 0.55", "-62.4539, 151.584, -107.159, 0.28", "-63.4918, 151.998, -107.332, 0.55", "-65.0075, 152.553, -107.587, 0.28", "-65.9869, 152.945, -107.773, 0.55", "-66.9261, 153.358, -107.99, 0.28", "-68.1401, 153.901, -108.291, 0.28", "-69.071, 154.314, -108.559, 0.28", "-70.6552, 155.054, -108.883, 0.55", "-71.5385, 155.535, -109.012, 0.55", "-72.9419, 156.36, -109.161, 0.55", "-74.4905, 157.248, -109.296, 0.28", "-75.4205, 157.779, -109.285, 0.55", "-76.9599, 158.658, -109.156, 0.28", "-78.2267, 159.274, -108.98, 0.28", "-79.0384, 159.655, -108.814, 0.28", "-80.1853, 160.181, -108.527, 0.28", "-82.3474, 161.025, -108.054, 0.55", "-84.0074, 161.59, -107.764, 0.28", "-85.5813, 161.995, -107.652, 0.55", "-87.3832, 162.338, -107.65, 0.55", "-87.8777, 162.434, -107.684, 0.28", "-89.6767, 162.803, -107.977, 0.55", "-90.9927, 163.072, -108.225, 0.55", "-92.6484, 163.391, -108.457, 0.28", "-93.8773, 163.714, -108.597, 0.55", "-95.1482, 164.146, -108.656, 0.28", "-96.4396, 164.777, -108.574, 0.28", "-98.7206, 166.147, -108.245, 0.55", "-100.121, 167.108, -108.039, 0.28", "-101.353, 168.037, -107.864, 0.28", "-103.063, 169.417, -107.668, 0.55", "-106.079, 171.889, -107.545, 0.28", "-106.47, 172.207, -107.57, 0.55", "-108.602, 173.93, -107.981, 0.28", "-109.165, 174.379, -108.128, 0.55", "-109.763, 174.802, -108.328, 0.28", "-111.22, 175.731, -108.934, 0.55", "-113.12, 176.802, -109.789, 0.28", "-113.989, 177.275, -110.154, 0.55", "-115.074, 177.84, -110.574, 0.28", "-116.603, 178.658, -111.156, 0.55", "-119.67, 180.259, -112.298, 0.28", "-120.152, 180.512, -112.464, 0.55", "-122.225, 181.528, -113.15, 0.28", "-123.179, 181.958, -113.461, 0.55", "-124.089, 182.318, -113.71, 0.28", "-125.443, 182.788, -114.045, 0.55", "-126.868, 183.159, -114.377, 0.28", "-128.621, 183.531, -114.788, 0.28", "-130.801, 183.911, -115.301, 0.28", "-133.019, 184.242, -115.8, 0.55", "-134.972, 184.469, -116.294, 0.28", "-136.304, 184.588, -116.679, 0.28", "-138.341, 184.683, -117.335, 0.28", "-139.059, 184.693, -117.594, 0.28", "-140.247, 184.668, -118.118, 0.55", "-141.866, 184.62, -118.986, 0.28", "-143.626, 184.516, -120.013, 0.28", "-144.423, 184.458, -120.518, 0.55", "-145.294, 184.431, -121.07, 0.28", "-146.324, 184.453, -121.71, 0.55", "-148.431, 184.575, -123.052, 0.55", "-149.847, 184.713, -123.895, 0.28", "-150.16, 184.759, -124.086, 0.55", "-152.454, 185.189, -125.474, 0.28", "-152.941, 185.301, -125.727, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-31.508, 4.08167, -90.183, 0.55", "-33.5368, 2.287, -100.512, 0.55", "-33.8092, 2.17706, -101.792, 0.55", "-34.3636, 2.23058, -104.312, 0.55", "-35.656, 2.69878, -110.04, 0.55", "-36.0844, 2.92464, -111.899, 0.55", "-38.1133, 4.34717, -120.76, 0.55", "-38.5828, 4.8243, -122.669, 0.55", "-40.1431, 6.76395, -129.077, 0.28", "-40.4664, 7.22756, -130.394, 0.55", "-40.6276, 7.45018, -131.069, 0.55", "-41.8688, 9.00643, -136.47, 0.55", "-42.894, 9.84818, -140.547, 0.55", "-43.2237, 10.0343, -141.796, 0.55", "-43.9701, 10.2688, -144.371, 0.55", "-47.8771, 10.8615, -156.734, 0.28", "-48.31, 10.8867, -158.056, 0.55", "-49.0819, 10.8659, -160.244, 0.28", "-49.4058, 10.8543, -161.08, 0.55", "-51.4511, 10.7413, -165.911, 0.28", "-52.0439, 10.7166, -167.102, 0.55", "-57.9036, 10.6985, -176.722, 0.28", "-58.4322, 10.7049, -177.59, 0.55", "-59.6368, 10.7849, -179.573, 0.28", "-60.0194, 10.809, -180.166, 0.55", "-62.3953, 10.9869, -183.351, 0.28", "-63.4394, 11.0882, -184.69, 0.55", "-64.4192, 11.1859, -185.75, 0.55", "-68.1579, 11.93, -189.954, 0.55", "-69.0882, 12.19, -191.016, 0.55", "-70.0127, 12.547, -192.048, 0.55", "-73.4929, 14.2883, -195.543, 0.28", "-74.1739, 14.6878, -196.168, 0.55", "-76.7352, 16.4193, -198.307, 0.28", "-77.4541, 16.9423, -198.814, 0.55", "-79.8449, 18.7685, -200.344, 0.28", "-81.5676, 20.0869, -201.265, 0.28", "-82.2971, 20.6508, -201.542, 0.55", "-84.099, 22.0181, -202.23, 0.28", "-84.6603, 22.4165, -202.425, 0.55", "-86.1027, 23.4352, -202.86, 0.28", "-86.4781, 23.6888, -202.887, 0.55" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-31.508, 4.08167, -90.183, 0.28", "-31.0001, 2.60189, -90.8178, 0.28", "-30.6134, 1.26565, -91.6006, 0.83", "-30.2988, 0.209578, -92.2495, 0.28", "-29.7216, -1.56539, -93.4424, 0.83", "-28.6895, -4.68836, -95.5677, 0.28", "-28.2622, -5.95115, -96.4536, 0.83", "-27.5194, -8.16324, -98.1476, 0.28", "-26.9607, -9.82079, -99.4868, 0.83", "-26.257, -11.7159, -101.092, 0.28", "-25.7919, -12.8066, -102.033, 0.83", "-25.1176, -14.2392, -103.093, 0.28", "-25.0193, -14.406, -103.207, 0.55", "-24.5829, -15.005, -103.527, 0.28", "-24.2046, -15.4681, -103.719, 0.55", "-23.5689, -16.1813, -103.941, 0.28", "-22.5202, -17.2942, -104.259, 1.38", "-20.9772, -18.9314, -104.685, 0.28", "-19.9842, -20.0, -104.965, 0.28", "-18.13, -21.9179, -105.349, 1.38", "-16.9981, -23.0451, -105.51, 0.28", "-16.8439, -23.2018, -105.534, 0.55", "-16.0504, -24.0174, -105.65, 0.28", "-15.1131, -24.9766, -105.811, 0.55", "-13.2488, -26.9447, -106.252, 0.28", "-12.5162, -27.7222, -106.508, 0.83", "-10.7573, -29.7406, -107.154, 0.28", "-10.0906, -30.5772, -107.418, 0.83", "-9.16928, -31.8301, -107.792, 0.28", "-8.80117, -32.3229, -107.93, 0.55", "-7.45299, -34.1073, -108.384, 0.28", "-6.13326, -35.7783, -108.697, 0.55", "-4.68409, -37.4455, -108.912, 1.66", "-3.03298, -39.2383, -109.107, 0.28", "-0.724886, -41.5336, -109.29, 0.83", "0.930269, -43.0133, -109.402, 0.28", "1.79687, -43.6923, -109.448, 0.83", "3.44366, -44.7737, -109.585, 0.28", "4.59326, -45.4266, -109.694, 0.55", "6.11983, -46.2115, -109.851, 0.55", "8.57213, -47.3775, -110.128, 0.28", "9.65859, -47.8329, -110.253, 0.83", "11.6524, -48.6271, -110.474, 0.28", "11.8556, -48.712, -110.495, 0.83" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-31.6707, 44.8297, 23.0619, 0.55", "-31.9198, 48.8657, 27.0991, 0.55", "-32.0658, 49.6638, 27.7933, 0.55", "-32.3667, 50.8328, 28.6377, 0.55", "-32.4522, 51.1787, 28.8463, 0.55", "-33.0703, 53.6792, 30.3543, 0.55", "-33.5153, 55.4795, 31.44, 0.55", "-33.8855, 56.3186, 31.7573, 0.55", "-34.469, 57.6202, 32.2529, 0.55", "-35.1265, 58.8536, 32.7025, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-31.6707, 44.8297, 23.0619, 0.55", "-36.2142, 45.5198, 24.2216, 0.55", "-37.9859, 45.5618, 24.8899, 0.55", "-39.9609, 45.4282, 25.9706, 0.55", "-42.2338, 45.1978, 27.3355, 0.55", "-43.9089, 44.9422, 28.3772, 0.55", "-45.5008, 44.647, 29.3443, 0.55", "-49.681, 43.5762, 31.8784, 0.55", "-52.9182, 42.5693, 34.0269, 0.55", "-54.1039, 42.1447, 34.8911, 0.55", "-55.3687, 41.6782, 35.8891, 0.55", "-57.1939, 40.875, 37.3937, 0.55", "-59.1042, 40.0292, 38.913, 0.55" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.182711, -28.8962, -8.78952, 1.38", "-1.08091, -32.86, -8.6906, 1.38", "-1.80928, -35.3093, -8.68907, 1.38", "-2.78769, -38.0211, -8.71709, 1.38", "-5.57823, -44.3761, -8.77157, 1.38", "-8.73981, -50.9219, -8.79786, 1.94", "-10.8112, -55.0012, -8.76685, 1.38", "-11.7913, -56.7746, -8.77225, 1.38", "-13.6842, -59.896, -8.77947, 1.38", "-16.9838, -64.9555, -8.79613, 1.38", "-19.4209, -68.1885, -8.80463, 1.11", "-23.7971, -73.652, -8.62421, 1.66" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-0.182711, -28.8962, -8.78952, 0.83", "0.266775, -29.9262, -8.69482, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-5.01067, -35.8142, -10.6283, 0.83", "-7.67406, -37.2843, -12.0759, 0.83", "-9.86835, -38.4954, -13.2685, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.01067, -35.8142, -10.6283, 0.55", "-5.34379, -36.463, -9.33936, 0.55", "-5.39913, -36.5556, -9.14709, 0.55", "-6.43378, -37.766, -6.18691, 0.55", "-7.91712, -39.0165, -2.61294, 0.55", "-9.34512, -39.9248, 0.40238, 0.55", "-10.5231, -40.4823, 2.58341, 0.55", "-10.9292, -40.6337, 3.28834, 0.83", "-13.2663, -41.4067, 7.00826, 0.28", "-14.3166, -41.6514, 8.52086, 0.55", "-16.3064, -42.0513, 10.9121, 0.55", "-18.351, -42.5277, 13.2995, 0.28", "-19.3627, -42.8908, 14.5503, 0.55", "-20.3127, -43.4073, 15.8253, 0.55", "-22.2134, -44.7676, 18.4997, 0.55", "-23.4559, -45.8924, 20.4352, 0.28", "-24.5194, -47.0746, 22.2109, 0.55", "-25.0849, -47.8506, 23.2805, 0.55", "-25.6201, -48.5248, 24.2831, 0.55" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.05399, 66.12, 7.65142, 0.55", "1.82417, 66.5975, 8.65468, 0.55", "1.11777, 66.9175, 9.23459, 0.83", "-0.597902, 67.768, 10.6096, 0.28", "-1.75967, 68.3581, 11.617, 0.55", "-2.84076, 68.9718, 12.5603, 0.28", "-3.39036, 69.3276, 13.0916, 0.55", "-3.95239, 69.8056, 13.7207, 0.28", "-4.60073, 70.5665, 14.6534, 0.55", "-5.33527, 71.6127, 15.8901, 0.28", "-6.09786, 72.7535, 17.2073, 0.83", "-7.03623, 74.1343, 18.8536, 0.83", "-7.72309, 75.0811, 20.1096, 0.55", "-8.69454, 76.3141, 21.8612, 0.28", "-9.16106, 76.8805, 22.6932, 0.55", "-10.064, 77.8497, 24.1339, 0.28", "-10.5456, 78.2905, 24.8291, 0.83", "-11.7495, 79.2525, 26.2559, 0.55", "-12.5118, 79.8626, 27.1801, 0.28", "-13.1093, 80.4185, 27.896, 0.83", "-13.6433, 80.944, 28.5246, 0.83", "-14.6302, 81.8287, 29.5881, 0.28", "-15.3049, 82.4232, 30.2536, 0.83", "-17.2644, 84.1829, 32.0802, 0.28", "-17.9521, 84.7751, 32.6975, 0.55", "-19.6908, 86.1961, 34.1845, 0.55", "-20.9338, 87.1306, 35.1931, 0.28", "-21.9087, 87.757, 35.9136, 0.55", "-22.9675, 88.3597, 36.6045, 0.28", "-23.5626, 88.6761, 36.9523, 0.55", "-24.2772, 89.0712, 37.4079, 0.28", "-25.2857, 89.7784, 38.1589, 0.55", "-26.2381, 90.5462, 38.9154, 0.28", "-27.4119, 91.5474, 39.8915, 0.55", "-28.1771, 92.37, 40.5263, 0.28", "-28.6432, 92.9744, 40.919, 0.55", "-29.3359, 94.0141, 41.4208, 0.28", "-29.5899, 94.4504, 41.5952, 0.55", "-29.9621, 95.158, 41.832, 0.28", "-30.7776, 96.7753, 42.2879, 0.55", "-31.9436, 98.969, 42.7867, 0.55", "-32.7211, 100.367, 43.0833, 0.28", "-33.5853, 101.731, 43.3413, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "3.05399, 66.12, 7.65142, 0.55", "3.17639, 69.9183, 7.76156, 0.55", "3.21508, 71.9025, 8.03894, 0.55", "3.28605, 73.9913, 8.4705, 0.55", "3.61867, 78.3493, 9.71039, 0.55", "4.02003, 83.6272, 11.3716, 0.55", "4.1659, 86.3303, 12.2616, 0.55", "4.50884, 92.2483, 14.3513, 0.55", "4.88044, 97.6649, 16.2145, 0.55", "5.25497, 104.326, 18.4594, 0.55", "5.34265, 107.005, 19.3258, 0.55", "5.35852, 111.702, 20.7313, 0.55", "5.34419, 116.484, 22.0406, 0.55", "5.05234, 123.61, 23.8792, 0.55", "4.82079, 127.119, 24.7256, 0.55", "4.3279, 132.708, 25.9515, 0.55", "4.0118, 136.61, 26.8405, 0.55", "3.36729, 143.816, 28.5962, 0.55", "2.54783, 149.431, 30.1717, 0.55" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-3.86449, 148.343, -54.0479, 0.55", "-3.02169, 149.28, -53.652, 0.55", "-2.67658, 149.747, -53.4604, 0.55", "-1.95492, 150.792, -53.084, 0.28", "-1.5294, 151.435, -52.8563, 0.83", "-1.13874, 152.056, -52.6524, 0.28", "-0.625997, 152.92, -52.366, 0.55", "-0.164399, 153.806, -52.0812, 0.28", "0.67818, 155.598, -51.5036, 0.83", "1.24305, 156.9, -51.1002, 0.28", "1.64887, 157.846, -50.777, 0.28", "2.05545, 158.831, -50.426, 0.28", "2.20935, 159.205, -50.2787, 0.55", "2.9492, 160.892, -49.5801, 0.28", "3.24217, 161.624, -49.2669, 0.83", "3.82456, 163.106, -48.6403, 0.28", "4.1913, 164.059, -48.2491, 0.55", "4.69454, 165.377, -47.7358, 0.28", "5.02525, 166.295, -47.4013, 0.28", "5.46083, 167.628, -46.985, 0.55", "5.85316, 168.921, -46.618, 0.28", "6.06, 169.735, -46.4278, 0.55", "6.43948, 171.271, -46.1002, 0.28", "6.62059, 172.043, -45.9542, 0.83", "7.0039, 173.971, -45.5122, 0.28", "7.1643, 174.826, -45.3006, 0.55", "7.36707, 176.036, -44.9919, 0.55", "7.6574, 177.942, -44.499, 0.28", "7.72937, 178.52, -44.3337, 0.55", "7.99157, 181.075, -43.5298, 0.28", "8.05961, 182.22, -43.1505, 0.28", "8.07151, 182.867, -42.9376, 0.55", "8.06663, 183.92, -42.6077, 0.28", "8.03643, 185.482, -42.2584, 0.55", "8.03655, 186.264, -42.1498, 0.28", "8.04756, 186.827, -42.128, 0.55", "8.05938, 187.396, -42.126, 0.28", "8.15435, 189.892, -42.1108, 0.55", "8.25078, 191.509, -42.1158, 0.55", "8.36042, 192.891, -42.0749, 0.28", "8.47714, 193.979, -41.9284, 0.28", "8.54498, 194.553, -41.785, 0.28", "8.703, 195.795, -41.3467, 0.55", "8.78858, 196.408, -41.0615, 0.28", "9.1001, 198.537, -39.9386, 0.83", "9.30909, 199.868, -39.2508, 0.28", "9.46547, 200.858, -38.7509, 0.55", "9.58821, 201.577, -38.4116, 0.28", "9.72743, 202.344, -38.0951, 0.28", "9.92558, 203.367, -37.7113, 0.28", "10.471, 205.79, -36.8731, 0.83", "10.7935, 207.201, -36.4188, 0.28", "10.9385, 207.765, -36.239, 0.28", "11.203, 208.743, -35.9011, 0.28", "11.3073, 209.114, -35.7601, 0.28", "11.8736, 211.043, -34.9857, 0.55", "12.0445, 211.579, -34.7719, 0.55", "12.3253, 212.489, -34.4299, 0.55", "12.6166, 213.718, -33.9697, 0.28", "12.7652, 214.563, -33.6444, 0.55", "12.8411, 215.267, -33.3737, 0.55", "12.8648, 215.839, -33.1756, 0.28", "12.9399, 216.631, -32.9017, 0.55", "13.0502, 217.591, -32.4544, 0.28", "13.2465, 218.6, -31.8787, 0.83", "13.4691, 219.614, -31.2756, 0.55", "13.6907, 220.495, -30.7131, 0.55", "14.0675, 221.878, -29.7702, 0.55", "14.9829, 224.64, -27.7332, 0.28", "15.5529, 226.023, -26.658, 0.55" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-3.86449, 148.343, -54.0479, 0.28", "-4.99978, 149.771, -53.2907, 0.28", "-6.68664, 151.86, -52.2208, 0.55", "-8.2057, 153.686, -51.1769, 0.28", "-9.18829, 154.95, -50.4152, 0.28", "-10.2062, 156.328, -49.5658, 0.28", "-11.509, 158.143, -48.4663, 0.55", "-12.4291, 159.482, -47.5539, 0.28", "-13.2229, 160.631, -46.699, 0.55", "-14.129, 161.904, -45.5873, 0.28", "-14.7424, 162.763, -44.7717, 0.55", "-15.3484, 163.556, -43.998, 0.55", "-17.0855, 165.619, -42.1253, 0.28", "-17.9892, 166.479, -41.3771, 0.55", "-18.8756, 167.21, -40.8053, 0.55", "-19.6951, 167.762, -40.3051, 0.55", "-20.7065, 168.394, -39.6533, 0.55", "-21.9299, 169.171, -38.8216, 0.55", "-24.6593, 170.916, -37.0262, 0.28", "-24.9753, 171.127, -36.8081, 0.55", "-27.8386, 173.181, -34.5311, 0.28", "-29.242, 174.294, -33.3288, 0.55", "-30.3612, 175.287, -32.3281, 0.55", "-30.8733, 175.801, -31.8682, 0.55", "-32.102, 177.171, -30.7266, 0.28", "-34.2711, 179.767, -28.7735, 0.55", "-35.4311, 181.343, -27.8547, 0.28", "-36.258, 182.501, -27.2528, 0.28", "-36.9008, 183.42, -26.7874, 0.28" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "11.8556, -48.712, -110.495, 0.28", "13.8139, -51.9231, -112.306, 0.28", "14.2455, -52.923, -113.029, 0.83", "14.7883, -54.6724, -114.369, 0.28", "14.7886, -55.8319, -115.396, 0.55", "14.442, -57.8507, -117.15, 0.28", "14.0418, -59.5461, -118.565, 0.55", "12.9082, -61.9513, -120.656, 0.28", "12.0321, -63.3981, -121.931, 0.83", "9.43854, -66.9879, -125.01, 0.28", "8.43017, -68.3453, -126.073, 0.55", "7.8611, -69.1627, -126.619, 0.28", "7.35088, -70.0329, -127.165, 0.55", "6.26394, -72.3455, -128.281, 0.28", "6.05062, -72.9054, -128.511, 0.55", "5.74386, -74.4306, -128.931, 0.28", "5.51912, -76.3711, -129.437, 0.55", "5.38144, -79.3742, -130.088, 0.28", "5.45145, -80.8546, -130.54, 0.83", "5.62546, -82.8447, -131.244, 0.28", "5.74954, -84.1214, -131.814, 0.55", "5.89991, -85.5858, -132.576, 0.28", "6.04076, -86.7473, -133.192, 0.55", "6.67151, -91.0859, -135.363, 0.28", "6.85149, -92.3662, -135.941, 0.83", "6.94431, -93.3143, -136.287, 0.28", "7.02309, -94.3919, -136.632, 0.55", "7.06065, -96.913, -137.227, 0.28", "7.05992, -98.0349, -137.394, 0.55", "7.06558, -100.67, -137.527, 0.28", "7.07633, -101.912, -137.685, 0.55", "7.04549, -105.143, -138.275, 0.28", "6.98251, -107.073, -138.787, 0.83", "6.93637, -109.205, -139.462, 0.28", "6.96592, -110.175, -139.751, 0.55", "7.27265, -113.603, -140.738, 0.28", "7.72719, -116.049, -141.264, 0.55", "8.24943, -118.158, -141.562, 0.28", "8.69443, -119.714, -141.836, 0.83", "9.74288, -123.321, -142.499, 0.28", "10.0161, -124.218, -142.64, 0.55", "11.1272, -127.702, -143.02, 0.28", "11.3708, -128.458, -143.123, 0.55", "12.292, -131.699, -143.61, 0.28", "12.5586, -133.076, -143.865, 0.55", "12.737, -134.616, -144.157, 0.28", "12.9141, -135.9, -144.32, 0.55", "13.1241, -137.046, -144.383, 0.28", "13.4447, -138.354, -144.489, 0.55", "13.9563, -140.203, -144.644, 0.28", "14.5565, -142.382, -144.856, 0.55", "15.2841, -145.28, -145.153, 0.28", "15.9242, -147.909, -145.402, 0.55", "16.7156, -151.931, -145.775, 0.28", "16.8827, -153.052, -145.863, 0.55", "17.0511, -155.561, -145.984, 0.28", "16.9627, -157.398, -145.949, 0.28", "16.7887, -158.267, -145.836, 0.55", "16.2848, -160.077, -145.43, 0.28", "15.5807, -162.074, -144.836, 0.55", "14.493, -165.463, -143.946, 0.28", "14.1198, -166.808, -143.65, 0.83", "13.3888, -169.971, -143.004, 0.28", "12.8999, -172.564, -142.521, 0.28", "12.534, -175.057, -142.143, 0.55", "12.0832, -178.843, -141.761, 0.28", "11.8657, -181.718, -141.396, 0.55", "11.8226, -184.303, -141.035, 0.28", "11.9512, -185.841, -140.679, 0.55", "12.3416, -188.141, -139.767, 0.28", "12.6989, -189.717, -139.015, 0.55", "13.5691, -193.084, -136.913, 0.28", "14.1012, -194.612, -135.731, 0.55", "15.7027, -198.076, -132.489, 0.28", "16.9029, -200.166, -130.131, 0.83" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "11.8556, -48.712, -110.495, 0.28", "13.5059, -48.8331, -110.662, 0.28", "14.3516, -48.9829, -110.758, 0.55", "16.0376, -49.3746, -110.953, 0.28", "16.4139, -49.465, -110.988, 0.55", "18.0081, -49.8647, -111.132, 0.28", "19.1118, -50.1627, -111.253, 0.55", "20.6722, -50.6762, -111.454, 0.28", "21.6022, -51.0046, -111.581, 0.55", "23.5729, -51.7553, -111.862, 0.28", "23.8223, -51.8506, -111.89, 0.55", "25.9961, -52.6918, -112.064, 0.28", "26.3555, -52.8232, -112.06, 0.55", "27.8594, -53.3067, -111.932, 0.28", "28.8996, -53.6196, -111.8, 0.83", "30.3425, -54.0295, -111.573, 0.28", "31.1622, -54.2671, -111.454, 0.55", "33.7934, -55.1247, -111.08, 0.28", "34.6884, -55.4633, -110.873, 0.55", "35.7681, -55.8947, -110.563, 0.28", "36.9848, -56.3756, -110.183, 0.55", "39.5179, -57.4996, -109.388, 0.28", "40.898, -58.1522, -108.829, 0.55", "44.4372, -59.894, -107.201, 0.28", "44.868, -60.1167, -106.963, 0.55", "46.1028, -60.7659, -106.188, 0.28", "47.5555, -61.5676, -105.247, 0.83", "50.4589, -63.178, -103.347, 0.28", "51.5071, -63.7914, -102.734, 0.55", "53.3235, -64.9681, -101.857, 0.28", "53.7981, -65.2979, -101.658, 0.83", "56.9218, -67.5592, -100.544, 0.28", "57.8506, -68.2351, -100.319, 0.83", "59.6198, -69.5716, -100.139, 0.28", "60.6977, -70.396, -100.091, 0.55", "62.3435, -71.6197, -100.139, 0.28", "62.8275, -71.9829, -100.209, 0.83", "64.9921, -73.5928, -100.873, 0.28", "65.6259, -74.0839, -101.17, 0.55", "66.4349, -74.7194, -101.653, 0.28", "66.8084, -75.0133, -101.915, 0.55", "69.1474, -76.9546, -103.77, 0.28", "69.6875, -77.4535, -104.375, 0.55", "70.7093, -78.4412, -105.727, 0.28", "71.0186, -78.7457, -106.162, 0.83", "72.5359, -80.2629, -108.433, 0.28", "72.7488, -80.479, -108.764, 0.55", "75.1834, -83.0687, -112.762, 0.28", "76.0701, -84.0374, -114.236, 0.55" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-23.7971, -73.652, -8.62421, 1.38", "-24.9123, -74.7158, -10.1003, 1.38", "-25.8593, -75.5364, -11.6316, 1.38", "-26.2995, -75.9298, -12.4137, 1.11", "-27.2368, -76.8281, -14.0702, 1.38", "-29.0883, -78.571, -17.0629, 1.38", "-30.1596, -79.6362, -18.6928, 1.38", "-32.5198, -82.4387, -22.8841, 1.38", "-33.6246, -84.0627, -25.0546, 1.38", "-34.2784, -85.1629, -26.3555, 1.38", "-35.1248, -86.6817, -27.9263, 1.38", "-36.1608, -88.4141, -29.4538, 1.38", "-38.5775, -92.6239, -32.8048, 1.38", "-39.4623, -94.1156, -33.8148, 1.38", "-40.6826, -95.8477, -35.0149, 1.38", "-42.4996, -98.1857, -36.7091, 1.94", "-43.3961, -99.3052, -37.4918, 1.94", "-44.7666, -100.828, -38.594, 0.28", "-45.2452, -101.325, -38.8724, 0.28", "-46.7056, -102.934, -39.8371, 1.38", "-47.5601, -103.981, -40.4212, 0.28", "-48.5186, -105.228, -41.0375, 1.11", "-50.3781, -107.562, -42.5646, 0.28", "-51.6343, -109.047, -43.6876, 1.38", "-53.1325, -110.639, -45.233, 0.55", "-54.7513, -112.12, -47.0174, 0.83", "-55.81, -112.867, -48.1075, 0.83", "-59.2042, -114.847, -51.3412, 0.28", "-60.0367, -115.285, -52.0652, 0.83", "-61.9965, -116.288, -54.0443, 0.83", "-62.8677, -116.704, -54.9375, 0.83", "-64.2261, -117.243, -56.3678, 0.55", "-65.4983, -117.784, -57.6323, 0.28", "-66.6423, -118.346, -58.6723, 1.66", "-70.468, -120.299, -62.3619, 0.28", "-71.7687, -121.033, -63.6792, 0.83", "-73.322, -121.987, -65.3644, 0.28", "-74.1107, -122.499, -66.2798, 0.83", "-75.7295, -123.56, -68.1562, 0.28", "-77.4878, -124.88, -70.0868, 1.94", "-78.4796, -125.806, -71.0004, 0.28", "-79.2669, -126.759, -71.7385, 0.83", "-80.2171, -128.1, -72.5786, 0.28", "-80.849, -129.049, -73.0959, 0.28", "-81.8275, -130.695, -73.7456, 1.38", "-82.8729, -132.523, -74.3236, 0.28", "-83.554, -133.613, -74.6257, 0.28", "-84.8499, -135.431, -75.105, 0.55", "-85.6045, -136.298, -75.3289, 0.28", "-87.0622, -137.797, -75.9875, 0.83", "-88.0161, -138.77, -76.5316, 0.28", "-88.6112, -139.4, -76.9086, 0.55", "-89.2239, -140.042, -77.336, 0.28", "-90.592, -141.611, -78.3921, 1.11", "-92.9396, -144.908, -80.4719, 0.28", "-93.5472, -146.1, -81.2842, 0.28", "-94.0555, -147.413, -82.1144, 0.28", "-94.2367, -148.036, -82.4897, 0.83", "-94.5143, -149.191, -83.2757, 0.28", "-95.0895, -151.854, -85.3009, 0.83", "-96.1243, -156.25, -89.0297, 0.55", "-96.5365, -157.881, -90.6151, 0.55", "-97.0976, -160.03, -92.8518, 0.28", "-98.3004, -163.817, -97.0615, 0.83", "-98.8453, -165.247, -98.9072, 0.83", "-99.6396, -167.086, -101.497, 0.83", "-100.369, -168.64, -103.648, 0.28", "-100.819, -169.528, -104.822, 0.83", "-101.482, -170.84, -106.229, 1.11", "-103.349, -175.074, -109.198, 0.28", "-104.033, -176.996, -110.224, 0.55", "-104.612, -179.072, -111.028, 0.55", "-105.112, -181.636, -111.742, 0.55", "-105.503, -184.814, -112.582, 0.55", "-105.59, -186.093, -112.873, 0.55", "-105.698, -188.869, -113.547, 0.28", "-105.695, -190.241, -114.122, 0.83", "-105.656, -191.95, -115.004, 0.28", "-105.6, -194.468, -116.418, 0.55", "-105.587, -195.896, -117.24, 0.55", "-105.513, -198.849, -118.931, 0.55", "-105.464, -201.438, -120.314, 0.55", "-105.441, -203.185, -121.235, 1.11", "-105.466, -204.556, -121.913, 0.28", "-105.566, -206.878, -122.933, 0.83", "-105.721, -208.595, -123.653, 0.28", "-105.941, -209.956, -124.211, 0.28", "-106.396, -212.063, -125.237, 0.55", "-106.818, -213.806, -126.204, 0.28", "-107.33, -215.773, -127.336, 0.28", "-107.589, -216.771, -127.928, 0.83", "-108.03, -218.848, -129.132, 0.28", "-108.405, -220.874, -130.375, 0.83", "-108.736, -223.327, -131.929, 0.83", "-108.841, -224.875, -132.894, 0.83", "-108.83, -227.217, -134.194, 0.28", "-108.673, -229.364, -135.238, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-23.7971, -73.652, -8.62421, 0.55", "-25.3259, -74.0309, -8.30158, 0.55", "-27.3207, -74.5532, -7.94163, 0.28", "-29.7275, -75.083, -7.59046, 0.55", "-31.4294, -75.3554, -7.4392, 0.28", "-38.8197, -76.0546, -6.83985, 0.55", "-42.3077, -76.2659, -6.56942, 0.55", "-45.1856, -76.286, -6.38516, 0.55", "-49.0582, -76.1571, -6.23483, 0.55", "-52.3881, -76.106, -6.21855, 0.55", "-57.9315, -76.1275, -6.33835, 0.28", "-60.6662, -76.163, -6.52796, 0.55", "-65.0274, -76.32, -6.71766, 0.55", "-69.8297, -76.7044, -6.79268, 0.83", "-75.75, -77.5627, -6.50085, 0.55", "-79.0173, -78.213, -6.02389, 0.28", "-80.1505, -78.4613, -5.79182, 0.55", "-83.5994, -79.1386, -4.6405, 0.28", "-85.6118, -79.4673, -3.7037, 0.55", "-90.5291, -79.9557, -1.15491, 0.83", "-94.1467, -80.076, 0.730854, 0.55", "-96.3079, -80.1261, 1.75081, 0.55", "-101.102, -80.1412, 3.98272, 0.55", "-105.173, -80.05, 5.6841, 0.28", "-108.654, -79.802, 6.92872, 1.38", "-110.414, -79.6308, 7.43179, 0.28", "-112.92, -79.3312, 8.02711, 0.83", "-120.174, -78.3323, 9.67553, 0.28", "-124.764, -77.5203, 10.731, 0.55", "-127.351, -76.9817, 11.3723, 0.28", "-129.305, -76.6275, 11.8688, 0.55", "-130.79, -76.383, 12.202, 0.28", "-133.882, -76.0153, 12.9005, 0.83", "-137.702, -75.7503, 13.5741, 0.28", "-142.144, -75.769, 14.808, 0.55", "-146.094, -76.0327, 16.1468, 0.55", "-147.797, -76.2831, 16.7823, 0.55", "-152.291, -77.2947, 18.8205, 0.28", "-154.542, -77.9457, 20.0066, 0.83", "-158.707, -79.2219, 22.8115, 0.28", "-159.381, -79.42, 23.3784, 0.28", "-162.38, -80.0782, 26.0325, 0.55", "-166.225, -80.9499, 29.5059, 0.28", "-168.951, -81.5137, 31.9451, 0.55", "-173.586, -82.4301, 36.1836, 0.28", "-176.854, -82.8812, 39.0289, 0.55", "-180.947, -83.3082, 42.7427, 0.55" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "0.266775, -29.9262, -8.69482, 0.55", "1.47115, -32.8759, -10.1307, 0.55", "2.45862, -35.2944, -11.308, 0.83", "3.87431, -38.7617, -12.9959, 0.83", "4.95617, -41.4114, -14.2857, 1.11" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "0.266775, -29.9262, -8.69482, 0.55", "2.06335, -28.7279, -10.7792, 0.55", "3.89605, -27.6735, -13.2998, 0.55", "4.4085, -27.3739, -14.0838, 0.55", "5.60063, -26.7512, -16.1863, 0.55", "10.9805, -24.0662, -26.7992, 0.55", "12.2829, -23.4162, -29.3683, 0.55", "16.9319, -21.2072, -39.249, 0.55", "18.1279, -20.6599, -41.9463, 0.55", "22.3243, -18.8838, -51.8921, 0.55", "24.0887, -18.1904, -56.5252, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-9.86835, -38.4954, -13.2685, 0.83", "-12.4209, -39.3676, -13.2793, 0.83", "-14.838, -40.1423, -13.2981, 0.83", "-16.558, -40.9183, -13.2378, 0.55", "-19.2234, -42.151, -13.1301, 0.55", "-22.4211, -43.5307, -12.9611, 0.55", "-24.8867, -44.5385, -12.9038, 0.55", "-27.1533, -45.4061, -12.9172, 0.55", "-34.2422, -47.7316, -13.2615, 0.55", "-39.5571, -49.2916, -13.6704, 0.55", "-41.9161, -49.9336, -13.9246, 0.55", "-44.6738, -50.4926, -14.2989, 0.55", "-46.5944, -50.752, -14.6206, 0.83", "-52.1375, -50.9545, -15.7511, 0.55", "-54.4513, -50.7279, -16.2561, 0.55", "-55.4791, -50.5798, -16.4535, 0.55", "-57.7204, -50.2524, -16.8438, 0.55", "-61.0678, -49.7031, -17.2316, 0.55", "-65.4794, -48.8583, -17.6068, 0.55", "-68.157, -48.2426, -17.6161, 0.55", "-69.7649, -47.8772, -17.6122, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-9.86835, -38.4954, -13.2685, 0.55", "-10.1839, -38.3405, -13.2589, 0.55", "-11.4794, -37.8037, -13.1595, 0.55", "-13.5713, -37.0668, -13.0404, 0.55", "-14.7972, -36.6544, -12.76, 0.55", "-16.4019, -36.1482, -12.2609, 0.83", "-18.8153, -35.4665, -11.4545, 0.55", "-20.4017, -35.0017, -10.8834, 0.55", "-21.5603, -34.6515, -10.4145, 0.55", "-26.2618, -33.3681, -8.26392, 0.55", "-29.3471, -32.5911, -6.8053, 0.55", "-31.6762, -32.1024, -5.69501, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "2.54783, 149.431, 30.1717, 0.28", "1.57098, 149.833, 30.6483, 0.28", "0.26944, 150.482, 31.2868, 0.55", "-1.24515, 151.268, 32.0306, 0.28", "-2.2264, 151.836, 32.5304, 0.83", "-3.14223, 152.384, 33.0271, 0.28", "-3.96384, 152.905, 33.4707, 0.83", "-5.29756, 153.856, 34.1969, 0.55", "-6.52553, 154.814, 34.7761, 0.55", "-7.92833, 155.839, 35.3043, 0.28", "-9.02022, 156.604, 35.4831, 0.55", "-9.89869, 157.193, 35.5307, 0.28", "-10.7412, 157.836, 35.5298, 0.83", "-12.519, 159.239, 35.5094, 0.28", "-13.8563, 160.36, 35.4976, 0.83", "-16.9015, 163.002, 35.5183, 0.28", "-19.5526, 165.374, 35.5211, 0.55", "-23.0494, 168.572, 35.6441, 0.55", "-24.6057, 170.021, 35.746, 0.83", "-25.9017, 171.204, 35.9039, 0.28", "-27.0065, 172.209, 36.0773, 0.83", "-29.0208, 173.943, 36.4899, 0.28", "-31.2199, 175.616, 36.8364, 0.83", "-33.561, 177.06, 37.133, 0.28", "-35.102, 177.961, 37.2988, 0.55", "-36.7053, 178.805, 37.4657, 0.28", "-37.0699, 178.979, 37.5076, 0.83", "-39.1904, 179.871, 37.8668, 0.28", "-40.7165, 180.386, 38.0315, 0.83" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "2.54783, 149.431, 30.1717, 0.55", "2.66498, 152.274, 31.0388, 0.55", "2.74119, 153.993, 31.6253, 0.55", "2.82236, 156.55, 32.4469, 0.55", "2.92932, 159.919, 33.5296, 0.55", "2.98451, 161.657, 34.0882, 0.55", "3.13012, 166.244, 35.562, 0.55", "3.23838, 169.423, 36.4555, 0.55", "3.48988, 173.558, 37.5756, 0.55" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-108.673, -229.364, -135.238, 0.55", "-107.762, -231.701, -134.263, 0.55", "-106.699, -234.402, -133.087, 0.55", "-105.724, -236.876, -131.98, 0.28", "-105.536, -237.316, -131.785, 0.55", "-104.697, -239.219, -130.949, 0.28", "-104.395, -239.881, -130.541, 0.55", "-103.69, -241.388, -129.108, 0.28", "-103.457, -241.853, -128.495, 0.55", "-102.629, -243.394, -126.091, 0.55", "-102.429, -243.75, -125.43, 0.83", "-100.739, -246.507, -119.843, 0.28", "-99.7566, -247.994, -116.56, 0.55", "-99.6867, -248.092, -116.329, 0.28", "-99.34, -248.584, -115.151, 0.83", "-98.4218, -249.963, -111.698, 0.28", "-97.9185, -250.716, -110.04, 0.55", "-97.6826, -251.068, -109.445, 0.28", "-97.1523, -251.877, -108.243, 0.28", "-96.2954, -253.237, -106.159, 0.28", "-95.4497, -254.729, -103.785, 0.28", "-95.1626, -255.362, -102.862, 0.83" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-108.673, -229.364, -135.238, 0.28", "-109.201, -230.781, -135.711, 0.28", "-109.783, -232.434, -136.208, 0.28", "-110.064, -233.262, -136.459, 0.28", "-110.292, -233.915, -136.654, 0.55", "-111.185, -236.335, -137.316, 0.28", "-111.32, -236.686, -137.39, 0.28", "-111.765, -237.73, -137.511, 0.55", "-112.085, -238.453, -137.521, 0.28", "-112.28, -238.951, -137.525, 0.55", "-112.721, -240.089, -137.513, 0.28", "-113.081, -241.064, -137.46, 0.55", "-113.809, -243.269, -137.415, 0.28", "-113.932, -243.739, -137.44, 0.55", "-114.447, -246.312, -137.643, 0.28", "-114.488, -246.687, -137.682, 0.55", "-114.522, -247.708, -137.816, 0.28", "-114.495, -248.317, -137.896, 0.55", "-114.251, -250.216, -138.091, 0.28", "-114.184, -250.595, -138.105, 0.55", "-113.726, -252.599, -137.993, 0.28", "-113.603, -253.061, -137.953, 0.55", "-113.248, -254.258, -137.807, 0.28", "-113.193, -254.419, -137.78, 0.55", "-112.965, -255.058, -137.63, 0.28", "-112.854, -255.368, -137.565, 0.55", "-112.332, -256.834, -137.311, 0.28", "-112.282, -256.989, -137.281, 0.55", "-112.008, -257.954, -137.092, 0.28", "-111.966, -258.114, -137.056, 0.55", "-111.762, -258.976, -136.839, 0.28", "-111.685, -259.299, -136.79, 0.55", "-111.318, -260.922, -136.684, 0.28", "-111.176, -261.587, -136.682, 0.55", "-111.006, -262.426, -136.723, 0.28", "-110.909, -262.952, -136.754, 0.55", "-110.533, -265.25, -136.944, 0.28", "-110.388, -266.379, -137.026, 0.28", "-110.356, -266.755, -137.052, 0.28", "-110.326, -267.284, -137.022, 0.55", "-110.26, -268.707, -136.839, 0.28", "-110.237, -269.079, -136.771, 0.55", "-110.108, -270.87, -136.352, 0.28", "-110.019, -271.912, -136.091, 0.55", "-109.657, -275.926, -135.064, 0.28", "-109.644, -276.093, -135.022, 0.55", "-109.565, -277.106, -134.754, 0.28", "-109.545, -277.79, -134.57, 0.55", "-109.62, -279.505, -134.107, 0.28", "-109.698, -280.444, -133.845, 0.28", "-109.87, -281.269, -133.617, 0.55", "-110.172, -282.414, -133.289, 0.28", "-110.825, -284.203, -132.744, 0.28", "-111.089, -284.792, -132.568, 0.55" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "4.95617, -41.4114, -14.2857, 0.55", "7.73361, -42.8764, -15.6498, 0.55", "8.79614, -43.4249, -16.1784, 0.55", "9.67435, -43.8595, -16.6197, 0.83", "11.5289, -44.6958, -17.5319, 0.55", "14.14, -45.7729, -18.7743, 1.11", "16.3981, -46.6193, -19.7929, 0.55", "17.8116, -47.0578, -20.3464, 0.55", "19.8945, -47.4852, -21.1842, 0.83", "20.8705, -47.5833, -21.6092, 0.55", "21.6506, -47.5775, -21.9589, 0.55", "22.9134, -47.4137, -22.5163, 0.55", "24.9058, -47.0549, -23.369, 0.28", "26.9729, -46.5844, -24.1906, 0.83", "28.8885, -46.0522, -24.9372, 0.28", "30.0786, -45.7063, -25.3971, 0.55", "30.747, -45.4787, -25.6452, 0.28", "31.7214, -45.0665, -25.9751, 0.55", "33.2375, -44.3049, -26.3648, 0.55", "33.8673, -43.9138, -26.4803, 0.28", "34.5755, -43.4776, -26.5717, 0.55", "35.8549, -42.6414, -26.7652, 0.55", "37.024, -41.8913, -26.9466, 1.11", "39.2142, -40.6451, -27.0573, 0.55", "40.4083, -40.0965, -27.0255, 0.55", "41.6552, -39.6262, -26.944, 0.55", "43.28, -39.0917, -26.7893, 0.55", "45.2858, -38.4864, -26.5425, 1.11", "49.0182, -37.4171, -26.0034, 0.83", "51.7812, -36.6547, -25.551, 1.11", "53.5471, -36.1643, -25.2565, 0.28", "53.7486, -36.1078, -25.2246, 0.55", "55.0904, -35.7877, -25.0416, 0.28", "55.9046, -35.5938, -25.018, 0.55", "56.7609, -35.3602, -25.1197, 0.28", "57.5705, -35.1139, -25.2416, 0.55", "59.5425, -34.5004, -25.5545, 0.28", "60.5383, -34.1578, -25.786, 0.83", "62.8153, -33.2787, -26.4631, 0.28", "64.8255, -32.4061, -27.1458, 1.11", "66.2772, -31.6862, -27.5919, 0.28", "67.0104, -31.2776, -27.7739, 0.83", "69.6931, -29.6331, -28.2439, 0.55", "71.1671, -28.6401, -28.3499, 0.55", "72.0094, -28.0089, -28.2994, 0.55", "74.1937, -26.3265, -27.9321, 0.28", "75.3228, -25.4306, -27.6435, 0.55", "76.1576, -24.7431, -27.3663, 0.55", "77.0868, -23.9815, -26.979, 0.55", "78.594, -22.697, -26.4049, 0.55", "79.8999, -21.5304, -26.0497, 0.55", "80.7427, -20.7935, -25.9502, 0.55", "81.5416, -20.1345, -25.8861, 0.55", "82.2261, -19.5981, -25.8296, 0.28", "82.9221, -19.0907, -25.7746, 0.55", "84.3442, -18.1478, -25.6771, 0.28", "85.7741, -17.2587, -25.6086, 0.83", "87.1543, -16.5019, -25.5394, 0.28", "87.9324, -16.1283, -25.5011, 0.28", "88.6156, -15.8046, -25.468, 0.28", "88.985, -15.6275, -25.4527, 0.28", "89.7509, -15.2832, -25.4298, 0.28", "90.5869, -14.8898, -25.4051, 0.28", "91.3614, -14.524, -25.389, 0.55", "92.1741, -14.1796, -25.3098, 0.55", "93.7305, -13.6147, -25.0819, 0.55", "94.7004, -13.2864, -24.9093, 0.55", "95.7444, -12.9331, -24.6685, 0.28", "96.9089, -12.5316, -24.3524, 0.28", "98.4821, -12.0478, -23.9031, 0.28", "99.3593, -11.8443, -23.6632, 0.55", "100.351, -11.6275, -23.4142, 0.28", "101.18, -11.4471, -23.2421, 0.28", "101.789, -11.3437, -23.1486, 0.28", "103.442, -11.0604, -22.9818, 0.55", "105.216, -10.8025, -22.9001, 0.28", "106.67, -10.6216, -22.8564, 0.83", "107.882, -10.4802, -22.8384, 0.28", "109.046, -10.3489, -22.8408, 0.83", "111.118, -10.067, -22.8136, 0.28", "112.722, -9.78612, -22.7742, 0.83", "114.599, -9.39952, -22.7133, 0.55", "115.423, -9.22352, -22.6299, 0.55", "116.953, -8.87168, -22.3863, 0.83", "119.033, -8.4067, -21.897, 0.28", "120.217, -8.19035, -21.5346, 0.28", "121.195, -8.0057, -21.183, 0.55", "123.45, -7.74789, -20.0507, 0.55", "124.346, -7.70848, -19.5285, 0.83", "125.489, -7.63713, -18.7222, 0.28", "126.397, -7.55669, -17.9833, 0.28", "127.392, -7.40932, -17.1479, 0.83", "130.419, -6.69477, -14.6025, 0.28", "131.098, -6.4769, -14.08, 0.55", "133.952, -5.32678, -11.9135, 0.28", "135.114, -4.74399, -11.0965, 0.55", "136.372, -4.01514, -10.2686, 0.28", "137.16, -3.48373, -9.83022, 0.55", "138.204, -2.56918, -9.47339, 0.28", "138.401, -2.34732, -9.43608, 0.55", "139.253, -1.10273, -9.52942, 0.28", "139.378, -0.840552, -9.56101, 0.55", "139.7, 0.133034, -9.65829, 0.28", "139.877, 0.707324, -9.64184, 0.55", "140.64, 3.43399, -9.35833, 0.28", "140.814, 4.06519, -9.26883, 0.55", "141.361, 6.109, -8.92242, 0.28", "141.636, 7.09896, -8.73819, 0.55", "142.625, 10.5536, -8.0328, 0.28", "142.708, 10.8349, -7.97355, 0.55", "143.391, 12.8607, -7.41802, 0.28", "143.568, 13.4034, -7.26243, 0.55", "143.822, 14.2203, -7.03018, 0.28", "144.098, 15.257, -6.69143, 0.55", "144.522, 17.1985, -6.13065, 0.28", "145.056, 19.6879, -5.32369, 0.55", "145.332, 21.0221, -4.80369, 0.28", "145.549, 22.0897, -4.34142, 0.55", "145.973, 24.2185, -3.27735, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "4.95617, -41.4114, -14.2857, 0.55", "3.5841, -42.277, -14.9693, 0.55", "2.57408, -42.9111, -15.478, 0.55", "0.124171, -44.3993, -16.6178, 0.55", "-5.12186, -47.5705, -18.8672, 0.55", "-6.82265, -48.5901, -19.7891, 0.55", "-7.63577, -49.0712, -20.2613, 0.55", "-9.98851, -50.4498, -21.7469, 0.55", "-11.2209, -51.1343, -22.5249, 0.55", "-12.7258, -51.917, -23.3672, 0.83", "-18.0571, -54.6426, -25.9118, 0.28", "-18.9239, -55.0487, -26.3416, 0.28", "-20.2268, -55.5635, -26.9701, 0.55", "-22.3336, -56.3189, -27.8879, 0.28", "-25.0256, -57.2855, -29.0776, 1.11", "-29.6317, -58.9948, -30.889, 0.55", "-31.6161, -59.7525, -31.4722, 0.55", "-32.751, -60.1814, -31.9455, 0.55", "-35.0972, -61.0335, -33.1056, 0.55", "-38.0958, -62.1276, -34.8521, 0.83", "-39.6921, -62.7246, -35.8265, 0.55", "-41.1082, -63.3148, -36.5862, 0.55", "-46.5027, -65.8053, -39.1672, 0.28", "-47.7704, -66.4026, -39.6866, 0.55", "-50.5209, -67.5772, -40.6116, 0.28", "-52.4036, -68.375, -41.0221, 0.83", "-54.4686, -69.3195, -41.2659, 0.28", "-56.2569, -70.3122, -41.1756, 0.28", "-57.933, -71.3955, -40.7074, 0.28", "-58.6687, -71.8858, -40.4639, 0.55", "-59.7037, -72.57, -40.1076, 0.55", "-61.6527, -73.8074, -39.5327, 0.28", "-63.4184, -74.8667, -39.089, 0.83", "-66.4482, -76.6407, -38.3903, 0.28", "-67.6448, -77.2776, -38.2038, 0.55", "-70.2702, -78.5554, -37.7753, 0.28", "-71.9443, -79.3051, -37.494, 0.83", "-73.8171, -80.0426, -37.1768, 0.28", "-74.3113, -80.2196, -37.0726, 0.55", "-78.1116, -81.4696, -36.0669, 0.28", "-81.7799, -82.6548, -35.089, 0.83", "-83.4442, -83.1703, -34.6169, 0.28", "-84.313, -83.4311, -34.4764, 0.55", "-86.2856, -83.9827, -34.3204, 0.28", "-87.7416, -84.3555, -34.2746, 0.55", "-91.4027, -85.21, -34.2916, 0.28", "-92.436, -85.394, -34.4268, 0.55", "-97.7787, -86.105, -35.2872, 0.28", "-98.8527, -86.2152, -35.4663, 0.55", "-101.362, -86.3797, -35.8835, 0.28", "-103.951, -86.4419, -36.2397, 0.55", "-107.611, -86.2713, -36.6226, 0.28", "-110.212, -86.0211, -36.8665, 0.28", "-112.373, -85.6447, -36.9716, 0.83", "-113.774, -85.311, -37.0684, 0.28", "-114.486, -85.0495, -37.1345, 0.55", "-116.129, -84.2026, -37.2234, 0.28", "-116.34, -84.0684, -37.206, 0.55", "-117.45, -83.2722, -37.1015, 0.28", "-118.704, -82.3684, -36.9436, 0.55", "-120.743, -80.9773, -36.5074, 0.28", "-122.326, -79.8727, -36.0179, 0.55", "-124.856, -78.0822, -35.056, 0.28", "-125.14, -77.8807, -34.9395, 0.55", "-126.397, -76.9963, -34.3801, 0.28", "-128.859, -75.2354, -33.2238, 0.55", "-131.407, -73.3315, -31.9546, 0.28", "-131.599, -73.1831, -31.8621, 0.55", "-132.4, -72.5519, -31.4984, 0.28", "-133.107, -72.0305, -31.2059, 0.83", "-135.177, -70.6357, -30.4603, 0.28", "-135.863, -70.2543, -30.2731, 0.55", "-137.322, -69.6275, -29.9186, 0.28", "-137.543, -69.5314, -29.8642, 0.55", "-139.396, -68.7477, -29.4019, 0.28", "-140.017, -68.4695, -29.1708, 0.55", "-141.569, -67.791, -28.4467, 0.28", "-143.051, -67.1111, -27.6805, 0.55", "-145.187, -66.0936, -26.4586, 0.28", "-145.83, -65.7873, -26.0734, 0.55", "-149.182, -64.1432, -23.9519, 0.28", "-149.914, -63.8202, -23.483, 0.55", "-152.121, -62.992, -22.0615, 0.28", "-153.054, -62.7533, -21.4921, 0.83", "-154.437, -62.5041, -20.6743, 0.28", "-154.763, -62.4611, -20.5051, 0.55", "-156.465, -62.4521, -19.9041, 0.28", "-157.54, -62.5127, -19.5252, 0.55", "-159.688, -62.9565, -18.7936, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "24.0887, -18.1904, -56.5252, 0.28", "22.8432, -13.6783, -56.6221, 0.28", "22.3128, -11.6168, -56.6238, 0.83", "21.7626, -9.183, -56.596, 0.28", "21.5935, -7.88502, -56.6954, 0.55", "21.41, -5.19594, -57.0185, 0.55", "21.3861, -3.90206, -57.1967, 0.55", "21.5814, -1.39322, -57.5507, 0.28", "21.8958, 0.407411, -57.855, 0.83", "23.2532, 5.08599, -58.7314, 0.28", "23.6316, 6.08305, -58.9139, 0.28", "24.0923, 7.03467, -59.0637, 0.55", "25.0817, 8.77986, -59.2126, 0.28", "25.6858, 9.69117, -59.1891, 0.55", "26.5752, 10.934, -58.9809, 0.28", "27.5165, 12.2247, -58.5283, 0.55", "29.0379, 14.2575, -57.7951, 0.28", "29.4661, 14.8069, -57.6005, 0.55", "30.4106, 15.9875, -57.1874, 0.28", "30.7563, 16.4244, -57.0395, 0.55", "31.9468, 18.0082, -56.4656, 0.28", "32.7878, 19.1318, -56.0287, 0.55", "34.94, 22.1123, -54.8733, 0.28", "36.2563, 24.0252, -54.1524, 0.83", "37.7477, 26.2014, -53.3182, 0.28", "39.3092, 28.4706, -52.431, 0.55", "39.7193, 29.0666, -52.1957, 0.55", "41.1044, 31.1034, -51.3959, 0.28", "41.9591, 32.4202, -50.8972, 0.55", "42.3262, 33.0083, -50.6708, 0.55", "43.5188, 34.9897, -49.9206, 0.28", "44.3892, 36.5334, -49.3828, 0.55", "45.2183, 38.1016, -48.8197, 0.55", "45.8688, 39.3632, -48.3384, 0.28", "46.7572, 41.1329, -47.6729, 0.55", "47.6004, 42.7909, -47.0538, 0.28", "48.0884, 43.762, -46.6983, 0.55", "48.5436, 44.6604, -46.3885, 0.55", "49.6705, 46.8367, -45.7018, 0.55", "50.6288, 48.7405, -45.1244, 0.28", "51.4533, 50.2966, -44.6406, 0.28", "52.0542, 51.397, -44.2432, 0.28", "52.4971, 52.1373, -43.9297, 0.28", "52.7695, 52.6012, -43.698, 0.55", "53.5874, 54.0223, -42.8747, 0.28", "54.4049, 55.6511, -41.8573, 0.55", "54.5873, 56.06, -41.5854, 0.55", "55.2125, 57.5234, -40.5949, 0.28", "55.6967, 58.7835, -39.7775, 0.55", "56.0215, 59.669, -39.2358, 0.55", "56.6637, 61.7346, -37.9678, 0.28", "56.8286, 62.392, -37.5567, 0.55", "57.0908, 63.5686, -36.7573, 0.28", "57.2058, 64.1553, -36.3504, 0.55", "57.5571, 66.0361, -35.0426, 0.28", "57.9964, 68.1107, -33.556, 0.28", "58.1847, 68.7486, -33.1298, 0.55", "58.7821, 70.6101, -31.761, 0.28", "59.1842, 71.7602, -30.87, 0.28", "59.8215, 73.5666, -29.5308, 0.55", "60.2821, 74.9934, -28.4067, 0.28", "60.9786, 77.0609, -26.732, 0.55", "62.1293, 80.3682, -23.9702, 0.55", "62.5032, 81.5485, -22.8828, 0.55", "62.9043, 82.93, -21.543, 0.55", "63.4778, 85.6994, -18.5354, 0.55", "63.6365, 86.7806, -17.3167, 0.55", "63.8102, 88.2372, -15.6897, 0.55", "64.2178, 90.4172, -13.4843, 0.55", "64.6633, 92.1836, -11.6606, 0.55", "65.5785, 94.925, -8.84811, 0.55", "66.2961, 96.738, -7.21237, 0.55", "66.7935, 97.9307, -6.19092, 0.55", "67.7081, 99.8501, -4.65904, 0.55", "68.1758, 100.636, -4.12444, 0.55", "68.6203, 101.334, -3.71096, 0.55", "69.403, 102.519, -3.22436, 0.83", "70.0111, 103.615, -2.8356, 0.55", "70.1565, 103.933, -2.74226, 0.55", "70.5213, 105.01, -2.56852, 0.55", "70.862, 106.245, -2.46355, 0.55", "71.2821, 107.638, -2.4363, 0.55", "71.8741, 109.395, -2.44088, 0.55", "72.0661, 109.929, -2.44989, 0.55", "73.3127, 113.314, -2.41685, 0.28", "73.7838, 114.548, -2.37288, 0.55", "74.8425, 117.161, -2.20612, 0.55", "75.6701, 119.063, -2.01405, 0.55", "75.8989, 119.523, -1.93806, 0.55", "76.5854, 121.029, -1.4198, 0.55", "77.0123, 122.272, -0.789796, 0.55", "77.0811, 122.577, -0.619605, 0.55", "77.2048, 123.627, -0.146295, 0.55", "77.3328, 125.095, 0.325443, 0.55", "77.6755, 129.726, 1.25472, 0.55", "77.8341, 131.791, 1.45213, 0.55", "77.9259, 133.07, 1.49165, 0.55", "78.2532, 137.005, 1.40256, 0.55", "78.3586, 138.289, 1.34431, 0.55", "78.5112, 139.896, 1.14739, 0.55", "78.7077, 140.962, 0.885381, 0.55", "78.9621, 142.056, 0.66837, 0.55", "79.3382, 143.826, 0.473801, 0.55", "79.6139, 145.621, 0.76198, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "24.0887, -18.1904, -56.5252, 0.55", "23.7738, -17.7719, -58.4341, 0.55", "23.6583, -17.6123, -59.1357, 0.28", "23.6471, -17.2668, -60.963, 0.83", "24.0767, -16.9955, -62.5937, 0.28", "24.7411, -16.7911, -64.2014, 0.55", "25.8419, -16.4759, -66.5395, 0.28", "26.2734, -16.3614, -67.3631, 0.83", "29.7581, -15.3689, -73.4674, 0.83", "35.961, -13.4828, -83.5613, 0.83", "42.0009, -11.6373, -92.527, 0.55", "43.4474, -11.1735, -94.5257, 0.28", "43.8945, -11.0185, -95.0801, 0.55", "45.6512, -10.3351, -97.0198, 0.28", "46.238, -10.0609, -97.5292, 0.55", "48.65, -8.46821, -98.8846, 0.28", "49.8734, -7.46994, -99.2761, 0.28", "51.3359, -6.39857, -99.8218, 0.83", "53.1148, -5.26423, -100.595, 0.28", "53.8632, -4.8452, -100.954, 0.55", "56.149, -3.65521, -102.165, 0.28", "57.3713, -3.04582, -102.95, 0.55", "59.7774, -1.94913, -104.812, 0.28", "60.7263, -1.49531, -105.745, 0.55", "61.6054, -1.01369, -106.845, 0.28", "61.7722, -0.892672, -107.171, 0.55", "62.3086, -0.432446, -108.741, 0.55", "62.7366, 0.0164817, -110.904, 0.55", "62.9816, 0.269247, -113.067, 0.28", "63.1161, 0.328578, -114.793, 0.83", "63.3882, 0.169287, -119.59, 0.28", "63.4655, 0.0392821, -120.878, 0.55", "63.5892, -0.251843, -122.906, 0.55", "63.7417, -0.65858, -125.525, 0.83", "63.8855, -1.02784, -127.844, 0.28", "63.9072, -1.05871, -128.103, 0.28", "64.3369, -1.52978, -133.753, 0.28", "64.494, -1.60456, -135.976, 0.83", "64.724, -1.53647, -138.986, 0.28", "64.8062, -1.3476, -141.286, 0.55", "64.8589, -1.01593, -143.648, 0.55", "64.8757, -0.780243, -144.919, 0.55", "64.8705, -0.653538, -145.484, 0.83", "64.8043, -0.149639, -147.943, 0.28", "64.8058, 0.0560698, -149.017, 0.55", "64.9067, 0.647603, -152.374, 0.28", "64.9763, 0.889365, -153.824, 0.55", "65.2127, 1.42231, -156.879, 0.28", "65.2413, 1.51738, -157.389, 0.55", "65.3011, 2.46216, -162.038, 0.28", "65.3189, 2.5765, -162.603, 0.83", "65.3444, 3.0951, -164.857, 0.28", "65.4267, 3.53404, -166.792, 0.55", "66.0499, 5.00863, -171.97, 0.28", "67.0009, 5.08081, -173.903, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-69.7649, -47.8772, -17.6122, 0.55", "-73.9089, -47.5778, -18.5856, 0.55", "-75.768, -47.4435, -19.0223, 0.55", "-77.7729, -47.2987, -19.4933, 0.55", "-80.5155, -47.1006, -20.1375, 1.11", "-82.0051, -46.9929, -20.4874, 0.55", "-84.7536, -46.7944, -21.133, 0.83" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-69.7649, -47.8772, -17.6122, 0.55", "-69.7939, -46.7453, -18.8684, 0.55", "-69.8628, -45.6143, -20.1631, 0.28", "-69.8995, -44.9342, -21.0038, 0.55", "-70.0123, -43.5552, -22.753, 0.28", "-70.1652, -42.5493, -23.993, 0.55", "-70.6622, -39.6809, -27.3988, 0.28", "-70.7704, -39.1679, -28.0231, 0.55", "-71.1782, -37.4671, -30.1047, 0.28", "-71.3309, -36.8973, -30.8056, 0.55", "-72.2457, -33.7035, -34.6277, 0.28", "-72.4499, -32.9827, -35.4792, 0.55", "-73.0055, -31.3083, -37.3056, 0.28", "-73.2909, -30.4358, -38.2418, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-31.6762, -32.1024, -5.69501, 0.55", "-34.9412, -32.2031, -6.41581, 0.55", "-36.2984, -32.1919, -6.41583, 0.83", "-38.3052, -32.0849, -6.28072, 0.55", "-39.8165, -31.9209, -6.10082, 0.55", "-42.3117, -31.5582, -5.8177, 0.55", "-44.0261, -31.2252, -5.56354, 0.83", "-48.5658, -30.0437, -4.61862, 0.55", "-49.6659, -29.7176, -4.33235, 0.83", "-51.8551, -29.0166, -3.76848, 0.28", "-54.1657, -28.3173, -3.30379, 0.55", "-56.5233, -27.7093, -3.04617, 0.28", "-57.3355, -27.599, -3.01704, 0.55", "-60.4726, -27.3679, -3.20556, 0.55", "-63.0358, -27.3537, -3.40786, 0.55", "-65.9383, -27.5968, -3.76971, 0.55", "-67.4438, -27.8564, -4.00754, 0.55", "-70.757, -28.7037, -4.76869, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-31.6762, -32.1024, -5.69501, 0.55", "-31.945, -31.0678, -5.73503, 0.55", "-32.4181, -29.539, -5.72404, 0.28", "-32.7468, -28.4888, -5.70528, 0.55", "-33.4808, -26.1372, -5.69018, 0.55", "-34.6339, -22.6392, -5.74919, 0.55", "-35.3434, -20.6487, -5.79419, 0.55", "-36.1078, -18.499, -5.82596, 0.28", "-36.8882, -16.1442, -5.87313, 0.28", "-37.317, -14.6103, -5.97795, 0.28", "-37.6121, -13.3211, -6.20331, 0.55", "-37.9833, -11.2361, -6.83239, 0.55", "-38.2597, -9.19981, -7.50804, 0.55", "-38.4211, -7.5136, -8.18374, 0.55", "-38.5839, -5.27158, -9.12004, 0.55", "-38.6702, -3.13987, -9.98258, 0.28", "-38.73, -1.32994, -10.6916, 0.55", "-38.7918, 0.128245, -11.2491, 0.55", "-38.9839, 2.13169, -12.0104, 0.28", "-39.2559, 4.0688, -12.5881, 0.55", "-39.5427, 5.79812, -12.9704, 0.28", "-40.0011, 8.40123, -13.4187, 0.55", "-40.4818, 10.7862, -13.8057, 0.55", "-41.1447, 13.8423, -14.3891, 0.55", "-41.8651, 16.6767, -15.0541, 0.28", "-42.1727, 17.9332, -15.4722, 0.55", "-42.3302, 18.7073, -15.7951, 0.28", "-42.4993, 19.9324, -16.4135, 0.55", "-42.6778, 21.9441, -17.5636, 0.28", "-42.6065, 24.1575, -19.0631, 0.83", "-42.3063, 27.3629, -21.5041, 0.55", "-41.8811, 30.4077, -23.7073, 0.55", "-41.4628, 32.3761, -25.0113, 0.28", "-41.2229, 33.3198, -25.5751, 0.55", "-40.2249, 37.1935, -27.5887, 0.28", "-39.9445, 38.1561, -28.0446, 0.55", "-39.0527, 41.5522, -29.5549, 0.55", "-38.2619, 44.4775, -30.8675, 0.28", "-37.8874, 46.202, -31.5558, 0.55", "-37.685, 47.669, -32.0326, 0.28", "-37.7004, 49.0808, -32.3086, 0.55", "-37.9368, 51.3891, -32.735, 0.28", "-38.1839, 52.4839, -32.9574, 0.55", "-38.9088, 54.7732, -33.3945, 0.28", "-39.6984, 57.2761, -33.9729, 0.55", "-40.7207, 60.6155, -34.8167, 0.28", "-41.4534, 62.9751, -35.412, 0.55", "-41.8869, 64.8232, -35.9126, 0.28", "-42.1459, 66.0579, -36.2497, 0.28", "-42.4754, 68.3502, -36.9551, 0.55", "-42.6296, 70.2317, -37.538, 0.28", "-42.612, 71.259, -37.8928, 0.55", "-42.5107, 73.5196, -38.4962, 0.28", "-42.2574, 76.4048, -39.1865, 0.55", "-41.909, 78.8672, -39.7387, 0.28", "-41.7722, 79.5986, -39.8629, 0.55", "-41.0361, 82.5195, -40.4505, 0.28", "-40.4283, 84.3239, -40.8169, 0.55", "-39.585, 86.6612, -41.3703, 0.28", "-39.2193, 87.5246, -41.5892, 0.55", "-37.8297, 90.7541, -42.3174, 0.28", "-37.216, 92.2689, -42.6093, 0.55", "-36.1757, 95.0109, -42.9987, 0.28", "-35.4755, 97.1455, -43.2699, 0.55", "-34.8369, 99.3111, -43.5271, 0.55", "-34.5369, 100.608, -43.6827, 0.55", "-34.1249, 102.586, -43.9363, 0.28", "-33.8467, 104.267, -44.126, 1.11", "-33.2336, 108.834, -44.5669, 0.55", "-32.8848, 111.661, -44.7636, 0.28", "-32.6732, 113.962, -44.9228, 0.55", "-32.4291, 116.921, -45.0939, 0.28", "-32.344, 118.221, -45.1623, 0.55", "-32.2064, 120.792, -45.2347, 0.55", "-32.0934, 122.524, -45.3033, 0.28", "-32.0116, 123.316, -45.364, 0.55", "-31.6279, 125.94, -45.6199, 0.28", "-31.4912, 126.894, -45.7737, 0.55", "-31.2156, 128.82, -46.1321, 0.28", "-30.8847, 131.039, -46.6952, 0.55", "-30.309, 133.995, -47.5892, 0.55", "-29.6974, 136.521, -48.5149, 0.28", "-29.2364, 138.213, -49.2214, 0.55", "-28.4092, 141.027, -50.3528, 0.28", "-27.8755, 142.989, -51.1243, 0.55", "-27.2274, 145.322, -51.9538, 0.83", "-26.5017, 148.001, -52.8314, 0.28", "-26.3985, 148.327, -52.9525, 0.55", "-25.6443, 150.65, -53.7853, 0.55", "-25.0949, 152.342, -54.382, 0.55", "-24.499, 154.64, -55.0956, 0.28", "-23.9924, 157.079, -55.6617, 0.55", "-23.5261, 159.459, -56.0044, 0.28", "-23.1107, 161.58, -56.2294, 0.55", "-22.7324, 163.568, -56.3826, 0.28", "-22.3482, 165.593, -56.4703, 0.55", "-21.7241, 169.352, -56.4712, 0.55", "-21.0696, 173.099, -56.3509, 0.28", "-20.8471, 174.424, -56.1999, 0.28", "-20.6679, 175.474, -56.0273, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "3.48988, 173.558, 37.5756, 0.55", "2.52599, 174.65, 38.3255, 0.55", "2.33563, 174.865, 38.4736, 0.55", "1.78643, 175.487, 38.9008, 0.28", "0.94206, 176.444, 39.5578, 0.55", "0.0936142, 177.405, 40.2178, 0.28", "-1.27387, 178.954, 41.2817, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "3.48988, 173.558, 37.5756, 0.55", "3.80687, 175.912, 37.4969, 0.55", "3.96695, 178.003, 37.5027, 0.55", "4.14197, 180.17, 37.5002, 0.55", "4.37923, 183.161, 37.5084, 0.55", "4.77374, 187.578, 37.4103, 0.55", "4.88157, 188.667, 37.3659, 0.28", "4.98358, 190.286, 37.3153, 0.55", "5.17569, 193.631, 37.1582, 0.55", "5.25984, 195.088, 37.0598, 0.55", "5.41794, 196.988, 36.8473, 0.55", "5.55503, 198.809, 36.591, 0.55", "5.66047, 200.536, 36.3155, 0.83", "5.69438, 201.537, 36.157, 0.28", "5.64858, 202.53, 35.9621, 0.55", "5.58734, 203.195, 35.8135, 0.28", "5.46312, 204.506, 35.5797, 0.55", "5.38262, 206.169, 35.2731, 0.28", "5.35869, 207.065, 35.0844, 0.55", "5.3476, 210.102, 34.4211, 0.28", "5.37298, 210.821, 34.2407, 0.55", "5.56205, 212.964, 33.6474, 0.28", "5.78119, 214.345, 33.2099, 0.55" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-84.7536, -46.7944, -21.133, 0.55", "-86.6887, -47.526, -23.4901, 0.55", "-90.1121, -48.8323, -27.4703, 0.28", "-91.4371, -49.3494, -28.9021, 0.55", "-93.3924, -50.0768, -30.8441, 1.38", "-95.5804, -50.8197, -32.8022, 0.55", "-96.3526, -51.0271, -33.3972, 0.28", "-96.8826, -51.1412, -33.7109, 0.55", "-98.2001, -51.3239, -34.1199, 0.28", "-99.357, -51.5018, -34.3895, 0.55", "-101.278, -51.8297, -34.6879, 0.55", "-104.008, -52.2727, -35.0655, 0.55", "-106.483, -52.6803, -35.4323, 0.55", "-107.023, -52.779, -35.5167, 1.11", "-112.032, -53.8153, -36.3225, 0.28", "-114.13, -54.2993, -36.6541, 0.83", "-116.11, -54.7905, -36.9192, 0.28", "-117.49, -55.1193, -37.1388, 0.55", "-118.646, -55.3262, -37.3247, 0.28", "-120.379, -55.5165, -37.6109, 0.55", "-122.149, -55.5445, -37.8414, 0.28", "-123.281, -55.5233, -37.9697, 0.83", "-127.313, -55.295, -38.1474, 0.28", "-129.33, -55.0829, -38.1305, 0.83", "-131.907, -54.6635, -37.9808, 0.28", "-133.835, -54.2786, -37.7754, 0.83", "-135.822, -53.8041, -37.3846, 0.55", "-138.069, -53.1591, -36.7485, 0.28", "-138.965, -52.8687, -36.3664, 0.55", "-140.276, -52.4156, -35.7519, 0.28", "-141.129, -52.1147, -35.3313, 0.55", "-143.653, -51.3217, -34.2999, 0.28", "-144.959, -50.9704, -33.9008, 0.55", "-147.046, -50.5146, -33.465, 0.28", "-147.443, -50.4544, -33.385, 0.55", "-148.586, -50.3773, -33.173, 0.28", "-151.834, -50.4464, -32.7221, 0.55", "-153.488, -50.6306, -32.5621, 0.28", "-155.153, -50.9823, -32.4446, 0.83", "-158.81, -52.12, -32.3263, 0.28", "-160.112, -52.6358, -32.2914, 0.55", "-162.022, -53.5334, -32.2913, 0.28", "-163.979, -54.5994, -32.3288, 0.83", "-166.199, -55.8404, -32.4498, 0.55", "-167.989, -56.8847, -32.5869, 0.28", "-168.881, -57.4759, -32.6598, 0.55", "-170.292, -58.4623, -32.7047, 0.28", "-171.364, -59.39, -32.6012, 0.55", "-172.898, -61.1128, -32.2903, 0.28", "-173.879, -62.5105, -31.9348, 0.55", "-175.387, -65.2111, -31.207, 0.28", "-175.884, -66.237, -30.9583, 0.55", "-177.169, -69.2429, -30.2241, 0.28", "-177.399, -69.8228, -30.096, 0.83", "-178.193, -71.8238, -29.631, 0.28", "-178.493, -72.541, -29.5185, 0.55", "-179.45, -74.7137, -29.2619, 0.28", "-179.695, -75.2092, -29.2032, 0.55", "-181.203, -78.115, -28.9025, 0.28", "-182.169, -79.9349, -28.6804, 0.55", "-183.485, -82.4344, -28.3495, 0.28", "-184.53, -84.4163, -28.0764, 0.55", "-185.462, -86.1941, -27.8468, 0.28", "-185.645, -86.5536, -27.8034, 0.55", "-186.4, -88.0186, -27.6591, 0.28", "-187.11, -89.4266, -27.5055, 0.55", "-187.494, -90.1628, -27.3777, 0.28", "-187.915, -91.0347, -27.2095, 0.55", "-188.726, -92.8235, -26.8509, 0.28", "-189.233, -93.93, -26.5641, 0.55", "-189.879, -95.4198, -26.1295, 0.28", "-190.221, -96.1799, -25.8297, 0.55", "-190.684, -97.2626, -25.3494, 0.28", "-190.994, -97.9792, -25.0387, 0.55", "-191.78, -99.6799, -24.3556, 0.28", "-192.45, -101.095, -23.9008, 0.55", "-193.609, -103.606, -23.3894, 0.28", "-193.962, -104.358, -23.3124, 0.55", "-194.72, -105.883, -23.3004, 0.28", "-195.002, -106.431, -23.3462, 0.55", "-195.958, -108.152, -23.6681, 0.28", "-196.683, -109.432, -23.9911, 0.83", "-197.733, -111.48, -24.6549, 0.28", "-198.115, -112.237, -24.8903, 0.55", "-198.632, -113.336, -25.1835, 0.28", "-199.032, -114.237, -25.3969, 0.55", "-199.673, -115.872, -25.7692, 1.11", "-200.475, -118.036, -26.2453, 0.28", "-200.644, -118.57, -26.3498, 0.55", "-201.286, -120.629, -26.6977, 0.28", "-201.982, -122.891, -27.1211, 0.55", "-202.473, -124.447, -27.4657, 0.28", "-202.902, -125.758, -27.9493, 0.55", "-203.198, -126.665, -28.3938, 0.28", "-203.477, -127.581, -28.9845, 0.55", "-204.151, -129.763, -30.7165, 0.28", "-204.299, -130.261, -31.1309, 0.55", "-205.283, -133.38, -33.6973, 0.28", "-205.594, -134.425, -34.5644, 0.55", "-205.962, -135.739, -35.5876, 0.28", "-206.2, -136.721, -36.3237, 0.55", "-206.634, -138.381, -37.3827, 0.28", "-206.856, -139.136, -37.7886, 0.55", "-207.121, -140.02, -38.1488, 0.28", "-207.451, -140.886, -38.5729, 0.55", "-208.285, -143.061, -39.7841, 0.28", "-208.66, -144.104, -40.3757, 0.83", "-209.699, -147.006, -41.9609, 0.28", "-210.108, -148.323, -42.5563, 0.83", "-211.052, -151.781, -43.858, 0.28", "-211.626, -154.082, -44.5956, 0.83", "-212.186, -156.641, -45.2379, 0.28", "-212.435, -158.156, -45.598, 0.55", "-212.756, -161.137, -46.23, 0.28", "-212.818, -162.278, -46.4925, 0.55", "-212.787, -163.571, -46.7739, 0.28", "-212.76, -164.17, -46.9128, 0.28", "-212.498, -167.805, -47.9885, 0.28", "-212.442, -168.327, -48.1847, 0.55", "-212.129, -170.934, -49.1319, 0.28", "-211.906, -172.193, -49.4366, 0.55", "-211.575, -173.569, -49.5801, 0.28", "-211.377, -174.339, -49.6089, 0.55", "-210.814, -176.307, -49.381, 0.28", "-210.136, -178.718, -48.8945, 0.55", "-209.432, -180.891, -48.0218, 0.28", "-209.129, -181.687, -47.6456, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-84.7536, -46.7944, -21.133, 0.28", "-88.051, -45.5491, -21.3556, 0.28", "-89.0049, -45.1038, -21.479, 0.55", "-90.3726, -44.4345, -21.6844, 0.28", "-90.8893, -44.1051, -21.8327, 0.55", "-91.5611, -43.6176, -22.053, 0.28", "-92.2866, -43.04, -22.2493, 0.55", "-94.0842, -41.3205, -22.7419, 0.28", "-94.6232, -40.7909, -22.8425, 0.55", "-97.6924, -37.7409, -23.2223, 0.28", "-98.6066, -36.8474, -23.3662, 0.55", "-100.421, -35.0801, -23.5568, 0.28", "-101.042, -34.4744, -23.6076, 0.55", "-103.628, -31.9744, -23.6827, 0.28", "-103.883, -31.7344, -23.6783, 0.55", "-106.317, -29.778, -23.347, 0.28", "-108.154, -28.4166, -23.2903, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_50", "dend_39", "dend_34", "dend_9", "dend_0", "dend_52", "dend_51", "dend_45", "dend_40", "dend_36", "dend_35", "dend_21", "dend_10", "dend_2", "dend_1", "dend_54", "dend_53", "dend_47", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_29", "dend_22", "dend_12", "dend_11", "dend_8", "dend_3", "dend_49", "dend_48", "dend_43", "dend_42", "dend_31", "dend_30", "dend_26", "dend_23", "dend_16", "dend_13", "dend_7", "dend_4", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_20", "dend_19" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_50", "dend_39", "dend_34", "dend_9", "dend_0", "dend_52", "dend_51", "dend_45", "dend_40", "dend_36", "dend_35", "dend_21", "dend_10", "dend_2", "dend_1", "dend_54", "dend_53", "dend_47", "dend_46", "dend_44", "dend_41", "dend_38", "dend_37", "dend_29", "dend_22", "dend_12", "dend_11", "dend_8", "dend_3", "dend_49", "dend_48", "dend_43", "dend_42", "dend_31", "dend_30", "dend_26", "dend_23", "dend_16", "dend_13", "dend_7", "dend_4", "dend_33", "dend_32", "dend_28", "dend_27", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_6", "dend_5", "dend_20", "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_9", "dend_9", "dend_9", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_21", "dend_10", "dend_10", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_22", "dend_12", "dend_12", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L23_BTC_08c8d4004b_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_50, id: dend_50, parent: soma_0
create dend_50
public dend_50
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_52, id: dend_52, parent: dend_50
create dend_52
public dend_52
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_21, id: dend_21, parent: dend_9
create dend_21
public dend_21
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_52
create dend_54
public dend_54
// Section: dend_53, id: dend_53, parent: dend_52
create dend_53
public dend_53
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_29, id: dend_29, parent: dend_21
create dend_29
public dend_29
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_12, id: dend_12, parent: dend_10
create dend_12
public dend_12
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: dend_2
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_22
create dend_26
public dend_26
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_3
create dend_7
public dend_7
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_55
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_21, dend_10, dend_10, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_50(0), soma_0(0.49999995701300415)
    connect dend_39(0), soma_0(0.49999995701300415)
    connect dend_34(0), soma_0(0.49999995701300415)
    connect dend_9(0), soma_0(0.49999995701300415)
    connect dend_0(0), soma_0(0.49999995701300415)
    connect axon_0(0), soma_0(1.0)
    connect dend_52(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_21(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_52(1.0)
    connect dend_53(0), dend_52(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_29(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_12(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_8(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 0.636547, -11.2268, 0.0, 2.0961 ) }
    soma_0 { pt3dadd( 0.598333, -10.0461, 0.0, 3.03421 ) }
    soma_0 { pt3dadd( 0.560118, -8.86534, 0.0, 4.26504 ) }
    soma_0 { pt3dadd( 0.521904, -7.68461, 0.0, 5.45891 ) }
    soma_0 { pt3dadd( 0.483689, -6.50388, 0.0, 6.32885 ) }
    soma_0 { pt3dadd( 0.445475, -5.32315, 0.0, 7.1195 ) }
    soma_0 { pt3dadd( 0.40726, -4.14242, 0.0, 7.67098 ) }
    soma_0 { pt3dadd( 0.369046, -2.96169, 0.0, 8.08337 ) }
    soma_0 { pt3dadd( 0.330831, -1.78096, 0.0, 8.48415 ) }
    soma_0 { pt3dadd( 0.292617, -0.600232, 0.0, 8.88493 ) }
    soma_0 { pt3dadd( 0.254403, 0.580499, 0.0, 9.09061 ) }
    soma_0 { pt3dadd( 0.216188, 1.76123, 0.0, 8.76211 ) }
    soma_0 { pt3dadd( 0.177974, 2.94196, 0.0, 8.30944 ) }
    soma_0 { pt3dadd( 0.139759, 4.12269, 0.0, 7.83318 ) }
    soma_0 { pt3dadd( 0.101545, 5.30342, 0.0, 7.35692 ) }
    soma_0 { pt3dadd( 0.0633304, 6.48415, 0.0, 6.86553 ) }
    soma_0 { pt3dadd( 0.0251159, 7.66488, 0.0, 6.11195 ) }
    soma_0 { pt3dadd( -0.0130985, 8.84561, 0.0, 5.27833 ) }
    soma_0 { pt3dadd( -0.051313, 10.0263, 0.0, 4.23957 ) }
    soma_0 { pt3dadd( -0.0895274, 11.2071, 0.0, 3.09571 ) }
    soma_0 { pt3dadd( -0.127742, 12.3878, 0.0, 1.86556 ) }
    // Section: dend_50, id: dend_50, parent: soma_0 (entry count 21/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( 0.781648, -9.38035, 7.16, 0.83 ) }
    dend_50 { pt3dadd( 0.750329, -11.781, 7.81999, 0.83 ) }
    dend_50 { pt3dadd( 0.856918, -13.1022, 8.34742, 0.55 ) }
    dend_50 { pt3dadd( 1.13822, -14.6293, 9.0155, 0.55 ) }
    dend_50 { pt3dadd( 1.49068, -15.9909, 9.59776, 0.55 ) }
    dend_50 { pt3dadd( 2.25059, -18.3911, 10.5805, 0.28 ) }
    dend_50 { pt3dadd( 2.46642, -19.0461, 10.8329, 0.55 ) }
    dend_50 { pt3dadd( 3.11685, -20.6306, 11.4548, 0.55 ) }
    dend_50 { pt3dadd( 3.67515, -21.8963, 11.9661, 0.55 ) }
    dend_50 { pt3dadd( 4.29424, -23.088, 12.3929, 0.28 ) }
    dend_50 { pt3dadd( 4.72605, -23.9132, 12.6397, 0.55 ) }
    dend_50 { pt3dadd( 5.13782, -24.7909, 12.8557, 0.55 ) }
    dend_50 { pt3dadd( 5.75012, -26.339, 13.2207, 0.55 ) }
    dend_50 { pt3dadd( 6.57362, -28.791, 13.7445, 0.55 ) }
    dend_50 { pt3dadd( 7.07135, -30.6026, 14.1475, 0.55 ) }
    dend_50 { pt3dadd( 7.49452, -32.4371, 14.5499, 0.55 ) }
    dend_50 { pt3dadd( 7.67551, -33.5291, 14.77, 0.55 ) }
    dend_50 { pt3dadd( 7.88054, -35.3161, 15.0909, 0.55 ) }
    dend_50 { pt3dadd( 7.93371, -36.2718, 15.2417, 0.55 ) }
    dend_50 { pt3dadd( 7.89614, -37.1092, 15.3214, 0.55 ) }
    dend_50 { pt3dadd( 7.69964, -38.5675, 15.4512, 0.55 ) }
    dend_50 { pt3dadd( 7.40882, -40.2285, 15.5534, 0.55 ) }
    dend_50 { pt3dadd( 7.36726, -40.4875, 15.5518, 0.55 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 44/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -1.99836, -4.56035, -13.53, 0.83 ) }
    dend_39 { pt3dadd( -1.83467, -2.93306, -14.2207, 0.83 ) }
    dend_39 { pt3dadd( -2.3309, 0.32799, -15.2345, 0.83 ) }
    dend_39 { pt3dadd( -2.79216, 1.32161, -16.7838, 0.83 ) }
    dend_39 { pt3dadd( -3.33111, 2.40728, -18.6531, 0.83 ) }
    dend_39 { pt3dadd( -3.82524, 3.40267, -20.3669, 0.83 ) }
    dend_39 { pt3dadd( -4.27696, 4.31263, -21.9337, 0.83 ) }
    dend_39 { pt3dadd( -5.13175, 6.01464, -24.9847, 0.83 ) }
    dend_39 { pt3dadd( -9.5186, 13.3324, -39.5321, 0.83 ) }
    dend_39 { pt3dadd( -9.6533, 13.521, -39.9776, 0.83 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 54/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -1.60835, 11.1896, -0.19, 1.11 ) }
    dend_34 { pt3dadd( -3.3482, 12.2655, -0.115236, 1.11 ) }
    dend_34 { pt3dadd( -5.68273, 13.709, -0.0149189, 1.11 ) }
    dend_34 { pt3dadd( -7.7831, 15.0077, 0.0753366, 1.11 ) }
    dend_34 { pt3dadd( -10.1245, 16.4555, 0.17595, 0.83 ) }
    dend_34 { pt3dadd( -12.904, 18.1741, 0.295387, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 60/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 0.641648, -11.7204, -8.79, 2.77 ) }
    dend_9 { pt3dadd( 0.34055, -16.8095, -8.79, 2.77 ) }
    dend_9 { pt3dadd( -0.0899215, -24.0854, -8.79, 2.77 ) }
    dend_9 { pt3dadd( -0.304313, -27.7091, -8.79, 2.77 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 64/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -0.358352, 11.7297, -1.3, 0.83 ) }
    dend_0 { pt3dadd( 0.183514, 16.0907, -1.07355, 0.83 ) }
    dend_0 { pt3dadd( 0.507091, 18.2325, -0.818936, 1.11 ) }
    dend_0 { pt3dadd( 1.01005, 21.8039, -0.236012, 0.83 ) }
    dend_0 { pt3dadd( 1.45558, 25.2525, 0.383834, 0.83 ) }
    dend_0 { pt3dadd( 1.84928, 28.0873, 0.992057, 0.83 ) }
    dend_0 { pt3dadd( 2.48962, 32.641, 1.92634, 0.83 ) }
    dend_0 { pt3dadd( 2.83567, 35.6108, 2.56449, 0.83 ) }
    dend_0 { pt3dadd( 3.11608, 37.9792, 3.05548, 0.83 ) }
    dend_0 { pt3dadd( 3.60548, 41.7757, 3.88452, 0.83 ) }
    dend_0 { pt3dadd( 4.51377, 48.6246, 5.40608, 0.83 ) }
    dend_0 { pt3dadd( 4.9618, 52.0512, 6.13095, 0.83 ) }
    dend_0 { pt3dadd( 5.2125, 54.2683, 6.45871, 0.83 ) }
    dend_0 { pt3dadd( 5.66388, 58.5826, 6.96155, 0.83 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 78/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -0.127742, 12.3878, 0.0, 0.930718 ) }
    axon_0 { pt3dadd( -0.612964, 27.38, 0.0, 0.930718 ) }
    axon_0 { pt3dadd( -1.09819, 42.3721, 0.0, 0.930718 ) }
    // Section: dend_52, id: dend_52, parent: dend_50 (entry count 81/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( 7.36726, -40.4875, 15.5518, 0.55 ) }
    dend_52 { pt3dadd( 7.33242, -40.9872, 15.9748, 0.55 ) }
    dend_52 { pt3dadd( 7.27852, -41.5505, 16.4154, 0.55 ) }
    dend_52 { pt3dadd( 7.04408, -43.2098, 17.5858, 0.55 ) }
    dend_52 { pt3dadd( 6.89187, -44.2847, 18.2758, 0.55 ) }
    dend_52 { pt3dadd( 6.63885, -46.0411, 19.2922, 0.55 ) }
    dend_52 { pt3dadd( 6.45181, -47.4837, 20.0522, 0.28 ) }
    dend_52 { pt3dadd( 6.34476, -48.4538, 20.5001, 0.55 ) }
    dend_52 { pt3dadd( 6.24555, -49.5395, 20.8932, 0.55 ) }
    dend_52 { pt3dadd( 6.17453, -50.3197, 21.0916, 0.55 ) }
    dend_52 { pt3dadd( 6.08993, -51.2991, 21.2889, 0.55 ) }
    dend_52 { pt3dadd( 6.0241, -52.0693, 21.4473, 0.55 ) }
    dend_52 { pt3dadd( 5.93683, -52.9379, 21.6661, 0.55 ) }
    dend_52 { pt3dadd( 5.79108, -54.0442, 21.9898, 0.55 ) }
    dend_52 { pt3dadd( 5.51271, -55.7682, 22.528, 0.55 ) }
    dend_52 { pt3dadd( 5.20553, -57.1248, 22.9479, 0.55 ) }
    dend_52 { pt3dadd( 4.62677, -59.4034, 23.6022, 0.55 ) }
    dend_52 { pt3dadd( 4.36663, -60.3472, 23.8492, 0.55 ) }
    dend_52 { pt3dadd( 3.916, -62.0343, 24.229, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_52 { pt3dadd( 3.6681, -63.0726, 24.3708, 0.55 ) }
    dend_52 { pt3dadd( 3.33026, -64.9246, 24.4117, 0.55 ) }
    dend_52 { pt3dadd( 3.17016, -65.994, 24.3367, 0.55 ) }
    dend_52 { pt3dadd( 3.10364, -66.6141, 24.2324, 0.55 ) }
    dend_52 { pt3dadd( 3.04379, -67.8035, 24.0116, 0.55 ) }
    dend_52 { pt3dadd( 3.05153, -69.3855, 23.6184, 0.55 ) }
    dend_52 { pt3dadd( 3.05201, -70.3426, 23.3465, 0.55 ) }
    dend_52 { pt3dadd( 3.06628, -71.5068, 23.002, 0.28 ) }
    dend_52 { pt3dadd( 3.0312, -72.7361, 22.6627, 0.55 ) }
    dend_52 { pt3dadd( 3.0143, -73.167, 22.5474, 0.55 ) }
    dend_52 { pt3dadd( 2.93058, -74.6468, 22.2001, 0.28 ) }
    dend_52 { pt3dadd( 2.87662, -75.6207, 21.9651, 0.55 ) }
    dend_52 { pt3dadd( 2.85828, -76.834, 21.6234, 0.55 ) }
    dend_52 { pt3dadd( 2.8977, -77.5265, 21.4342, 0.55 ) }
    dend_52 { pt3dadd( 2.95433, -78.0912, 21.3026, 0.28 ) }
    dend_52 { pt3dadd( 3.08288, -79.2261, 21.0895, 0.55 ) }
    dend_52 { pt3dadd( 3.32853, -81.2015, 20.8183, 0.28 ) }
    dend_52 { pt3dadd( 3.49343, -82.3937, 20.6614, 0.55 ) }
    dend_52 { pt3dadd( 3.63422, -83.5185, 20.5618, 0.28 ) }
    dend_52 { pt3dadd( 3.85191, -85.2056, 20.4782, 0.28 ) }
    dend_52 { pt3dadd( 3.93281, -85.8407, 20.4928, 0.55 ) }
    dend_52 { pt3dadd( 4.02051, -86.4518, 20.553, 0.28 ) }
    dend_52 { pt3dadd( 4.14069, -87.1564, 20.6752, 0.55 ) }
    dend_52 { pt3dadd( 4.51258, -89.1028, 21.018, 0.28 ) }
    dend_52 { pt3dadd( 4.64692, -89.7067, 21.1153, 0.28 ) }
    dend_52 { pt3dadd( 4.97068, -90.8599, 21.3019, 0.55 ) }
    dend_52 { pt3dadd( 5.31689, -91.8597, 21.4592, 0.55 ) }
    dend_52 { pt3dadd( 5.90818, -93.3349, 21.6728, 0.55 ) }
    dend_52 { pt3dadd( 6.2217, -94.0642, 21.7592, 0.55 ) }
    dend_52 { pt3dadd( 6.79315, -95.3462, 21.8582, 0.55 ) }
    dend_52 { pt3dadd( 7.21446, -96.3326, 21.93, 0.55 ) }
    dend_52 { pt3dadd( 7.54331, -97.0825, 22.0053, 0.55 ) }
    dend_52 { pt3dadd( 7.91532, -97.8753, 22.1368, 0.55 ) }
    dend_52 { pt3dadd( 8.55779, -99.1293, 22.4142, 0.55 ) }
    dend_52 { pt3dadd( 8.93103, -99.8411, 22.6123, 0.55 ) }
    dend_52 { pt3dadd( 9.40658, -100.681, 22.8692, 0.28 ) }
    dend_52 { pt3dadd( 10.075, -101.879, 23.2308, 0.55 ) }
    dend_52 { pt3dadd( 10.5797, -102.802, 23.4361, 0.55 ) }
    dend_52 { pt3dadd( 11.1883, -103.788, 23.6036, 0.55 ) }
    dend_52 { pt3dadd( 11.982, -104.957, 23.7303, 0.28 ) }
    dend_52 { pt3dadd( 12.5483, -105.807, 23.7196, 0.55 ) }
    dend_52 { pt3dadd( 13.0247, -106.556, 23.6247, 0.55 ) }
    dend_52 { pt3dadd( 14.1789, -108.375, 23.1634, 0.55 ) }
    dend_52 { pt3dadd( 14.5434, -108.957, 22.9554, 0.55 ) }
    dend_52 { pt3dadd( 14.9598, -109.616, 22.6793, 0.55 ) }
    dend_52 { pt3dadd( 15.8348, -110.948, 22.0654, 0.55 ) }
    dend_52 { pt3dadd( 16.1294, -111.425, 21.8655, 0.55 ) }
    dend_52 { pt3dadd( 16.9905, -112.778, 21.3432, 0.28 ) }
    dend_52 { pt3dadd( 17.5879, -113.71, 21.0257, 0.55 ) }
    dend_52 { pt3dadd( 18.6121, -115.374, 20.5641, 0.28 ) }
    dend_52 { pt3dadd( 19.0145, -116.043, 20.4265, 0.28 ) }
    dend_52 { pt3dadd( 19.7879, -117.355, 20.2886, 0.55 ) }
    dend_52 { pt3dadd( 20.1796, -118.083, 20.2647, 0.28 ) }
    dend_52 { pt3dadd( 20.3064, -118.343, 20.2777, 0.55 ) }
    dend_52 { pt3dadd( 20.8735, -119.502, 20.3874, 0.28 ) }
    dend_52 { pt3dadd( 21.2444, -120.229, 20.4572, 0.55 ) }
    dend_52 { pt3dadd( 22.0055, -121.615, 20.6598, 0.28 ) }
    dend_52 { pt3dadd( 22.4848, -122.377, 20.7698, 0.55 ) }
    dend_52 { pt3dadd( 22.8288, -122.908, 20.8378, 0.55 ) }
    dend_52 { pt3dadd( 23.1693, -123.43, 20.903, 0.55 ) }
    dend_52 { pt3dadd( 24.1691, -124.965, 21.0716, 0.28 ) }
    dend_52 { pt3dadd( 24.8201, -126.019, 21.1834, 0.55 ) }
    dend_52 { pt3dadd( 25.6346, -127.552, 21.3244, 0.28 ) }
    dend_52 { pt3dadd( 26.4716, -129.356, 21.4621, 0.28 ) }
    dend_52 { pt3dadd( 26.8364, -130.422, 21.5281, 0.55 ) }
    dend_52 { pt3dadd( 27.2215, -131.99, 21.5429, 0.55 ) }
    dend_52 { pt3dadd( 27.3898, -133.139, 21.4909, 0.28 ) }
    dend_52 { pt3dadd( 27.5215, -135.013, 21.3178, 0.55 ) }
    dend_52 { pt3dadd( 27.5172, -135.285, 21.2911, 0.55 ) }
    dend_52 { pt3dadd( 27.3898, -137.389, 21.0233, 0.28 ) }
    dend_52 { pt3dadd( 27.3224, -138.748, 20.8204, 0.55 ) }
    dend_52 { pt3dadd( 27.3082, -139.997, 20.6519, 0.28 ) }
    dend_52 { pt3dadd( 27.3138, -140.554, 20.5748, 0.55 ) }
    dend_52 { pt3dadd( 27.3684, -141.88, 20.3969, 0.55 ) }
    dend_52 { pt3dadd( 27.5699, -144.722, 20.0709, 0.28 ) }
    dend_52 { pt3dadd( 27.6583, -145.44, 20.0194, 0.55 ) }
    dend_52 { pt3dadd( 27.8801, -147.074, 20.0195, 0.55 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 77/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( 7.36726, -40.4875, 15.5518, 0.55 ) }
    dend_51 { pt3dadd( 6.1084, -41.0806, 15.2353, 0.55 ) }
    dend_51 { pt3dadd( 4.70201, -41.3966, 14.1962, 0.55 ) }
    dend_51 { pt3dadd( 3.92258, -41.3818, 13.4358, 0.55 ) }
    dend_51 { pt3dadd( 3.1425, -41.3902, 12.6834, 0.55 ) }
    dend_51 { pt3dadd( 2.1709, -41.4177, 11.7086, 0.55 ) }
    dend_51 { pt3dadd( 1.45103, -41.4356, 10.9988, 0.55 ) }
    dend_51 { pt3dadd( -1.03099, -41.3475, 8.63054, 0.28 ) }
    dend_51 { pt3dadd( -1.89149, -41.3173, 7.78082, 0.28 ) }
    dend_51 { pt3dadd( -2.85474, -41.2576, 6.87221, 0.55 ) }
    dend_51 { pt3dadd( -4.62357, -41.1336, 5.65574, 0.55 ) }
    dend_51 { pt3dadd( -5.26067, -41.11, 5.38197, 0.55 ) }
    dend_51 { pt3dadd( -6.99928, -41.1095, 5.07756, 0.83 ) }
    dend_51 { pt3dadd( -8.44353, -41.1854, 5.30536, 0.55 ) }
    dend_51 { pt3dadd( -9.60874, -41.2985, 5.69599, 0.55 ) }
    dend_51 { pt3dadd( -14.0046, -41.9689, 7.81126, 0.55 ) }
    dend_51 { pt3dadd( -14.5654, -42.1052, 8.19135, 0.55 ) }
    dend_51 { pt3dadd( -14.9581, -42.2622, 8.53992, 0.55 ) }
    dend_51 { pt3dadd( -17.0326, -43.4578, 10.9561, 0.28 ) }
    dend_51 { pt3dadd( -17.7048, -43.963, 11.8846, 0.55 ) }
    dend_51 { pt3dadd( -18.2947, -44.5263, 12.7886, 0.55 ) }
    dend_51 { pt3dadd( -19.7182, -46.3859, 15.156, 0.55 ) }
    dend_51 { pt3dadd( -21.2724, -48.8646, 18.0483, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_51 { pt3dadd( -22.1075, -50.5356, 19.8035, 0.55 ) }
    dend_51 { pt3dadd( -22.3733, -51.1952, 20.4563, 0.55 ) }
    dend_51 { pt3dadd( -22.5799, -51.7103, 20.9857, 0.55 ) }
    dend_51 { pt3dadd( -22.9043, -52.783, 22.0421, 0.55 ) }
    dend_51 { pt3dadd( -22.9401, -53.6947, 22.6164, 0.28 ) }
    dend_51 { pt3dadd( -22.7667, -54.7584, 22.7961, 0.28 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( -9.6533, 13.521, -39.9776, 0.83 ) }
    dend_45 { pt3dadd( -9.65424, 14.9168, -40.1257, 0.83 ) }
    dend_45 { pt3dadd( -9.64885, 16.3039, -40.3725, 0.83 ) }
    dend_45 { pt3dadd( -9.6647, 17.4157, -40.5923, 0.83 ) }
    dend_45 { pt3dadd( -9.65729, 18.7997, -40.8564, 0.83 ) }
    dend_45 { pt3dadd( -9.6515, 20.7097, -41.1965, 0.83 ) }
    dend_45 { pt3dadd( -9.6838, 22.5486, -41.5007, 0.83 ) }
    dend_45 { pt3dadd( -9.72632, 23.8146, -41.7047, 0.83 ) }
    dend_45 { pt3dadd( -9.78758, 25.5145, -41.9668, 0.83 ) }
    dend_45 { pt3dadd( -9.91324, 27.786, -42.2838, 0.83 ) }
    dend_45 { pt3dadd( -9.99938, 29.3749, -42.468, 0.83 ) }
    dend_45 { pt3dadd( -10.078, 30.8168, -42.5826, 0.83 ) }
    dend_45 { pt3dadd( -10.1193, 32.2718, -42.6223, 0.83 ) }
    dend_45 { pt3dadd( -10.1238, 32.9985, -42.6371, 0.83 ) }
    dend_45 { pt3dadd( -10.0876, 34.2052, -42.6797, 0.83 ) }
    dend_45 { pt3dadd( -10.0231, 35.4405, -42.7394, 0.83 ) }
    dend_45 { pt3dadd( -9.92034, 36.4518, -42.7919, 0.55 ) }
    dend_45 { pt3dadd( -9.7345, 37.8448, -42.8623, 1.11 ) }
    dend_45 { pt3dadd( -9.59606, 38.7416, -42.9044, 0.83 ) }
    dend_45 { pt3dadd( -9.35378, 40.289, -42.9699, 0.83 ) }
    dend_45 { pt3dadd( -9.0257, 42.0293, -43.0349, 0.83 ) }
    dend_45 { pt3dadd( -8.76039, 43.3093, -43.0737, 0.83 ) }
    dend_45 { pt3dadd( -8.40485, 45.0119, -43.1092, 0.83 ) }
    dend_45 { pt3dadd( -8.13956, 46.4543, -43.1237, 0.83 ) }
    dend_45 { pt3dadd( -7.99613, 47.1959, -43.1221, 0.83 ) }
    dend_45 { pt3dadd( -7.79484, 48.3174, -43.1219, 0.83 ) }
    dend_45 { pt3dadd( -7.61189, 49.7521, -43.2102, 0.83 ) }
    dend_45 { pt3dadd( -7.48663, 51.3487, -43.3857, 0.83 ) }
    dend_45 { pt3dadd( -7.47575, 52.9671, -43.6447, 0.83 ) }
    dend_45 { pt3dadd( -7.53358, 54.2127, -43.8979, 0.83 ) }
    dend_45 { pt3dadd( -7.65953, 55.8498, -44.3099, 0.83 ) }
    dend_45 { pt3dadd( -8.0372, 58.4485, -45.0473, 0.83 ) }
    dend_45 { pt3dadd( -8.08042, 58.6975, -45.1403, 0.83 ) }
    dend_45 { pt3dadd( -8.48538, 60.8528, -46.0851, 0.83 ) }
    dend_45 { pt3dadd( -8.61601, 61.6111, -46.4482, 0.83 ) }
    dend_45 { pt3dadd( -8.78581, 62.7613, -47.0179, 0.83 ) }
    dend_45 { pt3dadd( -8.97272, 64.7095, -48.0127, 0.83 ) }
    dend_45 { pt3dadd( -8.97764, 67.2423, -49.1208, 0.83 ) }
    dend_45 { pt3dadd( -8.91103, 68.1333, -49.5082, 0.83 ) }
    dend_45 { pt3dadd( -8.74664, 69.0719, -49.8818, 0.83 ) }
    dend_45 { pt3dadd( -8.59849, 69.7178, -50.1034, 0.83 ) }
    dend_45 { pt3dadd( -8.1577, 71.3615, -50.5203, 0.83 ) }
    dend_45 { pt3dadd( -7.5184, 73.6513, -50.8569, 0.83 ) }
    dend_45 { pt3dadd( -7.23812, 74.9115, -50.9042, 0.83 ) }
    dend_45 { pt3dadd( -7.0276, 76.3798, -50.9218, 0.83 ) }
    dend_45 { pt3dadd( -6.94224, 78.0707, -50.9014, 0.83 ) }
    dend_45 { pt3dadd( -7.01307, 79.701, -50.8949, 0.83 ) }
    dend_45 { pt3dadd( -7.23769, 81.5815, -50.9336, 0.83 ) }
    dend_45 { pt3dadd( -7.60858, 83.1455, -51.0433, 0.83 ) }
    dend_45 { pt3dadd( -8.07406, 84.6079, -51.1606, 0.83 ) }
    dend_45 { pt3dadd( -8.38973, 85.385, -51.2605, 0.83 ) }
    dend_45 { pt3dadd( -9.20518, 87.1259, -51.5548, 0.83 ) }
    dend_45 { pt3dadd( -9.93538, 88.5498, -52.0255, 0.83 ) }
    dend_45 { pt3dadd( -10.4163, 89.5346, -52.4815, 0.83 ) }
    dend_45 { pt3dadd( -10.7763, 90.5071, -53.0989, 0.83 ) }
    dend_45 { pt3dadd( -10.9101, 91.0811, -53.5133, 0.83 ) }
    dend_45 { pt3dadd( -10.9979, 91.5532, -53.8783, 0.83 ) }
    dend_45 { pt3dadd( -11.2283, 93.5798, -55.5461, 0.83 ) }
    dend_45 { pt3dadd( -11.2791, 94.6719, -56.5293, 1.11 ) }
    dend_45 { pt3dadd( -11.1672, 96.5772, -58.3628, 0.83 ) }
    dend_45 { pt3dadd( -11.0758, 97.2302, -59.072, 0.83 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 67/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -9.6533, 13.521, -39.9776, 0.55 ) }
    dend_40 { pt3dadd( -10.7794, 13.0582, -42.5878, 0.55 ) }
    dend_40 { pt3dadd( -13.5838, 11.6401, -48.237, 0.55 ) }
    dend_40 { pt3dadd( -14.3833, 11.1708, -49.6736, 0.55 ) }
    dend_40 { pt3dadd( -15.1482, 10.74, -50.9834, 0.55 ) }
    dend_40 { pt3dadd( -15.8655, 10.5032, -52.2487, 0.55 ) }
    dend_40 { pt3dadd( -18.2839, 9.77885, -57.2348, 0.55 ) }
    dend_40 { pt3dadd( -19.2531, 9.43995, -59.3758, 0.55 ) }
    dend_40 { pt3dadd( -19.8089, 9.253, -60.5467, 0.55 ) }
    dend_40 { pt3dadd( -21.3676, 8.73268, -64.2642, 0.55 ) }
    dend_40 { pt3dadd( -23.5857, 7.8818, -69.878, 1.11 ) }
    dend_40 { pt3dadd( -26.2315, 6.77216, -76.5328, 0.83 ) }
    dend_40 { pt3dadd( -26.87, 6.50753, -78.101, 0.83 ) }
    dend_40 { pt3dadd( -27.4757, 6.27576, -79.6777, 0.83 ) }
    dend_40 { pt3dadd( -30.0263, 5.20807, -86.5283, 0.83 ) }
    dend_40 { pt3dadd( -30.5275, 4.90692, -87.8654, 0.83 ) }
    dend_40 { pt3dadd( -31.2871, 4.21812, -89.74, 0.83 ) }
    dend_40 { pt3dadd( -31.508, 4.08167, -90.183, 0.83 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 85/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -12.904, 18.1741, 0.295387, 0.83 ) }
    dend_36 { pt3dadd( -13.7346, 20.6721, 1.60009, 0.83 ) }
    dend_36 { pt3dadd( -14.2873, 21.9321, 2.54046, 0.83 ) }
    dend_36 { pt3dadd( -14.7208, 22.8056, 3.28083, 0.83 ) }
    dend_36 { pt3dadd( -16.9917, 26.5215, 6.62101, 0.83 ) }
    dend_36 { pt3dadd( -18.0586, 28.0842, 7.98926, 0.83 ) }
    dend_36 { pt3dadd( -19.3572, 29.9235, 9.60576, 0.83 ) }
    dend_36 { pt3dadd( -22.5287, 34.1452, 13.5004, 0.83 ) }
    dend_36 { pt3dadd( -23.9562, 35.9259, 15.1327, 0.83 ) }
    dend_36 { pt3dadd( -25.7745, 38.1189, 17.1469, 0.83 ) }
    dend_36 { pt3dadd( -28.1111, 40.864, 19.5616, 0.83 ) }
    dend_36 { pt3dadd( -30.3254, 43.3193, 21.8743, 0.83 ) }
    dend_36 { pt3dadd( -30.9, 43.9346, 22.4526, 0.83 ) }
    dend_36 { pt3dadd( -31.6707, 44.8297, 23.0619, 0.83 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 99/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -12.904, 18.1741, 0.295387, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_35 { pt3dadd( -16.1489, 16.8683, 0.778066, 0.83 ) }
    dend_35 { pt3dadd( -21.18, 15.1334, 1.37015, 0.83 ) }
    dend_35 { pt3dadd( -22.9953, 14.4681, 1.52313, 0.83 ) }
    dend_35 { pt3dadd( -25.8499, 13.4546, 1.35503, 0.83 ) }
    dend_35 { pt3dadd( -27.3846, 12.9178, 1.11353, 0.83 ) }
    dend_35 { pt3dadd( -29.0912, 12.272, 0.751149, 0.83 ) }
    dend_35 { pt3dadd( -29.3499, 12.179, 0.672212, 0.83 ) }
    dend_35 { pt3dadd( -31.3796, 11.3188, -0.492855, 0.83 ) }
    dend_35 { pt3dadd( -34.544, 9.37117, -2.88565, 0.83 ) }
    dend_35 { pt3dadd( -36.1756, 7.97724, -4.37756, 0.83 ) }
    dend_35 { pt3dadd( -36.9788, 6.96904, -5.39201, 0.83 ) }
    dend_35 { pt3dadd( -38.1263, 5.02016, -7.23094, 0.83 ) }
    dend_35 { pt3dadd( -39.6411, 1.59087, -10.265, 0.83 ) }
    dend_35 { pt3dadd( -40.1199, 0.0291484, -11.5115, 0.83 ) }
    dend_35 { pt3dadd( -40.5808, -2.55614, -13.2197, 0.83 ) }
    dend_35 { pt3dadd( -41.0637, -7.14937, -15.9491, 0.83 ) }
    dend_35 { pt3dadd( -41.1437, -8.60595, -16.6923, 0.83 ) }
    dend_35 { pt3dadd( -41.1453, -11.4948, -17.8998, 0.83 ) }
    dend_35 { pt3dadd( -41.0948, -13.8702, -18.6776, 0.83 ) }
    dend_35 { pt3dadd( -40.9017, -16.8597, -19.5672, 0.83 ) }
    dend_35 { pt3dadd( -40.6432, -19.1174, -20.1238, 0.83 ) }
    dend_35 { pt3dadd( -40.1917, -22.3416, -20.7139, 0.83 ) }
    dend_35 { pt3dadd( -39.8556, -24.0188, -20.998, 0.83 ) }
    dend_35 { pt3dadd( -38.7171, -28.1078, -22.0633, 0.83 ) }
    dend_35 { pt3dadd( -38.1474, -29.7486, -22.6633, 0.83 ) }
    dend_35 { pt3dadd( -37.0667, -32.4799, -24.026, 0.83 ) }
    dend_35 { pt3dadd( -36.606, -33.5274, -24.6552, 0.83 ) }
    dend_35 { pt3dadd( -35.6677, -35.5655, -26.0221, 0.83 ) }
    dend_35 { pt3dadd( -33.1438, -41.0994, -29.7949, 0.83 ) }
    dend_35 { pt3dadd( -32.6303, -42.1678, -30.6972, 0.83 ) }
    dend_35 { pt3dadd( -31.5983, -44.3331, -32.7268, 0.28 ) }
    dend_35 { pt3dadd( -31.2626, -45.0168, -33.4244, 1.38 ) }
    dend_35 { pt3dadd( -30.3422, -46.9937, -35.4251, 0.28 ) }
    dend_35 { pt3dadd( -29.5965, -48.6302, -37.0137, 1.11 ) }
    dend_35 { pt3dadd( -27.2999, -53.7409, -41.3164, 0.28 ) }
    dend_35 { pt3dadd( -26.8066, -54.7711, -42.2366, 1.11 ) }
    dend_35 { pt3dadd( -26.6205, -55.1333, -42.5776, 1.11 ) }
    dend_35 { pt3dadd( -26.122, -56.1199, -43.528, 0.28 ) }
    dend_35 { pt3dadd( -25.886, -56.5679, -43.9421, 0.28 ) }
    dend_35 { pt3dadd( -25.331, -57.6773, -44.6894, 0.28 ) }
    dend_35 { pt3dadd( -24.7393, -58.9548, -45.2668, 1.66 ) }
    dend_35 { pt3dadd( -23.7811, -60.8808, -46.3027, 0.28 ) }
    dend_35 { pt3dadd( -23.3417, -61.7691, -46.8414, 0.55 ) }
    dend_35 { pt3dadd( -22.6622, -63.1433, -47.7255, 0.28 ) }
    dend_35 { pt3dadd( -22.0616, -64.2783, -48.4667, 0.55 ) }
    dend_35 { pt3dadd( -20.4134, -66.8447, -50.9746, 0.28 ) }
    dend_35 { pt3dadd( -20.0805, -67.3161, -51.5644, 0.28 ) }
    dend_35 { pt3dadd( -19.3999, -68.246, -52.89, 0.83 ) }
    dend_35 { pt3dadd( -18.7978, -69.1652, -54.2494, 0.83 ) }
    dend_35 { pt3dadd( -18.4972, -69.7458, -55.0763, 0.83 ) }
    dend_35 { pt3dadd( -17.0636, -73.8189, -60.1309, 0.28 ) }
    dend_35 { pt3dadd( -16.8699, -74.9377, -61.2114, 0.28 ) }
    dend_35 { pt3dadd( -16.8462, -75.4484, -61.6315, 0.55 ) }
    dend_35 { pt3dadd( -16.908, -77.1199, -62.8932, 0.28 ) }
    dend_35 { pt3dadd( -17.107, -78.6385, -63.9583, 0.55 ) }
    dend_35 { pt3dadd( -17.3656, -80.2113, -64.9206, 0.28 ) }
    dend_35 { pt3dadd( -17.5663, -81.8599, -65.6699, 0.55 ) }
    dend_35 { pt3dadd( -17.7102, -83.299, -66.4682, 0.28 ) }
    dend_35 { pt3dadd( -17.8414, -85.1444, -67.7029, 0.55 ) }
    dend_35 { pt3dadd( -17.8984, -86.1663, -68.4656, 0.28 ) }
    dend_35 { pt3dadd( -18.034, -87.9639, -70.0437, 0.83 ) }
    dend_35 { pt3dadd( -18.2038, -90.0683, -72.0571, 0.28 ) }
    dend_35 { pt3dadd( -18.5523, -92.7674, -74.6758, 1.11 ) }
    dend_35 { pt3dadd( -18.8891, -94.7672, -76.7037, 0.55 ) }
    dend_35 { pt3dadd( -19.0736, -95.7011, -77.6143, 0.83 ) }
    dend_35 { pt3dadd( -19.5059, -97.8315, -79.9046, 0.28 ) }
    dend_35 { pt3dadd( -19.6517, -98.4289, -80.5223, 0.28 ) }
    dend_35 { pt3dadd( -19.9849, -100.046, -82.1685, 0.55 ) }
    dend_35 { pt3dadd( -20.1576, -102.587, -84.4716, 0.28 ) }
    dend_35 { pt3dadd( -20.1663, -103.685, -85.4786, 0.55 ) }
    dend_35 { pt3dadd( -20.0775, -106.653, -88.1434, 0.28 ) }
    dend_35 { pt3dadd( -19.8871, -109.466, -90.6943, 0.55 ) }
    dend_35 { pt3dadd( -19.7569, -111.6, -92.8154, 0.28 ) }
    dend_35 { pt3dadd( -19.6809, -112.664, -93.9238, 0.55 ) }
    dend_35 { pt3dadd( -19.6001, -115.315, -96.5373, 0.28 ) }
    dend_35 { pt3dadd( -19.658, -116.966, -98.0943, 0.55 ) }
    dend_35 { pt3dadd( -19.8378, -118.595, -99.4517, 0.55 ) }
    dend_35 { pt3dadd( -20.1961, -120.512, -101.018, 0.28 ) }
    dend_35 { pt3dadd( -20.4311, -121.4, -101.536, 0.55 ) }
    dend_35 { pt3dadd( -20.8348, -122.787, -102.111, 0.28 ) }
    dend_35 { pt3dadd( -21.371, -124.672, -102.751, 0.55 ) }
    dend_35 { pt3dadd( -21.7354, -126.006, -103.227, 0.28 ) }
    dend_35 { pt3dadd( -22.1412, -127.547, -103.741, 0.55 ) }
    dend_35 { pt3dadd( -22.4962, -129.165, -104.3, 0.28 ) }
    dend_35 { pt3dadd( -22.6136, -129.755, -104.534, 0.55 ) }
    dend_35 { pt3dadd( -23.0838, -133.318, -106.486, 0.28 ) }
    dend_35 { pt3dadd( -23.1168, -133.872, -106.827, 0.55 ) }
    dend_35 { pt3dadd( -23.1454, -134.94, -107.488, 0.28 ) }
    dend_35 { pt3dadd( -23.2029, -136.633, -108.532, 0.55 ) }
    dend_35 { pt3dadd( -23.3153, -138.45, -109.586, 0.28 ) }
    dend_35 { pt3dadd( -23.5269, -141.73, -111.18, 0.28 ) }
    dend_35 { pt3dadd( -23.6528, -143.428, -111.858, 0.28 ) }
    dend_35 { pt3dadd( -23.8468, -145.335, -112.589, 0.55 ) }
    dend_35 { pt3dadd( -24.2596, -149.398, -114.06, 0.28 ) }
    dend_35 { pt3dadd( -24.4517, -151.137, -114.665, 0.55 ) }
    dend_35 { pt3dadd( -24.6703, -153.323, -115.348, 0.28 ) }
    dend_35 { pt3dadd( -24.7444, -154.106, -115.587, 0.55 ) }
    dend_35 { pt3dadd( -25.0705, -158.59, -117.069, 0.28 ) }
    dend_35 { pt3dadd( -25.1261, -160.255, -117.634, 0.83 ) }
    dend_35 { pt3dadd( -25.1687, -166.089, -119.621, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( -25.1569, -167.73, -120.21, 0.55 ) }
    dend_35 { pt3dadd( -25.0666, -170.763, -121.391, 0.28 ) }
    dend_35 { pt3dadd( -25.015, -172.216, -121.953, 0.55 ) }
    dend_35 { pt3dadd( -24.9547, -174.158, -122.643, 0.28 ) }
    dend_35 { pt3dadd( -24.9665, -175.155, -122.962, 0.55 ) }
    dend_35 { pt3dadd( -25.0189, -176.16, -123.251, 0.55 ) }
    dend_35 { pt3dadd( -25.1916, -177.893, -123.729, 0.28 ) }
    dend_35 { pt3dadd( -25.4388, -179.661, -124.14, 0.55 ) }
    dend_35 { pt3dadd( -26.1467, -183.911, -125.174, 0.28 ) }
    dend_35 { pt3dadd( -26.5569, -186.084, -125.686, 0.55 ) }
    dend_35 { pt3dadd( -26.92, -188.109, -126.228, 0.28 ) }
    dend_35 { pt3dadd( -27.2277, -189.705, -126.693, 0.55 ) }
    dend_35 { pt3dadd( -27.5493, -191.298, -127.125, 0.28 ) }
    dend_35 { pt3dadd( -27.7492, -192.429, -127.491, 0.55 ) }
    dend_35 { pt3dadd( -28.02, -193.846, -128.02, 0.28 ) }
    dend_35 { pt3dadd( -28.4226, -196.257, -128.937, 0.55 ) }
    dend_35 { pt3dadd( -28.7188, -198.216, -129.638, 0.28 ) }
    dend_35 { pt3dadd( -28.9514, -200.091, -130.41, 0.83 ) }
    dend_35 { pt3dadd( -29.3127, -204.147, -132.181, 0.28 ) }
    dend_35 { pt3dadd( -29.3468, -204.734, -132.421, 0.55 ) }
    dend_35 { pt3dadd( -29.3673, -206.401, -133.017, 0.28 ) }
    dend_35 { pt3dadd( -29.2892, -208.207, -133.503, 0.55 ) }
    dend_35 { pt3dadd( -28.9626, -210.756, -134.013, 0.28 ) }
    dend_35 { pt3dadd( -28.7281, -211.888, -134.258, 0.55 ) }
    dend_35 { pt3dadd( -28.0974, -213.903, -134.595, 0.28 ) }
    dend_35 { pt3dadd( -27.5101, -215.502, -134.872, 0.28 ) }
    dend_35 { pt3dadd( -26.87, -217.109, -135.134, 0.55 ) }
    dend_35 { pt3dadd( -25.5929, -219.987, -135.534, 0.28 ) }
    dend_35 { pt3dadd( -24.174, -223.037, -135.819, 0.55 ) }
    dend_35 { pt3dadd( -23.0225, -225.375, -136.155, 0.28 ) }
    dend_35 { pt3dadd( -22.76, -225.873, -136.28, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_9 (entry count 31/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -0.304313, -27.7091, -8.79, 2.77 ) }
    dend_21 { pt3dadd( -0.182711, -28.8962, -8.78952, 2.77 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -0.304313, -27.7091, -8.79, 0.83 ) }
    dend_10 { pt3dadd( -3.37836, -33.0031, -9.9907, 0.83 ) }
    dend_10 { pt3dadd( -5.01067, -35.8142, -10.6283, 1.11 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 36/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 5.66388, 58.5826, 6.96155, 0.55 ) }
    dend_2 { pt3dadd( 4.91353, 60.7496, 7.15989, 0.55 ) }
    dend_2 { pt3dadd( 3.64364, 64.4171, 7.49556, 0.55 ) }
    dend_2 { pt3dadd( 3.05399, 66.12, 7.65142, 0.55 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 40/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 5.66388, 58.5826, 6.96155, 0.55 ) }
    dend_1 { pt3dadd( 6.52557, 59.7395, 7.14034, 0.55 ) }
    dend_1 { pt3dadd( 7.47886, 60.9306, 7.33096, 0.55 ) }
    dend_1 { pt3dadd( 8.08614, 61.6531, 7.44061, 0.55 ) }
    dend_1 { pt3dadd( 9.71496, 63.606, 7.70474, 0.55 ) }
    dend_1 { pt3dadd( 10.7936, 65.0397, 7.87432, 0.55 ) }
    dend_1 { pt3dadd( 11.9868, 66.7306, 8.04474, 0.55 ) }
    dend_1 { pt3dadd( 13.0411, 68.3407, 8.16732, 0.55 ) }
    dend_1 { pt3dadd( 14.0438, 70.0769, 8.35168, 0.55 ) }
    dend_1 { pt3dadd( 15.1281, 72.0948, 8.61309, 0.55 ) }
    dend_1 { pt3dadd( 15.9635, 73.8001, 8.91325, 0.55 ) }
    dend_1 { pt3dadd( 16.6714, 75.5329, 9.28177, 0.55 ) }
    dend_1 { pt3dadd( 17.265, 77.2352, 9.67596, 0.55 ) }
    dend_1 { pt3dadd( 17.9299, 79.4924, 10.2261, 0.55 ) }
    dend_1 { pt3dadd( 18.298, 80.9013, 10.586, 0.55 ) }
    dend_1 { pt3dadd( 18.75, 82.6011, 11.0327, 0.55 ) }
    dend_1 { pt3dadd( 19.2242, 84.3533, 11.4857, 0.55 ) }
    dend_1 { pt3dadd( 19.7139, 86.2465, 11.9385, 0.55 ) }
    dend_1 { pt3dadd( 20.3796, 88.6573, 12.4556, 0.55 ) }
    dend_1 { pt3dadd( 20.6531, 89.4633, 12.5993, 0.55 ) }
    dend_1 { pt3dadd( 21.1195, 90.7996, 12.8773, 0.55 ) }
    dend_1 { pt3dadd( 21.5567, 92.0009, 13.1352, 0.55 ) }
    dend_1 { pt3dadd( 22.1382, 93.5962, 13.5747, 0.55 ) }
    dend_1 { pt3dadd( 23.0426, 96.1794, 14.5015, 0.55 ) }
    dend_1 { pt3dadd( 23.6696, 98.0157, 15.279, 0.55 ) }
    dend_1 { pt3dadd( 24.4559, 100.097, 16.2409, 0.55 ) }
    dend_1 { pt3dadd( 25.1442, 101.756, 17.0234, 0.55 ) }
    dend_1 { pt3dadd( 26.0786, 103.793, 17.9749, 0.55 ) }
    dend_1 { pt3dadd( 27.4034, 106.429, 19.1827, 0.55 ) }
    dend_1 { pt3dadd( 28.6728, 108.71, 20.2005, 0.55 ) }
    dend_1 { pt3dadd( 30.1109, 111.057, 21.1867, 0.55 ) }
    dend_1 { pt3dadd( 31.5704, 113.275, 22.0011, 0.55 ) }
    dend_1 { pt3dadd( 32.5989, 114.788, 22.4981, 0.55 ) }
    dend_1 { pt3dadd( 33.9472, 116.732, 22.9881, 0.55 ) }
    dend_1 { pt3dadd( 35.4595, 118.876, 23.3879, 0.55 ) }
    dend_1 { pt3dadd( 36.4698, 120.381, 23.6079, 0.55 ) }
    dend_1 { pt3dadd( 37.4342, 121.993, 23.8002, 0.55 ) }
    dend_1 { pt3dadd( 38.0418, 123.076, 23.9243, 0.55 ) }
    dend_1 { pt3dadd( 39.032, 124.96, 24.1065, 0.55 ) }
    dend_1 { pt3dadd( 39.7677, 126.509, 24.1965, 0.55 ) }
    dend_1 { pt3dadd( 40.4475, 127.953, 24.2102, 0.28 ) }
    dend_1 { pt3dadd( 40.7654, 128.646, 24.227, 0.55 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 82/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -1.09819, 42.3721, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -1.58341, 57.3643, 0.0, 0.28 ) }
    axon_1 { pt3dadd( -2.06863, 72.3564, 0.0, 0.28 ) }
    // Section: dend_54, id: dend_54, parent: dend_52 (entry count 85/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( 27.8801, -147.074, 20.0195, 0.28 ) }
    dend_54 { pt3dadd( 28.0943, -149.575, 19.5953, 0.28 ) }
    dend_54 { pt3dadd( 28.169, -152.078, 19.2021, 0.55 ) }
    dend_54 { pt3dadd( 28.18, -156.153, 18.2876, 0.28 ) }
    dend_54 { pt3dadd( 28.1432, -158.43, 17.7116, 0.55 ) }
    dend_54 { pt3dadd( 28.0485, -162.069, 16.7601, 0.28 ) }
    dend_54 { pt3dadd( 28.0418, -162.373, 16.6824, 0.55 ) }
    dend_54 { pt3dadd( 27.9916, -166.095, 15.4817, 0.28 ) }
    dend_54 { pt3dadd( 28.0359, -169.443, 14.1859, 0.55 ) }
    dend_54 { pt3dadd( 28.1381, -170.873, 13.6152, 0.55 ) }
    dend_54 { pt3dadd( 28.3857, -172.725, 12.7352, 0.55 ) }
    dend_54 { pt3dadd( 28.8091, -174.935, 11.5743, 0.55 ) }
    dend_54 { pt3dadd( 29.7892, -179.022, 9.61644, 0.28 ) }
    dend_54 { pt3dadd( 30.5115, -181.315, 8.63377, 0.28 ) }
    dend_54 { pt3dadd( 31.174, -183.361, 8.03787, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_54 { pt3dadd( 31.9661, -185.834, 7.52418, 0.55 ) }
    dend_54 { pt3dadd( 32.4377, -187.283, 7.35917, 0.55 ) }
    dend_54 { pt3dadd( 33.5764, -191.1, 7.34993, 0.28 ) }
    dend_54 { pt3dadd( 33.8838, -192.276, 7.47313, 0.55 ) }
    dend_54 { pt3dadd( 35.0027, -197.076, 8.14357, 0.28 ) }
    dend_54 { pt3dadd( 35.5554, -199.828, 8.5661, 0.28 ) }
    dend_54 { pt3dadd( 36.1145, -203.133, 9.1021, 0.28 ) }
    dend_54 { pt3dadd( 36.3609, -204.857, 9.31173, 0.55 ) }
    dend_54 { pt3dadd( 36.4293, -205.536, 9.34557, 0.55 ) }
    dend_54 { pt3dadd( 36.5605, -207.882, 9.4175, 0.28 ) }
    dend_54 { pt3dadd( 36.5835, -208.573, 9.425, 0.55 ) }
    dend_54 { pt3dadd( 36.6121, -211.183, 9.24667, 0.28 ) }
    dend_54 { pt3dadd( 36.6189, -211.787, 9.16089, 0.55 ) }
    dend_54 { pt3dadd( 36.879, -214.962, 8.70137, 0.28 ) }
    dend_54 { pt3dadd( 37.1202, -216.726, 8.48115, 0.55 ) }
    dend_54 { pt3dadd( 37.3232, -218.008, 8.34234, 0.55 ) }
    dend_54 { pt3dadd( 37.7737, -220.756, 8.38627, 0.28 ) }
    dend_54 { pt3dadd( 37.9038, -221.656, 8.51589, 0.55 ) }
    dend_54 { pt3dadd( 38.0079, -224.816, 9.33059, 0.28 ) }
    dend_54 { pt3dadd( 37.9791, -225.394, 9.52525, 0.55 ) }
    dend_54 { pt3dadd( 37.8431, -227.056, 10.1927, 0.28 ) }
    dend_54 { pt3dadd( 37.2795, -231.207, 12.0777, 0.28 ) }
    dend_54 { pt3dadd( 37.1301, -232.054, 12.5375, 0.55 ) }
    dend_54 { pt3dadd( 36.1314, -236.265, 14.7814, 0.28 ) }
    dend_54 { pt3dadd( 35.484, -238.304, 15.7523, 0.55 ) }
    // Section: dend_53, id: dend_53, parent: dend_52 (entry count 25/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( 27.8801, -147.074, 20.0195, 0.28 ) }
    dend_53 { pt3dadd( 30.4579, -148.521, 20.9868, 0.28 ) }
    dend_53 { pt3dadd( 31.1176, -148.918, 21.1532, 0.55 ) }
    dend_53 { pt3dadd( 32.7634, -149.992, 21.4868, 0.28 ) }
    dend_53 { pt3dadd( 33.4161, -150.418, 21.6191, 0.55 ) }
    dend_53 { pt3dadd( 35.0717, -151.498, 21.9547, 0.28 ) }
    dend_53 { pt3dadd( 35.834, -151.995, 22.1093, 0.55 ) }
    dend_53 { pt3dadd( 38.5834, -153.733, 22.5901, 0.28 ) }
    dend_53 { pt3dadd( 39.4968, -154.335, 22.6908, 0.55 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 34/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -11.0758, 97.2302, -59.072, 0.83 ) }
    dend_47 { pt3dadd( -10.0061, 101.463, -58.9165, 0.83 ) }
    dend_47 { pt3dadd( -9.25228, 104.94, -58.7746, 0.83 ) }
    dend_47 { pt3dadd( -8.42184, 109.005, -58.6085, 0.83 ) }
    dend_47 { pt3dadd( -7.79053, 112.411, -58.4763, 0.28 ) }
    dend_47 { pt3dadd( -7.43852, 114.531, -58.3976, 0.55 ) }
    dend_47 { pt3dadd( -7.06404, 116.963, -58.312, 0.28 ) }
    dend_47 { pt3dadd( -6.59742, 120.581, -58.1238, 0.55 ) }
    dend_47 { pt3dadd( -6.47242, 122.025, -58.0854, 0.28 ) }
    dend_47 { pt3dadd( -6.42495, 124.612, -58.1081, 0.55 ) }
    dend_47 { pt3dadd( -6.41405, 125.565, -58.1424, 0.28 ) }
    dend_47 { pt3dadd( -6.37632, 127.286, -58.1651, 0.83 ) }
    dend_47 { pt3dadd( -6.30433, 129.472, -58.1533, 0.28 ) }
    dend_47 { pt3dadd( -6.15273, 132.053, -58.0591, 0.83 ) }
    dend_47 { pt3dadd( -5.80368, 136.464, -57.6256, 0.55 ) }
    dend_47 { pt3dadd( -5.46891, 139.559, -57.1246, 0.28 ) }
    dend_47 { pt3dadd( -5.24673, 141.321, -56.7948, 0.55 ) }
    dend_47 { pt3dadd( -5.14284, 142.052, -56.6269, 0.28 ) }
    dend_47 { pt3dadd( -4.78783, 144.041, -56.0304, 0.55 ) }
    dend_47 { pt3dadd( -4.26036, 146.581, -55.0404, 0.28 ) }
    dend_47 { pt3dadd( -3.86449, 148.343, -54.0479, 0.83 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 55/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -11.0758, 97.2302, -59.072, 0.28 ) }
    dend_46 { pt3dadd( -11.9479, 98.3255, -60.1102, 0.28 ) }
    dend_46 { pt3dadd( -12.5353, 99.5795, -61.3269, 0.28 ) }
    dend_46 { pt3dadd( -12.7094, 99.9934, -61.7457, 0.55 ) }
    dend_46 { pt3dadd( -13.3595, 101.379, -63.1699, 0.28 ) }
    dend_46 { pt3dadd( -13.9049, 102.35, -64.1551, 0.55 ) }
    dend_46 { pt3dadd( -14.3858, 103.184, -65.2255, 0.55 ) }
    dend_46 { pt3dadd( -15.3642, 104.814, -67.7903, 0.28 ) }
    dend_46 { pt3dadd( -15.764, 105.395, -68.8454, 0.28 ) }
    dend_46 { pt3dadd( -16.2562, 106.058, -70.0833, 0.55 ) }
    dend_46 { pt3dadd( -16.8044, 106.823, -71.5055, 0.55 ) }
    dend_46 { pt3dadd( -18.2584, 109.273, -75.9669, 0.28 ) }
    dend_46 { pt3dadd( -18.5428, 109.781, -76.8594, 0.55 ) }
    dend_46 { pt3dadd( -18.855, 110.32, -77.7631, 0.28 ) }
    dend_46 { pt3dadd( -19.036, 110.727, -78.3781, 0.55 ) }
    dend_46 { pt3dadd( -19.7718, 112.656, -80.9525, 0.28 ) }
    dend_46 { pt3dadd( -20.3168, 114.248, -82.6724, 0.55 ) }
    dend_46 { pt3dadd( -20.6244, 115.101, -83.3758, 0.28 ) }
    dend_46 { pt3dadd( -20.8118, 115.64, -83.8195, 0.55 ) }
    dend_46 { pt3dadd( -21.0677, 116.399, -84.4337, 0.28 ) }
    dend_46 { pt3dadd( -21.4829, 117.655, -85.3402, 0.55 ) }
    dend_46 { pt3dadd( -21.8275, 118.577, -85.9302, 0.28 ) }
    dend_46 { pt3dadd( -22.3635, 120.016, -86.9056, 0.28 ) }
    dend_46 { pt3dadd( -22.9394, 121.625, -88.0646, 0.28 ) }
    dend_46 { pt3dadd( -23.3773, 122.725, -88.914, 0.28 ) }
    dend_46 { pt3dadd( -23.6738, 123.402, -89.4509, 0.55 ) }
    dend_46 { pt3dadd( -24.7497, 125.508, -90.9899, 0.55 ) }
    dend_46 { pt3dadd( -25.5736, 126.882, -91.8888, 0.83 ) }
    dend_46 { pt3dadd( -26.0943, 127.647, -92.3146, 0.83 ) }
    dend_46 { pt3dadd( -28.0647, 130.309, -93.5926, 0.55 ) }
    dend_46 { pt3dadd( -28.8645, 131.306, -94.0547, 0.83 ) }
    dend_46 { pt3dadd( -30.4109, 133.133, -94.8182, 0.28 ) }
    dend_46 { pt3dadd( -31.2311, 134.058, -95.1199, 0.28 ) }
    dend_46 { pt3dadd( -31.7767, 134.644, -95.2855, 0.28 ) }
    dend_46 { pt3dadd( -32.932, 135.847, -95.6042, 0.28 ) }
    dend_46 { pt3dadd( -34.0909, 136.968, -95.8886, 0.55 ) }
    dend_46 { pt3dadd( -34.7619, 137.567, -96.1033, 0.55 ) }
    dend_46 { pt3dadd( -35.7832, 138.363, -96.5181, 0.55 ) }
    dend_46 { pt3dadd( -36.8206, 139.037, -96.9244, 0.55 ) }
    dend_46 { pt3dadd( -37.3925, 139.354, -97.1399, 0.28 ) }
    dend_46 { pt3dadd( -38.6351, 139.921, -97.5891, 0.55 ) }
    dend_46 { pt3dadd( -40.0253, 140.537, -98.1893, 0.55 ) }
    dend_46 { pt3dadd( -41.5302, 141.228, -98.9835, 0.83 ) }
    dend_46 { pt3dadd( -42.2769, 141.56, -99.3762, 0.28 ) }
    dend_46 { pt3dadd( -43.0301, 141.905, -99.7684, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_46 { pt3dadd( -43.9141, 142.335, -100.222, 0.55 ) }
    dend_46 { pt3dadd( -45.9884, 143.412, -101.223, 0.55 ) }
    dend_46 { pt3dadd( -47.5088, 144.195, -101.931, 0.55 ) }
    dend_46 { pt3dadd( -49.2215, 145.035, -102.68, 0.28 ) }
    dend_46 { pt3dadd( -50.3315, 145.558, -103.131, 0.28 ) }
    dend_46 { pt3dadd( -51.398, 146.086, -103.559, 0.28 ) }
    dend_46 { pt3dadd( -51.8889, 146.337, -103.749, 0.55 ) }
    dend_46 { pt3dadd( -53.7896, 147.257, -104.435, 0.28 ) }
    dend_46 { pt3dadd( -55.1537, 147.912, -105.031, 0.28 ) }
    dend_46 { pt3dadd( -56.3817, 148.532, -105.577, 0.83 ) }
    dend_46 { pt3dadd( -57.6388, 149.178, -106.058, 0.28 ) }
    dend_46 { pt3dadd( -58.6065, 149.678, -106.369, 0.28 ) }
    dend_46 { pt3dadd( -59.6012, 150.184, -106.635, 0.28 ) }
    dend_46 { pt3dadd( -60.394, 150.598, -106.795, 0.55 ) }
    dend_46 { pt3dadd( -62.4539, 151.584, -107.159, 0.28 ) }
    dend_46 { pt3dadd( -63.4918, 151.998, -107.332, 0.55 ) }
    dend_46 { pt3dadd( -65.0075, 152.553, -107.587, 0.28 ) }
    dend_46 { pt3dadd( -65.9869, 152.945, -107.773, 0.55 ) }
    dend_46 { pt3dadd( -66.9261, 153.358, -107.99, 0.28 ) }
    dend_46 { pt3dadd( -68.1401, 153.901, -108.291, 0.28 ) }
    dend_46 { pt3dadd( -69.071, 154.314, -108.559, 0.28 ) }
    dend_46 { pt3dadd( -70.6552, 155.054, -108.883, 0.55 ) }
    dend_46 { pt3dadd( -71.5385, 155.535, -109.012, 0.55 ) }
    dend_46 { pt3dadd( -72.9419, 156.36, -109.161, 0.55 ) }
    dend_46 { pt3dadd( -74.4905, 157.248, -109.296, 0.28 ) }
    dend_46 { pt3dadd( -75.4205, 157.779, -109.285, 0.55 ) }
    dend_46 { pt3dadd( -76.9599, 158.658, -109.156, 0.28 ) }
    dend_46 { pt3dadd( -78.2267, 159.274, -108.98, 0.28 ) }
    dend_46 { pt3dadd( -79.0384, 159.655, -108.814, 0.28 ) }
    dend_46 { pt3dadd( -80.1853, 160.181, -108.527, 0.28 ) }
    dend_46 { pt3dadd( -82.3474, 161.025, -108.054, 0.55 ) }
    dend_46 { pt3dadd( -84.0074, 161.59, -107.764, 0.28 ) }
    dend_46 { pt3dadd( -85.5813, 161.995, -107.652, 0.55 ) }
    dend_46 { pt3dadd( -87.3832, 162.338, -107.65, 0.55 ) }
    dend_46 { pt3dadd( -87.8777, 162.434, -107.684, 0.28 ) }
    dend_46 { pt3dadd( -89.6767, 162.803, -107.977, 0.55 ) }
    dend_46 { pt3dadd( -90.9927, 163.072, -108.225, 0.55 ) }
    dend_46 { pt3dadd( -92.6484, 163.391, -108.457, 0.28 ) }
    dend_46 { pt3dadd( -93.8773, 163.714, -108.597, 0.55 ) }
    dend_46 { pt3dadd( -95.1482, 164.146, -108.656, 0.28 ) }
    dend_46 { pt3dadd( -96.4396, 164.777, -108.574, 0.28 ) }
    dend_46 { pt3dadd( -98.7206, 166.147, -108.245, 0.55 ) }
    dend_46 { pt3dadd( -100.121, 167.108, -108.039, 0.28 ) }
    dend_46 { pt3dadd( -101.353, 168.037, -107.864, 0.28 ) }
    dend_46 { pt3dadd( -103.063, 169.417, -107.668, 0.55 ) }
    dend_46 { pt3dadd( -106.079, 171.889, -107.545, 0.28 ) }
    dend_46 { pt3dadd( -106.47, 172.207, -107.57, 0.55 ) }
    dend_46 { pt3dadd( -108.602, 173.93, -107.981, 0.28 ) }
    dend_46 { pt3dadd( -109.165, 174.379, -108.128, 0.55 ) }
    dend_46 { pt3dadd( -109.763, 174.802, -108.328, 0.28 ) }
    dend_46 { pt3dadd( -111.22, 175.731, -108.934, 0.55 ) }
    dend_46 { pt3dadd( -113.12, 176.802, -109.789, 0.28 ) }
    dend_46 { pt3dadd( -113.989, 177.275, -110.154, 0.55 ) }
    dend_46 { pt3dadd( -115.074, 177.84, -110.574, 0.28 ) }
    dend_46 { pt3dadd( -116.603, 178.658, -111.156, 0.55 ) }
    dend_46 { pt3dadd( -119.67, 180.259, -112.298, 0.28 ) }
    dend_46 { pt3dadd( -120.152, 180.512, -112.464, 0.55 ) }
    dend_46 { pt3dadd( -122.225, 181.528, -113.15, 0.28 ) }
    dend_46 { pt3dadd( -123.179, 181.958, -113.461, 0.55 ) }
    dend_46 { pt3dadd( -124.089, 182.318, -113.71, 0.28 ) }
    dend_46 { pt3dadd( -125.443, 182.788, -114.045, 0.55 ) }
    dend_46 { pt3dadd( -126.868, 183.159, -114.377, 0.28 ) }
    dend_46 { pt3dadd( -128.621, 183.531, -114.788, 0.28 ) }
    dend_46 { pt3dadd( -130.801, 183.911, -115.301, 0.28 ) }
    dend_46 { pt3dadd( -133.019, 184.242, -115.8, 0.55 ) }
    dend_46 { pt3dadd( -134.972, 184.469, -116.294, 0.28 ) }
    dend_46 { pt3dadd( -136.304, 184.588, -116.679, 0.28 ) }
    dend_46 { pt3dadd( -138.341, 184.683, -117.335, 0.28 ) }
    dend_46 { pt3dadd( -139.059, 184.693, -117.594, 0.28 ) }
    dend_46 { pt3dadd( -140.247, 184.668, -118.118, 0.55 ) }
    dend_46 { pt3dadd( -141.866, 184.62, -118.986, 0.28 ) }
    dend_46 { pt3dadd( -143.626, 184.516, -120.013, 0.28 ) }
    dend_46 { pt3dadd( -144.423, 184.458, -120.518, 0.55 ) }
    dend_46 { pt3dadd( -145.294, 184.431, -121.07, 0.28 ) }
    dend_46 { pt3dadd( -146.324, 184.453, -121.71, 0.55 ) }
    dend_46 { pt3dadd( -148.431, 184.575, -123.052, 0.55 ) }
    dend_46 { pt3dadd( -149.847, 184.713, -123.895, 0.28 ) }
    dend_46 { pt3dadd( -150.16, 184.759, -124.086, 0.55 ) }
    dend_46 { pt3dadd( -152.454, 185.189, -125.474, 0.28 ) }
    dend_46 { pt3dadd( -152.941, 185.301, -125.727, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 80/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -31.508, 4.08167, -90.183, 0.55 ) }
    dend_44 { pt3dadd( -33.5368, 2.287, -100.512, 0.55 ) }
    dend_44 { pt3dadd( -33.8092, 2.17706, -101.792, 0.55 ) }
    dend_44 { pt3dadd( -34.3636, 2.23058, -104.312, 0.55 ) }
    dend_44 { pt3dadd( -35.656, 2.69878, -110.04, 0.55 ) }
    dend_44 { pt3dadd( -36.0844, 2.92464, -111.899, 0.55 ) }
    dend_44 { pt3dadd( -38.1133, 4.34717, -120.76, 0.55 ) }
    dend_44 { pt3dadd( -38.5828, 4.8243, -122.669, 0.55 ) }
    dend_44 { pt3dadd( -40.1431, 6.76395, -129.077, 0.28 ) }
    dend_44 { pt3dadd( -40.4664, 7.22756, -130.394, 0.55 ) }
    dend_44 { pt3dadd( -40.6276, 7.45018, -131.069, 0.55 ) }
    dend_44 { pt3dadd( -41.8688, 9.00643, -136.47, 0.55 ) }
    dend_44 { pt3dadd( -42.894, 9.84818, -140.547, 0.55 ) }
    dend_44 { pt3dadd( -43.2237, 10.0343, -141.796, 0.55 ) }
    dend_44 { pt3dadd( -43.9701, 10.2688, -144.371, 0.55 ) }
    dend_44 { pt3dadd( -47.8771, 10.8615, -156.734, 0.28 ) }
    dend_44 { pt3dadd( -48.31, 10.8867, -158.056, 0.55 ) }
    dend_44 { pt3dadd( -49.0819, 10.8659, -160.244, 0.28 ) }
    dend_44 { pt3dadd( -49.4058, 10.8543, -161.08, 0.55 ) }
    dend_44 { pt3dadd( -51.4511, 10.7413, -165.911, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( -52.0439, 10.7166, -167.102, 0.55 ) }
    dend_44 { pt3dadd( -57.9036, 10.6985, -176.722, 0.28 ) }
    dend_44 { pt3dadd( -58.4322, 10.7049, -177.59, 0.55 ) }
    dend_44 { pt3dadd( -59.6368, 10.7849, -179.573, 0.28 ) }
    dend_44 { pt3dadd( -60.0194, 10.809, -180.166, 0.55 ) }
    dend_44 { pt3dadd( -62.3953, 10.9869, -183.351, 0.28 ) }
    dend_44 { pt3dadd( -63.4394, 11.0882, -184.69, 0.55 ) }
    dend_44 { pt3dadd( -64.4192, 11.1859, -185.75, 0.55 ) }
    dend_44 { pt3dadd( -68.1579, 11.93, -189.954, 0.55 ) }
    dend_44 { pt3dadd( -69.0882, 12.19, -191.016, 0.55 ) }
    dend_44 { pt3dadd( -70.0127, 12.547, -192.048, 0.55 ) }
    dend_44 { pt3dadd( -73.4929, 14.2883, -195.543, 0.28 ) }
    dend_44 { pt3dadd( -74.1739, 14.6878, -196.168, 0.55 ) }
    dend_44 { pt3dadd( -76.7352, 16.4193, -198.307, 0.28 ) }
    dend_44 { pt3dadd( -77.4541, 16.9423, -198.814, 0.55 ) }
    dend_44 { pt3dadd( -79.8449, 18.7685, -200.344, 0.28 ) }
    dend_44 { pt3dadd( -81.5676, 20.0869, -201.265, 0.28 ) }
    dend_44 { pt3dadd( -82.2971, 20.6508, -201.542, 0.55 ) }
    dend_44 { pt3dadd( -84.099, 22.0181, -202.23, 0.28 ) }
    dend_44 { pt3dadd( -84.6603, 22.4165, -202.425, 0.55 ) }
    dend_44 { pt3dadd( -86.1027, 23.4352, -202.86, 0.28 ) }
    dend_44 { pt3dadd( -86.4781, 23.6888, -202.887, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 22/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -31.508, 4.08167, -90.183, 0.28 ) }
    dend_41 { pt3dadd( -31.0001, 2.60189, -90.8178, 0.28 ) }
    dend_41 { pt3dadd( -30.6134, 1.26565, -91.6006, 0.83 ) }
    dend_41 { pt3dadd( -30.2988, 0.209578, -92.2495, 0.28 ) }
    dend_41 { pt3dadd( -29.7216, -1.56539, -93.4424, 0.83 ) }
    dend_41 { pt3dadd( -28.6895, -4.68836, -95.5677, 0.28 ) }
    dend_41 { pt3dadd( -28.2622, -5.95115, -96.4536, 0.83 ) }
    dend_41 { pt3dadd( -27.5194, -8.16324, -98.1476, 0.28 ) }
    dend_41 { pt3dadd( -26.9607, -9.82079, -99.4868, 0.83 ) }
    dend_41 { pt3dadd( -26.257, -11.7159, -101.092, 0.28 ) }
    dend_41 { pt3dadd( -25.7919, -12.8066, -102.033, 0.83 ) }
    dend_41 { pt3dadd( -25.1176, -14.2392, -103.093, 0.28 ) }
    dend_41 { pt3dadd( -25.0193, -14.406, -103.207, 0.55 ) }
    dend_41 { pt3dadd( -24.5829, -15.005, -103.527, 0.28 ) }
    dend_41 { pt3dadd( -24.2046, -15.4681, -103.719, 0.55 ) }
    dend_41 { pt3dadd( -23.5689, -16.1813, -103.941, 0.28 ) }
    dend_41 { pt3dadd( -22.5202, -17.2942, -104.259, 1.38 ) }
    dend_41 { pt3dadd( -20.9772, -18.9314, -104.685, 0.28 ) }
    dend_41 { pt3dadd( -19.9842, -20.0, -104.965, 0.28 ) }
    dend_41 { pt3dadd( -18.13, -21.9179, -105.349, 1.38 ) }
    dend_41 { pt3dadd( -16.9981, -23.0451, -105.51, 0.28 ) }
    dend_41 { pt3dadd( -16.8439, -23.2018, -105.534, 0.55 ) }
    dend_41 { pt3dadd( -16.0504, -24.0174, -105.65, 0.28 ) }
    dend_41 { pt3dadd( -15.1131, -24.9766, -105.811, 0.55 ) }
    dend_41 { pt3dadd( -13.2488, -26.9447, -106.252, 0.28 ) }
    dend_41 { pt3dadd( -12.5162, -27.7222, -106.508, 0.83 ) }
    dend_41 { pt3dadd( -10.7573, -29.7406, -107.154, 0.28 ) }
    dend_41 { pt3dadd( -10.0906, -30.5772, -107.418, 0.83 ) }
    dend_41 { pt3dadd( -9.16928, -31.8301, -107.792, 0.28 ) }
    dend_41 { pt3dadd( -8.80117, -32.3229, -107.93, 0.55 ) }
    dend_41 { pt3dadd( -7.45299, -34.1073, -108.384, 0.28 ) }
    dend_41 { pt3dadd( -6.13326, -35.7783, -108.697, 0.55 ) }
    dend_41 { pt3dadd( -4.68409, -37.4455, -108.912, 1.66 ) }
    dend_41 { pt3dadd( -3.03298, -39.2383, -109.107, 0.28 ) }
    dend_41 { pt3dadd( -0.724886, -41.5336, -109.29, 0.83 ) }
    dend_41 { pt3dadd( 0.930269, -43.0133, -109.402, 0.28 ) }
    dend_41 { pt3dadd( 1.79687, -43.6923, -109.448, 0.83 ) }
    dend_41 { pt3dadd( 3.44366, -44.7737, -109.585, 0.28 ) }
    dend_41 { pt3dadd( 4.59326, -45.4266, -109.694, 0.55 ) }
    dend_41 { pt3dadd( 6.11983, -46.2115, -109.851, 0.55 ) }
    dend_41 { pt3dadd( 8.57213, -47.3775, -110.128, 0.28 ) }
    dend_41 { pt3dadd( 9.65859, -47.8329, -110.253, 0.83 ) }
    dend_41 { pt3dadd( 11.6524, -48.6271, -110.474, 0.28 ) }
    dend_41 { pt3dadd( 11.8556, -48.712, -110.495, 0.83 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 66/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -31.6707, 44.8297, 23.0619, 0.55 ) }
    dend_38 { pt3dadd( -31.9198, 48.8657, 27.0991, 0.55 ) }
    dend_38 { pt3dadd( -32.0658, 49.6638, 27.7933, 0.55 ) }
    dend_38 { pt3dadd( -32.3667, 50.8328, 28.6377, 0.55 ) }
    dend_38 { pt3dadd( -32.4522, 51.1787, 28.8463, 0.55 ) }
    dend_38 { pt3dadd( -33.0703, 53.6792, 30.3543, 0.55 ) }
    dend_38 { pt3dadd( -33.5153, 55.4795, 31.44, 0.55 ) }
    dend_38 { pt3dadd( -33.8855, 56.3186, 31.7573, 0.55 ) }
    dend_38 { pt3dadd( -34.469, 57.6202, 32.2529, 0.55 ) }
    dend_38 { pt3dadd( -35.1265, 58.8536, 32.7025, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 76/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -31.6707, 44.8297, 23.0619, 0.55 ) }
    dend_37 { pt3dadd( -36.2142, 45.5198, 24.2216, 0.55 ) }
    dend_37 { pt3dadd( -37.9859, 45.5618, 24.8899, 0.55 ) }
    dend_37 { pt3dadd( -39.9609, 45.4282, 25.9706, 0.55 ) }
    dend_37 { pt3dadd( -42.2338, 45.1978, 27.3355, 0.55 ) }
    dend_37 { pt3dadd( -43.9089, 44.9422, 28.3772, 0.55 ) }
    dend_37 { pt3dadd( -45.5008, 44.647, 29.3443, 0.55 ) }
    dend_37 { pt3dadd( -49.681, 43.5762, 31.8784, 0.55 ) }
    dend_37 { pt3dadd( -52.9182, 42.5693, 34.0269, 0.55 ) }
    dend_37 { pt3dadd( -54.1039, 42.1447, 34.8911, 0.55 ) }
    dend_37 { pt3dadd( -55.3687, 41.6782, 35.8891, 0.55 ) }
    dend_37 { pt3dadd( -57.1939, 40.875, 37.3937, 0.55 ) }
    dend_37 { pt3dadd( -59.1042, 40.0292, 38.913, 0.55 ) }
    // Section: dend_29, id: dend_29, parent: dend_21 (entry count 89/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.182711, -28.8962, -8.78952, 1.38 ) }
    dend_29 { pt3dadd( -1.08091, -32.86, -8.6906, 1.38 ) }
    dend_29 { pt3dadd( -1.80928, -35.3093, -8.68907, 1.38 ) }
    dend_29 { pt3dadd( -2.78769, -38.0211, -8.71709, 1.38 ) }
    dend_29 { pt3dadd( -5.57823, -44.3761, -8.77157, 1.38 ) }
    dend_29 { pt3dadd( -8.73981, -50.9219, -8.79786, 1.94 ) }
    dend_29 { pt3dadd( -10.8112, -55.0012, -8.76685, 1.38 ) }
    dend_29 { pt3dadd( -11.7913, -56.7746, -8.77225, 1.38 ) }
    dend_29 { pt3dadd( -13.6842, -59.896, -8.77947, 1.38 ) }
    dend_29 { pt3dadd( -16.9838, -64.9555, -8.79613, 1.38 ) }
    dend_29 { pt3dadd( -19.4209, -68.1885, -8.80463, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -23.7971, -73.652, -8.62421, 1.66 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 1/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -0.182711, -28.8962, -8.78952, 0.83 ) }
    dend_22 { pt3dadd( 0.266775, -29.9262, -8.69482, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_10 (entry count 3/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -5.01067, -35.8142, -10.6283, 0.83 ) }
    dend_12 { pt3dadd( -7.67406, -37.2843, -12.0759, 0.83 ) }
    dend_12 { pt3dadd( -9.86835, -38.4954, -13.2685, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 6/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.01067, -35.8142, -10.6283, 0.55 ) }
    dend_11 { pt3dadd( -5.34379, -36.463, -9.33936, 0.55 ) }
    dend_11 { pt3dadd( -5.39913, -36.5556, -9.14709, 0.55 ) }
    dend_11 { pt3dadd( -6.43378, -37.766, -6.18691, 0.55 ) }
    dend_11 { pt3dadd( -7.91712, -39.0165, -2.61294, 0.55 ) }
    dend_11 { pt3dadd( -9.34512, -39.9248, 0.40238, 0.55 ) }
    dend_11 { pt3dadd( -10.5231, -40.4823, 2.58341, 0.55 ) }
    dend_11 { pt3dadd( -10.9292, -40.6337, 3.28834, 0.83 ) }
    dend_11 { pt3dadd( -13.2663, -41.4067, 7.00826, 0.28 ) }
    dend_11 { pt3dadd( -14.3166, -41.6514, 8.52086, 0.55 ) }
    dend_11 { pt3dadd( -16.3064, -42.0513, 10.9121, 0.55 ) }
    dend_11 { pt3dadd( -18.351, -42.5277, 13.2995, 0.28 ) }
    dend_11 { pt3dadd( -19.3627, -42.8908, 14.5503, 0.55 ) }
    dend_11 { pt3dadd( -20.3127, -43.4073, 15.8253, 0.55 ) }
    dend_11 { pt3dadd( -22.2134, -44.7676, 18.4997, 0.55 ) }
    dend_11 { pt3dadd( -23.4559, -45.8924, 20.4352, 0.28 ) }
    dend_11 { pt3dadd( -24.5194, -47.0746, 22.2109, 0.55 ) }
    dend_11 { pt3dadd( -25.0849, -47.8506, 23.2805, 0.55 ) }
    dend_11 { pt3dadd( -25.6201, -48.5248, 24.2831, 0.55 ) }
    // Section: dend_8, id: dend_8, parent: dend_2 (entry count 25/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.05399, 66.12, 7.65142, 0.55 ) }
    dend_8 { pt3dadd( 1.82417, 66.5975, 8.65468, 0.55 ) }
    dend_8 { pt3dadd( 1.11777, 66.9175, 9.23459, 0.83 ) }
    dend_8 { pt3dadd( -0.597902, 67.768, 10.6096, 0.28 ) }
    dend_8 { pt3dadd( -1.75967, 68.3581, 11.617, 0.55 ) }
    dend_8 { pt3dadd( -2.84076, 68.9718, 12.5603, 0.28 ) }
    dend_8 { pt3dadd( -3.39036, 69.3276, 13.0916, 0.55 ) }
    dend_8 { pt3dadd( -3.95239, 69.8056, 13.7207, 0.28 ) }
    dend_8 { pt3dadd( -4.60073, 70.5665, 14.6534, 0.55 ) }
    dend_8 { pt3dadd( -5.33527, 71.6127, 15.8901, 0.28 ) }
    dend_8 { pt3dadd( -6.09786, 72.7535, 17.2073, 0.83 ) }
    dend_8 { pt3dadd( -7.03623, 74.1343, 18.8536, 0.83 ) }
    dend_8 { pt3dadd( -7.72309, 75.0811, 20.1096, 0.55 ) }
    dend_8 { pt3dadd( -8.69454, 76.3141, 21.8612, 0.28 ) }
    dend_8 { pt3dadd( -9.16106, 76.8805, 22.6932, 0.55 ) }
    dend_8 { pt3dadd( -10.064, 77.8497, 24.1339, 0.28 ) }
    dend_8 { pt3dadd( -10.5456, 78.2905, 24.8291, 0.83 ) }
    dend_8 { pt3dadd( -11.7495, 79.2525, 26.2559, 0.55 ) }
    dend_8 { pt3dadd( -12.5118, 79.8626, 27.1801, 0.28 ) }
    dend_8 { pt3dadd( -13.1093, 80.4185, 27.896, 0.83 ) }
    dend_8 { pt3dadd( -13.6433, 80.944, 28.5246, 0.83 ) }
    dend_8 { pt3dadd( -14.6302, 81.8287, 29.5881, 0.28 ) }
    dend_8 { pt3dadd( -15.3049, 82.4232, 30.2536, 0.83 ) }
    dend_8 { pt3dadd( -17.2644, 84.1829, 32.0802, 0.28 ) }
    dend_8 { pt3dadd( -17.9521, 84.7751, 32.6975, 0.55 ) }
    dend_8 { pt3dadd( -19.6908, 86.1961, 34.1845, 0.55 ) }
    dend_8 { pt3dadd( -20.9338, 87.1306, 35.1931, 0.28 ) }
    dend_8 { pt3dadd( -21.9087, 87.757, 35.9136, 0.55 ) }
    dend_8 { pt3dadd( -22.9675, 88.3597, 36.6045, 0.28 ) }
    dend_8 { pt3dadd( -23.5626, 88.6761, 36.9523, 0.55 ) }
    dend_8 { pt3dadd( -24.2772, 89.0712, 37.4079, 0.28 ) }
    dend_8 { pt3dadd( -25.2857, 89.7784, 38.1589, 0.55 ) }
    dend_8 { pt3dadd( -26.2381, 90.5462, 38.9154, 0.28 ) }
    dend_8 { pt3dadd( -27.4119, 91.5474, 39.8915, 0.55 ) }
    dend_8 { pt3dadd( -28.1771, 92.37, 40.5263, 0.28 ) }
    dend_8 { pt3dadd( -28.6432, 92.9744, 40.919, 0.55 ) }
    dend_8 { pt3dadd( -29.3359, 94.0141, 41.4208, 0.28 ) }
    dend_8 { pt3dadd( -29.5899, 94.4504, 41.5952, 0.55 ) }
    dend_8 { pt3dadd( -29.9621, 95.158, 41.832, 0.28 ) }
    dend_8 { pt3dadd( -30.7776, 96.7753, 42.2879, 0.55 ) }
    dend_8 { pt3dadd( -31.9436, 98.969, 42.7867, 0.55 ) }
    dend_8 { pt3dadd( -32.7211, 100.367, 43.0833, 0.28 ) }
    dend_8 { pt3dadd( -33.5853, 101.731, 43.3413, 0.55 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 68/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 3.05399, 66.12, 7.65142, 0.55 ) }
    dend_3 { pt3dadd( 3.17639, 69.9183, 7.76156, 0.55 ) }
    dend_3 { pt3dadd( 3.21508, 71.9025, 8.03894, 0.55 ) }
    dend_3 { pt3dadd( 3.28605, 73.9913, 8.4705, 0.55 ) }
    dend_3 { pt3dadd( 3.61867, 78.3493, 9.71039, 0.55 ) }
    dend_3 { pt3dadd( 4.02003, 83.6272, 11.3716, 0.55 ) }
    dend_3 { pt3dadd( 4.1659, 86.3303, 12.2616, 0.55 ) }
    dend_3 { pt3dadd( 4.50884, 92.2483, 14.3513, 0.55 ) }
    dend_3 { pt3dadd( 4.88044, 97.6649, 16.2145, 0.55 ) }
    dend_3 { pt3dadd( 5.25497, 104.326, 18.4594, 0.55 ) }
    dend_3 { pt3dadd( 5.34265, 107.005, 19.3258, 0.55 ) }
    dend_3 { pt3dadd( 5.35852, 111.702, 20.7313, 0.55 ) }
    dend_3 { pt3dadd( 5.34419, 116.484, 22.0406, 0.55 ) }
    dend_3 { pt3dadd( 5.05234, 123.61, 23.8792, 0.55 ) }
    dend_3 { pt3dadd( 4.82079, 127.119, 24.7256, 0.55 ) }
    dend_3 { pt3dadd( 4.3279, 132.708, 25.9515, 0.55 ) }
    dend_3 { pt3dadd( 4.0118, 136.61, 26.8405, 0.55 ) }
    dend_3 { pt3dadd( 3.36729, 143.816, 28.5962, 0.55 ) }
    dend_3 { pt3dadd( 2.54783, 149.431, 30.1717, 0.55 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 87/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -3.86449, 148.343, -54.0479, 0.55 ) }
    dend_49 { pt3dadd( -3.02169, 149.28, -53.652, 0.55 ) }
    dend_49 { pt3dadd( -2.67658, 149.747, -53.4604, 0.55 ) }
    dend_49 { pt3dadd( -1.95492, 150.792, -53.084, 0.28 ) }
    dend_49 { pt3dadd( -1.5294, 151.435, -52.8563, 0.83 ) }
    dend_49 { pt3dadd( -1.13874, 152.056, -52.6524, 0.28 ) }
    dend_49 { pt3dadd( -0.625997, 152.92, -52.366, 0.55 ) }
    dend_49 { pt3dadd( -0.164399, 153.806, -52.0812, 0.28 ) }
    dend_49 { pt3dadd( 0.67818, 155.598, -51.5036, 0.83 ) }
    dend_49 { pt3dadd( 1.24305, 156.9, -51.1002, 0.28 ) }
    dend_49 { pt3dadd( 1.64887, 157.846, -50.777, 0.28 ) }
    dend_49 { pt3dadd( 2.05545, 158.831, -50.426, 0.28 ) }
    dend_49 { pt3dadd( 2.20935, 159.205, -50.2787, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_49 { pt3dadd( 2.9492, 160.892, -49.5801, 0.28 ) }
    dend_49 { pt3dadd( 3.24217, 161.624, -49.2669, 0.83 ) }
    dend_49 { pt3dadd( 3.82456, 163.106, -48.6403, 0.28 ) }
    dend_49 { pt3dadd( 4.1913, 164.059, -48.2491, 0.55 ) }
    dend_49 { pt3dadd( 4.69454, 165.377, -47.7358, 0.28 ) }
    dend_49 { pt3dadd( 5.02525, 166.295, -47.4013, 0.28 ) }
    dend_49 { pt3dadd( 5.46083, 167.628, -46.985, 0.55 ) }
    dend_49 { pt3dadd( 5.85316, 168.921, -46.618, 0.28 ) }
    dend_49 { pt3dadd( 6.06, 169.735, -46.4278, 0.55 ) }
    dend_49 { pt3dadd( 6.43948, 171.271, -46.1002, 0.28 ) }
    dend_49 { pt3dadd( 6.62059, 172.043, -45.9542, 0.83 ) }
    dend_49 { pt3dadd( 7.0039, 173.971, -45.5122, 0.28 ) }
    dend_49 { pt3dadd( 7.1643, 174.826, -45.3006, 0.55 ) }
    dend_49 { pt3dadd( 7.36707, 176.036, -44.9919, 0.55 ) }
    dend_49 { pt3dadd( 7.6574, 177.942, -44.499, 0.28 ) }
    dend_49 { pt3dadd( 7.72937, 178.52, -44.3337, 0.55 ) }
    dend_49 { pt3dadd( 7.99157, 181.075, -43.5298, 0.28 ) }
    dend_49 { pt3dadd( 8.05961, 182.22, -43.1505, 0.28 ) }
    dend_49 { pt3dadd( 8.07151, 182.867, -42.9376, 0.55 ) }
    dend_49 { pt3dadd( 8.06663, 183.92, -42.6077, 0.28 ) }
    dend_49 { pt3dadd( 8.03643, 185.482, -42.2584, 0.55 ) }
    dend_49 { pt3dadd( 8.03655, 186.264, -42.1498, 0.28 ) }
    dend_49 { pt3dadd( 8.04756, 186.827, -42.128, 0.55 ) }
    dend_49 { pt3dadd( 8.05938, 187.396, -42.126, 0.28 ) }
    dend_49 { pt3dadd( 8.15435, 189.892, -42.1108, 0.55 ) }
    dend_49 { pt3dadd( 8.25078, 191.509, -42.1158, 0.55 ) }
    dend_49 { pt3dadd( 8.36042, 192.891, -42.0749, 0.28 ) }
    dend_49 { pt3dadd( 8.47714, 193.979, -41.9284, 0.28 ) }
    dend_49 { pt3dadd( 8.54498, 194.553, -41.785, 0.28 ) }
    dend_49 { pt3dadd( 8.703, 195.795, -41.3467, 0.55 ) }
    dend_49 { pt3dadd( 8.78858, 196.408, -41.0615, 0.28 ) }
    dend_49 { pt3dadd( 9.1001, 198.537, -39.9386, 0.83 ) }
    dend_49 { pt3dadd( 9.30909, 199.868, -39.2508, 0.28 ) }
    dend_49 { pt3dadd( 9.46547, 200.858, -38.7509, 0.55 ) }
    dend_49 { pt3dadd( 9.58821, 201.577, -38.4116, 0.28 ) }
    dend_49 { pt3dadd( 9.72743, 202.344, -38.0951, 0.28 ) }
    dend_49 { pt3dadd( 9.92558, 203.367, -37.7113, 0.28 ) }
    dend_49 { pt3dadd( 10.471, 205.79, -36.8731, 0.83 ) }
    dend_49 { pt3dadd( 10.7935, 207.201, -36.4188, 0.28 ) }
    dend_49 { pt3dadd( 10.9385, 207.765, -36.239, 0.28 ) }
    dend_49 { pt3dadd( 11.203, 208.743, -35.9011, 0.28 ) }
    dend_49 { pt3dadd( 11.3073, 209.114, -35.7601, 0.28 ) }
    dend_49 { pt3dadd( 11.8736, 211.043, -34.9857, 0.55 ) }
    dend_49 { pt3dadd( 12.0445, 211.579, -34.7719, 0.55 ) }
    dend_49 { pt3dadd( 12.3253, 212.489, -34.4299, 0.55 ) }
    dend_49 { pt3dadd( 12.6166, 213.718, -33.9697, 0.28 ) }
    dend_49 { pt3dadd( 12.7652, 214.563, -33.6444, 0.55 ) }
    dend_49 { pt3dadd( 12.8411, 215.267, -33.3737, 0.55 ) }
    dend_49 { pt3dadd( 12.8648, 215.839, -33.1756, 0.28 ) }
    dend_49 { pt3dadd( 12.9399, 216.631, -32.9017, 0.55 ) }
    dend_49 { pt3dadd( 13.0502, 217.591, -32.4544, 0.28 ) }
    dend_49 { pt3dadd( 13.2465, 218.6, -31.8787, 0.83 ) }
    dend_49 { pt3dadd( 13.4691, 219.614, -31.2756, 0.55 ) }
    dend_49 { pt3dadd( 13.6907, 220.495, -30.7131, 0.55 ) }
    dend_49 { pt3dadd( 14.0675, 221.878, -29.7702, 0.55 ) }
    dend_49 { pt3dadd( 14.9829, 224.64, -27.7332, 0.28 ) }
    dend_49 { pt3dadd( 15.5529, 226.023, -26.658, 0.55 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 57/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -3.86449, 148.343, -54.0479, 0.28 ) }
    dend_48 { pt3dadd( -4.99978, 149.771, -53.2907, 0.28 ) }
    dend_48 { pt3dadd( -6.68664, 151.86, -52.2208, 0.55 ) }
    dend_48 { pt3dadd( -8.2057, 153.686, -51.1769, 0.28 ) }
    dend_48 { pt3dadd( -9.18829, 154.95, -50.4152, 0.28 ) }
    dend_48 { pt3dadd( -10.2062, 156.328, -49.5658, 0.28 ) }
    dend_48 { pt3dadd( -11.509, 158.143, -48.4663, 0.55 ) }
    dend_48 { pt3dadd( -12.4291, 159.482, -47.5539, 0.28 ) }
    dend_48 { pt3dadd( -13.2229, 160.631, -46.699, 0.55 ) }
    dend_48 { pt3dadd( -14.129, 161.904, -45.5873, 0.28 ) }
    dend_48 { pt3dadd( -14.7424, 162.763, -44.7717, 0.55 ) }
    dend_48 { pt3dadd( -15.3484, 163.556, -43.998, 0.55 ) }
    dend_48 { pt3dadd( -17.0855, 165.619, -42.1253, 0.28 ) }
    dend_48 { pt3dadd( -17.9892, 166.479, -41.3771, 0.55 ) }
    dend_48 { pt3dadd( -18.8756, 167.21, -40.8053, 0.55 ) }
    dend_48 { pt3dadd( -19.6951, 167.762, -40.3051, 0.55 ) }
    dend_48 { pt3dadd( -20.7065, 168.394, -39.6533, 0.55 ) }
    dend_48 { pt3dadd( -21.9299, 169.171, -38.8216, 0.55 ) }
    dend_48 { pt3dadd( -24.6593, 170.916, -37.0262, 0.28 ) }
    dend_48 { pt3dadd( -24.9753, 171.127, -36.8081, 0.55 ) }
    dend_48 { pt3dadd( -27.8386, 173.181, -34.5311, 0.28 ) }
    dend_48 { pt3dadd( -29.242, 174.294, -33.3288, 0.55 ) }
    dend_48 { pt3dadd( -30.3612, 175.287, -32.3281, 0.55 ) }
    dend_48 { pt3dadd( -30.8733, 175.801, -31.8682, 0.55 ) }
    dend_48 { pt3dadd( -32.102, 177.171, -30.7266, 0.28 ) }
    dend_48 { pt3dadd( -34.2711, 179.767, -28.7735, 0.55 ) }
    dend_48 { pt3dadd( -35.4311, 181.343, -27.8547, 0.28 ) }
    dend_48 { pt3dadd( -36.258, 182.501, -27.2528, 0.28 ) }
    dend_48 { pt3dadd( -36.9008, 183.42, -26.7874, 0.28 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 86/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 11.8556, -48.712, -110.495, 0.28 ) }
    dend_43 { pt3dadd( 13.8139, -51.9231, -112.306, 0.28 ) }
    dend_43 { pt3dadd( 14.2455, -52.923, -113.029, 0.83 ) }
    dend_43 { pt3dadd( 14.7883, -54.6724, -114.369, 0.28 ) }
    dend_43 { pt3dadd( 14.7886, -55.8319, -115.396, 0.55 ) }
    dend_43 { pt3dadd( 14.442, -57.8507, -117.15, 0.28 ) }
    dend_43 { pt3dadd( 14.0418, -59.5461, -118.565, 0.55 ) }
    dend_43 { pt3dadd( 12.9082, -61.9513, -120.656, 0.28 ) }
    dend_43 { pt3dadd( 12.0321, -63.3981, -121.931, 0.83 ) }
    dend_43 { pt3dadd( 9.43854, -66.9879, -125.01, 0.28 ) }
    dend_43 { pt3dadd( 8.43017, -68.3453, -126.073, 0.55 ) }
    dend_43 { pt3dadd( 7.8611, -69.1627, -126.619, 0.28 ) }
    dend_43 { pt3dadd( 7.35088, -70.0329, -127.165, 0.55 ) }
    dend_43 { pt3dadd( 6.26394, -72.3455, -128.281, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_43 { pt3dadd( 6.05062, -72.9054, -128.511, 0.55 ) }
    dend_43 { pt3dadd( 5.74386, -74.4306, -128.931, 0.28 ) }
    dend_43 { pt3dadd( 5.51912, -76.3711, -129.437, 0.55 ) }
    dend_43 { pt3dadd( 5.38144, -79.3742, -130.088, 0.28 ) }
    dend_43 { pt3dadd( 5.45145, -80.8546, -130.54, 0.83 ) }
    dend_43 { pt3dadd( 5.62546, -82.8447, -131.244, 0.28 ) }
    dend_43 { pt3dadd( 5.74954, -84.1214, -131.814, 0.55 ) }
    dend_43 { pt3dadd( 5.89991, -85.5858, -132.576, 0.28 ) }
    dend_43 { pt3dadd( 6.04076, -86.7473, -133.192, 0.55 ) }
    dend_43 { pt3dadd( 6.67151, -91.0859, -135.363, 0.28 ) }
    dend_43 { pt3dadd( 6.85149, -92.3662, -135.941, 0.83 ) }
    dend_43 { pt3dadd( 6.94431, -93.3143, -136.287, 0.28 ) }
    dend_43 { pt3dadd( 7.02309, -94.3919, -136.632, 0.55 ) }
    dend_43 { pt3dadd( 7.06065, -96.913, -137.227, 0.28 ) }
    dend_43 { pt3dadd( 7.05992, -98.0349, -137.394, 0.55 ) }
    dend_43 { pt3dadd( 7.06558, -100.67, -137.527, 0.28 ) }
    dend_43 { pt3dadd( 7.07633, -101.912, -137.685, 0.55 ) }
    dend_43 { pt3dadd( 7.04549, -105.143, -138.275, 0.28 ) }
    dend_43 { pt3dadd( 6.98251, -107.073, -138.787, 0.83 ) }
    dend_43 { pt3dadd( 6.93637, -109.205, -139.462, 0.28 ) }
    dend_43 { pt3dadd( 6.96592, -110.175, -139.751, 0.55 ) }
    dend_43 { pt3dadd( 7.27265, -113.603, -140.738, 0.28 ) }
    dend_43 { pt3dadd( 7.72719, -116.049, -141.264, 0.55 ) }
    dend_43 { pt3dadd( 8.24943, -118.158, -141.562, 0.28 ) }
    dend_43 { pt3dadd( 8.69443, -119.714, -141.836, 0.83 ) }
    dend_43 { pt3dadd( 9.74288, -123.321, -142.499, 0.28 ) }
    dend_43 { pt3dadd( 10.0161, -124.218, -142.64, 0.55 ) }
    dend_43 { pt3dadd( 11.1272, -127.702, -143.02, 0.28 ) }
    dend_43 { pt3dadd( 11.3708, -128.458, -143.123, 0.55 ) }
    dend_43 { pt3dadd( 12.292, -131.699, -143.61, 0.28 ) }
    dend_43 { pt3dadd( 12.5586, -133.076, -143.865, 0.55 ) }
    dend_43 { pt3dadd( 12.737, -134.616, -144.157, 0.28 ) }
    dend_43 { pt3dadd( 12.9141, -135.9, -144.32, 0.55 ) }
    dend_43 { pt3dadd( 13.1241, -137.046, -144.383, 0.28 ) }
    dend_43 { pt3dadd( 13.4447, -138.354, -144.489, 0.55 ) }
    dend_43 { pt3dadd( 13.9563, -140.203, -144.644, 0.28 ) }
    dend_43 { pt3dadd( 14.5565, -142.382, -144.856, 0.55 ) }
    dend_43 { pt3dadd( 15.2841, -145.28, -145.153, 0.28 ) }
    dend_43 { pt3dadd( 15.9242, -147.909, -145.402, 0.55 ) }
    dend_43 { pt3dadd( 16.7156, -151.931, -145.775, 0.28 ) }
    dend_43 { pt3dadd( 16.8827, -153.052, -145.863, 0.55 ) }
    dend_43 { pt3dadd( 17.0511, -155.561, -145.984, 0.28 ) }
    dend_43 { pt3dadd( 16.9627, -157.398, -145.949, 0.28 ) }
    dend_43 { pt3dadd( 16.7887, -158.267, -145.836, 0.55 ) }
    dend_43 { pt3dadd( 16.2848, -160.077, -145.43, 0.28 ) }
    dend_43 { pt3dadd( 15.5807, -162.074, -144.836, 0.55 ) }
    dend_43 { pt3dadd( 14.493, -165.463, -143.946, 0.28 ) }
    dend_43 { pt3dadd( 14.1198, -166.808, -143.65, 0.83 ) }
    dend_43 { pt3dadd( 13.3888, -169.971, -143.004, 0.28 ) }
    dend_43 { pt3dadd( 12.8999, -172.564, -142.521, 0.28 ) }
    dend_43 { pt3dadd( 12.534, -175.057, -142.143, 0.55 ) }
    dend_43 { pt3dadd( 12.0832, -178.843, -141.761, 0.28 ) }
    dend_43 { pt3dadd( 11.8657, -181.718, -141.396, 0.55 ) }
    dend_43 { pt3dadd( 11.8226, -184.303, -141.035, 0.28 ) }
    dend_43 { pt3dadd( 11.9512, -185.841, -140.679, 0.55 ) }
    dend_43 { pt3dadd( 12.3416, -188.141, -139.767, 0.28 ) }
    dend_43 { pt3dadd( 12.6989, -189.717, -139.015, 0.55 ) }
    dend_43 { pt3dadd( 13.5691, -193.084, -136.913, 0.28 ) }
    dend_43 { pt3dadd( 14.1012, -194.612, -135.731, 0.55 ) }
    dend_43 { pt3dadd( 15.7027, -198.076, -132.489, 0.28 ) }
    dend_43 { pt3dadd( 16.9029, -200.166, -130.131, 0.83 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 61/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 11.8556, -48.712, -110.495, 0.28 ) }
    dend_42 { pt3dadd( 13.5059, -48.8331, -110.662, 0.28 ) }
    dend_42 { pt3dadd( 14.3516, -48.9829, -110.758, 0.55 ) }
    dend_42 { pt3dadd( 16.0376, -49.3746, -110.953, 0.28 ) }
    dend_42 { pt3dadd( 16.4139, -49.465, -110.988, 0.55 ) }
    dend_42 { pt3dadd( 18.0081, -49.8647, -111.132, 0.28 ) }
    dend_42 { pt3dadd( 19.1118, -50.1627, -111.253, 0.55 ) }
    dend_42 { pt3dadd( 20.6722, -50.6762, -111.454, 0.28 ) }
    dend_42 { pt3dadd( 21.6022, -51.0046, -111.581, 0.55 ) }
    dend_42 { pt3dadd( 23.5729, -51.7553, -111.862, 0.28 ) }
    dend_42 { pt3dadd( 23.8223, -51.8506, -111.89, 0.55 ) }
    dend_42 { pt3dadd( 25.9961, -52.6918, -112.064, 0.28 ) }
    dend_42 { pt3dadd( 26.3555, -52.8232, -112.06, 0.55 ) }
    dend_42 { pt3dadd( 27.8594, -53.3067, -111.932, 0.28 ) }
    dend_42 { pt3dadd( 28.8996, -53.6196, -111.8, 0.83 ) }
    dend_42 { pt3dadd( 30.3425, -54.0295, -111.573, 0.28 ) }
    dend_42 { pt3dadd( 31.1622, -54.2671, -111.454, 0.55 ) }
    dend_42 { pt3dadd( 33.7934, -55.1247, -111.08, 0.28 ) }
    dend_42 { pt3dadd( 34.6884, -55.4633, -110.873, 0.55 ) }
    dend_42 { pt3dadd( 35.7681, -55.8947, -110.563, 0.28 ) }
    dend_42 { pt3dadd( 36.9848, -56.3756, -110.183, 0.55 ) }
    dend_42 { pt3dadd( 39.5179, -57.4996, -109.388, 0.28 ) }
    dend_42 { pt3dadd( 40.898, -58.1522, -108.829, 0.55 ) }
    dend_42 { pt3dadd( 44.4372, -59.894, -107.201, 0.28 ) }
    dend_42 { pt3dadd( 44.868, -60.1167, -106.963, 0.55 ) }
    dend_42 { pt3dadd( 46.1028, -60.7659, -106.188, 0.28 ) }
    dend_42 { pt3dadd( 47.5555, -61.5676, -105.247, 0.83 ) }
    dend_42 { pt3dadd( 50.4589, -63.178, -103.347, 0.28 ) }
    dend_42 { pt3dadd( 51.5071, -63.7914, -102.734, 0.55 ) }
    dend_42 { pt3dadd( 53.3235, -64.9681, -101.857, 0.28 ) }
    dend_42 { pt3dadd( 53.7981, -65.2979, -101.658, 0.83 ) }
    dend_42 { pt3dadd( 56.9218, -67.5592, -100.544, 0.28 ) }
    dend_42 { pt3dadd( 57.8506, -68.2351, -100.319, 0.83 ) }
    dend_42 { pt3dadd( 59.6198, -69.5716, -100.139, 0.28 ) }
    dend_42 { pt3dadd( 60.6977, -70.396, -100.091, 0.55 ) }
    dend_42 { pt3dadd( 62.3435, -71.6197, -100.139, 0.28 ) }
    dend_42 { pt3dadd( 62.8275, -71.9829, -100.209, 0.83 ) }
    dend_42 { pt3dadd( 64.9921, -73.5928, -100.873, 0.28 ) }
    dend_42 { pt3dadd( 65.6259, -74.0839, -101.17, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_42 { pt3dadd( 66.4349, -74.7194, -101.653, 0.28 ) }
    dend_42 { pt3dadd( 66.8084, -75.0133, -101.915, 0.55 ) }
    dend_42 { pt3dadd( 69.1474, -76.9546, -103.77, 0.28 ) }
    dend_42 { pt3dadd( 69.6875, -77.4535, -104.375, 0.55 ) }
    dend_42 { pt3dadd( 70.7093, -78.4412, -105.727, 0.28 ) }
    dend_42 { pt3dadd( 71.0186, -78.7457, -106.162, 0.83 ) }
    dend_42 { pt3dadd( 72.5359, -80.2629, -108.433, 0.28 ) }
    dend_42 { pt3dadd( 72.7488, -80.479, -108.764, 0.55 ) }
    dend_42 { pt3dadd( 75.1834, -83.0687, -112.762, 0.28 ) }
    dend_42 { pt3dadd( 76.0701, -84.0374, -114.236, 0.55 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 10/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -23.7971, -73.652, -8.62421, 1.38 ) }
    dend_31 { pt3dadd( -24.9123, -74.7158, -10.1003, 1.38 ) }
    dend_31 { pt3dadd( -25.8593, -75.5364, -11.6316, 1.38 ) }
    dend_31 { pt3dadd( -26.2995, -75.9298, -12.4137, 1.11 ) }
    dend_31 { pt3dadd( -27.2368, -76.8281, -14.0702, 1.38 ) }
    dend_31 { pt3dadd( -29.0883, -78.571, -17.0629, 1.38 ) }
    dend_31 { pt3dadd( -30.1596, -79.6362, -18.6928, 1.38 ) }
    dend_31 { pt3dadd( -32.5198, -82.4387, -22.8841, 1.38 ) }
    dend_31 { pt3dadd( -33.6246, -84.0627, -25.0546, 1.38 ) }
    dend_31 { pt3dadd( -34.2784, -85.1629, -26.3555, 1.38 ) }
    dend_31 { pt3dadd( -35.1248, -86.6817, -27.9263, 1.38 ) }
    dend_31 { pt3dadd( -36.1608, -88.4141, -29.4538, 1.38 ) }
    dend_31 { pt3dadd( -38.5775, -92.6239, -32.8048, 1.38 ) }
    dend_31 { pt3dadd( -39.4623, -94.1156, -33.8148, 1.38 ) }
    dend_31 { pt3dadd( -40.6826, -95.8477, -35.0149, 1.38 ) }
    dend_31 { pt3dadd( -42.4996, -98.1857, -36.7091, 1.94 ) }
    dend_31 { pt3dadd( -43.3961, -99.3052, -37.4918, 1.94 ) }
    dend_31 { pt3dadd( -44.7666, -100.828, -38.594, 0.28 ) }
    dend_31 { pt3dadd( -45.2452, -101.325, -38.8724, 0.28 ) }
    dend_31 { pt3dadd( -46.7056, -102.934, -39.8371, 1.38 ) }
    dend_31 { pt3dadd( -47.5601, -103.981, -40.4212, 0.28 ) }
    dend_31 { pt3dadd( -48.5186, -105.228, -41.0375, 1.11 ) }
    dend_31 { pt3dadd( -50.3781, -107.562, -42.5646, 0.28 ) }
    dend_31 { pt3dadd( -51.6343, -109.047, -43.6876, 1.38 ) }
    dend_31 { pt3dadd( -53.1325, -110.639, -45.233, 0.55 ) }
    dend_31 { pt3dadd( -54.7513, -112.12, -47.0174, 0.83 ) }
    dend_31 { pt3dadd( -55.81, -112.867, -48.1075, 0.83 ) }
    dend_31 { pt3dadd( -59.2042, -114.847, -51.3412, 0.28 ) }
    dend_31 { pt3dadd( -60.0367, -115.285, -52.0652, 0.83 ) }
    dend_31 { pt3dadd( -61.9965, -116.288, -54.0443, 0.83 ) }
    dend_31 { pt3dadd( -62.8677, -116.704, -54.9375, 0.83 ) }
    dend_31 { pt3dadd( -64.2261, -117.243, -56.3678, 0.55 ) }
    dend_31 { pt3dadd( -65.4983, -117.784, -57.6323, 0.28 ) }
    dend_31 { pt3dadd( -66.6423, -118.346, -58.6723, 1.66 ) }
    dend_31 { pt3dadd( -70.468, -120.299, -62.3619, 0.28 ) }
    dend_31 { pt3dadd( -71.7687, -121.033, -63.6792, 0.83 ) }
    dend_31 { pt3dadd( -73.322, -121.987, -65.3644, 0.28 ) }
    dend_31 { pt3dadd( -74.1107, -122.499, -66.2798, 0.83 ) }
    dend_31 { pt3dadd( -75.7295, -123.56, -68.1562, 0.28 ) }
    dend_31 { pt3dadd( -77.4878, -124.88, -70.0868, 1.94 ) }
    dend_31 { pt3dadd( -78.4796, -125.806, -71.0004, 0.28 ) }
    dend_31 { pt3dadd( -79.2669, -126.759, -71.7385, 0.83 ) }
    dend_31 { pt3dadd( -80.2171, -128.1, -72.5786, 0.28 ) }
    dend_31 { pt3dadd( -80.849, -129.049, -73.0959, 0.28 ) }
    dend_31 { pt3dadd( -81.8275, -130.695, -73.7456, 1.38 ) }
    dend_31 { pt3dadd( -82.8729, -132.523, -74.3236, 0.28 ) }
    dend_31 { pt3dadd( -83.554, -133.613, -74.6257, 0.28 ) }
    dend_31 { pt3dadd( -84.8499, -135.431, -75.105, 0.55 ) }
    dend_31 { pt3dadd( -85.6045, -136.298, -75.3289, 0.28 ) }
    dend_31 { pt3dadd( -87.0622, -137.797, -75.9875, 0.83 ) }
    dend_31 { pt3dadd( -88.0161, -138.77, -76.5316, 0.28 ) }
    dend_31 { pt3dadd( -88.6112, -139.4, -76.9086, 0.55 ) }
    dend_31 { pt3dadd( -89.2239, -140.042, -77.336, 0.28 ) }
    dend_31 { pt3dadd( -90.592, -141.611, -78.3921, 1.11 ) }
    dend_31 { pt3dadd( -92.9396, -144.908, -80.4719, 0.28 ) }
    dend_31 { pt3dadd( -93.5472, -146.1, -81.2842, 0.28 ) }
    dend_31 { pt3dadd( -94.0555, -147.413, -82.1144, 0.28 ) }
    dend_31 { pt3dadd( -94.2367, -148.036, -82.4897, 0.83 ) }
    dend_31 { pt3dadd( -94.5143, -149.191, -83.2757, 0.28 ) }
    dend_31 { pt3dadd( -95.0895, -151.854, -85.3009, 0.83 ) }
    dend_31 { pt3dadd( -96.1243, -156.25, -89.0297, 0.55 ) }
    dend_31 { pt3dadd( -96.5365, -157.881, -90.6151, 0.55 ) }
    dend_31 { pt3dadd( -97.0976, -160.03, -92.8518, 0.28 ) }
    dend_31 { pt3dadd( -98.3004, -163.817, -97.0615, 0.83 ) }
    dend_31 { pt3dadd( -98.8453, -165.247, -98.9072, 0.83 ) }
    dend_31 { pt3dadd( -99.6396, -167.086, -101.497, 0.83 ) }
    dend_31 { pt3dadd( -100.369, -168.64, -103.648, 0.28 ) }
    dend_31 { pt3dadd( -100.819, -169.528, -104.822, 0.83 ) }
    dend_31 { pt3dadd( -101.482, -170.84, -106.229, 1.11 ) }
    dend_31 { pt3dadd( -103.349, -175.074, -109.198, 0.28 ) }
    dend_31 { pt3dadd( -104.033, -176.996, -110.224, 0.55 ) }
    dend_31 { pt3dadd( -104.612, -179.072, -111.028, 0.55 ) }
    dend_31 { pt3dadd( -105.112, -181.636, -111.742, 0.55 ) }
    dend_31 { pt3dadd( -105.503, -184.814, -112.582, 0.55 ) }
    dend_31 { pt3dadd( -105.59, -186.093, -112.873, 0.55 ) }
    dend_31 { pt3dadd( -105.698, -188.869, -113.547, 0.28 ) }
    dend_31 { pt3dadd( -105.695, -190.241, -114.122, 0.83 ) }
    dend_31 { pt3dadd( -105.656, -191.95, -115.004, 0.28 ) }
    dend_31 { pt3dadd( -105.6, -194.468, -116.418, 0.55 ) }
    dend_31 { pt3dadd( -105.587, -195.896, -117.24, 0.55 ) }
    dend_31 { pt3dadd( -105.513, -198.849, -118.931, 0.55 ) }
    dend_31 { pt3dadd( -105.464, -201.438, -120.314, 0.55 ) }
    dend_31 { pt3dadd( -105.441, -203.185, -121.235, 1.11 ) }
    dend_31 { pt3dadd( -105.466, -204.556, -121.913, 0.28 ) }
    dend_31 { pt3dadd( -105.566, -206.878, -122.933, 0.83 ) }
    dend_31 { pt3dadd( -105.721, -208.595, -123.653, 0.28 ) }
    dend_31 { pt3dadd( -105.941, -209.956, -124.211, 0.28 ) }
    dend_31 { pt3dadd( -106.396, -212.063, -125.237, 0.55 ) }
    dend_31 { pt3dadd( -106.818, -213.806, -126.204, 0.28 ) }
    dend_31 { pt3dadd( -107.33, -215.773, -127.336, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_31 { pt3dadd( -107.589, -216.771, -127.928, 0.83 ) }
    dend_31 { pt3dadd( -108.03, -218.848, -129.132, 0.28 ) }
    dend_31 { pt3dadd( -108.405, -220.874, -130.375, 0.83 ) }
    dend_31 { pt3dadd( -108.736, -223.327, -131.929, 0.83 ) }
    dend_31 { pt3dadd( -108.841, -224.875, -132.894, 0.83 ) }
    dend_31 { pt3dadd( -108.83, -227.217, -134.194, 0.28 ) }
    dend_31 { pt3dadd( -108.673, -229.364, -135.238, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 7/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -23.7971, -73.652, -8.62421, 0.55 ) }
    dend_30 { pt3dadd( -25.3259, -74.0309, -8.30158, 0.55 ) }
    dend_30 { pt3dadd( -27.3207, -74.5532, -7.94163, 0.28 ) }
    dend_30 { pt3dadd( -29.7275, -75.083, -7.59046, 0.55 ) }
    dend_30 { pt3dadd( -31.4294, -75.3554, -7.4392, 0.28 ) }
    dend_30 { pt3dadd( -38.8197, -76.0546, -6.83985, 0.55 ) }
    dend_30 { pt3dadd( -42.3077, -76.2659, -6.56942, 0.55 ) }
    dend_30 { pt3dadd( -45.1856, -76.286, -6.38516, 0.55 ) }
    dend_30 { pt3dadd( -49.0582, -76.1571, -6.23483, 0.55 ) }
    dend_30 { pt3dadd( -52.3881, -76.106, -6.21855, 0.55 ) }
    dend_30 { pt3dadd( -57.9315, -76.1275, -6.33835, 0.28 ) }
    dend_30 { pt3dadd( -60.6662, -76.163, -6.52796, 0.55 ) }
    dend_30 { pt3dadd( -65.0274, -76.32, -6.71766, 0.55 ) }
    dend_30 { pt3dadd( -69.8297, -76.7044, -6.79268, 0.83 ) }
    dend_30 { pt3dadd( -75.75, -77.5627, -6.50085, 0.55 ) }
    dend_30 { pt3dadd( -79.0173, -78.213, -6.02389, 0.28 ) }
    dend_30 { pt3dadd( -80.1505, -78.4613, -5.79182, 0.55 ) }
    dend_30 { pt3dadd( -83.5994, -79.1386, -4.6405, 0.28 ) }
    dend_30 { pt3dadd( -85.6118, -79.4673, -3.7037, 0.55 ) }
    dend_30 { pt3dadd( -90.5291, -79.9557, -1.15491, 0.83 ) }
    dend_30 { pt3dadd( -94.1467, -80.076, 0.730854, 0.55 ) }
    dend_30 { pt3dadd( -96.3079, -80.1261, 1.75081, 0.55 ) }
    dend_30 { pt3dadd( -101.102, -80.1412, 3.98272, 0.55 ) }
    dend_30 { pt3dadd( -105.173, -80.05, 5.6841, 0.28 ) }
    dend_30 { pt3dadd( -108.654, -79.802, 6.92872, 1.38 ) }
    dend_30 { pt3dadd( -110.414, -79.6308, 7.43179, 0.28 ) }
    dend_30 { pt3dadd( -112.92, -79.3312, 8.02711, 0.83 ) }
    dend_30 { pt3dadd( -120.174, -78.3323, 9.67553, 0.28 ) }
    dend_30 { pt3dadd( -124.764, -77.5203, 10.731, 0.55 ) }
    dend_30 { pt3dadd( -127.351, -76.9817, 11.3723, 0.28 ) }
    dend_30 { pt3dadd( -129.305, -76.6275, 11.8688, 0.55 ) }
    dend_30 { pt3dadd( -130.79, -76.383, 12.202, 0.28 ) }
    dend_30 { pt3dadd( -133.882, -76.0153, 12.9005, 0.83 ) }
    dend_30 { pt3dadd( -137.702, -75.7503, 13.5741, 0.28 ) }
    dend_30 { pt3dadd( -142.144, -75.769, 14.808, 0.55 ) }
    dend_30 { pt3dadd( -146.094, -76.0327, 16.1468, 0.55 ) }
    dend_30 { pt3dadd( -147.797, -76.2831, 16.7823, 0.55 ) }
    dend_30 { pt3dadd( -152.291, -77.2947, 18.8205, 0.28 ) }
    dend_30 { pt3dadd( -154.542, -77.9457, 20.0066, 0.83 ) }
    dend_30 { pt3dadd( -158.707, -79.2219, 22.8115, 0.28 ) }
    dend_30 { pt3dadd( -159.381, -79.42, 23.3784, 0.28 ) }
    dend_30 { pt3dadd( -162.38, -80.0782, 26.0325, 0.55 ) }
    dend_30 { pt3dadd( -166.225, -80.9499, 29.5059, 0.28 ) }
    dend_30 { pt3dadd( -168.951, -81.5137, 31.9451, 0.55 ) }
    dend_30 { pt3dadd( -173.586, -82.4301, 36.1836, 0.28 ) }
    dend_30 { pt3dadd( -176.854, -82.8812, 39.0289, 0.55 ) }
    dend_30 { pt3dadd( -180.947, -83.3082, 42.7427, 0.55 ) }
    // Section: dend_26, id: dend_26, parent: dend_22 (entry count 54/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 0.266775, -29.9262, -8.69482, 0.55 ) }
    dend_26 { pt3dadd( 1.47115, -32.8759, -10.1307, 0.55 ) }
    dend_26 { pt3dadd( 2.45862, -35.2944, -11.308, 0.83 ) }
    dend_26 { pt3dadd( 3.87431, -38.7617, -12.9959, 0.83 ) }
    dend_26 { pt3dadd( 4.95617, -41.4114, -14.2857, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 59/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 0.266775, -29.9262, -8.69482, 0.55 ) }
    dend_23 { pt3dadd( 2.06335, -28.7279, -10.7792, 0.55 ) }
    dend_23 { pt3dadd( 3.89605, -27.6735, -13.2998, 0.55 ) }
    dend_23 { pt3dadd( 4.4085, -27.3739, -14.0838, 0.55 ) }
    dend_23 { pt3dadd( 5.60063, -26.7512, -16.1863, 0.55 ) }
    dend_23 { pt3dadd( 10.9805, -24.0662, -26.7992, 0.55 ) }
    dend_23 { pt3dadd( 12.2829, -23.4162, -29.3683, 0.55 ) }
    dend_23 { pt3dadd( 16.9319, -21.2072, -39.249, 0.55 ) }
    dend_23 { pt3dadd( 18.1279, -20.6599, -41.9463, 0.55 ) }
    dend_23 { pt3dadd( 22.3243, -18.8838, -51.8921, 0.55 ) }
    dend_23 { pt3dadd( 24.0887, -18.1904, -56.5252, 0.55 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 70/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -9.86835, -38.4954, -13.2685, 0.83 ) }
    dend_16 { pt3dadd( -12.4209, -39.3676, -13.2793, 0.83 ) }
    dend_16 { pt3dadd( -14.838, -40.1423, -13.2981, 0.83 ) }
    dend_16 { pt3dadd( -16.558, -40.9183, -13.2378, 0.55 ) }
    dend_16 { pt3dadd( -19.2234, -42.151, -13.1301, 0.55 ) }
    dend_16 { pt3dadd( -22.4211, -43.5307, -12.9611, 0.55 ) }
    dend_16 { pt3dadd( -24.8867, -44.5385, -12.9038, 0.55 ) }
    dend_16 { pt3dadd( -27.1533, -45.4061, -12.9172, 0.55 ) }
    dend_16 { pt3dadd( -34.2422, -47.7316, -13.2615, 0.55 ) }
    dend_16 { pt3dadd( -39.5571, -49.2916, -13.6704, 0.55 ) }
    dend_16 { pt3dadd( -41.9161, -49.9336, -13.9246, 0.55 ) }
    dend_16 { pt3dadd( -44.6738, -50.4926, -14.2989, 0.55 ) }
    dend_16 { pt3dadd( -46.5944, -50.752, -14.6206, 0.83 ) }
    dend_16 { pt3dadd( -52.1375, -50.9545, -15.7511, 0.55 ) }
    dend_16 { pt3dadd( -54.4513, -50.7279, -16.2561, 0.55 ) }
    dend_16 { pt3dadd( -55.4791, -50.5798, -16.4535, 0.55 ) }
    dend_16 { pt3dadd( -57.7204, -50.2524, -16.8438, 0.55 ) }
    dend_16 { pt3dadd( -61.0678, -49.7031, -17.2316, 0.55 ) }
    dend_16 { pt3dadd( -65.4794, -48.8583, -17.6068, 0.55 ) }
    dend_16 { pt3dadd( -68.157, -48.2426, -17.6161, 0.55 ) }
    dend_16 { pt3dadd( -69.7649, -47.8772, -17.6122, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 91/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -9.86835, -38.4954, -13.2685, 0.55 ) }
    dend_13 { pt3dadd( -10.1839, -38.3405, -13.2589, 0.55 ) }
    dend_13 { pt3dadd( -11.4794, -37.8037, -13.1595, 0.55 ) }
    dend_13 { pt3dadd( -13.5713, -37.0668, -13.0404, 0.55 ) }
    dend_13 { pt3dadd( -14.7972, -36.6544, -12.76, 0.55 ) }
    dend_13 { pt3dadd( -16.4019, -36.1482, -12.2609, 0.83 ) }
    dend_13 { pt3dadd( -18.8153, -35.4665, -11.4545, 0.55 ) }
    dend_13 { pt3dadd( -20.4017, -35.0017, -10.8834, 0.55 ) }
    dend_13 { pt3dadd( -21.5603, -34.6515, -10.4145, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_13 { pt3dadd( -26.2618, -33.3681, -8.26392, 0.55 ) }
    dend_13 { pt3dadd( -29.3471, -32.5911, -6.8053, 0.55 ) }
    dend_13 { pt3dadd( -31.6762, -32.1024, -5.69501, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_3 (entry count 3/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 2.54783, 149.431, 30.1717, 0.28 ) }
    dend_7 { pt3dadd( 1.57098, 149.833, 30.6483, 0.28 ) }
    dend_7 { pt3dadd( 0.26944, 150.482, 31.2868, 0.55 ) }
    dend_7 { pt3dadd( -1.24515, 151.268, 32.0306, 0.28 ) }
    dend_7 { pt3dadd( -2.2264, 151.836, 32.5304, 0.83 ) }
    dend_7 { pt3dadd( -3.14223, 152.384, 33.0271, 0.28 ) }
    dend_7 { pt3dadd( -3.96384, 152.905, 33.4707, 0.83 ) }
    dend_7 { pt3dadd( -5.29756, 153.856, 34.1969, 0.55 ) }
    dend_7 { pt3dadd( -6.52553, 154.814, 34.7761, 0.55 ) }
    dend_7 { pt3dadd( -7.92833, 155.839, 35.3043, 0.28 ) }
    dend_7 { pt3dadd( -9.02022, 156.604, 35.4831, 0.55 ) }
    dend_7 { pt3dadd( -9.89869, 157.193, 35.5307, 0.28 ) }
    dend_7 { pt3dadd( -10.7412, 157.836, 35.5298, 0.83 ) }
    dend_7 { pt3dadd( -12.519, 159.239, 35.5094, 0.28 ) }
    dend_7 { pt3dadd( -13.8563, 160.36, 35.4976, 0.83 ) }
    dend_7 { pt3dadd( -16.9015, 163.002, 35.5183, 0.28 ) }
    dend_7 { pt3dadd( -19.5526, 165.374, 35.5211, 0.55 ) }
    dend_7 { pt3dadd( -23.0494, 168.572, 35.6441, 0.55 ) }
    dend_7 { pt3dadd( -24.6057, 170.021, 35.746, 0.83 ) }
    dend_7 { pt3dadd( -25.9017, 171.204, 35.9039, 0.28 ) }
    dend_7 { pt3dadd( -27.0065, 172.209, 36.0773, 0.83 ) }
    dend_7 { pt3dadd( -29.0208, 173.943, 36.4899, 0.28 ) }
    dend_7 { pt3dadd( -31.2199, 175.616, 36.8364, 0.83 ) }
    dend_7 { pt3dadd( -33.561, 177.06, 37.133, 0.28 ) }
    dend_7 { pt3dadd( -35.102, 177.961, 37.2988, 0.55 ) }
    dend_7 { pt3dadd( -36.7053, 178.805, 37.4657, 0.28 ) }
    dend_7 { pt3dadd( -37.0699, 178.979, 37.5076, 0.83 ) }
    dend_7 { pt3dadd( -39.1904, 179.871, 37.8668, 0.28 ) }
    dend_7 { pt3dadd( -40.7165, 180.386, 38.0315, 0.83 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 32/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 2.54783, 149.431, 30.1717, 0.55 ) }
    dend_4 { pt3dadd( 2.66498, 152.274, 31.0388, 0.55 ) }
    dend_4 { pt3dadd( 2.74119, 153.993, 31.6253, 0.55 ) }
    dend_4 { pt3dadd( 2.82236, 156.55, 32.4469, 0.55 ) }
    dend_4 { pt3dadd( 2.92932, 159.919, 33.5296, 0.55 ) }
    dend_4 { pt3dadd( 2.98451, 161.657, 34.0882, 0.55 ) }
    dend_4 { pt3dadd( 3.13012, 166.244, 35.562, 0.55 ) }
    dend_4 { pt3dadd( 3.23838, 169.423, 36.4555, 0.55 ) }
    dend_4 { pt3dadd( 3.48988, 173.558, 37.5756, 0.55 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 41/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -108.673, -229.364, -135.238, 0.55 ) }
    dend_33 { pt3dadd( -107.762, -231.701, -134.263, 0.55 ) }
    dend_33 { pt3dadd( -106.699, -234.402, -133.087, 0.55 ) }
    dend_33 { pt3dadd( -105.724, -236.876, -131.98, 0.28 ) }
    dend_33 { pt3dadd( -105.536, -237.316, -131.785, 0.55 ) }
    dend_33 { pt3dadd( -104.697, -239.219, -130.949, 0.28 ) }
    dend_33 { pt3dadd( -104.395, -239.881, -130.541, 0.55 ) }
    dend_33 { pt3dadd( -103.69, -241.388, -129.108, 0.28 ) }
    dend_33 { pt3dadd( -103.457, -241.853, -128.495, 0.55 ) }
    dend_33 { pt3dadd( -102.629, -243.394, -126.091, 0.55 ) }
    dend_33 { pt3dadd( -102.429, -243.75, -125.43, 0.83 ) }
    dend_33 { pt3dadd( -100.739, -246.507, -119.843, 0.28 ) }
    dend_33 { pt3dadd( -99.7566, -247.994, -116.56, 0.55 ) }
    dend_33 { pt3dadd( -99.6867, -248.092, -116.329, 0.28 ) }
    dend_33 { pt3dadd( -99.34, -248.584, -115.151, 0.83 ) }
    dend_33 { pt3dadd( -98.4218, -249.963, -111.698, 0.28 ) }
    dend_33 { pt3dadd( -97.9185, -250.716, -110.04, 0.55 ) }
    dend_33 { pt3dadd( -97.6826, -251.068, -109.445, 0.28 ) }
    dend_33 { pt3dadd( -97.1523, -251.877, -108.243, 0.28 ) }
    dend_33 { pt3dadd( -96.2954, -253.237, -106.159, 0.28 ) }
    dend_33 { pt3dadd( -95.4497, -254.729, -103.785, 0.28 ) }
    dend_33 { pt3dadd( -95.1626, -255.362, -102.862, 0.83 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 63/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -108.673, -229.364, -135.238, 0.28 ) }
    dend_32 { pt3dadd( -109.201, -230.781, -135.711, 0.28 ) }
    dend_32 { pt3dadd( -109.783, -232.434, -136.208, 0.28 ) }
    dend_32 { pt3dadd( -110.064, -233.262, -136.459, 0.28 ) }
    dend_32 { pt3dadd( -110.292, -233.915, -136.654, 0.55 ) }
    dend_32 { pt3dadd( -111.185, -236.335, -137.316, 0.28 ) }
    dend_32 { pt3dadd( -111.32, -236.686, -137.39, 0.28 ) }
    dend_32 { pt3dadd( -111.765, -237.73, -137.511, 0.55 ) }
    dend_32 { pt3dadd( -112.085, -238.453, -137.521, 0.28 ) }
    dend_32 { pt3dadd( -112.28, -238.951, -137.525, 0.55 ) }
    dend_32 { pt3dadd( -112.721, -240.089, -137.513, 0.28 ) }
    dend_32 { pt3dadd( -113.081, -241.064, -137.46, 0.55 ) }
    dend_32 { pt3dadd( -113.809, -243.269, -137.415, 0.28 ) }
    dend_32 { pt3dadd( -113.932, -243.739, -137.44, 0.55 ) }
    dend_32 { pt3dadd( -114.447, -246.312, -137.643, 0.28 ) }
    dend_32 { pt3dadd( -114.488, -246.687, -137.682, 0.55 ) }
    dend_32 { pt3dadd( -114.522, -247.708, -137.816, 0.28 ) }
    dend_32 { pt3dadd( -114.495, -248.317, -137.896, 0.55 ) }
    dend_32 { pt3dadd( -114.251, -250.216, -138.091, 0.28 ) }
    dend_32 { pt3dadd( -114.184, -250.595, -138.105, 0.55 ) }
    dend_32 { pt3dadd( -113.726, -252.599, -137.993, 0.28 ) }
    dend_32 { pt3dadd( -113.603, -253.061, -137.953, 0.55 ) }
    dend_32 { pt3dadd( -113.248, -254.258, -137.807, 0.28 ) }
    dend_32 { pt3dadd( -113.193, -254.419, -137.78, 0.55 ) }
    dend_32 { pt3dadd( -112.965, -255.058, -137.63, 0.28 ) }
    dend_32 { pt3dadd( -112.854, -255.368, -137.565, 0.55 ) }
    dend_32 { pt3dadd( -112.332, -256.834, -137.311, 0.28 ) }
    dend_32 { pt3dadd( -112.282, -256.989, -137.281, 0.55 ) }
    dend_32 { pt3dadd( -112.008, -257.954, -137.092, 0.28 ) }
    dend_32 { pt3dadd( -111.966, -258.114, -137.056, 0.55 ) }
    dend_32 { pt3dadd( -111.762, -258.976, -136.839, 0.28 ) }
    dend_32 { pt3dadd( -111.685, -259.299, -136.79, 0.55 ) }
    dend_32 { pt3dadd( -111.318, -260.922, -136.684, 0.28 ) }
    dend_32 { pt3dadd( -111.176, -261.587, -136.682, 0.55 ) }
    dend_32 { pt3dadd( -111.006, -262.426, -136.723, 0.28 ) }
    dend_32 { pt3dadd( -110.909, -262.952, -136.754, 0.55 ) }
    dend_32 { pt3dadd( -110.533, -265.25, -136.944, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_32 { pt3dadd( -110.388, -266.379, -137.026, 0.28 ) }
    dend_32 { pt3dadd( -110.356, -266.755, -137.052, 0.28 ) }
    dend_32 { pt3dadd( -110.326, -267.284, -137.022, 0.55 ) }
    dend_32 { pt3dadd( -110.26, -268.707, -136.839, 0.28 ) }
    dend_32 { pt3dadd( -110.237, -269.079, -136.771, 0.55 ) }
    dend_32 { pt3dadd( -110.108, -270.87, -136.352, 0.28 ) }
    dend_32 { pt3dadd( -110.019, -271.912, -136.091, 0.55 ) }
    dend_32 { pt3dadd( -109.657, -275.926, -135.064, 0.28 ) }
    dend_32 { pt3dadd( -109.644, -276.093, -135.022, 0.55 ) }
    dend_32 { pt3dadd( -109.565, -277.106, -134.754, 0.28 ) }
    dend_32 { pt3dadd( -109.545, -277.79, -134.57, 0.55 ) }
    dend_32 { pt3dadd( -109.62, -279.505, -134.107, 0.28 ) }
    dend_32 { pt3dadd( -109.698, -280.444, -133.845, 0.28 ) }
    dend_32 { pt3dadd( -109.87, -281.269, -133.617, 0.55 ) }
    dend_32 { pt3dadd( -110.172, -282.414, -133.289, 0.28 ) }
    dend_32 { pt3dadd( -110.825, -284.203, -132.744, 0.28 ) }
    dend_32 { pt3dadd( -111.089, -284.792, -132.568, 0.55 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 17/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 4.95617, -41.4114, -14.2857, 0.55 ) }
    dend_28 { pt3dadd( 7.73361, -42.8764, -15.6498, 0.55 ) }
    dend_28 { pt3dadd( 8.79614, -43.4249, -16.1784, 0.55 ) }
    dend_28 { pt3dadd( 9.67435, -43.8595, -16.6197, 0.83 ) }
    dend_28 { pt3dadd( 11.5289, -44.6958, -17.5319, 0.55 ) }
    dend_28 { pt3dadd( 14.14, -45.7729, -18.7743, 1.11 ) }
    dend_28 { pt3dadd( 16.3981, -46.6193, -19.7929, 0.55 ) }
    dend_28 { pt3dadd( 17.8116, -47.0578, -20.3464, 0.55 ) }
    dend_28 { pt3dadd( 19.8945, -47.4852, -21.1842, 0.83 ) }
    dend_28 { pt3dadd( 20.8705, -47.5833, -21.6092, 0.55 ) }
    dend_28 { pt3dadd( 21.6506, -47.5775, -21.9589, 0.55 ) }
    dend_28 { pt3dadd( 22.9134, -47.4137, -22.5163, 0.55 ) }
    dend_28 { pt3dadd( 24.9058, -47.0549, -23.369, 0.28 ) }
    dend_28 { pt3dadd( 26.9729, -46.5844, -24.1906, 0.83 ) }
    dend_28 { pt3dadd( 28.8885, -46.0522, -24.9372, 0.28 ) }
    dend_28 { pt3dadd( 30.0786, -45.7063, -25.3971, 0.55 ) }
    dend_28 { pt3dadd( 30.747, -45.4787, -25.6452, 0.28 ) }
    dend_28 { pt3dadd( 31.7214, -45.0665, -25.9751, 0.55 ) }
    dend_28 { pt3dadd( 33.2375, -44.3049, -26.3648, 0.55 ) }
    dend_28 { pt3dadd( 33.8673, -43.9138, -26.4803, 0.28 ) }
    dend_28 { pt3dadd( 34.5755, -43.4776, -26.5717, 0.55 ) }
    dend_28 { pt3dadd( 35.8549, -42.6414, -26.7652, 0.55 ) }
    dend_28 { pt3dadd( 37.024, -41.8913, -26.9466, 1.11 ) }
    dend_28 { pt3dadd( 39.2142, -40.6451, -27.0573, 0.55 ) }
    dend_28 { pt3dadd( 40.4083, -40.0965, -27.0255, 0.55 ) }
    dend_28 { pt3dadd( 41.6552, -39.6262, -26.944, 0.55 ) }
    dend_28 { pt3dadd( 43.28, -39.0917, -26.7893, 0.55 ) }
    dend_28 { pt3dadd( 45.2858, -38.4864, -26.5425, 1.11 ) }
    dend_28 { pt3dadd( 49.0182, -37.4171, -26.0034, 0.83 ) }
    dend_28 { pt3dadd( 51.7812, -36.6547, -25.551, 1.11 ) }
    dend_28 { pt3dadd( 53.5471, -36.1643, -25.2565, 0.28 ) }
    dend_28 { pt3dadd( 53.7486, -36.1078, -25.2246, 0.55 ) }
    dend_28 { pt3dadd( 55.0904, -35.7877, -25.0416, 0.28 ) }
    dend_28 { pt3dadd( 55.9046, -35.5938, -25.018, 0.55 ) }
    dend_28 { pt3dadd( 56.7609, -35.3602, -25.1197, 0.28 ) }
    dend_28 { pt3dadd( 57.5705, -35.1139, -25.2416, 0.55 ) }
    dend_28 { pt3dadd( 59.5425, -34.5004, -25.5545, 0.28 ) }
    dend_28 { pt3dadd( 60.5383, -34.1578, -25.786, 0.83 ) }
    dend_28 { pt3dadd( 62.8153, -33.2787, -26.4631, 0.28 ) }
    dend_28 { pt3dadd( 64.8255, -32.4061, -27.1458, 1.11 ) }
    dend_28 { pt3dadd( 66.2772, -31.6862, -27.5919, 0.28 ) }
    dend_28 { pt3dadd( 67.0104, -31.2776, -27.7739, 0.83 ) }
    dend_28 { pt3dadd( 69.6931, -29.6331, -28.2439, 0.55 ) }
    dend_28 { pt3dadd( 71.1671, -28.6401, -28.3499, 0.55 ) }
    dend_28 { pt3dadd( 72.0094, -28.0089, -28.2994, 0.55 ) }
    dend_28 { pt3dadd( 74.1937, -26.3265, -27.9321, 0.28 ) }
    dend_28 { pt3dadd( 75.3228, -25.4306, -27.6435, 0.55 ) }
    dend_28 { pt3dadd( 76.1576, -24.7431, -27.3663, 0.55 ) }
    dend_28 { pt3dadd( 77.0868, -23.9815, -26.979, 0.55 ) }
    dend_28 { pt3dadd( 78.594, -22.697, -26.4049, 0.55 ) }
    dend_28 { pt3dadd( 79.8999, -21.5304, -26.0497, 0.55 ) }
    dend_28 { pt3dadd( 80.7427, -20.7935, -25.9502, 0.55 ) }
    dend_28 { pt3dadd( 81.5416, -20.1345, -25.8861, 0.55 ) }
    dend_28 { pt3dadd( 82.2261, -19.5981, -25.8296, 0.28 ) }
    dend_28 { pt3dadd( 82.9221, -19.0907, -25.7746, 0.55 ) }
    dend_28 { pt3dadd( 84.3442, -18.1478, -25.6771, 0.28 ) }
    dend_28 { pt3dadd( 85.7741, -17.2587, -25.6086, 0.83 ) }
    dend_28 { pt3dadd( 87.1543, -16.5019, -25.5394, 0.28 ) }
    dend_28 { pt3dadd( 87.9324, -16.1283, -25.5011, 0.28 ) }
    dend_28 { pt3dadd( 88.6156, -15.8046, -25.468, 0.28 ) }
    dend_28 { pt3dadd( 88.985, -15.6275, -25.4527, 0.28 ) }
    dend_28 { pt3dadd( 89.7509, -15.2832, -25.4298, 0.28 ) }
    dend_28 { pt3dadd( 90.5869, -14.8898, -25.4051, 0.28 ) }
    dend_28 { pt3dadd( 91.3614, -14.524, -25.389, 0.55 ) }
    dend_28 { pt3dadd( 92.1741, -14.1796, -25.3098, 0.55 ) }
    dend_28 { pt3dadd( 93.7305, -13.6147, -25.0819, 0.55 ) }
    dend_28 { pt3dadd( 94.7004, -13.2864, -24.9093, 0.55 ) }
    dend_28 { pt3dadd( 95.7444, -12.9331, -24.6685, 0.28 ) }
    dend_28 { pt3dadd( 96.9089, -12.5316, -24.3524, 0.28 ) }
    dend_28 { pt3dadd( 98.4821, -12.0478, -23.9031, 0.28 ) }
    dend_28 { pt3dadd( 99.3593, -11.8443, -23.6632, 0.55 ) }
    dend_28 { pt3dadd( 100.351, -11.6275, -23.4142, 0.28 ) }
    dend_28 { pt3dadd( 101.18, -11.4471, -23.2421, 0.28 ) }
    dend_28 { pt3dadd( 101.789, -11.3437, -23.1486, 0.28 ) }
    dend_28 { pt3dadd( 103.442, -11.0604, -22.9818, 0.55 ) }
    dend_28 { pt3dadd( 105.216, -10.8025, -22.9001, 0.28 ) }
    dend_28 { pt3dadd( 106.67, -10.6216, -22.8564, 0.83 ) }
    dend_28 { pt3dadd( 107.882, -10.4802, -22.8384, 0.28 ) }
    dend_28 { pt3dadd( 109.046, -10.3489, -22.8408, 0.83 ) }
    dend_28 { pt3dadd( 111.118, -10.067, -22.8136, 0.28 ) }
    dend_28 { pt3dadd( 112.722, -9.78612, -22.7742, 0.83 ) }
    dend_28 { pt3dadd( 114.599, -9.39952, -22.7133, 0.55 ) }
    dend_28 { pt3dadd( 115.423, -9.22352, -22.6299, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_28 { pt3dadd( 116.953, -8.87168, -22.3863, 0.83 ) }
    dend_28 { pt3dadd( 119.033, -8.4067, -21.897, 0.28 ) }
    dend_28 { pt3dadd( 120.217, -8.19035, -21.5346, 0.28 ) }
    dend_28 { pt3dadd( 121.195, -8.0057, -21.183, 0.55 ) }
    dend_28 { pt3dadd( 123.45, -7.74789, -20.0507, 0.55 ) }
    dend_28 { pt3dadd( 124.346, -7.70848, -19.5285, 0.83 ) }
    dend_28 { pt3dadd( 125.489, -7.63713, -18.7222, 0.28 ) }
    dend_28 { pt3dadd( 126.397, -7.55669, -17.9833, 0.28 ) }
    dend_28 { pt3dadd( 127.392, -7.40932, -17.1479, 0.83 ) }
    dend_28 { pt3dadd( 130.419, -6.69477, -14.6025, 0.28 ) }
    dend_28 { pt3dadd( 131.098, -6.4769, -14.08, 0.55 ) }
    dend_28 { pt3dadd( 133.952, -5.32678, -11.9135, 0.28 ) }
    dend_28 { pt3dadd( 135.114, -4.74399, -11.0965, 0.55 ) }
    dend_28 { pt3dadd( 136.372, -4.01514, -10.2686, 0.28 ) }
    dend_28 { pt3dadd( 137.16, -3.48373, -9.83022, 0.55 ) }
    dend_28 { pt3dadd( 138.204, -2.56918, -9.47339, 0.28 ) }
    dend_28 { pt3dadd( 138.401, -2.34732, -9.43608, 0.55 ) }
    dend_28 { pt3dadd( 139.253, -1.10273, -9.52942, 0.28 ) }
    dend_28 { pt3dadd( 139.378, -0.840552, -9.56101, 0.55 ) }
    dend_28 { pt3dadd( 139.7, 0.133034, -9.65829, 0.28 ) }
    dend_28 { pt3dadd( 139.877, 0.707324, -9.64184, 0.55 ) }
    dend_28 { pt3dadd( 140.64, 3.43399, -9.35833, 0.28 ) }
    dend_28 { pt3dadd( 140.814, 4.06519, -9.26883, 0.55 ) }
    dend_28 { pt3dadd( 141.361, 6.109, -8.92242, 0.28 ) }
    dend_28 { pt3dadd( 141.636, 7.09896, -8.73819, 0.55 ) }
    dend_28 { pt3dadd( 142.625, 10.5536, -8.0328, 0.28 ) }
    dend_28 { pt3dadd( 142.708, 10.8349, -7.97355, 0.55 ) }
    dend_28 { pt3dadd( 143.391, 12.8607, -7.41802, 0.28 ) }
    dend_28 { pt3dadd( 143.568, 13.4034, -7.26243, 0.55 ) }
    dend_28 { pt3dadd( 143.822, 14.2203, -7.03018, 0.28 ) }
    dend_28 { pt3dadd( 144.098, 15.257, -6.69143, 0.55 ) }
    dend_28 { pt3dadd( 144.522, 17.1985, -6.13065, 0.28 ) }
    dend_28 { pt3dadd( 145.056, 19.6879, -5.32369, 0.55 ) }
    dend_28 { pt3dadd( 145.332, 21.0221, -4.80369, 0.28 ) }
    dend_28 { pt3dadd( 145.549, 22.0897, -4.34142, 0.55 ) }
    dend_28 { pt3dadd( 145.973, 24.2185, -3.27735, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 36/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 4.95617, -41.4114, -14.2857, 0.55 ) }
    dend_27 { pt3dadd( 3.5841, -42.277, -14.9693, 0.55 ) }
    dend_27 { pt3dadd( 2.57408, -42.9111, -15.478, 0.55 ) }
    dend_27 { pt3dadd( 0.124171, -44.3993, -16.6178, 0.55 ) }
    dend_27 { pt3dadd( -5.12186, -47.5705, -18.8672, 0.55 ) }
    dend_27 { pt3dadd( -6.82265, -48.5901, -19.7891, 0.55 ) }
    dend_27 { pt3dadd( -7.63577, -49.0712, -20.2613, 0.55 ) }
    dend_27 { pt3dadd( -9.98851, -50.4498, -21.7469, 0.55 ) }
    dend_27 { pt3dadd( -11.2209, -51.1343, -22.5249, 0.55 ) }
    dend_27 { pt3dadd( -12.7258, -51.917, -23.3672, 0.83 ) }
    dend_27 { pt3dadd( -18.0571, -54.6426, -25.9118, 0.28 ) }
    dend_27 { pt3dadd( -18.9239, -55.0487, -26.3416, 0.28 ) }
    dend_27 { pt3dadd( -20.2268, -55.5635, -26.9701, 0.55 ) }
    dend_27 { pt3dadd( -22.3336, -56.3189, -27.8879, 0.28 ) }
    dend_27 { pt3dadd( -25.0256, -57.2855, -29.0776, 1.11 ) }
    dend_27 { pt3dadd( -29.6317, -58.9948, -30.889, 0.55 ) }
    dend_27 { pt3dadd( -31.6161, -59.7525, -31.4722, 0.55 ) }
    dend_27 { pt3dadd( -32.751, -60.1814, -31.9455, 0.55 ) }
    dend_27 { pt3dadd( -35.0972, -61.0335, -33.1056, 0.55 ) }
    dend_27 { pt3dadd( -38.0958, -62.1276, -34.8521, 0.83 ) }
    dend_27 { pt3dadd( -39.6921, -62.7246, -35.8265, 0.55 ) }
    dend_27 { pt3dadd( -41.1082, -63.3148, -36.5862, 0.55 ) }
    dend_27 { pt3dadd( -46.5027, -65.8053, -39.1672, 0.28 ) }
    dend_27 { pt3dadd( -47.7704, -66.4026, -39.6866, 0.55 ) }
    dend_27 { pt3dadd( -50.5209, -67.5772, -40.6116, 0.28 ) }
    dend_27 { pt3dadd( -52.4036, -68.375, -41.0221, 0.83 ) }
    dend_27 { pt3dadd( -54.4686, -69.3195, -41.2659, 0.28 ) }
    dend_27 { pt3dadd( -56.2569, -70.3122, -41.1756, 0.28 ) }
    dend_27 { pt3dadd( -57.933, -71.3955, -40.7074, 0.28 ) }
    dend_27 { pt3dadd( -58.6687, -71.8858, -40.4639, 0.55 ) }
    dend_27 { pt3dadd( -59.7037, -72.57, -40.1076, 0.55 ) }
    dend_27 { pt3dadd( -61.6527, -73.8074, -39.5327, 0.28 ) }
    dend_27 { pt3dadd( -63.4184, -74.8667, -39.089, 0.83 ) }
    dend_27 { pt3dadd( -66.4482, -76.6407, -38.3903, 0.28 ) }
    dend_27 { pt3dadd( -67.6448, -77.2776, -38.2038, 0.55 ) }
    dend_27 { pt3dadd( -70.2702, -78.5554, -37.7753, 0.28 ) }
    dend_27 { pt3dadd( -71.9443, -79.3051, -37.494, 0.83 ) }
    dend_27 { pt3dadd( -73.8171, -80.0426, -37.1768, 0.28 ) }
    dend_27 { pt3dadd( -74.3113, -80.2196, -37.0726, 0.55 ) }
    dend_27 { pt3dadd( -78.1116, -81.4696, -36.0669, 0.28 ) }
    dend_27 { pt3dadd( -81.7799, -82.6548, -35.089, 0.83 ) }
    dend_27 { pt3dadd( -83.4442, -83.1703, -34.6169, 0.28 ) }
    dend_27 { pt3dadd( -84.313, -83.4311, -34.4764, 0.55 ) }
    dend_27 { pt3dadd( -86.2856, -83.9827, -34.3204, 0.28 ) }
    dend_27 { pt3dadd( -87.7416, -84.3555, -34.2746, 0.55 ) }
    dend_27 { pt3dadd( -91.4027, -85.21, -34.2916, 0.28 ) }
    dend_27 { pt3dadd( -92.436, -85.394, -34.4268, 0.55 ) }
    dend_27 { pt3dadd( -97.7787, -86.105, -35.2872, 0.28 ) }
    dend_27 { pt3dadd( -98.8527, -86.2152, -35.4663, 0.55 ) }
    dend_27 { pt3dadd( -101.362, -86.3797, -35.8835, 0.28 ) }
    dend_27 { pt3dadd( -103.951, -86.4419, -36.2397, 0.55 ) }
    dend_27 { pt3dadd( -107.611, -86.2713, -36.6226, 0.28 ) }
    dend_27 { pt3dadd( -110.212, -86.0211, -36.8665, 0.28 ) }
    dend_27 { pt3dadd( -112.373, -85.6447, -36.9716, 0.83 ) }
    dend_27 { pt3dadd( -113.774, -85.311, -37.0684, 0.28 ) }
    dend_27 { pt3dadd( -114.486, -85.0495, -37.1345, 0.55 ) }
    dend_27 { pt3dadd( -116.129, -84.2026, -37.2234, 0.28 ) }
    dend_27 { pt3dadd( -116.34, -84.0684, -37.206, 0.55 ) }
    dend_27 { pt3dadd( -117.45, -83.2722, -37.1015, 0.28 ) }
    dend_27 { pt3dadd( -118.704, -82.3684, -36.9436, 0.55 ) }
    dend_27 { pt3dadd( -120.743, -80.9773, -36.5074, 0.28 ) }
    dend_27 { pt3dadd( -122.326, -79.8727, -36.0179, 0.55 ) }
    dend_27 { pt3dadd( -124.856, -78.0822, -35.056, 0.28 ) }
    dend_27 { pt3dadd( -125.14, -77.8807, -34.9395, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_27 { pt3dadd( -126.397, -76.9963, -34.3801, 0.28 ) }
    dend_27 { pt3dadd( -128.859, -75.2354, -33.2238, 0.55 ) }
    dend_27 { pt3dadd( -131.407, -73.3315, -31.9546, 0.28 ) }
    dend_27 { pt3dadd( -131.599, -73.1831, -31.8621, 0.55 ) }
    dend_27 { pt3dadd( -132.4, -72.5519, -31.4984, 0.28 ) }
    dend_27 { pt3dadd( -133.107, -72.0305, -31.2059, 0.83 ) }
    dend_27 { pt3dadd( -135.177, -70.6357, -30.4603, 0.28 ) }
    dend_27 { pt3dadd( -135.863, -70.2543, -30.2731, 0.55 ) }
    dend_27 { pt3dadd( -137.322, -69.6275, -29.9186, 0.28 ) }
    dend_27 { pt3dadd( -137.543, -69.5314, -29.8642, 0.55 ) }
    dend_27 { pt3dadd( -139.396, -68.7477, -29.4019, 0.28 ) }
    dend_27 { pt3dadd( -140.017, -68.4695, -29.1708, 0.55 ) }
    dend_27 { pt3dadd( -141.569, -67.791, -28.4467, 0.28 ) }
    dend_27 { pt3dadd( -143.051, -67.1111, -27.6805, 0.55 ) }
    dend_27 { pt3dadd( -145.187, -66.0936, -26.4586, 0.28 ) }
    dend_27 { pt3dadd( -145.83, -65.7873, -26.0734, 0.55 ) }
    dend_27 { pt3dadd( -149.182, -64.1432, -23.9519, 0.28 ) }
    dend_27 { pt3dadd( -149.914, -63.8202, -23.483, 0.55 ) }
    dend_27 { pt3dadd( -152.121, -62.992, -22.0615, 0.28 ) }
    dend_27 { pt3dadd( -153.054, -62.7533, -21.4921, 0.83 ) }
    dend_27 { pt3dadd( -154.437, -62.5041, -20.6743, 0.28 ) }
    dend_27 { pt3dadd( -154.763, -62.4611, -20.5051, 0.55 ) }
    dend_27 { pt3dadd( -156.465, -62.4521, -19.9041, 0.28 ) }
    dend_27 { pt3dadd( -157.54, -62.5127, -19.5252, 0.55 ) }
    dend_27 { pt3dadd( -159.688, -62.9565, -18.7936, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 25/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 24.0887, -18.1904, -56.5252, 0.28 ) }
    dend_25 { pt3dadd( 22.8432, -13.6783, -56.6221, 0.28 ) }
    dend_25 { pt3dadd( 22.3128, -11.6168, -56.6238, 0.83 ) }
    dend_25 { pt3dadd( 21.7626, -9.183, -56.596, 0.28 ) }
    dend_25 { pt3dadd( 21.5935, -7.88502, -56.6954, 0.55 ) }
    dend_25 { pt3dadd( 21.41, -5.19594, -57.0185, 0.55 ) }
    dend_25 { pt3dadd( 21.3861, -3.90206, -57.1967, 0.55 ) }
    dend_25 { pt3dadd( 21.5814, -1.39322, -57.5507, 0.28 ) }
    dend_25 { pt3dadd( 21.8958, 0.407411, -57.855, 0.83 ) }
    dend_25 { pt3dadd( 23.2532, 5.08599, -58.7314, 0.28 ) }
    dend_25 { pt3dadd( 23.6316, 6.08305, -58.9139, 0.28 ) }
    dend_25 { pt3dadd( 24.0923, 7.03467, -59.0637, 0.55 ) }
    dend_25 { pt3dadd( 25.0817, 8.77986, -59.2126, 0.28 ) }
    dend_25 { pt3dadd( 25.6858, 9.69117, -59.1891, 0.55 ) }
    dend_25 { pt3dadd( 26.5752, 10.934, -58.9809, 0.28 ) }
    dend_25 { pt3dadd( 27.5165, 12.2247, -58.5283, 0.55 ) }
    dend_25 { pt3dadd( 29.0379, 14.2575, -57.7951, 0.28 ) }
    dend_25 { pt3dadd( 29.4661, 14.8069, -57.6005, 0.55 ) }
    dend_25 { pt3dadd( 30.4106, 15.9875, -57.1874, 0.28 ) }
    dend_25 { pt3dadd( 30.7563, 16.4244, -57.0395, 0.55 ) }
    dend_25 { pt3dadd( 31.9468, 18.0082, -56.4656, 0.28 ) }
    dend_25 { pt3dadd( 32.7878, 19.1318, -56.0287, 0.55 ) }
    dend_25 { pt3dadd( 34.94, 22.1123, -54.8733, 0.28 ) }
    dend_25 { pt3dadd( 36.2563, 24.0252, -54.1524, 0.83 ) }
    dend_25 { pt3dadd( 37.7477, 26.2014, -53.3182, 0.28 ) }
    dend_25 { pt3dadd( 39.3092, 28.4706, -52.431, 0.55 ) }
    dend_25 { pt3dadd( 39.7193, 29.0666, -52.1957, 0.55 ) }
    dend_25 { pt3dadd( 41.1044, 31.1034, -51.3959, 0.28 ) }
    dend_25 { pt3dadd( 41.9591, 32.4202, -50.8972, 0.55 ) }
    dend_25 { pt3dadd( 42.3262, 33.0083, -50.6708, 0.55 ) }
    dend_25 { pt3dadd( 43.5188, 34.9897, -49.9206, 0.28 ) }
    dend_25 { pt3dadd( 44.3892, 36.5334, -49.3828, 0.55 ) }
    dend_25 { pt3dadd( 45.2183, 38.1016, -48.8197, 0.55 ) }
    dend_25 { pt3dadd( 45.8688, 39.3632, -48.3384, 0.28 ) }
    dend_25 { pt3dadd( 46.7572, 41.1329, -47.6729, 0.55 ) }
    dend_25 { pt3dadd( 47.6004, 42.7909, -47.0538, 0.28 ) }
    dend_25 { pt3dadd( 48.0884, 43.762, -46.6983, 0.55 ) }
    dend_25 { pt3dadd( 48.5436, 44.6604, -46.3885, 0.55 ) }
    dend_25 { pt3dadd( 49.6705, 46.8367, -45.7018, 0.55 ) }
    dend_25 { pt3dadd( 50.6288, 48.7405, -45.1244, 0.28 ) }
    dend_25 { pt3dadd( 51.4533, 50.2966, -44.6406, 0.28 ) }
    dend_25 { pt3dadd( 52.0542, 51.397, -44.2432, 0.28 ) }
    dend_25 { pt3dadd( 52.4971, 52.1373, -43.9297, 0.28 ) }
    dend_25 { pt3dadd( 52.7695, 52.6012, -43.698, 0.55 ) }
    dend_25 { pt3dadd( 53.5874, 54.0223, -42.8747, 0.28 ) }
    dend_25 { pt3dadd( 54.4049, 55.6511, -41.8573, 0.55 ) }
    dend_25 { pt3dadd( 54.5873, 56.06, -41.5854, 0.55 ) }
    dend_25 { pt3dadd( 55.2125, 57.5234, -40.5949, 0.28 ) }
    dend_25 { pt3dadd( 55.6967, 58.7835, -39.7775, 0.55 ) }
    dend_25 { pt3dadd( 56.0215, 59.669, -39.2358, 0.55 ) }
    dend_25 { pt3dadd( 56.6637, 61.7346, -37.9678, 0.28 ) }
    dend_25 { pt3dadd( 56.8286, 62.392, -37.5567, 0.55 ) }
    dend_25 { pt3dadd( 57.0908, 63.5686, -36.7573, 0.28 ) }
    dend_25 { pt3dadd( 57.2058, 64.1553, -36.3504, 0.55 ) }
    dend_25 { pt3dadd( 57.5571, 66.0361, -35.0426, 0.28 ) }
    dend_25 { pt3dadd( 57.9964, 68.1107, -33.556, 0.28 ) }
    dend_25 { pt3dadd( 58.1847, 68.7486, -33.1298, 0.55 ) }
    dend_25 { pt3dadd( 58.7821, 70.6101, -31.761, 0.28 ) }
    dend_25 { pt3dadd( 59.1842, 71.7602, -30.87, 0.28 ) }
    dend_25 { pt3dadd( 59.8215, 73.5666, -29.5308, 0.55 ) }
    dend_25 { pt3dadd( 60.2821, 74.9934, -28.4067, 0.28 ) }
    dend_25 { pt3dadd( 60.9786, 77.0609, -26.732, 0.55 ) }
    dend_25 { pt3dadd( 62.1293, 80.3682, -23.9702, 0.55 ) }
    dend_25 { pt3dadd( 62.5032, 81.5485, -22.8828, 0.55 ) }
    dend_25 { pt3dadd( 62.9043, 82.93, -21.543, 0.55 ) }
    dend_25 { pt3dadd( 63.4778, 85.6994, -18.5354, 0.55 ) }
    dend_25 { pt3dadd( 63.6365, 86.7806, -17.3167, 0.55 ) }
    dend_25 { pt3dadd( 63.8102, 88.2372, -15.6897, 0.55 ) }
    dend_25 { pt3dadd( 64.2178, 90.4172, -13.4843, 0.55 ) }
    dend_25 { pt3dadd( 64.6633, 92.1836, -11.6606, 0.55 ) }
    dend_25 { pt3dadd( 65.5785, 94.925, -8.84811, 0.55 ) }
    dend_25 { pt3dadd( 66.2961, 96.738, -7.21237, 0.55 ) }
    dend_25 { pt3dadd( 66.7935, 97.9307, -6.19092, 0.55 ) }
    dend_25 { pt3dadd( 67.7081, 99.8501, -4.65904, 0.55 ) }
    dend_25 { pt3dadd( 68.1758, 100.636, -4.12444, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_25 { pt3dadd( 68.6203, 101.334, -3.71096, 0.55 ) }
    dend_25 { pt3dadd( 69.403, 102.519, -3.22436, 0.83 ) }
    dend_25 { pt3dadd( 70.0111, 103.615, -2.8356, 0.55 ) }
    dend_25 { pt3dadd( 70.1565, 103.933, -2.74226, 0.55 ) }
    dend_25 { pt3dadd( 70.5213, 105.01, -2.56852, 0.55 ) }
    dend_25 { pt3dadd( 70.862, 106.245, -2.46355, 0.55 ) }
    dend_25 { pt3dadd( 71.2821, 107.638, -2.4363, 0.55 ) }
    dend_25 { pt3dadd( 71.8741, 109.395, -2.44088, 0.55 ) }
    dend_25 { pt3dadd( 72.0661, 109.929, -2.44989, 0.55 ) }
    dend_25 { pt3dadd( 73.3127, 113.314, -2.41685, 0.28 ) }
    dend_25 { pt3dadd( 73.7838, 114.548, -2.37288, 0.55 ) }
    dend_25 { pt3dadd( 74.8425, 117.161, -2.20612, 0.55 ) }
    dend_25 { pt3dadd( 75.6701, 119.063, -2.01405, 0.55 ) }
    dend_25 { pt3dadd( 75.8989, 119.523, -1.93806, 0.55 ) }
    dend_25 { pt3dadd( 76.5854, 121.029, -1.4198, 0.55 ) }
    dend_25 { pt3dadd( 77.0123, 122.272, -0.789796, 0.55 ) }
    dend_25 { pt3dadd( 77.0811, 122.577, -0.619605, 0.55 ) }
    dend_25 { pt3dadd( 77.2048, 123.627, -0.146295, 0.55 ) }
    dend_25 { pt3dadd( 77.3328, 125.095, 0.325443, 0.55 ) }
    dend_25 { pt3dadd( 77.6755, 129.726, 1.25472, 0.55 ) }
    dend_25 { pt3dadd( 77.8341, 131.791, 1.45213, 0.55 ) }
    dend_25 { pt3dadd( 77.9259, 133.07, 1.49165, 0.55 ) }
    dend_25 { pt3dadd( 78.2532, 137.005, 1.40256, 0.55 ) }
    dend_25 { pt3dadd( 78.3586, 138.289, 1.34431, 0.55 ) }
    dend_25 { pt3dadd( 78.5112, 139.896, 1.14739, 0.55 ) }
    dend_25 { pt3dadd( 78.7077, 140.962, 0.885381, 0.55 ) }
    dend_25 { pt3dadd( 78.9621, 142.056, 0.66837, 0.55 ) }
    dend_25 { pt3dadd( 79.3382, 143.826, 0.473801, 0.55 ) }
    dend_25 { pt3dadd( 79.6139, 145.621, 0.76198, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 29/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 24.0887, -18.1904, -56.5252, 0.55 ) }
    dend_24 { pt3dadd( 23.7738, -17.7719, -58.4341, 0.55 ) }
    dend_24 { pt3dadd( 23.6583, -17.6123, -59.1357, 0.28 ) }
    dend_24 { pt3dadd( 23.6471, -17.2668, -60.963, 0.83 ) }
    dend_24 { pt3dadd( 24.0767, -16.9955, -62.5937, 0.28 ) }
    dend_24 { pt3dadd( 24.7411, -16.7911, -64.2014, 0.55 ) }
    dend_24 { pt3dadd( 25.8419, -16.4759, -66.5395, 0.28 ) }
    dend_24 { pt3dadd( 26.2734, -16.3614, -67.3631, 0.83 ) }
    dend_24 { pt3dadd( 29.7581, -15.3689, -73.4674, 0.83 ) }
    dend_24 { pt3dadd( 35.961, -13.4828, -83.5613, 0.83 ) }
    dend_24 { pt3dadd( 42.0009, -11.6373, -92.527, 0.55 ) }
    dend_24 { pt3dadd( 43.4474, -11.1735, -94.5257, 0.28 ) }
    dend_24 { pt3dadd( 43.8945, -11.0185, -95.0801, 0.55 ) }
    dend_24 { pt3dadd( 45.6512, -10.3351, -97.0198, 0.28 ) }
    dend_24 { pt3dadd( 46.238, -10.0609, -97.5292, 0.55 ) }
    dend_24 { pt3dadd( 48.65, -8.46821, -98.8846, 0.28 ) }
    dend_24 { pt3dadd( 49.8734, -7.46994, -99.2761, 0.28 ) }
    dend_24 { pt3dadd( 51.3359, -6.39857, -99.8218, 0.83 ) }
    dend_24 { pt3dadd( 53.1148, -5.26423, -100.595, 0.28 ) }
    dend_24 { pt3dadd( 53.8632, -4.8452, -100.954, 0.55 ) }
    dend_24 { pt3dadd( 56.149, -3.65521, -102.165, 0.28 ) }
    dend_24 { pt3dadd( 57.3713, -3.04582, -102.95, 0.55 ) }
    dend_24 { pt3dadd( 59.7774, -1.94913, -104.812, 0.28 ) }
    dend_24 { pt3dadd( 60.7263, -1.49531, -105.745, 0.55 ) }
    dend_24 { pt3dadd( 61.6054, -1.01369, -106.845, 0.28 ) }
    dend_24 { pt3dadd( 61.7722, -0.892672, -107.171, 0.55 ) }
    dend_24 { pt3dadd( 62.3086, -0.432446, -108.741, 0.55 ) }
    dend_24 { pt3dadd( 62.7366, 0.0164817, -110.904, 0.55 ) }
    dend_24 { pt3dadd( 62.9816, 0.269247, -113.067, 0.28 ) }
    dend_24 { pt3dadd( 63.1161, 0.328578, -114.793, 0.83 ) }
    dend_24 { pt3dadd( 63.3882, 0.169287, -119.59, 0.28 ) }
    dend_24 { pt3dadd( 63.4655, 0.0392821, -120.878, 0.55 ) }
    dend_24 { pt3dadd( 63.5892, -0.251843, -122.906, 0.55 ) }
    dend_24 { pt3dadd( 63.7417, -0.65858, -125.525, 0.83 ) }
    dend_24 { pt3dadd( 63.8855, -1.02784, -127.844, 0.28 ) }
    dend_24 { pt3dadd( 63.9072, -1.05871, -128.103, 0.28 ) }
    dend_24 { pt3dadd( 64.3369, -1.52978, -133.753, 0.28 ) }
    dend_24 { pt3dadd( 64.494, -1.60456, -135.976, 0.83 ) }
    dend_24 { pt3dadd( 64.724, -1.53647, -138.986, 0.28 ) }
    dend_24 { pt3dadd( 64.8062, -1.3476, -141.286, 0.55 ) }
    dend_24 { pt3dadd( 64.8589, -1.01593, -143.648, 0.55 ) }
    dend_24 { pt3dadd( 64.8757, -0.780243, -144.919, 0.55 ) }
    dend_24 { pt3dadd( 64.8705, -0.653538, -145.484, 0.83 ) }
    dend_24 { pt3dadd( 64.8043, -0.149639, -147.943, 0.28 ) }
    dend_24 { pt3dadd( 64.8058, 0.0560698, -149.017, 0.55 ) }
    dend_24 { pt3dadd( 64.9067, 0.647603, -152.374, 0.28 ) }
    dend_24 { pt3dadd( 64.9763, 0.889365, -153.824, 0.55 ) }
    dend_24 { pt3dadd( 65.2127, 1.42231, -156.879, 0.28 ) }
    dend_24 { pt3dadd( 65.2413, 1.51738, -157.389, 0.55 ) }
    dend_24 { pt3dadd( 65.3011, 2.46216, -162.038, 0.28 ) }
    dend_24 { pt3dadd( 65.3189, 2.5765, -162.603, 0.83 ) }
    dend_24 { pt3dadd( 65.3444, 3.0951, -164.857, 0.28 ) }
    dend_24 { pt3dadd( 65.4267, 3.53404, -166.792, 0.55 ) }
    dend_24 { pt3dadd( 66.0499, 5.00863, -171.97, 0.28 ) }
    dend_24 { pt3dadd( 67.0009, 5.08081, -173.903, 0.55 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 84/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -69.7649, -47.8772, -17.6122, 0.55 ) }
    dend_18 { pt3dadd( -73.9089, -47.5778, -18.5856, 0.55 ) }
    dend_18 { pt3dadd( -75.768, -47.4435, -19.0223, 0.55 ) }
    dend_18 { pt3dadd( -77.7729, -47.2987, -19.4933, 0.55 ) }
    dend_18 { pt3dadd( -80.5155, -47.1006, -20.1375, 1.11 ) }
    dend_18 { pt3dadd( -82.0051, -46.9929, -20.4874, 0.55 ) }
    dend_18 { pt3dadd( -84.7536, -46.7944, -21.133, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 91/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -69.7649, -47.8772, -17.6122, 0.55 ) }
    dend_17 { pt3dadd( -69.7939, -46.7453, -18.8684, 0.55 ) }
    dend_17 { pt3dadd( -69.8628, -45.6143, -20.1631, 0.28 ) }
    dend_17 { pt3dadd( -69.8995, -44.9342, -21.0038, 0.55 ) }
    dend_17 { pt3dadd( -70.0123, -43.5552, -22.753, 0.28 ) }
    dend_17 { pt3dadd( -70.1652, -42.5493, -23.993, 0.55 ) }
    dend_17 { pt3dadd( -70.6622, -39.6809, -27.3988, 0.28 ) }
    dend_17 { pt3dadd( -70.7704, -39.1679, -28.0231, 0.55 ) }
    dend_17 { pt3dadd( -71.1782, -37.4671, -30.1047, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_17 { pt3dadd( -71.3309, -36.8973, -30.8056, 0.55 ) }
    dend_17 { pt3dadd( -72.2457, -33.7035, -34.6277, 0.28 ) }
    dend_17 { pt3dadd( -72.4499, -32.9827, -35.4792, 0.55 ) }
    dend_17 { pt3dadd( -73.0055, -31.3083, -37.3056, 0.28 ) }
    dend_17 { pt3dadd( -73.2909, -30.4358, -38.2418, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 5/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -31.6762, -32.1024, -5.69501, 0.55 ) }
    dend_15 { pt3dadd( -34.9412, -32.2031, -6.41581, 0.55 ) }
    dend_15 { pt3dadd( -36.2984, -32.1919, -6.41583, 0.83 ) }
    dend_15 { pt3dadd( -38.3052, -32.0849, -6.28072, 0.55 ) }
    dend_15 { pt3dadd( -39.8165, -31.9209, -6.10082, 0.55 ) }
    dend_15 { pt3dadd( -42.3117, -31.5582, -5.8177, 0.55 ) }
    dend_15 { pt3dadd( -44.0261, -31.2252, -5.56354, 0.83 ) }
    dend_15 { pt3dadd( -48.5658, -30.0437, -4.61862, 0.55 ) }
    dend_15 { pt3dadd( -49.6659, -29.7176, -4.33235, 0.83 ) }
    dend_15 { pt3dadd( -51.8551, -29.0166, -3.76848, 0.28 ) }
    dend_15 { pt3dadd( -54.1657, -28.3173, -3.30379, 0.55 ) }
    dend_15 { pt3dadd( -56.5233, -27.7093, -3.04617, 0.28 ) }
    dend_15 { pt3dadd( -57.3355, -27.599, -3.01704, 0.55 ) }
    dend_15 { pt3dadd( -60.4726, -27.3679, -3.20556, 0.55 ) }
    dend_15 { pt3dadd( -63.0358, -27.3537, -3.40786, 0.55 ) }
    dend_15 { pt3dadd( -65.9383, -27.5968, -3.76971, 0.55 ) }
    dend_15 { pt3dadd( -67.4438, -27.8564, -4.00754, 0.55 ) }
    dend_15 { pt3dadd( -70.757, -28.7037, -4.76869, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 23/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -31.6762, -32.1024, -5.69501, 0.55 ) }
    dend_14 { pt3dadd( -31.945, -31.0678, -5.73503, 0.55 ) }
    dend_14 { pt3dadd( -32.4181, -29.539, -5.72404, 0.28 ) }
    dend_14 { pt3dadd( -32.7468, -28.4888, -5.70528, 0.55 ) }
    dend_14 { pt3dadd( -33.4808, -26.1372, -5.69018, 0.55 ) }
    dend_14 { pt3dadd( -34.6339, -22.6392, -5.74919, 0.55 ) }
    dend_14 { pt3dadd( -35.3434, -20.6487, -5.79419, 0.55 ) }
    dend_14 { pt3dadd( -36.1078, -18.499, -5.82596, 0.28 ) }
    dend_14 { pt3dadd( -36.8882, -16.1442, -5.87313, 0.28 ) }
    dend_14 { pt3dadd( -37.317, -14.6103, -5.97795, 0.28 ) }
    dend_14 { pt3dadd( -37.6121, -13.3211, -6.20331, 0.55 ) }
    dend_14 { pt3dadd( -37.9833, -11.2361, -6.83239, 0.55 ) }
    dend_14 { pt3dadd( -38.2597, -9.19981, -7.50804, 0.55 ) }
    dend_14 { pt3dadd( -38.4211, -7.5136, -8.18374, 0.55 ) }
    dend_14 { pt3dadd( -38.5839, -5.27158, -9.12004, 0.55 ) }
    dend_14 { pt3dadd( -38.6702, -3.13987, -9.98258, 0.28 ) }
    dend_14 { pt3dadd( -38.73, -1.32994, -10.6916, 0.55 ) }
    dend_14 { pt3dadd( -38.7918, 0.128245, -11.2491, 0.55 ) }
    dend_14 { pt3dadd( -38.9839, 2.13169, -12.0104, 0.28 ) }
    dend_14 { pt3dadd( -39.2559, 4.0688, -12.5881, 0.55 ) }
    dend_14 { pt3dadd( -39.5427, 5.79812, -12.9704, 0.28 ) }
    dend_14 { pt3dadd( -40.0011, 8.40123, -13.4187, 0.55 ) }
    dend_14 { pt3dadd( -40.4818, 10.7862, -13.8057, 0.55 ) }
    dend_14 { pt3dadd( -41.1447, 13.8423, -14.3891, 0.55 ) }
    dend_14 { pt3dadd( -41.8651, 16.6767, -15.0541, 0.28 ) }
    dend_14 { pt3dadd( -42.1727, 17.9332, -15.4722, 0.55 ) }
    dend_14 { pt3dadd( -42.3302, 18.7073, -15.7951, 0.28 ) }
    dend_14 { pt3dadd( -42.4993, 19.9324, -16.4135, 0.55 ) }
    dend_14 { pt3dadd( -42.6778, 21.9441, -17.5636, 0.28 ) }
    dend_14 { pt3dadd( -42.6065, 24.1575, -19.0631, 0.83 ) }
    dend_14 { pt3dadd( -42.3063, 27.3629, -21.5041, 0.55 ) }
    dend_14 { pt3dadd( -41.8811, 30.4077, -23.7073, 0.55 ) }
    dend_14 { pt3dadd( -41.4628, 32.3761, -25.0113, 0.28 ) }
    dend_14 { pt3dadd( -41.2229, 33.3198, -25.5751, 0.55 ) }
    dend_14 { pt3dadd( -40.2249, 37.1935, -27.5887, 0.28 ) }
    dend_14 { pt3dadd( -39.9445, 38.1561, -28.0446, 0.55 ) }
    dend_14 { pt3dadd( -39.0527, 41.5522, -29.5549, 0.55 ) }
    dend_14 { pt3dadd( -38.2619, 44.4775, -30.8675, 0.28 ) }
    dend_14 { pt3dadd( -37.8874, 46.202, -31.5558, 0.55 ) }
    dend_14 { pt3dadd( -37.685, 47.669, -32.0326, 0.28 ) }
    dend_14 { pt3dadd( -37.7004, 49.0808, -32.3086, 0.55 ) }
    dend_14 { pt3dadd( -37.9368, 51.3891, -32.735, 0.28 ) }
    dend_14 { pt3dadd( -38.1839, 52.4839, -32.9574, 0.55 ) }
    dend_14 { pt3dadd( -38.9088, 54.7732, -33.3945, 0.28 ) }
    dend_14 { pt3dadd( -39.6984, 57.2761, -33.9729, 0.55 ) }
    dend_14 { pt3dadd( -40.7207, 60.6155, -34.8167, 0.28 ) }
    dend_14 { pt3dadd( -41.4534, 62.9751, -35.412, 0.55 ) }
    dend_14 { pt3dadd( -41.8869, 64.8232, -35.9126, 0.28 ) }
    dend_14 { pt3dadd( -42.1459, 66.0579, -36.2497, 0.28 ) }
    dend_14 { pt3dadd( -42.4754, 68.3502, -36.9551, 0.55 ) }
    dend_14 { pt3dadd( -42.6296, 70.2317, -37.538, 0.28 ) }
    dend_14 { pt3dadd( -42.612, 71.259, -37.8928, 0.55 ) }
    dend_14 { pt3dadd( -42.5107, 73.5196, -38.4962, 0.28 ) }
    dend_14 { pt3dadd( -42.2574, 76.4048, -39.1865, 0.55 ) }
    dend_14 { pt3dadd( -41.909, 78.8672, -39.7387, 0.28 ) }
    dend_14 { pt3dadd( -41.7722, 79.5986, -39.8629, 0.55 ) }
    dend_14 { pt3dadd( -41.0361, 82.5195, -40.4505, 0.28 ) }
    dend_14 { pt3dadd( -40.4283, 84.3239, -40.8169, 0.55 ) }
    dend_14 { pt3dadd( -39.585, 86.6612, -41.3703, 0.28 ) }
    dend_14 { pt3dadd( -39.2193, 87.5246, -41.5892, 0.55 ) }
    dend_14 { pt3dadd( -37.8297, 90.7541, -42.3174, 0.28 ) }
    dend_14 { pt3dadd( -37.216, 92.2689, -42.6093, 0.55 ) }
    dend_14 { pt3dadd( -36.1757, 95.0109, -42.9987, 0.28 ) }
    dend_14 { pt3dadd( -35.4755, 97.1455, -43.2699, 0.55 ) }
    dend_14 { pt3dadd( -34.8369, 99.3111, -43.5271, 0.55 ) }
    dend_14 { pt3dadd( -34.5369, 100.608, -43.6827, 0.55 ) }
    dend_14 { pt3dadd( -34.1249, 102.586, -43.9363, 0.28 ) }
    dend_14 { pt3dadd( -33.8467, 104.267, -44.126, 1.11 ) }
    dend_14 { pt3dadd( -33.2336, 108.834, -44.5669, 0.55 ) }
    dend_14 { pt3dadd( -32.8848, 111.661, -44.7636, 0.28 ) }
    dend_14 { pt3dadd( -32.6732, 113.962, -44.9228, 0.55 ) }
    dend_14 { pt3dadd( -32.4291, 116.921, -45.0939, 0.28 ) }
    dend_14 { pt3dadd( -32.344, 118.221, -45.1623, 0.55 ) }
    dend_14 { pt3dadd( -32.2064, 120.792, -45.2347, 0.55 ) }
    dend_14 { pt3dadd( -32.0934, 122.524, -45.3033, 0.28 ) }
    dend_14 { pt3dadd( -32.0116, 123.316, -45.364, 0.55 ) }
    dend_14 { pt3dadd( -31.6279, 125.94, -45.6199, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_14 { pt3dadd( -31.4912, 126.894, -45.7737, 0.55 ) }
    dend_14 { pt3dadd( -31.2156, 128.82, -46.1321, 0.28 ) }
    dend_14 { pt3dadd( -30.8847, 131.039, -46.6952, 0.55 ) }
    dend_14 { pt3dadd( -30.309, 133.995, -47.5892, 0.55 ) }
    dend_14 { pt3dadd( -29.6974, 136.521, -48.5149, 0.28 ) }
    dend_14 { pt3dadd( -29.2364, 138.213, -49.2214, 0.55 ) }
    dend_14 { pt3dadd( -28.4092, 141.027, -50.3528, 0.28 ) }
    dend_14 { pt3dadd( -27.8755, 142.989, -51.1243, 0.55 ) }
    dend_14 { pt3dadd( -27.2274, 145.322, -51.9538, 0.83 ) }
    dend_14 { pt3dadd( -26.5017, 148.001, -52.8314, 0.28 ) }
    dend_14 { pt3dadd( -26.3985, 148.327, -52.9525, 0.55 ) }
    dend_14 { pt3dadd( -25.6443, 150.65, -53.7853, 0.55 ) }
    dend_14 { pt3dadd( -25.0949, 152.342, -54.382, 0.55 ) }
    dend_14 { pt3dadd( -24.499, 154.64, -55.0956, 0.28 ) }
    dend_14 { pt3dadd( -23.9924, 157.079, -55.6617, 0.55 ) }
    dend_14 { pt3dadd( -23.5261, 159.459, -56.0044, 0.28 ) }
    dend_14 { pt3dadd( -23.1107, 161.58, -56.2294, 0.55 ) }
    dend_14 { pt3dadd( -22.7324, 163.568, -56.3826, 0.28 ) }
    dend_14 { pt3dadd( -22.3482, 165.593, -56.4703, 0.55 ) }
    dend_14 { pt3dadd( -21.7241, 169.352, -56.4712, 0.55 ) }
    dend_14 { pt3dadd( -21.0696, 173.099, -56.3509, 0.28 ) }
    dend_14 { pt3dadd( -20.8471, 174.424, -56.1999, 0.28 ) }
    dend_14 { pt3dadd( -20.6679, 175.474, -56.0273, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 23/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 3.48988, 173.558, 37.5756, 0.55 ) }
    dend_6 { pt3dadd( 2.52599, 174.65, 38.3255, 0.55 ) }
    dend_6 { pt3dadd( 2.33563, 174.865, 38.4736, 0.55 ) }
    dend_6 { pt3dadd( 1.78643, 175.487, 38.9008, 0.28 ) }
    dend_6 { pt3dadd( 0.94206, 176.444, 39.5578, 0.55 ) }
    dend_6 { pt3dadd( 0.0936142, 177.405, 40.2178, 0.28 ) }
    dend_6 { pt3dadd( -1.27387, 178.954, 41.2817, 0.55 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 30/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 3.48988, 173.558, 37.5756, 0.55 ) }
    dend_5 { pt3dadd( 3.80687, 175.912, 37.4969, 0.55 ) }
    dend_5 { pt3dadd( 3.96695, 178.003, 37.5027, 0.55 ) }
    dend_5 { pt3dadd( 4.14197, 180.17, 37.5002, 0.55 ) }
    dend_5 { pt3dadd( 4.37923, 183.161, 37.5084, 0.55 ) }
    dend_5 { pt3dadd( 4.77374, 187.578, 37.4103, 0.55 ) }
    dend_5 { pt3dadd( 4.88157, 188.667, 37.3659, 0.28 ) }
    dend_5 { pt3dadd( 4.98358, 190.286, 37.3153, 0.55 ) }
    dend_5 { pt3dadd( 5.17569, 193.631, 37.1582, 0.55 ) }
    dend_5 { pt3dadd( 5.25984, 195.088, 37.0598, 0.55 ) }
    dend_5 { pt3dadd( 5.41794, 196.988, 36.8473, 0.55 ) }
    dend_5 { pt3dadd( 5.55503, 198.809, 36.591, 0.55 ) }
    dend_5 { pt3dadd( 5.66047, 200.536, 36.3155, 0.83 ) }
    dend_5 { pt3dadd( 5.69438, 201.537, 36.157, 0.28 ) }
    dend_5 { pt3dadd( 5.64858, 202.53, 35.9621, 0.55 ) }
    dend_5 { pt3dadd( 5.58734, 203.195, 35.8135, 0.28 ) }
    dend_5 { pt3dadd( 5.46312, 204.506, 35.5797, 0.55 ) }
    dend_5 { pt3dadd( 5.38262, 206.169, 35.2731, 0.28 ) }
    dend_5 { pt3dadd( 5.35869, 207.065, 35.0844, 0.55 ) }
    dend_5 { pt3dadd( 5.3476, 210.102, 34.4211, 0.28 ) }
    dend_5 { pt3dadd( 5.37298, 210.821, 34.2407, 0.55 ) }
    dend_5 { pt3dadd( 5.56205, 212.964, 33.6474, 0.28 ) }
    dend_5 { pt3dadd( 5.78119, 214.345, 33.2099, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 53/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -84.7536, -46.7944, -21.133, 0.55 ) }
    dend_20 { pt3dadd( -86.6887, -47.526, -23.4901, 0.55 ) }
    dend_20 { pt3dadd( -90.1121, -48.8323, -27.4703, 0.28 ) }
    dend_20 { pt3dadd( -91.4371, -49.3494, -28.9021, 0.55 ) }
    dend_20 { pt3dadd( -93.3924, -50.0768, -30.8441, 1.38 ) }
    dend_20 { pt3dadd( -95.5804, -50.8197, -32.8022, 0.55 ) }
    dend_20 { pt3dadd( -96.3526, -51.0271, -33.3972, 0.28 ) }
    dend_20 { pt3dadd( -96.8826, -51.1412, -33.7109, 0.55 ) }
    dend_20 { pt3dadd( -98.2001, -51.3239, -34.1199, 0.28 ) }
    dend_20 { pt3dadd( -99.357, -51.5018, -34.3895, 0.55 ) }
    dend_20 { pt3dadd( -101.278, -51.8297, -34.6879, 0.55 ) }
    dend_20 { pt3dadd( -104.008, -52.2727, -35.0655, 0.55 ) }
    dend_20 { pt3dadd( -106.483, -52.6803, -35.4323, 0.55 ) }
    dend_20 { pt3dadd( -107.023, -52.779, -35.5167, 1.11 ) }
    dend_20 { pt3dadd( -112.032, -53.8153, -36.3225, 0.28 ) }
    dend_20 { pt3dadd( -114.13, -54.2993, -36.6541, 0.83 ) }
    dend_20 { pt3dadd( -116.11, -54.7905, -36.9192, 0.28 ) }
    dend_20 { pt3dadd( -117.49, -55.1193, -37.1388, 0.55 ) }
    dend_20 { pt3dadd( -118.646, -55.3262, -37.3247, 0.28 ) }
    dend_20 { pt3dadd( -120.379, -55.5165, -37.6109, 0.55 ) }
    dend_20 { pt3dadd( -122.149, -55.5445, -37.8414, 0.28 ) }
    dend_20 { pt3dadd( -123.281, -55.5233, -37.9697, 0.83 ) }
    dend_20 { pt3dadd( -127.313, -55.295, -38.1474, 0.28 ) }
    dend_20 { pt3dadd( -129.33, -55.0829, -38.1305, 0.83 ) }
    dend_20 { pt3dadd( -131.907, -54.6635, -37.9808, 0.28 ) }
    dend_20 { pt3dadd( -133.835, -54.2786, -37.7754, 0.83 ) }
    dend_20 { pt3dadd( -135.822, -53.8041, -37.3846, 0.55 ) }
    dend_20 { pt3dadd( -138.069, -53.1591, -36.7485, 0.28 ) }
    dend_20 { pt3dadd( -138.965, -52.8687, -36.3664, 0.55 ) }
    dend_20 { pt3dadd( -140.276, -52.4156, -35.7519, 0.28 ) }
    dend_20 { pt3dadd( -141.129, -52.1147, -35.3313, 0.55 ) }
    dend_20 { pt3dadd( -143.653, -51.3217, -34.2999, 0.28 ) }
    dend_20 { pt3dadd( -144.959, -50.9704, -33.9008, 0.55 ) }
    dend_20 { pt3dadd( -147.046, -50.5146, -33.465, 0.28 ) }
    dend_20 { pt3dadd( -147.443, -50.4544, -33.385, 0.55 ) }
    dend_20 { pt3dadd( -148.586, -50.3773, -33.173, 0.28 ) }
    dend_20 { pt3dadd( -151.834, -50.4464, -32.7221, 0.55 ) }
    dend_20 { pt3dadd( -153.488, -50.6306, -32.5621, 0.28 ) }
    dend_20 { pt3dadd( -155.153, -50.9823, -32.4446, 0.83 ) }
    dend_20 { pt3dadd( -158.81, -52.12, -32.3263, 0.28 ) }
    dend_20 { pt3dadd( -160.112, -52.6358, -32.2914, 0.55 ) }
    dend_20 { pt3dadd( -162.022, -53.5334, -32.2913, 0.28 ) }
    dend_20 { pt3dadd( -163.979, -54.5994, -32.3288, 0.83 ) }
    dend_20 { pt3dadd( -166.199, -55.8404, -32.4498, 0.55 ) }
    dend_20 { pt3dadd( -167.989, -56.8847, -32.5869, 0.28 ) }
    dend_20 { pt3dadd( -168.881, -57.4759, -32.6598, 0.55 ) }
    dend_20 { pt3dadd( -170.292, -58.4623, -32.7047, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_20 { pt3dadd( -171.364, -59.39, -32.6012, 0.55 ) }
    dend_20 { pt3dadd( -172.898, -61.1128, -32.2903, 0.28 ) }
    dend_20 { pt3dadd( -173.879, -62.5105, -31.9348, 0.55 ) }
    dend_20 { pt3dadd( -175.387, -65.2111, -31.207, 0.28 ) }
    dend_20 { pt3dadd( -175.884, -66.237, -30.9583, 0.55 ) }
    dend_20 { pt3dadd( -177.169, -69.2429, -30.2241, 0.28 ) }
    dend_20 { pt3dadd( -177.399, -69.8228, -30.096, 0.83 ) }
    dend_20 { pt3dadd( -178.193, -71.8238, -29.631, 0.28 ) }
    dend_20 { pt3dadd( -178.493, -72.541, -29.5185, 0.55 ) }
    dend_20 { pt3dadd( -179.45, -74.7137, -29.2619, 0.28 ) }
    dend_20 { pt3dadd( -179.695, -75.2092, -29.2032, 0.55 ) }
    dend_20 { pt3dadd( -181.203, -78.115, -28.9025, 0.28 ) }
    dend_20 { pt3dadd( -182.169, -79.9349, -28.6804, 0.55 ) }
    dend_20 { pt3dadd( -183.485, -82.4344, -28.3495, 0.28 ) }
    dend_20 { pt3dadd( -184.53, -84.4163, -28.0764, 0.55 ) }
    dend_20 { pt3dadd( -185.462, -86.1941, -27.8468, 0.28 ) }
    dend_20 { pt3dadd( -185.645, -86.5536, -27.8034, 0.55 ) }
    dend_20 { pt3dadd( -186.4, -88.0186, -27.6591, 0.28 ) }
    dend_20 { pt3dadd( -187.11, -89.4266, -27.5055, 0.55 ) }
    dend_20 { pt3dadd( -187.494, -90.1628, -27.3777, 0.28 ) }
    dend_20 { pt3dadd( -187.915, -91.0347, -27.2095, 0.55 ) }
    dend_20 { pt3dadd( -188.726, -92.8235, -26.8509, 0.28 ) }
    dend_20 { pt3dadd( -189.233, -93.93, -26.5641, 0.55 ) }
    dend_20 { pt3dadd( -189.879, -95.4198, -26.1295, 0.28 ) }
    dend_20 { pt3dadd( -190.221, -96.1799, -25.8297, 0.55 ) }
    dend_20 { pt3dadd( -190.684, -97.2626, -25.3494, 0.28 ) }
    dend_20 { pt3dadd( -190.994, -97.9792, -25.0387, 0.55 ) }
    dend_20 { pt3dadd( -191.78, -99.6799, -24.3556, 0.28 ) }
    dend_20 { pt3dadd( -192.45, -101.095, -23.9008, 0.55 ) }
    dend_20 { pt3dadd( -193.609, -103.606, -23.3894, 0.28 ) }
    dend_20 { pt3dadd( -193.962, -104.358, -23.3124, 0.55 ) }
    dend_20 { pt3dadd( -194.72, -105.883, -23.3004, 0.28 ) }
    dend_20 { pt3dadd( -195.002, -106.431, -23.3462, 0.55 ) }
    dend_20 { pt3dadd( -195.958, -108.152, -23.6681, 0.28 ) }
    dend_20 { pt3dadd( -196.683, -109.432, -23.9911, 0.83 ) }
    dend_20 { pt3dadd( -197.733, -111.48, -24.6549, 0.28 ) }
    dend_20 { pt3dadd( -198.115, -112.237, -24.8903, 0.55 ) }
    dend_20 { pt3dadd( -198.632, -113.336, -25.1835, 0.28 ) }
    dend_20 { pt3dadd( -199.032, -114.237, -25.3969, 0.55 ) }
    dend_20 { pt3dadd( -199.673, -115.872, -25.7692, 1.11 ) }
    dend_20 { pt3dadd( -200.475, -118.036, -26.2453, 0.28 ) }
    dend_20 { pt3dadd( -200.644, -118.57, -26.3498, 0.55 ) }
    dend_20 { pt3dadd( -201.286, -120.629, -26.6977, 0.28 ) }
    dend_20 { pt3dadd( -201.982, -122.891, -27.1211, 0.55 ) }
    dend_20 { pt3dadd( -202.473, -124.447, -27.4657, 0.28 ) }
    dend_20 { pt3dadd( -202.902, -125.758, -27.9493, 0.55 ) }
    dend_20 { pt3dadd( -203.198, -126.665, -28.3938, 0.28 ) }
    dend_20 { pt3dadd( -203.477, -127.581, -28.9845, 0.55 ) }
    dend_20 { pt3dadd( -204.151, -129.763, -30.7165, 0.28 ) }
    dend_20 { pt3dadd( -204.299, -130.261, -31.1309, 0.55 ) }
    dend_20 { pt3dadd( -205.283, -133.38, -33.6973, 0.28 ) }
    dend_20 { pt3dadd( -205.594, -134.425, -34.5644, 0.55 ) }
    dend_20 { pt3dadd( -205.962, -135.739, -35.5876, 0.28 ) }
    dend_20 { pt3dadd( -206.2, -136.721, -36.3237, 0.55 ) }
    dend_20 { pt3dadd( -206.634, -138.381, -37.3827, 0.28 ) }
    dend_20 { pt3dadd( -206.856, -139.136, -37.7886, 0.55 ) }
    dend_20 { pt3dadd( -207.121, -140.02, -38.1488, 0.28 ) }
    dend_20 { pt3dadd( -207.451, -140.886, -38.5729, 0.55 ) }
    dend_20 { pt3dadd( -208.285, -143.061, -39.7841, 0.28 ) }
    dend_20 { pt3dadd( -208.66, -144.104, -40.3757, 0.83 ) }
    dend_20 { pt3dadd( -209.699, -147.006, -41.9609, 0.28 ) }
    dend_20 { pt3dadd( -210.108, -148.323, -42.5563, 0.83 ) }
    dend_20 { pt3dadd( -211.052, -151.781, -43.858, 0.28 ) }
    dend_20 { pt3dadd( -211.626, -154.082, -44.5956, 0.83 ) }
    dend_20 { pt3dadd( -212.186, -156.641, -45.2379, 0.28 ) }
    dend_20 { pt3dadd( -212.435, -158.156, -45.598, 0.55 ) }
    dend_20 { pt3dadd( -212.756, -161.137, -46.23, 0.28 ) }
    dend_20 { pt3dadd( -212.818, -162.278, -46.4925, 0.55 ) }
    dend_20 { pt3dadd( -212.787, -163.571, -46.7739, 0.28 ) }
    dend_20 { pt3dadd( -212.76, -164.17, -46.9128, 0.28 ) }
    dend_20 { pt3dadd( -212.498, -167.805, -47.9885, 0.28 ) }
    dend_20 { pt3dadd( -212.442, -168.327, -48.1847, 0.55 ) }
    dend_20 { pt3dadd( -212.129, -170.934, -49.1319, 0.28 ) }
    dend_20 { pt3dadd( -211.906, -172.193, -49.4366, 0.55 ) }
    dend_20 { pt3dadd( -211.575, -173.569, -49.5801, 0.28 ) }
    dend_20 { pt3dadd( -211.377, -174.339, -49.6089, 0.55 ) }
    dend_20 { pt3dadd( -210.814, -176.307, -49.381, 0.28 ) }
    dend_20 { pt3dadd( -210.136, -178.718, -48.8945, 0.55 ) }
    dend_20 { pt3dadd( -209.432, -180.891, -48.0218, 0.28 ) }
    dend_20 { pt3dadd( -209.129, -181.687, -47.6456, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 80/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -84.7536, -46.7944, -21.133, 0.28 ) }
    dend_19 { pt3dadd( -88.051, -45.5491, -21.3556, 0.28 ) }
    dend_19 { pt3dadd( -89.0049, -45.1038, -21.479, 0.55 ) }
    dend_19 { pt3dadd( -90.3726, -44.4345, -21.6844, 0.28 ) }
    dend_19 { pt3dadd( -90.8893, -44.1051, -21.8327, 0.55 ) }
    dend_19 { pt3dadd( -91.5611, -43.6176, -22.053, 0.28 ) }
    dend_19 { pt3dadd( -92.2866, -43.04, -22.2493, 0.55 ) }
    dend_19 { pt3dadd( -94.0842, -41.3205, -22.7419, 0.28 ) }
    dend_19 { pt3dadd( -94.6232, -40.7909, -22.8425, 0.55 ) }
    dend_19 { pt3dadd( -97.6924, -37.7409, -23.2223, 0.28 ) }
    dend_19 { pt3dadd( -98.6066, -36.8474, -23.3662, 0.55 ) }
    dend_19 { pt3dadd( -100.421, -35.0801, -23.5568, 0.28 ) }
    dend_19 { pt3dadd( -101.042, -34.4744, -23.6076, 0.55 ) }
    dend_19 { pt3dadd( -103.628, -31.9744, -23.6827, 0.28 ) }
    dend_19 { pt3dadd( -103.883, -31.7344, -23.6783, 0.55 ) }
    dend_19 { pt3dadd( -106.317, -29.778, -23.347, 0.28 ) }
    dend_19 { pt3dadd( -108.154, -28.4166, -23.2903, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
    ModelViewParmSubset_2 = new SectionList()
    dend_50 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_50, dend_39, dend_34, dend_9, dend_0, dend_52, dend_51, dend_45, dend_40, dend_36, dend_35, dend_21, dend_10, dend_2, dend_1, dend_54, dend_53, dend_47, dend_46, dend_44, dend_41, dend_38, dend_37, dend_29, dend_22, dend_12, dend_11, dend_8, dend_3, dend_49, dend_48, dend_43, dend_42, dend_31, dend_30, dend_26, dend_23, dend_16, dend_13, dend_7, dend_4, dend_33, dend_32, dend_28, dend_27, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_6, dend_5, dend_20, dend_19]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_7 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_52 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_51 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_45 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_40 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_36 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_35 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_1 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_54 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_47 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_46 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_44 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_41 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_29 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_11 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_8 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_3 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_49 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_48 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_43 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_42 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_31 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_30 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_7 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_33 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_32 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_28 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_27 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_25 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_24 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_15 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_14 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_5 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_20 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_9 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_21 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_22 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_10 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_12 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_50 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_2 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_38 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_37 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_18 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_17 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_19 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_53 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_4 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_6 OneSecGrp_SectionRef_55.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_9, dend_9, dend_9, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_21, dend_10, dend_10, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_22, dend_12, dend_12, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_51 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_21 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_22 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_32 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_0 nseg = 3
    dend_52 nseg = 5
    dend_51 nseg = 3
    dend_45 nseg = 5
    dend_40 nseg = 3
    dend_36 nseg = 3
    dend_35 nseg = 15
    dend_1 nseg = 5
    dend_54 nseg = 5
    dend_47 nseg = 3
    dend_46 nseg = 9
    dend_44 nseg = 7
    dend_41 nseg = 3
    dend_29 nseg = 3
    dend_11 nseg = 3
    dend_8 nseg = 3
    dend_3 nseg = 5
    dend_49 nseg = 5
    dend_48 nseg = 3
    dend_43 nseg = 9
    dend_42 nseg = 5
    dend_31 nseg = 11
    dend_30 nseg = 9
    dend_23 nseg = 3
    dend_16 nseg = 3
    dend_7 nseg = 3
    dend_33 nseg = 3
    dend_32 nseg = 3
    dend_28 nseg = 9
    dend_27 nseg = 9
    dend_25 nseg = 9
    dend_24 nseg = 7
    dend_15 nseg = 3
    dend_14 nseg = 11
    dend_5 nseg = 3
    dend_20 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L23_BTC_08c8d4004b_0_0


