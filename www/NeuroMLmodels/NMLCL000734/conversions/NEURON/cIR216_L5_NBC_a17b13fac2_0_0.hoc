// Cell: cIR216_L5_NBC_a17b13fac2_0_0
/*
{
  "id" : "cIR216_L5_NBC_a17b13fac2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-10.9016, -1.97873, -2.50057, 3.38117", "-9.79478, -1.80994, -2.24302, 5.67833", "-8.68798, -1.64115, -1.98548, 7.15072", "-7.58118, -1.47235, -1.72793, 8.64399", "-6.47438, -1.30356, -1.47039, 10.0299", "-5.36758, -1.13477, -1.21284, 11.2674", "-4.26078, -0.965972, -0.955299, 11.9107", "-3.15398, -0.797179, -0.697754, 12.2563", "-2.04718, -0.628385, -0.440209, 12.5208", "-0.940378, -0.459592, -0.182664, 12.7145", "0.166423, -0.290798, 0.0748807, 12.541", "1.27322, -0.122005, 0.332426, 12.2075", "2.38002, 0.0467885, 0.589971, 11.6554", "3.48682, 0.215582, 0.847516, 11.0225", "4.59362, 0.384375, 1.10506, 10.3416", "5.70042, 0.553169, 1.36261, 9.80603", "6.80722, 0.721962, 1.62015, 9.2712", "7.91403, 0.890756, 1.8777, 8.04801", "9.02083, 1.05955, 2.13524, 5.78101", "10.1276, 1.22834, 2.39279, 3.52734", "11.2344, 1.39714, 2.65033, 2.23302" ]
  }, {
    "name" : "dend_67",
    "id" : "dend_67",
    "points3d" : [ "6.34928, -3.5777, -7.98898, 1.25", "7.32078, -4.09375, -8.32177, 1.25", "8.09109, -4.68578, -9.08676, 1.25", "8.71618, -5.29337, -9.92349, 0.88", "9.24414, -5.90398, -10.725, 0.88", "9.72884, -6.55797, -11.5055, 0.88", "10.9612, -8.58504, -13.6774, 1.18", "11.7285, -10.4572, -15.542, 1.18", "11.8648, -10.9033, -15.9281, 1.69", "12.0301, -11.5019, -16.3604, 1.84", "12.295, -12.3311, -16.8413, 1.62", "12.8155, -13.5532, -17.3049, 1.11", "13.5306, -14.7481, -17.4655, 1.11", "14.5386, -16.1538, -17.4961, 1.11", "15.4255, -17.3217, -17.4491, 1.11", "16.3339, -18.518, -17.3392, 1.11", "17.1889, -19.7452, -17.1618, 1.11", "17.9444, -20.9799, -16.923, 1.18", "18.3582, -21.8864, -16.7284, 1.33", "18.7295, -23.3861, -16.4166, 1.25", "18.8213, -24.6644, -16.1854, 0.88", "18.713, -26.3474, -15.9648, 1.25", "18.589, -27.1276, -15.9133, 1.55", "18.4506, -27.9681, -15.862, 1.55", "18.3159, -29.12, -15.7939, 1.33", "18.2811, -30.3186, -15.711, 1.11", "18.4387, -31.8645, -15.5439, 0.81", "18.9077, -33.5791, -15.2877, 0.59", "19.8687, -35.6139, -14.8761, 0.59", "20.5525, -36.5063, -14.6381, 0.74", "21.6957, -37.4608, -14.3099, 0.96", "22.5786, -37.9785, -14.102, 1.18", "23.2509, -38.2804, -13.9885, 1.18", "24.1456, -38.6331, -13.897, 1.18", "25.1562, -39.0739, -13.8838, 0.88", "26.2243, -39.7705, -13.9553, 0.88", "26.7361, -40.2952, -14.0473, 1.11", "27.4317, -41.2592, -14.2158, 1.11", "27.862, -41.9718, -14.3387, 0.96", "28.262, -42.6878, -14.4615, 1.25", "29.0882, -44.0821, -14.7352, 0.66", "29.6165, -44.8366, -14.9005, 0.66", "30.2221, -45.4621, -15.0498, 0.66", "30.8734, -45.873, -15.1863, 0.74", "31.7528, -46.2071, -15.4032, 0.59", "32.8868, -46.5171, -15.6981, 0.88", "33.5162, -46.6749, -15.8714, 0.88", "34.1293, -46.8676, -16.0436, 1.11", "35.2952, -47.3732, -16.386, 0.66", "36.3324, -48.0205, -16.6988, 0.59", "37.2335, -48.8829, -16.9671, 0.66", "37.9695, -49.8949, -17.1378, 0.81", "38.5912, -50.9835, -17.2759, 1.4", "38.8164, -51.4621, -17.317, 1.55", "39.1828, -52.3941, -17.3503, 0.96", "39.6246, -53.6106, -17.3599, 0.52", "39.9852, -54.5087, -17.4016, 0.52", "40.4668, -55.5239, -17.4765, 0.96", "40.8135, -56.191, -17.5545, 1.03", "41.0579, -56.6366, -17.6017, 1.11", "41.3234, -57.1089, -17.6325, 1.11", "42.0453, -58.413, -17.6965, 0.52", "42.6278, -59.5891, -17.6766, 0.59", "43.1442, -60.7174, -17.5757, 0.59", "43.6445, -61.8255, -17.4519, 1.18", "44.0652, -62.7186, -17.3759, 1.55", "44.323, -63.2279, -17.3514, 1.55", "45.0652, -64.5835, -17.489, 0.81", "45.5777, -65.4193, -17.7575, 0.52", "46.1204, -66.2215, -18.1669, 0.44", "46.8502, -67.2649, -18.8404, 0.81", "47.2865, -67.8791, -19.275, 0.96", "48.4699, -69.5356, -20.4628, 0.52", "48.9579, -70.2197, -20.9575, 0.96", "49.346, -70.8007, -21.2977, 1.25", "49.7619, -71.4817, -21.5737, 1.03", "50.2056, -72.2539, -21.7551, 0.74", "50.4838, -72.7474, -21.8201, 0.74", "51.0158, -73.6254, -21.853, 0.74", "51.62, -74.5767, -21.9337, 0.44", "52.313, -75.6392, -22.037, 0.96", "52.7411, -76.2908, -22.1003, 1.55", "53.0869, -76.8312, -22.0777, 1.69", "53.478, -77.4564, -21.9653, 1.25", "54.2225, -78.6294, -21.713, 0.59", "54.9621, -79.7528, -21.451, 0.59", "55.7916, -80.9709, -21.2172, 1.25", "57.4387, -83.3979, -20.9085, 0.52", "58.276, -84.6425, -20.7983, 0.44", "59.2773, -86.149, -20.7151, 0.96", "59.695, -86.7847, -20.7025, 0.96", "60.6201, -88.1702, -20.8035, 0.52", "61.4849, -89.4064, -21.0127, 0.52", "62.3836, -90.6288, -21.3479, 1.11", "62.7617, -91.1353, -21.4551, 1.55", "63.1545, -91.6803, -21.5073, 1.77", "63.4167, -92.0471, -21.5598, 1.84", "63.7868, -92.5582, -21.6753, 1.47", "64.3438, -93.2905, -21.9717, 1.11", "64.868, -93.9725, -22.3419, 0.81", "65.6441, -95.0695, -23.0063, 0.44", "66.5206, -96.4469, -23.8812, 0.96", "66.9685, -97.2332, -24.3758, 1.11", "67.3055, -97.8708, -24.7874, 0.81", "67.6893, -98.6315, -25.2275, 0.29", "68.1286, -99.4708, -25.5821, 0.29", "68.513, -100.13, -25.691, 0.59", "69.0333, -100.949, -25.6493, 0.88", "69.447, -101.557, -25.5511, 1.03", "70.3558, -102.826, -25.2779, 1.03", "71.1254, -103.802, -25.0351, 0.59", "71.948, -104.757, -24.7926, 0.59", "72.685, -105.588, -24.5915, 0.88", "73.3471, -106.394, -24.3975, 1.25", "73.7265, -106.912, -24.2956, 1.47", "73.9561, -107.291, -24.2472, 1.47", "74.4421, -108.316, -24.1304, 0.37", "74.8141, -109.395, -24.009, 0.37", "75.1355, -110.847, -23.8594, 0.74", "75.235, -111.769, -23.7831, 0.66", "75.312, -112.922, -23.6915, 0.52", "75.3387, -113.476, -23.6299, 0.88", "75.363, -114.122, -23.5256, 0.88", "75.4752, -114.808, -23.2057, 0.37", "75.8705, -115.328, -22.3065, 0.37", "76.2546, -115.705, -21.3957, 0.37", "76.7352, -116.094, -20.3809, 0.37", "77.126, -116.389, -19.6206, 0.44", "78.5387, -117.368, -17.1383, 1.18", "79.2034, -117.831, -16.0759, 1.18", "79.9641, -118.368, -14.9095, 0.37", "80.5327, -118.835, -14.0704, 0.81", "80.8192, -119.096, -13.6968, 0.81", "81.2276, -119.498, -13.2423, 0.81", "81.9938, -120.253, -12.5943, 0.37", "83.1738, -121.305, -11.6641, 1.33", "83.615, -121.64, -11.312, 1.69", "84.4631, -122.228, -10.6139, 1.25", "85.132, -122.633, -10.0963, 0.66", "85.9846, -123.072, -9.51855, 0.52", "86.8128, -123.42, -9.09593, 0.81", "87.2136, -123.603, -8.94636, 0.81", "87.6662, -123.831, -8.78917, 0.81", "88.2686, -124.194, -8.59611, 0.44", "88.9018, -124.671, -8.36407, 0.37", "89.283, -125.164, -8.19107, 0.37", "89.8367, -126.52, -7.85394, 0.37", "90.0636, -127.226, -7.70971, 0.74", "90.2625, -127.88, -7.59513, 0.81", "90.418, -128.384, -7.51892, 0.81", "90.7394, -129.268, -7.41775, 0.37", "91.165, -130.155, -7.28397, 0.37", "91.9345, -131.324, -7.08115, 0.37", "92.5405, -132.09, -6.90867, 0.66", "92.9321, -132.532, -6.79065, 0.81", "93.5569, -133.175, -6.59703, 0.81", "94.7812, -134.336, -6.21416, 0.52", "95.1866, -134.725, -6.08375, 0.52", "95.9965, -135.636, -5.8088, 0.88", "96.2915, -136.06, -5.71245, 1.18", "96.5255, -136.484, -5.6614, 1.18", "96.7739, -137.083, -5.64872, 1.18", "96.9806, -137.81, -5.71513, 0.96", "97.1862, -138.812, -5.89412, 0.52", "97.4319, -140.042, -6.22724, 0.52", "97.6279, -140.836, -6.483, 0.74", "97.7681, -141.3, -6.64712, 0.74", "98.1579, -142.283, -6.95786, 0.52", "98.8791, -143.578, -7.31768, 0.52", "99.5147, -144.373, -7.5204, 0.59", "100.349, -145.186, -7.69332, 0.81", "101.186, -145.892, -7.79345, 0.59", "102.428, -146.817, -7.94357, 0.37", "103.286, -147.401, -8.04725, 0.37", "104.199, -148.037, -8.08828, 1.11", "104.417, -148.197, -8.09625, 1.4", "105.14, -148.72, -8.13294, 1.03", "106.173, -149.5, -8.19991, 0.52", "107.168, -150.338, -8.31328, 0.52", "108.179, -151.276, -8.40943, 1.18", "108.558, -151.651, -8.45986, 1.47", "108.937, -152.027, -8.53907, 1.47", "109.945, -153.101, -8.82279, 0.52", "110.7, -154.007, -9.1724, 0.88", "111.097, -154.567, -9.46221, 0.88", "111.823, -155.682, -10.262, 0.59", "112.352, -156.55, -10.9666, 1.03", "112.732, -157.188, -11.5289, 1.03", "113.486, -158.447, -12.7518, 0.44", "113.789, -159.002, -13.2982, 0.44", "114.413, -160.352, -14.5714, 1.03", "114.608, -160.903, -15.025, 1.18", "114.814, -161.632, -15.5437, 0.74", "115.13, -162.95, -16.3477, 0.44", "115.278, -163.9, -16.7176, 0.44", "115.404, -164.939, -16.993, 0.44", "115.553, -166.369, -17.1775, 1.11", "115.643, -166.905, -17.2132, 1.47", "115.86, -167.739, -17.2063, 1.47", "116.494, -169.359, -17.0509, 0.44", "117.014, -170.333, -16.9268, 0.44", "117.727, -171.444, -16.7766, 0.44", "118.428, -172.442, -16.6529, 0.44", "118.906, -173.156, -16.6103, 0.29", "119.54, -174.2, -16.6523, 0.29", "119.825, -174.78, -16.7497, 1.4", "120.051, -175.458, -16.8916, 1.99", "120.259, -176.368, -17.1077, 1.47", "120.504, -177.854, -17.4976, 0.44", "120.696, -179.055, -17.7638, 0.37", "120.909, -180.177, -17.9678, 0.37", "121.115, -181.142, -18.0937, 0.74", "121.298, -181.811, -18.1662, 0.88", "121.513, -182.422, -18.2064, 0.37", "122.292, -184.171, -18.2165, 0.29", "122.694, -184.888, -18.1769, 0.29", "123.12, -185.528, -18.1312, 0.96", "124.12, -186.899, -18.1773, 0.37", "124.807, -187.817, -18.3012, 0.66", "125.092, -188.198, -18.3904, 0.66", "125.996, -189.465, -18.8643, 0.37", "126.243, -189.811, -19.0087, 0.81", "127.498, -191.466, -19.7421, 0.37", "127.798, -191.82, -19.9221, 0.88", "128.093, -192.125, -20.1142, 0.88", "128.862, -192.802, -20.6371, 0.44", "129.381, -193.226, -21.0091, 0.44", "130.128, -193.777, -21.4758, 0.81", "131.357, -194.557, -22.1613, 1.55", "131.813, -194.827, -22.4128, 1.69", "133.056, -195.558, -23.1213, 0.37", "133.93, -196.081, -23.6326, 0.37", "134.801, -196.667, -24.1849, 0.37", "135.736, -197.367, -24.7814, 0.44", "136.388, -197.886, -25.1671, 1.03", "136.882, -198.266, -25.4405, 1.4", "137.289, -198.56, -25.6398, 1.4", "138.491, -199.325, -26.1536, 0.29", "139.379, -199.904, -26.4638, 0.29", "140.087, -200.359, -26.6521, 0.29", "140.626, -200.684, -26.7699, 0.29", "141.316, -201.079, -26.8944, 0.74", "141.893, -201.393, -26.9873, 1.11", "143.084, -201.983, -27.1446, 0.52", "143.745, -202.314, -27.2345, 0.81", "144.5, -202.741, -27.3356, 0.66", "145.321, -203.238, -27.4698, 0.29", "146.039, -203.66, -27.6045, 0.29", "147.0, -204.192, -27.7998, 0.29", "148.222, -204.799, -28.0556, 0.44", "148.818, -205.084, -28.1652, 0.44", "149.717, -205.512, -28.3324, 0.29", "150.176, -205.741, -28.4106, 0.59", "150.502, -205.915, -28.468, 0.59", "151.069, -206.255, -28.584, 0.29", "151.844, -206.747, -28.7671, 0.29", "152.565, -207.236, -28.9528, 0.59", "152.942, -207.514, -29.0481, 0.74", "153.188, -207.711, -29.1168, 0.74", "154.288, -208.668, -29.4587, 0.29", "155.083, -209.422, -29.7413, 0.44", "155.587, -209.927, -29.9436, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "7.86928, -3.8192, 4.08102, 1.25", "7.86928, -3.8192, 4.08102, 1.25", "7.66375, -4.60101, 4.32484, 1.25", "7.32467, -5.94921, 4.69359, 1.4", "6.99254, -7.43246, 5.04672, 1.4", "6.748, -8.83061, 5.33949, 1.18", "6.5654, -10.2563, 5.60967, 1.18", "6.49487, -11.4457, 5.80146, 1.4", "6.57562, -13.1342, 6.02827, 1.4", "6.74893, -14.9571, 6.21678, 1.4", "6.98981, -16.4815, 6.32677, 1.62", "7.23085, -17.4917, 6.39356, 1.47", "7.77006, -19.1072, 6.47141, 1.03", "8.55565, -20.8675, 6.55533, 1.03" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-9.81072, -3.0422, -6.35898, 1.18", "-9.81072, -3.0422, -6.35898, 1.18", "-10.5993, -3.9839, -6.43575, 1.18", "-11.6413, -5.44267, -6.65393, 1.11", "-12.2137, -6.35189, -6.81986, 1.18", "-12.7456, -7.31591, -7.03661, 1.03", "-13.3717, -8.45062, -7.29173, 0.96", "-13.894, -9.48513, -7.54453, 1.4", "-14.3962, -10.7166, -7.89539, 1.62", "-14.5767, -11.3562, -8.11064, 1.84", "-14.8054, -12.4758, -8.54566, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "-3.60072, -7.3787, -1.54898, 1.4", "-3.60072, -7.3787, -1.54898, 1.4", "-4.40292, -8.35516, -2.10527, 1.11", "-5.59694, -9.59947, -2.70696, 0.96", "-5.99198, -9.95332, -2.85111, 0.96", "-6.95188, -10.6715, -3.09965, 0.66", "-7.77975, -11.217, -3.22134, 0.66", "-8.32461, -11.5019, -3.22935, 1.03", "-9.34592, -11.9283, -3.12615, 1.33", "-10.0421, -12.2123, -3.01245, 1.47", "-10.9757, -12.6493, -2.88549, 1.11", "-11.8976, -13.2073, -2.83318, 0.96", "-12.9361, -14.1078, -2.92637, 0.66", "-13.6698, -15.0129, -3.13486, 0.52", "-14.1558, -15.9116, -3.48146, 0.44", "-14.4996, -16.9837, -4.03309, 0.44", "-14.7874, -18.3448, -4.84024, 1.4", "-14.8824, -18.9822, -5.23697, 1.84", "-14.9452, -19.5661, -5.5938, 2.14", "-15.0855, -20.9961, -6.39528, 1.99", "-15.3192, -23.2189, -7.42845, 1.03", "-15.5098, -24.8322, -8.01461, 0.88", "-15.6893, -26.0435, -8.18284, 0.81", "-15.8577, -26.911, -8.04467, 0.66", "-16.1759, -28.2299, -7.46585, 0.66", "-16.4896, -29.307, -6.72141, 0.96", "-16.6661, -29.8327, -6.2467, 1.11", "-17.7911, -32.9857, -3.25461, 0.44", "-18.1572, -33.9544, -2.37574, 1.03", "-18.2513, -34.1945, -2.18683, 1.4", "-18.515, -34.7954, -1.82223, 1.69", "-18.7538, -35.281, -1.67405, 1.69", "-19.6482, -36.8863, -1.64827, 0.81", "-20.197, -37.6635, -1.87952, 1.18", "-20.9134, -38.4537, -2.15679, 1.47", "-21.4126, -38.9279, -2.30851, 1.47", "-22.113, -39.5506, -2.43609, 1.4", "-23.0148, -40.3151, -2.49707, 1.11", "-24.4838, -41.51, -2.42056, 0.52", "-25.4025, -42.3061, -2.29269, 0.52", "-26.3895, -43.3393, -2.03714, 0.52", "-27.3223, -44.7267, -1.6493, 1.18", "-27.5907, -45.3291, -1.51372, 1.55", "-27.7082, -45.7618, -1.46435, 1.69", "-27.8389, -46.4486, -1.47563, 1.92", "-28.0358, -47.578, -1.67262, 0.74", "-28.2784, -49.0465, -1.94927, 0.44", "-28.6232, -50.989, -2.31987, 0.44", "-28.9398, -52.6375, -2.58677, 0.44", "-29.3569, -54.5604, -2.82905, 0.74", "-29.709, -55.826, -2.93358, 0.52", "-30.6509, -58.5158, -3.01566, 1.03", "-30.9167, -59.1941, -2.98408, 1.25", "-31.2551, -60.0693, -2.8681, 0.66", "-31.627, -61.1474, -2.64376, 0.29", "-31.9913, -62.4441, -2.33028, 0.29", "-32.1754, -63.2319, -2.15017, 0.59", "-32.4297, -64.7924, -1.86427, 0.59", "-32.4823, -65.8503, -1.63013, 1.03", "-32.4023, -67.6844, -1.22476, 1.4", "-32.3196, -68.5124, -1.05167, 1.77", "-32.2405, -69.1938, -0.949132, 2.14", "-32.1665, -70.2372, -0.855976, 2.36", "-32.2588, -71.7012, -0.897218, 0.74", "-32.521, -72.8267, -1.04246, 0.44", "-32.8729, -73.7085, -1.27776, 0.44", "-33.5135, -75.0142, -1.61446, 0.74", "-33.8726, -75.6767, -1.74951, 0.74", "-34.5216, -76.8353, -1.91226, 0.66", "-34.9698, -77.6853, -1.93093, 0.44", "-35.3664, -78.6621, -1.82217, 0.44", "-35.7738, -80.1125, -1.53417, 0.59", "-35.9968, -81.1021, -1.27051, 0.81", "-36.2123, -81.9153, -1.04476, 0.96", "-36.4809, -82.6768, -0.825261, 0.74", "-36.8679, -83.4356, -0.64465, 0.44", "-37.4025, -84.1581, -0.512138, 0.44", "-38.0859, -84.8712, -0.483303, 0.74", "-39.3528, -86.0844, -0.489516, 0.88", "-40.008, -86.7049, -0.461138, 1.4", "-40.3405, -87.0543, -0.399998, 1.4", "-40.8852, -87.7941, -0.198909, 1.18", "-41.2477, -88.5415, 0.0493692, 0.81", "-41.5446, -89.6908, 0.456675, 0.52", "-41.6641, -90.8062, 0.854473, 0.52", "-41.729, -92.374, 1.40662, 0.74", "-41.7502, -93.4781, 1.76664, 0.52", "-41.7626, -94.0739, 1.94688, 1.11", "-41.7968, -94.7918, 2.15624, 1.4", "-41.8477, -95.3905, 2.29883, 1.55", "-41.9525, -96.2616, 2.45838, 0.74", "-42.2165, -97.882, 2.69679, 0.44", "-42.4617, -99.0466, 2.92141, 0.81", "-42.8031, -100.394, 3.22846, 1.11", "-43.1046, -101.354, 3.47307, 1.33", "-43.393, -102.106, 3.68297, 1.55", "-43.7469, -102.814, 3.92062, 1.18", "-44.6682, -104.101, 4.53702, 0.59", "-45.0931, -104.542, 4.8258, 0.96", "-45.5909, -104.977, 5.15173, 1.11", "-46.1056, -105.403, 5.4956, 1.11", "-47.0505, -106.18, 6.13254, 0.59", "-48.0723, -107.045, 6.80544, 0.81", "-48.9857, -107.874, 7.37677, 0.59", "-49.9449, -108.86, 7.97902, 0.59", "-50.8739, -109.982, 8.55708, 0.44", "-51.5491, -110.998, 8.91091, 0.81", "-51.9278, -111.748, 9.04845, 0.96", "-52.1552, -112.4, 9.07576, 0.96", "-52.3398, -113.305, 9.0217, 0.96", "-52.442, -114.245, 8.92167, 0.66", "-52.4966, -116.146, 8.6521, 0.52", "-52.4789, -117.13, 8.50555, 0.66", "-52.4339, -118.303, 8.35093, 1.33", "-52.4117, -119.136, 8.25996, 1.99", "-52.4537, -121.138, 8.10311, 0.44", "-52.5739, -122.213, 8.0667, 0.44", "-52.7456, -122.96, 8.08247, 0.74", "-52.9466, -123.547, 8.0955, 0.74", "-53.3256, -124.382, 8.13712, 0.74", "-53.8167, -125.275, 8.19256, 0.37", "-54.5859, -126.457, 8.27602, 0.29", "-55.2187, -127.25, 8.35285, 0.29", "-55.9879, -128.096, 8.45167, 0.29", "-56.675, -128.788, 8.57953, 0.22", "-57.0595, -129.149, 8.66897, 0.22", "-57.6819, -129.748, 8.83753, 0.81", "-58.0452, -130.126, 8.94696, 0.96", "-58.9083, -131.038, 9.21981, 0.22", "-59.6413, -131.874, 9.45683, 1.33", "-60.1213, -132.509, 9.60511, 1.55", "-60.8132, -133.543, 9.84532, 1.11", "-61.1918, -134.178, 10.0015, 0.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-2.23072, 4.7278, 5.70102, 1.33", "-2.23072, 4.7278, 5.70102, 1.33", "-3.24192, 5.49657, 5.70102, 1.55", "-4.27452, 6.21637, 5.70102, 1.4", "-5.43174, 6.94644, 5.70102, 1.18", "-6.26959, 7.44395, 5.70406, 1.47", "-7.38856, 8.10697, 5.74475, 1.77", "-8.1969, 8.57717, 5.81224, 1.99", "-9.08275, 9.10457, 5.95884, 1.99", "-10.1358, 9.81331, 6.24548, 1.62", "-11.3255, 10.8296, 6.74802, 1.11", "-12.0687, 11.6869, 7.22188, 1.11", "-12.6176, 12.6135, 7.75675, 1.25", "-13.0545, 13.8308, 8.45764, 1.47", "-13.2409, 15.0103, 9.14256, 1.69", "-13.214, 15.9853, 9.70119, 1.92", "-13.0311, 17.1066, 10.3145, 1.77", "-12.8096, 17.9451, 10.7265, 1.4", "-12.4346, 19.036, 11.2034, 1.18", "-12.021, 20.1133, 11.6377, 1.11", "-11.416, 21.527, 12.1885, 1.62", "-11.1293, 22.1456, 12.4223, 1.99", "-10.6965, 23.0112, 12.7412, 2.21", "-10.3278, 23.6992, 12.9885, 2.43" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-10.9007, 0.916297, -3.98898, 1.77", "-10.9695, 0.930284, -3.98898, 1.77", "-12.0851, 1.17713, -3.98898, 1.77", "-13.1085, 1.43876, -3.98898, 1.62", "-14.3248, 1.79163, -3.98898, 1.62", "-15.6022, 2.21062, -3.98898, 1.84", "-16.5053, 2.55245, -3.98898, 1.92", "-17.3653, 2.92277, -4.01157, 2.14", "-18.3747, 3.43325, -4.06454, 2.14", "-19.255, 3.9616, -4.14349, 2.14", "-19.9884, 4.48084, -4.26427, 2.14", "-21.0793, 5.36497, -4.51781, 2.14", "-21.9569, 6.1533, -4.82872, 2.14", "-22.4746, 6.64642, -5.04383, 2.21", "-23.0582, 7.23124, -5.33261, 1.99", "-23.7758, 7.98681, -5.75443, 1.99", "-24.391, 8.65936, -6.18252, 2.14", "-25.3436, 9.76998, -6.99025, 2.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.45000090983035473
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "11.2344, 1.39714, 2.65033, 3.17", "26.063, 3.65858, 2.65033, 3.17", "40.8915, 5.92002, 2.65033, 3.17" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "8.55565, -20.8675, 6.55533, 1.25", "9.02559, -22.1837, 6.43337, 1.25", "9.07494, -23.9472, 6.28106, 1.03", "8.69953, -25.4013, 6.17532, 0.66", "8.34166, -26.458, 6.11263, 0.96", "8.00538, -27.558, 6.05838, 1.18", "7.62683, -29.1407, 5.99081, 1.18", "7.38975, -30.1444, 5.92967, 1.47", "7.02228, -31.7456, 5.86186, 0.81", "6.89662, -32.8189, 5.84728, 0.81", "7.12511, -34.1351, 5.83093, 0.96", "7.62849, -35.2129, 5.84358, 0.88", "8.31476, -36.3641, 5.91196, 1.33", "8.7303, -37.0453, 5.97855, 1.55", "9.18966, -37.8263, 6.07944, 1.33", "9.58353, -38.663, 6.2089, 0.81", "10.0445, -40.185, 6.45811, 0.66", "10.3225, -41.7328, 6.69244, 0.96", "10.419, -42.7537, 6.81637, 1.4", "10.4595, -43.589, 6.89114, 1.4", "10.4809, -44.434, 6.98053, 1.4", "10.4668, -45.8843, 7.19642, 0.96", "10.4506, -46.569, 7.34418, 0.81", "10.4233, -47.831, 7.76516, 0.81", "10.3997, -48.7523, 8.14758, 0.74", "10.3542, -50.6282, 9.06123, 0.74", "10.335, -52.0522, 9.76497, 0.88", "10.3484, -53.2214, 10.3194, 0.88", "10.4338, -54.5368, 10.8373, 1.47", "10.6267, -55.7761, 11.1213, 0.81", "11.0088, -57.2327, 11.1379, 0.59", "11.5533, -58.8637, 10.9199, 0.88", "11.9678, -60.0285, 10.7364, 0.88", "12.4191, -61.4202, 10.5424, 0.66", "12.8397, -62.9522, 10.3984, 0.59", "13.0887, -64.2383, 10.4011, 0.59", "13.2394, -65.6373, 10.5491, 0.59", "13.3167, -66.9964, 10.8536, 0.88", "13.3223, -68.5261, 11.3394, 0.66", "13.2835, -69.743, 11.8037, 1.03", "13.1898, -71.3015, 12.4584, 1.25", "13.0721, -72.8475, 13.1131, 1.25", "13.0039, -73.8607, 13.5094, 1.84", "12.9757, -74.8442, 13.8735, 2.28", "12.9819, -75.6996, 14.2499, 1.69" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "8.55565, -20.8675, 6.55533, 0.74", "8.14875, -23.7245, 10.1574, 0.74", "8.23975, -24.3092, 11.177, 0.74", "8.3621, -24.8061, 12.1545, 0.74", "8.53971, -25.607, 13.6865, 1.11", "8.62559, -26.0235, 14.3991, 1.11", "8.841, -27.0997, 15.9641, 0.66", "9.39588, -29.3278, 18.6345, 1.4", "9.59834, -30.287, 19.7601, 0.96", "9.69194, -31.0881, 20.6447, 1.18", "9.6966, -32.1973, 21.6934, 0.88", "9.52166, -33.7238, 22.8796, 0.66", "9.12334, -35.4715, 23.8912, 0.66", "8.83041, -36.5214, 24.3712, 0.59", "8.37632, -38.0737, 25.06, 0.74", "8.04669, -39.0585, 25.5347, 1.03", "7.63549, -39.9855, 26.0339, 1.18", "6.96852, -41.1522, 26.6809, 1.4" ],
    "parent" : "dend_56",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-14.8054, -12.4758, -8.54566, 0.81", "-16.2549, -13.4386, -8.44327, 0.81", "-17.1408, -14.0639, -8.23752, 0.88", "-17.9816, -14.7243, -7.95636, 1.03", "-18.6523, -15.3293, -7.67983, 1.03", "-19.2867, -16.0159, -7.36281, 0.52", "-19.8374, -16.7874, -6.96921, 0.52", "-20.3085, -17.8433, -6.30361, 0.74", "-20.4328, -18.3019, -6.00919, 0.96", "-20.5293, -18.8583, -5.6482, 0.59", "-20.6335, -19.5833, -5.202, 0.44", "-20.8419, -20.9755, -4.49601, 0.44", "-20.9615, -21.5491, -4.2144, 0.81", "-21.1852, -22.2007, -3.88251, 0.96", "-21.5843, -23.0578, -3.39635, 1.03", "-21.8759, -23.6124, -3.07697, 0.96", "-22.2747, -24.3771, -2.66565, 0.37", "-22.9144, -25.8106, -1.95974, 0.37", "-23.1841, -26.577, -1.59225, 0.29", "-23.3638, -27.297, -1.28294, 0.37", "-23.5671, -28.3153, -0.905413, 0.37", "-23.7366, -29.3639, -0.551983, 0.81", "-23.8881, -30.3746, -0.255161, 1.25", "-23.9378, -30.679, -0.191777, 1.55", "-24.1949, -31.8527, 0.0388266, 0.37", "-24.4633, -32.504, 0.159589, 0.37", "-24.6833, -32.7975, 0.215239, 0.44", "-25.2769, -33.3801, 0.312514, 0.59", "-25.6687, -33.7284, 0.351534, 0.66", "-26.1558, -34.1446, 0.394191, 0.37", "-26.716, -34.6196, 0.43576, 0.59", "-27.2962, -35.1768, 0.447711, 0.88", "-27.625, -35.5294, 0.436094, 1.03", "-28.2069, -36.2673, 0.468931, 0.37", "-28.3938, -36.5219, 0.503195, 0.37", "-28.7422, -36.9902, 0.603673, 0.37", "-29.2061, -37.5915, 0.77426, 0.66", "-29.5626, -38.0129, 0.916753, 0.88", "-30.7936, -39.3213, 1.38293, 0.29", "-31.3207, -39.8619, 1.56778, 0.29", "-31.834, -40.4314, 1.73547, 0.96", "-32.1035, -40.7597, 1.82267, 1.33", "-32.5868, -41.441, 1.97311, 1.11", "-33.1442, -42.3389, 2.19591, 0.59", "-33.6306, -43.1913, 2.32136, 0.37", "-34.0184, -43.9538, 2.63985, 0.66", "-34.2608, -44.3997, 2.94974, 0.52", "-34.5689, -44.9035, 3.4416, 0.29", "-35.3042, -46.0017, 4.7617, 0.29", "-35.8919, -46.7527, 5.87063, 0.81", "-37.3938, -48.1839, 8.7252, 0.88", "-37.7677, -48.4335, 9.39861, 0.29", "-37.9772, -48.532, 9.7526, 0.29", "-38.4461, -48.6628, 10.5405, 0.66", "-38.6609, -48.6926, 10.9234, 0.66", "-42.9632, -56.9566, 15.3444, 0.66", "-47.7981, -65.0917, 19.4184, 0.66", "-52.8772, -73.1066, 23.4103, 0.66", "-57.1901, -81.6374, 27.3334, 0.66", "-60.0846, -89.4634, 33.3391, 0.66", "-61.8513, -97.6923, 39.294, 0.66", "-64.0102, -105.061, 46.0826, 0.66", "-64.2842, -113.254, 52.3307, 0.66", "-63.3233, -121.129, 58.8755, 0.66", "-60.6699, -129.24, 64.6448, 0.66", "-57.4889, -137.655, 69.7103, 0.66", "-54.6125, -146.025, 75.0181, 0.66" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-14.8054, -12.4758, -8.54566, 1.03", "-13.9767, -13.5295, -9.40152, 1.03", "-12.4893, -15.1044, -10.5648, 0.81", "-11.4507, -16.2408, -11.327, 1.03", "-10.3186, -17.6112, -12.1406, 0.88", "-9.49652, -18.7197, -12.7494, 1.11", "-8.85792, -19.7199, -13.2659, 0.74", "-8.23669, -20.8959, -13.7638, 0.52", "-7.69002, -22.5825, -14.3636, 0.88", "-7.57983, -23.819, -14.8238, 1.47", "-7.64419, -24.6759, -15.1133, 1.25", "-7.84747, -26.0663, -15.5284, 1.25", "-8.05069, -27.1966, -15.8271, 0.81", "-8.38404, -29.0458, -16.2042, 0.66", "-8.58785, -30.7798, -16.4274, 0.66", "-8.69471, -32.874, -16.5838, 0.96", "-8.68, -33.9613, -16.5999, 1.11", "-8.60969, -34.9845, -16.568, 1.11", "-8.46598, -36.4201, -16.474, 0.74", "-8.29579, -37.9188, -16.3363, 0.52", "-8.19877, -39.0816, -16.2364, 0.74", "-8.20081, -39.9245, -16.2118, 1.11", "-8.37393, -41.1547, -16.2296, 0.96", "-8.80054, -42.399, -16.2863, 0.74", "-9.19907, -43.1484, -16.3258, 0.74", "-9.597, -43.7985, -16.3307, 0.74", "-10.1426, -44.7182, -16.3006, 0.59", "-10.777, -45.8899, -16.2306, 0.52", "-11.3461, -47.1742, -16.1188, 0.52", "-11.7881, -48.5013, -15.9996, 0.74", "-12.1689, -50.3226, -15.8564, 0.88", "-12.2687, -51.421, -15.7853, 1.18", "-12.2516, -52.2605, -15.7646, 1.4", "-12.1515, -53.3707, -15.7781, 1.62", "-12.0762, -54.061, -15.8135, 1.77", "-12.0008, -54.9999, -15.9067, 1.4", "-11.9764, -56.1444, -16.0543, 0.66", "-12.0554, -57.4264, -16.2373, 0.44", "-12.2368, -58.4675, -16.3907, 0.81", "-12.4423, -59.1786, -16.529, 1.25", "-12.5781, -59.5828, -16.645, 1.4", "-12.7197, -59.9541, -16.7969, 1.4", "-13.0483, -60.7421, -17.1664, 0.88", "-13.5827, -61.9938, -17.7975, 0.59", "-14.0923, -63.2323, -18.4592, 0.59", "-14.7212, -64.791, -19.2978, 0.88", "-15.2866, -66.2507, -20.0853, 0.52", "-15.6797, -67.3487, -20.6982, 0.52", "-15.8499, -67.9376, -21.0443, 1.11", "-15.9862, -68.6243, -21.4563, 1.55", "-16.0415, -69.296, -21.8149, 1.77", "-16.0133, -70.0029, -22.1468, 1.4", "-15.7738, -71.404, -22.7534, 0.66", "-15.4366, -72.7057, -23.3026, 0.44", "-15.0865, -73.813, -23.7328, 0.44", "-14.6311, -75.0788, -24.1754, 0.44", "-14.4254, -75.6376, -24.3411, 0.88", "-14.2511, -76.1303, -24.4385, 1.25", "-14.0673, -76.7156, -24.4995, 1.55", "-13.9739, -77.1525, -24.5227, 1.55", "-13.8694, -78.0809, -24.5583, 1.25", "-13.8845, -79.6635, -24.58, 0.59", "-14.059, -80.9919, -24.6152, 0.59", "-14.2221, -81.6714, -24.6058, 0.96", "-14.5375, -82.6039, -24.5573, 0.96", "-14.9237, -83.4978, -24.4736, 0.81", "-15.7402, -85.052, -24.2543, 0.37", "-16.5979, -86.4121, -24.0079, 0.37", "-17.4709, -87.6832, -23.7455, 1.18", "-17.7897, -88.1357, -23.622, 1.62", "-18.1355, -88.5985, -23.4597, 1.62", "-18.7099, -89.3424, -23.1196, 1.33", "-19.618, -90.4789, -22.4684, 0.44", "-20.4311, -91.4606, -21.8175, 0.44", "-21.0728, -92.2262, -21.3188, 0.66", "-21.832, -93.144, -20.7269, 0.66", "-22.5754, -94.0723, -20.1545, 0.44", "-23.0299, -94.6702, -19.8138, 0.81", "-23.3765, -95.1513, -19.5798, 1.25", "-23.7901, -95.7385, -19.3391, 1.55", "-24.2303, -96.3841, -19.1289, 1.25", "-24.7397, -97.1696, -18.916, 0.52", "-25.2476, -97.9566, -18.7426, 0.37", "-25.752, -98.8009, -18.5014, 0.29", "-26.3994, -99.9502, -18.0537, 0.81", "-26.7184, -100.556, -17.7378, 1.25", "-27.0104, -101.202, -17.2961, 0.81", "-27.3597, -102.125, -16.5723, 0.37", "-27.8047, -103.566, -15.3606, 0.37", "-27.9729, -104.19, -14.8248, 0.74", "-28.1935, -105.035, -14.1251, 0.81", "-28.5093, -106.153, -13.232, 0.29", "-28.7035, -106.834, -12.7357, 0.88", "-28.8008, -107.209, -12.5234, 1.18", "-28.9803, -107.949, -12.2955, 1.18", "-29.1681, -108.744, -12.1775, 0.81", "-29.4651, -109.978, -12.1399, 0.29", "-29.7225, -111.012, -12.1773, 0.29", "-29.912, -111.879, -12.2102, 0.29", "-30.0165, -112.471, -12.2528, 0.66", "-30.1147, -113.212, -12.3223, 0.96", "-30.2104, -114.032, -12.4392, 0.96", "-30.3228, -114.935, -12.6023, 0.52", "-30.5267, -116.222, -12.8617, 0.37", "-30.6761, -117.092, -13.0828, 0.74", "-30.8481, -118.029, -13.3606, 0.44", "-31.0428, -118.949, -13.6652, 1.11", "-31.1909, -119.507, -13.8637, 1.11", "-31.4296, -120.15, -14.0925, 0.81", "-32.0618, -121.582, -14.5515, 0.37", "-32.4693, -122.385, -14.7312, 0.66", "-32.6803, -122.758, -14.7901, 0.96", "-33.0259, -123.365, -14.7892, 0.96", "-33.593, -124.474, -14.4159, 0.29", "-33.8224, -125.156, -13.6314, 0.29", "-33.908, -125.665, -12.8078, 0.96", "-33.9094, -125.912, -12.3401, 1.25", "-33.8732, -126.635, -10.8653, 0.44", "-33.7156, -127.95, -7.94417, 0.81", "-33.3343, -129.846, -3.27395, 0.22", "-33.1894, -130.413, -1.72897, 1.18", "-32.9943, -130.964, -0.126345, 1.55" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-61.1918, -134.178, 10.0015, 0.29", "-59.6161, -134.806, 10.2106, 0.29", "-58.4256, -135.28, 10.3686, 0.29", "-56.9856, -135.855, 10.5597, 0.29", "-55.8616, -136.303, 10.7089, 0.15", "-54.9814, -136.654, 10.8257, 0.29", "-54.4959, -136.847, 10.8901, 0.29", "-45.5246, -141.482, 11.0729, 0.29", "-37.4376, -147.547, 12.1819, 0.29", "-29.3198, -153.679, 12.1921, 0.29", "-21.8003, -160.343, 13.9723, 0.29", "-14.7626, -167.777, 14.5675, 0.29" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "-61.1918, -134.178, 10.0015, 0.29", "-61.9851, -134.952, 10.0606, 0.29", "-62.7941, -135.721, 10.1176, 0.29", "-63.6128, -136.5, 10.1752, 0.29", "-64.5937, -137.432, 10.2443, 0.29", "-65.1457, -137.957, 10.2832, 0.29", "-65.7247, -138.508, 10.3239, 0.81", "-66.1133, -138.824, 10.337, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-10.3278, 23.6992, 12.9885, 0.66", "-12.638, 24.928, 13.3476, 0.66", "-13.8274, 25.5304, 13.4963, 0.66", "-14.9462, 26.0706, 13.5625, 0.59", "-15.8465, 26.5069, 13.6208, 1.11", "-16.4608, 26.8097, 13.7247, 1.4", "-16.8887, 27.0381, 13.8326, 1.4", "-17.6684, 27.4967, 14.0768, 0.66", "-18.2733, 28.0263, 14.5497, 0.44", "-18.7151, 28.5869, 15.1507, 0.44", "-19.4954, 29.9096, 16.5737, 0.74", "-19.9451, 30.7624, 17.4313, 0.52", "-20.2361, 31.2747, 17.8912, 0.44", "-20.6023, 31.8784, 18.3726, 0.74", "-21.073, 32.512, 18.8322, 0.74", "-21.4899, 32.9373, 19.0651, 0.74", "-22.0477, 33.3701, 19.2964, 0.29", "-23.1162, 33.9748, 19.9391, 0.29", "-23.3123, 34.0734, 20.0929, 0.81", "-23.918, 34.3771, 20.645, 0.81", "-24.4997, 34.7127, 21.2221, 0.74", "-25.3598, 35.2719, 22.1091, 0.81", "-27.0507, 36.5185, 23.8968, 1.69", "-28.1266, 37.409, 25.0073, 0.52", "-28.5288, 37.7758, 25.4193, 0.59", "-29.3131, 38.5342, 26.1694, 0.59", "-29.852, 39.0572, 26.6477, 0.66", "-30.272, 39.4709, 26.9554, 1.03", "-30.6724, 39.8438, 27.1768, 1.03", "-31.8197, 40.7372, 27.7982, 0.81", "-32.4512, 41.1866, 28.1534, 0.59", "-33.3693, 41.8148, 28.667, 0.52", "-33.9568, 42.2652, 28.9888, 0.52", "-34.653, 42.8971, 29.3499, 0.59", "-35.1645, 43.4049, 29.6027, 0.88", "-35.6041, 43.944, 29.7675, 1.03", "-36.0946, 44.7042, 29.9458, 0.59", "-36.4479, 45.3952, 30.0409, 0.52", "-36.7154, 46.0163, 30.1114, 0.81", "-42.7209, 53.1534, 34.3222, 0.81", "-49.1253, 59.3633, 39.2218, 0.81", "-54.9921, 65.5341, 44.7933, 0.81", "-59.4353, 71.9636, 51.3327, 0.81", "-64.109, 79.0149, 57.0823, 0.81", "-68.28, 85.4739, 63.7728, 0.81", "-71.134, 92.1702, 70.9271, 0.81", "-72.2099, 97.9683, 79.1944, 0.81", "-72.6664, 103.955, 87.3973, 0.81", "-74.0394, 110.235, 95.2927, 0.81", "-76.2525, 116.416, 103.068, 0.81" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-10.3278, 23.6992, 12.9885, 1.11", "-10.0591, 24.8211, 12.5259, 1.11", "-9.9207, 26.0716, 12.017, 0.81", "-9.96508, 27.3937, 11.4281, 0.74", "-10.063, 28.0699, 11.1186, 1.11", "-10.1968, 28.6858, 10.852, 1.18", "-10.4375, 29.6185, 10.4827, 1.47", "-10.6802, 30.2956, 10.2238, 1.47", "-11.1467, 31.471, 9.81497, 1.18", "-11.5807, 32.6435, 9.47929, 0.96", "-11.8904, 33.6625, 9.23021, 1.03", "-12.122, 34.7217, 8.99966, 1.4", "-12.2701, 35.9111, 8.77827, 1.4", "-12.2824, 37.2869, 8.55149, 1.03", "-12.1527, 38.4226, 8.38344, 1.03", "-11.9498, 39.3979, 8.23799, 1.25", "-11.5526, 40.79, 7.9689, 1.11", "-11.2128, 41.8152, 7.73698, 1.11", "-10.7625, 43.1482, 7.34656, 1.11", "-10.2753, 44.6572, 6.7852, 1.11", "-9.99318, 45.688, 6.31776, 1.11", "-9.71582, 47.1152, 5.55098, 1.33", "-9.69166, 47.9715, 5.00399, 1.03", "-9.95958, 49.3951, 3.93946, 1.18", "-10.1919, 49.9209, 3.50655, 1.47", "-10.5589, 50.4475, 3.07409, 1.47", "-10.974, 50.9016, 2.74526, 1.69", "-12.2635, 52.0817, 2.13575, 0.88", "-13.0833, 52.7958, 1.90898, 1.11", "-13.8388, 53.5178, 1.87377, 1.11", "-14.6156, 54.3899, 1.95952, 0.96", "-15.2746, 55.336, 2.14563, 0.88", "-15.8408, 56.4691, 2.42499, 1.18", "-16.2242, 57.5913, 2.748, 1.47", "-16.6114, 59.292, 3.24386, 1.4", "-16.775, 60.4648, 3.56462, 0.88", "-16.8994, 62.0472, 3.94453, 0.81", "-16.9361, 63.567, 4.28067, 1.69", "-16.9178, 64.2227, 4.42391, 1.99", "-16.8786, 64.9277, 4.56889, 1.99", "-16.8573, 65.4918, 4.65588, 2.21", "-16.8488, 66.5428, 4.85796, 1.99" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-25.3436, 9.76998, -6.99025, 1.4", "-25.427, 11.4288, -7.91258, 1.4", "-25.3255, 12.0554, -8.91629, 1.4", "-25.2497, 12.463, -9.61169, 1.33", "-25.1471, 13.3277, -10.9916, 1.62", "-25.1037, 14.099, -12.0758, 1.25", "-25.107, 15.8238, -14.2143, 1.03", "-25.2618, 18.0056, -16.9845, 1.4", "-25.3507, 18.6504, -17.7193, 1.4", "-25.5209, 19.4102, -18.4536, 1.11", "-25.82, 20.3893, -19.1564, 1.33", "-26.1714, 21.2262, -19.6236, 1.69", "-26.6756, 22.1108, -19.999, 1.69", "-27.1117, 22.7413, -20.2563, 1.69", "-28.0225, 24.0194, -21.0029, 0.74", "-28.3724, 24.5519, -21.3908, 0.74", "-28.7938, 25.2805, -22.0421, 0.59", "-29.3541, 26.4864, -23.2041, 1.18", "-29.7043, 27.5245, -24.3102, 1.18", "-29.9393, 28.5041, -25.3699, 1.18", "-30.0352, 29.2314, -26.1546, 1.18", "-30.0676, 30.376, -27.4426, 0.81", "-30.0643, 31.0545, -28.1825, 0.66", "-30.0823, 32.8496, -30.0421, 0.66", "-30.1179, 33.2191, -30.4095, 1.25", "-30.3933, 34.424, -31.5401, 1.47", "-30.9521, 35.7495, -32.6682, 0.59", "-31.6826, 37.0006, -33.502, 1.03", "-32.1397, 37.6621, -33.8365, 1.4", "-32.5778, 38.2458, -34.0316, 1.47", "-33.3739, 39.3425, -34.3201, 1.11", "-34.2434, 40.6697, -34.5251, 0.81", "-34.8379, 41.8927, -34.7047, 0.96", "-35.0213, 42.8003, -34.8948, 1.25", "-35.05, 43.5406, -35.0729, 1.55", "-35.0147, 44.5098, -35.3196, 1.55", "-34.9304, 45.5792, -35.5989, 0.96", "-34.8145, 47.162, -36.0172, 0.66", "-34.8507, 48.2648, -36.3065, 0.66", "-35.0384, 48.9806, -36.4666, 0.74", "-35.6294, 49.9825, -36.6848, 1.03", "-36.1676, 50.5599, -36.8299, 1.47", "-36.5762, 50.9132, -36.9426, 1.77", "-37.0921, 51.3128, -37.0996, 1.62", "-38.2877, 52.2576, -37.5595, 0.88", "-39.1397, 53.0117, -37.9559, 0.66", "-40.0291, 53.9478, -38.4534, 0.59", "-40.7831, 54.9361, -38.9497, 0.81", "-41.1893, 55.6451, -39.2616, 0.59", "-41.606, 56.6723, -39.6423, 0.81", "-41.7752, 57.3139, -39.8259, 1.03", "-41.9106, 57.9781, -39.9565, 1.03", "-42.0504, 58.7617, -40.0272, 0.74", "-42.2418, 59.7422, -40.0192, 0.52", "-42.4009, 60.429, -39.9734, 0.52", "-42.6823, 61.3825, -39.8874, 1.11", "-42.9589, 62.1333, -39.8191, 1.4", "-43.4206, 63.2387, -39.7296, 1.4", "-43.6915, 63.9011, -39.6857, 1.03", "-43.8834, 64.4585, -39.6723, 0.74", "-44.1192, 65.4282, -39.715, 0.59", "-44.191, 66.075, -39.8073, 0.52", "-44.1934, 66.8991, -40.0028, 0.52", "-44.126, 68.075, -40.3953, 0.52", "-44.0544, 68.9729, -40.7268, 0.52", "-43.9927, 69.7142, -41.0668, 0.52", "-43.9642, 70.4176, -41.4861, 0.52", "-44.0264, 70.8436, -41.7869, 0.52", "-44.2294, 71.2612, -42.1388, 0.81", "-44.5951, 71.6506, -42.5076, 0.96", "-45.3676, 72.1913, -43.0587, 0.96", "-46.1204, 72.6166, -43.485, 0.52", "-46.9759, 73.067, -43.9217, 0.81", "-47.4027, 73.3053, -44.143, 1.18", "-47.8601, 73.6007, -44.3872, 1.18", "-48.6171, 74.2391, -44.7972, 0.44", "-49.0614, 74.7796, -45.058, 0.44", "-49.3739, 75.4272, -45.3258, 0.74", "-49.5009, 76.0592, -45.6004, 0.74", "-49.5291, 76.6331, -45.8373, 0.44", "-49.4976, 77.582, -46.192, 0.66", "-49.4156, 78.5731, -46.5258, 0.96", "-49.3495, 79.3382, -46.772, 0.74", "-49.2884, 80.5304, -47.1221, 0.37", "-49.287, 81.4947, -47.3652, 0.37", "-49.3558, 82.4206, -47.5662, 0.88", "-49.4358, 82.8172, -47.6211, 1.18", "-49.6648, 83.3152, -47.6379, 1.18", "-50.0276, 83.7834, -47.6454, 1.18", "-50.3957, 84.1795, -47.6435, 1.11", "-50.8364, 84.6407, -47.6503, 0.44", "-51.5259, 85.4017, -47.6719, 0.44", "-52.6387, 86.7479, -47.722, 0.44", "-53.3807, 87.7338, -47.7882, 0.44", "-54.1023, 88.8009, -47.8829, 0.44", "-54.5451, 89.5782, -47.9957, 0.44", "-54.8976, 90.3633, -48.1418, 1.47", "-55.1109, 91.0268, -48.3031, 1.47", "-55.312, 91.9144, -48.5639, 1.18", "-55.5018, 92.7838, -48.9216, 0.66", "-55.6966, 93.8867, -49.6668, 0.44", "-55.7517, 94.5192, -50.1902, 0.59", "-55.7505, 95.2971, -50.9713, 0.59", "-55.7063, 95.9489, -51.7162, 0.74", "-55.5662, 97.0929, -53.2509, 1.25", "-55.3593, 98.6034, -55.5359, 0.66", "-55.2882, 99.2421, -56.5915, 0.66", "-55.2033, 100.14, -58.1596, 1.25", "-55.1743, 100.604, -58.9542, 1.62", "-55.1316, 102.2, -61.4662, 1.4", "-55.1206, 102.893, -62.4615, 1.11", "-55.1371, 103.812, -63.6958, 1.25", "-55.1333, 104.651, -64.7668, 0.96", "-55.0893, 105.359, -65.53, 1.18", "-55.0099, 106.187, -66.2933, 1.4", "-54.9127, 107.219, -67.0886, 0.37", "-54.8529, 108.08, -67.7961, 0.37", "-54.8081, 108.847, -68.4679, 0.88", "-54.7962, 109.458, -69.0546, 0.88", "-54.7937, 110.051, -69.6901, 0.88", "-54.8325, 111.098, -70.9306, 0.37", "-54.9821, 112.322, -72.3757, 1.03", "-55.0964, 112.897, -73.1223, 1.03", "-55.1941, 113.23, -73.6286, 1.03", "-55.5289, 114.022, -74.9943, 0.29", "-55.8548, 114.741, -76.3208, 0.29", "-56.1502, 115.346, -77.517, 0.29", "-56.5613, 116.108, -79.0807, 1.25", "-57.1125, 116.973, -80.9271, 1.25", "-57.5726, 117.625, -82.3806, 0.96", "-58.1801, 118.47, -84.1908, 0.37", "-58.3547, 118.77, -84.7601, 0.66", "-58.5609, 119.194, -85.5357, 1.03", "-58.7458, 119.757, -86.3996, 1.03", "-59.0009, 121.041, -88.1006, 0.52", "-59.0875, 121.664, -88.8407, 1.03", "-59.3172, 122.427, -89.6859, 1.03" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-25.3436, 9.76998, -6.99025, 0.74", "-26.3084, 9.06296, -6.99025, 0.74", "-27.2321, 8.28866, -7.0038, 0.74", "-28.1726, 7.50039, -7.0176, 1.03", "-28.7864, 6.98586, -7.02661, 1.4", "-29.6904, 6.22814, -7.03987, 1.84", "-30.2749, 5.73823, -7.04845, 2.14", "-30.6701, 5.27922, -7.05682, 2.36" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "40.8915, 5.92002, 2.65033, 0.29", "55.72, 8.18146, 2.65033, 0.29", "70.5486, 10.4429, 2.65033, 0.29" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_66",
    "id" : "dend_66",
    "points3d" : [ "12.9819, -75.6996, 14.2499, 0.52", "11.033, -73.9777, 15.0847, 0.52", "10.2733, -73.3064, 15.4101, 0.52", "9.31061, -72.4558, 15.8225, 1.25", "8.84692, -72.0462, 16.0211, 1.4", "7.98137, -71.2814, 16.3919, 0.37", "7.44445, -70.8071, 16.6219, 0.29", "0.874474, -63.2489, 18.8626, 0.29", "-6.23138, -55.8764, 19.3179, 0.29" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_63",
    "id" : "dend_63",
    "points3d" : [ "12.9819, -75.6996, 14.2499, 0.66", "14.0712, -76.9099, 14.2798, 0.66", "15.0786, -77.965, 14.3555, 0.59", "16.3469, -79.3237, 14.4788, 0.59", "16.9311, -79.987, 14.5549, 0.88", "17.5957, -80.7988, 14.652, 0.88", "18.4075, -81.8972, 14.7344, 0.52", "19.0277, -82.8505, 14.7671, 0.52", "19.3415, -83.5462, 14.7843, 1.11", "19.4791, -84.3657, 14.7508, 1.47", "19.4344, -84.9996, 14.6896, 1.18", "18.9706, -86.4128, 14.4805, 0.59", "18.536, -87.1795, 14.3912, 0.59", "17.9337, -87.9962, 14.364, 0.37", "17.6021, -88.4195, 14.3983, 0.59", "17.2019, -88.9574, 14.497, 0.59", "16.5491, -90.0357, 14.8199, 0.44", "16.0459, -91.5367, 15.4427, 0.37", "16.0535, -92.4535, 15.8458, 0.66", "16.3009, -93.4052, 16.2746, 0.96", "16.6526, -94.2288, 16.6603, 0.74", "17.2286, -95.2199, 17.1159, 0.52", "18.0621, -96.3744, 17.618, 0.81", "18.7448, -97.1853, 17.9335, 0.96", "19.2312, -97.7374, 18.1394, 1.03", "19.9891, -98.617, 18.4243, 0.81", "20.6688, -99.431, 18.643, 0.74", "21.1937, -100.042, 18.7672, 1.11", "21.7318, -100.631, 18.8245, 1.11", "22.4878, -101.43, 18.8237, 0.81", "23.1573, -102.134, 18.7687, 0.52", "23.6557, -102.724, 18.6935, 0.74", "24.1303, -103.41, 18.6283, 0.74", "24.6545, -104.357, 18.5705, 0.52", "24.9495, -105.052, 18.5524, 0.81", "25.1698, -105.637, 18.5558, 0.81", "25.6351, -106.929, 18.6605, 0.59", "25.9883, -107.853, 18.7939, 0.81", "26.2965, -108.609, 18.9994, 0.81", "26.7034, -109.521, 19.3543, 0.44", "27.1578, -110.41, 19.792, 0.81", "27.7392, -111.351, 20.331, 0.66", "28.4094, -112.223, 20.8753, 0.29", "29.6341, -113.653, 21.7202, 0.74", "30.1014, -114.177, 22.008, 1.25", "30.5123, -114.633, 22.2587, 1.25", "31.4171, -115.718, 22.7966, 0.37", "32.1979, -116.709, 23.1786, 0.37", "33.0552, -117.78, 23.5055, 0.37", "33.5461, -118.34, 23.5721, 0.37" ],
    "parent" : "dend_62",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "6.96852, -41.1522, 26.6809, 0.44", "8.59662, -40.8905, 27.8466, 0.44", "9.39066, -40.7629, 28.4151, 0.29", "10.4339, -40.5952, 29.1621, 0.52", "10.9742, -40.5084, 29.549, 0.74", "11.2413, -40.4655, 29.7402, 0.74", "19.6684, -39.1213, 34.9695, 0.74", "28.8282, -37.0597, 38.4686, 0.74", "37.528, -36.4201, 43.3617, 0.74", "46.1563, -34.9947, 48.2309, 0.74", "54.6455, -34.0475, 53.4386, 0.74", "63.7428, -34.5592, 57.5619, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "6.96852, -41.1522, 26.6809, 0.44", "6.48999, -42.5809, 27.8611, 0.44", "6.2068, -43.4264, 28.5595, 0.74" ],
    "parent" : "dend_57",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-54.6125, -146.025, 75.0181, 0.29", "-50.6989, -154.869, 78.7254, 0.29", "-45.8168, -163.774, 80.783, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-54.6125, -146.025, 75.0181, 0.22", "-62.9434, -149.674, 79.3213, 0.29", "-71.872, -153.511, 81.9532, 0.29" ],
    "parent" : "dend_53",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-14.7626, -167.777, 14.5675, 0.37", "-6.54977, -173.754, 14.9382, 0.37", "2.57336, -178.04, 15.2763, 0.37", "11.8325, -181.917, 16.0705, 0.37", "20.379, -187.288, 15.18, 0.37", "28.7509, -192.761, 13.5259, 0.37", "36.1327, -199.566, 11.6504, 0.37", "43.287, -206.811, 10.5521, 0.37", "49.7958, -214.762, 11.0836, 0.37", "55.7916, -223.132, 11.7979, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-14.7626, -167.777, 14.5675, 0.22", "-6.62601, -173.587, 16.348, 0.37", "2.27554, -178.368, 16.5184, 0.37" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-66.1133, -138.824, 10.337, 0.22", "-65.923, -140.257, 10.0188, 0.22", "-65.7769, -141.357, 9.7747, 0.22", "-65.6647, -142.202, 9.58707, 0.37", "-65.4952, -143.478, 9.30377, 0.37", "-62.9157, -153.569, 8.31252, 0.37", "-59.3374, -163.248, 6.81916, 0.37", "-56.5161, -173.17, 5.16228, 0.37" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "-66.1133, -138.824, 10.337, 0.22", "-67.1139, -140.388, 11.0266, 0.22", "-67.1627, -140.447, 11.056, 0.44", "-67.7308, -141.002, 11.3145, 0.15", "-67.9316, -141.172, 11.3822, 0.37", "-68.5915, -141.704, 11.5674, 0.15", "-69.4242, -142.378, 11.733, 0.22", "-70.1423, -142.915, 11.8723, 0.22", "-70.7449, -143.409, 12.124, 0.66", "-71.4967, -144.001, 12.4711, 0.22", "-71.7841, -144.231, 12.6186, 0.88", "-72.4066, -144.759, 13.0064, 0.74", "-73.5706, -146.031, 13.9853, 1.4", "-74.3084, -147.222, 15.161, 1.18", "-80.0271, -154.049, 20.1629, 1.18", "-84.8372, -161.252, 25.6224, 1.18", "-90.9464, -167.642, 30.6853, 1.18", "-97.4353, -174.663, 34.3166, 1.18", "-103.185, -181.775, 38.9059, 1.18", "-109.504, -187.996, 43.9026, 1.18", "-114.987, -194.609, 49.4051, 1.18" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-76.2525, 116.416, 103.068, 0.37", "-80.9185, 122.947, 109.356, 0.37", "-86.1258, 127.564, 116.673, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-76.2525, 116.416, 103.068, 0.29", "-80.8081, 122.892, 109.487, 0.37", "-84.8555, 129.764, 115.873, 0.37", "-88.8723, 135.077, 123.506, 0.37", "-92.0556, 141.444, 130.793, 0.37", "-95.2149, 145.941, 139.259, 0.37", "-98.2546, 150.952, 147.504, 0.37" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-16.8488, 66.5428, 4.85796, 0.96", "-17.0156, 68.4866, 4.31756, 0.96", "-17.2188, 69.7338, 3.91358, 0.81", "-17.4521, 70.7181, 3.58603, 0.81", "-17.7452, 71.736, 3.1498, 1.18", "-18.4305, 74.0079, 2.10342, 1.18", "-18.6014, 74.5854, 1.83874, 1.18", "-18.902, 75.4674, 1.38258, 0.81", "-19.1341, 76.1847, 1.06178, 0.81", "-19.597, 77.9933, 0.5821, 0.66", "-19.744, 78.9789, 0.589143, 0.96", "-19.7871, 79.9396, 0.841048, 1.11", "-19.7652, 80.9214, 1.24789, 0.81", "-19.65, 82.5602, 2.07562, 0.59", "-19.4807, 84.2775, 2.97829, 0.81", "-19.3252, 85.7188, 3.7507, 1.11", "-19.2128, 86.7816, 4.21889, 1.25", "-19.0707, 88.4261, 4.76589, 0.59", "-19.0348, 89.2551, 4.89013, 0.59", "-19.1304, 90.8521, 4.63714, 0.59", "-19.3301, 91.7664, 4.18039, 0.44", "-19.8438, 93.3279, 3.04315, 1.11", "-20.0233, 93.7796, 2.65055, 1.4", "-20.5041, 94.9181, 1.55525, 0.88", "-20.8854, 95.8079, 0.716894, 0.52", "-21.1659, 96.5158, 0.123125, 0.52", "-21.3714, 97.4478, -0.511226, 0.74", "-21.3139, 98.176, -0.822754, 1.11", "-21.0151, 99.0556, -1.04945, 1.33", "-20.7397, 99.5621, -1.11617, 1.62", "-20.2597, 100.223, -1.17231, 1.47", "-19.3077, 101.301, -1.22794, 0.96", "-18.6421, 101.98, -1.2606, 0.81", "-17.9827, 102.656, -1.28633, 0.81", "-17.241, 103.462, -1.30753, 0.66", "-16.5212, 104.344, -1.35089, 0.59", "-16.1246, 104.939, -1.40823, 0.59", "-15.6692, 105.82, -1.52348, 0.44", "-15.2802, 106.809, -1.67158, 0.81", "-14.9635, 107.856, -1.8695, 0.81", "-14.6599, 109.065, -2.12842, 1.03", "-14.372, 110.295, -2.49557, 1.25", "-14.2397, 110.848, -2.73692, 1.25", "-14.0473, 111.501, -3.20829, 1.18", "-13.7112, 112.457, -4.0732, 0.66", "-13.5243, 112.957, -4.52129, 0.59", "-12.9823, 114.381, -5.72579, 1.25", "-12.5265, 115.577, -6.62468, 1.99", "-11.507, 118.441, -8.38692, 0.59", "-11.2403, 119.265, -8.75577, 0.66", "-10.5957, 121.614, -9.32418, 0.52", "-10.3668, 122.582, -9.38103, 1.03", "-10.1282, 123.745, -9.26269, 1.25", "-9.88361, 125.096, -9.01188, 0.74", "-9.73382, 126.102, -8.78386, 0.59", "-9.62147, 126.942, -8.68907, 0.59", "-9.434, 128.11, -8.71115, 0.88", "-9.21171, 129.079, -8.78102, 1.11", "-8.95225, 129.892, -8.88073, 1.11", "-8.55914, 130.84, -9.0166, 1.03", "-7.88515, 132.111, -9.1958, 0.66", "-7.24384, 133.027, -9.31748, 0.66", "-6.11717, 134.248, -9.45373, 0.96", "-5.23692, 135.014, -9.57421, 1.4", "-4.71124, 135.419, -9.65872, 1.4", "-4.1089, 135.85, -9.78483, 1.4", "-3.21244, 136.498, -10.0627, 0.74", "-2.40288, 137.222, -10.5224, 0.37", "-1.46072, 138.315, -11.464, 0.37", "-1.07506, 138.83, -11.9868, 0.96", "-0.752864, 139.278, -12.482, 0.96", "-0.269407, 139.955, -13.3044, 0.66", "0.43629, 140.94, -14.5469, 0.52", "0.837512, 141.509, -15.227, 0.37", "1.28938, 142.148, -15.8552, 0.81", "1.66813, 142.738, -16.3511, 0.52", "2.16478, 143.729, -17.0521, 0.52", "2.39665, 144.408, -17.4968, 0.66", "2.55874, 145.523, -18.1594, 0.66", "2.50439, 146.487, -18.7626, 0.66", "2.31053, 147.616, -19.5113, 0.66", "2.05468, 148.792, -20.3254, 0.81", "1.79824, 150.01, -21.219, 1.03", "1.7024, 150.628, -21.7319, 1.25", "1.64449, 151.687, -22.7016, 0.52", "1.7026, 152.371, -23.3733, 0.37", "1.96738, 153.095, -24.1206, 0.37", "2.61763, 154.102, -25.2115, 1.11", "3.15443, 154.723, -25.9519, 1.62", "3.41641, 154.976, -26.2852, 1.69", "3.90344, 155.439, -26.9153, 1.69", "4.9784, 156.649, -28.5272, 0.44", "5.48865, 157.396, -29.471, 0.96", "5.91294, 158.222, -30.4173, 1.03", "6.11335, 158.812, -30.9819, 0.88", "6.33722, 159.901, -31.8906, 0.44", "6.48653, 161.065, -32.7257, 0.74", "6.52326, 161.782, -33.1504, 1.03", "6.63442, 162.454, -33.5554, 1.03", "6.99421, 163.387, -34.2093, 0.59", "7.57192, 164.191, -34.9143, 0.59", "8.29073, 164.842, -35.5945, 0.59", "8.82673, 165.26, -36.074, 0.74", "10.1089, 166.35, -37.3057, 0.74", "10.517, 166.804, -37.7882, 0.96", "10.8393, 167.399, -38.2442, 1.11", "10.9844, 167.955, -38.5008, 1.11", "11.1246, 169.062, -38.8343, 0.66", "11.2386, 170.44, -39.0682, 0.52", "11.3792, 171.891, -39.1354, 0.52", "11.6903, 174.215, -39.1176, 1.11", "11.8143, 175.064, -39.0839, 1.33", "11.9337, 175.885, -39.025, 1.33", "12.1146, 177.318, -38.8809, 0.44", "12.2557, 178.467, -38.7783, 0.44", "12.3646, 179.457, -38.7517, 0.74", "12.412, 180.206, -38.7982, 0.74", "12.4342, 181.413, -38.8897, 0.52", "12.407, 182.901, -39.014, 0.44", "12.2997, 184.292, -39.1533, 0.44", "12.1326, 185.709, -39.3237, 1.18", "12.0153, 186.554, -39.4544, 1.18", "11.8576, 187.674, -39.6749, 0.96", "11.7029, 188.781, -39.9496, 0.44", "11.5307, 190.405, -40.4566, 0.37", "11.4914, 191.033, -40.6999, 0.37", "11.5176, 192.356, -41.2959, 0.88", "11.6448, 193.357, -41.7208, 1.18", "11.8351, 194.095, -41.9676, 1.18", "12.3812, 195.549, -42.2328, 0.59", "12.9924, 196.91, -42.2613, 0.52", "13.4238, 197.848, -42.1689, 0.44", "14.3692, 199.849, -41.6865, 0.74", "14.9194, 201.025, -41.2991, 1.25", "15.3935, 202.075, -40.9025, 1.55", "15.7695, 202.997, -40.5133, 1.62", "16.2141, 204.167, -39.9878, 0.81", "16.7143, 205.535, -39.3975, 0.37", "17.1147, 206.643, -38.9786, 0.37", "17.3776, 207.478, -38.6763, 0.37", "17.5994, 208.466, -38.3418, 0.37", "17.6614, 209.082, -38.1639, 0.37", "17.6703, 209.931, -38.0043, 0.66", "17.6694, 210.818, -37.8422, 0.96", "17.7046, 211.518, -37.6438, 1.18", "17.8593, 212.633, -37.2645, 0.52", "18.1642, 213.971, -36.7969, 0.66", "18.4805, 215.151, -36.3969, 0.59", "19.1705, 217.495, -35.6005, 0.52", "19.672, 218.925, -35.1093, 0.96", "20.0415, 219.814, -34.7969, 0.96", "20.582, 220.851, -34.4449, 0.66", "21.3827, 222.175, -34.0103, 0.44", "22.0365, 223.197, -33.7314, 0.44", "22.6891, 224.189, -33.5846, 0.52", "23.2804, 225.081, -33.477, 0.52", "24.3493, 226.659, -33.2346, 0.81", "25.0802, 227.796, -33.0297, 0.52", "25.7196, 229.002, -32.7635, 0.52", "26.1595, 230.117, -32.4991, 1.47", "26.3667, 230.794, -32.3333, 1.77", "26.516, 231.349, -32.2036, 1.77", "26.8105, 232.5, -31.9524, 0.66", "27.273, 233.965, -31.702, 0.52", "27.7838, 235.229, -31.515, 0.52", "28.3689, 236.469, -31.3726, 0.52", "28.7669, 237.289, -31.3139, 0.52", "29.0524, 237.9, -31.2925, 0.81", "29.4984, 238.901, -31.2861, 1.03", "29.8754, 239.986, -31.3127, 1.55", "30.0205, 240.5, -31.3228, 1.33", "30.3185, 241.537, -31.3344, 0.88", "30.6373, 242.387, -31.3344, 0.81", "31.0513, 243.129, -31.3344, 0.59", "32.0627, 244.321, -31.3446, 0.44", "32.9437, 245.047, -31.3141, 0.66", "33.8053, 245.641, -31.2604, 0.81", "34.7251, 246.21, -31.1858, 0.44", "35.546, 246.712, -31.0706, 0.81", "36.1702, 247.125, -30.9509, 0.81", "37.102, 247.781, -30.7386, 0.52", "37.8022, 248.363, -30.5771, 0.52", "38.5519, 249.048, -30.4079, 0.52", "39.3293, 249.777, -30.2517, 0.37", "40.3404, 250.706, -30.1362, 0.37", "41.1488, 251.414, -30.1394, 0.59", "41.9707, 252.107, -30.1746, 1.18", "42.2603, 252.353, -30.1673, 1.47", "42.8606, 252.901, -30.1174, 1.47", "43.8017, 253.835, -30.0017, 0.52", "44.4976, 254.579, -29.8814, 0.52", "45.733, 255.961, -29.6596, 0.96", "46.7896, 257.1, -29.4868, 0.52", "47.7712, 258.092, -29.3844, 0.96", "48.317, 258.61, -29.3654, 0.96", "49.3821, 259.477, -29.4105, 0.52", "49.9719, 259.885, -29.5268, 0.37", "50.9136, 260.373, -29.8589, 0.37", "51.6139, 260.627, -30.1363, 0.81", "52.2357, 260.784, -30.3622, 0.81", "53.2035, 261.002, -30.69, 0.52", "53.9065, 261.168, -30.902, 0.74", "54.9734, 261.467, -31.1857, 0.74", "55.8763, 261.765, -31.4074, 0.52", "56.9122, 262.246, -31.6878, 0.52", "57.8988, 262.92, -31.9889, 0.96", "58.3684, 263.38, -32.1576, 1.55", "58.7431, 263.838, -32.2951, 1.69", "58.9611, 264.15, -32.375, 1.69", "60.0482, 265.695, -32.7251, 0.52", "60.8442, 266.717, -32.9321, 0.66", "61.3651, 267.263, -33.0237, 0.74", "62.3398, 268.087, -33.1899, 0.44", "63.3871, 268.88, -33.3597, 0.37", "64.3639, 269.556, -33.5, 1.11", "65.1171, 270.047, -33.5831, 1.55", "65.9665, 270.649, -33.7253, 0.81", "67.0032, 271.64, -34.0062, 0.52", "67.4824, 272.372, -34.2233, 0.66", "67.6857, 272.819, -34.3755, 0.66", "68.0697, 273.936, -34.7695, 0.44", "68.3924, 274.949, -35.132, 0.44", "68.8065, 275.904, -35.5403, 0.52", "69.5142, 276.846, -36.0774, 0.74", "70.2411, 277.423, -36.6138, 1.11", "70.3527, 277.485, -36.6944, 1.33", "70.8135, 277.679, -37.0134, 1.33", "72.1947, 278.2, -38.0169, 0.37", "72.8127, 278.439, -38.4947, 0.37", "73.8219, 278.907, -39.3083, 0.66", "74.5739, 279.365, -39.9398, 0.44", "74.9946, 279.676, -40.3022, 0.44", "75.9324, 280.452, -41.0862, 1.18", "76.3953, 280.851, -41.3943, 1.47", "77.0068, 281.375, -41.6822, 1.47", "78.1957, 282.422, -42.0189, 0.52", "78.7813, 282.993, -42.0944, 0.52", "79.7274, 284.046, -42.0877, 0.52", "80.7836, 285.395, -41.9187, 0.88", "81.4551, 286.4, -41.745, 0.66", "82.2231, 287.733, -41.4634, 0.96", "82.8461, 288.956, -41.1708, 0.96", "83.4112, 290.099, -40.9199, 0.96", "83.8496, 290.962, -40.757, 0.96", "84.3468, 291.783, -40.6595, 0.96", "84.9413, 292.476, -40.5949, 0.96", "85.8876, 293.242, -40.546, 0.37", "86.966, 293.945, -40.5379, 0.37", "87.9518, 294.523, -40.5325, 0.66", "88.8135, 295.042, -40.5297, 1.33", "89.4287, 295.462, -40.5297, 1.33", "90.2123, 296.176, -40.5328, 0.52", "91.0449, 297.107, -40.5394, 0.52", "91.4209, 297.577, -40.5436, 0.88", "91.9022, 298.152, -40.5797, 0.88", "92.584, 298.846, -40.672, 0.88", "93.545, 299.6, -40.8065, 0.44", "94.5394, 300.227, -40.9603, 0.44", "95.6772, 300.754, -41.1485, 0.81", "96.9954, 301.204, -41.3741, 1.47", "97.5972, 301.334, -41.4815, 1.77", "98.6599, 301.43, -41.6849, 1.77" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-16.8488, 66.5428, 4.85796, 0.52", "-18.096, 67.0457, 4.42167, 0.52", "-19.0393, 67.5114, 4.11314, 0.52", "-20.1305, 68.186, 3.76505, 0.52", "-20.8948, 68.7727, 3.51721, 0.74", "-21.4115, 69.2797, 3.31349, 0.74", "-21.9038, 69.8968, 3.02684, 0.59", "-22.0919, 70.3608, 2.8102, 0.37", "-22.2377, 71.068, 2.48404, 0.37", "-22.3148, 71.806, 2.17337, 0.37", "-22.4029, 72.8302, 1.78104, 0.37", "-22.5961, 74.0415, 1.36122, 0.37", "-22.7923, 74.4994, 1.24532, 0.44", "-23.1907, 74.9333, 1.21451, 0.59", "-23.5909, 75.2162, 1.23844, 0.59", "-24.9234, 75.975, 1.39222, 0.88", "-25.5497, 76.2768, 1.4924, 1.03", "-26.7636, 76.8054, 1.67976, 0.37", "-27.6322, 77.1623, 1.75775, 0.44", "-28.2602, 77.4276, 1.75261, 0.74", "-28.841, 77.697, 1.68884, 0.74", "-29.7079, 78.1787, 1.47975, 0.44", "-30.4014, 78.677, 1.22766, 0.29", "-30.771, 79.1024, 0.964761, 0.29", "-31.1849, 79.9161, 0.398704, 1.03", "-31.3126, 80.4044, 0.0270625, 1.4", "-31.3674, 80.8152, -0.295269, 1.4", "-31.4281, 81.6296, -0.939738, 0.96", "-31.5352, 83.0296, -1.98845, 0.52", "-31.6106, 83.6588, -2.43596, 0.52", "-31.7902, 84.595, -3.04141, 0.52", "-31.9777, 85.0607, -3.2765, 0.52", "-32.4987, 85.704, -3.37307, 0.52", "-33.2191, 86.3212, -3.29363, 0.88", "-33.6536, 86.6511, -3.20931, 1.25", "-34.1886, 87.0614, -3.09501, 1.47", "-35.0934, 87.8155, -2.89952, 0.59", "-35.8461, 88.5601, -2.79456, 0.37", "-36.6221, 89.4984, -2.75636, 0.29", "-36.9992, 90.0417, -2.78659, 0.59", "-37.4168, 90.7335, -2.8799, 0.88", "-37.8374, 91.4679, -3.02304, 1.11", "-38.3167, 92.2983, -3.20784, 1.33", "-38.6607, 92.868, -3.32936, 1.03", "-39.1409, 93.6176, -3.47108, 0.81", "-39.6575, 94.354, -3.59348, 0.52", "-40.5669, 95.6236, -3.76765, 0.52", "-41.1861, 96.5134, -3.88452, 0.52", "-41.484, 96.9616, -3.93731, 0.66", "-41.8088, 97.5161, -4.01129, 0.66", "-42.246, 98.4398, -4.14069, 0.37", "-42.594, 99.4361, -4.27788, 0.37", "-42.8275, 100.364, -4.41733, 0.88", "-42.9462, 100.88, -4.48565, 0.88", "-43.2093, 101.905, -4.61561, 0.37", "-43.4547, 102.658, -4.70113, 0.29", "-43.8812, 103.73, -4.79634, 0.81", "-44.0782, 104.185, -4.79782, 1.18", "-44.4309, 104.992, -4.73773, 1.18", "-44.7415, 105.759, -4.64869, 0.59", "-45.1212, 106.877, -4.51268, 0.44", "-45.4002, 108.106, -4.39139, 0.44", "-45.5491, 109.427, -4.31705, 1.11", "-45.5643, 109.897, -4.31883, 1.11", "-45.5514, 110.625, -4.36282, 0.81", "-45.518, 111.738, -4.47135, 0.52", "-45.5309, 112.594, -4.62398, 0.52", "-45.6424, 113.382, -4.82847, 0.44", "-45.8318, 114.035, -5.0293, 0.44", "-46.0898, 114.659, -5.21369, 0.52", "-46.3757, 115.23, -5.36992, 0.81", "-46.9124, 116.224, -5.59357, 1.11", "-47.2227, 116.777, -5.70713, 1.11", "-47.6373, 117.552, -5.80965, 0.81", "-48.055, 118.372, -5.87069, 0.37", "-48.5325, 119.367, -5.88402, 0.37", "-48.9852, 120.364, -5.83004, 0.29", "-49.3014, 121.102, -5.71939, 0.88", "-49.6963, 122.108, -5.51748, 1.55", "-49.875, 122.61, -5.39919, 1.55", "-50.1372, 123.398, -5.21277, 1.18", "-50.4299, 124.276, -5.05627, 0.81", "-50.8842, 125.578, -4.84741, 0.44", "-51.3968, 126.925, -4.63816, 0.29", "-51.7694, 127.752, -4.51442, 0.29", "-52.2451, 128.691, -4.36312, 1.25", "-52.9657, 129.884, -4.09913, 0.29", "-53.7394, 130.961, -3.76684, 0.29", "-54.3279, 131.655, -3.48812, 0.29", "-54.9238, 132.276, -3.15624, 0.59", "-55.234, 132.583, -2.96135, 0.88", "-56.1679, 133.576, -2.2696, 0.44", "-56.459, 133.953, -2.03396, 0.29", "-56.7523, 134.465, -1.81809, 0.44", "-56.9586, 134.979, -1.65612, 0.29", "-57.1975, 135.985, -1.36341, 0.29", "-57.2787, 136.69, -1.16129, 0.29", "-57.3206, 137.45, -0.976873, 0.66", "-57.3536, 137.908, -0.860153, 0.81", "-57.416, 138.511, -0.698368, 0.81", "-57.5718, 139.633, -0.40268, 0.29", "-57.7417, 140.573, -0.168839, 0.37", "-58.0811, 141.852, 0.145981, 0.37", "-58.354, 142.622, 0.274064, 0.37", "-58.7611, 143.653, 0.353246, 1.33", "-58.9702, 144.161, 0.350357, 1.55", "-59.1091, 144.511, 0.308, 1.55", "-59.3013, 145.023, 0.196188, 1.18", "-59.9138, 146.65, -0.308522, 0.37", "-60.1853, 147.241, -0.581117, 0.59", "-60.5135, 147.808, -0.947554, 0.59", "-60.9095, 148.368, -1.40438, 0.29", "-61.2738, 148.812, -1.92209, 0.29", "-61.6524, 149.243, -2.52151, 0.29", "-62.2242, 149.857, -3.46137, 0.59", "-62.4959, 150.149, -3.91613, 0.59", "-63.2689, 151.051, -5.29398, 0.88", "-64.108, 152.264, -6.98121, 0.44", "-64.4745, 153.013, -7.90199, 0.29", "-64.5706, 153.274, -8.19861, 0.81", "-64.654, 153.545, -8.47919, 1.11", "-64.8642, 154.224, -9.16324, 0.81", "-65.2255, 155.103, -10.0828, 0.15", "-65.4905, 155.501, -10.5726, 0.15", "-65.7455, 155.774, -11.0682, 0.15", "-65.9469, 155.972, -11.5331, 0.66", "-66.0935, 156.12, -11.9315, 0.81", "-66.567, 156.649, -13.2905, 0.15", "-67.1987, 157.391, -15.0817, 0.66", "-67.3632, 157.602, -15.5447, 0.96", "-67.6715, 158.076, -16.4634, 0.81", "-68.1986, 158.947, -18.0237, 0.29", "-68.4666, 159.402, -18.755, 0.29", "-68.8311, 159.991, -19.5879, 0.29", "-69.4025, 160.654, -20.4913, 1.18", "-69.7859, 160.993, -20.952, 1.18", "-70.7023, 161.677, -21.8207, 0.37", "-71.2107, 162.022, -22.2303, 0.37", "-71.7711, 162.409, -22.6679, 0.88", "-72.4769, 162.983, -23.2274, 0.96", "-73.5004, 163.964, -24.0785, 0.44", "-73.9788, 164.458, -24.4937, 0.66", "-74.3803, 164.884, -24.8431, 0.37", "-74.833, 165.322, -25.2355, 0.37", "-75.5308, 165.992, -25.8562, 0.44", "-76.1827, 166.646, -26.4462, 0.37", "-77.1487, 167.599, -27.3045, 0.66", "-77.6372, 168.007, -27.7095, 0.66", "-78.3573, 168.479, -28.2699, 0.29", "-79.0479, 168.815, -28.7455, 0.52", "-79.6456, 169.045, -29.1097, 0.59", "-80.6053, 169.386, -29.6725, 0.29", "-81.3164, 169.655, -30.1147, 0.29", "-82.2607, 170.05, -30.6907, 0.29", "-82.9669, 170.358, -31.145, 0.44", "-83.4471, 170.54, -31.4517, 0.74", "-84.1871, 170.821, -31.9056, 0.74", "-85.1705, 171.195, -32.47, 1.11", "-85.8524, 171.483, -32.8496, 1.62", "-87.2273, 172.1, -33.57, 0.88", "-88.3042, 172.575, -34.1238, 0.37", "-89.2323, 172.952, -34.5929, 0.29", "-89.9161, 173.2, -34.9225, 0.29", "-90.438, 173.382, -35.148, 0.81", "-90.8504, 173.527, -35.3121, 1.18", "-91.3558, 173.731, -35.4713, 0.88", "-92.3664, 174.272, -35.7865, 0.29", "-92.8829, 174.651, -36.0141, 0.29", "-93.354, 175.115, -36.2714, 0.59", "-93.5657, 175.366, -36.4388, 0.88", "-93.7796, 175.676, -36.685, 0.59", "-93.9969, 176.044, -37.1144, 0.37", "-94.3271, 176.646, -38.0286, 0.37", "-94.5097, 176.964, -38.5953, 0.74", "-94.8778, 177.542, -39.7775, 0.52", "-95.1823, 177.975, -40.7442, 1.11", "-96.0301, 178.979, -43.3201, 1.25", "-96.6566, 179.602, -45.177, 0.66", "-97.1192, 179.981, -46.4727, 0.44", "-97.6674, 180.355, -47.9252, 1.03", "-98.1821, 180.631, -49.1295, 1.03", "-99.2419, 181.008, -51.2549, 0.29", "-99.8675, 181.131, -52.2996, 0.29", "-100.357, 181.192, -53.0292, 1.25", "-100.528, 181.215, -53.2629, 1.69", "-100.944, 181.284, -53.7937, 1.69", "-102.094, 181.531, -55.141, 0.29", "-102.975, 181.821, -56.1015, 0.29", "-103.447, 182.039, -56.6185, 0.29", "-104.081, 182.401, -57.3534, 0.29", "-104.748, 182.791, -58.1437, 0.81", "-105.136, 183.018, -58.586, 0.88", "-105.925, 183.471, -59.4049, 0.29", "-106.712, 183.866, -60.1776, 0.81", "-107.108, 184.024, -60.5424, 0.81", "-107.72, 184.23, -61.0878, 0.22", "-108.108, 184.378, -61.4117, 0.52", "-108.276, 184.449, -61.5543, 0.59", "-109.154, 184.77, -62.1827, 0.22", "-109.486, 184.85, -62.3905, 0.29" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-59.3172, 122.427, -89.6859, 0.52", "-58.6596, 123.934, -90.4958, 0.52", "-58.2259, 125.005, -91.0816, 0.81", "-57.9322, 125.747, -91.5493, 0.59", "-57.2429, 127.308, -92.5981, 0.96", "-56.7839, 128.268, -93.3003, 0.96", "-56.2465, 129.407, -94.1489, 0.52", "-55.9291, 130.123, -94.7479, 0.52", "-55.3906, 131.347, -95.8741, 0.52", "-55.0636, 132.088, -96.5501, 0.52", "-54.6482, 133.041, -97.3247, 0.66", "-54.4158, 133.679, -97.8215, 0.96", "-54.1467, 134.541, -98.4603, 0.96", "-53.9057, 135.583, -99.2358, 0.37", "-53.7695, 136.526, -99.8883, 0.37", "-53.7031, 137.455, -100.509, 0.37", "-53.6622, 139.227, -101.709, 0.44", "-53.6631, 139.599, -101.98, 0.74", "-53.6719, 140.443, -102.6, 0.74", "-53.7046, 141.24, -103.193, 0.37", "-53.7054, 141.955, -103.739, 0.37", "-53.6132, 142.801, -104.331, 0.37", "-53.4359, 143.433, -104.695, 0.37", "-53.0969, 144.425, -105.258, 0.37", "-52.9827, 144.701, -105.403, 0.81", "-52.5972, 145.486, -105.806, 0.37", "-52.2413, 146.092, -106.11, 0.37", "-51.7285, 146.875, -106.425, 0.66", "-51.3602, 147.444, -106.643, 0.66" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "-59.3172, 122.427, -89.6859, 0.44", "-59.4576, 123.479, -89.6339, 0.44", "-59.6986, 124.293, -89.6219, 0.37", "-60.0147, 125.048, -89.6413, 0.88", "-60.2121, 125.458, -89.6818, 0.88", "-60.5525, 126.118, -89.7765, 0.52", "-60.8947, 126.794, -90.0244, 0.29", "-61.3246, 127.569, -90.4704, 0.22", "-61.5834, 127.992, -90.7611, 0.22", "-61.9895, 128.609, -91.2345, 0.88", "-62.2662, 129.025, -91.5877, 1.25", "-63.4054, 130.805, -93.2749, 0.44", "-63.792, 131.477, -93.9686, 0.96", "-63.9287, 131.762, -94.2864, 1.18" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-30.6701, 5.27922, -7.05682, 0.81", "-31.3746, 5.08481, -8.70681, 0.81", "-31.7357, 5.02108, -9.42936, 0.81", "-34.0611, 4.87727, -13.3165, 1.62", "-35.7531, 4.95372, -15.7186, 0.66", "-36.7978, 5.04791, -17.0376, 0.66", "-37.4949, 5.09566, -17.8512, 0.88", "-38.3082, 5.16887, -18.6699, 0.96", "-39.6522, 5.24189, -19.822, 0.81", "-41.0, 5.15419, -20.6284, 0.52", "-42.1863, 4.85646, -21.2666, 0.52", "-43.4646, 4.23088, -21.9583, 0.74", "-44.5936, 3.39931, -22.5655, 1.11", "-44.9569, 3.03768, -22.7442, 1.25", "-45.7316, 2.08458, -23.1104, 0.96", "-46.6538, 0.837681, -23.5225, 0.66", "-47.5211, -0.318468, -23.889, 0.88", "-48.4271, -1.43661, -24.2718, 0.81", "-49.3875, -2.51459, -24.7207, 0.96", "-50.1447, -3.32284, -25.139, 1.18", "-50.9762, -4.21685, -25.6802, 1.11", "-51.6761, -5.0034, -26.2452, 1.18", "-52.3711, -5.82099, -26.9514, 1.33", "-53.4835, -7.09681, -28.2026, 0.66", "-54.3084, -7.96664, -29.1281, 0.88", "-54.9925, -8.62591, -29.8473, 0.88", "-56.1122, -9.60742, -30.9424, 0.59", "-56.7935, -10.1159, -31.5059, 0.59", "-57.4058, -10.4456, -31.8754, 0.81", "-58.4025, -10.7568, -32.1332, 1.33", "-59.2743, -10.9437, -32.1517, 1.4", "-59.8421, -11.0845, -32.0841, 1.25", "-60.9518, -11.4994, -31.8178, 0.52", "-61.5813, -11.8695, -31.6532, 0.52", "-62.3699, -12.579, -31.529, 0.66", "-63.062, -13.3815, -31.4924, 0.81", "-63.8019, -14.3073, -31.5044, 0.81", "-64.2826, -14.9472, -31.5792, 1.11", "-64.6716, -15.519, -31.7064, 1.33", "-65.2248, -16.3824, -32.0213, 1.33", "-65.5116, -16.8468, -32.279, 1.33", "-66.0748, -17.7642, -32.9898, 0.81", "-66.6996, -18.7673, -33.8933, 0.52", "-67.1771, -19.5088, -34.6044, 0.74", "-67.8692, -20.5593, -35.6222, 0.96", "-68.4232, -21.3651, -36.3721, 0.81", "-69.2075, -22.4229, -37.3557, 0.66", "-69.8819, -23.2677, -38.0929, 0.59", "-70.3653, -23.8278, -38.5246, 1.03", "-70.766, -24.3007, -38.8395, 1.25", "-71.3367, -25.0378, -39.2268, 1.25", "-72.1413, -26.2523, -39.846, 0.81", "-72.5581, -27.0192, -40.2665, 0.52", "-73.1421, -28.1025, -41.0536, 0.52", "-73.583, -28.8334, -41.6529, 0.44", "-73.8473, -29.232, -42.0191, 0.44", "-74.6422, -30.3932, -43.1435, 0.96", "-74.98, -30.8723, -43.6111, 1.4", "-75.8527, -31.9543, -44.8482, 0.88", "-76.6227, -32.8547, -45.9037, 0.66", "-77.709, -34.1567, -47.3642, 0.66", "-78.4425, -35.1727, -48.4854, 0.59", "-79.1559, -36.3689, -49.749, 1.77", "-80.1156, -38.3561, -51.7426, 0.59", "-80.4002, -39.0512, -52.3996, 0.74", "-80.7223, -39.8528, -53.1385, 0.74", "-81.516, -41.6238, -54.665, 0.59", "-81.9287, -42.4133, -55.2803, 0.59", "-82.3887, -43.2138, -55.7999, 0.74", "-83.0859, -44.3522, -56.3679, 0.74", "-83.7767, -45.3171, -56.8104, 0.74", "-84.5723, -46.3335, -57.3582, 0.52", "-85.3067, -47.1589, -57.8145, 0.37", "-85.7279, -47.5993, -58.1095, 1.11", "-86.0121, -47.8614, -58.3345, 1.11", "-86.5289, -48.2846, -58.7742, 0.96", "-88.7651, -49.8008, -60.6256, 0.59", "-89.3311, -50.0926, -61.0212, 0.52", "-89.9085, -50.3024, -61.4287, 0.81", "-90.8474, -50.5964, -62.0863, 0.81", "-91.681, -50.8304, -62.6532, 1.11", "-92.579, -51.0872, -63.2257, 1.25", "-93.4535, -51.3656, -63.7059, 0.96", "-95.3842, -52.1507, -64.9327, 0.52", "-96.2036, -52.5701, -65.504, 0.52", "-96.8503, -53.0152, -65.9978, 0.81", "-97.4825, -53.6325, -66.5647, 0.88", "-97.7969, -54.0681, -66.9093, 1.03", "-98.2088, -54.8189, -67.4255, 0.88", "-98.5782, -55.6445, -67.9019, 0.44", "-98.9503, -56.5902, -68.4185, 0.44", "-99.5532, -58.5346, -69.4402, 1.33", "-100.11, -60.56, -70.4852, 0.59", "-100.303, -61.2886, -70.8848, 1.03", "-100.441, -61.8167, -71.1794, 1.18", "-100.655, -62.5961, -71.6325, 0.81", "-101.125, -64.0368, -72.4763, 0.59", "-101.506, -64.9658, -73.0309, 0.37", "-102.226, -66.338, -73.9817, 0.37", "-102.449, -66.6623, -74.2478, 0.96", "-102.645, -66.8944, -74.4605, 1.25", "-102.931, -67.1644, -74.7311, 1.25", "-104.065, -68.0368, -75.6181, 0.52", "-104.859, -68.6065, -76.1469, 0.52", "-105.744, -69.226, -76.6114, 0.52", "-105.994, -69.395, -76.7345, 1.18", "-106.42, -69.6811, -76.9854, 1.18", "-106.803, -69.9462, -77.222, 1.18", "-107.435, -70.4112, -77.5381, 0.88", "-108.678, -71.2888, -78.3228, 0.44", "-108.855, -71.4118, -78.4687, 0.81", "-110.657, -72.6537, -80.1309, 0.52", "-111.28, -73.0994, -80.7646, 0.81", "-112.354, -73.9007, -81.9075, 0.44", "-114.13, -75.3102, -83.9287, 0.74", "-114.903, -75.9634, -84.8178, 0.44", "-115.266, -76.3045, -85.218, 1.33", "-115.51, -76.5728, -85.4922, 1.33", "-116.017, -77.1656, -86.1186, 0.74", "-116.947, -78.2204, -87.2751, 0.44", "-117.22, -78.5182, -87.5437, 0.74", "-117.681, -78.9436, -87.9961, 0.74", "-118.781, -79.6143, -89.1871, 0.37", "-119.263, -79.7194, -89.7387, 0.37", "-119.798, -79.6413, -90.3937, 0.66", "-120.195, -79.5131, -90.861, 0.88", "-120.548, -79.3846, -91.2656, 0.88", "-121.614, -79.0305, -92.4387, 0.59", "-122.218, -78.8701, -93.0276, 0.29", "-122.775, -78.803, -93.5329, 0.29", "-123.828, -78.8701, -94.3916, 0.96", "-124.092, -78.934, -94.5741, 1.18", "-125.426, -79.5415, -95.4387, 0.59", "-125.991, -79.9179, -95.8953, 0.81", "-126.437, -80.2538, -96.3078, 0.81", "-127.032, -80.703, -96.886, 0.37", "-127.717, -81.223, -97.5769, 0.37", "-128.741, -82.0086, -98.6638, 1.11", "-130.732, -83.5676, -100.793, 0.52", "-131.086, -83.8475, -101.183, 0.52", "-131.844, -84.4239, -102.018, 0.44", "-132.241, -84.7, -102.477, 1.47", "-133.983, -85.7636, -104.538, 0.59", "-134.477, -86.0233, -105.103, 0.88", "-135.062, -86.3209, -105.817, 0.88", "-136.128, -86.8375, -107.33, 0.52", "-137.064, -87.2495, -108.779, 0.74", "-137.453, -87.3859, -109.398, 0.96", "-137.704, -87.463, -109.789, 0.96", "-138.943, -87.893, -111.688, 0.29", "-140.016, -88.2967, -113.44, 0.96", "-140.373, -88.438, -114.014, 1.18", "-141.532, -88.9429, -115.882, 0.37", "-142.038, -89.1994, -116.729, 0.37", "-142.414, -89.4, -117.365, 0.74", "-144.319, -90.3491, -120.626, 0.88", "-144.662, -90.4846, -121.218, 0.88", "-145.658, -90.812, -122.948, 0.37", "-146.033, -90.9198, -123.571, 0.37", "-146.518, -91.0427, -124.326, 0.37", "-147.184, -91.2173, -125.226, 0.37", "-148.227, -91.5992, -126.343, 0.74", "-149.852, -92.2892, -128.037, 0.44", "-150.273, -92.4712, -128.428, 1.03", "-150.678, -92.6764, -128.805, 1.03", "-150.984, -92.8887, -129.1, 1.03", "-151.814, -93.6745, -129.864, 0.44", "-152.378, -94.3153, -130.353, 0.59", "-153.009, -95.0138, -130.832, 0.37", "-153.704, -95.7337, -131.384, 0.29", "-154.079, -96.1021, -131.732, 0.44", "-154.359, -96.3941, -132.026, 0.44", "-155.221, -97.3351, -132.989, 0.29", "-155.575, -97.727, -133.402, 0.52", "-155.773, -97.924, -133.652, 0.74", "-156.731, -98.5725, -134.809, 0.29", "-157.134, -98.7915, -135.293, 0.88" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-30.6701, 5.27922, -7.05682, 0.88", "-31.7659, 8.76074, -7.07105, 0.88", "-32.3115, 10.3539, -6.95068, 0.52", "-32.6686, 11.2767, -6.84351, 0.88", "-33.3997, 12.96, -6.61174, 0.88", "-34.7135, 15.6607, -6.20882, 0.52", "-35.5564, 17.109, -5.98376, 0.52", "-36.673, 18.7671, -5.57121, 0.44", "-37.6131, 19.8671, -5.2806, 0.59", "-38.6141, 20.8599, -4.96469, 0.74", "-39.4634, 21.5758, -4.69376, 0.74", "-41.4402, 22.994, -4.16804, 1.25", "-42.0995, 23.4073, -4.03147, 1.25", "-43.4664, 24.1224, -3.86433, 0.66", "-45.1839, 24.9197, -3.77194, 0.81", "-45.8935, 25.2156, -3.75371, 0.66", "-47.5037, 25.8452, -3.75874, 0.88", "-50.244, 26.841, -3.84693, 0.88", "-51.3853, 27.2122, -3.91745, 0.66", "-52.1159, 27.4176, -3.99484, 0.52", "-53.6605, 27.7713, -4.17394, 1.03", "-54.2744, 27.9274, -4.14102, 1.33", "-54.7044, 28.0681, -4.04316, 1.55", "-55.1319, 28.2336, -3.91276, 1.55", "-55.8122, 28.5318, -3.71219, 1.33", "-56.9458, 29.0898, -3.42049, 0.74", "-58.2926, 29.8318, -3.11099, 0.59", "-59.6464, 30.7474, -2.79371, 0.59", "-60.5132, 31.477, -2.59117, 0.59", "-60.9729, 31.9651, -2.47804, 1.11", "-61.7519, 33.0589, -2.31347, 1.55", "-62.0292, 33.6118, -2.27115, 1.77", "-62.5944, 35.3697, -2.09732, 0.74", "-62.8264, 36.4877, -1.94799, 0.96", "-62.9514, 37.3472, -1.81077, 0.74", "-63.1017, 38.5621, -1.57006, 0.52", "-63.2203, 39.4819, -1.34928, 0.44", "-63.7182, 42.0419, -0.586734, 0.88", "-63.9024, 42.7694, -0.365254, 1.11", "-64.0994, 43.4363, -0.179882, 1.11", "-64.4759, 44.6251, 0.0998652, 0.74", "-64.8518, 45.6948, 0.303233, 0.44", "-65.3084, 46.8768, 0.391657, 0.29", "-65.876, 48.2972, 0.315357, 0.59", "-66.2274, 49.225, 0.259274, 0.44", "-66.5744, 50.1915, 0.192356, 1.25", "-66.7299, 50.6628, 0.1581, 1.25", "-66.9158, 51.284, 0.141185, 0.81", "-67.187, 52.1768, 0.173689, 0.29", "-67.5497, 53.1712, 0.278138, 0.59", "-67.7849, 53.7469, 0.332898, 0.74", "-68.0167, 54.2422, 0.370726, 0.88", "-68.338, 54.8487, 0.405332, 0.88", "-68.7891, 55.6077, 0.428253, 0.44", "-69.2435, 56.3224, 0.428253, 0.81", "-69.6785, 56.9799, 0.428253, 0.81", "-70.3546, 57.976, 0.428253, 0.37", "-70.7615, 58.5684, 0.440357, 0.37", "-71.5829, 59.7626, 0.512092, 0.29", "-72.4477, 61.0098, 0.650472, 0.29", "-72.7912, 61.5093, 0.726307, 0.29", "-73.3266, 62.3046, 0.871107, 0.88", "-73.6746, 62.8533, 0.984534, 1.18", "-74.1875, 63.6885, 1.18162, 1.18", "-74.6772, 64.4531, 1.40815, 0.59", "-75.1779, 65.2029, 1.67872, 0.59", "-75.6712, 65.9403, 1.96363, 0.52" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_65",
    "id" : "dend_65",
    "points3d" : [ "33.5461, -118.34, 23.5721, 0.29", "32.9178, -119.145, 23.5721, 0.29", "32.2545, -119.996, 23.5721, 0.15", "31.9427, -120.395, 23.5721, 0.15", "31.2714, -121.256, 23.5721, 0.44", "30.8726, -121.767, 23.5721, 0.44", "30.3491, -122.438, 23.5721, 0.74", "25.1232, -131.326, 22.5547, 0.74", "20.3676, -140.523, 23.3768, 0.74", "17.3849, -150.535, 23.7939, 0.74", "15.2524, -160.787, 23.449, 0.74", "14.5185, -171.015, 21.3086, 0.74", "15.7886, -180.813, 17.9461, 0.74", "17.974, -190.058, 13.7395, 0.74", "19.5477, -199.773, 10.2857, 0.74", "19.358, -209.738, 7.14174, 0.74", "19.893, -219.177, 2.79296, 0.74", "20.8149, -228.573, -1.57361, 0.74", "21.1807, -238.682, -4.25281, 0.74", "20.1849, -248.741, -6.94328, 0.74" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_64",
    "id" : "dend_64",
    "points3d" : [ "33.5461, -118.34, 23.5721, 0.22", "34.368, -117.834, 23.5591, 0.22", "35.2892, -117.268, 23.5445, 0.59", "35.6699, -117.033, 23.5385, 0.59", "36.4757, -116.538, 23.5257, 0.37", "37.0125, -116.208, 23.5172, 0.37", "46.1071, -112.019, 24.6898, 0.37", "54.1973, -105.848, 24.6244, 0.37", "62.7188, -100.506, 25.8521, 0.37", "70.9801, -95.3638, 28.6388, 0.37", "78.3554, -89.1861, 31.954, 0.37", "84.7859, -83.0254, 36.8756, 0.37" ],
    "parent" : "dend_63",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "6.2068, -43.4264, 28.5595, 0.52", "5.51719, -44.3678, 28.3098, 0.52", "4.88971, -45.2244, 28.0827, 0.52", "4.25807, -46.0866, 27.854, 0.44", "3.81438, -46.6923, 27.6934, 0.29", "3.41982, -47.2309, 27.5506, 0.74", "-2.69557, -55.364, 25.9366, 0.74", "-8.68225, -63.572, 24.1896, 0.74", "-14.8129, -71.2462, 21.1902, 0.74", "-21.6504, -78.228, 18.1843, 0.74", "-29.0626, -83.9994, 14.3312, 0.74", "-37.2829, -88.6058, 10.7005, 0.74" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "6.2068, -43.4264, 28.5595, 0.29", "6.99492, -43.5563, 27.8989, 0.29", "8.2816, -43.6758, 26.9127, 0.29", "8.85194, -43.6889, 26.5053, 0.44", "9.725, -43.6306, 25.8943, 0.44", "10.4531, -43.4988, 25.3878, 0.37", "10.9182, -43.3624, 25.0547, 0.22", "11.2466, -43.0689, 24.8179, 0.59", "11.3497, -42.6352, 24.7251, 0.74", "11.2835, -41.6474, 24.6592, 0.22", "11.054, -40.7261, 24.6733, 0.22", "10.6323, -39.6014, 24.7324, 0.22", "10.1044, -38.5341, 24.7965, 0.81", "16.5524, -32.3182, 19.9613, 0.81", "22.6797, -25.1734, 15.9422, 0.81" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "2.27554, -178.368, 16.5184, 0.37", "10.9049, -183.483, 15.1738, 0.37", "18.8347, -189.68, 13.6618, 0.37", "27.1623, -195.074, 11.5971, 0.37", "35.3179, -200.824, 9.72808, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "2.27554, -178.368, 16.5184, 0.22", "10.5847, -183.68, 18.8348, 0.37", "18.0999, -189.435, 22.5068, 0.37", "25.5296, -196.21, 24.2862, 0.37" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-56.5161, -173.17, 5.16228, 0.37", "-53.9826, -183.048, 2.90779, 0.37", "-50.4621, -192.408, 0.0568766, 0.37", "-48.1627, -202.516, -1.37173, 0.37", "-44.95, -212.153, -3.70407, 0.37", "-42.0012, -222.156, -4.45201, 0.37", "-37.9686, -231.696, -5.53617, 0.37", "-33.7791, -241.215, -6.04701, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-56.5161, -173.17, 5.16228, 0.22", "-53.5023, -183.151, 4.41799, 0.37", "-48.8617, -192.451, 4.55121, 0.37", "-45.3701, -202.115, 2.79143, 0.37" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "98.6599, 301.43, -41.6849, 0.37", "99.8144, 302.813, -41.2275, 0.37", "100.269, 303.252, -41.1018, 0.37", "101.062, 303.845, -40.9548, 0.29", "101.639, 304.196, -40.8616, 0.29", "102.389, 304.613, -40.725, 0.74", "103.087, 305.026, -40.5821, 0.96", "103.634, 305.341, -40.499, 0.52", "104.521, 305.892, -40.3599, 0.44", "105.372, 306.478, -40.1905, 0.37", "105.841, 306.921, -40.0615, 0.29", "106.348, 307.593, -39.8757, 0.29", "106.649, 308.098, -39.7563, 0.29", "107.143, 308.912, -39.5829, 0.74", "107.697, 309.746, -39.4253, 1.11", "108.237, 310.469, -39.3143, 1.11", "108.762, 311.074, -39.2365, 0.81", "109.851, 312.169, -39.105, 0.37", "110.781, 313.043, -39.0053, 0.37", "111.392, 313.61, -38.9198, 0.37", "111.918, 314.122, -38.852, 0.37", "112.244, 314.462, -38.8042, 1.03", "112.767, 315.073, -38.6975, 1.33", "113.009, 315.396, -38.6179, 1.33", "113.914, 316.838, -38.1047, 0.29", "114.455, 317.816, -37.6842, 0.29", "114.997, 318.874, -37.1832, 0.88", "115.305, 319.532, -36.8626, 0.88", "115.747, 320.528, -36.3815, 0.74", "116.44, 322.044, -35.7009, 0.66", "116.776, 322.798, -35.4393, 0.74", "117.218, 323.882, -35.1788, 0.44", "117.504, 324.707, -35.1104, 0.44", "117.81, 325.744, -35.1941, 0.37", "118.243, 327.464, -35.5613, 0.37", "118.602, 328.904, -36.0031, 0.37", "118.886, 330.103, -36.4313, 0.37", "119.157, 331.529, -37.0179, 1.77", "119.252, 332.337, -37.3876, 1.77", "119.244, 333.015, -37.7279, 1.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "98.6599, 301.43, -41.6849, 1.11", "99.5541, 302.709, -44.0689, 1.11", "100.562, 303.844, -46.4745, 0.74", "101.088, 304.239, -47.64, 0.29", "101.641, 304.627, -48.9601, 0.44", "102.18, 305.089, -50.4027, 0.37", "102.834, 305.761, -52.2233, 0.74", "103.089, 306.117, -52.9484, 0.88", "103.767, 306.981, -54.6872, 0.29", "104.375, 307.651, -56.0872, 0.44", "105.088, 308.34, -57.4411, 0.29", "105.537, 308.786, -58.2478, 0.96", "105.925, 309.229, -58.8659, 1.25", "106.195, 309.534, -59.2444, 1.25", "107.383, 310.788, -60.6011, 0.37", "108.078, 311.403, -61.256, 0.74", "109.604, 312.564, -62.5393, 0.88", "110.136, 312.945, -62.9661, 1.11", "110.914, 313.504, -63.5459, 0.52", "111.457, 313.908, -63.9055, 0.52", "112.072, 314.382, -64.2427, 0.29", "112.608, 314.772, -64.5109, 0.29", "113.505, 315.338, -64.8713, 1.25", "113.723, 315.467, -64.9662, 1.55", "114.116, 315.689, -65.1435, 1.55", "115.118, 316.224, -65.6084, 0.37", "116.273, 316.774, -66.1184, 0.44", "117.232, 317.176, -66.4994, 0.81", "117.451, 317.247, -66.5718, 1.11", "118.163, 317.457, -66.7951, 1.11", "119.428, 317.768, -67.1388, 0.29", "120.559, 317.97, -67.3527, 0.37", "121.312, 318.021, -67.4589, 0.37", "122.127, 318.002, -67.5785, 0.66" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-63.9287, 131.762, -94.2864, 0.44", "-62.844, 132.774, -94.5587, 0.44", "-61.9056, 133.741, -94.9724, 0.29", "-61.3901, 134.347, -95.2829, 0.44", "-60.8237, 135.12, -95.6861, 0.44", "-60.4586, 135.696, -95.9733, 0.81", "-59.9925, 136.52, -96.3833, 0.81", "-59.5415, 137.516, -96.976, 0.52", "-59.3741, 138.155, -97.3992, 0.37", "-59.279, 138.836, -97.8587, 0.37", "-59.2301, 139.515, -98.3321, 0.81", "-59.1835, 140.14, -98.764, 0.88", "-59.0467, 141.116, -99.4176, 0.88", "-58.7283, 142.124, -100.184, 0.52", "-58.4985, 142.527, -100.575, 0.81", "-57.7688, 143.321, -101.534, 0.52", "-57.2571, 143.716, -102.075, 0.52", "-56.5255, 144.153, -102.688, 0.52", "-54.9685, 144.926, -103.782, 0.52", "-54.1896, 145.286, -104.351, 0.52", "-53.4694, 145.6, -104.915, 0.81", "-52.9285, 145.84, -105.346, 1.03", "-52.3925, 146.091, -105.79, 0.59", "-51.3066, 146.665, -106.701, 0.66", "-49.5032, 147.809, -108.142, 0.52", "-48.8252, 148.302, -108.68, 0.52", "-48.0505, 148.959, -109.345, 1.11", "-47.6891, 149.342, -109.673, 1.11", "-47.3951, 149.687, -109.942, 1.25", "-46.8482, 150.496, -110.379, 0.66", "-46.4427, 151.448, -110.606, 0.44", "-46.2528, 152.256, -110.751, 0.44", "-46.1647, 153.611, -110.981, 0.81" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "-63.9287, 131.762, -94.2864, 0.44", "-64.8107, 133.004, -95.8864, 0.44", "-65.2199, 133.535, -96.6253, 0.37", "-65.6745, 134.111, -97.4387, 0.37", "-66.0697, 134.575, -98.0514, 0.88", "-66.534, 135.092, -98.6836, 0.88", "-67.3739, 135.941, -99.6776, 0.59", "-68.1912, 136.744, -100.534, 0.22", "-68.6761, 137.182, -101.076, 0.66", "-69.3758, 137.767, -101.876, 0.37", "-69.7719, 138.09, -102.325, 0.29", "-70.4748, 138.729, -103.246, 0.29", "-71.1391, 139.488, -104.361, 0.66", "-71.7795, 140.449, -105.878, 1.03", "-71.9361, 140.733, -106.332, 1.33", "-72.0332, 140.938, -106.663, 1.33", "-72.4382, 141.884, -108.161, 0.44", "-72.8343, 142.863, -109.718, 0.29", "-73.0693, 143.469, -110.655, 0.59", "-73.2574, 143.977, -111.446, 0.59", "-73.3493, 144.256, -111.88, 0.88", "-73.51, 144.749, -112.639, 0.88", "-73.9835, 145.944, -114.475, 0.29", "-74.125, 146.37, -115.108, 0.29", "-74.2214, 146.738, -115.636, 0.29", "-74.3463, 147.314, -116.466, 0.96", "-74.4444, 147.748, -117.061, 0.96", "-74.8252, 149.111, -118.716, 0.29", "-75.1145, 149.868, -119.495, 0.29", "-75.2695, 150.168, -119.789, 0.29", "-75.6104, 150.761, -120.307, 0.29", "-75.9181, 151.275, -120.721, 0.29", "-76.2562, 151.869, -121.151, 0.81", "-76.5349, 152.389, -121.512, 0.88", "-77.2156, 153.676, -122.498, 0.29", "-77.5624, 154.353, -123.031, 0.59", "-77.8172, 154.876, -123.434, 0.59", "-78.0803, 155.434, -123.852, 0.29", "-78.4828, 156.335, -124.518, 0.29", "-78.7422, 157.012, -125.006, 0.29", "-79.0115, 157.789, -125.536, 0.29", "-79.2306, 158.414, -125.988, 0.29", "-79.501, 159.218, -126.544, 0.29", "-79.6311, 159.608, -126.787, 0.29", "-79.9907, 160.645, -127.369, 0.88", "-80.1347, 161.11, -127.611, 1.11", "-80.5456, 162.821, -128.462, 0.29", "-80.6811, 163.476, -128.817, 0.59", "-80.8542, 164.337, -129.332, 0.29", "-80.9582, 164.768, -129.599, 0.29", "-81.1234, 165.44, -129.986, 0.29", "-81.2438, 165.998, -130.281, 0.29", "-81.5392, 167.232, -130.945, 0.66", "-81.7437, 167.817, -131.314, 0.66", "-82.186, 168.949, -132.179, 0.37", "-82.4615, 169.606, -132.733, 0.37", "-82.922, 170.465, -133.517, 0.37", "-83.4971, 171.375, -134.369, 0.37", "-84.1033, 172.277, -135.147, 0.37", "-85.0178, 173.577, -136.246, 0.29", "-85.2871, 173.934, -136.574, 0.29", "-85.9766, 174.778, -137.42, 0.29", "-86.296, 175.161, -137.817, 0.29", "-86.9618, 176.105, -138.632, 1.4", "-87.1057, 176.343, -138.789, 1.4" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "35.3179, -200.824, 9.72808, 0.37", "43.6592, -206.43, 8.3422, 0.37", "51.3731, -212.727, 6.21503, 0.37", "59.5525, -218.375, 4.17318, 0.37", "67.1104, -224.415, 1.04479, 0.37", "74.4812, -231.085, -1.26149, 0.37", "82.5039, -236.263, -4.62508, 0.37", "89.6063, -241.591, -9.50437, 0.37", "96.6707, -248.106, -12.9097, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "35.3179, -200.824, 9.72808, 0.22", "43.5059, -206.458, 7.68576, 0.37", "52.5266, -210.796, 6.43789, 0.37", "61.0862, -215.276, 3.5183, 0.37", "69.7421, -218.368, -0.53226, 0.37", "77.8645, -222.481, -4.85436, 0.37", "86.2407, -227.293, -7.8266, 0.37", "94.2041, -233.546, -8.88597, 0.37", "102.124, -239.555, -11.0145, 0.37", "111.401, -243.345, -11.9628, 0.37", "120.273, -248.189, -12.0523, 0.37", "129.816, -250.868, -10.4932, 0.37", "139.46, -252.697, -8.50241, 0.37", "148.762, -252.971, -4.84268, 0.37" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "25.5296, -196.21, 24.2862, 0.37", "33.0561, -202.045, 27.8175, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "25.5296, -196.21, 24.2862, 0.22", "33.5682, -202.297, 25.6165, 0.37", "41.1917, -208.584, 28.0723, 0.37" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-45.3701, -202.115, 2.79143, 0.37", "-41.4396, -211.763, 3.13332, 0.37", "-35.376, -219.91, 4.87313, 0.37", "-29.5739, -228.001, 7.5135, 0.37", "-23.4498, -235.727, 10.4025, 0.37", "-17.1039, -242.144, 15.1338, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-45.3701, -202.115, 2.79143, 0.22", "-41.704, -211.81, 1.64538, 0.37", "-38.8737, -221.528, -0.869019, 0.37", "-37.0689, -231.769, -2.14, 0.37", "-36.0098, -242.125, -3.40391, 0.37", "-33.3574, -252.249, -3.44787, 0.37", "-29.9172, -261.98, -1.94017, 0.37", "-26.7673, -271.334, 1.33435, 0.37", "-24.9937, -280.695, 5.50208, 0.37", "-24.452, -289.369, 11.1109, 0.37", "-25.4877, -298.594, 15.7748, 0.37" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "119.244, 333.015, -37.7279, 0.29", "120.613, 335.331, -39.904, 0.29", "121.084, 336.161, -40.595, 0.29", "121.46, 336.923, -41.1064, 0.29", "121.694, 337.483, -41.4113, 0.29", "122.078, 338.546, -41.9077, 0.74", "122.19, 338.888, -42.0442, 0.74", "122.588, 340.387, -42.3899, 0.22", "122.937, 341.758, -42.7072, 0.22", "123.168, 342.932, -42.9611, 0.22", "123.28, 343.62, -43.0888, 0.52", "123.454, 344.746, -43.2246, 0.22", "123.516, 345.197, -43.2665, 0.66" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "119.244, 333.015, -37.7279, 0.44", "118.95, 334.595, -36.9782, 0.44", "118.822, 335.793, -36.4331, 0.44", "118.709, 337.084, -35.875, 0.44", "118.644, 337.954, -35.5166, 0.44", "118.563, 339.002, -35.1166, 0.37", "118.513, 339.621, -34.8988, 0.37", "118.49, 340.724, -34.4444, 0.88", "118.504, 341.138, -34.2956, 1.47", "118.517, 341.587, -34.1764, 1.47", "118.497, 342.776, -33.9455, 0.37", "118.42, 343.45, -33.849, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "122.127, 318.002, -67.5785, 0.29", "122.595, 318.431, -67.6808, 0.29", "123.32, 319.022, -67.8814, 0.81", "123.847, 319.4, -68.0405, 0.81", "124.585, 319.839, -68.2963, 0.22", "125.009, 320.056, -68.4639, 0.59", "126.423, 320.681, -69.0493, 0.22", "127.399, 321.033, -69.5042, 0.81", "127.899, 321.195, -69.7688, 0.81", "128.88, 321.527, -70.3567, 0.29", "129.914, 321.933, -71.0308, 0.29", "131.054, 322.483, -71.8236, 0.22", "131.723, 322.878, -72.3002, 0.22", "132.552, 323.506, -72.9591, 0.81", "133.517, 324.425, -73.7592, 0.22", "134.156, 325.198, -74.307, 0.22", "134.697, 325.973, -74.8024, 0.44", "135.037, 326.566, -75.1427, 0.15", "135.321, 327.118, -75.4183, 0.22", "135.719, 327.994, -75.7841, 0.15", "135.995, 328.603, -75.9914, 0.52" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "122.127, 318.002, -67.5785, 0.22", "123.827, 318.644, -68.0962, 0.22", "124.457, 318.882, -68.288, 0.81", "125.137, 319.14, -68.495, 0.52", "126.545, 319.672, -68.9239, 1.55" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-46.1647, 153.611, -110.981, 0.37", "-45.3771, 155.263, -111.637, 0.37", "-44.8217, 156.622, -112.289, 0.37", "-44.3995, 157.655, -112.785, 0.37", "-43.9506, 158.753, -113.312, 0.81", "-43.7419, 159.264, -113.557, 0.81", "-43.2025, 160.584, -114.191, 0.52", "-42.9589, 161.652, -114.755, 1.33" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-46.1647, 153.611, -110.981, 0.29", "-45.8663, 154.841, -111.229, 0.29", "-45.653, 155.721, -111.407, 0.88", "-45.4233, 156.668, -111.598, 0.29", "-45.2563, 157.357, -111.737, 0.88", "-45.064, 158.15, -111.897, 0.88" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "41.1917, -208.584, 28.0723, 0.37", "49.2245, -214.82, 28.532, 0.37", "57.2274, -221.112, 28.3281, 0.37", "63.9833, -228.845, 28.6613, 0.37", "70.3667, -236.916, 29.0804, 0.37", "76.2255, -245.312, 30.397, 0.37", "81.9594, -253.307, 33.4211, 0.37", "87.9047, -261.017, 36.6966, 0.37", "93.3032, -268.43, 41.2817, 0.37", "99.1626, -275.621, 45.6134, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "41.1917, -208.584, 28.0723, 0.22", "49.0069, -214.771, 30.1224, 0.37", "55.6816, -222.394, 31.779, 0.37", "62.6885, -229.678, 33.4477, 0.37", "69.6572, -236.801, 35.774, 0.37", "77.3118, -243.313, 37.4889, 0.37", "85.6099, -248.408, 40.2453, 0.37", "93.188, -253.36, 44.7548, 0.37", "100.977, -256.277, 50.3777, 0.37", "108.482, -257.212, 56.9263, 0.37", "115.226, -259.322, 64.0312, 0.37", "122.122, -262.716, 70.5117, 0.37" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "118.42, 343.45, -33.849, 0.29", "117.804, 344.868, -33.849, 0.29", "117.359, 345.8, -33.849, 0.29", "117.07, 346.388, -33.849, 0.66", "116.972, 346.594, -33.848, 0.66", "116.659, 347.355, -33.8422, 0.22", "116.353, 348.222, -33.8343, 0.22", "116.165, 348.891, -33.8261, 0.22", "116.091, 349.268, -33.8216, 0.59", "116.05, 349.738, -33.8165, 0.59", "116.03, 350.765, -33.8065, 0.29", "116.055, 351.456, -33.7762, 0.88", "116.092, 352.063, -33.7382, 0.88", "116.215, 353.928, -33.6113, 0.29", "116.278, 354.891, -33.5407, 0.29", "116.31, 355.446, -33.4959, 0.59", "116.391, 357.174, -33.3276, 0.29", "116.433, 358.031, -33.2274, 0.59" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "118.42, 343.45, -33.849, 0.29", "118.555, 344.719, -33.7537, 0.29", "118.804, 345.913, -33.5879, 0.29", "119.022, 346.752, -33.4538, 0.29", "119.419, 348.114, -33.2406, 0.29", "119.642, 348.835, -33.1303, 0.29", "120.009, 349.981, -32.9592, 0.29", "120.428, 351.229, -32.7671, 1.03", "120.786, 352.165, -32.5951, 1.69", "121.316, 353.402, -32.346, 0.22", "121.583, 353.983, -32.2252, 0.52", "121.723, 354.291, -32.1616, 0.59", "122.102, 355.195, -31.9293, 0.22", "122.462, 356.066, -31.6379, 0.52", "122.679, 356.569, -31.3925, 0.66", "122.969, 357.193, -30.962, 0.22", "123.167, 357.555, -30.6661, 0.22", "123.84, 358.606, -29.723, 0.66", "124.244, 359.131, -29.188, 1.03", "124.729, 359.645, -28.6113, 1.03", "125.444, 360.368, -27.8221, 0.29", "125.906, 360.852, -27.3374, 0.37", "126.283, 361.291, -26.963, 0.37", "126.851, 361.99, -26.4846, 0.29", "127.315, 362.545, -26.1474, 0.29", "127.75, 363.079, -25.8564, 0.29", "128.114, 363.62, -25.6244, 0.66", "128.397, 364.159, -25.4164, 0.66", "128.749, 365.067, -25.0916, 0.29", "128.927, 365.803, -24.8749, 0.29", "129.005, 366.295, -24.7449, 0.29", "129.108, 367.186, -24.5388, 0.66", "129.155, 367.788, -24.4068, 0.74", "129.246, 369.329, -24.1732, 0.29", "129.303, 370.589, -24.0503, 0.29", "129.354, 371.597, -24.0121, 0.88", "129.391, 372.057, -24.0219, 1.03", "129.498, 372.904, -24.0937, 0.74", "129.736, 374.299, -24.3047, 0.29", "129.874, 374.998, -24.5028, 0.59", "130.052, 375.874, -24.8246, 0.29", "130.178, 376.633, -25.1529, 0.59", "130.238, 377.134, -25.4017, 0.29", "130.276, 377.806, -25.7509, 0.81", "130.283, 379.233, -26.4227, 0.29", "130.252, 380.13, -26.8236, 0.29", "130.217, 380.846, -27.131, 0.29", "130.167, 381.763, -27.5272, 0.22", "130.072, 383.364, -28.1782, 0.22", "129.92, 385.446, -28.9307, 0.22", "129.788, 387.175, -29.4965, 0.22", "129.668, 388.76, -29.9828, 0.74", "129.612, 389.536, -30.2038, 0.96", "129.505, 391.085, -30.6055, 0.22", "129.385, 392.651, -31.0115, 0.22" ],
    "parent" : "dend_25",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "126.545, 319.672, -68.9239, 0.22", "126.549, 321.359, -68.9995, 0.22", "126.55, 321.988, -69.0277, 0.37", "126.552, 323.225, -69.0832, 0.22", "126.554, 324.154, -69.1248, 0.22", "126.556, 325.365, -69.1791, 0.22", "126.559, 326.652, -69.2368, 0.22" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "126.545, 319.672, -68.9239, 0.22", "128.041, 319.09, -70.2321, 0.22", "128.578, 318.881, -70.7014, 0.22", "129.202, 318.638, -71.2473, 0.52", "129.919, 318.359, -71.8751, 1.11", "130.621, 318.086, -72.4885, 0.81", "131.385, 317.788, -73.1576, 0.29" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-42.9589, 161.652, -114.755, 0.59", "-43.1339, 163.714, -115.064, 0.59", "-43.1656, 164.325, -115.203, 0.88", "-43.2358, 165.52, -115.507, 0.29", "-43.2946, 166.451, -115.752, 0.29", "-43.3715, 167.413, -115.999, 0.37", "-43.4576, 168.306, -116.221, 0.37", "-43.6621, 169.915, -116.572, 0.29", "-43.7725, 170.612, -116.75, 0.29", "-43.9659, 171.795, -117.076, 0.29", "-44.0784, 172.609, -117.296, 0.96", "-44.154, 173.168, -117.434, 0.96", "-44.2256, 173.743, -117.552, 0.74", "-44.379, 175.11, -117.746, 0.29", "-44.4915, 176.297, -117.922, 0.29", "-44.5577, 177.089, -118.035, 0.29", "-44.6156, 178.017, -118.15, 0.74", "-44.6354, 178.393, -118.188, 0.74", "-44.658, 178.891, -118.225, 0.44", "-44.7382, 180.071, -118.292, 0.29", "-44.8437, 180.987, -118.331, 0.29", "-45.0654, 182.884, -118.349, 0.29", "-45.1461, 183.73, -118.328, 0.96", "-45.1818, 184.341, -118.28, 0.59", "-45.1879, 185.158, -118.165, 0.29", "-45.1533, 186.307, -117.929, 0.22", "-45.0971, 187.407, -117.65, 0.22", "-45.0542, 188.038, -117.459, 0.22", "-45.0023, 189.019, -117.186, 0.22", "-44.9616, 189.901, -116.978, 0.22", "-44.8961, 190.738, -116.829, 0.81", "-44.8737, 190.967, -116.81, 1.18", "-44.8307, 191.523, -116.842, 1.18", "-44.7596, 192.79, -117.049, 0.29", "-44.7159, 193.478, -117.222, 0.29", "-44.6266, 194.307, -117.46, 0.66", "-44.5782, 194.594, -117.544, 0.66", "-44.326, 195.809, -117.958, 0.37", "-44.1818, 196.521, -118.225, 0.37", "-44.0821, 197.246, -118.507, 0.37", "-44.0623, 197.811, -118.751, 0.74", "-44.0867, 198.399, -119.027, 0.74", "-44.1608, 199.645, -119.641, 0.29", "-44.1859, 200.423, -120.035, 0.29", "-44.187, 201.431, -120.604, 0.29", "-44.1776, 202.443, -121.191, 0.88", "-44.1664, 203.013, -121.512, 0.88", "-44.1411, 203.811, -121.946, 0.29", "-44.099, 204.807, -122.424, 0.29", "-44.0667, 205.317, -122.667, 0.29", "-44.0462, 206.174, -123.048, 0.74", "-44.0668, 206.716, -123.262, 0.74", "-44.1548, 207.788, -123.65, 0.37", "-44.2518, 208.664, -123.947, 0.59", "-44.3289, 209.28, -124.138, 0.59", "-44.4081, 210.16, -124.401, 0.29", "-44.4433, 211.186, -124.705, 0.29", "-44.4428, 211.725, -124.844, 0.29", "-44.425, 212.374, -124.977, 0.52", "-44.399, 212.91, -125.073, 1.03", "-44.3247, 213.658, -125.178, 1.03", "-44.1322, 215.01, -125.331, 0.22", "-43.8498, 216.696, -125.475, 0.22", "-43.6314, 217.891, -125.555, 0.96", "-43.4982, 218.607, -125.59, 0.96", "-43.132, 220.376, -125.648, 0.29", "-42.817, 221.745, -125.664, 0.29", "-42.5993, 222.652, -125.664, 0.88", "-42.4368, 223.342, -125.664, 1.18", "-42.0965, 224.983, -125.7, 0.37", "-41.8477, 226.409, -125.644, 0.37", "-41.5536, 228.363, -125.464, 0.37", "-41.3534, 229.555, -125.265, 0.37", "-41.1809, 230.392, -125.064, 0.96", "-40.9231, 231.352, -124.757, 0.96", "-39.9384, 233.93, -123.65, 0.29", "-39.6946, 234.406, -123.419, 0.29", "-39.1492, 235.244, -123.001, 0.88", "-38.7141, 235.829, -122.731, 0.88", "-38.3575, 236.287, -122.55, 0.59", "-37.0522, 238.002, -122.037, 0.29", "-36.0863, 239.409, -121.839, 0.29", "-35.5503, 240.297, -121.762, 0.81", "-35.3228, 240.719, -121.751, 0.81", "-35.013, 241.431, -121.758, 0.52", "-34.6409, 242.511, -121.807, 0.22", "-34.2003, 244.473, -121.974, 0.22", "-34.0423, 245.622, -122.087, 0.74", "-33.9973, 246.218, -122.149, 0.74", "-33.9579, 247.87, -122.317, 0.22", "-33.9753, 248.559, -122.38, 0.22", "-34.0461, 249.45, -122.45, 0.52", "-34.0744, 249.679, -122.465, 0.59", "-34.2408, 250.819, -122.558, 0.22", "-34.3916, 251.72, -122.696, 0.44", "-34.7626, 253.4, -123.095, 0.22", "-34.9786, 254.105, -123.335, 0.66", "-35.3796, 255.106, -123.758, 0.22", "-35.9337, 256.256, -124.342, 0.74", "-36.5292, 257.316, -124.969, 0.59", "-37.0556, 258.221, -125.538, 0.29", "-37.4905, 258.968, -126.01, 0.52", "-38.2182, 260.186, -126.788, 0.22", "-38.6908, 260.985, -127.267, 0.59", "-38.853, 261.307, -127.413, 0.59", "-39.2745, 262.454, -127.779, 0.22", "-39.4341, 263.248, -127.987, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-42.9589, 161.652, -114.755, 0.52", "-42.0637, 162.925, -115.998, 0.52", "-41.5312, 163.703, -116.73, 0.29", "-41.0098, 164.52, -117.429, 0.29", "-40.2759, 165.689, -118.376, 0.29", "-39.7454, 166.509, -119.037, 0.59", "-39.543, 166.798, -119.285, 0.66", "-38.8751, 167.65, -120.006, 0.29", "-38.4106, 168.14, -120.485, 0.81", "-38.2779, 168.281, -120.617, 0.81", "-37.6244, 168.92, -121.198, 0.29", "-36.9605, 169.501, -121.875, 0.44", "-36.751, 169.646, -122.084, 0.66", "-36.3409, 169.807, -122.442, 0.66" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "131.385, 317.788, -73.1576, 0.37", "132.948, 317.371, -74.8288, 0.37", "133.613, 317.257, -75.5253, 0.22", "134.464, 317.11, -76.418, 0.22", "134.647, 317.079, -76.6094, 0.66", "135.584, 316.918, -77.5908, 0.22", "136.421, 316.773, -78.4687, 0.22", "136.642, 316.76, -78.6564, 0.37" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "131.385, 317.788, -73.1576, 0.22", "133.42, 318.078, -75.0626, 0.22", "133.863, 318.139, -75.4499, 0.88", "134.905, 318.283, -76.3621, 0.22", "135.35, 318.344, -76.7515, 0.74", "136.931, 318.562, -78.1357, 0.22", "137.599, 318.654, -78.7209, 0.44", "138.541, 318.715, -79.3032, 0.22" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_67", "dend_56", "dend_51", "dend_32", "dend_13", "dend_0", "axon_0", "dend_62", "dend_57", "dend_53", "dend_52", "dend_40", "dend_33", "dend_29", "dend_14", "dend_4", "dend_1", "axon_1", "dend_66", "dend_63", "dend_61", "dend_58", "dend_55", "dend_54", "dend_50", "dend_41", "dend_35", "dend_34", "dend_31", "dend_30", "dend_16", "dend_15", "dend_12", "dend_5", "dend_3", "dend_2", "dend_65", "dend_64", "dend_60", "dend_59", "dend_47", "dend_42", "dend_39", "dend_36", "dend_24", "dend_17", "dend_7", "dend_6", "dend_49", "dend_48", "dend_46", "dend_43", "dend_38", "dend_37", "dend_28", "dend_25", "dend_23", "dend_18", "dend_9", "dend_8", "dend_45", "dend_44", "dend_27", "dend_26", "dend_22", "dend_19", "dend_11", "dend_10", "dend_21", "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_67" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_63" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_65" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_64" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_68",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_66" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_69",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_67",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_70",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_71",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62", "dend_63", "dend_64", "dend_65", "dend_66", "dend_67" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_67", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_51", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_66", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_63", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_58", "dend_58", "dend_55", "dend_55", "dend_54", "dend_54", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_50", "dend_41", "dend_41", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_65", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_64", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_47", "dend_47", "dend_47", "dend_47", "dend_42", "dend_42", "dend_42", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_36", "dend_36", "dend_36", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_46", "dend_43", "dend_43", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_18", "dend_18", "dend_18", "dend_18", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "3.25478E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gkbar_StochKv",
    "ionChannel" : "StochKv_deterministic",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "7.43567E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cIR_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cIR216_L5_NBC_a17b13fac2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_67, id: dend_67, parent: soma_0
create dend_67
public dend_67
// Section: dend_56, id: dend_56, parent: soma_0
create dend_56
public dend_56
// Section: dend_51, id: dend_51, parent: soma_0
create dend_51
public dend_51
// Section: dend_32, id: dend_32, parent: soma_0
create dend_32
public dend_32
// Section: dend_13, id: dend_13, parent: soma_0
create dend_13
public dend_13
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_62, id: dend_62, parent: dend_56
create dend_62
public dend_62
// Section: dend_57, id: dend_57, parent: dend_56
create dend_57
public dend_57
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_40, id: dend_40, parent: dend_32
create dend_40
public dend_40
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_29, id: dend_29, parent: dend_13
create dend_29
public dend_29
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_66, id: dend_66, parent: dend_62
create dend_66
public dend_66
// Section: dend_63, id: dend_63, parent: dend_62
create dend_63
public dend_63
// Section: dend_61, id: dend_61, parent: dend_57
create dend_61
public dend_61
// Section: dend_58, id: dend_58, parent: dend_57
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_53
create dend_55
public dend_55
// Section: dend_54, id: dend_54, parent: dend_53
create dend_54
public dend_54
// Section: dend_50, id: dend_50, parent: dend_40
create dend_50
public dend_50
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_35, id: dend_35, parent: dend_33
create dend_35
public dend_35
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_4
create dend_12
public dend_12
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_65, id: dend_65, parent: dend_63
create dend_65
public dend_65
// Section: dend_64, id: dend_64, parent: dend_63
create dend_64
public dend_64
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_47, id: dend_47, parent: dend_41
create dend_47
public dend_47
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_39, id: dend_39, parent: dend_35
create dend_39
public dend_39
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36
// Section: dend_24, id: dend_24, parent: dend_16
create dend_24
public dend_24
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_46, id: dend_46, parent: dend_42
create dend_46
public dend_46
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_28, id: dend_28, parent: dend_24
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_23, id: dend_23, parent: dend_17
create dend_23
public dend_23
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_27, id: dend_27, parent: dend_25
create dend_27
public dend_27
// Section: dend_26, id: dend_26, parent: dend_25
create dend_26
public dend_26
// Section: dend_22, id: dend_22, parent: dend_18
create dend_22
public dend_22
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_11, id: dend_11, parent: dend_9
create dend_11
public dend_11
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, axon_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, axon_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_65
// Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_68
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_69
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_67
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_70
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_71
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_64
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_67(0), soma_0(0.45000090983035473)
    connect dend_56(0), soma_0(0.45000090983035473)
    connect dend_51(0), soma_0(0.45000090983035473)
    connect dend_32(0), soma_0(0.45000090983035473)
    connect dend_13(0), soma_0(0.45000090983035473)
    connect dend_0(0), soma_0(0.45000090983035473)
    connect axon_0(0), soma_0(1.0)
    connect dend_62(0), dend_56(1.0)
    connect dend_57(0), dend_56(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_40(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_29(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_66(0), dend_62(1.0)
    connect dend_63(0), dend_62(1.0)
    connect dend_61(0), dend_57(1.0)
    connect dend_58(0), dend_57(1.0)
    connect dend_55(0), dend_53(1.0)
    connect dend_54(0), dend_53(1.0)
    connect dend_50(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_35(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_12(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_65(0), dend_63(1.0)
    connect dend_64(0), dend_63(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_47(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_39(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)
    connect dend_24(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_46(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_28(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_23(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_27(0), dend_25(1.0)
    connect dend_26(0), dend_25(1.0)
    connect dend_22(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_11(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -10.9016, -1.97873, -2.50057, 3.38117 ) }
    soma_0 { pt3dadd( -9.79478, -1.80994, -2.24302, 5.67833 ) }
    soma_0 { pt3dadd( -8.68798, -1.64115, -1.98548, 7.15072 ) }
    soma_0 { pt3dadd( -7.58118, -1.47235, -1.72793, 8.64399 ) }
    soma_0 { pt3dadd( -6.47438, -1.30356, -1.47039, 10.0299 ) }
    soma_0 { pt3dadd( -5.36758, -1.13477, -1.21284, 11.2674 ) }
    soma_0 { pt3dadd( -4.26078, -0.965972, -0.955299, 11.9107 ) }
    soma_0 { pt3dadd( -3.15398, -0.797179, -0.697754, 12.2563 ) }
    soma_0 { pt3dadd( -2.04718, -0.628385, -0.440209, 12.5208 ) }
    soma_0 { pt3dadd( -0.940378, -0.459592, -0.182664, 12.7145 ) }
    soma_0 { pt3dadd( 0.166423, -0.290798, 0.0748807, 12.541 ) }
    soma_0 { pt3dadd( 1.27322, -0.122005, 0.332426, 12.2075 ) }
    soma_0 { pt3dadd( 2.38002, 0.0467885, 0.589971, 11.6554 ) }
    soma_0 { pt3dadd( 3.48682, 0.215582, 0.847516, 11.0225 ) }
    soma_0 { pt3dadd( 4.59362, 0.384375, 1.10506, 10.3416 ) }
    soma_0 { pt3dadd( 5.70042, 0.553169, 1.36261, 9.80603 ) }
    soma_0 { pt3dadd( 6.80722, 0.721962, 1.62015, 9.2712 ) }
    soma_0 { pt3dadd( 7.91403, 0.890756, 1.8777, 8.04801 ) }
    soma_0 { pt3dadd( 9.02083, 1.05955, 2.13524, 5.78101 ) }
    soma_0 { pt3dadd( 10.1276, 1.22834, 2.39279, 3.52734 ) }
    soma_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 2.23302 ) }
    // Section: dend_67, id: dend_67, parent: soma_0 (entry count 21/100)
    dend_67 { pt3dclear() }
    dend_67 { pt3dadd( 6.34928, -3.5777, -7.98898, 1.25 ) }
    dend_67 { pt3dadd( 7.32078, -4.09375, -8.32177, 1.25 ) }
    dend_67 { pt3dadd( 8.09109, -4.68578, -9.08676, 1.25 ) }
    dend_67 { pt3dadd( 8.71618, -5.29337, -9.92349, 0.88 ) }
    dend_67 { pt3dadd( 9.24414, -5.90398, -10.725, 0.88 ) }
    dend_67 { pt3dadd( 9.72884, -6.55797, -11.5055, 0.88 ) }
    dend_67 { pt3dadd( 10.9612, -8.58504, -13.6774, 1.18 ) }
    dend_67 { pt3dadd( 11.7285, -10.4572, -15.542, 1.18 ) }
    dend_67 { pt3dadd( 11.8648, -10.9033, -15.9281, 1.69 ) }
    dend_67 { pt3dadd( 12.0301, -11.5019, -16.3604, 1.84 ) }
    dend_67 { pt3dadd( 12.295, -12.3311, -16.8413, 1.62 ) }
    dend_67 { pt3dadd( 12.8155, -13.5532, -17.3049, 1.11 ) }
    dend_67 { pt3dadd( 13.5306, -14.7481, -17.4655, 1.11 ) }
    dend_67 { pt3dadd( 14.5386, -16.1538, -17.4961, 1.11 ) }
    dend_67 { pt3dadd( 15.4255, -17.3217, -17.4491, 1.11 ) }
    dend_67 { pt3dadd( 16.3339, -18.518, -17.3392, 1.11 ) }
    dend_67 { pt3dadd( 17.1889, -19.7452, -17.1618, 1.11 ) }
    dend_67 { pt3dadd( 17.9444, -20.9799, -16.923, 1.18 ) }
    dend_67 { pt3dadd( 18.3582, -21.8864, -16.7284, 1.33 ) }
    dend_67 { pt3dadd( 18.7295, -23.3861, -16.4166, 1.25 ) }
    dend_67 { pt3dadd( 18.8213, -24.6644, -16.1854, 0.88 ) }
    dend_67 { pt3dadd( 18.713, -26.3474, -15.9648, 1.25 ) }
    dend_67 { pt3dadd( 18.589, -27.1276, -15.9133, 1.55 ) }
    dend_67 { pt3dadd( 18.4506, -27.9681, -15.862, 1.55 ) }
    dend_67 { pt3dadd( 18.3159, -29.12, -15.7939, 1.33 ) }
    dend_67 { pt3dadd( 18.2811, -30.3186, -15.711, 1.11 ) }
    dend_67 { pt3dadd( 18.4387, -31.8645, -15.5439, 0.81 ) }
    dend_67 { pt3dadd( 18.9077, -33.5791, -15.2877, 0.59 ) }
    dend_67 { pt3dadd( 19.8687, -35.6139, -14.8761, 0.59 ) }
    dend_67 { pt3dadd( 20.5525, -36.5063, -14.6381, 0.74 ) }
    dend_67 { pt3dadd( 21.6957, -37.4608, -14.3099, 0.96 ) }
    dend_67 { pt3dadd( 22.5786, -37.9785, -14.102, 1.18 ) }
    dend_67 { pt3dadd( 23.2509, -38.2804, -13.9885, 1.18 ) }
    dend_67 { pt3dadd( 24.1456, -38.6331, -13.897, 1.18 ) }
    dend_67 { pt3dadd( 25.1562, -39.0739, -13.8838, 0.88 ) }
    dend_67 { pt3dadd( 26.2243, -39.7705, -13.9553, 0.88 ) }
    dend_67 { pt3dadd( 26.7361, -40.2952, -14.0473, 1.11 ) }
    dend_67 { pt3dadd( 27.4317, -41.2592, -14.2158, 1.11 ) }
    dend_67 { pt3dadd( 27.862, -41.9718, -14.3387, 0.96 ) }
    dend_67 { pt3dadd( 28.262, -42.6878, -14.4615, 1.25 ) }
    dend_67 { pt3dadd( 29.0882, -44.0821, -14.7352, 0.66 ) }
    dend_67 { pt3dadd( 29.6165, -44.8366, -14.9005, 0.66 ) }
    dend_67 { pt3dadd( 30.2221, -45.4621, -15.0498, 0.66 ) }
    dend_67 { pt3dadd( 30.8734, -45.873, -15.1863, 0.74 ) }
    dend_67 { pt3dadd( 31.7528, -46.2071, -15.4032, 0.59 ) }
    dend_67 { pt3dadd( 32.8868, -46.5171, -15.6981, 0.88 ) }
    dend_67 { pt3dadd( 33.5162, -46.6749, -15.8714, 0.88 ) }
    dend_67 { pt3dadd( 34.1293, -46.8676, -16.0436, 1.11 ) }
    dend_67 { pt3dadd( 35.2952, -47.3732, -16.386, 0.66 ) }
    dend_67 { pt3dadd( 36.3324, -48.0205, -16.6988, 0.59 ) }
    dend_67 { pt3dadd( 37.2335, -48.8829, -16.9671, 0.66 ) }
    dend_67 { pt3dadd( 37.9695, -49.8949, -17.1378, 0.81 ) }
    dend_67 { pt3dadd( 38.5912, -50.9835, -17.2759, 1.4 ) }
    dend_67 { pt3dadd( 38.8164, -51.4621, -17.317, 1.55 ) }
    dend_67 { pt3dadd( 39.1828, -52.3941, -17.3503, 0.96 ) }
    dend_67 { pt3dadd( 39.6246, -53.6106, -17.3599, 0.52 ) }
    dend_67 { pt3dadd( 39.9852, -54.5087, -17.4016, 0.52 ) }
    dend_67 { pt3dadd( 40.4668, -55.5239, -17.4765, 0.96 ) }
    dend_67 { pt3dadd( 40.8135, -56.191, -17.5545, 1.03 ) }
    dend_67 { pt3dadd( 41.0579, -56.6366, -17.6017, 1.11 ) }
    dend_67 { pt3dadd( 41.3234, -57.1089, -17.6325, 1.11 ) }
    dend_67 { pt3dadd( 42.0453, -58.413, -17.6965, 0.52 ) }
    dend_67 { pt3dadd( 42.6278, -59.5891, -17.6766, 0.59 ) }
    dend_67 { pt3dadd( 43.1442, -60.7174, -17.5757, 0.59 ) }
    dend_67 { pt3dadd( 43.6445, -61.8255, -17.4519, 1.18 ) }
    dend_67 { pt3dadd( 44.0652, -62.7186, -17.3759, 1.55 ) }
    dend_67 { pt3dadd( 44.323, -63.2279, -17.3514, 1.55 ) }
    dend_67 { pt3dadd( 45.0652, -64.5835, -17.489, 0.81 ) }
    dend_67 { pt3dadd( 45.5777, -65.4193, -17.7575, 0.52 ) }
    dend_67 { pt3dadd( 46.1204, -66.2215, -18.1669, 0.44 ) }
    dend_67 { pt3dadd( 46.8502, -67.2649, -18.8404, 0.81 ) }
    dend_67 { pt3dadd( 47.2865, -67.8791, -19.275, 0.96 ) }
    dend_67 { pt3dadd( 48.4699, -69.5356, -20.4628, 0.52 ) }
    dend_67 { pt3dadd( 48.9579, -70.2197, -20.9575, 0.96 ) }
    dend_67 { pt3dadd( 49.346, -70.8007, -21.2977, 1.25 ) }
    dend_67 { pt3dadd( 49.7619, -71.4817, -21.5737, 1.03 ) }
    dend_67 { pt3dadd( 50.2056, -72.2539, -21.7551, 0.74 ) }
    dend_67 { pt3dadd( 50.4838, -72.7474, -21.8201, 0.74 ) }
    dend_67 { pt3dadd( 51.0158, -73.6254, -21.853, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_67 { pt3dadd( 51.62, -74.5767, -21.9337, 0.44 ) }
    dend_67 { pt3dadd( 52.313, -75.6392, -22.037, 0.96 ) }
    dend_67 { pt3dadd( 52.7411, -76.2908, -22.1003, 1.55 ) }
    dend_67 { pt3dadd( 53.0869, -76.8312, -22.0777, 1.69 ) }
    dend_67 { pt3dadd( 53.478, -77.4564, -21.9653, 1.25 ) }
    dend_67 { pt3dadd( 54.2225, -78.6294, -21.713, 0.59 ) }
    dend_67 { pt3dadd( 54.9621, -79.7528, -21.451, 0.59 ) }
    dend_67 { pt3dadd( 55.7916, -80.9709, -21.2172, 1.25 ) }
    dend_67 { pt3dadd( 57.4387, -83.3979, -20.9085, 0.52 ) }
    dend_67 { pt3dadd( 58.276, -84.6425, -20.7983, 0.44 ) }
    dend_67 { pt3dadd( 59.2773, -86.149, -20.7151, 0.96 ) }
    dend_67 { pt3dadd( 59.695, -86.7847, -20.7025, 0.96 ) }
    dend_67 { pt3dadd( 60.6201, -88.1702, -20.8035, 0.52 ) }
    dend_67 { pt3dadd( 61.4849, -89.4064, -21.0127, 0.52 ) }
    dend_67 { pt3dadd( 62.3836, -90.6288, -21.3479, 1.11 ) }
    dend_67 { pt3dadd( 62.7617, -91.1353, -21.4551, 1.55 ) }
    dend_67 { pt3dadd( 63.1545, -91.6803, -21.5073, 1.77 ) }
    dend_67 { pt3dadd( 63.4167, -92.0471, -21.5598, 1.84 ) }
    dend_67 { pt3dadd( 63.7868, -92.5582, -21.6753, 1.47 ) }
    dend_67 { pt3dadd( 64.3438, -93.2905, -21.9717, 1.11 ) }
    dend_67 { pt3dadd( 64.868, -93.9725, -22.3419, 0.81 ) }
    dend_67 { pt3dadd( 65.6441, -95.0695, -23.0063, 0.44 ) }
    dend_67 { pt3dadd( 66.5206, -96.4469, -23.8812, 0.96 ) }
    dend_67 { pt3dadd( 66.9685, -97.2332, -24.3758, 1.11 ) }
    dend_67 { pt3dadd( 67.3055, -97.8708, -24.7874, 0.81 ) }
    dend_67 { pt3dadd( 67.6893, -98.6315, -25.2275, 0.29 ) }
    dend_67 { pt3dadd( 68.1286, -99.4708, -25.5821, 0.29 ) }
    dend_67 { pt3dadd( 68.513, -100.13, -25.691, 0.59 ) }
    dend_67 { pt3dadd( 69.0333, -100.949, -25.6493, 0.88 ) }
    dend_67 { pt3dadd( 69.447, -101.557, -25.5511, 1.03 ) }
    dend_67 { pt3dadd( 70.3558, -102.826, -25.2779, 1.03 ) }
    dend_67 { pt3dadd( 71.1254, -103.802, -25.0351, 0.59 ) }
    dend_67 { pt3dadd( 71.948, -104.757, -24.7926, 0.59 ) }
    dend_67 { pt3dadd( 72.685, -105.588, -24.5915, 0.88 ) }
    dend_67 { pt3dadd( 73.3471, -106.394, -24.3975, 1.25 ) }
    dend_67 { pt3dadd( 73.7265, -106.912, -24.2956, 1.47 ) }
    dend_67 { pt3dadd( 73.9561, -107.291, -24.2472, 1.47 ) }
    dend_67 { pt3dadd( 74.4421, -108.316, -24.1304, 0.37 ) }
    dend_67 { pt3dadd( 74.8141, -109.395, -24.009, 0.37 ) }
    dend_67 { pt3dadd( 75.1355, -110.847, -23.8594, 0.74 ) }
    dend_67 { pt3dadd( 75.235, -111.769, -23.7831, 0.66 ) }
    dend_67 { pt3dadd( 75.312, -112.922, -23.6915, 0.52 ) }
    dend_67 { pt3dadd( 75.3387, -113.476, -23.6299, 0.88 ) }
    dend_67 { pt3dadd( 75.363, -114.122, -23.5256, 0.88 ) }
    dend_67 { pt3dadd( 75.4752, -114.808, -23.2057, 0.37 ) }
    dend_67 { pt3dadd( 75.8705, -115.328, -22.3065, 0.37 ) }
    dend_67 { pt3dadd( 76.2546, -115.705, -21.3957, 0.37 ) }
    dend_67 { pt3dadd( 76.7352, -116.094, -20.3809, 0.37 ) }
    dend_67 { pt3dadd( 77.126, -116.389, -19.6206, 0.44 ) }
    dend_67 { pt3dadd( 78.5387, -117.368, -17.1383, 1.18 ) }
    dend_67 { pt3dadd( 79.2034, -117.831, -16.0759, 1.18 ) }
    dend_67 { pt3dadd( 79.9641, -118.368, -14.9095, 0.37 ) }
    dend_67 { pt3dadd( 80.5327, -118.835, -14.0704, 0.81 ) }
    dend_67 { pt3dadd( 80.8192, -119.096, -13.6968, 0.81 ) }
    dend_67 { pt3dadd( 81.2276, -119.498, -13.2423, 0.81 ) }
    dend_67 { pt3dadd( 81.9938, -120.253, -12.5943, 0.37 ) }
    dend_67 { pt3dadd( 83.1738, -121.305, -11.6641, 1.33 ) }
    dend_67 { pt3dadd( 83.615, -121.64, -11.312, 1.69 ) }
    dend_67 { pt3dadd( 84.4631, -122.228, -10.6139, 1.25 ) }
    dend_67 { pt3dadd( 85.132, -122.633, -10.0963, 0.66 ) }
    dend_67 { pt3dadd( 85.9846, -123.072, -9.51855, 0.52 ) }
    dend_67 { pt3dadd( 86.8128, -123.42, -9.09593, 0.81 ) }
    dend_67 { pt3dadd( 87.2136, -123.603, -8.94636, 0.81 ) }
    dend_67 { pt3dadd( 87.6662, -123.831, -8.78917, 0.81 ) }
    dend_67 { pt3dadd( 88.2686, -124.194, -8.59611, 0.44 ) }
    dend_67 { pt3dadd( 88.9018, -124.671, -8.36407, 0.37 ) }
    dend_67 { pt3dadd( 89.283, -125.164, -8.19107, 0.37 ) }
    dend_67 { pt3dadd( 89.8367, -126.52, -7.85394, 0.37 ) }
    dend_67 { pt3dadd( 90.0636, -127.226, -7.70971, 0.74 ) }
    dend_67 { pt3dadd( 90.2625, -127.88, -7.59513, 0.81 ) }
    dend_67 { pt3dadd( 90.418, -128.384, -7.51892, 0.81 ) }
    dend_67 { pt3dadd( 90.7394, -129.268, -7.41775, 0.37 ) }
    dend_67 { pt3dadd( 91.165, -130.155, -7.28397, 0.37 ) }
    dend_67 { pt3dadd( 91.9345, -131.324, -7.08115, 0.37 ) }
    dend_67 { pt3dadd( 92.5405, -132.09, -6.90867, 0.66 ) }
    dend_67 { pt3dadd( 92.9321, -132.532, -6.79065, 0.81 ) }
    dend_67 { pt3dadd( 93.5569, -133.175, -6.59703, 0.81 ) }
    dend_67 { pt3dadd( 94.7812, -134.336, -6.21416, 0.52 ) }
    dend_67 { pt3dadd( 95.1866, -134.725, -6.08375, 0.52 ) }
    dend_67 { pt3dadd( 95.9965, -135.636, -5.8088, 0.88 ) }
    dend_67 { pt3dadd( 96.2915, -136.06, -5.71245, 1.18 ) }
    dend_67 { pt3dadd( 96.5255, -136.484, -5.6614, 1.18 ) }
    dend_67 { pt3dadd( 96.7739, -137.083, -5.64872, 1.18 ) }
    dend_67 { pt3dadd( 96.9806, -137.81, -5.71513, 0.96 ) }
    dend_67 { pt3dadd( 97.1862, -138.812, -5.89412, 0.52 ) }
    dend_67 { pt3dadd( 97.4319, -140.042, -6.22724, 0.52 ) }
    dend_67 { pt3dadd( 97.6279, -140.836, -6.483, 0.74 ) }
    dend_67 { pt3dadd( 97.7681, -141.3, -6.64712, 0.74 ) }
    dend_67 { pt3dadd( 98.1579, -142.283, -6.95786, 0.52 ) }
    dend_67 { pt3dadd( 98.8791, -143.578, -7.31768, 0.52 ) }
    dend_67 { pt3dadd( 99.5147, -144.373, -7.5204, 0.59 ) }
    dend_67 { pt3dadd( 100.349, -145.186, -7.69332, 0.81 ) }
    dend_67 { pt3dadd( 101.186, -145.892, -7.79345, 0.59 ) }
    dend_67 { pt3dadd( 102.428, -146.817, -7.94357, 0.37 ) }
    dend_67 { pt3dadd( 103.286, -147.401, -8.04725, 0.37 ) }
    dend_67 { pt3dadd( 104.199, -148.037, -8.08828, 1.11 ) }
    dend_67 { pt3dadd( 104.417, -148.197, -8.09625, 1.4 ) }
    dend_67 { pt3dadd( 105.14, -148.72, -8.13294, 1.03 ) }
    dend_67 { pt3dadd( 106.173, -149.5, -8.19991, 0.52 ) }
    dend_67 { pt3dadd( 107.168, -150.338, -8.31328, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_67 { pt3dadd( 108.179, -151.276, -8.40943, 1.18 ) }
    dend_67 { pt3dadd( 108.558, -151.651, -8.45986, 1.47 ) }
    dend_67 { pt3dadd( 108.937, -152.027, -8.53907, 1.47 ) }
    dend_67 { pt3dadd( 109.945, -153.101, -8.82279, 0.52 ) }
    dend_67 { pt3dadd( 110.7, -154.007, -9.1724, 0.88 ) }
    dend_67 { pt3dadd( 111.097, -154.567, -9.46221, 0.88 ) }
    dend_67 { pt3dadd( 111.823, -155.682, -10.262, 0.59 ) }
    dend_67 { pt3dadd( 112.352, -156.55, -10.9666, 1.03 ) }
    dend_67 { pt3dadd( 112.732, -157.188, -11.5289, 1.03 ) }
    dend_67 { pt3dadd( 113.486, -158.447, -12.7518, 0.44 ) }
    dend_67 { pt3dadd( 113.789, -159.002, -13.2982, 0.44 ) }
    dend_67 { pt3dadd( 114.413, -160.352, -14.5714, 1.03 ) }
    dend_67 { pt3dadd( 114.608, -160.903, -15.025, 1.18 ) }
    dend_67 { pt3dadd( 114.814, -161.632, -15.5437, 0.74 ) }
    dend_67 { pt3dadd( 115.13, -162.95, -16.3477, 0.44 ) }
    dend_67 { pt3dadd( 115.278, -163.9, -16.7176, 0.44 ) }
    dend_67 { pt3dadd( 115.404, -164.939, -16.993, 0.44 ) }
    dend_67 { pt3dadd( 115.553, -166.369, -17.1775, 1.11 ) }
    dend_67 { pt3dadd( 115.643, -166.905, -17.2132, 1.47 ) }
    dend_67 { pt3dadd( 115.86, -167.739, -17.2063, 1.47 ) }
    dend_67 { pt3dadd( 116.494, -169.359, -17.0509, 0.44 ) }
    dend_67 { pt3dadd( 117.014, -170.333, -16.9268, 0.44 ) }
    dend_67 { pt3dadd( 117.727, -171.444, -16.7766, 0.44 ) }
    dend_67 { pt3dadd( 118.428, -172.442, -16.6529, 0.44 ) }
    dend_67 { pt3dadd( 118.906, -173.156, -16.6103, 0.29 ) }
    dend_67 { pt3dadd( 119.54, -174.2, -16.6523, 0.29 ) }
    dend_67 { pt3dadd( 119.825, -174.78, -16.7497, 1.4 ) }
    dend_67 { pt3dadd( 120.051, -175.458, -16.8916, 1.99 ) }
    dend_67 { pt3dadd( 120.259, -176.368, -17.1077, 1.47 ) }
    dend_67 { pt3dadd( 120.504, -177.854, -17.4976, 0.44 ) }
    dend_67 { pt3dadd( 120.696, -179.055, -17.7638, 0.37 ) }
    dend_67 { pt3dadd( 120.909, -180.177, -17.9678, 0.37 ) }
    dend_67 { pt3dadd( 121.115, -181.142, -18.0937, 0.74 ) }
    dend_67 { pt3dadd( 121.298, -181.811, -18.1662, 0.88 ) }
    dend_67 { pt3dadd( 121.513, -182.422, -18.2064, 0.37 ) }
    dend_67 { pt3dadd( 122.292, -184.171, -18.2165, 0.29 ) }
    dend_67 { pt3dadd( 122.694, -184.888, -18.1769, 0.29 ) }
    dend_67 { pt3dadd( 123.12, -185.528, -18.1312, 0.96 ) }
    dend_67 { pt3dadd( 124.12, -186.899, -18.1773, 0.37 ) }
    dend_67 { pt3dadd( 124.807, -187.817, -18.3012, 0.66 ) }
    dend_67 { pt3dadd( 125.092, -188.198, -18.3904, 0.66 ) }
    dend_67 { pt3dadd( 125.996, -189.465, -18.8643, 0.37 ) }
    dend_67 { pt3dadd( 126.243, -189.811, -19.0087, 0.81 ) }
    dend_67 { pt3dadd( 127.498, -191.466, -19.7421, 0.37 ) }
    dend_67 { pt3dadd( 127.798, -191.82, -19.9221, 0.88 ) }
    dend_67 { pt3dadd( 128.093, -192.125, -20.1142, 0.88 ) }
    dend_67 { pt3dadd( 128.862, -192.802, -20.6371, 0.44 ) }
    dend_67 { pt3dadd( 129.381, -193.226, -21.0091, 0.44 ) }
    dend_67 { pt3dadd( 130.128, -193.777, -21.4758, 0.81 ) }
    dend_67 { pt3dadd( 131.357, -194.557, -22.1613, 1.55 ) }
    dend_67 { pt3dadd( 131.813, -194.827, -22.4128, 1.69 ) }
    dend_67 { pt3dadd( 133.056, -195.558, -23.1213, 0.37 ) }
    dend_67 { pt3dadd( 133.93, -196.081, -23.6326, 0.37 ) }
    dend_67 { pt3dadd( 134.801, -196.667, -24.1849, 0.37 ) }
    dend_67 { pt3dadd( 135.736, -197.367, -24.7814, 0.44 ) }
    dend_67 { pt3dadd( 136.388, -197.886, -25.1671, 1.03 ) }
    dend_67 { pt3dadd( 136.882, -198.266, -25.4405, 1.4 ) }
    dend_67 { pt3dadd( 137.289, -198.56, -25.6398, 1.4 ) }
    dend_67 { pt3dadd( 138.491, -199.325, -26.1536, 0.29 ) }
    dend_67 { pt3dadd( 139.379, -199.904, -26.4638, 0.29 ) }
    dend_67 { pt3dadd( 140.087, -200.359, -26.6521, 0.29 ) }
    dend_67 { pt3dadd( 140.626, -200.684, -26.7699, 0.29 ) }
    dend_67 { pt3dadd( 141.316, -201.079, -26.8944, 0.74 ) }
    dend_67 { pt3dadd( 141.893, -201.393, -26.9873, 1.11 ) }
    dend_67 { pt3dadd( 143.084, -201.983, -27.1446, 0.52 ) }
    dend_67 { pt3dadd( 143.745, -202.314, -27.2345, 0.81 ) }
    dend_67 { pt3dadd( 144.5, -202.741, -27.3356, 0.66 ) }
    dend_67 { pt3dadd( 145.321, -203.238, -27.4698, 0.29 ) }
    dend_67 { pt3dadd( 146.039, -203.66, -27.6045, 0.29 ) }
    dend_67 { pt3dadd( 147.0, -204.192, -27.7998, 0.29 ) }
    dend_67 { pt3dadd( 148.222, -204.799, -28.0556, 0.44 ) }
    dend_67 { pt3dadd( 148.818, -205.084, -28.1652, 0.44 ) }
    dend_67 { pt3dadd( 149.717, -205.512, -28.3324, 0.29 ) }
    dend_67 { pt3dadd( 150.176, -205.741, -28.4106, 0.59 ) }
    dend_67 { pt3dadd( 150.502, -205.915, -28.468, 0.59 ) }
    dend_67 { pt3dadd( 151.069, -206.255, -28.584, 0.29 ) }
    dend_67 { pt3dadd( 151.844, -206.747, -28.7671, 0.29 ) }
    dend_67 { pt3dadd( 152.565, -207.236, -28.9528, 0.59 ) }
    dend_67 { pt3dadd( 152.942, -207.514, -29.0481, 0.74 ) }
    dend_67 { pt3dadd( 153.188, -207.711, -29.1168, 0.74 ) }
    dend_67 { pt3dadd( 154.288, -208.668, -29.4587, 0.29 ) }
    dend_67 { pt3dadd( 155.083, -209.422, -29.7413, 0.44 ) }
    dend_67 { pt3dadd( 155.587, -209.927, -29.9436, 1.11 ) }
    // Section: dend_56, id: dend_56, parent: soma_0 (entry count 83/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( 7.86928, -3.8192, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.86928, -3.8192, 4.08102, 1.25 ) }
    dend_56 { pt3dadd( 7.66375, -4.60101, 4.32484, 1.25 ) }
    dend_56 { pt3dadd( 7.32467, -5.94921, 4.69359, 1.4 ) }
    dend_56 { pt3dadd( 6.99254, -7.43246, 5.04672, 1.4 ) }
    dend_56 { pt3dadd( 6.748, -8.83061, 5.33949, 1.18 ) }
    dend_56 { pt3dadd( 6.5654, -10.2563, 5.60967, 1.18 ) }
    dend_56 { pt3dadd( 6.49487, -11.4457, 5.80146, 1.4 ) }
    dend_56 { pt3dadd( 6.57562, -13.1342, 6.02827, 1.4 ) }
    dend_56 { pt3dadd( 6.74893, -14.9571, 6.21678, 1.4 ) }
    dend_56 { pt3dadd( 6.98981, -16.4815, 6.32677, 1.62 ) }
    dend_56 { pt3dadd( 7.23085, -17.4917, 6.39356, 1.47 ) }
    dend_56 { pt3dadd( 7.77006, -19.1072, 6.47141, 1.03 ) }
    dend_56 { pt3dadd( 8.55565, -20.8675, 6.55533, 1.03 ) }
    // Section: dend_51, id: dend_51, parent: soma_0 (entry count 97/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -9.81072, -3.0422, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -9.81072, -3.0422, -6.35898, 1.18 ) }
    dend_51 { pt3dadd( -10.5993, -3.9839, -6.43575, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_51 { pt3dadd( -11.6413, -5.44267, -6.65393, 1.11 ) }
    dend_51 { pt3dadd( -12.2137, -6.35189, -6.81986, 1.18 ) }
    dend_51 { pt3dadd( -12.7456, -7.31591, -7.03661, 1.03 ) }
    dend_51 { pt3dadd( -13.3717, -8.45062, -7.29173, 0.96 ) }
    dend_51 { pt3dadd( -13.894, -9.48513, -7.54453, 1.4 ) }
    dend_51 { pt3dadd( -14.3962, -10.7166, -7.89539, 1.62 ) }
    dend_51 { pt3dadd( -14.5767, -11.3562, -8.11064, 1.84 ) }
    dend_51 { pt3dadd( -14.8054, -12.4758, -8.54566, 1.84 ) }
    // Section: dend_32, id: dend_32, parent: soma_0 (entry count 8/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( -3.60072, -7.3787, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -3.60072, -7.3787, -1.54898, 1.4 ) }
    dend_32 { pt3dadd( -4.40292, -8.35516, -2.10527, 1.11 ) }
    dend_32 { pt3dadd( -5.59694, -9.59947, -2.70696, 0.96 ) }
    dend_32 { pt3dadd( -5.99198, -9.95332, -2.85111, 0.96 ) }
    dend_32 { pt3dadd( -6.95188, -10.6715, -3.09965, 0.66 ) }
    dend_32 { pt3dadd( -7.77975, -11.217, -3.22134, 0.66 ) }
    dend_32 { pt3dadd( -8.32461, -11.5019, -3.22935, 1.03 ) }
    dend_32 { pt3dadd( -9.34592, -11.9283, -3.12615, 1.33 ) }
    dend_32 { pt3dadd( -10.0421, -12.2123, -3.01245, 1.47 ) }
    dend_32 { pt3dadd( -10.9757, -12.6493, -2.88549, 1.11 ) }
    dend_32 { pt3dadd( -11.8976, -13.2073, -2.83318, 0.96 ) }
    dend_32 { pt3dadd( -12.9361, -14.1078, -2.92637, 0.66 ) }
    dend_32 { pt3dadd( -13.6698, -15.0129, -3.13486, 0.52 ) }
    dend_32 { pt3dadd( -14.1558, -15.9116, -3.48146, 0.44 ) }
    dend_32 { pt3dadd( -14.4996, -16.9837, -4.03309, 0.44 ) }
    dend_32 { pt3dadd( -14.7874, -18.3448, -4.84024, 1.4 ) }
    dend_32 { pt3dadd( -14.8824, -18.9822, -5.23697, 1.84 ) }
    dend_32 { pt3dadd( -14.9452, -19.5661, -5.5938, 2.14 ) }
    dend_32 { pt3dadd( -15.0855, -20.9961, -6.39528, 1.99 ) }
    dend_32 { pt3dadd( -15.3192, -23.2189, -7.42845, 1.03 ) }
    dend_32 { pt3dadd( -15.5098, -24.8322, -8.01461, 0.88 ) }
    dend_32 { pt3dadd( -15.6893, -26.0435, -8.18284, 0.81 ) }
    dend_32 { pt3dadd( -15.8577, -26.911, -8.04467, 0.66 ) }
    dend_32 { pt3dadd( -16.1759, -28.2299, -7.46585, 0.66 ) }
    dend_32 { pt3dadd( -16.4896, -29.307, -6.72141, 0.96 ) }
    dend_32 { pt3dadd( -16.6661, -29.8327, -6.2467, 1.11 ) }
    dend_32 { pt3dadd( -17.7911, -32.9857, -3.25461, 0.44 ) }
    dend_32 { pt3dadd( -18.1572, -33.9544, -2.37574, 1.03 ) }
    dend_32 { pt3dadd( -18.2513, -34.1945, -2.18683, 1.4 ) }
    dend_32 { pt3dadd( -18.515, -34.7954, -1.82223, 1.69 ) }
    dend_32 { pt3dadd( -18.7538, -35.281, -1.67405, 1.69 ) }
    dend_32 { pt3dadd( -19.6482, -36.8863, -1.64827, 0.81 ) }
    dend_32 { pt3dadd( -20.197, -37.6635, -1.87952, 1.18 ) }
    dend_32 { pt3dadd( -20.9134, -38.4537, -2.15679, 1.47 ) }
    dend_32 { pt3dadd( -21.4126, -38.9279, -2.30851, 1.47 ) }
    dend_32 { pt3dadd( -22.113, -39.5506, -2.43609, 1.4 ) }
    dend_32 { pt3dadd( -23.0148, -40.3151, -2.49707, 1.11 ) }
    dend_32 { pt3dadd( -24.4838, -41.51, -2.42056, 0.52 ) }
    dend_32 { pt3dadd( -25.4025, -42.3061, -2.29269, 0.52 ) }
    dend_32 { pt3dadd( -26.3895, -43.3393, -2.03714, 0.52 ) }
    dend_32 { pt3dadd( -27.3223, -44.7267, -1.6493, 1.18 ) }
    dend_32 { pt3dadd( -27.5907, -45.3291, -1.51372, 1.55 ) }
    dend_32 { pt3dadd( -27.7082, -45.7618, -1.46435, 1.69 ) }
    dend_32 { pt3dadd( -27.8389, -46.4486, -1.47563, 1.92 ) }
    dend_32 { pt3dadd( -28.0358, -47.578, -1.67262, 0.74 ) }
    dend_32 { pt3dadd( -28.2784, -49.0465, -1.94927, 0.44 ) }
    dend_32 { pt3dadd( -28.6232, -50.989, -2.31987, 0.44 ) }
    dend_32 { pt3dadd( -28.9398, -52.6375, -2.58677, 0.44 ) }
    dend_32 { pt3dadd( -29.3569, -54.5604, -2.82905, 0.74 ) }
    dend_32 { pt3dadd( -29.709, -55.826, -2.93358, 0.52 ) }
    dend_32 { pt3dadd( -30.6509, -58.5158, -3.01566, 1.03 ) }
    dend_32 { pt3dadd( -30.9167, -59.1941, -2.98408, 1.25 ) }
    dend_32 { pt3dadd( -31.2551, -60.0693, -2.8681, 0.66 ) }
    dend_32 { pt3dadd( -31.627, -61.1474, -2.64376, 0.29 ) }
    dend_32 { pt3dadd( -31.9913, -62.4441, -2.33028, 0.29 ) }
    dend_32 { pt3dadd( -32.1754, -63.2319, -2.15017, 0.59 ) }
    dend_32 { pt3dadd( -32.4297, -64.7924, -1.86427, 0.59 ) }
    dend_32 { pt3dadd( -32.4823, -65.8503, -1.63013, 1.03 ) }
    dend_32 { pt3dadd( -32.4023, -67.6844, -1.22476, 1.4 ) }
    dend_32 { pt3dadd( -32.3196, -68.5124, -1.05167, 1.77 ) }
    dend_32 { pt3dadd( -32.2405, -69.1938, -0.949132, 2.14 ) }
    dend_32 { pt3dadd( -32.1665, -70.2372, -0.855976, 2.36 ) }
    dend_32 { pt3dadd( -32.2588, -71.7012, -0.897218, 0.74 ) }
    dend_32 { pt3dadd( -32.521, -72.8267, -1.04246, 0.44 ) }
    dend_32 { pt3dadd( -32.8729, -73.7085, -1.27776, 0.44 ) }
    dend_32 { pt3dadd( -33.5135, -75.0142, -1.61446, 0.74 ) }
    dend_32 { pt3dadd( -33.8726, -75.6767, -1.74951, 0.74 ) }
    dend_32 { pt3dadd( -34.5216, -76.8353, -1.91226, 0.66 ) }
    dend_32 { pt3dadd( -34.9698, -77.6853, -1.93093, 0.44 ) }
    dend_32 { pt3dadd( -35.3664, -78.6621, -1.82217, 0.44 ) }
    dend_32 { pt3dadd( -35.7738, -80.1125, -1.53417, 0.59 ) }
    dend_32 { pt3dadd( -35.9968, -81.1021, -1.27051, 0.81 ) }
    dend_32 { pt3dadd( -36.2123, -81.9153, -1.04476, 0.96 ) }
    dend_32 { pt3dadd( -36.4809, -82.6768, -0.825261, 0.74 ) }
    dend_32 { pt3dadd( -36.8679, -83.4356, -0.64465, 0.44 ) }
    dend_32 { pt3dadd( -37.4025, -84.1581, -0.512138, 0.44 ) }
    dend_32 { pt3dadd( -38.0859, -84.8712, -0.483303, 0.74 ) }
    dend_32 { pt3dadd( -39.3528, -86.0844, -0.489516, 0.88 ) }
    dend_32 { pt3dadd( -40.008, -86.7049, -0.461138, 1.4 ) }
    dend_32 { pt3dadd( -40.3405, -87.0543, -0.399998, 1.4 ) }
    dend_32 { pt3dadd( -40.8852, -87.7941, -0.198909, 1.18 ) }
    dend_32 { pt3dadd( -41.2477, -88.5415, 0.0493692, 0.81 ) }
    dend_32 { pt3dadd( -41.5446, -89.6908, 0.456675, 0.52 ) }
    dend_32 { pt3dadd( -41.6641, -90.8062, 0.854473, 0.52 ) }
    dend_32 { pt3dadd( -41.729, -92.374, 1.40662, 0.74 ) }
    dend_32 { pt3dadd( -41.7502, -93.4781, 1.76664, 0.52 ) }
    dend_32 { pt3dadd( -41.7626, -94.0739, 1.94688, 1.11 ) }
    dend_32 { pt3dadd( -41.7968, -94.7918, 2.15624, 1.4 ) }
    dend_32 { pt3dadd( -41.8477, -95.3905, 2.29883, 1.55 ) }
    dend_32 { pt3dadd( -41.9525, -96.2616, 2.45838, 0.74 ) }
    dend_32 { pt3dadd( -42.2165, -97.882, 2.69679, 0.44 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_32 { pt3dadd( -42.4617, -99.0466, 2.92141, 0.81 ) }
    dend_32 { pt3dadd( -42.8031, -100.394, 3.22846, 1.11 ) }
    dend_32 { pt3dadd( -43.1046, -101.354, 3.47307, 1.33 ) }
    dend_32 { pt3dadd( -43.393, -102.106, 3.68297, 1.55 ) }
    dend_32 { pt3dadd( -43.7469, -102.814, 3.92062, 1.18 ) }
    dend_32 { pt3dadd( -44.6682, -104.101, 4.53702, 0.59 ) }
    dend_32 { pt3dadd( -45.0931, -104.542, 4.8258, 0.96 ) }
    dend_32 { pt3dadd( -45.5909, -104.977, 5.15173, 1.11 ) }
    dend_32 { pt3dadd( -46.1056, -105.403, 5.4956, 1.11 ) }
    dend_32 { pt3dadd( -47.0505, -106.18, 6.13254, 0.59 ) }
    dend_32 { pt3dadd( -48.0723, -107.045, 6.80544, 0.81 ) }
    dend_32 { pt3dadd( -48.9857, -107.874, 7.37677, 0.59 ) }
    dend_32 { pt3dadd( -49.9449, -108.86, 7.97902, 0.59 ) }
    dend_32 { pt3dadd( -50.8739, -109.982, 8.55708, 0.44 ) }
    dend_32 { pt3dadd( -51.5491, -110.998, 8.91091, 0.81 ) }
    dend_32 { pt3dadd( -51.9278, -111.748, 9.04845, 0.96 ) }
    dend_32 { pt3dadd( -52.1552, -112.4, 9.07576, 0.96 ) }
    dend_32 { pt3dadd( -52.3398, -113.305, 9.0217, 0.96 ) }
    dend_32 { pt3dadd( -52.442, -114.245, 8.92167, 0.66 ) }
    dend_32 { pt3dadd( -52.4966, -116.146, 8.6521, 0.52 ) }
    dend_32 { pt3dadd( -52.4789, -117.13, 8.50555, 0.66 ) }
    dend_32 { pt3dadd( -52.4339, -118.303, 8.35093, 1.33 ) }
    dend_32 { pt3dadd( -52.4117, -119.136, 8.25996, 1.99 ) }
    dend_32 { pt3dadd( -52.4537, -121.138, 8.10311, 0.44 ) }
    dend_32 { pt3dadd( -52.5739, -122.213, 8.0667, 0.44 ) }
    dend_32 { pt3dadd( -52.7456, -122.96, 8.08247, 0.74 ) }
    dend_32 { pt3dadd( -52.9466, -123.547, 8.0955, 0.74 ) }
    dend_32 { pt3dadd( -53.3256, -124.382, 8.13712, 0.74 ) }
    dend_32 { pt3dadd( -53.8167, -125.275, 8.19256, 0.37 ) }
    dend_32 { pt3dadd( -54.5859, -126.457, 8.27602, 0.29 ) }
    dend_32 { pt3dadd( -55.2187, -127.25, 8.35285, 0.29 ) }
    dend_32 { pt3dadd( -55.9879, -128.096, 8.45167, 0.29 ) }
    dend_32 { pt3dadd( -56.675, -128.788, 8.57953, 0.22 ) }
    dend_32 { pt3dadd( -57.0595, -129.149, 8.66897, 0.22 ) }
    dend_32 { pt3dadd( -57.6819, -129.748, 8.83753, 0.81 ) }
    dend_32 { pt3dadd( -58.0452, -130.126, 8.94696, 0.96 ) }
    dend_32 { pt3dadd( -58.9083, -131.038, 9.21981, 0.22 ) }
    dend_32 { pt3dadd( -59.6413, -131.874, 9.45683, 1.33 ) }
    dend_32 { pt3dadd( -60.1213, -132.509, 9.60511, 1.55 ) }
    dend_32 { pt3dadd( -60.8132, -133.543, 9.84532, 1.11 ) }
    dend_32 { pt3dadd( -61.1918, -134.178, 10.0015, 0.66 ) }
    // Section: dend_13, id: dend_13, parent: soma_0 (entry count 41/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -2.23072, 4.7278, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -2.23072, 4.7278, 5.70102, 1.33 ) }
    dend_13 { pt3dadd( -3.24192, 5.49657, 5.70102, 1.55 ) }
    dend_13 { pt3dadd( -4.27452, 6.21637, 5.70102, 1.4 ) }
    dend_13 { pt3dadd( -5.43174, 6.94644, 5.70102, 1.18 ) }
    dend_13 { pt3dadd( -6.26959, 7.44395, 5.70406, 1.47 ) }
    dend_13 { pt3dadd( -7.38856, 8.10697, 5.74475, 1.77 ) }
    dend_13 { pt3dadd( -8.1969, 8.57717, 5.81224, 1.99 ) }
    dend_13 { pt3dadd( -9.08275, 9.10457, 5.95884, 1.99 ) }
    dend_13 { pt3dadd( -10.1358, 9.81331, 6.24548, 1.62 ) }
    dend_13 { pt3dadd( -11.3255, 10.8296, 6.74802, 1.11 ) }
    dend_13 { pt3dadd( -12.0687, 11.6869, 7.22188, 1.11 ) }
    dend_13 { pt3dadd( -12.6176, 12.6135, 7.75675, 1.25 ) }
    dend_13 { pt3dadd( -13.0545, 13.8308, 8.45764, 1.47 ) }
    dend_13 { pt3dadd( -13.2409, 15.0103, 9.14256, 1.69 ) }
    dend_13 { pt3dadd( -13.214, 15.9853, 9.70119, 1.92 ) }
    dend_13 { pt3dadd( -13.0311, 17.1066, 10.3145, 1.77 ) }
    dend_13 { pt3dadd( -12.8096, 17.9451, 10.7265, 1.4 ) }
    dend_13 { pt3dadd( -12.4346, 19.036, 11.2034, 1.18 ) }
    dend_13 { pt3dadd( -12.021, 20.1133, 11.6377, 1.11 ) }
    dend_13 { pt3dadd( -11.416, 21.527, 12.1885, 1.62 ) }
    dend_13 { pt3dadd( -11.1293, 22.1456, 12.4223, 1.99 ) }
    dend_13 { pt3dadd( -10.6965, 23.0112, 12.7412, 2.21 ) }
    dend_13 { pt3dadd( -10.3278, 23.6992, 12.9885, 2.43 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 65/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -10.9007, 0.916297, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -10.9695, 0.930284, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -12.0851, 1.17713, -3.98898, 1.77 ) }
    dend_0 { pt3dadd( -13.1085, 1.43876, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -14.3248, 1.79163, -3.98898, 1.62 ) }
    dend_0 { pt3dadd( -15.6022, 2.21062, -3.98898, 1.84 ) }
    dend_0 { pt3dadd( -16.5053, 2.55245, -3.98898, 1.92 ) }
    dend_0 { pt3dadd( -17.3653, 2.92277, -4.01157, 2.14 ) }
    dend_0 { pt3dadd( -18.3747, 3.43325, -4.06454, 2.14 ) }
    dend_0 { pt3dadd( -19.255, 3.9616, -4.14349, 2.14 ) }
    dend_0 { pt3dadd( -19.9884, 4.48084, -4.26427, 2.14 ) }
    dend_0 { pt3dadd( -21.0793, 5.36497, -4.51781, 2.14 ) }
    dend_0 { pt3dadd( -21.9569, 6.1533, -4.82872, 2.14 ) }
    dend_0 { pt3dadd( -22.4746, 6.64642, -5.04383, 2.21 ) }
    dend_0 { pt3dadd( -23.0582, 7.23124, -5.33261, 1.99 ) }
    dend_0 { pt3dadd( -23.7758, 7.98681, -5.75443, 1.99 ) }
    dend_0 { pt3dadd( -24.391, 8.65936, -6.18252, 2.14 ) }
    dend_0 { pt3dadd( -25.3436, 9.76998, -6.99025, 2.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 83/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 11.2344, 1.39714, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 26.063, 3.65858, 2.65033, 3.17 ) }
    axon_0 { pt3dadd( 40.8915, 5.92002, 2.65033, 3.17 ) }
    // Section: dend_62, id: dend_62, parent: dend_56 (entry count 86/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( 8.55565, -20.8675, 6.55533, 1.25 ) }
    dend_62 { pt3dadd( 9.02559, -22.1837, 6.43337, 1.25 ) }
    dend_62 { pt3dadd( 9.07494, -23.9472, 6.28106, 1.03 ) }
    dend_62 { pt3dadd( 8.69953, -25.4013, 6.17532, 0.66 ) }
    dend_62 { pt3dadd( 8.34166, -26.458, 6.11263, 0.96 ) }
    dend_62 { pt3dadd( 8.00538, -27.558, 6.05838, 1.18 ) }
    dend_62 { pt3dadd( 7.62683, -29.1407, 5.99081, 1.18 ) }
    dend_62 { pt3dadd( 7.38975, -30.1444, 5.92967, 1.47 ) }
    dend_62 { pt3dadd( 7.02228, -31.7456, 5.86186, 0.81 ) }
    dend_62 { pt3dadd( 6.89662, -32.8189, 5.84728, 0.81 ) }
    dend_62 { pt3dadd( 7.12511, -34.1351, 5.83093, 0.96 ) }
    dend_62 { pt3dadd( 7.62849, -35.2129, 5.84358, 0.88 ) }
    dend_62 { pt3dadd( 8.31476, -36.3641, 5.91196, 1.33 ) }
    dend_62 { pt3dadd( 8.7303, -37.0453, 5.97855, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_62 { pt3dadd( 9.18966, -37.8263, 6.07944, 1.33 ) }
    dend_62 { pt3dadd( 9.58353, -38.663, 6.2089, 0.81 ) }
    dend_62 { pt3dadd( 10.0445, -40.185, 6.45811, 0.66 ) }
    dend_62 { pt3dadd( 10.3225, -41.7328, 6.69244, 0.96 ) }
    dend_62 { pt3dadd( 10.419, -42.7537, 6.81637, 1.4 ) }
    dend_62 { pt3dadd( 10.4595, -43.589, 6.89114, 1.4 ) }
    dend_62 { pt3dadd( 10.4809, -44.434, 6.98053, 1.4 ) }
    dend_62 { pt3dadd( 10.4668, -45.8843, 7.19642, 0.96 ) }
    dend_62 { pt3dadd( 10.4506, -46.569, 7.34418, 0.81 ) }
    dend_62 { pt3dadd( 10.4233, -47.831, 7.76516, 0.81 ) }
    dend_62 { pt3dadd( 10.3997, -48.7523, 8.14758, 0.74 ) }
    dend_62 { pt3dadd( 10.3542, -50.6282, 9.06123, 0.74 ) }
    dend_62 { pt3dadd( 10.335, -52.0522, 9.76497, 0.88 ) }
    dend_62 { pt3dadd( 10.3484, -53.2214, 10.3194, 0.88 ) }
    dend_62 { pt3dadd( 10.4338, -54.5368, 10.8373, 1.47 ) }
    dend_62 { pt3dadd( 10.6267, -55.7761, 11.1213, 0.81 ) }
    dend_62 { pt3dadd( 11.0088, -57.2327, 11.1379, 0.59 ) }
    dend_62 { pt3dadd( 11.5533, -58.8637, 10.9199, 0.88 ) }
    dend_62 { pt3dadd( 11.9678, -60.0285, 10.7364, 0.88 ) }
    dend_62 { pt3dadd( 12.4191, -61.4202, 10.5424, 0.66 ) }
    dend_62 { pt3dadd( 12.8397, -62.9522, 10.3984, 0.59 ) }
    dend_62 { pt3dadd( 13.0887, -64.2383, 10.4011, 0.59 ) }
    dend_62 { pt3dadd( 13.2394, -65.6373, 10.5491, 0.59 ) }
    dend_62 { pt3dadd( 13.3167, -66.9964, 10.8536, 0.88 ) }
    dend_62 { pt3dadd( 13.3223, -68.5261, 11.3394, 0.66 ) }
    dend_62 { pt3dadd( 13.2835, -69.743, 11.8037, 1.03 ) }
    dend_62 { pt3dadd( 13.1898, -71.3015, 12.4584, 1.25 ) }
    dend_62 { pt3dadd( 13.0721, -72.8475, 13.1131, 1.25 ) }
    dend_62 { pt3dadd( 13.0039, -73.8607, 13.5094, 1.84 ) }
    dend_62 { pt3dadd( 12.9757, -74.8442, 13.8735, 2.28 ) }
    dend_62 { pt3dadd( 12.9819, -75.6996, 14.2499, 1.69 ) }
    // Section: dend_57, id: dend_57, parent: dend_56 (entry count 31/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( 8.55565, -20.8675, 6.55533, 0.74 ) }
    dend_57 { pt3dadd( 8.14875, -23.7245, 10.1574, 0.74 ) }
    dend_57 { pt3dadd( 8.23975, -24.3092, 11.177, 0.74 ) }
    dend_57 { pt3dadd( 8.3621, -24.8061, 12.1545, 0.74 ) }
    dend_57 { pt3dadd( 8.53971, -25.607, 13.6865, 1.11 ) }
    dend_57 { pt3dadd( 8.62559, -26.0235, 14.3991, 1.11 ) }
    dend_57 { pt3dadd( 8.841, -27.0997, 15.9641, 0.66 ) }
    dend_57 { pt3dadd( 9.39588, -29.3278, 18.6345, 1.4 ) }
    dend_57 { pt3dadd( 9.59834, -30.287, 19.7601, 0.96 ) }
    dend_57 { pt3dadd( 9.69194, -31.0881, 20.6447, 1.18 ) }
    dend_57 { pt3dadd( 9.6966, -32.1973, 21.6934, 0.88 ) }
    dend_57 { pt3dadd( 9.52166, -33.7238, 22.8796, 0.66 ) }
    dend_57 { pt3dadd( 9.12334, -35.4715, 23.8912, 0.66 ) }
    dend_57 { pt3dadd( 8.83041, -36.5214, 24.3712, 0.59 ) }
    dend_57 { pt3dadd( 8.37632, -38.0737, 25.06, 0.74 ) }
    dend_57 { pt3dadd( 8.04669, -39.0585, 25.5347, 1.03 ) }
    dend_57 { pt3dadd( 7.63549, -39.9855, 26.0339, 1.18 ) }
    dend_57 { pt3dadd( 6.96852, -41.1522, 26.6809, 1.4 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 49/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -14.8054, -12.4758, -8.54566, 0.81 ) }
    dend_53 { pt3dadd( -16.2549, -13.4386, -8.44327, 0.81 ) }
    dend_53 { pt3dadd( -17.1408, -14.0639, -8.23752, 0.88 ) }
    dend_53 { pt3dadd( -17.9816, -14.7243, -7.95636, 1.03 ) }
    dend_53 { pt3dadd( -18.6523, -15.3293, -7.67983, 1.03 ) }
    dend_53 { pt3dadd( -19.2867, -16.0159, -7.36281, 0.52 ) }
    dend_53 { pt3dadd( -19.8374, -16.7874, -6.96921, 0.52 ) }
    dend_53 { pt3dadd( -20.3085, -17.8433, -6.30361, 0.74 ) }
    dend_53 { pt3dadd( -20.4328, -18.3019, -6.00919, 0.96 ) }
    dend_53 { pt3dadd( -20.5293, -18.8583, -5.6482, 0.59 ) }
    dend_53 { pt3dadd( -20.6335, -19.5833, -5.202, 0.44 ) }
    dend_53 { pt3dadd( -20.8419, -20.9755, -4.49601, 0.44 ) }
    dend_53 { pt3dadd( -20.9615, -21.5491, -4.2144, 0.81 ) }
    dend_53 { pt3dadd( -21.1852, -22.2007, -3.88251, 0.96 ) }
    dend_53 { pt3dadd( -21.5843, -23.0578, -3.39635, 1.03 ) }
    dend_53 { pt3dadd( -21.8759, -23.6124, -3.07697, 0.96 ) }
    dend_53 { pt3dadd( -22.2747, -24.3771, -2.66565, 0.37 ) }
    dend_53 { pt3dadd( -22.9144, -25.8106, -1.95974, 0.37 ) }
    dend_53 { pt3dadd( -23.1841, -26.577, -1.59225, 0.29 ) }
    dend_53 { pt3dadd( -23.3638, -27.297, -1.28294, 0.37 ) }
    dend_53 { pt3dadd( -23.5671, -28.3153, -0.905413, 0.37 ) }
    dend_53 { pt3dadd( -23.7366, -29.3639, -0.551983, 0.81 ) }
    dend_53 { pt3dadd( -23.8881, -30.3746, -0.255161, 1.25 ) }
    dend_53 { pt3dadd( -23.9378, -30.679, -0.191777, 1.55 ) }
    dend_53 { pt3dadd( -24.1949, -31.8527, 0.0388266, 0.37 ) }
    dend_53 { pt3dadd( -24.4633, -32.504, 0.159589, 0.37 ) }
    dend_53 { pt3dadd( -24.6833, -32.7975, 0.215239, 0.44 ) }
    dend_53 { pt3dadd( -25.2769, -33.3801, 0.312514, 0.59 ) }
    dend_53 { pt3dadd( -25.6687, -33.7284, 0.351534, 0.66 ) }
    dend_53 { pt3dadd( -26.1558, -34.1446, 0.394191, 0.37 ) }
    dend_53 { pt3dadd( -26.716, -34.6196, 0.43576, 0.59 ) }
    dend_53 { pt3dadd( -27.2962, -35.1768, 0.447711, 0.88 ) }
    dend_53 { pt3dadd( -27.625, -35.5294, 0.436094, 1.03 ) }
    dend_53 { pt3dadd( -28.2069, -36.2673, 0.468931, 0.37 ) }
    dend_53 { pt3dadd( -28.3938, -36.5219, 0.503195, 0.37 ) }
    dend_53 { pt3dadd( -28.7422, -36.9902, 0.603673, 0.37 ) }
    dend_53 { pt3dadd( -29.2061, -37.5915, 0.77426, 0.66 ) }
    dend_53 { pt3dadd( -29.5626, -38.0129, 0.916753, 0.88 ) }
    dend_53 { pt3dadd( -30.7936, -39.3213, 1.38293, 0.29 ) }
    dend_53 { pt3dadd( -31.3207, -39.8619, 1.56778, 0.29 ) }
    dend_53 { pt3dadd( -31.834, -40.4314, 1.73547, 0.96 ) }
    dend_53 { pt3dadd( -32.1035, -40.7597, 1.82267, 1.33 ) }
    dend_53 { pt3dadd( -32.5868, -41.441, 1.97311, 1.11 ) }
    dend_53 { pt3dadd( -33.1442, -42.3389, 2.19591, 0.59 ) }
    dend_53 { pt3dadd( -33.6306, -43.1913, 2.32136, 0.37 ) }
    dend_53 { pt3dadd( -34.0184, -43.9538, 2.63985, 0.66 ) }
    dend_53 { pt3dadd( -34.2608, -44.3997, 2.94974, 0.52 ) }
    dend_53 { pt3dadd( -34.5689, -44.9035, 3.4416, 0.29 ) }
    dend_53 { pt3dadd( -35.3042, -46.0017, 4.7617, 0.29 ) }
    dend_53 { pt3dadd( -35.8919, -46.7527, 5.87063, 0.81 ) }
    dend_53 { pt3dadd( -37.3938, -48.1839, 8.7252, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_53 { pt3dadd( -37.7677, -48.4335, 9.39861, 0.29 ) }
    dend_53 { pt3dadd( -37.9772, -48.532, 9.7526, 0.29 ) }
    dend_53 { pt3dadd( -38.4461, -48.6628, 10.5405, 0.66 ) }
    dend_53 { pt3dadd( -38.6609, -48.6926, 10.9234, 0.66 ) }
    dend_53 { pt3dadd( -42.9632, -56.9566, 15.3444, 0.66 ) }
    dend_53 { pt3dadd( -47.7981, -65.0917, 19.4184, 0.66 ) }
    dend_53 { pt3dadd( -52.8772, -73.1066, 23.4103, 0.66 ) }
    dend_53 { pt3dadd( -57.1901, -81.6374, 27.3334, 0.66 ) }
    dend_53 { pt3dadd( -60.0846, -89.4634, 33.3391, 0.66 ) }
    dend_53 { pt3dadd( -61.8513, -97.6923, 39.294, 0.66 ) }
    dend_53 { pt3dadd( -64.0102, -105.061, 46.0826, 0.66 ) }
    dend_53 { pt3dadd( -64.2842, -113.254, 52.3307, 0.66 ) }
    dend_53 { pt3dadd( -63.3233, -121.129, 58.8755, 0.66 ) }
    dend_53 { pt3dadd( -60.6699, -129.24, 64.6448, 0.66 ) }
    dend_53 { pt3dadd( -57.4889, -137.655, 69.7103, 0.66 ) }
    dend_53 { pt3dadd( -54.6125, -146.025, 75.0181, 0.66 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 16/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -14.8054, -12.4758, -8.54566, 1.03 ) }
    dend_52 { pt3dadd( -13.9767, -13.5295, -9.40152, 1.03 ) }
    dend_52 { pt3dadd( -12.4893, -15.1044, -10.5648, 0.81 ) }
    dend_52 { pt3dadd( -11.4507, -16.2408, -11.327, 1.03 ) }
    dend_52 { pt3dadd( -10.3186, -17.6112, -12.1406, 0.88 ) }
    dend_52 { pt3dadd( -9.49652, -18.7197, -12.7494, 1.11 ) }
    dend_52 { pt3dadd( -8.85792, -19.7199, -13.2659, 0.74 ) }
    dend_52 { pt3dadd( -8.23669, -20.8959, -13.7638, 0.52 ) }
    dend_52 { pt3dadd( -7.69002, -22.5825, -14.3636, 0.88 ) }
    dend_52 { pt3dadd( -7.57983, -23.819, -14.8238, 1.47 ) }
    dend_52 { pt3dadd( -7.64419, -24.6759, -15.1133, 1.25 ) }
    dend_52 { pt3dadd( -7.84747, -26.0663, -15.5284, 1.25 ) }
    dend_52 { pt3dadd( -8.05069, -27.1966, -15.8271, 0.81 ) }
    dend_52 { pt3dadd( -8.38404, -29.0458, -16.2042, 0.66 ) }
    dend_52 { pt3dadd( -8.58785, -30.7798, -16.4274, 0.66 ) }
    dend_52 { pt3dadd( -8.69471, -32.874, -16.5838, 0.96 ) }
    dend_52 { pt3dadd( -8.68, -33.9613, -16.5999, 1.11 ) }
    dend_52 { pt3dadd( -8.60969, -34.9845, -16.568, 1.11 ) }
    dend_52 { pt3dadd( -8.46598, -36.4201, -16.474, 0.74 ) }
    dend_52 { pt3dadd( -8.29579, -37.9188, -16.3363, 0.52 ) }
    dend_52 { pt3dadd( -8.19877, -39.0816, -16.2364, 0.74 ) }
    dend_52 { pt3dadd( -8.20081, -39.9245, -16.2118, 1.11 ) }
    dend_52 { pt3dadd( -8.37393, -41.1547, -16.2296, 0.96 ) }
    dend_52 { pt3dadd( -8.80054, -42.399, -16.2863, 0.74 ) }
    dend_52 { pt3dadd( -9.19907, -43.1484, -16.3258, 0.74 ) }
    dend_52 { pt3dadd( -9.597, -43.7985, -16.3307, 0.74 ) }
    dend_52 { pt3dadd( -10.1426, -44.7182, -16.3006, 0.59 ) }
    dend_52 { pt3dadd( -10.777, -45.8899, -16.2306, 0.52 ) }
    dend_52 { pt3dadd( -11.3461, -47.1742, -16.1188, 0.52 ) }
    dend_52 { pt3dadd( -11.7881, -48.5013, -15.9996, 0.74 ) }
    dend_52 { pt3dadd( -12.1689, -50.3226, -15.8564, 0.88 ) }
    dend_52 { pt3dadd( -12.2687, -51.421, -15.7853, 1.18 ) }
    dend_52 { pt3dadd( -12.2516, -52.2605, -15.7646, 1.4 ) }
    dend_52 { pt3dadd( -12.1515, -53.3707, -15.7781, 1.62 ) }
    dend_52 { pt3dadd( -12.0762, -54.061, -15.8135, 1.77 ) }
    dend_52 { pt3dadd( -12.0008, -54.9999, -15.9067, 1.4 ) }
    dend_52 { pt3dadd( -11.9764, -56.1444, -16.0543, 0.66 ) }
    dend_52 { pt3dadd( -12.0554, -57.4264, -16.2373, 0.44 ) }
    dend_52 { pt3dadd( -12.2368, -58.4675, -16.3907, 0.81 ) }
    dend_52 { pt3dadd( -12.4423, -59.1786, -16.529, 1.25 ) }
    dend_52 { pt3dadd( -12.5781, -59.5828, -16.645, 1.4 ) }
    dend_52 { pt3dadd( -12.7197, -59.9541, -16.7969, 1.4 ) }
    dend_52 { pt3dadd( -13.0483, -60.7421, -17.1664, 0.88 ) }
    dend_52 { pt3dadd( -13.5827, -61.9938, -17.7975, 0.59 ) }
    dend_52 { pt3dadd( -14.0923, -63.2323, -18.4592, 0.59 ) }
    dend_52 { pt3dadd( -14.7212, -64.791, -19.2978, 0.88 ) }
    dend_52 { pt3dadd( -15.2866, -66.2507, -20.0853, 0.52 ) }
    dend_52 { pt3dadd( -15.6797, -67.3487, -20.6982, 0.52 ) }
    dend_52 { pt3dadd( -15.8499, -67.9376, -21.0443, 1.11 ) }
    dend_52 { pt3dadd( -15.9862, -68.6243, -21.4563, 1.55 ) }
    dend_52 { pt3dadd( -16.0415, -69.296, -21.8149, 1.77 ) }
    dend_52 { pt3dadd( -16.0133, -70.0029, -22.1468, 1.4 ) }
    dend_52 { pt3dadd( -15.7738, -71.404, -22.7534, 0.66 ) }
    dend_52 { pt3dadd( -15.4366, -72.7057, -23.3026, 0.44 ) }
    dend_52 { pt3dadd( -15.0865, -73.813, -23.7328, 0.44 ) }
    dend_52 { pt3dadd( -14.6311, -75.0788, -24.1754, 0.44 ) }
    dend_52 { pt3dadd( -14.4254, -75.6376, -24.3411, 0.88 ) }
    dend_52 { pt3dadd( -14.2511, -76.1303, -24.4385, 1.25 ) }
    dend_52 { pt3dadd( -14.0673, -76.7156, -24.4995, 1.55 ) }
    dend_52 { pt3dadd( -13.9739, -77.1525, -24.5227, 1.55 ) }
    dend_52 { pt3dadd( -13.8694, -78.0809, -24.5583, 1.25 ) }
    dend_52 { pt3dadd( -13.8845, -79.6635, -24.58, 0.59 ) }
    dend_52 { pt3dadd( -14.059, -80.9919, -24.6152, 0.59 ) }
    dend_52 { pt3dadd( -14.2221, -81.6714, -24.6058, 0.96 ) }
    dend_52 { pt3dadd( -14.5375, -82.6039, -24.5573, 0.96 ) }
    dend_52 { pt3dadd( -14.9237, -83.4978, -24.4736, 0.81 ) }
    dend_52 { pt3dadd( -15.7402, -85.052, -24.2543, 0.37 ) }
    dend_52 { pt3dadd( -16.5979, -86.4121, -24.0079, 0.37 ) }
    dend_52 { pt3dadd( -17.4709, -87.6832, -23.7455, 1.18 ) }
    dend_52 { pt3dadd( -17.7897, -88.1357, -23.622, 1.62 ) }
    dend_52 { pt3dadd( -18.1355, -88.5985, -23.4597, 1.62 ) }
    dend_52 { pt3dadd( -18.7099, -89.3424, -23.1196, 1.33 ) }
    dend_52 { pt3dadd( -19.618, -90.4789, -22.4684, 0.44 ) }
    dend_52 { pt3dadd( -20.4311, -91.4606, -21.8175, 0.44 ) }
    dend_52 { pt3dadd( -21.0728, -92.2262, -21.3188, 0.66 ) }
    dend_52 { pt3dadd( -21.832, -93.144, -20.7269, 0.66 ) }
    dend_52 { pt3dadd( -22.5754, -94.0723, -20.1545, 0.44 ) }
    dend_52 { pt3dadd( -23.0299, -94.6702, -19.8138, 0.81 ) }
    dend_52 { pt3dadd( -23.3765, -95.1513, -19.5798, 1.25 ) }
    dend_52 { pt3dadd( -23.7901, -95.7385, -19.3391, 1.55 ) }
    dend_52 { pt3dadd( -24.2303, -96.3841, -19.1289, 1.25 ) }
    dend_52 { pt3dadd( -24.7397, -97.1696, -18.916, 0.52 ) }
    dend_52 { pt3dadd( -25.2476, -97.9566, -18.7426, 0.37 ) }
    dend_52 { pt3dadd( -25.752, -98.8009, -18.5014, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_52 { pt3dadd( -26.3994, -99.9502, -18.0537, 0.81 ) }
    dend_52 { pt3dadd( -26.7184, -100.556, -17.7378, 1.25 ) }
    dend_52 { pt3dadd( -27.0104, -101.202, -17.2961, 0.81 ) }
    dend_52 { pt3dadd( -27.3597, -102.125, -16.5723, 0.37 ) }
    dend_52 { pt3dadd( -27.8047, -103.566, -15.3606, 0.37 ) }
    dend_52 { pt3dadd( -27.9729, -104.19, -14.8248, 0.74 ) }
    dend_52 { pt3dadd( -28.1935, -105.035, -14.1251, 0.81 ) }
    dend_52 { pt3dadd( -28.5093, -106.153, -13.232, 0.29 ) }
    dend_52 { pt3dadd( -28.7035, -106.834, -12.7357, 0.88 ) }
    dend_52 { pt3dadd( -28.8008, -107.209, -12.5234, 1.18 ) }
    dend_52 { pt3dadd( -28.9803, -107.949, -12.2955, 1.18 ) }
    dend_52 { pt3dadd( -29.1681, -108.744, -12.1775, 0.81 ) }
    dend_52 { pt3dadd( -29.4651, -109.978, -12.1399, 0.29 ) }
    dend_52 { pt3dadd( -29.7225, -111.012, -12.1773, 0.29 ) }
    dend_52 { pt3dadd( -29.912, -111.879, -12.2102, 0.29 ) }
    dend_52 { pt3dadd( -30.0165, -112.471, -12.2528, 0.66 ) }
    dend_52 { pt3dadd( -30.1147, -113.212, -12.3223, 0.96 ) }
    dend_52 { pt3dadd( -30.2104, -114.032, -12.4392, 0.96 ) }
    dend_52 { pt3dadd( -30.3228, -114.935, -12.6023, 0.52 ) }
    dend_52 { pt3dadd( -30.5267, -116.222, -12.8617, 0.37 ) }
    dend_52 { pt3dadd( -30.6761, -117.092, -13.0828, 0.74 ) }
    dend_52 { pt3dadd( -30.8481, -118.029, -13.3606, 0.44 ) }
    dend_52 { pt3dadd( -31.0428, -118.949, -13.6652, 1.11 ) }
    dend_52 { pt3dadd( -31.1909, -119.507, -13.8637, 1.11 ) }
    dend_52 { pt3dadd( -31.4296, -120.15, -14.0925, 0.81 ) }
    dend_52 { pt3dadd( -32.0618, -121.582, -14.5515, 0.37 ) }
    dend_52 { pt3dadd( -32.4693, -122.385, -14.7312, 0.66 ) }
    dend_52 { pt3dadd( -32.6803, -122.758, -14.7901, 0.96 ) }
    dend_52 { pt3dadd( -33.0259, -123.365, -14.7892, 0.96 ) }
    dend_52 { pt3dadd( -33.593, -124.474, -14.4159, 0.29 ) }
    dend_52 { pt3dadd( -33.8224, -125.156, -13.6314, 0.29 ) }
    dend_52 { pt3dadd( -33.908, -125.665, -12.8078, 0.96 ) }
    dend_52 { pt3dadd( -33.9094, -125.912, -12.3401, 1.25 ) }
    dend_52 { pt3dadd( -33.8732, -126.635, -10.8653, 0.44 ) }
    dend_52 { pt3dadd( -33.7156, -127.95, -7.94417, 0.81 ) }
    dend_52 { pt3dadd( -33.3343, -129.846, -3.27395, 0.22 ) }
    dend_52 { pt3dadd( -33.1894, -130.413, -1.72897, 1.18 ) }
    dend_52 { pt3dadd( -32.9943, -130.964, -0.126345, 1.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_32 (entry count 38/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -61.1918, -134.178, 10.0015, 0.29 ) }
    dend_40 { pt3dadd( -59.6161, -134.806, 10.2106, 0.29 ) }
    dend_40 { pt3dadd( -58.4256, -135.28, 10.3686, 0.29 ) }
    dend_40 { pt3dadd( -56.9856, -135.855, 10.5597, 0.29 ) }
    dend_40 { pt3dadd( -55.8616, -136.303, 10.7089, 0.15 ) }
    dend_40 { pt3dadd( -54.9814, -136.654, 10.8257, 0.29 ) }
    dend_40 { pt3dadd( -54.4959, -136.847, 10.8901, 0.29 ) }
    dend_40 { pt3dadd( -45.5246, -141.482, 11.0729, 0.29 ) }
    dend_40 { pt3dadd( -37.4376, -147.547, 12.1819, 0.29 ) }
    dend_40 { pt3dadd( -29.3198, -153.679, 12.1921, 0.29 ) }
    dend_40 { pt3dadd( -21.8003, -160.343, 13.9723, 0.29 ) }
    dend_40 { pt3dadd( -14.7626, -167.777, 14.5675, 0.29 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 50/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( -61.1918, -134.178, 10.0015, 0.29 ) }
    dend_33 { pt3dadd( -61.9851, -134.952, 10.0606, 0.29 ) }
    dend_33 { pt3dadd( -62.7941, -135.721, 10.1176, 0.29 ) }
    dend_33 { pt3dadd( -63.6128, -136.5, 10.1752, 0.29 ) }
    dend_33 { pt3dadd( -64.5937, -137.432, 10.2443, 0.29 ) }
    dend_33 { pt3dadd( -65.1457, -137.957, 10.2832, 0.29 ) }
    dend_33 { pt3dadd( -65.7247, -138.508, 10.3239, 0.81 ) }
    dend_33 { pt3dadd( -66.1133, -138.824, 10.337, 1.11 ) }
    // Section: dend_29, id: dend_29, parent: dend_13 (entry count 58/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -10.3278, 23.6992, 12.9885, 0.66 ) }
    dend_29 { pt3dadd( -12.638, 24.928, 13.3476, 0.66 ) }
    dend_29 { pt3dadd( -13.8274, 25.5304, 13.4963, 0.66 ) }
    dend_29 { pt3dadd( -14.9462, 26.0706, 13.5625, 0.59 ) }
    dend_29 { pt3dadd( -15.8465, 26.5069, 13.6208, 1.11 ) }
    dend_29 { pt3dadd( -16.4608, 26.8097, 13.7247, 1.4 ) }
    dend_29 { pt3dadd( -16.8887, 27.0381, 13.8326, 1.4 ) }
    dend_29 { pt3dadd( -17.6684, 27.4967, 14.0768, 0.66 ) }
    dend_29 { pt3dadd( -18.2733, 28.0263, 14.5497, 0.44 ) }
    dend_29 { pt3dadd( -18.7151, 28.5869, 15.1507, 0.44 ) }
    dend_29 { pt3dadd( -19.4954, 29.9096, 16.5737, 0.74 ) }
    dend_29 { pt3dadd( -19.9451, 30.7624, 17.4313, 0.52 ) }
    dend_29 { pt3dadd( -20.2361, 31.2747, 17.8912, 0.44 ) }
    dend_29 { pt3dadd( -20.6023, 31.8784, 18.3726, 0.74 ) }
    dend_29 { pt3dadd( -21.073, 32.512, 18.8322, 0.74 ) }
    dend_29 { pt3dadd( -21.4899, 32.9373, 19.0651, 0.74 ) }
    dend_29 { pt3dadd( -22.0477, 33.3701, 19.2964, 0.29 ) }
    dend_29 { pt3dadd( -23.1162, 33.9748, 19.9391, 0.29 ) }
    dend_29 { pt3dadd( -23.3123, 34.0734, 20.0929, 0.81 ) }
    dend_29 { pt3dadd( -23.918, 34.3771, 20.645, 0.81 ) }
    dend_29 { pt3dadd( -24.4997, 34.7127, 21.2221, 0.74 ) }
    dend_29 { pt3dadd( -25.3598, 35.2719, 22.1091, 0.81 ) }
    dend_29 { pt3dadd( -27.0507, 36.5185, 23.8968, 1.69 ) }
    dend_29 { pt3dadd( -28.1266, 37.409, 25.0073, 0.52 ) }
    dend_29 { pt3dadd( -28.5288, 37.7758, 25.4193, 0.59 ) }
    dend_29 { pt3dadd( -29.3131, 38.5342, 26.1694, 0.59 ) }
    dend_29 { pt3dadd( -29.852, 39.0572, 26.6477, 0.66 ) }
    dend_29 { pt3dadd( -30.272, 39.4709, 26.9554, 1.03 ) }
    dend_29 { pt3dadd( -30.6724, 39.8438, 27.1768, 1.03 ) }
    dend_29 { pt3dadd( -31.8197, 40.7372, 27.7982, 0.81 ) }
    dend_29 { pt3dadd( -32.4512, 41.1866, 28.1534, 0.59 ) }
    dend_29 { pt3dadd( -33.3693, 41.8148, 28.667, 0.52 ) }
    dend_29 { pt3dadd( -33.9568, 42.2652, 28.9888, 0.52 ) }
    dend_29 { pt3dadd( -34.653, 42.8971, 29.3499, 0.59 ) }
    dend_29 { pt3dadd( -35.1645, 43.4049, 29.6027, 0.88 ) }
    dend_29 { pt3dadd( -35.6041, 43.944, 29.7675, 1.03 ) }
    dend_29 { pt3dadd( -36.0946, 44.7042, 29.9458, 0.59 ) }
    dend_29 { pt3dadd( -36.4479, 45.3952, 30.0409, 0.52 ) }
    dend_29 { pt3dadd( -36.7154, 46.0163, 30.1114, 0.81 ) }
    dend_29 { pt3dadd( -42.7209, 53.1534, 34.3222, 0.81 ) }
    dend_29 { pt3dadd( -49.1253, 59.3633, 39.2218, 0.81 ) }
    dend_29 { pt3dadd( -54.9921, 65.5341, 44.7933, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_29 { pt3dadd( -59.4353, 71.9636, 51.3327, 0.81 ) }
    dend_29 { pt3dadd( -64.109, 79.0149, 57.0823, 0.81 ) }
    dend_29 { pt3dadd( -68.28, 85.4739, 63.7728, 0.81 ) }
    dend_29 { pt3dadd( -71.134, 92.1702, 70.9271, 0.81 ) }
    dend_29 { pt3dadd( -72.2099, 97.9683, 79.1944, 0.81 ) }
    dend_29 { pt3dadd( -72.6664, 103.955, 87.3973, 0.81 ) }
    dend_29 { pt3dadd( -74.0394, 110.235, 95.2927, 0.81 ) }
    dend_29 { pt3dadd( -76.2525, 116.416, 103.068, 0.81 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 8/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -10.3278, 23.6992, 12.9885, 1.11 ) }
    dend_14 { pt3dadd( -10.0591, 24.8211, 12.5259, 1.11 ) }
    dend_14 { pt3dadd( -9.9207, 26.0716, 12.017, 0.81 ) }
    dend_14 { pt3dadd( -9.96508, 27.3937, 11.4281, 0.74 ) }
    dend_14 { pt3dadd( -10.063, 28.0699, 11.1186, 1.11 ) }
    dend_14 { pt3dadd( -10.1968, 28.6858, 10.852, 1.18 ) }
    dend_14 { pt3dadd( -10.4375, 29.6185, 10.4827, 1.47 ) }
    dend_14 { pt3dadd( -10.6802, 30.2956, 10.2238, 1.47 ) }
    dend_14 { pt3dadd( -11.1467, 31.471, 9.81497, 1.18 ) }
    dend_14 { pt3dadd( -11.5807, 32.6435, 9.47929, 0.96 ) }
    dend_14 { pt3dadd( -11.8904, 33.6625, 9.23021, 1.03 ) }
    dend_14 { pt3dadd( -12.122, 34.7217, 8.99966, 1.4 ) }
    dend_14 { pt3dadd( -12.2701, 35.9111, 8.77827, 1.4 ) }
    dend_14 { pt3dadd( -12.2824, 37.2869, 8.55149, 1.03 ) }
    dend_14 { pt3dadd( -12.1527, 38.4226, 8.38344, 1.03 ) }
    dend_14 { pt3dadd( -11.9498, 39.3979, 8.23799, 1.25 ) }
    dend_14 { pt3dadd( -11.5526, 40.79, 7.9689, 1.11 ) }
    dend_14 { pt3dadd( -11.2128, 41.8152, 7.73698, 1.11 ) }
    dend_14 { pt3dadd( -10.7625, 43.1482, 7.34656, 1.11 ) }
    dend_14 { pt3dadd( -10.2753, 44.6572, 6.7852, 1.11 ) }
    dend_14 { pt3dadd( -9.99318, 45.688, 6.31776, 1.11 ) }
    dend_14 { pt3dadd( -9.71582, 47.1152, 5.55098, 1.33 ) }
    dend_14 { pt3dadd( -9.69166, 47.9715, 5.00399, 1.03 ) }
    dend_14 { pt3dadd( -9.95958, 49.3951, 3.93946, 1.18 ) }
    dend_14 { pt3dadd( -10.1919, 49.9209, 3.50655, 1.47 ) }
    dend_14 { pt3dadd( -10.5589, 50.4475, 3.07409, 1.47 ) }
    dend_14 { pt3dadd( -10.974, 50.9016, 2.74526, 1.69 ) }
    dend_14 { pt3dadd( -12.2635, 52.0817, 2.13575, 0.88 ) }
    dend_14 { pt3dadd( -13.0833, 52.7958, 1.90898, 1.11 ) }
    dend_14 { pt3dadd( -13.8388, 53.5178, 1.87377, 1.11 ) }
    dend_14 { pt3dadd( -14.6156, 54.3899, 1.95952, 0.96 ) }
    dend_14 { pt3dadd( -15.2746, 55.336, 2.14563, 0.88 ) }
    dend_14 { pt3dadd( -15.8408, 56.4691, 2.42499, 1.18 ) }
    dend_14 { pt3dadd( -16.2242, 57.5913, 2.748, 1.47 ) }
    dend_14 { pt3dadd( -16.6114, 59.292, 3.24386, 1.4 ) }
    dend_14 { pt3dadd( -16.775, 60.4648, 3.56462, 0.88 ) }
    dend_14 { pt3dadd( -16.8994, 62.0472, 3.94453, 0.81 ) }
    dend_14 { pt3dadd( -16.9361, 63.567, 4.28067, 1.69 ) }
    dend_14 { pt3dadd( -16.9178, 64.2227, 4.42391, 1.99 ) }
    dend_14 { pt3dadd( -16.8786, 64.9277, 4.56889, 1.99 ) }
    dend_14 { pt3dadd( -16.8573, 65.4918, 4.65588, 2.21 ) }
    dend_14 { pt3dadd( -16.8488, 66.5428, 4.85796, 1.99 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 50/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -25.3436, 9.76998, -6.99025, 1.4 ) }
    dend_4 { pt3dadd( -25.427, 11.4288, -7.91258, 1.4 ) }
    dend_4 { pt3dadd( -25.3255, 12.0554, -8.91629, 1.4 ) }
    dend_4 { pt3dadd( -25.2497, 12.463, -9.61169, 1.33 ) }
    dend_4 { pt3dadd( -25.1471, 13.3277, -10.9916, 1.62 ) }
    dend_4 { pt3dadd( -25.1037, 14.099, -12.0758, 1.25 ) }
    dend_4 { pt3dadd( -25.107, 15.8238, -14.2143, 1.03 ) }
    dend_4 { pt3dadd( -25.2618, 18.0056, -16.9845, 1.4 ) }
    dend_4 { pt3dadd( -25.3507, 18.6504, -17.7193, 1.4 ) }
    dend_4 { pt3dadd( -25.5209, 19.4102, -18.4536, 1.11 ) }
    dend_4 { pt3dadd( -25.82, 20.3893, -19.1564, 1.33 ) }
    dend_4 { pt3dadd( -26.1714, 21.2262, -19.6236, 1.69 ) }
    dend_4 { pt3dadd( -26.6756, 22.1108, -19.999, 1.69 ) }
    dend_4 { pt3dadd( -27.1117, 22.7413, -20.2563, 1.69 ) }
    dend_4 { pt3dadd( -28.0225, 24.0194, -21.0029, 0.74 ) }
    dend_4 { pt3dadd( -28.3724, 24.5519, -21.3908, 0.74 ) }
    dend_4 { pt3dadd( -28.7938, 25.2805, -22.0421, 0.59 ) }
    dend_4 { pt3dadd( -29.3541, 26.4864, -23.2041, 1.18 ) }
    dend_4 { pt3dadd( -29.7043, 27.5245, -24.3102, 1.18 ) }
    dend_4 { pt3dadd( -29.9393, 28.5041, -25.3699, 1.18 ) }
    dend_4 { pt3dadd( -30.0352, 29.2314, -26.1546, 1.18 ) }
    dend_4 { pt3dadd( -30.0676, 30.376, -27.4426, 0.81 ) }
    dend_4 { pt3dadd( -30.0643, 31.0545, -28.1825, 0.66 ) }
    dend_4 { pt3dadd( -30.0823, 32.8496, -30.0421, 0.66 ) }
    dend_4 { pt3dadd( -30.1179, 33.2191, -30.4095, 1.25 ) }
    dend_4 { pt3dadd( -30.3933, 34.424, -31.5401, 1.47 ) }
    dend_4 { pt3dadd( -30.9521, 35.7495, -32.6682, 0.59 ) }
    dend_4 { pt3dadd( -31.6826, 37.0006, -33.502, 1.03 ) }
    dend_4 { pt3dadd( -32.1397, 37.6621, -33.8365, 1.4 ) }
    dend_4 { pt3dadd( -32.5778, 38.2458, -34.0316, 1.47 ) }
    dend_4 { pt3dadd( -33.3739, 39.3425, -34.3201, 1.11 ) }
    dend_4 { pt3dadd( -34.2434, 40.6697, -34.5251, 0.81 ) }
    dend_4 { pt3dadd( -34.8379, 41.8927, -34.7047, 0.96 ) }
    dend_4 { pt3dadd( -35.0213, 42.8003, -34.8948, 1.25 ) }
    dend_4 { pt3dadd( -35.05, 43.5406, -35.0729, 1.55 ) }
    dend_4 { pt3dadd( -35.0147, 44.5098, -35.3196, 1.55 ) }
    dend_4 { pt3dadd( -34.9304, 45.5792, -35.5989, 0.96 ) }
    dend_4 { pt3dadd( -34.8145, 47.162, -36.0172, 0.66 ) }
    dend_4 { pt3dadd( -34.8507, 48.2648, -36.3065, 0.66 ) }
    dend_4 { pt3dadd( -35.0384, 48.9806, -36.4666, 0.74 ) }
    dend_4 { pt3dadd( -35.6294, 49.9825, -36.6848, 1.03 ) }
    dend_4 { pt3dadd( -36.1676, 50.5599, -36.8299, 1.47 ) }
    dend_4 { pt3dadd( -36.5762, 50.9132, -36.9426, 1.77 ) }
    dend_4 { pt3dadd( -37.0921, 51.3128, -37.0996, 1.62 ) }
    dend_4 { pt3dadd( -38.2877, 52.2576, -37.5595, 0.88 ) }
    dend_4 { pt3dadd( -39.1397, 53.0117, -37.9559, 0.66 ) }
    dend_4 { pt3dadd( -40.0291, 53.9478, -38.4534, 0.59 ) }
    dend_4 { pt3dadd( -40.7831, 54.9361, -38.9497, 0.81 ) }
    dend_4 { pt3dadd( -41.1893, 55.6451, -39.2616, 0.59 ) }
    dend_4 { pt3dadd( -41.606, 56.6723, -39.6423, 0.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_4 { pt3dadd( -41.7752, 57.3139, -39.8259, 1.03 ) }
    dend_4 { pt3dadd( -41.9106, 57.9781, -39.9565, 1.03 ) }
    dend_4 { pt3dadd( -42.0504, 58.7617, -40.0272, 0.74 ) }
    dend_4 { pt3dadd( -42.2418, 59.7422, -40.0192, 0.52 ) }
    dend_4 { pt3dadd( -42.4009, 60.429, -39.9734, 0.52 ) }
    dend_4 { pt3dadd( -42.6823, 61.3825, -39.8874, 1.11 ) }
    dend_4 { pt3dadd( -42.9589, 62.1333, -39.8191, 1.4 ) }
    dend_4 { pt3dadd( -43.4206, 63.2387, -39.7296, 1.4 ) }
    dend_4 { pt3dadd( -43.6915, 63.9011, -39.6857, 1.03 ) }
    dend_4 { pt3dadd( -43.8834, 64.4585, -39.6723, 0.74 ) }
    dend_4 { pt3dadd( -44.1192, 65.4282, -39.715, 0.59 ) }
    dend_4 { pt3dadd( -44.191, 66.075, -39.8073, 0.52 ) }
    dend_4 { pt3dadd( -44.1934, 66.8991, -40.0028, 0.52 ) }
    dend_4 { pt3dadd( -44.126, 68.075, -40.3953, 0.52 ) }
    dend_4 { pt3dadd( -44.0544, 68.9729, -40.7268, 0.52 ) }
    dend_4 { pt3dadd( -43.9927, 69.7142, -41.0668, 0.52 ) }
    dend_4 { pt3dadd( -43.9642, 70.4176, -41.4861, 0.52 ) }
    dend_4 { pt3dadd( -44.0264, 70.8436, -41.7869, 0.52 ) }
    dend_4 { pt3dadd( -44.2294, 71.2612, -42.1388, 0.81 ) }
    dend_4 { pt3dadd( -44.5951, 71.6506, -42.5076, 0.96 ) }
    dend_4 { pt3dadd( -45.3676, 72.1913, -43.0587, 0.96 ) }
    dend_4 { pt3dadd( -46.1204, 72.6166, -43.485, 0.52 ) }
    dend_4 { pt3dadd( -46.9759, 73.067, -43.9217, 0.81 ) }
    dend_4 { pt3dadd( -47.4027, 73.3053, -44.143, 1.18 ) }
    dend_4 { pt3dadd( -47.8601, 73.6007, -44.3872, 1.18 ) }
    dend_4 { pt3dadd( -48.6171, 74.2391, -44.7972, 0.44 ) }
    dend_4 { pt3dadd( -49.0614, 74.7796, -45.058, 0.44 ) }
    dend_4 { pt3dadd( -49.3739, 75.4272, -45.3258, 0.74 ) }
    dend_4 { pt3dadd( -49.5009, 76.0592, -45.6004, 0.74 ) }
    dend_4 { pt3dadd( -49.5291, 76.6331, -45.8373, 0.44 ) }
    dend_4 { pt3dadd( -49.4976, 77.582, -46.192, 0.66 ) }
    dend_4 { pt3dadd( -49.4156, 78.5731, -46.5258, 0.96 ) }
    dend_4 { pt3dadd( -49.3495, 79.3382, -46.772, 0.74 ) }
    dend_4 { pt3dadd( -49.2884, 80.5304, -47.1221, 0.37 ) }
    dend_4 { pt3dadd( -49.287, 81.4947, -47.3652, 0.37 ) }
    dend_4 { pt3dadd( -49.3558, 82.4206, -47.5662, 0.88 ) }
    dend_4 { pt3dadd( -49.4358, 82.8172, -47.6211, 1.18 ) }
    dend_4 { pt3dadd( -49.6648, 83.3152, -47.6379, 1.18 ) }
    dend_4 { pt3dadd( -50.0276, 83.7834, -47.6454, 1.18 ) }
    dend_4 { pt3dadd( -50.3957, 84.1795, -47.6435, 1.11 ) }
    dend_4 { pt3dadd( -50.8364, 84.6407, -47.6503, 0.44 ) }
    dend_4 { pt3dadd( -51.5259, 85.4017, -47.6719, 0.44 ) }
    dend_4 { pt3dadd( -52.6387, 86.7479, -47.722, 0.44 ) }
    dend_4 { pt3dadd( -53.3807, 87.7338, -47.7882, 0.44 ) }
    dend_4 { pt3dadd( -54.1023, 88.8009, -47.8829, 0.44 ) }
    dend_4 { pt3dadd( -54.5451, 89.5782, -47.9957, 0.44 ) }
    dend_4 { pt3dadd( -54.8976, 90.3633, -48.1418, 1.47 ) }
    dend_4 { pt3dadd( -55.1109, 91.0268, -48.3031, 1.47 ) }
    dend_4 { pt3dadd( -55.312, 91.9144, -48.5639, 1.18 ) }
    dend_4 { pt3dadd( -55.5018, 92.7838, -48.9216, 0.66 ) }
    dend_4 { pt3dadd( -55.6966, 93.8867, -49.6668, 0.44 ) }
    dend_4 { pt3dadd( -55.7517, 94.5192, -50.1902, 0.59 ) }
    dend_4 { pt3dadd( -55.7505, 95.2971, -50.9713, 0.59 ) }
    dend_4 { pt3dadd( -55.7063, 95.9489, -51.7162, 0.74 ) }
    dend_4 { pt3dadd( -55.5662, 97.0929, -53.2509, 1.25 ) }
    dend_4 { pt3dadd( -55.3593, 98.6034, -55.5359, 0.66 ) }
    dend_4 { pt3dadd( -55.2882, 99.2421, -56.5915, 0.66 ) }
    dend_4 { pt3dadd( -55.2033, 100.14, -58.1596, 1.25 ) }
    dend_4 { pt3dadd( -55.1743, 100.604, -58.9542, 1.62 ) }
    dend_4 { pt3dadd( -55.1316, 102.2, -61.4662, 1.4 ) }
    dend_4 { pt3dadd( -55.1206, 102.893, -62.4615, 1.11 ) }
    dend_4 { pt3dadd( -55.1371, 103.812, -63.6958, 1.25 ) }
    dend_4 { pt3dadd( -55.1333, 104.651, -64.7668, 0.96 ) }
    dend_4 { pt3dadd( -55.0893, 105.359, -65.53, 1.18 ) }
    dend_4 { pt3dadd( -55.0099, 106.187, -66.2933, 1.4 ) }
    dend_4 { pt3dadd( -54.9127, 107.219, -67.0886, 0.37 ) }
    dend_4 { pt3dadd( -54.8529, 108.08, -67.7961, 0.37 ) }
    dend_4 { pt3dadd( -54.8081, 108.847, -68.4679, 0.88 ) }
    dend_4 { pt3dadd( -54.7962, 109.458, -69.0546, 0.88 ) }
    dend_4 { pt3dadd( -54.7937, 110.051, -69.6901, 0.88 ) }
    dend_4 { pt3dadd( -54.8325, 111.098, -70.9306, 0.37 ) }
    dend_4 { pt3dadd( -54.9821, 112.322, -72.3757, 1.03 ) }
    dend_4 { pt3dadd( -55.0964, 112.897, -73.1223, 1.03 ) }
    dend_4 { pt3dadd( -55.1941, 113.23, -73.6286, 1.03 ) }
    dend_4 { pt3dadd( -55.5289, 114.022, -74.9943, 0.29 ) }
    dend_4 { pt3dadd( -55.8548, 114.741, -76.3208, 0.29 ) }
    dend_4 { pt3dadd( -56.1502, 115.346, -77.517, 0.29 ) }
    dend_4 { pt3dadd( -56.5613, 116.108, -79.0807, 1.25 ) }
    dend_4 { pt3dadd( -57.1125, 116.973, -80.9271, 1.25 ) }
    dend_4 { pt3dadd( -57.5726, 117.625, -82.3806, 0.96 ) }
    dend_4 { pt3dadd( -58.1801, 118.47, -84.1908, 0.37 ) }
    dend_4 { pt3dadd( -58.3547, 118.77, -84.7601, 0.66 ) }
    dend_4 { pt3dadd( -58.5609, 119.194, -85.5357, 1.03 ) }
    dend_4 { pt3dadd( -58.7458, 119.757, -86.3996, 1.03 ) }
    dend_4 { pt3dadd( -59.0009, 121.041, -88.1006, 0.52 ) }
    dend_4 { pt3dadd( -59.0875, 121.664, -88.8407, 1.03 ) }
    dend_4 { pt3dadd( -59.3172, 122.427, -89.6859, 1.03 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 87/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -25.3436, 9.76998, -6.99025, 0.74 ) }
    dend_1 { pt3dadd( -26.3084, 9.06296, -6.99025, 0.74 ) }
    dend_1 { pt3dadd( -27.2321, 8.28866, -7.0038, 0.74 ) }
    dend_1 { pt3dadd( -28.1726, 7.50039, -7.0176, 1.03 ) }
    dend_1 { pt3dadd( -28.7864, 6.98586, -7.02661, 1.4 ) }
    dend_1 { pt3dadd( -29.6904, 6.22814, -7.03987, 1.84 ) }
    dend_1 { pt3dadd( -30.2749, 5.73823, -7.04845, 2.14 ) }
    dend_1 { pt3dadd( -30.6701, 5.27922, -7.05682, 2.36 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 95/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 40.8915, 5.92002, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 55.72, 8.18146, 2.65033, 0.29 ) }
    axon_1 { pt3dadd( 70.5486, 10.4429, 2.65033, 0.29 ) }
    // Section: dend_66, id: dend_66, parent: dend_62 (entry count 98/100)
    dend_66 { pt3dclear() }
    dend_66 { pt3dadd( 12.9819, -75.6996, 14.2499, 0.52 ) }
    dend_66 { pt3dadd( 11.033, -73.9777, 15.0847, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_66 { pt3dadd( 10.2733, -73.3064, 15.4101, 0.52 ) }
    dend_66 { pt3dadd( 9.31061, -72.4558, 15.8225, 1.25 ) }
    dend_66 { pt3dadd( 8.84692, -72.0462, 16.0211, 1.4 ) }
    dend_66 { pt3dadd( 7.98137, -71.2814, 16.3919, 0.37 ) }
    dend_66 { pt3dadd( 7.44445, -70.8071, 16.6219, 0.29 ) }
    dend_66 { pt3dadd( 0.874474, -63.2489, 18.8626, 0.29 ) }
    dend_66 { pt3dadd( -6.23138, -55.8764, 19.3179, 0.29 ) }
    // Section: dend_63, id: dend_63, parent: dend_62 (entry count 7/100)
    dend_63 { pt3dclear() }
    dend_63 { pt3dadd( 12.9819, -75.6996, 14.2499, 0.66 ) }
    dend_63 { pt3dadd( 14.0712, -76.9099, 14.2798, 0.66 ) }
    dend_63 { pt3dadd( 15.0786, -77.965, 14.3555, 0.59 ) }
    dend_63 { pt3dadd( 16.3469, -79.3237, 14.4788, 0.59 ) }
    dend_63 { pt3dadd( 16.9311, -79.987, 14.5549, 0.88 ) }
    dend_63 { pt3dadd( 17.5957, -80.7988, 14.652, 0.88 ) }
    dend_63 { pt3dadd( 18.4075, -81.8972, 14.7344, 0.52 ) }
    dend_63 { pt3dadd( 19.0277, -82.8505, 14.7671, 0.52 ) }
    dend_63 { pt3dadd( 19.3415, -83.5462, 14.7843, 1.11 ) }
    dend_63 { pt3dadd( 19.4791, -84.3657, 14.7508, 1.47 ) }
    dend_63 { pt3dadd( 19.4344, -84.9996, 14.6896, 1.18 ) }
    dend_63 { pt3dadd( 18.9706, -86.4128, 14.4805, 0.59 ) }
    dend_63 { pt3dadd( 18.536, -87.1795, 14.3912, 0.59 ) }
    dend_63 { pt3dadd( 17.9337, -87.9962, 14.364, 0.37 ) }
    dend_63 { pt3dadd( 17.6021, -88.4195, 14.3983, 0.59 ) }
    dend_63 { pt3dadd( 17.2019, -88.9574, 14.497, 0.59 ) }
    dend_63 { pt3dadd( 16.5491, -90.0357, 14.8199, 0.44 ) }
    dend_63 { pt3dadd( 16.0459, -91.5367, 15.4427, 0.37 ) }
    dend_63 { pt3dadd( 16.0535, -92.4535, 15.8458, 0.66 ) }
    dend_63 { pt3dadd( 16.3009, -93.4052, 16.2746, 0.96 ) }
    dend_63 { pt3dadd( 16.6526, -94.2288, 16.6603, 0.74 ) }
    dend_63 { pt3dadd( 17.2286, -95.2199, 17.1159, 0.52 ) }
    dend_63 { pt3dadd( 18.0621, -96.3744, 17.618, 0.81 ) }
    dend_63 { pt3dadd( 18.7448, -97.1853, 17.9335, 0.96 ) }
    dend_63 { pt3dadd( 19.2312, -97.7374, 18.1394, 1.03 ) }
    dend_63 { pt3dadd( 19.9891, -98.617, 18.4243, 0.81 ) }
    dend_63 { pt3dadd( 20.6688, -99.431, 18.643, 0.74 ) }
    dend_63 { pt3dadd( 21.1937, -100.042, 18.7672, 1.11 ) }
    dend_63 { pt3dadd( 21.7318, -100.631, 18.8245, 1.11 ) }
    dend_63 { pt3dadd( 22.4878, -101.43, 18.8237, 0.81 ) }
    dend_63 { pt3dadd( 23.1573, -102.134, 18.7687, 0.52 ) }
    dend_63 { pt3dadd( 23.6557, -102.724, 18.6935, 0.74 ) }
    dend_63 { pt3dadd( 24.1303, -103.41, 18.6283, 0.74 ) }
    dend_63 { pt3dadd( 24.6545, -104.357, 18.5705, 0.52 ) }
    dend_63 { pt3dadd( 24.9495, -105.052, 18.5524, 0.81 ) }
    dend_63 { pt3dadd( 25.1698, -105.637, 18.5558, 0.81 ) }
    dend_63 { pt3dadd( 25.6351, -106.929, 18.6605, 0.59 ) }
    dend_63 { pt3dadd( 25.9883, -107.853, 18.7939, 0.81 ) }
    dend_63 { pt3dadd( 26.2965, -108.609, 18.9994, 0.81 ) }
    dend_63 { pt3dadd( 26.7034, -109.521, 19.3543, 0.44 ) }
    dend_63 { pt3dadd( 27.1578, -110.41, 19.792, 0.81 ) }
    dend_63 { pt3dadd( 27.7392, -111.351, 20.331, 0.66 ) }
    dend_63 { pt3dadd( 28.4094, -112.223, 20.8753, 0.29 ) }
    dend_63 { pt3dadd( 29.6341, -113.653, 21.7202, 0.74 ) }
    dend_63 { pt3dadd( 30.1014, -114.177, 22.008, 1.25 ) }
    dend_63 { pt3dadd( 30.5123, -114.633, 22.2587, 1.25 ) }
    dend_63 { pt3dadd( 31.4171, -115.718, 22.7966, 0.37 ) }
    dend_63 { pt3dadd( 32.1979, -116.709, 23.1786, 0.37 ) }
    dend_63 { pt3dadd( 33.0552, -117.78, 23.5055, 0.37 ) }
    dend_63 { pt3dadd( 33.5461, -118.34, 23.5721, 0.37 ) }
    // Section: dend_61, id: dend_61, parent: dend_57 (entry count 57/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( 6.96852, -41.1522, 26.6809, 0.44 ) }
    dend_61 { pt3dadd( 8.59662, -40.8905, 27.8466, 0.44 ) }
    dend_61 { pt3dadd( 9.39066, -40.7629, 28.4151, 0.29 ) }
    dend_61 { pt3dadd( 10.4339, -40.5952, 29.1621, 0.52 ) }
    dend_61 { pt3dadd( 10.9742, -40.5084, 29.549, 0.74 ) }
    dend_61 { pt3dadd( 11.2413, -40.4655, 29.7402, 0.74 ) }
    dend_61 { pt3dadd( 19.6684, -39.1213, 34.9695, 0.74 ) }
    dend_61 { pt3dadd( 28.8282, -37.0597, 38.4686, 0.74 ) }
    dend_61 { pt3dadd( 37.528, -36.4201, 43.3617, 0.74 ) }
    dend_61 { pt3dadd( 46.1563, -34.9947, 48.2309, 0.74 ) }
    dend_61 { pt3dadd( 54.6455, -34.0475, 53.4386, 0.74 ) }
    dend_61 { pt3dadd( 63.7428, -34.5592, 57.5619, 0.74 ) }
    // Section: dend_58, id: dend_58, parent: dend_57 (entry count 69/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( 6.96852, -41.1522, 26.6809, 0.44 ) }
    dend_58 { pt3dadd( 6.48999, -42.5809, 27.8611, 0.44 ) }
    dend_58 { pt3dadd( 6.2068, -43.4264, 28.5595, 0.74 ) }
    // Section: dend_55, id: dend_55, parent: dend_53 (entry count 72/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -54.6125, -146.025, 75.0181, 0.29 ) }
    dend_55 { pt3dadd( -50.6989, -154.869, 78.7254, 0.29 ) }
    dend_55 { pt3dadd( -45.8168, -163.774, 80.783, 0.29 ) }
    // Section: dend_54, id: dend_54, parent: dend_53 (entry count 75/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -54.6125, -146.025, 75.0181, 0.22 ) }
    dend_54 { pt3dadd( -62.9434, -149.674, 79.3213, 0.29 ) }
    dend_54 { pt3dadd( -71.872, -153.511, 81.9532, 0.29 ) }
    // Section: dend_50, id: dend_50, parent: dend_40 (entry count 78/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -14.7626, -167.777, 14.5675, 0.37 ) }
    dend_50 { pt3dadd( -6.54977, -173.754, 14.9382, 0.37 ) }
    dend_50 { pt3dadd( 2.57336, -178.04, 15.2763, 0.37 ) }
    dend_50 { pt3dadd( 11.8325, -181.917, 16.0705, 0.37 ) }
    dend_50 { pt3dadd( 20.379, -187.288, 15.18, 0.37 ) }
    dend_50 { pt3dadd( 28.7509, -192.761, 13.5259, 0.37 ) }
    dend_50 { pt3dadd( 36.1327, -199.566, 11.6504, 0.37 ) }
    dend_50 { pt3dadd( 43.287, -206.811, 10.5521, 0.37 ) }
    dend_50 { pt3dadd( 49.7958, -214.762, 11.0836, 0.37 ) }
    dend_50 { pt3dadd( 55.7916, -223.132, 11.7979, 0.37 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 88/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -14.7626, -167.777, 14.5675, 0.22 ) }
    dend_41 { pt3dadd( -6.62601, -173.587, 16.348, 0.37 ) }
    dend_41 { pt3dadd( 2.27554, -178.368, 16.5184, 0.37 ) }
    // Section: dend_35, id: dend_35, parent: dend_33 (entry count 91/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -66.1133, -138.824, 10.337, 0.22 ) }
    dend_35 { pt3dadd( -65.923, -140.257, 10.0188, 0.22 ) }
    dend_35 { pt3dadd( -65.7769, -141.357, 9.7747, 0.22 ) }
    dend_35 { pt3dadd( -65.6647, -142.202, 9.58707, 0.37 ) }
    dend_35 { pt3dadd( -65.4952, -143.478, 9.30377, 0.37 ) }
    dend_35 { pt3dadd( -62.9157, -153.569, 8.31252, 0.37 ) }
    dend_35 { pt3dadd( -59.3374, -163.248, 6.81916, 0.37 ) }
    dend_35 { pt3dadd( -56.5161, -173.17, 5.16228, 0.37 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 99/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( -66.1133, -138.824, 10.337, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_34 { pt3dadd( -67.1139, -140.388, 11.0266, 0.22 ) }
    dend_34 { pt3dadd( -67.1627, -140.447, 11.056, 0.44 ) }
    dend_34 { pt3dadd( -67.7308, -141.002, 11.3145, 0.15 ) }
    dend_34 { pt3dadd( -67.9316, -141.172, 11.3822, 0.37 ) }
    dend_34 { pt3dadd( -68.5915, -141.704, 11.5674, 0.15 ) }
    dend_34 { pt3dadd( -69.4242, -142.378, 11.733, 0.22 ) }
    dend_34 { pt3dadd( -70.1423, -142.915, 11.8723, 0.22 ) }
    dend_34 { pt3dadd( -70.7449, -143.409, 12.124, 0.66 ) }
    dend_34 { pt3dadd( -71.4967, -144.001, 12.4711, 0.22 ) }
    dend_34 { pt3dadd( -71.7841, -144.231, 12.6186, 0.88 ) }
    dend_34 { pt3dadd( -72.4066, -144.759, 13.0064, 0.74 ) }
    dend_34 { pt3dadd( -73.5706, -146.031, 13.9853, 1.4 ) }
    dend_34 { pt3dadd( -74.3084, -147.222, 15.161, 1.18 ) }
    dend_34 { pt3dadd( -80.0271, -154.049, 20.1629, 1.18 ) }
    dend_34 { pt3dadd( -84.8372, -161.252, 25.6224, 1.18 ) }
    dend_34 { pt3dadd( -90.9464, -167.642, 30.6853, 1.18 ) }
    dend_34 { pt3dadd( -97.4353, -174.663, 34.3166, 1.18 ) }
    dend_34 { pt3dadd( -103.185, -181.775, 38.9059, 1.18 ) }
    dend_34 { pt3dadd( -109.504, -187.996, 43.9026, 1.18 ) }
    dend_34 { pt3dadd( -114.987, -194.609, 49.4051, 1.18 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 20/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -76.2525, 116.416, 103.068, 0.37 ) }
    dend_31 { pt3dadd( -80.9185, 122.947, 109.356, 0.37 ) }
    dend_31 { pt3dadd( -86.1258, 127.564, 116.673, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 23/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -76.2525, 116.416, 103.068, 0.29 ) }
    dend_30 { pt3dadd( -80.8081, 122.892, 109.487, 0.37 ) }
    dend_30 { pt3dadd( -84.8555, 129.764, 115.873, 0.37 ) }
    dend_30 { pt3dadd( -88.8723, 135.077, 123.506, 0.37 ) }
    dend_30 { pt3dadd( -92.0556, 141.444, 130.793, 0.37 ) }
    dend_30 { pt3dadd( -95.2149, 145.941, 139.259, 0.37 ) }
    dend_30 { pt3dadd( -98.2546, 150.952, 147.504, 0.37 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 30/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -16.8488, 66.5428, 4.85796, 0.96 ) }
    dend_16 { pt3dadd( -17.0156, 68.4866, 4.31756, 0.96 ) }
    dend_16 { pt3dadd( -17.2188, 69.7338, 3.91358, 0.81 ) }
    dend_16 { pt3dadd( -17.4521, 70.7181, 3.58603, 0.81 ) }
    dend_16 { pt3dadd( -17.7452, 71.736, 3.1498, 1.18 ) }
    dend_16 { pt3dadd( -18.4305, 74.0079, 2.10342, 1.18 ) }
    dend_16 { pt3dadd( -18.6014, 74.5854, 1.83874, 1.18 ) }
    dend_16 { pt3dadd( -18.902, 75.4674, 1.38258, 0.81 ) }
    dend_16 { pt3dadd( -19.1341, 76.1847, 1.06178, 0.81 ) }
    dend_16 { pt3dadd( -19.597, 77.9933, 0.5821, 0.66 ) }
    dend_16 { pt3dadd( -19.744, 78.9789, 0.589143, 0.96 ) }
    dend_16 { pt3dadd( -19.7871, 79.9396, 0.841048, 1.11 ) }
    dend_16 { pt3dadd( -19.7652, 80.9214, 1.24789, 0.81 ) }
    dend_16 { pt3dadd( -19.65, 82.5602, 2.07562, 0.59 ) }
    dend_16 { pt3dadd( -19.4807, 84.2775, 2.97829, 0.81 ) }
    dend_16 { pt3dadd( -19.3252, 85.7188, 3.7507, 1.11 ) }
    dend_16 { pt3dadd( -19.2128, 86.7816, 4.21889, 1.25 ) }
    dend_16 { pt3dadd( -19.0707, 88.4261, 4.76589, 0.59 ) }
    dend_16 { pt3dadd( -19.0348, 89.2551, 4.89013, 0.59 ) }
    dend_16 { pt3dadd( -19.1304, 90.8521, 4.63714, 0.59 ) }
    dend_16 { pt3dadd( -19.3301, 91.7664, 4.18039, 0.44 ) }
    dend_16 { pt3dadd( -19.8438, 93.3279, 3.04315, 1.11 ) }
    dend_16 { pt3dadd( -20.0233, 93.7796, 2.65055, 1.4 ) }
    dend_16 { pt3dadd( -20.5041, 94.9181, 1.55525, 0.88 ) }
    dend_16 { pt3dadd( -20.8854, 95.8079, 0.716894, 0.52 ) }
    dend_16 { pt3dadd( -21.1659, 96.5158, 0.123125, 0.52 ) }
    dend_16 { pt3dadd( -21.3714, 97.4478, -0.511226, 0.74 ) }
    dend_16 { pt3dadd( -21.3139, 98.176, -0.822754, 1.11 ) }
    dend_16 { pt3dadd( -21.0151, 99.0556, -1.04945, 1.33 ) }
    dend_16 { pt3dadd( -20.7397, 99.5621, -1.11617, 1.62 ) }
    dend_16 { pt3dadd( -20.2597, 100.223, -1.17231, 1.47 ) }
    dend_16 { pt3dadd( -19.3077, 101.301, -1.22794, 0.96 ) }
    dend_16 { pt3dadd( -18.6421, 101.98, -1.2606, 0.81 ) }
    dend_16 { pt3dadd( -17.9827, 102.656, -1.28633, 0.81 ) }
    dend_16 { pt3dadd( -17.241, 103.462, -1.30753, 0.66 ) }
    dend_16 { pt3dadd( -16.5212, 104.344, -1.35089, 0.59 ) }
    dend_16 { pt3dadd( -16.1246, 104.939, -1.40823, 0.59 ) }
    dend_16 { pt3dadd( -15.6692, 105.82, -1.52348, 0.44 ) }
    dend_16 { pt3dadd( -15.2802, 106.809, -1.67158, 0.81 ) }
    dend_16 { pt3dadd( -14.9635, 107.856, -1.8695, 0.81 ) }
    dend_16 { pt3dadd( -14.6599, 109.065, -2.12842, 1.03 ) }
    dend_16 { pt3dadd( -14.372, 110.295, -2.49557, 1.25 ) }
    dend_16 { pt3dadd( -14.2397, 110.848, -2.73692, 1.25 ) }
    dend_16 { pt3dadd( -14.0473, 111.501, -3.20829, 1.18 ) }
    dend_16 { pt3dadd( -13.7112, 112.457, -4.0732, 0.66 ) }
    dend_16 { pt3dadd( -13.5243, 112.957, -4.52129, 0.59 ) }
    dend_16 { pt3dadd( -12.9823, 114.381, -5.72579, 1.25 ) }
    dend_16 { pt3dadd( -12.5265, 115.577, -6.62468, 1.99 ) }
    dend_16 { pt3dadd( -11.507, 118.441, -8.38692, 0.59 ) }
    dend_16 { pt3dadd( -11.2403, 119.265, -8.75577, 0.66 ) }
    dend_16 { pt3dadd( -10.5957, 121.614, -9.32418, 0.52 ) }
    dend_16 { pt3dadd( -10.3668, 122.582, -9.38103, 1.03 ) }
    dend_16 { pt3dadd( -10.1282, 123.745, -9.26269, 1.25 ) }
    dend_16 { pt3dadd( -9.88361, 125.096, -9.01188, 0.74 ) }
    dend_16 { pt3dadd( -9.73382, 126.102, -8.78386, 0.59 ) }
    dend_16 { pt3dadd( -9.62147, 126.942, -8.68907, 0.59 ) }
    dend_16 { pt3dadd( -9.434, 128.11, -8.71115, 0.88 ) }
    dend_16 { pt3dadd( -9.21171, 129.079, -8.78102, 1.11 ) }
    dend_16 { pt3dadd( -8.95225, 129.892, -8.88073, 1.11 ) }
    dend_16 { pt3dadd( -8.55914, 130.84, -9.0166, 1.03 ) }
    dend_16 { pt3dadd( -7.88515, 132.111, -9.1958, 0.66 ) }
    dend_16 { pt3dadd( -7.24384, 133.027, -9.31748, 0.66 ) }
    dend_16 { pt3dadd( -6.11717, 134.248, -9.45373, 0.96 ) }
    dend_16 { pt3dadd( -5.23692, 135.014, -9.57421, 1.4 ) }
    dend_16 { pt3dadd( -4.71124, 135.419, -9.65872, 1.4 ) }
    dend_16 { pt3dadd( -4.1089, 135.85, -9.78483, 1.4 ) }
    dend_16 { pt3dadd( -3.21244, 136.498, -10.0627, 0.74 ) }
    dend_16 { pt3dadd( -2.40288, 137.222, -10.5224, 0.37 ) }
    dend_16 { pt3dadd( -1.46072, 138.315, -11.464, 0.37 ) }
    dend_16 { pt3dadd( -1.07506, 138.83, -11.9868, 0.96 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_16 { pt3dadd( -0.752864, 139.278, -12.482, 0.96 ) }
    dend_16 { pt3dadd( -0.269407, 139.955, -13.3044, 0.66 ) }
    dend_16 { pt3dadd( 0.43629, 140.94, -14.5469, 0.52 ) }
    dend_16 { pt3dadd( 0.837512, 141.509, -15.227, 0.37 ) }
    dend_16 { pt3dadd( 1.28938, 142.148, -15.8552, 0.81 ) }
    dend_16 { pt3dadd( 1.66813, 142.738, -16.3511, 0.52 ) }
    dend_16 { pt3dadd( 2.16478, 143.729, -17.0521, 0.52 ) }
    dend_16 { pt3dadd( 2.39665, 144.408, -17.4968, 0.66 ) }
    dend_16 { pt3dadd( 2.55874, 145.523, -18.1594, 0.66 ) }
    dend_16 { pt3dadd( 2.50439, 146.487, -18.7626, 0.66 ) }
    dend_16 { pt3dadd( 2.31053, 147.616, -19.5113, 0.66 ) }
    dend_16 { pt3dadd( 2.05468, 148.792, -20.3254, 0.81 ) }
    dend_16 { pt3dadd( 1.79824, 150.01, -21.219, 1.03 ) }
    dend_16 { pt3dadd( 1.7024, 150.628, -21.7319, 1.25 ) }
    dend_16 { pt3dadd( 1.64449, 151.687, -22.7016, 0.52 ) }
    dend_16 { pt3dadd( 1.7026, 152.371, -23.3733, 0.37 ) }
    dend_16 { pt3dadd( 1.96738, 153.095, -24.1206, 0.37 ) }
    dend_16 { pt3dadd( 2.61763, 154.102, -25.2115, 1.11 ) }
    dend_16 { pt3dadd( 3.15443, 154.723, -25.9519, 1.62 ) }
    dend_16 { pt3dadd( 3.41641, 154.976, -26.2852, 1.69 ) }
    dend_16 { pt3dadd( 3.90344, 155.439, -26.9153, 1.69 ) }
    dend_16 { pt3dadd( 4.9784, 156.649, -28.5272, 0.44 ) }
    dend_16 { pt3dadd( 5.48865, 157.396, -29.471, 0.96 ) }
    dend_16 { pt3dadd( 5.91294, 158.222, -30.4173, 1.03 ) }
    dend_16 { pt3dadd( 6.11335, 158.812, -30.9819, 0.88 ) }
    dend_16 { pt3dadd( 6.33722, 159.901, -31.8906, 0.44 ) }
    dend_16 { pt3dadd( 6.48653, 161.065, -32.7257, 0.74 ) }
    dend_16 { pt3dadd( 6.52326, 161.782, -33.1504, 1.03 ) }
    dend_16 { pt3dadd( 6.63442, 162.454, -33.5554, 1.03 ) }
    dend_16 { pt3dadd( 6.99421, 163.387, -34.2093, 0.59 ) }
    dend_16 { pt3dadd( 7.57192, 164.191, -34.9143, 0.59 ) }
    dend_16 { pt3dadd( 8.29073, 164.842, -35.5945, 0.59 ) }
    dend_16 { pt3dadd( 8.82673, 165.26, -36.074, 0.74 ) }
    dend_16 { pt3dadd( 10.1089, 166.35, -37.3057, 0.74 ) }
    dend_16 { pt3dadd( 10.517, 166.804, -37.7882, 0.96 ) }
    dend_16 { pt3dadd( 10.8393, 167.399, -38.2442, 1.11 ) }
    dend_16 { pt3dadd( 10.9844, 167.955, -38.5008, 1.11 ) }
    dend_16 { pt3dadd( 11.1246, 169.062, -38.8343, 0.66 ) }
    dend_16 { pt3dadd( 11.2386, 170.44, -39.0682, 0.52 ) }
    dend_16 { pt3dadd( 11.3792, 171.891, -39.1354, 0.52 ) }
    dend_16 { pt3dadd( 11.6903, 174.215, -39.1176, 1.11 ) }
    dend_16 { pt3dadd( 11.8143, 175.064, -39.0839, 1.33 ) }
    dend_16 { pt3dadd( 11.9337, 175.885, -39.025, 1.33 ) }
    dend_16 { pt3dadd( 12.1146, 177.318, -38.8809, 0.44 ) }
    dend_16 { pt3dadd( 12.2557, 178.467, -38.7783, 0.44 ) }
    dend_16 { pt3dadd( 12.3646, 179.457, -38.7517, 0.74 ) }
    dend_16 { pt3dadd( 12.412, 180.206, -38.7982, 0.74 ) }
    dend_16 { pt3dadd( 12.4342, 181.413, -38.8897, 0.52 ) }
    dend_16 { pt3dadd( 12.407, 182.901, -39.014, 0.44 ) }
    dend_16 { pt3dadd( 12.2997, 184.292, -39.1533, 0.44 ) }
    dend_16 { pt3dadd( 12.1326, 185.709, -39.3237, 1.18 ) }
    dend_16 { pt3dadd( 12.0153, 186.554, -39.4544, 1.18 ) }
    dend_16 { pt3dadd( 11.8576, 187.674, -39.6749, 0.96 ) }
    dend_16 { pt3dadd( 11.7029, 188.781, -39.9496, 0.44 ) }
    dend_16 { pt3dadd( 11.5307, 190.405, -40.4566, 0.37 ) }
    dend_16 { pt3dadd( 11.4914, 191.033, -40.6999, 0.37 ) }
    dend_16 { pt3dadd( 11.5176, 192.356, -41.2959, 0.88 ) }
    dend_16 { pt3dadd( 11.6448, 193.357, -41.7208, 1.18 ) }
    dend_16 { pt3dadd( 11.8351, 194.095, -41.9676, 1.18 ) }
    dend_16 { pt3dadd( 12.3812, 195.549, -42.2328, 0.59 ) }
    dend_16 { pt3dadd( 12.9924, 196.91, -42.2613, 0.52 ) }
    dend_16 { pt3dadd( 13.4238, 197.848, -42.1689, 0.44 ) }
    dend_16 { pt3dadd( 14.3692, 199.849, -41.6865, 0.74 ) }
    dend_16 { pt3dadd( 14.9194, 201.025, -41.2991, 1.25 ) }
    dend_16 { pt3dadd( 15.3935, 202.075, -40.9025, 1.55 ) }
    dend_16 { pt3dadd( 15.7695, 202.997, -40.5133, 1.62 ) }
    dend_16 { pt3dadd( 16.2141, 204.167, -39.9878, 0.81 ) }
    dend_16 { pt3dadd( 16.7143, 205.535, -39.3975, 0.37 ) }
    dend_16 { pt3dadd( 17.1147, 206.643, -38.9786, 0.37 ) }
    dend_16 { pt3dadd( 17.3776, 207.478, -38.6763, 0.37 ) }
    dend_16 { pt3dadd( 17.5994, 208.466, -38.3418, 0.37 ) }
    dend_16 { pt3dadd( 17.6614, 209.082, -38.1639, 0.37 ) }
    dend_16 { pt3dadd( 17.6703, 209.931, -38.0043, 0.66 ) }
    dend_16 { pt3dadd( 17.6694, 210.818, -37.8422, 0.96 ) }
    dend_16 { pt3dadd( 17.7046, 211.518, -37.6438, 1.18 ) }
    dend_16 { pt3dadd( 17.8593, 212.633, -37.2645, 0.52 ) }
    dend_16 { pt3dadd( 18.1642, 213.971, -36.7969, 0.66 ) }
    dend_16 { pt3dadd( 18.4805, 215.151, -36.3969, 0.59 ) }
    dend_16 { pt3dadd( 19.1705, 217.495, -35.6005, 0.52 ) }
    dend_16 { pt3dadd( 19.672, 218.925, -35.1093, 0.96 ) }
    dend_16 { pt3dadd( 20.0415, 219.814, -34.7969, 0.96 ) }
    dend_16 { pt3dadd( 20.582, 220.851, -34.4449, 0.66 ) }
    dend_16 { pt3dadd( 21.3827, 222.175, -34.0103, 0.44 ) }
    dend_16 { pt3dadd( 22.0365, 223.197, -33.7314, 0.44 ) }
    dend_16 { pt3dadd( 22.6891, 224.189, -33.5846, 0.52 ) }
    dend_16 { pt3dadd( 23.2804, 225.081, -33.477, 0.52 ) }
    dend_16 { pt3dadd( 24.3493, 226.659, -33.2346, 0.81 ) }
    dend_16 { pt3dadd( 25.0802, 227.796, -33.0297, 0.52 ) }
    dend_16 { pt3dadd( 25.7196, 229.002, -32.7635, 0.52 ) }
    dend_16 { pt3dadd( 26.1595, 230.117, -32.4991, 1.47 ) }
    dend_16 { pt3dadd( 26.3667, 230.794, -32.3333, 1.77 ) }
    dend_16 { pt3dadd( 26.516, 231.349, -32.2036, 1.77 ) }
    dend_16 { pt3dadd( 26.8105, 232.5, -31.9524, 0.66 ) }
    dend_16 { pt3dadd( 27.273, 233.965, -31.702, 0.52 ) }
    dend_16 { pt3dadd( 27.7838, 235.229, -31.515, 0.52 ) }
    dend_16 { pt3dadd( 28.3689, 236.469, -31.3726, 0.52 ) }
    dend_16 { pt3dadd( 28.7669, 237.289, -31.3139, 0.52 ) }
    dend_16 { pt3dadd( 29.0524, 237.9, -31.2925, 0.81 ) }
    dend_16 { pt3dadd( 29.4984, 238.901, -31.2861, 1.03 ) }
    dend_16 { pt3dadd( 29.8754, 239.986, -31.3127, 1.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_16 { pt3dadd( 30.0205, 240.5, -31.3228, 1.33 ) }
    dend_16 { pt3dadd( 30.3185, 241.537, -31.3344, 0.88 ) }
    dend_16 { pt3dadd( 30.6373, 242.387, -31.3344, 0.81 ) }
    dend_16 { pt3dadd( 31.0513, 243.129, -31.3344, 0.59 ) }
    dend_16 { pt3dadd( 32.0627, 244.321, -31.3446, 0.44 ) }
    dend_16 { pt3dadd( 32.9437, 245.047, -31.3141, 0.66 ) }
    dend_16 { pt3dadd( 33.8053, 245.641, -31.2604, 0.81 ) }
    dend_16 { pt3dadd( 34.7251, 246.21, -31.1858, 0.44 ) }
    dend_16 { pt3dadd( 35.546, 246.712, -31.0706, 0.81 ) }
    dend_16 { pt3dadd( 36.1702, 247.125, -30.9509, 0.81 ) }
    dend_16 { pt3dadd( 37.102, 247.781, -30.7386, 0.52 ) }
    dend_16 { pt3dadd( 37.8022, 248.363, -30.5771, 0.52 ) }
    dend_16 { pt3dadd( 38.5519, 249.048, -30.4079, 0.52 ) }
    dend_16 { pt3dadd( 39.3293, 249.777, -30.2517, 0.37 ) }
    dend_16 { pt3dadd( 40.3404, 250.706, -30.1362, 0.37 ) }
    dend_16 { pt3dadd( 41.1488, 251.414, -30.1394, 0.59 ) }
    dend_16 { pt3dadd( 41.9707, 252.107, -30.1746, 1.18 ) }
    dend_16 { pt3dadd( 42.2603, 252.353, -30.1673, 1.47 ) }
    dend_16 { pt3dadd( 42.8606, 252.901, -30.1174, 1.47 ) }
    dend_16 { pt3dadd( 43.8017, 253.835, -30.0017, 0.52 ) }
    dend_16 { pt3dadd( 44.4976, 254.579, -29.8814, 0.52 ) }
    dend_16 { pt3dadd( 45.733, 255.961, -29.6596, 0.96 ) }
    dend_16 { pt3dadd( 46.7896, 257.1, -29.4868, 0.52 ) }
    dend_16 { pt3dadd( 47.7712, 258.092, -29.3844, 0.96 ) }
    dend_16 { pt3dadd( 48.317, 258.61, -29.3654, 0.96 ) }
    dend_16 { pt3dadd( 49.3821, 259.477, -29.4105, 0.52 ) }
    dend_16 { pt3dadd( 49.9719, 259.885, -29.5268, 0.37 ) }
    dend_16 { pt3dadd( 50.9136, 260.373, -29.8589, 0.37 ) }
    dend_16 { pt3dadd( 51.6139, 260.627, -30.1363, 0.81 ) }
    dend_16 { pt3dadd( 52.2357, 260.784, -30.3622, 0.81 ) }
    dend_16 { pt3dadd( 53.2035, 261.002, -30.69, 0.52 ) }
    dend_16 { pt3dadd( 53.9065, 261.168, -30.902, 0.74 ) }
    dend_16 { pt3dadd( 54.9734, 261.467, -31.1857, 0.74 ) }
    dend_16 { pt3dadd( 55.8763, 261.765, -31.4074, 0.52 ) }
    dend_16 { pt3dadd( 56.9122, 262.246, -31.6878, 0.52 ) }
    dend_16 { pt3dadd( 57.8988, 262.92, -31.9889, 0.96 ) }
    dend_16 { pt3dadd( 58.3684, 263.38, -32.1576, 1.55 ) }
    dend_16 { pt3dadd( 58.7431, 263.838, -32.2951, 1.69 ) }
    dend_16 { pt3dadd( 58.9611, 264.15, -32.375, 1.69 ) }
    dend_16 { pt3dadd( 60.0482, 265.695, -32.7251, 0.52 ) }
    dend_16 { pt3dadd( 60.8442, 266.717, -32.9321, 0.66 ) }
    dend_16 { pt3dadd( 61.3651, 267.263, -33.0237, 0.74 ) }
    dend_16 { pt3dadd( 62.3398, 268.087, -33.1899, 0.44 ) }
    dend_16 { pt3dadd( 63.3871, 268.88, -33.3597, 0.37 ) }
    dend_16 { pt3dadd( 64.3639, 269.556, -33.5, 1.11 ) }
    dend_16 { pt3dadd( 65.1171, 270.047, -33.5831, 1.55 ) }
    dend_16 { pt3dadd( 65.9665, 270.649, -33.7253, 0.81 ) }
    dend_16 { pt3dadd( 67.0032, 271.64, -34.0062, 0.52 ) }
    dend_16 { pt3dadd( 67.4824, 272.372, -34.2233, 0.66 ) }
    dend_16 { pt3dadd( 67.6857, 272.819, -34.3755, 0.66 ) }
    dend_16 { pt3dadd( 68.0697, 273.936, -34.7695, 0.44 ) }
    dend_16 { pt3dadd( 68.3924, 274.949, -35.132, 0.44 ) }
    dend_16 { pt3dadd( 68.8065, 275.904, -35.5403, 0.52 ) }
    dend_16 { pt3dadd( 69.5142, 276.846, -36.0774, 0.74 ) }
    dend_16 { pt3dadd( 70.2411, 277.423, -36.6138, 1.11 ) }
    dend_16 { pt3dadd( 70.3527, 277.485, -36.6944, 1.33 ) }
    dend_16 { pt3dadd( 70.8135, 277.679, -37.0134, 1.33 ) }
    dend_16 { pt3dadd( 72.1947, 278.2, -38.0169, 0.37 ) }
    dend_16 { pt3dadd( 72.8127, 278.439, -38.4947, 0.37 ) }
    dend_16 { pt3dadd( 73.8219, 278.907, -39.3083, 0.66 ) }
    dend_16 { pt3dadd( 74.5739, 279.365, -39.9398, 0.44 ) }
    dend_16 { pt3dadd( 74.9946, 279.676, -40.3022, 0.44 ) }
    dend_16 { pt3dadd( 75.9324, 280.452, -41.0862, 1.18 ) }
    dend_16 { pt3dadd( 76.3953, 280.851, -41.3943, 1.47 ) }
    dend_16 { pt3dadd( 77.0068, 281.375, -41.6822, 1.47 ) }
    dend_16 { pt3dadd( 78.1957, 282.422, -42.0189, 0.52 ) }
    dend_16 { pt3dadd( 78.7813, 282.993, -42.0944, 0.52 ) }
    dend_16 { pt3dadd( 79.7274, 284.046, -42.0877, 0.52 ) }
    dend_16 { pt3dadd( 80.7836, 285.395, -41.9187, 0.88 ) }
    dend_16 { pt3dadd( 81.4551, 286.4, -41.745, 0.66 ) }
    dend_16 { pt3dadd( 82.2231, 287.733, -41.4634, 0.96 ) }
    dend_16 { pt3dadd( 82.8461, 288.956, -41.1708, 0.96 ) }
    dend_16 { pt3dadd( 83.4112, 290.099, -40.9199, 0.96 ) }
    dend_16 { pt3dadd( 83.8496, 290.962, -40.757, 0.96 ) }
    dend_16 { pt3dadd( 84.3468, 291.783, -40.6595, 0.96 ) }
    dend_16 { pt3dadd( 84.9413, 292.476, -40.5949, 0.96 ) }
    dend_16 { pt3dadd( 85.8876, 293.242, -40.546, 0.37 ) }
    dend_16 { pt3dadd( 86.966, 293.945, -40.5379, 0.37 ) }
    dend_16 { pt3dadd( 87.9518, 294.523, -40.5325, 0.66 ) }
    dend_16 { pt3dadd( 88.8135, 295.042, -40.5297, 1.33 ) }
    dend_16 { pt3dadd( 89.4287, 295.462, -40.5297, 1.33 ) }
    dend_16 { pt3dadd( 90.2123, 296.176, -40.5328, 0.52 ) }
    dend_16 { pt3dadd( 91.0449, 297.107, -40.5394, 0.52 ) }
    dend_16 { pt3dadd( 91.4209, 297.577, -40.5436, 0.88 ) }
    dend_16 { pt3dadd( 91.9022, 298.152, -40.5797, 0.88 ) }
    dend_16 { pt3dadd( 92.584, 298.846, -40.672, 0.88 ) }
    dend_16 { pt3dadd( 93.545, 299.6, -40.8065, 0.44 ) }
    dend_16 { pt3dadd( 94.5394, 300.227, -40.9603, 0.44 ) }
    dend_16 { pt3dadd( 95.6772, 300.754, -41.1485, 0.81 ) }
    dend_16 { pt3dadd( 96.9954, 301.204, -41.3741, 1.47 ) }
    dend_16 { pt3dadd( 97.5972, 301.334, -41.4815, 1.77 ) }
    dend_16 { pt3dadd( 98.6599, 301.43, -41.6849, 1.77 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 92/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -16.8488, 66.5428, 4.85796, 0.52 ) }
    dend_15 { pt3dadd( -18.096, 67.0457, 4.42167, 0.52 ) }
    dend_15 { pt3dadd( -19.0393, 67.5114, 4.11314, 0.52 ) }
    dend_15 { pt3dadd( -20.1305, 68.186, 3.76505, 0.52 ) }
    dend_15 { pt3dadd( -20.8948, 68.7727, 3.51721, 0.74 ) }
    dend_15 { pt3dadd( -21.4115, 69.2797, 3.31349, 0.74 ) }
    dend_15 { pt3dadd( -21.9038, 69.8968, 3.02684, 0.59 ) }
    dend_15 { pt3dadd( -22.0919, 70.3608, 2.8102, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_15 { pt3dadd( -22.2377, 71.068, 2.48404, 0.37 ) }
    dend_15 { pt3dadd( -22.3148, 71.806, 2.17337, 0.37 ) }
    dend_15 { pt3dadd( -22.4029, 72.8302, 1.78104, 0.37 ) }
    dend_15 { pt3dadd( -22.5961, 74.0415, 1.36122, 0.37 ) }
    dend_15 { pt3dadd( -22.7923, 74.4994, 1.24532, 0.44 ) }
    dend_15 { pt3dadd( -23.1907, 74.9333, 1.21451, 0.59 ) }
    dend_15 { pt3dadd( -23.5909, 75.2162, 1.23844, 0.59 ) }
    dend_15 { pt3dadd( -24.9234, 75.975, 1.39222, 0.88 ) }
    dend_15 { pt3dadd( -25.5497, 76.2768, 1.4924, 1.03 ) }
    dend_15 { pt3dadd( -26.7636, 76.8054, 1.67976, 0.37 ) }
    dend_15 { pt3dadd( -27.6322, 77.1623, 1.75775, 0.44 ) }
    dend_15 { pt3dadd( -28.2602, 77.4276, 1.75261, 0.74 ) }
    dend_15 { pt3dadd( -28.841, 77.697, 1.68884, 0.74 ) }
    dend_15 { pt3dadd( -29.7079, 78.1787, 1.47975, 0.44 ) }
    dend_15 { pt3dadd( -30.4014, 78.677, 1.22766, 0.29 ) }
    dend_15 { pt3dadd( -30.771, 79.1024, 0.964761, 0.29 ) }
    dend_15 { pt3dadd( -31.1849, 79.9161, 0.398704, 1.03 ) }
    dend_15 { pt3dadd( -31.3126, 80.4044, 0.0270625, 1.4 ) }
    dend_15 { pt3dadd( -31.3674, 80.8152, -0.295269, 1.4 ) }
    dend_15 { pt3dadd( -31.4281, 81.6296, -0.939738, 0.96 ) }
    dend_15 { pt3dadd( -31.5352, 83.0296, -1.98845, 0.52 ) }
    dend_15 { pt3dadd( -31.6106, 83.6588, -2.43596, 0.52 ) }
    dend_15 { pt3dadd( -31.7902, 84.595, -3.04141, 0.52 ) }
    dend_15 { pt3dadd( -31.9777, 85.0607, -3.2765, 0.52 ) }
    dend_15 { pt3dadd( -32.4987, 85.704, -3.37307, 0.52 ) }
    dend_15 { pt3dadd( -33.2191, 86.3212, -3.29363, 0.88 ) }
    dend_15 { pt3dadd( -33.6536, 86.6511, -3.20931, 1.25 ) }
    dend_15 { pt3dadd( -34.1886, 87.0614, -3.09501, 1.47 ) }
    dend_15 { pt3dadd( -35.0934, 87.8155, -2.89952, 0.59 ) }
    dend_15 { pt3dadd( -35.8461, 88.5601, -2.79456, 0.37 ) }
    dend_15 { pt3dadd( -36.6221, 89.4984, -2.75636, 0.29 ) }
    dend_15 { pt3dadd( -36.9992, 90.0417, -2.78659, 0.59 ) }
    dend_15 { pt3dadd( -37.4168, 90.7335, -2.8799, 0.88 ) }
    dend_15 { pt3dadd( -37.8374, 91.4679, -3.02304, 1.11 ) }
    dend_15 { pt3dadd( -38.3167, 92.2983, -3.20784, 1.33 ) }
    dend_15 { pt3dadd( -38.6607, 92.868, -3.32936, 1.03 ) }
    dend_15 { pt3dadd( -39.1409, 93.6176, -3.47108, 0.81 ) }
    dend_15 { pt3dadd( -39.6575, 94.354, -3.59348, 0.52 ) }
    dend_15 { pt3dadd( -40.5669, 95.6236, -3.76765, 0.52 ) }
    dend_15 { pt3dadd( -41.1861, 96.5134, -3.88452, 0.52 ) }
    dend_15 { pt3dadd( -41.484, 96.9616, -3.93731, 0.66 ) }
    dend_15 { pt3dadd( -41.8088, 97.5161, -4.01129, 0.66 ) }
    dend_15 { pt3dadd( -42.246, 98.4398, -4.14069, 0.37 ) }
    dend_15 { pt3dadd( -42.594, 99.4361, -4.27788, 0.37 ) }
    dend_15 { pt3dadd( -42.8275, 100.364, -4.41733, 0.88 ) }
    dend_15 { pt3dadd( -42.9462, 100.88, -4.48565, 0.88 ) }
    dend_15 { pt3dadd( -43.2093, 101.905, -4.61561, 0.37 ) }
    dend_15 { pt3dadd( -43.4547, 102.658, -4.70113, 0.29 ) }
    dend_15 { pt3dadd( -43.8812, 103.73, -4.79634, 0.81 ) }
    dend_15 { pt3dadd( -44.0782, 104.185, -4.79782, 1.18 ) }
    dend_15 { pt3dadd( -44.4309, 104.992, -4.73773, 1.18 ) }
    dend_15 { pt3dadd( -44.7415, 105.759, -4.64869, 0.59 ) }
    dend_15 { pt3dadd( -45.1212, 106.877, -4.51268, 0.44 ) }
    dend_15 { pt3dadd( -45.4002, 108.106, -4.39139, 0.44 ) }
    dend_15 { pt3dadd( -45.5491, 109.427, -4.31705, 1.11 ) }
    dend_15 { pt3dadd( -45.5643, 109.897, -4.31883, 1.11 ) }
    dend_15 { pt3dadd( -45.5514, 110.625, -4.36282, 0.81 ) }
    dend_15 { pt3dadd( -45.518, 111.738, -4.47135, 0.52 ) }
    dend_15 { pt3dadd( -45.5309, 112.594, -4.62398, 0.52 ) }
    dend_15 { pt3dadd( -45.6424, 113.382, -4.82847, 0.44 ) }
    dend_15 { pt3dadd( -45.8318, 114.035, -5.0293, 0.44 ) }
    dend_15 { pt3dadd( -46.0898, 114.659, -5.21369, 0.52 ) }
    dend_15 { pt3dadd( -46.3757, 115.23, -5.36992, 0.81 ) }
    dend_15 { pt3dadd( -46.9124, 116.224, -5.59357, 1.11 ) }
    dend_15 { pt3dadd( -47.2227, 116.777, -5.70713, 1.11 ) }
    dend_15 { pt3dadd( -47.6373, 117.552, -5.80965, 0.81 ) }
    dend_15 { pt3dadd( -48.055, 118.372, -5.87069, 0.37 ) }
    dend_15 { pt3dadd( -48.5325, 119.367, -5.88402, 0.37 ) }
    dend_15 { pt3dadd( -48.9852, 120.364, -5.83004, 0.29 ) }
    dend_15 { pt3dadd( -49.3014, 121.102, -5.71939, 0.88 ) }
    dend_15 { pt3dadd( -49.6963, 122.108, -5.51748, 1.55 ) }
    dend_15 { pt3dadd( -49.875, 122.61, -5.39919, 1.55 ) }
    dend_15 { pt3dadd( -50.1372, 123.398, -5.21277, 1.18 ) }
    dend_15 { pt3dadd( -50.4299, 124.276, -5.05627, 0.81 ) }
    dend_15 { pt3dadd( -50.8842, 125.578, -4.84741, 0.44 ) }
    dend_15 { pt3dadd( -51.3968, 126.925, -4.63816, 0.29 ) }
    dend_15 { pt3dadd( -51.7694, 127.752, -4.51442, 0.29 ) }
    dend_15 { pt3dadd( -52.2451, 128.691, -4.36312, 1.25 ) }
    dend_15 { pt3dadd( -52.9657, 129.884, -4.09913, 0.29 ) }
    dend_15 { pt3dadd( -53.7394, 130.961, -3.76684, 0.29 ) }
    dend_15 { pt3dadd( -54.3279, 131.655, -3.48812, 0.29 ) }
    dend_15 { pt3dadd( -54.9238, 132.276, -3.15624, 0.59 ) }
    dend_15 { pt3dadd( -55.234, 132.583, -2.96135, 0.88 ) }
    dend_15 { pt3dadd( -56.1679, 133.576, -2.2696, 0.44 ) }
    dend_15 { pt3dadd( -56.459, 133.953, -2.03396, 0.29 ) }
    dend_15 { pt3dadd( -56.7523, 134.465, -1.81809, 0.44 ) }
    dend_15 { pt3dadd( -56.9586, 134.979, -1.65612, 0.29 ) }
    dend_15 { pt3dadd( -57.1975, 135.985, -1.36341, 0.29 ) }
    dend_15 { pt3dadd( -57.2787, 136.69, -1.16129, 0.29 ) }
    dend_15 { pt3dadd( -57.3206, 137.45, -0.976873, 0.66 ) }
    dend_15 { pt3dadd( -57.3536, 137.908, -0.860153, 0.81 ) }
    dend_15 { pt3dadd( -57.416, 138.511, -0.698368, 0.81 ) }
    dend_15 { pt3dadd( -57.5718, 139.633, -0.40268, 0.29 ) }
    dend_15 { pt3dadd( -57.7417, 140.573, -0.168839, 0.37 ) }
    dend_15 { pt3dadd( -58.0811, 141.852, 0.145981, 0.37 ) }
    dend_15 { pt3dadd( -58.354, 142.622, 0.274064, 0.37 ) }
    dend_15 { pt3dadd( -58.7611, 143.653, 0.353246, 1.33 ) }
    dend_15 { pt3dadd( -58.9702, 144.161, 0.350357, 1.55 ) }
    dend_15 { pt3dadd( -59.1091, 144.511, 0.308, 1.55 ) }
    dend_15 { pt3dadd( -59.3013, 145.023, 0.196188, 1.18 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_15 { pt3dadd( -59.9138, 146.65, -0.308522, 0.37 ) }
    dend_15 { pt3dadd( -60.1853, 147.241, -0.581117, 0.59 ) }
    dend_15 { pt3dadd( -60.5135, 147.808, -0.947554, 0.59 ) }
    dend_15 { pt3dadd( -60.9095, 148.368, -1.40438, 0.29 ) }
    dend_15 { pt3dadd( -61.2738, 148.812, -1.92209, 0.29 ) }
    dend_15 { pt3dadd( -61.6524, 149.243, -2.52151, 0.29 ) }
    dend_15 { pt3dadd( -62.2242, 149.857, -3.46137, 0.59 ) }
    dend_15 { pt3dadd( -62.4959, 150.149, -3.91613, 0.59 ) }
    dend_15 { pt3dadd( -63.2689, 151.051, -5.29398, 0.88 ) }
    dend_15 { pt3dadd( -64.108, 152.264, -6.98121, 0.44 ) }
    dend_15 { pt3dadd( -64.4745, 153.013, -7.90199, 0.29 ) }
    dend_15 { pt3dadd( -64.5706, 153.274, -8.19861, 0.81 ) }
    dend_15 { pt3dadd( -64.654, 153.545, -8.47919, 1.11 ) }
    dend_15 { pt3dadd( -64.8642, 154.224, -9.16324, 0.81 ) }
    dend_15 { pt3dadd( -65.2255, 155.103, -10.0828, 0.15 ) }
    dend_15 { pt3dadd( -65.4905, 155.501, -10.5726, 0.15 ) }
    dend_15 { pt3dadd( -65.7455, 155.774, -11.0682, 0.15 ) }
    dend_15 { pt3dadd( -65.9469, 155.972, -11.5331, 0.66 ) }
    dend_15 { pt3dadd( -66.0935, 156.12, -11.9315, 0.81 ) }
    dend_15 { pt3dadd( -66.567, 156.649, -13.2905, 0.15 ) }
    dend_15 { pt3dadd( -67.1987, 157.391, -15.0817, 0.66 ) }
    dend_15 { pt3dadd( -67.3632, 157.602, -15.5447, 0.96 ) }
    dend_15 { pt3dadd( -67.6715, 158.076, -16.4634, 0.81 ) }
    dend_15 { pt3dadd( -68.1986, 158.947, -18.0237, 0.29 ) }
    dend_15 { pt3dadd( -68.4666, 159.402, -18.755, 0.29 ) }
    dend_15 { pt3dadd( -68.8311, 159.991, -19.5879, 0.29 ) }
    dend_15 { pt3dadd( -69.4025, 160.654, -20.4913, 1.18 ) }
    dend_15 { pt3dadd( -69.7859, 160.993, -20.952, 1.18 ) }
    dend_15 { pt3dadd( -70.7023, 161.677, -21.8207, 0.37 ) }
    dend_15 { pt3dadd( -71.2107, 162.022, -22.2303, 0.37 ) }
    dend_15 { pt3dadd( -71.7711, 162.409, -22.6679, 0.88 ) }
    dend_15 { pt3dadd( -72.4769, 162.983, -23.2274, 0.96 ) }
    dend_15 { pt3dadd( -73.5004, 163.964, -24.0785, 0.44 ) }
    dend_15 { pt3dadd( -73.9788, 164.458, -24.4937, 0.66 ) }
    dend_15 { pt3dadd( -74.3803, 164.884, -24.8431, 0.37 ) }
    dend_15 { pt3dadd( -74.833, 165.322, -25.2355, 0.37 ) }
    dend_15 { pt3dadd( -75.5308, 165.992, -25.8562, 0.44 ) }
    dend_15 { pt3dadd( -76.1827, 166.646, -26.4462, 0.37 ) }
    dend_15 { pt3dadd( -77.1487, 167.599, -27.3045, 0.66 ) }
    dend_15 { pt3dadd( -77.6372, 168.007, -27.7095, 0.66 ) }
    dend_15 { pt3dadd( -78.3573, 168.479, -28.2699, 0.29 ) }
    dend_15 { pt3dadd( -79.0479, 168.815, -28.7455, 0.52 ) }
    dend_15 { pt3dadd( -79.6456, 169.045, -29.1097, 0.59 ) }
    dend_15 { pt3dadd( -80.6053, 169.386, -29.6725, 0.29 ) }
    dend_15 { pt3dadd( -81.3164, 169.655, -30.1147, 0.29 ) }
    dend_15 { pt3dadd( -82.2607, 170.05, -30.6907, 0.29 ) }
    dend_15 { pt3dadd( -82.9669, 170.358, -31.145, 0.44 ) }
    dend_15 { pt3dadd( -83.4471, 170.54, -31.4517, 0.74 ) }
    dend_15 { pt3dadd( -84.1871, 170.821, -31.9056, 0.74 ) }
    dend_15 { pt3dadd( -85.1705, 171.195, -32.47, 1.11 ) }
    dend_15 { pt3dadd( -85.8524, 171.483, -32.8496, 1.62 ) }
    dend_15 { pt3dadd( -87.2273, 172.1, -33.57, 0.88 ) }
    dend_15 { pt3dadd( -88.3042, 172.575, -34.1238, 0.37 ) }
    dend_15 { pt3dadd( -89.2323, 172.952, -34.5929, 0.29 ) }
    dend_15 { pt3dadd( -89.9161, 173.2, -34.9225, 0.29 ) }
    dend_15 { pt3dadd( -90.438, 173.382, -35.148, 0.81 ) }
    dend_15 { pt3dadd( -90.8504, 173.527, -35.3121, 1.18 ) }
    dend_15 { pt3dadd( -91.3558, 173.731, -35.4713, 0.88 ) }
    dend_15 { pt3dadd( -92.3664, 174.272, -35.7865, 0.29 ) }
    dend_15 { pt3dadd( -92.8829, 174.651, -36.0141, 0.29 ) }
    dend_15 { pt3dadd( -93.354, 175.115, -36.2714, 0.59 ) }
    dend_15 { pt3dadd( -93.5657, 175.366, -36.4388, 0.88 ) }
    dend_15 { pt3dadd( -93.7796, 175.676, -36.685, 0.59 ) }
    dend_15 { pt3dadd( -93.9969, 176.044, -37.1144, 0.37 ) }
    dend_15 { pt3dadd( -94.3271, 176.646, -38.0286, 0.37 ) }
    dend_15 { pt3dadd( -94.5097, 176.964, -38.5953, 0.74 ) }
    dend_15 { pt3dadd( -94.8778, 177.542, -39.7775, 0.52 ) }
    dend_15 { pt3dadd( -95.1823, 177.975, -40.7442, 1.11 ) }
    dend_15 { pt3dadd( -96.0301, 178.979, -43.3201, 1.25 ) }
    dend_15 { pt3dadd( -96.6566, 179.602, -45.177, 0.66 ) }
    dend_15 { pt3dadd( -97.1192, 179.981, -46.4727, 0.44 ) }
    dend_15 { pt3dadd( -97.6674, 180.355, -47.9252, 1.03 ) }
    dend_15 { pt3dadd( -98.1821, 180.631, -49.1295, 1.03 ) }
    dend_15 { pt3dadd( -99.2419, 181.008, -51.2549, 0.29 ) }
    dend_15 { pt3dadd( -99.8675, 181.131, -52.2996, 0.29 ) }
    dend_15 { pt3dadd( -100.357, 181.192, -53.0292, 1.25 ) }
    dend_15 { pt3dadd( -100.528, 181.215, -53.2629, 1.69 ) }
    dend_15 { pt3dadd( -100.944, 181.284, -53.7937, 1.69 ) }
    dend_15 { pt3dadd( -102.094, 181.531, -55.141, 0.29 ) }
    dend_15 { pt3dadd( -102.975, 181.821, -56.1015, 0.29 ) }
    dend_15 { pt3dadd( -103.447, 182.039, -56.6185, 0.29 ) }
    dend_15 { pt3dadd( -104.081, 182.401, -57.3534, 0.29 ) }
    dend_15 { pt3dadd( -104.748, 182.791, -58.1437, 0.81 ) }
    dend_15 { pt3dadd( -105.136, 183.018, -58.586, 0.88 ) }
    dend_15 { pt3dadd( -105.925, 183.471, -59.4049, 0.29 ) }
    dend_15 { pt3dadd( -106.712, 183.866, -60.1776, 0.81 ) }
    dend_15 { pt3dadd( -107.108, 184.024, -60.5424, 0.81 ) }
    dend_15 { pt3dadd( -107.72, 184.23, -61.0878, 0.22 ) }
    dend_15 { pt3dadd( -108.108, 184.378, -61.4117, 0.52 ) }
    dend_15 { pt3dadd( -108.276, 184.449, -61.5543, 0.59 ) }
    dend_15 { pt3dadd( -109.154, 184.77, -62.1827, 0.22 ) }
    dend_15 { pt3dadd( -109.486, 184.85, -62.3905, 0.29 ) }
    // Section: dend_12, id: dend_12, parent: dend_4 (entry count 92/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -59.3172, 122.427, -89.6859, 0.52 ) }
    dend_12 { pt3dadd( -58.6596, 123.934, -90.4958, 0.52 ) }
    dend_12 { pt3dadd( -58.2259, 125.005, -91.0816, 0.81 ) }
    dend_12 { pt3dadd( -57.9322, 125.747, -91.5493, 0.59 ) }
    dend_12 { pt3dadd( -57.2429, 127.308, -92.5981, 0.96 ) }
    dend_12 { pt3dadd( -56.7839, 128.268, -93.3003, 0.96 ) }
    dend_12 { pt3dadd( -56.2465, 129.407, -94.1489, 0.52 ) }
    dend_12 { pt3dadd( -55.9291, 130.123, -94.7479, 0.52 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_12 { pt3dadd( -55.3906, 131.347, -95.8741, 0.52 ) }
    dend_12 { pt3dadd( -55.0636, 132.088, -96.5501, 0.52 ) }
    dend_12 { pt3dadd( -54.6482, 133.041, -97.3247, 0.66 ) }
    dend_12 { pt3dadd( -54.4158, 133.679, -97.8215, 0.96 ) }
    dend_12 { pt3dadd( -54.1467, 134.541, -98.4603, 0.96 ) }
    dend_12 { pt3dadd( -53.9057, 135.583, -99.2358, 0.37 ) }
    dend_12 { pt3dadd( -53.7695, 136.526, -99.8883, 0.37 ) }
    dend_12 { pt3dadd( -53.7031, 137.455, -100.509, 0.37 ) }
    dend_12 { pt3dadd( -53.6622, 139.227, -101.709, 0.44 ) }
    dend_12 { pt3dadd( -53.6631, 139.599, -101.98, 0.74 ) }
    dend_12 { pt3dadd( -53.6719, 140.443, -102.6, 0.74 ) }
    dend_12 { pt3dadd( -53.7046, 141.24, -103.193, 0.37 ) }
    dend_12 { pt3dadd( -53.7054, 141.955, -103.739, 0.37 ) }
    dend_12 { pt3dadd( -53.6132, 142.801, -104.331, 0.37 ) }
    dend_12 { pt3dadd( -53.4359, 143.433, -104.695, 0.37 ) }
    dend_12 { pt3dadd( -53.0969, 144.425, -105.258, 0.37 ) }
    dend_12 { pt3dadd( -52.9827, 144.701, -105.403, 0.81 ) }
    dend_12 { pt3dadd( -52.5972, 145.486, -105.806, 0.37 ) }
    dend_12 { pt3dadd( -52.2413, 146.092, -106.11, 0.37 ) }
    dend_12 { pt3dadd( -51.7285, 146.875, -106.425, 0.66 ) }
    dend_12 { pt3dadd( -51.3602, 147.444, -106.643, 0.66 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( -59.3172, 122.427, -89.6859, 0.44 ) }
    dend_5 { pt3dadd( -59.4576, 123.479, -89.6339, 0.44 ) }
    dend_5 { pt3dadd( -59.6986, 124.293, -89.6219, 0.37 ) }
    dend_5 { pt3dadd( -60.0147, 125.048, -89.6413, 0.88 ) }
    dend_5 { pt3dadd( -60.2121, 125.458, -89.6818, 0.88 ) }
    dend_5 { pt3dadd( -60.5525, 126.118, -89.7765, 0.52 ) }
    dend_5 { pt3dadd( -60.8947, 126.794, -90.0244, 0.29 ) }
    dend_5 { pt3dadd( -61.3246, 127.569, -90.4704, 0.22 ) }
    dend_5 { pt3dadd( -61.5834, 127.992, -90.7611, 0.22 ) }
    dend_5 { pt3dadd( -61.9895, 128.609, -91.2345, 0.88 ) }
    dend_5 { pt3dadd( -62.2662, 129.025, -91.5877, 1.25 ) }
    dend_5 { pt3dadd( -63.4054, 130.805, -93.2749, 0.44 ) }
    dend_5 { pt3dadd( -63.792, 131.477, -93.9686, 0.96 ) }
    dend_5 { pt3dadd( -63.9287, 131.762, -94.2864, 1.18 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 35/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -30.6701, 5.27922, -7.05682, 0.81 ) }
    dend_3 { pt3dadd( -31.3746, 5.08481, -8.70681, 0.81 ) }
    dend_3 { pt3dadd( -31.7357, 5.02108, -9.42936, 0.81 ) }
    dend_3 { pt3dadd( -34.0611, 4.87727, -13.3165, 1.62 ) }
    dend_3 { pt3dadd( -35.7531, 4.95372, -15.7186, 0.66 ) }
    dend_3 { pt3dadd( -36.7978, 5.04791, -17.0376, 0.66 ) }
    dend_3 { pt3dadd( -37.4949, 5.09566, -17.8512, 0.88 ) }
    dend_3 { pt3dadd( -38.3082, 5.16887, -18.6699, 0.96 ) }
    dend_3 { pt3dadd( -39.6522, 5.24189, -19.822, 0.81 ) }
    dend_3 { pt3dadd( -41.0, 5.15419, -20.6284, 0.52 ) }
    dend_3 { pt3dadd( -42.1863, 4.85646, -21.2666, 0.52 ) }
    dend_3 { pt3dadd( -43.4646, 4.23088, -21.9583, 0.74 ) }
    dend_3 { pt3dadd( -44.5936, 3.39931, -22.5655, 1.11 ) }
    dend_3 { pt3dadd( -44.9569, 3.03768, -22.7442, 1.25 ) }
    dend_3 { pt3dadd( -45.7316, 2.08458, -23.1104, 0.96 ) }
    dend_3 { pt3dadd( -46.6538, 0.837681, -23.5225, 0.66 ) }
    dend_3 { pt3dadd( -47.5211, -0.318468, -23.889, 0.88 ) }
    dend_3 { pt3dadd( -48.4271, -1.43661, -24.2718, 0.81 ) }
    dend_3 { pt3dadd( -49.3875, -2.51459, -24.7207, 0.96 ) }
    dend_3 { pt3dadd( -50.1447, -3.32284, -25.139, 1.18 ) }
    dend_3 { pt3dadd( -50.9762, -4.21685, -25.6802, 1.11 ) }
    dend_3 { pt3dadd( -51.6761, -5.0034, -26.2452, 1.18 ) }
    dend_3 { pt3dadd( -52.3711, -5.82099, -26.9514, 1.33 ) }
    dend_3 { pt3dadd( -53.4835, -7.09681, -28.2026, 0.66 ) }
    dend_3 { pt3dadd( -54.3084, -7.96664, -29.1281, 0.88 ) }
    dend_3 { pt3dadd( -54.9925, -8.62591, -29.8473, 0.88 ) }
    dend_3 { pt3dadd( -56.1122, -9.60742, -30.9424, 0.59 ) }
    dend_3 { pt3dadd( -56.7935, -10.1159, -31.5059, 0.59 ) }
    dend_3 { pt3dadd( -57.4058, -10.4456, -31.8754, 0.81 ) }
    dend_3 { pt3dadd( -58.4025, -10.7568, -32.1332, 1.33 ) }
    dend_3 { pt3dadd( -59.2743, -10.9437, -32.1517, 1.4 ) }
    dend_3 { pt3dadd( -59.8421, -11.0845, -32.0841, 1.25 ) }
    dend_3 { pt3dadd( -60.9518, -11.4994, -31.8178, 0.52 ) }
    dend_3 { pt3dadd( -61.5813, -11.8695, -31.6532, 0.52 ) }
    dend_3 { pt3dadd( -62.3699, -12.579, -31.529, 0.66 ) }
    dend_3 { pt3dadd( -63.062, -13.3815, -31.4924, 0.81 ) }
    dend_3 { pt3dadd( -63.8019, -14.3073, -31.5044, 0.81 ) }
    dend_3 { pt3dadd( -64.2826, -14.9472, -31.5792, 1.11 ) }
    dend_3 { pt3dadd( -64.6716, -15.519, -31.7064, 1.33 ) }
    dend_3 { pt3dadd( -65.2248, -16.3824, -32.0213, 1.33 ) }
    dend_3 { pt3dadd( -65.5116, -16.8468, -32.279, 1.33 ) }
    dend_3 { pt3dadd( -66.0748, -17.7642, -32.9898, 0.81 ) }
    dend_3 { pt3dadd( -66.6996, -18.7673, -33.8933, 0.52 ) }
    dend_3 { pt3dadd( -67.1771, -19.5088, -34.6044, 0.74 ) }
    dend_3 { pt3dadd( -67.8692, -20.5593, -35.6222, 0.96 ) }
    dend_3 { pt3dadd( -68.4232, -21.3651, -36.3721, 0.81 ) }
    dend_3 { pt3dadd( -69.2075, -22.4229, -37.3557, 0.66 ) }
    dend_3 { pt3dadd( -69.8819, -23.2677, -38.0929, 0.59 ) }
    dend_3 { pt3dadd( -70.3653, -23.8278, -38.5246, 1.03 ) }
    dend_3 { pt3dadd( -70.766, -24.3007, -38.8395, 1.25 ) }
    dend_3 { pt3dadd( -71.3367, -25.0378, -39.2268, 1.25 ) }
    dend_3 { pt3dadd( -72.1413, -26.2523, -39.846, 0.81 ) }
    dend_3 { pt3dadd( -72.5581, -27.0192, -40.2665, 0.52 ) }
    dend_3 { pt3dadd( -73.1421, -28.1025, -41.0536, 0.52 ) }
    dend_3 { pt3dadd( -73.583, -28.8334, -41.6529, 0.44 ) }
    dend_3 { pt3dadd( -73.8473, -29.232, -42.0191, 0.44 ) }
    dend_3 { pt3dadd( -74.6422, -30.3932, -43.1435, 0.96 ) }
    dend_3 { pt3dadd( -74.98, -30.8723, -43.6111, 1.4 ) }
    dend_3 { pt3dadd( -75.8527, -31.9543, -44.8482, 0.88 ) }
    dend_3 { pt3dadd( -76.6227, -32.8547, -45.9037, 0.66 ) }
    dend_3 { pt3dadd( -77.709, -34.1567, -47.3642, 0.66 ) }
    dend_3 { pt3dadd( -78.4425, -35.1727, -48.4854, 0.59 ) }
    dend_3 { pt3dadd( -79.1559, -36.3689, -49.749, 1.77 ) }
    dend_3 { pt3dadd( -80.1156, -38.3561, -51.7426, 0.59 ) }
    dend_3 { pt3dadd( -80.4002, -39.0512, -52.3996, 0.74 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_3 { pt3dadd( -80.7223, -39.8528, -53.1385, 0.74 ) }
    dend_3 { pt3dadd( -81.516, -41.6238, -54.665, 0.59 ) }
    dend_3 { pt3dadd( -81.9287, -42.4133, -55.2803, 0.59 ) }
    dend_3 { pt3dadd( -82.3887, -43.2138, -55.7999, 0.74 ) }
    dend_3 { pt3dadd( -83.0859, -44.3522, -56.3679, 0.74 ) }
    dend_3 { pt3dadd( -83.7767, -45.3171, -56.8104, 0.74 ) }
    dend_3 { pt3dadd( -84.5723, -46.3335, -57.3582, 0.52 ) }
    dend_3 { pt3dadd( -85.3067, -47.1589, -57.8145, 0.37 ) }
    dend_3 { pt3dadd( -85.7279, -47.5993, -58.1095, 1.11 ) }
    dend_3 { pt3dadd( -86.0121, -47.8614, -58.3345, 1.11 ) }
    dend_3 { pt3dadd( -86.5289, -48.2846, -58.7742, 0.96 ) }
    dend_3 { pt3dadd( -88.7651, -49.8008, -60.6256, 0.59 ) }
    dend_3 { pt3dadd( -89.3311, -50.0926, -61.0212, 0.52 ) }
    dend_3 { pt3dadd( -89.9085, -50.3024, -61.4287, 0.81 ) }
    dend_3 { pt3dadd( -90.8474, -50.5964, -62.0863, 0.81 ) }
    dend_3 { pt3dadd( -91.681, -50.8304, -62.6532, 1.11 ) }
    dend_3 { pt3dadd( -92.579, -51.0872, -63.2257, 1.25 ) }
    dend_3 { pt3dadd( -93.4535, -51.3656, -63.7059, 0.96 ) }
    dend_3 { pt3dadd( -95.3842, -52.1507, -64.9327, 0.52 ) }
    dend_3 { pt3dadd( -96.2036, -52.5701, -65.504, 0.52 ) }
    dend_3 { pt3dadd( -96.8503, -53.0152, -65.9978, 0.81 ) }
    dend_3 { pt3dadd( -97.4825, -53.6325, -66.5647, 0.88 ) }
    dend_3 { pt3dadd( -97.7969, -54.0681, -66.9093, 1.03 ) }
    dend_3 { pt3dadd( -98.2088, -54.8189, -67.4255, 0.88 ) }
    dend_3 { pt3dadd( -98.5782, -55.6445, -67.9019, 0.44 ) }
    dend_3 { pt3dadd( -98.9503, -56.5902, -68.4185, 0.44 ) }
    dend_3 { pt3dadd( -99.5532, -58.5346, -69.4402, 1.33 ) }
    dend_3 { pt3dadd( -100.11, -60.56, -70.4852, 0.59 ) }
    dend_3 { pt3dadd( -100.303, -61.2886, -70.8848, 1.03 ) }
    dend_3 { pt3dadd( -100.441, -61.8167, -71.1794, 1.18 ) }
    dend_3 { pt3dadd( -100.655, -62.5961, -71.6325, 0.81 ) }
    dend_3 { pt3dadd( -101.125, -64.0368, -72.4763, 0.59 ) }
    dend_3 { pt3dadd( -101.506, -64.9658, -73.0309, 0.37 ) }
    dend_3 { pt3dadd( -102.226, -66.338, -73.9817, 0.37 ) }
    dend_3 { pt3dadd( -102.449, -66.6623, -74.2478, 0.96 ) }
    dend_3 { pt3dadd( -102.645, -66.8944, -74.4605, 1.25 ) }
    dend_3 { pt3dadd( -102.931, -67.1644, -74.7311, 1.25 ) }
    dend_3 { pt3dadd( -104.065, -68.0368, -75.6181, 0.52 ) }
    dend_3 { pt3dadd( -104.859, -68.6065, -76.1469, 0.52 ) }
    dend_3 { pt3dadd( -105.744, -69.226, -76.6114, 0.52 ) }
    dend_3 { pt3dadd( -105.994, -69.395, -76.7345, 1.18 ) }
    dend_3 { pt3dadd( -106.42, -69.6811, -76.9854, 1.18 ) }
    dend_3 { pt3dadd( -106.803, -69.9462, -77.222, 1.18 ) }
    dend_3 { pt3dadd( -107.435, -70.4112, -77.5381, 0.88 ) }
    dend_3 { pt3dadd( -108.678, -71.2888, -78.3228, 0.44 ) }
    dend_3 { pt3dadd( -108.855, -71.4118, -78.4687, 0.81 ) }
    dend_3 { pt3dadd( -110.657, -72.6537, -80.1309, 0.52 ) }
    dend_3 { pt3dadd( -111.28, -73.0994, -80.7646, 0.81 ) }
    dend_3 { pt3dadd( -112.354, -73.9007, -81.9075, 0.44 ) }
    dend_3 { pt3dadd( -114.13, -75.3102, -83.9287, 0.74 ) }
    dend_3 { pt3dadd( -114.903, -75.9634, -84.8178, 0.44 ) }
    dend_3 { pt3dadd( -115.266, -76.3045, -85.218, 1.33 ) }
    dend_3 { pt3dadd( -115.51, -76.5728, -85.4922, 1.33 ) }
    dend_3 { pt3dadd( -116.017, -77.1656, -86.1186, 0.74 ) }
    dend_3 { pt3dadd( -116.947, -78.2204, -87.2751, 0.44 ) }
    dend_3 { pt3dadd( -117.22, -78.5182, -87.5437, 0.74 ) }
    dend_3 { pt3dadd( -117.681, -78.9436, -87.9961, 0.74 ) }
    dend_3 { pt3dadd( -118.781, -79.6143, -89.1871, 0.37 ) }
    dend_3 { pt3dadd( -119.263, -79.7194, -89.7387, 0.37 ) }
    dend_3 { pt3dadd( -119.798, -79.6413, -90.3937, 0.66 ) }
    dend_3 { pt3dadd( -120.195, -79.5131, -90.861, 0.88 ) }
    dend_3 { pt3dadd( -120.548, -79.3846, -91.2656, 0.88 ) }
    dend_3 { pt3dadd( -121.614, -79.0305, -92.4387, 0.59 ) }
    dend_3 { pt3dadd( -122.218, -78.8701, -93.0276, 0.29 ) }
    dend_3 { pt3dadd( -122.775, -78.803, -93.5329, 0.29 ) }
    dend_3 { pt3dadd( -123.828, -78.8701, -94.3916, 0.96 ) }
    dend_3 { pt3dadd( -124.092, -78.934, -94.5741, 1.18 ) }
    dend_3 { pt3dadd( -125.426, -79.5415, -95.4387, 0.59 ) }
    dend_3 { pt3dadd( -125.991, -79.9179, -95.8953, 0.81 ) }
    dend_3 { pt3dadd( -126.437, -80.2538, -96.3078, 0.81 ) }
    dend_3 { pt3dadd( -127.032, -80.703, -96.886, 0.37 ) }
    dend_3 { pt3dadd( -127.717, -81.223, -97.5769, 0.37 ) }
    dend_3 { pt3dadd( -128.741, -82.0086, -98.6638, 1.11 ) }
    dend_3 { pt3dadd( -130.732, -83.5676, -100.793, 0.52 ) }
    dend_3 { pt3dadd( -131.086, -83.8475, -101.183, 0.52 ) }
    dend_3 { pt3dadd( -131.844, -84.4239, -102.018, 0.44 ) }
    dend_3 { pt3dadd( -132.241, -84.7, -102.477, 1.47 ) }
    dend_3 { pt3dadd( -133.983, -85.7636, -104.538, 0.59 ) }
    dend_3 { pt3dadd( -134.477, -86.0233, -105.103, 0.88 ) }
    dend_3 { pt3dadd( -135.062, -86.3209, -105.817, 0.88 ) }
    dend_3 { pt3dadd( -136.128, -86.8375, -107.33, 0.52 ) }
    dend_3 { pt3dadd( -137.064, -87.2495, -108.779, 0.74 ) }
    dend_3 { pt3dadd( -137.453, -87.3859, -109.398, 0.96 ) }
    dend_3 { pt3dadd( -137.704, -87.463, -109.789, 0.96 ) }
    dend_3 { pt3dadd( -138.943, -87.893, -111.688, 0.29 ) }
    dend_3 { pt3dadd( -140.016, -88.2967, -113.44, 0.96 ) }
    dend_3 { pt3dadd( -140.373, -88.438, -114.014, 1.18 ) }
    dend_3 { pt3dadd( -141.532, -88.9429, -115.882, 0.37 ) }
    dend_3 { pt3dadd( -142.038, -89.1994, -116.729, 0.37 ) }
    dend_3 { pt3dadd( -142.414, -89.4, -117.365, 0.74 ) }
    dend_3 { pt3dadd( -144.319, -90.3491, -120.626, 0.88 ) }
    dend_3 { pt3dadd( -144.662, -90.4846, -121.218, 0.88 ) }
    dend_3 { pt3dadd( -145.658, -90.812, -122.948, 0.37 ) }
    dend_3 { pt3dadd( -146.033, -90.9198, -123.571, 0.37 ) }
    dend_3 { pt3dadd( -146.518, -91.0427, -124.326, 0.37 ) }
    dend_3 { pt3dadd( -147.184, -91.2173, -125.226, 0.37 ) }
    dend_3 { pt3dadd( -148.227, -91.5992, -126.343, 0.74 ) }
    dend_3 { pt3dadd( -149.852, -92.2892, -128.037, 0.44 ) }
    dend_3 { pt3dadd( -150.273, -92.4712, -128.428, 1.03 ) }
    dend_3 { pt3dadd( -150.678, -92.6764, -128.805, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    dend_3 { pt3dadd( -150.984, -92.8887, -129.1, 1.03 ) }
    dend_3 { pt3dadd( -151.814, -93.6745, -129.864, 0.44 ) }
    dend_3 { pt3dadd( -152.378, -94.3153, -130.353, 0.59 ) }
    dend_3 { pt3dadd( -153.009, -95.0138, -130.832, 0.37 ) }
    dend_3 { pt3dadd( -153.704, -95.7337, -131.384, 0.29 ) }
    dend_3 { pt3dadd( -154.079, -96.1021, -131.732, 0.44 ) }
    dend_3 { pt3dadd( -154.359, -96.3941, -132.026, 0.44 ) }
    dend_3 { pt3dadd( -155.221, -97.3351, -132.989, 0.29 ) }
    dend_3 { pt3dadd( -155.575, -97.727, -133.402, 0.52 ) }
    dend_3 { pt3dadd( -155.773, -97.924, -133.652, 0.74 ) }
    dend_3 { pt3dadd( -156.731, -98.5725, -134.809, 0.29 ) }
    dend_3 { pt3dadd( -157.134, -98.7915, -135.293, 0.88 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 12/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -30.6701, 5.27922, -7.05682, 0.88 ) }
    dend_2 { pt3dadd( -31.7659, 8.76074, -7.07105, 0.88 ) }
    dend_2 { pt3dadd( -32.3115, 10.3539, -6.95068, 0.52 ) }
    dend_2 { pt3dadd( -32.6686, 11.2767, -6.84351, 0.88 ) }
    dend_2 { pt3dadd( -33.3997, 12.96, -6.61174, 0.88 ) }
    dend_2 { pt3dadd( -34.7135, 15.6607, -6.20882, 0.52 ) }
    dend_2 { pt3dadd( -35.5564, 17.109, -5.98376, 0.52 ) }
    dend_2 { pt3dadd( -36.673, 18.7671, -5.57121, 0.44 ) }
    dend_2 { pt3dadd( -37.6131, 19.8671, -5.2806, 0.59 ) }
    dend_2 { pt3dadd( -38.6141, 20.8599, -4.96469, 0.74 ) }
    dend_2 { pt3dadd( -39.4634, 21.5758, -4.69376, 0.74 ) }
    dend_2 { pt3dadd( -41.4402, 22.994, -4.16804, 1.25 ) }
    dend_2 { pt3dadd( -42.0995, 23.4073, -4.03147, 1.25 ) }
    dend_2 { pt3dadd( -43.4664, 24.1224, -3.86433, 0.66 ) }
    dend_2 { pt3dadd( -45.1839, 24.9197, -3.77194, 0.81 ) }
    dend_2 { pt3dadd( -45.8935, 25.2156, -3.75371, 0.66 ) }
    dend_2 { pt3dadd( -47.5037, 25.8452, -3.75874, 0.88 ) }
    dend_2 { pt3dadd( -50.244, 26.841, -3.84693, 0.88 ) }
    dend_2 { pt3dadd( -51.3853, 27.2122, -3.91745, 0.66 ) }
    dend_2 { pt3dadd( -52.1159, 27.4176, -3.99484, 0.52 ) }
    dend_2 { pt3dadd( -53.6605, 27.7713, -4.17394, 1.03 ) }
    dend_2 { pt3dadd( -54.2744, 27.9274, -4.14102, 1.33 ) }
    dend_2 { pt3dadd( -54.7044, 28.0681, -4.04316, 1.55 ) }
    dend_2 { pt3dadd( -55.1319, 28.2336, -3.91276, 1.55 ) }
    dend_2 { pt3dadd( -55.8122, 28.5318, -3.71219, 1.33 ) }
    dend_2 { pt3dadd( -56.9458, 29.0898, -3.42049, 0.74 ) }
    dend_2 { pt3dadd( -58.2926, 29.8318, -3.11099, 0.59 ) }
    dend_2 { pt3dadd( -59.6464, 30.7474, -2.79371, 0.59 ) }
    dend_2 { pt3dadd( -60.5132, 31.477, -2.59117, 0.59 ) }
    dend_2 { pt3dadd( -60.9729, 31.9651, -2.47804, 1.11 ) }
    dend_2 { pt3dadd( -61.7519, 33.0589, -2.31347, 1.55 ) }
    dend_2 { pt3dadd( -62.0292, 33.6118, -2.27115, 1.77 ) }
    dend_2 { pt3dadd( -62.5944, 35.3697, -2.09732, 0.74 ) }
    dend_2 { pt3dadd( -62.8264, 36.4877, -1.94799, 0.96 ) }
    dend_2 { pt3dadd( -62.9514, 37.3472, -1.81077, 0.74 ) }
    dend_2 { pt3dadd( -63.1017, 38.5621, -1.57006, 0.52 ) }
    dend_2 { pt3dadd( -63.2203, 39.4819, -1.34928, 0.44 ) }
    dend_2 { pt3dadd( -63.7182, 42.0419, -0.586734, 0.88 ) }
    dend_2 { pt3dadd( -63.9024, 42.7694, -0.365254, 1.11 ) }
    dend_2 { pt3dadd( -64.0994, 43.4363, -0.179882, 1.11 ) }
    dend_2 { pt3dadd( -64.4759, 44.6251, 0.0998652, 0.74 ) }
    dend_2 { pt3dadd( -64.8518, 45.6948, 0.303233, 0.44 ) }
    dend_2 { pt3dadd( -65.3084, 46.8768, 0.391657, 0.29 ) }
    dend_2 { pt3dadd( -65.876, 48.2972, 0.315357, 0.59 ) }
    dend_2 { pt3dadd( -66.2274, 49.225, 0.259274, 0.44 ) }
    dend_2 { pt3dadd( -66.5744, 50.1915, 0.192356, 1.25 ) }
    dend_2 { pt3dadd( -66.7299, 50.6628, 0.1581, 1.25 ) }
    dend_2 { pt3dadd( -66.9158, 51.284, 0.141185, 0.81 ) }
    dend_2 { pt3dadd( -67.187, 52.1768, 0.173689, 0.29 ) }
    dend_2 { pt3dadd( -67.5497, 53.1712, 0.278138, 0.59 ) }
    dend_2 { pt3dadd( -67.7849, 53.7469, 0.332898, 0.74 ) }
    dend_2 { pt3dadd( -68.0167, 54.2422, 0.370726, 0.88 ) }
    dend_2 { pt3dadd( -68.338, 54.8487, 0.405332, 0.88 ) }
    dend_2 { pt3dadd( -68.7891, 55.6077, 0.428253, 0.44 ) }
    dend_2 { pt3dadd( -69.2435, 56.3224, 0.428253, 0.81 ) }
    dend_2 { pt3dadd( -69.6785, 56.9799, 0.428253, 0.81 ) }
    dend_2 { pt3dadd( -70.3546, 57.976, 0.428253, 0.37 ) }
    dend_2 { pt3dadd( -70.7615, 58.5684, 0.440357, 0.37 ) }
    dend_2 { pt3dadd( -71.5829, 59.7626, 0.512092, 0.29 ) }
    dend_2 { pt3dadd( -72.4477, 61.0098, 0.650472, 0.29 ) }
    dend_2 { pt3dadd( -72.7912, 61.5093, 0.726307, 0.29 ) }
    dend_2 { pt3dadd( -73.3266, 62.3046, 0.871107, 0.88 ) }
    dend_2 { pt3dadd( -73.6746, 62.8533, 0.984534, 1.18 ) }
    dend_2 { pt3dadd( -74.1875, 63.6885, 1.18162, 1.18 ) }
    dend_2 { pt3dadd( -74.6772, 64.4531, 1.40815, 0.59 ) }
    dend_2 { pt3dadd( -75.1779, 65.2029, 1.67872, 0.59 ) }
    dend_2 { pt3dadd( -75.6712, 65.9403, 1.96363, 0.52 ) }
    // Section: dend_65, id: dend_65, parent: dend_63 (entry count 79/100)
    dend_65 { pt3dclear() }
    dend_65 { pt3dadd( 33.5461, -118.34, 23.5721, 0.29 ) }
    dend_65 { pt3dadd( 32.9178, -119.145, 23.5721, 0.29 ) }
    dend_65 { pt3dadd( 32.2545, -119.996, 23.5721, 0.15 ) }
    dend_65 { pt3dadd( 31.9427, -120.395, 23.5721, 0.15 ) }
    dend_65 { pt3dadd( 31.2714, -121.256, 23.5721, 0.44 ) }
    dend_65 { pt3dadd( 30.8726, -121.767, 23.5721, 0.44 ) }
    dend_65 { pt3dadd( 30.3491, -122.438, 23.5721, 0.74 ) }
    dend_65 { pt3dadd( 25.1232, -131.326, 22.5547, 0.74 ) }
    dend_65 { pt3dadd( 20.3676, -140.523, 23.3768, 0.74 ) }
    dend_65 { pt3dadd( 17.3849, -150.535, 23.7939, 0.74 ) }
    dend_65 { pt3dadd( 15.2524, -160.787, 23.449, 0.74 ) }
    dend_65 { pt3dadd( 14.5185, -171.015, 21.3086, 0.74 ) }
    dend_65 { pt3dadd( 15.7886, -180.813, 17.9461, 0.74 ) }
    dend_65 { pt3dadd( 17.974, -190.058, 13.7395, 0.74 ) }
    dend_65 { pt3dadd( 19.5477, -199.773, 10.2857, 0.74 ) }
    dend_65 { pt3dadd( 19.358, -209.738, 7.14174, 0.74 ) }
    dend_65 { pt3dadd( 19.893, -219.177, 2.79296, 0.74 ) }
    dend_65 { pt3dadd( 20.8149, -228.573, -1.57361, 0.74 ) }
    dend_65 { pt3dadd( 21.1807, -238.682, -4.25281, 0.74 ) }
    dend_65 { pt3dadd( 20.1849, -248.741, -6.94328, 0.74 ) }
    // Section: dend_64, id: dend_64, parent: dend_63 (entry count 99/100)
    dend_64 { pt3dclear() }
    dend_64 { pt3dadd( 33.5461, -118.34, 23.5721, 0.22 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_64 { pt3dadd( 34.368, -117.834, 23.5591, 0.22 ) }
    dend_64 { pt3dadd( 35.2892, -117.268, 23.5445, 0.59 ) }
    dend_64 { pt3dadd( 35.6699, -117.033, 23.5385, 0.59 ) }
    dend_64 { pt3dadd( 36.4757, -116.538, 23.5257, 0.37 ) }
    dend_64 { pt3dadd( 37.0125, -116.208, 23.5172, 0.37 ) }
    dend_64 { pt3dadd( 46.1071, -112.019, 24.6898, 0.37 ) }
    dend_64 { pt3dadd( 54.1973, -105.848, 24.6244, 0.37 ) }
    dend_64 { pt3dadd( 62.7188, -100.506, 25.8521, 0.37 ) }
    dend_64 { pt3dadd( 70.9801, -95.3638, 28.6388, 0.37 ) }
    dend_64 { pt3dadd( 78.3554, -89.1861, 31.954, 0.37 ) }
    dend_64 { pt3dadd( 84.7859, -83.0254, 36.8756, 0.37 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 11/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( 6.2068, -43.4264, 28.5595, 0.52 ) }
    dend_60 { pt3dadd( 5.51719, -44.3678, 28.3098, 0.52 ) }
    dend_60 { pt3dadd( 4.88971, -45.2244, 28.0827, 0.52 ) }
    dend_60 { pt3dadd( 4.25807, -46.0866, 27.854, 0.44 ) }
    dend_60 { pt3dadd( 3.81438, -46.6923, 27.6934, 0.29 ) }
    dend_60 { pt3dadd( 3.41982, -47.2309, 27.5506, 0.74 ) }
    dend_60 { pt3dadd( -2.69557, -55.364, 25.9366, 0.74 ) }
    dend_60 { pt3dadd( -8.68225, -63.572, 24.1896, 0.74 ) }
    dend_60 { pt3dadd( -14.8129, -71.2462, 21.1902, 0.74 ) }
    dend_60 { pt3dadd( -21.6504, -78.228, 18.1843, 0.74 ) }
    dend_60 { pt3dadd( -29.0626, -83.9994, 14.3312, 0.74 ) }
    dend_60 { pt3dadd( -37.2829, -88.6058, 10.7005, 0.74 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 23/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( 6.2068, -43.4264, 28.5595, 0.29 ) }
    dend_59 { pt3dadd( 6.99492, -43.5563, 27.8989, 0.29 ) }
    dend_59 { pt3dadd( 8.2816, -43.6758, 26.9127, 0.29 ) }
    dend_59 { pt3dadd( 8.85194, -43.6889, 26.5053, 0.44 ) }
    dend_59 { pt3dadd( 9.725, -43.6306, 25.8943, 0.44 ) }
    dend_59 { pt3dadd( 10.4531, -43.4988, 25.3878, 0.37 ) }
    dend_59 { pt3dadd( 10.9182, -43.3624, 25.0547, 0.22 ) }
    dend_59 { pt3dadd( 11.2466, -43.0689, 24.8179, 0.59 ) }
    dend_59 { pt3dadd( 11.3497, -42.6352, 24.7251, 0.74 ) }
    dend_59 { pt3dadd( 11.2835, -41.6474, 24.6592, 0.22 ) }
    dend_59 { pt3dadd( 11.054, -40.7261, 24.6733, 0.22 ) }
    dend_59 { pt3dadd( 10.6323, -39.6014, 24.7324, 0.22 ) }
    dend_59 { pt3dadd( 10.1044, -38.5341, 24.7965, 0.81 ) }
    dend_59 { pt3dadd( 16.5524, -32.3182, 19.9613, 0.81 ) }
    dend_59 { pt3dadd( 22.6797, -25.1734, 15.9422, 0.81 ) }
    // Section: dend_47, id: dend_47, parent: dend_41 (entry count 38/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 2.27554, -178.368, 16.5184, 0.37 ) }
    dend_47 { pt3dadd( 10.9049, -183.483, 15.1738, 0.37 ) }
    dend_47 { pt3dadd( 18.8347, -189.68, 13.6618, 0.37 ) }
    dend_47 { pt3dadd( 27.1623, -195.074, 11.5971, 0.37 ) }
    dend_47 { pt3dadd( 35.3179, -200.824, 9.72808, 0.37 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 43/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 2.27554, -178.368, 16.5184, 0.22 ) }
    dend_42 { pt3dadd( 10.5847, -183.68, 18.8348, 0.37 ) }
    dend_42 { pt3dadd( 18.0999, -189.435, 22.5068, 0.37 ) }
    dend_42 { pt3dadd( 25.5296, -196.21, 24.2862, 0.37 ) }
    // Section: dend_39, id: dend_39, parent: dend_35 (entry count 47/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -56.5161, -173.17, 5.16228, 0.37 ) }
    dend_39 { pt3dadd( -53.9826, -183.048, 2.90779, 0.37 ) }
    dend_39 { pt3dadd( -50.4621, -192.408, 0.0568766, 0.37 ) }
    dend_39 { pt3dadd( -48.1627, -202.516, -1.37173, 0.37 ) }
    dend_39 { pt3dadd( -44.95, -212.153, -3.70407, 0.37 ) }
    dend_39 { pt3dadd( -42.0012, -222.156, -4.45201, 0.37 ) }
    dend_39 { pt3dadd( -37.9686, -231.696, -5.53617, 0.37 ) }
    dend_39 { pt3dadd( -33.7791, -241.215, -6.04701, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 55/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -56.5161, -173.17, 5.16228, 0.22 ) }
    dend_36 { pt3dadd( -53.5023, -183.151, 4.41799, 0.37 ) }
    dend_36 { pt3dadd( -48.8617, -192.451, 4.55121, 0.37 ) }
    dend_36 { pt3dadd( -45.3701, -202.115, 2.79143, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_16 (entry count 59/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 98.6599, 301.43, -41.6849, 0.37 ) }
    dend_24 { pt3dadd( 99.8144, 302.813, -41.2275, 0.37 ) }
    dend_24 { pt3dadd( 100.269, 303.252, -41.1018, 0.37 ) }
    dend_24 { pt3dadd( 101.062, 303.845, -40.9548, 0.29 ) }
    dend_24 { pt3dadd( 101.639, 304.196, -40.8616, 0.29 ) }
    dend_24 { pt3dadd( 102.389, 304.613, -40.725, 0.74 ) }
    dend_24 { pt3dadd( 103.087, 305.026, -40.5821, 0.96 ) }
    dend_24 { pt3dadd( 103.634, 305.341, -40.499, 0.52 ) }
    dend_24 { pt3dadd( 104.521, 305.892, -40.3599, 0.44 ) }
    dend_24 { pt3dadd( 105.372, 306.478, -40.1905, 0.37 ) }
    dend_24 { pt3dadd( 105.841, 306.921, -40.0615, 0.29 ) }
    dend_24 { pt3dadd( 106.348, 307.593, -39.8757, 0.29 ) }
    dend_24 { pt3dadd( 106.649, 308.098, -39.7563, 0.29 ) }
    dend_24 { pt3dadd( 107.143, 308.912, -39.5829, 0.74 ) }
    dend_24 { pt3dadd( 107.697, 309.746, -39.4253, 1.11 ) }
    dend_24 { pt3dadd( 108.237, 310.469, -39.3143, 1.11 ) }
    dend_24 { pt3dadd( 108.762, 311.074, -39.2365, 0.81 ) }
    dend_24 { pt3dadd( 109.851, 312.169, -39.105, 0.37 ) }
    dend_24 { pt3dadd( 110.781, 313.043, -39.0053, 0.37 ) }
    dend_24 { pt3dadd( 111.392, 313.61, -38.9198, 0.37 ) }
    dend_24 { pt3dadd( 111.918, 314.122, -38.852, 0.37 ) }
    dend_24 { pt3dadd( 112.244, 314.462, -38.8042, 1.03 ) }
    dend_24 { pt3dadd( 112.767, 315.073, -38.6975, 1.33 ) }
    dend_24 { pt3dadd( 113.009, 315.396, -38.6179, 1.33 ) }
    dend_24 { pt3dadd( 113.914, 316.838, -38.1047, 0.29 ) }
    dend_24 { pt3dadd( 114.455, 317.816, -37.6842, 0.29 ) }
    dend_24 { pt3dadd( 114.997, 318.874, -37.1832, 0.88 ) }
    dend_24 { pt3dadd( 115.305, 319.532, -36.8626, 0.88 ) }
    dend_24 { pt3dadd( 115.747, 320.528, -36.3815, 0.74 ) }
    dend_24 { pt3dadd( 116.44, 322.044, -35.7009, 0.66 ) }
    dend_24 { pt3dadd( 116.776, 322.798, -35.4393, 0.74 ) }
    dend_24 { pt3dadd( 117.218, 323.882, -35.1788, 0.44 ) }
    dend_24 { pt3dadd( 117.504, 324.707, -35.1104, 0.44 ) }
    dend_24 { pt3dadd( 117.81, 325.744, -35.1941, 0.37 ) }
    dend_24 { pt3dadd( 118.243, 327.464, -35.5613, 0.37 ) }
    dend_24 { pt3dadd( 118.602, 328.904, -36.0031, 0.37 ) }
    dend_24 { pt3dadd( 118.886, 330.103, -36.4313, 0.37 ) }
    dend_24 { pt3dadd( 119.157, 331.529, -37.0179, 1.77 ) }
    dend_24 { pt3dadd( 119.252, 332.337, -37.3876, 1.77 ) }
    dend_24 { pt3dadd( 119.244, 333.015, -37.7279, 1.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 99/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 98.6599, 301.43, -41.6849, 1.11 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_19()
}

proc basic_shape_19() {
    dend_17 { pt3dadd( 99.5541, 302.709, -44.0689, 1.11 ) }
    dend_17 { pt3dadd( 100.562, 303.844, -46.4745, 0.74 ) }
    dend_17 { pt3dadd( 101.088, 304.239, -47.64, 0.29 ) }
    dend_17 { pt3dadd( 101.641, 304.627, -48.9601, 0.44 ) }
    dend_17 { pt3dadd( 102.18, 305.089, -50.4027, 0.37 ) }
    dend_17 { pt3dadd( 102.834, 305.761, -52.2233, 0.74 ) }
    dend_17 { pt3dadd( 103.089, 306.117, -52.9484, 0.88 ) }
    dend_17 { pt3dadd( 103.767, 306.981, -54.6872, 0.29 ) }
    dend_17 { pt3dadd( 104.375, 307.651, -56.0872, 0.44 ) }
    dend_17 { pt3dadd( 105.088, 308.34, -57.4411, 0.29 ) }
    dend_17 { pt3dadd( 105.537, 308.786, -58.2478, 0.96 ) }
    dend_17 { pt3dadd( 105.925, 309.229, -58.8659, 1.25 ) }
    dend_17 { pt3dadd( 106.195, 309.534, -59.2444, 1.25 ) }
    dend_17 { pt3dadd( 107.383, 310.788, -60.6011, 0.37 ) }
    dend_17 { pt3dadd( 108.078, 311.403, -61.256, 0.74 ) }
    dend_17 { pt3dadd( 109.604, 312.564, -62.5393, 0.88 ) }
    dend_17 { pt3dadd( 110.136, 312.945, -62.9661, 1.11 ) }
    dend_17 { pt3dadd( 110.914, 313.504, -63.5459, 0.52 ) }
    dend_17 { pt3dadd( 111.457, 313.908, -63.9055, 0.52 ) }
    dend_17 { pt3dadd( 112.072, 314.382, -64.2427, 0.29 ) }
    dend_17 { pt3dadd( 112.608, 314.772, -64.5109, 0.29 ) }
    dend_17 { pt3dadd( 113.505, 315.338, -64.8713, 1.25 ) }
    dend_17 { pt3dadd( 113.723, 315.467, -64.9662, 1.55 ) }
    dend_17 { pt3dadd( 114.116, 315.689, -65.1435, 1.55 ) }
    dend_17 { pt3dadd( 115.118, 316.224, -65.6084, 0.37 ) }
    dend_17 { pt3dadd( 116.273, 316.774, -66.1184, 0.44 ) }
    dend_17 { pt3dadd( 117.232, 317.176, -66.4994, 0.81 ) }
    dend_17 { pt3dadd( 117.451, 317.247, -66.5718, 1.11 ) }
    dend_17 { pt3dadd( 118.163, 317.457, -66.7951, 1.11 ) }
    dend_17 { pt3dadd( 119.428, 317.768, -67.1388, 0.29 ) }
    dend_17 { pt3dadd( 120.559, 317.97, -67.3527, 0.37 ) }
    dend_17 { pt3dadd( 121.312, 318.021, -67.4589, 0.37 ) }
    dend_17 { pt3dadd( 122.127, 318.002, -67.5785, 0.66 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 33/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -63.9287, 131.762, -94.2864, 0.44 ) }
    dend_7 { pt3dadd( -62.844, 132.774, -94.5587, 0.44 ) }
    dend_7 { pt3dadd( -61.9056, 133.741, -94.9724, 0.29 ) }
    dend_7 { pt3dadd( -61.3901, 134.347, -95.2829, 0.44 ) }
    dend_7 { pt3dadd( -60.8237, 135.12, -95.6861, 0.44 ) }
    dend_7 { pt3dadd( -60.4586, 135.696, -95.9733, 0.81 ) }
    dend_7 { pt3dadd( -59.9925, 136.52, -96.3833, 0.81 ) }
    dend_7 { pt3dadd( -59.5415, 137.516, -96.976, 0.52 ) }
    dend_7 { pt3dadd( -59.3741, 138.155, -97.3992, 0.37 ) }
    dend_7 { pt3dadd( -59.279, 138.836, -97.8587, 0.37 ) }
    dend_7 { pt3dadd( -59.2301, 139.515, -98.3321, 0.81 ) }
    dend_7 { pt3dadd( -59.1835, 140.14, -98.764, 0.88 ) }
    dend_7 { pt3dadd( -59.0467, 141.116, -99.4176, 0.88 ) }
    dend_7 { pt3dadd( -58.7283, 142.124, -100.184, 0.52 ) }
    dend_7 { pt3dadd( -58.4985, 142.527, -100.575, 0.81 ) }
    dend_7 { pt3dadd( -57.7688, 143.321, -101.534, 0.52 ) }
    dend_7 { pt3dadd( -57.2571, 143.716, -102.075, 0.52 ) }
    dend_7 { pt3dadd( -56.5255, 144.153, -102.688, 0.52 ) }
    dend_7 { pt3dadd( -54.9685, 144.926, -103.782, 0.52 ) }
    dend_7 { pt3dadd( -54.1896, 145.286, -104.351, 0.52 ) }
    dend_7 { pt3dadd( -53.4694, 145.6, -104.915, 0.81 ) }
    dend_7 { pt3dadd( -52.9285, 145.84, -105.346, 1.03 ) }
    dend_7 { pt3dadd( -52.3925, 146.091, -105.79, 0.59 ) }
    dend_7 { pt3dadd( -51.3066, 146.665, -106.701, 0.66 ) }
    dend_7 { pt3dadd( -49.5032, 147.809, -108.142, 0.52 ) }
    dend_7 { pt3dadd( -48.8252, 148.302, -108.68, 0.52 ) }
    dend_7 { pt3dadd( -48.0505, 148.959, -109.345, 1.11 ) }
    dend_7 { pt3dadd( -47.6891, 149.342, -109.673, 1.11 ) }
    dend_7 { pt3dadd( -47.3951, 149.687, -109.942, 1.25 ) }
    dend_7 { pt3dadd( -46.8482, 150.496, -110.379, 0.66 ) }
    dend_7 { pt3dadd( -46.4427, 151.448, -110.606, 0.44 ) }
    dend_7 { pt3dadd( -46.2528, 152.256, -110.751, 0.44 ) }
    dend_7 { pt3dadd( -46.1647, 153.611, -110.981, 0.81 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 66/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( -63.9287, 131.762, -94.2864, 0.44 ) }
    dend_6 { pt3dadd( -64.8107, 133.004, -95.8864, 0.44 ) }
    dend_6 { pt3dadd( -65.2199, 133.535, -96.6253, 0.37 ) }
    dend_6 { pt3dadd( -65.6745, 134.111, -97.4387, 0.37 ) }
    dend_6 { pt3dadd( -66.0697, 134.575, -98.0514, 0.88 ) }
    dend_6 { pt3dadd( -66.534, 135.092, -98.6836, 0.88 ) }
    dend_6 { pt3dadd( -67.3739, 135.941, -99.6776, 0.59 ) }
    dend_6 { pt3dadd( -68.1912, 136.744, -100.534, 0.22 ) }
    dend_6 { pt3dadd( -68.6761, 137.182, -101.076, 0.66 ) }
    dend_6 { pt3dadd( -69.3758, 137.767, -101.876, 0.37 ) }
    dend_6 { pt3dadd( -69.7719, 138.09, -102.325, 0.29 ) }
    dend_6 { pt3dadd( -70.4748, 138.729, -103.246, 0.29 ) }
    dend_6 { pt3dadd( -71.1391, 139.488, -104.361, 0.66 ) }
    dend_6 { pt3dadd( -71.7795, 140.449, -105.878, 1.03 ) }
    dend_6 { pt3dadd( -71.9361, 140.733, -106.332, 1.33 ) }
    dend_6 { pt3dadd( -72.0332, 140.938, -106.663, 1.33 ) }
    dend_6 { pt3dadd( -72.4382, 141.884, -108.161, 0.44 ) }
    dend_6 { pt3dadd( -72.8343, 142.863, -109.718, 0.29 ) }
    dend_6 { pt3dadd( -73.0693, 143.469, -110.655, 0.59 ) }
    dend_6 { pt3dadd( -73.2574, 143.977, -111.446, 0.59 ) }
    dend_6 { pt3dadd( -73.3493, 144.256, -111.88, 0.88 ) }
    dend_6 { pt3dadd( -73.51, 144.749, -112.639, 0.88 ) }
    dend_6 { pt3dadd( -73.9835, 145.944, -114.475, 0.29 ) }
    dend_6 { pt3dadd( -74.125, 146.37, -115.108, 0.29 ) }
    dend_6 { pt3dadd( -74.2214, 146.738, -115.636, 0.29 ) }
    dend_6 { pt3dadd( -74.3463, 147.314, -116.466, 0.96 ) }
    dend_6 { pt3dadd( -74.4444, 147.748, -117.061, 0.96 ) }
    dend_6 { pt3dadd( -74.8252, 149.111, -118.716, 0.29 ) }
    dend_6 { pt3dadd( -75.1145, 149.868, -119.495, 0.29 ) }
    dend_6 { pt3dadd( -75.2695, 150.168, -119.789, 0.29 ) }
    dend_6 { pt3dadd( -75.6104, 150.761, -120.307, 0.29 ) }
    dend_6 { pt3dadd( -75.9181, 151.275, -120.721, 0.29 ) }
    dend_6 { pt3dadd( -76.2562, 151.869, -121.151, 0.81 ) }
    dend_6 { pt3dadd( -76.5349, 152.389, -121.512, 0.88 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_20()
}

proc basic_shape_20() {
    dend_6 { pt3dadd( -77.2156, 153.676, -122.498, 0.29 ) }
    dend_6 { pt3dadd( -77.5624, 154.353, -123.031, 0.59 ) }
    dend_6 { pt3dadd( -77.8172, 154.876, -123.434, 0.59 ) }
    dend_6 { pt3dadd( -78.0803, 155.434, -123.852, 0.29 ) }
    dend_6 { pt3dadd( -78.4828, 156.335, -124.518, 0.29 ) }
    dend_6 { pt3dadd( -78.7422, 157.012, -125.006, 0.29 ) }
    dend_6 { pt3dadd( -79.0115, 157.789, -125.536, 0.29 ) }
    dend_6 { pt3dadd( -79.2306, 158.414, -125.988, 0.29 ) }
    dend_6 { pt3dadd( -79.501, 159.218, -126.544, 0.29 ) }
    dend_6 { pt3dadd( -79.6311, 159.608, -126.787, 0.29 ) }
    dend_6 { pt3dadd( -79.9907, 160.645, -127.369, 0.88 ) }
    dend_6 { pt3dadd( -80.1347, 161.11, -127.611, 1.11 ) }
    dend_6 { pt3dadd( -80.5456, 162.821, -128.462, 0.29 ) }
    dend_6 { pt3dadd( -80.6811, 163.476, -128.817, 0.59 ) }
    dend_6 { pt3dadd( -80.8542, 164.337, -129.332, 0.29 ) }
    dend_6 { pt3dadd( -80.9582, 164.768, -129.599, 0.29 ) }
    dend_6 { pt3dadd( -81.1234, 165.44, -129.986, 0.29 ) }
    dend_6 { pt3dadd( -81.2438, 165.998, -130.281, 0.29 ) }
    dend_6 { pt3dadd( -81.5392, 167.232, -130.945, 0.66 ) }
    dend_6 { pt3dadd( -81.7437, 167.817, -131.314, 0.66 ) }
    dend_6 { pt3dadd( -82.186, 168.949, -132.179, 0.37 ) }
    dend_6 { pt3dadd( -82.4615, 169.606, -132.733, 0.37 ) }
    dend_6 { pt3dadd( -82.922, 170.465, -133.517, 0.37 ) }
    dend_6 { pt3dadd( -83.4971, 171.375, -134.369, 0.37 ) }
    dend_6 { pt3dadd( -84.1033, 172.277, -135.147, 0.37 ) }
    dend_6 { pt3dadd( -85.0178, 173.577, -136.246, 0.29 ) }
    dend_6 { pt3dadd( -85.2871, 173.934, -136.574, 0.29 ) }
    dend_6 { pt3dadd( -85.9766, 174.778, -137.42, 0.29 ) }
    dend_6 { pt3dadd( -86.296, 175.161, -137.817, 0.29 ) }
    dend_6 { pt3dadd( -86.9618, 176.105, -138.632, 1.4 ) }
    dend_6 { pt3dadd( -87.1057, 176.343, -138.789, 1.4 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 31/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( 35.3179, -200.824, 9.72808, 0.37 ) }
    dend_49 { pt3dadd( 43.6592, -206.43, 8.3422, 0.37 ) }
    dend_49 { pt3dadd( 51.3731, -212.727, 6.21503, 0.37 ) }
    dend_49 { pt3dadd( 59.5525, -218.375, 4.17318, 0.37 ) }
    dend_49 { pt3dadd( 67.1104, -224.415, 1.04479, 0.37 ) }
    dend_49 { pt3dadd( 74.4812, -231.085, -1.26149, 0.37 ) }
    dend_49 { pt3dadd( 82.5039, -236.263, -4.62508, 0.37 ) }
    dend_49 { pt3dadd( 89.6063, -241.591, -9.50437, 0.37 ) }
    dend_49 { pt3dadd( 96.6707, -248.106, -12.9097, 0.37 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 40/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 35.3179, -200.824, 9.72808, 0.22 ) }
    dend_48 { pt3dadd( 43.5059, -206.458, 7.68576, 0.37 ) }
    dend_48 { pt3dadd( 52.5266, -210.796, 6.43789, 0.37 ) }
    dend_48 { pt3dadd( 61.0862, -215.276, 3.5183, 0.37 ) }
    dend_48 { pt3dadd( 69.7421, -218.368, -0.53226, 0.37 ) }
    dend_48 { pt3dadd( 77.8645, -222.481, -4.85436, 0.37 ) }
    dend_48 { pt3dadd( 86.2407, -227.293, -7.8266, 0.37 ) }
    dend_48 { pt3dadd( 94.2041, -233.546, -8.88597, 0.37 ) }
    dend_48 { pt3dadd( 102.124, -239.555, -11.0145, 0.37 ) }
    dend_48 { pt3dadd( 111.401, -243.345, -11.9628, 0.37 ) }
    dend_48 { pt3dadd( 120.273, -248.189, -12.0523, 0.37 ) }
    dend_48 { pt3dadd( 129.816, -250.868, -10.4932, 0.37 ) }
    dend_48 { pt3dadd( 139.46, -252.697, -8.50241, 0.37 ) }
    dend_48 { pt3dadd( 148.762, -252.971, -4.84268, 0.37 ) }
    // Section: dend_46, id: dend_46, parent: dend_42 (entry count 54/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 25.5296, -196.21, 24.2862, 0.37 ) }
    dend_46 { pt3dadd( 33.0561, -202.045, 27.8175, 0.37 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 56/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 25.5296, -196.21, 24.2862, 0.22 ) }
    dend_43 { pt3dadd( 33.5682, -202.297, 25.6165, 0.37 ) }
    dend_43 { pt3dadd( 41.1917, -208.584, 28.0723, 0.37 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 59/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -45.3701, -202.115, 2.79143, 0.37 ) }
    dend_38 { pt3dadd( -41.4396, -211.763, 3.13332, 0.37 ) }
    dend_38 { pt3dadd( -35.376, -219.91, 4.87313, 0.37 ) }
    dend_38 { pt3dadd( -29.5739, -228.001, 7.5135, 0.37 ) }
    dend_38 { pt3dadd( -23.4498, -235.727, 10.4025, 0.37 ) }
    dend_38 { pt3dadd( -17.1039, -242.144, 15.1338, 0.37 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 65/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -45.3701, -202.115, 2.79143, 0.22 ) }
    dend_37 { pt3dadd( -41.704, -211.81, 1.64538, 0.37 ) }
    dend_37 { pt3dadd( -38.8737, -221.528, -0.869019, 0.37 ) }
    dend_37 { pt3dadd( -37.0689, -231.769, -2.14, 0.37 ) }
    dend_37 { pt3dadd( -36.0098, -242.125, -3.40391, 0.37 ) }
    dend_37 { pt3dadd( -33.3574, -252.249, -3.44787, 0.37 ) }
    dend_37 { pt3dadd( -29.9172, -261.98, -1.94017, 0.37 ) }
    dend_37 { pt3dadd( -26.7673, -271.334, 1.33435, 0.37 ) }
    dend_37 { pt3dadd( -24.9937, -280.695, 5.50208, 0.37 ) }
    dend_37 { pt3dadd( -24.452, -289.369, 11.1109, 0.37 ) }
    dend_37 { pt3dadd( -25.4877, -298.594, 15.7748, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_24 (entry count 76/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 119.244, 333.015, -37.7279, 0.29 ) }
    dend_28 { pt3dadd( 120.613, 335.331, -39.904, 0.29 ) }
    dend_28 { pt3dadd( 121.084, 336.161, -40.595, 0.29 ) }
    dend_28 { pt3dadd( 121.46, 336.923, -41.1064, 0.29 ) }
    dend_28 { pt3dadd( 121.694, 337.483, -41.4113, 0.29 ) }
    dend_28 { pt3dadd( 122.078, 338.546, -41.9077, 0.74 ) }
    dend_28 { pt3dadd( 122.19, 338.888, -42.0442, 0.74 ) }
    dend_28 { pt3dadd( 122.588, 340.387, -42.3899, 0.22 ) }
    dend_28 { pt3dadd( 122.937, 341.758, -42.7072, 0.22 ) }
    dend_28 { pt3dadd( 123.168, 342.932, -42.9611, 0.22 ) }
    dend_28 { pt3dadd( 123.28, 343.62, -43.0888, 0.52 ) }
    dend_28 { pt3dadd( 123.454, 344.746, -43.2246, 0.22 ) }
    dend_28 { pt3dadd( 123.516, 345.197, -43.2665, 0.66 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 89/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 119.244, 333.015, -37.7279, 0.44 ) }
    dend_25 { pt3dadd( 118.95, 334.595, -36.9782, 0.44 ) }
    dend_25 { pt3dadd( 118.822, 335.793, -36.4331, 0.44 ) }
    dend_25 { pt3dadd( 118.709, 337.084, -35.875, 0.44 ) }
    dend_25 { pt3dadd( 118.644, 337.954, -35.5166, 0.44 ) }
    dend_25 { pt3dadd( 118.563, 339.002, -35.1166, 0.37 ) }
    dend_25 { pt3dadd( 118.513, 339.621, -34.8988, 0.37 ) }
    dend_25 { pt3dadd( 118.49, 340.724, -34.4444, 0.88 ) }
    dend_25 { pt3dadd( 118.504, 341.138, -34.2956, 1.47 ) }
    dend_25 { pt3dadd( 118.517, 341.587, -34.1764, 1.47 ) }
    dend_25 { pt3dadd( 118.497, 342.776, -33.9455, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_21()
}

proc basic_shape_21() {
    dend_25 { pt3dadd( 118.42, 343.45, -33.849, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_17 (entry count 1/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 122.127, 318.002, -67.5785, 0.29 ) }
    dend_23 { pt3dadd( 122.595, 318.431, -67.6808, 0.29 ) }
    dend_23 { pt3dadd( 123.32, 319.022, -67.8814, 0.81 ) }
    dend_23 { pt3dadd( 123.847, 319.4, -68.0405, 0.81 ) }
    dend_23 { pt3dadd( 124.585, 319.839, -68.2963, 0.22 ) }
    dend_23 { pt3dadd( 125.009, 320.056, -68.4639, 0.59 ) }
    dend_23 { pt3dadd( 126.423, 320.681, -69.0493, 0.22 ) }
    dend_23 { pt3dadd( 127.399, 321.033, -69.5042, 0.81 ) }
    dend_23 { pt3dadd( 127.899, 321.195, -69.7688, 0.81 ) }
    dend_23 { pt3dadd( 128.88, 321.527, -70.3567, 0.29 ) }
    dend_23 { pt3dadd( 129.914, 321.933, -71.0308, 0.29 ) }
    dend_23 { pt3dadd( 131.054, 322.483, -71.8236, 0.22 ) }
    dend_23 { pt3dadd( 131.723, 322.878, -72.3002, 0.22 ) }
    dend_23 { pt3dadd( 132.552, 323.506, -72.9591, 0.81 ) }
    dend_23 { pt3dadd( 133.517, 324.425, -73.7592, 0.22 ) }
    dend_23 { pt3dadd( 134.156, 325.198, -74.307, 0.22 ) }
    dend_23 { pt3dadd( 134.697, 325.973, -74.8024, 0.44 ) }
    dend_23 { pt3dadd( 135.037, 326.566, -75.1427, 0.15 ) }
    dend_23 { pt3dadd( 135.321, 327.118, -75.4183, 0.22 ) }
    dend_23 { pt3dadd( 135.719, 327.994, -75.7841, 0.15 ) }
    dend_23 { pt3dadd( 135.995, 328.603, -75.9914, 0.52 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 22/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 122.127, 318.002, -67.5785, 0.22 ) }
    dend_18 { pt3dadd( 123.827, 318.644, -68.0962, 0.22 ) }
    dend_18 { pt3dadd( 124.457, 318.882, -68.288, 0.81 ) }
    dend_18 { pt3dadd( 125.137, 319.14, -68.495, 0.52 ) }
    dend_18 { pt3dadd( 126.545, 319.672, -68.9239, 1.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 27/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -46.1647, 153.611, -110.981, 0.37 ) }
    dend_9 { pt3dadd( -45.3771, 155.263, -111.637, 0.37 ) }
    dend_9 { pt3dadd( -44.8217, 156.622, -112.289, 0.37 ) }
    dend_9 { pt3dadd( -44.3995, 157.655, -112.785, 0.37 ) }
    dend_9 { pt3dadd( -43.9506, 158.753, -113.312, 0.81 ) }
    dend_9 { pt3dadd( -43.7419, 159.264, -113.557, 0.81 ) }
    dend_9 { pt3dadd( -43.2025, 160.584, -114.191, 0.52 ) }
    dend_9 { pt3dadd( -42.9589, 161.652, -114.755, 1.33 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 35/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -46.1647, 153.611, -110.981, 0.29 ) }
    dend_8 { pt3dadd( -45.8663, 154.841, -111.229, 0.29 ) }
    dend_8 { pt3dadd( -45.653, 155.721, -111.407, 0.88 ) }
    dend_8 { pt3dadd( -45.4233, 156.668, -111.598, 0.29 ) }
    dend_8 { pt3dadd( -45.2563, 157.357, -111.737, 0.88 ) }
    dend_8 { pt3dadd( -45.064, 158.15, -111.897, 0.88 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 41/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 41.1917, -208.584, 28.0723, 0.37 ) }
    dend_45 { pt3dadd( 49.2245, -214.82, 28.532, 0.37 ) }
    dend_45 { pt3dadd( 57.2274, -221.112, 28.3281, 0.37 ) }
    dend_45 { pt3dadd( 63.9833, -228.845, 28.6613, 0.37 ) }
    dend_45 { pt3dadd( 70.3667, -236.916, 29.0804, 0.37 ) }
    dend_45 { pt3dadd( 76.2255, -245.312, 30.397, 0.37 ) }
    dend_45 { pt3dadd( 81.9594, -253.307, 33.4211, 0.37 ) }
    dend_45 { pt3dadd( 87.9047, -261.017, 36.6966, 0.37 ) }
    dend_45 { pt3dadd( 93.3032, -268.43, 41.2817, 0.37 ) }
    dend_45 { pt3dadd( 99.1626, -275.621, 45.6134, 0.37 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 51/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 41.1917, -208.584, 28.0723, 0.22 ) }
    dend_44 { pt3dadd( 49.0069, -214.771, 30.1224, 0.37 ) }
    dend_44 { pt3dadd( 55.6816, -222.394, 31.779, 0.37 ) }
    dend_44 { pt3dadd( 62.6885, -229.678, 33.4477, 0.37 ) }
    dend_44 { pt3dadd( 69.6572, -236.801, 35.774, 0.37 ) }
    dend_44 { pt3dadd( 77.3118, -243.313, 37.4889, 0.37 ) }
    dend_44 { pt3dadd( 85.6099, -248.408, 40.2453, 0.37 ) }
    dend_44 { pt3dadd( 93.188, -253.36, 44.7548, 0.37 ) }
    dend_44 { pt3dadd( 100.977, -256.277, 50.3777, 0.37 ) }
    dend_44 { pt3dadd( 108.482, -257.212, 56.9263, 0.37 ) }
    dend_44 { pt3dadd( 115.226, -259.322, 64.0312, 0.37 ) }
    dend_44 { pt3dadd( 122.122, -262.716, 70.5117, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_25 (entry count 63/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 118.42, 343.45, -33.849, 0.29 ) }
    dend_27 { pt3dadd( 117.804, 344.868, -33.849, 0.29 ) }
    dend_27 { pt3dadd( 117.359, 345.8, -33.849, 0.29 ) }
    dend_27 { pt3dadd( 117.07, 346.388, -33.849, 0.66 ) }
    dend_27 { pt3dadd( 116.972, 346.594, -33.848, 0.66 ) }
    dend_27 { pt3dadd( 116.659, 347.355, -33.8422, 0.22 ) }
    dend_27 { pt3dadd( 116.353, 348.222, -33.8343, 0.22 ) }
    dend_27 { pt3dadd( 116.165, 348.891, -33.8261, 0.22 ) }
    dend_27 { pt3dadd( 116.091, 349.268, -33.8216, 0.59 ) }
    dend_27 { pt3dadd( 116.05, 349.738, -33.8165, 0.59 ) }
    dend_27 { pt3dadd( 116.03, 350.765, -33.8065, 0.29 ) }
    dend_27 { pt3dadd( 116.055, 351.456, -33.7762, 0.88 ) }
    dend_27 { pt3dadd( 116.092, 352.063, -33.7382, 0.88 ) }
    dend_27 { pt3dadd( 116.215, 353.928, -33.6113, 0.29 ) }
    dend_27 { pt3dadd( 116.278, 354.891, -33.5407, 0.29 ) }
    dend_27 { pt3dadd( 116.31, 355.446, -33.4959, 0.59 ) }
    dend_27 { pt3dadd( 116.391, 357.174, -33.3276, 0.29 ) }
    dend_27 { pt3dadd( 116.433, 358.031, -33.2274, 0.59 ) }
    // Section: dend_26, id: dend_26, parent: dend_25 (entry count 81/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 118.42, 343.45, -33.849, 0.29 ) }
    dend_26 { pt3dadd( 118.555, 344.719, -33.7537, 0.29 ) }
    dend_26 { pt3dadd( 118.804, 345.913, -33.5879, 0.29 ) }
    dend_26 { pt3dadd( 119.022, 346.752, -33.4538, 0.29 ) }
    dend_26 { pt3dadd( 119.419, 348.114, -33.2406, 0.29 ) }
    dend_26 { pt3dadd( 119.642, 348.835, -33.1303, 0.29 ) }
    dend_26 { pt3dadd( 120.009, 349.981, -32.9592, 0.29 ) }
    dend_26 { pt3dadd( 120.428, 351.229, -32.7671, 1.03 ) }
    dend_26 { pt3dadd( 120.786, 352.165, -32.5951, 1.69 ) }
    dend_26 { pt3dadd( 121.316, 353.402, -32.346, 0.22 ) }
    dend_26 { pt3dadd( 121.583, 353.983, -32.2252, 0.52 ) }
    dend_26 { pt3dadd( 121.723, 354.291, -32.1616, 0.59 ) }
    dend_26 { pt3dadd( 122.102, 355.195, -31.9293, 0.22 ) }
    dend_26 { pt3dadd( 122.462, 356.066, -31.6379, 0.52 ) }
    dend_26 { pt3dadd( 122.679, 356.569, -31.3925, 0.66 ) }
    dend_26 { pt3dadd( 122.969, 357.193, -30.962, 0.22 ) }
    dend_26 { pt3dadd( 123.167, 357.555, -30.6661, 0.22 ) }
    dend_26 { pt3dadd( 123.84, 358.606, -29.723, 0.66 ) }
    dend_26 { pt3dadd( 124.244, 359.131, -29.188, 1.03 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_22()
}

proc basic_shape_22() {
    dend_26 { pt3dadd( 124.729, 359.645, -28.6113, 1.03 ) }
    dend_26 { pt3dadd( 125.444, 360.368, -27.8221, 0.29 ) }
    dend_26 { pt3dadd( 125.906, 360.852, -27.3374, 0.37 ) }
    dend_26 { pt3dadd( 126.283, 361.291, -26.963, 0.37 ) }
    dend_26 { pt3dadd( 126.851, 361.99, -26.4846, 0.29 ) }
    dend_26 { pt3dadd( 127.315, 362.545, -26.1474, 0.29 ) }
    dend_26 { pt3dadd( 127.75, 363.079, -25.8564, 0.29 ) }
    dend_26 { pt3dadd( 128.114, 363.62, -25.6244, 0.66 ) }
    dend_26 { pt3dadd( 128.397, 364.159, -25.4164, 0.66 ) }
    dend_26 { pt3dadd( 128.749, 365.067, -25.0916, 0.29 ) }
    dend_26 { pt3dadd( 128.927, 365.803, -24.8749, 0.29 ) }
    dend_26 { pt3dadd( 129.005, 366.295, -24.7449, 0.29 ) }
    dend_26 { pt3dadd( 129.108, 367.186, -24.5388, 0.66 ) }
    dend_26 { pt3dadd( 129.155, 367.788, -24.4068, 0.74 ) }
    dend_26 { pt3dadd( 129.246, 369.329, -24.1732, 0.29 ) }
    dend_26 { pt3dadd( 129.303, 370.589, -24.0503, 0.29 ) }
    dend_26 { pt3dadd( 129.354, 371.597, -24.0121, 0.88 ) }
    dend_26 { pt3dadd( 129.391, 372.057, -24.0219, 1.03 ) }
    dend_26 { pt3dadd( 129.498, 372.904, -24.0937, 0.74 ) }
    dend_26 { pt3dadd( 129.736, 374.299, -24.3047, 0.29 ) }
    dend_26 { pt3dadd( 129.874, 374.998, -24.5028, 0.59 ) }
    dend_26 { pt3dadd( 130.052, 375.874, -24.8246, 0.29 ) }
    dend_26 { pt3dadd( 130.178, 376.633, -25.1529, 0.59 ) }
    dend_26 { pt3dadd( 130.238, 377.134, -25.4017, 0.29 ) }
    dend_26 { pt3dadd( 130.276, 377.806, -25.7509, 0.81 ) }
    dend_26 { pt3dadd( 130.283, 379.233, -26.4227, 0.29 ) }
    dend_26 { pt3dadd( 130.252, 380.13, -26.8236, 0.29 ) }
    dend_26 { pt3dadd( 130.217, 380.846, -27.131, 0.29 ) }
    dend_26 { pt3dadd( 130.167, 381.763, -27.5272, 0.22 ) }
    dend_26 { pt3dadd( 130.072, 383.364, -28.1782, 0.22 ) }
    dend_26 { pt3dadd( 129.92, 385.446, -28.9307, 0.22 ) }
    dend_26 { pt3dadd( 129.788, 387.175, -29.4965, 0.22 ) }
    dend_26 { pt3dadd( 129.668, 388.76, -29.9828, 0.74 ) }
    dend_26 { pt3dadd( 129.612, 389.536, -30.2038, 0.96 ) }
    dend_26 { pt3dadd( 129.505, 391.085, -30.6055, 0.22 ) }
    dend_26 { pt3dadd( 129.385, 392.651, -31.0115, 0.22 ) }
    // Section: dend_22, id: dend_22, parent: dend_18 (entry count 36/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 126.545, 319.672, -68.9239, 0.22 ) }
    dend_22 { pt3dadd( 126.549, 321.359, -68.9995, 0.22 ) }
    dend_22 { pt3dadd( 126.55, 321.988, -69.0277, 0.37 ) }
    dend_22 { pt3dadd( 126.552, 323.225, -69.0832, 0.22 ) }
    dend_22 { pt3dadd( 126.554, 324.154, -69.1248, 0.22 ) }
    dend_22 { pt3dadd( 126.556, 325.365, -69.1791, 0.22 ) }
    dend_22 { pt3dadd( 126.559, 326.652, -69.2368, 0.22 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 43/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 126.545, 319.672, -68.9239, 0.22 ) }
    dend_19 { pt3dadd( 128.041, 319.09, -70.2321, 0.22 ) }
    dend_19 { pt3dadd( 128.578, 318.881, -70.7014, 0.22 ) }
    dend_19 { pt3dadd( 129.202, 318.638, -71.2473, 0.52 ) }
    dend_19 { pt3dadd( 129.919, 318.359, -71.8751, 1.11 ) }
    dend_19 { pt3dadd( 130.621, 318.086, -72.4885, 0.81 ) }
    dend_19 { pt3dadd( 131.385, 317.788, -73.1576, 0.29 ) }
    // Section: dend_11, id: dend_11, parent: dend_9 (entry count 50/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -42.9589, 161.652, -114.755, 0.59 ) }
    dend_11 { pt3dadd( -43.1339, 163.714, -115.064, 0.59 ) }
    dend_11 { pt3dadd( -43.1656, 164.325, -115.203, 0.88 ) }
    dend_11 { pt3dadd( -43.2358, 165.52, -115.507, 0.29 ) }
    dend_11 { pt3dadd( -43.2946, 166.451, -115.752, 0.29 ) }
    dend_11 { pt3dadd( -43.3715, 167.413, -115.999, 0.37 ) }
    dend_11 { pt3dadd( -43.4576, 168.306, -116.221, 0.37 ) }
    dend_11 { pt3dadd( -43.6621, 169.915, -116.572, 0.29 ) }
    dend_11 { pt3dadd( -43.7725, 170.612, -116.75, 0.29 ) }
    dend_11 { pt3dadd( -43.9659, 171.795, -117.076, 0.29 ) }
    dend_11 { pt3dadd( -44.0784, 172.609, -117.296, 0.96 ) }
    dend_11 { pt3dadd( -44.154, 173.168, -117.434, 0.96 ) }
    dend_11 { pt3dadd( -44.2256, 173.743, -117.552, 0.74 ) }
    dend_11 { pt3dadd( -44.379, 175.11, -117.746, 0.29 ) }
    dend_11 { pt3dadd( -44.4915, 176.297, -117.922, 0.29 ) }
    dend_11 { pt3dadd( -44.5577, 177.089, -118.035, 0.29 ) }
    dend_11 { pt3dadd( -44.6156, 178.017, -118.15, 0.74 ) }
    dend_11 { pt3dadd( -44.6354, 178.393, -118.188, 0.74 ) }
    dend_11 { pt3dadd( -44.658, 178.891, -118.225, 0.44 ) }
    dend_11 { pt3dadd( -44.7382, 180.071, -118.292, 0.29 ) }
    dend_11 { pt3dadd( -44.8437, 180.987, -118.331, 0.29 ) }
    dend_11 { pt3dadd( -45.0654, 182.884, -118.349, 0.29 ) }
    dend_11 { pt3dadd( -45.1461, 183.73, -118.328, 0.96 ) }
    dend_11 { pt3dadd( -45.1818, 184.341, -118.28, 0.59 ) }
    dend_11 { pt3dadd( -45.1879, 185.158, -118.165, 0.29 ) }
    dend_11 { pt3dadd( -45.1533, 186.307, -117.929, 0.22 ) }
    dend_11 { pt3dadd( -45.0971, 187.407, -117.65, 0.22 ) }
    dend_11 { pt3dadd( -45.0542, 188.038, -117.459, 0.22 ) }
    dend_11 { pt3dadd( -45.0023, 189.019, -117.186, 0.22 ) }
    dend_11 { pt3dadd( -44.9616, 189.901, -116.978, 0.22 ) }
    dend_11 { pt3dadd( -44.8961, 190.738, -116.829, 0.81 ) }
    dend_11 { pt3dadd( -44.8737, 190.967, -116.81, 1.18 ) }
    dend_11 { pt3dadd( -44.8307, 191.523, -116.842, 1.18 ) }
    dend_11 { pt3dadd( -44.7596, 192.79, -117.049, 0.29 ) }
    dend_11 { pt3dadd( -44.7159, 193.478, -117.222, 0.29 ) }
    dend_11 { pt3dadd( -44.6266, 194.307, -117.46, 0.66 ) }
    dend_11 { pt3dadd( -44.5782, 194.594, -117.544, 0.66 ) }
    dend_11 { pt3dadd( -44.326, 195.809, -117.958, 0.37 ) }
    dend_11 { pt3dadd( -44.1818, 196.521, -118.225, 0.37 ) }
    dend_11 { pt3dadd( -44.0821, 197.246, -118.507, 0.37 ) }
    dend_11 { pt3dadd( -44.0623, 197.811, -118.751, 0.74 ) }
    dend_11 { pt3dadd( -44.0867, 198.399, -119.027, 0.74 ) }
    dend_11 { pt3dadd( -44.1608, 199.645, -119.641, 0.29 ) }
    dend_11 { pt3dadd( -44.1859, 200.423, -120.035, 0.29 ) }
    dend_11 { pt3dadd( -44.187, 201.431, -120.604, 0.29 ) }
    dend_11 { pt3dadd( -44.1776, 202.443, -121.191, 0.88 ) }
    dend_11 { pt3dadd( -44.1664, 203.013, -121.512, 0.88 ) }
    dend_11 { pt3dadd( -44.1411, 203.811, -121.946, 0.29 ) }
    dend_11 { pt3dadd( -44.099, 204.807, -122.424, 0.29 ) }
    dend_11 { pt3dadd( -44.0667, 205.317, -122.667, 0.29 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_23()
}

proc basic_shape_23() {
    dend_11 { pt3dadd( -44.0462, 206.174, -123.048, 0.74 ) }
    dend_11 { pt3dadd( -44.0668, 206.716, -123.262, 0.74 ) }
    dend_11 { pt3dadd( -44.1548, 207.788, -123.65, 0.37 ) }
    dend_11 { pt3dadd( -44.2518, 208.664, -123.947, 0.59 ) }
    dend_11 { pt3dadd( -44.3289, 209.28, -124.138, 0.59 ) }
    dend_11 { pt3dadd( -44.4081, 210.16, -124.401, 0.29 ) }
    dend_11 { pt3dadd( -44.4433, 211.186, -124.705, 0.29 ) }
    dend_11 { pt3dadd( -44.4428, 211.725, -124.844, 0.29 ) }
    dend_11 { pt3dadd( -44.425, 212.374, -124.977, 0.52 ) }
    dend_11 { pt3dadd( -44.399, 212.91, -125.073, 1.03 ) }
    dend_11 { pt3dadd( -44.3247, 213.658, -125.178, 1.03 ) }
    dend_11 { pt3dadd( -44.1322, 215.01, -125.331, 0.22 ) }
    dend_11 { pt3dadd( -43.8498, 216.696, -125.475, 0.22 ) }
    dend_11 { pt3dadd( -43.6314, 217.891, -125.555, 0.96 ) }
    dend_11 { pt3dadd( -43.4982, 218.607, -125.59, 0.96 ) }
    dend_11 { pt3dadd( -43.132, 220.376, -125.648, 0.29 ) }
    dend_11 { pt3dadd( -42.817, 221.745, -125.664, 0.29 ) }
    dend_11 { pt3dadd( -42.5993, 222.652, -125.664, 0.88 ) }
    dend_11 { pt3dadd( -42.4368, 223.342, -125.664, 1.18 ) }
    dend_11 { pt3dadd( -42.0965, 224.983, -125.7, 0.37 ) }
    dend_11 { pt3dadd( -41.8477, 226.409, -125.644, 0.37 ) }
    dend_11 { pt3dadd( -41.5536, 228.363, -125.464, 0.37 ) }
    dend_11 { pt3dadd( -41.3534, 229.555, -125.265, 0.37 ) }
    dend_11 { pt3dadd( -41.1809, 230.392, -125.064, 0.96 ) }
    dend_11 { pt3dadd( -40.9231, 231.352, -124.757, 0.96 ) }
    dend_11 { pt3dadd( -39.9384, 233.93, -123.65, 0.29 ) }
    dend_11 { pt3dadd( -39.6946, 234.406, -123.419, 0.29 ) }
    dend_11 { pt3dadd( -39.1492, 235.244, -123.001, 0.88 ) }
    dend_11 { pt3dadd( -38.7141, 235.829, -122.731, 0.88 ) }
    dend_11 { pt3dadd( -38.3575, 236.287, -122.55, 0.59 ) }
    dend_11 { pt3dadd( -37.0522, 238.002, -122.037, 0.29 ) }
    dend_11 { pt3dadd( -36.0863, 239.409, -121.839, 0.29 ) }
    dend_11 { pt3dadd( -35.5503, 240.297, -121.762, 0.81 ) }
    dend_11 { pt3dadd( -35.3228, 240.719, -121.751, 0.81 ) }
    dend_11 { pt3dadd( -35.013, 241.431, -121.758, 0.52 ) }
    dend_11 { pt3dadd( -34.6409, 242.511, -121.807, 0.22 ) }
    dend_11 { pt3dadd( -34.2003, 244.473, -121.974, 0.22 ) }
    dend_11 { pt3dadd( -34.0423, 245.622, -122.087, 0.74 ) }
    dend_11 { pt3dadd( -33.9973, 246.218, -122.149, 0.74 ) }
    dend_11 { pt3dadd( -33.9579, 247.87, -122.317, 0.22 ) }
    dend_11 { pt3dadd( -33.9753, 248.559, -122.38, 0.22 ) }
    dend_11 { pt3dadd( -34.0461, 249.45, -122.45, 0.52 ) }
    dend_11 { pt3dadd( -34.0744, 249.679, -122.465, 0.59 ) }
    dend_11 { pt3dadd( -34.2408, 250.819, -122.558, 0.22 ) }
    dend_11 { pt3dadd( -34.3916, 251.72, -122.696, 0.44 ) }
    dend_11 { pt3dadd( -34.7626, 253.4, -123.095, 0.22 ) }
    dend_11 { pt3dadd( -34.9786, 254.105, -123.335, 0.66 ) }
    dend_11 { pt3dadd( -35.3796, 255.106, -123.758, 0.22 ) }
    dend_11 { pt3dadd( -35.9337, 256.256, -124.342, 0.74 ) }
    dend_11 { pt3dadd( -36.5292, 257.316, -124.969, 0.59 ) }
    dend_11 { pt3dadd( -37.0556, 258.221, -125.538, 0.29 ) }
    dend_11 { pt3dadd( -37.4905, 258.968, -126.01, 0.52 ) }
    dend_11 { pt3dadd( -38.2182, 260.186, -126.788, 0.22 ) }
    dend_11 { pt3dadd( -38.6908, 260.985, -127.267, 0.59 ) }
    dend_11 { pt3dadd( -38.853, 261.307, -127.413, 0.59 ) }
    dend_11 { pt3dadd( -39.2745, 262.454, -127.779, 0.22 ) }
    dend_11 { pt3dadd( -39.4341, 263.248, -127.987, 0.66 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 57/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -42.9589, 161.652, -114.755, 0.52 ) }
    dend_10 { pt3dadd( -42.0637, 162.925, -115.998, 0.52 ) }
    dend_10 { pt3dadd( -41.5312, 163.703, -116.73, 0.29 ) }
    dend_10 { pt3dadd( -41.0098, 164.52, -117.429, 0.29 ) }
    dend_10 { pt3dadd( -40.2759, 165.689, -118.376, 0.29 ) }
    dend_10 { pt3dadd( -39.7454, 166.509, -119.037, 0.59 ) }
    dend_10 { pt3dadd( -39.543, 166.798, -119.285, 0.66 ) }
    dend_10 { pt3dadd( -38.8751, 167.65, -120.006, 0.29 ) }
    dend_10 { pt3dadd( -38.4106, 168.14, -120.485, 0.81 ) }
    dend_10 { pt3dadd( -38.2779, 168.281, -120.617, 0.81 ) }
    dend_10 { pt3dadd( -37.6244, 168.92, -121.198, 0.29 ) }
    dend_10 { pt3dadd( -36.9605, 169.501, -121.875, 0.44 ) }
    dend_10 { pt3dadd( -36.751, 169.646, -122.084, 0.66 ) }
    dend_10 { pt3dadd( -36.3409, 169.807, -122.442, 0.66 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 71/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 131.385, 317.788, -73.1576, 0.37 ) }
    dend_21 { pt3dadd( 132.948, 317.371, -74.8288, 0.37 ) }
    dend_21 { pt3dadd( 133.613, 317.257, -75.5253, 0.22 ) }
    dend_21 { pt3dadd( 134.464, 317.11, -76.418, 0.22 ) }
    dend_21 { pt3dadd( 134.647, 317.079, -76.6094, 0.66 ) }
    dend_21 { pt3dadd( 135.584, 316.918, -77.5908, 0.22 ) }
    dend_21 { pt3dadd( 136.421, 316.773, -78.4687, 0.22 ) }
    dend_21 { pt3dadd( 136.642, 316.76, -78.6564, 0.37 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 79/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 131.385, 317.788, -73.1576, 0.22 ) }
    dend_20 { pt3dadd( 133.42, 318.078, -75.0626, 0.22 ) }
    dend_20 { pt3dadd( 133.863, 318.139, -75.4499, 0.88 ) }
    dend_20 { pt3dadd( 134.905, 318.283, -76.3621, 0.22 ) }
    dend_20 { pt3dadd( 135.35, 318.344, -76.7515, 0.74 ) }
    dend_20 { pt3dadd( 136.931, 318.562, -78.1357, 0.22 ) }
    dend_20 { pt3dadd( 137.599, 318.654, -78.7209, 0.44 ) }
    dend_20 { pt3dadd( 138.541, 318.715, -79.3032, 0.22 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_2 = new SectionList()
    dend_67 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_66 ModelViewParmSubset_2.append()
    dend_63 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_65 ModelViewParmSubset_2.append()
    dend_64 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_67 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_66 ModelViewParmSubset_4.append()
    dend_63 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_65 ModelViewParmSubset_4.append()
    dend_64 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_67, dend_56, dend_51, dend_32, dend_13, dend_0, axon_0, dend_62, dend_57, dend_53, dend_52, dend_40, dend_33, dend_29, dend_14, dend_4, dend_1, axon_1, dend_66, dend_63, dend_61, dend_58, dend_55, dend_54, dend_50, dend_41, dend_35, dend_34, dend_31, dend_30, dend_16, dend_15, dend_12, dend_5, dend_3, dend_2, dend_65, dend_64, dend_60, dend_59, dend_47, dend_42, dend_39, dend_36, dend_24, dend_17, dend_7, dend_6, dend_49, dend_48, dend_46, dend_43, dend_38, dend_37, dend_28, dend_25, dend_23, dend_18, dend_9, dend_8, dend_45, dend_44, dend_27, dend_26, dend_22, dend_19, dend_11, dend_10, dend_21, dend_20]}
    ModelViewParmSubset_5 = new SectionList()
    dend_67 ModelViewParmSubset_5.append()
    dend_56 ModelViewParmSubset_5.append()
    dend_51 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_62 ModelViewParmSubset_5.append()
    dend_57 ModelViewParmSubset_5.append()
    dend_53 ModelViewParmSubset_5.append()
    dend_52 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_66 ModelViewParmSubset_5.append()
    dend_63 ModelViewParmSubset_5.append()
    dend_61 ModelViewParmSubset_5.append()
    dend_58 ModelViewParmSubset_5.append()
    dend_55 ModelViewParmSubset_5.append()
    dend_54 ModelViewParmSubset_5.append()
    dend_50 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_65 ModelViewParmSubset_5.append()
    dend_64 ModelViewParmSubset_5.append()
    dend_60 ModelViewParmSubset_5.append()
    dend_59 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_49 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_67]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_67 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_32 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_62 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_53 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_52 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_40 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_29 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_14 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_4 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_63]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_63 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_61 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_50 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_34 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_30 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_16 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_15 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_2 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_65]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_65 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_64]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_64 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_60 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_47 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_39 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_24 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_17 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_6 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_49 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_48 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_38 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_37 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_45 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_44 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_26 OneSecGrp_SectionRef_65.append()

    // Group: {name=OneSecGrp_SectionRef_68, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_68 = new SectionList()
    dend_11 OneSecGrp_SectionRef_68.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_51 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_56 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_0 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_1 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_13 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_57 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_58 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_59 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_66]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_66 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_5 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_35 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_31 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_54 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_55 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_12 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_7 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_36 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_8 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_41 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_9 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_69, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_69 = new SectionList()
    dend_10 OneSecGrp_SectionRef_69.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_42 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_46 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_43 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_18 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_25 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_67, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_67 = new SectionList()
    dend_19 OneSecGrp_SectionRef_67.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_22 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_28 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_70, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_70 = new SectionList()
    dend_21 OneSecGrp_SectionRef_70.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_23 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_71, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_71 = new SectionList()
    dend_20 OneSecGrp_SectionRef_71.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_27 OneSecGrp_SectionRef_64.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62, dend_63, dend_64, dend_65, dend_66, dend_67], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()
    dend_63 basal.append()
    dend_64 basal.append()
    dend_65 basal.append()
    dend_66 basal.append()
    dend_67 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_67, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_51, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_66, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_63, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_58, dend_58, dend_55, dend_55, dend_54, dend_54, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_50, dend_41, dend_41, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_65, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_64, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_47, dend_47, dend_47, dend_47, dend_42, dend_42, dend_42, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_36, dend_36, dend_36, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_46, dend_43, dend_43, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_18, dend_18, dend_18, dend_18, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_67 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_66 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_63 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_58 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_19()
}

proc subsets_19() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_20()
}

proc subsets_20() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_21()
}

proc subsets_21() {
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_65 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_64 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_22()
}

proc subsets_22() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_23()
}

proc subsets_23() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_46 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_24()
}

proc subsets_24() {
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_25()
}

proc subsets_25() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_26()
}

proc subsets_26() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 3.25478E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert StochKv_deterministic
        gmax_StochKv_deterministic = 7.43567E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cIR_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cIR_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cIR_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cIR_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_67 nseg = 15
    dend_32 nseg = 7
    dend_62 nseg = 3
    dend_53 nseg = 9
    dend_52 nseg = 7
    dend_40 nseg = 3
    dend_29 nseg = 7
    dend_14 nseg = 3
    dend_4 nseg = 7
    dend_63 nseg = 3
    dend_61 nseg = 3
    dend_50 nseg = 5
    dend_34 nseg = 5
    dend_30 nseg = 3
    dend_16 nseg = 15
    dend_15 nseg = 9
    dend_3 nseg = 11
    dend_2 nseg = 5
    dend_65 nseg = 7
    dend_64 nseg = 3
    dend_60 nseg = 3
    dend_47 nseg = 3
    dend_39 nseg = 3
    dend_24 nseg = 3
    dend_17 nseg = 3
    dend_6 nseg = 3
    dend_49 nseg = 5
    dend_48 nseg = 7
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_45 nseg = 5
    dend_44 nseg = 5
    dend_26 nseg = 3
    dend_11 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cIR216_L5_NBC_a17b13fac2_0_0


