// Cell: bNAC219_L6_LBC_9918304f5f_0_0
/*
{
  "id" : "bNAC219_L6_LBC_9918304f5f_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-5.78412, -8.09899, 0.0, 4.55814", "-5.26901, -7.31108, 0.0, 8.32644", "-4.7539, -6.52318, 0.0, 11.1999", "-4.23878, -5.73527, 0.0, 12.9076", "-3.72367, -4.94736, 0.0, 14.3867", "-3.20856, -4.15945, 0.0, 15.6541", "-2.69344, -3.37154, 0.0, 16.4084", "-2.17833, -2.58363, 0.0, 17.1297", "-1.66322, -1.79572, 0.0, 17.2471", "-1.1481, -1.00781, 0.0, 17.2628", "-0.632991, -0.219905, 0.0, 17.2074", "-0.117878, 0.568004, 0.0, 16.9082", "0.397236, 1.35591, 0.0, 16.5246", "0.912349, 2.14382, 0.0, 15.7252", "1.42746, 2.93173, 0.0, 14.8134", "1.94257, 3.71964, 0.0, 13.8399", "2.45769, 4.50755, 0.0, 12.6669", "2.9728, 5.29546, 0.0, 11.0086", "3.48791, 6.08336, 0.0, 8.99182", "4.00303, 6.87127, 0.0, 6.51377", "4.51814, 7.65918, 0.0, 3.7977" ]
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "-1.57932, -10.8079, -1.33, 5.9", "-2.1221, -14.4397, -1.43332, 5.22", "-2.78457, -18.8724, -1.55943, 4.31", "-3.67993, -24.8634, -1.72987, 3.63", "-4.28588, -28.9179, -1.84522, 3.18", "-4.72941, -31.8858, -1.92965, 3.18", "-5.545, -37.3429, -2.0849, 3.18" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-0.219318, -8.6764, -8.12, 2.04", "-0.260042, -10.3706, -8.05638, 2.04", "-0.271751, -13.5098, -8.03467, 2.04", "-0.251226, -14.9412, -8.07571, 2.04", "-0.206365, -16.8607, -8.16105, 2.04", "-0.1655, -18.6157, -8.26892, 2.04", "-0.100042, -21.4269, -8.44172, 1.81", "-0.0268931, -23.5409, -8.59039, 2.27", "0.0814407, -25.8948, -8.78468, 2.27", "0.20069, -27.8578, -9.00532, 2.27", "0.290761, -29.0797, -9.20609, 2.27" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "4.93069, -7.9099, -3.17, 2.72", "5.93349, -8.76204, -3.14762, 1.81", "7.24639, -9.85822, -3.20644, 1.59", "8.46507, -10.8641, -3.30844, 1.81", "9.02356, -11.3135, -3.37717, 2.04", "10.3507, -12.382, -3.59908, 1.81", "11.4795, -13.282, -3.80917, 1.36", "12.4795, -14.078, -4.02931, 1.13", "13.6546, -15.0369, -4.33817, 1.59", "15.0241, -16.2111, -4.80931, 1.36", "16.0804, -17.1631, -5.23252, 1.36", "16.6786, -17.7093, -5.50033, 1.81", "17.6915, -18.644, -5.99512, 1.36", "18.7994, -19.6401, -6.57365, 1.36", "20.3386, -21.0281, -7.46526, 1.36", "21.8633, -22.3635, -8.36545, 1.36", "23.0154, -23.3103, -9.02518, 1.36", "23.8598, -23.9658, -9.48778, 0.91", "24.9417, -24.7562, -10.0513, 1.59", "26.3253, -25.6868, -10.7043, 1.13", "27.7892, -26.6173, -11.2954, 1.13", "28.9916, -27.3744, -11.7358, 1.13", "30.3446, -28.2366, -12.2134, 1.13", "31.8279, -29.1913, -12.7359, 0.91", "32.9909, -29.9462, -13.1382, 1.13", "34.0722, -30.6611, -13.4782, 0.91", "35.2665, -31.4856, -13.8391, 1.13", "37.1808, -32.8259, -14.397, 1.13", "38.7318, -33.8901, -14.8707, 1.13", "40.0829, -34.8015, -15.2869, 0.91", "41.2138, -35.5714, -15.6688, 1.13", "42.0553, -36.1453, -16.0013, 1.13", "43.3388, -36.9846, -16.5207, 0.68", "44.7923, -37.921, -17.1406, 0.91", "45.6669, -38.4644, -17.546, 0.91", "47.6155, -39.6323, -18.4656, 0.91", "49.1407, -40.4958, -19.1521, 1.13", "51.0534, -41.5496, -19.916, 1.13", "52.4855, -42.3111, -20.3929, 0.91", "54.0629, -43.1235, -20.8064, 1.13", "56.0977, -44.1282, -21.2272, 0.68", "58.0486, -45.0517, -21.5118, 0.68", "59.3351, -45.6446, -21.638, 1.36", "60.6041, -46.231, -21.7373, 1.36", "62.2122, -46.9754, -21.7974, 0.68", "63.9321, -47.796, -21.81, 0.45", "65.326, -48.4889, -21.8234, 0.68", "66.188, -48.9482, -21.8342, 1.59" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "4.22069, 7.79811, -5.26, 1.36", "4.44499, 8.59969, -5.29437, 1.36", "4.93795, 10.2745, -5.36535, 1.13", "5.29608, 11.4316, -5.46234, 0.91", "5.67821, 12.4364, -5.58264, 0.91", "6.29655, 13.7948, -5.8044, 0.91", "6.78473, 14.7702, -6.00856, 0.91", "7.38804, 15.9644, -6.33752, 1.13", "7.98133, 17.2017, -6.78095, 0.91", "8.5841, 18.5535, -7.43256, 0.91", "9.00498, 19.5544, -8.04923, 1.36", "9.29497, 20.4358, -8.69414, 1.36", "9.49559, 21.3541, -9.38376, 1.13", "9.59889, 22.4621, -10.17, 1.59", "9.61518, 23.7559, -11.0086, 0.45", "9.57005, 24.7304, -11.6393, 0.91", "9.44127, 26.4213, -12.7401, 1.81", "9.38347, 27.311, -13.3498, 1.36", "9.37079, 28.3664, -14.1267, 1.59", "9.42064, 29.4005, -14.9484, 1.13", "9.51628, 30.3874, -15.8605, 0.91", "9.61893, 30.7345, -16.3646, 0.91", "9.86787, 30.9616, -17.0002, 0.91", "10.1567, 31.0977, -17.573, 0.91", "10.5855, 31.1835, -18.3017, 1.36", "11.5025, 31.2558, -19.6688, 0.68", "12.5626, 31.3086, -21.1038, 1.36", "13.6072, 31.3389, -22.4452, 1.36", "14.3695, 31.3533, -23.3733, 0.45", "15.5499, 31.3501, -24.8176, 0.23", "16.3902, 31.3285, -25.8651, 0.23", "16.805, 31.3058, -26.3933, 0.45", "17.6345, 31.2974, -27.5169, 0.23", "18.6114, 31.3621, -28.9626, 0.23", "19.2451, 31.4676, -29.9242, 0.68", "20.1024, 31.7156, -31.2101, 1.13", "21.4355, 32.225, -33.2134, 0.23", "22.1444, 32.5603, -34.2996, 0.23", "22.8212, 32.961, -35.3295, 0.68", "23.5406, 33.4931, -36.416, 1.13", "23.9928, 33.8659, -37.0506, 1.13", "25.0392, 34.8166, -38.442, 0.45", "26.0438, 35.8135, -39.7299, 0.45", "26.5355, 36.3418, -40.3938, 0.91", "27.7098, 37.7368, -42.1274, 0.23", "28.2453, 38.4219, -43.0151, 0.23", "28.918, 39.2332, -44.1943, 0.23", "29.4584, 39.8086, -45.1746, 0.68", "29.9391, 40.1845, -46.0644, 0.68", "30.7052, 40.6878, -47.5443, 0.23", "31.5775, 41.1022, -49.2655, 0.23", "32.4467, 41.3903, -51.0265, 0.23", "32.9288, 41.4569, -51.9774, 0.23", "33.912, 41.4234, -53.755, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.70068, 8.94261, -2.94, 2.04", "2.07642, 11.0859, -3.14699, 2.04", "2.67173, 14.4817, -3.47495, 1.81", "3.20355, 17.5153, -3.76793, 1.13", "3.70786, 20.3919, -4.04575, 1.36", "3.71243, 20.418, -4.04827, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "1.76068, 8.3021, -1.04, 4.31", "1.20867, 9.62295, -0.421677, 3.4", "0.955461, 10.2288, -0.138051, 3.4", "-0.110241, 12.7788, 1.05567, 2.04", "-0.541146, 13.8099, 1.53834, 2.5" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-5.24932, 3.1256, 3.4, 1.36", "-5.46885, 4.86101, 4.50641, 1.36", "-5.49101, 7.19858, 5.59682, 1.36", "-5.38946, 8.83988, 6.26353, 1.36", "-5.22942, 10.5728, 6.92659, 1.13", "-5.03295, 12.0668, 7.47179, 1.13", "-4.7585, 14.1459, 8.19511, 1.13", "-4.43641, 16.1166, 8.80785, 0.68", "-3.9008, 18.8357, 9.57482, 1.36", "-3.37767, 21.3059, 10.2738, 0.68", "-3.12185, 22.5294, 10.6276, 1.13", "-2.61074, 25.2464, 11.4813, 0.68", "-2.31719, 27.1989, 12.1281, 0.23", "-2.14894, 28.5144, 12.5535, 1.36", "-2.05012, 29.5637, 12.8371, 0.23", "-2.05354, 30.9597, 13.0939, 0.68", "-2.15902, 32.0251, 13.1585, 0.68", "-2.33694, 33.5161, 13.0829, 0.68", "-2.66328, 35.7306, 12.8307, 0.68", "-2.7795, 36.4169, 12.764, 1.13", "-3.19339, 39.4403, 12.5482, 0.23", "-3.37538, 42.1447, 12.436, 0.23", "-3.34098, 44.966, 12.394, 0.23", "-3.24923, 47.1527, 12.378, 0.23", "-3.13262, 49.2186, 12.3906, 0.68", "-2.89228, 51.3908, 12.4928, 0.23", "-2.39874, 53.5037, 12.7937, 0.23", "-1.94603, 54.8623, 13.1501, 0.23", "-0.86735, 66.8619, 13.8996, 0.23", "0.202351, 78.7433, 15.6715, 0.23", "2.18776, 90.4962, 17.4314, 0.23", "4.81426, 102.213, 18.3823, 0.23", "7.73167, 113.718, 20.3187, 0.23", "11.9373, 124.197, 24.1976, 0.23", "17.1297, 134.008, 28.4479, 0.23", "20.7946, 144.367, 33.0895, 0.23", "22.8179, 154.845, 38.4427, 0.23" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "5.36068, 7.81911, -4.06, 1.59", "6.20888, 8.73304, -3.87703, 1.59", "7.70911, 10.3893, -3.5268, 1.36", "9.12014, 11.9875, -3.18133, 1.59", "11.0778, 14.2497, -2.65474, 1.36", "13.1453, 16.6851, -2.07818, 1.36", "14.6764, 18.5196, -1.6542, 1.36", "16.4216, 20.6786, -1.21487, 1.36", "18.0328, 22.7169, -0.873965, 1.36", "19.2538, 24.3154, -0.677578, 1.36", "19.8383, 25.1092, -0.637886, 1.81", "21.1347, 26.8815, -0.73785, 1.36", "22.7137, 28.9697, -1.01373, 0.91", "24.2382, 30.9333, -1.40506, 1.36", "26.0578, 33.2053, -1.8526, 1.36", "27.2814, 34.6998, -2.11831, 1.59", "29.0207, 36.7862, -2.48399, 1.13", "30.51, 38.5389, -2.77119, 1.36", "32.043, 40.2996, -2.99068, 1.81", "33.7151, 42.205, -3.16722, 1.81", "35.1928, 43.8281, -3.16528, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "4.93069, 6.9056, -0.94, 1.59", "5.67065, 8.94639, -0.119549, 1.59", "6.14158, 10.3671, 0.452355, 1.36", "6.83856, 12.5104, 1.3345, 2.04", "7.9759, 15.9958, 2.77409, 1.36", "8.59404, 17.8388, 3.58256, 1.81", "9.66109, 20.8899, 4.93655, 1.36", "10.1609, 22.2481, 5.59023, 1.13", "10.9625, 24.2671, 6.58493, 1.59", "11.6446, 25.768, 7.33527, 1.59", "12.7543, 27.9443, 8.37352, 1.13", "13.4547, 29.2373, 8.96241, 1.13", "14.4888, 31.0193, 9.75278, 1.81", "15.8295, 33.3336, 10.747, 1.13", "16.8348, 35.0614, 11.4602, 1.36", "18.0463, 37.1544, 12.2877, 1.13", "18.6432, 38.2179, 12.6678, 1.59", "19.4688, 39.7772, 13.2377, 1.36", "20.1754, 41.2537, 13.7404, 1.36" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999997093558307,
    "numberInternalDivisions" : 3
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "4.51814, 7.65918, 0.0, 1.16355", "12.7262, 20.2141, 0.0, 1.16355", "20.9343, 32.7691, 0.0, 1.16355" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_50",
    "id" : "dend_50",
    "points3d" : [ "-5.545, -37.3429, -2.0849, 2.27", "-5.1971, -39.3178, -1.53729, 2.27", "-4.79764, -41.5853, -0.908529, 2.27", "-4.41835, -43.7383, -0.311529, 2.27", "-4.31155, -44.3446, -0.143403, 2.27" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "-5.545, -37.3429, -2.0849, 1.13", "-8.46085, -39.7556, -2.38073, 1.13", "-9.70325, -40.7745, -2.48491, 1.13", "-12.6197, -43.0846, -2.69384, 1.13", "-14.1829, -44.3189, -2.86236, 1.59", "-16.474, -46.123, -3.16987, 1.36", "-17.9679, -47.2682, -3.41136, 1.36", "-19.1482, -48.1245, -3.67133, 1.36", "-20.6196, -49.1838, -4.0668, 1.36", "-22.0376, -50.2244, -4.55566, 1.36", "-23.6812, -51.4463, -5.23525, 1.36", "-25.6868, -52.9614, -6.15774, 1.36", "-27.2816, -54.2504, -6.85981, 1.36", "-28.1019, -54.9684, -7.2363, 1.36", "-29.643, -56.4489, -7.92344, 1.59", "-31.1658, -58.0708, -8.53743, 1.13", "-33.0384, -60.2456, -9.30189, 1.36", "-35.0289, -62.6943, -10.0858, 1.36", "-36.0295, -63.9257, -10.4504, 2.04", "-37.7316, -65.967, -11.0689, 1.59", "-39.6877, -68.2897, -11.7788, 1.13", "-40.6742, -69.4312, -12.1389, 1.13", "-41.3748, -70.176, -12.4119, 1.13", "-42.2791, -71.0153, -12.7656, 1.13", "-44.0509, -72.5307, -13.409, 0.91", "-45.0829, -73.3783, -13.7833, 0.91", "-46.0316, -74.2099, -14.0414, 0.91", "-47.3818, -75.5521, -14.2672, 0.91", "-48.8628, -77.1368, -14.4151, 0.68", "-50.4004, -78.8197, -14.502, 0.91", "-52.2171, -80.7704, -14.5624, 0.91", "-55.1226, -83.8534, -14.6525, 1.13", "-57.3968, -86.2424, -14.7742, 1.81", "-59.4525, -88.3733, -14.9179, 0.91", "-61.2584, -90.2375, -15.1035, 0.91", "-63.2594, -92.2596, -15.3965, 1.59", "-64.2324, -93.2152, -15.596, 1.59", "-65.8024, -94.705, -16.097, 0.68", "-66.5627, -95.416, -16.3742, 0.68", "-67.7235, -96.523, -16.7979, 1.13", "-68.5692, -97.365, -17.1011, 1.13", "-69.3026, -98.0787, -17.3406, 1.13", "-70.7323, -99.376, -17.7584, 0.91", "-72.4111, -100.793, -18.1807, 1.13", "-73.9043, -102.029, -18.4883, 1.13", "-75.2083, -103.099, -18.7032, 0.68", "-76.8885, -104.516, -18.8982, 0.68", "-77.9471, -105.426, -18.9769, 1.13", "-78.59, -105.951, -19.0024, 1.13", "-81.0549, -107.746, -19.1255, 0.68", "-82.6838, -108.814, -19.2664, 1.13", "-83.6061, -109.378, -19.3734, 1.36", "-85.4749, -110.493, -19.6614, 0.68", "-87.8726, -111.863, -20.1134, 1.13", "-90.347, -113.225, -20.7358, 0.45", "-91.8257, -113.956, -21.1884, 0.23", "-93.5048, -114.765, -21.7314, 0.45", "-94.6908, -115.317, -22.1249, 1.13", "-97.3096, -116.478, -23.0091, 0.45", "-99.2896, -117.285, -23.6552, 1.36", "-101.787, -118.158, -24.3325, 1.81", "-103.305, -118.536, -24.682, 0.68", "-104.971, -118.826, -25.0142, 0.91", "-107.014, -119.067, -25.3393, 1.13", "-109.197, -119.233, -25.6303, 0.68", "-112.06, -119.361, -25.8975, 1.36", "-114.827, -119.43, -26.1116, 0.23", "-116.615, -119.437, -26.2164, 1.59", "-117.596, -119.438, -26.2429, 1.59" ],
    "parent" : "dend_46",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "0.290761, -29.0797, -9.20609, 0.68", "1.087, -29.2934, -11.5848, 0.68", "2.02856, -29.6491, -13.6464, 1.13", "3.06147, -30.1999, -15.6005, 1.13", "3.62952, -30.5659, -16.6099, 1.13", "4.12398, -30.9357, -17.5014, 0.91", "4.99016, -31.62, -19.1361, 1.36", "5.93656, -32.3021, -20.7031, 1.13", "6.95129, -33.1857, -22.2779, 1.13", "7.2413, -33.5317, -22.743, 1.13", "7.55316, -33.9864, -23.2821, 1.13", "7.99518, -34.7514, -24.1522, 1.13", "8.43987, -35.5482, -25.0497, 1.13", "9.00078, -36.5911, -26.2691, 1.13", "9.75926, -38.0905, -28.052, 0.68", "10.203, -38.9638, -29.0938, 1.13", "11.2184, -41.0256, -31.5955, 0.68", "11.8741, -42.3307, -33.2335, 1.13", "12.9002, -44.3345, -35.8385, 0.45", "13.4183, -45.2326, -37.0783, 0.45", "14.5675, -46.9722, -39.6551, 0.45", "15.8338, -48.7358, -42.4073, 1.13", "17.1639, -50.455, -45.1817, 0.45", "18.1297, -51.6611, -47.0503, 0.45", "19.8387, -53.6347, -49.9848, 0.45", "21.0996, -55.0241, -52.0039, 0.23", "22.2213, -56.2008, -53.6836, 1.13", "23.2549, -57.2332, -55.0873, 0.23", "25.0491, -58.9406, -57.2936, 0.23", "26.5544, -60.2217, -58.8793, 0.68", "29.456, -62.3999, -61.3818, 0.23", "32.9158, -64.4895, -63.6675, 0.23", "34.0974, -65.0257, -64.2671, 0.23", "36.2144, -65.727, -65.1497, 0.68", "39.2844, -66.5537, -66.3043, 0.23", "41.7863, -67.2133, -67.1482, 0.91", "45.3267, -68.1631, -68.3052, 0.23", "49.3209, -69.2606, -69.6738, 0.23", "55.5316, -71.0427, -72.129, 0.23", "60.6709, -72.6171, -74.5155, 0.23", "62.8756, -73.3372, -75.7169, 0.68", "65.8822, -74.3864, -77.4963, 0.23", "67.5086, -75.0295, -78.5581, 0.91", "69.3565, -75.8288, -79.8755, 0.23", "72.0124, -77.0015, -82.0541, 0.68", "74.5562, -77.9272, -84.4988, 0.23" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "0.290761, -29.0797, -9.20609, 1.81", "-1.18485, -30.9592, -11.2418, 1.81", "-2.33914, -32.4379, -12.7805, 1.81", "-3.41317, -33.76, -14.0721, 1.81", "-4.97939, -35.688, -15.9556, 1.81", "-6.01303, -36.9603, -17.1986, 1.81", "-6.75292, -37.8711, -18.0884, 1.59", "-7.38223, -38.7429, -18.8964, 1.81", "-8.15034, -39.8895, -19.9694, 1.81" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "66.188, -48.9482, -21.8342, 0.23", "68.738, -48.5442, -21.6844, 0.23", "73.5177, -47.5766, -21.1239, 0.45", "75.7171, -47.1077, -20.8634, 0.45", "78.4917, -46.4328, -20.5437, 0.23", "81.0226, -45.8172, -20.252, 1.13", "85.1282, -44.8185, -19.7789, 0.23", "88.359, -43.8815, -19.2923, 0.91", "91.7034, -42.6695, -18.7151, 0.23", "94.6576, -41.57, -18.2338, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "66.188, -48.9482, -21.8342, 0.23", "68.2766, -50.0558, -21.5298, 0.23", "70.6537, -51.3081, -21.241, 0.23", "72.682, -52.3996, -21.0246, 0.23", "73.8604, -53.0477, -20.9094, 1.36", "75.5976, -54.0278, -20.749, 0.23", "77.3379, -55.0585, -20.5957, 0.68", "79.4903, -56.404, -20.4799, 0.23", "80.8177, -57.2975, -20.4664, 0.23", "81.567, -57.8533, -20.4872, 0.23", "82.2093, -58.3625, -20.5143, 0.91", "83.874, -59.7961, -20.613, 0.23", "85.1532, -60.9735, -20.7162, 0.23", "85.6473, -61.4238, -20.734, 0.91", "86.5605, -62.1745, -20.7329, 0.91", "87.3303, -62.727, -20.7132, 0.23", "88.1802, -63.2503, -20.6779, 0.23", "89.2371, -63.8243, -20.6486, 0.68", "91.545, -65.0179, -20.5914, 0.23", "93.1551, -65.8203, -20.5893, 0.23", "94.5757, -66.4993, -20.6194, 1.36", "95.8563, -67.1033, -20.6714, 0.45", "97.7068, -67.9664, -20.7875, 0.23", "98.79, -68.479, -20.8829, 1.13", "99.6323, -68.8916, -20.9475, 1.13", "100.827, -69.4991, -20.9798, 0.23", "101.467, -69.8333, -20.969, 0.91", "102.395, -70.3315, -20.9159, 0.91", "104.31, -71.4001, -20.7319, 0.23", "106.357, -72.6544, -20.5122, 0.23", "107.684, -73.5505, -20.3581, 0.23", "108.21, -73.9542, -20.2911, 1.13", "109.934, -75.4088, -20.0667, 0.23", "110.806, -76.2212, -19.9545, 1.36", "112.017, -77.4646, -19.7823, 0.68", "112.831, -78.3629, -19.7036, 1.13", "113.897, -79.5536, -19.5885, 0.23", "114.443, -80.1542, -19.5178, 0.68", "115.189, -80.9621, -19.3864, 0.68", "116.84, -82.6842, -19.05, 0.23", "117.925, -83.8128, -18.7801, 0.68", "118.912, -84.8299, -18.5165, 0.23", "119.568, -85.4905, -18.33, 0.23", "120.658, -86.6223, -17.9859, 0.23", "121.581, -87.6036, -17.6583, 0.23", "122.671, -88.8509, -17.1951, 0.91" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "3.71243, 20.418, -4.04827, 0.23", "3.01313, 22.4178, -5.04729, 0.23", "2.57939, 23.8143, -5.66512, 0.68", "2.1481, 25.6683, -6.37117, 1.13", "1.87844, 27.2265, -7.02558, 0.68", "1.40267, 29.7132, -8.24885, 0.68", "1.18253, 30.9052, -8.86247, 0.68", "1.07142, 31.536, -9.2052, 0.68", "0.741798, 33.0957, -10.1563, 1.81", "0.317237, 35.4142, -11.6826, 1.13", "-0.120793, 38.0379, -13.5877, 0.68", "-0.382178, 39.3844, -14.6292, 1.13", "-0.883858, 41.6599, -16.4263, 0.45", "-1.24045, 43.2443, -17.7454, 0.45", "-1.59601, 45.0465, -19.3852, 1.36", "-1.78444, 46.5046, -20.8929, 0.68", "-1.77009, 47.54, -22.2008, 0.68", "-1.63894, 48.8851, -24.1172, 1.36", "-1.31744, 50.6304, -26.824, 0.45", "-0.893445, 52.0331, -29.2754, 0.45", "-0.401733, 53.2521, -31.8376, 0.45", "0.233679, 54.2774, -34.4605, 0.45", "0.797243, 54.8582, -36.3066, 1.81" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "3.71243, 20.418, -4.04827, 1.13", "3.53702, 23.6615, -4.47262, 1.13", "3.55355, 26.511, -4.80584, 1.13", "3.70316, 30.0686, -5.30256, 1.13", "3.96164, 34.162, -5.945, 1.13", "4.06612, 35.7211, -6.20855, 1.13", "4.22302, 37.5633, -6.54141, 1.13", "4.5207, 40.6121, -7.1159, 1.36", "4.89678, 43.5321, -7.69205, 1.13", "5.49242, 46.9512, -8.41079, 1.13", "6.01687, 49.4059, -9.01114, 1.59", "6.36709, 51.1085, -9.47032, 1.36" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-0.541146, 13.8099, 1.53834, 2.95", "-1.85993, 14.6421, 1.7919, 2.95" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-0.541146, 13.8099, 1.53834, 0.91", "0.0465375, 15.5482, 2.56977, 0.91", "0.13248, 15.9296, 2.83221, 0.91", "0.332187, 16.6577, 3.42302, 0.91", "0.658581, 17.5388, 4.2264, 1.36", "1.2956, 18.827, 5.57057, 0.91", "1.8718, 19.7383, 6.60264, 0.91", "2.75316, 20.7892, 7.924, 1.36", "3.83087, 21.9049, 9.4977, 0.68", "4.62797, 22.6262, 10.6373, 0.23", "5.44318, 23.2625, 11.7049, 0.23", "6.50353, 23.8081, 12.8375, 0.23", "6.88059, 23.9241, 13.164, 1.13", "7.65008, 24.0761, 13.7351, 0.23", "8.19042, 24.1557, 14.1046, 0.23", "8.97478, 24.2617, 14.6332, 0.68", "10.6645, 24.5015, 15.7775, 0.23", "11.255, 24.369, 16.1949, 0.23", "14.6701, 27.2703, 22.2878, 0.23", "19.0418, 30.6536, 27.4742, 0.23" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "22.8179, 154.845, 38.4427, 0.23", "24.3276, 163.41, 40.3447, 0.23", "25.2879, 171.509, 43.8456, 0.23", "25.944, 179.776, 47.0484, 0.23", "25.8436, 187.705, 51.0246, 0.23", "26.4484, 195.184, 55.6833, 0.23", "26.0827, 202.113, 61.0945, 0.23", "24.3207, 208.725, 66.6029, 0.23", "24.2345, 215.389, 72.3175, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "22.8179, 154.845, 38.4427, 0.23", "24.9776, 167.066, 41.0284, 0.23", "25.9627, 179.638, 42.6223, 0.23", "24.4859, 192.22, 43.7962, 0.23", "23.3722, 204.498, 46.8401, 0.23", "23.493, 216.513, 50.8721, 0.23", "24.9754, 228.04, 55.8095, 0.23", "25.034, 239.646, 60.8189, 0.23", "26.937, 250.849, 66.2617, 0.23" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "35.1928, 43.8281, -3.16528, 0.68", "35.9486, 44.7107, -3.34561, 0.68", "36.7651, 45.6487, -3.53548, 1.13", "37.3898, 46.3872, -3.72144, 1.59", "38.3851, 47.5718, -4.05482, 0.68", "38.9904, 48.2818, -4.26191, 0.68", "39.9128, 49.3396, -4.56989, 1.81", "40.7498, 50.2884, -4.87137, 0.91", "41.7021, 51.3631, -5.21467, 0.23", "42.4918, 52.2464, -5.50843, 1.13", "43.0765, 52.8872, -5.7217, 1.13", "43.8203, 53.629, -5.96774, 0.23", "44.4823, 54.2123, -6.16399, 0.23", "45.1162, 54.699, -6.32805, 0.91", "45.7471, 55.1163, -6.44705, 0.23", "46.3983, 55.5207, -6.57162, 1.36", "47.395, 56.1063, -6.76415, 0.23", "47.9404, 56.4309, -6.86373, 1.36", "48.5856, 56.8486, -6.98569, 1.81", "50.3055, 58.134, -7.3307, 0.23", "51.2827, 58.9394, -7.55197, 0.23", "52.0639, 59.6157, -7.7333, 1.36", "53.0272, 60.5181, -7.95834, 0.23", "53.9145, 61.4002, -8.18001, 0.91", "54.7337, 62.2737, -8.40647, 0.23", "55.393, 63.1038, -8.62047, 2.27" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "35.1928, 43.8281, -3.16528, 0.23", "36.9312, 44.1582, -3.18989, 0.23", "38.9423, 44.7014, -3.27592, 0.45", "40.2136, 45.1423, -3.36161, 1.13", "42.749, 46.0784, -3.54502, 0.45", "44.0922, 46.6126, -3.66616, 1.36", "45.8425, 47.3699, -3.83999, 1.13", "48.0868, 48.4491, -4.1051, 0.91", "50.3076, 49.6298, -4.36077, 0.68", "51.4766, 50.3159, -4.4391, 0.23", "52.4642, 50.9383, -4.44301, 0.68", "53.8274, 51.8076, -4.36452, 0.23", "55.0033, 52.5461, -4.23262, 1.13", "57.9161, 54.2559, -3.79265, 0.23", "61.1957, 56.0548, -3.21225, 0.23", "62.7346, 56.7975, -2.9257, 1.36", "63.8805, 57.2586, -2.6995, 1.36", "66.2617, 58.0147, -2.24045, 0.23", "67.3237, 58.2627, -2.04987, 0.23", "68.8726, 58.352, -1.81864, 0.91", "71.2521, 58.093, -1.63523, 0.23", "71.9586, 57.9817, -1.61163, 0.91", "73.3097, 57.7591, -1.61897, 0.91", "74.8618, 57.5309, -1.6809, 0.23", "77.1672, 57.2775, -1.88251, 1.59", "80.6976, 57.0355, -2.40448, 0.23", "82.5104, 56.9787, -2.72859, 0.68", "83.6914, 56.9765, -2.96683, 0.23", "84.91, 57.0111, -3.25757, 0.91", "86.9562, 57.1628, -3.8456, 0.23", "88.3449, 57.431, -4.33833, 1.36" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "20.1754, 41.2537, 13.7404, 0.45", "22.0654, 41.726, 13.788, 0.45", "24.5236, 42.4889, 13.8879, 0.45", "26.0113, 43.0108, 13.9336, 0.91", "28.0064, 43.7098, 13.938, 0.23", "29.8485, 44.3313, 13.9105, 0.68", "31.9262, 44.9927, 13.8208, 0.68", "33.3101, 45.4, 13.7173, 0.23", "34.5979, 45.7763, 13.5609, 0.23", "36.8976, 46.4517, 13.2041, 0.23", "38.7954, 46.9722, 12.8365, 0.23", "40.5568, 47.3865, 12.4068, 0.23", "41.5946, 47.5949, 12.1098, 0.23", "42.9143, 47.805, 11.7256, 0.68", "44.1972, 48.0029, 11.3466, 0.68", "45.6665, 48.2911, 10.8744, 0.23", "56.7213, 50.0089, 8.03991, 0.23", "67.7786, 51.9498, 5.36326, 0.23", "79.1994, 53.47, 4.68917, 0.23", "90.1439, 56.4579, 2.53384, 0.23", "100.917, 58.7952, -0.884914, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "20.1754, 41.2537, 13.7404, 0.91", "20.8215, 43.5382, 14.2379, 0.91", "21.6319, 45.5735, 14.601, 1.36", "22.7173, 48.2994, 15.0874, 0.91", "23.7433, 50.8762, 15.5472, 0.91", "24.4407, 52.6279, 15.8597, 0.68", "25.4639, 55.1974, 16.3182, 0.45", "26.5568, 57.4581, 16.7123, 0.23", "29.8109, 71.1695, 17.6615, 0.23", "31.9265, 84.8234, 20.6774, 0.23", "32.9047, 98.56, 23.9604, 0.23", "36.8016, 111.429, 28.1201, 0.23", "42.2621, 123.008, 33.7228, 0.23", "46.6028, 134.19, 40.8636, 0.23", "52.8614, 145.894, 45.2275, 0.23" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "20.9343, 32.7691, 0.0, 0.618445", "29.1424, 45.3241, 0.0, 0.618445", "37.3505, 57.8791, 0.0, 0.618445" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_54",
    "id" : "dend_54",
    "points3d" : [ "-4.31155, -44.3446, -0.143403, 0.68", "-4.27836, -47.0594, 0.189023, 0.68", "-4.41639, -49.8047, 0.451754, 1.13", "-4.56018, -51.7977, 0.645443, 1.13", "-4.76092, -54.5529, 0.937435, 1.36", "-4.95303, -57.5858, 1.29187, 1.36", "-5.15542, -61.4995, 1.75318, 1.36", "-5.34545, -65.0391, 2.14702, 1.36", "-5.50882, -67.8312, 2.44616, 1.36", "-5.70764, -71.2704, 2.78181, 1.36", "-5.94987, -76.0712, 3.25085, 1.59", "-6.07144, -79.4387, 3.59985, 1.59", "-6.13388, -84.1875, 4.11297, 1.36", "-6.13778, -88.6037, 4.5761, 1.36", "-6.16468, -91.9935, 4.86892, 1.59" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_51",
    "id" : "dend_51",
    "points3d" : [ "-4.31155, -44.3446, -0.143403, 1.59", "-5.09023, -46.0305, 1.56767, 1.59", "-6.02421, -48.0527, 3.62002, 1.81", "-6.61209, -49.3256, 4.91183, 1.81" ],
    "parent" : "dend_50",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_49",
    "id" : "dend_49",
    "points3d" : [ "-117.596, -119.438, -26.2429, 0.23", "-118.549, -120.608, -26.9939, 0.23", "-119.52, -121.923, -27.6938, 0.23", "-119.92, -122.495, -27.9579, 0.91", "-120.39, -123.183, -28.2349, 0.45", "-120.799, -123.773, -28.45, 0.91", "-121.379, -124.6, -28.7193, 0.23", "-121.856, -125.318, -28.8804, 0.23", "-122.471, -126.24, -29.0581, 0.91", "-123.09, -127.118, -29.2407, 0.91", "-123.594, -127.795, -29.3839, 1.59", "-124.364, -128.827, -29.6025, 0.23", "-124.925, -129.587, -29.7713, 0.68", "-125.656, -130.637, -30.0087, 0.23", "-126.168, -131.435, -30.1978, 0.91", "-126.643, -132.225, -30.4134, 0.91", "-127.268, -133.291, -30.7345, 0.23", "-127.787, -134.124, -31.0132, 0.91", "-128.363, -134.933, -31.3131, 0.23", "-129.164, -135.844, -31.6859, 0.45", "-130.009, -136.612, -32.0631, 0.45", "-130.412, -136.921, -32.2374, 1.13", "-131.378, -137.603, -32.6276, 1.81", "-132.201, -138.233, -32.9608, 1.36", "-133.289, -139.16, -33.4301, 0.68", "-133.833, -139.704, -33.6724, 1.13", "-134.779, -140.986, -34.1915, 0.68", "-135.332, -141.879, -34.535, 1.13", "-136.125, -143.526, -35.1334, 0.45", "-136.469, -144.487, -35.4613, 0.45", "-136.585, -144.967, -35.6205, 1.13", "-136.836, -146.509, -36.1217, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "-117.596, -119.438, -26.2429, 0.23", "-119.594, -119.32, -26.2445, 0.23", "-120.804, -119.274, -26.2654, 0.91", "-122.693, -119.255, -26.3223, 0.23", "-124.82, -119.282, -26.3651, 0.91", "-126.492, -119.272, -26.3907, 0.23", "-127.724, -119.253, -26.4099, 0.23", "-131.289, -119.251, -26.5125, 0.68", "-134.156, -119.299, -26.6077, 0.23", "-136.148, -119.413, -26.687, 0.23", "-138.182, -119.618, -26.7831, 0.45", "-140.777, -119.863, -26.9071, 0.23", "-141.99, -120.003, -26.971, 0.23", "-143.147, -120.214, -27.0495, 0.23", "-145.477, -120.781, -27.2621, 0.23", "-147.281, -121.415, -27.5144, 0.23" ],
    "parent" : "dend_47",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "-8.15034, -39.8895, -19.9694, 1.13", "-8.02411, -40.802, -22.2293, 1.13", "-7.86349, -41.7436, -23.6171, 1.13", "-7.53019, -42.8546, -24.6353, 0.45", "-7.14537, -43.7315, -25.2204, 0.68", "-6.74533, -44.5435, -25.6734, 0.68", "-5.7172, -46.6193, -26.6533, 1.13", "-4.85552, -48.2401, -27.2583, 1.13", "-3.72276, -50.3811, -28.0065, 0.91", "-2.87428, -52.0463, -28.5983, 0.91", "-1.70025, -54.34, -29.464, 1.59", "-0.424851, -56.8428, -30.6127, 0.91", "0.627681, -58.8803, -31.778, 0.91", "1.47606, -60.5031, -32.9531, 0.91", "2.77957, -63.2089, -35.3993, 0.91", "3.37007, -64.6015, -36.9661, 1.36", "4.27744, -66.8066, -40.0983, 0.68", "4.66654, -67.7163, -41.8106, 0.68", "5.00383, -68.4577, -43.7218, 0.68", "5.29203, -69.0489, -46.0378, 1.36", "5.46883, -69.467, -48.6443, 0.68", "5.54613, -69.6709, -50.0964, 0.68", "5.64792, -70.0783, -52.186, 0.68", "5.72528, -70.7627, -53.9572, 0.68", "5.9223, -71.8608, -55.8533, 0.68", "6.10984, -72.6949, -56.9949, 0.68", "6.38114, -74.1251, -58.5034, 0.68", "6.72695, -76.0732, -60.3465, 0.68", "7.33872, -78.7935, -62.6725, 0.68", "8.11207, -81.4959, -64.8761, 0.68", "9.05271, -83.8666, -66.8348, 0.68", "10.4741, -86.8533, -69.3422, 0.45", "11.8472, -89.3716, -71.471, 0.45", "13.1766, -91.4958, -73.1942, 1.13", "14.5487, -93.4807, -74.6715, 0.45", "17.0457, -96.9461, -76.8466, 0.45", "17.9446, -98.1151, -77.4886, 1.13", "19.512, -100.067, -78.4374, 1.13", "21.3761, -102.423, -79.337, 0.23", "22.8418, -104.329, -79.9471, 0.91", "24.0953, -105.97, -80.3458, 0.91", "26.8889, -109.665, -81.1328, 0.23", "29.0694, -112.466, -81.732, 0.23", "30.9534, -114.836, -82.2149, 0.45", "31.6826, -115.715, -82.4207, 0.45", "33.4327, -117.781, -82.9421, 0.23", "35.8157, -120.63, -83.6407, 0.23" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-8.15034, -39.8895, -19.9694, 0.91", "-9.57866, -40.872, -20.9363, 0.91", "-10.6667, -41.7186, -21.7336, 1.13", "-11.9961, -42.8219, -22.7082, 1.13", "-13.5449, -44.0913, -23.8154, 1.13", "-13.9848, -44.4438, -24.1277, 1.13", "-14.9066, -45.1436, -24.7766, 1.13", "-16.2553, -46.1274, -25.7494, 1.13", "-17.0444, -46.6512, -26.3222, 1.59", "-18.9121, -47.798, -27.6603, 0.68", "-20.2098, -48.5716, -28.5917, 0.68", "-21.1417, -49.1085, -29.3011, 0.68", "-21.825, -49.4728, -29.8379, 0.91", "-22.4565, -49.788, -30.3328, 0.91", "-23.0745, -50.0992, -30.8656, 0.91", "-24.2542, -50.7214, -31.9981, 0.91", "-24.9481, -51.1535, -32.7312, 0.91", "-25.8001, -51.7938, -33.6965, 1.13", "-27.3864, -53.1388, -35.5845, 0.91", "-28.6386, -54.2615, -37.1171, 0.91", "-29.7318, -55.21, -38.4678, 0.91", "-30.7036, -56.0585, -39.7036, 0.68", "-32.4591, -57.6652, -41.9737, 0.45", "-33.2978, -58.4863, -43.0962, 0.45", "-34.6349, -59.8489, -44.9151, 1.13", "-36.1354, -61.3523, -46.8915, 0.23", "-36.8027, -61.9786, -47.6958, 0.23", "-37.6322, -62.7001, -48.6259, 0.45", "-38.3987, -63.3478, -49.4706, 0.45", "-39.5381, -64.3096, -50.6834, 0.45", "-40.1155, -64.828, -51.2754, 0.45", "-41.3509, -66.0513, -52.4546, 0.45", "-42.7708, -67.3809, -53.7414, 0.91" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "94.6576, -41.57, -18.2338, 0.23", "96.4162, -42.2478, -19.3643, 0.23", "98.7281, -43.3552, -21.0014, 0.23", "100.157, -44.1689, -22.1041, 0.91", "102.415, -45.8175, -23.8794, 0.23", "103.595, -46.8353, -24.8215, 0.23", "104.302, -47.5622, -25.4261, 0.91", "105.511, -49.2471, -26.5279, 0.23", "106.194, -50.4551, -27.1694, 0.91", "107.616, -53.061, -28.3071, 0.23", "108.186, -54.1198, -28.6946, 0.68", "109.814, -56.8616, -29.5601, 0.23", "111.174, -58.9465, -30.1797, 0.23", "112.173, -60.2941, -30.5454, 0.68", "114.469, -63.0422, -31.2976, 0.23", "115.686, -64.3108, -31.6846, 0.23", "116.974, -65.5393, -32.0745, 1.13", "119.276, -67.4313, -32.7543, 0.23", "121.352, -68.9679, -33.4025, 0.23", "122.195, -69.5289, -33.696, 0.91", "125.078, -71.3678, -34.7388, 0.23", "127.965, -73.1009, -35.7939, 0.23", "131.699, -75.2571, -37.1903, 0.23", "132.976, -75.921, -37.6518, 0.68", "135.962, -77.4201, -38.7752, 0.23" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "94.6576, -41.57, -18.2338, 0.23", "98.6597, -40.6158, -18.3865, 0.23", "101.209, -39.976, -18.4552, 0.23", "104.488, -39.1343, -18.4981, 0.91", "106.626, -38.5959, -18.4701, 0.23", "110.592, -37.6105, -18.2764, 0.68", "114.956, -36.46, -17.9475, 0.23", "116.836, -35.9089, -17.7688, 0.23", "119.524, -34.9958, -17.4561, 0.23", "121.098, -34.3634, -17.1976, 0.23", "124.704, -32.4823, -16.4658, 0.91", "128.151, -30.1937, -15.6084, 0.23", "130.011, -28.7402, -15.1043, 0.91", "132.333, -26.7487, -14.5496, 0.23", "134.786, -24.5709, -14.0639, 0.23", "138.603, -21.1848, -13.4801, 0.23", "139.983, -20.0221, -13.3505, 0.91", "141.469, -18.946, -13.2799, 1.36", "144.548, -17.14, -13.2464, 0.23", "148.01, -15.6241, -13.3463, 0.23", "149.334, -15.1932, -13.4407, 0.91", "151.869, -14.4992, -13.7283, 0.23", "154.335, -13.7398, -14.0821, 0.23", "156.961, -12.63, -14.467, 0.91", "158.999, -11.4989, -14.6711, 0.23", "160.624, -10.4593, -14.818, 0.68", "163.017, -8.73877, -15.0054, 0.23", "164.044, -7.88935, -15.0563, 0.68", "168.302, -4.00142, -15.2829, 0.23", "170.721, -1.61277, -15.364, 0.91" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "0.797243, 54.8582, -36.3066, 0.23", "1.2612, 56.0569, -37.4431, 0.23", "1.73751, 57.2732, -38.6647, 0.23", "2.09911, 58.1406, -39.5493, 0.91", "2.55327, 59.1851, -40.5771, 0.23", "3.26388, 60.8387, -42.0939, 0.23", "3.41175, 61.1883, -42.3974, 1.13", "4.04843, 62.7491, -43.6593, 0.23", "4.37493, 63.6017, -44.3273, 0.23", "4.6507, 64.405, -44.9362, 0.23", "4.90704, 65.2791, -45.6126, 0.91", "5.34716, 67.3271, -47.2267, 0.23", "5.42348, 68.1721, -47.9551, 1.36", "5.31025, 69.6063, -49.3095, 0.23", "5.15247, 70.6714, -50.3783, 0.23", "4.84382, 72.0377, -51.8736, 0.23", "4.51388, 73.0376, -53.0794, 0.68", "3.87494, 74.2565, -54.6831, 0.23", "3.12082, 75.3572, -56.2533, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "0.797243, 54.8582, -36.3066, 0.23", "-0.7993, 56.2196, -37.6696, 0.23", "-1.68196, 56.9722, -38.4231, 0.68", "-2.81926, 57.942, -39.3941, 0.68", "-3.5212, 58.5405, -39.9933, 0.23", "-5.03924, 59.8349, -41.2893, 0.23" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "6.36709, 51.1085, -9.47032, 0.23", "6.21989, 54.1327, -10.097, 0.23", "6.14672, 56.0695, -10.5481, 0.23", "6.06053, 58.7072, -11.1615, 0.91", "5.92252, 61.9173, -11.8836, 0.23", "5.84398, 64.0813, -12.3596, 0.23", "5.72859, 66.8132, -12.9357, 0.45", "5.60879, 68.9087, -13.4011, 0.23", "5.49835, 71.1324, -13.8688, 0.91", "5.39634, 73.0812, -14.264, 1.13", "5.14609, 76.553, -14.8845, 0.23", "4.97875, 78.8846, -15.2346, 0.68", "4.78355, 82.0087, -15.7048, 0.23", "4.58886, 84.3122, -16.0264, 0.68" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "6.36709, 51.1085, -9.47032, 1.13", "7.19583, 52.7787, -10.782, 1.13", "7.98818, 54.6744, -12.1563, 0.23", "8.48888, 56.3465, -13.1979, 0.68", "8.86296, 58.219, -14.3435, 1.36", "9.29887, 61.2475, -16.1045, 1.36", "9.53382, 63.0538, -17.1695, 0.23", "9.69526, 65.1162, -18.347, 0.91", "9.86839, 67.6237, -19.7991, 1.36", "10.2375, 70.4101, -21.6128, 0.23", "10.5295, 71.6966, -22.6257, 0.68", "11.0497, 73.34, -24.163, 0.23", "11.404, 74.2485, -25.1138, 0.23", "12.4053, 76.2014, -27.3199, 0.91", "13.4607, 78.0023, -29.3367, 1.36", "14.6182, 80.0231, -31.3212, 0.23", "15.4234, 81.6881, -32.7135, 0.23", "15.93, 83.0818, -33.5621, 1.13", "16.1081, 83.7297, -33.8552, 1.13", "16.6767, 86.2801, -34.6094, 0.23", "17.1741, 88.9292, -35.1313, 1.59", "17.5618, 90.924, -35.3982, 1.59", "18.1913, 93.9978, -35.8238, 0.45", "18.4109, 94.9809, -36.0059, 0.45", "19.149, 97.8412, -36.6291, 0.45", "19.5658, 99.1321, -36.9667, 0.45", "20.4311, 101.131, -37.6751, 0.45", "21.7555, 103.418, -38.8097, 1.13", "23.4916, 105.592, -40.2442, 0.23", "24.4569, 106.481, -41.0367, 0.23", "25.698, 107.257, -41.9649, 0.91", "28.7174, 108.617, -44.1032, 0.23", "30.1225, 109.066, -45.0851, 1.13", "32.0565, 109.463, -46.3127, 0.23", "35.2224, 109.976, -48.1921, 0.68", "38.1294, 110.447, -49.8095, 0.23", "39.5754, 110.72, -50.5816, 0.68", "41.6075, 111.175, -51.6233, 0.23", "44.336, 111.842, -52.9918, 0.23", "46.5855, 112.47, -54.1437, 0.68", "48.5242, 113.083, -55.1801, 0.23", "50.7236, 113.982, -56.6109, 0.23", "52.7397, 114.922, -58.0, 0.23", "54.1243, 115.662, -58.9748, 0.91", "56.2604, 116.949, -60.5586, 0.23", "58.4413, 118.363, -62.2419, 0.45", "62.0492, 120.805, -65.1127, 0.23", "63.3737, 121.754, -66.155, 0.23", "65.3057, 123.233, -67.7033, 0.23", "66.7382, 124.403, -68.8869, 0.23", "69.3027, 126.592, -70.8738, 0.23" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-1.85993, 14.6421, 1.7919, 1.13", "-2.06326, 16.969, 1.67661, 1.13", "-2.30165, 19.2371, 1.54114, 1.13", "-2.50306, 21.2289, 1.41192, 0.91", "-2.7438, 23.7302, 1.25594, 0.91", "-2.90071, 25.4302, 1.15505, 0.91", "-3.00971, 26.7383, 1.10593, 0.91", "-3.107, 28.3585, 1.0839, 1.13", "-3.19673, 30.8801, 1.11264, 0.45", "-3.251, 33.155, 1.17582, 0.45", "-3.26591, 34.9142, 1.23968, 1.13", "-3.25434, 37.1027, 1.32498, 0.91", "-3.21232, 39.1557, 1.38672, 0.91", "-3.15921, 40.708, 1.3934, 0.45", "-3.09187, 42.8185, 1.33352, 0.68", "-3.05455, 44.4273, 1.22085, 0.23", "-3.04833, 45.3511, 1.09527, 0.91", "-3.07811, 46.8156, 0.794008, 0.23", "-3.14083, 47.9792, 0.52476, 0.23", "-3.232, 49.4566, 0.180802, 0.91", "-3.30378, 50.9717, -0.148986, 0.23", "-3.3963, 52.5661, -0.464132, 0.91", "-3.45574, 53.3296, -0.60377, 1.13", "-3.62164, 55.5688, -1.01485, 0.23", "-3.70196, 56.8533, -1.22059, 0.23", "-3.78769, 58.3929, -1.46044, 1.13", "-3.83728, 59.552, -1.62138, 1.13", "-3.86176, 60.5026, -1.73509, 1.13", "-3.88441, 63.2319, -2.07921, 0.23", "-3.86899, 65.2161, -2.3697, 1.13", "-3.85875, 66.2786, -2.53238, 1.36", "-3.82713, 67.2996, -2.68147, 0.45", "-3.74531, 68.8627, -2.89826, 1.13", "-3.61023, 70.6713, -3.11681, 0.23", "-3.5231, 71.9422, -3.25003, 0.23", "-3.44896, 72.9663, -3.34731, 0.23", "-3.31928, 74.7505, -3.44934, 0.45", "-3.27076, 75.7814, -3.46969, 0.91", "-3.22427, 77.17, -3.43924, 0.23", "-3.1694, 78.7277, -3.3594, 1.59", "-3.11877, 80.4895, -3.29197, 0.23", "-3.07975, 82.1048, -3.26472, 0.91", "-3.0411, 84.6442, -3.26705, 0.23", "-2.99546, 86.1625, -3.27586, 0.23", "-2.89122, 88.4353, -3.32955, 1.36", "-2.73048, 90.5991, -3.40156, 0.23", "-2.5806, 92.3531, -3.48834, 1.36", "-2.53053, 92.849, -3.52402, 1.36", "-2.16729, 95.6929, -3.75001, 0.23", "-1.93574, 97.3615, -3.8869, 0.23", "-1.76728, 98.37, -3.95047, 1.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-1.85993, 14.6421, 1.7919, 0.68", "-3.45873, 12.6807, 2.35625, 0.68", "-4.70512, 11.122, 2.78043, 0.68", "-5.87511, 9.56222, 3.15729, 0.68", "-6.72425, 8.36517, 3.41753, 0.68", "-8.8885, 5.28365, 4.03602, 0.68", "-10.3352, 3.19607, 4.4241, 0.68", "-11.6543, 1.13026, 4.73414, 0.91", "-13.1467, -1.33047, 5.01462, 1.13", "-14.2195, -3.09489, 5.20093, 1.13", "-15.4367, -5.07519, 5.41185, 1.13", "-16.5559, -6.99957, 5.60725, 1.13", "-17.7087, -9.13148, 5.79366, 1.13", "-18.4697, -10.5538, 5.87892, 1.81" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "19.0418, 30.6536, 27.4742, 0.23", "21.3559, 33.477, 33.1618, 0.23", "23.8149, 36.5038, 38.6916, 0.23", "25.184, 39.5407, 44.577, 0.23", "27.5387, 42.2482, 50.2995, 0.23", "30.0554, 43.5755, 56.3882, 0.23", "33.1922, 45.5445, 62.0135, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "19.0418, 30.6536, 27.4742, 0.23", "22.7559, 33.541, 30.2552, 0.23", "26.9783, 36.1504, 32.5074, 0.23", "30.6321, 39.7185, 34.5447, 0.23", "33.2455, 44.4354, 35.9714, 0.23", "35.5701, 48.9274, 38.2937, 0.23", "37.7664, 53.5705, 40.4664, 0.23" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "55.393, 63.1038, -8.62047, 0.23", "57.0996, 64.3071, -9.08926, 0.23", "57.9959, 64.9065, -9.31398, 0.23", "59.4239, 65.7948, -9.5862, 0.68", "60.4012, 66.3711, -9.71283, 0.23", "62.3512, 67.4622, -9.91312, 0.91", "63.3994, 67.9982, -10.0136, 0.91", "65.3224, 68.8264, -10.1699, 0.23", "66.7332, 69.3588, -10.2557, 0.23", "68.1727, 69.8268, -10.2941, 0.91", "68.9069, 70.0479, -10.3037, 0.91", "71.1163, 70.7181, -10.264, 0.23", "72.6272, 71.1789, -10.2129, 0.91", "74.1242, 71.6368, -10.141, 0.91", "75.5926, 72.12, -10.0675, 0.23", "76.7533, 72.5141, -9.99132, 0.91", "78.8807, 73.249, -9.76338, 0.23", "79.6486, 73.4905, -9.67165, 1.36", "80.3438, 73.6864, -9.60081, 1.36", "81.7442, 74.0159, -9.50259, 1.36", "83.3169, 74.2873, -9.44732, 0.23", "84.8792, 74.4363, -9.47364, 1.59", "87.0242, 74.4643, -9.61781, 0.23", "88.0783, 74.403, -9.72132, 0.91", "89.0235, 74.3186, -9.83238, 0.91", "90.9878, 74.0699, -10.0947, 0.23", "92.0253, 73.9043, -10.2558, 0.23", "93.8178, 73.5579, -10.5742, 0.23", "96.1398, 73.0241, -10.9379, 0.23" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "55.393, 63.1038, -8.62047, 0.23", "56.0737, 65.7503, -8.55833, 0.23", "56.5533, 67.5545, -8.48593, 0.23", "56.9384, 68.9811, -8.42171, 1.59", "57.7717, 71.8878, -8.29384, 0.23", "58.0075, 72.657, -8.26223, 1.36", "59.108, 75.9234, -8.14475, 0.23", "59.5414, 77.0955, -8.1001, 0.68", "60.0298, 78.2435, -8.05665, 0.91", "60.9545, 80.2479, -8.02606, 0.23", "61.7148, 81.775, -8.06512, 1.13", "63.068, 84.3434, -8.1926, 0.23", "63.5507, 85.1891, -8.24974, 1.59", "64.5773, 86.8193, -8.34267, 0.23", "65.3842, 88.0028, -8.42869, 0.23", "66.3619, 89.3483, -8.49437, 1.13", "68.0648, 91.5845, -8.50825, 0.23", "69.0104, 92.8018, -8.4641, 1.13", "70.6386, 94.8694, -8.23003, 0.23", "71.5631, 95.9808, -8.01953, 1.36", "72.9996, 97.5175, -7.55624, 0.23", "73.6853, 98.159, -7.25427, 0.91", "74.1932, 98.5534, -6.9393, 0.91", "75.3079, 99.3274, -6.11077, 0.23", "75.8099, 99.6347, -5.69732, 0.23", "76.6752, 100.129, -5.03031, 0.23", "77.9079, 100.754, -4.18771, 0.91", "79.3939, 101.469, -3.25763, 0.23", "80.1816, 101.841, -2.79704, 1.13", "81.9444, 102.777, -1.88525, 0.23", "82.825, 103.35, -1.42125, 0.68" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_58",
    "id" : "dend_58",
    "points3d" : [ "-6.16468, -91.9935, 4.86892, 0.91", "-6.26101, -94.271, 5.69069, 0.91", "-6.30611, -96.8663, 6.43278, 1.36", "-6.29822, -98.8205, 6.86681, 1.36", "-6.28914, -101.065, 7.36529, 1.36", "-6.27991, -103.352, 7.87314, 1.13", "-6.27213, -105.279, 8.30124, 1.13", "-6.28306, -108.59, 8.86008, 1.13", "-6.26448, -111.556, 9.19571, 1.59" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_55",
    "id" : "dend_55",
    "points3d" : [ "-6.16468, -91.9935, 4.86892, 0.91", "-7.12706, -93.8314, 4.16194, 0.91", "-7.68892, -95.4054, 3.57804, 0.91", "-8.06569, -96.7348, 3.07422, 1.59", "-8.34307, -97.7743, 2.65473, 0.91", "-8.70377, -99.1029, 2.11098, 1.36", "-9.17619, -100.735, 1.4574, 1.36", "-9.79727, -103.059, 0.564019, 1.13", "-10.1661, -104.423, 0.0749083, 1.13", "-10.4962, -105.641, -0.319119, 1.36", "-11.1591, -108.045, -1.01016, 0.91", "-11.6589, -109.746, -1.40406, 1.59", "-12.001, -110.844, -1.59748, 1.59", "-12.4429, -112.325, -1.79716, 0.91", "-12.7592, -113.531, -1.92047, 1.36", "-13.0952, -114.997, -2.0425, 1.36", "-13.5207, -117.057, -2.25134, 1.13", "-13.7524, -118.275, -2.43548, 0.91", "-14.0031, -119.526, -2.6926, 1.36", "-14.3205, -120.825, -3.01094, 1.36", "-14.8208, -122.64, -3.48189, 0.91", "-15.2587, -124.11, -3.90046, 1.36", "-15.7753, -125.748, -4.40651, 0.91", "-16.243, -127.112, -4.8521, 0.91", "-16.7499, -128.502, -5.31183, 0.45", "-17.3278, -130.073, -5.8323, 0.45" ],
    "parent" : "dend_54",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_53",
    "id" : "dend_53",
    "points3d" : [ "-6.61209, -49.3256, 4.91183, 1.13", "-5.69203, -50.5664, 6.19823, 1.13", "-4.70696, -52.2495, 7.86531, 1.13", "-3.92893, -53.8204, 9.22915, 1.13", "-3.59168, -54.6005, 9.8556, 1.36", "-2.9762, -56.2465, 11.1149, 1.36", "-2.37643, -58.1427, 12.5355, 0.91", "-2.2061, -59.1569, 13.2745, 1.36", "-2.23253, -61.0058, 14.5979, 1.13", "-2.48571, -62.3098, 15.5144, 1.13", "-2.70506, -62.9795, 15.9909, 1.13", "-3.04907, -63.8149, 16.5392, 1.13", "-3.57275, -65.0307, 17.2424, 1.13", "-4.58221, -67.5423, 18.5472, 1.59", "-5.25188, -69.6978, 19.4249, 0.91", "-5.46253, -70.9046, 19.7694, 0.91", "-5.55294, -72.7101, 20.1275, 0.45", "-5.51711, -74.0096, 20.274, 0.45", "-5.34727, -76.6364, 20.385, 0.45", "-4.99249, -79.5748, 20.3335, 0.45", "-4.69877, -81.2112, 20.2825, 0.45", "-4.43474, -82.5324, 20.2339, 0.68", "-4.02002, -84.6415, 20.1831, 0.23", "-3.72257, -86.4701, 20.1445, 0.23", "-3.16509, -94.58, 23.8553, 0.23", "-1.15369, -102.85, 26.6186, 0.23" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_52",
    "id" : "dend_52",
    "points3d" : [ "-6.61209, -49.3256, 4.91183, 0.91", "-7.84011, -50.6811, 5.26312, 0.91", "-8.56771, -51.3806, 5.41285, 0.91", "-9.6228, -52.2089, 5.56155, 0.91", "-10.4024, -52.7515, 5.64736, 1.13", "-11.7646, -53.6336, 5.75475, 0.91", "-13.8775, -54.9515, 5.84484, 0.91", "-15.9827, -56.1836, 5.87816, 0.91", "-18.3524, -57.4452, 5.85665, 0.45", "-19.9749, -58.2615, 5.80684, 1.13", "-21.0113, -58.801, 5.74864, 0.68", "-22.5737, -59.7173, 5.64789, 0.45", "-24.872, -61.1272, 5.49453, 0.45", "-27.0242, -62.5572, 5.36025, 0.45", "-27.7367, -63.102, 5.32158, 0.45", "-29.1046, -64.2502, 5.27212, 0.45", "-30.8284, -65.8443, 5.29318, 0.45", "-38.0535, -72.566, 7.44465, 0.45", "-44.7073, -79.4966, 10.6151, 0.45", "-50.8159, -87.4248, 12.481, 0.45", "-56.3418, -95.9928, 13.2675, 0.45" ],
    "parent" : "dend_51",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "-42.7708, -67.3809, -53.7414, 0.23", "-45.0771, -70.6133, -54.4889, 0.23", "-46.1666, -71.9815, -54.7271, 0.91", "-48.7935, -74.8595, -55.0591, 0.23", "-50.458, -76.5188, -55.2116, 0.23", "-51.2587, -77.2395, -55.2793, 0.91", "-53.4206, -79.0452, -55.4625, 0.23", "-55.6675, -80.6633, -55.4948, 0.45", "-58.4124, -82.4806, -55.3283, 0.23", "-59.9062, -83.3972, -55.16, 0.23", "-61.8739, -84.6123, -54.8913, 0.91", "-62.7413, -85.2009, -54.7759, 0.91", "-66.4592, -87.9948, -54.2634, 0.23", "-68.7665, -89.9204, -53.9519, 0.23", "-70.3736, -91.3569, -53.7111, 0.23", "-72.5196, -93.3415, -53.3171, 0.68", "-74.7509, -95.4683, -52.8162, 0.23", "-76.6787, -97.3196, -52.323, 0.23", "-78.3529, -98.9543, -51.8823, 0.68", "-78.7765, -99.3494, -51.7539, 0.23", "-80.7707, -101.126, -50.9932, 1.13", "-81.9829, -102.153, -50.4687, 1.13", "-83.6634, -103.631, -49.651, 0.23", "-84.9476, -104.974, -48.9759, 0.23", "-86.2791, -106.446, -48.2533, 0.91", "-87.4272, -107.78, -47.6255, 0.23", "-88.4179, -109.029, -47.1019, 0.91", "-90.9581, -112.392, -45.8207, 0.23", "-92.5813, -114.673, -44.9768, 0.68" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-42.7708, -67.3809, -53.7414, 0.23", "-43.3595, -67.7011, -54.807, 0.23", "-43.7919, -68.0041, -55.861, 0.68", "-44.261, -68.3113, -57.0394, 0.23", "-44.7629, -68.5779, -58.3185, 0.68", "-45.1751, -68.7123, -59.3207, 0.68", "-45.9946, -68.8446, -61.0834, 0.23", "-47.0432, -68.9315, -63.1433, 0.23", "-47.3722, -68.9416, -63.6895, 0.68", "-48.4663, -68.9297, -65.2704, 0.23", "-49.5796, -68.9151, -66.7068, 0.91", "-51.5669, -68.9492, -68.997, 0.23", "-53.0501, -69.0347, -70.4673, 0.23", "-55.7642, -69.3391, -72.8334, 0.23", "-56.7433, -69.4963, -73.6215, 0.68", "-58.6706, -69.9269, -74.9816, 0.23", "-59.8135, -70.2669, -75.6743, 0.23", "-60.8746, -70.6257, -76.1921, 0.23", "-62.5211, -71.2164, -76.8514, 0.23", "-63.4228, -71.5289, -77.1509, 0.23", "-64.8052, -71.973, -77.6433, 0.23", "-67.3633, -72.798, -78.564, 0.23", "-69.8483, -73.587, -79.5721, 0.23", "-71.3574, -74.0711, -80.2556, 0.23", "-73.2307, -74.6815, -81.1698, 1.13", "-76.5533, -75.7849, -83.0613, 0.23", "-78.1756, -76.3419, -84.1006, 0.68", "-80.0113, -76.9793, -85.3973, 0.23", "-81.2109, -77.373, -86.3116, 0.23", "-82.288, -77.6594, -87.1482, 0.23", "-84.1961, -77.9407, -88.6258, 0.23", "-85.9048, -78.0765, -89.9073, 0.68", "-87.1693, -78.0872, -90.8426, 0.23", "-89.0711, -78.0164, -92.1244, 0.23", "-90.4727, -77.8603, -93.0129, 0.91", "-93.4506, -77.2615, -94.8069, 0.23" ],
    "parent" : "dend_41",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.76728, 98.37, -3.95047, 0.23", "-2.12694, 101.717, -4.30925, 0.23", "-2.45984, 104.641, -4.65209, 0.23", "-2.73472, 106.819, -4.92182, 0.68", "-3.07923, 109.48, -5.26955, 0.23", "-3.30622, 111.267, -5.49986, 0.68", "-3.66418, 113.997, -5.85095, 0.23", "-3.85453, 115.527, -6.04951, 0.91", "-4.02692, 116.737, -6.21363, 0.91", "-4.8242, 121.472, -6.85825, 0.23", "-5.05588, 122.904, -7.02512, 1.59", "-5.2466, 124.122, -7.1538, 1.59", "-5.72427, 127.822, -7.51801, 0.23", "-5.88091, 129.363, -7.66435, 0.23", "-6.07634, 131.784, -7.85571, 0.91", "-6.2618, 135.11, -8.04933, 0.23", "-6.32113, 137.027, -8.13149, 0.91", "-6.3568, 139.492, -8.204, 0.23", "-6.36343, 141.313, -8.23195, 0.91", "-6.43151, 146.106, -8.29418, 0.23", "-6.45714, 148.02, -8.30672, 0.68", "-6.50606, 149.495, -8.3103, 0.23", "-6.58719, 151.515, -8.28817, 1.13", "-6.78006, 154.086, -8.21029, 0.23", "-6.92732, 155.665, -8.18274, 0.68" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-1.76728, 98.37, -3.95047, 0.23", "-0.817718, 99.2602, -4.92313, 0.23", "0.220382, 99.9542, -6.10884, 0.91", "1.27865, 100.381, -7.28258, 0.23", "1.84608, 100.44, -7.93082, 0.68", "2.84921, 100.261, -9.18151, 0.23", "4.43449, 99.4867, -11.5097, 0.23", "5.34011, 98.8611, -12.9062, 0.23", "6.21073, 98.071, -14.3318, 0.68", "7.42443, 96.7099, -16.3914, 0.23", "8.45682, 95.3403, -18.229, 0.91", "9.7879, 93.0481, -20.8694, 0.23" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-18.4697, -10.5538, 5.87892, 1.13", "-19.7515, -12.5059, 6.15191, 1.13", "-21.0258, -14.5689, 6.31912, 1.59", "-22.2983, -16.7266, 6.43304, 0.91", "-23.1064, -18.08, 6.45621, 0.91", "-24.3784, -20.1308, 6.42878, 2.04", "-26.1079, -22.893, 6.34822, 1.13", "-27.2054, -24.6553, 6.24584, 1.13", "-27.9055, -25.8048, 6.17263, 1.81", "-29.4142, -28.2516, 6.06056, 0.91", "-30.9407, -30.612, 6.04939, 0.91", "-31.7127, -31.7277, 6.11762, 0.91", "-32.5185, -32.8268, 6.26572, 1.36", "-33.7822, -34.6028, 6.61393, 0.91", "-35.117, -36.5291, 7.09604, 1.13", "-36.1211, -38.0345, 7.55131, 1.36", "-37.1763, -39.6501, 8.07302, 1.36", "-38.2427, -41.3108, 8.57872, 1.59", "-39.0876, -42.6627, 8.98044, 1.36", "-40.2993, -44.6262, 9.50993, 2.04", "-40.7779, -45.4611, 9.69481, 2.04", "-41.859, -47.4668, 10.1573, 1.13", "-42.6191, -48.9016, 10.505, 1.81", "-44.2183, -51.958, 11.2837, 0.91", "-45.0396, -53.5921, 11.6977, 2.04", "-46.4062, -56.5228, 12.389, 1.13", "-47.5941, -59.2354, 12.9904, 0.68", "-48.1278, -60.5884, 13.2969, 0.68", "-48.4825, -61.5822, 13.5467, 1.13", "-48.7586, -62.4703, 13.7743, 1.13", "-49.2056, -64.0245, 14.1923, 1.13", "-49.8314, -66.3126, 14.8211, 0.45", "-50.7205, -69.4687, 15.6066, 0.91", "-51.1203, -70.7707, 15.9245, 1.59", "-51.6468, -72.4103, 16.3474, 0.68", "-52.5341, -74.9181, 17.0078, 0.68", "-53.6827, -77.7262, 17.7586, 0.68", "-53.936, -78.2458, 17.8921, 1.13", "-54.8081, -79.7619, 18.2378, 1.13", "-55.783, -81.3434, 18.5779, 0.45", "-56.7786, -82.7764, 18.913, 0.91", "-57.7023, -83.9161, 19.1933, 0.23", "-58.7252, -85.0691, 19.4502, 0.23", "-59.6722, -86.1505, 19.664, 0.23", "-60.5169, -87.098, 19.8401, 0.23", "-61.8391, -88.5373, 20.0684, 0.23", "-62.7553, -89.581, 20.2305, 0.23", "-64.7757, -92.0564, 20.5828, 0.23", "-65.9586, -93.484, 20.7678, 0.23", "-71.712, -102.825, 22.1217, 0.23", "-76.9456, -112.602, 22.1622, 0.23", "-81.3557, -122.755, 21.0622, 0.23", "-85.3613, -133.153, 21.0868, 0.23", "-88.8855, -143.542, 19.1248, 0.23", "-90.9484, -154.403, 17.4099, 0.23", "-92.1178, -165.238, 14.8902, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-18.4697, -10.5538, 5.87892, 0.45", "-19.0841, -12.6258, 6.16231, 0.45", "-19.5421, -14.1611, 6.34434, 0.45", "-20.1597, -16.1556, 6.56171, 0.68", "-20.8287, -18.2398, 6.79304, 1.13", "-21.6409, -20.7302, 7.06729, 0.91", "-22.5238, -23.4688, 7.38072, 0.45", "-23.1157, -25.2355, 7.60215, 0.45", "-23.3973, -26.1714, 7.72942, 1.13", "-23.7084, -27.4093, 7.89218, 0.45", "-23.8662, -28.1913, 8.00957, 0.91", "-24.1951, -30.3324, 8.38975, 0.23", "-24.3293, -31.532, 8.62007, 0.68", "-24.5733, -33.9001, 9.08279, 0.23", "-24.7085, -35.4368, 9.36502, 1.59", "-24.7834, -36.4764, 9.53351, 1.59", "-24.9171, -38.6995, 9.84652, 0.23", "-24.9758, -39.9282, 9.97393, 0.68", "-25.0239, -41.368, 10.1078, 0.68", "-25.0727, -43.9928, 10.3875, 0.23", "-25.0693, -44.7803, 10.4882, 0.45", "-25.0342, -46.0927, 10.6673, 0.45", "-24.9254, -48.4248, 10.9784, 0.45", "-24.8083, -50.2937, 11.2301, 0.91", "-24.6779, -52.5265, 11.5412, 0.91", "-24.6175, -53.9116, 11.714, 0.23", "-24.599, -54.6813, 11.8122, 0.68", "-24.5872, -56.2389, 12.012, 0.45", "-24.603, -58.0705, 12.2215, 0.23", "-24.6268, -58.9577, 12.2944, 0.91", "-24.7202, -61.3572, 12.4542, 0.23", "-24.7993, -62.6752, 12.5498, 0.68", "-24.9876, -65.3899, 12.7689, 0.91", "-25.1219, -66.9497, 12.9003, 0.91", "-25.3217, -69.0311, 13.0747, 2.27", "-25.4522, -70.0935, 13.183, 1.81", "-25.8658, -72.5178, 13.4607, 0.91", "-26.0668, -73.5409, 13.5708, 1.59", "-26.5354, -75.6516, 13.8078, 0.45", "-26.7106, -76.4094, 13.901, 0.45", "-27.4697, -79.672, 14.3068, 0.91", "-27.7516, -80.9653, 14.4563, 0.23", "-27.8378, -81.4761, 14.502, 0.68", "-27.9302, -82.2541, 14.5549, 0.68", "-28.0029, -83.5581, 14.6042, 0.68", "-28.0362, -85.4041, 14.6124, 1.81", "-28.0254, -86.2221, 14.5831, 1.81", "-28.006, -88.6432, 14.5133, 0.45", "-28.0187, -89.9503, 14.4838, 0.45", "-28.042, -91.5863, 14.4532, 1.36", "-28.0539, -92.7081, 14.4199, 0.91", "-28.045, -94.1629, 14.3553, 1.13", "-28.0075, -96.2821, 14.2347, 0.23", "-27.9857, -97.0568, 14.1776, 0.68", "-27.874, -99.177, 13.9937, 0.23", "-27.76, -100.422, 13.8724, 0.68", "-27.6056, -101.631, 13.7468, 0.23", "-27.4865, -102.424, 13.6613, 0.68", "-27.0542, -105.268, 13.3532, 0.23", "-26.827, -106.815, 13.2025, 0.23", "-26.6031, -108.485, 13.058, 0.68", "-26.4165, -110.041, 12.954, 0.23", "-26.3049, -111.084, 12.8924, 0.68", "-26.1856, -112.117, 12.8338, 0.23", "-25.9716, -113.464, 12.7663, 0.23", "-27.5479, -122.211, 14.7168, 0.23", "-30.495, -130.575, 16.6034, 0.23", "-31.9049, -139.226, 19.0074, 0.23" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "33.1922, 45.5445, 62.0135, 0.23", "37.475, 48.3959, 69.8084, 0.23", "41.7126, 50.8673, 77.7457, 0.23", "46.468, 54.5282, 84.9353, 0.23", "51.2265, 59.5585, 91.3257, 0.23", "57.5892, 64.6552, 96.0682, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "33.1922, 45.5445, 62.0135, 0.23", "33.7861, 50.1712, 67.5992, 0.23", "35.0245, 54.9737, 72.9534, 0.23", "36.7729, 58.3066, 79.1451, 0.23", "38.4177, 60.7489, 85.7382, 0.23", "39.5921, 62.7779, 92.5567, 0.23" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "37.7664, 53.5705, 40.4664, 0.23", "43.0154, 61.879, 44.2518, 0.23", "50.1428, 67.7962, 48.9392, 0.23", "55.2477, 75.2398, 54.246, 0.23", "59.1425, 82.0506, 61.1194, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "37.7664, 53.5705, 40.4664, 0.23", "45.0449, 60.3528, 45.332, 0.23", "52.0744, 66.8621, 50.8567, 0.23", "59.4804, 72.8337, 56.4422, 0.23", "65.3596, 81.1405, 61.0448, 0.23" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_60",
    "id" : "dend_60",
    "points3d" : [ "-6.26448, -111.556, 9.19571, 0.91", "-7.02689, -113.269, 7.77463, 0.91", "-7.64804, -114.759, 6.82201, 1.36", "-8.70399, -117.582, 5.38404, 0.91", "-9.32992, -119.513, 4.70543, 1.36", "-9.56112, -120.29, 4.49244, 1.36", "-9.89673, -121.469, 4.19795, 1.59", "-10.6365, -124.363, 3.72152, 1.13", "-11.0316, -126.066, 3.55218, 1.13", "-11.7706, -129.386, 3.27426, 0.91", "-12.3382, -131.905, 3.00233, 0.91", "-12.9788, -134.59, 2.6582, 1.59", "-13.6401, -137.147, 2.27481, 0.91", "-14.3063, -139.48, 1.88195, 0.91", "-15.1886, -142.195, 1.39986, 0.91", "-15.8131, -143.873, 1.08806, 0.91", "-16.6641, -145.84, 0.806329, 1.36", "-17.509, -147.514, 0.617169, 1.59", "-18.5829, -149.377, 0.456015, 1.13", "-19.4289, -150.765, 0.316608, 1.13", "-19.9907, -151.699, 0.220701, 0.91", "-20.9804, -153.326, -0.0019311, 1.36", "-22.2807, -155.422, -0.406802, 0.45", "-23.3384, -157.102, -0.835574, 1.59", "-25.0399, -159.735, -1.62259, 1.36", "-26.0719, -161.403, -2.18387, 1.13", "-26.6907, -162.5, -2.58415, 0.68", "-27.6977, -164.402, -3.3054, 0.45", "-28.6645, -166.279, -3.9835, 0.91", "-29.3622, -167.68, -4.46979, 0.68", "-30.0579, -169.159, -4.89118, 0.45", "-30.8877, -171.122, -5.3201, 1.13", "-31.5245, -172.857, -5.5931, 1.13", "-32.0013, -174.316, -5.73378, 1.36", "-32.5639, -176.25, -5.83657, 1.13", "-33.0571, -178.019, -5.88927, 0.68", "-33.7648, -180.503, -5.89761, 0.91", "-34.4961, -183.199, -5.88984, 0.68", "-34.9351, -185.063, -5.89371, 1.36", "-35.2457, -186.49, -5.88461, 1.36", "-35.5875, -188.141, -5.89665, 0.91", "-36.1073, -190.478, -5.97665, 0.68", "-36.8331, -193.359, -6.15248, 0.91", "-37.5355, -195.913, -6.33886, 1.59", "-38.2959, -198.579, -6.54617, 1.36", "-39.051, -201.211, -6.75644, 0.91", "-39.6709, -203.564, -6.93726, 1.13", "-40.1121, -205.532, -7.0832, 0.23", "-40.3734, -207.09, -7.18669, 1.13", "-40.5503, -209.166, -7.30458, 0.68", "-40.5685, -211.231, -7.40046, 1.36", "-40.4414, -213.934, -7.46333, 0.91", "-40.1963, -216.652, -7.51074, 0.91", "-39.9666, -219.054, -7.564, 1.36", "-39.7089, -222.655, -7.64749, 0.68", "-39.6241, -224.729, -7.74008, 0.68", "-39.5892, -226.498, -7.8528, 1.36", "-39.6012, -227.381, -7.92526, 1.36", "-39.7038, -229.696, -8.16305, 0.68", "-39.8039, -231.311, -8.36159, 1.36", "-39.988, -233.903, -8.77447, 0.23", "-40.0829, -235.509, -9.04982, 0.23", "-40.1774, -237.298, -9.3899, 1.13", "-40.2312, -238.851, -9.68079, 1.36", "-40.2456, -240.304, -9.94869, 1.81", "-40.2326, -242.902, -10.45, 1.13", "-40.2146, -245.216, -10.8857, 1.36", "-40.1903, -247.465, -11.3067, 0.68", "-40.1206, -250.397, -11.8631, 0.91", "-40.0545, -252.495, -12.2545, 0.68", "-39.9574, -254.739, -12.6629, 0.68", "-39.8611, -256.211, -12.9045, 2.04", "-39.6858, -258.249, -13.2592, 2.04" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_59",
    "id" : "dend_59",
    "points3d" : [ "-6.26448, -111.556, 9.19571, 0.45", "-6.85666, -113.726, 9.45448, 0.45", "-7.3996, -116.017, 9.70242, 0.68", "-8.01624, -119.122, 10.0378, 1.13", "-8.49216, -121.948, 10.346, 1.13", "-9.00694, -125.326, 10.7548, 1.13", "-9.47536, -128.383, 11.1371, 0.91", "-10.0129, -131.708, 11.5156, 0.91", "-10.4982, -134.717, 11.8329, 0.91", "-10.9409, -137.704, 12.147, 0.23", "-11.1145, -139.033, 12.2936, 0.23", "-11.2886, -140.474, 12.4697, 1.36", "-11.7786, -143.918, 12.9861, 0.91", "-12.1963, -146.326, 13.372, 0.91", "-12.4427, -147.76, 13.6008, 0.23", "-12.5521, -148.465, 13.7089, 0.91", "-12.9055, -151.022, 14.0756, 0.68", "-13.2125, -153.583, 14.5034, 1.13", "-13.5368, -156.214, 14.9807, 0.91", "-13.9486, -159.154, 15.4997, 0.91", "-14.2751, -161.126, 15.7967, 0.91", "-14.4646, -162.234, 15.9365, 1.36", "-14.8184, -164.309, 16.1299, 1.13", "-15.1389, -166.122, 16.2553, 1.59", "-15.4515, -167.846, 16.3575, 1.36", "-15.8483, -170.208, 16.4303, 1.36", "-16.1938, -172.55, 16.4477, 1.81", "-16.3799, -173.969, 16.4272, 0.68", "-16.7048, -176.414, 16.3292, 1.13", "-17.149, -179.402, 16.2505, 0.45", "-17.6564, -182.12, 16.2033, 0.45", "-18.0501, -183.771, 16.1842, 1.81", "-18.7075, -185.724, 16.1805, 1.36", "-19.4056, -187.269, 16.2069, 0.91", "-20.824, -189.349, 16.2082, 1.36", "-22.1661, -190.602, 16.1679, 0.23", "-22.8221, -190.999, 16.1299, 0.23", "-25.0938, -191.838, 15.8319, 0.23", "-26.1728, -192.04, 15.6252, 0.23", "-29.0839, -192.337, 14.9599, 0.23", "-30.06, -192.356, 14.6864, 0.68", "-31.7529, -192.309, 14.1656, 0.23", "-34.0936, -192.235, 13.3602, 0.23", "-35.3977, -192.187, 12.8162, 0.23", "-37.9722, -203.391, 14.7374, 0.23" ],
    "parent" : "dend_58",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_57",
    "id" : "dend_57",
    "points3d" : [ "-17.3278, -130.073, -5.8323, 1.36", "-18.0857, -130.617, -6.36815, 1.36", "-20.0931, -131.449, -7.96353, 0.45", "-20.8342, -131.596, -8.70002, 0.45", "-21.5841, -131.665, -9.51893, 0.91", "-22.1534, -131.684, -10.1806, 0.91", "-23.0548, -131.665, -11.2465, 0.23", "-24.7928, -131.36, -13.4216, 1.36", "-26.459, -130.842, -15.602, 0.23", "-27.0149, -130.644, -16.3463, 0.23", "-28.0563, -130.24, -17.7614, 1.13", "-28.6821, -129.971, -18.5981, 1.36", "-29.3192, -129.668, -19.3828, 0.23", "-30.0447, -129.267, -20.1239, 0.23", "-30.6714, -128.862, -20.6598, 0.23", "-31.3469, -128.304, -21.2238, 0.23", "-32.2971, -127.386, -22.0618, 0.91", "-32.8234, -126.878, -22.5257, 1.59", "-33.8793, -125.948, -23.5165, 0.68", "-35.542, -124.687, -25.2125, 0.23", "-36.6349, -124.029, -26.3855, 0.68", "-38.3103, -123.381, -28.2816, 0.23", "-39.2698, -123.261, -29.4495, 1.13", "-40.9948, -123.631, -31.753, 0.23", "-42.097, -124.486, -33.4121, 0.91", "-42.6576, -125.353, -34.3351, 0.91", "-43.3717, -127.016, -35.5323, 0.23", "-43.8808, -128.799, -36.4031, 0.23", "-44.274, -130.491, -37.0366, 0.91", "-44.6588, -132.217, -37.478, 0.23", "-44.9556, -133.329, -37.6959, 0.23", "-45.7313, -135.356, -38.0447, 0.23", "-46.573, -136.879, -38.2636, 0.23", "-47.2534, -137.804, -38.4277, 1.36", "-48.0712, -138.703, -38.636, 0.23", "-49.2057, -139.765, -38.9284, 0.91", "-51.1902, -141.32, -39.575, 0.23", "-51.7548, -141.728, -39.7729, 0.91", "-53.9053, -143.176, -40.5763, 0.23", "-54.9727, -143.894, -41.0069, 0.68", "-55.6635, -144.334, -41.3138, 0.68", "-57.8022, -145.592, -42.402, 0.23" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_56",
    "id" : "dend_56",
    "points3d" : [ "-17.3278, -130.073, -5.8323, 0.23", "-16.959, -131.349, -5.91917, 0.23", "-16.6849, -132.208, -6.0627, 0.23", "-16.1783, -133.771, -6.38492, 0.23", "-15.4715, -135.816, -6.83588, 0.91", "-14.9996, -137.171, -7.1645, 0.23", "-14.6152, -138.258, -7.42959, 0.45", "-14.1741, -139.479, -7.77009, 0.23", "-13.7955, -140.449, -8.08046, 0.68", "-13.4562, -141.251, -8.40811, 0.23", "-13.0742, -142.131, -8.79761, 0.23", "-12.5151, -143.601, -9.28851, 0.23" ],
    "parent" : "dend_55",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_62",
    "id" : "dend_62",
    "points3d" : [ "-39.6858, -258.249, -13.2592, 0.23", "-40.8855, -258.713, -12.8479, 0.23", "-41.7946, -259.116, -12.541, 0.23", "-43.6499, -260.173, -11.9736, 0.68", "-45.563, -261.444, -11.5832, 0.23", "-47.1905, -262.595, -11.3655, 0.68", "-48.0791, -263.214, -11.2833, 0.23", "-49.6591, -264.288, -11.2135, 0.23", "-51.9781, -265.898, -11.2637, 0.68", "-54.2522, -267.58, -11.5046, 0.23", "-55.944, -268.934, -11.7747, 0.91", "-56.9332, -269.739, -11.9911, 0.91", "-58.1554, -270.691, -12.2788, 0.23", "-59.1383, -271.381, -12.4973, 0.23", "-59.9714, -271.944, -12.6521, 0.23", "-61.0688, -272.739, -12.7295, 0.23", "-61.6165, -273.174, -12.74, 0.23", "-62.6527, -274.088, -12.7183, 0.23", "-63.5428, -274.886, -12.6739, 0.68", "-65.3384, -276.467, -12.5226, 0.23", "-67.5158, -278.371, -12.3073, 0.23", "-68.7612, -279.472, -12.1604, 0.23", "-69.5413, -280.197, -12.0509, 0.23" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_61",
    "id" : "dend_61",
    "points3d" : [ "-39.6858, -258.249, -13.2592, 0.45", "-39.7028, -259.63, -16.4247, 0.45", "-39.5909, -260.007, -18.9643, 0.45", "-39.4881, -260.354, -21.2978, 0.45", "-39.4057, -260.632, -23.1689, 0.45", "-39.3052, -260.97, -25.4492, 0.45", "-39.1979, -261.332, -27.8847, 1.13", "-39.3704, -260.714, -30.6756, 0.23" ],
    "parent" : "dend_60",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_46", "dend_39", "dend_34", "dend_33", "dend_26", "dend_11", "dend_8", "dend_3", "dend_0", "dend_50", "dend_47", "dend_45", "dend_40", "dend_36", "dend_35", "dend_30", "dend_27", "dend_19", "dend_12", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_54", "dend_51", "dend_49", "dend_48", "dend_44", "dend_41", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_23", "dend_20", "dend_16", "dend_13", "dend_7", "dend_6", "dend_58", "dend_55", "dend_53", "dend_52", "dend_43", "dend_42", "dend_25", "dend_24", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_60", "dend_59", "dend_57", "dend_56", "dend_62", "dend_61" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_46", "dend_39", "dend_34", "dend_33", "dend_26", "dend_11", "dend_8", "dend_3", "dend_0", "dend_50", "dend_47", "dend_45", "dend_40", "dend_36", "dend_35", "dend_30", "dend_27", "dend_19", "dend_12", "dend_10", "dend_9", "dend_5", "dend_4", "dend_2", "dend_1", "dend_54", "dend_51", "dend_49", "dend_48", "dend_44", "dend_41", "dend_38", "dend_37", "dend_32", "dend_31", "dend_29", "dend_28", "dend_23", "dend_20", "dend_16", "dend_13", "dend_7", "dend_6", "dend_58", "dend_55", "dend_53", "dend_52", "dend_43", "dend_42", "dend_25", "dend_24", "dend_22", "dend_21", "dend_18", "dend_17", "dend_15", "dend_14", "dend_60", "dend_59", "dend_57", "dend_56", "dend_62", "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_54" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_55" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_53" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_52" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_53",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_55",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_56",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_57",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_59",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_60",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_61",
    "groups" : [ ],
    "sections" : [ "dend_60" ]
  }, {
    "name" : "OneSecGrp_SectionRef_62",
    "groups" : [ ],
    "sections" : [ "dend_59" ]
  }, {
    "name" : "OneSecGrp_SectionRef_63",
    "groups" : [ ],
    "sections" : [ "dend_57" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_50" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_51" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_58" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_54",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_58",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_64",
    "groups" : [ ],
    "sections" : [ "dend_56" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_49" ]
  }, {
    "name" : "OneSecGrp_SectionRef_66",
    "groups" : [ ],
    "sections" : [ "dend_61" ]
  }, {
    "name" : "OneSecGrp_SectionRef_65",
    "groups" : [ ],
    "sections" : [ "dend_62" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48", "dend_49", "dend_50", "dend_51", "dend_52", "dend_53", "dend_54", "dend_55", "dend_56", "dend_57", "dend_58", "dend_59", "dend_60", "dend_61", "dend_62" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_50", "dend_50", "dend_50", "dend_50", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_47", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_19", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_54", "dend_51", "dend_51", "dend_51", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_49", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_58", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_55", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_53", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_52", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_60", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_59", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_57", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_56", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_62", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61", "dend_61" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.001511",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.3E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "2.29E-4",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-60.295918"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "2.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.999855",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.042115",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0012239999",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.001693",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.386953",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "8.0E-6",
    "erev" : "-63.854015"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "5.5399997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.039862998",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "5.2299997E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.0054459996",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.503893",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "1.0E-4",
    "erev" : "-67.1289"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "4.78E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.15074699",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009017",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "4.0E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.0032419998",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "1.74E-4",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__bNAC_1_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate bNAC219_L6_LBC_9918304f5f_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_46, id: dend_46, parent: soma_0
create dend_46
public dend_46
// Section: dend_39, id: dend_39, parent: soma_0
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: soma_0
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: soma_0
create dend_33
public dend_33
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_50, id: dend_50, parent: dend_46
create dend_50
public dend_50
// Section: dend_47, id: dend_47, parent: dend_46
create dend_47
public dend_47
// Section: dend_45, id: dend_45, parent: dend_39
create dend_45
public dend_45
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_19, id: dend_19, parent: dend_11
create dend_19
public dend_19
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_54, id: dend_54, parent: dend_50
create dend_54
public dend_54
// Section: dend_51, id: dend_51, parent: dend_50
create dend_51
public dend_51
// Section: dend_49, id: dend_49, parent: dend_47
create dend_49
public dend_49
// Section: dend_48, id: dend_48, parent: dend_47
create dend_48
public dend_48
// Section: dend_44, id: dend_44, parent: dend_40
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_38, id: dend_38, parent: dend_36
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_19
create dend_23
public dend_23
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_58, id: dend_58, parent: dend_54
create dend_58
public dend_58
// Section: dend_55, id: dend_55, parent: dend_54
create dend_55
public dend_55
// Section: dend_53, id: dend_53, parent: dend_51
create dend_53
public dend_53
// Section: dend_52, id: dend_52, parent: dend_51
create dend_52
public dend_52
// Section: dend_43, id: dend_43, parent: dend_41
create dend_43
public dend_43
// Section: dend_42, id: dend_42, parent: dend_41
create dend_42
public dend_42
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_22, id: dend_22, parent: dend_20
create dend_22
public dend_22
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_60, id: dend_60, parent: dend_58
create dend_60
public dend_60
// Section: dend_59, id: dend_59, parent: dend_58
create dend_59
public dend_59
// Section: dend_57, id: dend_57, parent: dend_55
create dend_57
public dend_57
// Section: dend_56, id: dend_56, parent: dend_55
create dend_56
public dend_56
// Section: dend_62, id: dend_62, parent: dend_60
create dend_62
public dend_62
// Section: dend_61, id: dend_61, parent: dend_60
create dend_61
public dend_61

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_54]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_55]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_53]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_53
// Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_55
// Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_56
// Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_57
// Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_59
// Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_60
// Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_60]}
objref OneSecGrp_SectionRef_61
// Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
objref OneSecGrp_SectionRef_62
// Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_57]}
objref OneSecGrp_SectionRef_63
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_50]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_54
// Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_58
// Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
objref OneSecGrp_SectionRef_64
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_49]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
objref OneSecGrp_SectionRef_66
// Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_62]}
objref OneSecGrp_SectionRef_65
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_46(0), soma_0(0.49999997093558307)
    connect dend_39(0), soma_0(0.49999997093558307)
    connect dend_34(0), soma_0(0.49999997093558307)
    connect dend_33(0), soma_0(0.49999997093558307)
    connect dend_26(0), soma_0(0.49999997093558307)
    connect dend_11(0), soma_0(0.49999997093558307)
    connect dend_8(0), soma_0(0.49999997093558307)
    connect dend_3(0), soma_0(0.49999997093558307)
    connect dend_0(0), soma_0(0.49999997093558307)
    connect axon_0(0), soma_0(1.0)
    connect dend_50(0), dend_46(1.0)
    connect dend_47(0), dend_46(1.0)
    connect dend_45(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_19(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_54(0), dend_50(1.0)
    connect dend_51(0), dend_50(1.0)
    connect dend_49(0), dend_47(1.0)
    connect dend_48(0), dend_47(1.0)
    connect dend_44(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_38(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_58(0), dend_54(1.0)
    connect dend_55(0), dend_54(1.0)
    connect dend_53(0), dend_51(1.0)
    connect dend_52(0), dend_51(1.0)
    connect dend_43(0), dend_41(1.0)
    connect dend_42(0), dend_41(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_22(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_60(0), dend_58(1.0)
    connect dend_59(0), dend_58(1.0)
    connect dend_57(0), dend_55(1.0)
    connect dend_56(0), dend_55(1.0)
    connect dend_62(0), dend_60(1.0)
    connect dend_61(0), dend_60(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -5.78412, -8.09899, 0.0, 4.55814 ) }
    soma_0 { pt3dadd( -5.26901, -7.31108, 0.0, 8.32644 ) }
    soma_0 { pt3dadd( -4.7539, -6.52318, 0.0, 11.1999 ) }
    soma_0 { pt3dadd( -4.23878, -5.73527, 0.0, 12.9076 ) }
    soma_0 { pt3dadd( -3.72367, -4.94736, 0.0, 14.3867 ) }
    soma_0 { pt3dadd( -3.20856, -4.15945, 0.0, 15.6541 ) }
    soma_0 { pt3dadd( -2.69344, -3.37154, 0.0, 16.4084 ) }
    soma_0 { pt3dadd( -2.17833, -2.58363, 0.0, 17.1297 ) }
    soma_0 { pt3dadd( -1.66322, -1.79572, 0.0, 17.2471 ) }
    soma_0 { pt3dadd( -1.1481, -1.00781, 0.0, 17.2628 ) }
    soma_0 { pt3dadd( -0.632991, -0.219905, 0.0, 17.2074 ) }
    soma_0 { pt3dadd( -0.117878, 0.568004, 0.0, 16.9082 ) }
    soma_0 { pt3dadd( 0.397236, 1.35591, 0.0, 16.5246 ) }
    soma_0 { pt3dadd( 0.912349, 2.14382, 0.0, 15.7252 ) }
    soma_0 { pt3dadd( 1.42746, 2.93173, 0.0, 14.8134 ) }
    soma_0 { pt3dadd( 1.94257, 3.71964, 0.0, 13.8399 ) }
    soma_0 { pt3dadd( 2.45769, 4.50755, 0.0, 12.6669 ) }
    soma_0 { pt3dadd( 2.9728, 5.29546, 0.0, 11.0086 ) }
    soma_0 { pt3dadd( 3.48791, 6.08336, 0.0, 8.99182 ) }
    soma_0 { pt3dadd( 4.00303, 6.87127, 0.0, 6.51377 ) }
    soma_0 { pt3dadd( 4.51814, 7.65918, 0.0, 3.7977 ) }
    // Section: dend_46, id: dend_46, parent: soma_0 (entry count 21/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( -1.57932, -10.8079, -1.33, 5.9 ) }
    dend_46 { pt3dadd( -2.1221, -14.4397, -1.43332, 5.22 ) }
    dend_46 { pt3dadd( -2.78457, -18.8724, -1.55943, 4.31 ) }
    dend_46 { pt3dadd( -3.67993, -24.8634, -1.72987, 3.63 ) }
    dend_46 { pt3dadd( -4.28588, -28.9179, -1.84522, 3.18 ) }
    dend_46 { pt3dadd( -4.72941, -31.8858, -1.92965, 3.18 ) }
    dend_46 { pt3dadd( -5.545, -37.3429, -2.0849, 3.18 ) }
    // Section: dend_39, id: dend_39, parent: soma_0 (entry count 28/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -0.219318, -8.6764, -8.12, 2.04 ) }
    dend_39 { pt3dadd( -0.260042, -10.3706, -8.05638, 2.04 ) }
    dend_39 { pt3dadd( -0.271751, -13.5098, -8.03467, 2.04 ) }
    dend_39 { pt3dadd( -0.251226, -14.9412, -8.07571, 2.04 ) }
    dend_39 { pt3dadd( -0.206365, -16.8607, -8.16105, 2.04 ) }
    dend_39 { pt3dadd( -0.1655, -18.6157, -8.26892, 2.04 ) }
    dend_39 { pt3dadd( -0.100042, -21.4269, -8.44172, 1.81 ) }
    dend_39 { pt3dadd( -0.0268931, -23.5409, -8.59039, 2.27 ) }
    dend_39 { pt3dadd( 0.0814407, -25.8948, -8.78468, 2.27 ) }
    dend_39 { pt3dadd( 0.20069, -27.8578, -9.00532, 2.27 ) }
    dend_39 { pt3dadd( 0.290761, -29.0797, -9.20609, 2.27 ) }
    // Section: dend_34, id: dend_34, parent: soma_0 (entry count 39/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 4.93069, -7.9099, -3.17, 2.72 ) }
    dend_34 { pt3dadd( 5.93349, -8.76204, -3.14762, 1.81 ) }
    dend_34 { pt3dadd( 7.24639, -9.85822, -3.20644, 1.59 ) }
    dend_34 { pt3dadd( 8.46507, -10.8641, -3.30844, 1.81 ) }
    dend_34 { pt3dadd( 9.02356, -11.3135, -3.37717, 2.04 ) }
    dend_34 { pt3dadd( 10.3507, -12.382, -3.59908, 1.81 ) }
    dend_34 { pt3dadd( 11.4795, -13.282, -3.80917, 1.36 ) }
    dend_34 { pt3dadd( 12.4795, -14.078, -4.02931, 1.13 ) }
    dend_34 { pt3dadd( 13.6546, -15.0369, -4.33817, 1.59 ) }
    dend_34 { pt3dadd( 15.0241, -16.2111, -4.80931, 1.36 ) }
    dend_34 { pt3dadd( 16.0804, -17.1631, -5.23252, 1.36 ) }
    dend_34 { pt3dadd( 16.6786, -17.7093, -5.50033, 1.81 ) }
    dend_34 { pt3dadd( 17.6915, -18.644, -5.99512, 1.36 ) }
    dend_34 { pt3dadd( 18.7994, -19.6401, -6.57365, 1.36 ) }
    dend_34 { pt3dadd( 20.3386, -21.0281, -7.46526, 1.36 ) }
    dend_34 { pt3dadd( 21.8633, -22.3635, -8.36545, 1.36 ) }
    dend_34 { pt3dadd( 23.0154, -23.3103, -9.02518, 1.36 ) }
    dend_34 { pt3dadd( 23.8598, -23.9658, -9.48778, 0.91 ) }
    dend_34 { pt3dadd( 24.9417, -24.7562, -10.0513, 1.59 ) }
    dend_34 { pt3dadd( 26.3253, -25.6868, -10.7043, 1.13 ) }
    dend_34 { pt3dadd( 27.7892, -26.6173, -11.2954, 1.13 ) }
    dend_34 { pt3dadd( 28.9916, -27.3744, -11.7358, 1.13 ) }
    dend_34 { pt3dadd( 30.3446, -28.2366, -12.2134, 1.13 ) }
    dend_34 { pt3dadd( 31.8279, -29.1913, -12.7359, 0.91 ) }
    dend_34 { pt3dadd( 32.9909, -29.9462, -13.1382, 1.13 ) }
    dend_34 { pt3dadd( 34.0722, -30.6611, -13.4782, 0.91 ) }
    dend_34 { pt3dadd( 35.2665, -31.4856, -13.8391, 1.13 ) }
    dend_34 { pt3dadd( 37.1808, -32.8259, -14.397, 1.13 ) }
    dend_34 { pt3dadd( 38.7318, -33.8901, -14.8707, 1.13 ) }
    dend_34 { pt3dadd( 40.0829, -34.8015, -15.2869, 0.91 ) }
    dend_34 { pt3dadd( 41.2138, -35.5714, -15.6688, 1.13 ) }
    dend_34 { pt3dadd( 42.0553, -36.1453, -16.0013, 1.13 ) }
    dend_34 { pt3dadd( 43.3388, -36.9846, -16.5207, 0.68 ) }
    dend_34 { pt3dadd( 44.7923, -37.921, -17.1406, 0.91 ) }
    dend_34 { pt3dadd( 45.6669, -38.4644, -17.546, 0.91 ) }
    dend_34 { pt3dadd( 47.6155, -39.6323, -18.4656, 0.91 ) }
    dend_34 { pt3dadd( 49.1407, -40.4958, -19.1521, 1.13 ) }
    dend_34 { pt3dadd( 51.0534, -41.5496, -19.916, 1.13 ) }
    dend_34 { pt3dadd( 52.4855, -42.3111, -20.3929, 0.91 ) }
    dend_34 { pt3dadd( 54.0629, -43.1235, -20.8064, 1.13 ) }
    dend_34 { pt3dadd( 56.0977, -44.1282, -21.2272, 0.68 ) }
    dend_34 { pt3dadd( 58.0486, -45.0517, -21.5118, 0.68 ) }
    dend_34 { pt3dadd( 59.3351, -45.6446, -21.638, 1.36 ) }
    dend_34 { pt3dadd( 60.6041, -46.231, -21.7373, 1.36 ) }
    dend_34 { pt3dadd( 62.2122, -46.9754, -21.7974, 0.68 ) }
    dend_34 { pt3dadd( 63.9321, -47.796, -21.81, 0.45 ) }
    dend_34 { pt3dadd( 65.326, -48.4889, -21.8234, 0.68 ) }
    dend_34 { pt3dadd( 66.188, -48.9482, -21.8342, 1.59 ) }
    // Section: dend_33, id: dend_33, parent: soma_0 (entry count 87/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 4.22069, 7.79811, -5.26, 1.36 ) }
    dend_33 { pt3dadd( 4.44499, 8.59969, -5.29437, 1.36 ) }
    dend_33 { pt3dadd( 4.93795, 10.2745, -5.36535, 1.13 ) }
    dend_33 { pt3dadd( 5.29608, 11.4316, -5.46234, 0.91 ) }
    dend_33 { pt3dadd( 5.67821, 12.4364, -5.58264, 0.91 ) }
    dend_33 { pt3dadd( 6.29655, 13.7948, -5.8044, 0.91 ) }
    dend_33 { pt3dadd( 6.78473, 14.7702, -6.00856, 0.91 ) }
    dend_33 { pt3dadd( 7.38804, 15.9644, -6.33752, 1.13 ) }
    dend_33 { pt3dadd( 7.98133, 17.2017, -6.78095, 0.91 ) }
    dend_33 { pt3dadd( 8.5841, 18.5535, -7.43256, 0.91 ) }
    dend_33 { pt3dadd( 9.00498, 19.5544, -8.04923, 1.36 ) }
    dend_33 { pt3dadd( 9.29497, 20.4358, -8.69414, 1.36 ) }
    dend_33 { pt3dadd( 9.49559, 21.3541, -9.38376, 1.13 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_33 { pt3dadd( 9.59889, 22.4621, -10.17, 1.59 ) }
    dend_33 { pt3dadd( 9.61518, 23.7559, -11.0086, 0.45 ) }
    dend_33 { pt3dadd( 9.57005, 24.7304, -11.6393, 0.91 ) }
    dend_33 { pt3dadd( 9.44127, 26.4213, -12.7401, 1.81 ) }
    dend_33 { pt3dadd( 9.38347, 27.311, -13.3498, 1.36 ) }
    dend_33 { pt3dadd( 9.37079, 28.3664, -14.1267, 1.59 ) }
    dend_33 { pt3dadd( 9.42064, 29.4005, -14.9484, 1.13 ) }
    dend_33 { pt3dadd( 9.51628, 30.3874, -15.8605, 0.91 ) }
    dend_33 { pt3dadd( 9.61893, 30.7345, -16.3646, 0.91 ) }
    dend_33 { pt3dadd( 9.86787, 30.9616, -17.0002, 0.91 ) }
    dend_33 { pt3dadd( 10.1567, 31.0977, -17.573, 0.91 ) }
    dend_33 { pt3dadd( 10.5855, 31.1835, -18.3017, 1.36 ) }
    dend_33 { pt3dadd( 11.5025, 31.2558, -19.6688, 0.68 ) }
    dend_33 { pt3dadd( 12.5626, 31.3086, -21.1038, 1.36 ) }
    dend_33 { pt3dadd( 13.6072, 31.3389, -22.4452, 1.36 ) }
    dend_33 { pt3dadd( 14.3695, 31.3533, -23.3733, 0.45 ) }
    dend_33 { pt3dadd( 15.5499, 31.3501, -24.8176, 0.23 ) }
    dend_33 { pt3dadd( 16.3902, 31.3285, -25.8651, 0.23 ) }
    dend_33 { pt3dadd( 16.805, 31.3058, -26.3933, 0.45 ) }
    dend_33 { pt3dadd( 17.6345, 31.2974, -27.5169, 0.23 ) }
    dend_33 { pt3dadd( 18.6114, 31.3621, -28.9626, 0.23 ) }
    dend_33 { pt3dadd( 19.2451, 31.4676, -29.9242, 0.68 ) }
    dend_33 { pt3dadd( 20.1024, 31.7156, -31.2101, 1.13 ) }
    dend_33 { pt3dadd( 21.4355, 32.225, -33.2134, 0.23 ) }
    dend_33 { pt3dadd( 22.1444, 32.5603, -34.2996, 0.23 ) }
    dend_33 { pt3dadd( 22.8212, 32.961, -35.3295, 0.68 ) }
    dend_33 { pt3dadd( 23.5406, 33.4931, -36.416, 1.13 ) }
    dend_33 { pt3dadd( 23.9928, 33.8659, -37.0506, 1.13 ) }
    dend_33 { pt3dadd( 25.0392, 34.8166, -38.442, 0.45 ) }
    dend_33 { pt3dadd( 26.0438, 35.8135, -39.7299, 0.45 ) }
    dend_33 { pt3dadd( 26.5355, 36.3418, -40.3938, 0.91 ) }
    dend_33 { pt3dadd( 27.7098, 37.7368, -42.1274, 0.23 ) }
    dend_33 { pt3dadd( 28.2453, 38.4219, -43.0151, 0.23 ) }
    dend_33 { pt3dadd( 28.918, 39.2332, -44.1943, 0.23 ) }
    dend_33 { pt3dadd( 29.4584, 39.8086, -45.1746, 0.68 ) }
    dend_33 { pt3dadd( 29.9391, 40.1845, -46.0644, 0.68 ) }
    dend_33 { pt3dadd( 30.7052, 40.6878, -47.5443, 0.23 ) }
    dend_33 { pt3dadd( 31.5775, 41.1022, -49.2655, 0.23 ) }
    dend_33 { pt3dadd( 32.4467, 41.3903, -51.0265, 0.23 ) }
    dend_33 { pt3dadd( 32.9288, 41.4569, -51.9774, 0.23 ) }
    dend_33 { pt3dadd( 33.912, 41.4234, -53.755, 0.23 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 41/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.70068, 8.94261, -2.94, 2.04 ) }
    dend_26 { pt3dadd( 2.07642, 11.0859, -3.14699, 2.04 ) }
    dend_26 { pt3dadd( 2.67173, 14.4817, -3.47495, 1.81 ) }
    dend_26 { pt3dadd( 3.20355, 17.5153, -3.76793, 1.13 ) }
    dend_26 { pt3dadd( 3.70786, 20.3919, -4.04575, 1.36 ) }
    dend_26 { pt3dadd( 3.71243, 20.418, -4.04827, 1.36 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 47/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 1.76068, 8.3021, -1.04, 4.31 ) }
    dend_11 { pt3dadd( 1.20867, 9.62295, -0.421677, 3.4 ) }
    dend_11 { pt3dadd( 0.955461, 10.2288, -0.138051, 3.4 ) }
    dend_11 { pt3dadd( -0.110241, 12.7788, 1.05567, 2.04 ) }
    dend_11 { pt3dadd( -0.541146, 13.8099, 1.53834, 2.5 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 52/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -5.24932, 3.1256, 3.4, 1.36 ) }
    dend_8 { pt3dadd( -5.46885, 4.86101, 4.50641, 1.36 ) }
    dend_8 { pt3dadd( -5.49101, 7.19858, 5.59682, 1.36 ) }
    dend_8 { pt3dadd( -5.38946, 8.83988, 6.26353, 1.36 ) }
    dend_8 { pt3dadd( -5.22942, 10.5728, 6.92659, 1.13 ) }
    dend_8 { pt3dadd( -5.03295, 12.0668, 7.47179, 1.13 ) }
    dend_8 { pt3dadd( -4.7585, 14.1459, 8.19511, 1.13 ) }
    dend_8 { pt3dadd( -4.43641, 16.1166, 8.80785, 0.68 ) }
    dend_8 { pt3dadd( -3.9008, 18.8357, 9.57482, 1.36 ) }
    dend_8 { pt3dadd( -3.37767, 21.3059, 10.2738, 0.68 ) }
    dend_8 { pt3dadd( -3.12185, 22.5294, 10.6276, 1.13 ) }
    dend_8 { pt3dadd( -2.61074, 25.2464, 11.4813, 0.68 ) }
    dend_8 { pt3dadd( -2.31719, 27.1989, 12.1281, 0.23 ) }
    dend_8 { pt3dadd( -2.14894, 28.5144, 12.5535, 1.36 ) }
    dend_8 { pt3dadd( -2.05012, 29.5637, 12.8371, 0.23 ) }
    dend_8 { pt3dadd( -2.05354, 30.9597, 13.0939, 0.68 ) }
    dend_8 { pt3dadd( -2.15902, 32.0251, 13.1585, 0.68 ) }
    dend_8 { pt3dadd( -2.33694, 33.5161, 13.0829, 0.68 ) }
    dend_8 { pt3dadd( -2.66328, 35.7306, 12.8307, 0.68 ) }
    dend_8 { pt3dadd( -2.7795, 36.4169, 12.764, 1.13 ) }
    dend_8 { pt3dadd( -3.19339, 39.4403, 12.5482, 0.23 ) }
    dend_8 { pt3dadd( -3.37538, 42.1447, 12.436, 0.23 ) }
    dend_8 { pt3dadd( -3.34098, 44.966, 12.394, 0.23 ) }
    dend_8 { pt3dadd( -3.24923, 47.1527, 12.378, 0.23 ) }
    dend_8 { pt3dadd( -3.13262, 49.2186, 12.3906, 0.68 ) }
    dend_8 { pt3dadd( -2.89228, 51.3908, 12.4928, 0.23 ) }
    dend_8 { pt3dadd( -2.39874, 53.5037, 12.7937, 0.23 ) }
    dend_8 { pt3dadd( -1.94603, 54.8623, 13.1501, 0.23 ) }
    dend_8 { pt3dadd( -0.86735, 66.8619, 13.8996, 0.23 ) }
    dend_8 { pt3dadd( 0.202351, 78.7433, 15.6715, 0.23 ) }
    dend_8 { pt3dadd( 2.18776, 90.4962, 17.4314, 0.23 ) }
    dend_8 { pt3dadd( 4.81426, 102.213, 18.3823, 0.23 ) }
    dend_8 { pt3dadd( 7.73167, 113.718, 20.3187, 0.23 ) }
    dend_8 { pt3dadd( 11.9373, 124.197, 24.1976, 0.23 ) }
    dend_8 { pt3dadd( 17.1297, 134.008, 28.4479, 0.23 ) }
    dend_8 { pt3dadd( 20.7946, 144.367, 33.0895, 0.23 ) }
    dend_8 { pt3dadd( 22.8179, 154.845, 38.4427, 0.23 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 89/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 5.36068, 7.81911, -4.06, 1.59 ) }
    dend_3 { pt3dadd( 6.20888, 8.73304, -3.87703, 1.59 ) }
    dend_3 { pt3dadd( 7.70911, 10.3893, -3.5268, 1.36 ) }
    dend_3 { pt3dadd( 9.12014, 11.9875, -3.18133, 1.59 ) }
    dend_3 { pt3dadd( 11.0778, 14.2497, -2.65474, 1.36 ) }
    dend_3 { pt3dadd( 13.1453, 16.6851, -2.07818, 1.36 ) }
    dend_3 { pt3dadd( 14.6764, 18.5196, -1.6542, 1.36 ) }
    dend_3 { pt3dadd( 16.4216, 20.6786, -1.21487, 1.36 ) }
    dend_3 { pt3dadd( 18.0328, 22.7169, -0.873965, 1.36 ) }
    dend_3 { pt3dadd( 19.2538, 24.3154, -0.677578, 1.36 ) }
    dend_3 { pt3dadd( 19.8383, 25.1092, -0.637886, 1.81 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_3 { pt3dadd( 21.1347, 26.8815, -0.73785, 1.36 ) }
    dend_3 { pt3dadd( 22.7137, 28.9697, -1.01373, 0.91 ) }
    dend_3 { pt3dadd( 24.2382, 30.9333, -1.40506, 1.36 ) }
    dend_3 { pt3dadd( 26.0578, 33.2053, -1.8526, 1.36 ) }
    dend_3 { pt3dadd( 27.2814, 34.6998, -2.11831, 1.59 ) }
    dend_3 { pt3dadd( 29.0207, 36.7862, -2.48399, 1.13 ) }
    dend_3 { pt3dadd( 30.51, 38.5389, -2.77119, 1.36 ) }
    dend_3 { pt3dadd( 32.043, 40.2996, -2.99068, 1.81 ) }
    dend_3 { pt3dadd( 33.7151, 42.205, -3.16722, 1.81 ) }
    dend_3 { pt3dadd( 35.1928, 43.8281, -3.16528, 1.36 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 10/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 4.93069, 6.9056, -0.94, 1.59 ) }
    dend_0 { pt3dadd( 5.67065, 8.94639, -0.119549, 1.59 ) }
    dend_0 { pt3dadd( 6.14158, 10.3671, 0.452355, 1.36 ) }
    dend_0 { pt3dadd( 6.83856, 12.5104, 1.3345, 2.04 ) }
    dend_0 { pt3dadd( 7.9759, 15.9958, 2.77409, 1.36 ) }
    dend_0 { pt3dadd( 8.59404, 17.8388, 3.58256, 1.81 ) }
    dend_0 { pt3dadd( 9.66109, 20.8899, 4.93655, 1.36 ) }
    dend_0 { pt3dadd( 10.1609, 22.2481, 5.59023, 1.13 ) }
    dend_0 { pt3dadd( 10.9625, 24.2671, 6.58493, 1.59 ) }
    dend_0 { pt3dadd( 11.6446, 25.768, 7.33527, 1.59 ) }
    dend_0 { pt3dadd( 12.7543, 27.9443, 8.37352, 1.13 ) }
    dend_0 { pt3dadd( 13.4547, 29.2373, 8.96241, 1.13 ) }
    dend_0 { pt3dadd( 14.4888, 31.0193, 9.75278, 1.81 ) }
    dend_0 { pt3dadd( 15.8295, 33.3336, 10.747, 1.13 ) }
    dend_0 { pt3dadd( 16.8348, 35.0614, 11.4602, 1.36 ) }
    dend_0 { pt3dadd( 18.0463, 37.1544, 12.2877, 1.13 ) }
    dend_0 { pt3dadd( 18.6432, 38.2179, 12.6678, 1.59 ) }
    dend_0 { pt3dadd( 19.4688, 39.7772, 13.2377, 1.36 ) }
    dend_0 { pt3dadd( 20.1754, 41.2537, 13.7404, 1.36 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 29/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 4.51814, 7.65918, 0.0, 1.16355 ) }
    axon_0 { pt3dadd( 12.7262, 20.2141, 0.0, 1.16355 ) }
    axon_0 { pt3dadd( 20.9343, 32.7691, 0.0, 1.16355 ) }
    // Section: dend_50, id: dend_50, parent: dend_46 (entry count 32/100)
    dend_50 { pt3dclear() }
    dend_50 { pt3dadd( -5.545, -37.3429, -2.0849, 2.27 ) }
    dend_50 { pt3dadd( -5.1971, -39.3178, -1.53729, 2.27 ) }
    dend_50 { pt3dadd( -4.79764, -41.5853, -0.908529, 2.27 ) }
    dend_50 { pt3dadd( -4.41835, -43.7383, -0.311529, 2.27 ) }
    dend_50 { pt3dadd( -4.31155, -44.3446, -0.143403, 2.27 ) }
    // Section: dend_47, id: dend_47, parent: dend_46 (entry count 37/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( -5.545, -37.3429, -2.0849, 1.13 ) }
    dend_47 { pt3dadd( -8.46085, -39.7556, -2.38073, 1.13 ) }
    dend_47 { pt3dadd( -9.70325, -40.7745, -2.48491, 1.13 ) }
    dend_47 { pt3dadd( -12.6197, -43.0846, -2.69384, 1.13 ) }
    dend_47 { pt3dadd( -14.1829, -44.3189, -2.86236, 1.59 ) }
    dend_47 { pt3dadd( -16.474, -46.123, -3.16987, 1.36 ) }
    dend_47 { pt3dadd( -17.9679, -47.2682, -3.41136, 1.36 ) }
    dend_47 { pt3dadd( -19.1482, -48.1245, -3.67133, 1.36 ) }
    dend_47 { pt3dadd( -20.6196, -49.1838, -4.0668, 1.36 ) }
    dend_47 { pt3dadd( -22.0376, -50.2244, -4.55566, 1.36 ) }
    dend_47 { pt3dadd( -23.6812, -51.4463, -5.23525, 1.36 ) }
    dend_47 { pt3dadd( -25.6868, -52.9614, -6.15774, 1.36 ) }
    dend_47 { pt3dadd( -27.2816, -54.2504, -6.85981, 1.36 ) }
    dend_47 { pt3dadd( -28.1019, -54.9684, -7.2363, 1.36 ) }
    dend_47 { pt3dadd( -29.643, -56.4489, -7.92344, 1.59 ) }
    dend_47 { pt3dadd( -31.1658, -58.0708, -8.53743, 1.13 ) }
    dend_47 { pt3dadd( -33.0384, -60.2456, -9.30189, 1.36 ) }
    dend_47 { pt3dadd( -35.0289, -62.6943, -10.0858, 1.36 ) }
    dend_47 { pt3dadd( -36.0295, -63.9257, -10.4504, 2.04 ) }
    dend_47 { pt3dadd( -37.7316, -65.967, -11.0689, 1.59 ) }
    dend_47 { pt3dadd( -39.6877, -68.2897, -11.7788, 1.13 ) }
    dend_47 { pt3dadd( -40.6742, -69.4312, -12.1389, 1.13 ) }
    dend_47 { pt3dadd( -41.3748, -70.176, -12.4119, 1.13 ) }
    dend_47 { pt3dadd( -42.2791, -71.0153, -12.7656, 1.13 ) }
    dend_47 { pt3dadd( -44.0509, -72.5307, -13.409, 0.91 ) }
    dend_47 { pt3dadd( -45.0829, -73.3783, -13.7833, 0.91 ) }
    dend_47 { pt3dadd( -46.0316, -74.2099, -14.0414, 0.91 ) }
    dend_47 { pt3dadd( -47.3818, -75.5521, -14.2672, 0.91 ) }
    dend_47 { pt3dadd( -48.8628, -77.1368, -14.4151, 0.68 ) }
    dend_47 { pt3dadd( -50.4004, -78.8197, -14.502, 0.91 ) }
    dend_47 { pt3dadd( -52.2171, -80.7704, -14.5624, 0.91 ) }
    dend_47 { pt3dadd( -55.1226, -83.8534, -14.6525, 1.13 ) }
    dend_47 { pt3dadd( -57.3968, -86.2424, -14.7742, 1.81 ) }
    dend_47 { pt3dadd( -59.4525, -88.3733, -14.9179, 0.91 ) }
    dend_47 { pt3dadd( -61.2584, -90.2375, -15.1035, 0.91 ) }
    dend_47 { pt3dadd( -63.2594, -92.2596, -15.3965, 1.59 ) }
    dend_47 { pt3dadd( -64.2324, -93.2152, -15.596, 1.59 ) }
    dend_47 { pt3dadd( -65.8024, -94.705, -16.097, 0.68 ) }
    dend_47 { pt3dadd( -66.5627, -95.416, -16.3742, 0.68 ) }
    dend_47 { pt3dadd( -67.7235, -96.523, -16.7979, 1.13 ) }
    dend_47 { pt3dadd( -68.5692, -97.365, -17.1011, 1.13 ) }
    dend_47 { pt3dadd( -69.3026, -98.0787, -17.3406, 1.13 ) }
    dend_47 { pt3dadd( -70.7323, -99.376, -17.7584, 0.91 ) }
    dend_47 { pt3dadd( -72.4111, -100.793, -18.1807, 1.13 ) }
    dend_47 { pt3dadd( -73.9043, -102.029, -18.4883, 1.13 ) }
    dend_47 { pt3dadd( -75.2083, -103.099, -18.7032, 0.68 ) }
    dend_47 { pt3dadd( -76.8885, -104.516, -18.8982, 0.68 ) }
    dend_47 { pt3dadd( -77.9471, -105.426, -18.9769, 1.13 ) }
    dend_47 { pt3dadd( -78.59, -105.951, -19.0024, 1.13 ) }
    dend_47 { pt3dadd( -81.0549, -107.746, -19.1255, 0.68 ) }
    dend_47 { pt3dadd( -82.6838, -108.814, -19.2664, 1.13 ) }
    dend_47 { pt3dadd( -83.6061, -109.378, -19.3734, 1.36 ) }
    dend_47 { pt3dadd( -85.4749, -110.493, -19.6614, 0.68 ) }
    dend_47 { pt3dadd( -87.8726, -111.863, -20.1134, 1.13 ) }
    dend_47 { pt3dadd( -90.347, -113.225, -20.7358, 0.45 ) }
    dend_47 { pt3dadd( -91.8257, -113.956, -21.1884, 0.23 ) }
    dend_47 { pt3dadd( -93.5048, -114.765, -21.7314, 0.45 ) }
    dend_47 { pt3dadd( -94.6908, -115.317, -22.1249, 1.13 ) }
    dend_47 { pt3dadd( -97.3096, -116.478, -23.0091, 0.45 ) }
    dend_47 { pt3dadd( -99.2896, -117.285, -23.6552, 1.36 ) }
    dend_47 { pt3dadd( -101.787, -118.158, -24.3325, 1.81 ) }
    dend_47 { pt3dadd( -103.305, -118.536, -24.682, 0.68 ) }
    dend_47 { pt3dadd( -104.971, -118.826, -25.0142, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_47 { pt3dadd( -107.014, -119.067, -25.3393, 1.13 ) }
    dend_47 { pt3dadd( -109.197, -119.233, -25.6303, 0.68 ) }
    dend_47 { pt3dadd( -112.06, -119.361, -25.8975, 1.36 ) }
    dend_47 { pt3dadd( -114.827, -119.43, -26.1116, 0.23 ) }
    dend_47 { pt3dadd( -116.615, -119.437, -26.2164, 1.59 ) }
    dend_47 { pt3dadd( -117.596, -119.438, -26.2429, 1.59 ) }
    // Section: dend_45, id: dend_45, parent: dend_39 (entry count 6/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 0.290761, -29.0797, -9.20609, 0.68 ) }
    dend_45 { pt3dadd( 1.087, -29.2934, -11.5848, 0.68 ) }
    dend_45 { pt3dadd( 2.02856, -29.6491, -13.6464, 1.13 ) }
    dend_45 { pt3dadd( 3.06147, -30.1999, -15.6005, 1.13 ) }
    dend_45 { pt3dadd( 3.62952, -30.5659, -16.6099, 1.13 ) }
    dend_45 { pt3dadd( 4.12398, -30.9357, -17.5014, 0.91 ) }
    dend_45 { pt3dadd( 4.99016, -31.62, -19.1361, 1.36 ) }
    dend_45 { pt3dadd( 5.93656, -32.3021, -20.7031, 1.13 ) }
    dend_45 { pt3dadd( 6.95129, -33.1857, -22.2779, 1.13 ) }
    dend_45 { pt3dadd( 7.2413, -33.5317, -22.743, 1.13 ) }
    dend_45 { pt3dadd( 7.55316, -33.9864, -23.2821, 1.13 ) }
    dend_45 { pt3dadd( 7.99518, -34.7514, -24.1522, 1.13 ) }
    dend_45 { pt3dadd( 8.43987, -35.5482, -25.0497, 1.13 ) }
    dend_45 { pt3dadd( 9.00078, -36.5911, -26.2691, 1.13 ) }
    dend_45 { pt3dadd( 9.75926, -38.0905, -28.052, 0.68 ) }
    dend_45 { pt3dadd( 10.203, -38.9638, -29.0938, 1.13 ) }
    dend_45 { pt3dadd( 11.2184, -41.0256, -31.5955, 0.68 ) }
    dend_45 { pt3dadd( 11.8741, -42.3307, -33.2335, 1.13 ) }
    dend_45 { pt3dadd( 12.9002, -44.3345, -35.8385, 0.45 ) }
    dend_45 { pt3dadd( 13.4183, -45.2326, -37.0783, 0.45 ) }
    dend_45 { pt3dadd( 14.5675, -46.9722, -39.6551, 0.45 ) }
    dend_45 { pt3dadd( 15.8338, -48.7358, -42.4073, 1.13 ) }
    dend_45 { pt3dadd( 17.1639, -50.455, -45.1817, 0.45 ) }
    dend_45 { pt3dadd( 18.1297, -51.6611, -47.0503, 0.45 ) }
    dend_45 { pt3dadd( 19.8387, -53.6347, -49.9848, 0.45 ) }
    dend_45 { pt3dadd( 21.0996, -55.0241, -52.0039, 0.23 ) }
    dend_45 { pt3dadd( 22.2213, -56.2008, -53.6836, 1.13 ) }
    dend_45 { pt3dadd( 23.2549, -57.2332, -55.0873, 0.23 ) }
    dend_45 { pt3dadd( 25.0491, -58.9406, -57.2936, 0.23 ) }
    dend_45 { pt3dadd( 26.5544, -60.2217, -58.8793, 0.68 ) }
    dend_45 { pt3dadd( 29.456, -62.3999, -61.3818, 0.23 ) }
    dend_45 { pt3dadd( 32.9158, -64.4895, -63.6675, 0.23 ) }
    dend_45 { pt3dadd( 34.0974, -65.0257, -64.2671, 0.23 ) }
    dend_45 { pt3dadd( 36.2144, -65.727, -65.1497, 0.68 ) }
    dend_45 { pt3dadd( 39.2844, -66.5537, -66.3043, 0.23 ) }
    dend_45 { pt3dadd( 41.7863, -67.2133, -67.1482, 0.91 ) }
    dend_45 { pt3dadd( 45.3267, -68.1631, -68.3052, 0.23 ) }
    dend_45 { pt3dadd( 49.3209, -69.2606, -69.6738, 0.23 ) }
    dend_45 { pt3dadd( 55.5316, -71.0427, -72.129, 0.23 ) }
    dend_45 { pt3dadd( 60.6709, -72.6171, -74.5155, 0.23 ) }
    dend_45 { pt3dadd( 62.8756, -73.3372, -75.7169, 0.68 ) }
    dend_45 { pt3dadd( 65.8822, -74.3864, -77.4963, 0.23 ) }
    dend_45 { pt3dadd( 67.5086, -75.0295, -78.5581, 0.91 ) }
    dend_45 { pt3dadd( 69.3565, -75.8288, -79.8755, 0.23 ) }
    dend_45 { pt3dadd( 72.0124, -77.0015, -82.0541, 0.68 ) }
    dend_45 { pt3dadd( 74.5562, -77.9272, -84.4988, 0.23 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 52/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 0.290761, -29.0797, -9.20609, 1.81 ) }
    dend_40 { pt3dadd( -1.18485, -30.9592, -11.2418, 1.81 ) }
    dend_40 { pt3dadd( -2.33914, -32.4379, -12.7805, 1.81 ) }
    dend_40 { pt3dadd( -3.41317, -33.76, -14.0721, 1.81 ) }
    dend_40 { pt3dadd( -4.97939, -35.688, -15.9556, 1.81 ) }
    dend_40 { pt3dadd( -6.01303, -36.9603, -17.1986, 1.81 ) }
    dend_40 { pt3dadd( -6.75292, -37.8711, -18.0884, 1.59 ) }
    dend_40 { pt3dadd( -7.38223, -38.7429, -18.8964, 1.81 ) }
    dend_40 { pt3dadd( -8.15034, -39.8895, -19.9694, 1.81 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 61/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 66.188, -48.9482, -21.8342, 0.23 ) }
    dend_36 { pt3dadd( 68.738, -48.5442, -21.6844, 0.23 ) }
    dend_36 { pt3dadd( 73.5177, -47.5766, -21.1239, 0.45 ) }
    dend_36 { pt3dadd( 75.7171, -47.1077, -20.8634, 0.45 ) }
    dend_36 { pt3dadd( 78.4917, -46.4328, -20.5437, 0.23 ) }
    dend_36 { pt3dadd( 81.0226, -45.8172, -20.252, 1.13 ) }
    dend_36 { pt3dadd( 85.1282, -44.8185, -19.7789, 0.23 ) }
    dend_36 { pt3dadd( 88.359, -43.8815, -19.2923, 0.91 ) }
    dend_36 { pt3dadd( 91.7034, -42.6695, -18.7151, 0.23 ) }
    dend_36 { pt3dadd( 94.6576, -41.57, -18.2338, 0.91 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 71/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 66.188, -48.9482, -21.8342, 0.23 ) }
    dend_35 { pt3dadd( 68.2766, -50.0558, -21.5298, 0.23 ) }
    dend_35 { pt3dadd( 70.6537, -51.3081, -21.241, 0.23 ) }
    dend_35 { pt3dadd( 72.682, -52.3996, -21.0246, 0.23 ) }
    dend_35 { pt3dadd( 73.8604, -53.0477, -20.9094, 1.36 ) }
    dend_35 { pt3dadd( 75.5976, -54.0278, -20.749, 0.23 ) }
    dend_35 { pt3dadd( 77.3379, -55.0585, -20.5957, 0.68 ) }
    dend_35 { pt3dadd( 79.4903, -56.404, -20.4799, 0.23 ) }
    dend_35 { pt3dadd( 80.8177, -57.2975, -20.4664, 0.23 ) }
    dend_35 { pt3dadd( 81.567, -57.8533, -20.4872, 0.23 ) }
    dend_35 { pt3dadd( 82.2093, -58.3625, -20.5143, 0.91 ) }
    dend_35 { pt3dadd( 83.874, -59.7961, -20.613, 0.23 ) }
    dend_35 { pt3dadd( 85.1532, -60.9735, -20.7162, 0.23 ) }
    dend_35 { pt3dadd( 85.6473, -61.4238, -20.734, 0.91 ) }
    dend_35 { pt3dadd( 86.5605, -62.1745, -20.7329, 0.91 ) }
    dend_35 { pt3dadd( 87.3303, -62.727, -20.7132, 0.23 ) }
    dend_35 { pt3dadd( 88.1802, -63.2503, -20.6779, 0.23 ) }
    dend_35 { pt3dadd( 89.2371, -63.8243, -20.6486, 0.68 ) }
    dend_35 { pt3dadd( 91.545, -65.0179, -20.5914, 0.23 ) }
    dend_35 { pt3dadd( 93.1551, -65.8203, -20.5893, 0.23 ) }
    dend_35 { pt3dadd( 94.5757, -66.4993, -20.6194, 1.36 ) }
    dend_35 { pt3dadd( 95.8563, -67.1033, -20.6714, 0.45 ) }
    dend_35 { pt3dadd( 97.7068, -67.9664, -20.7875, 0.23 ) }
    dend_35 { pt3dadd( 98.79, -68.479, -20.8829, 1.13 ) }
    dend_35 { pt3dadd( 99.6323, -68.8916, -20.9475, 1.13 ) }
    dend_35 { pt3dadd( 100.827, -69.4991, -20.9798, 0.23 ) }
    dend_35 { pt3dadd( 101.467, -69.8333, -20.969, 0.91 ) }
    dend_35 { pt3dadd( 102.395, -70.3315, -20.9159, 0.91 ) }
    dend_35 { pt3dadd( 104.31, -71.4001, -20.7319, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_35 { pt3dadd( 106.357, -72.6544, -20.5122, 0.23 ) }
    dend_35 { pt3dadd( 107.684, -73.5505, -20.3581, 0.23 ) }
    dend_35 { pt3dadd( 108.21, -73.9542, -20.2911, 1.13 ) }
    dend_35 { pt3dadd( 109.934, -75.4088, -20.0667, 0.23 ) }
    dend_35 { pt3dadd( 110.806, -76.2212, -19.9545, 1.36 ) }
    dend_35 { pt3dadd( 112.017, -77.4646, -19.7823, 0.68 ) }
    dend_35 { pt3dadd( 112.831, -78.3629, -19.7036, 1.13 ) }
    dend_35 { pt3dadd( 113.897, -79.5536, -19.5885, 0.23 ) }
    dend_35 { pt3dadd( 114.443, -80.1542, -19.5178, 0.68 ) }
    dend_35 { pt3dadd( 115.189, -80.9621, -19.3864, 0.68 ) }
    dend_35 { pt3dadd( 116.84, -82.6842, -19.05, 0.23 ) }
    dend_35 { pt3dadd( 117.925, -83.8128, -18.7801, 0.68 ) }
    dend_35 { pt3dadd( 118.912, -84.8299, -18.5165, 0.23 ) }
    dend_35 { pt3dadd( 119.568, -85.4905, -18.33, 0.23 ) }
    dend_35 { pt3dadd( 120.658, -86.6223, -17.9859, 0.23 ) }
    dend_35 { pt3dadd( 121.581, -87.6036, -17.6583, 0.23 ) }
    dend_35 { pt3dadd( 122.671, -88.8509, -17.1951, 0.91 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 17/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 3.71243, 20.418, -4.04827, 0.23 ) }
    dend_30 { pt3dadd( 3.01313, 22.4178, -5.04729, 0.23 ) }
    dend_30 { pt3dadd( 2.57939, 23.8143, -5.66512, 0.68 ) }
    dend_30 { pt3dadd( 2.1481, 25.6683, -6.37117, 1.13 ) }
    dend_30 { pt3dadd( 1.87844, 27.2265, -7.02558, 0.68 ) }
    dend_30 { pt3dadd( 1.40267, 29.7132, -8.24885, 0.68 ) }
    dend_30 { pt3dadd( 1.18253, 30.9052, -8.86247, 0.68 ) }
    dend_30 { pt3dadd( 1.07142, 31.536, -9.2052, 0.68 ) }
    dend_30 { pt3dadd( 0.741798, 33.0957, -10.1563, 1.81 ) }
    dend_30 { pt3dadd( 0.317237, 35.4142, -11.6826, 1.13 ) }
    dend_30 { pt3dadd( -0.120793, 38.0379, -13.5877, 0.68 ) }
    dend_30 { pt3dadd( -0.382178, 39.3844, -14.6292, 1.13 ) }
    dend_30 { pt3dadd( -0.883858, 41.6599, -16.4263, 0.45 ) }
    dend_30 { pt3dadd( -1.24045, 43.2443, -17.7454, 0.45 ) }
    dend_30 { pt3dadd( -1.59601, 45.0465, -19.3852, 1.36 ) }
    dend_30 { pt3dadd( -1.78444, 46.5046, -20.8929, 0.68 ) }
    dend_30 { pt3dadd( -1.77009, 47.54, -22.2008, 0.68 ) }
    dend_30 { pt3dadd( -1.63894, 48.8851, -24.1172, 1.36 ) }
    dend_30 { pt3dadd( -1.31744, 50.6304, -26.824, 0.45 ) }
    dend_30 { pt3dadd( -0.893445, 52.0331, -29.2754, 0.45 ) }
    dend_30 { pt3dadd( -0.401733, 53.2521, -31.8376, 0.45 ) }
    dend_30 { pt3dadd( 0.233679, 54.2774, -34.4605, 0.45 ) }
    dend_30 { pt3dadd( 0.797243, 54.8582, -36.3066, 1.81 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 40/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 3.71243, 20.418, -4.04827, 1.13 ) }
    dend_27 { pt3dadd( 3.53702, 23.6615, -4.47262, 1.13 ) }
    dend_27 { pt3dadd( 3.55355, 26.511, -4.80584, 1.13 ) }
    dend_27 { pt3dadd( 3.70316, 30.0686, -5.30256, 1.13 ) }
    dend_27 { pt3dadd( 3.96164, 34.162, -5.945, 1.13 ) }
    dend_27 { pt3dadd( 4.06612, 35.7211, -6.20855, 1.13 ) }
    dend_27 { pt3dadd( 4.22302, 37.5633, -6.54141, 1.13 ) }
    dend_27 { pt3dadd( 4.5207, 40.6121, -7.1159, 1.36 ) }
    dend_27 { pt3dadd( 4.89678, 43.5321, -7.69205, 1.13 ) }
    dend_27 { pt3dadd( 5.49242, 46.9512, -8.41079, 1.13 ) }
    dend_27 { pt3dadd( 6.01687, 49.4059, -9.01114, 1.59 ) }
    dend_27 { pt3dadd( 6.36709, 51.1085, -9.47032, 1.36 ) }
    // Section: dend_19, id: dend_19, parent: dend_11 (entry count 52/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -0.541146, 13.8099, 1.53834, 2.95 ) }
    dend_19 { pt3dadd( -1.85993, 14.6421, 1.7919, 2.95 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 54/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -0.541146, 13.8099, 1.53834, 0.91 ) }
    dend_12 { pt3dadd( 0.0465375, 15.5482, 2.56977, 0.91 ) }
    dend_12 { pt3dadd( 0.13248, 15.9296, 2.83221, 0.91 ) }
    dend_12 { pt3dadd( 0.332187, 16.6577, 3.42302, 0.91 ) }
    dend_12 { pt3dadd( 0.658581, 17.5388, 4.2264, 1.36 ) }
    dend_12 { pt3dadd( 1.2956, 18.827, 5.57057, 0.91 ) }
    dend_12 { pt3dadd( 1.8718, 19.7383, 6.60264, 0.91 ) }
    dend_12 { pt3dadd( 2.75316, 20.7892, 7.924, 1.36 ) }
    dend_12 { pt3dadd( 3.83087, 21.9049, 9.4977, 0.68 ) }
    dend_12 { pt3dadd( 4.62797, 22.6262, 10.6373, 0.23 ) }
    dend_12 { pt3dadd( 5.44318, 23.2625, 11.7049, 0.23 ) }
    dend_12 { pt3dadd( 6.50353, 23.8081, 12.8375, 0.23 ) }
    dend_12 { pt3dadd( 6.88059, 23.9241, 13.164, 1.13 ) }
    dend_12 { pt3dadd( 7.65008, 24.0761, 13.7351, 0.23 ) }
    dend_12 { pt3dadd( 8.19042, 24.1557, 14.1046, 0.23 ) }
    dend_12 { pt3dadd( 8.97478, 24.2617, 14.6332, 0.68 ) }
    dend_12 { pt3dadd( 10.6645, 24.5015, 15.7775, 0.23 ) }
    dend_12 { pt3dadd( 11.255, 24.369, 16.1949, 0.23 ) }
    dend_12 { pt3dadd( 14.6701, 27.2703, 22.2878, 0.23 ) }
    dend_12 { pt3dadd( 19.0418, 30.6536, 27.4742, 0.23 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 74/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 22.8179, 154.845, 38.4427, 0.23 ) }
    dend_10 { pt3dadd( 24.3276, 163.41, 40.3447, 0.23 ) }
    dend_10 { pt3dadd( 25.2879, 171.509, 43.8456, 0.23 ) }
    dend_10 { pt3dadd( 25.944, 179.776, 47.0484, 0.23 ) }
    dend_10 { pt3dadd( 25.8436, 187.705, 51.0246, 0.23 ) }
    dend_10 { pt3dadd( 26.4484, 195.184, 55.6833, 0.23 ) }
    dend_10 { pt3dadd( 26.0827, 202.113, 61.0945, 0.23 ) }
    dend_10 { pt3dadd( 24.3207, 208.725, 66.6029, 0.23 ) }
    dend_10 { pt3dadd( 24.2345, 215.389, 72.3175, 0.23 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 83/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 22.8179, 154.845, 38.4427, 0.23 ) }
    dend_9 { pt3dadd( 24.9776, 167.066, 41.0284, 0.23 ) }
    dend_9 { pt3dadd( 25.9627, 179.638, 42.6223, 0.23 ) }
    dend_9 { pt3dadd( 24.4859, 192.22, 43.7962, 0.23 ) }
    dend_9 { pt3dadd( 23.3722, 204.498, 46.8401, 0.23 ) }
    dend_9 { pt3dadd( 23.493, 216.513, 50.8721, 0.23 ) }
    dend_9 { pt3dadd( 24.9754, 228.04, 55.8095, 0.23 ) }
    dend_9 { pt3dadd( 25.034, 239.646, 60.8189, 0.23 ) }
    dend_9 { pt3dadd( 26.937, 250.849, 66.2617, 0.23 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 92/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 35.1928, 43.8281, -3.16528, 0.68 ) }
    dend_5 { pt3dadd( 35.9486, 44.7107, -3.34561, 0.68 ) }
    dend_5 { pt3dadd( 36.7651, 45.6487, -3.53548, 1.13 ) }
    dend_5 { pt3dadd( 37.3898, 46.3872, -3.72144, 1.59 ) }
    dend_5 { pt3dadd( 38.3851, 47.5718, -4.05482, 0.68 ) }
    dend_5 { pt3dadd( 38.9904, 48.2818, -4.26191, 0.68 ) }
    dend_5 { pt3dadd( 39.9128, 49.3396, -4.56989, 1.81 ) }
    dend_5 { pt3dadd( 40.7498, 50.2884, -4.87137, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_5 { pt3dadd( 41.7021, 51.3631, -5.21467, 0.23 ) }
    dend_5 { pt3dadd( 42.4918, 52.2464, -5.50843, 1.13 ) }
    dend_5 { pt3dadd( 43.0765, 52.8872, -5.7217, 1.13 ) }
    dend_5 { pt3dadd( 43.8203, 53.629, -5.96774, 0.23 ) }
    dend_5 { pt3dadd( 44.4823, 54.2123, -6.16399, 0.23 ) }
    dend_5 { pt3dadd( 45.1162, 54.699, -6.32805, 0.91 ) }
    dend_5 { pt3dadd( 45.7471, 55.1163, -6.44705, 0.23 ) }
    dend_5 { pt3dadd( 46.3983, 55.5207, -6.57162, 1.36 ) }
    dend_5 { pt3dadd( 47.395, 56.1063, -6.76415, 0.23 ) }
    dend_5 { pt3dadd( 47.9404, 56.4309, -6.86373, 1.36 ) }
    dend_5 { pt3dadd( 48.5856, 56.8486, -6.98569, 1.81 ) }
    dend_5 { pt3dadd( 50.3055, 58.134, -7.3307, 0.23 ) }
    dend_5 { pt3dadd( 51.2827, 58.9394, -7.55197, 0.23 ) }
    dend_5 { pt3dadd( 52.0639, 59.6157, -7.7333, 1.36 ) }
    dend_5 { pt3dadd( 53.0272, 60.5181, -7.95834, 0.23 ) }
    dend_5 { pt3dadd( 53.9145, 61.4002, -8.18001, 0.91 ) }
    dend_5 { pt3dadd( 54.7337, 62.2737, -8.40647, 0.23 ) }
    dend_5 { pt3dadd( 55.393, 63.1038, -8.62047, 2.27 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 18/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 35.1928, 43.8281, -3.16528, 0.23 ) }
    dend_4 { pt3dadd( 36.9312, 44.1582, -3.18989, 0.23 ) }
    dend_4 { pt3dadd( 38.9423, 44.7014, -3.27592, 0.45 ) }
    dend_4 { pt3dadd( 40.2136, 45.1423, -3.36161, 1.13 ) }
    dend_4 { pt3dadd( 42.749, 46.0784, -3.54502, 0.45 ) }
    dend_4 { pt3dadd( 44.0922, 46.6126, -3.66616, 1.36 ) }
    dend_4 { pt3dadd( 45.8425, 47.3699, -3.83999, 1.13 ) }
    dend_4 { pt3dadd( 48.0868, 48.4491, -4.1051, 0.91 ) }
    dend_4 { pt3dadd( 50.3076, 49.6298, -4.36077, 0.68 ) }
    dend_4 { pt3dadd( 51.4766, 50.3159, -4.4391, 0.23 ) }
    dend_4 { pt3dadd( 52.4642, 50.9383, -4.44301, 0.68 ) }
    dend_4 { pt3dadd( 53.8274, 51.8076, -4.36452, 0.23 ) }
    dend_4 { pt3dadd( 55.0033, 52.5461, -4.23262, 1.13 ) }
    dend_4 { pt3dadd( 57.9161, 54.2559, -3.79265, 0.23 ) }
    dend_4 { pt3dadd( 61.1957, 56.0548, -3.21225, 0.23 ) }
    dend_4 { pt3dadd( 62.7346, 56.7975, -2.9257, 1.36 ) }
    dend_4 { pt3dadd( 63.8805, 57.2586, -2.6995, 1.36 ) }
    dend_4 { pt3dadd( 66.2617, 58.0147, -2.24045, 0.23 ) }
    dend_4 { pt3dadd( 67.3237, 58.2627, -2.04987, 0.23 ) }
    dend_4 { pt3dadd( 68.8726, 58.352, -1.81864, 0.91 ) }
    dend_4 { pt3dadd( 71.2521, 58.093, -1.63523, 0.23 ) }
    dend_4 { pt3dadd( 71.9586, 57.9817, -1.61163, 0.91 ) }
    dend_4 { pt3dadd( 73.3097, 57.7591, -1.61897, 0.91 ) }
    dend_4 { pt3dadd( 74.8618, 57.5309, -1.6809, 0.23 ) }
    dend_4 { pt3dadd( 77.1672, 57.2775, -1.88251, 1.59 ) }
    dend_4 { pt3dadd( 80.6976, 57.0355, -2.40448, 0.23 ) }
    dend_4 { pt3dadd( 82.5104, 56.9787, -2.72859, 0.68 ) }
    dend_4 { pt3dadd( 83.6914, 56.9765, -2.96683, 0.23 ) }
    dend_4 { pt3dadd( 84.91, 57.0111, -3.25757, 0.91 ) }
    dend_4 { pt3dadd( 86.9562, 57.1628, -3.8456, 0.23 ) }
    dend_4 { pt3dadd( 88.3449, 57.431, -4.33833, 1.36 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 49/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 20.1754, 41.2537, 13.7404, 0.45 ) }
    dend_2 { pt3dadd( 22.0654, 41.726, 13.788, 0.45 ) }
    dend_2 { pt3dadd( 24.5236, 42.4889, 13.8879, 0.45 ) }
    dend_2 { pt3dadd( 26.0113, 43.0108, 13.9336, 0.91 ) }
    dend_2 { pt3dadd( 28.0064, 43.7098, 13.938, 0.23 ) }
    dend_2 { pt3dadd( 29.8485, 44.3313, 13.9105, 0.68 ) }
    dend_2 { pt3dadd( 31.9262, 44.9927, 13.8208, 0.68 ) }
    dend_2 { pt3dadd( 33.3101, 45.4, 13.7173, 0.23 ) }
    dend_2 { pt3dadd( 34.5979, 45.7763, 13.5609, 0.23 ) }
    dend_2 { pt3dadd( 36.8976, 46.4517, 13.2041, 0.23 ) }
    dend_2 { pt3dadd( 38.7954, 46.9722, 12.8365, 0.23 ) }
    dend_2 { pt3dadd( 40.5568, 47.3865, 12.4068, 0.23 ) }
    dend_2 { pt3dadd( 41.5946, 47.5949, 12.1098, 0.23 ) }
    dend_2 { pt3dadd( 42.9143, 47.805, 11.7256, 0.68 ) }
    dend_2 { pt3dadd( 44.1972, 48.0029, 11.3466, 0.68 ) }
    dend_2 { pt3dadd( 45.6665, 48.2911, 10.8744, 0.23 ) }
    dend_2 { pt3dadd( 56.7213, 50.0089, 8.03991, 0.23 ) }
    dend_2 { pt3dadd( 67.7786, 51.9498, 5.36326, 0.23 ) }
    dend_2 { pt3dadd( 79.1994, 53.47, 4.68917, 0.23 ) }
    dend_2 { pt3dadd( 90.1439, 56.4579, 2.53384, 0.23 ) }
    dend_2 { pt3dadd( 100.917, 58.7952, -0.884914, 0.23 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 70/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 20.1754, 41.2537, 13.7404, 0.91 ) }
    dend_1 { pt3dadd( 20.8215, 43.5382, 14.2379, 0.91 ) }
    dend_1 { pt3dadd( 21.6319, 45.5735, 14.601, 1.36 ) }
    dend_1 { pt3dadd( 22.7173, 48.2994, 15.0874, 0.91 ) }
    dend_1 { pt3dadd( 23.7433, 50.8762, 15.5472, 0.91 ) }
    dend_1 { pt3dadd( 24.4407, 52.6279, 15.8597, 0.68 ) }
    dend_1 { pt3dadd( 25.4639, 55.1974, 16.3182, 0.45 ) }
    dend_1 { pt3dadd( 26.5568, 57.4581, 16.7123, 0.23 ) }
    dend_1 { pt3dadd( 29.8109, 71.1695, 17.6615, 0.23 ) }
    dend_1 { pt3dadd( 31.9265, 84.8234, 20.6774, 0.23 ) }
    dend_1 { pt3dadd( 32.9047, 98.56, 23.9604, 0.23 ) }
    dend_1 { pt3dadd( 36.8016, 111.429, 28.1201, 0.23 ) }
    dend_1 { pt3dadd( 42.2621, 123.008, 33.7228, 0.23 ) }
    dend_1 { pt3dadd( 46.6028, 134.19, 40.8636, 0.23 ) }
    dend_1 { pt3dadd( 52.8614, 145.894, 45.2275, 0.23 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 85/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 20.9343, 32.7691, 0.0, 0.618445 ) }
    axon_1 { pt3dadd( 29.1424, 45.3241, 0.0, 0.618445 ) }
    axon_1 { pt3dadd( 37.3505, 57.8791, 0.0, 0.618445 ) }
    // Section: dend_54, id: dend_54, parent: dend_50 (entry count 88/100)
    dend_54 { pt3dclear() }
    dend_54 { pt3dadd( -4.31155, -44.3446, -0.143403, 0.68 ) }
    dend_54 { pt3dadd( -4.27836, -47.0594, 0.189023, 0.68 ) }
    dend_54 { pt3dadd( -4.41639, -49.8047, 0.451754, 1.13 ) }
    dend_54 { pt3dadd( -4.56018, -51.7977, 0.645443, 1.13 ) }
    dend_54 { pt3dadd( -4.76092, -54.5529, 0.937435, 1.36 ) }
    dend_54 { pt3dadd( -4.95303, -57.5858, 1.29187, 1.36 ) }
    dend_54 { pt3dadd( -5.15542, -61.4995, 1.75318, 1.36 ) }
    dend_54 { pt3dadd( -5.34545, -65.0391, 2.14702, 1.36 ) }
    dend_54 { pt3dadd( -5.50882, -67.8312, 2.44616, 1.36 ) }
    dend_54 { pt3dadd( -5.70764, -71.2704, 2.78181, 1.36 ) }
    dend_54 { pt3dadd( -5.94987, -76.0712, 3.25085, 1.59 ) }
    dend_54 { pt3dadd( -6.07144, -79.4387, 3.59985, 1.59 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_54 { pt3dadd( -6.13388, -84.1875, 4.11297, 1.36 ) }
    dend_54 { pt3dadd( -6.13778, -88.6037, 4.5761, 1.36 ) }
    dend_54 { pt3dadd( -6.16468, -91.9935, 4.86892, 1.59 ) }
    // Section: dend_51, id: dend_51, parent: dend_50 (entry count 3/100)
    dend_51 { pt3dclear() }
    dend_51 { pt3dadd( -4.31155, -44.3446, -0.143403, 1.59 ) }
    dend_51 { pt3dadd( -5.09023, -46.0305, 1.56767, 1.59 ) }
    dend_51 { pt3dadd( -6.02421, -48.0527, 3.62002, 1.81 ) }
    dend_51 { pt3dadd( -6.61209, -49.3256, 4.91183, 1.81 ) }
    // Section: dend_49, id: dend_49, parent: dend_47 (entry count 7/100)
    dend_49 { pt3dclear() }
    dend_49 { pt3dadd( -117.596, -119.438, -26.2429, 0.23 ) }
    dend_49 { pt3dadd( -118.549, -120.608, -26.9939, 0.23 ) }
    dend_49 { pt3dadd( -119.52, -121.923, -27.6938, 0.23 ) }
    dend_49 { pt3dadd( -119.92, -122.495, -27.9579, 0.91 ) }
    dend_49 { pt3dadd( -120.39, -123.183, -28.2349, 0.45 ) }
    dend_49 { pt3dadd( -120.799, -123.773, -28.45, 0.91 ) }
    dend_49 { pt3dadd( -121.379, -124.6, -28.7193, 0.23 ) }
    dend_49 { pt3dadd( -121.856, -125.318, -28.8804, 0.23 ) }
    dend_49 { pt3dadd( -122.471, -126.24, -29.0581, 0.91 ) }
    dend_49 { pt3dadd( -123.09, -127.118, -29.2407, 0.91 ) }
    dend_49 { pt3dadd( -123.594, -127.795, -29.3839, 1.59 ) }
    dend_49 { pt3dadd( -124.364, -128.827, -29.6025, 0.23 ) }
    dend_49 { pt3dadd( -124.925, -129.587, -29.7713, 0.68 ) }
    dend_49 { pt3dadd( -125.656, -130.637, -30.0087, 0.23 ) }
    dend_49 { pt3dadd( -126.168, -131.435, -30.1978, 0.91 ) }
    dend_49 { pt3dadd( -126.643, -132.225, -30.4134, 0.91 ) }
    dend_49 { pt3dadd( -127.268, -133.291, -30.7345, 0.23 ) }
    dend_49 { pt3dadd( -127.787, -134.124, -31.0132, 0.91 ) }
    dend_49 { pt3dadd( -128.363, -134.933, -31.3131, 0.23 ) }
    dend_49 { pt3dadd( -129.164, -135.844, -31.6859, 0.45 ) }
    dend_49 { pt3dadd( -130.009, -136.612, -32.0631, 0.45 ) }
    dend_49 { pt3dadd( -130.412, -136.921, -32.2374, 1.13 ) }
    dend_49 { pt3dadd( -131.378, -137.603, -32.6276, 1.81 ) }
    dend_49 { pt3dadd( -132.201, -138.233, -32.9608, 1.36 ) }
    dend_49 { pt3dadd( -133.289, -139.16, -33.4301, 0.68 ) }
    dend_49 { pt3dadd( -133.833, -139.704, -33.6724, 1.13 ) }
    dend_49 { pt3dadd( -134.779, -140.986, -34.1915, 0.68 ) }
    dend_49 { pt3dadd( -135.332, -141.879, -34.535, 1.13 ) }
    dend_49 { pt3dadd( -136.125, -143.526, -35.1334, 0.45 ) }
    dend_49 { pt3dadd( -136.469, -144.487, -35.4613, 0.45 ) }
    dend_49 { pt3dadd( -136.585, -144.967, -35.6205, 1.13 ) }
    dend_49 { pt3dadd( -136.836, -146.509, -36.1217, 0.23 ) }
    // Section: dend_48, id: dend_48, parent: dend_47 (entry count 39/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( -117.596, -119.438, -26.2429, 0.23 ) }
    dend_48 { pt3dadd( -119.594, -119.32, -26.2445, 0.23 ) }
    dend_48 { pt3dadd( -120.804, -119.274, -26.2654, 0.91 ) }
    dend_48 { pt3dadd( -122.693, -119.255, -26.3223, 0.23 ) }
    dend_48 { pt3dadd( -124.82, -119.282, -26.3651, 0.91 ) }
    dend_48 { pt3dadd( -126.492, -119.272, -26.3907, 0.23 ) }
    dend_48 { pt3dadd( -127.724, -119.253, -26.4099, 0.23 ) }
    dend_48 { pt3dadd( -131.289, -119.251, -26.5125, 0.68 ) }
    dend_48 { pt3dadd( -134.156, -119.299, -26.6077, 0.23 ) }
    dend_48 { pt3dadd( -136.148, -119.413, -26.687, 0.23 ) }
    dend_48 { pt3dadd( -138.182, -119.618, -26.7831, 0.45 ) }
    dend_48 { pt3dadd( -140.777, -119.863, -26.9071, 0.23 ) }
    dend_48 { pt3dadd( -141.99, -120.003, -26.971, 0.23 ) }
    dend_48 { pt3dadd( -143.147, -120.214, -27.0495, 0.23 ) }
    dend_48 { pt3dadd( -145.477, -120.781, -27.2621, 0.23 ) }
    dend_48 { pt3dadd( -147.281, -121.415, -27.5144, 0.23 ) }
    // Section: dend_44, id: dend_44, parent: dend_40 (entry count 55/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( -8.15034, -39.8895, -19.9694, 1.13 ) }
    dend_44 { pt3dadd( -8.02411, -40.802, -22.2293, 1.13 ) }
    dend_44 { pt3dadd( -7.86349, -41.7436, -23.6171, 1.13 ) }
    dend_44 { pt3dadd( -7.53019, -42.8546, -24.6353, 0.45 ) }
    dend_44 { pt3dadd( -7.14537, -43.7315, -25.2204, 0.68 ) }
    dend_44 { pt3dadd( -6.74533, -44.5435, -25.6734, 0.68 ) }
    dend_44 { pt3dadd( -5.7172, -46.6193, -26.6533, 1.13 ) }
    dend_44 { pt3dadd( -4.85552, -48.2401, -27.2583, 1.13 ) }
    dend_44 { pt3dadd( -3.72276, -50.3811, -28.0065, 0.91 ) }
    dend_44 { pt3dadd( -2.87428, -52.0463, -28.5983, 0.91 ) }
    dend_44 { pt3dadd( -1.70025, -54.34, -29.464, 1.59 ) }
    dend_44 { pt3dadd( -0.424851, -56.8428, -30.6127, 0.91 ) }
    dend_44 { pt3dadd( 0.627681, -58.8803, -31.778, 0.91 ) }
    dend_44 { pt3dadd( 1.47606, -60.5031, -32.9531, 0.91 ) }
    dend_44 { pt3dadd( 2.77957, -63.2089, -35.3993, 0.91 ) }
    dend_44 { pt3dadd( 3.37007, -64.6015, -36.9661, 1.36 ) }
    dend_44 { pt3dadd( 4.27744, -66.8066, -40.0983, 0.68 ) }
    dend_44 { pt3dadd( 4.66654, -67.7163, -41.8106, 0.68 ) }
    dend_44 { pt3dadd( 5.00383, -68.4577, -43.7218, 0.68 ) }
    dend_44 { pt3dadd( 5.29203, -69.0489, -46.0378, 1.36 ) }
    dend_44 { pt3dadd( 5.46883, -69.467, -48.6443, 0.68 ) }
    dend_44 { pt3dadd( 5.54613, -69.6709, -50.0964, 0.68 ) }
    dend_44 { pt3dadd( 5.64792, -70.0783, -52.186, 0.68 ) }
    dend_44 { pt3dadd( 5.72528, -70.7627, -53.9572, 0.68 ) }
    dend_44 { pt3dadd( 5.9223, -71.8608, -55.8533, 0.68 ) }
    dend_44 { pt3dadd( 6.10984, -72.6949, -56.9949, 0.68 ) }
    dend_44 { pt3dadd( 6.38114, -74.1251, -58.5034, 0.68 ) }
    dend_44 { pt3dadd( 6.72695, -76.0732, -60.3465, 0.68 ) }
    dend_44 { pt3dadd( 7.33872, -78.7935, -62.6725, 0.68 ) }
    dend_44 { pt3dadd( 8.11207, -81.4959, -64.8761, 0.68 ) }
    dend_44 { pt3dadd( 9.05271, -83.8666, -66.8348, 0.68 ) }
    dend_44 { pt3dadd( 10.4741, -86.8533, -69.3422, 0.45 ) }
    dend_44 { pt3dadd( 11.8472, -89.3716, -71.471, 0.45 ) }
    dend_44 { pt3dadd( 13.1766, -91.4958, -73.1942, 1.13 ) }
    dend_44 { pt3dadd( 14.5487, -93.4807, -74.6715, 0.45 ) }
    dend_44 { pt3dadd( 17.0457, -96.9461, -76.8466, 0.45 ) }
    dend_44 { pt3dadd( 17.9446, -98.1151, -77.4886, 1.13 ) }
    dend_44 { pt3dadd( 19.512, -100.067, -78.4374, 1.13 ) }
    dend_44 { pt3dadd( 21.3761, -102.423, -79.337, 0.23 ) }
    dend_44 { pt3dadd( 22.8418, -104.329, -79.9471, 0.91 ) }
    dend_44 { pt3dadd( 24.0953, -105.97, -80.3458, 0.91 ) }
    dend_44 { pt3dadd( 26.8889, -109.665, -81.1328, 0.23 ) }
    dend_44 { pt3dadd( 29.0694, -112.466, -81.732, 0.23 ) }
    dend_44 { pt3dadd( 30.9534, -114.836, -82.2149, 0.45 ) }
    dend_44 { pt3dadd( 31.6826, -115.715, -82.4207, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_44 { pt3dadd( 33.4327, -117.781, -82.9421, 0.23 ) }
    dend_44 { pt3dadd( 35.8157, -120.63, -83.6407, 0.23 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 2/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -8.15034, -39.8895, -19.9694, 0.91 ) }
    dend_41 { pt3dadd( -9.57866, -40.872, -20.9363, 0.91 ) }
    dend_41 { pt3dadd( -10.6667, -41.7186, -21.7336, 1.13 ) }
    dend_41 { pt3dadd( -11.9961, -42.8219, -22.7082, 1.13 ) }
    dend_41 { pt3dadd( -13.5449, -44.0913, -23.8154, 1.13 ) }
    dend_41 { pt3dadd( -13.9848, -44.4438, -24.1277, 1.13 ) }
    dend_41 { pt3dadd( -14.9066, -45.1436, -24.7766, 1.13 ) }
    dend_41 { pt3dadd( -16.2553, -46.1274, -25.7494, 1.13 ) }
    dend_41 { pt3dadd( -17.0444, -46.6512, -26.3222, 1.59 ) }
    dend_41 { pt3dadd( -18.9121, -47.798, -27.6603, 0.68 ) }
    dend_41 { pt3dadd( -20.2098, -48.5716, -28.5917, 0.68 ) }
    dend_41 { pt3dadd( -21.1417, -49.1085, -29.3011, 0.68 ) }
    dend_41 { pt3dadd( -21.825, -49.4728, -29.8379, 0.91 ) }
    dend_41 { pt3dadd( -22.4565, -49.788, -30.3328, 0.91 ) }
    dend_41 { pt3dadd( -23.0745, -50.0992, -30.8656, 0.91 ) }
    dend_41 { pt3dadd( -24.2542, -50.7214, -31.9981, 0.91 ) }
    dend_41 { pt3dadd( -24.9481, -51.1535, -32.7312, 0.91 ) }
    dend_41 { pt3dadd( -25.8001, -51.7938, -33.6965, 1.13 ) }
    dend_41 { pt3dadd( -27.3864, -53.1388, -35.5845, 0.91 ) }
    dend_41 { pt3dadd( -28.6386, -54.2615, -37.1171, 0.91 ) }
    dend_41 { pt3dadd( -29.7318, -55.21, -38.4678, 0.91 ) }
    dend_41 { pt3dadd( -30.7036, -56.0585, -39.7036, 0.68 ) }
    dend_41 { pt3dadd( -32.4591, -57.6652, -41.9737, 0.45 ) }
    dend_41 { pt3dadd( -33.2978, -58.4863, -43.0962, 0.45 ) }
    dend_41 { pt3dadd( -34.6349, -59.8489, -44.9151, 1.13 ) }
    dend_41 { pt3dadd( -36.1354, -61.3523, -46.8915, 0.23 ) }
    dend_41 { pt3dadd( -36.8027, -61.9786, -47.6958, 0.23 ) }
    dend_41 { pt3dadd( -37.6322, -62.7001, -48.6259, 0.45 ) }
    dend_41 { pt3dadd( -38.3987, -63.3478, -49.4706, 0.45 ) }
    dend_41 { pt3dadd( -39.5381, -64.3096, -50.6834, 0.45 ) }
    dend_41 { pt3dadd( -40.1155, -64.828, -51.2754, 0.45 ) }
    dend_41 { pt3dadd( -41.3509, -66.0513, -52.4546, 0.45 ) }
    dend_41 { pt3dadd( -42.7708, -67.3809, -53.7414, 0.91 ) }
    // Section: dend_38, id: dend_38, parent: dend_36 (entry count 35/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 94.6576, -41.57, -18.2338, 0.23 ) }
    dend_38 { pt3dadd( 96.4162, -42.2478, -19.3643, 0.23 ) }
    dend_38 { pt3dadd( 98.7281, -43.3552, -21.0014, 0.23 ) }
    dend_38 { pt3dadd( 100.157, -44.1689, -22.1041, 0.91 ) }
    dend_38 { pt3dadd( 102.415, -45.8175, -23.8794, 0.23 ) }
    dend_38 { pt3dadd( 103.595, -46.8353, -24.8215, 0.23 ) }
    dend_38 { pt3dadd( 104.302, -47.5622, -25.4261, 0.91 ) }
    dend_38 { pt3dadd( 105.511, -49.2471, -26.5279, 0.23 ) }
    dend_38 { pt3dadd( 106.194, -50.4551, -27.1694, 0.91 ) }
    dend_38 { pt3dadd( 107.616, -53.061, -28.3071, 0.23 ) }
    dend_38 { pt3dadd( 108.186, -54.1198, -28.6946, 0.68 ) }
    dend_38 { pt3dadd( 109.814, -56.8616, -29.5601, 0.23 ) }
    dend_38 { pt3dadd( 111.174, -58.9465, -30.1797, 0.23 ) }
    dend_38 { pt3dadd( 112.173, -60.2941, -30.5454, 0.68 ) }
    dend_38 { pt3dadd( 114.469, -63.0422, -31.2976, 0.23 ) }
    dend_38 { pt3dadd( 115.686, -64.3108, -31.6846, 0.23 ) }
    dend_38 { pt3dadd( 116.974, -65.5393, -32.0745, 1.13 ) }
    dend_38 { pt3dadd( 119.276, -67.4313, -32.7543, 0.23 ) }
    dend_38 { pt3dadd( 121.352, -68.9679, -33.4025, 0.23 ) }
    dend_38 { pt3dadd( 122.195, -69.5289, -33.696, 0.91 ) }
    dend_38 { pt3dadd( 125.078, -71.3678, -34.7388, 0.23 ) }
    dend_38 { pt3dadd( 127.965, -73.1009, -35.7939, 0.23 ) }
    dend_38 { pt3dadd( 131.699, -75.2571, -37.1903, 0.23 ) }
    dend_38 { pt3dadd( 132.976, -75.921, -37.6518, 0.68 ) }
    dend_38 { pt3dadd( 135.962, -77.4201, -38.7752, 0.23 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 60/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 94.6576, -41.57, -18.2338, 0.23 ) }
    dend_37 { pt3dadd( 98.6597, -40.6158, -18.3865, 0.23 ) }
    dend_37 { pt3dadd( 101.209, -39.976, -18.4552, 0.23 ) }
    dend_37 { pt3dadd( 104.488, -39.1343, -18.4981, 0.91 ) }
    dend_37 { pt3dadd( 106.626, -38.5959, -18.4701, 0.23 ) }
    dend_37 { pt3dadd( 110.592, -37.6105, -18.2764, 0.68 ) }
    dend_37 { pt3dadd( 114.956, -36.46, -17.9475, 0.23 ) }
    dend_37 { pt3dadd( 116.836, -35.9089, -17.7688, 0.23 ) }
    dend_37 { pt3dadd( 119.524, -34.9958, -17.4561, 0.23 ) }
    dend_37 { pt3dadd( 121.098, -34.3634, -17.1976, 0.23 ) }
    dend_37 { pt3dadd( 124.704, -32.4823, -16.4658, 0.91 ) }
    dend_37 { pt3dadd( 128.151, -30.1937, -15.6084, 0.23 ) }
    dend_37 { pt3dadd( 130.011, -28.7402, -15.1043, 0.91 ) }
    dend_37 { pt3dadd( 132.333, -26.7487, -14.5496, 0.23 ) }
    dend_37 { pt3dadd( 134.786, -24.5709, -14.0639, 0.23 ) }
    dend_37 { pt3dadd( 138.603, -21.1848, -13.4801, 0.23 ) }
    dend_37 { pt3dadd( 139.983, -20.0221, -13.3505, 0.91 ) }
    dend_37 { pt3dadd( 141.469, -18.946, -13.2799, 1.36 ) }
    dend_37 { pt3dadd( 144.548, -17.14, -13.2464, 0.23 ) }
    dend_37 { pt3dadd( 148.01, -15.6241, -13.3463, 0.23 ) }
    dend_37 { pt3dadd( 149.334, -15.1932, -13.4407, 0.91 ) }
    dend_37 { pt3dadd( 151.869, -14.4992, -13.7283, 0.23 ) }
    dend_37 { pt3dadd( 154.335, -13.7398, -14.0821, 0.23 ) }
    dend_37 { pt3dadd( 156.961, -12.63, -14.467, 0.91 ) }
    dend_37 { pt3dadd( 158.999, -11.4989, -14.6711, 0.23 ) }
    dend_37 { pt3dadd( 160.624, -10.4593, -14.818, 0.68 ) }
    dend_37 { pt3dadd( 163.017, -8.73877, -15.0054, 0.23 ) }
    dend_37 { pt3dadd( 164.044, -7.88935, -15.0563, 0.68 ) }
    dend_37 { pt3dadd( 168.302, -4.00142, -15.2829, 0.23 ) }
    dend_37 { pt3dadd( 170.721, -1.61277, -15.364, 0.91 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 90/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 0.797243, 54.8582, -36.3066, 0.23 ) }
    dend_32 { pt3dadd( 1.2612, 56.0569, -37.4431, 0.23 ) }
    dend_32 { pt3dadd( 1.73751, 57.2732, -38.6647, 0.23 ) }
    dend_32 { pt3dadd( 2.09911, 58.1406, -39.5493, 0.91 ) }
    dend_32 { pt3dadd( 2.55327, 59.1851, -40.5771, 0.23 ) }
    dend_32 { pt3dadd( 3.26388, 60.8387, -42.0939, 0.23 ) }
    dend_32 { pt3dadd( 3.41175, 61.1883, -42.3974, 1.13 ) }
    dend_32 { pt3dadd( 4.04843, 62.7491, -43.6593, 0.23 ) }
    dend_32 { pt3dadd( 4.37493, 63.6017, -44.3273, 0.23 ) }
    dend_32 { pt3dadd( 4.6507, 64.405, -44.9362, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_32 { pt3dadd( 4.90704, 65.2791, -45.6126, 0.91 ) }
    dend_32 { pt3dadd( 5.34716, 67.3271, -47.2267, 0.23 ) }
    dend_32 { pt3dadd( 5.42348, 68.1721, -47.9551, 1.36 ) }
    dend_32 { pt3dadd( 5.31025, 69.6063, -49.3095, 0.23 ) }
    dend_32 { pt3dadd( 5.15247, 70.6714, -50.3783, 0.23 ) }
    dend_32 { pt3dadd( 4.84382, 72.0377, -51.8736, 0.23 ) }
    dend_32 { pt3dadd( 4.51388, 73.0376, -53.0794, 0.68 ) }
    dend_32 { pt3dadd( 3.87494, 74.2565, -54.6831, 0.23 ) }
    dend_32 { pt3dadd( 3.12082, 75.3572, -56.2533, 0.23 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 9/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 0.797243, 54.8582, -36.3066, 0.23 ) }
    dend_31 { pt3dadd( -0.7993, 56.2196, -37.6696, 0.23 ) }
    dend_31 { pt3dadd( -1.68196, 56.9722, -38.4231, 0.68 ) }
    dend_31 { pt3dadd( -2.81926, 57.942, -39.3941, 0.68 ) }
    dend_31 { pt3dadd( -3.5212, 58.5405, -39.9933, 0.23 ) }
    dend_31 { pt3dadd( -5.03924, 59.8349, -41.2893, 0.23 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 15/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 6.36709, 51.1085, -9.47032, 0.23 ) }
    dend_29 { pt3dadd( 6.21989, 54.1327, -10.097, 0.23 ) }
    dend_29 { pt3dadd( 6.14672, 56.0695, -10.5481, 0.23 ) }
    dend_29 { pt3dadd( 6.06053, 58.7072, -11.1615, 0.91 ) }
    dend_29 { pt3dadd( 5.92252, 61.9173, -11.8836, 0.23 ) }
    dend_29 { pt3dadd( 5.84398, 64.0813, -12.3596, 0.23 ) }
    dend_29 { pt3dadd( 5.72859, 66.8132, -12.9357, 0.45 ) }
    dend_29 { pt3dadd( 5.60879, 68.9087, -13.4011, 0.23 ) }
    dend_29 { pt3dadd( 5.49835, 71.1324, -13.8688, 0.91 ) }
    dend_29 { pt3dadd( 5.39634, 73.0812, -14.264, 1.13 ) }
    dend_29 { pt3dadd( 5.14609, 76.553, -14.8845, 0.23 ) }
    dend_29 { pt3dadd( 4.97875, 78.8846, -15.2346, 0.68 ) }
    dend_29 { pt3dadd( 4.78355, 82.0087, -15.7048, 0.23 ) }
    dend_29 { pt3dadd( 4.58886, 84.3122, -16.0264, 0.68 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 29/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 6.36709, 51.1085, -9.47032, 1.13 ) }
    dend_28 { pt3dadd( 7.19583, 52.7787, -10.782, 1.13 ) }
    dend_28 { pt3dadd( 7.98818, 54.6744, -12.1563, 0.23 ) }
    dend_28 { pt3dadd( 8.48888, 56.3465, -13.1979, 0.68 ) }
    dend_28 { pt3dadd( 8.86296, 58.219, -14.3435, 1.36 ) }
    dend_28 { pt3dadd( 9.29887, 61.2475, -16.1045, 1.36 ) }
    dend_28 { pt3dadd( 9.53382, 63.0538, -17.1695, 0.23 ) }
    dend_28 { pt3dadd( 9.69526, 65.1162, -18.347, 0.91 ) }
    dend_28 { pt3dadd( 9.86839, 67.6237, -19.7991, 1.36 ) }
    dend_28 { pt3dadd( 10.2375, 70.4101, -21.6128, 0.23 ) }
    dend_28 { pt3dadd( 10.5295, 71.6966, -22.6257, 0.68 ) }
    dend_28 { pt3dadd( 11.0497, 73.34, -24.163, 0.23 ) }
    dend_28 { pt3dadd( 11.404, 74.2485, -25.1138, 0.23 ) }
    dend_28 { pt3dadd( 12.4053, 76.2014, -27.3199, 0.91 ) }
    dend_28 { pt3dadd( 13.4607, 78.0023, -29.3367, 1.36 ) }
    dend_28 { pt3dadd( 14.6182, 80.0231, -31.3212, 0.23 ) }
    dend_28 { pt3dadd( 15.4234, 81.6881, -32.7135, 0.23 ) }
    dend_28 { pt3dadd( 15.93, 83.0818, -33.5621, 1.13 ) }
    dend_28 { pt3dadd( 16.1081, 83.7297, -33.8552, 1.13 ) }
    dend_28 { pt3dadd( 16.6767, 86.2801, -34.6094, 0.23 ) }
    dend_28 { pt3dadd( 17.1741, 88.9292, -35.1313, 1.59 ) }
    dend_28 { pt3dadd( 17.5618, 90.924, -35.3982, 1.59 ) }
    dend_28 { pt3dadd( 18.1913, 93.9978, -35.8238, 0.45 ) }
    dend_28 { pt3dadd( 18.4109, 94.9809, -36.0059, 0.45 ) }
    dend_28 { pt3dadd( 19.149, 97.8412, -36.6291, 0.45 ) }
    dend_28 { pt3dadd( 19.5658, 99.1321, -36.9667, 0.45 ) }
    dend_28 { pt3dadd( 20.4311, 101.131, -37.6751, 0.45 ) }
    dend_28 { pt3dadd( 21.7555, 103.418, -38.8097, 1.13 ) }
    dend_28 { pt3dadd( 23.4916, 105.592, -40.2442, 0.23 ) }
    dend_28 { pt3dadd( 24.4569, 106.481, -41.0367, 0.23 ) }
    dend_28 { pt3dadd( 25.698, 107.257, -41.9649, 0.91 ) }
    dend_28 { pt3dadd( 28.7174, 108.617, -44.1032, 0.23 ) }
    dend_28 { pt3dadd( 30.1225, 109.066, -45.0851, 1.13 ) }
    dend_28 { pt3dadd( 32.0565, 109.463, -46.3127, 0.23 ) }
    dend_28 { pt3dadd( 35.2224, 109.976, -48.1921, 0.68 ) }
    dend_28 { pt3dadd( 38.1294, 110.447, -49.8095, 0.23 ) }
    dend_28 { pt3dadd( 39.5754, 110.72, -50.5816, 0.68 ) }
    dend_28 { pt3dadd( 41.6075, 111.175, -51.6233, 0.23 ) }
    dend_28 { pt3dadd( 44.336, 111.842, -52.9918, 0.23 ) }
    dend_28 { pt3dadd( 46.5855, 112.47, -54.1437, 0.68 ) }
    dend_28 { pt3dadd( 48.5242, 113.083, -55.1801, 0.23 ) }
    dend_28 { pt3dadd( 50.7236, 113.982, -56.6109, 0.23 ) }
    dend_28 { pt3dadd( 52.7397, 114.922, -58.0, 0.23 ) }
    dend_28 { pt3dadd( 54.1243, 115.662, -58.9748, 0.91 ) }
    dend_28 { pt3dadd( 56.2604, 116.949, -60.5586, 0.23 ) }
    dend_28 { pt3dadd( 58.4413, 118.363, -62.2419, 0.45 ) }
    dend_28 { pt3dadd( 62.0492, 120.805, -65.1127, 0.23 ) }
    dend_28 { pt3dadd( 63.3737, 121.754, -66.155, 0.23 ) }
    dend_28 { pt3dadd( 65.3057, 123.233, -67.7033, 0.23 ) }
    dend_28 { pt3dadd( 66.7382, 124.403, -68.8869, 0.23 ) }
    dend_28 { pt3dadd( 69.3027, 126.592, -70.8738, 0.23 ) }
    // Section: dend_23, id: dend_23, parent: dend_19 (entry count 80/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -1.85993, 14.6421, 1.7919, 1.13 ) }
    dend_23 { pt3dadd( -2.06326, 16.969, 1.67661, 1.13 ) }
    dend_23 { pt3dadd( -2.30165, 19.2371, 1.54114, 1.13 ) }
    dend_23 { pt3dadd( -2.50306, 21.2289, 1.41192, 0.91 ) }
    dend_23 { pt3dadd( -2.7438, 23.7302, 1.25594, 0.91 ) }
    dend_23 { pt3dadd( -2.90071, 25.4302, 1.15505, 0.91 ) }
    dend_23 { pt3dadd( -3.00971, 26.7383, 1.10593, 0.91 ) }
    dend_23 { pt3dadd( -3.107, 28.3585, 1.0839, 1.13 ) }
    dend_23 { pt3dadd( -3.19673, 30.8801, 1.11264, 0.45 ) }
    dend_23 { pt3dadd( -3.251, 33.155, 1.17582, 0.45 ) }
    dend_23 { pt3dadd( -3.26591, 34.9142, 1.23968, 1.13 ) }
    dend_23 { pt3dadd( -3.25434, 37.1027, 1.32498, 0.91 ) }
    dend_23 { pt3dadd( -3.21232, 39.1557, 1.38672, 0.91 ) }
    dend_23 { pt3dadd( -3.15921, 40.708, 1.3934, 0.45 ) }
    dend_23 { pt3dadd( -3.09187, 42.8185, 1.33352, 0.68 ) }
    dend_23 { pt3dadd( -3.05455, 44.4273, 1.22085, 0.23 ) }
    dend_23 { pt3dadd( -3.04833, 45.3511, 1.09527, 0.91 ) }
    dend_23 { pt3dadd( -3.07811, 46.8156, 0.794008, 0.23 ) }
    dend_23 { pt3dadd( -3.14083, 47.9792, 0.52476, 0.23 ) }
    dend_23 { pt3dadd( -3.232, 49.4566, 0.180802, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_23 { pt3dadd( -3.30378, 50.9717, -0.148986, 0.23 ) }
    dend_23 { pt3dadd( -3.3963, 52.5661, -0.464132, 0.91 ) }
    dend_23 { pt3dadd( -3.45574, 53.3296, -0.60377, 1.13 ) }
    dend_23 { pt3dadd( -3.62164, 55.5688, -1.01485, 0.23 ) }
    dend_23 { pt3dadd( -3.70196, 56.8533, -1.22059, 0.23 ) }
    dend_23 { pt3dadd( -3.78769, 58.3929, -1.46044, 1.13 ) }
    dend_23 { pt3dadd( -3.83728, 59.552, -1.62138, 1.13 ) }
    dend_23 { pt3dadd( -3.86176, 60.5026, -1.73509, 1.13 ) }
    dend_23 { pt3dadd( -3.88441, 63.2319, -2.07921, 0.23 ) }
    dend_23 { pt3dadd( -3.86899, 65.2161, -2.3697, 1.13 ) }
    dend_23 { pt3dadd( -3.85875, 66.2786, -2.53238, 1.36 ) }
    dend_23 { pt3dadd( -3.82713, 67.2996, -2.68147, 0.45 ) }
    dend_23 { pt3dadd( -3.74531, 68.8627, -2.89826, 1.13 ) }
    dend_23 { pt3dadd( -3.61023, 70.6713, -3.11681, 0.23 ) }
    dend_23 { pt3dadd( -3.5231, 71.9422, -3.25003, 0.23 ) }
    dend_23 { pt3dadd( -3.44896, 72.9663, -3.34731, 0.23 ) }
    dend_23 { pt3dadd( -3.31928, 74.7505, -3.44934, 0.45 ) }
    dend_23 { pt3dadd( -3.27076, 75.7814, -3.46969, 0.91 ) }
    dend_23 { pt3dadd( -3.22427, 77.17, -3.43924, 0.23 ) }
    dend_23 { pt3dadd( -3.1694, 78.7277, -3.3594, 1.59 ) }
    dend_23 { pt3dadd( -3.11877, 80.4895, -3.29197, 0.23 ) }
    dend_23 { pt3dadd( -3.07975, 82.1048, -3.26472, 0.91 ) }
    dend_23 { pt3dadd( -3.0411, 84.6442, -3.26705, 0.23 ) }
    dend_23 { pt3dadd( -2.99546, 86.1625, -3.27586, 0.23 ) }
    dend_23 { pt3dadd( -2.89122, 88.4353, -3.32955, 1.36 ) }
    dend_23 { pt3dadd( -2.73048, 90.5991, -3.40156, 0.23 ) }
    dend_23 { pt3dadd( -2.5806, 92.3531, -3.48834, 1.36 ) }
    dend_23 { pt3dadd( -2.53053, 92.849, -3.52402, 1.36 ) }
    dend_23 { pt3dadd( -2.16729, 95.6929, -3.75001, 0.23 ) }
    dend_23 { pt3dadd( -1.93574, 97.3615, -3.8869, 0.23 ) }
    dend_23 { pt3dadd( -1.76728, 98.37, -3.95047, 1.81 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 31/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -1.85993, 14.6421, 1.7919, 0.68 ) }
    dend_20 { pt3dadd( -3.45873, 12.6807, 2.35625, 0.68 ) }
    dend_20 { pt3dadd( -4.70512, 11.122, 2.78043, 0.68 ) }
    dend_20 { pt3dadd( -5.87511, 9.56222, 3.15729, 0.68 ) }
    dend_20 { pt3dadd( -6.72425, 8.36517, 3.41753, 0.68 ) }
    dend_20 { pt3dadd( -8.8885, 5.28365, 4.03602, 0.68 ) }
    dend_20 { pt3dadd( -10.3352, 3.19607, 4.4241, 0.68 ) }
    dend_20 { pt3dadd( -11.6543, 1.13026, 4.73414, 0.91 ) }
    dend_20 { pt3dadd( -13.1467, -1.33047, 5.01462, 1.13 ) }
    dend_20 { pt3dadd( -14.2195, -3.09489, 5.20093, 1.13 ) }
    dend_20 { pt3dadd( -15.4367, -5.07519, 5.41185, 1.13 ) }
    dend_20 { pt3dadd( -16.5559, -6.99957, 5.60725, 1.13 ) }
    dend_20 { pt3dadd( -17.7087, -9.13148, 5.79366, 1.13 ) }
    dend_20 { pt3dadd( -18.4697, -10.5538, 5.87892, 1.81 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 45/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 19.0418, 30.6536, 27.4742, 0.23 ) }
    dend_16 { pt3dadd( 21.3559, 33.477, 33.1618, 0.23 ) }
    dend_16 { pt3dadd( 23.8149, 36.5038, 38.6916, 0.23 ) }
    dend_16 { pt3dadd( 25.184, 39.5407, 44.577, 0.23 ) }
    dend_16 { pt3dadd( 27.5387, 42.2482, 50.2995, 0.23 ) }
    dend_16 { pt3dadd( 30.0554, 43.5755, 56.3882, 0.23 ) }
    dend_16 { pt3dadd( 33.1922, 45.5445, 62.0135, 0.23 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 52/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 19.0418, 30.6536, 27.4742, 0.23 ) }
    dend_13 { pt3dadd( 22.7559, 33.541, 30.2552, 0.23 ) }
    dend_13 { pt3dadd( 26.9783, 36.1504, 32.5074, 0.23 ) }
    dend_13 { pt3dadd( 30.6321, 39.7185, 34.5447, 0.23 ) }
    dend_13 { pt3dadd( 33.2455, 44.4354, 35.9714, 0.23 ) }
    dend_13 { pt3dadd( 35.5701, 48.9274, 38.2937, 0.23 ) }
    dend_13 { pt3dadd( 37.7664, 53.5705, 40.4664, 0.23 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 59/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 55.393, 63.1038, -8.62047, 0.23 ) }
    dend_7 { pt3dadd( 57.0996, 64.3071, -9.08926, 0.23 ) }
    dend_7 { pt3dadd( 57.9959, 64.9065, -9.31398, 0.23 ) }
    dend_7 { pt3dadd( 59.4239, 65.7948, -9.5862, 0.68 ) }
    dend_7 { pt3dadd( 60.4012, 66.3711, -9.71283, 0.23 ) }
    dend_7 { pt3dadd( 62.3512, 67.4622, -9.91312, 0.91 ) }
    dend_7 { pt3dadd( 63.3994, 67.9982, -10.0136, 0.91 ) }
    dend_7 { pt3dadd( 65.3224, 68.8264, -10.1699, 0.23 ) }
    dend_7 { pt3dadd( 66.7332, 69.3588, -10.2557, 0.23 ) }
    dend_7 { pt3dadd( 68.1727, 69.8268, -10.2941, 0.91 ) }
    dend_7 { pt3dadd( 68.9069, 70.0479, -10.3037, 0.91 ) }
    dend_7 { pt3dadd( 71.1163, 70.7181, -10.264, 0.23 ) }
    dend_7 { pt3dadd( 72.6272, 71.1789, -10.2129, 0.91 ) }
    dend_7 { pt3dadd( 74.1242, 71.6368, -10.141, 0.91 ) }
    dend_7 { pt3dadd( 75.5926, 72.12, -10.0675, 0.23 ) }
    dend_7 { pt3dadd( 76.7533, 72.5141, -9.99132, 0.91 ) }
    dend_7 { pt3dadd( 78.8807, 73.249, -9.76338, 0.23 ) }
    dend_7 { pt3dadd( 79.6486, 73.4905, -9.67165, 1.36 ) }
    dend_7 { pt3dadd( 80.3438, 73.6864, -9.60081, 1.36 ) }
    dend_7 { pt3dadd( 81.7442, 74.0159, -9.50259, 1.36 ) }
    dend_7 { pt3dadd( 83.3169, 74.2873, -9.44732, 0.23 ) }
    dend_7 { pt3dadd( 84.8792, 74.4363, -9.47364, 1.59 ) }
    dend_7 { pt3dadd( 87.0242, 74.4643, -9.61781, 0.23 ) }
    dend_7 { pt3dadd( 88.0783, 74.403, -9.72132, 0.91 ) }
    dend_7 { pt3dadd( 89.0235, 74.3186, -9.83238, 0.91 ) }
    dend_7 { pt3dadd( 90.9878, 74.0699, -10.0947, 0.23 ) }
    dend_7 { pt3dadd( 92.0253, 73.9043, -10.2558, 0.23 ) }
    dend_7 { pt3dadd( 93.8178, 73.5579, -10.5742, 0.23 ) }
    dend_7 { pt3dadd( 96.1398, 73.0241, -10.9379, 0.23 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 88/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 55.393, 63.1038, -8.62047, 0.23 ) }
    dend_6 { pt3dadd( 56.0737, 65.7503, -8.55833, 0.23 ) }
    dend_6 { pt3dadd( 56.5533, 67.5545, -8.48593, 0.23 ) }
    dend_6 { pt3dadd( 56.9384, 68.9811, -8.42171, 1.59 ) }
    dend_6 { pt3dadd( 57.7717, 71.8878, -8.29384, 0.23 ) }
    dend_6 { pt3dadd( 58.0075, 72.657, -8.26223, 1.36 ) }
    dend_6 { pt3dadd( 59.108, 75.9234, -8.14475, 0.23 ) }
    dend_6 { pt3dadd( 59.5414, 77.0955, -8.1001, 0.68 ) }
    dend_6 { pt3dadd( 60.0298, 78.2435, -8.05665, 0.91 ) }
    dend_6 { pt3dadd( 60.9545, 80.2479, -8.02606, 0.23 ) }
    dend_6 { pt3dadd( 61.7148, 81.775, -8.06512, 1.13 ) }
    dend_6 { pt3dadd( 63.068, 84.3434, -8.1926, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_6 { pt3dadd( 63.5507, 85.1891, -8.24974, 1.59 ) }
    dend_6 { pt3dadd( 64.5773, 86.8193, -8.34267, 0.23 ) }
    dend_6 { pt3dadd( 65.3842, 88.0028, -8.42869, 0.23 ) }
    dend_6 { pt3dadd( 66.3619, 89.3483, -8.49437, 1.13 ) }
    dend_6 { pt3dadd( 68.0648, 91.5845, -8.50825, 0.23 ) }
    dend_6 { pt3dadd( 69.0104, 92.8018, -8.4641, 1.13 ) }
    dend_6 { pt3dadd( 70.6386, 94.8694, -8.23003, 0.23 ) }
    dend_6 { pt3dadd( 71.5631, 95.9808, -8.01953, 1.36 ) }
    dend_6 { pt3dadd( 72.9996, 97.5175, -7.55624, 0.23 ) }
    dend_6 { pt3dadd( 73.6853, 98.159, -7.25427, 0.91 ) }
    dend_6 { pt3dadd( 74.1932, 98.5534, -6.9393, 0.91 ) }
    dend_6 { pt3dadd( 75.3079, 99.3274, -6.11077, 0.23 ) }
    dend_6 { pt3dadd( 75.8099, 99.6347, -5.69732, 0.23 ) }
    dend_6 { pt3dadd( 76.6752, 100.129, -5.03031, 0.23 ) }
    dend_6 { pt3dadd( 77.9079, 100.754, -4.18771, 0.91 ) }
    dend_6 { pt3dadd( 79.3939, 101.469, -3.25763, 0.23 ) }
    dend_6 { pt3dadd( 80.1816, 101.841, -2.79704, 1.13 ) }
    dend_6 { pt3dadd( 81.9444, 102.777, -1.88525, 0.23 ) }
    dend_6 { pt3dadd( 82.825, 103.35, -1.42125, 0.68 ) }
    // Section: dend_58, id: dend_58, parent: dend_54 (entry count 19/100)
    dend_58 { pt3dclear() }
    dend_58 { pt3dadd( -6.16468, -91.9935, 4.86892, 0.91 ) }
    dend_58 { pt3dadd( -6.26101, -94.271, 5.69069, 0.91 ) }
    dend_58 { pt3dadd( -6.30611, -96.8663, 6.43278, 1.36 ) }
    dend_58 { pt3dadd( -6.29822, -98.8205, 6.86681, 1.36 ) }
    dend_58 { pt3dadd( -6.28914, -101.065, 7.36529, 1.36 ) }
    dend_58 { pt3dadd( -6.27991, -103.352, 7.87314, 1.13 ) }
    dend_58 { pt3dadd( -6.27213, -105.279, 8.30124, 1.13 ) }
    dend_58 { pt3dadd( -6.28306, -108.59, 8.86008, 1.13 ) }
    dend_58 { pt3dadd( -6.26448, -111.556, 9.19571, 1.59 ) }
    // Section: dend_55, id: dend_55, parent: dend_54 (entry count 28/100)
    dend_55 { pt3dclear() }
    dend_55 { pt3dadd( -6.16468, -91.9935, 4.86892, 0.91 ) }
    dend_55 { pt3dadd( -7.12706, -93.8314, 4.16194, 0.91 ) }
    dend_55 { pt3dadd( -7.68892, -95.4054, 3.57804, 0.91 ) }
    dend_55 { pt3dadd( -8.06569, -96.7348, 3.07422, 1.59 ) }
    dend_55 { pt3dadd( -8.34307, -97.7743, 2.65473, 0.91 ) }
    dend_55 { pt3dadd( -8.70377, -99.1029, 2.11098, 1.36 ) }
    dend_55 { pt3dadd( -9.17619, -100.735, 1.4574, 1.36 ) }
    dend_55 { pt3dadd( -9.79727, -103.059, 0.564019, 1.13 ) }
    dend_55 { pt3dadd( -10.1661, -104.423, 0.0749083, 1.13 ) }
    dend_55 { pt3dadd( -10.4962, -105.641, -0.319119, 1.36 ) }
    dend_55 { pt3dadd( -11.1591, -108.045, -1.01016, 0.91 ) }
    dend_55 { pt3dadd( -11.6589, -109.746, -1.40406, 1.59 ) }
    dend_55 { pt3dadd( -12.001, -110.844, -1.59748, 1.59 ) }
    dend_55 { pt3dadd( -12.4429, -112.325, -1.79716, 0.91 ) }
    dend_55 { pt3dadd( -12.7592, -113.531, -1.92047, 1.36 ) }
    dend_55 { pt3dadd( -13.0952, -114.997, -2.0425, 1.36 ) }
    dend_55 { pt3dadd( -13.5207, -117.057, -2.25134, 1.13 ) }
    dend_55 { pt3dadd( -13.7524, -118.275, -2.43548, 0.91 ) }
    dend_55 { pt3dadd( -14.0031, -119.526, -2.6926, 1.36 ) }
    dend_55 { pt3dadd( -14.3205, -120.825, -3.01094, 1.36 ) }
    dend_55 { pt3dadd( -14.8208, -122.64, -3.48189, 0.91 ) }
    dend_55 { pt3dadd( -15.2587, -124.11, -3.90046, 1.36 ) }
    dend_55 { pt3dadd( -15.7753, -125.748, -4.40651, 0.91 ) }
    dend_55 { pt3dadd( -16.243, -127.112, -4.8521, 0.91 ) }
    dend_55 { pt3dadd( -16.7499, -128.502, -5.31183, 0.45 ) }
    dend_55 { pt3dadd( -17.3278, -130.073, -5.8323, 0.45 ) }
    // Section: dend_53, id: dend_53, parent: dend_51 (entry count 54/100)
    dend_53 { pt3dclear() }
    dend_53 { pt3dadd( -6.61209, -49.3256, 4.91183, 1.13 ) }
    dend_53 { pt3dadd( -5.69203, -50.5664, 6.19823, 1.13 ) }
    dend_53 { pt3dadd( -4.70696, -52.2495, 7.86531, 1.13 ) }
    dend_53 { pt3dadd( -3.92893, -53.8204, 9.22915, 1.13 ) }
    dend_53 { pt3dadd( -3.59168, -54.6005, 9.8556, 1.36 ) }
    dend_53 { pt3dadd( -2.9762, -56.2465, 11.1149, 1.36 ) }
    dend_53 { pt3dadd( -2.37643, -58.1427, 12.5355, 0.91 ) }
    dend_53 { pt3dadd( -2.2061, -59.1569, 13.2745, 1.36 ) }
    dend_53 { pt3dadd( -2.23253, -61.0058, 14.5979, 1.13 ) }
    dend_53 { pt3dadd( -2.48571, -62.3098, 15.5144, 1.13 ) }
    dend_53 { pt3dadd( -2.70506, -62.9795, 15.9909, 1.13 ) }
    dend_53 { pt3dadd( -3.04907, -63.8149, 16.5392, 1.13 ) }
    dend_53 { pt3dadd( -3.57275, -65.0307, 17.2424, 1.13 ) }
    dend_53 { pt3dadd( -4.58221, -67.5423, 18.5472, 1.59 ) }
    dend_53 { pt3dadd( -5.25188, -69.6978, 19.4249, 0.91 ) }
    dend_53 { pt3dadd( -5.46253, -70.9046, 19.7694, 0.91 ) }
    dend_53 { pt3dadd( -5.55294, -72.7101, 20.1275, 0.45 ) }
    dend_53 { pt3dadd( -5.51711, -74.0096, 20.274, 0.45 ) }
    dend_53 { pt3dadd( -5.34727, -76.6364, 20.385, 0.45 ) }
    dend_53 { pt3dadd( -4.99249, -79.5748, 20.3335, 0.45 ) }
    dend_53 { pt3dadd( -4.69877, -81.2112, 20.2825, 0.45 ) }
    dend_53 { pt3dadd( -4.43474, -82.5324, 20.2339, 0.68 ) }
    dend_53 { pt3dadd( -4.02002, -84.6415, 20.1831, 0.23 ) }
    dend_53 { pt3dadd( -3.72257, -86.4701, 20.1445, 0.23 ) }
    dend_53 { pt3dadd( -3.16509, -94.58, 23.8553, 0.23 ) }
    dend_53 { pt3dadd( -1.15369, -102.85, 26.6186, 0.23 ) }
    // Section: dend_52, id: dend_52, parent: dend_51 (entry count 80/100)
    dend_52 { pt3dclear() }
    dend_52 { pt3dadd( -6.61209, -49.3256, 4.91183, 0.91 ) }
    dend_52 { pt3dadd( -7.84011, -50.6811, 5.26312, 0.91 ) }
    dend_52 { pt3dadd( -8.56771, -51.3806, 5.41285, 0.91 ) }
    dend_52 { pt3dadd( -9.6228, -52.2089, 5.56155, 0.91 ) }
    dend_52 { pt3dadd( -10.4024, -52.7515, 5.64736, 1.13 ) }
    dend_52 { pt3dadd( -11.7646, -53.6336, 5.75475, 0.91 ) }
    dend_52 { pt3dadd( -13.8775, -54.9515, 5.84484, 0.91 ) }
    dend_52 { pt3dadd( -15.9827, -56.1836, 5.87816, 0.91 ) }
    dend_52 { pt3dadd( -18.3524, -57.4452, 5.85665, 0.45 ) }
    dend_52 { pt3dadd( -19.9749, -58.2615, 5.80684, 1.13 ) }
    dend_52 { pt3dadd( -21.0113, -58.801, 5.74864, 0.68 ) }
    dend_52 { pt3dadd( -22.5737, -59.7173, 5.64789, 0.45 ) }
    dend_52 { pt3dadd( -24.872, -61.1272, 5.49453, 0.45 ) }
    dend_52 { pt3dadd( -27.0242, -62.5572, 5.36025, 0.45 ) }
    dend_52 { pt3dadd( -27.7367, -63.102, 5.32158, 0.45 ) }
    dend_52 { pt3dadd( -29.1046, -64.2502, 5.27212, 0.45 ) }
    dend_52 { pt3dadd( -30.8284, -65.8443, 5.29318, 0.45 ) }
    dend_52 { pt3dadd( -38.0535, -72.566, 7.44465, 0.45 ) }
    dend_52 { pt3dadd( -44.7073, -79.4966, 10.6151, 0.45 ) }
    dend_52 { pt3dadd( -50.8159, -87.4248, 12.481, 0.45 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_52 { pt3dadd( -56.3418, -95.9928, 13.2675, 0.45 ) }
    // Section: dend_43, id: dend_43, parent: dend_41 (entry count 1/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( -42.7708, -67.3809, -53.7414, 0.23 ) }
    dend_43 { pt3dadd( -45.0771, -70.6133, -54.4889, 0.23 ) }
    dend_43 { pt3dadd( -46.1666, -71.9815, -54.7271, 0.91 ) }
    dend_43 { pt3dadd( -48.7935, -74.8595, -55.0591, 0.23 ) }
    dend_43 { pt3dadd( -50.458, -76.5188, -55.2116, 0.23 ) }
    dend_43 { pt3dadd( -51.2587, -77.2395, -55.2793, 0.91 ) }
    dend_43 { pt3dadd( -53.4206, -79.0452, -55.4625, 0.23 ) }
    dend_43 { pt3dadd( -55.6675, -80.6633, -55.4948, 0.45 ) }
    dend_43 { pt3dadd( -58.4124, -82.4806, -55.3283, 0.23 ) }
    dend_43 { pt3dadd( -59.9062, -83.3972, -55.16, 0.23 ) }
    dend_43 { pt3dadd( -61.8739, -84.6123, -54.8913, 0.91 ) }
    dend_43 { pt3dadd( -62.7413, -85.2009, -54.7759, 0.91 ) }
    dend_43 { pt3dadd( -66.4592, -87.9948, -54.2634, 0.23 ) }
    dend_43 { pt3dadd( -68.7665, -89.9204, -53.9519, 0.23 ) }
    dend_43 { pt3dadd( -70.3736, -91.3569, -53.7111, 0.23 ) }
    dend_43 { pt3dadd( -72.5196, -93.3415, -53.3171, 0.68 ) }
    dend_43 { pt3dadd( -74.7509, -95.4683, -52.8162, 0.23 ) }
    dend_43 { pt3dadd( -76.6787, -97.3196, -52.323, 0.23 ) }
    dend_43 { pt3dadd( -78.3529, -98.9543, -51.8823, 0.68 ) }
    dend_43 { pt3dadd( -78.7765, -99.3494, -51.7539, 0.23 ) }
    dend_43 { pt3dadd( -80.7707, -101.126, -50.9932, 1.13 ) }
    dend_43 { pt3dadd( -81.9829, -102.153, -50.4687, 1.13 ) }
    dend_43 { pt3dadd( -83.6634, -103.631, -49.651, 0.23 ) }
    dend_43 { pt3dadd( -84.9476, -104.974, -48.9759, 0.23 ) }
    dend_43 { pt3dadd( -86.2791, -106.446, -48.2533, 0.91 ) }
    dend_43 { pt3dadd( -87.4272, -107.78, -47.6255, 0.23 ) }
    dend_43 { pt3dadd( -88.4179, -109.029, -47.1019, 0.91 ) }
    dend_43 { pt3dadd( -90.9581, -112.392, -45.8207, 0.23 ) }
    dend_43 { pt3dadd( -92.5813, -114.673, -44.9768, 0.68 ) }
    // Section: dend_42, id: dend_42, parent: dend_41 (entry count 30/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -42.7708, -67.3809, -53.7414, 0.23 ) }
    dend_42 { pt3dadd( -43.3595, -67.7011, -54.807, 0.23 ) }
    dend_42 { pt3dadd( -43.7919, -68.0041, -55.861, 0.68 ) }
    dend_42 { pt3dadd( -44.261, -68.3113, -57.0394, 0.23 ) }
    dend_42 { pt3dadd( -44.7629, -68.5779, -58.3185, 0.68 ) }
    dend_42 { pt3dadd( -45.1751, -68.7123, -59.3207, 0.68 ) }
    dend_42 { pt3dadd( -45.9946, -68.8446, -61.0834, 0.23 ) }
    dend_42 { pt3dadd( -47.0432, -68.9315, -63.1433, 0.23 ) }
    dend_42 { pt3dadd( -47.3722, -68.9416, -63.6895, 0.68 ) }
    dend_42 { pt3dadd( -48.4663, -68.9297, -65.2704, 0.23 ) }
    dend_42 { pt3dadd( -49.5796, -68.9151, -66.7068, 0.91 ) }
    dend_42 { pt3dadd( -51.5669, -68.9492, -68.997, 0.23 ) }
    dend_42 { pt3dadd( -53.0501, -69.0347, -70.4673, 0.23 ) }
    dend_42 { pt3dadd( -55.7642, -69.3391, -72.8334, 0.23 ) }
    dend_42 { pt3dadd( -56.7433, -69.4963, -73.6215, 0.68 ) }
    dend_42 { pt3dadd( -58.6706, -69.9269, -74.9816, 0.23 ) }
    dend_42 { pt3dadd( -59.8135, -70.2669, -75.6743, 0.23 ) }
    dend_42 { pt3dadd( -60.8746, -70.6257, -76.1921, 0.23 ) }
    dend_42 { pt3dadd( -62.5211, -71.2164, -76.8514, 0.23 ) }
    dend_42 { pt3dadd( -63.4228, -71.5289, -77.1509, 0.23 ) }
    dend_42 { pt3dadd( -64.8052, -71.973, -77.6433, 0.23 ) }
    dend_42 { pt3dadd( -67.3633, -72.798, -78.564, 0.23 ) }
    dend_42 { pt3dadd( -69.8483, -73.587, -79.5721, 0.23 ) }
    dend_42 { pt3dadd( -71.3574, -74.0711, -80.2556, 0.23 ) }
    dend_42 { pt3dadd( -73.2307, -74.6815, -81.1698, 1.13 ) }
    dend_42 { pt3dadd( -76.5533, -75.7849, -83.0613, 0.23 ) }
    dend_42 { pt3dadd( -78.1756, -76.3419, -84.1006, 0.68 ) }
    dend_42 { pt3dadd( -80.0113, -76.9793, -85.3973, 0.23 ) }
    dend_42 { pt3dadd( -81.2109, -77.373, -86.3116, 0.23 ) }
    dend_42 { pt3dadd( -82.288, -77.6594, -87.1482, 0.23 ) }
    dend_42 { pt3dadd( -84.1961, -77.9407, -88.6258, 0.23 ) }
    dend_42 { pt3dadd( -85.9048, -78.0765, -89.9073, 0.68 ) }
    dend_42 { pt3dadd( -87.1693, -78.0872, -90.8426, 0.23 ) }
    dend_42 { pt3dadd( -89.0711, -78.0164, -92.1244, 0.23 ) }
    dend_42 { pt3dadd( -90.4727, -77.8603, -93.0129, 0.91 ) }
    dend_42 { pt3dadd( -93.4506, -77.2615, -94.8069, 0.23 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 66/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.76728, 98.37, -3.95047, 0.23 ) }
    dend_25 { pt3dadd( -2.12694, 101.717, -4.30925, 0.23 ) }
    dend_25 { pt3dadd( -2.45984, 104.641, -4.65209, 0.23 ) }
    dend_25 { pt3dadd( -2.73472, 106.819, -4.92182, 0.68 ) }
    dend_25 { pt3dadd( -3.07923, 109.48, -5.26955, 0.23 ) }
    dend_25 { pt3dadd( -3.30622, 111.267, -5.49986, 0.68 ) }
    dend_25 { pt3dadd( -3.66418, 113.997, -5.85095, 0.23 ) }
    dend_25 { pt3dadd( -3.85453, 115.527, -6.04951, 0.91 ) }
    dend_25 { pt3dadd( -4.02692, 116.737, -6.21363, 0.91 ) }
    dend_25 { pt3dadd( -4.8242, 121.472, -6.85825, 0.23 ) }
    dend_25 { pt3dadd( -5.05588, 122.904, -7.02512, 1.59 ) }
    dend_25 { pt3dadd( -5.2466, 124.122, -7.1538, 1.59 ) }
    dend_25 { pt3dadd( -5.72427, 127.822, -7.51801, 0.23 ) }
    dend_25 { pt3dadd( -5.88091, 129.363, -7.66435, 0.23 ) }
    dend_25 { pt3dadd( -6.07634, 131.784, -7.85571, 0.91 ) }
    dend_25 { pt3dadd( -6.2618, 135.11, -8.04933, 0.23 ) }
    dend_25 { pt3dadd( -6.32113, 137.027, -8.13149, 0.91 ) }
    dend_25 { pt3dadd( -6.3568, 139.492, -8.204, 0.23 ) }
    dend_25 { pt3dadd( -6.36343, 141.313, -8.23195, 0.91 ) }
    dend_25 { pt3dadd( -6.43151, 146.106, -8.29418, 0.23 ) }
    dend_25 { pt3dadd( -6.45714, 148.02, -8.30672, 0.68 ) }
    dend_25 { pt3dadd( -6.50606, 149.495, -8.3103, 0.23 ) }
    dend_25 { pt3dadd( -6.58719, 151.515, -8.28817, 1.13 ) }
    dend_25 { pt3dadd( -6.78006, 154.086, -8.21029, 0.23 ) }
    dend_25 { pt3dadd( -6.92732, 155.665, -8.18274, 0.68 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 91/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -1.76728, 98.37, -3.95047, 0.23 ) }
    dend_24 { pt3dadd( -0.817718, 99.2602, -4.92313, 0.23 ) }
    dend_24 { pt3dadd( 0.220382, 99.9542, -6.10884, 0.91 ) }
    dend_24 { pt3dadd( 1.27865, 100.381, -7.28258, 0.23 ) }
    dend_24 { pt3dadd( 1.84608, 100.44, -7.93082, 0.68 ) }
    dend_24 { pt3dadd( 2.84921, 100.261, -9.18151, 0.23 ) }
    dend_24 { pt3dadd( 4.43449, 99.4867, -11.5097, 0.23 ) }
    dend_24 { pt3dadd( 5.34011, 98.8611, -12.9062, 0.23 ) }
    dend_24 { pt3dadd( 6.21073, 98.071, -14.3318, 0.68 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_24 { pt3dadd( 7.42443, 96.7099, -16.3914, 0.23 ) }
    dend_24 { pt3dadd( 8.45682, 95.3403, -18.229, 0.91 ) }
    dend_24 { pt3dadd( 9.7879, 93.0481, -20.8694, 0.23 ) }
    // Section: dend_22, id: dend_22, parent: dend_20 (entry count 3/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -18.4697, -10.5538, 5.87892, 1.13 ) }
    dend_22 { pt3dadd( -19.7515, -12.5059, 6.15191, 1.13 ) }
    dend_22 { pt3dadd( -21.0258, -14.5689, 6.31912, 1.59 ) }
    dend_22 { pt3dadd( -22.2983, -16.7266, 6.43304, 0.91 ) }
    dend_22 { pt3dadd( -23.1064, -18.08, 6.45621, 0.91 ) }
    dend_22 { pt3dadd( -24.3784, -20.1308, 6.42878, 2.04 ) }
    dend_22 { pt3dadd( -26.1079, -22.893, 6.34822, 1.13 ) }
    dend_22 { pt3dadd( -27.2054, -24.6553, 6.24584, 1.13 ) }
    dend_22 { pt3dadd( -27.9055, -25.8048, 6.17263, 1.81 ) }
    dend_22 { pt3dadd( -29.4142, -28.2516, 6.06056, 0.91 ) }
    dend_22 { pt3dadd( -30.9407, -30.612, 6.04939, 0.91 ) }
    dend_22 { pt3dadd( -31.7127, -31.7277, 6.11762, 0.91 ) }
    dend_22 { pt3dadd( -32.5185, -32.8268, 6.26572, 1.36 ) }
    dend_22 { pt3dadd( -33.7822, -34.6028, 6.61393, 0.91 ) }
    dend_22 { pt3dadd( -35.117, -36.5291, 7.09604, 1.13 ) }
    dend_22 { pt3dadd( -36.1211, -38.0345, 7.55131, 1.36 ) }
    dend_22 { pt3dadd( -37.1763, -39.6501, 8.07302, 1.36 ) }
    dend_22 { pt3dadd( -38.2427, -41.3108, 8.57872, 1.59 ) }
    dend_22 { pt3dadd( -39.0876, -42.6627, 8.98044, 1.36 ) }
    dend_22 { pt3dadd( -40.2993, -44.6262, 9.50993, 2.04 ) }
    dend_22 { pt3dadd( -40.7779, -45.4611, 9.69481, 2.04 ) }
    dend_22 { pt3dadd( -41.859, -47.4668, 10.1573, 1.13 ) }
    dend_22 { pt3dadd( -42.6191, -48.9016, 10.505, 1.81 ) }
    dend_22 { pt3dadd( -44.2183, -51.958, 11.2837, 0.91 ) }
    dend_22 { pt3dadd( -45.0396, -53.5921, 11.6977, 2.04 ) }
    dend_22 { pt3dadd( -46.4062, -56.5228, 12.389, 1.13 ) }
    dend_22 { pt3dadd( -47.5941, -59.2354, 12.9904, 0.68 ) }
    dend_22 { pt3dadd( -48.1278, -60.5884, 13.2969, 0.68 ) }
    dend_22 { pt3dadd( -48.4825, -61.5822, 13.5467, 1.13 ) }
    dend_22 { pt3dadd( -48.7586, -62.4703, 13.7743, 1.13 ) }
    dend_22 { pt3dadd( -49.2056, -64.0245, 14.1923, 1.13 ) }
    dend_22 { pt3dadd( -49.8314, -66.3126, 14.8211, 0.45 ) }
    dend_22 { pt3dadd( -50.7205, -69.4687, 15.6066, 0.91 ) }
    dend_22 { pt3dadd( -51.1203, -70.7707, 15.9245, 1.59 ) }
    dend_22 { pt3dadd( -51.6468, -72.4103, 16.3474, 0.68 ) }
    dend_22 { pt3dadd( -52.5341, -74.9181, 17.0078, 0.68 ) }
    dend_22 { pt3dadd( -53.6827, -77.7262, 17.7586, 0.68 ) }
    dend_22 { pt3dadd( -53.936, -78.2458, 17.8921, 1.13 ) }
    dend_22 { pt3dadd( -54.8081, -79.7619, 18.2378, 1.13 ) }
    dend_22 { pt3dadd( -55.783, -81.3434, 18.5779, 0.45 ) }
    dend_22 { pt3dadd( -56.7786, -82.7764, 18.913, 0.91 ) }
    dend_22 { pt3dadd( -57.7023, -83.9161, 19.1933, 0.23 ) }
    dend_22 { pt3dadd( -58.7252, -85.0691, 19.4502, 0.23 ) }
    dend_22 { pt3dadd( -59.6722, -86.1505, 19.664, 0.23 ) }
    dend_22 { pt3dadd( -60.5169, -87.098, 19.8401, 0.23 ) }
    dend_22 { pt3dadd( -61.8391, -88.5373, 20.0684, 0.23 ) }
    dend_22 { pt3dadd( -62.7553, -89.581, 20.2305, 0.23 ) }
    dend_22 { pt3dadd( -64.7757, -92.0564, 20.5828, 0.23 ) }
    dend_22 { pt3dadd( -65.9586, -93.484, 20.7678, 0.23 ) }
    dend_22 { pt3dadd( -71.712, -102.825, 22.1217, 0.23 ) }
    dend_22 { pt3dadd( -76.9456, -112.602, 22.1622, 0.23 ) }
    dend_22 { pt3dadd( -81.3557, -122.755, 21.0622, 0.23 ) }
    dend_22 { pt3dadd( -85.3613, -133.153, 21.0868, 0.23 ) }
    dend_22 { pt3dadd( -88.8855, -143.542, 19.1248, 0.23 ) }
    dend_22 { pt3dadd( -90.9484, -154.403, 17.4099, 0.23 ) }
    dend_22 { pt3dadd( -92.1178, -165.238, 14.8902, 0.23 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 59/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -18.4697, -10.5538, 5.87892, 0.45 ) }
    dend_21 { pt3dadd( -19.0841, -12.6258, 6.16231, 0.45 ) }
    dend_21 { pt3dadd( -19.5421, -14.1611, 6.34434, 0.45 ) }
    dend_21 { pt3dadd( -20.1597, -16.1556, 6.56171, 0.68 ) }
    dend_21 { pt3dadd( -20.8287, -18.2398, 6.79304, 1.13 ) }
    dend_21 { pt3dadd( -21.6409, -20.7302, 7.06729, 0.91 ) }
    dend_21 { pt3dadd( -22.5238, -23.4688, 7.38072, 0.45 ) }
    dend_21 { pt3dadd( -23.1157, -25.2355, 7.60215, 0.45 ) }
    dend_21 { pt3dadd( -23.3973, -26.1714, 7.72942, 1.13 ) }
    dend_21 { pt3dadd( -23.7084, -27.4093, 7.89218, 0.45 ) }
    dend_21 { pt3dadd( -23.8662, -28.1913, 8.00957, 0.91 ) }
    dend_21 { pt3dadd( -24.1951, -30.3324, 8.38975, 0.23 ) }
    dend_21 { pt3dadd( -24.3293, -31.532, 8.62007, 0.68 ) }
    dend_21 { pt3dadd( -24.5733, -33.9001, 9.08279, 0.23 ) }
    dend_21 { pt3dadd( -24.7085, -35.4368, 9.36502, 1.59 ) }
    dend_21 { pt3dadd( -24.7834, -36.4764, 9.53351, 1.59 ) }
    dend_21 { pt3dadd( -24.9171, -38.6995, 9.84652, 0.23 ) }
    dend_21 { pt3dadd( -24.9758, -39.9282, 9.97393, 0.68 ) }
    dend_21 { pt3dadd( -25.0239, -41.368, 10.1078, 0.68 ) }
    dend_21 { pt3dadd( -25.0727, -43.9928, 10.3875, 0.23 ) }
    dend_21 { pt3dadd( -25.0693, -44.7803, 10.4882, 0.45 ) }
    dend_21 { pt3dadd( -25.0342, -46.0927, 10.6673, 0.45 ) }
    dend_21 { pt3dadd( -24.9254, -48.4248, 10.9784, 0.45 ) }
    dend_21 { pt3dadd( -24.8083, -50.2937, 11.2301, 0.91 ) }
    dend_21 { pt3dadd( -24.6779, -52.5265, 11.5412, 0.91 ) }
    dend_21 { pt3dadd( -24.6175, -53.9116, 11.714, 0.23 ) }
    dend_21 { pt3dadd( -24.599, -54.6813, 11.8122, 0.68 ) }
    dend_21 { pt3dadd( -24.5872, -56.2389, 12.012, 0.45 ) }
    dend_21 { pt3dadd( -24.603, -58.0705, 12.2215, 0.23 ) }
    dend_21 { pt3dadd( -24.6268, -58.9577, 12.2944, 0.91 ) }
    dend_21 { pt3dadd( -24.7202, -61.3572, 12.4542, 0.23 ) }
    dend_21 { pt3dadd( -24.7993, -62.6752, 12.5498, 0.68 ) }
    dend_21 { pt3dadd( -24.9876, -65.3899, 12.7689, 0.91 ) }
    dend_21 { pt3dadd( -25.1219, -66.9497, 12.9003, 0.91 ) }
    dend_21 { pt3dadd( -25.3217, -69.0311, 13.0747, 2.27 ) }
    dend_21 { pt3dadd( -25.4522, -70.0935, 13.183, 1.81 ) }
    dend_21 { pt3dadd( -25.8658, -72.5178, 13.4607, 0.91 ) }
    dend_21 { pt3dadd( -26.0668, -73.5409, 13.5708, 1.59 ) }
    dend_21 { pt3dadd( -26.5354, -75.6516, 13.8078, 0.45 ) }
    dend_21 { pt3dadd( -26.7106, -76.4094, 13.901, 0.45 ) }
    dend_21 { pt3dadd( -27.4697, -79.672, 14.3068, 0.91 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_21 { pt3dadd( -27.7516, -80.9653, 14.4563, 0.23 ) }
    dend_21 { pt3dadd( -27.8378, -81.4761, 14.502, 0.68 ) }
    dend_21 { pt3dadd( -27.9302, -82.2541, 14.5549, 0.68 ) }
    dend_21 { pt3dadd( -28.0029, -83.5581, 14.6042, 0.68 ) }
    dend_21 { pt3dadd( -28.0362, -85.4041, 14.6124, 1.81 ) }
    dend_21 { pt3dadd( -28.0254, -86.2221, 14.5831, 1.81 ) }
    dend_21 { pt3dadd( -28.006, -88.6432, 14.5133, 0.45 ) }
    dend_21 { pt3dadd( -28.0187, -89.9503, 14.4838, 0.45 ) }
    dend_21 { pt3dadd( -28.042, -91.5863, 14.4532, 1.36 ) }
    dend_21 { pt3dadd( -28.0539, -92.7081, 14.4199, 0.91 ) }
    dend_21 { pt3dadd( -28.045, -94.1629, 14.3553, 1.13 ) }
    dend_21 { pt3dadd( -28.0075, -96.2821, 14.2347, 0.23 ) }
    dend_21 { pt3dadd( -27.9857, -97.0568, 14.1776, 0.68 ) }
    dend_21 { pt3dadd( -27.874, -99.177, 13.9937, 0.23 ) }
    dend_21 { pt3dadd( -27.76, -100.422, 13.8724, 0.68 ) }
    dend_21 { pt3dadd( -27.6056, -101.631, 13.7468, 0.23 ) }
    dend_21 { pt3dadd( -27.4865, -102.424, 13.6613, 0.68 ) }
    dend_21 { pt3dadd( -27.0542, -105.268, 13.3532, 0.23 ) }
    dend_21 { pt3dadd( -26.827, -106.815, 13.2025, 0.23 ) }
    dend_21 { pt3dadd( -26.6031, -108.485, 13.058, 0.68 ) }
    dend_21 { pt3dadd( -26.4165, -110.041, 12.954, 0.23 ) }
    dend_21 { pt3dadd( -26.3049, -111.084, 12.8924, 0.68 ) }
    dend_21 { pt3dadd( -26.1856, -112.117, 12.8338, 0.23 ) }
    dend_21 { pt3dadd( -25.9716, -113.464, 12.7663, 0.23 ) }
    dend_21 { pt3dadd( -27.5479, -122.211, 14.7168, 0.23 ) }
    dend_21 { pt3dadd( -30.495, -130.575, 16.6034, 0.23 ) }
    dend_21 { pt3dadd( -31.9049, -139.226, 19.0074, 0.23 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 27/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 33.1922, 45.5445, 62.0135, 0.23 ) }
    dend_18 { pt3dadd( 37.475, 48.3959, 69.8084, 0.23 ) }
    dend_18 { pt3dadd( 41.7126, 50.8673, 77.7457, 0.23 ) }
    dend_18 { pt3dadd( 46.468, 54.5282, 84.9353, 0.23 ) }
    dend_18 { pt3dadd( 51.2265, 59.5585, 91.3257, 0.23 ) }
    dend_18 { pt3dadd( 57.5892, 64.6552, 96.0682, 0.23 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 33.1922, 45.5445, 62.0135, 0.23 ) }
    dend_17 { pt3dadd( 33.7861, 50.1712, 67.5992, 0.23 ) }
    dend_17 { pt3dadd( 35.0245, 54.9737, 72.9534, 0.23 ) }
    dend_17 { pt3dadd( 36.7729, 58.3066, 79.1451, 0.23 ) }
    dend_17 { pt3dadd( 38.4177, 60.7489, 85.7382, 0.23 ) }
    dend_17 { pt3dadd( 39.5921, 62.7779, 92.5567, 0.23 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 39/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 37.7664, 53.5705, 40.4664, 0.23 ) }
    dend_15 { pt3dadd( 43.0154, 61.879, 44.2518, 0.23 ) }
    dend_15 { pt3dadd( 50.1428, 67.7962, 48.9392, 0.23 ) }
    dend_15 { pt3dadd( 55.2477, 75.2398, 54.246, 0.23 ) }
    dend_15 { pt3dadd( 59.1425, 82.0506, 61.1194, 0.23 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 44/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 37.7664, 53.5705, 40.4664, 0.23 ) }
    dend_14 { pt3dadd( 45.0449, 60.3528, 45.332, 0.23 ) }
    dend_14 { pt3dadd( 52.0744, 66.8621, 50.8567, 0.23 ) }
    dend_14 { pt3dadd( 59.4804, 72.8337, 56.4422, 0.23 ) }
    dend_14 { pt3dadd( 65.3596, 81.1405, 61.0448, 0.23 ) }
    // Section: dend_60, id: dend_60, parent: dend_58 (entry count 49/100)
    dend_60 { pt3dclear() }
    dend_60 { pt3dadd( -6.26448, -111.556, 9.19571, 0.91 ) }
    dend_60 { pt3dadd( -7.02689, -113.269, 7.77463, 0.91 ) }
    dend_60 { pt3dadd( -7.64804, -114.759, 6.82201, 1.36 ) }
    dend_60 { pt3dadd( -8.70399, -117.582, 5.38404, 0.91 ) }
    dend_60 { pt3dadd( -9.32992, -119.513, 4.70543, 1.36 ) }
    dend_60 { pt3dadd( -9.56112, -120.29, 4.49244, 1.36 ) }
    dend_60 { pt3dadd( -9.89673, -121.469, 4.19795, 1.59 ) }
    dend_60 { pt3dadd( -10.6365, -124.363, 3.72152, 1.13 ) }
    dend_60 { pt3dadd( -11.0316, -126.066, 3.55218, 1.13 ) }
    dend_60 { pt3dadd( -11.7706, -129.386, 3.27426, 0.91 ) }
    dend_60 { pt3dadd( -12.3382, -131.905, 3.00233, 0.91 ) }
    dend_60 { pt3dadd( -12.9788, -134.59, 2.6582, 1.59 ) }
    dend_60 { pt3dadd( -13.6401, -137.147, 2.27481, 0.91 ) }
    dend_60 { pt3dadd( -14.3063, -139.48, 1.88195, 0.91 ) }
    dend_60 { pt3dadd( -15.1886, -142.195, 1.39986, 0.91 ) }
    dend_60 { pt3dadd( -15.8131, -143.873, 1.08806, 0.91 ) }
    dend_60 { pt3dadd( -16.6641, -145.84, 0.806329, 1.36 ) }
    dend_60 { pt3dadd( -17.509, -147.514, 0.617169, 1.59 ) }
    dend_60 { pt3dadd( -18.5829, -149.377, 0.456015, 1.13 ) }
    dend_60 { pt3dadd( -19.4289, -150.765, 0.316608, 1.13 ) }
    dend_60 { pt3dadd( -19.9907, -151.699, 0.220701, 0.91 ) }
    dend_60 { pt3dadd( -20.9804, -153.326, -0.0019311, 1.36 ) }
    dend_60 { pt3dadd( -22.2807, -155.422, -0.406802, 0.45 ) }
    dend_60 { pt3dadd( -23.3384, -157.102, -0.835574, 1.59 ) }
    dend_60 { pt3dadd( -25.0399, -159.735, -1.62259, 1.36 ) }
    dend_60 { pt3dadd( -26.0719, -161.403, -2.18387, 1.13 ) }
    dend_60 { pt3dadd( -26.6907, -162.5, -2.58415, 0.68 ) }
    dend_60 { pt3dadd( -27.6977, -164.402, -3.3054, 0.45 ) }
    dend_60 { pt3dadd( -28.6645, -166.279, -3.9835, 0.91 ) }
    dend_60 { pt3dadd( -29.3622, -167.68, -4.46979, 0.68 ) }
    dend_60 { pt3dadd( -30.0579, -169.159, -4.89118, 0.45 ) }
    dend_60 { pt3dadd( -30.8877, -171.122, -5.3201, 1.13 ) }
    dend_60 { pt3dadd( -31.5245, -172.857, -5.5931, 1.13 ) }
    dend_60 { pt3dadd( -32.0013, -174.316, -5.73378, 1.36 ) }
    dend_60 { pt3dadd( -32.5639, -176.25, -5.83657, 1.13 ) }
    dend_60 { pt3dadd( -33.0571, -178.019, -5.88927, 0.68 ) }
    dend_60 { pt3dadd( -33.7648, -180.503, -5.89761, 0.91 ) }
    dend_60 { pt3dadd( -34.4961, -183.199, -5.88984, 0.68 ) }
    dend_60 { pt3dadd( -34.9351, -185.063, -5.89371, 1.36 ) }
    dend_60 { pt3dadd( -35.2457, -186.49, -5.88461, 1.36 ) }
    dend_60 { pt3dadd( -35.5875, -188.141, -5.89665, 0.91 ) }
    dend_60 { pt3dadd( -36.1073, -190.478, -5.97665, 0.68 ) }
    dend_60 { pt3dadd( -36.8331, -193.359, -6.15248, 0.91 ) }
    dend_60 { pt3dadd( -37.5355, -195.913, -6.33886, 1.59 ) }
    dend_60 { pt3dadd( -38.2959, -198.579, -6.54617, 1.36 ) }
    dend_60 { pt3dadd( -39.051, -201.211, -6.75644, 0.91 ) }
    dend_60 { pt3dadd( -39.6709, -203.564, -6.93726, 1.13 ) }
    dend_60 { pt3dadd( -40.1121, -205.532, -7.0832, 0.23 ) }
    dend_60 { pt3dadd( -40.3734, -207.09, -7.18669, 1.13 ) }
    dend_60 { pt3dadd( -40.5503, -209.166, -7.30458, 0.68 ) }
    dend_60 { pt3dadd( -40.5685, -211.231, -7.40046, 1.36 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_60 { pt3dadd( -40.4414, -213.934, -7.46333, 0.91 ) }
    dend_60 { pt3dadd( -40.1963, -216.652, -7.51074, 0.91 ) }
    dend_60 { pt3dadd( -39.9666, -219.054, -7.564, 1.36 ) }
    dend_60 { pt3dadd( -39.7089, -222.655, -7.64749, 0.68 ) }
    dend_60 { pt3dadd( -39.6241, -224.729, -7.74008, 0.68 ) }
    dend_60 { pt3dadd( -39.5892, -226.498, -7.8528, 1.36 ) }
    dend_60 { pt3dadd( -39.6012, -227.381, -7.92526, 1.36 ) }
    dend_60 { pt3dadd( -39.7038, -229.696, -8.16305, 0.68 ) }
    dend_60 { pt3dadd( -39.8039, -231.311, -8.36159, 1.36 ) }
    dend_60 { pt3dadd( -39.988, -233.903, -8.77447, 0.23 ) }
    dend_60 { pt3dadd( -40.0829, -235.509, -9.04982, 0.23 ) }
    dend_60 { pt3dadd( -40.1774, -237.298, -9.3899, 1.13 ) }
    dend_60 { pt3dadd( -40.2312, -238.851, -9.68079, 1.36 ) }
    dend_60 { pt3dadd( -40.2456, -240.304, -9.94869, 1.81 ) }
    dend_60 { pt3dadd( -40.2326, -242.902, -10.45, 1.13 ) }
    dend_60 { pt3dadd( -40.2146, -245.216, -10.8857, 1.36 ) }
    dend_60 { pt3dadd( -40.1903, -247.465, -11.3067, 0.68 ) }
    dend_60 { pt3dadd( -40.1206, -250.397, -11.8631, 0.91 ) }
    dend_60 { pt3dadd( -40.0545, -252.495, -12.2545, 0.68 ) }
    dend_60 { pt3dadd( -39.9574, -254.739, -12.6629, 0.68 ) }
    dend_60 { pt3dadd( -39.8611, -256.211, -12.9045, 2.04 ) }
    dend_60 { pt3dadd( -39.6858, -258.249, -13.2592, 2.04 ) }
    // Section: dend_59, id: dend_59, parent: dend_58 (entry count 22/100)
    dend_59 { pt3dclear() }
    dend_59 { pt3dadd( -6.26448, -111.556, 9.19571, 0.45 ) }
    dend_59 { pt3dadd( -6.85666, -113.726, 9.45448, 0.45 ) }
    dend_59 { pt3dadd( -7.3996, -116.017, 9.70242, 0.68 ) }
    dend_59 { pt3dadd( -8.01624, -119.122, 10.0378, 1.13 ) }
    dend_59 { pt3dadd( -8.49216, -121.948, 10.346, 1.13 ) }
    dend_59 { pt3dadd( -9.00694, -125.326, 10.7548, 1.13 ) }
    dend_59 { pt3dadd( -9.47536, -128.383, 11.1371, 0.91 ) }
    dend_59 { pt3dadd( -10.0129, -131.708, 11.5156, 0.91 ) }
    dend_59 { pt3dadd( -10.4982, -134.717, 11.8329, 0.91 ) }
    dend_59 { pt3dadd( -10.9409, -137.704, 12.147, 0.23 ) }
    dend_59 { pt3dadd( -11.1145, -139.033, 12.2936, 0.23 ) }
    dend_59 { pt3dadd( -11.2886, -140.474, 12.4697, 1.36 ) }
    dend_59 { pt3dadd( -11.7786, -143.918, 12.9861, 0.91 ) }
    dend_59 { pt3dadd( -12.1963, -146.326, 13.372, 0.91 ) }
    dend_59 { pt3dadd( -12.4427, -147.76, 13.6008, 0.23 ) }
    dend_59 { pt3dadd( -12.5521, -148.465, 13.7089, 0.91 ) }
    dend_59 { pt3dadd( -12.9055, -151.022, 14.0756, 0.68 ) }
    dend_59 { pt3dadd( -13.2125, -153.583, 14.5034, 1.13 ) }
    dend_59 { pt3dadd( -13.5368, -156.214, 14.9807, 0.91 ) }
    dend_59 { pt3dadd( -13.9486, -159.154, 15.4997, 0.91 ) }
    dend_59 { pt3dadd( -14.2751, -161.126, 15.7967, 0.91 ) }
    dend_59 { pt3dadd( -14.4646, -162.234, 15.9365, 1.36 ) }
    dend_59 { pt3dadd( -14.8184, -164.309, 16.1299, 1.13 ) }
    dend_59 { pt3dadd( -15.1389, -166.122, 16.2553, 1.59 ) }
    dend_59 { pt3dadd( -15.4515, -167.846, 16.3575, 1.36 ) }
    dend_59 { pt3dadd( -15.8483, -170.208, 16.4303, 1.36 ) }
    dend_59 { pt3dadd( -16.1938, -172.55, 16.4477, 1.81 ) }
    dend_59 { pt3dadd( -16.3799, -173.969, 16.4272, 0.68 ) }
    dend_59 { pt3dadd( -16.7048, -176.414, 16.3292, 1.13 ) }
    dend_59 { pt3dadd( -17.149, -179.402, 16.2505, 0.45 ) }
    dend_59 { pt3dadd( -17.6564, -182.12, 16.2033, 0.45 ) }
    dend_59 { pt3dadd( -18.0501, -183.771, 16.1842, 1.81 ) }
    dend_59 { pt3dadd( -18.7075, -185.724, 16.1805, 1.36 ) }
    dend_59 { pt3dadd( -19.4056, -187.269, 16.2069, 0.91 ) }
    dend_59 { pt3dadd( -20.824, -189.349, 16.2082, 1.36 ) }
    dend_59 { pt3dadd( -22.1661, -190.602, 16.1679, 0.23 ) }
    dend_59 { pt3dadd( -22.8221, -190.999, 16.1299, 0.23 ) }
    dend_59 { pt3dadd( -25.0938, -191.838, 15.8319, 0.23 ) }
    dend_59 { pt3dadd( -26.1728, -192.04, 15.6252, 0.23 ) }
    dend_59 { pt3dadd( -29.0839, -192.337, 14.9599, 0.23 ) }
    dend_59 { pt3dadd( -30.06, -192.356, 14.6864, 0.68 ) }
    dend_59 { pt3dadd( -31.7529, -192.309, 14.1656, 0.23 ) }
    dend_59 { pt3dadd( -34.0936, -192.235, 13.3602, 0.23 ) }
    dend_59 { pt3dadd( -35.3977, -192.187, 12.8162, 0.23 ) }
    dend_59 { pt3dadd( -37.9722, -203.391, 14.7374, 0.23 ) }
    // Section: dend_57, id: dend_57, parent: dend_55 (entry count 67/100)
    dend_57 { pt3dclear() }
    dend_57 { pt3dadd( -17.3278, -130.073, -5.8323, 1.36 ) }
    dend_57 { pt3dadd( -18.0857, -130.617, -6.36815, 1.36 ) }
    dend_57 { pt3dadd( -20.0931, -131.449, -7.96353, 0.45 ) }
    dend_57 { pt3dadd( -20.8342, -131.596, -8.70002, 0.45 ) }
    dend_57 { pt3dadd( -21.5841, -131.665, -9.51893, 0.91 ) }
    dend_57 { pt3dadd( -22.1534, -131.684, -10.1806, 0.91 ) }
    dend_57 { pt3dadd( -23.0548, -131.665, -11.2465, 0.23 ) }
    dend_57 { pt3dadd( -24.7928, -131.36, -13.4216, 1.36 ) }
    dend_57 { pt3dadd( -26.459, -130.842, -15.602, 0.23 ) }
    dend_57 { pt3dadd( -27.0149, -130.644, -16.3463, 0.23 ) }
    dend_57 { pt3dadd( -28.0563, -130.24, -17.7614, 1.13 ) }
    dend_57 { pt3dadd( -28.6821, -129.971, -18.5981, 1.36 ) }
    dend_57 { pt3dadd( -29.3192, -129.668, -19.3828, 0.23 ) }
    dend_57 { pt3dadd( -30.0447, -129.267, -20.1239, 0.23 ) }
    dend_57 { pt3dadd( -30.6714, -128.862, -20.6598, 0.23 ) }
    dend_57 { pt3dadd( -31.3469, -128.304, -21.2238, 0.23 ) }
    dend_57 { pt3dadd( -32.2971, -127.386, -22.0618, 0.91 ) }
    dend_57 { pt3dadd( -32.8234, -126.878, -22.5257, 1.59 ) }
    dend_57 { pt3dadd( -33.8793, -125.948, -23.5165, 0.68 ) }
    dend_57 { pt3dadd( -35.542, -124.687, -25.2125, 0.23 ) }
    dend_57 { pt3dadd( -36.6349, -124.029, -26.3855, 0.68 ) }
    dend_57 { pt3dadd( -38.3103, -123.381, -28.2816, 0.23 ) }
    dend_57 { pt3dadd( -39.2698, -123.261, -29.4495, 1.13 ) }
    dend_57 { pt3dadd( -40.9948, -123.631, -31.753, 0.23 ) }
    dend_57 { pt3dadd( -42.097, -124.486, -33.4121, 0.91 ) }
    dend_57 { pt3dadd( -42.6576, -125.353, -34.3351, 0.91 ) }
    dend_57 { pt3dadd( -43.3717, -127.016, -35.5323, 0.23 ) }
    dend_57 { pt3dadd( -43.8808, -128.799, -36.4031, 0.23 ) }
    dend_57 { pt3dadd( -44.274, -130.491, -37.0366, 0.91 ) }
    dend_57 { pt3dadd( -44.6588, -132.217, -37.478, 0.23 ) }
    dend_57 { pt3dadd( -44.9556, -133.329, -37.6959, 0.23 ) }
    dend_57 { pt3dadd( -45.7313, -135.356, -38.0447, 0.23 ) }
    dend_57 { pt3dadd( -46.573, -136.879, -38.2636, 0.23 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_57 { pt3dadd( -47.2534, -137.804, -38.4277, 1.36 ) }
    dend_57 { pt3dadd( -48.0712, -138.703, -38.636, 0.23 ) }
    dend_57 { pt3dadd( -49.2057, -139.765, -38.9284, 0.91 ) }
    dend_57 { pt3dadd( -51.1902, -141.32, -39.575, 0.23 ) }
    dend_57 { pt3dadd( -51.7548, -141.728, -39.7729, 0.91 ) }
    dend_57 { pt3dadd( -53.9053, -143.176, -40.5763, 0.23 ) }
    dend_57 { pt3dadd( -54.9727, -143.894, -41.0069, 0.68 ) }
    dend_57 { pt3dadd( -55.6635, -144.334, -41.3138, 0.68 ) }
    dend_57 { pt3dadd( -57.8022, -145.592, -42.402, 0.23 ) }
    // Section: dend_56, id: dend_56, parent: dend_55 (entry count 9/100)
    dend_56 { pt3dclear() }
    dend_56 { pt3dadd( -17.3278, -130.073, -5.8323, 0.23 ) }
    dend_56 { pt3dadd( -16.959, -131.349, -5.91917, 0.23 ) }
    dend_56 { pt3dadd( -16.6849, -132.208, -6.0627, 0.23 ) }
    dend_56 { pt3dadd( -16.1783, -133.771, -6.38492, 0.23 ) }
    dend_56 { pt3dadd( -15.4715, -135.816, -6.83588, 0.91 ) }
    dend_56 { pt3dadd( -14.9996, -137.171, -7.1645, 0.23 ) }
    dend_56 { pt3dadd( -14.6152, -138.258, -7.42959, 0.45 ) }
    dend_56 { pt3dadd( -14.1741, -139.479, -7.77009, 0.23 ) }
    dend_56 { pt3dadd( -13.7955, -140.449, -8.08046, 0.68 ) }
    dend_56 { pt3dadd( -13.4562, -141.251, -8.40811, 0.23 ) }
    dend_56 { pt3dadd( -13.0742, -142.131, -8.79761, 0.23 ) }
    dend_56 { pt3dadd( -12.5151, -143.601, -9.28851, 0.23 ) }
    // Section: dend_62, id: dend_62, parent: dend_60 (entry count 21/100)
    dend_62 { pt3dclear() }
    dend_62 { pt3dadd( -39.6858, -258.249, -13.2592, 0.23 ) }
    dend_62 { pt3dadd( -40.8855, -258.713, -12.8479, 0.23 ) }
    dend_62 { pt3dadd( -41.7946, -259.116, -12.541, 0.23 ) }
    dend_62 { pt3dadd( -43.6499, -260.173, -11.9736, 0.68 ) }
    dend_62 { pt3dadd( -45.563, -261.444, -11.5832, 0.23 ) }
    dend_62 { pt3dadd( -47.1905, -262.595, -11.3655, 0.68 ) }
    dend_62 { pt3dadd( -48.0791, -263.214, -11.2833, 0.23 ) }
    dend_62 { pt3dadd( -49.6591, -264.288, -11.2135, 0.23 ) }
    dend_62 { pt3dadd( -51.9781, -265.898, -11.2637, 0.68 ) }
    dend_62 { pt3dadd( -54.2522, -267.58, -11.5046, 0.23 ) }
    dend_62 { pt3dadd( -55.944, -268.934, -11.7747, 0.91 ) }
    dend_62 { pt3dadd( -56.9332, -269.739, -11.9911, 0.91 ) }
    dend_62 { pt3dadd( -58.1554, -270.691, -12.2788, 0.23 ) }
    dend_62 { pt3dadd( -59.1383, -271.381, -12.4973, 0.23 ) }
    dend_62 { pt3dadd( -59.9714, -271.944, -12.6521, 0.23 ) }
    dend_62 { pt3dadd( -61.0688, -272.739, -12.7295, 0.23 ) }
    dend_62 { pt3dadd( -61.6165, -273.174, -12.74, 0.23 ) }
    dend_62 { pt3dadd( -62.6527, -274.088, -12.7183, 0.23 ) }
    dend_62 { pt3dadd( -63.5428, -274.886, -12.6739, 0.68 ) }
    dend_62 { pt3dadd( -65.3384, -276.467, -12.5226, 0.23 ) }
    dend_62 { pt3dadd( -67.5158, -278.371, -12.3073, 0.23 ) }
    dend_62 { pt3dadd( -68.7612, -279.472, -12.1604, 0.23 ) }
    dend_62 { pt3dadd( -69.5413, -280.197, -12.0509, 0.23 ) }
    // Section: dend_61, id: dend_61, parent: dend_60 (entry count 44/100)
    dend_61 { pt3dclear() }
    dend_61 { pt3dadd( -39.6858, -258.249, -13.2592, 0.45 ) }
    dend_61 { pt3dadd( -39.7028, -259.63, -16.4247, 0.45 ) }
    dend_61 { pt3dadd( -39.5909, -260.007, -18.9643, 0.45 ) }
    dend_61 { pt3dadd( -39.4881, -260.354, -21.2978, 0.45 ) }
    dend_61 { pt3dadd( -39.4057, -260.632, -23.1689, 0.45 ) }
    dend_61 { pt3dadd( -39.3052, -260.97, -25.4492, 0.45 ) }
    dend_61 { pt3dadd( -39.1979, -261.332, -27.8847, 1.13 ) }
    dend_61 { pt3dadd( -39.3704, -260.714, -30.6756, 0.23 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
    ModelViewParmSubset_2 = new SectionList()
    dend_46 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_50 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_54 ModelViewParmSubset_2.append()
    dend_51 ModelViewParmSubset_2.append()
    dend_49 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_58 ModelViewParmSubset_2.append()
    dend_55 ModelViewParmSubset_2.append()
    dend_53 ModelViewParmSubset_2.append()
    dend_52 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_60 ModelViewParmSubset_2.append()
    dend_59 ModelViewParmSubset_2.append()
    dend_57 ModelViewParmSubset_2.append()
    dend_56 ModelViewParmSubset_2.append()
    dend_62 ModelViewParmSubset_2.append()
    dend_61 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_46, dend_39, dend_34, dend_33, dend_26, dend_11, dend_8, dend_3, dend_0, dend_50, dend_47, dend_45, dend_40, dend_36, dend_35, dend_30, dend_27, dend_19, dend_12, dend_10, dend_9, dend_5, dend_4, dend_2, dend_1, dend_54, dend_51, dend_49, dend_48, dend_44, dend_41, dend_38, dend_37, dend_32, dend_31, dend_29, dend_28, dend_23, dend_20, dend_16, dend_13, dend_7, dend_6, dend_58, dend_55, dend_53, dend_52, dend_43, dend_42, dend_25, dend_24, dend_22, dend_21, dend_18, dend_17, dend_15, dend_14, dend_60, dend_59, dend_57, dend_56, dend_62, dend_61]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_50 ModelViewParmSubset_4.append()
    dend_47 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_54 ModelViewParmSubset_4.append()
    dend_51 ModelViewParmSubset_4.append()
    dend_49 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_38 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_58 ModelViewParmSubset_4.append()
    dend_55 ModelViewParmSubset_4.append()
    dend_53 ModelViewParmSubset_4.append()
    dend_52 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_60 ModelViewParmSubset_4.append()
    dend_59 ModelViewParmSubset_4.append()
    dend_57 ModelViewParmSubset_4.append()
    dend_56 ModelViewParmSubset_4.append()
    dend_62 ModelViewParmSubset_4.append()
    dend_61 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_34 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_33 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_8 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_3 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_0 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_47 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_45 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_35 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_30 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_10 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_9 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_4 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_2 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_1 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_54]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_54 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_44 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_41 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_38 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_37 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_28 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_23 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_16 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_7 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_6 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_55]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_55 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_53]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_53 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_52]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_52 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_43 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_42 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_53, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_53 = new SectionList()
    dend_25 OneSecGrp_SectionRef_53.append()

    // Group: {name=OneSecGrp_SectionRef_55, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_55 = new SectionList()
    dend_22 OneSecGrp_SectionRef_55.append()

    // Group: {name=OneSecGrp_SectionRef_56, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_56 = new SectionList()
    dend_21 OneSecGrp_SectionRef_56.append()

    // Group: {name=OneSecGrp_SectionRef_57, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_57 = new SectionList()
    dend_18 OneSecGrp_SectionRef_57.append()

    // Group: {name=OneSecGrp_SectionRef_59, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_59 = new SectionList()
    dend_15 OneSecGrp_SectionRef_59.append()

    // Group: {name=OneSecGrp_SectionRef_60, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_60 = new SectionList()
    dend_14 OneSecGrp_SectionRef_60.append()

    // Group: {name=OneSecGrp_SectionRef_61, groups=[], sections=[dend_60]}
    OneSecGrp_SectionRef_61 = new SectionList()
    dend_60 OneSecGrp_SectionRef_61.append()

    // Group: {name=OneSecGrp_SectionRef_62, groups=[], sections=[dend_59]}
    OneSecGrp_SectionRef_62 = new SectionList()
    dend_59 OneSecGrp_SectionRef_62.append()

    // Group: {name=OneSecGrp_SectionRef_63, groups=[], sections=[dend_57]}
    OneSecGrp_SectionRef_63 = new SectionList()
    dend_57 OneSecGrp_SectionRef_63.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_11 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_19 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_26 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_39 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_46 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_50]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_50 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_40 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_20 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_51]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_51 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_27 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_12 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_31 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_5 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_29 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_13 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_32 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_58]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_58 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_36 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_54, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_54 = new SectionList()
    dend_24 OneSecGrp_SectionRef_54.append()

    // Group: {name=OneSecGrp_SectionRef_58, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_58 = new SectionList()
    dend_17 OneSecGrp_SectionRef_58.append()

    // Group: {name=OneSecGrp_SectionRef_64, groups=[], sections=[dend_56]}
    OneSecGrp_SectionRef_64 = new SectionList()
    dend_56 OneSecGrp_SectionRef_64.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_48 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_49]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_49 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_66, groups=[], sections=[dend_61]}
    OneSecGrp_SectionRef_66 = new SectionList()
    dend_61 OneSecGrp_SectionRef_66.append()

    // Group: {name=OneSecGrp_SectionRef_65, groups=[], sections=[dend_62]}
    OneSecGrp_SectionRef_65 = new SectionList()
    dend_62 OneSecGrp_SectionRef_65.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48, dend_49, dend_50, dend_51, dend_52, dend_53, dend_54, dend_55, dend_56, dend_57, dend_58, dend_59, dend_60, dend_61, dend_62], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()
    dend_49 basal.append()
    dend_50 basal.append()
    dend_51 basal.append()
    dend_52 basal.append()
    dend_53 basal.append()
    dend_54 basal.append()
    dend_55 basal.append()
    dend_56 basal.append()
    dend_57 basal.append()
    dend_58 basal.append()
    dend_59 basal.append()
    dend_60 basal.append()
    dend_61 basal.append()
    dend_62 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_26, dend_26, dend_26, dend_26, dend_26, dend_11, dend_11, dend_11, dend_11, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_50, dend_50, dend_50, dend_50, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_47, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_19, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_54, dend_51, dend_51, dend_51, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_49, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_58, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_55, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_53, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_52, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_60, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_59, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_57, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_56, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_62, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61, dend_61]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_26 all.append()
    dend_26 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_50 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_19 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_54 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_51 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_49 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_58 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_55 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_53 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_52 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_60 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_59 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_57 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_56 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_62 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()
    dend_61 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.001511  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 8.3E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 2.29E-4  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -60.295918  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 2.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.999855  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.042115  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0012239999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.001693  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.386953  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 8.0E-6  // units: S cm-2
        e_pas_nml2 = -63.854015  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 5.5399997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.039862998  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 5.2299997E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.0054459996  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.503893  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-4  // units: S cm-2
        e_pas_nml2 = -67.1289  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 4.78E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.15074699  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009017  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 4.0E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.0032419998  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 1.74E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__bNAC_1_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__bNAC_1_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__bNAC_1_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__bNAC_1_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000049))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 3
    dend_33 nseg = 3
    dend_8 nseg = 9
    dend_3 nseg = 3
    dend_0 nseg = 3
    dend_47 nseg = 7
    dend_45 nseg = 7
    dend_35 nseg = 3
    dend_30 nseg = 3
    dend_10 nseg = 3
    dend_9 nseg = 5
    dend_4 nseg = 3
    dend_2 nseg = 5
    dend_1 nseg = 5
    dend_54 nseg = 3
    dend_44 nseg = 7
    dend_41 nseg = 3
    dend_38 nseg = 3
    dend_37 nseg = 5
    dend_28 nseg = 7
    dend_23 nseg = 5
    dend_16 nseg = 3
    dend_7 nseg = 3
    dend_6 nseg = 3
    dend_55 nseg = 3
    dend_53 nseg = 3
    dend_52 nseg = 3
    dend_43 nseg = 3
    dend_42 nseg = 3
    dend_25 nseg = 3
    dend_22 nseg = 9
    dend_21 nseg = 7
    dend_18 nseg = 3
    dend_15 nseg = 3
    dend_14 nseg = 3
    dend_60 nseg = 7
    dend_59 nseg = 5
    dend_57 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate bNAC219_L6_LBC_9918304f5f_0_0


