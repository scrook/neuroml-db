// Cell: cNAC187_L1_NGCSA_6fcd70b510_0_0
/*
{
  "id" : "cNAC187_L1_NGCSA_6fcd70b510_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "7.02394, -7.82746, 0.0, 1.94584", "6.37621, -7.15456, 0.0, 3.04096", "5.72847, -6.48166, 0.0, 4.67238", "5.08074, -5.80877, 0.0, 6.03115", "4.43301, -5.13587, 0.0, 7.4572", "3.78527, -4.46298, 0.0, 8.49895", "3.13754, -3.79008, 0.0, 9.54986", "2.4898, -3.11719, 0.0, 10.6948", "1.84207, -2.44429, 0.0, 11.6721", "1.19433, -1.7714, 0.0, 12.6312", "0.546599, -1.0985, 0.0, 13.141", "-0.101136, -0.425606, 0.0, 13.1943", "-0.74887, 0.24729, 0.0, 13.0003", "-1.3966, 0.920185, 0.0, 12.9401", "-2.04434, 1.59308, 0.0, 12.3555", "-2.69207, 2.26598, 0.0, 11.7155", "-3.33981, 2.93887, 0.0, 10.607", "-3.98754, 3.61177, 0.0, 9.5364", "-4.63528, 4.28466, 0.0, 8.02751", "-5.28301, 4.95756, 0.0, 5.9076", "-5.93075, 5.63045, 0.0, 3.12527" ]
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "6.19483, -5.47705, -14.17, 1.84", "8.20483, -9.53305, -13.84, 1.84" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000007218034
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-7.94518, 2.0207, 0.16, 0.86", "-9.19176, 2.98019, 1.08308, 0.86", "-10.2621, 3.80401, 1.87565, 0.86", "-12.305, 5.37644, 3.38841, 0.86", "-13.6171, 6.38629, 4.35995, 0.86" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000007218034
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "3.90483, 4.99445, 5.5, 1.35", "5.17274, 6.27234, 7.1509, 1.11", "6.16292, 7.24882, 8.33419, 0.74", "7.44783, 8.66698, 9.86526, 0.61", "9.36718, 11.1359, 12.0054, 0.49", "10.2834, 12.4531, 12.9441, 0.49", "11.0294, 13.5246, 13.6087, 0.49", "12.1092, 14.999, 14.3949, 0.49", "13.488, 16.9854, 15.1613, 0.49", "14.9551, 19.2582, 15.7015, 0.49", "15.8626, 20.7977, 15.88, 0.49", "16.8357, 22.5606, 16.0114, 0.49", "17.6382, 24.0335, 16.0982, 0.49", "18.122, 24.8791, 16.1143, 0.49", "19.1487, 26.3301, 16.1334, 0.49", "20.0528, 27.3953, 16.3471, 0.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000007218034
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.53482, 3.88295, -2.09, 1.23", "6.3651, 5.30106, -2.95189, 1.23", "7.16038, 6.6642, -3.81565, 1.23", "8.5598, 8.92733, -5.40518, 1.23", "9.2794, 10.0751, -6.20779, 1.23", "10.2437, 11.6898, -7.2773, 1.23", "11.7202, 14.3329, -9.07467, 1.23", "12.2912, 15.3556, -9.81936, 1.23", "13.3716, 17.2952, -11.2919, 1.47", "13.9898, 18.4294, -12.1323, 1.47", "14.6563, 19.666, -13.107, 1.47", "15.7829, 22.1668, -15.0187, 1.47" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000007218034
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "-4.25518, 5.9207, -8.91, 1.23", "-5.1725, 7.23778, -9.30169, 1.23", "-6.13401, 8.61828, -9.71224, 1.23", "-7.83537, 11.0611, -10.4387, 1.23", "-8.98419, 12.7106, -10.9292, 1.35" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000007218034
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-5.93075, 5.63045, 0.0, 1.535", "-16.3334, 16.4372, 0.0, 1.535", "-26.736, 27.2439, 0.0, 1.535" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "8.20483, -9.53305, -13.84, 0.49", "3.48188, -14.3679, -18.5563, 0.49", "1.81993, -15.8075, -19.997, 0.49", "-0.173218, -17.3584, -21.5697, 0.49", "-1.64975, -18.5289, -22.7912, 0.49", "-3.92065, -20.4721, -24.7435, 0.49", "-5.65159, -22.0453, -26.2374, 0.49", "-7.08434, -23.3484, -27.2644, 0.49", "-8.11685, -24.446, -28.0887, 0.49", "-10.2678, -27.1682, -29.9434, 0.49", "-11.8984, -29.624, -31.3475, 0.37", "-12.6447, -30.9011, -31.901, 0.37", "-13.8087, -33.1547, -32.7449, 0.37", "-15.0635, -35.8008, -33.6655, 0.37", "-15.4612, -36.6644, -33.9126, 0.37", "-16.1443, -38.0221, -34.1461, 0.37", "-17.3682, -40.2652, -34.4489, 0.37" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "8.20483, -9.53305, -13.84, 1.84", "11.3748, -10.04, -13.84, 1.84" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-13.6171, 6.38629, 4.35995, 0.49", "-12.9571, 7.13487, 6.15257, 0.49", "-12.5048, 7.67857, 7.34099, 0.49", "-11.0022, 9.53172, 11.061, 0.49", "-8.68771, 12.2941, 16.3445, 0.49", "-7.55543, 13.6455, 18.9293, 0.49", "-6.1002, 15.3823, 22.2513, 0.49", "-5.1082, 16.5448, 24.5441, 0.25", "-4.05908, 17.7147, 26.878, 0.25", "-3.38486, 18.445, 28.1087, 0.25" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-13.6171, 6.38629, 4.35995, 0.61", "-14.5471, 4.17304, 7.19995, 0.61" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-13.6171, 6.38629, 4.35995, 0.86", "-15.8051, 7.61398, 4.38784, 0.86", "-17.9345, 8.80875, 4.41498, 0.86", "-20.0836, 10.0147, 4.44237, 0.86" ],
    "parent" : "dend_9",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "15.7829, 22.1668, -15.0187, 0.49", "20.1893, 24.023, -16.9962, 0.49", "22.0751, 24.8174, -17.8425, 0.49", "23.7174, 25.5093, -18.5795, 0.49", "25.4973, 26.2591, -19.3782, 0.49" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "15.7829, 22.1668, -15.0187, 0.86", "16.0079, 24.3889, -13.3866, 0.86", "16.2041, 26.4451, -11.7702, 0.86", "16.3343, 28.5781, -9.73833, 1.11", "16.4715, 30.8245, -7.59843, 0.49", "16.577, 32.5529, -5.95199, 0.49", "16.6506, 33.758, -4.80405, 0.49", "16.7079, 35.1187, -3.27224, 0.49", "16.8481, 37.9411, 0.155664, 0.49" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "-8.98419, 12.7106, -10.9292, 0.98", "-10.4096, 13.9871, -10.7392, 0.98", "-11.6237, 15.0744, -10.5773, 0.98", "-13.592, 16.8371, -10.3148, 0.98" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "-8.98419, 12.7106, -10.9292, 0.74", "-8.47639, 15.3523, -11.2709, 0.74", "-7.95411, 18.0694, -11.6223, 0.61", "-7.53145, 20.2683, -11.9066, 0.61", "-7.32666, 21.3336, -12.0444, 0.61", "-6.67751, 24.7108, -12.4811, 0.37" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-26.736, 27.2439, 0.0, 0.37", "-37.1387, 38.0506, 0.0, 0.37", "-47.5413, 48.8573, 0.0, 0.37" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "-17.3682, -40.2652, -34.4489, 0.25", "-21.8398, -39.1532, -30.1213, 0.25", "-25.7314, -38.1569, -26.4905, 0.25", "-27.8423, -37.6211, -24.67, 0.25", "-29.6392, -37.1603, -23.203, 0.25", "-32.0547, -36.5542, -21.2886, 0.25", "-36.9671, -35.2865, -17.3772, 0.25", "-38.4496, -34.8919, -16.3004, 0.25", "-40.6532, -34.2319, -14.639, 0.25", "-42.1707, -33.7117, -13.3566, 0.25", "-44.5784, -32.8043, -11.2597, 0.25", "-46.9154, -31.8475, -9.3234, 0.25", "-48.0885, -31.3485, -8.4597, 0.25", "-49.9223, -30.544, -7.01816, 0.25", "-51.2348, -29.9244, -5.93004, 0.25", "-53.0741, -29.0272, -4.47005, 0.25", "-55.4106, -27.8476, -2.88214, 0.25", "-55.9552, -27.6122, -2.60943, 0.25" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "-17.3682, -40.2652, -34.4489, 0.37", "-18.0274, -40.6568, -34.4091, 0.37", "-19.648, -41.6604, -34.1063, 0.37", "-21.2249, -42.7178, -33.7399, 0.37", "-22.571, -43.6576, -33.4285, 0.37", "-24.7661, -45.2804, -32.9341, 0.37", "-27.326, -47.272, -32.3817, 0.37", "-29.4042, -48.991, -31.9145, 0.37", "-30.8182, -50.2327, -31.5961, 0.37", "-32.8059, -52.2255, -31.1064, 0.37", "-34.0013, -53.6052, -30.8506, 0.37", "-35.0727, -55.0929, -30.6825, 0.37", "-36.2738, -56.9201, -30.5681, 0.37", "-37.1043, -58.2238, -30.5276, 0.37", "-39.6308, -62.4102, -30.3756, 0.37", "-41.0319, -64.9745, -30.2658, 0.37", "-42.6445, -68.057, -30.1358, 0.37" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "11.3748, -10.04, -13.84, 0.86", "16.9114, -4.57706, -17.2479, 0.86", "18.7371, -2.77564, -18.3716, 0.74", "20.323, -1.21087, -19.3477, 0.74", "21.7428, 0.190082, -20.2217, 0.74", "23.9996, 2.41691, -21.6108, 0.74", "25.5606, 3.95708, -22.5716, 0.74" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-14.5471, 4.17304, 7.19995, 0.25", "-14.3593, 1.92668, 9.26564, 0.25", "-14.3742, 0.32871, 10.8313, 0.25", "-14.4691, -1.13941, 12.2588, 0.25", "-14.6077, -2.90701, 14.0175, 0.25", "-14.7448, -4.65536, 15.7571, 0.25", "-14.8178, -5.58552, 16.6826, 0.25", "-14.9934, -6.40558, 17.6369, 0.25", "-15.211, -7.39331, 18.9279, 0.25", "-15.3991, -8.48536, 20.1804, 0.25" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-14.5471, 4.17304, 7.19995, 0.49", "-16.0949, 2.26613, 7.56053, 0.49", "-17.1661, 0.91753, 7.78442, 0.37", "-18.2494, -0.299892, 8.00088, 0.37", "-18.8243, -0.921564, 8.15811, 0.37", "-19.7227, -1.83408, 8.42158, 0.37", "-20.1937, -2.29568, 8.55464, 0.37", "-20.7324, -2.8885, 8.7062, 0.37", "-21.4511, -3.70796, 8.94638, 0.37", "-22.7594, -5.0482, 9.50735, 0.37", "-23.6442, -5.89375, 9.98187, 0.37", "-24.8196, -6.93139, 10.7141, 0.37", "-25.4547, -7.51394, 11.2514, 0.37", "-26.2063, -8.25969, 12.0105, 0.37", "-27.4141, -9.61369, 13.4198, 0.37", "-28.1274, -10.5022, 14.3308, 0.37", "-29.0936, -11.891, 15.6766, 0.37", "-30.5865, -14.0841, 17.913, 0.37", "-31.1482, -14.9093, 18.7587, 0.37", "-31.6426, -15.6961, 19.5196, 0.37", "-32.2458, -16.9845, 20.5109, 0.37", "-32.6087, -18.0983, 21.1852, 0.37" ],
    "parent" : "dend_17",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-20.0836, 10.0147, 4.44237, 0.49", "-19.8563, 12.4473, 5.15349, 0.49", "-19.5971, 14.1921, 5.83207, 0.49", "-19.382, 15.5475, 6.42726, 0.49", "-19.1845, 16.9895, 7.08284, 0.49", "-18.8828, 19.5363, 8.27183, 0.49", "-18.7325, 20.7141, 8.85899, 0.49", "-18.4214, 22.6924, 9.97929, 0.49", "-18.151, 24.1691, 10.8915, 0.49", "-17.9883, 25.0949, 11.4967, 0.49", "-17.819, 26.4535, 12.3899, 0.49", "-17.5645, 29.2659, 14.1131, 0.49" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-20.0836, 10.0147, 4.44237, 0.86", "-21.7318, 9.43021, 4.44237, 0.86", "-24.132, 8.57918, 4.44237, 0.86", "-25.9421, 7.93736, 4.44237, 0.74" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "-13.592, 16.8371, -10.3148, 0.49", "-11.1739, 17.8767, -10.2648, 0.49", "-9.6083, 18.5499, -10.2324, 0.25" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "-13.592, 16.8371, -10.3148, 0.86", "-15.0926, 18.1225, -11.1749, 0.86", "-17.111, 19.8516, -12.3318, 0.86", "-18.3607, 20.9221, -13.0481, 0.86", "-20.103, 22.4146, -14.0468, 0.86", "-21.0745, 23.2468, -14.6036, 0.86", "-22.7066, 24.6449, -15.5391, 0.86" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "-55.9552, -27.6122, -2.60943, 0.12", "-56.546, -19.3807, 3.02582, 0.12", "-56.747, -16.5869, 5.24044, 0.12", "-56.8843, -14.1765, 7.64597, 0.12", "-56.9722, -12.7345, 9.30661, 0.12", "-57.0418, -11.112, 11.2968, 0.12", "-57.1508, -6.52586, 17.1984, 0.12", "-57.1827, -3.07729, 21.7226, 0.12", "-57.1742, 1.35629, 27.8447, 0.12", "-57.1545, 4.42561, 32.1263, 0.12", "-57.1073, 7.00553, 35.5641, 0.12", "-56.9834, 10.2169, 39.5638, 0.12", "-56.8152, 12.9246, 42.3703, 0.12", "-56.7393, 14.4391, 43.7092, 0.12", "-56.6464, 16.535, 45.135, 0.12", "-56.5111, 19.4219, 46.7177, 0.12", "-56.4676, 22.1618, 47.947, 0.12", "-56.4523, 24.8966, 48.8725, 0.12" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "-55.9552, -27.6122, -2.60943, 0.25", "-58.7326, -27.294, -0.584563, 0.25", "-59.9636, -27.1143, 0.400023, 0.25", "-62.9929, -26.6241, 2.76645, 0.25", "-64.9823, -26.3104, 4.38909, 0.25", "-66.9339, -25.9942, 6.01571, 0.25", "-69.1949, -25.61, 7.90331, 0.25", "-72.2164, -25.0456, 10.4857, 0.25", "-73.9138, -24.7275, 11.9228, 0.25", "-76.0266, -24.3083, 13.6472, 0.25", "-78.6362, -23.7519, 16.0336, 0.25", "-79.2373, -23.6228, 16.6233, 0.25" ],
    "parent" : "dend_36",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "25.5606, 3.95708, -22.5716, 0.37", "27.0806, 3.07958, -23.8216, 0.37" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "25.5606, 3.95708, -22.5716, 0.74", "26.2179, 5.78765, -22.4648, 0.74", "26.625, 6.92165, -22.3986, 0.74" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-25.9421, 7.93736, 4.44237, 0.49", "-27.4512, 10.3374, 4.05769, 0.49", "-28.0348, 11.2655, 3.90893, 0.49", "-28.8689, 12.5922, 3.69629, 0.49", "-29.5054, 13.6043, 3.53406, 0.49", "-30.3261, 14.9096, 3.32485, 0.49", "-31.5871, 16.9151, 3.0034, 0.49" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-25.9421, 7.93736, 4.44237, 0.74", "-28.6503, 7.55623, 4.47139, 0.74", "-29.5889, 7.32269, 4.48034, 0.74", "-31.5268, 6.58074, 4.49716, 0.74", "-32.9562, 5.88413, 4.50836, 0.61", "-34.0307, 5.32574, 4.51553, 0.61", "-35.4325, 4.61901, 4.52345, 0.61", "-36.4962, 3.94706, 4.52889, 0.61", "-37.8063, 3.02167, 4.53361, 0.61", "-38.6856, 2.33858, 4.53361, 0.61", "-40.2786, 1.15946, 4.53361, 0.61", "-41.6594, 0.142878, 4.53361, 0.61" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "-56.4523, 24.8966, 48.8725, 0.12", "-54.1388, 25.5243, 49.5471, 0.12", "-52.2602, 26.034, 50.0949, 0.12", "-49.9659, 26.6565, 50.764, 0.12", "-47.2034, 27.406, 51.5695, 0.12", "-44.9142, 28.0271, 52.2371, 0.12", "-43.1855, 28.4961, 52.7412, 0.12" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "-56.4523, 24.8966, 48.8725, 0.12", "-57.3303, 26.9173, 49.6621, 0.12", "-58.5455, 29.7138, 50.7548, 0.12", "-59.4132, 31.7105, 51.535, 0.12", "-60.3533, 33.874, 52.3804, 0.12" ],
    "parent" : "dend_40",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "-79.2373, -23.6228, 16.6233, 0.25", "-81.4658, -23.1774, 17.8914, 0.25", "-81.8406, -23.0667, 18.0786, 0.25", "-84.2485, -22.2143, 19.234, 0.25", "-86.1452, -21.4446, 20.1504, 0.25", "-87.9903, -20.6845, 21.032, 0.25", "-89.0594, -20.2479, 21.5068, 0.25", "-91.4479, -19.1601, 22.5118, 0.25", "-92.4735, -18.6765, 22.9025, 0.25", "-93.9824, -17.9436, 23.4021, 0.25", "-96.0447, -17.0037, 24.0679, 0.25", "-98.4555, -15.8926, 24.8124, 0.25", "-100.492, -14.9875, 25.4484, 0.25", "-102.655, -14.1082, 26.1108, 0.25", "-103.698, -13.6986, 26.4063, 0.25", "-107.011, -12.4185, 27.2647, 0.25" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "-79.2373, -23.6228, 16.6233, 0.25", "-79.5238, -22.8724, 15.4926, 0.25", "-80.0191, -21.6348, 13.7408, 0.25", "-80.8625, -19.6331, 11.1251, 0.25", "-82.4493, -15.9183, 6.68639, 0.25", "-82.8544, -14.9787, 5.67486, 0.25", "-83.7805, -12.8894, 3.59082, 0.25", "-84.2652, -11.849, 2.60573, 0.25", "-84.9365, -10.4141, 1.29287, 0.25", "-85.4922, -9.12745, 0.553606, 0.25", "-86.1533, -7.25751, 0.0661676, 0.25", "-86.4747, -6.13778, -0.139658, 0.25", "-86.8285, -4.40056, -0.340336, 0.25", "-87.546, -0.336981, -0.724851, 0.25", "-88.4154, 5.83614, -1.14005, 0.25", "-88.7219, 8.64858, -1.26945, 0.25", "-88.9195, 11.5607, -1.3061, 0.25", "-89.0013, 14.0902, -1.21166, 0.25" ],
    "parent" : "dend_37",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "27.0806, 3.07958, -23.8216, 0.37", "27.2006, 1.61708, -20.0716, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "27.0806, 3.07958, -23.8216, 0.37", "28.2706, 3.93758, -23.3216, 0.37" ],
    "parent" : "dend_31",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "26.625, 6.92165, -22.3986, 0.49", "29.8123, 6.7521, -24.6027, 0.49", "33.7544, 6.54238, -27.3288, 0.49", "35.9709, 6.42447, -28.8616, 0.49" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "26.625, 6.92165, -22.3986, 0.61", "24.7573, 9.97297, -22.865, 0.61", "23.6776, 11.8036, -23.1311, 0.61", "22.6966, 13.5264, -23.3624, 0.49", "21.8251, 15.1324, -23.5587, 0.49", "20.8178, 17.0547, -23.7728, 0.49", "19.5028, 19.5303, -24.0265, 0.49", "18.7433, 20.9307, -24.0902, 0.49", "17.9779, 22.3582, -24.1365, 0.37", "17.1915, 23.7982, -24.2475, 0.37", "16.4519, 25.0956, -24.4539, 0.37", "15.5837, 26.4787, -24.8466, 0.37", "14.7358, 27.6294, -25.3068, 0.37", "13.1803, 29.4067, -26.1698, 0.37", "10.9549, 31.6549, -27.4587, 0.37", "9.62238, 32.8916, -28.2731, 0.37", "7.91463, 34.4385, -29.3672, 0.37", "6.68761, 35.5475, -30.1597, 0.37", "5.62484, 36.525, -30.8268, 0.37", "5.01039, 37.0271, -31.1844, 0.37", "3.54946, 38.2235, -31.812, 0.37", "2.9199, 38.814, -32.0125, 0.37", "2.13071, 39.7216, -32.2127, 0.37", "1.47353, 40.7164, -32.4362, 0.37" ],
    "parent" : "dend_24",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-41.6594, 0.142878, 4.53361, 0.49", "-42.366, 2.43473, 4.69578, 0.49", "-42.9598, 4.36089, 4.83207, 0.49", "-43.5003, 6.11412, 4.95613, 0.49", "-43.9427, 7.54921, 5.05767, 0.49", "-44.2268, 8.47065, 5.12287, 0.49", "-44.8924, 10.6298, 5.27565, 0.49" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-41.6594, 0.142878, 4.53361, 0.49", "-42.7933, -1.44547, 4.54382, 0.49", "-43.8949, -3.10824, 4.55207, 0.49", "-44.5185, -4.07027, 4.5597, 0.49", "-45.895, -6.23321, 4.57935, 0.49", "-46.742, -7.61238, 4.5922, 0.49", "-47.9787, -9.83035, 4.61197, 0.49", "-48.6101, -11.0976, 4.62083, 0.37", "-49.3758, -12.9414, 4.63335, 0.37", "-49.709, -13.9272, 4.63949, 0.37", "-50.1732, -15.581, 4.64885, 0.37", "-50.7503, -17.8404, 4.71244, 0.37", "-51.3576, -20.2028, 4.82628, 0.37", "-51.8698, -22.2974, 4.97205, 0.37", "-52.2294, -23.8433, 5.1728, 0.37", "-52.5048, -24.9393, 5.36931, 0.37", "-53.1362, -27.2362, 5.88131, 0.37", "-53.93, -29.7731, 6.57797, 0.37", "-54.417, -31.1398, 7.01325, 0.37", "-55.3476, -33.4889, 7.81328, 0.37", "-56.0173, -35.0867, 8.23899, 0.37", "-56.7167, -36.6147, 8.52024, 0.37", "-57.1388, -37.478, 8.63826, 0.37", "-58.1742, -39.4573, 8.81144, 0.37", "-59.348, -41.5504, 8.79687, 0.37", "-61.1133, -44.5291, 8.32847, 0.37", "-61.7627, -45.6167, 8.07161, 0.37" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "35.9709, 6.42447, -28.8616, 0.49", "37.2988, 3.75888, -28.9557, 0.49", "38.6981, 1.58544, -28.9367, 0.49", "40.0923, -0.335521, -28.8458, 0.49", "41.8223, -2.48875, -28.954, 0.49", "43.913, -4.9727, -29.1374, 0.49", "45.4939, -6.78795, -29.4753, 0.37", "47.8399, -9.25738, -30.2402, 0.37", "49.4404, -10.7944, -30.8157, 0.37", "53.5696, -14.3994, -32.3546, 0.37", "56.0245, -16.2616, -33.414, 0.37", "60.6096, -19.2064, -35.5255, 0.37", "63.9928, -20.8885, -37.2338, 0.37", "67.6227, -22.0262, -39.2501, 0.37", "69.7136, -22.1629, -40.3027, 0.37", "74.0911, -21.3328, -41.9143, 0.37", "76.6944, -20.3233, -42.6274, 0.37", "81.2245, -17.8157, -43.3895, 0.37", "84.6626, -15.4866, -43.7694, 0.37", "88.5572, -12.4883, -44.1366, 0.37", "92.3771, -9.2136, -44.2203, 0.37", "95.033, -6.81489, -43.9994, 0.37", "96.8264, -5.07541, -43.75, 0.37", "99.5643, -2.27045, -43.0571, 0.37", "100.544, -1.22987, -42.7438, 0.37", "102.323, 0.74476, -42.287, 0.37", "103.757, 2.31317, -42.1089, 0.37" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "35.9709, 6.42447, -28.8616, 0.49", "37.1468, 8.13645, -29.0368, 0.49", "38.0607, 9.46701, -29.173, 0.49", "39.0688, 10.9347, -29.3232, 0.49", "40.3003, 12.7277, -29.5067, 0.49", "41.127, 13.9314, -29.6299, 0.49" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "41.127, 13.9314, -29.6299, 0.37", "40.6313, 16.0125, -29.4281, 0.37", "40.0592, 18.4142, -29.1951, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "41.127, 13.9314, -29.6299, 0.49", "42.4467, 15.2635, -29.3719, 0.49", "43.2337, 16.0579, -29.218, 0.49", "43.9645, 16.7956, -29.0751, 0.49", "46.2763, 19.1292, -28.623, 0.37" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_21", "dend_9", "dend_8", "dend_5", "dend_0", "dend_34", "dend_22", "dend_20", "dend_17", "dend_10", "dend_7", "dend_6", "dend_2", "dend_1", "dend_36", "dend_35", "dend_23", "dend_19", "dend_18", "dend_16", "dend_11", "dend_4", "dend_3", "dend_40", "dend_37", "dend_31", "dend_24", "dend_15", "dend_12", "dend_42", "dend_41", "dend_39", "dend_38", "dend_33", "dend_32", "dend_26", "dend_25", "dend_14", "dend_13", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_21", "dend_9", "dend_8", "dend_5", "dend_0", "dend_34", "dend_22", "dend_20", "dend_17", "dend_10", "dend_7", "dend_6", "dend_2", "dend_1", "dend_36", "dend_35", "dend_23", "dend_19", "dend_18", "dend_16", "dend_11", "dend_4", "dend_3", "dend_40", "dend_37", "dend_31", "dend_24", "dend_15", "dend_12", "dend_42", "dend_41", "dend_39", "dend_38", "dend_33", "dend_32", "dend_26", "dend_25", "dend_14", "dend_13", "dend_30", "dend_27", "dend_29", "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_12",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_5",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_21", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_22", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_17", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_31", "dend_24", "dend_24", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_41", "dend_41", "dend_41", "dend_41", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_33", "dend_32", "dend_26", "dend_26", "dend_26", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.0095",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.004399",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "1.0E-5",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-79.315735"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.959764",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.098908",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0034419997",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.004729",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.317363",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "9.3999995E-5",
    "erev" : "-60.216507"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "9.989999E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.092965",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.019725999",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.156376",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.297559",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "9.1E-5",
    "erev" : "-62.442795"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "8.0E-6",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.197999",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "1.50000005E-5",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "2.9999999E-6",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.001067",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cNAC_149_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cNAC187_L1_NGCSA_6fcd70b510_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_21, id: dend_21, parent: soma_0
create dend_21
public dend_21
// Section: dend_9, id: dend_9, parent: soma_0
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: soma_0
create dend_8
public dend_8
// Section: dend_5, id: dend_5, parent: soma_0
create dend_5
public dend_5
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_34, id: dend_34, parent: dend_21
create dend_34
public dend_34
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_20, id: dend_20, parent: dend_9
create dend_20
public dend_20
// Section: dend_17, id: dend_17, parent: dend_9
create dend_17
public dend_17
// Section: dend_10, id: dend_10, parent: dend_9
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_36, id: dend_36, parent: dend_34
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_19, id: dend_19, parent: dend_17
create dend_19
public dend_19
// Section: dend_18, id: dend_18, parent: dend_17
create dend_18
public dend_18
// Section: dend_16, id: dend_16, parent: dend_10
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_40, id: dend_40, parent: dend_36
create dend_40
public dend_40
// Section: dend_37, id: dend_37, parent: dend_36
create dend_37
public dend_37
// Section: dend_31, id: dend_31, parent: dend_23
create dend_31
public dend_31
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_15, id: dend_15, parent: dend_11
create dend_15
public dend_15
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_42, id: dend_42, parent: dend_40
create dend_42
public dend_42
// Section: dend_41, id: dend_41, parent: dend_40
create dend_41
public dend_41
// Section: dend_39, id: dend_39, parent: dend_37
create dend_39
public dend_39
// Section: dend_38, id: dend_38, parent: dend_37
create dend_38
public dend_38
// Section: dend_33, id: dend_33, parent: dend_31
create dend_33
public dend_33
// Section: dend_32, id: dend_32, parent: dend_31
create dend_32
public dend_32
// Section: dend_26, id: dend_26, parent: dend_24
create dend_26
public dend_26
// Section: dend_25, id: dend_25, parent: dend_24
create dend_25
public dend_25
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_21, dend_9, dend_8, dend_5, dend_0, dend_34, dend_22, dend_20, dend_17, dend_10, dend_7, dend_6, dend_2, dend_1, dend_36, dend_35, dend_23, dend_19, dend_18, dend_16, dend_11, dend_4, dend_3, dend_40, dend_37, dend_31, dend_24, dend_15, dend_12, dend_42, dend_41, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_14, dend_13, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_21, dend_9, dend_8, dend_5, dend_0, dend_34, dend_22, dend_20, dend_17, dend_10, dend_7, dend_6, dend_2, dend_1, dend_36, dend_35, dend_23, dend_19, dend_18, dend_16, dend_11, dend_4, dend_3, dend_40, dend_37, dend_31, dend_24, dend_15, dend_12, dend_42, dend_41, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_14, dend_13, dend_30, dend_27, dend_29, dend_28]}
objref ModelViewParmSubset_4
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_12
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_5
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_33
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_21, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_32, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_21(0), soma_0(0.4500000007218034)
    connect dend_9(0), soma_0(0.4500000007218034)
    connect dend_8(0), soma_0(0.4500000007218034)
    connect dend_5(0), soma_0(0.4500000007218034)
    connect dend_0(0), soma_0(0.4500000007218034)
    connect axon_0(0), soma_0(1.0)
    connect dend_34(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_20(0), dend_9(1.0)
    connect dend_17(0), dend_9(1.0)
    connect dend_10(0), dend_9(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_36(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_19(0), dend_17(1.0)
    connect dend_18(0), dend_17(1.0)
    connect dend_16(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_40(0), dend_36(1.0)
    connect dend_37(0), dend_36(1.0)
    connect dend_31(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_15(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_42(0), dend_40(1.0)
    connect dend_41(0), dend_40(1.0)
    connect dend_39(0), dend_37(1.0)
    connect dend_38(0), dend_37(1.0)
    connect dend_33(0), dend_31(1.0)
    connect dend_32(0), dend_31(1.0)
    connect dend_26(0), dend_24(1.0)
    connect dend_25(0), dend_24(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 7.02394, -7.82746, 0.0, 1.94584 ) }
    soma_0 { pt3dadd( 6.37621, -7.15456, 0.0, 3.04096 ) }
    soma_0 { pt3dadd( 5.72847, -6.48166, 0.0, 4.67238 ) }
    soma_0 { pt3dadd( 5.08074, -5.80877, 0.0, 6.03115 ) }
    soma_0 { pt3dadd( 4.43301, -5.13587, 0.0, 7.4572 ) }
    soma_0 { pt3dadd( 3.78527, -4.46298, 0.0, 8.49895 ) }
    soma_0 { pt3dadd( 3.13754, -3.79008, 0.0, 9.54986 ) }
    soma_0 { pt3dadd( 2.4898, -3.11719, 0.0, 10.6948 ) }
    soma_0 { pt3dadd( 1.84207, -2.44429, 0.0, 11.6721 ) }
    soma_0 { pt3dadd( 1.19433, -1.7714, 0.0, 12.6312 ) }
    soma_0 { pt3dadd( 0.546599, -1.0985, 0.0, 13.141 ) }
    soma_0 { pt3dadd( -0.101136, -0.425606, 0.0, 13.1943 ) }
    soma_0 { pt3dadd( -0.74887, 0.24729, 0.0, 13.0003 ) }
    soma_0 { pt3dadd( -1.3966, 0.920185, 0.0, 12.9401 ) }
    soma_0 { pt3dadd( -2.04434, 1.59308, 0.0, 12.3555 ) }
    soma_0 { pt3dadd( -2.69207, 2.26598, 0.0, 11.7155 ) }
    soma_0 { pt3dadd( -3.33981, 2.93887, 0.0, 10.607 ) }
    soma_0 { pt3dadd( -3.98754, 3.61177, 0.0, 9.5364 ) }
    soma_0 { pt3dadd( -4.63528, 4.28466, 0.0, 8.02751 ) }
    soma_0 { pt3dadd( -5.28301, 4.95756, 0.0, 5.9076 ) }
    soma_0 { pt3dadd( -5.93075, 5.63045, 0.0, 3.12527 ) }
    // Section: dend_21, id: dend_21, parent: soma_0 (entry count 21/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 6.19483, -5.47705, -14.17, 1.84 ) }
    dend_21 { pt3dadd( 8.20483, -9.53305, -13.84, 1.84 ) }
    // Section: dend_9, id: dend_9, parent: soma_0 (entry count 23/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -7.94518, 2.0207, 0.16, 0.86 ) }
    dend_9 { pt3dadd( -9.19176, 2.98019, 1.08308, 0.86 ) }
    dend_9 { pt3dadd( -10.2621, 3.80401, 1.87565, 0.86 ) }
    dend_9 { pt3dadd( -12.305, 5.37644, 3.38841, 0.86 ) }
    dend_9 { pt3dadd( -13.6171, 6.38629, 4.35995, 0.86 ) }
    // Section: dend_8, id: dend_8, parent: soma_0 (entry count 28/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 3.90483, 4.99445, 5.5, 1.35 ) }
    dend_8 { pt3dadd( 5.17274, 6.27234, 7.1509, 1.11 ) }
    dend_8 { pt3dadd( 6.16292, 7.24882, 8.33419, 0.74 ) }
    dend_8 { pt3dadd( 7.44783, 8.66698, 9.86526, 0.61 ) }
    dend_8 { pt3dadd( 9.36718, 11.1359, 12.0054, 0.49 ) }
    dend_8 { pt3dadd( 10.2834, 12.4531, 12.9441, 0.49 ) }
    dend_8 { pt3dadd( 11.0294, 13.5246, 13.6087, 0.49 ) }
    dend_8 { pt3dadd( 12.1092, 14.999, 14.3949, 0.49 ) }
    dend_8 { pt3dadd( 13.488, 16.9854, 15.1613, 0.49 ) }
    dend_8 { pt3dadd( 14.9551, 19.2582, 15.7015, 0.49 ) }
    dend_8 { pt3dadd( 15.8626, 20.7977, 15.88, 0.49 ) }
    dend_8 { pt3dadd( 16.8357, 22.5606, 16.0114, 0.49 ) }
    dend_8 { pt3dadd( 17.6382, 24.0335, 16.0982, 0.49 ) }
    dend_8 { pt3dadd( 18.122, 24.8791, 16.1143, 0.49 ) }
    dend_8 { pt3dadd( 19.1487, 26.3301, 16.1334, 0.49 ) }
    dend_8 { pt3dadd( 20.0528, 27.3953, 16.3471, 0.49 ) }
    // Section: dend_5, id: dend_5, parent: soma_0 (entry count 44/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.53482, 3.88295, -2.09, 1.23 ) }
    dend_5 { pt3dadd( 6.3651, 5.30106, -2.95189, 1.23 ) }
    dend_5 { pt3dadd( 7.16038, 6.6642, -3.81565, 1.23 ) }
    dend_5 { pt3dadd( 8.5598, 8.92733, -5.40518, 1.23 ) }
    dend_5 { pt3dadd( 9.2794, 10.0751, -6.20779, 1.23 ) }
    dend_5 { pt3dadd( 10.2437, 11.6898, -7.2773, 1.23 ) }
    dend_5 { pt3dadd( 11.7202, 14.3329, -9.07467, 1.23 ) }
    dend_5 { pt3dadd( 12.2912, 15.3556, -9.81936, 1.23 ) }
    dend_5 { pt3dadd( 13.3716, 17.2952, -11.2919, 1.47 ) }
    dend_5 { pt3dadd( 13.9898, 18.4294, -12.1323, 1.47 ) }
    dend_5 { pt3dadd( 14.6563, 19.666, -13.107, 1.47 ) }
    dend_5 { pt3dadd( 15.7829, 22.1668, -15.0187, 1.47 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 56/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( -4.25518, 5.9207, -8.91, 1.23 ) }
    dend_0 { pt3dadd( -5.1725, 7.23778, -9.30169, 1.23 ) }
    dend_0 { pt3dadd( -6.13401, 8.61828, -9.71224, 1.23 ) }
    dend_0 { pt3dadd( -7.83537, 11.0611, -10.4387, 1.23 ) }
    dend_0 { pt3dadd( -8.98419, 12.7106, -10.9292, 1.35 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 61/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -5.93075, 5.63045, 0.0, 1.535 ) }
    axon_0 { pt3dadd( -16.3334, 16.4372, 0.0, 1.535 ) }
    axon_0 { pt3dadd( -26.736, 27.2439, 0.0, 1.535 ) }
    // Section: dend_34, id: dend_34, parent: dend_21 (entry count 64/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 8.20483, -9.53305, -13.84, 0.49 ) }
    dend_34 { pt3dadd( 3.48188, -14.3679, -18.5563, 0.49 ) }
    dend_34 { pt3dadd( 1.81993, -15.8075, -19.997, 0.49 ) }
    dend_34 { pt3dadd( -0.173218, -17.3584, -21.5697, 0.49 ) }
    dend_34 { pt3dadd( -1.64975, -18.5289, -22.7912, 0.49 ) }
    dend_34 { pt3dadd( -3.92065, -20.4721, -24.7435, 0.49 ) }
    dend_34 { pt3dadd( -5.65159, -22.0453, -26.2374, 0.49 ) }
    dend_34 { pt3dadd( -7.08434, -23.3484, -27.2644, 0.49 ) }
    dend_34 { pt3dadd( -8.11685, -24.446, -28.0887, 0.49 ) }
    dend_34 { pt3dadd( -10.2678, -27.1682, -29.9434, 0.49 ) }
    dend_34 { pt3dadd( -11.8984, -29.624, -31.3475, 0.37 ) }
    dend_34 { pt3dadd( -12.6447, -30.9011, -31.901, 0.37 ) }
    dend_34 { pt3dadd( -13.8087, -33.1547, -32.7449, 0.37 ) }
    dend_34 { pt3dadd( -15.0635, -35.8008, -33.6655, 0.37 ) }
    dend_34 { pt3dadd( -15.4612, -36.6644, -33.9126, 0.37 ) }
    dend_34 { pt3dadd( -16.1443, -38.0221, -34.1461, 0.37 ) }
    dend_34 { pt3dadd( -17.3682, -40.2652, -34.4489, 0.37 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 81/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 8.20483, -9.53305, -13.84, 1.84 ) }
    dend_22 { pt3dadd( 11.3748, -10.04, -13.84, 1.84 ) }
    // Section: dend_20, id: dend_20, parent: dend_9 (entry count 83/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -13.6171, 6.38629, 4.35995, 0.49 ) }
    dend_20 { pt3dadd( -12.9571, 7.13487, 6.15257, 0.49 ) }
    dend_20 { pt3dadd( -12.5048, 7.67857, 7.34099, 0.49 ) }
    dend_20 { pt3dadd( -11.0022, 9.53172, 11.061, 0.49 ) }
    dend_20 { pt3dadd( -8.68771, 12.2941, 16.3445, 0.49 ) }
    dend_20 { pt3dadd( -7.55543, 13.6455, 18.9293, 0.49 ) }
    dend_20 { pt3dadd( -6.1002, 15.3823, 22.2513, 0.49 ) }
    dend_20 { pt3dadd( -5.1082, 16.5448, 24.5441, 0.25 ) }
    dend_20 { pt3dadd( -4.05908, 17.7147, 26.878, 0.25 ) }
    dend_20 { pt3dadd( -3.38486, 18.445, 28.1087, 0.25 ) }
    // Section: dend_17, id: dend_17, parent: dend_9 (entry count 93/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -13.6171, 6.38629, 4.35995, 0.61 ) }
    dend_17 { pt3dadd( -14.5471, 4.17304, 7.19995, 0.61 ) }
    // Section: dend_10, id: dend_10, parent: dend_9 (entry count 95/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -13.6171, 6.38629, 4.35995, 0.86 ) }
    dend_10 { pt3dadd( -15.8051, 7.61398, 4.38784, 0.86 ) }
    dend_10 { pt3dadd( -17.9345, 8.80875, 4.41498, 0.86 ) }
    dend_10 { pt3dadd( -20.0836, 10.0147, 4.44237, 0.86 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 99/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 15.7829, 22.1668, -15.0187, 0.49 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_7 { pt3dadd( 20.1893, 24.023, -16.9962, 0.49 ) }
    dend_7 { pt3dadd( 22.0751, 24.8174, -17.8425, 0.49 ) }
    dend_7 { pt3dadd( 23.7174, 25.5093, -18.5795, 0.49 ) }
    dend_7 { pt3dadd( 25.4973, 26.2591, -19.3782, 0.49 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 4/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 15.7829, 22.1668, -15.0187, 0.86 ) }
    dend_6 { pt3dadd( 16.0079, 24.3889, -13.3866, 0.86 ) }
    dend_6 { pt3dadd( 16.2041, 26.4451, -11.7702, 0.86 ) }
    dend_6 { pt3dadd( 16.3343, 28.5781, -9.73833, 1.11 ) }
    dend_6 { pt3dadd( 16.4715, 30.8245, -7.59843, 0.49 ) }
    dend_6 { pt3dadd( 16.577, 32.5529, -5.95199, 0.49 ) }
    dend_6 { pt3dadd( 16.6506, 33.758, -4.80405, 0.49 ) }
    dend_6 { pt3dadd( 16.7079, 35.1187, -3.27224, 0.49 ) }
    dend_6 { pt3dadd( 16.8481, 37.9411, 0.155664, 0.49 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 13/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( -8.98419, 12.7106, -10.9292, 0.98 ) }
    dend_2 { pt3dadd( -10.4096, 13.9871, -10.7392, 0.98 ) }
    dend_2 { pt3dadd( -11.6237, 15.0744, -10.5773, 0.98 ) }
    dend_2 { pt3dadd( -13.592, 16.8371, -10.3148, 0.98 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 17/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( -8.98419, 12.7106, -10.9292, 0.74 ) }
    dend_1 { pt3dadd( -8.47639, 15.3523, -11.2709, 0.74 ) }
    dend_1 { pt3dadd( -7.95411, 18.0694, -11.6223, 0.61 ) }
    dend_1 { pt3dadd( -7.53145, 20.2683, -11.9066, 0.61 ) }
    dend_1 { pt3dadd( -7.32666, 21.3336, -12.0444, 0.61 ) }
    dend_1 { pt3dadd( -6.67751, 24.7108, -12.4811, 0.37 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 23/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -26.736, 27.2439, 0.0, 0.37 ) }
    axon_1 { pt3dadd( -37.1387, 38.0506, 0.0, 0.37 ) }
    axon_1 { pt3dadd( -47.5413, 48.8573, 0.0, 0.37 ) }
    // Section: dend_36, id: dend_36, parent: dend_34 (entry count 26/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( -17.3682, -40.2652, -34.4489, 0.25 ) }
    dend_36 { pt3dadd( -21.8398, -39.1532, -30.1213, 0.25 ) }
    dend_36 { pt3dadd( -25.7314, -38.1569, -26.4905, 0.25 ) }
    dend_36 { pt3dadd( -27.8423, -37.6211, -24.67, 0.25 ) }
    dend_36 { pt3dadd( -29.6392, -37.1603, -23.203, 0.25 ) }
    dend_36 { pt3dadd( -32.0547, -36.5542, -21.2886, 0.25 ) }
    dend_36 { pt3dadd( -36.9671, -35.2865, -17.3772, 0.25 ) }
    dend_36 { pt3dadd( -38.4496, -34.8919, -16.3004, 0.25 ) }
    dend_36 { pt3dadd( -40.6532, -34.2319, -14.639, 0.25 ) }
    dend_36 { pt3dadd( -42.1707, -33.7117, -13.3566, 0.25 ) }
    dend_36 { pt3dadd( -44.5784, -32.8043, -11.2597, 0.25 ) }
    dend_36 { pt3dadd( -46.9154, -31.8475, -9.3234, 0.25 ) }
    dend_36 { pt3dadd( -48.0885, -31.3485, -8.4597, 0.25 ) }
    dend_36 { pt3dadd( -49.9223, -30.544, -7.01816, 0.25 ) }
    dend_36 { pt3dadd( -51.2348, -29.9244, -5.93004, 0.25 ) }
    dend_36 { pt3dadd( -53.0741, -29.0272, -4.47005, 0.25 ) }
    dend_36 { pt3dadd( -55.4106, -27.8476, -2.88214, 0.25 ) }
    dend_36 { pt3dadd( -55.9552, -27.6122, -2.60943, 0.25 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 44/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( -17.3682, -40.2652, -34.4489, 0.37 ) }
    dend_35 { pt3dadd( -18.0274, -40.6568, -34.4091, 0.37 ) }
    dend_35 { pt3dadd( -19.648, -41.6604, -34.1063, 0.37 ) }
    dend_35 { pt3dadd( -21.2249, -42.7178, -33.7399, 0.37 ) }
    dend_35 { pt3dadd( -22.571, -43.6576, -33.4285, 0.37 ) }
    dend_35 { pt3dadd( -24.7661, -45.2804, -32.9341, 0.37 ) }
    dend_35 { pt3dadd( -27.326, -47.272, -32.3817, 0.37 ) }
    dend_35 { pt3dadd( -29.4042, -48.991, -31.9145, 0.37 ) }
    dend_35 { pt3dadd( -30.8182, -50.2327, -31.5961, 0.37 ) }
    dend_35 { pt3dadd( -32.8059, -52.2255, -31.1064, 0.37 ) }
    dend_35 { pt3dadd( -34.0013, -53.6052, -30.8506, 0.37 ) }
    dend_35 { pt3dadd( -35.0727, -55.0929, -30.6825, 0.37 ) }
    dend_35 { pt3dadd( -36.2738, -56.9201, -30.5681, 0.37 ) }
    dend_35 { pt3dadd( -37.1043, -58.2238, -30.5276, 0.37 ) }
    dend_35 { pt3dadd( -39.6308, -62.4102, -30.3756, 0.37 ) }
    dend_35 { pt3dadd( -41.0319, -64.9745, -30.2658, 0.37 ) }
    dend_35 { pt3dadd( -42.6445, -68.057, -30.1358, 0.37 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 61/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 11.3748, -10.04, -13.84, 0.86 ) }
    dend_23 { pt3dadd( 16.9114, -4.57706, -17.2479, 0.86 ) }
    dend_23 { pt3dadd( 18.7371, -2.77564, -18.3716, 0.74 ) }
    dend_23 { pt3dadd( 20.323, -1.21087, -19.3477, 0.74 ) }
    dend_23 { pt3dadd( 21.7428, 0.190082, -20.2217, 0.74 ) }
    dend_23 { pt3dadd( 23.9996, 2.41691, -21.6108, 0.74 ) }
    dend_23 { pt3dadd( 25.5606, 3.95708, -22.5716, 0.74 ) }
    // Section: dend_19, id: dend_19, parent: dend_17 (entry count 68/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -14.5471, 4.17304, 7.19995, 0.25 ) }
    dend_19 { pt3dadd( -14.3593, 1.92668, 9.26564, 0.25 ) }
    dend_19 { pt3dadd( -14.3742, 0.32871, 10.8313, 0.25 ) }
    dend_19 { pt3dadd( -14.4691, -1.13941, 12.2588, 0.25 ) }
    dend_19 { pt3dadd( -14.6077, -2.90701, 14.0175, 0.25 ) }
    dend_19 { pt3dadd( -14.7448, -4.65536, 15.7571, 0.25 ) }
    dend_19 { pt3dadd( -14.8178, -5.58552, 16.6826, 0.25 ) }
    dend_19 { pt3dadd( -14.9934, -6.40558, 17.6369, 0.25 ) }
    dend_19 { pt3dadd( -15.211, -7.39331, 18.9279, 0.25 ) }
    dend_19 { pt3dadd( -15.3991, -8.48536, 20.1804, 0.25 ) }
    // Section: dend_18, id: dend_18, parent: dend_17 (entry count 78/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -14.5471, 4.17304, 7.19995, 0.49 ) }
    dend_18 { pt3dadd( -16.0949, 2.26613, 7.56053, 0.49 ) }
    dend_18 { pt3dadd( -17.1661, 0.91753, 7.78442, 0.37 ) }
    dend_18 { pt3dadd( -18.2494, -0.299892, 8.00088, 0.37 ) }
    dend_18 { pt3dadd( -18.8243, -0.921564, 8.15811, 0.37 ) }
    dend_18 { pt3dadd( -19.7227, -1.83408, 8.42158, 0.37 ) }
    dend_18 { pt3dadd( -20.1937, -2.29568, 8.55464, 0.37 ) }
    dend_18 { pt3dadd( -20.7324, -2.8885, 8.7062, 0.37 ) }
    dend_18 { pt3dadd( -21.4511, -3.70796, 8.94638, 0.37 ) }
    dend_18 { pt3dadd( -22.7594, -5.0482, 9.50735, 0.37 ) }
    dend_18 { pt3dadd( -23.6442, -5.89375, 9.98187, 0.37 ) }
    dend_18 { pt3dadd( -24.8196, -6.93139, 10.7141, 0.37 ) }
    dend_18 { pt3dadd( -25.4547, -7.51394, 11.2514, 0.37 ) }
    dend_18 { pt3dadd( -26.2063, -8.25969, 12.0105, 0.37 ) }
    dend_18 { pt3dadd( -27.4141, -9.61369, 13.4198, 0.37 ) }
    dend_18 { pt3dadd( -28.1274, -10.5022, 14.3308, 0.37 ) }
    dend_18 { pt3dadd( -29.0936, -11.891, 15.6766, 0.37 ) }
    dend_18 { pt3dadd( -30.5865, -14.0841, 17.913, 0.37 ) }
    dend_18 { pt3dadd( -31.1482, -14.9093, 18.7587, 0.37 ) }
    dend_18 { pt3dadd( -31.6426, -15.6961, 19.5196, 0.37 ) }
    dend_18 { pt3dadd( -32.2458, -16.9845, 20.5109, 0.37 ) }
    dend_18 { pt3dadd( -32.6087, -18.0983, 21.1852, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    // Section: dend_16, id: dend_16, parent: dend_10 (entry count 0/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -20.0836, 10.0147, 4.44237, 0.49 ) }
    dend_16 { pt3dadd( -19.8563, 12.4473, 5.15349, 0.49 ) }
    dend_16 { pt3dadd( -19.5971, 14.1921, 5.83207, 0.49 ) }
    dend_16 { pt3dadd( -19.382, 15.5475, 6.42726, 0.49 ) }
    dend_16 { pt3dadd( -19.1845, 16.9895, 7.08284, 0.49 ) }
    dend_16 { pt3dadd( -18.8828, 19.5363, 8.27183, 0.49 ) }
    dend_16 { pt3dadd( -18.7325, 20.7141, 8.85899, 0.49 ) }
    dend_16 { pt3dadd( -18.4214, 22.6924, 9.97929, 0.49 ) }
    dend_16 { pt3dadd( -18.151, 24.1691, 10.8915, 0.49 ) }
    dend_16 { pt3dadd( -17.9883, 25.0949, 11.4967, 0.49 ) }
    dend_16 { pt3dadd( -17.819, 26.4535, 12.3899, 0.49 ) }
    dend_16 { pt3dadd( -17.5645, 29.2659, 14.1131, 0.49 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 12/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -20.0836, 10.0147, 4.44237, 0.86 ) }
    dend_11 { pt3dadd( -21.7318, 9.43021, 4.44237, 0.86 ) }
    dend_11 { pt3dadd( -24.132, 8.57918, 4.44237, 0.86 ) }
    dend_11 { pt3dadd( -25.9421, 7.93736, 4.44237, 0.74 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 16/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( -13.592, 16.8371, -10.3148, 0.49 ) }
    dend_4 { pt3dadd( -11.1739, 17.8767, -10.2648, 0.49 ) }
    dend_4 { pt3dadd( -9.6083, 18.5499, -10.2324, 0.25 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 19/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( -13.592, 16.8371, -10.3148, 0.86 ) }
    dend_3 { pt3dadd( -15.0926, 18.1225, -11.1749, 0.86 ) }
    dend_3 { pt3dadd( -17.111, 19.8516, -12.3318, 0.86 ) }
    dend_3 { pt3dadd( -18.3607, 20.9221, -13.0481, 0.86 ) }
    dend_3 { pt3dadd( -20.103, 22.4146, -14.0468, 0.86 ) }
    dend_3 { pt3dadd( -21.0745, 23.2468, -14.6036, 0.86 ) }
    dend_3 { pt3dadd( -22.7066, 24.6449, -15.5391, 0.86 ) }
    // Section: dend_40, id: dend_40, parent: dend_36 (entry count 26/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( -55.9552, -27.6122, -2.60943, 0.12 ) }
    dend_40 { pt3dadd( -56.546, -19.3807, 3.02582, 0.12 ) }
    dend_40 { pt3dadd( -56.747, -16.5869, 5.24044, 0.12 ) }
    dend_40 { pt3dadd( -56.8843, -14.1765, 7.64597, 0.12 ) }
    dend_40 { pt3dadd( -56.9722, -12.7345, 9.30661, 0.12 ) }
    dend_40 { pt3dadd( -57.0418, -11.112, 11.2968, 0.12 ) }
    dend_40 { pt3dadd( -57.1508, -6.52586, 17.1984, 0.12 ) }
    dend_40 { pt3dadd( -57.1827, -3.07729, 21.7226, 0.12 ) }
    dend_40 { pt3dadd( -57.1742, 1.35629, 27.8447, 0.12 ) }
    dend_40 { pt3dadd( -57.1545, 4.42561, 32.1263, 0.12 ) }
    dend_40 { pt3dadd( -57.1073, 7.00553, 35.5641, 0.12 ) }
    dend_40 { pt3dadd( -56.9834, 10.2169, 39.5638, 0.12 ) }
    dend_40 { pt3dadd( -56.8152, 12.9246, 42.3703, 0.12 ) }
    dend_40 { pt3dadd( -56.7393, 14.4391, 43.7092, 0.12 ) }
    dend_40 { pt3dadd( -56.6464, 16.535, 45.135, 0.12 ) }
    dend_40 { pt3dadd( -56.5111, 19.4219, 46.7177, 0.12 ) }
    dend_40 { pt3dadd( -56.4676, 22.1618, 47.947, 0.12 ) }
    dend_40 { pt3dadd( -56.4523, 24.8966, 48.8725, 0.12 ) }
    // Section: dend_37, id: dend_37, parent: dend_36 (entry count 44/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( -55.9552, -27.6122, -2.60943, 0.25 ) }
    dend_37 { pt3dadd( -58.7326, -27.294, -0.584563, 0.25 ) }
    dend_37 { pt3dadd( -59.9636, -27.1143, 0.400023, 0.25 ) }
    dend_37 { pt3dadd( -62.9929, -26.6241, 2.76645, 0.25 ) }
    dend_37 { pt3dadd( -64.9823, -26.3104, 4.38909, 0.25 ) }
    dend_37 { pt3dadd( -66.9339, -25.9942, 6.01571, 0.25 ) }
    dend_37 { pt3dadd( -69.1949, -25.61, 7.90331, 0.25 ) }
    dend_37 { pt3dadd( -72.2164, -25.0456, 10.4857, 0.25 ) }
    dend_37 { pt3dadd( -73.9138, -24.7275, 11.9228, 0.25 ) }
    dend_37 { pt3dadd( -76.0266, -24.3083, 13.6472, 0.25 ) }
    dend_37 { pt3dadd( -78.6362, -23.7519, 16.0336, 0.25 ) }
    dend_37 { pt3dadd( -79.2373, -23.6228, 16.6233, 0.25 ) }
    // Section: dend_31, id: dend_31, parent: dend_23 (entry count 56/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 25.5606, 3.95708, -22.5716, 0.37 ) }
    dend_31 { pt3dadd( 27.0806, 3.07958, -23.8216, 0.37 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 58/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 25.5606, 3.95708, -22.5716, 0.74 ) }
    dend_24 { pt3dadd( 26.2179, 5.78765, -22.4648, 0.74 ) }
    dend_24 { pt3dadd( 26.625, 6.92165, -22.3986, 0.74 ) }
    // Section: dend_15, id: dend_15, parent: dend_11 (entry count 61/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -25.9421, 7.93736, 4.44237, 0.49 ) }
    dend_15 { pt3dadd( -27.4512, 10.3374, 4.05769, 0.49 ) }
    dend_15 { pt3dadd( -28.0348, 11.2655, 3.90893, 0.49 ) }
    dend_15 { pt3dadd( -28.8689, 12.5922, 3.69629, 0.49 ) }
    dend_15 { pt3dadd( -29.5054, 13.6043, 3.53406, 0.49 ) }
    dend_15 { pt3dadd( -30.3261, 14.9096, 3.32485, 0.49 ) }
    dend_15 { pt3dadd( -31.5871, 16.9151, 3.0034, 0.49 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 68/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -25.9421, 7.93736, 4.44237, 0.74 ) }
    dend_12 { pt3dadd( -28.6503, 7.55623, 4.47139, 0.74 ) }
    dend_12 { pt3dadd( -29.5889, 7.32269, 4.48034, 0.74 ) }
    dend_12 { pt3dadd( -31.5268, 6.58074, 4.49716, 0.74 ) }
    dend_12 { pt3dadd( -32.9562, 5.88413, 4.50836, 0.61 ) }
    dend_12 { pt3dadd( -34.0307, 5.32574, 4.51553, 0.61 ) }
    dend_12 { pt3dadd( -35.4325, 4.61901, 4.52345, 0.61 ) }
    dend_12 { pt3dadd( -36.4962, 3.94706, 4.52889, 0.61 ) }
    dend_12 { pt3dadd( -37.8063, 3.02167, 4.53361, 0.61 ) }
    dend_12 { pt3dadd( -38.6856, 2.33858, 4.53361, 0.61 ) }
    dend_12 { pt3dadd( -40.2786, 1.15946, 4.53361, 0.61 ) }
    dend_12 { pt3dadd( -41.6594, 0.142878, 4.53361, 0.61 ) }
    // Section: dend_42, id: dend_42, parent: dend_40 (entry count 80/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( -56.4523, 24.8966, 48.8725, 0.12 ) }
    dend_42 { pt3dadd( -54.1388, 25.5243, 49.5471, 0.12 ) }
    dend_42 { pt3dadd( -52.2602, 26.034, 50.0949, 0.12 ) }
    dend_42 { pt3dadd( -49.9659, 26.6565, 50.764, 0.12 ) }
    dend_42 { pt3dadd( -47.2034, 27.406, 51.5695, 0.12 ) }
    dend_42 { pt3dadd( -44.9142, 28.0271, 52.2371, 0.12 ) }
    dend_42 { pt3dadd( -43.1855, 28.4961, 52.7412, 0.12 ) }
    // Section: dend_41, id: dend_41, parent: dend_40 (entry count 87/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( -56.4523, 24.8966, 48.8725, 0.12 ) }
    dend_41 { pt3dadd( -57.3303, 26.9173, 49.6621, 0.12 ) }
    dend_41 { pt3dadd( -58.5455, 29.7138, 50.7548, 0.12 ) }
    dend_41 { pt3dadd( -59.4132, 31.7105, 51.535, 0.12 ) }
    dend_41 { pt3dadd( -60.3533, 33.874, 52.3804, 0.12 ) }
    // Section: dend_39, id: dend_39, parent: dend_37 (entry count 92/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( -79.2373, -23.6228, 16.6233, 0.25 ) }
    dend_39 { pt3dadd( -81.4658, -23.1774, 17.8914, 0.25 ) }
    dend_39 { pt3dadd( -81.8406, -23.0667, 18.0786, 0.25 ) }
    dend_39 { pt3dadd( -84.2485, -22.2143, 19.234, 0.25 ) }
    dend_39 { pt3dadd( -86.1452, -21.4446, 20.1504, 0.25 ) }
    dend_39 { pt3dadd( -87.9903, -20.6845, 21.032, 0.25 ) }
    dend_39 { pt3dadd( -89.0594, -20.2479, 21.5068, 0.25 ) }
    dend_39 { pt3dadd( -91.4479, -19.1601, 22.5118, 0.25 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_39 { pt3dadd( -92.4735, -18.6765, 22.9025, 0.25 ) }
    dend_39 { pt3dadd( -93.9824, -17.9436, 23.4021, 0.25 ) }
    dend_39 { pt3dadd( -96.0447, -17.0037, 24.0679, 0.25 ) }
    dend_39 { pt3dadd( -98.4555, -15.8926, 24.8124, 0.25 ) }
    dend_39 { pt3dadd( -100.492, -14.9875, 25.4484, 0.25 ) }
    dend_39 { pt3dadd( -102.655, -14.1082, 26.1108, 0.25 ) }
    dend_39 { pt3dadd( -103.698, -13.6986, 26.4063, 0.25 ) }
    dend_39 { pt3dadd( -107.011, -12.4185, 27.2647, 0.25 ) }
    // Section: dend_38, id: dend_38, parent: dend_37 (entry count 8/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( -79.2373, -23.6228, 16.6233, 0.25 ) }
    dend_38 { pt3dadd( -79.5238, -22.8724, 15.4926, 0.25 ) }
    dend_38 { pt3dadd( -80.0191, -21.6348, 13.7408, 0.25 ) }
    dend_38 { pt3dadd( -80.8625, -19.6331, 11.1251, 0.25 ) }
    dend_38 { pt3dadd( -82.4493, -15.9183, 6.68639, 0.25 ) }
    dend_38 { pt3dadd( -82.8544, -14.9787, 5.67486, 0.25 ) }
    dend_38 { pt3dadd( -83.7805, -12.8894, 3.59082, 0.25 ) }
    dend_38 { pt3dadd( -84.2652, -11.849, 2.60573, 0.25 ) }
    dend_38 { pt3dadd( -84.9365, -10.4141, 1.29287, 0.25 ) }
    dend_38 { pt3dadd( -85.4922, -9.12745, 0.553606, 0.25 ) }
    dend_38 { pt3dadd( -86.1533, -7.25751, 0.0661676, 0.25 ) }
    dend_38 { pt3dadd( -86.4747, -6.13778, -0.139658, 0.25 ) }
    dend_38 { pt3dadd( -86.8285, -4.40056, -0.340336, 0.25 ) }
    dend_38 { pt3dadd( -87.546, -0.336981, -0.724851, 0.25 ) }
    dend_38 { pt3dadd( -88.4154, 5.83614, -1.14005, 0.25 ) }
    dend_38 { pt3dadd( -88.7219, 8.64858, -1.26945, 0.25 ) }
    dend_38 { pt3dadd( -88.9195, 11.5607, -1.3061, 0.25 ) }
    dend_38 { pt3dadd( -89.0013, 14.0902, -1.21166, 0.25 ) }
    // Section: dend_33, id: dend_33, parent: dend_31 (entry count 26/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 27.0806, 3.07958, -23.8216, 0.37 ) }
    dend_33 { pt3dadd( 27.2006, 1.61708, -20.0716, 0.37 ) }
    // Section: dend_32, id: dend_32, parent: dend_31 (entry count 28/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 27.0806, 3.07958, -23.8216, 0.37 ) }
    dend_32 { pt3dadd( 28.2706, 3.93758, -23.3216, 0.37 ) }
    // Section: dend_26, id: dend_26, parent: dend_24 (entry count 30/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 26.625, 6.92165, -22.3986, 0.49 ) }
    dend_26 { pt3dadd( 29.8123, 6.7521, -24.6027, 0.49 ) }
    dend_26 { pt3dadd( 33.7544, 6.54238, -27.3288, 0.49 ) }
    dend_26 { pt3dadd( 35.9709, 6.42447, -28.8616, 0.49 ) }
    // Section: dend_25, id: dend_25, parent: dend_24 (entry count 34/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 26.625, 6.92165, -22.3986, 0.61 ) }
    dend_25 { pt3dadd( 24.7573, 9.97297, -22.865, 0.61 ) }
    dend_25 { pt3dadd( 23.6776, 11.8036, -23.1311, 0.61 ) }
    dend_25 { pt3dadd( 22.6966, 13.5264, -23.3624, 0.49 ) }
    dend_25 { pt3dadd( 21.8251, 15.1324, -23.5587, 0.49 ) }
    dend_25 { pt3dadd( 20.8178, 17.0547, -23.7728, 0.49 ) }
    dend_25 { pt3dadd( 19.5028, 19.5303, -24.0265, 0.49 ) }
    dend_25 { pt3dadd( 18.7433, 20.9307, -24.0902, 0.49 ) }
    dend_25 { pt3dadd( 17.9779, 22.3582, -24.1365, 0.37 ) }
    dend_25 { pt3dadd( 17.1915, 23.7982, -24.2475, 0.37 ) }
    dend_25 { pt3dadd( 16.4519, 25.0956, -24.4539, 0.37 ) }
    dend_25 { pt3dadd( 15.5837, 26.4787, -24.8466, 0.37 ) }
    dend_25 { pt3dadd( 14.7358, 27.6294, -25.3068, 0.37 ) }
    dend_25 { pt3dadd( 13.1803, 29.4067, -26.1698, 0.37 ) }
    dend_25 { pt3dadd( 10.9549, 31.6549, -27.4587, 0.37 ) }
    dend_25 { pt3dadd( 9.62238, 32.8916, -28.2731, 0.37 ) }
    dend_25 { pt3dadd( 7.91463, 34.4385, -29.3672, 0.37 ) }
    dend_25 { pt3dadd( 6.68761, 35.5475, -30.1597, 0.37 ) }
    dend_25 { pt3dadd( 5.62484, 36.525, -30.8268, 0.37 ) }
    dend_25 { pt3dadd( 5.01039, 37.0271, -31.1844, 0.37 ) }
    dend_25 { pt3dadd( 3.54946, 38.2235, -31.812, 0.37 ) }
    dend_25 { pt3dadd( 2.9199, 38.814, -32.0125, 0.37 ) }
    dend_25 { pt3dadd( 2.13071, 39.7216, -32.2127, 0.37 ) }
    dend_25 { pt3dadd( 1.47353, 40.7164, -32.4362, 0.37 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 58/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -41.6594, 0.142878, 4.53361, 0.49 ) }
    dend_14 { pt3dadd( -42.366, 2.43473, 4.69578, 0.49 ) }
    dend_14 { pt3dadd( -42.9598, 4.36089, 4.83207, 0.49 ) }
    dend_14 { pt3dadd( -43.5003, 6.11412, 4.95613, 0.49 ) }
    dend_14 { pt3dadd( -43.9427, 7.54921, 5.05767, 0.49 ) }
    dend_14 { pt3dadd( -44.2268, 8.47065, 5.12287, 0.49 ) }
    dend_14 { pt3dadd( -44.8924, 10.6298, 5.27565, 0.49 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 65/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -41.6594, 0.142878, 4.53361, 0.49 ) }
    dend_13 { pt3dadd( -42.7933, -1.44547, 4.54382, 0.49 ) }
    dend_13 { pt3dadd( -43.8949, -3.10824, 4.55207, 0.49 ) }
    dend_13 { pt3dadd( -44.5185, -4.07027, 4.5597, 0.49 ) }
    dend_13 { pt3dadd( -45.895, -6.23321, 4.57935, 0.49 ) }
    dend_13 { pt3dadd( -46.742, -7.61238, 4.5922, 0.49 ) }
    dend_13 { pt3dadd( -47.9787, -9.83035, 4.61197, 0.49 ) }
    dend_13 { pt3dadd( -48.6101, -11.0976, 4.62083, 0.37 ) }
    dend_13 { pt3dadd( -49.3758, -12.9414, 4.63335, 0.37 ) }
    dend_13 { pt3dadd( -49.709, -13.9272, 4.63949, 0.37 ) }
    dend_13 { pt3dadd( -50.1732, -15.581, 4.64885, 0.37 ) }
    dend_13 { pt3dadd( -50.7503, -17.8404, 4.71244, 0.37 ) }
    dend_13 { pt3dadd( -51.3576, -20.2028, 4.82628, 0.37 ) }
    dend_13 { pt3dadd( -51.8698, -22.2974, 4.97205, 0.37 ) }
    dend_13 { pt3dadd( -52.2294, -23.8433, 5.1728, 0.37 ) }
    dend_13 { pt3dadd( -52.5048, -24.9393, 5.36931, 0.37 ) }
    dend_13 { pt3dadd( -53.1362, -27.2362, 5.88131, 0.37 ) }
    dend_13 { pt3dadd( -53.93, -29.7731, 6.57797, 0.37 ) }
    dend_13 { pt3dadd( -54.417, -31.1398, 7.01325, 0.37 ) }
    dend_13 { pt3dadd( -55.3476, -33.4889, 7.81328, 0.37 ) }
    dend_13 { pt3dadd( -56.0173, -35.0867, 8.23899, 0.37 ) }
    dend_13 { pt3dadd( -56.7167, -36.6147, 8.52024, 0.37 ) }
    dend_13 { pt3dadd( -57.1388, -37.478, 8.63826, 0.37 ) }
    dend_13 { pt3dadd( -58.1742, -39.4573, 8.81144, 0.37 ) }
    dend_13 { pt3dadd( -59.348, -41.5504, 8.79687, 0.37 ) }
    dend_13 { pt3dadd( -61.1133, -44.5291, 8.32847, 0.37 ) }
    dend_13 { pt3dadd( -61.7627, -45.6167, 8.07161, 0.37 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 92/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 35.9709, 6.42447, -28.8616, 0.49 ) }
    dend_30 { pt3dadd( 37.2988, 3.75888, -28.9557, 0.49 ) }
    dend_30 { pt3dadd( 38.6981, 1.58544, -28.9367, 0.49 ) }
    dend_30 { pt3dadd( 40.0923, -0.335521, -28.8458, 0.49 ) }
    dend_30 { pt3dadd( 41.8223, -2.48875, -28.954, 0.49 ) }
    dend_30 { pt3dadd( 43.913, -4.9727, -29.1374, 0.49 ) }
    dend_30 { pt3dadd( 45.4939, -6.78795, -29.4753, 0.37 ) }
    dend_30 { pt3dadd( 47.8399, -9.25738, -30.2402, 0.37 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_30 { pt3dadd( 49.4404, -10.7944, -30.8157, 0.37 ) }
    dend_30 { pt3dadd( 53.5696, -14.3994, -32.3546, 0.37 ) }
    dend_30 { pt3dadd( 56.0245, -16.2616, -33.414, 0.37 ) }
    dend_30 { pt3dadd( 60.6096, -19.2064, -35.5255, 0.37 ) }
    dend_30 { pt3dadd( 63.9928, -20.8885, -37.2338, 0.37 ) }
    dend_30 { pt3dadd( 67.6227, -22.0262, -39.2501, 0.37 ) }
    dend_30 { pt3dadd( 69.7136, -22.1629, -40.3027, 0.37 ) }
    dend_30 { pt3dadd( 74.0911, -21.3328, -41.9143, 0.37 ) }
    dend_30 { pt3dadd( 76.6944, -20.3233, -42.6274, 0.37 ) }
    dend_30 { pt3dadd( 81.2245, -17.8157, -43.3895, 0.37 ) }
    dend_30 { pt3dadd( 84.6626, -15.4866, -43.7694, 0.37 ) }
    dend_30 { pt3dadd( 88.5572, -12.4883, -44.1366, 0.37 ) }
    dend_30 { pt3dadd( 92.3771, -9.2136, -44.2203, 0.37 ) }
    dend_30 { pt3dadd( 95.033, -6.81489, -43.9994, 0.37 ) }
    dend_30 { pt3dadd( 96.8264, -5.07541, -43.75, 0.37 ) }
    dend_30 { pt3dadd( 99.5643, -2.27045, -43.0571, 0.37 ) }
    dend_30 { pt3dadd( 100.544, -1.22987, -42.7438, 0.37 ) }
    dend_30 { pt3dadd( 102.323, 0.74476, -42.287, 0.37 ) }
    dend_30 { pt3dadd( 103.757, 2.31317, -42.1089, 0.37 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 35.9709, 6.42447, -28.8616, 0.49 ) }
    dend_27 { pt3dadd( 37.1468, 8.13645, -29.0368, 0.49 ) }
    dend_27 { pt3dadd( 38.0607, 9.46701, -29.173, 0.49 ) }
    dend_27 { pt3dadd( 39.0688, 10.9347, -29.3232, 0.49 ) }
    dend_27 { pt3dadd( 40.3003, 12.7277, -29.5067, 0.49 ) }
    dend_27 { pt3dadd( 41.127, 13.9314, -29.6299, 0.49 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 25/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 41.127, 13.9314, -29.6299, 0.37 ) }
    dend_29 { pt3dadd( 40.6313, 16.0125, -29.4281, 0.37 ) }
    dend_29 { pt3dadd( 40.0592, 18.4142, -29.1951, 0.37 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 28/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 41.127, 13.9314, -29.6299, 0.49 ) }
    dend_28 { pt3dadd( 42.4467, 15.2635, -29.3719, 0.49 ) }
    dend_28 { pt3dadd( 43.2337, 16.0579, -29.218, 0.49 ) }
    dend_28 { pt3dadd( 43.9645, 16.7956, -29.0751, 0.49 ) }
    dend_28 { pt3dadd( 46.2763, 19.1292, -28.623, 0.37 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_21, dend_9, dend_8, dend_5, dend_0, dend_34, dend_22, dend_20, dend_17, dend_10, dend_7, dend_6, dend_2, dend_1, dend_36, dend_35, dend_23, dend_19, dend_18, dend_16, dend_11, dend_4, dend_3, dend_40, dend_37, dend_31, dend_24, dend_15, dend_12, dend_42, dend_41, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_14, dend_13, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_2 = new SectionList()
    dend_21 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_21, dend_9, dend_8, dend_5, dend_0, dend_34, dend_22, dend_20, dend_17, dend_10, dend_7, dend_6, dend_2, dend_1, dend_36, dend_35, dend_23, dend_19, dend_18, dend_16, dend_11, dend_4, dend_3, dend_40, dend_37, dend_31, dend_24, dend_15, dend_12, dend_42, dend_41, dend_39, dend_38, dend_33, dend_32, dend_26, dend_25, dend_14, dend_13, dend_30, dend_27, dend_29, dend_28]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_34 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_36 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_40 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_38 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_25 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_30 OneSecGrp_SectionRef_43.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_21 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_22 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_9 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_0 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_17 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_2 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_12, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_12 = new SectionList()
    dend_10 OneSecGrp_SectionRef_12.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_4 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_1 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_11 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_5, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_5 = new SectionList()
    dend_5 OneSecGrp_SectionRef_5.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_3 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_23 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_19 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_8 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_31 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_15 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_24 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_32 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_33 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_7 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_20 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_16 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_12 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_26 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_18 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_6 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_14 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_27 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_29 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_28 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_35 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_37 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_39 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_41 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_42 OneSecGrp_SectionRef_33.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_21, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_22, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_17, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_31, dend_24, dend_24, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_41, dend_41, dend_41, dend_41, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_33, dend_32, dend_26, dend_26, dend_26, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    soma_0 all.append()
    soma_0 all.append()
    dend_21 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_22 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_17 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_31 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_33 all.append()
    dend_32 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.0095  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 0.004399  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 1.0E-5  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -79.315735  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.959764  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.098908  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.0034419997  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.004729  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.317363  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 9.3999995E-5  // units: S cm-2
        e_pas_nml2 = -60.216507  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 9.989999E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.092965  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.019725999  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 0.156376  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.297559  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 9.1E-5  // units: S cm-2
        e_pas_nml2 = -62.442795  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 8.0E-6  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.197999  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 1.50000005E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 2.9999999E-6  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.001067  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 3.2E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cNAC_149_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cNAC_149_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cNAC_149_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cNAC_149_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000052))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_34 nseg = 3
    dend_36 nseg = 3
    dend_40 nseg = 3
    dend_38 nseg = 3
    dend_25 nseg = 3
    dend_13 nseg = 3
    dend_30 nseg = 5
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cNAC187_L1_NGCSA_6fcd70b510_0_0


