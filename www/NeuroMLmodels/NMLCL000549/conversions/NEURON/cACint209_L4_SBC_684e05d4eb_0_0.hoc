// Cell: cACint209_L4_SBC_684e05d4eb_0_0
/*
{
  "id" : "cACint209_L4_SBC_684e05d4eb_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "1.3423, -11.8978, -0.346949, 1.26325", "1.17089, -10.8121, -0.257447, 2.15137", "0.999487, -9.72644, -0.167944, 3.69246", "0.82808, -8.64076, -0.0784414, 4.66934", "0.656673, -7.55509, 0.0110612, 5.3975", "0.485265, -6.46941, 0.100564, 6.12566", "0.313858, -5.38373, 0.190067, 6.8492", "0.142451, -4.29806, 0.279569, 7.51566", "-0.0289566, -3.21238, 0.369072, 8.33755", "-0.200364, -2.12671, 0.458575, 9.12608", "-0.371771, -1.04103, 0.548077, 9.58359", "-0.543179, 0.0446457, 0.63758, 9.3128", "-0.714586, 1.13032, 0.727082, 8.90825", "-0.885993, 2.216, 0.816585, 8.11721", "-1.0574, 3.30167, 0.906088, 7.32616", "-1.22881, 4.38735, 0.99559, 6.82145", "-1.40021, 5.47303, 1.08509, 6.25581", "-1.57162, 6.5587, 1.1746, 5.62926", "-1.74303, 7.64438, 1.2641, 5.00484", "-1.91444, 8.73005, 1.3536, 3.68472", "-2.08584, 9.81573, 1.4431, 2.38364" ]
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "0.426774, -12.0795, 6.72196, 2.22", "-0.0111326, -15.4424, 8.40856, 2.22", "-0.464206, -18.9218, 10.1536, 1.94", "-0.869778, -22.0365, 11.7156, 1.66", "-1.26067, -25.0384, 13.2211, 1.66", "-2.06143, -31.1879, 16.3053, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000811785828
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-1.13322, 10.4325, -0.05804, 2.22", "-0.100362, 14.3786, 1.07438, 2.22" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000811785828
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "5.02678, -1.11745, -14.6681, 2.49", "6.21856, -2.5407, -14.7523, 1.94", "8.39603, -5.14108, -14.9063, 1.94", "12.5401, -10.0901, -15.1994, 1.94", "15.1495, -13.2064, -15.3839, 2.49", "16.7909, -15.1665, -15.5, 2.49" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4500000811785828
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "-2.08584, 9.81573, 1.4431, 0.83", "-4.42507, 24.6322, 1.4431, 0.83", "-6.7643, 39.4487, 1.4431, 0.83" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "-2.06143, -31.1879, 16.3053, 0.83", "-3.84156, -32.0733, 25.6643, 0.83", "-3.96521, -32.222, 26.8669, 0.83", "-4.15398, -33.1788, 35.8302, 0.55", "-4.03869, -33.3433, 37.7174, 0.55", "-3.27784, -34.0012, 43.9756, 0.55", "-3.07489, -34.1141, 45.166, 0.28", "-2.69651, -34.3243, 47.804, 0.55", "-2.23258, -34.4857, 50.2602, 0.55", "-1.29445, -34.7249, 53.1513, 0.55", "0.393389, -34.9601, 57.6901, 0.28", "2.31297, -35.1492, 62.4179, 0.83" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "-2.06143, -31.1879, 16.3053, 1.39", "-2.60755, -36.768, 20.3192, 1.39", "-3.38365, -44.6978, 26.0234, 1.39", "-4.09649, -51.9812, 31.2626, 1.39", "-4.60857, -57.2134, 35.0263, 1.11", "-5.04635, -61.6864, 38.2439, 1.39" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-0.100362, 14.3786, 1.07438, 0.83", "2.6648, 17.5219, 2.08533, 0.83" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-0.100362, 14.3786, 1.07438, 1.39", "-1.10026, 19.6429, 3.38513, 1.39" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "16.7909, -15.1665, -15.5, 0.83", "18.1494, -16.5104, -14.7211, 0.83", "21.1163, -19.5437, -12.1205, 0.83", "23.7213, -22.207, -9.83702, 1.11", "27.779, -26.3555, -6.28019, 1.11", "30.3507, -28.9848, -4.02591, 1.11", "32.8728, -31.5633, -1.81517, 1.11", "38.1821, -36.9418, 3.58694, 1.11" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "16.7909, -15.1665, -15.5, 1.94", "18.2241, -15.7716, -19.0224, 1.94", "20.8181, -16.8668, -25.3977, 1.94", "23.1008, -17.8306, -31.008, 1.94", "25.676, -18.9178, -37.3372, 2.49" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "-6.7643, 39.4487, 1.4431, 0.55", "-9.10353, 54.2652, 1.4431, 0.55", "-11.4428, 69.0816, 1.4431, 0.55" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "-5.04635, -61.6864, 38.2439, 0.83", "-8.22271, -62.6101, 40.113, 0.83", "-10.7047, -63.3319, 41.5735, 0.83", "-14.3766, -64.3996, 43.7343, 0.83" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "-5.04635, -61.6864, 38.2439, 1.11", "-5.28275, -66.0023, 37.2408, 1.11", "-5.38853, -69.3533, 36.4729, 1.11", "-5.50807, -73.2805, 35.8538, 1.11", "-5.53223, -76.1045, 35.5546, 1.11", "-5.56456, -80.0328, 35.243, 1.11", "-5.57471, -85.5192, 34.979, 1.11", "-5.55451, -88.7495, 34.9949, 1.11", "-5.44271, -94.6496, 35.3676, 1.11", "-5.31989, -101.617, 35.9887, 1.11", "-5.24557, -105.346, 36.4681, 1.11", "-5.20531, -108.939, 37.0611, 1.11", "-5.24796, -113.672, 38.1148, 1.11", "-5.24026, -115.487, 38.5523, 1.11" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "2.6648, 17.5219, 2.08533, 0.28", "3.25069, 21.0339, 3.71968, 0.28", "4.70066, 29.7255, 7.7644, 0.28", "5.15418, 32.444, 9.02951, 0.28", "5.7005, 35.7188, 10.5534, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "2.6648, 17.5219, 2.08533, 0.55", "4.83422, 19.6809, 3.68511, 0.55", "6.57375, 21.4017, 4.72248, 0.55", "7.05033, 21.9095, 4.98224, 0.83", "11.0701, 26.1738, 7.19268, 0.55", "12.1306, 27.3125, 7.79902, 0.55", "15.6721, 31.1688, 9.7755, 0.55", "17.0127, 32.6778, 10.5995, 0.55", "18.188, 34.0177, 11.2766, 0.55", "20.5278, 36.7771, 12.4683, 0.55", "23.3918, 40.3572, 13.8336, 0.55", "24.4442, 41.7936, 14.3762, 0.55", "26.5027, 44.6685, 15.5086, 0.55", "28.2719, 47.1589, 16.5276, 0.55", "29.5374, 48.9281, 17.2127, 0.28", "30.9801, 51.192, 17.8766, 0.55", "32.8585, 54.336, 18.6107, 0.28" ],
    "parent" : "dend_29",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "-1.10026, 19.6429, 3.38513, 0.83", "-3.44072, 21.0272, 3.20897, 0.83", "-4.70932, 21.8619, 3.00327, 0.55", "-5.53719, 22.3723, 2.84375, 0.55", "-10.0149, 24.8902, 1.93938, 0.55", "-15.6343, 28.0501, 0.80441, 0.55", "-18.2515, 29.5218, 0.275807, 0.55", "-21.6442, 31.4236, -0.4245, 0.55", "-24.9908, 33.2112, -1.16025, 0.55", "-26.665, 34.0464, -1.56024, 0.55" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-1.10026, 19.6429, 3.38513, 0.83", "-1.20034, 22.2421, 8.75046, 0.83", "-1.27642, 24.218, 12.8292, 1.11" ],
    "parent" : "dend_20",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "38.1821, -36.9418, 3.58694, 0.55", "37.0801, -43.8271, 4.23637, 0.55", "36.3973, -48.3265, 4.58333, 0.55", "36.2203, -49.7454, 4.69665, 0.55", "35.7847, -54.1921, 5.09239, 0.83", "35.6452, -56.2147, 5.3199, 1.11", "35.5936, -60.0632, 5.79658, 0.83", "35.6965, -61.0786, 5.98469, 0.83", "35.9441, -62.8873, 6.26457, 0.28", "36.1946, -64.0466, 6.45756, 0.55", "36.7033, -66.0004, 6.78021, 0.28", "37.3945, -68.9983, 7.18402, 0.28", "37.7575, -70.6851, 7.44772, 0.28", "38.1644, -73.0615, 7.85566, 0.83", "38.3251, -74.2379, 8.07763, 0.83", "38.8276, -78.4306, 8.95701, 0.28", "38.9084, -79.192, 9.15204, 1.11", "39.0623, -81.1448, 9.74101, 0.83", "39.4618, -85.3864, 11.1629, 0.28", "39.6724, -87.0548, 11.8157, 0.83", "39.8355, -88.1471, 12.2801, 0.28", "40.283, -90.5018, 13.4251, 0.55", "40.9084, -93.7945, 15.0002, 0.28", "40.9721, -94.1575, 15.1674, 0.55", "41.2191, -95.7766, 15.8865, 0.28", "41.3058, -96.3189, 16.1159, 0.83", "41.6175, -98.2625, 16.9185, 0.28", "42.0155, -100.231, 17.6962, 1.11" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "38.1821, -36.9418, 3.58694, 0.83", "40.5858, -41.1008, 4.77013, 0.83", "41.3095, -42.9117, 5.08377, 0.83", "41.9789, -44.52, 5.39907, 0.83", "43.1393, -47.3082, 5.94568, 0.83", "44.1117, -49.6446, 6.40371, 0.83", "46.0833, -54.3821, 7.33246, 0.83", "46.5857, -56.2249, 7.55509, 0.83", "47.3063, -59.3816, 7.8608, 0.83" ],
    "parent" : "dend_10",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "25.676, -18.9178, -37.3372, 0.83", "32.6893, -15.2295, -35.9002, 0.83", "38.4591, -12.0762, -34.3358, 1.11", "42.6408, -9.79074, -33.202, 1.11", "48.598, -6.53501, -31.5868, 1.66", "51.9145, -4.72247, -30.6875, 1.11", "57.5447, -1.64541, -29.161, 1.11", "59.2056, -0.70355, -28.4646, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "25.676, -18.9178, -37.3372, 1.39", "25.3458, -20.9519, -39.6192, 1.39", "25.0986, -22.4748, -41.3278, 1.11", "24.5082, -26.1117, -45.4081, 0.83", "24.3277, -27.2237, -46.6556, 0.83", "24.0271, -29.0755, -48.7332, 0.83" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "-14.3766, -64.3996, 43.7343, 0.83", "-13.446, -68.1721, 45.9824, 0.83", "-12.2063, -73.1977, 48.9774, 0.83", "-10.4643, -80.2597, 53.1859, 0.83", "-8.95345, -86.3843, 56.8357, 0.55", "-7.53454, -92.1364, 60.2636, 0.28" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "-14.3766, -64.3996, 43.7343, 0.83", "-16.3515, -63.4756, 45.5783, 0.83", "-17.3534, -63.0068, 46.5139, 0.83", "-19.9532, -61.7903, 48.9414, 0.83", "-21.8572, -60.8994, 50.7192, 0.83", "-24.0791, -59.8598, 52.7939, 0.83" ],
    "parent" : "apic_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "-5.24026, -115.487, 38.5523, 0.55", "-6.38384, -116.164, 38.3382, 0.55", "-8.04797, -117.313, 38.226, 0.55", "-10.1865, -118.969, 38.1816, 0.55", "-11.6323, -120.224, 38.1735, 0.55", "-12.7863, -121.225, 38.1671, 0.55", "-13.5113, -121.855, 38.1631, 0.55", "-15.779, -124.038, 38.2619, 0.55", "-16.6379, -124.942, 38.3592, 0.28", "-17.7923, -126.475, 38.5999, 0.55" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "-5.24026, -115.487, 38.5523, 1.11", "-4.82712, -118.201, 38.4306, 1.11", "-2.88228, -130.978, 37.8578, 1.11", "-2.50138, -133.48, 37.7456, 1.11", "-2.09172, -136.171, 37.625, 1.11", "-1.22023, -141.897, 37.3683, 1.11", "-0.413825, -147.194, 37.1308, 1.11" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-26.665, 34.0464, -1.56024, 0.28", "-29.782, 34.033, -2.54006, 0.28", "-31.4962, 33.9886, -3.4282, 0.28", "-32.3785, 33.9281, -3.97022, 0.28", "-34.4457, 33.7998, -5.6307, 0.55", "-35.8623, 33.7119, -6.76853, 0.55", "-37.9899, 33.5798, -8.47754, 0.55", "-41.0445, 33.3611, -11.2853, 1.11", "-42.7377, 33.2339, -13.0635, 0.55", "-45.5098, 32.8822, -16.4077, 0.28" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "-26.665, 34.0464, -1.56024, 0.55", "-29.8113, 35.0265, -3.12569, 0.55", "-31.0791, 35.4976, -4.04114, 0.55", "-32.0959, 35.8913, -4.73956, 0.55", "-35.2248, 37.1545, -6.79193, 0.55", "-38.7131, 38.6627, -8.97531, 0.55", "-40.0958, 39.3057, -9.80832, 0.55", "-42.9476, 41.0321, -12.12, 0.55", "-45.1049, 42.6073, -14.0761, 0.28", "-45.6678, 43.0593, -14.643, 0.55", "-46.3614, 43.7156, -15.4746, 0.28", "-46.7787, 44.2037, -15.9732, 0.55", "-49.7319, 48.1239, -19.9278, 0.28", "-50.0961, 48.6184, -20.4997, 0.55" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-1.27642, 24.218, 12.8292, 0.55", "-1.49839, 26.2032, 14.6422, 0.55", "-1.85175, 28.8053, 16.5215, 0.55", "-2.6891, 33.3963, 18.2909, 0.28", "-3.18374, 37.1065, 19.3148, 0.83", "-3.25937, 38.2018, 19.5435, 0.83", "-3.3359, 41.6687, 20.1785, 0.83", "-3.30048, 44.2508, 20.4753, 0.28", "-2.90585, 52.687, 20.9735, 0.55", "-2.64892, 56.0714, 20.9573, 0.55", "-2.18358, 60.826, 20.8365, 0.55", "-1.96813, 62.6361, 20.8367, 0.55", "-1.68684, 64.648, 20.9193, 0.55", "-1.50849, 65.6745, 20.9637, 0.28", "-1.35589, 66.3668, 20.9546, 0.55", "-1.11436, 68.6189, 20.6366, 0.28", "-1.0765, 69.8212, 20.2917, 0.28", "-1.06331, 70.7858, 19.9319, 0.83", "-1.02619, 72.6704, 19.075, 0.28", "-0.956093, 75.5599, 17.6112, 0.83", "-0.87044, 77.4645, 16.5268, 0.28", "-0.836417, 78.0861, 16.1033, 0.55", "-0.746294, 79.0802, 15.3511, 0.28", "-0.675383, 79.9459, 14.6206, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-1.27642, 24.218, 12.8292, 0.83", "-0.981857, 26.6563, 16.4538, 0.83", "-0.510803, 30.5556, 22.25, 0.83", "-0.18894, 33.2198, 26.2104, 0.83", "-0.0455814, 34.4065, 27.9744, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "47.3063, -59.3816, 7.8608, 0.55", "50.7605, -60.4303, 3.91827, 0.55", "53.199, -61.1707, 1.13501, 0.55", "54.7084, -61.629, -0.587758, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "47.3063, -59.3816, 7.8608, 0.83", "48.4311, -61.6549, 8.47578, 0.83", "49.1397, -62.5011, 9.05285, 0.83", "49.7869, -62.9443, 9.65148, 0.28", "51.211, -63.7487, 11.099, 0.55", "51.9256, -64.1831, 11.905, 0.28", "53.1812, -64.8802, 13.2822, 0.83", "57.0615, -66.9001, 17.6537, 0.83", "59.7694, -68.4245, 20.6322, 0.83", "60.6999, -68.9837, 21.6471, 0.83", "62.9428, -70.2917, 24.0852, 0.83", "66.2957, -72.3036, 27.7838, 0.55", "68.3313, -73.6361, 30.0104, 0.55", "70.4469, -75.4957, 32.1239, 0.55", "70.9288, -76.0028, 32.5669, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "59.2056, -0.70355, -28.4646, 0.83", "59.9527, 0.287796, -28.7879, 0.83", "62.5774, 3.77095, -29.9238, 0.83", "65.6023, 7.78513, -31.2329, 0.83", "67.5121, 10.3196, -32.0595, 0.83", "69.8779, 13.4592, -33.0834, 0.28" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "59.2056, -0.70355, -28.4646, 1.39", "59.7893, -0.521695, -29.6704, 1.39", "60.3222, -0.367264, -30.7322, 0.28", "62.1467, 0.0236283, -34.0946, 0.83", "63.3845, 0.205988, -36.4426, 0.83", "66.3922, 0.624365, -41.7797, 1.66", "67.3418, 0.740872, -43.3458, 0.28", "68.3593, 0.816592, -44.8967, 0.83", "69.2943, 0.87704, -46.2617, 0.83", "71.1389, 0.978049, -48.8865, 1.39", "72.5461, 1.02923, -50.8706, 0.55", "74.3492, 0.971894, -53.3342, 0.55", "75.3828, 0.941392, -54.8083, 0.83", "77.9433, 0.898647, -58.4719, 0.28", "80.2337, 0.898725, -61.8484, 0.28", "82.881, 0.846789, -65.7208, 0.55", "84.5035, 0.716166, -68.3813, 0.55" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "24.0271, -29.0755, -48.7332, 0.55", "28.142, -27.8757, -51.6931, 0.55", "30.3978, -26.9869, -53.5344, 2.49", "33.8405, -24.9935, -57.5086, 2.49", "33.4273, -24.1786, -59.4297, 0.55", "33.0465, -23.279, -61.5799, 2.77", "32.6806, -21.8617, -64.4001, 0.28", "32.3625, -20.8152, -66.2158, 0.28", "32.0954, -19.3229, -68.7033, 1.66", "32.1173, -15.682, -74.209, 0.28", "32.7097, -12.6922, -78.5264, 1.66", "33.4524, -10.5443, -81.4914, 0.28", "33.9249, -9.49839, -82.9074, 1.66", "36.3104, -5.31658, -87.9728, 0.55", "37.6339, -3.24753, -90.0545, 0.55", "39.2211, -0.883631, -91.9552, 0.55", "40.2272, 0.6685, -92.9436, 0.55", "43.0324, 5.20401, -95.3079, 1.39", "44.063, 6.95052, -95.9389, 0.55", "44.9016, 8.4463, -96.202, 0.55", "45.683, 9.74876, -96.5481, 0.28", "48.1586, 13.249, -98.262, 0.55", "49.5506, 14.7051, -99.3728, 2.22", "51.9658, 16.4439, -101.418, 0.28", "53.2565, 17.0762, -102.693, 1.11", "57.5529, 18.1102, -108.316, 1.11", "60.971, 17.9926, -113.79, 0.28", "61.1805, 17.9108, -114.204, 0.83", "61.7924, 17.5151, -115.565, 0.28", "61.9594, 17.3506, -115.985, 0.83", "64.3181, 14.4925, -121.982, 0.28", "65.1729, 13.3692, -123.922, 0.83", "66.7641, 11.319, -127.3, 0.55", "67.3149, 10.7138, -128.576, 0.83", "68.0659, 9.97401, -130.296, 0.28", "68.4317, 9.63216, -131.17, 1.11", "68.9657, 9.13166, -132.49, 0.55", "70.3752, 7.62652, -136.415, 1.66", "72.6293, 4.35525, -144.264, 0.55", "72.9852, 3.66769, -145.769, 1.39", "74.1517, 0.711485, -151.685, 0.55", "74.2917, 0.0959072, -152.731, 0.55", "74.3898, -1.5492, -154.928, 0.83", "74.2397, -3.46527, -156.647, 0.28", "74.0398, -4.36386, -157.137, 0.55", "73.0833, -7.66905, -158.916, 0.28", "72.8266, -8.53131, -159.569, 0.55", "72.0385, -12.1056, -163.124, 0.28", "71.9451, -12.758, -163.985, 0.83", "71.9095, -13.3984, -165.02, 0.55", "71.8443, -15.4516, -168.71, 1.11", "71.9715, -19.0131, -175.918, 0.28", "72.0318, -19.7798, -177.67, 0.28", "72.2383, -21.2969, -181.624, 1.39", "72.5186, -22.9053, -186.074, 0.55", "72.6142, -23.2933, -187.213, 0.55", "73.1675, -24.9171, -192.303, 0.55", "73.8187, -26.6413, -198.013, 0.28", "74.2505, -27.9068, -202.632, 1.39" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "24.0271, -29.0755, -48.7332, 2.22", "24.6669, -30.2421, -49.631, 2.22", "25.568, -32.0904, -51.5107, 0.55", "26.332, -33.7619, -53.5028, 2.77", "27.0391, -35.0084, -55.3312, 0.55", "28.4618, -37.3776, -58.9919, 0.55", "29.5192, -39.2045, -61.8179, 0.55", "29.6738, -39.5014, -62.3331, 1.11", "30.5093, -41.1288, -65.6843, 2.77", "31.7, -43.2739, -70.5533, 0.28", "31.8046, -43.4424, -70.9345, 0.28", "32.1568, -43.9007, -71.8501, 0.83", "33.4299, -45.3177, -74.5645, 0.28", "34.5504, -46.4114, -76.6793, 2.22", "35.2186, -46.8805, -77.6311, 0.28", "35.6572, -47.1284, -78.0914, 2.22", "36.718, -47.679, -79.1053, 0.55", "37.5133, -48.0744, -79.8553, 0.55", "38.0793, -48.3656, -80.5373, 2.22", "40.2413, -49.5739, -83.6816, 0.28", "40.5864, -49.7991, -84.3402, 1.11", "42.0008, -50.8175, -87.4814, 0.28", "42.8569, -51.5074, -89.6391, 1.39", "44.9786, -53.3841, -95.6541, 0.28", "45.3718, -53.7848, -96.8759, 1.39", "46.9108, -55.6078, -102.003, 0.28", "46.9652, -55.6739, -102.195, 0.83", "47.087, -55.8277, -102.645, 0.83", "47.8522, -56.9029, -105.428, 0.55", "48.2697, -57.6722, -106.816, 0.28", "48.5379, -58.2336, -107.699, 1.11" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "-0.413825, -147.194, 37.1308, 0.83", "2.03033, -148.139, 42.9892, 0.83", "3.51283, -148.892, 46.155, 0.83", "4.33956, -149.311, 47.9205, 0.83", "7.53806, -150.936, 54.7508, 0.83", "9.04156, -151.699, 57.9614, 0.83", "9.6444, -152.005, 59.2488, 0.28", "10.0662, -152.279, 59.8607, 0.28" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "-0.413825, -147.194, 37.1308, 1.11", "-0.00885254, -150.735, 37.7233, 1.11", "0.277358, -152.914, 37.9813, 1.11", "0.541465, -154.632, 38.1209, 1.11", "0.983456, -157.449, 38.2769, 1.11", "1.26447, -159.387, 38.3505, 1.11", "1.71873, -162.479, 38.4311, 1.11", "2.24316, -165.927, 38.3952, 1.11", "2.58225, -168.134, 38.3567, 1.11", "3.08338, -171.38, 38.2615, 1.11", "3.62194, -175.245, 38.0786, 1.11", "3.83424, -176.792, 38.0056, 1.11", "4.18726, -180.243, 37.872, 1.11" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-0.0455814, 34.4065, 27.9744, 0.55", "-0.0569959, 36.1631, 27.8625, 0.55", "0.00934857, 38.6348, 27.8212, 0.55", "0.174091, 44.412, 27.8792, 0.55", "0.436096, 49.9642, 27.8579, 0.28", "0.525213, 51.7946, 28.0352, 0.28", "0.569116, 52.7237, 28.1766, 0.55", "0.686395, 54.9224, 28.7008, 0.28", "0.765914, 56.3348, 29.2914, 0.28", "0.840419, 58.4689, 30.5993, 0.55", "0.645631, 63.311, 33.7058, 0.28", "0.624575, 63.811, 34.0524, 0.28", "0.556455, 64.7851, 34.7935, 0.55", "0.181299, 68.034, 37.5902, 0.28", "0.176269, 68.0718, 37.6271, 0.55", "-0.160422, 69.6471, 39.4188, 0.28", "-0.47058, 70.8661, 40.5872, 0.55" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-0.0455814, 34.4065, 27.9744, 0.55", "-0.648912, 38.9166, 30.9792, 0.55", "-1.28196, 43.6487, 34.132, 0.55", "-2.05005, 49.3904, 37.9574, 0.55", "-2.5356, 53.02, 40.3756, 0.55", "-3.0722, 57.0311, 43.048, 0.55", "-3.44603, 59.8256, 44.9098, 0.83" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "70.9288, -76.0028, 32.5669, 0.55", "71.1523, -77.9069, 32.4531, 0.55", "71.3382, -79.4914, 32.3584, 0.28", "71.4367, -80.3313, 32.3082, 0.28", "71.5944, -81.6754, 32.2279, 0.55", "71.8143, -83.5499, 32.1158, 0.28", "72.466, -89.1042, 31.7839, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "70.9288, -76.0028, 32.5669, 0.28", "71.6792, -78.0832, 34.6152, 0.28", "71.7943, -78.3855, 34.8982, 0.55", "72.2736, -79.5083, 35.8265, 0.28", "72.6385, -80.2491, 36.3228, 0.55", "73.2477, -81.4454, 37.1105, 0.28", "73.5142, -81.9686, 37.4551, 0.55", "74.2166, -83.2562, 38.1978, 0.28", "75.2207, -85.0747, 39.2245, 0.55", "76.4464, -87.2876, 40.4796, 0.28", "77.3242, -88.8197, 41.2884, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "69.8779, 13.4592, -33.0834, 0.55", "72.5395, 19.4932, -37.6676, 0.55", "73.0436, 20.8935, -38.6198, 0.55", "73.2165, 21.5983, -39.022, 0.83", "73.404, 22.5929, -39.4399, 0.28", "73.6053, 23.8399, -39.8844, 0.83", "74.1598, 28.0366, -41.2254, 0.28", "74.1665, 28.8673, -41.3646, 0.55", "74.1349, 31.3457, -41.7977, 0.28", "74.0724, 35.8833, -42.5792, 0.28", "74.0726, 36.4673, -42.6721, 0.83", "74.0971, 37.4332, -42.787, 0.28", "74.1479, 38.8696, -42.7871, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "69.8779, 13.4592, -33.0834, 0.55", "73.3876, 15.3711, -33.8203, 0.55", "75.7244, 16.7268, -34.2957, 0.55", "79.5446, 19.0235, -34.9816, 1.94", "81.4799, 20.235, -35.4465, 0.55", "84.59, 22.2881, -36.2597, 0.55", "87.4271, 24.2358, -37.0054, 0.55", "89.7004, 25.8894, -37.7369, 1.11", "92.0191, 27.5224, -38.4384, 1.11", "95.4039, 29.7182, -39.5208, 0.28", "97.8196, 31.1808, -40.2999, 1.11", "99.9003, 32.3049, -40.9923, 0.83", "102.54, 33.3671, -41.9139, 0.28", "105.668, 34.2864, -43.2389, 0.83", "109.511, 35.0764, -45.0893, 0.55", "110.607, 35.2587, -45.611, 0.55", "113.556, 35.7094, -47.3237, 0.28", "116.243, 36.1739, -49.0343, 1.11", "120.714, 37.1578, -52.0173, 0.55", "124.121, 38.1399, -54.4029, 0.28", "126.058, 38.8934, -55.7214, 1.94", "130.312, 41.0028, -58.7159, 0.28", "131.52, 41.6862, -59.5984, 0.83", "132.56, 42.3649, -60.4043, 0.28", "133.987, 43.5759, -61.3718, 1.11", "135.638, 45.4438, -62.5239, 0.28", "135.989, 45.9335, -62.7786, 0.55" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "4.18726, -180.243, 37.872, 0.55", "7.16028, -185.638, 37.1447, 0.55", "8.70679, -188.138, 36.7674, 0.55", "10.6397, -191.263, 36.2957, 0.55", "12.9957, -195.072, 35.7208, 0.55", "16.4767, -200.699, 34.8714, 0.55", "19.8837, -206.207, 34.04, 0.55", "22.7936, -210.683, 33.3307, 0.55" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "4.18726, -180.243, 37.872, 0.83", "4.36549, -181.992, 37.9325, 0.83", "4.46929, -184.432, 38.0773, 0.83", "4.57136, -187.985, 38.2909, 0.83", "4.56607, -190.336, 38.4461, 0.83", "4.54563, -193.175, 38.6193, 0.83", "4.52245, -195.304, 38.7389, 0.83", "4.39374, -199.249, 38.9845, 0.83", "4.28097, -201.147, 39.1074, 0.83", "4.06716, -204.518, 39.2902, 0.83", "3.93672, -206.677, 39.3767, 0.83", "3.78194, -209.007, 39.4223, 0.83", "3.69043, -210.741, 39.4456, 0.83", "3.54993, -215.616, 39.455, 0.83", "3.48306, -217.678, 39.4626, 0.83" ],
    "parent" : "apic_4",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "77.3242, -88.8197, 41.2884, 0.28", "79.0089, -91.541, 42.1504, 0.28", "79.3079, -92.0239, 42.3033, 0.55", "80.3728, -93.7442, 42.8481, 0.28", "81.1836, -95.0538, 43.2629, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "77.3242, -88.8197, 41.2884, 0.28", "78.5519, -94.4051, 45.6058, 0.28", "79.0001, -96.4432, 47.1812, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "22.7936, -210.683, 33.3307, 0.55", "24.7826, -212.594, 32.4387, 0.55", "26.5049, -214.432, 31.6675, 0.55", "27.4289, -215.545, 31.0281, 0.28", "28.3451, -216.82, 30.152, 0.55", "29.3772, -218.298, 29.1007, 0.28", "30.0866, -219.354, 28.3678, 0.55", "30.6305, -220.211, 27.7645, 0.55", "33.0731, -224.167, 25.0079, 0.55", "35.2936, -227.798, 22.1698, 0.55", "36.2436, -229.219, 20.9118, 0.28", "37.1083, -230.43, 19.6402, 0.55", "37.5913, -231.026, 18.9084, 0.28", "39.3011, -232.842, 16.1685, 0.55", "41.3031, -234.734, 12.8717, 0.28", "42.3405, -235.601, 11.117, 0.55", "44.7208, -237.489, 6.83757, 0.28", "45.1119, -237.776, 6.10615, 0.55", "46.9867, -239.125, 2.46028, 0.28", "47.8582, -239.779, 0.674899, 0.83", "48.4157, -240.195, -0.289601, 0.83" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "22.7936, -210.683, 33.3307, 0.28", "26.6422, -213.809, 33.79, 0.28", "29.3015, -215.97, 34.1074, 0.28", "32.3698, -218.462, 34.4736, 0.28" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "3.48306, -217.678, 39.4626, 0.55", "4.41741, -221.877, 38.8674, 0.55", "5.31074, -226.577, 38.2898, 0.55", "6.14433, -230.966, 37.7569, 0.55", "6.75908, -233.633, 37.3775, 0.55", "7.45959, -236.514, 36.9496, 0.55", "8.56796, -241.102, 36.2738, 0.55", "9.15919, -243.609, 35.8338, 0.55", "10.5474, -248.986, 34.7662, 0.55", "11.7861, -252.925, 34.0856, 0.55", "12.2405, -254.176, 33.8906, 0.55", "12.9542, -255.968, 33.6443, 0.55", "14.8754, -260.742, 33.3472, 0.55", "17.3656, -266.475, 33.5297, 0.55", "19.643, -271.77, 34.0734, 0.55", "19.8854, -272.352, 34.1717, 0.55", "20.4242, -273.535, 34.4296, 0.55", "22.4067, -277.495, 35.7247, 0.55", "23.6316, -279.848, 37.1624, 0.55" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "3.48306, -217.678, 39.4626, 0.83", "3.27451, -220.241, 39.5397, 0.83", "3.05653, -222.384, 39.4252, 0.83", "2.69717, -225.414, 39.2275, 0.83", "2.35203, -229.082, 39.0143, 0.83", "2.22947, -230.487, 38.9481, 0.83", "1.98981, -234.039, 38.7752, 0.83", "1.70819, -240.494, 38.4673, 0.83", "1.65797, -242.834, 38.3593, 0.83", "1.5961, -247.691, 38.1896, 0.83", "1.62444, -251.116, 38.0906, 0.83", "1.65865, -253.953, 38.0621, 0.83", "1.69527, -256.378, 38.107, 0.83", "1.74065, -257.652, 38.1684, 0.83", "1.74412, -260.764, 38.3275, 0.83", "1.58253, -263.104, 38.54, 0.55", "1.3558, -264.898, 38.7798, 0.55", "0.618884, -268.72, 39.4471, 0.55", "0.14069, -270.619, 39.8332, 0.28", "-0.712003, -273.115, 40.339, 0.55", "-2.08941, -276.39, 41.0055, 0.55", "-3.01899, -278.29, 41.3932, 0.28", "-3.62134, -279.372, 41.6163, 0.83", "-5.163, -281.752, 42.1478, 0.83", "-7.25426, -284.778, 42.7576, 0.83", "-8.0936, -285.921, 42.9245, 0.28", "-9.45338, -287.576, 43.0234, 0.83", "-10.8796, -289.219, 43.0726, 0.28" ],
    "parent" : "apic_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_19", "dend_0", "apic_16", "apic_1", "dend_29", "dend_20", "dend_10", "dend_1", "apic_13", "apic_2", "dend_31", "dend_30", "dend_26", "dend_21", "dend_18", "dend_11", "dend_5", "dend_2", "apic_15", "apic_14", "apic_12", "apic_3", "dend_28", "dend_27", "dend_25", "dend_22", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_11", "apic_4", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_8", "apic_8", "apic_5", "dend_15", "dend_14", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "apic_0", "dend_19", "dend_0", "apic_16", "apic_1", "dend_29", "dend_20", "dend_10", "dend_1", "apic_13", "apic_2", "dend_31", "dend_30", "dend_26", "dend_21", "dend_18", "dend_11", "dend_5", "dend_2", "apic_15", "apic_14", "apic_12", "apic_3", "dend_28", "dend_27", "dend_25", "dend_22", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_11", "apic_4", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_8", "apic_8", "apic_5", "dend_15", "dend_14", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "apic_0", "dend_19", "dend_0", "axon_0", "apic_16", "apic_1", "dend_29", "dend_20", "dend_10", "dend_1", "axon_1", "apic_13", "apic_2", "dend_31", "dend_30", "dend_26", "dend_21", "dend_18", "dend_11", "dend_5", "dend_2", "apic_15", "apic_14", "apic_12", "apic_3", "dend_28", "dend_27", "dend_25", "dend_22", "dend_17", "dend_12", "dend_7", "dend_6", "dend_4", "dend_3", "apic_11", "apic_4", "dend_24", "dend_23", "dend_16", "dend_13", "dend_9", "dend_8", "apic_8", "apic_5", "dend_15", "dend_14", "apic_10", "apic_9", "apic_7", "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "apic_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "apic_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "apic_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "apic_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "apic_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "apic_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "apic_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "apic_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "apic_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "apic_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "apic_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "apic_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "apic_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "apic_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "apic_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "apic_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "apic_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_1", "apic_2", "apic_3", "apic_4", "apic_5", "apic_6", "apic_7", "apic_8", "apic_9", "apic_10", "apic_11", "apic_12", "apic_13", "apic_14", "apic_15", "apic_16" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "dend_19", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_29", "dend_20", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_1", "dend_1", "dend_1", "dend_1", "axon_1", "axon_1", "apic_13", "apic_13", "apic_13", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "apic_2", "dend_31", "dend_31", "dend_31", "dend_31", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_21", "dend_21", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_SBC_684e05d4eb_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: dend_19, id: dend_19, parent: soma_0
create dend_19
public dend_19
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: apic_16, id: apic_16, parent: apic_0
create apic_16
public apic_16
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_29, id: dend_29, parent: dend_19
create dend_29
public dend_29
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_10, id: dend_10, parent: dend_0
create dend_10
public dend_10
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: apic_13, id: apic_13, parent: apic_1
create apic_13
public apic_13
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: dend_31, id: dend_31, parent: dend_29
create dend_31
public dend_31
// Section: dend_30, id: dend_30, parent: dend_29
create dend_30
public dend_30
// Section: dend_26, id: dend_26, parent: dend_20
create dend_26
public dend_26
// Section: dend_21, id: dend_21, parent: dend_20
create dend_21
public dend_21
// Section: dend_18, id: dend_18, parent: dend_10
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: dend_10
create dend_11
public dend_11
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: apic_15, id: apic_15, parent: apic_13
create apic_15
public apic_15
// Section: apic_14, id: apic_14, parent: apic_13
create apic_14
public apic_14
// Section: apic_12, id: apic_12, parent: apic_2
create apic_12
public apic_12
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: dend_28, id: dend_28, parent: dend_26
create dend_28
public dend_28
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: apic_11, id: apic_11, parent: apic_3
create apic_11
public apic_11
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_8, id: apic_8, parent: apic_4
create apic_8
public apic_8
// Section: apic_5, id: apic_5, parent: apic_4
create apic_5
public apic_5
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9
// Section: apic_7, id: apic_7, parent: apic_5
create apic_7
public apic_7
// Section: apic_6, id: apic_6, parent: apic_5
create apic_6
public apic_6

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_19, dend_0, axon_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, axon_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_16]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[apic_2]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_10]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_7]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[apic_6]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[apic_1]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_13]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_14]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_15]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_12]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_47
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_11]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_8]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_5]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_9]}
objref OneSecGrp_SectionRef_50
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_19, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_1, apic_1, apic_1, apic_1, apic_1, dend_29, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect apic_0(0), soma_0(0.4500000811785828)
    connect dend_19(0), soma_0(0.4500000811785828)
    connect dend_0(0), soma_0(0.4500000811785828)
    connect axon_0(0), soma_0(1.0)
    connect apic_16(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_29(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_10(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect apic_13(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect dend_31(0), dend_29(1.0)
    connect dend_30(0), dend_29(1.0)
    connect dend_26(0), dend_20(1.0)
    connect dend_21(0), dend_20(1.0)
    connect dend_18(0), dend_10(1.0)
    connect dend_11(0), dend_10(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect apic_15(0), apic_13(1.0)
    connect apic_14(0), apic_13(1.0)
    connect apic_12(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect dend_28(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect apic_11(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_8(0), apic_4(1.0)
    connect apic_5(0), apic_4(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)
    connect apic_7(0), apic_5(1.0)
    connect apic_6(0), apic_5(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 1.3423, -11.8978, -0.346949, 1.26325 ) }
    soma_0 { pt3dadd( 1.17089, -10.8121, -0.257447, 2.15137 ) }
    soma_0 { pt3dadd( 0.999487, -9.72644, -0.167944, 3.69246 ) }
    soma_0 { pt3dadd( 0.82808, -8.64076, -0.0784414, 4.66934 ) }
    soma_0 { pt3dadd( 0.656673, -7.55509, 0.0110612, 5.3975 ) }
    soma_0 { pt3dadd( 0.485265, -6.46941, 0.100564, 6.12566 ) }
    soma_0 { pt3dadd( 0.313858, -5.38373, 0.190067, 6.8492 ) }
    soma_0 { pt3dadd( 0.142451, -4.29806, 0.279569, 7.51566 ) }
    soma_0 { pt3dadd( -0.0289566, -3.21238, 0.369072, 8.33755 ) }
    soma_0 { pt3dadd( -0.200364, -2.12671, 0.458575, 9.12608 ) }
    soma_0 { pt3dadd( -0.371771, -1.04103, 0.548077, 9.58359 ) }
    soma_0 { pt3dadd( -0.543179, 0.0446457, 0.63758, 9.3128 ) }
    soma_0 { pt3dadd( -0.714586, 1.13032, 0.727082, 8.90825 ) }
    soma_0 { pt3dadd( -0.885993, 2.216, 0.816585, 8.11721 ) }
    soma_0 { pt3dadd( -1.0574, 3.30167, 0.906088, 7.32616 ) }
    soma_0 { pt3dadd( -1.22881, 4.38735, 0.99559, 6.82145 ) }
    soma_0 { pt3dadd( -1.40021, 5.47303, 1.08509, 6.25581 ) }
    soma_0 { pt3dadd( -1.57162, 6.5587, 1.1746, 5.62926 ) }
    soma_0 { pt3dadd( -1.74303, 7.64438, 1.2641, 5.00484 ) }
    soma_0 { pt3dadd( -1.91444, 8.73005, 1.3536, 3.68472 ) }
    soma_0 { pt3dadd( -2.08584, 9.81573, 1.4431, 2.38364 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 21/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 0.426774, -12.0795, 6.72196, 2.22 ) }
    apic_0 { pt3dadd( -0.0111326, -15.4424, 8.40856, 2.22 ) }
    apic_0 { pt3dadd( -0.464206, -18.9218, 10.1536, 1.94 ) }
    apic_0 { pt3dadd( -0.869778, -22.0365, 11.7156, 1.66 ) }
    apic_0 { pt3dadd( -1.26067, -25.0384, 13.2211, 1.66 ) }
    apic_0 { pt3dadd( -2.06143, -31.1879, 16.3053, 1.66 ) }
    // Section: dend_19, id: dend_19, parent: soma_0 (entry count 27/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -1.13322, 10.4325, -0.05804, 2.22 ) }
    dend_19 { pt3dadd( -0.100362, 14.3786, 1.07438, 2.22 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 29/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 5.02678, -1.11745, -14.6681, 2.49 ) }
    dend_0 { pt3dadd( 6.21856, -2.5407, -14.7523, 1.94 ) }
    dend_0 { pt3dadd( 8.39603, -5.14108, -14.9063, 1.94 ) }
    dend_0 { pt3dadd( 12.5401, -10.0901, -15.1994, 1.94 ) }
    dend_0 { pt3dadd( 15.1495, -13.2064, -15.3839, 2.49 ) }
    dend_0 { pt3dadd( 16.7909, -15.1665, -15.5, 2.49 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 35/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( -2.08584, 9.81573, 1.4431, 0.83 ) }
    axon_0 { pt3dadd( -4.42507, 24.6322, 1.4431, 0.83 ) }
    axon_0 { pt3dadd( -6.7643, 39.4487, 1.4431, 0.83 ) }
    // Section: apic_16, id: apic_16, parent: apic_0 (entry count 38/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( -2.06143, -31.1879, 16.3053, 0.83 ) }
    apic_16 { pt3dadd( -3.84156, -32.0733, 25.6643, 0.83 ) }
    apic_16 { pt3dadd( -3.96521, -32.222, 26.8669, 0.83 ) }
    apic_16 { pt3dadd( -4.15398, -33.1788, 35.8302, 0.55 ) }
    apic_16 { pt3dadd( -4.03869, -33.3433, 37.7174, 0.55 ) }
    apic_16 { pt3dadd( -3.27784, -34.0012, 43.9756, 0.55 ) }
    apic_16 { pt3dadd( -3.07489, -34.1141, 45.166, 0.28 ) }
    apic_16 { pt3dadd( -2.69651, -34.3243, 47.804, 0.55 ) }
    apic_16 { pt3dadd( -2.23258, -34.4857, 50.2602, 0.55 ) }
    apic_16 { pt3dadd( -1.29445, -34.7249, 53.1513, 0.55 ) }
    apic_16 { pt3dadd( 0.393389, -34.9601, 57.6901, 0.28 ) }
    apic_16 { pt3dadd( 2.31297, -35.1492, 62.4179, 0.83 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 50/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( -2.06143, -31.1879, 16.3053, 1.39 ) }
    apic_1 { pt3dadd( -2.60755, -36.768, 20.3192, 1.39 ) }
    apic_1 { pt3dadd( -3.38365, -44.6978, 26.0234, 1.39 ) }
    apic_1 { pt3dadd( -4.09649, -51.9812, 31.2626, 1.39 ) }
    apic_1 { pt3dadd( -4.60857, -57.2134, 35.0263, 1.11 ) }
    apic_1 { pt3dadd( -5.04635, -61.6864, 38.2439, 1.39 ) }
    // Section: dend_29, id: dend_29, parent: dend_19 (entry count 56/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -0.100362, 14.3786, 1.07438, 0.83 ) }
    dend_29 { pt3dadd( 2.6648, 17.5219, 2.08533, 0.83 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 58/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -0.100362, 14.3786, 1.07438, 1.39 ) }
    dend_20 { pt3dadd( -1.10026, 19.6429, 3.38513, 1.39 ) }
    // Section: dend_10, id: dend_10, parent: dend_0 (entry count 60/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 16.7909, -15.1665, -15.5, 0.83 ) }
    dend_10 { pt3dadd( 18.1494, -16.5104, -14.7211, 0.83 ) }
    dend_10 { pt3dadd( 21.1163, -19.5437, -12.1205, 0.83 ) }
    dend_10 { pt3dadd( 23.7213, -22.207, -9.83702, 1.11 ) }
    dend_10 { pt3dadd( 27.779, -26.3555, -6.28019, 1.11 ) }
    dend_10 { pt3dadd( 30.3507, -28.9848, -4.02591, 1.11 ) }
    dend_10 { pt3dadd( 32.8728, -31.5633, -1.81517, 1.11 ) }
    dend_10 { pt3dadd( 38.1821, -36.9418, 3.58694, 1.11 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 68/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 16.7909, -15.1665, -15.5, 1.94 ) }
    dend_1 { pt3dadd( 18.2241, -15.7716, -19.0224, 1.94 ) }
    dend_1 { pt3dadd( 20.8181, -16.8668, -25.3977, 1.94 ) }
    dend_1 { pt3dadd( 23.1008, -17.8306, -31.008, 1.94 ) }
    dend_1 { pt3dadd( 25.676, -18.9178, -37.3372, 2.49 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 73/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( -6.7643, 39.4487, 1.4431, 0.55 ) }
    axon_1 { pt3dadd( -9.10353, 54.2652, 1.4431, 0.55 ) }
    axon_1 { pt3dadd( -11.4428, 69.0816, 1.4431, 0.55 ) }
    // Section: apic_13, id: apic_13, parent: apic_1 (entry count 76/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( -5.04635, -61.6864, 38.2439, 0.83 ) }
    apic_13 { pt3dadd( -8.22271, -62.6101, 40.113, 0.83 ) }
    apic_13 { pt3dadd( -10.7047, -63.3319, 41.5735, 0.83 ) }
    apic_13 { pt3dadd( -14.3766, -64.3996, 43.7343, 0.83 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 80/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( -5.04635, -61.6864, 38.2439, 1.11 ) }
    apic_2 { pt3dadd( -5.28275, -66.0023, 37.2408, 1.11 ) }
    apic_2 { pt3dadd( -5.38853, -69.3533, 36.4729, 1.11 ) }
    apic_2 { pt3dadd( -5.50807, -73.2805, 35.8538, 1.11 ) }
    apic_2 { pt3dadd( -5.53223, -76.1045, 35.5546, 1.11 ) }
    apic_2 { pt3dadd( -5.56456, -80.0328, 35.243, 1.11 ) }
    apic_2 { pt3dadd( -5.57471, -85.5192, 34.979, 1.11 ) }
    apic_2 { pt3dadd( -5.55451, -88.7495, 34.9949, 1.11 ) }
    apic_2 { pt3dadd( -5.44271, -94.6496, 35.3676, 1.11 ) }
    apic_2 { pt3dadd( -5.31989, -101.617, 35.9887, 1.11 ) }
    apic_2 { pt3dadd( -5.24557, -105.346, 36.4681, 1.11 ) }
    apic_2 { pt3dadd( -5.20531, -108.939, 37.0611, 1.11 ) }
    apic_2 { pt3dadd( -5.24796, -113.672, 38.1148, 1.11 ) }
    apic_2 { pt3dadd( -5.24026, -115.487, 38.5523, 1.11 ) }
    // Section: dend_31, id: dend_31, parent: dend_29 (entry count 94/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 2.6648, 17.5219, 2.08533, 0.28 ) }
    dend_31 { pt3dadd( 3.25069, 21.0339, 3.71968, 0.28 ) }
    dend_31 { pt3dadd( 4.70066, 29.7255, 7.7644, 0.28 ) }
    dend_31 { pt3dadd( 5.15418, 32.444, 9.02951, 0.28 ) }
    dend_31 { pt3dadd( 5.7005, 35.7188, 10.5534, 0.28 ) }
    // Section: dend_30, id: dend_30, parent: dend_29 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 2.6648, 17.5219, 2.08533, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_30 { pt3dadd( 4.83422, 19.6809, 3.68511, 0.55 ) }
    dend_30 { pt3dadd( 6.57375, 21.4017, 4.72248, 0.55 ) }
    dend_30 { pt3dadd( 7.05033, 21.9095, 4.98224, 0.83 ) }
    dend_30 { pt3dadd( 11.0701, 26.1738, 7.19268, 0.55 ) }
    dend_30 { pt3dadd( 12.1306, 27.3125, 7.79902, 0.55 ) }
    dend_30 { pt3dadd( 15.6721, 31.1688, 9.7755, 0.55 ) }
    dend_30 { pt3dadd( 17.0127, 32.6778, 10.5995, 0.55 ) }
    dend_30 { pt3dadd( 18.188, 34.0177, 11.2766, 0.55 ) }
    dend_30 { pt3dadd( 20.5278, 36.7771, 12.4683, 0.55 ) }
    dend_30 { pt3dadd( 23.3918, 40.3572, 13.8336, 0.55 ) }
    dend_30 { pt3dadd( 24.4442, 41.7936, 14.3762, 0.55 ) }
    dend_30 { pt3dadd( 26.5027, 44.6685, 15.5086, 0.55 ) }
    dend_30 { pt3dadd( 28.2719, 47.1589, 16.5276, 0.55 ) }
    dend_30 { pt3dadd( 29.5374, 48.9281, 17.2127, 0.28 ) }
    dend_30 { pt3dadd( 30.9801, 51.192, 17.8766, 0.55 ) }
    dend_30 { pt3dadd( 32.8585, 54.336, 18.6107, 0.28 ) }
    // Section: dend_26, id: dend_26, parent: dend_20 (entry count 16/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( -1.10026, 19.6429, 3.38513, 0.83 ) }
    dend_26 { pt3dadd( -3.44072, 21.0272, 3.20897, 0.83 ) }
    dend_26 { pt3dadd( -4.70932, 21.8619, 3.00327, 0.55 ) }
    dend_26 { pt3dadd( -5.53719, 22.3723, 2.84375, 0.55 ) }
    dend_26 { pt3dadd( -10.0149, 24.8902, 1.93938, 0.55 ) }
    dend_26 { pt3dadd( -15.6343, 28.0501, 0.80441, 0.55 ) }
    dend_26 { pt3dadd( -18.2515, 29.5218, 0.275807, 0.55 ) }
    dend_26 { pt3dadd( -21.6442, 31.4236, -0.4245, 0.55 ) }
    dend_26 { pt3dadd( -24.9908, 33.2112, -1.16025, 0.55 ) }
    dend_26 { pt3dadd( -26.665, 34.0464, -1.56024, 0.55 ) }
    // Section: dend_21, id: dend_21, parent: dend_20 (entry count 26/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -1.10026, 19.6429, 3.38513, 0.83 ) }
    dend_21 { pt3dadd( -1.20034, 22.2421, 8.75046, 0.83 ) }
    dend_21 { pt3dadd( -1.27642, 24.218, 12.8292, 1.11 ) }
    // Section: dend_18, id: dend_18, parent: dend_10 (entry count 29/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 38.1821, -36.9418, 3.58694, 0.55 ) }
    dend_18 { pt3dadd( 37.0801, -43.8271, 4.23637, 0.55 ) }
    dend_18 { pt3dadd( 36.3973, -48.3265, 4.58333, 0.55 ) }
    dend_18 { pt3dadd( 36.2203, -49.7454, 4.69665, 0.55 ) }
    dend_18 { pt3dadd( 35.7847, -54.1921, 5.09239, 0.83 ) }
    dend_18 { pt3dadd( 35.6452, -56.2147, 5.3199, 1.11 ) }
    dend_18 { pt3dadd( 35.5936, -60.0632, 5.79658, 0.83 ) }
    dend_18 { pt3dadd( 35.6965, -61.0786, 5.98469, 0.83 ) }
    dend_18 { pt3dadd( 35.9441, -62.8873, 6.26457, 0.28 ) }
    dend_18 { pt3dadd( 36.1946, -64.0466, 6.45756, 0.55 ) }
    dend_18 { pt3dadd( 36.7033, -66.0004, 6.78021, 0.28 ) }
    dend_18 { pt3dadd( 37.3945, -68.9983, 7.18402, 0.28 ) }
    dend_18 { pt3dadd( 37.7575, -70.6851, 7.44772, 0.28 ) }
    dend_18 { pt3dadd( 38.1644, -73.0615, 7.85566, 0.83 ) }
    dend_18 { pt3dadd( 38.3251, -74.2379, 8.07763, 0.83 ) }
    dend_18 { pt3dadd( 38.8276, -78.4306, 8.95701, 0.28 ) }
    dend_18 { pt3dadd( 38.9084, -79.192, 9.15204, 1.11 ) }
    dend_18 { pt3dadd( 39.0623, -81.1448, 9.74101, 0.83 ) }
    dend_18 { pt3dadd( 39.4618, -85.3864, 11.1629, 0.28 ) }
    dend_18 { pt3dadd( 39.6724, -87.0548, 11.8157, 0.83 ) }
    dend_18 { pt3dadd( 39.8355, -88.1471, 12.2801, 0.28 ) }
    dend_18 { pt3dadd( 40.283, -90.5018, 13.4251, 0.55 ) }
    dend_18 { pt3dadd( 40.9084, -93.7945, 15.0002, 0.28 ) }
    dend_18 { pt3dadd( 40.9721, -94.1575, 15.1674, 0.55 ) }
    dend_18 { pt3dadd( 41.2191, -95.7766, 15.8865, 0.28 ) }
    dend_18 { pt3dadd( 41.3058, -96.3189, 16.1159, 0.83 ) }
    dend_18 { pt3dadd( 41.6175, -98.2625, 16.9185, 0.28 ) }
    dend_18 { pt3dadd( 42.0155, -100.231, 17.6962, 1.11 ) }
    // Section: dend_11, id: dend_11, parent: dend_10 (entry count 57/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 38.1821, -36.9418, 3.58694, 0.83 ) }
    dend_11 { pt3dadd( 40.5858, -41.1008, 4.77013, 0.83 ) }
    dend_11 { pt3dadd( 41.3095, -42.9117, 5.08377, 0.83 ) }
    dend_11 { pt3dadd( 41.9789, -44.52, 5.39907, 0.83 ) }
    dend_11 { pt3dadd( 43.1393, -47.3082, 5.94568, 0.83 ) }
    dend_11 { pt3dadd( 44.1117, -49.6446, 6.40371, 0.83 ) }
    dend_11 { pt3dadd( 46.0833, -54.3821, 7.33246, 0.83 ) }
    dend_11 { pt3dadd( 46.5857, -56.2249, 7.55509, 0.83 ) }
    dend_11 { pt3dadd( 47.3063, -59.3816, 7.8608, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 25.676, -18.9178, -37.3372, 0.83 ) }
    dend_5 { pt3dadd( 32.6893, -15.2295, -35.9002, 0.83 ) }
    dend_5 { pt3dadd( 38.4591, -12.0762, -34.3358, 1.11 ) }
    dend_5 { pt3dadd( 42.6408, -9.79074, -33.202, 1.11 ) }
    dend_5 { pt3dadd( 48.598, -6.53501, -31.5868, 1.66 ) }
    dend_5 { pt3dadd( 51.9145, -4.72247, -30.6875, 1.11 ) }
    dend_5 { pt3dadd( 57.5447, -1.64541, -29.161, 1.11 ) }
    dend_5 { pt3dadd( 59.2056, -0.70355, -28.4646, 0.83 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 74/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 25.676, -18.9178, -37.3372, 1.39 ) }
    dend_2 { pt3dadd( 25.3458, -20.9519, -39.6192, 1.39 ) }
    dend_2 { pt3dadd( 25.0986, -22.4748, -41.3278, 1.11 ) }
    dend_2 { pt3dadd( 24.5082, -26.1117, -45.4081, 0.83 ) }
    dend_2 { pt3dadd( 24.3277, -27.2237, -46.6556, 0.83 ) }
    dend_2 { pt3dadd( 24.0271, -29.0755, -48.7332, 0.83 ) }
    // Section: apic_15, id: apic_15, parent: apic_13 (entry count 80/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( -14.3766, -64.3996, 43.7343, 0.83 ) }
    apic_15 { pt3dadd( -13.446, -68.1721, 45.9824, 0.83 ) }
    apic_15 { pt3dadd( -12.2063, -73.1977, 48.9774, 0.83 ) }
    apic_15 { pt3dadd( -10.4643, -80.2597, 53.1859, 0.83 ) }
    apic_15 { pt3dadd( -8.95345, -86.3843, 56.8357, 0.55 ) }
    apic_15 { pt3dadd( -7.53454, -92.1364, 60.2636, 0.28 ) }
    // Section: apic_14, id: apic_14, parent: apic_13 (entry count 86/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( -14.3766, -64.3996, 43.7343, 0.83 ) }
    apic_14 { pt3dadd( -16.3515, -63.4756, 45.5783, 0.83 ) }
    apic_14 { pt3dadd( -17.3534, -63.0068, 46.5139, 0.83 ) }
    apic_14 { pt3dadd( -19.9532, -61.7903, 48.9414, 0.83 ) }
    apic_14 { pt3dadd( -21.8572, -60.8994, 50.7192, 0.83 ) }
    apic_14 { pt3dadd( -24.0791, -59.8598, 52.7939, 0.83 ) }
    // Section: apic_12, id: apic_12, parent: apic_2 (entry count 92/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( -5.24026, -115.487, 38.5523, 0.55 ) }
    apic_12 { pt3dadd( -6.38384, -116.164, 38.3382, 0.55 ) }
    apic_12 { pt3dadd( -8.04797, -117.313, 38.226, 0.55 ) }
    apic_12 { pt3dadd( -10.1865, -118.969, 38.1816, 0.55 ) }
    apic_12 { pt3dadd( -11.6323, -120.224, 38.1735, 0.55 ) }
    apic_12 { pt3dadd( -12.7863, -121.225, 38.1671, 0.55 ) }
    apic_12 { pt3dadd( -13.5113, -121.855, 38.1631, 0.55 ) }
    apic_12 { pt3dadd( -15.779, -124.038, 38.2619, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    apic_12 { pt3dadd( -16.6379, -124.942, 38.3592, 0.28 ) }
    apic_12 { pt3dadd( -17.7923, -126.475, 38.5999, 0.55 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 2/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( -5.24026, -115.487, 38.5523, 1.11 ) }
    apic_3 { pt3dadd( -4.82712, -118.201, 38.4306, 1.11 ) }
    apic_3 { pt3dadd( -2.88228, -130.978, 37.8578, 1.11 ) }
    apic_3 { pt3dadd( -2.50138, -133.48, 37.7456, 1.11 ) }
    apic_3 { pt3dadd( -2.09172, -136.171, 37.625, 1.11 ) }
    apic_3 { pt3dadd( -1.22023, -141.897, 37.3683, 1.11 ) }
    apic_3 { pt3dadd( -0.413825, -147.194, 37.1308, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_26 (entry count 9/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -26.665, 34.0464, -1.56024, 0.28 ) }
    dend_28 { pt3dadd( -29.782, 34.033, -2.54006, 0.28 ) }
    dend_28 { pt3dadd( -31.4962, 33.9886, -3.4282, 0.28 ) }
    dend_28 { pt3dadd( -32.3785, 33.9281, -3.97022, 0.28 ) }
    dend_28 { pt3dadd( -34.4457, 33.7998, -5.6307, 0.55 ) }
    dend_28 { pt3dadd( -35.8623, 33.7119, -6.76853, 0.55 ) }
    dend_28 { pt3dadd( -37.9899, 33.5798, -8.47754, 0.55 ) }
    dend_28 { pt3dadd( -41.0445, 33.3611, -11.2853, 1.11 ) }
    dend_28 { pt3dadd( -42.7377, 33.2339, -13.0635, 0.55 ) }
    dend_28 { pt3dadd( -45.5098, 32.8822, -16.4077, 0.28 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 19/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( -26.665, 34.0464, -1.56024, 0.55 ) }
    dend_27 { pt3dadd( -29.8113, 35.0265, -3.12569, 0.55 ) }
    dend_27 { pt3dadd( -31.0791, 35.4976, -4.04114, 0.55 ) }
    dend_27 { pt3dadd( -32.0959, 35.8913, -4.73956, 0.55 ) }
    dend_27 { pt3dadd( -35.2248, 37.1545, -6.79193, 0.55 ) }
    dend_27 { pt3dadd( -38.7131, 38.6627, -8.97531, 0.55 ) }
    dend_27 { pt3dadd( -40.0958, 39.3057, -9.80832, 0.55 ) }
    dend_27 { pt3dadd( -42.9476, 41.0321, -12.12, 0.55 ) }
    dend_27 { pt3dadd( -45.1049, 42.6073, -14.0761, 0.28 ) }
    dend_27 { pt3dadd( -45.6678, 43.0593, -14.643, 0.55 ) }
    dend_27 { pt3dadd( -46.3614, 43.7156, -15.4746, 0.28 ) }
    dend_27 { pt3dadd( -46.7787, 44.2037, -15.9732, 0.55 ) }
    dend_27 { pt3dadd( -49.7319, 48.1239, -19.9278, 0.28 ) }
    dend_27 { pt3dadd( -50.0961, 48.6184, -20.4997, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 33/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -1.27642, 24.218, 12.8292, 0.55 ) }
    dend_25 { pt3dadd( -1.49839, 26.2032, 14.6422, 0.55 ) }
    dend_25 { pt3dadd( -1.85175, 28.8053, 16.5215, 0.55 ) }
    dend_25 { pt3dadd( -2.6891, 33.3963, 18.2909, 0.28 ) }
    dend_25 { pt3dadd( -3.18374, 37.1065, 19.3148, 0.83 ) }
    dend_25 { pt3dadd( -3.25937, 38.2018, 19.5435, 0.83 ) }
    dend_25 { pt3dadd( -3.3359, 41.6687, 20.1785, 0.83 ) }
    dend_25 { pt3dadd( -3.30048, 44.2508, 20.4753, 0.28 ) }
    dend_25 { pt3dadd( -2.90585, 52.687, 20.9735, 0.55 ) }
    dend_25 { pt3dadd( -2.64892, 56.0714, 20.9573, 0.55 ) }
    dend_25 { pt3dadd( -2.18358, 60.826, 20.8365, 0.55 ) }
    dend_25 { pt3dadd( -1.96813, 62.6361, 20.8367, 0.55 ) }
    dend_25 { pt3dadd( -1.68684, 64.648, 20.9193, 0.55 ) }
    dend_25 { pt3dadd( -1.50849, 65.6745, 20.9637, 0.28 ) }
    dend_25 { pt3dadd( -1.35589, 66.3668, 20.9546, 0.55 ) }
    dend_25 { pt3dadd( -1.11436, 68.6189, 20.6366, 0.28 ) }
    dend_25 { pt3dadd( -1.0765, 69.8212, 20.2917, 0.28 ) }
    dend_25 { pt3dadd( -1.06331, 70.7858, 19.9319, 0.83 ) }
    dend_25 { pt3dadd( -1.02619, 72.6704, 19.075, 0.28 ) }
    dend_25 { pt3dadd( -0.956093, 75.5599, 17.6112, 0.83 ) }
    dend_25 { pt3dadd( -0.87044, 77.4645, 16.5268, 0.28 ) }
    dend_25 { pt3dadd( -0.836417, 78.0861, 16.1033, 0.55 ) }
    dend_25 { pt3dadd( -0.746294, 79.0802, 15.3511, 0.28 ) }
    dend_25 { pt3dadd( -0.675383, 79.9459, 14.6206, 0.83 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 57/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -1.27642, 24.218, 12.8292, 0.83 ) }
    dend_22 { pt3dadd( -0.981857, 26.6563, 16.4538, 0.83 ) }
    dend_22 { pt3dadd( -0.510803, 30.5556, 22.25, 0.83 ) }
    dend_22 { pt3dadd( -0.18894, 33.2198, 26.2104, 0.83 ) }
    dend_22 { pt3dadd( -0.0455814, 34.4065, 27.9744, 0.83 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 62/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 47.3063, -59.3816, 7.8608, 0.55 ) }
    dend_17 { pt3dadd( 50.7605, -60.4303, 3.91827, 0.55 ) }
    dend_17 { pt3dadd( 53.199, -61.1707, 1.13501, 0.55 ) }
    dend_17 { pt3dadd( 54.7084, -61.629, -0.587758, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 66/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 47.3063, -59.3816, 7.8608, 0.83 ) }
    dend_12 { pt3dadd( 48.4311, -61.6549, 8.47578, 0.83 ) }
    dend_12 { pt3dadd( 49.1397, -62.5011, 9.05285, 0.83 ) }
    dend_12 { pt3dadd( 49.7869, -62.9443, 9.65148, 0.28 ) }
    dend_12 { pt3dadd( 51.211, -63.7487, 11.099, 0.55 ) }
    dend_12 { pt3dadd( 51.9256, -64.1831, 11.905, 0.28 ) }
    dend_12 { pt3dadd( 53.1812, -64.8802, 13.2822, 0.83 ) }
    dend_12 { pt3dadd( 57.0615, -66.9001, 17.6537, 0.83 ) }
    dend_12 { pt3dadd( 59.7694, -68.4245, 20.6322, 0.83 ) }
    dend_12 { pt3dadd( 60.6999, -68.9837, 21.6471, 0.83 ) }
    dend_12 { pt3dadd( 62.9428, -70.2917, 24.0852, 0.83 ) }
    dend_12 { pt3dadd( 66.2957, -72.3036, 27.7838, 0.55 ) }
    dend_12 { pt3dadd( 68.3313, -73.6361, 30.0104, 0.55 ) }
    dend_12 { pt3dadd( 70.4469, -75.4957, 32.1239, 0.55 ) }
    dend_12 { pt3dadd( 70.9288, -76.0028, 32.5669, 0.83 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 81/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 59.2056, -0.70355, -28.4646, 0.83 ) }
    dend_7 { pt3dadd( 59.9527, 0.287796, -28.7879, 0.83 ) }
    dend_7 { pt3dadd( 62.5774, 3.77095, -29.9238, 0.83 ) }
    dend_7 { pt3dadd( 65.6023, 7.78513, -31.2329, 0.83 ) }
    dend_7 { pt3dadd( 67.5121, 10.3196, -32.0595, 0.83 ) }
    dend_7 { pt3dadd( 69.8779, 13.4592, -33.0834, 0.28 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 59.2056, -0.70355, -28.4646, 1.39 ) }
    dend_6 { pt3dadd( 59.7893, -0.521695, -29.6704, 1.39 ) }
    dend_6 { pt3dadd( 60.3222, -0.367264, -30.7322, 0.28 ) }
    dend_6 { pt3dadd( 62.1467, 0.0236283, -34.0946, 0.83 ) }
    dend_6 { pt3dadd( 63.3845, 0.205988, -36.4426, 0.83 ) }
    dend_6 { pt3dadd( 66.3922, 0.624365, -41.7797, 1.66 ) }
    dend_6 { pt3dadd( 67.3418, 0.740872, -43.3458, 0.28 ) }
    dend_6 { pt3dadd( 68.3593, 0.816592, -44.8967, 0.83 ) }
    dend_6 { pt3dadd( 69.2943, 0.87704, -46.2617, 0.83 ) }
    dend_6 { pt3dadd( 71.1389, 0.978049, -48.8865, 1.39 ) }
    dend_6 { pt3dadd( 72.5461, 1.02923, -50.8706, 0.55 ) }
    dend_6 { pt3dadd( 74.3492, 0.971894, -53.3342, 0.55 ) }
    dend_6 { pt3dadd( 75.3828, 0.941392, -54.8083, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_6 { pt3dadd( 77.9433, 0.898647, -58.4719, 0.28 ) }
    dend_6 { pt3dadd( 80.2337, 0.898725, -61.8484, 0.28 ) }
    dend_6 { pt3dadd( 82.881, 0.846789, -65.7208, 0.55 ) }
    dend_6 { pt3dadd( 84.5035, 0.716166, -68.3813, 0.55 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 4/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 24.0271, -29.0755, -48.7332, 0.55 ) }
    dend_4 { pt3dadd( 28.142, -27.8757, -51.6931, 0.55 ) }
    dend_4 { pt3dadd( 30.3978, -26.9869, -53.5344, 2.49 ) }
    dend_4 { pt3dadd( 33.8405, -24.9935, -57.5086, 2.49 ) }
    dend_4 { pt3dadd( 33.4273, -24.1786, -59.4297, 0.55 ) }
    dend_4 { pt3dadd( 33.0465, -23.279, -61.5799, 2.77 ) }
    dend_4 { pt3dadd( 32.6806, -21.8617, -64.4001, 0.28 ) }
    dend_4 { pt3dadd( 32.3625, -20.8152, -66.2158, 0.28 ) }
    dend_4 { pt3dadd( 32.0954, -19.3229, -68.7033, 1.66 ) }
    dend_4 { pt3dadd( 32.1173, -15.682, -74.209, 0.28 ) }
    dend_4 { pt3dadd( 32.7097, -12.6922, -78.5264, 1.66 ) }
    dend_4 { pt3dadd( 33.4524, -10.5443, -81.4914, 0.28 ) }
    dend_4 { pt3dadd( 33.9249, -9.49839, -82.9074, 1.66 ) }
    dend_4 { pt3dadd( 36.3104, -5.31658, -87.9728, 0.55 ) }
    dend_4 { pt3dadd( 37.6339, -3.24753, -90.0545, 0.55 ) }
    dend_4 { pt3dadd( 39.2211, -0.883631, -91.9552, 0.55 ) }
    dend_4 { pt3dadd( 40.2272, 0.6685, -92.9436, 0.55 ) }
    dend_4 { pt3dadd( 43.0324, 5.20401, -95.3079, 1.39 ) }
    dend_4 { pt3dadd( 44.063, 6.95052, -95.9389, 0.55 ) }
    dend_4 { pt3dadd( 44.9016, 8.4463, -96.202, 0.55 ) }
    dend_4 { pt3dadd( 45.683, 9.74876, -96.5481, 0.28 ) }
    dend_4 { pt3dadd( 48.1586, 13.249, -98.262, 0.55 ) }
    dend_4 { pt3dadd( 49.5506, 14.7051, -99.3728, 2.22 ) }
    dend_4 { pt3dadd( 51.9658, 16.4439, -101.418, 0.28 ) }
    dend_4 { pt3dadd( 53.2565, 17.0762, -102.693, 1.11 ) }
    dend_4 { pt3dadd( 57.5529, 18.1102, -108.316, 1.11 ) }
    dend_4 { pt3dadd( 60.971, 17.9926, -113.79, 0.28 ) }
    dend_4 { pt3dadd( 61.1805, 17.9108, -114.204, 0.83 ) }
    dend_4 { pt3dadd( 61.7924, 17.5151, -115.565, 0.28 ) }
    dend_4 { pt3dadd( 61.9594, 17.3506, -115.985, 0.83 ) }
    dend_4 { pt3dadd( 64.3181, 14.4925, -121.982, 0.28 ) }
    dend_4 { pt3dadd( 65.1729, 13.3692, -123.922, 0.83 ) }
    dend_4 { pt3dadd( 66.7641, 11.319, -127.3, 0.55 ) }
    dend_4 { pt3dadd( 67.3149, 10.7138, -128.576, 0.83 ) }
    dend_4 { pt3dadd( 68.0659, 9.97401, -130.296, 0.28 ) }
    dend_4 { pt3dadd( 68.4317, 9.63216, -131.17, 1.11 ) }
    dend_4 { pt3dadd( 68.9657, 9.13166, -132.49, 0.55 ) }
    dend_4 { pt3dadd( 70.3752, 7.62652, -136.415, 1.66 ) }
    dend_4 { pt3dadd( 72.6293, 4.35525, -144.264, 0.55 ) }
    dend_4 { pt3dadd( 72.9852, 3.66769, -145.769, 1.39 ) }
    dend_4 { pt3dadd( 74.1517, 0.711485, -151.685, 0.55 ) }
    dend_4 { pt3dadd( 74.2917, 0.0959072, -152.731, 0.55 ) }
    dend_4 { pt3dadd( 74.3898, -1.5492, -154.928, 0.83 ) }
    dend_4 { pt3dadd( 74.2397, -3.46527, -156.647, 0.28 ) }
    dend_4 { pt3dadd( 74.0398, -4.36386, -157.137, 0.55 ) }
    dend_4 { pt3dadd( 73.0833, -7.66905, -158.916, 0.28 ) }
    dend_4 { pt3dadd( 72.8266, -8.53131, -159.569, 0.55 ) }
    dend_4 { pt3dadd( 72.0385, -12.1056, -163.124, 0.28 ) }
    dend_4 { pt3dadd( 71.9451, -12.758, -163.985, 0.83 ) }
    dend_4 { pt3dadd( 71.9095, -13.3984, -165.02, 0.55 ) }
    dend_4 { pt3dadd( 71.8443, -15.4516, -168.71, 1.11 ) }
    dend_4 { pt3dadd( 71.9715, -19.0131, -175.918, 0.28 ) }
    dend_4 { pt3dadd( 72.0318, -19.7798, -177.67, 0.28 ) }
    dend_4 { pt3dadd( 72.2383, -21.2969, -181.624, 1.39 ) }
    dend_4 { pt3dadd( 72.5186, -22.9053, -186.074, 0.55 ) }
    dend_4 { pt3dadd( 72.6142, -23.2933, -187.213, 0.55 ) }
    dend_4 { pt3dadd( 73.1675, -24.9171, -192.303, 0.55 ) }
    dend_4 { pt3dadd( 73.8187, -26.6413, -198.013, 0.28 ) }
    dend_4 { pt3dadd( 74.2505, -27.9068, -202.632, 1.39 ) }
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 63/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 24.0271, -29.0755, -48.7332, 2.22 ) }
    dend_3 { pt3dadd( 24.6669, -30.2421, -49.631, 2.22 ) }
    dend_3 { pt3dadd( 25.568, -32.0904, -51.5107, 0.55 ) }
    dend_3 { pt3dadd( 26.332, -33.7619, -53.5028, 2.77 ) }
    dend_3 { pt3dadd( 27.0391, -35.0084, -55.3312, 0.55 ) }
    dend_3 { pt3dadd( 28.4618, -37.3776, -58.9919, 0.55 ) }
    dend_3 { pt3dadd( 29.5192, -39.2045, -61.8179, 0.55 ) }
    dend_3 { pt3dadd( 29.6738, -39.5014, -62.3331, 1.11 ) }
    dend_3 { pt3dadd( 30.5093, -41.1288, -65.6843, 2.77 ) }
    dend_3 { pt3dadd( 31.7, -43.2739, -70.5533, 0.28 ) }
    dend_3 { pt3dadd( 31.8046, -43.4424, -70.9345, 0.28 ) }
    dend_3 { pt3dadd( 32.1568, -43.9007, -71.8501, 0.83 ) }
    dend_3 { pt3dadd( 33.4299, -45.3177, -74.5645, 0.28 ) }
    dend_3 { pt3dadd( 34.5504, -46.4114, -76.6793, 2.22 ) }
    dend_3 { pt3dadd( 35.2186, -46.8805, -77.6311, 0.28 ) }
    dend_3 { pt3dadd( 35.6572, -47.1284, -78.0914, 2.22 ) }
    dend_3 { pt3dadd( 36.718, -47.679, -79.1053, 0.55 ) }
    dend_3 { pt3dadd( 37.5133, -48.0744, -79.8553, 0.55 ) }
    dend_3 { pt3dadd( 38.0793, -48.3656, -80.5373, 2.22 ) }
    dend_3 { pt3dadd( 40.2413, -49.5739, -83.6816, 0.28 ) }
    dend_3 { pt3dadd( 40.5864, -49.7991, -84.3402, 1.11 ) }
    dend_3 { pt3dadd( 42.0008, -50.8175, -87.4814, 0.28 ) }
    dend_3 { pt3dadd( 42.8569, -51.5074, -89.6391, 1.39 ) }
    dend_3 { pt3dadd( 44.9786, -53.3841, -95.6541, 0.28 ) }
    dend_3 { pt3dadd( 45.3718, -53.7848, -96.8759, 1.39 ) }
    dend_3 { pt3dadd( 46.9108, -55.6078, -102.003, 0.28 ) }
    dend_3 { pt3dadd( 46.9652, -55.6739, -102.195, 0.83 ) }
    dend_3 { pt3dadd( 47.087, -55.8277, -102.645, 0.83 ) }
    dend_3 { pt3dadd( 47.8522, -56.9029, -105.428, 0.55 ) }
    dend_3 { pt3dadd( 48.2697, -57.6722, -106.816, 0.28 ) }
    dend_3 { pt3dadd( 48.5379, -58.2336, -107.699, 1.11 ) }
    // Section: apic_11, id: apic_11, parent: apic_3 (entry count 94/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( -0.413825, -147.194, 37.1308, 0.83 ) }
    apic_11 { pt3dadd( 2.03033, -148.139, 42.9892, 0.83 ) }
    apic_11 { pt3dadd( 3.51283, -148.892, 46.155, 0.83 ) }
    apic_11 { pt3dadd( 4.33956, -149.311, 47.9205, 0.83 ) }
    apic_11 { pt3dadd( 7.53806, -150.936, 54.7508, 0.83 ) }
    apic_11 { pt3dadd( 9.04156, -151.699, 57.9614, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    apic_11 { pt3dadd( 9.6444, -152.005, 59.2488, 0.28 ) }
    apic_11 { pt3dadd( 10.0662, -152.279, 59.8607, 0.28 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 2/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( -0.413825, -147.194, 37.1308, 1.11 ) }
    apic_4 { pt3dadd( -0.00885254, -150.735, 37.7233, 1.11 ) }
    apic_4 { pt3dadd( 0.277358, -152.914, 37.9813, 1.11 ) }
    apic_4 { pt3dadd( 0.541465, -154.632, 38.1209, 1.11 ) }
    apic_4 { pt3dadd( 0.983456, -157.449, 38.2769, 1.11 ) }
    apic_4 { pt3dadd( 1.26447, -159.387, 38.3505, 1.11 ) }
    apic_4 { pt3dadd( 1.71873, -162.479, 38.4311, 1.11 ) }
    apic_4 { pt3dadd( 2.24316, -165.927, 38.3952, 1.11 ) }
    apic_4 { pt3dadd( 2.58225, -168.134, 38.3567, 1.11 ) }
    apic_4 { pt3dadd( 3.08338, -171.38, 38.2615, 1.11 ) }
    apic_4 { pt3dadd( 3.62194, -175.245, 38.0786, 1.11 ) }
    apic_4 { pt3dadd( 3.83424, -176.792, 38.0056, 1.11 ) }
    apic_4 { pt3dadd( 4.18726, -180.243, 37.872, 1.11 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 15/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -0.0455814, 34.4065, 27.9744, 0.55 ) }
    dend_24 { pt3dadd( -0.0569959, 36.1631, 27.8625, 0.55 ) }
    dend_24 { pt3dadd( 0.00934857, 38.6348, 27.8212, 0.55 ) }
    dend_24 { pt3dadd( 0.174091, 44.412, 27.8792, 0.55 ) }
    dend_24 { pt3dadd( 0.436096, 49.9642, 27.8579, 0.28 ) }
    dend_24 { pt3dadd( 0.525213, 51.7946, 28.0352, 0.28 ) }
    dend_24 { pt3dadd( 0.569116, 52.7237, 28.1766, 0.55 ) }
    dend_24 { pt3dadd( 0.686395, 54.9224, 28.7008, 0.28 ) }
    dend_24 { pt3dadd( 0.765914, 56.3348, 29.2914, 0.28 ) }
    dend_24 { pt3dadd( 0.840419, 58.4689, 30.5993, 0.55 ) }
    dend_24 { pt3dadd( 0.645631, 63.311, 33.7058, 0.28 ) }
    dend_24 { pt3dadd( 0.624575, 63.811, 34.0524, 0.28 ) }
    dend_24 { pt3dadd( 0.556455, 64.7851, 34.7935, 0.55 ) }
    dend_24 { pt3dadd( 0.181299, 68.034, 37.5902, 0.28 ) }
    dend_24 { pt3dadd( 0.176269, 68.0718, 37.6271, 0.55 ) }
    dend_24 { pt3dadd( -0.160422, 69.6471, 39.4188, 0.28 ) }
    dend_24 { pt3dadd( -0.47058, 70.8661, 40.5872, 0.55 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 32/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -0.0455814, 34.4065, 27.9744, 0.55 ) }
    dend_23 { pt3dadd( -0.648912, 38.9166, 30.9792, 0.55 ) }
    dend_23 { pt3dadd( -1.28196, 43.6487, 34.132, 0.55 ) }
    dend_23 { pt3dadd( -2.05005, 49.3904, 37.9574, 0.55 ) }
    dend_23 { pt3dadd( -2.5356, 53.02, 40.3756, 0.55 ) }
    dend_23 { pt3dadd( -3.0722, 57.0311, 43.048, 0.55 ) }
    dend_23 { pt3dadd( -3.44603, 59.8256, 44.9098, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 39/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 70.9288, -76.0028, 32.5669, 0.55 ) }
    dend_16 { pt3dadd( 71.1523, -77.9069, 32.4531, 0.55 ) }
    dend_16 { pt3dadd( 71.3382, -79.4914, 32.3584, 0.28 ) }
    dend_16 { pt3dadd( 71.4367, -80.3313, 32.3082, 0.28 ) }
    dend_16 { pt3dadd( 71.5944, -81.6754, 32.2279, 0.55 ) }
    dend_16 { pt3dadd( 71.8143, -83.5499, 32.1158, 0.28 ) }
    dend_16 { pt3dadd( 72.466, -89.1042, 31.7839, 0.55 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 46/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 70.9288, -76.0028, 32.5669, 0.28 ) }
    dend_13 { pt3dadd( 71.6792, -78.0832, 34.6152, 0.28 ) }
    dend_13 { pt3dadd( 71.7943, -78.3855, 34.8982, 0.55 ) }
    dend_13 { pt3dadd( 72.2736, -79.5083, 35.8265, 0.28 ) }
    dend_13 { pt3dadd( 72.6385, -80.2491, 36.3228, 0.55 ) }
    dend_13 { pt3dadd( 73.2477, -81.4454, 37.1105, 0.28 ) }
    dend_13 { pt3dadd( 73.5142, -81.9686, 37.4551, 0.55 ) }
    dend_13 { pt3dadd( 74.2166, -83.2562, 38.1978, 0.28 ) }
    dend_13 { pt3dadd( 75.2207, -85.0747, 39.2245, 0.55 ) }
    dend_13 { pt3dadd( 76.4464, -87.2876, 40.4796, 0.28 ) }
    dend_13 { pt3dadd( 77.3242, -88.8197, 41.2884, 0.55 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 57/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 69.8779, 13.4592, -33.0834, 0.55 ) }
    dend_9 { pt3dadd( 72.5395, 19.4932, -37.6676, 0.55 ) }
    dend_9 { pt3dadd( 73.0436, 20.8935, -38.6198, 0.55 ) }
    dend_9 { pt3dadd( 73.2165, 21.5983, -39.022, 0.83 ) }
    dend_9 { pt3dadd( 73.404, 22.5929, -39.4399, 0.28 ) }
    dend_9 { pt3dadd( 73.6053, 23.8399, -39.8844, 0.83 ) }
    dend_9 { pt3dadd( 74.1598, 28.0366, -41.2254, 0.28 ) }
    dend_9 { pt3dadd( 74.1665, 28.8673, -41.3646, 0.55 ) }
    dend_9 { pt3dadd( 74.1349, 31.3457, -41.7977, 0.28 ) }
    dend_9 { pt3dadd( 74.0724, 35.8833, -42.5792, 0.28 ) }
    dend_9 { pt3dadd( 74.0726, 36.4673, -42.6721, 0.83 ) }
    dend_9 { pt3dadd( 74.0971, 37.4332, -42.787, 0.28 ) }
    dend_9 { pt3dadd( 74.1479, 38.8696, -42.7871, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 70/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 69.8779, 13.4592, -33.0834, 0.55 ) }
    dend_8 { pt3dadd( 73.3876, 15.3711, -33.8203, 0.55 ) }
    dend_8 { pt3dadd( 75.7244, 16.7268, -34.2957, 0.55 ) }
    dend_8 { pt3dadd( 79.5446, 19.0235, -34.9816, 1.94 ) }
    dend_8 { pt3dadd( 81.4799, 20.235, -35.4465, 0.55 ) }
    dend_8 { pt3dadd( 84.59, 22.2881, -36.2597, 0.55 ) }
    dend_8 { pt3dadd( 87.4271, 24.2358, -37.0054, 0.55 ) }
    dend_8 { pt3dadd( 89.7004, 25.8894, -37.7369, 1.11 ) }
    dend_8 { pt3dadd( 92.0191, 27.5224, -38.4384, 1.11 ) }
    dend_8 { pt3dadd( 95.4039, 29.7182, -39.5208, 0.28 ) }
    dend_8 { pt3dadd( 97.8196, 31.1808, -40.2999, 1.11 ) }
    dend_8 { pt3dadd( 99.9003, 32.3049, -40.9923, 0.83 ) }
    dend_8 { pt3dadd( 102.54, 33.3671, -41.9139, 0.28 ) }
    dend_8 { pt3dadd( 105.668, 34.2864, -43.2389, 0.83 ) }
    dend_8 { pt3dadd( 109.511, 35.0764, -45.0893, 0.55 ) }
    dend_8 { pt3dadd( 110.607, 35.2587, -45.611, 0.55 ) }
    dend_8 { pt3dadd( 113.556, 35.7094, -47.3237, 0.28 ) }
    dend_8 { pt3dadd( 116.243, 36.1739, -49.0343, 1.11 ) }
    dend_8 { pt3dadd( 120.714, 37.1578, -52.0173, 0.55 ) }
    dend_8 { pt3dadd( 124.121, 38.1399, -54.4029, 0.28 ) }
    dend_8 { pt3dadd( 126.058, 38.8934, -55.7214, 1.94 ) }
    dend_8 { pt3dadd( 130.312, 41.0028, -58.7159, 0.28 ) }
    dend_8 { pt3dadd( 131.52, 41.6862, -59.5984, 0.83 ) }
    dend_8 { pt3dadd( 132.56, 42.3649, -60.4043, 0.28 ) }
    dend_8 { pt3dadd( 133.987, 43.5759, -61.3718, 1.11 ) }
    dend_8 { pt3dadd( 135.638, 45.4438, -62.5239, 0.28 ) }
    dend_8 { pt3dadd( 135.989, 45.9335, -62.7786, 0.55 ) }
    // Section: apic_8, id: apic_8, parent: apic_4 (entry count 97/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 4.18726, -180.243, 37.872, 0.55 ) }
    apic_8 { pt3dadd( 7.16028, -185.638, 37.1447, 0.55 ) }
    apic_8 { pt3dadd( 8.70679, -188.138, 36.7674, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    apic_8 { pt3dadd( 10.6397, -191.263, 36.2957, 0.55 ) }
    apic_8 { pt3dadd( 12.9957, -195.072, 35.7208, 0.55 ) }
    apic_8 { pt3dadd( 16.4767, -200.699, 34.8714, 0.55 ) }
    apic_8 { pt3dadd( 19.8837, -206.207, 34.04, 0.55 ) }
    apic_8 { pt3dadd( 22.7936, -210.683, 33.3307, 0.55 ) }
    // Section: apic_5, id: apic_5, parent: apic_4 (entry count 5/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 4.18726, -180.243, 37.872, 0.83 ) }
    apic_5 { pt3dadd( 4.36549, -181.992, 37.9325, 0.83 ) }
    apic_5 { pt3dadd( 4.46929, -184.432, 38.0773, 0.83 ) }
    apic_5 { pt3dadd( 4.57136, -187.985, 38.2909, 0.83 ) }
    apic_5 { pt3dadd( 4.56607, -190.336, 38.4461, 0.83 ) }
    apic_5 { pt3dadd( 4.54563, -193.175, 38.6193, 0.83 ) }
    apic_5 { pt3dadd( 4.52245, -195.304, 38.7389, 0.83 ) }
    apic_5 { pt3dadd( 4.39374, -199.249, 38.9845, 0.83 ) }
    apic_5 { pt3dadd( 4.28097, -201.147, 39.1074, 0.83 ) }
    apic_5 { pt3dadd( 4.06716, -204.518, 39.2902, 0.83 ) }
    apic_5 { pt3dadd( 3.93672, -206.677, 39.3767, 0.83 ) }
    apic_5 { pt3dadd( 3.78194, -209.007, 39.4223, 0.83 ) }
    apic_5 { pt3dadd( 3.69043, -210.741, 39.4456, 0.83 ) }
    apic_5 { pt3dadd( 3.54993, -215.616, 39.455, 0.83 ) }
    apic_5 { pt3dadd( 3.48306, -217.678, 39.4626, 0.83 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 77.3242, -88.8197, 41.2884, 0.28 ) }
    dend_15 { pt3dadd( 79.0089, -91.541, 42.1504, 0.28 ) }
    dend_15 { pt3dadd( 79.3079, -92.0239, 42.3033, 0.55 ) }
    dend_15 { pt3dadd( 80.3728, -93.7442, 42.8481, 0.28 ) }
    dend_15 { pt3dadd( 81.1836, -95.0538, 43.2629, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 25/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 77.3242, -88.8197, 41.2884, 0.28 ) }
    dend_14 { pt3dadd( 78.5519, -94.4051, 45.6058, 0.28 ) }
    dend_14 { pt3dadd( 79.0001, -96.4432, 47.1812, 0.83 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 28/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 22.7936, -210.683, 33.3307, 0.55 ) }
    apic_10 { pt3dadd( 24.7826, -212.594, 32.4387, 0.55 ) }
    apic_10 { pt3dadd( 26.5049, -214.432, 31.6675, 0.55 ) }
    apic_10 { pt3dadd( 27.4289, -215.545, 31.0281, 0.28 ) }
    apic_10 { pt3dadd( 28.3451, -216.82, 30.152, 0.55 ) }
    apic_10 { pt3dadd( 29.3772, -218.298, 29.1007, 0.28 ) }
    apic_10 { pt3dadd( 30.0866, -219.354, 28.3678, 0.55 ) }
    apic_10 { pt3dadd( 30.6305, -220.211, 27.7645, 0.55 ) }
    apic_10 { pt3dadd( 33.0731, -224.167, 25.0079, 0.55 ) }
    apic_10 { pt3dadd( 35.2936, -227.798, 22.1698, 0.55 ) }
    apic_10 { pt3dadd( 36.2436, -229.219, 20.9118, 0.28 ) }
    apic_10 { pt3dadd( 37.1083, -230.43, 19.6402, 0.55 ) }
    apic_10 { pt3dadd( 37.5913, -231.026, 18.9084, 0.28 ) }
    apic_10 { pt3dadd( 39.3011, -232.842, 16.1685, 0.55 ) }
    apic_10 { pt3dadd( 41.3031, -234.734, 12.8717, 0.28 ) }
    apic_10 { pt3dadd( 42.3405, -235.601, 11.117, 0.55 ) }
    apic_10 { pt3dadd( 44.7208, -237.489, 6.83757, 0.28 ) }
    apic_10 { pt3dadd( 45.1119, -237.776, 6.10615, 0.55 ) }
    apic_10 { pt3dadd( 46.9867, -239.125, 2.46028, 0.28 ) }
    apic_10 { pt3dadd( 47.8582, -239.779, 0.674899, 0.83 ) }
    apic_10 { pt3dadd( 48.4157, -240.195, -0.289601, 0.83 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 49/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 22.7936, -210.683, 33.3307, 0.28 ) }
    apic_9 { pt3dadd( 26.6422, -213.809, 33.79, 0.28 ) }
    apic_9 { pt3dadd( 29.3015, -215.97, 34.1074, 0.28 ) }
    apic_9 { pt3dadd( 32.3698, -218.462, 34.4736, 0.28 ) }
    // Section: apic_7, id: apic_7, parent: apic_5 (entry count 53/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 3.48306, -217.678, 39.4626, 0.55 ) }
    apic_7 { pt3dadd( 4.41741, -221.877, 38.8674, 0.55 ) }
    apic_7 { pt3dadd( 5.31074, -226.577, 38.2898, 0.55 ) }
    apic_7 { pt3dadd( 6.14433, -230.966, 37.7569, 0.55 ) }
    apic_7 { pt3dadd( 6.75908, -233.633, 37.3775, 0.55 ) }
    apic_7 { pt3dadd( 7.45959, -236.514, 36.9496, 0.55 ) }
    apic_7 { pt3dadd( 8.56796, -241.102, 36.2738, 0.55 ) }
    apic_7 { pt3dadd( 9.15919, -243.609, 35.8338, 0.55 ) }
    apic_7 { pt3dadd( 10.5474, -248.986, 34.7662, 0.55 ) }
    apic_7 { pt3dadd( 11.7861, -252.925, 34.0856, 0.55 ) }
    apic_7 { pt3dadd( 12.2405, -254.176, 33.8906, 0.55 ) }
    apic_7 { pt3dadd( 12.9542, -255.968, 33.6443, 0.55 ) }
    apic_7 { pt3dadd( 14.8754, -260.742, 33.3472, 0.55 ) }
    apic_7 { pt3dadd( 17.3656, -266.475, 33.5297, 0.55 ) }
    apic_7 { pt3dadd( 19.643, -271.77, 34.0734, 0.55 ) }
    apic_7 { pt3dadd( 19.8854, -272.352, 34.1717, 0.55 ) }
    apic_7 { pt3dadd( 20.4242, -273.535, 34.4296, 0.55 ) }
    apic_7 { pt3dadd( 22.4067, -277.495, 35.7247, 0.55 ) }
    apic_7 { pt3dadd( 23.6316, -279.848, 37.1624, 0.55 ) }
    // Section: apic_6, id: apic_6, parent: apic_5 (entry count 72/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 3.48306, -217.678, 39.4626, 0.83 ) }
    apic_6 { pt3dadd( 3.27451, -220.241, 39.5397, 0.83 ) }
    apic_6 { pt3dadd( 3.05653, -222.384, 39.4252, 0.83 ) }
    apic_6 { pt3dadd( 2.69717, -225.414, 39.2275, 0.83 ) }
    apic_6 { pt3dadd( 2.35203, -229.082, 39.0143, 0.83 ) }
    apic_6 { pt3dadd( 2.22947, -230.487, 38.9481, 0.83 ) }
    apic_6 { pt3dadd( 1.98981, -234.039, 38.7752, 0.83 ) }
    apic_6 { pt3dadd( 1.70819, -240.494, 38.4673, 0.83 ) }
    apic_6 { pt3dadd( 1.65797, -242.834, 38.3593, 0.83 ) }
    apic_6 { pt3dadd( 1.5961, -247.691, 38.1896, 0.83 ) }
    apic_6 { pt3dadd( 1.62444, -251.116, 38.0906, 0.83 ) }
    apic_6 { pt3dadd( 1.65865, -253.953, 38.0621, 0.83 ) }
    apic_6 { pt3dadd( 1.69527, -256.378, 38.107, 0.83 ) }
    apic_6 { pt3dadd( 1.74065, -257.652, 38.1684, 0.83 ) }
    apic_6 { pt3dadd( 1.74412, -260.764, 38.3275, 0.83 ) }
    apic_6 { pt3dadd( 1.58253, -263.104, 38.54, 0.55 ) }
    apic_6 { pt3dadd( 1.3558, -264.898, 38.7798, 0.55 ) }
    apic_6 { pt3dadd( 0.618884, -268.72, 39.4471, 0.55 ) }
    apic_6 { pt3dadd( 0.14069, -270.619, 39.8332, 0.28 ) }
    apic_6 { pt3dadd( -0.712003, -273.115, 40.339, 0.55 ) }
    apic_6 { pt3dadd( -2.08941, -276.39, 41.0055, 0.55 ) }
    apic_6 { pt3dadd( -3.01899, -278.29, 41.3932, 0.28 ) }
    apic_6 { pt3dadd( -3.62134, -279.372, 41.6163, 0.83 ) }
    apic_6 { pt3dadd( -5.163, -281.752, 42.1478, 0.83 ) }
    apic_6 { pt3dadd( -7.25426, -284.778, 42.7576, 0.83 ) }
    apic_6 { pt3dadd( -8.0936, -285.921, 42.9245, 0.28 ) }
    apic_6 { pt3dadd( -9.45338, -287.576, 43.0234, 0.83 ) }
    apic_6 { pt3dadd( -10.8796, -289.219, 43.0726, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_2 = new SectionList()
    apic_0 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    apic_16 ModelViewParmSubset_2.append()
    apic_1 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    apic_13 ModelViewParmSubset_2.append()
    apic_2 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_26 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    apic_15 ModelViewParmSubset_2.append()
    apic_14 ModelViewParmSubset_2.append()
    apic_12 ModelViewParmSubset_2.append()
    apic_3 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    apic_11 ModelViewParmSubset_2.append()
    apic_4 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    apic_8 ModelViewParmSubset_2.append()
    apic_5 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    apic_10 ModelViewParmSubset_2.append()
    apic_9 ModelViewParmSubset_2.append()
    apic_7 ModelViewParmSubset_2.append()
    apic_6 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, apic_0, dend_19, dend_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    apic_0 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    apic_16 ModelViewParmSubset_4.append()
    apic_1 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    apic_13 ModelViewParmSubset_4.append()
    apic_2 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    apic_15 ModelViewParmSubset_4.append()
    apic_14 ModelViewParmSubset_4.append()
    apic_12 ModelViewParmSubset_4.append()
    apic_3 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    apic_11 ModelViewParmSubset_4.append()
    apic_4 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()
    apic_8 ModelViewParmSubset_4.append()
    apic_5 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    apic_10 ModelViewParmSubset_4.append()
    apic_9 ModelViewParmSubset_4.append()
    apic_7 ModelViewParmSubset_4.append()
    apic_6 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[apic_0, dend_19, dend_0, axon_0, apic_16, apic_1, dend_29, dend_20, dend_10, dend_1, axon_1, apic_13, apic_2, dend_31, dend_30, dend_26, dend_21, dend_18, dend_11, dend_5, dend_2, apic_15, apic_14, apic_12, apic_3, dend_28, dend_27, dend_25, dend_22, dend_17, dend_12, dend_7, dend_6, dend_4, dend_3, apic_11, apic_4, dend_24, dend_23, dend_16, dend_13, dend_9, dend_8, apic_8, apic_5, dend_15, dend_14, apic_10, apic_9, apic_7, apic_6]}
    ModelViewParmSubset_5 = new SectionList()
    apic_0 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    apic_16 ModelViewParmSubset_5.append()
    apic_1 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    apic_13 ModelViewParmSubset_5.append()
    apic_2 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_26 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    apic_15 ModelViewParmSubset_5.append()
    apic_14 ModelViewParmSubset_5.append()
    apic_12 ModelViewParmSubset_5.append()
    apic_3 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    apic_11 ModelViewParmSubset_5.append()
    apic_4 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    apic_8 ModelViewParmSubset_5.append()
    apic_5 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    apic_10 ModelViewParmSubset_5.append()
    apic_9 ModelViewParmSubset_5.append()
    apic_7 ModelViewParmSubset_5.append()
    apic_6 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[apic_16]}
    OneSecGrp_SectionRef_6 = new SectionList()
    apic_16 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[apic_2]}
    OneSecGrp_SectionRef_14 = new SectionList()
    apic_2 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_30 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_18 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_25 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_6 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_4 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_3 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_24 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_8 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[apic_10]}
    OneSecGrp_SectionRef_49 = new SectionList()
    apic_10 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[apic_7]}
    OneSecGrp_SectionRef_51 = new SectionList()
    apic_7 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[apic_6]}
    OneSecGrp_SectionRef_52 = new SectionList()
    apic_6 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_19 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_29 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_20 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_21 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[apic_0]}
    OneSecGrp_SectionRef_2 = new SectionList()
    apic_0 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_22 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_26 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_10 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_2 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[apic_1]}
    OneSecGrp_SectionRef_7 = new SectionList()
    apic_1 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_28 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_23 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[apic_13]}
    OneSecGrp_SectionRef_13 = new SectionList()
    apic_13 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_27 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_11 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_5 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[apic_14]}
    OneSecGrp_SectionRef_24 = new SectionList()
    apic_14 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_17 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_7 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[apic_15]}
    OneSecGrp_SectionRef_23 = new SectionList()
    apic_15 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_12 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_9 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[apic_12]}
    OneSecGrp_SectionRef_25 = new SectionList()
    apic_12 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_16 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_13 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_15 OneSecGrp_SectionRef_47.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_14 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[apic_3]}
    OneSecGrp_SectionRef_26 = new SectionList()
    apic_3 OneSecGrp_SectionRef_26.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[apic_11]}
    OneSecGrp_SectionRef_37 = new SectionList()
    apic_11 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[apic_4]}
    OneSecGrp_SectionRef_38 = new SectionList()
    apic_4 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[apic_8]}
    OneSecGrp_SectionRef_45 = new SectionList()
    apic_8 OneSecGrp_SectionRef_45.append()

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[apic_5]}
    OneSecGrp_SectionRef_46 = new SectionList()
    apic_5 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[apic_9]}
    OneSecGrp_SectionRef_50 = new SectionList()
    apic_9 OneSecGrp_SectionRef_50.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()

    // Group: {name=apical, groups=[], sections=[apic_0, apic_1, apic_2, apic_3, apic_4, apic_5, apic_6, apic_7, apic_8, apic_9, apic_10, apic_11, apic_12, apic_13, apic_14, apic_15, apic_16], inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()
    apic_0 apical.append()
    apic_1 apical.append()
    apic_2 apical.append()
    apic_3 apical.append()
    apic_4 apical.append()
    apic_5 apical.append()
    apic_6 apical.append()
    apic_7 apical.append()
    apic_8 apical.append()
    apic_9 apical.append()
    apic_10 apical.append()
    apic_11 apical.append()
    apic_12 apical.append()
    apic_13 apical.append()
    apic_14 apical.append()
    apic_15 apical.append()
    apic_16 apical.append()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, apic_0, apic_0, apic_0, apic_0, apic_0, dend_19, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_1, apic_1, apic_1, apic_1, apic_1, dend_29, dend_20, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_1, dend_1, dend_1, dend_1, axon_1, axon_1, apic_13, apic_13, apic_13, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, apic_2, dend_31, dend_31, dend_31, dend_31, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_21, dend_21, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, apic_15, apic_15, apic_15, apic_15, apic_15, apic_14, apic_14, apic_14, apic_14, apic_14, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    dend_19 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    apic_16 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_29 all.append()
    dend_20 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    apic_16 nseg = 3
    apic_2 nseg = 3
    dend_30 nseg = 3
    dend_18 nseg = 3
    dend_25 nseg = 3
    dend_6 nseg = 3
    dend_4 nseg = 11
    dend_3 nseg = 3
    dend_24 nseg = 3
    dend_8 nseg = 5
    apic_10 nseg = 3
    apic_7 nseg = 3
    apic_6 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_SBC_684e05d4eb_0_0


