// Cell: Cell_329322394
/*
{
  "id" : "Cell_329322394",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "233.61, 423.28, 29.68, 10.2864", "238.753, 423.28, 29.68, 10.2864", "243.896, 423.28, 29.68, 10.2864" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "238.753, 423.28, 29.68, 1.0", "244.594, 437.096, 29.68, 1.0", "250.436, 450.912, 29.68, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "240.497, 418.615, 27.7463, 0.2288", "241.152, 417.837, 27.6853, 0.2752", "241.907, 417.169, 27.6713, 0.2758", "242.135, 416.048, 27.6564, 0.2768", "242.362, 414.927, 27.6382, 0.279", "242.921, 413.93, 27.6004, 0.2824", "243.488, 412.936, 27.5442, 0.2892", "243.806, 411.88, 27.4725, 0.3014", "243.865, 410.781, 27.3868, 0.3264", "244.811, 410.138, 27.2885, 0.3604", "245.93, 410.181, 27.1732, 0.4846", "247.048, 410.235, 26.9968, 0.4162", "248.13, 410.18, 26.6991, 0.3676", "248.989, 409.56, 26.4048, 0.3546", "249.759, 408.715, 26.1576, 0.4146", "250.736, 408.156, 25.9602, 0.5758", "251.81, 407.794, 25.818, 0.631", "252.893, 407.826, 25.7191, 0.544", "253.822, 408.481, 25.5909, 0.387", "254.78, 408.617, 25.4402, 0.3044", "255.778, 408.058, 25.2938, 0.2824", "256.869, 408.31, 25.1395, 0.289", "257.969, 408.19, 24.8755, 0.3014", "258.892, 407.922, 24.5479, 0.3248", "259.347, 407.134, 24.269, 0.3648", "260.474, 407.042, 24.0352, 0.457", "261.617, 407.043, 23.8342, 0.5398", "262.723, 406.896, 23.5757, 0.4336", "263.816, 406.7, 23.2462, 0.3528", "264.763, 406.858, 22.8794, 0.3262", "265.534, 407.112, 22.5473, 0.3672", "266.494, 406.49, 22.2631, 0.4612", "267.529, 406.528, 21.8943, 0.548", "268.46, 406.859, 21.411, 0.4486", "269.349, 407.063, 21.0787, 0.382", "270.408, 407.496, 20.8258, 0.375", "271.467, 407.929, 20.6312, 0.4832", "272.286, 408.695, 20.4982, 0.5532", "273.401, 408.44, 20.4098, 0.6296", "274.4, 408.846, 20.3314, 0.5736", "275.362, 409.465, 20.2199, 0.5138", "276.475, 409.639, 20.004, 0.4176", "277.429, 410.178, 19.7422, 0.3972", "278.273, 410.664, 19.4323, 0.5068", "279.027, 409.984, 18.9448, 0.4518", "279.999, 409.902, 18.4582, 0.4608", "280.899, 410.569, 18.0552, 0.396", "281.899, 410.908, 17.7411, 0.4418", "282.272, 410.132, 17.3897, 0.4094", "282.341, 409.069, 16.9786, 0.4602", "283.172, 408.339, 16.6863, 0.4738", "283.879, 407.535, 16.4828, 0.4312", "284.893, 407.129, 16.3327, 0.4548", "285.78, 406.408, 16.231, 0.4576", "286.44, 405.551, 16.1795, 0.4322", "286.557, 404.417, 16.1263, 0.305", "287.13, 403.437, 16.0154, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "234.825, 419.393, 27.6156, 0.2288", "234.155, 418.495, 27.6875, 0.306", "233.295, 417.782, 27.7329, 0.3318", "232.173, 418.0, 27.7777, 0.3848", "231.08, 417.712, 27.8191, 0.4592", "229.938, 417.693, 27.8575, 0.7136", "228.932, 417.161, 27.8933, 0.6184", "227.916, 416.764, 28.0308, 0.4498", "227.083, 416.009, 28.1128, 0.3262", "226.282, 415.192, 28.1221, 0.3228", "225.48, 414.376, 28.0647, 0.3672", "225.087, 413.347, 27.8471, 0.4318", "224.693, 412.316, 27.508, 0.6368", "224.043, 411.406, 27.1737, 0.602", "223.403, 410.463, 26.8915, 0.4932", "222.797, 409.491, 26.6524, 0.5052", "222.124, 408.712, 26.3012, 0.407", "221.12, 408.599, 25.9851, 0.351", "220.072, 408.386, 25.7342, 0.322", "219.128, 407.749, 25.4996, 0.3634", "218.182, 407.111, 25.2843, 0.4352", "217.238, 406.474, 25.0942, 0.5914", "216.152, 406.193, 24.9738, 0.7688", "215.13, 405.759, 24.887, 0.958", "214.08, 405.333, 24.8072, 0.8404", "212.971, 405.063, 24.7114, 0.839", "212.053, 404.486, 24.5745, 0.6996", "211.322, 403.62, 24.3939, 0.6476", "210.551, 402.95, 24.2136, 0.694", "209.409, 402.887, 24.0517, 0.543", "208.451, 402.441, 23.8291, 0.499", "207.532, 401.849, 23.5528, 0.415", "206.446, 401.488, 23.3187, 0.5016", "205.501, 400.859, 23.0947, 0.4002", "204.589, 400.17, 22.8707, 0.3382", "203.698, 399.454, 22.6699, 0.2982", "202.96, 398.659, 22.3787, 0.3192", "202.291, 397.828, 21.9702, 0.3518", "201.6, 397.029, 21.4872, 0.4452", "200.565, 396.682, 21.0862, 0.4576", "199.878, 395.767, 20.7995, 0.5754", "198.995, 395.076, 20.6186, 0.562", "197.999, 394.514, 20.5352, 0.518", "197.003, 393.951, 20.5198, 0.528", "195.98, 393.441, 20.519, 0.79", "194.954, 392.936, 20.5072, 0.7814", "194.326, 391.984, 20.5103, 0.6482", "193.63, 391.102, 20.5145, 0.5114", "192.607, 390.821, 20.4887, 0.4104", "191.518, 390.97, 20.4674, 0.397", "190.43, 390.621, 20.4562, 0.4454", "189.809, 389.855, 20.4344, 0.634", "189.589, 388.732, 20.3888, 0.7342", "188.949, 387.817, 20.3398, 0.757", "188.118, 387.039, 20.2818, 0.6752", "187.211, 386.345, 20.2009, 0.6706", "186.335, 385.803, 20.0032, 0.633", "185.57, 384.973, 19.8439, 0.4748", "184.756, 384.27, 19.7198, 0.3846", "183.821, 383.701, 19.6258, 0.3736", "183.252, 382.725, 19.5572, 0.5104", "182.814, 381.762, 19.5084, 0.4586", "182.003, 381.122, 19.4732, 0.474", "181.657, 380.071, 19.4284, 0.4158", "180.82, 379.436, 19.3578, 0.5026", "180.004, 378.671, 19.227, 0.4024", "179.202, 377.859, 19.0971, 0.3422", "178.292, 377.179, 18.9804, 0.3068", "177.472, 376.385, 18.8748, 0.3292", "176.83, 375.468, 18.7141, 0.401", "175.761, 375.09, 18.5699, 0.386", "174.663, 374.8, 18.4358, 0.3936", "173.755, 374.139, 18.3047, 0.4628", "172.887, 373.422, 18.1978, 0.5508", "172.306, 372.451, 18.1107, 0.4538", "171.41, 371.752, 18.0404, 0.3928", "170.748, 370.848, 17.9528, 0.3886", "170.321, 369.798, 17.8343, 0.539", "169.605, 368.938, 17.677, 0.5074", "169.017, 367.971, 17.5518, 0.5828", "168.397, 367.027, 17.4594, 0.5304", "167.635, 366.176, 17.397, 0.4514", "166.939, 365.283, 17.3611, 0.4442", "166.135, 364.52, 17.3446, 0.4432", "165.152, 363.964, 17.3384, 0.3784", "164.49, 363.043, 17.3295, 0.3366", "163.511, 362.5, 17.3166, 0.3382", "162.461, 362.094, 17.2998, 0.4128", "161.501, 361.474, 17.2782, 0.4322", "160.833, 360.569, 17.2514, 0.3584", "160.274, 359.594, 17.18, 0.2982", "159.634, 358.85, 17.1164, 0.2712", "158.986, 357.908, 17.061, 0.2684", "158.085, 357.217, 17.0139, 0.2626", "157.162, 356.601, 16.9352, 0.2542", "156.761, 355.553, 16.8778, 0.2288", "156.728, 354.411, 16.8, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "235.987, 427.271, 35.1896, 0.6864", "235.411, 428.192, 34.5548, 0.448", "235.108, 429.065, 34.2546, 0.333", "236.045, 429.721, 34.0256, 0.288", "235.86, 430.827, 33.866, 0.3008", "234.896, 431.407, 33.7722, 0.318", "233.893, 431.958, 33.7431, 0.3808", "232.877, 432.482, 33.777, 0.347", "231.853, 432.994, 33.8523, 0.3254", "230.728, 432.936, 33.9531, 0.3164", "229.589, 432.818, 34.0813, 0.378" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "238.621, 428.392, 32.7418, 0.2288", "239.17, 429.367, 32.0995, 0.2746", "239.475, 430.464, 31.862, 0.2746", "239.738, 431.572, 31.5227, 0.2746", "239.946, 432.013, 30.7966, 0.2746", "240.151, 432.407, 29.7903, 0.2746", "240.24, 432.828, 28.9982, 0.2746", "240.24, 433.972, 28.4085, 0.2746", "240.24, 435.116, 28.0123, 0.2746", "240.24, 436.26, 27.7917, 0.2746", "240.24, 437.404, 27.72, 0.2746", "240.257, 438.547, 27.72, 0.2746", "240.621, 439.601, 27.72, 0.2746" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "235.643, 419.374, 27.0528, 0.2288", "234.745, 419.547, 26.5541, 0.2878", "233.676, 419.842, 26.3746, 0.299", "233.316, 420.928, 26.2265, 0.3212", "232.482, 420.979, 26.0691, 0.355", "231.957, 420.107, 25.9031, 0.4528", "230.934, 419.647, 25.7261, 0.465", "230.018, 418.971, 25.5223, 0.6208", "229.084, 418.378, 25.2224, 0.4922", "228.29, 417.716, 24.7363, 0.4496", "227.496, 417.053, 24.1304, 0.3338", "226.736, 416.359, 23.4744, 0.3", "226.411, 415.262, 22.9687, 0.2746", "226.086, 414.165, 22.6052, 0.2746", "226.316, 413.287, 22.3787, 0.2746", "227.303, 412.709, 22.2734, 0.2746", "227.807, 411.698, 22.2317, 0.2746", "227.732, 410.606, 22.199, 0.2746", "228.448, 409.713, 22.1715, 0.2746", "229.164, 408.821, 22.1483, 0.2746", "229.936, 407.99, 22.1284, 0.2746", "230.882, 407.346, 22.1138, 0.2746", "231.186, 406.51, 22.104, 0.2748", "230.753, 405.451, 22.0965, 0.2748", "230.492, 404.358, 22.0802, 0.2752", "230.491, 403.214, 22.0447, 0.2758", "230.82, 402.134, 21.9842, 0.2766", "231.118, 401.12, 21.8996, 0.2782", "232.01, 400.405, 21.7955, 0.2814", "232.904, 399.69, 21.6712, 0.2874", "233.433, 398.9, 21.4035, 0.2984", "233.58, 398.032, 20.9045, 0.3196" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "243.662, 423.035, 27.5223, 0.2288", "244.598, 422.436, 27.4151, 0.3394", "245.417, 421.638, 27.3745, 0.389", "246.408, 421.086, 27.3258, 0.515", "247.518, 421.241, 27.267, 0.582", "248.517, 421.787, 27.1958, 0.8298", "249.567, 422.237, 27.1026, 0.9194", "250.569, 422.737, 26.9282, 1.0496", "251.688, 422.853, 26.7168, 1.0068", "252.811, 423.063, 26.5443, 0.7054", "253.951, 423.162, 26.4113, 0.5368", "254.995, 422.713, 26.3124, 0.621", "256.071, 422.325, 26.2441, 0.6794", "257.179, 422.041, 26.2013, 0.806", "258.314, 421.906, 26.1612, 0.72", "259.427, 421.885, 26.0467, 0.7472", "260.557, 421.763, 25.9414, 0.5786" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986
  }, {
    "name" : "apic_0",
    "id" : "apic_0",
    "points3d" : [ "243.57, 420.307, 31.166, 0.543", "244.325, 419.451, 31.6901, 0.8818", "244.95, 418.529, 32.2174, 0.8692", "246.106, 416.567, 32.6735, 1.2108", "247.17, 414.572, 33.103, 0.9864", "247.905, 413.706, 33.4323, 0.8462" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.4999999999999986
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "250.436, 450.912, 29.68, 1.0", "256.277, 464.728, 29.68, 1.0", "262.118, 478.544, 29.68, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "229.589, 432.818, 34.0813, 0.378", "228.592, 433.71, 34.2686, 0.2288", "228.08, 434.733, 34.4481, 0.328", "227.569, 435.757, 34.5139, 0.3634", "227.086, 436.791, 34.622, 0.4904", "226.618, 437.829, 34.7754, 0.426", "226.149, 438.868, 34.9636, 0.3882", "225.68, 439.907, 35.177, 0.3818", "225.211, 440.946, 35.4063, 0.5192", "224.743, 441.984, 35.6429, 0.5056", "224.274, 443.023, 35.8786, 0.4096", "223.805, 444.062, 36.1102, 0.3484" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "229.589, 432.818, 34.0813, 0.378", "228.847, 431.993, 34.3162, 0.342", "228.098, 431.161, 34.629, 0.3156", "227.348, 430.328, 34.9913, 0.3028", "226.598, 429.496, 35.378, 0.329", "225.528, 429.257, 35.7014, 0.3652", "224.389, 429.145, 35.9528, 0.4932", "223.365, 428.667, 36.141, 0.4332", "222.365, 428.111, 36.2883, 0.3952", "221.4, 427.536, 36.4787, 0.4242", "220.443, 426.956, 36.7268, 0.4538", "219.409, 426.754, 36.9804, 0.3978", "218.288, 426.979, 37.1882, 0.3732", "217.165, 427.203, 37.3576, 0.402", "216.049, 427.45, 37.4982, 0.5514", "214.939, 427.728, 37.6188, 0.591", "213.83, 428.006, 37.7384, 0.4442", "212.794, 427.83, 37.9182, 0.3256", "211.823, 427.271, 38.1861, 0.275", "210.852, 426.713, 38.5126, 0.2752", "209.88, 426.155, 38.869, 0.276", "208.897, 425.603, 39.2017, 0.2774", "207.889, 425.062, 39.4461, 0.2796", "206.88, 424.521, 39.611, 0.284", "205.88, 423.966, 39.7138, 0.2918", "204.918, 423.349, 39.7774, 0.3078", "203.956, 422.73, 39.8222, 0.3306", "202.994, 422.111, 39.867, 0.405", "202.081, 421.427, 39.9459, 0.3872", "201.176, 420.73, 40.0537, 0.4238", "200.271, 420.034, 40.1803, 0.3824", "199.367, 419.339, 40.3158, 0.3792", "198.462, 418.643, 40.4516, 0.4722", "197.408, 418.45, 40.5616, 0.3934", "196.268, 418.544, 40.6358, 0.3254", "195.149, 418.512, 40.6809, 0.2746", "194.1, 418.054, 40.705, 0.2748", "193.052, 417.595, 40.7151, 0.275", "192.004, 417.137, 40.7176, 0.2752", "190.927, 416.758, 40.7187, 0.276", "189.838, 416.406, 40.7201, 0.2768", "188.749, 416.055, 40.7218, 0.279", "187.671, 415.675, 40.7243, 0.2826", "186.602, 415.264, 40.728, 0.2894", "185.535, 414.853, 40.733, 0.3032", "184.55, 414.282, 40.74, 0.3222", "183.602, 413.643, 40.7498, 0.3882", "182.653, 413.003, 40.7638, 0.3626", "181.705, 412.364, 40.7828, 0.348", "180.757, 411.724, 40.8097, 0.3892", "179.92, 411.009, 40.8472, 0.3624", "179.68, 409.891, 40.8999, 0.355", "179.44, 408.772, 40.9741, 0.366", "179.038, 407.739, 41.0771, 0.4964", "178.256, 406.904, 41.2182, 0.4326", "177.446, 406.111, 41.4134, 0.4242", "176.404, 405.664, 41.7155, 0.3338", "175.36, 405.217, 42.1151, 0.3", "174.322, 404.994, 42.6303, 0.2746", "173.292, 405.261, 43.3031, 0.2746", "172.261, 405.526, 44.0891, 0.2746", "171.232, 405.793, 44.9436, 0.2746", "170.202, 406.059, 45.8262, 0.2746", "169.164, 406.113, 46.6978, 0.2746", "168.118, 405.802, 47.5185, 0.2746", "167.07, 405.492, 48.2776, 0.2746", "166.111, 404.965, 48.9171, 0.2746", "165.737, 404.021, 49.4634, 0.2746", "165.735, 402.926, 49.9822, 0.2744", "165.656, 401.922, 50.4624, 0.2744", "164.536, 402.15, 50.7945, 0.2742", "163.415, 402.379, 51.0115, 0.2736", "162.294, 402.608, 51.1445, 0.2728", "161.174, 402.838, 51.2123, 0.2712", "160.071, 402.746, 51.2333, 0.2684", "158.983, 402.392, 51.2333, 0.2626", "157.895, 402.038, 51.2333, 0.2542", "156.807, 401.684, 51.2333, 0.2288", "155.719, 401.33, 51.2333, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "240.621, 439.601, 27.72, 0.2746", "240.874, 440.128, 29.8346, 0.2288", "241.087, 440.888, 30.8221, 0.2754", "241.168, 442.028, 31.1811, 0.2762", "241.249, 443.166, 31.4994, 0.2776", "241.33, 444.306, 31.7744, 0.2802", "241.375, 445.446, 31.997, 0.285", "241.348, 446.589, 32.1541, 0.294", "241.322, 447.733, 32.2571, 0.3116", "241.295, 448.877, 32.3557, 0.3388", "241.012, 449.965, 32.4954, 0.4142", "240.617, 451.029, 32.6892, 0.435", "240.223, 452.093, 32.928, 0.3634", "240.111, 453.223, 33.1576, 0.3076", "240.079, 454.361, 33.3844, 0.2888", "240.162, 455.485, 33.6613, 0.3006", "240.246, 456.608, 33.9637, 0.3236", "240.33, 457.732, 34.274, 0.3624", "240.414, 458.855, 34.5786, 0.4526", "240.644, 459.928, 34.851, 0.5316", "240.919, 460.975, 35.0053, 0.4188", "240.91, 462.114, 35.0448, 0.3254", "240.9, 463.253, 35.0028, 0.2746", "241.266, 464.323, 34.9448, 0.2746", "241.211, 465.441, 34.8981, 0.2746", "241.046, 466.572, 34.8762, 0.2746", "241.248, 467.699, 34.8776, 0.2746", "241.448, 468.825, 34.8984, 0.2746", "241.648, 469.952, 34.9317, 0.2746", "241.85, 471.078, 34.9706, 0.2746", "241.839, 472.184, 35.0994, 0.2746", "242.239, 473.217, 35.2352, 0.2746", "242.766, 474.23, 35.3489, 0.2746", "242.656, 475.19, 35.4334, 0.2746", "242.338, 476.237, 35.495, 0.2746", "242.281, 477.38, 35.5454, 0.2746", "242.006, 478.486, 35.5846, 0.2746", "241.692, 479.585, 35.6314, 0.2746", "241.367, 480.682, 35.6888, 0.2746", "240.526, 481.435, 35.8201, 0.2746", "239.668, 482.175, 36.0136, 0.2746", "239.125, 483.129, 36.223, 0.2746", "238.787, 484.222, 36.4246, 0.2746", "238.451, 485.316, 36.619, 0.2746", "238.127, 486.393, 36.8334, 0.2746", "237.878, 487.385, 37.2072, 0.2746", "237.371, 488.302, 37.599, 0.2746", "236.848, 489.265, 37.9028, 0.2746", "236.83, 490.404, 38.1273, 0.2746", "236.864, 491.548, 38.2774, 0.2746", "236.801, 492.69, 38.3614, 0.2746", "236.555, 493.808, 38.3995, 0.2746", "236.308, 494.924, 38.4306, 0.2746", "236.332, 496.053, 38.4672, 0.2746", "236.891, 497.028, 38.5143, 0.2746", "237.549, 497.964, 38.5745, 0.2746", "238.04, 498.98, 38.6859, 0.2746", "238.441, 500.039, 38.8556, 0.2746", "238.837, 501.099, 39.0659, 0.2746", "238.713, 502.237, 39.2526, 0.2746", "238.587, 503.374, 39.4184, 0.2746", "239.061, 504.358, 39.5503, 0.2746", "239.125, 505.371, 39.6791, 0.2746", "238.797, 506.464, 39.8258, 0.2746", "238.827, 507.563, 39.9932, 0.2746", "239.122, 508.65, 40.2172, 0.2746", "239.176, 509.767, 40.5446, 0.2746", "239.231, 510.886, 40.9497, 0.2746", "239.285, 512.004, 41.4042, 0.2746", "239.375, 513.122, 41.8816, 0.2746", "239.471, 514.239, 42.3612, 0.2746", "239.566, 515.356, 42.8263, 0.2746", "239.676, 516.477, 43.2502, 0.2746", "239.843, 517.609, 43.577, 0.2746", "239.778, 518.739, 43.8393, 0.2746", "239.592, 519.866, 44.0678, 0.2744", "239.343, 520.959, 44.3442, 0.2744", "239.095, 522.053, 44.658, 0.2742", "238.846, 523.147, 44.9974, 0.2736", "238.597, 524.24, 45.3488, 0.2728", "238.546, 525.381, 45.6151, 0.2712", "238.501, 526.525, 45.799, 0.2684", "238.444, 527.667, 45.9096, 0.2626", "238.246, 528.793, 45.9662, 0.2542", "238.048, 529.92, 45.9883, 0.2288", "238.041, 531.063, 45.9978, 0.2288" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "240.621, 439.601, 27.72, 0.2746", "241.434, 440.39, 27.72, 0.2746" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "233.58, 398.032, 20.9045, 0.3196", "233.407, 397.938, 20.7326, 0.3534", "232.749, 397.1, 20.54, 0.4424", "232.064, 396.211, 20.3059, 0.482", "231.417, 395.283, 20.085, 0.4762", "230.817, 394.309, 19.9231, 0.3936", "230.217, 393.335, 19.7865, 0.3584", "229.284, 392.762, 19.6249, 0.4084", "228.635, 391.82, 19.4578, 0.3982", "227.745, 391.147, 19.222, 0.4228", "226.819, 390.517, 18.9188, 0.4832", "225.891, 389.885, 18.5657, 0.7532", "224.815, 389.538, 18.2661, 0.7176", "224.327, 388.571, 17.9164, 0.5084", "224.026, 387.491, 17.6249, 0.356", "223.763, 386.4, 17.4317, 0.305", "222.753, 385.863, 17.2032, 0.4576" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "233.58, 398.032, 20.9045, 0.3196", "234.432, 397.414, 19.476, 0.2288", "234.822, 396.438, 19.0985, 0.3882", "234.924, 395.299, 18.9566, 0.3608", "235.874, 394.773, 18.7869, 0.3518", "236.415, 394.003, 18.4598, 0.3604", "236.664, 393.051, 17.9502, 0.485", "237.073, 392.062, 17.4479, 0.4162", "237.598, 391.047, 17.0635, 0.3704", "238.0, 389.982, 16.788, 0.3476", "238.301, 388.878, 16.6121, 0.4604", "238.844, 387.926, 16.5264, 0.373", "239.704, 387.17, 16.4979, 0.2796", "240.561, 386.414, 16.4704, 0.2288" ],
    "parent" : "dend_3",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "260.557, 421.763, 25.9414, 0.5786", "261.807, 422.551, 25.9039, 0.4134", "262.601, 423.348, 25.9966, 0.306", "263.404, 424.129, 26.2046, 0.2856", "264.207, 424.909, 26.4942, 0.2952", "265.03, 425.668, 26.824, 0.312", "266.031, 426.22, 27.0816, 0.3474", "267.033, 426.774, 27.2658, 0.3938", "268.035, 427.326, 27.3857, 0.5724", "268.98, 427.956, 27.4672, 0.4548", "269.8, 428.752, 27.5394, 0.355", "270.514, 429.624, 27.6158, 0.2824", "270.979, 430.668, 27.6984, 0.2888", "271.435, 431.707, 27.8104, 0.3018", "271.83, 432.708, 28.0689, 0.3198", "272.345, 433.661, 28.3811, 0.3844", "273.112, 434.509, 28.6233, 0.354", "273.878, 435.358, 28.8016, 0.3382", "274.542, 436.29, 28.931, 0.3398", "275.194, 437.229, 29.015, 0.423", "276.1, 437.924, 29.0528, 0.4156", "276.985, 438.644, 29.0769, 0.5024", "277.735, 439.509, 29.1094, 0.4018", "278.622, 440.17, 29.1511, 0.3412", "279.699, 440.558, 29.2006, 0.3048", "280.775, 440.946, 29.2583, 0.3256", "281.668, 441.523, 29.4213, 0.3942", "282.483, 442.283, 29.6022, 0.3736", "283.37, 443.003, 29.743, 0.3682", "284.355, 443.544, 29.8463, 0.4286", "285.404, 443.861, 29.9149, 0.4256", "286.318, 444.469, 29.9516, 0.5218", "286.944, 445.416, 29.96, 0.4328", "287.409, 446.46, 29.96, 0.4246", "287.907, 447.486, 29.96, 0.3346", "288.349, 448.504, 29.96, 0.3012", "289.367, 449.017, 29.96, 0.2766", "290.389, 449.505, 29.96, 0.2782", "291.098, 450.385, 29.96, 0.2814", "291.904, 451.168, 29.96, 0.287", "292.254, 452.252, 29.96, 0.2988", "292.79, 453.262, 29.96, 0.3142", "293.404, 454.203, 29.9603, 0.3734", "293.561, 455.276, 29.9603, 0.3338", "294.275, 456.064, 29.9603, 0.3", "294.895, 457.009, 29.9606, 0.2746", "295.681, 457.831, 29.9606, 0.2746", "296.513, 458.564, 29.9608, 0.2746", "296.714, 459.687, 29.9611, 0.2746", "297.081, 460.765, 29.9617, 0.2746", "297.835, 461.564, 29.9622, 0.2746", "298.38, 462.569, 29.9634, 0.2748", "298.916, 463.58, 29.9645, 0.2748", "299.182, 464.682, 29.9664, 0.2752", "299.38, 465.809, 29.969, 0.2758", "299.828, 466.742, 29.9726, 0.2766", "300.473, 467.667, 29.9774, 0.2782", "301.164, 468.55, 29.9844, 0.2814", "302.003, 469.304, 29.9942, 0.287", "302.462, 470.344, 30.0076, 0.2988", "302.843, 471.41, 30.0266, 0.3142", "303.644, 472.208, 30.0535, 0.3734", "304.444, 472.956, 30.0902, 0.3338", "305.469, 473.402, 30.1414, 0.3", "306.46, 473.952, 30.2151, 0.2746", "307.07, 474.865, 30.3198, 0.2746", "307.836, 475.561, 30.4615, 0.2746", "308.812, 476.018, 30.6418, 0.2748", "309.793, 476.397, 30.9039, 0.2748", "310.37, 477.048, 31.4073, 0.275", "310.897, 478.027, 31.9547, 0.2754", "311.532, 478.923, 32.4951, 0.2764", "312.477, 479.545, 32.9437, 0.278", "313.62, 479.595, 33.3253, 0.281", "314.643, 479.967, 33.7378, 0.2862", "315.634, 480.433, 34.1827, 0.2966", "316.624, 480.898, 34.6618, 0.3134", "317.612, 481.385, 35.1366, 0.356", "318.585, 481.988, 35.4992, 0.3814", "319.557, 482.59, 35.9565, 0.6864" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "260.557, 421.763, 25.9414, 0.5786", "261.918, 421.078, 25.7261, 0.9152", "262.928, 420.611, 26.2354, 0.8622", "263.965, 420.188, 26.4387, 0.7028", "265.075, 420.064, 26.6918, 0.8448", "266.126, 419.842, 26.906, 0.8182", "267.19, 419.454, 27.0399, 0.5722", "268.279, 419.102, 27.127, 0.384", "269.318, 418.648, 27.1757, 0.338", "270.272, 418.018, 27.2076, 0.3826", "271.228, 417.386, 27.2353, 0.5208", "272.094, 416.646, 27.2812, 0.5086", "272.925, 415.86, 27.3482, 0.415", "273.648, 414.984, 27.4576, 0.357", "274.352, 414.09, 27.5999, 0.3772", "275.055, 413.196, 27.7584, 0.4794", "275.881, 412.414, 27.8872, 0.5836", "276.757, 411.678, 27.9709, 0.5048", "277.689, 411.015, 28.0087, 0.536", "278.624, 410.356, 28.0025, 0.4174", "279.559, 409.697, 27.9597, 0.37", "280.495, 409.038, 27.8872, 0.3574", "281.346, 408.289, 27.762, 0.426", "282.153, 407.488, 27.5806, 0.5668", "282.959, 406.689, 27.3605, 0.7606", "283.766, 405.888, 27.1183, 0.7596", "284.572, 405.088, 26.8694, 0.6762", "285.379, 404.289, 26.6286, 0.4606", "286.041, 403.367, 26.4379, 0.3554", "286.632, 402.388, 26.3074, 0.3324", "287.209, 401.403, 26.224, 0.3714", "287.497, 400.296, 26.1769, 0.5048", "287.806, 399.195, 26.1537, 0.455", "288.203, 398.122, 26.1414, 0.4308", "288.599, 397.049, 26.1299, 0.5158", "289.139, 396.046, 26.1092, 0.4992", "289.736, 395.07, 26.0786, 0.3978", "290.457, 394.182, 26.04, 0.3244", "291.178, 393.295, 25.9969, 0.3194", "291.898, 392.407, 25.9524, 0.3608", "292.62, 391.519, 25.9092, 0.4198", "293.271, 390.58, 25.8748, 0.6152", "293.909, 389.629, 25.8504, 0.5598", "294.546, 388.679, 25.835, 0.4256", "295.182, 387.728, 25.828, 0.3298", "295.317, 386.625, 25.8356, 0.3244", "295.672, 385.562, 25.8521, 0.3928", "296.169, 384.532, 25.8762, 0.3692", "296.842, 383.619, 25.9154, 0.3676", "297.606, 382.767, 25.975, 0.3904", "298.326, 381.887, 26.0733, 0.536", "298.397, 380.929, 26.222, 0.5316", "298.029, 379.911, 26.388, 0.4836", "298.659, 379.093, 26.6112, 0.3592", "299.427, 378.338, 26.8915, 0.3", "299.721, 377.243, 27.1746, 0.2746", "299.243, 376.543, 27.4534, 0.2746", "299.531, 376.972, 27.8286, 0.2746", "300.504, 376.657, 28.3766, 0.2746", "301.212, 376.116, 28.9946, 0.2746", "301.624, 375.335, 29.561, 0.2748", "302.72, 375.162, 30.1339, 0.2748", "303.739, 375.425, 30.6496, 0.275", "303.777, 376.312, 31.0442, 0.2754", "304.446, 375.531, 31.4208, 0.2762", "305.167, 374.668, 31.8041, 0.2778", "305.888, 373.805, 32.2017, 0.2802", "306.629, 372.944, 32.5598, 0.2854", "307.465, 372.2, 32.8941, 0.2944", "308.438, 371.652, 33.2685, 0.311", "309.309, 371.037, 33.6498, 0.3452", "309.455, 369.914, 33.9612, 0.3898", "310.254, 369.333, 34.2538, 0.565", "311.381, 369.295, 34.5621, 0.4406", "312.508, 369.256, 34.8706, 0.3304", "313.636, 369.217, 35.1658, 0.2288", "314.333, 370.082, 35.644, 0.2288" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_14",
    "id" : "apic_14",
    "points3d" : [ "247.905, 413.706, 33.4323, 0.8462", "247.725, 412.868, 34.3672, 0.2288", "247.551, 411.752, 34.4044, 0.3988", "247.218, 410.671, 34.417, 0.5148", "247.212, 409.528, 34.4268, 0.672", "246.63, 408.577, 34.4336, 0.5574", "246.098, 407.575, 34.438, 0.4866", "245.693, 406.513, 34.44, 0.5814", "244.869, 405.727, 34.44, 0.5756", "243.865, 405.178, 34.44, 0.7604", "243.02, 404.415, 34.44, 0.6106", "242.094, 403.751, 34.44, 0.4356", "241.449, 402.815, 34.44, 0.3", "240.367, 402.675, 34.44, 0.2746" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_1",
    "id" : "apic_1",
    "points3d" : [ "247.905, 413.706, 33.4323, 0.8462", "248.543, 413.145, 33.5938, 1.0756", "249.503, 412.588, 33.5969, 0.9562", "250.61, 412.339, 33.544, 1.0918", "251.736, 412.517, 33.5076, 1.211", "252.814, 412.898, 33.5065, 1.3884", "253.766, 413.519, 33.5877, 1.2438", "254.768, 413.962, 33.8128, 0.7554" ],
    "parent" : "apic_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "223.805, 444.062, 36.1102, 0.3484", "223.336, 445.101, 36.3362, 0.3538", "222.867, 446.138, 36.556, 0.4724", "222.399, 447.177, 36.7704, 0.3936", "222.254, 448.282, 36.9586, 0.326", "222.296, 449.426, 37.1171, 0.2758", "222.339, 450.569, 37.259, 0.2766", "222.649, 451.661, 37.4366, 0.2784", "222.976, 452.751, 37.6488, 0.2818", "223.304, 453.84, 37.8907, 0.2882", "223.631, 454.929, 38.1573, 0.2994", "223.959, 456.018, 38.439, 0.3228", "224.286, 457.107, 38.7251, 0.3538", "224.613, 458.196, 39.0065, 0.4722", "224.902, 459.29, 39.2801, 0.3934", "224.796, 460.424, 39.5363, 0.3254", "224.691, 461.559, 39.776, 0.2746", "224.585, 462.694, 40.0008, 0.2746", "224.479, 463.829, 40.2114, 0.2746", "224.374, 464.964, 40.4048, 0.2746", "224.19, 466.086, 40.572, 0.2746", "223.883, 467.189, 40.7053, 0.2746", "223.578, 468.291, 40.8257, 0.2746", "223.271, 469.393, 40.9486, 0.2746", "223.124, 470.208, 40.8769, 0.2746", "222.908, 471.206, 41.0785, 0.2746", "222.693, 472.204, 41.4924, 0.2746", "222.497, 473.211, 42.0487, 0.2746", "222.595, 474.35, 42.5236, 0.2746", "222.693, 475.49, 42.9268, 0.2746", "222.792, 476.629, 43.2684, 0.2746", "222.849, 477.761, 43.5736, 0.2746", "222.893, 478.888, 43.8883, 0.2746", "222.937, 480.016, 44.2319, 0.2746", "222.98, 481.142, 44.6146, 0.2746", "223.024, 482.27, 45.0114, 0.2746", "223.079, 483.384, 45.4216, 0.2746", "223.135, 484.494, 45.822, 0.2746", "223.192, 485.604, 46.1972, 0.2746", "222.844, 486.605, 46.4215, 0.2746", "222.245, 487.539, 46.4587, 0.2746", "221.77, 488.516, 46.3924, 0.2746", "221.766, 489.659, 46.3526, 0.2746", "221.76, 490.803, 46.3618, 0.2746", "221.64, 491.922, 46.4934, 0.2746", "221.471, 493.031, 46.7664, 0.2744", "221.302, 494.139, 47.1444, 0.2744", "221.133, 495.248, 47.579, 0.2742", "220.964, 496.356, 48.029, 0.2736", "220.794, 497.465, 48.47, 0.2728", "220.626, 498.573, 48.8804, 0.2712", "220.261, 499.625, 49.2122, 0.2684", "219.693, 500.618, 49.4343, 0.2626", "219.124, 501.611, 49.5701, 0.2542", "218.555, 502.603, 49.6423, 0.2288", "217.987, 503.596, 49.6742, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "223.805, 444.062, 36.1102, 0.3484", "224.104, 444.455, 34.1678, 0.2288", "224.661, 445.263, 32.7502, 0.3284", "224.687, 446.186, 32.181, 0.3994", "224.642, 447.226, 31.5588, 0.3842", "224.79, 448.268, 30.87, 0.3828", "224.218, 449.189, 30.2918, 0.4792", "223.573, 450.117, 29.7934, 0.4056", "222.945, 451.052, 29.3678, 0.3484", "222.316, 451.986, 28.989, 0.3182", "222.442, 452.924, 28.6888, 0.3512", "222.812, 453.871, 28.4757, 0.438", "222.107, 454.745, 28.3167, 0.4736", "221.168, 455.399, 28.191, 0.4606", "220.235, 456.056, 28.0714, 0.3638", "219.308, 456.715, 27.9314, 0.3084", "218.716, 457.548, 27.785, 0.2902", "218.469, 458.548, 27.6584, 0.303", "217.467, 459.101, 27.5402, 0.3292", "216.755, 459.493, 27.4336, 0.3656", "215.472, 459.889, 27.3381, 0.4944", "214.68, 460.436, 27.1258, 0.4338", "213.827, 461.174, 26.9531, 0.403", "213.255, 462.165, 26.84, 0.407", "212.855, 463.214, 26.7725, 0.5742", "212.702, 464.347, 26.7319, 0.5684", "212.617, 465.488, 26.7117, 0.7176", "213.45, 466.161, 26.7436, 0.6752", "214.487, 466.604, 26.7604, 0.5422", "215.586, 466.913, 26.731, 0.3304", "216.684, 467.222, 26.5644, 0.2288" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "241.434, 440.39, 27.72, 0.2746", "241.522, 440.962, 29.1841, 0.4576", "241.522, 442.091, 28.56, 0.4582", "241.76, 443.187, 28.3119, 0.3596", "241.937, 444.284, 28.0224, 0.3006", "241.835, 445.412, 27.6592, 0.2758", "242.066, 446.486, 27.2938, 0.2766", "241.381, 447.276, 26.7492, 0.2782", "240.603, 447.995, 26.1002, 0.2814", "239.66, 448.585, 25.4226, 0.287", "238.719, 449.176, 24.7383, 0.2988", "237.973, 449.885, 24.0173, 0.3142", "237.41, 450.705, 23.2448, 0.3734", "236.739, 451.593, 22.6425, 0.3338", "236.271, 452.601, 22.1718, 0.3", "235.944, 453.672, 21.784, 0.2748", "234.975, 454.098, 21.527, 0.2748", "233.837, 453.977, 21.4214, 0.275", "232.757, 454.201, 21.4844, 0.2752", "231.701, 454.575, 21.6759, 0.276", "230.644, 454.951, 21.9534, 0.2774", "229.69, 455.44, 22.2664, 0.2796", "229.107, 456.353, 22.5288, 0.284", "228.011, 456.681, 22.7013, 0.2918", "226.915, 457.01, 22.7878, 0.3076", "225.812, 457.308, 22.8021, 0.3302", "224.692, 457.544, 22.7604, 0.4042", "223.572, 457.779, 22.6775, 0.3856", "222.453, 458.004, 22.5604, 0.4226", "221.331, 458.135, 22.3586, 0.3724", "220.209, 458.268, 22.0914, 0.397", "219.086, 458.4, 21.7658, 0.3304", "218.097, 458.859, 21.4525, 0.2938", "217.215, 459.586, 21.196, 0.2626", "216.52, 460.24, 20.8942, 0.2542", "215.712, 461.004, 20.5601, 0.2288", "214.903, 461.768, 19.747, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "241.434, 440.39, 27.72, 0.2746", "242.45, 440.743, 27.72, 0.2746", "243.589, 440.807, 27.72, 0.2746", "244.717, 440.996, 27.72, 0.2746", "245.856, 441.052, 27.72, 0.2746", "246.982, 441.254, 27.72, 0.2748", "248.056, 441.594, 27.72, 0.2748", "248.922, 442.337, 27.72, 0.275", "249.657, 443.103, 27.72, 0.2752", "249.998, 444.166, 27.72, 0.276", "251.091, 444.33, 27.72, 0.277", "252.091, 444.868, 27.72, 0.2794", "253.11, 445.378, 27.72, 0.2834", "254.193, 445.716, 27.72, 0.291", "255.261, 446.12, 27.72, 0.3052", "256.313, 446.441, 27.72, 0.3306", "257.271, 446.954, 27.72, 0.3816", "258.197, 447.622, 27.72, 0.458", "259.312, 447.871, 27.72, 0.6878", "260.267, 448.475, 27.72, 0.6858", "261.0, 449.324, 27.72, 0.6998", "262.043, 449.756, 27.72, 0.6404", "263.117, 450.123, 27.72, 0.4894", "264.113, 450.677, 27.72, 0.4052", "265.086, 451.268, 27.72, 0.4428", "265.942, 452.022, 27.72, 0.4888", "266.721, 452.856, 27.7203, 0.4588", "267.695, 453.446, 27.7203, 0.5066", "268.271, 454.413, 27.7203, 0.5496", "268.753, 455.41, 27.7206, 0.6214", "269.402, 456.225, 27.7206, 0.5658", "270.367, 456.813, 27.7208, 0.4638", "271.352, 457.395, 27.7211, 0.4978", "272.152, 458.048, 27.7217, 0.3934", "273.295, 458.103, 27.7225, 0.3256", "274.145, 458.656, 27.7234, 0.275", "275.197, 459.03, 27.7248, 0.2752", "276.33, 459.19, 27.7264, 0.276", "277.474, 459.202, 27.7292, 0.277", "278.344, 459.682, 27.7329, 0.2794", "279.369, 460.099, 27.7379, 0.2834", "280.384, 460.621, 27.7452, 0.2906", "281.493, 460.887, 27.755, 0.3056", "282.466, 461.334, 27.769, 0.3264", "283.4, 461.903, 27.7886, 0.3976", "284.416, 462.416, 27.8155, 0.3734", "285.241, 463.17, 27.8538, 0.3988", "286.378, 463.206, 27.9084, 0.3338", "287.522, 463.206, 27.9838, 0.3", "288.665, 463.206, 28.0832, 0.2746", "289.808, 463.206, 28.2204, 0.2748", "290.926, 463.206, 28.4539, 0.2748", "292.037, 463.206, 28.7633, 0.2752", "293.124, 463.206, 29.1158, 0.2758", "294.264, 463.206, 29.4308, 0.2766", "295.39, 463.198, 29.7556, 0.2782", "296.399, 462.731, 30.0773, 0.2814", "297.535, 462.634, 30.3069, 0.287", "298.679, 462.634, 30.4668, 0.2988", "299.823, 462.634, 30.5788, 0.3142", "300.966, 462.634, 30.6664, 0.3734", "302.103, 462.634, 30.7692, 0.3338", "303.208, 462.415, 30.858, 0.3", "304.352, 462.405, 30.9509, 0.2746", "305.314, 461.952, 31.052, 0.2746", "306.458, 461.937, 31.164, 0.2748", "307.555, 461.713, 31.36, 0.2748", "308.684, 461.57, 31.5902, 0.2752", "309.812, 461.428, 31.8483, 0.2758", "310.941, 461.285, 32.1216, 0.2766", "312.069, 461.143, 32.4016, 0.2782", "313.198, 461.0, 32.6819, 0.2814", "314.341, 460.962, 32.9182, 0.287", "315.484, 460.924, 33.1321, 0.2988", "316.626, 460.894, 33.3396, 0.3142", "317.658, 461.321, 33.6347, 0.3734", "318.689, 461.748, 33.9945, 0.3338", "319.719, 462.176, 34.3972, 0.3", "320.75, 462.603, 34.8214, 0.2746", "321.724, 463.108, 35.2262, 0.2746", "322.388, 464.04, 35.5155, 0.2746", "323.258, 464.647, 35.707, 0.2746", "324.384, 464.849, 35.8327, 0.2746", "325.51, 465.053, 35.9176, 0.2746", "326.636, 465.256, 35.9859, 0.2746", "327.704, 465.624, 36.057, 0.2746", "328.715, 466.161, 36.1477, 0.2746", "329.828, 466.18, 36.274, 0.2746", "330.967, 466.074, 36.4384, 0.2746", "332.069, 466.115, 36.7181, 0.2746", "333.157, 466.22, 37.1154, 0.2746", "334.244, 466.325, 37.5883, 0.2746", "335.327, 466.467, 38.0839, 0.2746", "336.379, 466.914, 38.4675, 0.2746", "337.433, 467.362, 38.7492, 0.2744", "338.486, 467.809, 38.9435, 0.2744", "339.565, 468.177, 39.0782, 0.2742", "340.671, 468.476, 39.1863, 0.2736", "341.775, 468.773, 39.2994, 0.2728", "342.879, 469.072, 39.4461, 0.2712", "343.925, 469.441, 39.6995, 0.2684", "344.948, 469.842, 40.0593, 0.2626", "345.971, 470.242, 40.483, 0.2542", "346.997, 470.462, 40.9074, 0.2288", "348.034, 469.983, 41.4999, 0.2288" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_16",
    "id" : "apic_16",
    "points3d" : [ "240.367, 402.675, 34.44, 0.2746", "239.573, 402.685, 35.5936, 0.2288", "238.517, 402.884, 35.8624, 0.2746", "237.374, 402.917, 35.9542, 0.2746", "236.234, 402.982, 36.0242, 0.2746", "235.114, 403.173, 36.0741, 0.2748", "234.393, 403.789, 36.1054, 0.2748", "233.462, 404.212, 36.12, 0.275", "232.446, 404.735, 36.12, 0.2754", "231.302, 404.747, 36.12, 0.2762", "230.158, 404.747, 36.12, 0.2776", "229.014, 404.747, 36.12, 0.28", "227.87, 404.747, 36.12, 0.2848", "226.726, 404.747, 36.12, 0.2936", "225.582, 404.747, 36.12, 0.311", "224.438, 404.747, 36.12, 0.3366", "223.298, 404.681, 36.12, 0.4164", "222.159, 404.612, 36.12, 0.408", "221.089, 404.213, 36.12, 0.4638", "220.013, 403.825, 36.12, 0.4496", "218.884, 403.718, 36.12, 0.5368", "217.88, 403.354, 36.12, 0.606", "216.774, 403.099, 36.12, 0.7246", "215.653, 402.88, 36.12, 0.7644", "214.525, 402.693, 36.12, 0.7974", "213.457, 402.285, 36.1203, 0.5978", "212.356, 401.983, 36.1203, 0.578", "211.273, 401.625, 36.1203, 0.4424", "210.136, 401.544, 36.1206, 0.4424", "209.001, 401.43, 36.1206, 0.3674", "207.857, 401.43, 36.1208, 0.3628", "206.713, 401.43, 36.1214, 0.3876", "205.569, 401.43, 36.122, 0.501", "204.427, 401.447, 36.1225, 0.6114", "203.382, 401.839, 36.1236, 0.6174", "202.342, 402.294, 36.125, 0.446", "201.413, 402.961, 36.127, 0.329", "200.487, 403.6, 36.1298, 0.2814", "199.448, 403.98, 36.1337, 0.287", "198.666, 404.775, 36.1393, 0.2988", "197.645, 405.229, 36.1469, 0.3142", "196.562, 405.567, 36.1575, 0.3734", "195.499, 405.992, 36.1729, 0.334", "194.443, 406.432, 36.1942, 0.3002", "193.322, 406.645, 36.2228, 0.2748", "192.246, 407.001, 36.2592, 0.275", "191.417, 407.758, 36.3233, 0.2754", "190.533, 408.431, 36.4182, 0.2764", "189.911, 409.379, 36.5165, 0.278", "189.125, 410.01, 36.6206, 0.2808", "188.41, 410.527, 36.7324, 0.2862", "187.506, 411.008, 36.9127, 0.2958", "186.39, 411.088, 37.1616, 0.315", "185.366, 411.538, 37.4114, 0.3454", "184.598, 412.243, 37.6365, 0.426", "183.707, 412.923, 37.8482, 0.458", "182.73, 413.44, 38.1122, 0.4008", "181.616, 413.674, 38.3639, 0.4026", "180.631, 414.043, 38.712, 0.3412", "179.899, 414.707, 39.0004, 0.313", "178.969, 415.34, 39.2384, 0.3", "177.83, 415.417, 39.4318, 0.3162", "176.769, 415.646, 39.6687, 0.3772", "175.953, 416.351, 39.9045, 0.3412", "175.001, 416.855, 40.1022, 0.3136", "174.196, 417.607, 40.2934, 0.2994", "173.191, 418.137, 40.4821, 0.3228", "172.18, 418.663, 40.6722, 0.3538", "171.478, 419.298, 41.0539, 0.4722", "170.496, 419.505, 41.4739, 0.3934", "169.385, 419.505, 41.8746, 0.3256", "168.241, 419.505, 42.1747, 0.2748", "167.097, 419.505, 42.3808, 0.2752", "165.953, 419.505, 42.502, 0.2758", "164.809, 419.505, 42.5477, 0.2766", "163.665, 419.505, 42.56, 0.2782", "162.533, 419.352, 42.56, 0.2814", "161.453, 419.007, 42.5603, 0.2872", "160.524, 418.356, 42.5603, 0.299", "159.5, 417.853, 42.5603, 0.3146", "158.475, 417.355, 42.5606, 0.3746", "157.6, 416.623, 42.5606, 0.3358", "156.568, 416.135, 42.5608, 0.3036", "156.085, 415.147, 42.5611, 0.2814", "155.25, 414.414, 42.5617, 0.287", "154.289, 414.014, 42.5622, 0.2988", "153.161, 413.868, 42.5631, 0.3142", "152.227, 413.216, 42.5645, 0.3734", "151.196, 412.739, 42.5662, 0.3338", "150.258, 412.096, 42.5687, 0.3", "149.221, 411.648, 42.572, 0.2746", "148.081, 411.611, 42.5768, 0.2746", "147.015, 411.783, 42.5835, 0.2746", "146.739, 412.831, 42.593, 0.2746", "146.318, 413.851, 42.6062, 0.2746", "145.941, 414.7, 42.6247, 0.2746", "144.797, 414.7, 42.6504, 0.2746", "143.653, 414.7, 42.6866, 0.2746", "142.509, 414.7, 42.737, 0.2746", "141.365, 414.7, 42.8061, 0.2746", "140.315, 415.056, 42.9038, 0.2746", "139.244, 415.43, 43.0455, 0.2744", "138.14, 415.732, 43.2424, 0.2744", "137.035, 416.003, 43.5016, 0.2742", "136.059, 416.592, 43.8259, 0.2736", "135.488, 417.075, 44.4212, 0.2728", "135.135, 417.607, 45.3362, 0.2712", "134.3, 418.346, 46.2202, 0.2684", "133.464, 419.084, 47.0411, 0.2626", "132.628, 419.822, 47.7742, 0.2542", "131.655, 419.546, 48.4033, 0.2288", "130.653, 419.064, 49.4564, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_15",
    "id" : "apic_15",
    "points3d" : [ "240.367, 402.675, 34.44, 0.2746", "240.24, 401.838, 34.44, 0.2746", "240.212, 400.696, 34.44, 0.2746", "240.061, 399.563, 34.44, 0.2746", "239.959, 398.424, 34.44, 0.2746", "239.897, 397.285, 34.44, 0.2746", "239.802, 396.159, 34.44, 0.2746", "239.619, 395.054, 34.44, 0.2746", "239.238, 394.046, 34.44, 0.2746", "238.958, 392.938, 34.4403, 0.2748", "238.867, 391.806, 34.4403, 0.2748", "238.867, 390.662, 34.4403, 0.2752", "238.867, 389.518, 34.4403, 0.2758", "238.827, 388.378, 34.4406, 0.2766", "238.753, 387.239, 34.4408, 0.2782", "238.675, 386.109, 34.4411, 0.2814", "237.951, 385.315, 34.4417, 0.2874", "237.555, 384.252, 34.4422, 0.2984", "236.859, 383.575, 34.4431, 0.3182", "236.579, 382.493, 34.4442, 0.3574", "236.579, 381.349, 34.4462, 0.4198", "236.101, 380.319, 34.4484, 0.5842", "235.595, 379.318, 34.4518, 0.6534", "235.377, 378.198, 34.4565, 0.5508", "235.048, 377.106, 34.4632, 0.569", "234.477, 376.115, 34.4722, 0.5038", "233.756, 375.231, 34.4851, 0.4066", "233.169, 374.281, 34.503, 0.34", "232.623, 373.311, 34.5288, 0.3518", "232.167, 372.267, 34.564, 0.4022", "231.355, 371.483, 34.6119, 0.5878", "230.387, 370.925, 34.6741, 0.4846", "229.308, 370.611, 34.7894, 0.4052", "228.406, 369.914, 34.9213, 0.4004", "227.4, 369.512, 35.1036, 0.386", "226.314, 369.239, 35.2867, 0.386", "225.456, 368.506, 35.5104, 0.485", "224.92, 367.682, 35.8537, 0.418", "224.577, 366.621, 36.1556, 0.366", "223.786, 365.804, 36.4336, 0.3756", "223.097, 365.053, 36.7914, 0.338", "222.405, 364.15, 37.137, 0.3076", "221.48, 363.572, 37.4699, 0.2886", "220.508, 363.114, 37.8666, 0.3", "219.815, 362.559, 38.4042, 0.3226", "219.396, 361.576, 38.8371, 0.3594", "218.368, 361.219, 39.1807, 0.4532", "217.63, 360.386, 39.4663, 0.5024", "216.606, 360.131, 39.7096, 0.5132", "215.567, 359.918, 40.0114, 0.4642", "214.944, 359.056, 40.3099, 0.4812", "214.406, 358.434, 40.7638, 0.6764", "213.462, 357.973, 41.2154, 0.6992", "212.548, 357.339, 41.6438, 0.5574", "211.543, 356.835, 41.9891, 0.5034", "211.031, 355.832, 42.2632, 0.5318", "210.558, 354.827, 42.5099, 0.4188", "209.537, 354.573, 42.842, 0.3258", "208.462, 354.202, 43.1539, 0.2752", "207.423, 353.849, 43.4678, 0.2758", "206.778, 353.231, 43.8794, 0.2768", "205.704, 353.046, 44.2576, 0.2786", "204.874, 352.289, 44.5634, 0.2822", "203.735, 352.238, 44.8112, 0.2886", "202.712, 351.976, 45.103, 0.3", "201.614, 351.728, 45.4177, 0.324", "200.492, 351.561, 45.7234, 0.3558", "199.476, 351.131, 46.0046, 0.4762", "198.997, 350.313, 46.3702, 0.4002", "198.559, 349.309, 46.804, 0.3382", "197.995, 348.483, 47.2506, 0.2994", "196.853, 348.484, 47.5969, 0.3156", "195.714, 348.548, 47.8957, 0.376", "194.581, 348.657, 48.1768, 0.3386", "193.448, 348.766, 48.4358, 0.3088", "192.314, 348.874, 48.6872, 0.2906", "191.181, 348.983, 48.9454, 0.3056", "190.048, 349.092, 49.2204, 0.3264", "188.914, 349.2, 49.5026, 0.3976", "187.838, 348.953, 49.7773, 0.3734", "186.764, 348.675, 50.0578, 0.3988", "185.635, 348.706, 50.3686, 0.3338", "184.504, 348.737, 50.6982, 0.3", "183.375, 348.768, 51.0348, 0.2746", "182.246, 348.799, 51.3671, 0.2746", "181.117, 348.83, 51.6863, 0.2746", "180.082, 348.38, 51.9229, 0.2746", "179.059, 347.867, 52.0856, 0.2746", "178.035, 347.356, 52.1976, 0.2746", "177.012, 346.845, 52.281, 0.2746", "175.956, 346.432, 52.3743, 0.2746", "174.85, 346.168, 52.5171, 0.2746", "173.744, 345.904, 52.7064, 0.2746", "172.637, 345.641, 52.9267, 0.2746", "171.53, 345.377, 53.1622, 0.2746", "170.424, 345.114, 53.398, 0.2746", "169.318, 344.85, 53.6203, 0.2746", "168.288, 344.386, 53.7944, 0.2746", "167.303, 343.804, 53.9118, 0.2746", "166.318, 343.222, 53.9851, 0.2746", "165.333, 342.641, 54.0268, 0.2746", "164.348, 342.058, 54.0473, 0.2746", "163.371, 341.462, 54.0599, 0.2746", "162.404, 340.853, 54.0767, 0.2746", "161.486, 340.186, 54.0946, 0.2746", "160.756, 339.306, 54.0991, 0.2746", "160.025, 338.426, 54.0949, 0.2746", "158.942, 338.316, 54.0954, 0.2746", "157.798, 338.337, 54.1044, 0.2746", "156.654, 338.359, 54.1257, 0.2746", "155.51, 338.38, 54.1638, 0.2746", "154.367, 338.401, 54.2217, 0.2746", "153.439, 338.018, 54.3085, 0.2746", "152.783, 337.103, 54.4348, 0.2746", "151.734, 336.675, 54.6193, 0.2746", "150.684, 336.246, 54.8436, 0.2746", "149.635, 335.818, 55.0892, 0.2746", "148.971, 335.059, 55.3134, 0.2744", "148.725, 333.943, 55.4851, 0.2744", "148.479, 332.825, 55.6172, 0.2742", "148.174, 331.723, 55.7239, 0.2736", "147.844, 330.629, 55.8219, 0.2728", "147.559, 329.534, 55.9572, 0.2712", "147.389, 328.439, 56.2052, 0.2684", "147.221, 327.344, 56.5312, 0.2626", "147.322, 326.29, 56.8635, 0.2542", "147.909, 325.309, 57.1183, 0.2288", "148.497, 324.327, 57.44, 0.2288" ],
    "parent" : "apic_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "apic_11",
    "id" : "apic_11",
    "points3d" : [ "254.768, 413.962, 33.8128, 0.7554", "254.871, 414.415, 33.8934, 0.2288", "255.025, 415.402, 34.7917, 0.3002", "255.401, 416.392, 35.1649, 0.324", "255.645, 417.398, 35.4544, 0.3558", "255.171, 418.437, 35.7056, 0.4764", "254.269, 419.138, 35.8884, 0.4006", "253.968, 420.214, 36.0284, 0.339", "253.738, 421.334, 36.1346, 0.2994", "253.508, 422.455, 36.2443, 0.3228" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_2",
    "id" : "apic_2",
    "points3d" : [ "254.768, 413.962, 33.8128, 0.7554", "255.133, 413.852, 34.0248, 0.4612", "256.243, 413.613, 34.2465, 0.3818", "257.304, 413.238, 34.4786, 0.489" ],
    "parent" : "apic_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_13",
    "id" : "apic_13",
    "points3d" : [ "253.508, 422.455, 36.2443, 0.3228", "253.474, 422.504, 36.5918, 0.3538", "252.959, 423.412, 36.9152, 0.4722", "252.395, 424.407, 37.168, 0.3934", "251.832, 425.402, 37.3517, 0.3254", "251.268, 426.398, 37.4707, 0.2746", "250.608, 427.33, 37.5284, 0.2746", "249.914, 428.239, 37.5309, 0.2746", "249.319, 429.181, 37.5239, 0.2746", "249.34, 430.324, 37.5211, 0.2746", "249.362, 431.468, 37.5217, 0.2746", "248.908, 432.506, 37.5208, 0.2746", "248.406, 433.534, 37.5186, 0.2746", "247.796, 434.499, 37.5161, 0.2746", "247.144, 435.438, 37.513, 0.2746", "246.535, 436.398, 37.5096, 0.2746", "246.281, 437.514, 37.5091, 0.2746", "246.026, 438.629, 37.5108, 0.2748", "245.772, 439.744, 37.5144, 0.2748", "245.518, 440.86, 37.5189, 0.2752", "245.199, 441.957, 37.5228, 0.2758", "244.832, 443.04, 37.5259, 0.2766", "244.465, 444.124, 37.5278, 0.2782", "243.74, 444.914, 37.5276, 0.2814", "243.336, 445.839, 37.5262, 0.287", "243.297, 446.983, 37.5262, 0.2988", "243.258, 448.125, 37.5278, 0.3142", "243.219, 449.269, 37.532, 0.3734", "242.789, 450.31, 37.5483, 0.3338", "242.266, 451.327, 37.5746, 0.3", "241.743, 452.345, 37.6048, 0.2746", "241.22, 453.362, 37.6331, 0.2746", "240.777, 454.412, 37.648, 0.2746", "240.419, 455.499, 37.6387, 0.2746", "240.06, 456.584, 37.6026, 0.2746", "239.701, 457.671, 37.5326, 0.2746", "239.248, 458.675, 37.4214, 0.2746", "238.225, 459.187, 37.2702, 0.2746", "237.164, 459.308, 37.072, 0.2746", "236.134, 459.157, 36.7881, 0.2746", "235.479, 459.805, 36.2488, 0.2746", "234.823, 460.453, 35.5407, 0.2746", "234.691, 461.574, 34.9625, 0.2746", "234.576, 462.712, 34.5181, 0.2746", "233.982, 463.661, 34.2082, 0.2746", "233.288, 464.569, 34.0197, 0.2746", "232.594, 465.479, 33.931, 0.2746", "232.203, 466.537, 33.8545, 0.2746", "231.882, 467.629, 33.7473, 0.2746", "231.412, 468.633, 33.6314, 0.2746", "230.58, 469.418, 33.5409, 0.2746", "229.747, 470.202, 33.4746, 0.2746", "229.03, 471.05, 33.4272, 0.2746", "228.802, 472.168, 33.3894, 0.2746", "228.204, 473.142, 33.3724, 0.2746", "227.531, 474.044, 33.3609, 0.2746", "226.559, 474.646, 33.3357, 0.2746", "225.591, 475.254, 33.2959, 0.2746", "224.702, 475.975, 33.2402, 0.2746", "223.814, 476.696, 33.1702, 0.2746", "223.305, 477.713, 33.049, 0.2746", "222.801, 478.731, 32.8924, 0.2746", "222.295, 479.75, 32.7152, 0.2746", "221.723, 480.734, 32.559, 0.2744", "220.906, 481.452, 32.4514, 0.2744", "220.405, 482.37, 32.3571, 0.2742", "220.105, 483.474, 32.2638, 0.2736", "219.805, 484.578, 32.1597, 0.2728", "219.895, 485.686, 31.941, 0.2712", "219.833, 486.813, 31.7114, 0.2684", "219.354, 487.835, 31.4698, 0.2626", "219.502, 488.966, 31.2455, 0.2542", "219.146, 489.809, 30.9355, 0.2288", "218.335, 490.393, 29.825, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_12",
    "id" : "apic_12",
    "points3d" : [ "253.508, 422.455, 36.2443, 0.3228", "252.85, 422.178, 38.0324, 0.2288", "252.492, 421.691, 39.9473, 0.3734", "252.477, 420.931, 40.8582, 0.3338", "252.89, 419.879, 41.6256, 0.3", "253.317, 418.817, 42.2587, 0.2744", "253.744, 417.756, 42.7843, 0.2744", "253.951, 416.724, 43.2488, 0.2742", "253.307, 415.807, 43.7382, 0.2736", "252.663, 414.891, 44.2974, 0.2728", "252.02, 413.975, 44.9873, 0.2712", "251.578, 413.216, 45.9304, 0.2684", "251.149, 412.467, 47.0358, 0.2626", "250.266, 412.192, 48.0298, 0.2542", "249.755, 412.806, 48.9602, 0.2288", "249.546, 413.717, 50.9642, 0.2288" ],
    "parent" : "apic_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_6",
    "id" : "apic_6",
    "points3d" : [ "257.304, 413.238, 34.4786, 0.489", "258.431, 413.319, 34.7488, 0.2288", "259.563, 413.455, 34.734, 0.5424", "260.461, 414.064, 34.729, 0.5238", "261.558, 414.357, 34.7253, 0.5658", "262.585, 414.686, 34.7225, 0.7282", "263.409, 415.322, 34.7208, 1.0766", "264.281, 416.036, 34.72, 1.2658", "265.081, 416.828, 34.72, 1.316", "266.014, 417.484, 34.72, 1.2652", "266.705, 418.328, 34.72, 1.1848", "267.532, 418.969, 34.72, 0.9696", "268.039, 419.935, 34.72, 0.8904", "268.433, 420.942, 34.72, 0.563" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_3",
    "id" : "apic_3",
    "points3d" : [ "257.304, 413.238, 34.4786, 0.489", "257.97, 412.348, 34.5386, 0.598", "258.732, 411.526, 34.6287, 0.5464", "259.512, 410.695, 34.6836, 0.5404", "260.189, 409.776, 34.659, 0.7798", "260.639, 408.766, 34.4868, 0.6944", "261.272, 407.819, 34.2852, 0.8168", "261.969, 406.912, 34.1018, 0.596", "262.697, 406.034, 33.9016, 0.5302", "263.568, 405.36, 33.6328, 0.5716", "264.513, 404.717, 33.4306, 0.7684", "265.395, 403.99, 33.3063, 0.7796", "266.251, 403.23, 33.2388, 0.6858", "267.188, 402.574, 33.2231, 0.612", "268.007, 401.775, 33.2573, 0.6738" ],
    "parent" : "apic_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_8",
    "id" : "apic_8",
    "points3d" : [ "268.433, 420.942, 34.72, 0.563", "269.16, 420.961, 32.2955, 0.2288", "270.277, 420.961, 31.6134, 0.475", "271.285, 421.285, 31.3362, 0.713", "272.154, 422.03, 31.0806, 0.7636", "273.096, 422.3, 30.6631, 0.694", "273.861, 423.1, 30.2879, 0.6704", "274.863, 423.536, 29.969, 0.5732", "275.76, 423.072, 29.6909, 0.6536", "276.758, 422.621, 29.3818, 0.6804", "277.848, 422.34, 29.0226, 0.6398", "278.938, 422.058, 28.6308, 0.5432", "279.597, 422.837, 28.2425, 0.696", "280.589, 423.148, 27.743, 0.513", "281.607, 423.136, 27.1816, 0.3782", "282.526, 422.455, 26.6829, 0.2782", "283.622, 422.308, 26.2273, 0.2814", "284.581, 422.496, 25.5962, 0.287", "285.279, 422.846, 24.8735, 0.2988", "284.723, 423.801, 24.2553, 0.3142", "283.726, 424.344, 23.6631, 0.3734", "282.728, 424.887, 23.0832, 0.3338", "281.731, 425.431, 22.521, 0.2998" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_7",
    "id" : "apic_7",
    "points3d" : [ "268.433, 420.942, 34.72, 0.563", "269.21, 421.709, 34.72, 0.3768", "270.093, 422.301, 34.72, 0.2758", "270.655, 423.272, 34.72, 0.2768", "271.412, 424.113, 34.72, 0.279", "271.922, 425.017, 34.72, 0.2826", "272.5, 425.991, 34.72, 0.2894", "272.971, 427.012, 34.72, 0.3018", "273.461, 428.02, 34.72, 0.327", "274.434, 428.425, 34.72, 0.3612", "274.943, 429.438, 34.72, 0.4866", "275.524, 430.351, 34.72, 0.4194", "276.124, 431.263, 34.72, 0.3762", "276.632, 432.116, 34.72, 0.3584", "277.271, 433.045, 34.72, 0.481", "278.078, 433.854, 34.72, 0.4088", "278.688, 434.815, 34.72, 0.3554", "279.243, 435.808, 34.72, 0.3248", "280.024, 436.628, 34.72, 0.3934", "280.561, 437.605, 34.72, 0.372", "281.307, 438.375, 34.72, 0.365", "282.165, 439.107, 34.72, 0.4228", "283.246, 439.304, 34.72, 0.415", "283.81, 440.225, 34.72, 0.5018", "284.035, 441.346, 34.72, 0.4006", "284.181, 442.481, 34.72, 0.339", "285.241, 442.743, 34.72, 0.2994", "285.771, 443.603, 34.72, 0.3228", "286.328, 444.556, 34.72, 0.3538", "286.738, 445.595, 34.72, 0.4722", "286.962, 446.704, 34.72, 0.3934", "287.462, 447.712, 34.72, 0.3254", "288.018, 448.709, 34.72, 0.2746", "288.727, 449.577, 34.72, 0.2746", "289.47, 450.444, 34.72, 0.2746", "290.412, 451.025, 34.72, 0.2746", "291.398, 451.586, 34.72, 0.2746", "292.254, 452.346, 34.72, 0.2746", "293.0, 453.196, 34.72, 0.2746", "293.886, 453.789, 34.72, 0.2746", "294.409, 454.784, 34.72, 0.2746", "294.923, 455.757, 34.72, 0.2746", "295.806, 456.359, 34.72, 0.2746", "296.718, 457.007, 34.72, 0.2746", "297.685, 457.535, 34.72, 0.2746", "298.172, 458.567, 34.72, 0.2746", "299.048, 459.299, 34.72, 0.2746", "299.985, 459.899, 34.72, 0.2746", "300.935, 460.381, 34.72, 0.2746", "301.887, 460.977, 34.72, 0.2746", "302.841, 461.543, 34.72, 0.2746", "303.823, 462.072, 34.72, 0.2746", "304.748, 462.674, 34.72, 0.2746", "305.796, 462.978, 34.72, 0.2746", "306.931, 463.091, 34.72, 0.2746", "308.075, 463.106, 34.72, 0.2746", "309.073, 463.583, 34.72, 0.2746", "309.739, 464.508, 34.72, 0.2746", "310.813, 464.715, 34.72, 0.2746", "311.877, 465.051, 34.72, 0.2746", "313.018, 465.14, 34.72, 0.2746", "314.161, 465.15, 34.72, 0.2746", "315.299, 465.228, 34.72, 0.2746", "316.43, 465.383, 34.72, 0.2746", "317.538, 465.594, 34.72, 0.2746", "318.68, 465.608, 34.72, 0.2746", "319.823, 465.608, 34.72, 0.2746", "320.967, 465.608, 34.72, 0.2746", "322.078, 465.793, 34.72, 0.2746", "323.201, 465.885, 34.72, 0.2746", "324.15, 466.484, 34.72, 0.2746", "325.065, 467.082, 34.72, 0.2746", "325.719, 467.936, 34.72, 0.2746", "326.749, 468.296, 34.72, 0.2744", "327.773, 468.689, 34.72, 0.2744", "328.76, 469.162, 34.72, 0.2742", "329.195, 470.202, 34.72, 0.2736", "329.89, 470.882, 34.72, 0.2728", "330.987, 471.191, 34.72, 0.2712", "332.023, 471.561, 34.72, 0.2684", "332.218, 472.587, 34.72, 0.2626", "332.499, 473.69, 34.72, 0.2542", "333.228, 474.546, 34.72, 0.2288", "334.162, 474.989, 34.72, 0.2288" ],
    "parent" : "apic_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "apic_5",
    "id" : "apic_5",
    "points3d" : [ "268.007, 401.775, 33.2573, 0.6738", "268.786, 401.947, 31.7682, 0.2288", "269.683, 402.251, 31.6593, 0.2872", "270.737, 401.807, 31.6159, 0.2988", "271.749, 402.278, 31.5535, 0.3142", "272.758, 402.817, 31.4728, 0.3736", "273.765, 402.689, 31.3275, 0.3342", "274.772, 402.193, 31.1077, 0.3008", "275.792, 402.578, 30.9075, 0.2764", "276.82, 402.744, 30.7345, 0.2778", "277.879, 402.33, 30.581, 0.2806", "278.967, 402.039, 30.4114, 0.2856", "279.89, 401.939, 30.2044, 0.295", "280.7, 402.529, 30.0362, 0.3132", "281.844, 402.526, 29.8844, 0.3406", "282.988, 402.496, 29.7427, 0.4248", "283.991, 402.955, 29.5859, 0.4188", "284.946, 403.583, 29.4062, 0.5084", "285.864, 403.25, 29.204, 0.4128", "286.761, 402.583, 28.9276, 0.3624", "287.643, 401.989, 28.495, 0.3388", "288.575, 401.754, 28.0045, 0.4142", "289.108, 401.19, 27.5568, 0.435", "290.18, 401.075, 27.1527, 0.3636", "291.197, 400.705, 26.7778, 0.3078", "292.082, 400.22, 26.2704, 0.2892", "292.819, 399.751, 25.6281, 0.3014", "292.655, 398.755, 25.0454, 0.3248", "293.685, 398.499, 24.3802, 0.365", "294.733, 398.216, 23.7129, 0.4572", "295.621, 397.628, 23.1745, 0.5404", "296.307, 396.82, 22.71, 0.4348", "297.281, 396.388, 22.1964, 0.3564", "298.298, 395.99, 21.688, 0.3264", "299.393, 395.66, 21.2934, 0.3976", "300.531, 395.543, 20.9625, 0.3734", "301.317, 394.877, 20.6699, 0.3988", "302.105, 394.291, 20.3146, 0.3336", "303.081, 394.07, 19.8313, 0.2994", "304.166, 394.014, 19.3785, 0.2736", "305.31, 394.048, 19.0252, 0.2728", "306.346, 393.83, 18.7695, 0.2712", "307.167, 393.233, 18.6088, 0.2684", "308.208, 393.707, 18.5259, 0.2626", "309.3, 393.951, 18.4946, 0.2542", "310.244, 394.324, 18.4727, 0.2288", "310.04, 395.405, 18.4999, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "apic_4",
    "id" : "apic_4",
    "points3d" : [ "268.007, 401.775, 33.2573, 0.6738", "268.448, 401.232, 33.3357, 0.5126", "269.111, 400.306, 33.4471, 0.4094", "269.653, 399.321, 33.6311, 0.4096", "270.22, 398.367, 33.892, 0.3958", "270.841, 397.407, 34.132, 0.4398", "271.542, 396.508, 34.3566, 0.4118", "272.384, 395.738, 34.575, 0.4344", "273.315, 395.078, 34.8009, 0.572", "274.287, 394.565, 35.0902, 0.5928", "275.237, 394.186, 35.518, 0.6238", "276.108, 393.614, 36.0136, 0.4908", "276.949, 392.858, 36.4092, 0.4796", "277.699, 392.113, 36.566, 0.4622", "278.408, 391.4, 36.5674, 0.4134", "279.162, 390.615, 36.6565, 0.4016", "279.865, 389.77, 36.7228, 0.457", "280.603, 388.911, 36.7184, 0.6426", "281.453, 388.161, 36.7517, 0.8114", "282.226, 387.361, 36.769, 0.6042", "282.95, 386.496, 36.7063, 0.4548", "283.794, 385.734, 36.615, 0.412", "284.594, 384.927, 36.5439, 0.5702", "285.335, 384.057, 36.5, 0.6256", "286.124, 383.229, 36.4764, 0.5094", "286.93, 382.416, 36.4776, 0.4416", "287.729, 381.597, 36.4994, 0.513", "288.47, 380.728, 36.5369, 0.6044", "289.236, 379.9, 36.6234, 0.744", "290.015, 379.08, 36.6999, 0.6924", "290.82, 378.276, 36.7226, 0.5002", "291.727, 377.592, 36.7455, 0.3844", "292.684, 377.004, 36.8332, 0.373", "293.68, 376.467, 36.937, 0.5094", "294.686, 375.95, 36.9642, 0.4566", "295.67, 375.414, 37.0143, 0.4682", "296.63, 374.93, 36.997, 0.4174", "297.667, 374.471, 36.9384, 0.4448", "298.681, 373.943, 36.9018, 0.5922", "299.645, 373.384, 36.9583, 0.625", "300.555, 372.79, 37.1272, 0.709", "301.509, 372.158, 37.2722, 0.524", "302.507, 371.609, 37.3988, 0.462", "303.531, 371.104, 37.499, 0.3564", "304.535, 370.562, 37.5687, 0.3416", "305.513, 369.986, 37.6138, 0.354", "306.424, 369.293, 37.6519, 0.4102", "307.429, 368.784, 37.7014, 0.5816", "308.37, 368.224, 37.774, 0.5746", "309.231, 367.501, 37.8829, 0.7648", "310.279, 367.064, 38.0363, 0.5876", "311.33, 366.685, 38.2746, 0.5446", "312.298, 366.135, 38.5764, 0.4518", "313.137, 365.417, 38.9231, 0.5702", "313.933, 364.644, 39.2655, 0.5256", "314.869, 363.993, 39.5209, 0.58", "315.904, 363.515, 39.7032, 0.7016", "316.88, 362.934, 39.8278, 0.5986", "317.76, 362.204, 39.9176, 0.6288", "318.691, 361.547, 39.9949, 0.5258", "319.687, 360.986, 40.0817, 0.6488", "320.739, 360.545, 40.2069, 0.4972", "321.538, 359.822, 40.4239, 0.459", "322.234, 358.932, 40.6829, 0.3512", "322.788, 357.938, 40.9318, 0.3322", "323.419, 356.991, 41.1667, 0.3334", "324.205, 356.165, 41.3994, 0.3876", "325.064, 355.448, 41.6842, 0.4642", "325.9, 354.804, 42.0781, 0.723", "326.806, 354.181, 42.5001, 0.6368", "327.81, 353.649, 42.838, 0.4786", "328.637, 352.885, 43.0721, 0.4052", "329.517, 352.171, 43.2076, 0.346", "330.433, 351.51, 43.2552, 0.322", "331.246, 350.781, 43.4126, 0.3162", "331.879, 349.888, 43.6965, 0.3478", "332.541, 348.974, 44.0387, 0.4304", "333.402, 348.228, 44.3786, 0.466", "334.139, 347.375, 44.7465, 0.4158", "334.842, 346.5, 45.1396, 0.431", "335.725, 345.787, 45.4829, 0.3882", "336.58, 345.101, 45.8615, 0.4274", "337.05, 344.069, 46.1714, 0.3816", "337.774, 343.186, 46.4117, 0.4142", "338.512, 342.312, 46.5934, 0.3618", "339.306, 341.489, 46.737, 0.3538", "340.11, 340.677, 46.8745, 0.3636", "340.872, 339.874, 47.0921, 0.4908", "341.556, 338.964, 47.3127, 0.427", "342.21, 338.026, 47.4984, 0.3902", "342.825, 337.06, 47.6552, 0.3848", "343.471, 336.116, 47.7901, 0.525", "344.195, 335.231, 47.9111, 0.5166", "345.003, 334.421, 48.036, 0.4296", "345.799, 333.64, 48.2572, 0.3864", "346.638, 332.878, 48.5198, 0.4204", "347.598, 332.257, 48.7564, 0.616", "348.613, 331.73, 48.9751, 0.5612", "349.612, 331.177, 49.1963, 0.428", "350.474, 330.479, 49.5004, 0.3342", "351.343, 329.749, 49.8061, 0.3326", "352.351, 329.214, 50.0959, 0.409", "353.39, 328.79, 50.4372, 0.3946", "354.459, 328.456, 50.7954, 0.4392", "355.346, 327.735, 51.1011, 0.4046", "356.144, 326.929, 51.3979, 0.4512", "356.905, 326.121, 51.7392, 0.4576", "357.63, 325.237, 52.024, 0.4002", "358.388, 324.386, 52.257, 0.4014", "359.327, 323.742, 52.4801, 0.3384", "360.218, 323.079, 52.7719, 0.3082", "361.1, 322.366, 53.0474, 0.2902", "361.845, 321.498, 53.2776, 0.3028", "362.685, 320.725, 53.4951, 0.329", "363.546, 319.992, 53.7438, 0.3652", "364.328, 319.197, 54.0355, 0.4938", "365.112, 318.364, 54.2786, 0.4322", "365.835, 317.478, 54.4922, 0.401", "366.523, 316.579, 54.7173, 0.399", "367.297, 315.789, 54.9956, 0.582", "368.109, 314.984, 55.223, 0.473", "368.941, 314.2, 55.3924, 0.3882", "369.797, 313.458, 55.5506, 0.347", "370.608, 312.706, 55.7329, 0.3934", "371.508, 312.004, 55.827, 0.571", "372.263, 311.277, 55.7578, 0.4526", "372.89, 310.709, 55.5106, 0.3508", "373.723, 309.942, 55.361, 0.2746", "374.548, 309.151, 55.2787, 0.2746", "375.373, 308.361, 55.2628, 0.2746", "376.198, 307.57, 55.3196, 0.2746", "377.022, 306.78, 55.4378, 0.2748", "377.847, 305.99, 55.5895, 0.2748", "378.672, 305.2, 55.7396, 0.2752", "379.498, 304.409, 55.8919, 0.2758", "380.323, 303.619, 56.0476, 0.2766", "381.148, 302.828, 56.2075, 0.2782", "381.972, 302.038, 56.3744, 0.2814", "382.797, 301.247, 56.5508, 0.2872", "383.622, 300.457, 56.74, 0.2988", "384.447, 299.666, 56.945, 0.3142", "385.272, 298.876, 57.1684, 0.3736", "386.066, 298.07, 57.449, 0.3342", "386.856, 297.263, 57.7797, 0.3006", "387.647, 296.454, 58.1473, 0.2758", "388.437, 295.646, 58.5399, 0.2768", "389.227, 294.839, 58.9453, 0.2786", "390.017, 294.031, 59.3522, 0.2822", "390.808, 293.222, 59.7481, 0.2888", "391.598, 292.414, 60.1289, 0.3006", "392.387, 291.607, 60.4918, 0.3238", "393.178, 290.799, 60.8356, 0.3626", "394.209, 290.45, 61.1086, 0.4528", "395.342, 290.296, 61.3068, 0.532", "396.239, 289.715, 61.4827, 0.4192", "396.982, 288.85, 61.6678, 0.3264", "397.724, 287.986, 61.8663, 0.2766", "398.468, 287.121, 62.0819, 0.2784", "399.21, 286.257, 62.3171, 0.2818", "399.953, 285.394, 62.5652, 0.2882", "400.695, 284.529, 62.8163, 0.2994", "401.438, 283.665, 63.0661, 0.3228", "402.18, 282.801, 63.315, 0.3538", "402.922, 281.936, 63.562, 0.4722", "403.713, 281.119, 63.8053, 0.3934", "404.54, 280.333, 64.0441, 0.3254", "405.366, 279.548, 64.279, 0.2746", "406.192, 278.762, 64.5103, 0.2746", "407.018, 277.976, 64.7382, 0.2746", "407.844, 277.19, 64.9628, 0.2746", "408.67, 276.404, 65.1837, 0.2746", "409.496, 275.618, 65.399, 0.2746", "410.322, 274.833, 65.6071, 0.2746", "411.148, 274.047, 65.8056, 0.2746", "411.974, 273.262, 65.994, 0.2746", "412.793, 272.466, 66.1578, 0.2746", "413.602, 271.658, 66.2824, 0.2748", "414.411, 270.849, 66.3807, 0.2748", "415.219, 270.04, 66.467, 0.2752", "416.028, 269.231, 66.5563, 0.2758", "416.837, 268.422, 66.663, 0.2766", "417.647, 267.612, 66.7996, 0.2784", "418.437, 266.793, 66.9872, 0.2818", "419.115, 265.91, 67.3025, 0.2882", "419.793, 265.027, 67.7141, 0.2994", "420.47, 264.144, 68.1901, 0.3228", "421.149, 263.261, 68.7016, 0.3538", "421.826, 262.378, 69.2213, 0.4722", "422.59, 261.574, 69.7052, 0.3934", "423.541, 260.943, 70.0983, 0.3254", "424.491, 260.311, 70.42, 0.2746", "425.442, 259.68, 70.6891, 0.2746", "426.393, 259.048, 70.9232, 0.2746", "427.344, 258.417, 71.1385, 0.2746", "428.294, 257.785, 71.3499, 0.2746", "429.245, 257.154, 71.5688, 0.2744", "430.195, 256.523, 71.7973, 0.2744", "431.146, 255.891, 72.0384, 0.2742", "432.097, 255.26, 72.2974, 0.2736", "433.047, 254.628, 72.5813, 0.2728", "433.998, 253.997, 72.9193, 0.2712", "434.949, 253.365, 73.295, 0.2684", "435.9, 252.735, 73.6949, 0.2626", "436.671, 252.048, 74.2384, 0.2542", "437.409, 251.352, 74.8936, 0.2288", "438.15, 250.656, 76.5492, 0.2288" ],
    "parent" : "apic_3",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "apic_10",
    "id" : "apic_10",
    "points3d" : [ "281.731, 425.431, 22.521, 0.2998", "281.884, 425.87, 21.7605, 0.2744", "282.291, 426.199, 20.8606, 0.2742", "283.341, 426.038, 20.1272, 0.2736", "283.868, 426.702, 19.5185, 0.2728", "283.13, 427.515, 18.9465, 0.2712", "283.308, 428.158, 18.4898, 0.2684", "284.163, 428.76, 18.1902, 0.2626", "284.208, 429.896, 17.9469, 0.2542", "284.226, 431.026, 17.7243, 0.2288", "283.808, 432.091, 17.4303, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  }, {
    "name" : "apic_9",
    "id" : "apic_9",
    "points3d" : [ "281.731, 425.431, 22.521, 0.2998", "281.782, 426.561, 22.1752, 0.4576", "280.67, 426.349, 21.5163, 0.3644", "280.011, 425.638, 21.2825, 0.305", "280.001, 424.6, 20.8939, 0.305", "279.806, 423.527, 19.8254, 0.2288" ],
    "parent" : "apic_8",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "ModelViewParmSubset_76",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_77",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_16", "dend_11", "dend_6", "dend_3", "dend_0", "apic_0", "dend_13", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "apic_14", "apic_1", "dend_15", "dend_14", "dend_9", "dend_8", "apic_16", "apic_15", "apic_11", "apic_2", "apic_13", "apic_12", "apic_6", "apic_3", "apic_8", "apic_7", "apic_5", "apic_4", "apic_10", "apic_9" ]
  }, {
    "name" : "apic",
    "groups" : [ ],
    "sections" : [ "apic_0", "apic_14", "apic_1", "apic_16", "apic_15", "apic_11", "apic_2", "apic_13", "apic_12", "apic_6", "apic_3", "apic_8", "apic_7", "apic_5", "apic_4", "apic_10", "apic_9" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_17", "dend_16", "dend_11", "dend_6", "dend_3", "dend_0", "dend_13", "dend_12", "dend_10", "dend_7", "dend_5", "dend_4", "dend_2", "dend_1", "dend_15", "dend_14", "dend_9", "dend_8" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2897",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "apic_0", "apic_0", "apic_0", "apic_0", "apic_0", "axon_1", "axon_1", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_14", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "apic_1", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_16", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_15", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_11", "apic_2", "apic_2", "apic_2", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_13", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_12", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_6", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_3", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_8", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_7", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_5", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_4", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_10", "apic_9", "apic_9", "apic_9", "apic_9", "apic_9" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "1.0"
  }, {
    "group" : "axon",
    "value" : "1.0"
  }, {
    "group" : "dend",
    "value" : "3.6151998"
  }, {
    "group" : "apic",
    "value" : "3.6151998"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "79.82441"
  } ],
  "channelDensity" : [ {
    "id" : "Im_soma",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "5.251794E-5",
    "erev" : "-107.0"
  }, {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "0.0011383661",
    "erev" : "-45.0"
  }, {
    "id" : "NaTs_soma",
    "ionChannel" : "NaTs",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.72174793",
    "erev" : "53.0"
  }, {
    "id" : "Nap_soma",
    "ionChannel" : "Nap",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "9.50942E-4",
    "erev" : "53.0"
  }, {
    "id" : "K_P_soma",
    "ionChannel" : "K_P",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.01464112",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.005187226",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.001480883",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.26151165",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "6.200297E-4",
    "erev" : "-86.60005"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "6.8067876E-4",
    "erev" : "-86.60005"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "2.0434202E-4",
    "erev" : "-86.60005"
  }, {
    "id" : "pas_apic",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apic",
    "condDens" : "2.5136883E-6",
    "erev" : "-86.60005"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "4.694727E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0045518596",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_329322394",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_329322394

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_17, id: dend_17, parent: soma_0
create dend_17
public dend_17
// Section: dend_16, id: dend_16, parent: soma_0
create dend_16
public dend_16
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_6, id: dend_6, parent: soma_0
create dend_6
public dend_6
// Section: dend_3, id: dend_3, parent: soma_0
create dend_3
public dend_3
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: apic_0, id: apic_0, parent: soma_0
create apic_0
public apic_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_13, id: dend_13, parent: dend_11
create dend_13
public dend_13
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_5, id: dend_5, parent: dend_3
create dend_5
public dend_5
// Section: dend_4, id: dend_4, parent: dend_3
create dend_4
public dend_4
// Section: dend_2, id: dend_2, parent: dend_0
create dend_2
public dend_2
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: apic_14, id: apic_14, parent: apic_0
create apic_14
public apic_14
// Section: apic_1, id: apic_1, parent: apic_0
create apic_1
public apic_1
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: apic_16, id: apic_16, parent: apic_14
create apic_16
public apic_16
// Section: apic_15, id: apic_15, parent: apic_14
create apic_15
public apic_15
// Section: apic_11, id: apic_11, parent: apic_1
create apic_11
public apic_11
// Section: apic_2, id: apic_2, parent: apic_1
create apic_2
public apic_2
// Section: apic_13, id: apic_13, parent: apic_11
create apic_13
public apic_13
// Section: apic_12, id: apic_12, parent: apic_11
create apic_12
public apic_12
// Section: apic_6, id: apic_6, parent: apic_2
create apic_6
public apic_6
// Section: apic_3, id: apic_3, parent: apic_2
create apic_3
public apic_3
// Section: apic_8, id: apic_8, parent: apic_6
create apic_8
public apic_8
// Section: apic_7, id: apic_7, parent: apic_6
create apic_7
public apic_7
// Section: apic_5, id: apic_5, parent: apic_3
create apic_5
public apic_5
// Section: apic_4, id: apic_4, parent: apic_3
create apic_4
public apic_4
// Section: apic_10, id: apic_10, parent: apic_8
create apic_10
public apic_10
// Section: apic_9, id: apic_9, parent: apic_8
create apic_9
public apic_9

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=ModelViewParmSubset_76, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_76
// Group: {name=ModelViewParmSubset_77, groups=[], sections=[dend_17, dend_16, dend_11, dend_6, dend_3, dend_0, apic_0, dend_13, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_14, apic_1, dend_15, dend_14, dend_9, dend_8, apic_16, apic_15, apic_11, apic_2, apic_13, apic_12, apic_6, apic_3, apic_8, apic_7, apic_5, apic_4, apic_10, apic_9]}
objref ModelViewParmSubset_77
// Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_16, apic_15, apic_11, apic_2, apic_13, apic_12, apic_6, apic_3, apic_8, apic_7, apic_5, apic_4, apic_10, apic_9]}
objref apic
// Group: {name=dend, groups=[], sections=[dend_17, dend_16, dend_11, dend_6, dend_3, dend_0, dend_13, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_15, dend_14, dend_9, dend_8]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_2897, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_2897
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_2, apic_2, apic_2, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_329322394
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.4999999999999986)
    connect dend_17(0), soma_0(0.4999999999999986)
    connect dend_16(0), soma_0(0.4999999999999986)
    connect dend_11(0), soma_0(0.4999999999999986)
    connect dend_6(0), soma_0(0.4999999999999986)
    connect dend_3(0), soma_0(0.4999999999999986)
    connect dend_0(0), soma_0(0.4999999999999986)
    connect apic_0(0), soma_0(0.4999999999999986)
    connect axon_1(0), axon_0(1.0)
    connect dend_13(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_5(0), dend_3(1.0)
    connect dend_4(0), dend_3(1.0)
    connect dend_2(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect apic_14(0), apic_0(1.0)
    connect apic_1(0), apic_0(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect apic_16(0), apic_14(1.0)
    connect apic_15(0), apic_14(1.0)
    connect apic_11(0), apic_1(1.0)
    connect apic_2(0), apic_1(1.0)
    connect apic_13(0), apic_11(1.0)
    connect apic_12(0), apic_11(1.0)
    connect apic_6(0), apic_2(1.0)
    connect apic_3(0), apic_2(1.0)
    connect apic_8(0), apic_6(1.0)
    connect apic_7(0), apic_6(1.0)
    connect apic_5(0), apic_3(1.0)
    connect apic_4(0), apic_3(1.0)
    connect apic_10(0), apic_8(1.0)
    connect apic_9(0), apic_8(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 233.61, 423.28, 29.68, 10.2864 ) }
    soma_0 { pt3dadd( 238.753, 423.28, 29.68, 10.2864 ) }
    soma_0 { pt3dadd( 243.896, 423.28, 29.68, 10.2864 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 238.753, 423.28, 29.68, 1.0 ) }
    axon_0 { pt3dadd( 244.594, 437.096, 29.68, 1.0 ) }
    axon_0 { pt3dadd( 250.436, 450.912, 29.68, 1.0 ) }
    // Section: dend_17, id: dend_17, parent: soma_0 (entry count 6/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 240.497, 418.615, 27.7463, 0.2288 ) }
    dend_17 { pt3dadd( 241.152, 417.837, 27.6853, 0.2752 ) }
    dend_17 { pt3dadd( 241.907, 417.169, 27.6713, 0.2758 ) }
    dend_17 { pt3dadd( 242.135, 416.048, 27.6564, 0.2768 ) }
    dend_17 { pt3dadd( 242.362, 414.927, 27.6382, 0.279 ) }
    dend_17 { pt3dadd( 242.921, 413.93, 27.6004, 0.2824 ) }
    dend_17 { pt3dadd( 243.488, 412.936, 27.5442, 0.2892 ) }
    dend_17 { pt3dadd( 243.806, 411.88, 27.4725, 0.3014 ) }
    dend_17 { pt3dadd( 243.865, 410.781, 27.3868, 0.3264 ) }
    dend_17 { pt3dadd( 244.811, 410.138, 27.2885, 0.3604 ) }
    dend_17 { pt3dadd( 245.93, 410.181, 27.1732, 0.4846 ) }
    dend_17 { pt3dadd( 247.048, 410.235, 26.9968, 0.4162 ) }
    dend_17 { pt3dadd( 248.13, 410.18, 26.6991, 0.3676 ) }
    dend_17 { pt3dadd( 248.989, 409.56, 26.4048, 0.3546 ) }
    dend_17 { pt3dadd( 249.759, 408.715, 26.1576, 0.4146 ) }
    dend_17 { pt3dadd( 250.736, 408.156, 25.9602, 0.5758 ) }
    dend_17 { pt3dadd( 251.81, 407.794, 25.818, 0.631 ) }
    dend_17 { pt3dadd( 252.893, 407.826, 25.7191, 0.544 ) }
    dend_17 { pt3dadd( 253.822, 408.481, 25.5909, 0.387 ) }
    dend_17 { pt3dadd( 254.78, 408.617, 25.4402, 0.3044 ) }
    dend_17 { pt3dadd( 255.778, 408.058, 25.2938, 0.2824 ) }
    dend_17 { pt3dadd( 256.869, 408.31, 25.1395, 0.289 ) }
    dend_17 { pt3dadd( 257.969, 408.19, 24.8755, 0.3014 ) }
    dend_17 { pt3dadd( 258.892, 407.922, 24.5479, 0.3248 ) }
    dend_17 { pt3dadd( 259.347, 407.134, 24.269, 0.3648 ) }
    dend_17 { pt3dadd( 260.474, 407.042, 24.0352, 0.457 ) }
    dend_17 { pt3dadd( 261.617, 407.043, 23.8342, 0.5398 ) }
    dend_17 { pt3dadd( 262.723, 406.896, 23.5757, 0.4336 ) }
    dend_17 { pt3dadd( 263.816, 406.7, 23.2462, 0.3528 ) }
    dend_17 { pt3dadd( 264.763, 406.858, 22.8794, 0.3262 ) }
    dend_17 { pt3dadd( 265.534, 407.112, 22.5473, 0.3672 ) }
    dend_17 { pt3dadd( 266.494, 406.49, 22.2631, 0.4612 ) }
    dend_17 { pt3dadd( 267.529, 406.528, 21.8943, 0.548 ) }
    dend_17 { pt3dadd( 268.46, 406.859, 21.411, 0.4486 ) }
    dend_17 { pt3dadd( 269.349, 407.063, 21.0787, 0.382 ) }
    dend_17 { pt3dadd( 270.408, 407.496, 20.8258, 0.375 ) }
    dend_17 { pt3dadd( 271.467, 407.929, 20.6312, 0.4832 ) }
    dend_17 { pt3dadd( 272.286, 408.695, 20.4982, 0.5532 ) }
    dend_17 { pt3dadd( 273.401, 408.44, 20.4098, 0.6296 ) }
    dend_17 { pt3dadd( 274.4, 408.846, 20.3314, 0.5736 ) }
    dend_17 { pt3dadd( 275.362, 409.465, 20.2199, 0.5138 ) }
    dend_17 { pt3dadd( 276.475, 409.639, 20.004, 0.4176 ) }
    dend_17 { pt3dadd( 277.429, 410.178, 19.7422, 0.3972 ) }
    dend_17 { pt3dadd( 278.273, 410.664, 19.4323, 0.5068 ) }
    dend_17 { pt3dadd( 279.027, 409.984, 18.9448, 0.4518 ) }
    dend_17 { pt3dadd( 279.999, 409.902, 18.4582, 0.4608 ) }
    dend_17 { pt3dadd( 280.899, 410.569, 18.0552, 0.396 ) }
    dend_17 { pt3dadd( 281.899, 410.908, 17.7411, 0.4418 ) }
    dend_17 { pt3dadd( 282.272, 410.132, 17.3897, 0.4094 ) }
    dend_17 { pt3dadd( 282.341, 409.069, 16.9786, 0.4602 ) }
    dend_17 { pt3dadd( 283.172, 408.339, 16.6863, 0.4738 ) }
    dend_17 { pt3dadd( 283.879, 407.535, 16.4828, 0.4312 ) }
    dend_17 { pt3dadd( 284.893, 407.129, 16.3327, 0.4548 ) }
    dend_17 { pt3dadd( 285.78, 406.408, 16.231, 0.4576 ) }
    dend_17 { pt3dadd( 286.44, 405.551, 16.1795, 0.4322 ) }
    dend_17 { pt3dadd( 286.557, 404.417, 16.1263, 0.305 ) }
    dend_17 { pt3dadd( 287.13, 403.437, 16.0154, 0.2288 ) }
    // Section: dend_16, id: dend_16, parent: soma_0 (entry count 63/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 234.825, 419.393, 27.6156, 0.2288 ) }
    dend_16 { pt3dadd( 234.155, 418.495, 27.6875, 0.306 ) }
    dend_16 { pt3dadd( 233.295, 417.782, 27.7329, 0.3318 ) }
    dend_16 { pt3dadd( 232.173, 418.0, 27.7777, 0.3848 ) }
    dend_16 { pt3dadd( 231.08, 417.712, 27.8191, 0.4592 ) }
    dend_16 { pt3dadd( 229.938, 417.693, 27.8575, 0.7136 ) }
    dend_16 { pt3dadd( 228.932, 417.161, 27.8933, 0.6184 ) }
    dend_16 { pt3dadd( 227.916, 416.764, 28.0308, 0.4498 ) }
    dend_16 { pt3dadd( 227.083, 416.009, 28.1128, 0.3262 ) }
    dend_16 { pt3dadd( 226.282, 415.192, 28.1221, 0.3228 ) }
    dend_16 { pt3dadd( 225.48, 414.376, 28.0647, 0.3672 ) }
    dend_16 { pt3dadd( 225.087, 413.347, 27.8471, 0.4318 ) }
    dend_16 { pt3dadd( 224.693, 412.316, 27.508, 0.6368 ) }
    dend_16 { pt3dadd( 224.043, 411.406, 27.1737, 0.602 ) }
    dend_16 { pt3dadd( 223.403, 410.463, 26.8915, 0.4932 ) }
    dend_16 { pt3dadd( 222.797, 409.491, 26.6524, 0.5052 ) }
    dend_16 { pt3dadd( 222.124, 408.712, 26.3012, 0.407 ) }
    dend_16 { pt3dadd( 221.12, 408.599, 25.9851, 0.351 ) }
    dend_16 { pt3dadd( 220.072, 408.386, 25.7342, 0.322 ) }
    dend_16 { pt3dadd( 219.128, 407.749, 25.4996, 0.3634 ) }
    dend_16 { pt3dadd( 218.182, 407.111, 25.2843, 0.4352 ) }
    dend_16 { pt3dadd( 217.238, 406.474, 25.0942, 0.5914 ) }
    dend_16 { pt3dadd( 216.152, 406.193, 24.9738, 0.7688 ) }
    dend_16 { pt3dadd( 215.13, 405.759, 24.887, 0.958 ) }
    dend_16 { pt3dadd( 214.08, 405.333, 24.8072, 0.8404 ) }
    dend_16 { pt3dadd( 212.971, 405.063, 24.7114, 0.839 ) }
    dend_16 { pt3dadd( 212.053, 404.486, 24.5745, 0.6996 ) }
    dend_16 { pt3dadd( 211.322, 403.62, 24.3939, 0.6476 ) }
    dend_16 { pt3dadd( 210.551, 402.95, 24.2136, 0.694 ) }
    dend_16 { pt3dadd( 209.409, 402.887, 24.0517, 0.543 ) }
    dend_16 { pt3dadd( 208.451, 402.441, 23.8291, 0.499 ) }
    dend_16 { pt3dadd( 207.532, 401.849, 23.5528, 0.415 ) }
    dend_16 { pt3dadd( 206.446, 401.488, 23.3187, 0.5016 ) }
    dend_16 { pt3dadd( 205.501, 400.859, 23.0947, 0.4002 ) }
    dend_16 { pt3dadd( 204.589, 400.17, 22.8707, 0.3382 ) }
    dend_16 { pt3dadd( 203.698, 399.454, 22.6699, 0.2982 ) }
    dend_16 { pt3dadd( 202.96, 398.659, 22.3787, 0.3192 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_16 { pt3dadd( 202.291, 397.828, 21.9702, 0.3518 ) }
    dend_16 { pt3dadd( 201.6, 397.029, 21.4872, 0.4452 ) }
    dend_16 { pt3dadd( 200.565, 396.682, 21.0862, 0.4576 ) }
    dend_16 { pt3dadd( 199.878, 395.767, 20.7995, 0.5754 ) }
    dend_16 { pt3dadd( 198.995, 395.076, 20.6186, 0.562 ) }
    dend_16 { pt3dadd( 197.999, 394.514, 20.5352, 0.518 ) }
    dend_16 { pt3dadd( 197.003, 393.951, 20.5198, 0.528 ) }
    dend_16 { pt3dadd( 195.98, 393.441, 20.519, 0.79 ) }
    dend_16 { pt3dadd( 194.954, 392.936, 20.5072, 0.7814 ) }
    dend_16 { pt3dadd( 194.326, 391.984, 20.5103, 0.6482 ) }
    dend_16 { pt3dadd( 193.63, 391.102, 20.5145, 0.5114 ) }
    dend_16 { pt3dadd( 192.607, 390.821, 20.4887, 0.4104 ) }
    dend_16 { pt3dadd( 191.518, 390.97, 20.4674, 0.397 ) }
    dend_16 { pt3dadd( 190.43, 390.621, 20.4562, 0.4454 ) }
    dend_16 { pt3dadd( 189.809, 389.855, 20.4344, 0.634 ) }
    dend_16 { pt3dadd( 189.589, 388.732, 20.3888, 0.7342 ) }
    dend_16 { pt3dadd( 188.949, 387.817, 20.3398, 0.757 ) }
    dend_16 { pt3dadd( 188.118, 387.039, 20.2818, 0.6752 ) }
    dend_16 { pt3dadd( 187.211, 386.345, 20.2009, 0.6706 ) }
    dend_16 { pt3dadd( 186.335, 385.803, 20.0032, 0.633 ) }
    dend_16 { pt3dadd( 185.57, 384.973, 19.8439, 0.4748 ) }
    dend_16 { pt3dadd( 184.756, 384.27, 19.7198, 0.3846 ) }
    dend_16 { pt3dadd( 183.821, 383.701, 19.6258, 0.3736 ) }
    dend_16 { pt3dadd( 183.252, 382.725, 19.5572, 0.5104 ) }
    dend_16 { pt3dadd( 182.814, 381.762, 19.5084, 0.4586 ) }
    dend_16 { pt3dadd( 182.003, 381.122, 19.4732, 0.474 ) }
    dend_16 { pt3dadd( 181.657, 380.071, 19.4284, 0.4158 ) }
    dend_16 { pt3dadd( 180.82, 379.436, 19.3578, 0.5026 ) }
    dend_16 { pt3dadd( 180.004, 378.671, 19.227, 0.4024 ) }
    dend_16 { pt3dadd( 179.202, 377.859, 19.0971, 0.3422 ) }
    dend_16 { pt3dadd( 178.292, 377.179, 18.9804, 0.3068 ) }
    dend_16 { pt3dadd( 177.472, 376.385, 18.8748, 0.3292 ) }
    dend_16 { pt3dadd( 176.83, 375.468, 18.7141, 0.401 ) }
    dend_16 { pt3dadd( 175.761, 375.09, 18.5699, 0.386 ) }
    dend_16 { pt3dadd( 174.663, 374.8, 18.4358, 0.3936 ) }
    dend_16 { pt3dadd( 173.755, 374.139, 18.3047, 0.4628 ) }
    dend_16 { pt3dadd( 172.887, 373.422, 18.1978, 0.5508 ) }
    dend_16 { pt3dadd( 172.306, 372.451, 18.1107, 0.4538 ) }
    dend_16 { pt3dadd( 171.41, 371.752, 18.0404, 0.3928 ) }
    dend_16 { pt3dadd( 170.748, 370.848, 17.9528, 0.3886 ) }
    dend_16 { pt3dadd( 170.321, 369.798, 17.8343, 0.539 ) }
    dend_16 { pt3dadd( 169.605, 368.938, 17.677, 0.5074 ) }
    dend_16 { pt3dadd( 169.017, 367.971, 17.5518, 0.5828 ) }
    dend_16 { pt3dadd( 168.397, 367.027, 17.4594, 0.5304 ) }
    dend_16 { pt3dadd( 167.635, 366.176, 17.397, 0.4514 ) }
    dend_16 { pt3dadd( 166.939, 365.283, 17.3611, 0.4442 ) }
    dend_16 { pt3dadd( 166.135, 364.52, 17.3446, 0.4432 ) }
    dend_16 { pt3dadd( 165.152, 363.964, 17.3384, 0.3784 ) }
    dend_16 { pt3dadd( 164.49, 363.043, 17.3295, 0.3366 ) }
    dend_16 { pt3dadd( 163.511, 362.5, 17.3166, 0.3382 ) }
    dend_16 { pt3dadd( 162.461, 362.094, 17.2998, 0.4128 ) }
    dend_16 { pt3dadd( 161.501, 361.474, 17.2782, 0.4322 ) }
    dend_16 { pt3dadd( 160.833, 360.569, 17.2514, 0.3584 ) }
    dend_16 { pt3dadd( 160.274, 359.594, 17.18, 0.2982 ) }
    dend_16 { pt3dadd( 159.634, 358.85, 17.1164, 0.2712 ) }
    dend_16 { pt3dadd( 158.986, 357.908, 17.061, 0.2684 ) }
    dend_16 { pt3dadd( 158.085, 357.217, 17.0139, 0.2626 ) }
    dend_16 { pt3dadd( 157.162, 356.601, 16.9352, 0.2542 ) }
    dend_16 { pt3dadd( 156.761, 355.553, 16.8778, 0.2288 ) }
    dend_16 { pt3dadd( 156.728, 354.411, 16.8, 0.2288 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 60/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 235.987, 427.271, 35.1896, 0.6864 ) }
    dend_11 { pt3dadd( 235.411, 428.192, 34.5548, 0.448 ) }
    dend_11 { pt3dadd( 235.108, 429.065, 34.2546, 0.333 ) }
    dend_11 { pt3dadd( 236.045, 429.721, 34.0256, 0.288 ) }
    dend_11 { pt3dadd( 235.86, 430.827, 33.866, 0.3008 ) }
    dend_11 { pt3dadd( 234.896, 431.407, 33.7722, 0.318 ) }
    dend_11 { pt3dadd( 233.893, 431.958, 33.7431, 0.3808 ) }
    dend_11 { pt3dadd( 232.877, 432.482, 33.777, 0.347 ) }
    dend_11 { pt3dadd( 231.853, 432.994, 33.8523, 0.3254 ) }
    dend_11 { pt3dadd( 230.728, 432.936, 33.9531, 0.3164 ) }
    dend_11 { pt3dadd( 229.589, 432.818, 34.0813, 0.378 ) }
    // Section: dend_6, id: dend_6, parent: soma_0 (entry count 71/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 238.621, 428.392, 32.7418, 0.2288 ) }
    dend_6 { pt3dadd( 239.17, 429.367, 32.0995, 0.2746 ) }
    dend_6 { pt3dadd( 239.475, 430.464, 31.862, 0.2746 ) }
    dend_6 { pt3dadd( 239.738, 431.572, 31.5227, 0.2746 ) }
    dend_6 { pt3dadd( 239.946, 432.013, 30.7966, 0.2746 ) }
    dend_6 { pt3dadd( 240.151, 432.407, 29.7903, 0.2746 ) }
    dend_6 { pt3dadd( 240.24, 432.828, 28.9982, 0.2746 ) }
    dend_6 { pt3dadd( 240.24, 433.972, 28.4085, 0.2746 ) }
    dend_6 { pt3dadd( 240.24, 435.116, 28.0123, 0.2746 ) }
    dend_6 { pt3dadd( 240.24, 436.26, 27.7917, 0.2746 ) }
    dend_6 { pt3dadd( 240.24, 437.404, 27.72, 0.2746 ) }
    dend_6 { pt3dadd( 240.257, 438.547, 27.72, 0.2746 ) }
    dend_6 { pt3dadd( 240.621, 439.601, 27.72, 0.2746 ) }
    // Section: dend_3, id: dend_3, parent: soma_0 (entry count 84/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 235.643, 419.374, 27.0528, 0.2288 ) }
    dend_3 { pt3dadd( 234.745, 419.547, 26.5541, 0.2878 ) }
    dend_3 { pt3dadd( 233.676, 419.842, 26.3746, 0.299 ) }
    dend_3 { pt3dadd( 233.316, 420.928, 26.2265, 0.3212 ) }
    dend_3 { pt3dadd( 232.482, 420.979, 26.0691, 0.355 ) }
    dend_3 { pt3dadd( 231.957, 420.107, 25.9031, 0.4528 ) }
    dend_3 { pt3dadd( 230.934, 419.647, 25.7261, 0.465 ) }
    dend_3 { pt3dadd( 230.018, 418.971, 25.5223, 0.6208 ) }
    dend_3 { pt3dadd( 229.084, 418.378, 25.2224, 0.4922 ) }
    dend_3 { pt3dadd( 228.29, 417.716, 24.7363, 0.4496 ) }
    dend_3 { pt3dadd( 227.496, 417.053, 24.1304, 0.3338 ) }
    dend_3 { pt3dadd( 226.736, 416.359, 23.4744, 0.3 ) }
    dend_3 { pt3dadd( 226.411, 415.262, 22.9687, 0.2746 ) }
    dend_3 { pt3dadd( 226.086, 414.165, 22.6052, 0.2746 ) }
    dend_3 { pt3dadd( 226.316, 413.287, 22.3787, 0.2746 ) }
    dend_3 { pt3dadd( 227.303, 412.709, 22.2734, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_3 { pt3dadd( 227.807, 411.698, 22.2317, 0.2746 ) }
    dend_3 { pt3dadd( 227.732, 410.606, 22.199, 0.2746 ) }
    dend_3 { pt3dadd( 228.448, 409.713, 22.1715, 0.2746 ) }
    dend_3 { pt3dadd( 229.164, 408.821, 22.1483, 0.2746 ) }
    dend_3 { pt3dadd( 229.936, 407.99, 22.1284, 0.2746 ) }
    dend_3 { pt3dadd( 230.882, 407.346, 22.1138, 0.2746 ) }
    dend_3 { pt3dadd( 231.186, 406.51, 22.104, 0.2748 ) }
    dend_3 { pt3dadd( 230.753, 405.451, 22.0965, 0.2748 ) }
    dend_3 { pt3dadd( 230.492, 404.358, 22.0802, 0.2752 ) }
    dend_3 { pt3dadd( 230.491, 403.214, 22.0447, 0.2758 ) }
    dend_3 { pt3dadd( 230.82, 402.134, 21.9842, 0.2766 ) }
    dend_3 { pt3dadd( 231.118, 401.12, 21.8996, 0.2782 ) }
    dend_3 { pt3dadd( 232.01, 400.405, 21.7955, 0.2814 ) }
    dend_3 { pt3dadd( 232.904, 399.69, 21.6712, 0.2874 ) }
    dend_3 { pt3dadd( 233.433, 398.9, 21.4035, 0.2984 ) }
    dend_3 { pt3dadd( 233.58, 398.032, 20.9045, 0.3196 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 16/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 243.662, 423.035, 27.5223, 0.2288 ) }
    dend_0 { pt3dadd( 244.598, 422.436, 27.4151, 0.3394 ) }
    dend_0 { pt3dadd( 245.417, 421.638, 27.3745, 0.389 ) }
    dend_0 { pt3dadd( 246.408, 421.086, 27.3258, 0.515 ) }
    dend_0 { pt3dadd( 247.518, 421.241, 27.267, 0.582 ) }
    dend_0 { pt3dadd( 248.517, 421.787, 27.1958, 0.8298 ) }
    dend_0 { pt3dadd( 249.567, 422.237, 27.1026, 0.9194 ) }
    dend_0 { pt3dadd( 250.569, 422.737, 26.9282, 1.0496 ) }
    dend_0 { pt3dadd( 251.688, 422.853, 26.7168, 1.0068 ) }
    dend_0 { pt3dadd( 252.811, 423.063, 26.5443, 0.7054 ) }
    dend_0 { pt3dadd( 253.951, 423.162, 26.4113, 0.5368 ) }
    dend_0 { pt3dadd( 254.995, 422.713, 26.3124, 0.621 ) }
    dend_0 { pt3dadd( 256.071, 422.325, 26.2441, 0.6794 ) }
    dend_0 { pt3dadd( 257.179, 422.041, 26.2013, 0.806 ) }
    dend_0 { pt3dadd( 258.314, 421.906, 26.1612, 0.72 ) }
    dend_0 { pt3dadd( 259.427, 421.885, 26.0467, 0.7472 ) }
    dend_0 { pt3dadd( 260.557, 421.763, 25.9414, 0.5786 ) }
    // Section: apic_0, id: apic_0, parent: soma_0 (entry count 33/100)
    apic_0 { pt3dclear() }
    apic_0 { pt3dadd( 243.57, 420.307, 31.166, 0.543 ) }
    apic_0 { pt3dadd( 244.325, 419.451, 31.6901, 0.8818 ) }
    apic_0 { pt3dadd( 244.95, 418.529, 32.2174, 0.8692 ) }
    apic_0 { pt3dadd( 246.106, 416.567, 32.6735, 1.2108 ) }
    apic_0 { pt3dadd( 247.17, 414.572, 33.103, 0.9864 ) }
    apic_0 { pt3dadd( 247.905, 413.706, 33.4323, 0.8462 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 39/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 250.436, 450.912, 29.68, 1.0 ) }
    axon_1 { pt3dadd( 256.277, 464.728, 29.68, 1.0 ) }
    axon_1 { pt3dadd( 262.118, 478.544, 29.68, 1.0 ) }
    // Section: dend_13, id: dend_13, parent: dend_11 (entry count 42/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 229.589, 432.818, 34.0813, 0.378 ) }
    dend_13 { pt3dadd( 228.592, 433.71, 34.2686, 0.2288 ) }
    dend_13 { pt3dadd( 228.08, 434.733, 34.4481, 0.328 ) }
    dend_13 { pt3dadd( 227.569, 435.757, 34.5139, 0.3634 ) }
    dend_13 { pt3dadd( 227.086, 436.791, 34.622, 0.4904 ) }
    dend_13 { pt3dadd( 226.618, 437.829, 34.7754, 0.426 ) }
    dend_13 { pt3dadd( 226.149, 438.868, 34.9636, 0.3882 ) }
    dend_13 { pt3dadd( 225.68, 439.907, 35.177, 0.3818 ) }
    dend_13 { pt3dadd( 225.211, 440.946, 35.4063, 0.5192 ) }
    dend_13 { pt3dadd( 224.743, 441.984, 35.6429, 0.5056 ) }
    dend_13 { pt3dadd( 224.274, 443.023, 35.8786, 0.4096 ) }
    dend_13 { pt3dadd( 223.805, 444.062, 36.1102, 0.3484 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 54/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 229.589, 432.818, 34.0813, 0.378 ) }
    dend_12 { pt3dadd( 228.847, 431.993, 34.3162, 0.342 ) }
    dend_12 { pt3dadd( 228.098, 431.161, 34.629, 0.3156 ) }
    dend_12 { pt3dadd( 227.348, 430.328, 34.9913, 0.3028 ) }
    dend_12 { pt3dadd( 226.598, 429.496, 35.378, 0.329 ) }
    dend_12 { pt3dadd( 225.528, 429.257, 35.7014, 0.3652 ) }
    dend_12 { pt3dadd( 224.389, 429.145, 35.9528, 0.4932 ) }
    dend_12 { pt3dadd( 223.365, 428.667, 36.141, 0.4332 ) }
    dend_12 { pt3dadd( 222.365, 428.111, 36.2883, 0.3952 ) }
    dend_12 { pt3dadd( 221.4, 427.536, 36.4787, 0.4242 ) }
    dend_12 { pt3dadd( 220.443, 426.956, 36.7268, 0.4538 ) }
    dend_12 { pt3dadd( 219.409, 426.754, 36.9804, 0.3978 ) }
    dend_12 { pt3dadd( 218.288, 426.979, 37.1882, 0.3732 ) }
    dend_12 { pt3dadd( 217.165, 427.203, 37.3576, 0.402 ) }
    dend_12 { pt3dadd( 216.049, 427.45, 37.4982, 0.5514 ) }
    dend_12 { pt3dadd( 214.939, 427.728, 37.6188, 0.591 ) }
    dend_12 { pt3dadd( 213.83, 428.006, 37.7384, 0.4442 ) }
    dend_12 { pt3dadd( 212.794, 427.83, 37.9182, 0.3256 ) }
    dend_12 { pt3dadd( 211.823, 427.271, 38.1861, 0.275 ) }
    dend_12 { pt3dadd( 210.852, 426.713, 38.5126, 0.2752 ) }
    dend_12 { pt3dadd( 209.88, 426.155, 38.869, 0.276 ) }
    dend_12 { pt3dadd( 208.897, 425.603, 39.2017, 0.2774 ) }
    dend_12 { pt3dadd( 207.889, 425.062, 39.4461, 0.2796 ) }
    dend_12 { pt3dadd( 206.88, 424.521, 39.611, 0.284 ) }
    dend_12 { pt3dadd( 205.88, 423.966, 39.7138, 0.2918 ) }
    dend_12 { pt3dadd( 204.918, 423.349, 39.7774, 0.3078 ) }
    dend_12 { pt3dadd( 203.956, 422.73, 39.8222, 0.3306 ) }
    dend_12 { pt3dadd( 202.994, 422.111, 39.867, 0.405 ) }
    dend_12 { pt3dadd( 202.081, 421.427, 39.9459, 0.3872 ) }
    dend_12 { pt3dadd( 201.176, 420.73, 40.0537, 0.4238 ) }
    dend_12 { pt3dadd( 200.271, 420.034, 40.1803, 0.3824 ) }
    dend_12 { pt3dadd( 199.367, 419.339, 40.3158, 0.3792 ) }
    dend_12 { pt3dadd( 198.462, 418.643, 40.4516, 0.4722 ) }
    dend_12 { pt3dadd( 197.408, 418.45, 40.5616, 0.3934 ) }
    dend_12 { pt3dadd( 196.268, 418.544, 40.6358, 0.3254 ) }
    dend_12 { pt3dadd( 195.149, 418.512, 40.6809, 0.2746 ) }
    dend_12 { pt3dadd( 194.1, 418.054, 40.705, 0.2748 ) }
    dend_12 { pt3dadd( 193.052, 417.595, 40.7151, 0.275 ) }
    dend_12 { pt3dadd( 192.004, 417.137, 40.7176, 0.2752 ) }
    dend_12 { pt3dadd( 190.927, 416.758, 40.7187, 0.276 ) }
    dend_12 { pt3dadd( 189.838, 416.406, 40.7201, 0.2768 ) }
    dend_12 { pt3dadd( 188.749, 416.055, 40.7218, 0.279 ) }
    dend_12 { pt3dadd( 187.671, 415.675, 40.7243, 0.2826 ) }
    dend_12 { pt3dadd( 186.602, 415.264, 40.728, 0.2894 ) }
    dend_12 { pt3dadd( 185.535, 414.853, 40.733, 0.3032 ) }
    dend_12 { pt3dadd( 184.55, 414.282, 40.74, 0.3222 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_12 { pt3dadd( 183.602, 413.643, 40.7498, 0.3882 ) }
    dend_12 { pt3dadd( 182.653, 413.003, 40.7638, 0.3626 ) }
    dend_12 { pt3dadd( 181.705, 412.364, 40.7828, 0.348 ) }
    dend_12 { pt3dadd( 180.757, 411.724, 40.8097, 0.3892 ) }
    dend_12 { pt3dadd( 179.92, 411.009, 40.8472, 0.3624 ) }
    dend_12 { pt3dadd( 179.68, 409.891, 40.8999, 0.355 ) }
    dend_12 { pt3dadd( 179.44, 408.772, 40.9741, 0.366 ) }
    dend_12 { pt3dadd( 179.038, 407.739, 41.0771, 0.4964 ) }
    dend_12 { pt3dadd( 178.256, 406.904, 41.2182, 0.4326 ) }
    dend_12 { pt3dadd( 177.446, 406.111, 41.4134, 0.4242 ) }
    dend_12 { pt3dadd( 176.404, 405.664, 41.7155, 0.3338 ) }
    dend_12 { pt3dadd( 175.36, 405.217, 42.1151, 0.3 ) }
    dend_12 { pt3dadd( 174.322, 404.994, 42.6303, 0.2746 ) }
    dend_12 { pt3dadd( 173.292, 405.261, 43.3031, 0.2746 ) }
    dend_12 { pt3dadd( 172.261, 405.526, 44.0891, 0.2746 ) }
    dend_12 { pt3dadd( 171.232, 405.793, 44.9436, 0.2746 ) }
    dend_12 { pt3dadd( 170.202, 406.059, 45.8262, 0.2746 ) }
    dend_12 { pt3dadd( 169.164, 406.113, 46.6978, 0.2746 ) }
    dend_12 { pt3dadd( 168.118, 405.802, 47.5185, 0.2746 ) }
    dend_12 { pt3dadd( 167.07, 405.492, 48.2776, 0.2746 ) }
    dend_12 { pt3dadd( 166.111, 404.965, 48.9171, 0.2746 ) }
    dend_12 { pt3dadd( 165.737, 404.021, 49.4634, 0.2746 ) }
    dend_12 { pt3dadd( 165.735, 402.926, 49.9822, 0.2744 ) }
    dend_12 { pt3dadd( 165.656, 401.922, 50.4624, 0.2744 ) }
    dend_12 { pt3dadd( 164.536, 402.15, 50.7945, 0.2742 ) }
    dend_12 { pt3dadd( 163.415, 402.379, 51.0115, 0.2736 ) }
    dend_12 { pt3dadd( 162.294, 402.608, 51.1445, 0.2728 ) }
    dend_12 { pt3dadd( 161.174, 402.838, 51.2123, 0.2712 ) }
    dend_12 { pt3dadd( 160.071, 402.746, 51.2333, 0.2684 ) }
    dend_12 { pt3dadd( 158.983, 402.392, 51.2333, 0.2626 ) }
    dend_12 { pt3dadd( 157.895, 402.038, 51.2333, 0.2542 ) }
    dend_12 { pt3dadd( 156.807, 401.684, 51.2333, 0.2288 ) }
    dend_12 { pt3dadd( 155.719, 401.33, 51.2333, 0.2288 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 33/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 240.621, 439.601, 27.72, 0.2746 ) }
    dend_10 { pt3dadd( 240.874, 440.128, 29.8346, 0.2288 ) }
    dend_10 { pt3dadd( 241.087, 440.888, 30.8221, 0.2754 ) }
    dend_10 { pt3dadd( 241.168, 442.028, 31.1811, 0.2762 ) }
    dend_10 { pt3dadd( 241.249, 443.166, 31.4994, 0.2776 ) }
    dend_10 { pt3dadd( 241.33, 444.306, 31.7744, 0.2802 ) }
    dend_10 { pt3dadd( 241.375, 445.446, 31.997, 0.285 ) }
    dend_10 { pt3dadd( 241.348, 446.589, 32.1541, 0.294 ) }
    dend_10 { pt3dadd( 241.322, 447.733, 32.2571, 0.3116 ) }
    dend_10 { pt3dadd( 241.295, 448.877, 32.3557, 0.3388 ) }
    dend_10 { pt3dadd( 241.012, 449.965, 32.4954, 0.4142 ) }
    dend_10 { pt3dadd( 240.617, 451.029, 32.6892, 0.435 ) }
    dend_10 { pt3dadd( 240.223, 452.093, 32.928, 0.3634 ) }
    dend_10 { pt3dadd( 240.111, 453.223, 33.1576, 0.3076 ) }
    dend_10 { pt3dadd( 240.079, 454.361, 33.3844, 0.2888 ) }
    dend_10 { pt3dadd( 240.162, 455.485, 33.6613, 0.3006 ) }
    dend_10 { pt3dadd( 240.246, 456.608, 33.9637, 0.3236 ) }
    dend_10 { pt3dadd( 240.33, 457.732, 34.274, 0.3624 ) }
    dend_10 { pt3dadd( 240.414, 458.855, 34.5786, 0.4526 ) }
    dend_10 { pt3dadd( 240.644, 459.928, 34.851, 0.5316 ) }
    dend_10 { pt3dadd( 240.919, 460.975, 35.0053, 0.4188 ) }
    dend_10 { pt3dadd( 240.91, 462.114, 35.0448, 0.3254 ) }
    dend_10 { pt3dadd( 240.9, 463.253, 35.0028, 0.2746 ) }
    dend_10 { pt3dadd( 241.266, 464.323, 34.9448, 0.2746 ) }
    dend_10 { pt3dadd( 241.211, 465.441, 34.8981, 0.2746 ) }
    dend_10 { pt3dadd( 241.046, 466.572, 34.8762, 0.2746 ) }
    dend_10 { pt3dadd( 241.248, 467.699, 34.8776, 0.2746 ) }
    dend_10 { pt3dadd( 241.448, 468.825, 34.8984, 0.2746 ) }
    dend_10 { pt3dadd( 241.648, 469.952, 34.9317, 0.2746 ) }
    dend_10 { pt3dadd( 241.85, 471.078, 34.9706, 0.2746 ) }
    dend_10 { pt3dadd( 241.839, 472.184, 35.0994, 0.2746 ) }
    dend_10 { pt3dadd( 242.239, 473.217, 35.2352, 0.2746 ) }
    dend_10 { pt3dadd( 242.766, 474.23, 35.3489, 0.2746 ) }
    dend_10 { pt3dadd( 242.656, 475.19, 35.4334, 0.2746 ) }
    dend_10 { pt3dadd( 242.338, 476.237, 35.495, 0.2746 ) }
    dend_10 { pt3dadd( 242.281, 477.38, 35.5454, 0.2746 ) }
    dend_10 { pt3dadd( 242.006, 478.486, 35.5846, 0.2746 ) }
    dend_10 { pt3dadd( 241.692, 479.585, 35.6314, 0.2746 ) }
    dend_10 { pt3dadd( 241.367, 480.682, 35.6888, 0.2746 ) }
    dend_10 { pt3dadd( 240.526, 481.435, 35.8201, 0.2746 ) }
    dend_10 { pt3dadd( 239.668, 482.175, 36.0136, 0.2746 ) }
    dend_10 { pt3dadd( 239.125, 483.129, 36.223, 0.2746 ) }
    dend_10 { pt3dadd( 238.787, 484.222, 36.4246, 0.2746 ) }
    dend_10 { pt3dadd( 238.451, 485.316, 36.619, 0.2746 ) }
    dend_10 { pt3dadd( 238.127, 486.393, 36.8334, 0.2746 ) }
    dend_10 { pt3dadd( 237.878, 487.385, 37.2072, 0.2746 ) }
    dend_10 { pt3dadd( 237.371, 488.302, 37.599, 0.2746 ) }
    dend_10 { pt3dadd( 236.848, 489.265, 37.9028, 0.2746 ) }
    dend_10 { pt3dadd( 236.83, 490.404, 38.1273, 0.2746 ) }
    dend_10 { pt3dadd( 236.864, 491.548, 38.2774, 0.2746 ) }
    dend_10 { pt3dadd( 236.801, 492.69, 38.3614, 0.2746 ) }
    dend_10 { pt3dadd( 236.555, 493.808, 38.3995, 0.2746 ) }
    dend_10 { pt3dadd( 236.308, 494.924, 38.4306, 0.2746 ) }
    dend_10 { pt3dadd( 236.332, 496.053, 38.4672, 0.2746 ) }
    dend_10 { pt3dadd( 236.891, 497.028, 38.5143, 0.2746 ) }
    dend_10 { pt3dadd( 237.549, 497.964, 38.5745, 0.2746 ) }
    dend_10 { pt3dadd( 238.04, 498.98, 38.6859, 0.2746 ) }
    dend_10 { pt3dadd( 238.441, 500.039, 38.8556, 0.2746 ) }
    dend_10 { pt3dadd( 238.837, 501.099, 39.0659, 0.2746 ) }
    dend_10 { pt3dadd( 238.713, 502.237, 39.2526, 0.2746 ) }
    dend_10 { pt3dadd( 238.587, 503.374, 39.4184, 0.2746 ) }
    dend_10 { pt3dadd( 239.061, 504.358, 39.5503, 0.2746 ) }
    dend_10 { pt3dadd( 239.125, 505.371, 39.6791, 0.2746 ) }
    dend_10 { pt3dadd( 238.797, 506.464, 39.8258, 0.2746 ) }
    dend_10 { pt3dadd( 238.827, 507.563, 39.9932, 0.2746 ) }
    dend_10 { pt3dadd( 239.122, 508.65, 40.2172, 0.2746 ) }
    dend_10 { pt3dadd( 239.176, 509.767, 40.5446, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_10 { pt3dadd( 239.231, 510.886, 40.9497, 0.2746 ) }
    dend_10 { pt3dadd( 239.285, 512.004, 41.4042, 0.2746 ) }
    dend_10 { pt3dadd( 239.375, 513.122, 41.8816, 0.2746 ) }
    dend_10 { pt3dadd( 239.471, 514.239, 42.3612, 0.2746 ) }
    dend_10 { pt3dadd( 239.566, 515.356, 42.8263, 0.2746 ) }
    dend_10 { pt3dadd( 239.676, 516.477, 43.2502, 0.2746 ) }
    dend_10 { pt3dadd( 239.843, 517.609, 43.577, 0.2746 ) }
    dend_10 { pt3dadd( 239.778, 518.739, 43.8393, 0.2746 ) }
    dend_10 { pt3dadd( 239.592, 519.866, 44.0678, 0.2744 ) }
    dend_10 { pt3dadd( 239.343, 520.959, 44.3442, 0.2744 ) }
    dend_10 { pt3dadd( 239.095, 522.053, 44.658, 0.2742 ) }
    dend_10 { pt3dadd( 238.846, 523.147, 44.9974, 0.2736 ) }
    dend_10 { pt3dadd( 238.597, 524.24, 45.3488, 0.2728 ) }
    dend_10 { pt3dadd( 238.546, 525.381, 45.6151, 0.2712 ) }
    dend_10 { pt3dadd( 238.501, 526.525, 45.799, 0.2684 ) }
    dend_10 { pt3dadd( 238.444, 527.667, 45.9096, 0.2626 ) }
    dend_10 { pt3dadd( 238.246, 528.793, 45.9662, 0.2542 ) }
    dend_10 { pt3dadd( 238.048, 529.92, 45.9883, 0.2288 ) }
    dend_10 { pt3dadd( 238.041, 531.063, 45.9978, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 19/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 240.621, 439.601, 27.72, 0.2746 ) }
    dend_7 { pt3dadd( 241.434, 440.39, 27.72, 0.2746 ) }
    // Section: dend_5, id: dend_5, parent: dend_3 (entry count 21/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 233.58, 398.032, 20.9045, 0.3196 ) }
    dend_5 { pt3dadd( 233.407, 397.938, 20.7326, 0.3534 ) }
    dend_5 { pt3dadd( 232.749, 397.1, 20.54, 0.4424 ) }
    dend_5 { pt3dadd( 232.064, 396.211, 20.3059, 0.482 ) }
    dend_5 { pt3dadd( 231.417, 395.283, 20.085, 0.4762 ) }
    dend_5 { pt3dadd( 230.817, 394.309, 19.9231, 0.3936 ) }
    dend_5 { pt3dadd( 230.217, 393.335, 19.7865, 0.3584 ) }
    dend_5 { pt3dadd( 229.284, 392.762, 19.6249, 0.4084 ) }
    dend_5 { pt3dadd( 228.635, 391.82, 19.4578, 0.3982 ) }
    dend_5 { pt3dadd( 227.745, 391.147, 19.222, 0.4228 ) }
    dend_5 { pt3dadd( 226.819, 390.517, 18.9188, 0.4832 ) }
    dend_5 { pt3dadd( 225.891, 389.885, 18.5657, 0.7532 ) }
    dend_5 { pt3dadd( 224.815, 389.538, 18.2661, 0.7176 ) }
    dend_5 { pt3dadd( 224.327, 388.571, 17.9164, 0.5084 ) }
    dend_5 { pt3dadd( 224.026, 387.491, 17.6249, 0.356 ) }
    dend_5 { pt3dadd( 223.763, 386.4, 17.4317, 0.305 ) }
    dend_5 { pt3dadd( 222.753, 385.863, 17.2032, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_3 (entry count 38/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 233.58, 398.032, 20.9045, 0.3196 ) }
    dend_4 { pt3dadd( 234.432, 397.414, 19.476, 0.2288 ) }
    dend_4 { pt3dadd( 234.822, 396.438, 19.0985, 0.3882 ) }
    dend_4 { pt3dadd( 234.924, 395.299, 18.9566, 0.3608 ) }
    dend_4 { pt3dadd( 235.874, 394.773, 18.7869, 0.3518 ) }
    dend_4 { pt3dadd( 236.415, 394.003, 18.4598, 0.3604 ) }
    dend_4 { pt3dadd( 236.664, 393.051, 17.9502, 0.485 ) }
    dend_4 { pt3dadd( 237.073, 392.062, 17.4479, 0.4162 ) }
    dend_4 { pt3dadd( 237.598, 391.047, 17.0635, 0.3704 ) }
    dend_4 { pt3dadd( 238.0, 389.982, 16.788, 0.3476 ) }
    dend_4 { pt3dadd( 238.301, 388.878, 16.6121, 0.4604 ) }
    dend_4 { pt3dadd( 238.844, 387.926, 16.5264, 0.373 ) }
    dend_4 { pt3dadd( 239.704, 387.17, 16.4979, 0.2796 ) }
    dend_4 { pt3dadd( 240.561, 386.414, 16.4704, 0.2288 ) }
    // Section: dend_2, id: dend_2, parent: dend_0 (entry count 52/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 260.557, 421.763, 25.9414, 0.5786 ) }
    dend_2 { pt3dadd( 261.807, 422.551, 25.9039, 0.4134 ) }
    dend_2 { pt3dadd( 262.601, 423.348, 25.9966, 0.306 ) }
    dend_2 { pt3dadd( 263.404, 424.129, 26.2046, 0.2856 ) }
    dend_2 { pt3dadd( 264.207, 424.909, 26.4942, 0.2952 ) }
    dend_2 { pt3dadd( 265.03, 425.668, 26.824, 0.312 ) }
    dend_2 { pt3dadd( 266.031, 426.22, 27.0816, 0.3474 ) }
    dend_2 { pt3dadd( 267.033, 426.774, 27.2658, 0.3938 ) }
    dend_2 { pt3dadd( 268.035, 427.326, 27.3857, 0.5724 ) }
    dend_2 { pt3dadd( 268.98, 427.956, 27.4672, 0.4548 ) }
    dend_2 { pt3dadd( 269.8, 428.752, 27.5394, 0.355 ) }
    dend_2 { pt3dadd( 270.514, 429.624, 27.6158, 0.2824 ) }
    dend_2 { pt3dadd( 270.979, 430.668, 27.6984, 0.2888 ) }
    dend_2 { pt3dadd( 271.435, 431.707, 27.8104, 0.3018 ) }
    dend_2 { pt3dadd( 271.83, 432.708, 28.0689, 0.3198 ) }
    dend_2 { pt3dadd( 272.345, 433.661, 28.3811, 0.3844 ) }
    dend_2 { pt3dadd( 273.112, 434.509, 28.6233, 0.354 ) }
    dend_2 { pt3dadd( 273.878, 435.358, 28.8016, 0.3382 ) }
    dend_2 { pt3dadd( 274.542, 436.29, 28.931, 0.3398 ) }
    dend_2 { pt3dadd( 275.194, 437.229, 29.015, 0.423 ) }
    dend_2 { pt3dadd( 276.1, 437.924, 29.0528, 0.4156 ) }
    dend_2 { pt3dadd( 276.985, 438.644, 29.0769, 0.5024 ) }
    dend_2 { pt3dadd( 277.735, 439.509, 29.1094, 0.4018 ) }
    dend_2 { pt3dadd( 278.622, 440.17, 29.1511, 0.3412 ) }
    dend_2 { pt3dadd( 279.699, 440.558, 29.2006, 0.3048 ) }
    dend_2 { pt3dadd( 280.775, 440.946, 29.2583, 0.3256 ) }
    dend_2 { pt3dadd( 281.668, 441.523, 29.4213, 0.3942 ) }
    dend_2 { pt3dadd( 282.483, 442.283, 29.6022, 0.3736 ) }
    dend_2 { pt3dadd( 283.37, 443.003, 29.743, 0.3682 ) }
    dend_2 { pt3dadd( 284.355, 443.544, 29.8463, 0.4286 ) }
    dend_2 { pt3dadd( 285.404, 443.861, 29.9149, 0.4256 ) }
    dend_2 { pt3dadd( 286.318, 444.469, 29.9516, 0.5218 ) }
    dend_2 { pt3dadd( 286.944, 445.416, 29.96, 0.4328 ) }
    dend_2 { pt3dadd( 287.409, 446.46, 29.96, 0.4246 ) }
    dend_2 { pt3dadd( 287.907, 447.486, 29.96, 0.3346 ) }
    dend_2 { pt3dadd( 288.349, 448.504, 29.96, 0.3012 ) }
    dend_2 { pt3dadd( 289.367, 449.017, 29.96, 0.2766 ) }
    dend_2 { pt3dadd( 290.389, 449.505, 29.96, 0.2782 ) }
    dend_2 { pt3dadd( 291.098, 450.385, 29.96, 0.2814 ) }
    dend_2 { pt3dadd( 291.904, 451.168, 29.96, 0.287 ) }
    dend_2 { pt3dadd( 292.254, 452.252, 29.96, 0.2988 ) }
    dend_2 { pt3dadd( 292.79, 453.262, 29.96, 0.3142 ) }
    dend_2 { pt3dadd( 293.404, 454.203, 29.9603, 0.3734 ) }
    dend_2 { pt3dadd( 293.561, 455.276, 29.9603, 0.3338 ) }
    dend_2 { pt3dadd( 294.275, 456.064, 29.9603, 0.3 ) }
    dend_2 { pt3dadd( 294.895, 457.009, 29.9606, 0.2746 ) }
    dend_2 { pt3dadd( 295.681, 457.831, 29.9606, 0.2746 ) }
    dend_2 { pt3dadd( 296.513, 458.564, 29.9608, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_2 { pt3dadd( 296.714, 459.687, 29.9611, 0.2746 ) }
    dend_2 { pt3dadd( 297.081, 460.765, 29.9617, 0.2746 ) }
    dend_2 { pt3dadd( 297.835, 461.564, 29.9622, 0.2746 ) }
    dend_2 { pt3dadd( 298.38, 462.569, 29.9634, 0.2748 ) }
    dend_2 { pt3dadd( 298.916, 463.58, 29.9645, 0.2748 ) }
    dend_2 { pt3dadd( 299.182, 464.682, 29.9664, 0.2752 ) }
    dend_2 { pt3dadd( 299.38, 465.809, 29.969, 0.2758 ) }
    dend_2 { pt3dadd( 299.828, 466.742, 29.9726, 0.2766 ) }
    dend_2 { pt3dadd( 300.473, 467.667, 29.9774, 0.2782 ) }
    dend_2 { pt3dadd( 301.164, 468.55, 29.9844, 0.2814 ) }
    dend_2 { pt3dadd( 302.003, 469.304, 29.9942, 0.287 ) }
    dend_2 { pt3dadd( 302.462, 470.344, 30.0076, 0.2988 ) }
    dend_2 { pt3dadd( 302.843, 471.41, 30.0266, 0.3142 ) }
    dend_2 { pt3dadd( 303.644, 472.208, 30.0535, 0.3734 ) }
    dend_2 { pt3dadd( 304.444, 472.956, 30.0902, 0.3338 ) }
    dend_2 { pt3dadd( 305.469, 473.402, 30.1414, 0.3 ) }
    dend_2 { pt3dadd( 306.46, 473.952, 30.2151, 0.2746 ) }
    dend_2 { pt3dadd( 307.07, 474.865, 30.3198, 0.2746 ) }
    dend_2 { pt3dadd( 307.836, 475.561, 30.4615, 0.2746 ) }
    dend_2 { pt3dadd( 308.812, 476.018, 30.6418, 0.2748 ) }
    dend_2 { pt3dadd( 309.793, 476.397, 30.9039, 0.2748 ) }
    dend_2 { pt3dadd( 310.37, 477.048, 31.4073, 0.275 ) }
    dend_2 { pt3dadd( 310.897, 478.027, 31.9547, 0.2754 ) }
    dend_2 { pt3dadd( 311.532, 478.923, 32.4951, 0.2764 ) }
    dend_2 { pt3dadd( 312.477, 479.545, 32.9437, 0.278 ) }
    dend_2 { pt3dadd( 313.62, 479.595, 33.3253, 0.281 ) }
    dend_2 { pt3dadd( 314.643, 479.967, 33.7378, 0.2862 ) }
    dend_2 { pt3dadd( 315.634, 480.433, 34.1827, 0.2966 ) }
    dend_2 { pt3dadd( 316.624, 480.898, 34.6618, 0.3134 ) }
    dend_2 { pt3dadd( 317.612, 481.385, 35.1366, 0.356 ) }
    dend_2 { pt3dadd( 318.585, 481.988, 35.4992, 0.3814 ) }
    dend_2 { pt3dadd( 319.557, 482.59, 35.9565, 0.6864 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 32/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 260.557, 421.763, 25.9414, 0.5786 ) }
    dend_1 { pt3dadd( 261.918, 421.078, 25.7261, 0.9152 ) }
    dend_1 { pt3dadd( 262.928, 420.611, 26.2354, 0.8622 ) }
    dend_1 { pt3dadd( 263.965, 420.188, 26.4387, 0.7028 ) }
    dend_1 { pt3dadd( 265.075, 420.064, 26.6918, 0.8448 ) }
    dend_1 { pt3dadd( 266.126, 419.842, 26.906, 0.8182 ) }
    dend_1 { pt3dadd( 267.19, 419.454, 27.0399, 0.5722 ) }
    dend_1 { pt3dadd( 268.279, 419.102, 27.127, 0.384 ) }
    dend_1 { pt3dadd( 269.318, 418.648, 27.1757, 0.338 ) }
    dend_1 { pt3dadd( 270.272, 418.018, 27.2076, 0.3826 ) }
    dend_1 { pt3dadd( 271.228, 417.386, 27.2353, 0.5208 ) }
    dend_1 { pt3dadd( 272.094, 416.646, 27.2812, 0.5086 ) }
    dend_1 { pt3dadd( 272.925, 415.86, 27.3482, 0.415 ) }
    dend_1 { pt3dadd( 273.648, 414.984, 27.4576, 0.357 ) }
    dend_1 { pt3dadd( 274.352, 414.09, 27.5999, 0.3772 ) }
    dend_1 { pt3dadd( 275.055, 413.196, 27.7584, 0.4794 ) }
    dend_1 { pt3dadd( 275.881, 412.414, 27.8872, 0.5836 ) }
    dend_1 { pt3dadd( 276.757, 411.678, 27.9709, 0.5048 ) }
    dend_1 { pt3dadd( 277.689, 411.015, 28.0087, 0.536 ) }
    dend_1 { pt3dadd( 278.624, 410.356, 28.0025, 0.4174 ) }
    dend_1 { pt3dadd( 279.559, 409.697, 27.9597, 0.37 ) }
    dend_1 { pt3dadd( 280.495, 409.038, 27.8872, 0.3574 ) }
    dend_1 { pt3dadd( 281.346, 408.289, 27.762, 0.426 ) }
    dend_1 { pt3dadd( 282.153, 407.488, 27.5806, 0.5668 ) }
    dend_1 { pt3dadd( 282.959, 406.689, 27.3605, 0.7606 ) }
    dend_1 { pt3dadd( 283.766, 405.888, 27.1183, 0.7596 ) }
    dend_1 { pt3dadd( 284.572, 405.088, 26.8694, 0.6762 ) }
    dend_1 { pt3dadd( 285.379, 404.289, 26.6286, 0.4606 ) }
    dend_1 { pt3dadd( 286.041, 403.367, 26.4379, 0.3554 ) }
    dend_1 { pt3dadd( 286.632, 402.388, 26.3074, 0.3324 ) }
    dend_1 { pt3dadd( 287.209, 401.403, 26.224, 0.3714 ) }
    dend_1 { pt3dadd( 287.497, 400.296, 26.1769, 0.5048 ) }
    dend_1 { pt3dadd( 287.806, 399.195, 26.1537, 0.455 ) }
    dend_1 { pt3dadd( 288.203, 398.122, 26.1414, 0.4308 ) }
    dend_1 { pt3dadd( 288.599, 397.049, 26.1299, 0.5158 ) }
    dend_1 { pt3dadd( 289.139, 396.046, 26.1092, 0.4992 ) }
    dend_1 { pt3dadd( 289.736, 395.07, 26.0786, 0.3978 ) }
    dend_1 { pt3dadd( 290.457, 394.182, 26.04, 0.3244 ) }
    dend_1 { pt3dadd( 291.178, 393.295, 25.9969, 0.3194 ) }
    dend_1 { pt3dadd( 291.898, 392.407, 25.9524, 0.3608 ) }
    dend_1 { pt3dadd( 292.62, 391.519, 25.9092, 0.4198 ) }
    dend_1 { pt3dadd( 293.271, 390.58, 25.8748, 0.6152 ) }
    dend_1 { pt3dadd( 293.909, 389.629, 25.8504, 0.5598 ) }
    dend_1 { pt3dadd( 294.546, 388.679, 25.835, 0.4256 ) }
    dend_1 { pt3dadd( 295.182, 387.728, 25.828, 0.3298 ) }
    dend_1 { pt3dadd( 295.317, 386.625, 25.8356, 0.3244 ) }
    dend_1 { pt3dadd( 295.672, 385.562, 25.8521, 0.3928 ) }
    dend_1 { pt3dadd( 296.169, 384.532, 25.8762, 0.3692 ) }
    dend_1 { pt3dadd( 296.842, 383.619, 25.9154, 0.3676 ) }
    dend_1 { pt3dadd( 297.606, 382.767, 25.975, 0.3904 ) }
    dend_1 { pt3dadd( 298.326, 381.887, 26.0733, 0.536 ) }
    dend_1 { pt3dadd( 298.397, 380.929, 26.222, 0.5316 ) }
    dend_1 { pt3dadd( 298.029, 379.911, 26.388, 0.4836 ) }
    dend_1 { pt3dadd( 298.659, 379.093, 26.6112, 0.3592 ) }
    dend_1 { pt3dadd( 299.427, 378.338, 26.8915, 0.3 ) }
    dend_1 { pt3dadd( 299.721, 377.243, 27.1746, 0.2746 ) }
    dend_1 { pt3dadd( 299.243, 376.543, 27.4534, 0.2746 ) }
    dend_1 { pt3dadd( 299.531, 376.972, 27.8286, 0.2746 ) }
    dend_1 { pt3dadd( 300.504, 376.657, 28.3766, 0.2746 ) }
    dend_1 { pt3dadd( 301.212, 376.116, 28.9946, 0.2746 ) }
    dend_1 { pt3dadd( 301.624, 375.335, 29.561, 0.2748 ) }
    dend_1 { pt3dadd( 302.72, 375.162, 30.1339, 0.2748 ) }
    dend_1 { pt3dadd( 303.739, 375.425, 30.6496, 0.275 ) }
    dend_1 { pt3dadd( 303.777, 376.312, 31.0442, 0.2754 ) }
    dend_1 { pt3dadd( 304.446, 375.531, 31.4208, 0.2762 ) }
    dend_1 { pt3dadd( 305.167, 374.668, 31.8041, 0.2778 ) }
    dend_1 { pt3dadd( 305.888, 373.805, 32.2017, 0.2802 ) }
    dend_1 { pt3dadd( 306.629, 372.944, 32.5598, 0.2854 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_1 { pt3dadd( 307.465, 372.2, 32.8941, 0.2944 ) }
    dend_1 { pt3dadd( 308.438, 371.652, 33.2685, 0.311 ) }
    dend_1 { pt3dadd( 309.309, 371.037, 33.6498, 0.3452 ) }
    dend_1 { pt3dadd( 309.455, 369.914, 33.9612, 0.3898 ) }
    dend_1 { pt3dadd( 310.254, 369.333, 34.2538, 0.565 ) }
    dend_1 { pt3dadd( 311.381, 369.295, 34.5621, 0.4406 ) }
    dend_1 { pt3dadd( 312.508, 369.256, 34.8706, 0.3304 ) }
    dend_1 { pt3dadd( 313.636, 369.217, 35.1658, 0.2288 ) }
    dend_1 { pt3dadd( 314.333, 370.082, 35.644, 0.2288 ) }
    // Section: apic_14, id: apic_14, parent: apic_0 (entry count 9/100)
    apic_14 { pt3dclear() }
    apic_14 { pt3dadd( 247.905, 413.706, 33.4323, 0.8462 ) }
    apic_14 { pt3dadd( 247.725, 412.868, 34.3672, 0.2288 ) }
    apic_14 { pt3dadd( 247.551, 411.752, 34.4044, 0.3988 ) }
    apic_14 { pt3dadd( 247.218, 410.671, 34.417, 0.5148 ) }
    apic_14 { pt3dadd( 247.212, 409.528, 34.4268, 0.672 ) }
    apic_14 { pt3dadd( 246.63, 408.577, 34.4336, 0.5574 ) }
    apic_14 { pt3dadd( 246.098, 407.575, 34.438, 0.4866 ) }
    apic_14 { pt3dadd( 245.693, 406.513, 34.44, 0.5814 ) }
    apic_14 { pt3dadd( 244.869, 405.727, 34.44, 0.5756 ) }
    apic_14 { pt3dadd( 243.865, 405.178, 34.44, 0.7604 ) }
    apic_14 { pt3dadd( 243.02, 404.415, 34.44, 0.6106 ) }
    apic_14 { pt3dadd( 242.094, 403.751, 34.44, 0.4356 ) }
    apic_14 { pt3dadd( 241.449, 402.815, 34.44, 0.3 ) }
    apic_14 { pt3dadd( 240.367, 402.675, 34.44, 0.2746 ) }
    // Section: apic_1, id: apic_1, parent: apic_0 (entry count 23/100)
    apic_1 { pt3dclear() }
    apic_1 { pt3dadd( 247.905, 413.706, 33.4323, 0.8462 ) }
    apic_1 { pt3dadd( 248.543, 413.145, 33.5938, 1.0756 ) }
    apic_1 { pt3dadd( 249.503, 412.588, 33.5969, 0.9562 ) }
    apic_1 { pt3dadd( 250.61, 412.339, 33.544, 1.0918 ) }
    apic_1 { pt3dadd( 251.736, 412.517, 33.5076, 1.211 ) }
    apic_1 { pt3dadd( 252.814, 412.898, 33.5065, 1.3884 ) }
    apic_1 { pt3dadd( 253.766, 413.519, 33.5877, 1.2438 ) }
    apic_1 { pt3dadd( 254.768, 413.962, 33.8128, 0.7554 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 31/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 223.805, 444.062, 36.1102, 0.3484 ) }
    dend_15 { pt3dadd( 223.336, 445.101, 36.3362, 0.3538 ) }
    dend_15 { pt3dadd( 222.867, 446.138, 36.556, 0.4724 ) }
    dend_15 { pt3dadd( 222.399, 447.177, 36.7704, 0.3936 ) }
    dend_15 { pt3dadd( 222.254, 448.282, 36.9586, 0.326 ) }
    dend_15 { pt3dadd( 222.296, 449.426, 37.1171, 0.2758 ) }
    dend_15 { pt3dadd( 222.339, 450.569, 37.259, 0.2766 ) }
    dend_15 { pt3dadd( 222.649, 451.661, 37.4366, 0.2784 ) }
    dend_15 { pt3dadd( 222.976, 452.751, 37.6488, 0.2818 ) }
    dend_15 { pt3dadd( 223.304, 453.84, 37.8907, 0.2882 ) }
    dend_15 { pt3dadd( 223.631, 454.929, 38.1573, 0.2994 ) }
    dend_15 { pt3dadd( 223.959, 456.018, 38.439, 0.3228 ) }
    dend_15 { pt3dadd( 224.286, 457.107, 38.7251, 0.3538 ) }
    dend_15 { pt3dadd( 224.613, 458.196, 39.0065, 0.4722 ) }
    dend_15 { pt3dadd( 224.902, 459.29, 39.2801, 0.3934 ) }
    dend_15 { pt3dadd( 224.796, 460.424, 39.5363, 0.3254 ) }
    dend_15 { pt3dadd( 224.691, 461.559, 39.776, 0.2746 ) }
    dend_15 { pt3dadd( 224.585, 462.694, 40.0008, 0.2746 ) }
    dend_15 { pt3dadd( 224.479, 463.829, 40.2114, 0.2746 ) }
    dend_15 { pt3dadd( 224.374, 464.964, 40.4048, 0.2746 ) }
    dend_15 { pt3dadd( 224.19, 466.086, 40.572, 0.2746 ) }
    dend_15 { pt3dadd( 223.883, 467.189, 40.7053, 0.2746 ) }
    dend_15 { pt3dadd( 223.578, 468.291, 40.8257, 0.2746 ) }
    dend_15 { pt3dadd( 223.271, 469.393, 40.9486, 0.2746 ) }
    dend_15 { pt3dadd( 223.124, 470.208, 40.8769, 0.2746 ) }
    dend_15 { pt3dadd( 222.908, 471.206, 41.0785, 0.2746 ) }
    dend_15 { pt3dadd( 222.693, 472.204, 41.4924, 0.2746 ) }
    dend_15 { pt3dadd( 222.497, 473.211, 42.0487, 0.2746 ) }
    dend_15 { pt3dadd( 222.595, 474.35, 42.5236, 0.2746 ) }
    dend_15 { pt3dadd( 222.693, 475.49, 42.9268, 0.2746 ) }
    dend_15 { pt3dadd( 222.792, 476.629, 43.2684, 0.2746 ) }
    dend_15 { pt3dadd( 222.849, 477.761, 43.5736, 0.2746 ) }
    dend_15 { pt3dadd( 222.893, 478.888, 43.8883, 0.2746 ) }
    dend_15 { pt3dadd( 222.937, 480.016, 44.2319, 0.2746 ) }
    dend_15 { pt3dadd( 222.98, 481.142, 44.6146, 0.2746 ) }
    dend_15 { pt3dadd( 223.024, 482.27, 45.0114, 0.2746 ) }
    dend_15 { pt3dadd( 223.079, 483.384, 45.4216, 0.2746 ) }
    dend_15 { pt3dadd( 223.135, 484.494, 45.822, 0.2746 ) }
    dend_15 { pt3dadd( 223.192, 485.604, 46.1972, 0.2746 ) }
    dend_15 { pt3dadd( 222.844, 486.605, 46.4215, 0.2746 ) }
    dend_15 { pt3dadd( 222.245, 487.539, 46.4587, 0.2746 ) }
    dend_15 { pt3dadd( 221.77, 488.516, 46.3924, 0.2746 ) }
    dend_15 { pt3dadd( 221.766, 489.659, 46.3526, 0.2746 ) }
    dend_15 { pt3dadd( 221.76, 490.803, 46.3618, 0.2746 ) }
    dend_15 { pt3dadd( 221.64, 491.922, 46.4934, 0.2746 ) }
    dend_15 { pt3dadd( 221.471, 493.031, 46.7664, 0.2744 ) }
    dend_15 { pt3dadd( 221.302, 494.139, 47.1444, 0.2744 ) }
    dend_15 { pt3dadd( 221.133, 495.248, 47.579, 0.2742 ) }
    dend_15 { pt3dadd( 220.964, 496.356, 48.029, 0.2736 ) }
    dend_15 { pt3dadd( 220.794, 497.465, 48.47, 0.2728 ) }
    dend_15 { pt3dadd( 220.626, 498.573, 48.8804, 0.2712 ) }
    dend_15 { pt3dadd( 220.261, 499.625, 49.2122, 0.2684 ) }
    dend_15 { pt3dadd( 219.693, 500.618, 49.4343, 0.2626 ) }
    dend_15 { pt3dadd( 219.124, 501.611, 49.5701, 0.2542 ) }
    dend_15 { pt3dadd( 218.555, 502.603, 49.6423, 0.2288 ) }
    dend_15 { pt3dadd( 217.987, 503.596, 49.6742, 0.2288 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 87/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 223.805, 444.062, 36.1102, 0.3484 ) }
    dend_14 { pt3dadd( 224.104, 444.455, 34.1678, 0.2288 ) }
    dend_14 { pt3dadd( 224.661, 445.263, 32.7502, 0.3284 ) }
    dend_14 { pt3dadd( 224.687, 446.186, 32.181, 0.3994 ) }
    dend_14 { pt3dadd( 224.642, 447.226, 31.5588, 0.3842 ) }
    dend_14 { pt3dadd( 224.79, 448.268, 30.87, 0.3828 ) }
    dend_14 { pt3dadd( 224.218, 449.189, 30.2918, 0.4792 ) }
    dend_14 { pt3dadd( 223.573, 450.117, 29.7934, 0.4056 ) }
    dend_14 { pt3dadd( 222.945, 451.052, 29.3678, 0.3484 ) }
    dend_14 { pt3dadd( 222.316, 451.986, 28.989, 0.3182 ) }
    dend_14 { pt3dadd( 222.442, 452.924, 28.6888, 0.3512 ) }
    dend_14 { pt3dadd( 222.812, 453.871, 28.4757, 0.438 ) }
    dend_14 { pt3dadd( 222.107, 454.745, 28.3167, 0.4736 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_14 { pt3dadd( 221.168, 455.399, 28.191, 0.4606 ) }
    dend_14 { pt3dadd( 220.235, 456.056, 28.0714, 0.3638 ) }
    dend_14 { pt3dadd( 219.308, 456.715, 27.9314, 0.3084 ) }
    dend_14 { pt3dadd( 218.716, 457.548, 27.785, 0.2902 ) }
    dend_14 { pt3dadd( 218.469, 458.548, 27.6584, 0.303 ) }
    dend_14 { pt3dadd( 217.467, 459.101, 27.5402, 0.3292 ) }
    dend_14 { pt3dadd( 216.755, 459.493, 27.4336, 0.3656 ) }
    dend_14 { pt3dadd( 215.472, 459.889, 27.3381, 0.4944 ) }
    dend_14 { pt3dadd( 214.68, 460.436, 27.1258, 0.4338 ) }
    dend_14 { pt3dadd( 213.827, 461.174, 26.9531, 0.403 ) }
    dend_14 { pt3dadd( 213.255, 462.165, 26.84, 0.407 ) }
    dend_14 { pt3dadd( 212.855, 463.214, 26.7725, 0.5742 ) }
    dend_14 { pt3dadd( 212.702, 464.347, 26.7319, 0.5684 ) }
    dend_14 { pt3dadd( 212.617, 465.488, 26.7117, 0.7176 ) }
    dend_14 { pt3dadd( 213.45, 466.161, 26.7436, 0.6752 ) }
    dend_14 { pt3dadd( 214.487, 466.604, 26.7604, 0.5422 ) }
    dend_14 { pt3dadd( 215.586, 466.913, 26.731, 0.3304 ) }
    dend_14 { pt3dadd( 216.684, 467.222, 26.5644, 0.2288 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 18/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 241.434, 440.39, 27.72, 0.2746 ) }
    dend_9 { pt3dadd( 241.522, 440.962, 29.1841, 0.4576 ) }
    dend_9 { pt3dadd( 241.522, 442.091, 28.56, 0.4582 ) }
    dend_9 { pt3dadd( 241.76, 443.187, 28.3119, 0.3596 ) }
    dend_9 { pt3dadd( 241.937, 444.284, 28.0224, 0.3006 ) }
    dend_9 { pt3dadd( 241.835, 445.412, 27.6592, 0.2758 ) }
    dend_9 { pt3dadd( 242.066, 446.486, 27.2938, 0.2766 ) }
    dend_9 { pt3dadd( 241.381, 447.276, 26.7492, 0.2782 ) }
    dend_9 { pt3dadd( 240.603, 447.995, 26.1002, 0.2814 ) }
    dend_9 { pt3dadd( 239.66, 448.585, 25.4226, 0.287 ) }
    dend_9 { pt3dadd( 238.719, 449.176, 24.7383, 0.2988 ) }
    dend_9 { pt3dadd( 237.973, 449.885, 24.0173, 0.3142 ) }
    dend_9 { pt3dadd( 237.41, 450.705, 23.2448, 0.3734 ) }
    dend_9 { pt3dadd( 236.739, 451.593, 22.6425, 0.3338 ) }
    dend_9 { pt3dadd( 236.271, 452.601, 22.1718, 0.3 ) }
    dend_9 { pt3dadd( 235.944, 453.672, 21.784, 0.2748 ) }
    dend_9 { pt3dadd( 234.975, 454.098, 21.527, 0.2748 ) }
    dend_9 { pt3dadd( 233.837, 453.977, 21.4214, 0.275 ) }
    dend_9 { pt3dadd( 232.757, 454.201, 21.4844, 0.2752 ) }
    dend_9 { pt3dadd( 231.701, 454.575, 21.6759, 0.276 ) }
    dend_9 { pt3dadd( 230.644, 454.951, 21.9534, 0.2774 ) }
    dend_9 { pt3dadd( 229.69, 455.44, 22.2664, 0.2796 ) }
    dend_9 { pt3dadd( 229.107, 456.353, 22.5288, 0.284 ) }
    dend_9 { pt3dadd( 228.011, 456.681, 22.7013, 0.2918 ) }
    dend_9 { pt3dadd( 226.915, 457.01, 22.7878, 0.3076 ) }
    dend_9 { pt3dadd( 225.812, 457.308, 22.8021, 0.3302 ) }
    dend_9 { pt3dadd( 224.692, 457.544, 22.7604, 0.4042 ) }
    dend_9 { pt3dadd( 223.572, 457.779, 22.6775, 0.3856 ) }
    dend_9 { pt3dadd( 222.453, 458.004, 22.5604, 0.4226 ) }
    dend_9 { pt3dadd( 221.331, 458.135, 22.3586, 0.3724 ) }
    dend_9 { pt3dadd( 220.209, 458.268, 22.0914, 0.397 ) }
    dend_9 { pt3dadd( 219.086, 458.4, 21.7658, 0.3304 ) }
    dend_9 { pt3dadd( 218.097, 458.859, 21.4525, 0.2938 ) }
    dend_9 { pt3dadd( 217.215, 459.586, 21.196, 0.2626 ) }
    dend_9 { pt3dadd( 216.52, 460.24, 20.8942, 0.2542 ) }
    dend_9 { pt3dadd( 215.712, 461.004, 20.5601, 0.2288 ) }
    dend_9 { pt3dadd( 214.903, 461.768, 19.747, 0.2288 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 55/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 241.434, 440.39, 27.72, 0.2746 ) }
    dend_8 { pt3dadd( 242.45, 440.743, 27.72, 0.2746 ) }
    dend_8 { pt3dadd( 243.589, 440.807, 27.72, 0.2746 ) }
    dend_8 { pt3dadd( 244.717, 440.996, 27.72, 0.2746 ) }
    dend_8 { pt3dadd( 245.856, 441.052, 27.72, 0.2746 ) }
    dend_8 { pt3dadd( 246.982, 441.254, 27.72, 0.2748 ) }
    dend_8 { pt3dadd( 248.056, 441.594, 27.72, 0.2748 ) }
    dend_8 { pt3dadd( 248.922, 442.337, 27.72, 0.275 ) }
    dend_8 { pt3dadd( 249.657, 443.103, 27.72, 0.2752 ) }
    dend_8 { pt3dadd( 249.998, 444.166, 27.72, 0.276 ) }
    dend_8 { pt3dadd( 251.091, 444.33, 27.72, 0.277 ) }
    dend_8 { pt3dadd( 252.091, 444.868, 27.72, 0.2794 ) }
    dend_8 { pt3dadd( 253.11, 445.378, 27.72, 0.2834 ) }
    dend_8 { pt3dadd( 254.193, 445.716, 27.72, 0.291 ) }
    dend_8 { pt3dadd( 255.261, 446.12, 27.72, 0.3052 ) }
    dend_8 { pt3dadd( 256.313, 446.441, 27.72, 0.3306 ) }
    dend_8 { pt3dadd( 257.271, 446.954, 27.72, 0.3816 ) }
    dend_8 { pt3dadd( 258.197, 447.622, 27.72, 0.458 ) }
    dend_8 { pt3dadd( 259.312, 447.871, 27.72, 0.6878 ) }
    dend_8 { pt3dadd( 260.267, 448.475, 27.72, 0.6858 ) }
    dend_8 { pt3dadd( 261.0, 449.324, 27.72, 0.6998 ) }
    dend_8 { pt3dadd( 262.043, 449.756, 27.72, 0.6404 ) }
    dend_8 { pt3dadd( 263.117, 450.123, 27.72, 0.4894 ) }
    dend_8 { pt3dadd( 264.113, 450.677, 27.72, 0.4052 ) }
    dend_8 { pt3dadd( 265.086, 451.268, 27.72, 0.4428 ) }
    dend_8 { pt3dadd( 265.942, 452.022, 27.72, 0.4888 ) }
    dend_8 { pt3dadd( 266.721, 452.856, 27.7203, 0.4588 ) }
    dend_8 { pt3dadd( 267.695, 453.446, 27.7203, 0.5066 ) }
    dend_8 { pt3dadd( 268.271, 454.413, 27.7203, 0.5496 ) }
    dend_8 { pt3dadd( 268.753, 455.41, 27.7206, 0.6214 ) }
    dend_8 { pt3dadd( 269.402, 456.225, 27.7206, 0.5658 ) }
    dend_8 { pt3dadd( 270.367, 456.813, 27.7208, 0.4638 ) }
    dend_8 { pt3dadd( 271.352, 457.395, 27.7211, 0.4978 ) }
    dend_8 { pt3dadd( 272.152, 458.048, 27.7217, 0.3934 ) }
    dend_8 { pt3dadd( 273.295, 458.103, 27.7225, 0.3256 ) }
    dend_8 { pt3dadd( 274.145, 458.656, 27.7234, 0.275 ) }
    dend_8 { pt3dadd( 275.197, 459.03, 27.7248, 0.2752 ) }
    dend_8 { pt3dadd( 276.33, 459.19, 27.7264, 0.276 ) }
    dend_8 { pt3dadd( 277.474, 459.202, 27.7292, 0.277 ) }
    dend_8 { pt3dadd( 278.344, 459.682, 27.7329, 0.2794 ) }
    dend_8 { pt3dadd( 279.369, 460.099, 27.7379, 0.2834 ) }
    dend_8 { pt3dadd( 280.384, 460.621, 27.7452, 0.2906 ) }
    dend_8 { pt3dadd( 281.493, 460.887, 27.755, 0.3056 ) }
    dend_8 { pt3dadd( 282.466, 461.334, 27.769, 0.3264 ) }
    dend_8 { pt3dadd( 283.4, 461.903, 27.7886, 0.3976 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_8 { pt3dadd( 284.416, 462.416, 27.8155, 0.3734 ) }
    dend_8 { pt3dadd( 285.241, 463.17, 27.8538, 0.3988 ) }
    dend_8 { pt3dadd( 286.378, 463.206, 27.9084, 0.3338 ) }
    dend_8 { pt3dadd( 287.522, 463.206, 27.9838, 0.3 ) }
    dend_8 { pt3dadd( 288.665, 463.206, 28.0832, 0.2746 ) }
    dend_8 { pt3dadd( 289.808, 463.206, 28.2204, 0.2748 ) }
    dend_8 { pt3dadd( 290.926, 463.206, 28.4539, 0.2748 ) }
    dend_8 { pt3dadd( 292.037, 463.206, 28.7633, 0.2752 ) }
    dend_8 { pt3dadd( 293.124, 463.206, 29.1158, 0.2758 ) }
    dend_8 { pt3dadd( 294.264, 463.206, 29.4308, 0.2766 ) }
    dend_8 { pt3dadd( 295.39, 463.198, 29.7556, 0.2782 ) }
    dend_8 { pt3dadd( 296.399, 462.731, 30.0773, 0.2814 ) }
    dend_8 { pt3dadd( 297.535, 462.634, 30.3069, 0.287 ) }
    dend_8 { pt3dadd( 298.679, 462.634, 30.4668, 0.2988 ) }
    dend_8 { pt3dadd( 299.823, 462.634, 30.5788, 0.3142 ) }
    dend_8 { pt3dadd( 300.966, 462.634, 30.6664, 0.3734 ) }
    dend_8 { pt3dadd( 302.103, 462.634, 30.7692, 0.3338 ) }
    dend_8 { pt3dadd( 303.208, 462.415, 30.858, 0.3 ) }
    dend_8 { pt3dadd( 304.352, 462.405, 30.9509, 0.2746 ) }
    dend_8 { pt3dadd( 305.314, 461.952, 31.052, 0.2746 ) }
    dend_8 { pt3dadd( 306.458, 461.937, 31.164, 0.2748 ) }
    dend_8 { pt3dadd( 307.555, 461.713, 31.36, 0.2748 ) }
    dend_8 { pt3dadd( 308.684, 461.57, 31.5902, 0.2752 ) }
    dend_8 { pt3dadd( 309.812, 461.428, 31.8483, 0.2758 ) }
    dend_8 { pt3dadd( 310.941, 461.285, 32.1216, 0.2766 ) }
    dend_8 { pt3dadd( 312.069, 461.143, 32.4016, 0.2782 ) }
    dend_8 { pt3dadd( 313.198, 461.0, 32.6819, 0.2814 ) }
    dend_8 { pt3dadd( 314.341, 460.962, 32.9182, 0.287 ) }
    dend_8 { pt3dadd( 315.484, 460.924, 33.1321, 0.2988 ) }
    dend_8 { pt3dadd( 316.626, 460.894, 33.3396, 0.3142 ) }
    dend_8 { pt3dadd( 317.658, 461.321, 33.6347, 0.3734 ) }
    dend_8 { pt3dadd( 318.689, 461.748, 33.9945, 0.3338 ) }
    dend_8 { pt3dadd( 319.719, 462.176, 34.3972, 0.3 ) }
    dend_8 { pt3dadd( 320.75, 462.603, 34.8214, 0.2746 ) }
    dend_8 { pt3dadd( 321.724, 463.108, 35.2262, 0.2746 ) }
    dend_8 { pt3dadd( 322.388, 464.04, 35.5155, 0.2746 ) }
    dend_8 { pt3dadd( 323.258, 464.647, 35.707, 0.2746 ) }
    dend_8 { pt3dadd( 324.384, 464.849, 35.8327, 0.2746 ) }
    dend_8 { pt3dadd( 325.51, 465.053, 35.9176, 0.2746 ) }
    dend_8 { pt3dadd( 326.636, 465.256, 35.9859, 0.2746 ) }
    dend_8 { pt3dadd( 327.704, 465.624, 36.057, 0.2746 ) }
    dend_8 { pt3dadd( 328.715, 466.161, 36.1477, 0.2746 ) }
    dend_8 { pt3dadd( 329.828, 466.18, 36.274, 0.2746 ) }
    dend_8 { pt3dadd( 330.967, 466.074, 36.4384, 0.2746 ) }
    dend_8 { pt3dadd( 332.069, 466.115, 36.7181, 0.2746 ) }
    dend_8 { pt3dadd( 333.157, 466.22, 37.1154, 0.2746 ) }
    dend_8 { pt3dadd( 334.244, 466.325, 37.5883, 0.2746 ) }
    dend_8 { pt3dadd( 335.327, 466.467, 38.0839, 0.2746 ) }
    dend_8 { pt3dadd( 336.379, 466.914, 38.4675, 0.2746 ) }
    dend_8 { pt3dadd( 337.433, 467.362, 38.7492, 0.2744 ) }
    dend_8 { pt3dadd( 338.486, 467.809, 38.9435, 0.2744 ) }
    dend_8 { pt3dadd( 339.565, 468.177, 39.0782, 0.2742 ) }
    dend_8 { pt3dadd( 340.671, 468.476, 39.1863, 0.2736 ) }
    dend_8 { pt3dadd( 341.775, 468.773, 39.2994, 0.2728 ) }
    dend_8 { pt3dadd( 342.879, 469.072, 39.4461, 0.2712 ) }
    dend_8 { pt3dadd( 343.925, 469.441, 39.6995, 0.2684 ) }
    dend_8 { pt3dadd( 344.948, 469.842, 40.0593, 0.2626 ) }
    dend_8 { pt3dadd( 345.971, 470.242, 40.483, 0.2542 ) }
    dend_8 { pt3dadd( 346.997, 470.462, 40.9074, 0.2288 ) }
    dend_8 { pt3dadd( 348.034, 469.983, 41.4999, 0.2288 ) }
    // Section: apic_16, id: apic_16, parent: apic_14 (entry count 60/100)
    apic_16 { pt3dclear() }
    apic_16 { pt3dadd( 240.367, 402.675, 34.44, 0.2746 ) }
    apic_16 { pt3dadd( 239.573, 402.685, 35.5936, 0.2288 ) }
    apic_16 { pt3dadd( 238.517, 402.884, 35.8624, 0.2746 ) }
    apic_16 { pt3dadd( 237.374, 402.917, 35.9542, 0.2746 ) }
    apic_16 { pt3dadd( 236.234, 402.982, 36.0242, 0.2746 ) }
    apic_16 { pt3dadd( 235.114, 403.173, 36.0741, 0.2748 ) }
    apic_16 { pt3dadd( 234.393, 403.789, 36.1054, 0.2748 ) }
    apic_16 { pt3dadd( 233.462, 404.212, 36.12, 0.275 ) }
    apic_16 { pt3dadd( 232.446, 404.735, 36.12, 0.2754 ) }
    apic_16 { pt3dadd( 231.302, 404.747, 36.12, 0.2762 ) }
    apic_16 { pt3dadd( 230.158, 404.747, 36.12, 0.2776 ) }
    apic_16 { pt3dadd( 229.014, 404.747, 36.12, 0.28 ) }
    apic_16 { pt3dadd( 227.87, 404.747, 36.12, 0.2848 ) }
    apic_16 { pt3dadd( 226.726, 404.747, 36.12, 0.2936 ) }
    apic_16 { pt3dadd( 225.582, 404.747, 36.12, 0.311 ) }
    apic_16 { pt3dadd( 224.438, 404.747, 36.12, 0.3366 ) }
    apic_16 { pt3dadd( 223.298, 404.681, 36.12, 0.4164 ) }
    apic_16 { pt3dadd( 222.159, 404.612, 36.12, 0.408 ) }
    apic_16 { pt3dadd( 221.089, 404.213, 36.12, 0.4638 ) }
    apic_16 { pt3dadd( 220.013, 403.825, 36.12, 0.4496 ) }
    apic_16 { pt3dadd( 218.884, 403.718, 36.12, 0.5368 ) }
    apic_16 { pt3dadd( 217.88, 403.354, 36.12, 0.606 ) }
    apic_16 { pt3dadd( 216.774, 403.099, 36.12, 0.7246 ) }
    apic_16 { pt3dadd( 215.653, 402.88, 36.12, 0.7644 ) }
    apic_16 { pt3dadd( 214.525, 402.693, 36.12, 0.7974 ) }
    apic_16 { pt3dadd( 213.457, 402.285, 36.1203, 0.5978 ) }
    apic_16 { pt3dadd( 212.356, 401.983, 36.1203, 0.578 ) }
    apic_16 { pt3dadd( 211.273, 401.625, 36.1203, 0.4424 ) }
    apic_16 { pt3dadd( 210.136, 401.544, 36.1206, 0.4424 ) }
    apic_16 { pt3dadd( 209.001, 401.43, 36.1206, 0.3674 ) }
    apic_16 { pt3dadd( 207.857, 401.43, 36.1208, 0.3628 ) }
    apic_16 { pt3dadd( 206.713, 401.43, 36.1214, 0.3876 ) }
    apic_16 { pt3dadd( 205.569, 401.43, 36.122, 0.501 ) }
    apic_16 { pt3dadd( 204.427, 401.447, 36.1225, 0.6114 ) }
    apic_16 { pt3dadd( 203.382, 401.839, 36.1236, 0.6174 ) }
    apic_16 { pt3dadd( 202.342, 402.294, 36.125, 0.446 ) }
    apic_16 { pt3dadd( 201.413, 402.961, 36.127, 0.329 ) }
    apic_16 { pt3dadd( 200.487, 403.6, 36.1298, 0.2814 ) }
    apic_16 { pt3dadd( 199.448, 403.98, 36.1337, 0.287 ) }
    apic_16 { pt3dadd( 198.666, 404.775, 36.1393, 0.2988 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    apic_16 { pt3dadd( 197.645, 405.229, 36.1469, 0.3142 ) }
    apic_16 { pt3dadd( 196.562, 405.567, 36.1575, 0.3734 ) }
    apic_16 { pt3dadd( 195.499, 405.992, 36.1729, 0.334 ) }
    apic_16 { pt3dadd( 194.443, 406.432, 36.1942, 0.3002 ) }
    apic_16 { pt3dadd( 193.322, 406.645, 36.2228, 0.2748 ) }
    apic_16 { pt3dadd( 192.246, 407.001, 36.2592, 0.275 ) }
    apic_16 { pt3dadd( 191.417, 407.758, 36.3233, 0.2754 ) }
    apic_16 { pt3dadd( 190.533, 408.431, 36.4182, 0.2764 ) }
    apic_16 { pt3dadd( 189.911, 409.379, 36.5165, 0.278 ) }
    apic_16 { pt3dadd( 189.125, 410.01, 36.6206, 0.2808 ) }
    apic_16 { pt3dadd( 188.41, 410.527, 36.7324, 0.2862 ) }
    apic_16 { pt3dadd( 187.506, 411.008, 36.9127, 0.2958 ) }
    apic_16 { pt3dadd( 186.39, 411.088, 37.1616, 0.315 ) }
    apic_16 { pt3dadd( 185.366, 411.538, 37.4114, 0.3454 ) }
    apic_16 { pt3dadd( 184.598, 412.243, 37.6365, 0.426 ) }
    apic_16 { pt3dadd( 183.707, 412.923, 37.8482, 0.458 ) }
    apic_16 { pt3dadd( 182.73, 413.44, 38.1122, 0.4008 ) }
    apic_16 { pt3dadd( 181.616, 413.674, 38.3639, 0.4026 ) }
    apic_16 { pt3dadd( 180.631, 414.043, 38.712, 0.3412 ) }
    apic_16 { pt3dadd( 179.899, 414.707, 39.0004, 0.313 ) }
    apic_16 { pt3dadd( 178.969, 415.34, 39.2384, 0.3 ) }
    apic_16 { pt3dadd( 177.83, 415.417, 39.4318, 0.3162 ) }
    apic_16 { pt3dadd( 176.769, 415.646, 39.6687, 0.3772 ) }
    apic_16 { pt3dadd( 175.953, 416.351, 39.9045, 0.3412 ) }
    apic_16 { pt3dadd( 175.001, 416.855, 40.1022, 0.3136 ) }
    apic_16 { pt3dadd( 174.196, 417.607, 40.2934, 0.2994 ) }
    apic_16 { pt3dadd( 173.191, 418.137, 40.4821, 0.3228 ) }
    apic_16 { pt3dadd( 172.18, 418.663, 40.6722, 0.3538 ) }
    apic_16 { pt3dadd( 171.478, 419.298, 41.0539, 0.4722 ) }
    apic_16 { pt3dadd( 170.496, 419.505, 41.4739, 0.3934 ) }
    apic_16 { pt3dadd( 169.385, 419.505, 41.8746, 0.3256 ) }
    apic_16 { pt3dadd( 168.241, 419.505, 42.1747, 0.2748 ) }
    apic_16 { pt3dadd( 167.097, 419.505, 42.3808, 0.2752 ) }
    apic_16 { pt3dadd( 165.953, 419.505, 42.502, 0.2758 ) }
    apic_16 { pt3dadd( 164.809, 419.505, 42.5477, 0.2766 ) }
    apic_16 { pt3dadd( 163.665, 419.505, 42.56, 0.2782 ) }
    apic_16 { pt3dadd( 162.533, 419.352, 42.56, 0.2814 ) }
    apic_16 { pt3dadd( 161.453, 419.007, 42.5603, 0.2872 ) }
    apic_16 { pt3dadd( 160.524, 418.356, 42.5603, 0.299 ) }
    apic_16 { pt3dadd( 159.5, 417.853, 42.5603, 0.3146 ) }
    apic_16 { pt3dadd( 158.475, 417.355, 42.5606, 0.3746 ) }
    apic_16 { pt3dadd( 157.6, 416.623, 42.5606, 0.3358 ) }
    apic_16 { pt3dadd( 156.568, 416.135, 42.5608, 0.3036 ) }
    apic_16 { pt3dadd( 156.085, 415.147, 42.5611, 0.2814 ) }
    apic_16 { pt3dadd( 155.25, 414.414, 42.5617, 0.287 ) }
    apic_16 { pt3dadd( 154.289, 414.014, 42.5622, 0.2988 ) }
    apic_16 { pt3dadd( 153.161, 413.868, 42.5631, 0.3142 ) }
    apic_16 { pt3dadd( 152.227, 413.216, 42.5645, 0.3734 ) }
    apic_16 { pt3dadd( 151.196, 412.739, 42.5662, 0.3338 ) }
    apic_16 { pt3dadd( 150.258, 412.096, 42.5687, 0.3 ) }
    apic_16 { pt3dadd( 149.221, 411.648, 42.572, 0.2746 ) }
    apic_16 { pt3dadd( 148.081, 411.611, 42.5768, 0.2746 ) }
    apic_16 { pt3dadd( 147.015, 411.783, 42.5835, 0.2746 ) }
    apic_16 { pt3dadd( 146.739, 412.831, 42.593, 0.2746 ) }
    apic_16 { pt3dadd( 146.318, 413.851, 42.6062, 0.2746 ) }
    apic_16 { pt3dadd( 145.941, 414.7, 42.6247, 0.2746 ) }
    apic_16 { pt3dadd( 144.797, 414.7, 42.6504, 0.2746 ) }
    apic_16 { pt3dadd( 143.653, 414.7, 42.6866, 0.2746 ) }
    apic_16 { pt3dadd( 142.509, 414.7, 42.737, 0.2746 ) }
    apic_16 { pt3dadd( 141.365, 414.7, 42.8061, 0.2746 ) }
    apic_16 { pt3dadd( 140.315, 415.056, 42.9038, 0.2746 ) }
    apic_16 { pt3dadd( 139.244, 415.43, 43.0455, 0.2744 ) }
    apic_16 { pt3dadd( 138.14, 415.732, 43.2424, 0.2744 ) }
    apic_16 { pt3dadd( 137.035, 416.003, 43.5016, 0.2742 ) }
    apic_16 { pt3dadd( 136.059, 416.592, 43.8259, 0.2736 ) }
    apic_16 { pt3dadd( 135.488, 417.075, 44.4212, 0.2728 ) }
    apic_16 { pt3dadd( 135.135, 417.607, 45.3362, 0.2712 ) }
    apic_16 { pt3dadd( 134.3, 418.346, 46.2202, 0.2684 ) }
    apic_16 { pt3dadd( 133.464, 419.084, 47.0411, 0.2626 ) }
    apic_16 { pt3dadd( 132.628, 419.822, 47.7742, 0.2542 ) }
    apic_16 { pt3dadd( 131.655, 419.546, 48.4033, 0.2288 ) }
    apic_16 { pt3dadd( 130.653, 419.064, 49.4564, 0.2288 ) }
    // Section: apic_15, id: apic_15, parent: apic_14 (entry count 72/100)
    apic_15 { pt3dclear() }
    apic_15 { pt3dadd( 240.367, 402.675, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 240.24, 401.838, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 240.212, 400.696, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 240.061, 399.563, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 239.959, 398.424, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 239.897, 397.285, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 239.802, 396.159, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 239.619, 395.054, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 239.238, 394.046, 34.44, 0.2746 ) }
    apic_15 { pt3dadd( 238.958, 392.938, 34.4403, 0.2748 ) }
    apic_15 { pt3dadd( 238.867, 391.806, 34.4403, 0.2748 ) }
    apic_15 { pt3dadd( 238.867, 390.662, 34.4403, 0.2752 ) }
    apic_15 { pt3dadd( 238.867, 389.518, 34.4403, 0.2758 ) }
    apic_15 { pt3dadd( 238.827, 388.378, 34.4406, 0.2766 ) }
    apic_15 { pt3dadd( 238.753, 387.239, 34.4408, 0.2782 ) }
    apic_15 { pt3dadd( 238.675, 386.109, 34.4411, 0.2814 ) }
    apic_15 { pt3dadd( 237.951, 385.315, 34.4417, 0.2874 ) }
    apic_15 { pt3dadd( 237.555, 384.252, 34.4422, 0.2984 ) }
    apic_15 { pt3dadd( 236.859, 383.575, 34.4431, 0.3182 ) }
    apic_15 { pt3dadd( 236.579, 382.493, 34.4442, 0.3574 ) }
    apic_15 { pt3dadd( 236.579, 381.349, 34.4462, 0.4198 ) }
    apic_15 { pt3dadd( 236.101, 380.319, 34.4484, 0.5842 ) }
    apic_15 { pt3dadd( 235.595, 379.318, 34.4518, 0.6534 ) }
    apic_15 { pt3dadd( 235.377, 378.198, 34.4565, 0.5508 ) }
    apic_15 { pt3dadd( 235.048, 377.106, 34.4632, 0.569 ) }
    apic_15 { pt3dadd( 234.477, 376.115, 34.4722, 0.5038 ) }
    apic_15 { pt3dadd( 233.756, 375.231, 34.4851, 0.4066 ) }
    apic_15 { pt3dadd( 233.169, 374.281, 34.503, 0.34 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    apic_15 { pt3dadd( 232.623, 373.311, 34.5288, 0.3518 ) }
    apic_15 { pt3dadd( 232.167, 372.267, 34.564, 0.4022 ) }
    apic_15 { pt3dadd( 231.355, 371.483, 34.6119, 0.5878 ) }
    apic_15 { pt3dadd( 230.387, 370.925, 34.6741, 0.4846 ) }
    apic_15 { pt3dadd( 229.308, 370.611, 34.7894, 0.4052 ) }
    apic_15 { pt3dadd( 228.406, 369.914, 34.9213, 0.4004 ) }
    apic_15 { pt3dadd( 227.4, 369.512, 35.1036, 0.386 ) }
    apic_15 { pt3dadd( 226.314, 369.239, 35.2867, 0.386 ) }
    apic_15 { pt3dadd( 225.456, 368.506, 35.5104, 0.485 ) }
    apic_15 { pt3dadd( 224.92, 367.682, 35.8537, 0.418 ) }
    apic_15 { pt3dadd( 224.577, 366.621, 36.1556, 0.366 ) }
    apic_15 { pt3dadd( 223.786, 365.804, 36.4336, 0.3756 ) }
    apic_15 { pt3dadd( 223.097, 365.053, 36.7914, 0.338 ) }
    apic_15 { pt3dadd( 222.405, 364.15, 37.137, 0.3076 ) }
    apic_15 { pt3dadd( 221.48, 363.572, 37.4699, 0.2886 ) }
    apic_15 { pt3dadd( 220.508, 363.114, 37.8666, 0.3 ) }
    apic_15 { pt3dadd( 219.815, 362.559, 38.4042, 0.3226 ) }
    apic_15 { pt3dadd( 219.396, 361.576, 38.8371, 0.3594 ) }
    apic_15 { pt3dadd( 218.368, 361.219, 39.1807, 0.4532 ) }
    apic_15 { pt3dadd( 217.63, 360.386, 39.4663, 0.5024 ) }
    apic_15 { pt3dadd( 216.606, 360.131, 39.7096, 0.5132 ) }
    apic_15 { pt3dadd( 215.567, 359.918, 40.0114, 0.4642 ) }
    apic_15 { pt3dadd( 214.944, 359.056, 40.3099, 0.4812 ) }
    apic_15 { pt3dadd( 214.406, 358.434, 40.7638, 0.6764 ) }
    apic_15 { pt3dadd( 213.462, 357.973, 41.2154, 0.6992 ) }
    apic_15 { pt3dadd( 212.548, 357.339, 41.6438, 0.5574 ) }
    apic_15 { pt3dadd( 211.543, 356.835, 41.9891, 0.5034 ) }
    apic_15 { pt3dadd( 211.031, 355.832, 42.2632, 0.5318 ) }
    apic_15 { pt3dadd( 210.558, 354.827, 42.5099, 0.4188 ) }
    apic_15 { pt3dadd( 209.537, 354.573, 42.842, 0.3258 ) }
    apic_15 { pt3dadd( 208.462, 354.202, 43.1539, 0.2752 ) }
    apic_15 { pt3dadd( 207.423, 353.849, 43.4678, 0.2758 ) }
    apic_15 { pt3dadd( 206.778, 353.231, 43.8794, 0.2768 ) }
    apic_15 { pt3dadd( 205.704, 353.046, 44.2576, 0.2786 ) }
    apic_15 { pt3dadd( 204.874, 352.289, 44.5634, 0.2822 ) }
    apic_15 { pt3dadd( 203.735, 352.238, 44.8112, 0.2886 ) }
    apic_15 { pt3dadd( 202.712, 351.976, 45.103, 0.3 ) }
    apic_15 { pt3dadd( 201.614, 351.728, 45.4177, 0.324 ) }
    apic_15 { pt3dadd( 200.492, 351.561, 45.7234, 0.3558 ) }
    apic_15 { pt3dadd( 199.476, 351.131, 46.0046, 0.4762 ) }
    apic_15 { pt3dadd( 198.997, 350.313, 46.3702, 0.4002 ) }
    apic_15 { pt3dadd( 198.559, 349.309, 46.804, 0.3382 ) }
    apic_15 { pt3dadd( 197.995, 348.483, 47.2506, 0.2994 ) }
    apic_15 { pt3dadd( 196.853, 348.484, 47.5969, 0.3156 ) }
    apic_15 { pt3dadd( 195.714, 348.548, 47.8957, 0.376 ) }
    apic_15 { pt3dadd( 194.581, 348.657, 48.1768, 0.3386 ) }
    apic_15 { pt3dadd( 193.448, 348.766, 48.4358, 0.3088 ) }
    apic_15 { pt3dadd( 192.314, 348.874, 48.6872, 0.2906 ) }
    apic_15 { pt3dadd( 191.181, 348.983, 48.9454, 0.3056 ) }
    apic_15 { pt3dadd( 190.048, 349.092, 49.2204, 0.3264 ) }
    apic_15 { pt3dadd( 188.914, 349.2, 49.5026, 0.3976 ) }
    apic_15 { pt3dadd( 187.838, 348.953, 49.7773, 0.3734 ) }
    apic_15 { pt3dadd( 186.764, 348.675, 50.0578, 0.3988 ) }
    apic_15 { pt3dadd( 185.635, 348.706, 50.3686, 0.3338 ) }
    apic_15 { pt3dadd( 184.504, 348.737, 50.6982, 0.3 ) }
    apic_15 { pt3dadd( 183.375, 348.768, 51.0348, 0.2746 ) }
    apic_15 { pt3dadd( 182.246, 348.799, 51.3671, 0.2746 ) }
    apic_15 { pt3dadd( 181.117, 348.83, 51.6863, 0.2746 ) }
    apic_15 { pt3dadd( 180.082, 348.38, 51.9229, 0.2746 ) }
    apic_15 { pt3dadd( 179.059, 347.867, 52.0856, 0.2746 ) }
    apic_15 { pt3dadd( 178.035, 347.356, 52.1976, 0.2746 ) }
    apic_15 { pt3dadd( 177.012, 346.845, 52.281, 0.2746 ) }
    apic_15 { pt3dadd( 175.956, 346.432, 52.3743, 0.2746 ) }
    apic_15 { pt3dadd( 174.85, 346.168, 52.5171, 0.2746 ) }
    apic_15 { pt3dadd( 173.744, 345.904, 52.7064, 0.2746 ) }
    apic_15 { pt3dadd( 172.637, 345.641, 52.9267, 0.2746 ) }
    apic_15 { pt3dadd( 171.53, 345.377, 53.1622, 0.2746 ) }
    apic_15 { pt3dadd( 170.424, 345.114, 53.398, 0.2746 ) }
    apic_15 { pt3dadd( 169.318, 344.85, 53.6203, 0.2746 ) }
    apic_15 { pt3dadd( 168.288, 344.386, 53.7944, 0.2746 ) }
    apic_15 { pt3dadd( 167.303, 343.804, 53.9118, 0.2746 ) }
    apic_15 { pt3dadd( 166.318, 343.222, 53.9851, 0.2746 ) }
    apic_15 { pt3dadd( 165.333, 342.641, 54.0268, 0.2746 ) }
    apic_15 { pt3dadd( 164.348, 342.058, 54.0473, 0.2746 ) }
    apic_15 { pt3dadd( 163.371, 341.462, 54.0599, 0.2746 ) }
    apic_15 { pt3dadd( 162.404, 340.853, 54.0767, 0.2746 ) }
    apic_15 { pt3dadd( 161.486, 340.186, 54.0946, 0.2746 ) }
    apic_15 { pt3dadd( 160.756, 339.306, 54.0991, 0.2746 ) }
    apic_15 { pt3dadd( 160.025, 338.426, 54.0949, 0.2746 ) }
    apic_15 { pt3dadd( 158.942, 338.316, 54.0954, 0.2746 ) }
    apic_15 { pt3dadd( 157.798, 338.337, 54.1044, 0.2746 ) }
    apic_15 { pt3dadd( 156.654, 338.359, 54.1257, 0.2746 ) }
    apic_15 { pt3dadd( 155.51, 338.38, 54.1638, 0.2746 ) }
    apic_15 { pt3dadd( 154.367, 338.401, 54.2217, 0.2746 ) }
    apic_15 { pt3dadd( 153.439, 338.018, 54.3085, 0.2746 ) }
    apic_15 { pt3dadd( 152.783, 337.103, 54.4348, 0.2746 ) }
    apic_15 { pt3dadd( 151.734, 336.675, 54.6193, 0.2746 ) }
    apic_15 { pt3dadd( 150.684, 336.246, 54.8436, 0.2746 ) }
    apic_15 { pt3dadd( 149.635, 335.818, 55.0892, 0.2746 ) }
    apic_15 { pt3dadd( 148.971, 335.059, 55.3134, 0.2744 ) }
    apic_15 { pt3dadd( 148.725, 333.943, 55.4851, 0.2744 ) }
    apic_15 { pt3dadd( 148.479, 332.825, 55.6172, 0.2742 ) }
    apic_15 { pt3dadd( 148.174, 331.723, 55.7239, 0.2736 ) }
    apic_15 { pt3dadd( 147.844, 330.629, 55.8219, 0.2728 ) }
    apic_15 { pt3dadd( 147.559, 329.534, 55.9572, 0.2712 ) }
    apic_15 { pt3dadd( 147.389, 328.439, 56.2052, 0.2684 ) }
    apic_15 { pt3dadd( 147.221, 327.344, 56.5312, 0.2626 ) }
    apic_15 { pt3dadd( 147.322, 326.29, 56.8635, 0.2542 ) }
    apic_15 { pt3dadd( 147.909, 325.309, 57.1183, 0.2288 ) }
    apic_15 { pt3dadd( 148.497, 324.327, 57.44, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    // Section: apic_11, id: apic_11, parent: apic_1 (entry count 0/100)
    apic_11 { pt3dclear() }
    apic_11 { pt3dadd( 254.768, 413.962, 33.8128, 0.7554 ) }
    apic_11 { pt3dadd( 254.871, 414.415, 33.8934, 0.2288 ) }
    apic_11 { pt3dadd( 255.025, 415.402, 34.7917, 0.3002 ) }
    apic_11 { pt3dadd( 255.401, 416.392, 35.1649, 0.324 ) }
    apic_11 { pt3dadd( 255.645, 417.398, 35.4544, 0.3558 ) }
    apic_11 { pt3dadd( 255.171, 418.437, 35.7056, 0.4764 ) }
    apic_11 { pt3dadd( 254.269, 419.138, 35.8884, 0.4006 ) }
    apic_11 { pt3dadd( 253.968, 420.214, 36.0284, 0.339 ) }
    apic_11 { pt3dadd( 253.738, 421.334, 36.1346, 0.2994 ) }
    apic_11 { pt3dadd( 253.508, 422.455, 36.2443, 0.3228 ) }
    // Section: apic_2, id: apic_2, parent: apic_1 (entry count 10/100)
    apic_2 { pt3dclear() }
    apic_2 { pt3dadd( 254.768, 413.962, 33.8128, 0.7554 ) }
    apic_2 { pt3dadd( 255.133, 413.852, 34.0248, 0.4612 ) }
    apic_2 { pt3dadd( 256.243, 413.613, 34.2465, 0.3818 ) }
    apic_2 { pt3dadd( 257.304, 413.238, 34.4786, 0.489 ) }
    // Section: apic_13, id: apic_13, parent: apic_11 (entry count 14/100)
    apic_13 { pt3dclear() }
    apic_13 { pt3dadd( 253.508, 422.455, 36.2443, 0.3228 ) }
    apic_13 { pt3dadd( 253.474, 422.504, 36.5918, 0.3538 ) }
    apic_13 { pt3dadd( 252.959, 423.412, 36.9152, 0.4722 ) }
    apic_13 { pt3dadd( 252.395, 424.407, 37.168, 0.3934 ) }
    apic_13 { pt3dadd( 251.832, 425.402, 37.3517, 0.3254 ) }
    apic_13 { pt3dadd( 251.268, 426.398, 37.4707, 0.2746 ) }
    apic_13 { pt3dadd( 250.608, 427.33, 37.5284, 0.2746 ) }
    apic_13 { pt3dadd( 249.914, 428.239, 37.5309, 0.2746 ) }
    apic_13 { pt3dadd( 249.319, 429.181, 37.5239, 0.2746 ) }
    apic_13 { pt3dadd( 249.34, 430.324, 37.5211, 0.2746 ) }
    apic_13 { pt3dadd( 249.362, 431.468, 37.5217, 0.2746 ) }
    apic_13 { pt3dadd( 248.908, 432.506, 37.5208, 0.2746 ) }
    apic_13 { pt3dadd( 248.406, 433.534, 37.5186, 0.2746 ) }
    apic_13 { pt3dadd( 247.796, 434.499, 37.5161, 0.2746 ) }
    apic_13 { pt3dadd( 247.144, 435.438, 37.513, 0.2746 ) }
    apic_13 { pt3dadd( 246.535, 436.398, 37.5096, 0.2746 ) }
    apic_13 { pt3dadd( 246.281, 437.514, 37.5091, 0.2746 ) }
    apic_13 { pt3dadd( 246.026, 438.629, 37.5108, 0.2748 ) }
    apic_13 { pt3dadd( 245.772, 439.744, 37.5144, 0.2748 ) }
    apic_13 { pt3dadd( 245.518, 440.86, 37.5189, 0.2752 ) }
    apic_13 { pt3dadd( 245.199, 441.957, 37.5228, 0.2758 ) }
    apic_13 { pt3dadd( 244.832, 443.04, 37.5259, 0.2766 ) }
    apic_13 { pt3dadd( 244.465, 444.124, 37.5278, 0.2782 ) }
    apic_13 { pt3dadd( 243.74, 444.914, 37.5276, 0.2814 ) }
    apic_13 { pt3dadd( 243.336, 445.839, 37.5262, 0.287 ) }
    apic_13 { pt3dadd( 243.297, 446.983, 37.5262, 0.2988 ) }
    apic_13 { pt3dadd( 243.258, 448.125, 37.5278, 0.3142 ) }
    apic_13 { pt3dadd( 243.219, 449.269, 37.532, 0.3734 ) }
    apic_13 { pt3dadd( 242.789, 450.31, 37.5483, 0.3338 ) }
    apic_13 { pt3dadd( 242.266, 451.327, 37.5746, 0.3 ) }
    apic_13 { pt3dadd( 241.743, 452.345, 37.6048, 0.2746 ) }
    apic_13 { pt3dadd( 241.22, 453.362, 37.6331, 0.2746 ) }
    apic_13 { pt3dadd( 240.777, 454.412, 37.648, 0.2746 ) }
    apic_13 { pt3dadd( 240.419, 455.499, 37.6387, 0.2746 ) }
    apic_13 { pt3dadd( 240.06, 456.584, 37.6026, 0.2746 ) }
    apic_13 { pt3dadd( 239.701, 457.671, 37.5326, 0.2746 ) }
    apic_13 { pt3dadd( 239.248, 458.675, 37.4214, 0.2746 ) }
    apic_13 { pt3dadd( 238.225, 459.187, 37.2702, 0.2746 ) }
    apic_13 { pt3dadd( 237.164, 459.308, 37.072, 0.2746 ) }
    apic_13 { pt3dadd( 236.134, 459.157, 36.7881, 0.2746 ) }
    apic_13 { pt3dadd( 235.479, 459.805, 36.2488, 0.2746 ) }
    apic_13 { pt3dadd( 234.823, 460.453, 35.5407, 0.2746 ) }
    apic_13 { pt3dadd( 234.691, 461.574, 34.9625, 0.2746 ) }
    apic_13 { pt3dadd( 234.576, 462.712, 34.5181, 0.2746 ) }
    apic_13 { pt3dadd( 233.982, 463.661, 34.2082, 0.2746 ) }
    apic_13 { pt3dadd( 233.288, 464.569, 34.0197, 0.2746 ) }
    apic_13 { pt3dadd( 232.594, 465.479, 33.931, 0.2746 ) }
    apic_13 { pt3dadd( 232.203, 466.537, 33.8545, 0.2746 ) }
    apic_13 { pt3dadd( 231.882, 467.629, 33.7473, 0.2746 ) }
    apic_13 { pt3dadd( 231.412, 468.633, 33.6314, 0.2746 ) }
    apic_13 { pt3dadd( 230.58, 469.418, 33.5409, 0.2746 ) }
    apic_13 { pt3dadd( 229.747, 470.202, 33.4746, 0.2746 ) }
    apic_13 { pt3dadd( 229.03, 471.05, 33.4272, 0.2746 ) }
    apic_13 { pt3dadd( 228.802, 472.168, 33.3894, 0.2746 ) }
    apic_13 { pt3dadd( 228.204, 473.142, 33.3724, 0.2746 ) }
    apic_13 { pt3dadd( 227.531, 474.044, 33.3609, 0.2746 ) }
    apic_13 { pt3dadd( 226.559, 474.646, 33.3357, 0.2746 ) }
    apic_13 { pt3dadd( 225.591, 475.254, 33.2959, 0.2746 ) }
    apic_13 { pt3dadd( 224.702, 475.975, 33.2402, 0.2746 ) }
    apic_13 { pt3dadd( 223.814, 476.696, 33.1702, 0.2746 ) }
    apic_13 { pt3dadd( 223.305, 477.713, 33.049, 0.2746 ) }
    apic_13 { pt3dadd( 222.801, 478.731, 32.8924, 0.2746 ) }
    apic_13 { pt3dadd( 222.295, 479.75, 32.7152, 0.2746 ) }
    apic_13 { pt3dadd( 221.723, 480.734, 32.559, 0.2744 ) }
    apic_13 { pt3dadd( 220.906, 481.452, 32.4514, 0.2744 ) }
    apic_13 { pt3dadd( 220.405, 482.37, 32.3571, 0.2742 ) }
    apic_13 { pt3dadd( 220.105, 483.474, 32.2638, 0.2736 ) }
    apic_13 { pt3dadd( 219.805, 484.578, 32.1597, 0.2728 ) }
    apic_13 { pt3dadd( 219.895, 485.686, 31.941, 0.2712 ) }
    apic_13 { pt3dadd( 219.833, 486.813, 31.7114, 0.2684 ) }
    apic_13 { pt3dadd( 219.354, 487.835, 31.4698, 0.2626 ) }
    apic_13 { pt3dadd( 219.502, 488.966, 31.2455, 0.2542 ) }
    apic_13 { pt3dadd( 219.146, 489.809, 30.9355, 0.2288 ) }
    apic_13 { pt3dadd( 218.335, 490.393, 29.825, 0.2288 ) }
    // Section: apic_12, id: apic_12, parent: apic_11 (entry count 88/100)
    apic_12 { pt3dclear() }
    apic_12 { pt3dadd( 253.508, 422.455, 36.2443, 0.3228 ) }
    apic_12 { pt3dadd( 252.85, 422.178, 38.0324, 0.2288 ) }
    apic_12 { pt3dadd( 252.492, 421.691, 39.9473, 0.3734 ) }
    apic_12 { pt3dadd( 252.477, 420.931, 40.8582, 0.3338 ) }
    apic_12 { pt3dadd( 252.89, 419.879, 41.6256, 0.3 ) }
    apic_12 { pt3dadd( 253.317, 418.817, 42.2587, 0.2744 ) }
    apic_12 { pt3dadd( 253.744, 417.756, 42.7843, 0.2744 ) }
    apic_12 { pt3dadd( 253.951, 416.724, 43.2488, 0.2742 ) }
    apic_12 { pt3dadd( 253.307, 415.807, 43.7382, 0.2736 ) }
    apic_12 { pt3dadd( 252.663, 414.891, 44.2974, 0.2728 ) }
    apic_12 { pt3dadd( 252.02, 413.975, 44.9873, 0.2712 ) }
    apic_12 { pt3dadd( 251.578, 413.216, 45.9304, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    apic_12 { pt3dadd( 251.149, 412.467, 47.0358, 0.2626 ) }
    apic_12 { pt3dadd( 250.266, 412.192, 48.0298, 0.2542 ) }
    apic_12 { pt3dadd( 249.755, 412.806, 48.9602, 0.2288 ) }
    apic_12 { pt3dadd( 249.546, 413.717, 50.9642, 0.2288 ) }
    // Section: apic_6, id: apic_6, parent: apic_2 (entry count 4/100)
    apic_6 { pt3dclear() }
    apic_6 { pt3dadd( 257.304, 413.238, 34.4786, 0.489 ) }
    apic_6 { pt3dadd( 258.431, 413.319, 34.7488, 0.2288 ) }
    apic_6 { pt3dadd( 259.563, 413.455, 34.734, 0.5424 ) }
    apic_6 { pt3dadd( 260.461, 414.064, 34.729, 0.5238 ) }
    apic_6 { pt3dadd( 261.558, 414.357, 34.7253, 0.5658 ) }
    apic_6 { pt3dadd( 262.585, 414.686, 34.7225, 0.7282 ) }
    apic_6 { pt3dadd( 263.409, 415.322, 34.7208, 1.0766 ) }
    apic_6 { pt3dadd( 264.281, 416.036, 34.72, 1.2658 ) }
    apic_6 { pt3dadd( 265.081, 416.828, 34.72, 1.316 ) }
    apic_6 { pt3dadd( 266.014, 417.484, 34.72, 1.2652 ) }
    apic_6 { pt3dadd( 266.705, 418.328, 34.72, 1.1848 ) }
    apic_6 { pt3dadd( 267.532, 418.969, 34.72, 0.9696 ) }
    apic_6 { pt3dadd( 268.039, 419.935, 34.72, 0.8904 ) }
    apic_6 { pt3dadd( 268.433, 420.942, 34.72, 0.563 ) }
    // Section: apic_3, id: apic_3, parent: apic_2 (entry count 18/100)
    apic_3 { pt3dclear() }
    apic_3 { pt3dadd( 257.304, 413.238, 34.4786, 0.489 ) }
    apic_3 { pt3dadd( 257.97, 412.348, 34.5386, 0.598 ) }
    apic_3 { pt3dadd( 258.732, 411.526, 34.6287, 0.5464 ) }
    apic_3 { pt3dadd( 259.512, 410.695, 34.6836, 0.5404 ) }
    apic_3 { pt3dadd( 260.189, 409.776, 34.659, 0.7798 ) }
    apic_3 { pt3dadd( 260.639, 408.766, 34.4868, 0.6944 ) }
    apic_3 { pt3dadd( 261.272, 407.819, 34.2852, 0.8168 ) }
    apic_3 { pt3dadd( 261.969, 406.912, 34.1018, 0.596 ) }
    apic_3 { pt3dadd( 262.697, 406.034, 33.9016, 0.5302 ) }
    apic_3 { pt3dadd( 263.568, 405.36, 33.6328, 0.5716 ) }
    apic_3 { pt3dadd( 264.513, 404.717, 33.4306, 0.7684 ) }
    apic_3 { pt3dadd( 265.395, 403.99, 33.3063, 0.7796 ) }
    apic_3 { pt3dadd( 266.251, 403.23, 33.2388, 0.6858 ) }
    apic_3 { pt3dadd( 267.188, 402.574, 33.2231, 0.612 ) }
    apic_3 { pt3dadd( 268.007, 401.775, 33.2573, 0.6738 ) }
    // Section: apic_8, id: apic_8, parent: apic_6 (entry count 33/100)
    apic_8 { pt3dclear() }
    apic_8 { pt3dadd( 268.433, 420.942, 34.72, 0.563 ) }
    apic_8 { pt3dadd( 269.16, 420.961, 32.2955, 0.2288 ) }
    apic_8 { pt3dadd( 270.277, 420.961, 31.6134, 0.475 ) }
    apic_8 { pt3dadd( 271.285, 421.285, 31.3362, 0.713 ) }
    apic_8 { pt3dadd( 272.154, 422.03, 31.0806, 0.7636 ) }
    apic_8 { pt3dadd( 273.096, 422.3, 30.6631, 0.694 ) }
    apic_8 { pt3dadd( 273.861, 423.1, 30.2879, 0.6704 ) }
    apic_8 { pt3dadd( 274.863, 423.536, 29.969, 0.5732 ) }
    apic_8 { pt3dadd( 275.76, 423.072, 29.6909, 0.6536 ) }
    apic_8 { pt3dadd( 276.758, 422.621, 29.3818, 0.6804 ) }
    apic_8 { pt3dadd( 277.848, 422.34, 29.0226, 0.6398 ) }
    apic_8 { pt3dadd( 278.938, 422.058, 28.6308, 0.5432 ) }
    apic_8 { pt3dadd( 279.597, 422.837, 28.2425, 0.696 ) }
    apic_8 { pt3dadd( 280.589, 423.148, 27.743, 0.513 ) }
    apic_8 { pt3dadd( 281.607, 423.136, 27.1816, 0.3782 ) }
    apic_8 { pt3dadd( 282.526, 422.455, 26.6829, 0.2782 ) }
    apic_8 { pt3dadd( 283.622, 422.308, 26.2273, 0.2814 ) }
    apic_8 { pt3dadd( 284.581, 422.496, 25.5962, 0.287 ) }
    apic_8 { pt3dadd( 285.279, 422.846, 24.8735, 0.2988 ) }
    apic_8 { pt3dadd( 284.723, 423.801, 24.2553, 0.3142 ) }
    apic_8 { pt3dadd( 283.726, 424.344, 23.6631, 0.3734 ) }
    apic_8 { pt3dadd( 282.728, 424.887, 23.0832, 0.3338 ) }
    apic_8 { pt3dadd( 281.731, 425.431, 22.521, 0.2998 ) }
    // Section: apic_7, id: apic_7, parent: apic_6 (entry count 56/100)
    apic_7 { pt3dclear() }
    apic_7 { pt3dadd( 268.433, 420.942, 34.72, 0.563 ) }
    apic_7 { pt3dadd( 269.21, 421.709, 34.72, 0.3768 ) }
    apic_7 { pt3dadd( 270.093, 422.301, 34.72, 0.2758 ) }
    apic_7 { pt3dadd( 270.655, 423.272, 34.72, 0.2768 ) }
    apic_7 { pt3dadd( 271.412, 424.113, 34.72, 0.279 ) }
    apic_7 { pt3dadd( 271.922, 425.017, 34.72, 0.2826 ) }
    apic_7 { pt3dadd( 272.5, 425.991, 34.72, 0.2894 ) }
    apic_7 { pt3dadd( 272.971, 427.012, 34.72, 0.3018 ) }
    apic_7 { pt3dadd( 273.461, 428.02, 34.72, 0.327 ) }
    apic_7 { pt3dadd( 274.434, 428.425, 34.72, 0.3612 ) }
    apic_7 { pt3dadd( 274.943, 429.438, 34.72, 0.4866 ) }
    apic_7 { pt3dadd( 275.524, 430.351, 34.72, 0.4194 ) }
    apic_7 { pt3dadd( 276.124, 431.263, 34.72, 0.3762 ) }
    apic_7 { pt3dadd( 276.632, 432.116, 34.72, 0.3584 ) }
    apic_7 { pt3dadd( 277.271, 433.045, 34.72, 0.481 ) }
    apic_7 { pt3dadd( 278.078, 433.854, 34.72, 0.4088 ) }
    apic_7 { pt3dadd( 278.688, 434.815, 34.72, 0.3554 ) }
    apic_7 { pt3dadd( 279.243, 435.808, 34.72, 0.3248 ) }
    apic_7 { pt3dadd( 280.024, 436.628, 34.72, 0.3934 ) }
    apic_7 { pt3dadd( 280.561, 437.605, 34.72, 0.372 ) }
    apic_7 { pt3dadd( 281.307, 438.375, 34.72, 0.365 ) }
    apic_7 { pt3dadd( 282.165, 439.107, 34.72, 0.4228 ) }
    apic_7 { pt3dadd( 283.246, 439.304, 34.72, 0.415 ) }
    apic_7 { pt3dadd( 283.81, 440.225, 34.72, 0.5018 ) }
    apic_7 { pt3dadd( 284.035, 441.346, 34.72, 0.4006 ) }
    apic_7 { pt3dadd( 284.181, 442.481, 34.72, 0.339 ) }
    apic_7 { pt3dadd( 285.241, 442.743, 34.72, 0.2994 ) }
    apic_7 { pt3dadd( 285.771, 443.603, 34.72, 0.3228 ) }
    apic_7 { pt3dadd( 286.328, 444.556, 34.72, 0.3538 ) }
    apic_7 { pt3dadd( 286.738, 445.595, 34.72, 0.4722 ) }
    apic_7 { pt3dadd( 286.962, 446.704, 34.72, 0.3934 ) }
    apic_7 { pt3dadd( 287.462, 447.712, 34.72, 0.3254 ) }
    apic_7 { pt3dadd( 288.018, 448.709, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 288.727, 449.577, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 289.47, 450.444, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 290.412, 451.025, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 291.398, 451.586, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 292.254, 452.346, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 293.0, 453.196, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 293.886, 453.789, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 294.409, 454.784, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 294.923, 455.757, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 295.806, 456.359, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 296.718, 457.007, 34.72, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    apic_7 { pt3dadd( 297.685, 457.535, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 298.172, 458.567, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 299.048, 459.299, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 299.985, 459.899, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 300.935, 460.381, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 301.887, 460.977, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 302.841, 461.543, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 303.823, 462.072, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 304.748, 462.674, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 305.796, 462.978, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 306.931, 463.091, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 308.075, 463.106, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 309.073, 463.583, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 309.739, 464.508, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 310.813, 464.715, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 311.877, 465.051, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 313.018, 465.14, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 314.161, 465.15, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 315.299, 465.228, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 316.43, 465.383, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 317.538, 465.594, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 318.68, 465.608, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 319.823, 465.608, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 320.967, 465.608, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 322.078, 465.793, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 323.201, 465.885, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 324.15, 466.484, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 325.065, 467.082, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 325.719, 467.936, 34.72, 0.2746 ) }
    apic_7 { pt3dadd( 326.749, 468.296, 34.72, 0.2744 ) }
    apic_7 { pt3dadd( 327.773, 468.689, 34.72, 0.2744 ) }
    apic_7 { pt3dadd( 328.76, 469.162, 34.72, 0.2742 ) }
    apic_7 { pt3dadd( 329.195, 470.202, 34.72, 0.2736 ) }
    apic_7 { pt3dadd( 329.89, 470.882, 34.72, 0.2728 ) }
    apic_7 { pt3dadd( 330.987, 471.191, 34.72, 0.2712 ) }
    apic_7 { pt3dadd( 332.023, 471.561, 34.72, 0.2684 ) }
    apic_7 { pt3dadd( 332.218, 472.587, 34.72, 0.2626 ) }
    apic_7 { pt3dadd( 332.499, 473.69, 34.72, 0.2542 ) }
    apic_7 { pt3dadd( 333.228, 474.546, 34.72, 0.2288 ) }
    apic_7 { pt3dadd( 334.162, 474.989, 34.72, 0.2288 ) }
    // Section: apic_5, id: apic_5, parent: apic_3 (entry count 40/100)
    apic_5 { pt3dclear() }
    apic_5 { pt3dadd( 268.007, 401.775, 33.2573, 0.6738 ) }
    apic_5 { pt3dadd( 268.786, 401.947, 31.7682, 0.2288 ) }
    apic_5 { pt3dadd( 269.683, 402.251, 31.6593, 0.2872 ) }
    apic_5 { pt3dadd( 270.737, 401.807, 31.6159, 0.2988 ) }
    apic_5 { pt3dadd( 271.749, 402.278, 31.5535, 0.3142 ) }
    apic_5 { pt3dadd( 272.758, 402.817, 31.4728, 0.3736 ) }
    apic_5 { pt3dadd( 273.765, 402.689, 31.3275, 0.3342 ) }
    apic_5 { pt3dadd( 274.772, 402.193, 31.1077, 0.3008 ) }
    apic_5 { pt3dadd( 275.792, 402.578, 30.9075, 0.2764 ) }
    apic_5 { pt3dadd( 276.82, 402.744, 30.7345, 0.2778 ) }
    apic_5 { pt3dadd( 277.879, 402.33, 30.581, 0.2806 ) }
    apic_5 { pt3dadd( 278.967, 402.039, 30.4114, 0.2856 ) }
    apic_5 { pt3dadd( 279.89, 401.939, 30.2044, 0.295 ) }
    apic_5 { pt3dadd( 280.7, 402.529, 30.0362, 0.3132 ) }
    apic_5 { pt3dadd( 281.844, 402.526, 29.8844, 0.3406 ) }
    apic_5 { pt3dadd( 282.988, 402.496, 29.7427, 0.4248 ) }
    apic_5 { pt3dadd( 283.991, 402.955, 29.5859, 0.4188 ) }
    apic_5 { pt3dadd( 284.946, 403.583, 29.4062, 0.5084 ) }
    apic_5 { pt3dadd( 285.864, 403.25, 29.204, 0.4128 ) }
    apic_5 { pt3dadd( 286.761, 402.583, 28.9276, 0.3624 ) }
    apic_5 { pt3dadd( 287.643, 401.989, 28.495, 0.3388 ) }
    apic_5 { pt3dadd( 288.575, 401.754, 28.0045, 0.4142 ) }
    apic_5 { pt3dadd( 289.108, 401.19, 27.5568, 0.435 ) }
    apic_5 { pt3dadd( 290.18, 401.075, 27.1527, 0.3636 ) }
    apic_5 { pt3dadd( 291.197, 400.705, 26.7778, 0.3078 ) }
    apic_5 { pt3dadd( 292.082, 400.22, 26.2704, 0.2892 ) }
    apic_5 { pt3dadd( 292.819, 399.751, 25.6281, 0.3014 ) }
    apic_5 { pt3dadd( 292.655, 398.755, 25.0454, 0.3248 ) }
    apic_5 { pt3dadd( 293.685, 398.499, 24.3802, 0.365 ) }
    apic_5 { pt3dadd( 294.733, 398.216, 23.7129, 0.4572 ) }
    apic_5 { pt3dadd( 295.621, 397.628, 23.1745, 0.5404 ) }
    apic_5 { pt3dadd( 296.307, 396.82, 22.71, 0.4348 ) }
    apic_5 { pt3dadd( 297.281, 396.388, 22.1964, 0.3564 ) }
    apic_5 { pt3dadd( 298.298, 395.99, 21.688, 0.3264 ) }
    apic_5 { pt3dadd( 299.393, 395.66, 21.2934, 0.3976 ) }
    apic_5 { pt3dadd( 300.531, 395.543, 20.9625, 0.3734 ) }
    apic_5 { pt3dadd( 301.317, 394.877, 20.6699, 0.3988 ) }
    apic_5 { pt3dadd( 302.105, 394.291, 20.3146, 0.3336 ) }
    apic_5 { pt3dadd( 303.081, 394.07, 19.8313, 0.2994 ) }
    apic_5 { pt3dadd( 304.166, 394.014, 19.3785, 0.2736 ) }
    apic_5 { pt3dadd( 305.31, 394.048, 19.0252, 0.2728 ) }
    apic_5 { pt3dadd( 306.346, 393.83, 18.7695, 0.2712 ) }
    apic_5 { pt3dadd( 307.167, 393.233, 18.6088, 0.2684 ) }
    apic_5 { pt3dadd( 308.208, 393.707, 18.5259, 0.2626 ) }
    apic_5 { pt3dadd( 309.3, 393.951, 18.4946, 0.2542 ) }
    apic_5 { pt3dadd( 310.244, 394.324, 18.4727, 0.2288 ) }
    apic_5 { pt3dadd( 310.04, 395.405, 18.4999, 0.2288 ) }
    // Section: apic_4, id: apic_4, parent: apic_3 (entry count 87/100)
    apic_4 { pt3dclear() }
    apic_4 { pt3dadd( 268.007, 401.775, 33.2573, 0.6738 ) }
    apic_4 { pt3dadd( 268.448, 401.232, 33.3357, 0.5126 ) }
    apic_4 { pt3dadd( 269.111, 400.306, 33.4471, 0.4094 ) }
    apic_4 { pt3dadd( 269.653, 399.321, 33.6311, 0.4096 ) }
    apic_4 { pt3dadd( 270.22, 398.367, 33.892, 0.3958 ) }
    apic_4 { pt3dadd( 270.841, 397.407, 34.132, 0.4398 ) }
    apic_4 { pt3dadd( 271.542, 396.508, 34.3566, 0.4118 ) }
    apic_4 { pt3dadd( 272.384, 395.738, 34.575, 0.4344 ) }
    apic_4 { pt3dadd( 273.315, 395.078, 34.8009, 0.572 ) }
    apic_4 { pt3dadd( 274.287, 394.565, 35.0902, 0.5928 ) }
    apic_4 { pt3dadd( 275.237, 394.186, 35.518, 0.6238 ) }
    apic_4 { pt3dadd( 276.108, 393.614, 36.0136, 0.4908 ) }
    apic_4 { pt3dadd( 276.949, 392.858, 36.4092, 0.4796 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    apic_4 { pt3dadd( 277.699, 392.113, 36.566, 0.4622 ) }
    apic_4 { pt3dadd( 278.408, 391.4, 36.5674, 0.4134 ) }
    apic_4 { pt3dadd( 279.162, 390.615, 36.6565, 0.4016 ) }
    apic_4 { pt3dadd( 279.865, 389.77, 36.7228, 0.457 ) }
    apic_4 { pt3dadd( 280.603, 388.911, 36.7184, 0.6426 ) }
    apic_4 { pt3dadd( 281.453, 388.161, 36.7517, 0.8114 ) }
    apic_4 { pt3dadd( 282.226, 387.361, 36.769, 0.6042 ) }
    apic_4 { pt3dadd( 282.95, 386.496, 36.7063, 0.4548 ) }
    apic_4 { pt3dadd( 283.794, 385.734, 36.615, 0.412 ) }
    apic_4 { pt3dadd( 284.594, 384.927, 36.5439, 0.5702 ) }
    apic_4 { pt3dadd( 285.335, 384.057, 36.5, 0.6256 ) }
    apic_4 { pt3dadd( 286.124, 383.229, 36.4764, 0.5094 ) }
    apic_4 { pt3dadd( 286.93, 382.416, 36.4776, 0.4416 ) }
    apic_4 { pt3dadd( 287.729, 381.597, 36.4994, 0.513 ) }
    apic_4 { pt3dadd( 288.47, 380.728, 36.5369, 0.6044 ) }
    apic_4 { pt3dadd( 289.236, 379.9, 36.6234, 0.744 ) }
    apic_4 { pt3dadd( 290.015, 379.08, 36.6999, 0.6924 ) }
    apic_4 { pt3dadd( 290.82, 378.276, 36.7226, 0.5002 ) }
    apic_4 { pt3dadd( 291.727, 377.592, 36.7455, 0.3844 ) }
    apic_4 { pt3dadd( 292.684, 377.004, 36.8332, 0.373 ) }
    apic_4 { pt3dadd( 293.68, 376.467, 36.937, 0.5094 ) }
    apic_4 { pt3dadd( 294.686, 375.95, 36.9642, 0.4566 ) }
    apic_4 { pt3dadd( 295.67, 375.414, 37.0143, 0.4682 ) }
    apic_4 { pt3dadd( 296.63, 374.93, 36.997, 0.4174 ) }
    apic_4 { pt3dadd( 297.667, 374.471, 36.9384, 0.4448 ) }
    apic_4 { pt3dadd( 298.681, 373.943, 36.9018, 0.5922 ) }
    apic_4 { pt3dadd( 299.645, 373.384, 36.9583, 0.625 ) }
    apic_4 { pt3dadd( 300.555, 372.79, 37.1272, 0.709 ) }
    apic_4 { pt3dadd( 301.509, 372.158, 37.2722, 0.524 ) }
    apic_4 { pt3dadd( 302.507, 371.609, 37.3988, 0.462 ) }
    apic_4 { pt3dadd( 303.531, 371.104, 37.499, 0.3564 ) }
    apic_4 { pt3dadd( 304.535, 370.562, 37.5687, 0.3416 ) }
    apic_4 { pt3dadd( 305.513, 369.986, 37.6138, 0.354 ) }
    apic_4 { pt3dadd( 306.424, 369.293, 37.6519, 0.4102 ) }
    apic_4 { pt3dadd( 307.429, 368.784, 37.7014, 0.5816 ) }
    apic_4 { pt3dadd( 308.37, 368.224, 37.774, 0.5746 ) }
    apic_4 { pt3dadd( 309.231, 367.501, 37.8829, 0.7648 ) }
    apic_4 { pt3dadd( 310.279, 367.064, 38.0363, 0.5876 ) }
    apic_4 { pt3dadd( 311.33, 366.685, 38.2746, 0.5446 ) }
    apic_4 { pt3dadd( 312.298, 366.135, 38.5764, 0.4518 ) }
    apic_4 { pt3dadd( 313.137, 365.417, 38.9231, 0.5702 ) }
    apic_4 { pt3dadd( 313.933, 364.644, 39.2655, 0.5256 ) }
    apic_4 { pt3dadd( 314.869, 363.993, 39.5209, 0.58 ) }
    apic_4 { pt3dadd( 315.904, 363.515, 39.7032, 0.7016 ) }
    apic_4 { pt3dadd( 316.88, 362.934, 39.8278, 0.5986 ) }
    apic_4 { pt3dadd( 317.76, 362.204, 39.9176, 0.6288 ) }
    apic_4 { pt3dadd( 318.691, 361.547, 39.9949, 0.5258 ) }
    apic_4 { pt3dadd( 319.687, 360.986, 40.0817, 0.6488 ) }
    apic_4 { pt3dadd( 320.739, 360.545, 40.2069, 0.4972 ) }
    apic_4 { pt3dadd( 321.538, 359.822, 40.4239, 0.459 ) }
    apic_4 { pt3dadd( 322.234, 358.932, 40.6829, 0.3512 ) }
    apic_4 { pt3dadd( 322.788, 357.938, 40.9318, 0.3322 ) }
    apic_4 { pt3dadd( 323.419, 356.991, 41.1667, 0.3334 ) }
    apic_4 { pt3dadd( 324.205, 356.165, 41.3994, 0.3876 ) }
    apic_4 { pt3dadd( 325.064, 355.448, 41.6842, 0.4642 ) }
    apic_4 { pt3dadd( 325.9, 354.804, 42.0781, 0.723 ) }
    apic_4 { pt3dadd( 326.806, 354.181, 42.5001, 0.6368 ) }
    apic_4 { pt3dadd( 327.81, 353.649, 42.838, 0.4786 ) }
    apic_4 { pt3dadd( 328.637, 352.885, 43.0721, 0.4052 ) }
    apic_4 { pt3dadd( 329.517, 352.171, 43.2076, 0.346 ) }
    apic_4 { pt3dadd( 330.433, 351.51, 43.2552, 0.322 ) }
    apic_4 { pt3dadd( 331.246, 350.781, 43.4126, 0.3162 ) }
    apic_4 { pt3dadd( 331.879, 349.888, 43.6965, 0.3478 ) }
    apic_4 { pt3dadd( 332.541, 348.974, 44.0387, 0.4304 ) }
    apic_4 { pt3dadd( 333.402, 348.228, 44.3786, 0.466 ) }
    apic_4 { pt3dadd( 334.139, 347.375, 44.7465, 0.4158 ) }
    apic_4 { pt3dadd( 334.842, 346.5, 45.1396, 0.431 ) }
    apic_4 { pt3dadd( 335.725, 345.787, 45.4829, 0.3882 ) }
    apic_4 { pt3dadd( 336.58, 345.101, 45.8615, 0.4274 ) }
    apic_4 { pt3dadd( 337.05, 344.069, 46.1714, 0.3816 ) }
    apic_4 { pt3dadd( 337.774, 343.186, 46.4117, 0.4142 ) }
    apic_4 { pt3dadd( 338.512, 342.312, 46.5934, 0.3618 ) }
    apic_4 { pt3dadd( 339.306, 341.489, 46.737, 0.3538 ) }
    apic_4 { pt3dadd( 340.11, 340.677, 46.8745, 0.3636 ) }
    apic_4 { pt3dadd( 340.872, 339.874, 47.0921, 0.4908 ) }
    apic_4 { pt3dadd( 341.556, 338.964, 47.3127, 0.427 ) }
    apic_4 { pt3dadd( 342.21, 338.026, 47.4984, 0.3902 ) }
    apic_4 { pt3dadd( 342.825, 337.06, 47.6552, 0.3848 ) }
    apic_4 { pt3dadd( 343.471, 336.116, 47.7901, 0.525 ) }
    apic_4 { pt3dadd( 344.195, 335.231, 47.9111, 0.5166 ) }
    apic_4 { pt3dadd( 345.003, 334.421, 48.036, 0.4296 ) }
    apic_4 { pt3dadd( 345.799, 333.64, 48.2572, 0.3864 ) }
    apic_4 { pt3dadd( 346.638, 332.878, 48.5198, 0.4204 ) }
    apic_4 { pt3dadd( 347.598, 332.257, 48.7564, 0.616 ) }
    apic_4 { pt3dadd( 348.613, 331.73, 48.9751, 0.5612 ) }
    apic_4 { pt3dadd( 349.612, 331.177, 49.1963, 0.428 ) }
    apic_4 { pt3dadd( 350.474, 330.479, 49.5004, 0.3342 ) }
    apic_4 { pt3dadd( 351.343, 329.749, 49.8061, 0.3326 ) }
    apic_4 { pt3dadd( 352.351, 329.214, 50.0959, 0.409 ) }
    apic_4 { pt3dadd( 353.39, 328.79, 50.4372, 0.3946 ) }
    apic_4 { pt3dadd( 354.459, 328.456, 50.7954, 0.4392 ) }
    apic_4 { pt3dadd( 355.346, 327.735, 51.1011, 0.4046 ) }
    apic_4 { pt3dadd( 356.144, 326.929, 51.3979, 0.4512 ) }
    apic_4 { pt3dadd( 356.905, 326.121, 51.7392, 0.4576 ) }
    apic_4 { pt3dadd( 357.63, 325.237, 52.024, 0.4002 ) }
    apic_4 { pt3dadd( 358.388, 324.386, 52.257, 0.4014 ) }
    apic_4 { pt3dadd( 359.327, 323.742, 52.4801, 0.3384 ) }
    apic_4 { pt3dadd( 360.218, 323.079, 52.7719, 0.3082 ) }
    apic_4 { pt3dadd( 361.1, 322.366, 53.0474, 0.2902 ) }
    apic_4 { pt3dadd( 361.845, 321.498, 53.2776, 0.3028 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    apic_4 { pt3dadd( 362.685, 320.725, 53.4951, 0.329 ) }
    apic_4 { pt3dadd( 363.546, 319.992, 53.7438, 0.3652 ) }
    apic_4 { pt3dadd( 364.328, 319.197, 54.0355, 0.4938 ) }
    apic_4 { pt3dadd( 365.112, 318.364, 54.2786, 0.4322 ) }
    apic_4 { pt3dadd( 365.835, 317.478, 54.4922, 0.401 ) }
    apic_4 { pt3dadd( 366.523, 316.579, 54.7173, 0.399 ) }
    apic_4 { pt3dadd( 367.297, 315.789, 54.9956, 0.582 ) }
    apic_4 { pt3dadd( 368.109, 314.984, 55.223, 0.473 ) }
    apic_4 { pt3dadd( 368.941, 314.2, 55.3924, 0.3882 ) }
    apic_4 { pt3dadd( 369.797, 313.458, 55.5506, 0.347 ) }
    apic_4 { pt3dadd( 370.608, 312.706, 55.7329, 0.3934 ) }
    apic_4 { pt3dadd( 371.508, 312.004, 55.827, 0.571 ) }
    apic_4 { pt3dadd( 372.263, 311.277, 55.7578, 0.4526 ) }
    apic_4 { pt3dadd( 372.89, 310.709, 55.5106, 0.3508 ) }
    apic_4 { pt3dadd( 373.723, 309.942, 55.361, 0.2746 ) }
    apic_4 { pt3dadd( 374.548, 309.151, 55.2787, 0.2746 ) }
    apic_4 { pt3dadd( 375.373, 308.361, 55.2628, 0.2746 ) }
    apic_4 { pt3dadd( 376.198, 307.57, 55.3196, 0.2746 ) }
    apic_4 { pt3dadd( 377.022, 306.78, 55.4378, 0.2748 ) }
    apic_4 { pt3dadd( 377.847, 305.99, 55.5895, 0.2748 ) }
    apic_4 { pt3dadd( 378.672, 305.2, 55.7396, 0.2752 ) }
    apic_4 { pt3dadd( 379.498, 304.409, 55.8919, 0.2758 ) }
    apic_4 { pt3dadd( 380.323, 303.619, 56.0476, 0.2766 ) }
    apic_4 { pt3dadd( 381.148, 302.828, 56.2075, 0.2782 ) }
    apic_4 { pt3dadd( 381.972, 302.038, 56.3744, 0.2814 ) }
    apic_4 { pt3dadd( 382.797, 301.247, 56.5508, 0.2872 ) }
    apic_4 { pt3dadd( 383.622, 300.457, 56.74, 0.2988 ) }
    apic_4 { pt3dadd( 384.447, 299.666, 56.945, 0.3142 ) }
    apic_4 { pt3dadd( 385.272, 298.876, 57.1684, 0.3736 ) }
    apic_4 { pt3dadd( 386.066, 298.07, 57.449, 0.3342 ) }
    apic_4 { pt3dadd( 386.856, 297.263, 57.7797, 0.3006 ) }
    apic_4 { pt3dadd( 387.647, 296.454, 58.1473, 0.2758 ) }
    apic_4 { pt3dadd( 388.437, 295.646, 58.5399, 0.2768 ) }
    apic_4 { pt3dadd( 389.227, 294.839, 58.9453, 0.2786 ) }
    apic_4 { pt3dadd( 390.017, 294.031, 59.3522, 0.2822 ) }
    apic_4 { pt3dadd( 390.808, 293.222, 59.7481, 0.2888 ) }
    apic_4 { pt3dadd( 391.598, 292.414, 60.1289, 0.3006 ) }
    apic_4 { pt3dadd( 392.387, 291.607, 60.4918, 0.3238 ) }
    apic_4 { pt3dadd( 393.178, 290.799, 60.8356, 0.3626 ) }
    apic_4 { pt3dadd( 394.209, 290.45, 61.1086, 0.4528 ) }
    apic_4 { pt3dadd( 395.342, 290.296, 61.3068, 0.532 ) }
    apic_4 { pt3dadd( 396.239, 289.715, 61.4827, 0.4192 ) }
    apic_4 { pt3dadd( 396.982, 288.85, 61.6678, 0.3264 ) }
    apic_4 { pt3dadd( 397.724, 287.986, 61.8663, 0.2766 ) }
    apic_4 { pt3dadd( 398.468, 287.121, 62.0819, 0.2784 ) }
    apic_4 { pt3dadd( 399.21, 286.257, 62.3171, 0.2818 ) }
    apic_4 { pt3dadd( 399.953, 285.394, 62.5652, 0.2882 ) }
    apic_4 { pt3dadd( 400.695, 284.529, 62.8163, 0.2994 ) }
    apic_4 { pt3dadd( 401.438, 283.665, 63.0661, 0.3228 ) }
    apic_4 { pt3dadd( 402.18, 282.801, 63.315, 0.3538 ) }
    apic_4 { pt3dadd( 402.922, 281.936, 63.562, 0.4722 ) }
    apic_4 { pt3dadd( 403.713, 281.119, 63.8053, 0.3934 ) }
    apic_4 { pt3dadd( 404.54, 280.333, 64.0441, 0.3254 ) }
    apic_4 { pt3dadd( 405.366, 279.548, 64.279, 0.2746 ) }
    apic_4 { pt3dadd( 406.192, 278.762, 64.5103, 0.2746 ) }
    apic_4 { pt3dadd( 407.018, 277.976, 64.7382, 0.2746 ) }
    apic_4 { pt3dadd( 407.844, 277.19, 64.9628, 0.2746 ) }
    apic_4 { pt3dadd( 408.67, 276.404, 65.1837, 0.2746 ) }
    apic_4 { pt3dadd( 409.496, 275.618, 65.399, 0.2746 ) }
    apic_4 { pt3dadd( 410.322, 274.833, 65.6071, 0.2746 ) }
    apic_4 { pt3dadd( 411.148, 274.047, 65.8056, 0.2746 ) }
    apic_4 { pt3dadd( 411.974, 273.262, 65.994, 0.2746 ) }
    apic_4 { pt3dadd( 412.793, 272.466, 66.1578, 0.2746 ) }
    apic_4 { pt3dadd( 413.602, 271.658, 66.2824, 0.2748 ) }
    apic_4 { pt3dadd( 414.411, 270.849, 66.3807, 0.2748 ) }
    apic_4 { pt3dadd( 415.219, 270.04, 66.467, 0.2752 ) }
    apic_4 { pt3dadd( 416.028, 269.231, 66.5563, 0.2758 ) }
    apic_4 { pt3dadd( 416.837, 268.422, 66.663, 0.2766 ) }
    apic_4 { pt3dadd( 417.647, 267.612, 66.7996, 0.2784 ) }
    apic_4 { pt3dadd( 418.437, 266.793, 66.9872, 0.2818 ) }
    apic_4 { pt3dadd( 419.115, 265.91, 67.3025, 0.2882 ) }
    apic_4 { pt3dadd( 419.793, 265.027, 67.7141, 0.2994 ) }
    apic_4 { pt3dadd( 420.47, 264.144, 68.1901, 0.3228 ) }
    apic_4 { pt3dadd( 421.149, 263.261, 68.7016, 0.3538 ) }
    apic_4 { pt3dadd( 421.826, 262.378, 69.2213, 0.4722 ) }
    apic_4 { pt3dadd( 422.59, 261.574, 69.7052, 0.3934 ) }
    apic_4 { pt3dadd( 423.541, 260.943, 70.0983, 0.3254 ) }
    apic_4 { pt3dadd( 424.491, 260.311, 70.42, 0.2746 ) }
    apic_4 { pt3dadd( 425.442, 259.68, 70.6891, 0.2746 ) }
    apic_4 { pt3dadd( 426.393, 259.048, 70.9232, 0.2746 ) }
    apic_4 { pt3dadd( 427.344, 258.417, 71.1385, 0.2746 ) }
    apic_4 { pt3dadd( 428.294, 257.785, 71.3499, 0.2746 ) }
    apic_4 { pt3dadd( 429.245, 257.154, 71.5688, 0.2744 ) }
    apic_4 { pt3dadd( 430.195, 256.523, 71.7973, 0.2744 ) }
    apic_4 { pt3dadd( 431.146, 255.891, 72.0384, 0.2742 ) }
    apic_4 { pt3dadd( 432.097, 255.26, 72.2974, 0.2736 ) }
    apic_4 { pt3dadd( 433.047, 254.628, 72.5813, 0.2728 ) }
    apic_4 { pt3dadd( 433.998, 253.997, 72.9193, 0.2712 ) }
    apic_4 { pt3dadd( 434.949, 253.365, 73.295, 0.2684 ) }
    apic_4 { pt3dadd( 435.9, 252.735, 73.6949, 0.2626 ) }
    apic_4 { pt3dadd( 436.671, 252.048, 74.2384, 0.2542 ) }
    apic_4 { pt3dadd( 437.409, 251.352, 74.8936, 0.2288 ) }
    apic_4 { pt3dadd( 438.15, 250.656, 76.5492, 0.2288 ) }
    // Section: apic_10, id: apic_10, parent: apic_8 (entry count 93/100)
    apic_10 { pt3dclear() }
    apic_10 { pt3dadd( 281.731, 425.431, 22.521, 0.2998 ) }
    apic_10 { pt3dadd( 281.884, 425.87, 21.7605, 0.2744 ) }
    apic_10 { pt3dadd( 282.291, 426.199, 20.8606, 0.2742 ) }
    apic_10 { pt3dadd( 283.341, 426.038, 20.1272, 0.2736 ) }
    apic_10 { pt3dadd( 283.868, 426.702, 19.5185, 0.2728 ) }
    apic_10 { pt3dadd( 283.13, 427.515, 18.9465, 0.2712 ) }
    apic_10 { pt3dadd( 283.308, 428.158, 18.4898, 0.2684 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    apic_10 { pt3dadd( 284.163, 428.76, 18.1902, 0.2626 ) }
    apic_10 { pt3dadd( 284.208, 429.896, 17.9469, 0.2542 ) }
    apic_10 { pt3dadd( 284.226, 431.026, 17.7243, 0.2288 ) }
    apic_10 { pt3dadd( 283.808, 432.091, 17.4303, 0.2288 ) }
    // Section: apic_9, id: apic_9, parent: apic_8 (entry count 4/100)
    apic_9 { pt3dclear() }
    apic_9 { pt3dadd( 281.731, 425.431, 22.521, 0.2998 ) }
    apic_9 { pt3dadd( 281.782, 426.561, 22.1752, 0.4576 ) }
    apic_9 { pt3dadd( 280.67, 426.349, 21.5163, 0.3644 ) }
    apic_9 { pt3dadd( 280.011, 425.638, 21.2825, 0.305 ) }
    apic_9 { pt3dadd( 280.001, 424.6, 20.8939, 0.305 ) }
    apic_9 { pt3dadd( 279.806, 423.527, 19.8254, 0.2288 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=ModelViewParmSubset_76, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_76 = new SectionList()
    soma_0 ModelViewParmSubset_76.append()
    axon_0 ModelViewParmSubset_76.append()
    axon_1 ModelViewParmSubset_76.append()

    // Group: {name=ModelViewParmSubset_77, groups=[], sections=[dend_17, dend_16, dend_11, dend_6, dend_3, dend_0, apic_0, dend_13, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, apic_14, apic_1, dend_15, dend_14, dend_9, dend_8, apic_16, apic_15, apic_11, apic_2, apic_13, apic_12, apic_6, apic_3, apic_8, apic_7, apic_5, apic_4, apic_10, apic_9]}
    ModelViewParmSubset_77 = new SectionList()
    dend_17 ModelViewParmSubset_77.append()
    dend_16 ModelViewParmSubset_77.append()
    dend_11 ModelViewParmSubset_77.append()
    dend_6 ModelViewParmSubset_77.append()
    dend_3 ModelViewParmSubset_77.append()
    dend_0 ModelViewParmSubset_77.append()
    apic_0 ModelViewParmSubset_77.append()
    dend_13 ModelViewParmSubset_77.append()
    dend_12 ModelViewParmSubset_77.append()
    dend_10 ModelViewParmSubset_77.append()
    dend_7 ModelViewParmSubset_77.append()
    dend_5 ModelViewParmSubset_77.append()
    dend_4 ModelViewParmSubset_77.append()
    dend_2 ModelViewParmSubset_77.append()
    dend_1 ModelViewParmSubset_77.append()
    apic_14 ModelViewParmSubset_77.append()
    apic_1 ModelViewParmSubset_77.append()
    dend_15 ModelViewParmSubset_77.append()
    dend_14 ModelViewParmSubset_77.append()
    dend_9 ModelViewParmSubset_77.append()
    dend_8 ModelViewParmSubset_77.append()
    apic_16 ModelViewParmSubset_77.append()
    apic_15 ModelViewParmSubset_77.append()
    apic_11 ModelViewParmSubset_77.append()
    apic_2 ModelViewParmSubset_77.append()
    apic_13 ModelViewParmSubset_77.append()
    apic_12 ModelViewParmSubset_77.append()
    apic_6 ModelViewParmSubset_77.append()
    apic_3 ModelViewParmSubset_77.append()
    apic_8 ModelViewParmSubset_77.append()
    apic_7 ModelViewParmSubset_77.append()
    apic_5 ModelViewParmSubset_77.append()
    apic_4 ModelViewParmSubset_77.append()
    apic_10 ModelViewParmSubset_77.append()
    apic_9 ModelViewParmSubset_77.append()

    // Group: {name=apic, groups=[], sections=[apic_0, apic_14, apic_1, apic_16, apic_15, apic_11, apic_2, apic_13, apic_12, apic_6, apic_3, apic_8, apic_7, apic_5, apic_4, apic_10, apic_9]}
    apic = new SectionList()
    apic_0 apic.append()
    apic_14 apic.append()
    apic_1 apic.append()
    apic_16 apic.append()
    apic_15 apic.append()
    apic_11 apic.append()
    apic_2 apic.append()
    apic_13 apic.append()
    apic_12 apic.append()
    apic_6 apic.append()
    apic_3 apic.append()
    apic_8 apic.append()
    apic_7 apic.append()
    apic_5 apic.append()
    apic_4 apic.append()
    apic_10 apic.append()
    apic_9 apic.append()

    // Group: {name=dend, groups=[], sections=[dend_17, dend_16, dend_11, dend_6, dend_3, dend_0, dend_13, dend_12, dend_10, dend_7, dend_5, dend_4, dend_2, dend_1, dend_15, dend_14, dend_9, dend_8]}
    dend = new SectionList()
    dend_17 dend.append()
    dend_16 dend.append()
    dend_11 dend.append()
    dend_6 dend.append()
    dend_3 dend.append()
    dend_0 dend.append()
    dend_13 dend.append()
    dend_12 dend.append()
    dend_10 dend.append()
    dend_7 dend.append()
    dend_5 dend.append()
    dend_4 dend.append()
    dend_2 dend.append()
    dend_1 dend.append()
    dend_15 dend.append()
    dend_14 dend.append()
    dend_9 dend.append()
    dend_8 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_2897, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_2897 = new SectionList()
    soma_0 OneSecGrp_SectionRef_2897.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, apic_0, apic_0, apic_0, apic_0, apic_0, axon_1, axon_1, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_14, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, apic_1, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_16, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_15, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_11, apic_2, apic_2, apic_2, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_13, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_12, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_6, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_3, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_8, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_7, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_5, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_4, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_10, apic_9, apic_9, apic_9, apic_9, apic_9]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_0 all.append()
    dend_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    apic_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_14 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    apic_1 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_16 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_15 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_11 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_2 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_13 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_12 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_6 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_3 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()
    apic_8 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_7 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_5 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_4 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_10 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()
    apic_9 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 1.0  // units: uF/cm2
    forsec axon cm = 1.0  // units: uF/cm2
    forsec dend cm = 3.6151998  // units: uF/cm2
    forsec apic cm = 3.6151998  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 79.82441  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Im
        gmax_Im = 5.251794E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Ih
        gmax_Ih = 0.0011383661  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaTs
        gmax_NaTs = 0.72174793  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Nap
        gmax_Nap = 9.50942E-4  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert K_P
        gmax_K_P = 0.01464112  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.005187226  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 0.001480883  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.26151165  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 6.200297E-4  // units: S cm-2
        e_pas_nml2 = -86.60005  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 6.8067876E-4  // units: S cm-2
        e_pas_nml2 = -86.60005  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 2.0434202E-4  // units: S cm-2
        e_pas_nml2 = -86.60005  // units: mV
    }
    forsec apic {
        insert pas_nml2
        gmax_pas_nml2 = 2.5136883E-6  // units: S cm-2
        e_pas_nml2 = -86.60005  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 4.694727E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0045518596  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_329322394
    forsec soma {
        insert CaDynamics_329322394
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_17 nseg = 3
    dend_16 nseg = 5
    dend_12 nseg = 5
    dend_10 nseg = 5
    dend_2 nseg = 5
    dend_1 nseg = 5
    dend_15 nseg = 3
    dend_9 nseg = 3
    dend_8 nseg = 5
    apic_16 nseg = 7
    apic_15 nseg = 7
    apic_13 nseg = 5
    apic_7 nseg = 5
    apic_5 nseg = 3
    apic_4 nseg = 11
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_329322394


