// Cell: Cell_487245869
/*
{
  "id" : "Cell_487245869",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "352.52, 601.09, 25.2294, 14.526", "359.783, 601.09, 25.2294, 14.526", "367.046, 601.09, 25.2294, 14.526" ]
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "359.783, 601.09, 25.2294, 1.0", "365.624, 614.906, 25.2294, 1.0", "371.466, 628.722, 25.2294, 1.0" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "355.552, 605.654, 29.3292, 0.4592", "354.442, 605.411, 29.6198, 0.6606", "353.378, 605.504, 29.7629, 0.7784", "352.645, 606.289, 29.8071, 0.8636", "352.476, 607.392, 29.7993, 0.7548", "352.002, 608.367, 29.7511, 0.7022", "351.662, 609.447, 29.7371, 0.7972", "352.057, 610.518, 29.8152, 0.7258", "351.988, 611.219, 30.035, 0.879", "350.916, 611.487, 30.3839, 0.9208", "350.255, 612.305, 30.8151, 1.0298", "349.763, 613.319, 31.2766, 1.08", "349.397, 614.389, 31.7274, 0.9946", "349.115, 615.478, 32.1658, 0.7866", "348.648, 616.471, 32.5825, 0.6432", "347.53, 616.642, 32.9546, 0.8024", "346.425, 616.832, 33.2629, 0.8654", "345.432, 617.398, 33.5073, 0.9648", "344.449, 617.976, 33.7008, 0.776", "343.48, 618.383, 33.8545, 0.6352", "342.453, 617.96, 34.0119, 0.731", "341.534, 617.289, 34.2264, 0.7782", "340.502, 616.939, 34.5416, 0.5826", "339.416, 617.098, 34.956, 0.451", "338.828, 617.999, 35.4337, 0.459", "337.972, 618.723, 35.9257, 0.6228", "337.403, 619.705, 36.3821, 0.8902", "336.985, 620.718, 36.794, 0.876", "337.52, 621.703, 37.2064, 0.8088", "337.577, 622.758, 37.6474, 0.6518", "336.551, 623.16, 38.1214, 0.7486", "335.766, 623.881, 38.5731, 0.8744", "335.357, 624.942, 38.992, 0.9114", "335.224, 625.999, 39.3915, 0.7886", "335.827, 626.902, 39.7986, 0.574", "335.87, 627.999, 40.1554, 0.5714", "335.246, 628.927, 40.4849, 0.4774", "334.331, 629.605, 40.822, 0.5066", "333.335, 630.154, 41.1827, 0.4892", "332.563, 630.876, 41.5803, 0.5758", "332.1, 631.761, 42.1179, 0.8448", "331.055, 631.975, 42.7451, 1.0456", "330.003, 631.788, 43.4344, 1.0348", "328.964, 631.992, 44.1207, 0.8144", "328.036, 632.611, 44.7577, 0.9204", "327.013, 633.048, 45.33, 0.9082", "326.108, 633.65, 45.792, 0.7544", "325.403, 634.548, 46.1678, 0.649", "324.604, 635.364, 46.4758, 0.4952", "323.527, 635.7, 46.7482, 0.4654", "322.847, 636.598, 47.0635, 0.5436", "321.995, 637.301, 47.4631, 0.7276", "321.109, 637.864, 47.9833, 0.6508", "320.098, 638.272, 48.5338, 0.7068", "319.086, 638.752, 49.0249, 0.7628", "317.975, 638.953, 49.4522, 0.6412", "317.074, 639.618, 49.7711, 0.594", "316.418, 640.543, 49.94, 0.7864", "315.577, 641.312, 50.001, 0.927", "314.685, 642.025, 50.0139, 0.865", "313.773, 642.712, 50.0279, 0.944", "312.885, 643.419, 50.0794, 0.8344", "311.993, 644.106, 50.195, 0.7298", "310.977, 644.63, 50.3776, 0.5152", "310.042, 645.257, 50.6556, 0.4476", "308.927, 645.304, 51.0272, 0.548", "307.913, 645.788, 51.4567, 0.5536", "307.076, 645.152, 52.0117, 0.5254", "306.173, 644.562, 52.6148, 0.431", "305.081, 644.365, 53.1686, 0.4606", "303.953, 644.319, 53.6393, 0.4388", "302.896, 643.897, 54.0117, 0.5404", "301.791, 643.61, 54.278, 0.498", "300.667, 643.391, 54.441, 0.3956", "299.53, 643.269, 54.5336, 0.32", "298.386, 643.269, 54.5902, 0.3128", "297.247, 643.256, 54.6216, 0.3398", "296.146, 642.964, 54.6585, 0.4232", "295.046, 642.659, 54.7378, 0.4156", "293.969, 642.289, 54.8652, 0.5024", "292.957, 641.77, 55.0312, 0.402", "291.823, 641.651, 55.2101, 0.3418", "290.686, 641.559, 55.3804, 0.305", "289.546, 641.465, 55.5209, 0.3304", "288.402, 641.493, 55.6228, 0.3814", "287.261, 641.563, 55.7365, 0.4576" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "361.111, 606.843, 22.8477, 0.3604", "361.212, 607.975, 22.5821, 0.4238", "361.696, 608.92, 22.2758, 0.6002", "362.585, 609.598, 21.9294, 0.6402", "363.412, 610.353, 21.5687, 0.7358", "363.825, 611.367, 21.221, 0.5806", "363.551, 612.405, 20.9003, 0.5326", "362.807, 613.249, 20.6287, 0.6528", "361.919, 613.968, 20.428, 0.7756", "361.17, 614.821, 20.2949, 0.8036", "360.851, 615.891, 20.207, 0.9082", "360.737, 617.028, 20.1364, 1.0764", "360.438, 618.124, 20.074, 1.284", "360.008, 619.183, 20.019, 1.2596", "359.616, 620.257, 19.9739, 1.1422", "359.217, 621.328, 19.9456, 0.8172", "358.616, 622.295, 19.9408, 0.7362", "357.715, 622.972, 19.9639, 1.0276", "356.712, 623.514, 20.0162, 1.255", "355.722, 624.085, 20.0805, 1.3656", "354.73, 624.654, 20.1361, 1.2488", "353.7, 625.148, 20.1657, 0.9926", "352.818, 625.863, 20.1557, 0.9404", "352.237, 626.835, 20.0988, 1.0788", "351.813, 627.895, 19.9954, 1.1086", "351.606, 629.012, 19.8493, 1.1212", "351.208, 630.065, 19.6476, 0.8938", "350.63, 631.028, 19.4074, 1.0028", "349.943, 631.933, 19.1833, 1.146", "349.407, 632.943, 19.0207, 1.2408", "348.959, 633.995, 18.9419, 1.1004", "348.584, 635.069, 18.9498, 1.2308", "347.945, 636.009, 19.0068, 1.406", "347.137, 636.818, 19.1019, 1.3676", "346.33, 637.627, 19.2254, 1.001", "345.527, 638.44, 19.3678, 0.8394", "344.747, 639.275, 19.5168, 0.771", "344.049, 640.174, 19.6826, 0.8936", "343.48, 641.157, 19.8861, 1.0548", "342.991, 642.18, 20.1222, 1.2178", "342.554, 643.228, 20.369, 1.2646", "342.168, 644.299, 20.6072, 1.2166", "341.788, 645.372, 20.828, 1.0966", "341.415, 646.442, 21.03, 0.796", "341.061, 647.525, 21.1819, 0.6178", "340.514, 648.514, 21.2459, 0.5056", "339.632, 649.211, 21.2113, 0.6118", "338.674, 649.824, 21.0875, 0.6556", "337.798, 650.542, 20.8986, 0.5652", "337.233, 651.506, 20.6652, 0.5436", "336.991, 652.61, 20.4231, 0.7114", "336.684, 653.708, 20.2138, 0.9274", "336.47, 654.829, 20.0531, 0.8742", "336.014, 655.875, 19.9516, 0.6908", "335.397, 656.837, 19.9203, 0.7608", "334.835, 657.833, 19.9474, 0.7326", "334.294, 658.84, 20.0211, 0.759", "333.795, 659.867, 20.1315, 0.8854", "333.342, 660.914, 20.2779, 0.9712", "332.868, 661.948, 20.4482, 0.9364", "332.213, 662.879, 20.6251, 0.897", "331.397, 663.67, 20.803, 0.932", "330.454, 664.309, 20.9676, 0.9304", "329.516, 664.952, 21.0976, 0.7912", "328.77, 665.816, 21.1771, 0.7374", "328.17, 666.788, 21.1989, 0.7908", "327.475, 667.696, 21.1616, 1.0612", "326.732, 668.562, 21.0652, 1.187", "326.062, 669.482, 20.9103, 1.1848", "325.348, 670.367, 20.7129, 0.9518", "324.617, 671.231, 20.4876, 0.9436", "323.753, 671.971, 20.2595, 0.931", "322.973, 672.797, 20.0516, 0.895", "322.379, 673.768, 19.8792, 0.6594", "321.836, 674.729, 19.7485, 0.5862", "320.837, 675.283, 19.657, 0.7438", "319.782, 675.724, 19.5971, 0.9852", "318.7, 676.096, 19.5576, 0.9926", "317.651, 676.53, 19.5283, 0.8546", "316.799, 677.263, 19.5017, 0.65", "316.251, 678.265, 19.4729, 0.7076", "315.742, 679.286, 19.4396, 0.7536", "315.107, 680.237, 19.4022, 0.9036", "314.481, 681.194, 19.3588, 1.098", "313.798, 682.108, 19.3056, 1.177", "312.985, 682.902, 19.2518, 1.0876", "312.1, 683.618, 19.2184, 0.9242", "311.441, 684.535, 19.2211, 0.8384", "310.945, 685.56, 19.253, 0.768", "310.323, 686.52, 19.317, 0.895", "309.724, 687.492, 19.4229, 0.7958", "309.212, 688.507, 19.5735, 0.633", "308.94, 689.596, 19.7592, 0.4596", "308.685, 690.665, 19.9712, 0.4278", "307.932, 691.472, 20.1943, 0.5642", "307.13, 692.231, 20.4027, 0.5564", "306.726, 693.282, 20.5708, 0.6636", "306.387, 694.366, 20.6933, 0.7298", "305.927, 695.412, 20.7754, 0.5792", "305.576, 696.498, 20.8274, 0.483", "305.375, 697.623, 20.8636, 0.5604", "305.104, 698.724, 20.8982, 0.6074", "304.483, 699.65, 20.9409, 0.4758", "303.508, 699.705, 20.9964, 0.3788", "302.548, 699.103, 21.0727, 0.4002", "301.603, 699.378, 21.1784, 0.3782", "301.188, 700.44, 21.2893, 0.4076", "300.665, 701.458, 21.4035, 0.35", "299.998, 702.387, 21.5334, 0.33", "299.445, 703.386, 21.6948, 0.33", "299.042, 704.451, 21.9037, 0.379", "298.578, 705.49, 22.1651, 0.4604", "298.064, 706.502, 22.4764, 0.6562", "297.599, 707.533, 22.8395, 0.8016", "297.19, 708.576, 23.2571, 0.7562", "296.732, 709.598, 23.7106, 0.5984", "296.249, 710.613, 24.1777, 0.435", "295.746, 711.629, 24.626, 0.419", "295.019, 712.298, 25.0351, 0.3706", "293.961, 712.042, 25.4171, 0.3702", "293.066, 711.898, 25.854, 0.395", "293.423, 712.963, 26.2912, 0.5448", "294.142, 713.841, 26.7019, 0.548", "294.783, 714.773, 27.0797, 0.5134", "295.709, 715.423, 27.4461, 0.417", "296.13, 716.319, 27.7854, 0.3962", "295.914, 717.412, 28.1232, 0.5042", "296.048, 718.53, 28.4858, 0.4518", "296.179, 719.641, 28.8868, 0.4374", "296.104, 720.754, 29.3227, 0.4658", "295.927, 721.861, 29.773, 0.7096", "295.69, 722.964, 30.2086, 0.6906", "295.955, 723.945, 30.6074, 0.8832", "296.883, 724.556, 30.9588, 0.82", "297.91, 725.054, 31.2673, 0.6834", "298.597, 725.901, 31.549, 0.7544", "299.06, 726.943, 31.829, 0.6838", "299.583, 727.953, 32.1387, 0.8488", "300.258, 728.858, 32.5004, 0.863", "301.017, 729.696, 32.9221, 0.9316", "301.897, 730.371, 33.4214, 0.854", "302.351, 731.33, 33.9945, 0.7882", "302.621, 732.404, 34.6125, 0.7452", "302.34, 733.366, 35.2932, 0.5118", "302.105, 733.979, 35.996, 0.3666", "302.546, 735.007, 36.6271, 0.3034", "302.132, 736.006, 37.1854, 0.3292", "301.392, 736.877, 37.6827, 0.37", "300.354, 736.868, 38.1772, 0.4802", "299.57, 736.104, 38.703, 0.517", "298.819, 736.066, 39.3296, 0.7118", "298.635, 736.893, 41.172, 0.6864" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "355.334, 605.945, 21.3119, 0.4774", "354.563, 606.739, 21.0057, 0.518", "353.494, 606.867, 20.7379, 0.6834", "352.391, 606.582, 20.4917, 0.781", "351.311, 606.224, 20.2402, 0.8322", "350.283, 605.75, 19.9698, 0.872", "349.217, 605.37, 19.679, 0.7564", "348.11, 605.131, 19.3757, 0.7736", "347.013, 605.319, 19.0691, 0.597", "346.042, 605.891, 18.7745, 0.5952", "345.009, 606.367, 18.5087, 0.614", "343.882, 606.463, 18.2813, 0.7688", "342.75, 606.615, 18.0855, 0.702", "341.61, 606.683, 17.9078, 0.6952", "340.477, 606.829, 17.7332, 0.572", "339.505, 607.392, 17.5365, 0.6514", "338.594, 608.073, 17.3083, 0.6764", "337.647, 608.698, 17.0327, 0.63", "336.562, 609.032, 16.7464, 0.5366", "335.524, 609.503, 16.4685, 0.627", "334.527, 610.06, 16.2054, 0.661", "333.462, 610.457, 15.9462, 0.6864", "332.446, 610.782, 15.12, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "360.271, 595.157, 22.4434, 0.3628", "360.25, 594.021, 22.1422, 0.435", "360.132, 592.9, 21.8431, 0.5884", "359.69, 591.872, 21.5554, 0.7768", "359.192, 590.861, 21.2922, 0.9058", "358.995, 589.743, 21.0777, 1.0702", "358.891, 588.605, 20.9031, 1.0522", "358.643, 587.492, 20.746, 0.985", "358.151, 586.469, 20.5889, 0.7946", "357.398, 585.624, 20.4045, 0.7606", "356.591, 584.824, 20.1647, 0.751", "356.471, 583.797, 19.8458, 0.703", "357.402, 583.211, 19.4712, 0.7614", "358.373, 582.643, 19.0579, 0.6104", "358.543, 581.551, 18.6136, 0.674", "358.342, 580.474, 18.1684, 0.4966", "358.846, 579.459, 17.7438, 0.458", "359.184, 578.429, 17.3649, 0.3502", "358.689, 577.404, 17.0306, 0.3248", "358.21, 576.609, 16.7199, 0.3474", "357.97, 575.729, 16.3534, 0.2796", "358.97, 575.185, 15.792, 0.2288" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "362.323, 595.422, 24.197, 0.288", "362.753, 594.362, 24.2295, 0.2994", "363.183, 593.302, 24.2661, 0.3216", "363.476, 592.198, 24.304, 0.3568", "363.624, 591.066, 24.3442, 0.4516", "364.398, 590.305, 24.4043, 0.483", "365.077, 589.388, 24.4433, 0.557", "365.608, 588.374, 24.4427, 0.8448" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "363.677, 606.043, 24.2696, 0.397", "364.245, 607.036, 24.3183, 0.4874", "365.26, 607.546, 24.3743, 0.7374", "366.398, 607.6, 24.4459, 0.8018", "367.535, 607.711, 24.5223, 0.7986", "368.568, 608.2, 24.5974, 0.702" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "355.886, 596.362, 25.4108, 0.445", "355.027, 595.612, 25.5916, 0.607" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.500000000000002
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "371.466, 628.722, 25.2294, 1.0", "377.307, 642.538, 25.2294, 1.0", "383.148, 656.354, 25.2294, 1.0" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "365.608, 588.374, 24.4427, 0.8448", "366.29, 587.562, 24.3777, 0.877", "367.2, 586.881, 24.2467, 0.8532", "368.125, 586.231, 24.0453, 0.7582", "368.887, 585.391, 23.8093, 0.8282", "369.766, 584.666, 23.5762, 0.9068", "370.677, 583.978, 23.3713, 1.0722", "371.516, 583.203, 23.2107, 1.0558", "372.417, 582.496, 23.0995, 0.9916", "373.46, 582.027, 23.0334, 0.8068", "374.582, 581.806, 22.9988, 0.7848", "375.662, 581.428, 22.9841, 0.7886", "376.729, 581.018, 22.9804, 0.8074", "377.809, 580.641, 22.981, 0.786", "378.953, 580.682, 22.9812, 0.7892", "380.037, 581.048, 22.978, 0.5888" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "365.608, 588.374, 24.4427, 0.8448", "365.773, 586.793, 24.0113, 1.1858", "366.128, 585.706, 23.9054, 1.1738", "366.376, 584.591, 23.7851, 0.973", "366.722, 583.502, 23.6705, 1.0108", "366.699, 582.361, 23.5588, 0.919", "366.411, 581.257, 23.44, 0.85", "366.283, 580.122, 23.3271, 0.916" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "368.568, 608.2, 24.5974, 0.702", "369.824, 607.983, 24.1844, 0.8394", "370.928, 608.019, 23.917, 0.8582", "372.028, 608.307, 23.6255, 0.862", "373.147, 608.438, 23.3127, 0.7902", "374.247, 608.227, 22.9922, 0.5832", "375.16, 607.604, 22.6809, 0.5582", "375.758, 606.643, 22.4004, 0.5992", "376.162, 605.576, 22.1527, 0.709", "376.505, 604.489, 21.9314, 0.7492", "376.9, 603.417, 21.7361, 0.7012", "377.402, 602.393, 21.5596, 0.7494", "377.973, 601.403, 21.3916, 0.6304", "378.504, 600.393, 21.2191, 0.505", "379.064, 599.402, 21.0314, 0.4984", "379.797, 598.551, 20.8263, 0.5336", "380.794, 598.063, 20.6114, 0.597", "381.919, 597.875, 20.3986, 0.4948", "383.04, 597.67, 20.1939, 0.457", "384.162, 597.464, 20.0049, 0.5654", "385.285, 597.256, 19.8423, 0.5866", "386.367, 596.898, 19.6976, 0.5824", "387.305, 596.277, 19.5513, 0.5576", "388.065, 595.431, 19.3919, 0.5944", "388.965, 594.785, 19.2158, 0.49", "390.071, 594.697, 19.034, 0.4468", "391.2, 594.849, 18.8614, 0.5528", "392.33, 595.017, 18.7105, 0.5328", "393.457, 594.914, 18.5906, 0.6308", "394.521, 594.512, 18.5035, 0.6148", "395.553, 594.02, 18.4463, 0.6284", "396.61, 593.584, 18.4044, 0.6742", "397.697, 593.23, 18.3519, 0.6592", "398.761, 592.815, 18.273, 0.658", "399.813, 592.37, 18.1631, 0.756", "400.923, 592.126, 18.0206, 0.6798", "402.053, 592.194, 17.8407, 0.6468", "403.19, 592.206, 17.6338, 0.5164", "404.315, 592.372, 17.4197, 0.383", "405.394, 592.73, 17.1998, 0.2966", "406.435, 593.188, 16.985, 0.2684", "407.488, 593.627, 16.7938, 0.2626", "408.574, 593.983, 16.6374, 0.2542", "409.68, 594.27, 16.5184, 0.2288", "410.538, 595.006, 16.3559, 0.2288" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "368.568, 608.2, 24.5974, 0.702", "369.285, 608.884, 24.6612, 0.7334", "369.922, 609.829, 24.6916, 0.6854", "370.482, 610.824, 24.6786, 0.8836", "370.813, 611.913, 24.629, 1.0014", "370.809, 613.049, 24.5628, 1.0592", "370.593, 614.17, 24.498, 1.03", "370.622, 615.308, 24.4481, 0.9504", "371.115, 616.328, 24.4241, 0.928", "371.663, 617.33, 24.4344, 0.9654", "372.353, 618.24, 24.4592, 1.1092", "373.068, 619.133, 24.4754, 1.2428", "373.599, 620.143, 24.4644, 1.4496", "374.151, 621.145, 24.4105, 1.574", "374.993, 621.909, 24.3001, 1.4606", "375.693, 622.807, 24.1455, 1.318", "376.358, 623.732, 23.9645, 1.1834", "377.006, 624.666, 23.7676, 0.9904", "377.767, 625.515, 23.5822, 0.8148" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "355.027, 595.612, 25.5916, 0.607", "354.547, 595.728, 23.3878, 0.2288", "353.585, 595.346, 22.8999, 0.2856", "352.501, 595.049, 22.7081, 0.2948", "351.362, 594.974, 22.5383, 0.3128", "350.259, 594.716, 22.4073, 0.3412", "349.281, 594.143, 22.3279, 0.4186", "348.362, 593.464, 22.308, 0.443", "347.393, 592.859, 22.3445, 0.3782", "346.337, 592.431, 22.4117, 0.3362", "345.256, 592.057, 22.5012, 0.3362", "344.173, 591.687, 22.6088, 0.4154", "343.089, 591.326, 22.7333, 0.4066", "342.01, 590.949, 22.8785, 0.46", "340.945, 590.54, 23.0525, 0.449", "339.885, 590.119, 23.2616, 0.5056", "338.827, 589.7, 23.5072, 0.693", "337.769, 589.281, 23.7857, 0.8704", "336.717, 588.858, 24.091, 0.8794", "336.185, 587.954, 24.4315, 0.849", "336.106, 586.835, 24.7875, 0.792", "336.068, 585.706, 25.1353, 0.9168", "335.834, 584.595, 25.4467, 0.9466", "335.298, 583.591, 25.696, 1.0636", "334.482, 582.797, 25.8897, 0.9804", "333.69, 581.973, 26.0382, 0.9112", "332.959, 581.094, 26.1503, 1.0572", "332.305, 580.156, 26.2372, 1.1394", "331.588, 579.264, 26.3091, 1.0628", "330.81, 578.426, 26.3712, 0.8896", "330.139, 577.502, 26.4235, 0.7182", "329.587, 576.5, 26.4756, 0.818", "328.942, 575.557, 26.5254, 1.0354", "328.392, 574.553, 26.5529, 1.053", "327.893, 573.525, 26.5619, 1.1252", "327.416, 572.485, 26.5621, 1.0686", "326.93, 571.45, 26.5639, 0.9718" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "355.027, 595.612, 25.5916, 0.607", "353.724, 595.164, 25.8465, 0.9696", "352.631, 594.826, 25.9172, 1.19", "351.644, 594.256, 25.9466, 1.2674", "350.675, 593.649, 25.9373, 1.4162", "348.615, 592.67, 25.828, 1.337", "347.622, 592.105, 25.7628, 1.1586", "346.568, 591.659, 25.714, 1.0066", "345.491, 591.273, 25.6943, 1.0014", "344.354, 591.19, 25.7163, 1.0208", "343.242, 591.447, 25.7716, 0.9168", "342.113, 591.628, 25.8418, 1.1742" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "380.037, 581.048, 22.978, 0.5888", "380.57, 580.556, 22.9827, 0.5308", "381.643, 580.204, 22.9723, 0.5042", "382.781, 580.088, 22.9407, 0.5196", "383.885, 579.856, 22.8891, 0.4626", "384.798, 579.222, 22.8186, 0.5434", "385.484, 578.308, 22.7306, 0.4734", "386.258, 577.495, 22.6276, 0.4954", "387.28, 577.021, 22.5124, 0.4862", "388.378, 576.712, 22.3792, 0.4836", "389.351, 576.165, 22.2293, 0.4074", "390.118, 575.328, 22.0743, 0.3848", "390.852, 574.456, 21.9236, 0.4532", "391.724, 573.726, 21.7831, 0.5022", "392.686, 573.109, 21.6541, 0.5134", "393.639, 572.479, 21.532, 0.4632", "394.363, 571.641, 21.4175, 0.4848", "394.971, 570.68, 21.3109, 0.6546", "395.655, 569.767, 21.1994, 0.7984", "396.364, 568.875, 21.0777, 0.7504", "397.148, 568.045, 20.9558, 0.5864", "398.008, 567.298, 20.8377, 0.4192", "398.929, 566.625, 20.7255, 0.3588", "399.904, 566.029, 20.6379, 0.409", "400.951, 565.583, 20.5936, 0.4006", "402.073, 565.443, 20.6014, 0.4202", "403.207, 565.348, 20.6536, 0.5144", "404.3, 565.034, 20.7238, 0.637", "405.311, 564.509, 20.7776, 0.66", "406.315, 563.96, 20.8026, 0.5504", "406.962, 563.054, 20.8001, 0.3986", "407.084, 561.937, 20.7778, 0.3256", "407.116, 560.793, 20.7483, 0.3218", "407.455, 559.711, 20.7253, 0.363", "408.365, 559.092, 20.7183, 0.435", "409.461, 559.284, 20.7276, 0.5886", "410.592, 559.449, 20.7512, 0.777", "411.734, 559.41, 20.7852, 0.9068", "412.831, 559.1, 20.8259, 1.0704", "413.781, 558.474, 20.8849, 1.06", "414.685, 557.776, 20.9484, 0.9624", "415.591, 557.076, 21.0045, 0.9324", "416.608, 556.556, 21.0334, 0.8306", "417.617, 556.021, 21.0291, 0.8666", "418.55, 555.363, 21.0012, 0.9858", "419.46, 554.686, 20.9619, 0.9522", "420.043, 553.703, 20.9645, 0.754", "420.873, 552.928, 21.0257, 0.5872", "421.828, 552.312, 21.148, 0.6766", "422.837, 551.783, 21.3086, 0.7376", "423.913, 551.406, 21.4895, 0.9028", "424.848, 550.758, 21.6669, 0.9554", "425.802, 550.131, 21.8229, 0.9126", "426.763, 549.515, 21.9578, 0.8268", "427.604, 548.742, 22.0638, 0.928", "428.342, 547.869, 22.1303, 0.9964", "429.016, 546.945, 22.149, 1.0156", "429.769, 546.084, 22.1327, 0.8878", "430.478, 545.187, 22.0963, 0.986", "431.294, 544.385, 22.0532, 0.9142", "432.217, 543.71, 22.018, 0.8698", "433.069, 542.947, 22.0014, 0.8144", "433.959, 542.229, 22.0084, 0.808", "435.009, 541.777, 22.038, 0.7874", "436.15, 541.684, 22.0896, 0.7918" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "380.037, 581.048, 22.978, 0.5888", "380.85, 581.313, 23.0948, 0.4576", "381.95, 581.578, 23.4682, 0.7232", "383.0, 582.011, 23.6253, 0.7616", "383.974, 582.606, 23.7832, 0.7912", "384.942, 583.214, 23.932, 0.5914", "385.933, 583.78, 24.0652, 0.5414", "387.009, 584.15, 24.1798, 0.495", "388.149, 584.248, 24.2756, 0.6412", "389.287, 584.329, 24.3669, 0.7012", "390.381, 584.642, 24.4646, 0.694", "391.361, 585.229, 24.5773, 0.5674", "392.303, 585.874, 24.7126, 0.4248", "393.229, 586.524, 24.8623, 0.3998", "393.879, 587.444, 25.027, 0.3358" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "366.283, 580.122, 23.3271, 0.916", "366.055, 578.92, 23.1486, 0.8616", "365.755, 577.816, 23.074, 0.8016", "365.336, 576.756, 23.0165, 0.7732", "364.764, 575.768, 22.9765, 0.7764", "364.096, 574.841, 22.9491, 0.7392", "363.353, 573.972, 22.9287, 0.652", "362.576, 573.133, 22.9137, 0.5782", "361.867, 572.238, 22.9003, 0.7018", "361.243, 571.279, 22.8874, 0.81", "360.749, 570.251, 22.8736, 0.912", "360.382, 569.17, 22.8535, 0.8934", "360.045, 568.076, 22.8368, 0.722", "359.743, 566.973, 22.8362, 0.6126", "359.429, 565.874, 22.8528, 0.5424", "359.079, 564.785, 22.8831, 0.6828", "358.726, 563.697, 22.9231, 0.7736", "358.502, 562.578, 22.9688, 0.8488", "358.201, 561.477, 23.0149, 0.7558", "357.8, 560.408, 23.0582, 0.5678", "357.505, 559.305, 23.0992, 0.5224", "357.715, 558.219, 23.1391, 0.568", "358.245, 557.21, 23.1836, 0.481", "358.464, 556.111, 23.2356, 0.4664", "358.321, 554.984, 23.2832, 0.4128", "357.928, 553.914, 23.3058, 0.4418", "357.664, 552.806, 23.3006, 0.559", "357.612, 551.668, 23.2763, 0.698", "357.588, 550.524, 23.2433, 0.8788", "357.424, 549.393, 23.2132, 1.128", "357.229, 548.267, 23.1981, 1.0936", "357.338, 547.137, 23.2062, 0.9218", "357.568, 546.018, 23.2408, 0.8988", "357.611, 544.879, 23.3042, 1.0236", "357.596, 543.736, 23.3795, 1.1294", "357.479, 542.599, 23.463, 1.2484", "357.177, 541.499, 23.5627, 1.1568", "356.828, 540.412, 23.686, 0.901", "356.588, 539.297, 23.8246, 0.6156", "356.309, 538.189, 23.9698, 0.5416", "356.188, 537.055, 24.1186, 0.7122", "355.902, 535.95, 24.267, 0.9074", "355.528, 534.87, 24.4133, 0.9424", "355.052, 533.832, 24.5607, 0.9918", "354.599, 532.782, 24.719, 0.9302", "354.345, 531.674, 24.9063, 1.102", "354.021, 530.584, 25.1218, 1.1764", "353.776, 529.471, 25.3564, 1.1268", "353.533, 528.357, 25.6022, 1.0292", "353.497, 527.225, 25.8624, 0.877", "353.496, 526.089, 26.1277, 0.9114", "353.496, 524.955, 26.3924, 1.0394", "353.495, 523.818, 26.6347, 1.1948", "353.489, 522.676, 26.8379, 1.195", "353.45, 521.535, 26.9902, 1.2188", "353.201, 520.419, 27.0845, 1.1506", "353.027, 519.289, 27.1223, 1.1106", "352.909, 518.151, 27.1109, 1.075", "352.55, 517.066, 27.0618, 1.0496", "352.212, 515.975, 26.9821, 1.0358", "352.122, 514.839, 26.8669, 0.8478", "352.117, 513.697, 26.7363, 0.6004", "352.073, 512.555, 26.6136, 0.5668" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "366.283, 580.122, 23.3271, 0.916", "367.003, 579.652, 22.1518, 0.9152", "367.795, 578.841, 21.736, 0.8614", "368.635, 578.07, 21.5668, 0.9124", "369.47, 577.293, 21.3704, 0.8964", "370.1, 576.359, 21.1472, 0.9464", "370.336, 575.266, 20.896, 0.8818", "370.13, 574.167, 20.6203, 0.8392", "369.69, 573.125, 20.3302, 0.8426", "369.236, 572.083, 20.0378, 0.6772", "368.773, 571.045, 19.7603, 0.7458", "368.335, 569.992, 19.507, 0.6548", "368.034, 568.896, 19.2777, 0.6302", "368.498, 567.94, 19.0761, 0.5704", "369.05, 566.941, 18.9111, 0.7568", "369.575, 565.925, 18.7818, 0.8042", "370.166, 564.947, 18.6841, 0.737", "370.781, 563.982, 18.6179, 0.9086", "371.344, 562.988, 18.5772, 0.9334", "371.985, 562.04, 18.5376, 0.8018", "372.622, 561.092, 18.4643, 0.7322", "373.047, 560.035, 18.3532, 0.6722", "373.016, 558.899, 18.2135, 0.6836", "372.282, 558.035, 18.059, 0.7966", "371.625, 557.104, 17.8969, 0.788", "371.107, 556.088, 17.5535, 0.6864" ],
    "parent" : "dend_19",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "377.767, 625.515, 23.5822, 0.8148", "378.177, 626.093, 23.4342, 0.9788", "378.857, 627.011, 23.325, 1.1938", "379.453, 627.986, 23.259, 1.3376", "379.953, 629.015, 23.235, 1.24", "380.573, 629.972, 23.2484, 0.9974", "381.333, 630.825, 23.2902, 0.8466", "382.142, 631.631, 23.357, 0.7162", "382.984, 632.402, 23.4464, 0.895", "383.905, 633.075, 23.5429, 1.0146", "384.788, 633.8, 23.6318, 1.1206", "385.71, 634.475, 23.7022, 0.9654", "386.709, 635.029, 23.7407, 1.0108", "387.735, 635.533, 23.7468, 1.0806", "388.802, 635.942, 23.743, 1.0514", "389.84, 636.422, 23.7415, 0.851", "390.558, 637.293, 23.742, 0.9608", "391.234, 638.216, 23.7419, 1.1162", "391.651, 639.276, 23.7385, 1.18", "391.926, 640.386, 23.7249, 1.0136", "392.201, 641.493, 23.684, 0.9446", "392.475, 642.603, 23.6284, 0.7976", "392.824, 643.691, 23.5769, 0.8456", "393.152, 644.787, 23.5448, 0.7526", "393.792, 645.73, 23.5443, 0.7768", "394.585, 646.551, 23.592, 0.7816", "395.093, 647.57, 23.6767, 0.7572", "395.137, 648.71, 23.7789, 0.8738", "395.139, 649.854, 23.8838, 0.7618", "395.146, 650.997, 23.9795, 0.5442", "395.197, 652.14, 24.0505, 0.419", "395.515, 653.238, 24.1054, 0.438", "396.093, 654.219, 24.1813, 0.6264", "396.443, 655.299, 24.2781, 0.6908", "396.513, 656.439, 24.3778, 0.819", "396.549, 657.58, 24.4637, 0.786", "396.703, 658.714, 24.5223, 0.665", "396.867, 659.846, 24.5466, 0.7324", "397.111, 660.962, 24.5453, 0.8134", "397.368, 662.076, 24.5389, 0.9482", "397.596, 663.197, 24.5484, 0.8146", "397.795, 664.323, 24.5881, 0.5984", "398.006, 665.446, 24.6635, 0.5022", "398.242, 666.563, 24.7745, 0.6748", "398.472, 667.672, 24.9278, 0.6656", "398.667, 668.796, 25.081, 0.6452", "398.866, 669.922, 25.2193, 0.6226", "399.086, 671.043, 25.3445, 0.7356", "399.304, 672.164, 25.457, 0.6516" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "377.767, 625.515, 23.5822, 0.8148", "377.479, 626.102, 24.7536, 0.6864", "377.517, 627.049, 25.9841, 0.6302", "377.75, 628.134, 26.4773, 0.707", "377.92, 629.241, 27.004, 0.8058", "378.17, 630.313, 27.5754, 0.742", "378.548, 631.366, 28.1361, 0.6784", "379.364, 632.122, 28.6476, 0.7532", "380.085, 632.997, 29.0954, 0.642", "380.767, 633.91, 29.5106, 0.735", "381.632, 634.643, 29.9214, 0.599", "382.215, 635.61, 30.3481, 0.6988", "382.361, 636.731, 30.8064, 0.5496", "382.151, 637.682, 31.4286, 0.5218", "381.087, 637.772, 32.111, 0.6354", "379.993, 637.972, 32.8048, 0.7312", "379.422, 638.913, 33.5115, 0.7802", "379.409, 639.971, 34.2434, 0.5786", "379.928, 640.942, 34.9516, 0.4818", "380.666, 641.789, 35.611, 0.558", "381.496, 642.521, 36.2508, 0.6032", "382.426, 643.11, 36.8998, 0.4668", "382.722, 644.035, 37.5519, 0.3686", "382.374, 645.089, 38.1965, 0.349", "381.915, 646.108, 38.8494, 0.4402", "381.563, 647.159, 39.5282, 0.4484", "381.428, 648.243, 40.2408, 0.5578", "380.77, 648.932, 40.9878, 0.5312", "379.699, 648.813, 41.7718, 0.4516", "378.591, 648.829, 42.5701, 0.452", "377.72, 649.472, 43.3647, 0.4208", "377.354, 650.03, 44.168, 0.517", "376.88, 650.675, 45.1136, 0.4068", "376.314, 650.643, 47.376, 0.4576" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "326.93, 571.45, 26.5639, 0.9718", "326.28, 570.855, 26.5723, 0.9812", "325.32, 570.251, 26.5944, 0.7696", "324.216, 570.013, 26.6579, 0.8028", "323.129, 569.703, 26.79, 0.8568", "322.07, 569.283, 26.9632, 0.9944", "321.012, 568.859, 27.1561, 1.0678", "319.907, 568.573, 27.3527, 0.9416", "318.795, 568.311, 27.5397, 0.8374", "317.704, 567.972, 27.7071, 0.6996", "316.633, 567.572, 27.8557, 0.8614", "315.54, 567.239, 28.0011, 0.9656", "314.422, 567.016, 28.1574, 0.9672", "313.319, 566.726, 28.3268, 0.9842", "312.271, 566.275, 28.499, 0.9468", "311.234, 565.796, 28.6672, 0.9828", "310.271, 565.186, 28.8378, 0.9972", "309.283, 564.614, 28.9982, 0.821", "308.258, 564.107, 29.1276, 0.562", "307.201, 563.669, 29.2314, 0.4406", "306.13, 563.271, 29.3266, 0.5338", "305.132, 562.715, 29.4213, 0.5324", "304.211, 562.039, 29.5173, 0.462", "303.377, 561.258, 29.6164, 0.4322", "302.581, 560.441, 29.7172, 0.5726", "301.657, 559.767, 29.8138, 0.5714", "300.687, 559.162, 29.904, 0.6924", "299.729, 558.542, 29.9956, 0.7782", "298.829, 557.846, 30.0857, 0.6944", "298.125, 556.954, 30.1619, 0.5726", "297.562, 556.002, 30.2092, 0.6424", "296.693, 555.29, 30.2061, 0.709", "296.048, 554.354, 30.1711, 0.6802", "295.365, 553.444, 30.1179, 0.6798", "294.667, 552.541, 30.0614, 0.65", "294.074, 551.565, 30.0146, 0.5068", "293.467, 550.597, 29.9869, 0.4398", "292.569, 549.921, 29.9804, 0.4962", "291.688, 549.198, 29.9902, 0.6382", "291.013, 548.283, 30.014, 0.4924", "290.251, 547.435, 30.0496, 0.3774", "289.345, 546.74, 30.098, 0.3246", "288.53, 545.94, 30.161, 0.3642", "287.634, 545.233, 30.2406, 0.4558", "286.756, 544.5, 30.338, 0.5378", "285.802, 543.872, 30.4531, 0.43", "284.906, 543.179, 30.6163, 0.3464", "284.044, 542.438, 30.8014, 0.3134", "283.122, 541.773, 30.9915, 0.3472", "282.142, 541.185, 31.1674, 0.407", "281.162, 540.597, 31.3155, 0.531", "280.195, 539.989, 31.4278, 0.6974", "279.27, 539.316, 31.5017, 0.6272", "278.376, 538.602, 31.5454, 0.5056", "277.484, 537.887, 31.5683, 0.4668", "276.596, 537.165, 31.579, 0.6334", "275.714, 536.437, 31.5829, 0.6986", "274.889, 535.652, 31.5837, 0.8594", "274.142, 534.787, 31.584, 0.7352", "273.342, 533.969, 31.584, 0.4954", "272.541, 533.152, 31.5837, 0.3262", "271.74, 532.335, 31.5837, 0.2762", "270.937, 531.521, 31.5837, 0.2776", "270.085, 530.765, 31.5834, 0.28", "269.144, 530.111, 31.5832, 0.2848", "268.205, 529.458, 31.5829, 0.2936", "267.267, 528.805, 31.5826, 0.3094", "266.305, 528.188, 31.582, 0.3414", "265.301, 527.64, 31.5815, 0.388", "264.294, 527.097, 31.5806, 0.5356", "263.309, 526.518, 31.5795, 0.5122", "262.367, 525.868, 31.5781, 0.5384", "261.433, 525.208, 31.5762, 0.7074", "260.578, 524.464, 31.5739, 0.8918", "259.891, 523.55, 31.5706, 0.946", "259.237, 522.611, 31.5666, 0.8414", "258.585, 521.672, 31.5613, 0.7282", "257.932, 520.733, 31.5546, 0.5836", "257.287, 519.788, 31.5462, 0.456", "256.684, 518.817, 31.5358, 0.452", "256.128, 517.817, 31.523, 0.4592", "255.573, 516.817, 31.5087, 0.403", "255.005, 515.824, 31.4927, 0.4064", "254.405, 514.85, 31.4717, 0.3482", "253.819, 513.869, 31.4482, 0.326", "253.229, 512.89, 31.4334, 0.325", "252.578, 511.95, 31.4356, 0.3574", "251.874, 511.049, 31.4544, 0.4794", "251.139, 510.172, 31.4852, 0.4062", "250.404, 509.296, 31.5232, 0.3506", "249.714, 508.387, 31.563, 0.316", "249.091, 507.427, 31.6, 0.377", "248.444, 506.485, 31.6324, 0.3408", "247.726, 505.595, 31.6632, 0.3124", "246.979, 504.728, 31.6963, 0.2988", "246.165, 503.93, 31.7346, 0.3142", "245.443, 503.067, 31.7822, 0.3734", "244.72, 502.206, 31.843, 0.3338", "243.728, 501.688, 31.9208, 0.3", "242.637, 501.347, 32.0205, 0.2746", "241.788, 500.674, 32.1437, 0.2746", "241.147, 499.728, 32.2907, 0.2746", "240.25, 499.214, 32.4752, 0.2746", "239.134, 499.046, 32.7096, 0.2746", "238.105, 498.601, 32.9652, 0.2748", "237.086, 498.096, 33.2122, 0.275", "235.981, 497.875, 33.43, 0.2752", "234.875, 497.608, 33.6056, 0.2758", "233.878, 497.065, 33.7313, 0.277", "232.83, 496.621, 33.8117, 0.2792", "231.714, 496.385, 33.8615, 0.283", "230.589, 496.176, 33.8943, 0.2904", "229.525, 495.771, 33.92, 0.3034", "228.481, 495.304, 33.9455, 0.3302", "227.436, 494.838, 33.9749, 0.3674", "226.406, 494.342, 34.0108, 0.4978", "225.398, 493.803, 34.055, 0.4398", "224.395, 493.254, 34.1071, 0.415", "223.392, 492.704, 34.165, 0.426", "222.437, 492.076, 34.2236, 0.6264", "221.508, 491.409, 34.277, 0.5818", "220.583, 490.736, 34.3213, 0.4612", "219.755, 489.951, 34.354, 0.4202", "219.027, 489.07, 34.3762, 0.3732", "218.318, 488.172, 34.3888, 0.3746", "217.609, 487.274, 34.3949, 0.4044", "216.933, 486.352, 34.3974, 0.5558", "216.27, 485.42, 34.3974, 0.5992", "215.655, 484.455, 34.3969, 0.4594", "215.057, 483.481, 34.396, 0.3536", "214.459, 482.505, 34.3952, 0.3278", "213.861, 481.53, 34.3958, 0.3688", "213.334, 480.516, 34.3977, 0.4704", "212.908, 479.455, 34.4019, 0.536", "212.504, 478.384, 34.41, 0.5668", "212.101, 477.313, 34.4243, 0.6064", "211.627, 476.273, 34.4557, 0.5358", "211.077, 475.272, 34.5148, 0.4184", "210.485, 474.297, 34.596, 0.3644", "209.869, 473.333, 34.687, 0.3848", "209.254, 472.37, 34.7768, 0.5246", "208.636, 471.407, 34.8564, 0.5158", "207.909, 470.525, 34.9188, 0.4284", "207.133, 469.685, 34.963, 0.3828", "206.209, 469.014, 34.9941, 0.4184", "205.271, 468.357, 35.0182, 0.5888", "204.288, 467.776, 35.04, 0.6264", "203.276, 467.239, 35.0641, 0.674", "202.27, 466.697, 35.0935, 0.6406", "201.273, 466.135, 35.131, 0.4838", "200.253, 465.618, 35.1789, 0.4246", "199.218, 465.131, 35.2383, 0.3344", "198.227, 464.561, 35.3091, 0.3012", "197.37, 463.807, 35.3976, 0.2766", "196.584, 462.98, 35.5068, 0.2784", "195.817, 462.135, 35.6297, 0.2818", "195.069, 461.271, 35.7512, 0.2876", "194.322, 460.406, 35.8607, 0.3", "193.438, 459.682, 35.9498, 0.3164", "192.434, 459.134, 36.0147, 0.3776", "191.454, 458.544, 36.0556, 0.3416", "190.643, 457.738, 36.0786, 0.314", "190.181, 456.693, 36.0898, 0.3018", "189.722, 455.645, 36.0942, 0.3198", "189.406, 454.546, 36.0956, 0.3838", "189.063, 453.454, 36.0959, 0.353", "188.643, 452.39, 36.0959, 0.3362", "188.282, 451.305, 36.0959, 0.339", "188.103, 450.174, 36.0959, 0.4068", "188.013, 449.034, 36.0959, 0.4576", "187.977, 447.891, 36.0959, 0.9152" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "326.93, 571.45, 26.5639, 0.9718", "326.977, 569.733, 26.9319, 0.5878", "327.104, 568.602, 27.075, 0.5728", "327.439, 567.514, 27.2213, 0.8266", "327.785, 566.425, 27.362, 0.8448", "327.869, 565.295, 27.4893, 0.7862", "327.869, 564.151, 27.5971, 0.6688", "327.999, 563.018, 27.6892, 0.4938", "328.163, 561.888, 27.7745, 0.4196", "328.241, 560.749, 27.8449, 0.4402", "328.298, 559.607, 27.8927, 0.6246", "328.323, 558.463, 27.9062, 0.7156", "328.327, 557.325, 27.869, 0.7284", "328.449, 556.193, 27.7938, 0.5948", "328.81, 555.11, 27.7295, 0.6536", "329.168, 554.024, 27.7055, 0.6462", "329.53, 552.94, 27.7301, 0.7414", "329.671, 551.807, 27.8082, 0.6162", "329.579, 550.669, 27.9388, 0.4776", "329.487, 549.533, 28.1084, 0.4516", "329.394, 548.396, 28.2999, 0.4272", "329.299, 547.26, 28.504, 0.4954", "329.106, 546.138, 28.7151, 0.5278", "328.721, 545.066, 28.9282, 0.5876", "328.338, 543.993, 29.1357, 0.4702", "327.958, 542.918, 29.3306, 0.4466", "327.642, 541.822, 29.5025, 0.375", "327.449, 540.696, 29.6374, 0.3784", "327.258, 539.569, 29.7284, 0.4088", "327.066, 538.441, 29.7752, 0.5776", "326.874, 537.313, 29.7825, 0.5746", "326.659, 536.19, 29.7578, 0.728", "326.424, 535.072, 29.7119, 0.6998", "326.19, 533.953, 29.6579, 0.5632", "325.953, 532.835, 29.6106, 0.4904", "325.682, 531.724, 29.5893, 0.6234", "325.387, 530.619, 29.612, 0.7134", "325.092, 529.516, 29.6848, 0.7242", "324.803, 528.412, 29.8046, 0.5882", "324.571, 527.296, 29.9589, 0.6342", "324.405, 526.167, 30.13, 0.645", "324.241, 525.035, 30.3044, 0.5694", "324.076, 523.905, 30.4749, 0.4362", "323.908, 522.775, 30.6421, 0.3848", "323.701, 521.651, 30.8134, 0.4828", "323.452, 520.539, 30.9999, 0.4126", "323.206, 519.429, 31.2043, 0.3624", "322.97, 518.317, 31.4222, 0.3378", "322.822, 517.19, 31.6408, 0.4186", "322.8, 516.052, 31.8416, 0.4118", "322.72, 514.913, 32.0051, 0.4722", "322.706, 513.769, 32.1292, 0.459", "322.591, 512.637, 32.2123, 0.5848", "322.383, 511.512, 32.2529, 0.5462", "322.275, 510.376, 32.2745, 0.6508", "322.079, 509.278, 32.298, 0.675", "321.805, 508.201, 32.312, 0.629", "321.871, 507.061, 32.3274, 0.5282", "322.062, 505.935, 32.3484, 0.6436", "322.225, 504.805, 32.3742, 0.5344", "322.341, 503.668, 32.4159, 0.529", "322.394, 502.53, 32.4884, 0.4774", "322.317, 501.391, 32.5998, 0.5828", "322.15, 500.266, 32.7496, 0.7184", "321.948, 499.146, 32.9336, 0.8022", "321.672, 498.044, 33.1358, 0.8558", "321.442, 496.93, 33.3329, 0.7626", "321.411, 495.792, 33.5045, 0.61", "321.483, 494.651, 33.6412, 0.4578", "321.448, 493.51, 33.7476, 0.4558", "321.378, 492.368, 33.8383, 0.4648", "321.509, 491.241, 33.9343, 0.4196", "321.823, 490.147, 34.0637, 0.4084", "321.827, 489.02, 34.221, 0.4914", "321.806, 487.878, 34.3963, 0.5994", "321.53, 486.781, 34.6074, 0.5646", "321.383, 485.653, 34.8365, 0.4974", "321.471, 484.518, 35.0731, 0.3862", "321.682, 483.398, 35.3049, 0.3446", "321.969, 482.302, 35.5253, 0.3828", "322.828, 481.56, 35.7386, 0.3512", "323.488, 480.628, 35.9324, 0.3316", "324.167, 479.712, 36.1074, 0.3352", "324.949, 478.879, 36.2656, 0.3778", "325.663, 477.986, 36.4104, 0.5116", "326.357, 477.087, 36.5644, 0.4918", "326.845, 476.071, 36.7357, 0.3842", "327.273, 475.013, 36.9104, 0.299", "327.702, 473.953, 37.0824, 0.2728", "328.441, 473.102, 37.2574, 0.2712", "329.447, 472.578, 37.4385, 0.2684", "330.563, 472.355, 37.6074, 0.2626", "331.703, 472.395, 37.7544, 0.2542", "332.679, 472.979, 37.8753, 0.2288", "333.447, 473.827, 38.0576, 0.2288" ],
    "parent" : "dend_8",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "342.113, 591.628, 25.8418, 1.1742", "340.84, 592.164, 25.9542, 1.1872", "339.836, 592.711, 25.9946, 1.0154", "338.836, 593.267, 26.0405, 0.774", "337.807, 593.763, 26.1077, 0.868", "336.755, 594.207, 26.2013, 0.9306", "335.669, 594.554, 26.317, 0.9016", "334.548, 594.768, 26.4471, 0.8652", "333.419, 594.94, 26.5843, 0.7146", "332.3, 595.164, 26.7251, 0.6096", "331.185, 595.406, 26.8624, 0.7128", "330.098, 595.746, 26.9848, 0.8304", "329.051, 596.205, 27.085, 0.9506", "327.989, 596.63, 27.1591, 0.9608", "326.935, 597.064, 27.2044, 0.867", "325.998, 597.701, 27.2193, 0.7842", "325.138, 598.452, 27.2171, 0.6462", "324.154, 599.013, 27.2189, 0.773", "323.082, 599.412, 27.2345, 0.7506", "322.005, 599.799, 27.2733, 0.8164", "320.949, 600.233, 27.3423, 0.8736", "319.944, 600.769, 27.4353, 0.8372", "319.05, 601.468, 27.5439, 0.7746", "318.461, 602.413, 27.6593, 0.6342", "318.186, 603.517, 27.7647, 0.7216", "317.795, 604.575, 27.841, 0.7974", "317.088, 605.459, 27.8735, 0.9", "316.189, 606.156, 27.8632, 0.8152", "315.203, 606.732, 27.8243, 0.8494", "314.213, 607.304, 27.775, 0.8994", "313.277, 607.959, 27.7331, 1.057", "312.362, 608.646, 27.7126, 1.034", "311.475, 609.365, 27.7211, 0.9204", "310.618, 610.123, 27.7589, 0.8242", "309.712, 610.818, 27.8228, 0.7778", "308.751, 611.435, 27.9129, 0.737", "307.744, 611.969, 28.0277, 0.6714", "306.738, 612.509, 28.1565, 0.5002", "305.828, 613.191, 28.2856, 0.4238", "304.989, 613.968, 28.4046, 0.484", "304.151, 614.744, 28.5074, 0.5314", "303.223, 615.408, 28.5925, 0.7032", "302.236, 615.986, 28.6611, 0.8422", "301.213, 616.495, 28.7199, 0.8276", "300.134, 616.869, 28.7767, 0.7502", "299.028, 617.158, 28.838, 0.6226", "297.916, 617.425, 28.908, 0.5362", "296.898, 617.918, 28.9926, 0.562", "296.016, 618.636, 29.0979, 0.8524", "295.207, 619.44, 29.2152, 0.8986", "294.437, 620.285, 29.3297, 0.8578", "293.759, 621.202, 29.4305, 0.9378", "293.141, 622.166, 29.5095, 1.0172", "292.425, 623.053, 29.5624, 1.0412", "291.595, 623.838, 29.589, 0.9974", "290.737, 624.596, 29.5946, 0.8878", "289.988, 625.456, 29.5842, 0.822", "289.178, 626.261, 29.5621, 0.7194", "288.286, 626.975, 29.5294, 0.8932", "287.404, 627.704, 29.4868, 1.0484", "286.564, 628.479, 29.4344, 1.0044", "285.685, 629.21, 29.372, 0.9312", "284.696, 629.773, 29.2964, 0.9838", "283.631, 630.179, 29.2046, 0.8528", "282.584, 630.633, 29.1082, 0.804", "281.623, 631.248, 29.0217, 0.9166", "280.781, 632.019, 28.9556, 1.0548", "279.968, 632.822, 28.9178, 0.9666", "279.139, 633.611, 28.9162, 0.8738", "278.216, 634.282, 28.952, 0.8164", "277.167, 634.728, 29.0024, 0.8388", "276.052, 634.974, 29.0534, 0.7126", "274.91, 634.966, 29.1049, 0.6072", "273.883, 635.436, 29.1712, 0.7014", "273.287, 636.401, 29.2468, 0.8438", "272.748, 637.411, 29.3227, 0.807", "272.091, 638.346, 29.395, 0.8254", "271.273, 639.145, 29.4557, 0.8962", "270.32, 639.776, 29.4916, 0.8514", "269.309, 640.31, 29.5134, 0.9346", "268.319, 640.885, 29.5327, 0.9698", "267.425, 641.597, 29.5512, 0.9268", "266.446, 642.188, 29.5694, 0.9138", "265.421, 642.697, 29.5873, 0.7954", "264.377, 643.166, 29.6036, 0.8044" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "342.113, 591.628, 25.8418, 1.1742", "342.167, 592.44, 22.6535, 0.576", "342.311, 591.622, 21.7288, 0.4402", "341.868, 590.656, 20.8108, 0.4304", "341.304, 589.701, 19.9784, 0.6122", "340.619, 588.807, 19.281, 0.6638", "339.811, 588.007, 18.7516, 0.7738", "338.889, 587.334, 18.399, 0.6782", "337.797, 587.034, 18.1539, 0.582", "336.659, 586.989, 17.9586, 0.697", "335.518, 586.992, 17.786, 0.6312", "334.378, 587.026, 17.6312, 0.7182", "333.258, 587.243, 17.4941, 0.7802", "332.182, 587.624, 17.3714, 0.692", "331.067, 587.867, 17.2735, 0.599", "330.042, 588.373, 17.2139, 0.5412" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "436.15, 541.684, 22.0896, 0.7918", "436.746, 541.685, 22.16, 0.5924", "437.89, 541.692, 22.2535, 0.5448", "439.032, 541.739, 22.3772, 0.494", "440.149, 541.948, 22.5365, 0.676", "441.275, 542.083, 22.7368, 0.5884", "442.398, 541.973, 22.9855, 0.6572", "443.506, 541.758, 23.2828, 0.5786", "444.412, 541.141, 23.6063, 0.7474", "445.337, 540.498, 23.9315, 0.6772", "446.41, 540.168, 24.233, 0.8058", "447.542, 540.048, 24.4845, 0.9326", "448.671, 539.881, 24.6696, 1.0222", "449.812, 539.848, 24.7839, 0.979", "450.956, 539.857, 24.8328, 1.0002", "452.091, 539.729, 24.8259, 1.0064", "453.231, 539.669, 24.7748, 0.9486", "454.359, 539.825, 24.6899, 0.9502", "455.473, 540.071, 24.5751, 0.8812", "456.56, 540.41, 24.4376, 0.8746", "457.609, 540.85, 24.2933, 0.7316", "458.668, 541.276, 24.1681, 0.6422", "459.802, 541.361, 24.0939, 0.7684", "460.897, 541.046, 24.0793, 0.9586", "461.94, 540.581, 24.1189, 1.0652", "463.004, 540.162, 24.201, 1.0842", "464.113, 539.893, 24.3097, 1.0724", "465.229, 539.649, 24.4325, 1.0492", "466.364, 539.537, 24.5676, 1.0122", "467.45, 539.184, 24.701, 0.916", "468.523, 538.794, 24.8202, 0.8704", "469.662, 538.705, 24.9168, 0.828", "470.805, 538.648, 24.9851, 1.0016", "471.911, 538.358, 25.022, 1.0154", "473.025, 538.093, 25.0276, 0.9348", "473.992, 537.487, 25.0073, 0.843", "474.894, 536.782, 24.9647, 0.8498", "475.348, 535.734, 24.9017, 0.6906", "475.769, 534.67, 24.8196, 0.7726", "476.384, 533.707, 24.7187, 0.694" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "436.15, 541.684, 22.0896, 0.7918", "434.404, 542.01, 22.578, 0.7768", "433.276, 542.084, 22.8628, 0.5642", "432.415, 541.367, 23.2123, 0.4938", "431.426, 540.823, 23.5881, 0.6222", "430.349, 540.46, 23.9662, 0.747", "429.245, 540.203, 24.325, 0.6138", "428.168, 540.063, 24.6752, 0.5346", "427.302, 539.356, 25.0462, 0.7172", "426.333, 538.791, 25.4376, 0.6012", "425.434, 538.107, 25.8394, 0.5334", "424.486, 537.492, 26.2415, 0.6072", "423.442, 537.06, 26.6413, 0.6902", "422.35, 536.747, 27.0295, 0.649", "421.287, 536.374, 27.419, 0.604", "420.3, 535.838, 27.8206, 0.598", "419.44, 535.12, 28.2232, 0.6666", "418.637, 534.321, 28.6129, 0.6364", "417.974, 533.42, 28.994, 0.6588", "417.471, 532.408, 29.3538, 0.5488", "416.784, 531.513, 29.6716, 0.621", "415.977, 530.713, 29.9438, 0.5598", "415.275, 529.82, 30.1608, 0.7068", "414.779, 528.798, 30.3243, 0.63", "414.602, 527.677, 30.4315, 0.5818", "414.552, 526.535, 30.4861, 0.4914", "414.356, 525.412, 30.4716, 0.5592", "413.953, 524.374, 30.1084, 0.6864" ],
    "parent" : "dend_30",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "393.879, 587.444, 25.027, 0.3358", "394.621, 587.911, 25.2326, 0.3036", "395.605, 588.492, 25.4608, 0.2812", "396.589, 589.072, 25.7195, 0.2868", "397.397, 588.917, 26.3014, 0.297", "398.199, 588.745, 27.1193, 0.3174", "399.284, 588.816, 27.8659, 0.3486", "400.419, 588.915, 28.4959, 0.4382", "400.915, 589.893, 29.0063, 0.4504", "401.442, 590.885, 29.4283, 0.5334", "402.26, 591.676, 29.7497, 0.6236", "403.117, 592.423, 30.0154, 0.6416", "404.094, 593.005, 30.2753, 0.4854", "405.152, 593.425, 30.5368, 0.4278", "406.207, 593.84, 30.8022, 0.3404", "407.182, 594.327, 31.1394, 0.312", "408.286, 594.505, 31.5101, 0.2966", "409.372, 594.83, 31.8716, 0.3156", "410.457, 595.166, 32.2104, 0.351", "411.543, 595.49, 32.529, 0.414", "412.64, 595.685, 32.8208, 0.5436", "413.775, 595.586, 33.0744, 0.722", "414.883, 595.323, 33.3091, 0.6676", "416.014, 595.216, 33.5362, 0.6056", "417.137, 595.373, 33.7677, 0.5298", "418.253, 595.596, 34.0108, 0.6584", "419.385, 595.667, 34.265, 0.734", "420.523, 595.689, 34.5262, 0.7498", "421.661, 595.691, 34.7864, 0.6952", "422.802, 595.67, 35.04, 0.545", "423.717, 595.071, 35.2764, 0.5034", "424.818, 594.848, 35.4945, 0.6486", "425.88, 595.262, 35.7272, 0.7552", "426.894, 595.767, 35.9862, 0.8258", "427.712, 596.524, 36.2964, 0.659", "428.451, 597.345, 36.6512, 0.6512", "429.385, 597.99, 37.0166, 0.7732", "430.365, 598.57, 37.366, 0.7956", "431.332, 599.165, 37.6978, 0.6834", "432.115, 599.978, 38.0568, 0.762", "433.124, 600.063, 38.4913, 0.8912", "433.897, 599.322, 39.0202, 0.9806", "434.706, 598.562, 39.6001, 0.7312", "435.805, 598.364, 40.2013, 0.6834", "436.758, 597.798, 40.817, 0.6418", "437.809, 597.399, 41.4033, 0.564", "438.87, 597.19, 41.9698, 0.4234", "439.884, 597.548, 42.5412, 0.3736", "441.003, 597.594, 43.0693, 0.4016", "442.124, 597.749, 43.5238, 0.5558", "443.25, 597.908, 43.913, 0.5752", "444.386, 597.943, 44.2616, 0.5306", "445.521, 597.963, 44.5852, 0.6106", "446.652, 598.031, 44.8952, 0.6554", "447.767, 598.223, 45.2001, 0.5544", "448.849, 598.564, 45.4908, 0.5756", "449.959, 598.806, 45.7573, 0.517", "451.095, 598.858, 45.9967, 0.4256", "452.236, 598.876, 46.2098, 0.4014", "453.36, 599.059, 46.389, 0.3384", "454.488, 599.244, 46.536, 0.3084", "455.599, 599.059, 46.6662, 0.2904", "456.728, 598.875, 46.7852, 0.3034", "457.847, 599.073, 46.9202, 0.3304", "458.831, 599.644, 47.0756, 0.3672", "459.956, 599.782, 47.2917, 0.4986", "461.074, 599.898, 47.5516, 0.4368", "462.089, 600.221, 47.8643, 0.4316", "463.013, 600.779, 48.1874, 0.3478", "463.66, 601.714, 48.4789, 0.3252", "464.169, 602.732, 48.7231, 0.3236", "464.565, 603.804, 48.9152, 0.3548", "464.899, 604.898, 49.061, 0.4744", "465.139, 606.013, 49.1688, 0.3972", "465.232, 607.152, 49.2537, 0.3328", "465.232, 608.294, 49.334, 0.288", "465.232, 609.437, 49.4222, 0.3006", "465.232, 610.58, 49.5172, 0.3174", "465.232, 611.724, 49.616, 0.3798", "465.232, 612.868, 49.7176, 0.3454", "465.232, 614.011, 49.8232, 0.3216", "465.353, 615.146, 49.9349, 0.3142", "465.444, 616.285, 50.0567, 0.35", "465.49, 617.428, 50.1942, 0.406", "465.624, 618.562, 50.351, 0.5588", "465.963, 619.279, 50.5904, 0.6046", "466.427, 620.316, 50.8519, 0.4692", "466.588, 621.433, 51.1154, 0.3732", "466.604, 622.575, 51.3702, 0.3578", "466.604, 623.717, 51.6116, 0.455", "466.604, 624.86, 51.8372, 0.4826", "466.826, 625.975, 52.0523, 0.588", "467.299, 626.985, 52.3219, 0.75", "467.89, 627.946, 52.6221, 0.7538", "468.863, 628.482, 52.929, 0.5986", "469.65, 629.289, 53.219, 0.6412", "470.599, 629.908, 53.4831, 0.4888", "471.707, 630.168, 53.7026, 0.414", "472.589, 630.882, 53.8658, 0.412", "473.382, 631.705, 53.9795, 0.431", "474.172, 632.532, 54.0546, 0.356", "474.385, 633.65, 54.1005, 0.2938", "474.385, 634.794, 54.1246, 0.2626", "474.385, 635.938, 54.1363, 0.2542", "474.771, 637.015, 54.1416, 0.2288", "475.3, 638.029, 54.1439, 0.2288" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "393.879, 587.444, 25.027, 0.3358", "393.446, 587.812, 25.1306, 0.2288", "392.633, 588.474, 25.3063, 0.3308", "393.155, 589.261, 25.3039, 0.368", "394.044, 589.113, 25.3557, 0.5", "394.725, 588.316, 25.5907, 0.4394", "395.365, 587.561, 25.9604, 0.4368", "395.926, 586.758, 26.2311, 0.357", "396.531, 586.944, 26.3088, 0.3426", "397.286, 587.695, 26.3402, 0.3556", "398.064, 588.525, 26.2432, 0.415", "399.02, 589.078, 26.0312, 0.5826", "400.037, 589.571, 25.7545, 0.6138", "401.033, 590.116, 25.4754, 0.656", "402.045, 590.63, 25.2128, 0.5812", "403.111, 591.027, 24.9714, 0.4996", "404.196, 591.384, 24.7785, 0.5288", "405.248, 591.829, 24.6441, 0.6218", "406.222, 592.424, 24.5669, 0.6058", "407.147, 593.095, 24.5281, 0.5746", "408.045, 593.805, 24.5037, 0.5258", "409.013, 594.41, 24.4701, 0.6202", "410.068, 594.842, 24.4053, 0.812", "411.182, 595.075, 24.3012, 0.8578", "412.293, 595.324, 24.1595, 0.8446", "413.351, 595.733, 23.9892, 0.8388", "414.444, 596.06, 23.8269, 0.7378", "415.516, 596.456, 23.6999, 0.532", "416.659, 596.436, 23.6321, 0.4678", "417.784, 596.272, 23.6128, 0.4094", "418.847, 596.684, 23.6327, 0.4648", "419.632, 597.44, 23.7199, 0.4604", "420.286, 598.322, 23.8312, 0.5146", "421.19, 599.021, 23.9058, 0.769", "421.992, 599.82, 23.9105, 0.7234", "422.709, 600.703, 23.8753, 0.632", "423.595, 601.419, 23.8604, 0.7252", "424.586, 601.961, 23.9054, 0.7676", "425.672, 602.286, 23.9882, 0.5628", "426.803, 602.411, 24.0907, 0.4158", "427.908, 602.608, 24.1855, 0.3856", "428.91, 603.151, 24.2155, 0.5262", "429.943, 603.578, 24.1392, 0.5198", "430.993, 603.982, 23.9769, 0.4308", "432.092, 604.199, 23.7853, 0.411", "433.204, 604.444, 23.6098, 0.3562", "434.253, 604.887, 23.48, 0.3424", "435.379, 604.92, 23.3747, 0.3476", "436.487, 604.669, 23.2304, 0.4372", "437.621, 604.609, 23.0269, 0.4428", "438.73, 604.715, 22.7367, 0.5478", "439.812, 605.022, 22.3839, 0.5118", "440.903, 605.239, 21.9824, 0.421", "442.02, 605.317, 21.561, 0.3686", "443.098, 605.645, 21.1888, 0.3956", "444.149, 606.094, 20.882, 0.528", "445.196, 606.552, 20.6268, 0.6038", "446.05, 607.296, 20.3958, 0.8818", "446.893, 608.06, 20.1695, 0.9588", "447.881, 608.599, 19.9226, 0.7122", "448.986, 608.613, 19.6437, 0.5432", "450.052, 609.012, 19.402, 0.6624", "451.124, 609.408, 19.2471, 0.6134", "452.165, 609.876, 19.1589, 0.6892", "453.168, 610.424, 19.1139, 0.7068", "454.216, 610.867, 19.0873, 0.6512", "455.304, 611.223, 19.0522, 0.7462", "456.397, 611.56, 18.988, 0.8758", "457.462, 611.97, 18.8894, 0.8858", "458.473, 612.501, 18.7327, 0.8778", "459.485, 613.03, 18.5306, 0.7626", "460.477, 613.597, 18.304, 0.579", "461.541, 613.964, 18.0419, 0.5508", "462.62, 614.262, 17.7113, 0.5848", "463.361, 613.763, 16.4024, 0.6864" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "352.073, 512.555, 26.6136, 0.5668", "352.396, 512.422, 28.8448, 0.4576", "353.405, 512.26, 30.0398, 0.7866", "354.351, 511.668, 30.52, 0.7312", "355.141, 510.881, 31.0551, 0.7674", "355.622, 509.935, 31.652, 0.617", "355.005, 509.078, 32.272, 0.4804", "354.403, 508.119, 32.8499, 0.4504", "354.306, 506.996, 33.3819, 0.455", "354.599, 506.071, 33.9466, 0.4004", "354.41, 505.012, 34.5038, 0.3778", "354.511, 503.894, 35.0342, 0.4104", "354.48, 502.77, 35.5314, 0.567", "354.362, 501.649, 36.0013, 0.62", "354.305, 500.525, 36.4398, 0.4976", "354.305, 499.483, 36.8626, 0.4262", "354.404, 498.352, 37.2103, 0.454", "354.676, 497.244, 37.4945, 0.6436", "355.001, 496.148, 37.7244, 0.782", "355.115, 495.03, 37.9182, 0.7012", "355.027, 493.892, 38.0934, 0.5872", "354.991, 492.752, 38.269, 0.6584", "354.991, 491.61, 38.4597, 0.7934", "355.243, 490.526, 38.677, 0.5716", "355.794, 489.529, 38.9088, 0.3928", "356.534, 488.657, 39.1538, 0.3046", "357.174, 487.719, 39.4472, 0.3326", "357.787, 486.764, 39.7785, 0.3712", "358.217, 485.732, 40.1582, 0.506", "358.369, 484.648, 40.6255, 0.4504", "358.575, 483.565, 41.1449, 0.4572", "358.865, 482.477, 41.6514, 0.3946", "359.214, 481.393, 42.1047, 0.4144", "359.351, 480.268, 42.5191, 0.4786", "359.592, 479.171, 42.9246, 0.692", "359.93, 478.099, 43.3322, 0.8588", "360.17, 477.007, 43.748, 0.9068", "360.349, 475.894, 44.1493, 0.661", "360.485, 474.81, 45.12, 0.2288" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "352.073, 512.555, 26.6136, 0.5668", "351.905, 511.691, 26.4874, 0.4996", "351.734, 510.563, 26.3744, 0.3988", "351.41, 509.47, 26.2943, 0.3258", "351.312, 508.339, 26.2706, 0.3232", "351.541, 507.221, 26.2892, 0.3606", "351.429, 506.085, 26.3369, 0.454", "351.001, 505.025, 26.4038, 0.5106", "350.677, 503.937, 26.4833, 0.4952", "350.88, 502.821, 26.5516, 0.5924", "351.402, 501.816, 26.6043, 0.6194", "351.558, 500.685, 26.6584, 0.4992", "351.558, 499.541, 26.7214, 0.417", "351.558, 498.397, 26.8176, 0.4956", "351.66, 497.26, 26.9694, 0.436" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "399.304, 672.164, 25.457, 0.6516", "399.784, 673.099, 25.5419, 0.5468", "400.341, 674.097, 25.5855, 0.5642", "400.955, 675.062, 25.6038, 0.7114", "401.55, 676.039, 25.6104, 0.6552", "402.079, 677.052, 25.6183, 0.547", "402.6, 678.07, 25.639, 0.5944", "403.14, 679.077, 25.6799, 0.6236", "403.786, 680.018, 25.7354, 0.505", "404.558, 680.859, 25.7891, 0.4356", "405.169, 681.818, 25.8271, 0.4932", "405.614, 682.87, 25.8301, 0.6104", "406.113, 683.897, 25.7887, 0.5488", "406.948, 684.663, 25.7345, 0.6434", "407.739, 685.49, 25.6693, 0.492", "408.469, 686.369, 25.59, 0.4258", "408.959, 687.401, 25.5103, 0.405", "409.453, 688.433, 25.4402, 0.557", "409.989, 689.443, 25.3846, 0.6016", "410.53, 690.451, 25.3423, 0.4636", "411.096, 691.445, 25.3177, 0.3626", "411.668, 692.436, 25.3122, 0.3384", "412.405, 693.309, 25.3217, 0.4184", "412.762, 694.391, 25.3571, 0.418", "413.415, 695.33, 25.3891, 0.452", "414.072, 696.265, 25.4193, 0.5746", "414.629, 697.262, 25.4625, 0.7436", "415.142, 698.285, 25.5034, 0.8808", "415.682, 699.293, 25.5397, 0.8466", "416.281, 700.268, 25.5783, 0.8108", "416.956, 701.178, 25.6321, 0.6118", "417.78, 701.968, 25.7094, 0.428", "418.48, 702.866, 25.8054, 0.3328", "419.064, 703.847, 25.9155, 0.3374", "419.674, 704.813, 26.0446, 0.3816", "420.339, 705.736, 26.1958, 0.5188", "421.079, 706.6, 26.3595, 0.505", "421.912, 707.367, 26.5173, 0.4088", "422.842, 708.03, 26.648, 0.3446", "423.846, 708.546, 26.7362, 0.358", "424.962, 708.735, 26.7651, 0.4254", "426.095, 708.74, 26.7102, 0.5722", "427.237, 708.74, 26.6111, 0.7394", "428.379, 708.74, 26.4887, 0.8722", "429.522, 708.74, 26.3643, 0.8356", "430.664, 708.748, 26.2517, 0.7668", "431.796, 708.853, 26.153, 0.6436", "432.911, 709.092, 26.0703, 0.6234", "434.047, 709.148, 26.0157, 0.4904", "435.177, 708.987, 26.0072, 0.4788", "436.294, 708.92, 26.0435, 0.4604", "437.423, 709.103, 26.1122, 0.4116", "438.553, 709.271, 26.2135, 0.3924", "439.684, 709.439, 26.3492, 0.4684", "440.767, 709.762, 26.5115, 0.525", "441.802, 710.243, 26.6921, 0.5812", "442.88, 710.585, 26.895, 0.4642", "444.005, 710.76, 27.1286, 0.4056", "445.103, 711.034, 27.3867, 0.4446", "446.167, 711.44, 27.6564, 0.4862", "447.24, 711.809, 27.9375, 0.4838", "448.316, 712.161, 28.2332, 0.4078", "449.339, 712.617, 28.5463, 0.3856", "450.335, 713.172, 28.8212, 0.4534", "451.216, 713.887, 29.0654, 0.5094", "451.993, 714.722, 29.2872, 0.493", "452.773, 715.555, 29.484, 0.5884", "453.552, 716.391, 29.6554, 0.6122", "454.304, 717.251, 29.8026, 0.4846", "454.971, 718.177, 29.9334, 0.3956", "455.6, 719.129, 30.0546, 0.4298", "456.312, 720.02, 30.1795, 0.4398", "457.113, 720.824, 30.3058, 0.49", "458.001, 721.539, 30.4153, 0.657", "458.831, 722.318, 30.4942, 0.8374", "459.585, 723.174, 30.5435, 0.6556", "460.15, 724.149, 30.5374, 0.537", "460.897, 724.981, 30.4223, 0.6274", "461.777, 725.694, 30.1904, 0.6634", "462.582, 726.478, 29.8497, 0.9116", "463.415, 727.214, 29.4109, 0.9468", "464.284, 727.879, 28.8938, 0.7886", "464.91, 728.809, 28.3836, 0.8926", "465.709, 729.532, 27.8567, 0.759", "466.464, 730.27, 27.3589, 0.9518", "467.218, 731.128, 27.0327, 0.7728", "467.97, 731.985, 26.8833, 0.5274", "468.737, 732.82, 26.8854, 0.3386", "469.547, 733.615, 26.9873, 0.299", "470.36, 734.412, 27.1341, 0.3194", "471.148, 735.24, 27.2681, 0.361", "472.035, 735.943, 27.3461, 0.4184", "473.054, 736.457, 27.3568, 0.6202", "474.155, 736.69, 27.3028, 0.5328", "475.297, 736.735, 27.1953, 0.5508", "476.409, 736.937, 27.038, 0.3972", "477.487, 737.289, 26.8305, 0.333", "478.517, 737.75, 26.5848, 0.2884", "479.322, 738.519, 26.3314, 0.3014", "480.035, 739.408, 26.0978, 0.3192", "480.654, 740.365, 25.902, 0.3828", "481.224, 741.356, 25.7546, 0.3512", "481.794, 742.347, 25.657, 0.3318", "482.365, 743.339, 25.6008, 0.3356", "482.953, 744.321, 25.5728, 0.3782", "483.552, 745.295, 25.5618, 0.5126", "484.151, 746.269, 25.5602, 0.4934", "484.751, 747.244, 25.5634, 0.3872", "485.213, 748.285, 25.569, 0.3044", "485.571, 749.37, 25.5768, 0.2828", "485.913, 750.463, 25.587, 0.29", "486.254, 751.554, 25.6004, 0.3028", "486.595, 752.647, 25.6179, 0.329", "486.937, 753.738, 25.6408, 0.3652", "487.278, 754.83, 25.6705, 0.4934", "487.62, 755.922, 25.7086, 0.4336", "487.961, 757.013, 25.7572, 0.3948", "488.306, 758.104, 25.819, 0.4294", "488.654, 759.194, 25.8971, 0.4342", "489.0, 760.283, 25.9936, 0.5022", "489.349, 761.371, 26.1092, 0.5714", "489.649, 762.473, 26.2457, 0.5178", "489.868, 763.591, 26.4052, 0.3854", "490.059, 764.714, 26.5846, 0.3014", "490.25, 765.836, 26.7749, 0.277", "490.424, 766.961, 26.9623, 0.2792", "490.504, 768.096, 27.1251, 0.2832", "490.547, 769.238, 27.2441, 0.2904", "490.754, 770.358, 27.3065, 0.3042", "491.057, 771.461, 27.306, 0.3286", "491.372, 772.56, 27.2427, 0.3792", "491.685, 773.66, 27.1219, 0.4476", "492.382, 774.516, 26.9446, 0.6974", "493.356, 775.084, 26.7073, 0.5634", "494.451, 775.329, 26.4129, 0.4686", "495.509, 775.725, 26.0892, 0.4608", "496.561, 776.154, 25.7562, 0.547", "497.614, 776.585, 25.4272, 0.4468", "498.668, 777.017, 25.111, 0.3796", "499.692, 777.514, 24.8031, 0.3648", "500.692, 778.05, 24.4915, 0.4926", "501.657, 778.635, 24.1591, 0.432", "502.106, 779.661, 23.825, 0.392", "502.474, 780.737, 23.5053, 0.4242", "502.628, 781.865, 23.2092, 0.4248", "502.77, 782.998, 22.9413, 0.4838", "503.485, 783.873, 22.6998, 0.5422", "504.234, 784.734, 22.4614, 0.4394", "504.964, 785.607, 22.2132, 0.3588", "505.69, 786.479, 21.9529, 0.3616", "506.429, 787.341, 21.6886, 0.3136", "507.211, 788.168, 21.4397, 0.2542", "507.989, 788.99, 20.9012, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 9
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "399.304, 672.164, 25.457, 0.6516", "399.169, 672.837, 25.6888, 0.2288", "398.949, 673.929, 25.1953, 0.3018", "398.852, 675.048, 24.9899, 0.3274", "399.008, 676.176, 24.7852, 0.362", "399.195, 677.303, 24.6047, 0.4878", "399.421, 678.422, 24.466, 0.4214", "399.675, 679.536, 24.3809, 0.3798", "399.865, 680.664, 24.3544, 0.365", "400.028, 681.795, 24.3708, 0.4932", "400.129, 682.934, 24.4221, 0.4326", "400.206, 684.073, 24.499, 0.3944", "400.326, 685.208, 24.5839, 0.4228", "400.49, 686.339, 24.6566, 0.451", "400.618, 687.475, 24.7029, 0.393", "400.668, 688.617, 24.7147, 0.3642", "400.687, 689.761, 24.6862, 0.3842", "400.855, 690.877, 24.6123, 0.5238", "401.401, 691.857, 24.5002, 0.5142", "402.039, 692.797, 24.3712, 0.4266", "402.57, 693.808, 24.2418, 0.3732", "402.964, 694.874, 24.1226, 0.4308", "403.224, 695.987, 24.0198, 0.4654", "403.568, 697.075, 23.9339, 0.422", "404.024, 698.124, 23.8582, 0.4066", "404.6, 699.105, 23.7816, 0.5182", "405.322, 699.991, 23.6964, 0.5036", "406.04, 700.878, 23.5988, 0.407", "406.678, 701.826, 23.486, 0.3362", "407.362, 702.724, 23.3311, 0.3672", "408.185, 703.477, 23.1092, 0.322", "409.224, 703.783, 22.9018, 0.2796", "410.074, 704.495, 22.7475, 0.2288", "410.538, 705.54, 22.5599, 0.2288" ],
    "parent" : "dend_14",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "264.377, 643.166, 29.6036, 0.8044", "263.34, 644.647, 29.6153, 0.7814", "262.593, 645.513, 29.6148, 0.7846", "261.667, 646.185, 29.6136, 0.7886", "260.692, 646.783, 29.61, 0.8058", "259.797, 647.493, 29.6131, 0.7894", "258.991, 648.304, 29.6467, 0.7654", "258.354, 649.246, 29.7245, 0.6906", "257.974, 650.324, 29.8444, 0.6988", "257.543, 651.379, 30.0009, 0.6872", "256.93, 652.334, 30.1902, 0.5662", "256.072, 653.079, 30.4108, 0.5974", "255.112, 653.69, 30.6499, 0.5572", "254.231, 654.4, 30.896, 0.5012", "253.596, 655.336, 31.1419, 0.5376", "253.248, 656.417, 31.386, 0.6094", "252.93, 657.495, 31.6148, 0.7232", "252.284, 658.435, 31.8195, 0.7976", "251.645, 659.379, 32.0006, 0.6838", "251.039, 660.345, 32.1588, 0.5514", "250.281, 661.187, 32.2843, 0.61", "249.294, 661.699, 32.3876, 0.616", "248.161, 661.841, 32.4772, 0.6676", "247.046, 662.034, 32.5455, 0.5666", "246.106, 662.619, 32.5861, 0.6478", "245.32, 663.447, 32.5968, 0.64", "244.406, 664.121, 32.5758, 0.7066", "243.367, 664.584, 32.517, 0.6658", "242.298, 664.982, 32.4223, 0.7014", "241.227, 665.374, 32.3084, 0.6848", "240.13, 665.695, 32.1927, 0.5972", "239.033, 666.013, 32.088, 0.4824", "237.933, 666.323, 32.0034, 0.4958", "236.822, 666.597, 31.9441, 0.5656", "235.696, 666.785, 31.9091, 0.4762", "234.557, 666.883, 31.8872, 0.459", "233.45, 667.134, 31.8819, 0.3928", "232.368, 667.502, 31.9085, 0.4358", "231.277, 667.843, 31.9712, 0.398", "230.22, 668.265, 32.0676, 0.4392", "229.211, 668.8, 32.191, 0.4342", "228.196, 669.32, 32.3358, 0.3622", "227.178, 669.833, 32.492, 0.3052", "226.202, 670.423, 32.6466, 0.2842", "225.295, 671.115, 32.7902, 0.2924", "224.515, 671.942, 32.9151, 0.3086", "223.859, 672.878, 33.0162, 0.3322", "223.359, 673.901, 33.0929, 0.4082", "222.978, 674.978, 33.147, 0.3928", "222.802, 676.099, 33.1839, 0.4358", "222.738, 677.242, 33.2091, 0.398", "222.86, 678.369, 33.2287, 0.4394", "223.148, 679.477, 33.2472, 0.4344", "223.508, 680.561, 33.2682, 0.3626", "223.938, 681.62, 33.2942, 0.306", "224.384, 682.674, 33.3273, 0.2856", "224.815, 683.733, 33.3693, 0.295", "225.194, 684.812, 33.4228, 0.3134", "225.401, 685.931, 33.4897, 0.3422", "225.524, 687.068, 33.5709, 0.4204", "225.62, 688.206, 33.6697, 0.4462", "225.691, 689.346, 33.7893, 0.3852", "225.798, 690.482, 33.9251, 0.3428", "225.989, 691.606, 34.0656, 0.3794", "226.069, 692.741, 34.2012, 0.345", "225.892, 693.864, 34.3244, 0.3206", "225.731, 694.994, 34.4299, 0.3136", "225.682, 696.135, 34.5148, 0.3428", "225.469, 697.251, 34.587, 0.4214", "225.098, 698.33, 34.6545, 0.4486", "224.977, 699.452, 34.7105, 0.3882", "224.848, 700.58, 34.7309, 0.3558", "224.544, 701.683, 34.7144, 0.3674", "224.234, 702.782, 34.6606, 0.4978", "223.814, 703.828, 34.561, 0.4402", "223.313, 704.855, 34.4512, 0.4144", "222.819, 705.886, 34.3428, 0.4308", "222.209, 706.836, 34.2423, 0.607", "221.371, 707.614, 34.148, 0.6836", "220.509, 708.361, 34.064, 0.6668", "219.572, 709.015, 34.0052, 0.4902", "218.568, 709.557, 33.9741, 0.4128", "217.496, 709.951, 33.969, 0.428", "216.438, 710.363, 33.9895, 0.6004", "215.502, 711.012, 34.036, 0.678", "214.708, 711.831, 34.0886, 0.6252", "213.883, 712.623, 34.1292, 0.5648", "212.948, 713.273, 34.1541, 0.5", "212.044, 713.97, 34.1524, 0.609", "211.324, 714.85, 34.1197, 0.6142", "210.611, 715.742, 34.0508, 0.6632", "209.765, 716.504, 33.9564, 0.5646", "208.887, 717.237, 33.8481, 0.6138", "208.01, 717.969, 33.7352, 0.7226", "207.206, 718.778, 33.6171, 0.8402", "206.602, 719.742, 33.4967, 0.7806", "205.672, 720.394, 33.3889, 0.6434", "204.611, 720.822, 33.3068, 0.52", "203.616, 721.385, 33.2506, 0.5692", "202.568, 721.843, 33.2119, 0.6844", "201.5, 722.251, 33.1862, 0.781", "200.463, 722.7, 33.185, 0.6142", "199.345, 722.943, 33.1514, 0.6096", "198.228, 723.162, 33.0529, 0.4958", "197.23, 723.644, 32.9011, 0.5668", "196.181, 723.991, 32.7309, 0.4746", "195.059, 724.21, 32.5427, 0.474", "194.54, 725.151, 32.2916, 0.562", "193.998, 725.889, 31.9194, 0.7496", "193.45, 726.774, 31.4896, 0.7504", "192.805, 727.483, 30.9935, 0.606", "192.694, 728.592, 30.5654, 0.5878", "192.239, 729.635, 30.2896, 0.7158", "191.63, 730.597, 30.1745, 0.6266", "191.127, 731.611, 30.1946, 0.6726", "190.465, 732.512, 30.2946, 0.6478", "189.989, 733.533, 30.4198, 0.6778", "189.601, 734.598, 30.5771, 0.8226", "189.374, 735.693, 30.7776, 0.6586", "188.714, 736.553, 30.9753, 0.623", "188.581, 737.66, 31.1035, 0.6258", "188.355, 738.779, 31.1777, 0.7558", "188.27, 739.92, 31.229, 0.8482", "188.162, 741.054, 31.2794, 0.826", "188.255, 742.187, 31.3471, 0.5792", "188.392, 743.319, 31.4056, 0.4338", "188.581, 744.442, 31.4432, 0.4796", "189.109, 745.401, 31.4843, 0.4068", "189.925, 746.111, 31.5179, 0.3502", "190.048, 747.166, 31.498, 0.322", "190.151, 748.232, 31.3631, 0.356", "189.61, 749.099, 31.0811, 0.4576", "189.512, 750.085, 29.892, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "264.377, 643.166, 29.6036, 0.8044", "263.812, 643.596, 29.946, 0.6864", "262.764, 643.854, 30.3654, 0.5696", "261.644, 644.04, 30.5192, 0.5742", "260.618, 644.53, 30.6883, 0.6592", "259.78, 645.296, 30.8798, 0.6724", "258.926, 646.055, 31.0836, 0.7134", "258.195, 646.918, 31.3144, 0.7082", "257.228, 647.506, 31.5787, 0.635", "256.285, 648.138, 31.8668, 0.578", "255.325, 648.747, 32.1602, 0.5496", "254.327, 649.267, 32.4458, 0.5796", "253.213, 649.499, 32.7312, 0.4616", "252.091, 649.662, 33.0137, 0.3996", "250.951, 649.691, 33.2878, 0.4384", "249.957, 649.998, 33.5549, 0.4512", "249.369, 650.964, 33.8338, 0.532", "248.789, 651.93, 34.1258, 0.6338", "248.316, 652.954, 34.4016, 0.5994", "247.817, 653.968, 34.6718, 0.7028", "246.899, 654.622, 34.9174, 0.7688", "246.023, 655.352, 35.1243, 0.8162", "245.197, 656.141, 35.287, 0.8096", "244.314, 656.867, 35.411, 0.7992", "243.401, 657.556, 35.506, 0.7712", "242.459, 658.205, 35.5779, 0.7604", "241.504, 658.836, 35.6406, 0.5412", "240.424, 659.197, 35.705, 0.4156", "239.295, 659.373, 35.7792, 0.4214", "238.278, 659.882, 35.8688, 0.4174", "237.433, 660.65, 35.9766, 0.482", "236.742, 661.557, 36.1158, 0.4796", "236.357, 662.63, 36.286, 0.6118", "235.884, 663.666, 36.4806, 0.6502", "235.285, 664.638, 36.6867, 0.5808", "234.696, 665.615, 36.8976, 0.4494", "234.118, 666.597, 37.1132, 0.4476", "233.39, 667.472, 37.3307, 0.4136", "232.691, 668.372, 37.5427, 0.4988", "232.265, 669.427, 37.744, 0.3952", "232.246, 670.566, 37.9406, 0.3292", "232.226, 671.709, 38.1212, 0.2816", "232.494, 672.76, 38.2931, 0.2876", "232.947, 673.782, 38.4611, 0.2996", "232.971, 674.904, 38.6176, 0.3158", "232.527, 675.925, 38.757, 0.3768", "232.123, 676.968, 38.878, 0.34", "231.941, 678.097, 38.9889, 0.3114", "231.835, 679.234, 39.0958, 0.2958", "231.773, 680.376, 39.2062, 0.3134", "231.715, 681.517, 39.3288, 0.3484", "231.654, 682.658, 39.4727, 0.403", "231.591, 683.797, 39.6444, 0.5534", "231.595, 684.937, 39.8415, 0.5946", "231.66, 686.074, 40.0596, 0.4508", "231.594, 687.205, 40.2962, 0.3378", "231.393, 688.324, 40.5499, 0.2988", "231.271, 689.452, 40.8108, 0.3142", "231.248, 690.592, 41.067, 0.3734", "231.279, 691.732, 41.3134, 0.334", "231.395, 692.867, 41.5506, 0.3", "231.556, 693.997, 41.7836, 0.2746", "231.623, 695.133, 42.0252, 0.2748", "231.706, 696.267, 42.2909, 0.2748", "231.55, 697.372, 42.5844, 0.2752", "231.148, 698.414, 42.9254, 0.2756", "230.221, 699.003, 43.2978, 0.2766", "229.141, 699.35, 43.65, 0.2782", "228.077, 699.73, 43.9519, 0.2814", "226.942, 699.758, 44.2002, 0.287", "225.942, 700.209, 44.4021, 0.2988", "225.008, 700.806, 44.5802, 0.3142", "223.972, 701.266, 44.7748, 0.3734", "222.876, 701.449, 45.0262, 0.3338", "221.756, 701.612, 45.313, 0.3", "220.633, 701.753, 45.6198, 0.2746", "219.519, 701.922, 45.9208, 0.2746", "218.478, 702.383, 46.2008, 0.2746", "217.452, 702.88, 46.4439, 0.2746", "216.4, 703.306, 46.6435, 0.2746", "215.28, 703.327, 46.8068, 0.2746", "214.186, 702.993, 46.9431, 0.2748", "213.093, 702.659, 47.0669, 0.275", "211.999, 702.325, 47.1934, 0.2752", "210.916, 701.961, 47.3371, 0.2758", "209.824, 701.682, 47.5059, 0.2768", "208.69, 701.739, 47.7229, 0.2788", "207.588, 702.003, 48.0012, 0.2824", "206.537, 702.313, 48.3829, 0.2882", "205.482, 702.683, 48.804, 0.305", "204.453, 703.147, 49.2162, 0.305", "203.474, 703.634, 50.1959, 0.4576" ],
    "parent" : "dend_5",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "330.042, 588.373, 17.2139, 0.5412", "329.32, 588.968, 17.3534, 0.432", "328.548, 589.719, 17.4149, 0.35", "327.54, 590.183, 17.4504, 0.3212", "326.607, 590.838, 17.4519, 0.3552", "325.537, 591.223, 17.414, 0.453", "324.556, 591.796, 17.3351, 0.4656", "324.024, 592.689, 17.2168, 0.6208", "323.473, 593.674, 17.0193, 0.497", "322.923, 594.659, 16.7675, 0.4362", "322.372, 595.644, 16.4849, 0.4182", "321.922, 596.63, 16.1888, 0.6124", "321.768, 597.732, 15.9695, 0.5546", "320.897, 598.351, 15.8214, 0.416", "320.549, 599.407, 15.7353, 0.3106", "319.672, 599.987, 15.6936, 0.2954", "318.675, 600.51, 15.68, 0.3078", "317.781, 601.188, 15.68, 0.3616", "316.75, 601.559, 15.68, 0.3136", "315.862, 602.092, 15.68, 0.2542", "314.943, 602.659, 15.68, 0.2288" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "330.042, 588.373, 17.2139, 0.5412", "329.379, 588.615, 16.9523, 0.9152", "328.271, 588.846, 17.2178, 0.9058", "327.162, 589.094, 17.3414, 0.873", "326.083, 589.453, 17.4818, 0.7288", "325.029, 589.891, 17.6119, 0.6368", "323.967, 590.314, 17.7037, 0.76", "322.939, 590.811, 17.743, 0.9342", "321.861, 591.187, 17.7343, 1.0622", "320.743, 591.422, 17.6973, 0.8744", "319.616, 591.291, 17.6416, 0.9886", "318.515, 591.539, 17.5773, 1.014", "317.436, 591.919, 17.5284, 0.822", "316.3, 592.021, 17.4944, 0.7118", "315.175, 592.115, 17.2603, 1.144" ],
    "parent" : "dend_2",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "476.384, 533.707, 24.7187, 0.694", "477.535, 533.395, 24.4539, 0.5576", "478.662, 533.231, 24.2781, 0.5234", "479.803, 533.202, 24.1006, 0.473", "480.941, 533.111, 23.9381, 0.5466", "482.038, 532.795, 23.8, 0.7866", "483.132, 532.459, 23.6849, 0.9574", "484.272, 532.435, 23.583, 0.7758", "485.361, 532.772, 23.4793, 0.7974", "486.456, 533.101, 23.3798, 0.7006", "487.599, 533.089, 23.284, 0.727", "488.72, 532.871, 23.1937, 0.693", "489.862, 532.823, 23.1169, 0.5752", "490.985, 533.032, 23.0613, 0.6214", "492.121, 533.165, 23.0279, 0.5668", "493.26, 533.065, 23.0084, 0.6896", "494.395, 532.921, 23.0108, 0.7446", "495.536, 532.89, 23.0545, 0.7694", "496.674, 532.788, 23.1389, 0.7332", "497.816, 532.757, 23.2606, 0.6062", "498.958, 532.744, 23.421, 0.6616", "500.09, 532.652, 23.6121, 0.7264", "501.161, 532.273, 23.8203, 0.571", "502.094, 531.619, 24.0498, 0.4778", "503.034, 530.989, 24.3088, 0.503", "504.053, 530.497, 24.5913, 0.7314", "505.118, 530.125, 24.8781, 0.9598", "506.241, 529.96, 25.1582, 0.9584", "507.357, 529.752, 25.4125, 0.729", "508.448, 529.419, 25.6181, 0.7176", "509.549, 529.124, 25.763, 0.7478", "510.672, 528.928, 25.845, 0.784", "511.755, 528.559, 25.8646, 0.7172", "512.799, 528.104, 25.8351, 0.785", "513.839, 527.689, 25.787, 0.6688", "514.976, 527.582, 25.722, 0.7114", "516.111, 527.442, 25.6549, 0.9098", "517.224, 527.199, 25.5994, 0.9276", "518.272, 526.758, 25.5627, 0.8298", "519.28, 526.219, 25.5515, 1.054", "520.34, 525.798, 25.5781, 1.1038", "521.455, 525.639, 25.6494, 0.9116", "522.53, 525.933, 25.7757, 0.7928", "523.602, 526.23, 25.9805, 0.7918", "524.606, 525.841, 26.2693, 0.6416", "525.637, 525.375, 26.5896, 0.6256", "526.724, 525.042, 26.9066, 0.695", "527.855, 525.149, 27.197, 0.8002", "528.782, 525.76, 27.4323, 0.651", "529.269, 526.788, 27.6463, 0.6722", "529.908, 527.686, 27.9246, 0.6394", "530.507, 528.637, 28.2467, 0.6988", "530.951, 529.671, 28.6118, 0.6846", "531.474, 530.666, 29.0136, 0.5744", "532.483, 531.171, 29.4042, 0.5482", "533.556, 531.564, 29.7517, 0.7804", "534.583, 532.023, 30.095, 0.762", "535.464, 532.67, 30.4713, 0.6186", "536.477, 532.467, 30.8927, 0.4266", "537.518, 532.052, 31.3001, 0.3982", "538.554, 531.58, 31.6484, 0.356", "539.697, 531.558, 32.1479, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "476.384, 533.707, 24.7187, 0.694", "477.395, 532.255, 24.2315, 0.8606", "478.287, 531.552, 24.0248, 0.5934", "479.164, 530.837, 23.8206, 0.4734", "479.811, 529.905, 23.6417, 0.488", "480.329, 528.887, 23.4935, 0.7382", "480.895, 527.894, 23.3767, 0.8046", "481.401, 526.87, 23.2978, 0.7976", "481.742, 525.785, 23.2457, 0.7312", "481.95, 524.66, 23.2063, 0.6368", "482.409, 523.663, 23.1568, 0.5514", "483.355, 523.087, 23.0784, 0.6454", "484.457, 522.791, 22.9694, 0.7386", "485.533, 522.425, 22.8337, 0.6194", "486.278, 521.645, 22.6721, 0.4416", "486.803, 520.634, 22.4944, 0.3596", "487.716, 520.062, 22.3207, 0.3794", "488.841, 519.91, 22.1703, 0.4972", "489.955, 519.664, 22.0476, 0.5494", "490.917, 519.069, 21.9492, 0.7678", "491.776, 518.317, 21.8721, 0.8114", "492.678, 517.614, 21.8107, 0.8156", "493.574, 516.904, 21.7575, 0.7372", "494.462, 516.182, 21.7071, 0.782", "495.43, 515.577, 21.6582, 0.857", "496.432, 515.026, 21.6071, 0.8066", "497.377, 514.386, 21.5516, 0.7172", "498.229, 513.626, 21.5017, 0.5312", "499.045, 512.826, 21.4712, 0.5144", "499.863, 512.026, 21.4781, 0.4922", "500.708, 511.257, 21.5246, 0.6362", "501.657, 510.623, 21.6006, 0.6902", "502.655, 510.07, 21.6929, 0.6806", "503.611, 509.443, 21.7865, 0.5102", "504.374, 508.597, 21.8688, 0.4756", "505.142, 507.75, 21.9311, 0.4188", "506.092, 507.121, 21.9813, 0.5084", "506.877, 506.296, 22.0181, 0.413", "507.015, 505.174, 22.0126, 0.3616", "507.032, 504.03, 21.9615, 0.3446", "507.111, 502.89, 21.8656, 0.3898", "507.474, 501.809, 21.7238, 0.5592", "507.923, 500.767, 21.5277, 0.4576", "508.394, 499.814, 20.72, 0.2288" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "351.66, 497.26, 26.9694, 0.436", "352.751, 497.022, 27.4378, 0.4156", "353.467, 496.192, 27.8038, 0.5864", "354.456, 495.677, 28.231, 0.6092", "355.444, 495.136, 28.6961, 0.704", "356.11, 494.263, 29.2149, 1.0822", "356.516, 493.222, 29.743, 1.259", "357.247, 492.394, 30.2716, 1.1584", "358.176, 492.225, 30.8006, 0.7632", "359.134, 492.538, 31.3018, 0.5852", "360.129, 492.056, 31.7542, 0.7658", "360.941, 491.27, 32.167, 0.682", "361.902, 490.984, 32.5525, 0.727", "363.011, 491.22, 32.9078, 0.7546", "364.125, 491.449, 33.2298, 0.6178", "365.256, 491.48, 33.5306, 0.591", "365.998, 490.784, 33.8405, 0.5838", "367.042, 490.853, 34.1578, 0.8212", "368.134, 491.152, 34.4254, 0.9608", "369.235, 491.433, 34.6581, 0.8478", "370.248, 491.098, 34.8818, 0.6124", "370.877, 490.181, 35.1117, 0.53", "370.669, 489.134, 35.3514, 0.7194", "369.992, 488.229, 35.6037, 0.7804", "369.109, 487.513, 35.8658, 0.7024", "368.216, 486.806, 36.1558, 0.7976", "367.391, 486.031, 36.4787, 0.9548", "366.747, 485.101, 36.8169, 1.1102", "366.214, 484.115, 37.1801, 0.9152", "366.024, 483.004, 37.539, 0.6102", "366.207, 481.904, 38.3519, 0.6864" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "351.66, 497.26, 26.9694, 0.436", "351.592, 497.017, 26.3985, 0.2288", "350.854, 496.151, 26.501, 0.2836", "350.152, 495.249, 26.544, 0.2912", "349.613, 494.241, 26.5912, 0.3054", "349.223, 493.166, 26.6395, 0.3316", "348.938, 492.058, 26.6877, 0.3816", "348.794, 490.924, 26.7343, 0.466", "348.824, 489.78, 26.7795, 0.6638", "348.743, 488.639, 26.8228, 0.8304", "348.672, 487.497, 26.8616, 0.7372", "348.715, 486.354, 26.9394, 0.9152" ],
    "parent" : "dend_22",
    "fractionAlong" : 1.0
  } ],
  "groups" : [ {
    "name" : "soma",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "dend",
    "groups" : [ ],
    "sections" : [ "dend_38", "dend_37", "dend_36", "dend_35", "dend_18", "dend_11", "dend_0", "dend_26", "dend_19", "dend_17", "dend_12", "dend_8", "dend_1", "dend_30", "dend_27", "dend_21", "dend_20", "dend_14", "dend_13", "dend_10", "dend_9", "dend_5", "dend_2", "dend_32", "dend_31", "dend_29", "dend_28", "dend_25", "dend_22", "dend_16", "dend_15", "dend_7", "dend_6", "dend_4", "dend_3", "dend_34", "dend_33", "dend_24", "dend_23" ]
  }, {
    "name" : "axon",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18601",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "soma_group",
    "groups" : [ "soma" ],
    "sections" : [ ]
  }, {
    "name" : "axon_group",
    "groups" : [ "axon" ],
    "sections" : [ ]
  }, {
    "name" : "dendrite_group",
    "groups" : [ "dend" ],
    "sections" : [ ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "axon_0", "axon_0", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "axon_1", "axon_1", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_26", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_8", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_1", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_20", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_32", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_4", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23", "dend_23" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "soma",
    "value" : "2.3203053"
  }, {
    "group" : "axon",
    "value" : "2.3203053"
  }, {
    "group" : "dend",
    "value" : "2.3203053"
  } ],
  "initMembPotential" : [ ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "216.7308"
  } ],
  "channelDensity" : [ {
    "id" : "Ih_soma",
    "ionChannel" : "Ih",
    "ion" : "hcn",
    "group" : "soma",
    "condDens" : "2.1200365E-4",
    "erev" : "-45.0"
  }, {
    "id" : "NaV_soma",
    "ionChannel" : "NaV",
    "ion" : "na",
    "group" : "soma",
    "condDens" : "0.06843474",
    "erev" : "53.0"
  }, {
    "id" : "Kd_soma",
    "ionChannel" : "Kd",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "3.7959112E-6",
    "erev" : "-107.0"
  }, {
    "id" : "Kv2like_soma",
    "ionChannel" : "Kv2like",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.021716135",
    "erev" : "-107.0"
  }, {
    "id" : "Kv3_1_soma",
    "ionChannel" : "Kv3_1",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.41319427",
    "erev" : "-107.0"
  }, {
    "id" : "K_T_soma",
    "ionChannel" : "K_T",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.038022578",
    "erev" : "-107.0"
  }, {
    "id" : "Im_v2_soma",
    "ionChannel" : "Im_v2",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "0.008199019",
    "erev" : "-107.0"
  }, {
    "id" : "SK_soma",
    "ionChannel" : "SK",
    "ion" : "k",
    "group" : "soma",
    "condDens" : "2.27552E-5",
    "erev" : "-107.0"
  }, {
    "id" : "pas_soma",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "soma",
    "condDens" : "1.5676237E-4",
    "erev" : "-88.54208"
  }, {
    "id" : "pas_axon",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axon",
    "condDens" : "2.0608063E-4",
    "erev" : "-88.54208"
  }, {
    "id" : "pas_dend",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "dend",
    "condDens" : "8.370689E-6",
    "erev" : "-88.54208"
  }, {
    "id" : "Ca_HVA_soma",
    "ionChannel" : "Ca_HVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "9.919516E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "Ca_LVA_soma",
    "ionChannel" : "Ca_LVA",
    "ion" : "ca",
    "group" : "soma",
    "condDens" : "0.0024703296",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_487245869",
    "group" : "soma",
    "initialConcentration" : "1.0E-4",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate Cell_487245869

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_38, id: dend_38, parent: soma_0
create dend_38
public dend_38
// Section: dend_37, id: dend_37, parent: soma_0
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: soma_0
create dend_36
public dend_36
// Section: dend_35, id: dend_35, parent: soma_0
create dend_35
public dend_35
// Section: dend_18, id: dend_18, parent: soma_0
create dend_18
public dend_18
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_26, id: dend_26, parent: dend_18
create dend_26
public dend_26
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_17, id: dend_17, parent: dend_11
create dend_17
public dend_17
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_8, id: dend_8, parent: dend_0
create dend_8
public dend_8
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: dend_30, id: dend_30, parent: dend_26
create dend_30
public dend_30
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_19
create dend_21
public dend_21
// Section: dend_20, id: dend_20, parent: dend_19
create dend_20
public dend_20
// Section: dend_14, id: dend_14, parent: dend_12
create dend_14
public dend_14
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_10, id: dend_10, parent: dend_8
create dend_10
public dend_10
// Section: dend_9, id: dend_9, parent: dend_8
create dend_9
public dend_9
// Section: dend_5, id: dend_5, parent: dend_1
create dend_5
public dend_5
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_32, id: dend_32, parent: dend_30
create dend_32
public dend_32
// Section: dend_31, id: dend_31, parent: dend_30
create dend_31
public dend_31
// Section: dend_29, id: dend_29, parent: dend_27
create dend_29
public dend_29
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_25, id: dend_25, parent: dend_21
create dend_25
public dend_25
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_14
create dend_16
public dend_16
// Section: dend_15, id: dend_15, parent: dend_14
create dend_15
public dend_15
// Section: dend_7, id: dend_7, parent: dend_5
create dend_7
public dend_7
// Section: dend_6, id: dend_6, parent: dend_5
create dend_6
public dend_6
// Section: dend_4, id: dend_4, parent: dend_2
create dend_4
public dend_4
// Section: dend_3, id: dend_3, parent: dend_2
create dend_3
public dend_3
// Section: dend_34, id: dend_34, parent: dend_32
create dend_34
public dend_34
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_24, id: dend_24, parent: dend_22
create dend_24
public dend_24
// Section: dend_23, id: dend_23, parent: dend_22
create dend_23
public dend_23

// Group: {name=soma, groups=[], sections=[soma_0]}
objref soma
// Group: {name=dend, groups=[], sections=[dend_38, dend_37, dend_36, dend_35, dend_18, dend_11, dend_0, dend_26, dend_19, dend_17, dend_12, dend_8, dend_1, dend_30, dend_27, dend_21, dend_20, dend_14, dend_13, dend_10, dend_9, dend_5, dend_2, dend_32, dend_31, dend_29, dend_28, dend_25, dend_22, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_24, dend_23]}
objref dend
// Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
objref axon
// Group: {name=OneSecGrp_SectionRef_18601, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_18601
// Group: {name=soma_group, groups=[soma], sections=[]}
objref soma_group
// Group: {name=axon_group, groups=[axon], sections=[]}
objref axon_group
// Group: {name=dendrite_group, groups=[dend], sections=[]}
objref dendrite_group
// Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, axon_1, axon_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: soma, with concentration model: CaDynamics_487245869
    forsec soma {
        cai = 1.0E-4  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect axon_0(0), soma_0(0.500000000000002)
    connect dend_38(0), soma_0(0.500000000000002)
    connect dend_37(0), soma_0(0.500000000000002)
    connect dend_36(0), soma_0(0.500000000000002)
    connect dend_35(0), soma_0(0.500000000000002)
    connect dend_18(0), soma_0(0.500000000000002)
    connect dend_11(0), soma_0(0.500000000000002)
    connect dend_0(0), soma_0(0.500000000000002)
    connect axon_1(0), axon_0(1.0)
    connect dend_26(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_17(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_8(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect dend_30(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_19(1.0)
    connect dend_20(0), dend_19(1.0)
    connect dend_14(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_10(0), dend_8(1.0)
    connect dend_9(0), dend_8(1.0)
    connect dend_5(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_32(0), dend_30(1.0)
    connect dend_31(0), dend_30(1.0)
    connect dend_29(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_25(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_14(1.0)
    connect dend_15(0), dend_14(1.0)
    connect dend_7(0), dend_5(1.0)
    connect dend_6(0), dend_5(1.0)
    connect dend_4(0), dend_2(1.0)
    connect dend_3(0), dend_2(1.0)
    connect dend_34(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_24(0), dend_22(1.0)
    connect dend_23(0), dend_22(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( 352.52, 601.09, 25.2294, 14.526 ) }
    soma_0 { pt3dadd( 359.783, 601.09, 25.2294, 14.526 ) }
    soma_0 { pt3dadd( 367.046, 601.09, 25.2294, 14.526 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 3/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 359.783, 601.09, 25.2294, 1.0 ) }
    axon_0 { pt3dadd( 365.624, 614.906, 25.2294, 1.0 ) }
    axon_0 { pt3dadd( 371.466, 628.722, 25.2294, 1.0 ) }
    // Section: dend_38, id: dend_38, parent: soma_0 (entry count 6/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 355.552, 605.654, 29.3292, 0.4592 ) }
    dend_38 { pt3dadd( 354.442, 605.411, 29.6198, 0.6606 ) }
    dend_38 { pt3dadd( 353.378, 605.504, 29.7629, 0.7784 ) }
    dend_38 { pt3dadd( 352.645, 606.289, 29.8071, 0.8636 ) }
    dend_38 { pt3dadd( 352.476, 607.392, 29.7993, 0.7548 ) }
    dend_38 { pt3dadd( 352.002, 608.367, 29.7511, 0.7022 ) }
    dend_38 { pt3dadd( 351.662, 609.447, 29.7371, 0.7972 ) }
    dend_38 { pt3dadd( 352.057, 610.518, 29.8152, 0.7258 ) }
    dend_38 { pt3dadd( 351.988, 611.219, 30.035, 0.879 ) }
    dend_38 { pt3dadd( 350.916, 611.487, 30.3839, 0.9208 ) }
    dend_38 { pt3dadd( 350.255, 612.305, 30.8151, 1.0298 ) }
    dend_38 { pt3dadd( 349.763, 613.319, 31.2766, 1.08 ) }
    dend_38 { pt3dadd( 349.397, 614.389, 31.7274, 0.9946 ) }
    dend_38 { pt3dadd( 349.115, 615.478, 32.1658, 0.7866 ) }
    dend_38 { pt3dadd( 348.648, 616.471, 32.5825, 0.6432 ) }
    dend_38 { pt3dadd( 347.53, 616.642, 32.9546, 0.8024 ) }
    dend_38 { pt3dadd( 346.425, 616.832, 33.2629, 0.8654 ) }
    dend_38 { pt3dadd( 345.432, 617.398, 33.5073, 0.9648 ) }
    dend_38 { pt3dadd( 344.449, 617.976, 33.7008, 0.776 ) }
    dend_38 { pt3dadd( 343.48, 618.383, 33.8545, 0.6352 ) }
    dend_38 { pt3dadd( 342.453, 617.96, 34.0119, 0.731 ) }
    dend_38 { pt3dadd( 341.534, 617.289, 34.2264, 0.7782 ) }
    dend_38 { pt3dadd( 340.502, 616.939, 34.5416, 0.5826 ) }
    dend_38 { pt3dadd( 339.416, 617.098, 34.956, 0.451 ) }
    dend_38 { pt3dadd( 338.828, 617.999, 35.4337, 0.459 ) }
    dend_38 { pt3dadd( 337.972, 618.723, 35.9257, 0.6228 ) }
    dend_38 { pt3dadd( 337.403, 619.705, 36.3821, 0.8902 ) }
    dend_38 { pt3dadd( 336.985, 620.718, 36.794, 0.876 ) }
    dend_38 { pt3dadd( 337.52, 621.703, 37.2064, 0.8088 ) }
    dend_38 { pt3dadd( 337.577, 622.758, 37.6474, 0.6518 ) }
    dend_38 { pt3dadd( 336.551, 623.16, 38.1214, 0.7486 ) }
    dend_38 { pt3dadd( 335.766, 623.881, 38.5731, 0.8744 ) }
    dend_38 { pt3dadd( 335.357, 624.942, 38.992, 0.9114 ) }
    dend_38 { pt3dadd( 335.224, 625.999, 39.3915, 0.7886 ) }
    dend_38 { pt3dadd( 335.827, 626.902, 39.7986, 0.574 ) }
    dend_38 { pt3dadd( 335.87, 627.999, 40.1554, 0.5714 ) }
    dend_38 { pt3dadd( 335.246, 628.927, 40.4849, 0.4774 ) }
    dend_38 { pt3dadd( 334.331, 629.605, 40.822, 0.5066 ) }
    dend_38 { pt3dadd( 333.335, 630.154, 41.1827, 0.4892 ) }
    dend_38 { pt3dadd( 332.563, 630.876, 41.5803, 0.5758 ) }
    dend_38 { pt3dadd( 332.1, 631.761, 42.1179, 0.8448 ) }
    dend_38 { pt3dadd( 331.055, 631.975, 42.7451, 1.0456 ) }
    dend_38 { pt3dadd( 330.003, 631.788, 43.4344, 1.0348 ) }
    dend_38 { pt3dadd( 328.964, 631.992, 44.1207, 0.8144 ) }
    dend_38 { pt3dadd( 328.036, 632.611, 44.7577, 0.9204 ) }
    dend_38 { pt3dadd( 327.013, 633.048, 45.33, 0.9082 ) }
    dend_38 { pt3dadd( 326.108, 633.65, 45.792, 0.7544 ) }
    dend_38 { pt3dadd( 325.403, 634.548, 46.1678, 0.649 ) }
    dend_38 { pt3dadd( 324.604, 635.364, 46.4758, 0.4952 ) }
    dend_38 { pt3dadd( 323.527, 635.7, 46.7482, 0.4654 ) }
    dend_38 { pt3dadd( 322.847, 636.598, 47.0635, 0.5436 ) }
    dend_38 { pt3dadd( 321.995, 637.301, 47.4631, 0.7276 ) }
    dend_38 { pt3dadd( 321.109, 637.864, 47.9833, 0.6508 ) }
    dend_38 { pt3dadd( 320.098, 638.272, 48.5338, 0.7068 ) }
    dend_38 { pt3dadd( 319.086, 638.752, 49.0249, 0.7628 ) }
    dend_38 { pt3dadd( 317.975, 638.953, 49.4522, 0.6412 ) }
    dend_38 { pt3dadd( 317.074, 639.618, 49.7711, 0.594 ) }
    dend_38 { pt3dadd( 316.418, 640.543, 49.94, 0.7864 ) }
    dend_38 { pt3dadd( 315.577, 641.312, 50.001, 0.927 ) }
    dend_38 { pt3dadd( 314.685, 642.025, 50.0139, 0.865 ) }
    dend_38 { pt3dadd( 313.773, 642.712, 50.0279, 0.944 ) }
    dend_38 { pt3dadd( 312.885, 643.419, 50.0794, 0.8344 ) }
    dend_38 { pt3dadd( 311.993, 644.106, 50.195, 0.7298 ) }
    dend_38 { pt3dadd( 310.977, 644.63, 50.3776, 0.5152 ) }
    dend_38 { pt3dadd( 310.042, 645.257, 50.6556, 0.4476 ) }
    dend_38 { pt3dadd( 308.927, 645.304, 51.0272, 0.548 ) }
    dend_38 { pt3dadd( 307.913, 645.788, 51.4567, 0.5536 ) }
    dend_38 { pt3dadd( 307.076, 645.152, 52.0117, 0.5254 ) }
    dend_38 { pt3dadd( 306.173, 644.562, 52.6148, 0.431 ) }
    dend_38 { pt3dadd( 305.081, 644.365, 53.1686, 0.4606 ) }
    dend_38 { pt3dadd( 303.953, 644.319, 53.6393, 0.4388 ) }
    dend_38 { pt3dadd( 302.896, 643.897, 54.0117, 0.5404 ) }
    dend_38 { pt3dadd( 301.791, 643.61, 54.278, 0.498 ) }
    dend_38 { pt3dadd( 300.667, 643.391, 54.441, 0.3956 ) }
    dend_38 { pt3dadd( 299.53, 643.269, 54.5336, 0.32 ) }
    dend_38 { pt3dadd( 298.386, 643.269, 54.5902, 0.3128 ) }
    dend_38 { pt3dadd( 297.247, 643.256, 54.6216, 0.3398 ) }
    dend_38 { pt3dadd( 296.146, 642.964, 54.6585, 0.4232 ) }
    dend_38 { pt3dadd( 295.046, 642.659, 54.7378, 0.4156 ) }
    dend_38 { pt3dadd( 293.969, 642.289, 54.8652, 0.5024 ) }
    dend_38 { pt3dadd( 292.957, 641.77, 55.0312, 0.402 ) }
    dend_38 { pt3dadd( 291.823, 641.651, 55.2101, 0.3418 ) }
    dend_38 { pt3dadd( 290.686, 641.559, 55.3804, 0.305 ) }
    dend_38 { pt3dadd( 289.546, 641.465, 55.5209, 0.3304 ) }
    dend_38 { pt3dadd( 288.402, 641.493, 55.6228, 0.3814 ) }
    dend_38 { pt3dadd( 287.261, 641.563, 55.7365, 0.4576 ) }
    // Section: dend_37, id: dend_37, parent: soma_0 (entry count 92/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 361.111, 606.843, 22.8477, 0.3604 ) }
    dend_37 { pt3dadd( 361.212, 607.975, 22.5821, 0.4238 ) }
    dend_37 { pt3dadd( 361.696, 608.92, 22.2758, 0.6002 ) }
    dend_37 { pt3dadd( 362.585, 609.598, 21.9294, 0.6402 ) }
    dend_37 { pt3dadd( 363.412, 610.353, 21.5687, 0.7358 ) }
    dend_37 { pt3dadd( 363.825, 611.367, 21.221, 0.5806 ) }
    dend_37 { pt3dadd( 363.551, 612.405, 20.9003, 0.5326 ) }
    dend_37 { pt3dadd( 362.807, 613.249, 20.6287, 0.6528 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_37 { pt3dadd( 361.919, 613.968, 20.428, 0.7756 ) }
    dend_37 { pt3dadd( 361.17, 614.821, 20.2949, 0.8036 ) }
    dend_37 { pt3dadd( 360.851, 615.891, 20.207, 0.9082 ) }
    dend_37 { pt3dadd( 360.737, 617.028, 20.1364, 1.0764 ) }
    dend_37 { pt3dadd( 360.438, 618.124, 20.074, 1.284 ) }
    dend_37 { pt3dadd( 360.008, 619.183, 20.019, 1.2596 ) }
    dend_37 { pt3dadd( 359.616, 620.257, 19.9739, 1.1422 ) }
    dend_37 { pt3dadd( 359.217, 621.328, 19.9456, 0.8172 ) }
    dend_37 { pt3dadd( 358.616, 622.295, 19.9408, 0.7362 ) }
    dend_37 { pt3dadd( 357.715, 622.972, 19.9639, 1.0276 ) }
    dend_37 { pt3dadd( 356.712, 623.514, 20.0162, 1.255 ) }
    dend_37 { pt3dadd( 355.722, 624.085, 20.0805, 1.3656 ) }
    dend_37 { pt3dadd( 354.73, 624.654, 20.1361, 1.2488 ) }
    dend_37 { pt3dadd( 353.7, 625.148, 20.1657, 0.9926 ) }
    dend_37 { pt3dadd( 352.818, 625.863, 20.1557, 0.9404 ) }
    dend_37 { pt3dadd( 352.237, 626.835, 20.0988, 1.0788 ) }
    dend_37 { pt3dadd( 351.813, 627.895, 19.9954, 1.1086 ) }
    dend_37 { pt3dadd( 351.606, 629.012, 19.8493, 1.1212 ) }
    dend_37 { pt3dadd( 351.208, 630.065, 19.6476, 0.8938 ) }
    dend_37 { pt3dadd( 350.63, 631.028, 19.4074, 1.0028 ) }
    dend_37 { pt3dadd( 349.943, 631.933, 19.1833, 1.146 ) }
    dend_37 { pt3dadd( 349.407, 632.943, 19.0207, 1.2408 ) }
    dend_37 { pt3dadd( 348.959, 633.995, 18.9419, 1.1004 ) }
    dend_37 { pt3dadd( 348.584, 635.069, 18.9498, 1.2308 ) }
    dend_37 { pt3dadd( 347.945, 636.009, 19.0068, 1.406 ) }
    dend_37 { pt3dadd( 347.137, 636.818, 19.1019, 1.3676 ) }
    dend_37 { pt3dadd( 346.33, 637.627, 19.2254, 1.001 ) }
    dend_37 { pt3dadd( 345.527, 638.44, 19.3678, 0.8394 ) }
    dend_37 { pt3dadd( 344.747, 639.275, 19.5168, 0.771 ) }
    dend_37 { pt3dadd( 344.049, 640.174, 19.6826, 0.8936 ) }
    dend_37 { pt3dadd( 343.48, 641.157, 19.8861, 1.0548 ) }
    dend_37 { pt3dadd( 342.991, 642.18, 20.1222, 1.2178 ) }
    dend_37 { pt3dadd( 342.554, 643.228, 20.369, 1.2646 ) }
    dend_37 { pt3dadd( 342.168, 644.299, 20.6072, 1.2166 ) }
    dend_37 { pt3dadd( 341.788, 645.372, 20.828, 1.0966 ) }
    dend_37 { pt3dadd( 341.415, 646.442, 21.03, 0.796 ) }
    dend_37 { pt3dadd( 341.061, 647.525, 21.1819, 0.6178 ) }
    dend_37 { pt3dadd( 340.514, 648.514, 21.2459, 0.5056 ) }
    dend_37 { pt3dadd( 339.632, 649.211, 21.2113, 0.6118 ) }
    dend_37 { pt3dadd( 338.674, 649.824, 21.0875, 0.6556 ) }
    dend_37 { pt3dadd( 337.798, 650.542, 20.8986, 0.5652 ) }
    dend_37 { pt3dadd( 337.233, 651.506, 20.6652, 0.5436 ) }
    dend_37 { pt3dadd( 336.991, 652.61, 20.4231, 0.7114 ) }
    dend_37 { pt3dadd( 336.684, 653.708, 20.2138, 0.9274 ) }
    dend_37 { pt3dadd( 336.47, 654.829, 20.0531, 0.8742 ) }
    dend_37 { pt3dadd( 336.014, 655.875, 19.9516, 0.6908 ) }
    dend_37 { pt3dadd( 335.397, 656.837, 19.9203, 0.7608 ) }
    dend_37 { pt3dadd( 334.835, 657.833, 19.9474, 0.7326 ) }
    dend_37 { pt3dadd( 334.294, 658.84, 20.0211, 0.759 ) }
    dend_37 { pt3dadd( 333.795, 659.867, 20.1315, 0.8854 ) }
    dend_37 { pt3dadd( 333.342, 660.914, 20.2779, 0.9712 ) }
    dend_37 { pt3dadd( 332.868, 661.948, 20.4482, 0.9364 ) }
    dend_37 { pt3dadd( 332.213, 662.879, 20.6251, 0.897 ) }
    dend_37 { pt3dadd( 331.397, 663.67, 20.803, 0.932 ) }
    dend_37 { pt3dadd( 330.454, 664.309, 20.9676, 0.9304 ) }
    dend_37 { pt3dadd( 329.516, 664.952, 21.0976, 0.7912 ) }
    dend_37 { pt3dadd( 328.77, 665.816, 21.1771, 0.7374 ) }
    dend_37 { pt3dadd( 328.17, 666.788, 21.1989, 0.7908 ) }
    dend_37 { pt3dadd( 327.475, 667.696, 21.1616, 1.0612 ) }
    dend_37 { pt3dadd( 326.732, 668.562, 21.0652, 1.187 ) }
    dend_37 { pt3dadd( 326.062, 669.482, 20.9103, 1.1848 ) }
    dend_37 { pt3dadd( 325.348, 670.367, 20.7129, 0.9518 ) }
    dend_37 { pt3dadd( 324.617, 671.231, 20.4876, 0.9436 ) }
    dend_37 { pt3dadd( 323.753, 671.971, 20.2595, 0.931 ) }
    dend_37 { pt3dadd( 322.973, 672.797, 20.0516, 0.895 ) }
    dend_37 { pt3dadd( 322.379, 673.768, 19.8792, 0.6594 ) }
    dend_37 { pt3dadd( 321.836, 674.729, 19.7485, 0.5862 ) }
    dend_37 { pt3dadd( 320.837, 675.283, 19.657, 0.7438 ) }
    dend_37 { pt3dadd( 319.782, 675.724, 19.5971, 0.9852 ) }
    dend_37 { pt3dadd( 318.7, 676.096, 19.5576, 0.9926 ) }
    dend_37 { pt3dadd( 317.651, 676.53, 19.5283, 0.8546 ) }
    dend_37 { pt3dadd( 316.799, 677.263, 19.5017, 0.65 ) }
    dend_37 { pt3dadd( 316.251, 678.265, 19.4729, 0.7076 ) }
    dend_37 { pt3dadd( 315.742, 679.286, 19.4396, 0.7536 ) }
    dend_37 { pt3dadd( 315.107, 680.237, 19.4022, 0.9036 ) }
    dend_37 { pt3dadd( 314.481, 681.194, 19.3588, 1.098 ) }
    dend_37 { pt3dadd( 313.798, 682.108, 19.3056, 1.177 ) }
    dend_37 { pt3dadd( 312.985, 682.902, 19.2518, 1.0876 ) }
    dend_37 { pt3dadd( 312.1, 683.618, 19.2184, 0.9242 ) }
    dend_37 { pt3dadd( 311.441, 684.535, 19.2211, 0.8384 ) }
    dend_37 { pt3dadd( 310.945, 685.56, 19.253, 0.768 ) }
    dend_37 { pt3dadd( 310.323, 686.52, 19.317, 0.895 ) }
    dend_37 { pt3dadd( 309.724, 687.492, 19.4229, 0.7958 ) }
    dend_37 { pt3dadd( 309.212, 688.507, 19.5735, 0.633 ) }
    dend_37 { pt3dadd( 308.94, 689.596, 19.7592, 0.4596 ) }
    dend_37 { pt3dadd( 308.685, 690.665, 19.9712, 0.4278 ) }
    dend_37 { pt3dadd( 307.932, 691.472, 20.1943, 0.5642 ) }
    dend_37 { pt3dadd( 307.13, 692.231, 20.4027, 0.5564 ) }
    dend_37 { pt3dadd( 306.726, 693.282, 20.5708, 0.6636 ) }
    dend_37 { pt3dadd( 306.387, 694.366, 20.6933, 0.7298 ) }
    dend_37 { pt3dadd( 305.927, 695.412, 20.7754, 0.5792 ) }
    dend_37 { pt3dadd( 305.576, 696.498, 20.8274, 0.483 ) }
    dend_37 { pt3dadd( 305.375, 697.623, 20.8636, 0.5604 ) }
    dend_37 { pt3dadd( 305.104, 698.724, 20.8982, 0.6074 ) }
    dend_37 { pt3dadd( 304.483, 699.65, 20.9409, 0.4758 ) }
    dend_37 { pt3dadd( 303.508, 699.705, 20.9964, 0.3788 ) }
    dend_37 { pt3dadd( 302.548, 699.103, 21.0727, 0.4002 ) }
    dend_37 { pt3dadd( 301.603, 699.378, 21.1784, 0.3782 ) }
    dend_37 { pt3dadd( 301.188, 700.44, 21.2893, 0.4076 ) }
    dend_37 { pt3dadd( 300.665, 701.458, 21.4035, 0.35 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_37 { pt3dadd( 299.998, 702.387, 21.5334, 0.33 ) }
    dend_37 { pt3dadd( 299.445, 703.386, 21.6948, 0.33 ) }
    dend_37 { pt3dadd( 299.042, 704.451, 21.9037, 0.379 ) }
    dend_37 { pt3dadd( 298.578, 705.49, 22.1651, 0.4604 ) }
    dend_37 { pt3dadd( 298.064, 706.502, 22.4764, 0.6562 ) }
    dend_37 { pt3dadd( 297.599, 707.533, 22.8395, 0.8016 ) }
    dend_37 { pt3dadd( 297.19, 708.576, 23.2571, 0.7562 ) }
    dend_37 { pt3dadd( 296.732, 709.598, 23.7106, 0.5984 ) }
    dend_37 { pt3dadd( 296.249, 710.613, 24.1777, 0.435 ) }
    dend_37 { pt3dadd( 295.746, 711.629, 24.626, 0.419 ) }
    dend_37 { pt3dadd( 295.019, 712.298, 25.0351, 0.3706 ) }
    dend_37 { pt3dadd( 293.961, 712.042, 25.4171, 0.3702 ) }
    dend_37 { pt3dadd( 293.066, 711.898, 25.854, 0.395 ) }
    dend_37 { pt3dadd( 293.423, 712.963, 26.2912, 0.5448 ) }
    dend_37 { pt3dadd( 294.142, 713.841, 26.7019, 0.548 ) }
    dend_37 { pt3dadd( 294.783, 714.773, 27.0797, 0.5134 ) }
    dend_37 { pt3dadd( 295.709, 715.423, 27.4461, 0.417 ) }
    dend_37 { pt3dadd( 296.13, 716.319, 27.7854, 0.3962 ) }
    dend_37 { pt3dadd( 295.914, 717.412, 28.1232, 0.5042 ) }
    dend_37 { pt3dadd( 296.048, 718.53, 28.4858, 0.4518 ) }
    dend_37 { pt3dadd( 296.179, 719.641, 28.8868, 0.4374 ) }
    dend_37 { pt3dadd( 296.104, 720.754, 29.3227, 0.4658 ) }
    dend_37 { pt3dadd( 295.927, 721.861, 29.773, 0.7096 ) }
    dend_37 { pt3dadd( 295.69, 722.964, 30.2086, 0.6906 ) }
    dend_37 { pt3dadd( 295.955, 723.945, 30.6074, 0.8832 ) }
    dend_37 { pt3dadd( 296.883, 724.556, 30.9588, 0.82 ) }
    dend_37 { pt3dadd( 297.91, 725.054, 31.2673, 0.6834 ) }
    dend_37 { pt3dadd( 298.597, 725.901, 31.549, 0.7544 ) }
    dend_37 { pt3dadd( 299.06, 726.943, 31.829, 0.6838 ) }
    dend_37 { pt3dadd( 299.583, 727.953, 32.1387, 0.8488 ) }
    dend_37 { pt3dadd( 300.258, 728.858, 32.5004, 0.863 ) }
    dend_37 { pt3dadd( 301.017, 729.696, 32.9221, 0.9316 ) }
    dend_37 { pt3dadd( 301.897, 730.371, 33.4214, 0.854 ) }
    dend_37 { pt3dadd( 302.351, 731.33, 33.9945, 0.7882 ) }
    dend_37 { pt3dadd( 302.621, 732.404, 34.6125, 0.7452 ) }
    dend_37 { pt3dadd( 302.34, 733.366, 35.2932, 0.5118 ) }
    dend_37 { pt3dadd( 302.105, 733.979, 35.996, 0.3666 ) }
    dend_37 { pt3dadd( 302.546, 735.007, 36.6271, 0.3034 ) }
    dend_37 { pt3dadd( 302.132, 736.006, 37.1854, 0.3292 ) }
    dend_37 { pt3dadd( 301.392, 736.877, 37.6827, 0.37 ) }
    dend_37 { pt3dadd( 300.354, 736.868, 38.1772, 0.4802 ) }
    dend_37 { pt3dadd( 299.57, 736.104, 38.703, 0.517 ) }
    dend_37 { pt3dadd( 298.819, 736.066, 39.3296, 0.7118 ) }
    dend_37 { pt3dadd( 298.635, 736.893, 41.172, 0.6864 ) }
    // Section: dend_36, id: dend_36, parent: soma_0 (entry count 44/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 355.334, 605.945, 21.3119, 0.4774 ) }
    dend_36 { pt3dadd( 354.563, 606.739, 21.0057, 0.518 ) }
    dend_36 { pt3dadd( 353.494, 606.867, 20.7379, 0.6834 ) }
    dend_36 { pt3dadd( 352.391, 606.582, 20.4917, 0.781 ) }
    dend_36 { pt3dadd( 351.311, 606.224, 20.2402, 0.8322 ) }
    dend_36 { pt3dadd( 350.283, 605.75, 19.9698, 0.872 ) }
    dend_36 { pt3dadd( 349.217, 605.37, 19.679, 0.7564 ) }
    dend_36 { pt3dadd( 348.11, 605.131, 19.3757, 0.7736 ) }
    dend_36 { pt3dadd( 347.013, 605.319, 19.0691, 0.597 ) }
    dend_36 { pt3dadd( 346.042, 605.891, 18.7745, 0.5952 ) }
    dend_36 { pt3dadd( 345.009, 606.367, 18.5087, 0.614 ) }
    dend_36 { pt3dadd( 343.882, 606.463, 18.2813, 0.7688 ) }
    dend_36 { pt3dadd( 342.75, 606.615, 18.0855, 0.702 ) }
    dend_36 { pt3dadd( 341.61, 606.683, 17.9078, 0.6952 ) }
    dend_36 { pt3dadd( 340.477, 606.829, 17.7332, 0.572 ) }
    dend_36 { pt3dadd( 339.505, 607.392, 17.5365, 0.6514 ) }
    dend_36 { pt3dadd( 338.594, 608.073, 17.3083, 0.6764 ) }
    dend_36 { pt3dadd( 337.647, 608.698, 17.0327, 0.63 ) }
    dend_36 { pt3dadd( 336.562, 609.032, 16.7464, 0.5366 ) }
    dend_36 { pt3dadd( 335.524, 609.503, 16.4685, 0.627 ) }
    dend_36 { pt3dadd( 334.527, 610.06, 16.2054, 0.661 ) }
    dend_36 { pt3dadd( 333.462, 610.457, 15.9462, 0.6864 ) }
    dend_36 { pt3dadd( 332.446, 610.782, 15.12, 0.2288 ) }
    // Section: dend_35, id: dend_35, parent: soma_0 (entry count 67/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 360.271, 595.157, 22.4434, 0.3628 ) }
    dend_35 { pt3dadd( 360.25, 594.021, 22.1422, 0.435 ) }
    dend_35 { pt3dadd( 360.132, 592.9, 21.8431, 0.5884 ) }
    dend_35 { pt3dadd( 359.69, 591.872, 21.5554, 0.7768 ) }
    dend_35 { pt3dadd( 359.192, 590.861, 21.2922, 0.9058 ) }
    dend_35 { pt3dadd( 358.995, 589.743, 21.0777, 1.0702 ) }
    dend_35 { pt3dadd( 358.891, 588.605, 20.9031, 1.0522 ) }
    dend_35 { pt3dadd( 358.643, 587.492, 20.746, 0.985 ) }
    dend_35 { pt3dadd( 358.151, 586.469, 20.5889, 0.7946 ) }
    dend_35 { pt3dadd( 357.398, 585.624, 20.4045, 0.7606 ) }
    dend_35 { pt3dadd( 356.591, 584.824, 20.1647, 0.751 ) }
    dend_35 { pt3dadd( 356.471, 583.797, 19.8458, 0.703 ) }
    dend_35 { pt3dadd( 357.402, 583.211, 19.4712, 0.7614 ) }
    dend_35 { pt3dadd( 358.373, 582.643, 19.0579, 0.6104 ) }
    dend_35 { pt3dadd( 358.543, 581.551, 18.6136, 0.674 ) }
    dend_35 { pt3dadd( 358.342, 580.474, 18.1684, 0.4966 ) }
    dend_35 { pt3dadd( 358.846, 579.459, 17.7438, 0.458 ) }
    dend_35 { pt3dadd( 359.184, 578.429, 17.3649, 0.3502 ) }
    dend_35 { pt3dadd( 358.689, 577.404, 17.0306, 0.3248 ) }
    dend_35 { pt3dadd( 358.21, 576.609, 16.7199, 0.3474 ) }
    dend_35 { pt3dadd( 357.97, 575.729, 16.3534, 0.2796 ) }
    dend_35 { pt3dadd( 358.97, 575.185, 15.792, 0.2288 ) }
    // Section: dend_18, id: dend_18, parent: soma_0 (entry count 89/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( 362.323, 595.422, 24.197, 0.288 ) }
    dend_18 { pt3dadd( 362.753, 594.362, 24.2295, 0.2994 ) }
    dend_18 { pt3dadd( 363.183, 593.302, 24.2661, 0.3216 ) }
    dend_18 { pt3dadd( 363.476, 592.198, 24.304, 0.3568 ) }
    dend_18 { pt3dadd( 363.624, 591.066, 24.3442, 0.4516 ) }
    dend_18 { pt3dadd( 364.398, 590.305, 24.4043, 0.483 ) }
    dend_18 { pt3dadd( 365.077, 589.388, 24.4433, 0.557 ) }
    dend_18 { pt3dadd( 365.608, 588.374, 24.4427, 0.8448 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 97/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( 363.677, 606.043, 24.2696, 0.397 ) }
    dend_11 { pt3dadd( 364.245, 607.036, 24.3183, 0.4874 ) }
    dend_11 { pt3dadd( 365.26, 607.546, 24.3743, 0.7374 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_11 { pt3dadd( 366.398, 607.6, 24.4459, 0.8018 ) }
    dend_11 { pt3dadd( 367.535, 607.711, 24.5223, 0.7986 ) }
    dend_11 { pt3dadd( 368.568, 608.2, 24.5974, 0.702 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 3/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 355.886, 596.362, 25.4108, 0.445 ) }
    dend_0 { pt3dadd( 355.027, 595.612, 25.5916, 0.607 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 5/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 371.466, 628.722, 25.2294, 1.0 ) }
    axon_1 { pt3dadd( 377.307, 642.538, 25.2294, 1.0 ) }
    axon_1 { pt3dadd( 383.148, 656.354, 25.2294, 1.0 ) }
    // Section: dend_26, id: dend_26, parent: dend_18 (entry count 8/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 365.608, 588.374, 24.4427, 0.8448 ) }
    dend_26 { pt3dadd( 366.29, 587.562, 24.3777, 0.877 ) }
    dend_26 { pt3dadd( 367.2, 586.881, 24.2467, 0.8532 ) }
    dend_26 { pt3dadd( 368.125, 586.231, 24.0453, 0.7582 ) }
    dend_26 { pt3dadd( 368.887, 585.391, 23.8093, 0.8282 ) }
    dend_26 { pt3dadd( 369.766, 584.666, 23.5762, 0.9068 ) }
    dend_26 { pt3dadd( 370.677, 583.978, 23.3713, 1.0722 ) }
    dend_26 { pt3dadd( 371.516, 583.203, 23.2107, 1.0558 ) }
    dend_26 { pt3dadd( 372.417, 582.496, 23.0995, 0.9916 ) }
    dend_26 { pt3dadd( 373.46, 582.027, 23.0334, 0.8068 ) }
    dend_26 { pt3dadd( 374.582, 581.806, 22.9988, 0.7848 ) }
    dend_26 { pt3dadd( 375.662, 581.428, 22.9841, 0.7886 ) }
    dend_26 { pt3dadd( 376.729, 581.018, 22.9804, 0.8074 ) }
    dend_26 { pt3dadd( 377.809, 580.641, 22.981, 0.786 ) }
    dend_26 { pt3dadd( 378.953, 580.682, 22.9812, 0.7892 ) }
    dend_26 { pt3dadd( 380.037, 581.048, 22.978, 0.5888 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 24/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( 365.608, 588.374, 24.4427, 0.8448 ) }
    dend_19 { pt3dadd( 365.773, 586.793, 24.0113, 1.1858 ) }
    dend_19 { pt3dadd( 366.128, 585.706, 23.9054, 1.1738 ) }
    dend_19 { pt3dadd( 366.376, 584.591, 23.7851, 0.973 ) }
    dend_19 { pt3dadd( 366.722, 583.502, 23.6705, 1.0108 ) }
    dend_19 { pt3dadd( 366.699, 582.361, 23.5588, 0.919 ) }
    dend_19 { pt3dadd( 366.411, 581.257, 23.44, 0.85 ) }
    dend_19 { pt3dadd( 366.283, 580.122, 23.3271, 0.916 ) }
    // Section: dend_17, id: dend_17, parent: dend_11 (entry count 32/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( 368.568, 608.2, 24.5974, 0.702 ) }
    dend_17 { pt3dadd( 369.824, 607.983, 24.1844, 0.8394 ) }
    dend_17 { pt3dadd( 370.928, 608.019, 23.917, 0.8582 ) }
    dend_17 { pt3dadd( 372.028, 608.307, 23.6255, 0.862 ) }
    dend_17 { pt3dadd( 373.147, 608.438, 23.3127, 0.7902 ) }
    dend_17 { pt3dadd( 374.247, 608.227, 22.9922, 0.5832 ) }
    dend_17 { pt3dadd( 375.16, 607.604, 22.6809, 0.5582 ) }
    dend_17 { pt3dadd( 375.758, 606.643, 22.4004, 0.5992 ) }
    dend_17 { pt3dadd( 376.162, 605.576, 22.1527, 0.709 ) }
    dend_17 { pt3dadd( 376.505, 604.489, 21.9314, 0.7492 ) }
    dend_17 { pt3dadd( 376.9, 603.417, 21.7361, 0.7012 ) }
    dend_17 { pt3dadd( 377.402, 602.393, 21.5596, 0.7494 ) }
    dend_17 { pt3dadd( 377.973, 601.403, 21.3916, 0.6304 ) }
    dend_17 { pt3dadd( 378.504, 600.393, 21.2191, 0.505 ) }
    dend_17 { pt3dadd( 379.064, 599.402, 21.0314, 0.4984 ) }
    dend_17 { pt3dadd( 379.797, 598.551, 20.8263, 0.5336 ) }
    dend_17 { pt3dadd( 380.794, 598.063, 20.6114, 0.597 ) }
    dend_17 { pt3dadd( 381.919, 597.875, 20.3986, 0.4948 ) }
    dend_17 { pt3dadd( 383.04, 597.67, 20.1939, 0.457 ) }
    dend_17 { pt3dadd( 384.162, 597.464, 20.0049, 0.5654 ) }
    dend_17 { pt3dadd( 385.285, 597.256, 19.8423, 0.5866 ) }
    dend_17 { pt3dadd( 386.367, 596.898, 19.6976, 0.5824 ) }
    dend_17 { pt3dadd( 387.305, 596.277, 19.5513, 0.5576 ) }
    dend_17 { pt3dadd( 388.065, 595.431, 19.3919, 0.5944 ) }
    dend_17 { pt3dadd( 388.965, 594.785, 19.2158, 0.49 ) }
    dend_17 { pt3dadd( 390.071, 594.697, 19.034, 0.4468 ) }
    dend_17 { pt3dadd( 391.2, 594.849, 18.8614, 0.5528 ) }
    dend_17 { pt3dadd( 392.33, 595.017, 18.7105, 0.5328 ) }
    dend_17 { pt3dadd( 393.457, 594.914, 18.5906, 0.6308 ) }
    dend_17 { pt3dadd( 394.521, 594.512, 18.5035, 0.6148 ) }
    dend_17 { pt3dadd( 395.553, 594.02, 18.4463, 0.6284 ) }
    dend_17 { pt3dadd( 396.61, 593.584, 18.4044, 0.6742 ) }
    dend_17 { pt3dadd( 397.697, 593.23, 18.3519, 0.6592 ) }
    dend_17 { pt3dadd( 398.761, 592.815, 18.273, 0.658 ) }
    dend_17 { pt3dadd( 399.813, 592.37, 18.1631, 0.756 ) }
    dend_17 { pt3dadd( 400.923, 592.126, 18.0206, 0.6798 ) }
    dend_17 { pt3dadd( 402.053, 592.194, 17.8407, 0.6468 ) }
    dend_17 { pt3dadd( 403.19, 592.206, 17.6338, 0.5164 ) }
    dend_17 { pt3dadd( 404.315, 592.372, 17.4197, 0.383 ) }
    dend_17 { pt3dadd( 405.394, 592.73, 17.1998, 0.2966 ) }
    dend_17 { pt3dadd( 406.435, 593.188, 16.985, 0.2684 ) }
    dend_17 { pt3dadd( 407.488, 593.627, 16.7938, 0.2626 ) }
    dend_17 { pt3dadd( 408.574, 593.983, 16.6374, 0.2542 ) }
    dend_17 { pt3dadd( 409.68, 594.27, 16.5184, 0.2288 ) }
    dend_17 { pt3dadd( 410.538, 595.006, 16.3559, 0.2288 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 77/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( 368.568, 608.2, 24.5974, 0.702 ) }
    dend_12 { pt3dadd( 369.285, 608.884, 24.6612, 0.7334 ) }
    dend_12 { pt3dadd( 369.922, 609.829, 24.6916, 0.6854 ) }
    dend_12 { pt3dadd( 370.482, 610.824, 24.6786, 0.8836 ) }
    dend_12 { pt3dadd( 370.813, 611.913, 24.629, 1.0014 ) }
    dend_12 { pt3dadd( 370.809, 613.049, 24.5628, 1.0592 ) }
    dend_12 { pt3dadd( 370.593, 614.17, 24.498, 1.03 ) }
    dend_12 { pt3dadd( 370.622, 615.308, 24.4481, 0.9504 ) }
    dend_12 { pt3dadd( 371.115, 616.328, 24.4241, 0.928 ) }
    dend_12 { pt3dadd( 371.663, 617.33, 24.4344, 0.9654 ) }
    dend_12 { pt3dadd( 372.353, 618.24, 24.4592, 1.1092 ) }
    dend_12 { pt3dadd( 373.068, 619.133, 24.4754, 1.2428 ) }
    dend_12 { pt3dadd( 373.599, 620.143, 24.4644, 1.4496 ) }
    dend_12 { pt3dadd( 374.151, 621.145, 24.4105, 1.574 ) }
    dend_12 { pt3dadd( 374.993, 621.909, 24.3001, 1.4606 ) }
    dend_12 { pt3dadd( 375.693, 622.807, 24.1455, 1.318 ) }
    dend_12 { pt3dadd( 376.358, 623.732, 23.9645, 1.1834 ) }
    dend_12 { pt3dadd( 377.006, 624.666, 23.7676, 0.9904 ) }
    dend_12 { pt3dadd( 377.767, 625.515, 23.5822, 0.8148 ) }
    // Section: dend_8, id: dend_8, parent: dend_0 (entry count 96/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( 355.027, 595.612, 25.5916, 0.607 ) }
    dend_8 { pt3dadd( 354.547, 595.728, 23.3878, 0.2288 ) }
    dend_8 { pt3dadd( 353.585, 595.346, 22.8999, 0.2856 ) }
    dend_8 { pt3dadd( 352.501, 595.049, 22.7081, 0.2948 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_8 { pt3dadd( 351.362, 594.974, 22.5383, 0.3128 ) }
    dend_8 { pt3dadd( 350.259, 594.716, 22.4073, 0.3412 ) }
    dend_8 { pt3dadd( 349.281, 594.143, 22.3279, 0.4186 ) }
    dend_8 { pt3dadd( 348.362, 593.464, 22.308, 0.443 ) }
    dend_8 { pt3dadd( 347.393, 592.859, 22.3445, 0.3782 ) }
    dend_8 { pt3dadd( 346.337, 592.431, 22.4117, 0.3362 ) }
    dend_8 { pt3dadd( 345.256, 592.057, 22.5012, 0.3362 ) }
    dend_8 { pt3dadd( 344.173, 591.687, 22.6088, 0.4154 ) }
    dend_8 { pt3dadd( 343.089, 591.326, 22.7333, 0.4066 ) }
    dend_8 { pt3dadd( 342.01, 590.949, 22.8785, 0.46 ) }
    dend_8 { pt3dadd( 340.945, 590.54, 23.0525, 0.449 ) }
    dend_8 { pt3dadd( 339.885, 590.119, 23.2616, 0.5056 ) }
    dend_8 { pt3dadd( 338.827, 589.7, 23.5072, 0.693 ) }
    dend_8 { pt3dadd( 337.769, 589.281, 23.7857, 0.8704 ) }
    dend_8 { pt3dadd( 336.717, 588.858, 24.091, 0.8794 ) }
    dend_8 { pt3dadd( 336.185, 587.954, 24.4315, 0.849 ) }
    dend_8 { pt3dadd( 336.106, 586.835, 24.7875, 0.792 ) }
    dend_8 { pt3dadd( 336.068, 585.706, 25.1353, 0.9168 ) }
    dend_8 { pt3dadd( 335.834, 584.595, 25.4467, 0.9466 ) }
    dend_8 { pt3dadd( 335.298, 583.591, 25.696, 1.0636 ) }
    dend_8 { pt3dadd( 334.482, 582.797, 25.8897, 0.9804 ) }
    dend_8 { pt3dadd( 333.69, 581.973, 26.0382, 0.9112 ) }
    dend_8 { pt3dadd( 332.959, 581.094, 26.1503, 1.0572 ) }
    dend_8 { pt3dadd( 332.305, 580.156, 26.2372, 1.1394 ) }
    dend_8 { pt3dadd( 331.588, 579.264, 26.3091, 1.0628 ) }
    dend_8 { pt3dadd( 330.81, 578.426, 26.3712, 0.8896 ) }
    dend_8 { pt3dadd( 330.139, 577.502, 26.4235, 0.7182 ) }
    dend_8 { pt3dadd( 329.587, 576.5, 26.4756, 0.818 ) }
    dend_8 { pt3dadd( 328.942, 575.557, 26.5254, 1.0354 ) }
    dend_8 { pt3dadd( 328.392, 574.553, 26.5529, 1.053 ) }
    dend_8 { pt3dadd( 327.893, 573.525, 26.5619, 1.1252 ) }
    dend_8 { pt3dadd( 327.416, 572.485, 26.5621, 1.0686 ) }
    dend_8 { pt3dadd( 326.93, 571.45, 26.5639, 0.9718 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 33/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 355.027, 595.612, 25.5916, 0.607 ) }
    dend_1 { pt3dadd( 353.724, 595.164, 25.8465, 0.9696 ) }
    dend_1 { pt3dadd( 352.631, 594.826, 25.9172, 1.19 ) }
    dend_1 { pt3dadd( 351.644, 594.256, 25.9466, 1.2674 ) }
    dend_1 { pt3dadd( 350.675, 593.649, 25.9373, 1.4162 ) }
    dend_1 { pt3dadd( 348.615, 592.67, 25.828, 1.337 ) }
    dend_1 { pt3dadd( 347.622, 592.105, 25.7628, 1.1586 ) }
    dend_1 { pt3dadd( 346.568, 591.659, 25.714, 1.0066 ) }
    dend_1 { pt3dadd( 345.491, 591.273, 25.6943, 1.0014 ) }
    dend_1 { pt3dadd( 344.354, 591.19, 25.7163, 1.0208 ) }
    dend_1 { pt3dadd( 343.242, 591.447, 25.7716, 0.9168 ) }
    dend_1 { pt3dadd( 342.113, 591.628, 25.8418, 1.1742 ) }
    // Section: dend_30, id: dend_30, parent: dend_26 (entry count 45/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( 380.037, 581.048, 22.978, 0.5888 ) }
    dend_30 { pt3dadd( 380.57, 580.556, 22.9827, 0.5308 ) }
    dend_30 { pt3dadd( 381.643, 580.204, 22.9723, 0.5042 ) }
    dend_30 { pt3dadd( 382.781, 580.088, 22.9407, 0.5196 ) }
    dend_30 { pt3dadd( 383.885, 579.856, 22.8891, 0.4626 ) }
    dend_30 { pt3dadd( 384.798, 579.222, 22.8186, 0.5434 ) }
    dend_30 { pt3dadd( 385.484, 578.308, 22.7306, 0.4734 ) }
    dend_30 { pt3dadd( 386.258, 577.495, 22.6276, 0.4954 ) }
    dend_30 { pt3dadd( 387.28, 577.021, 22.5124, 0.4862 ) }
    dend_30 { pt3dadd( 388.378, 576.712, 22.3792, 0.4836 ) }
    dend_30 { pt3dadd( 389.351, 576.165, 22.2293, 0.4074 ) }
    dend_30 { pt3dadd( 390.118, 575.328, 22.0743, 0.3848 ) }
    dend_30 { pt3dadd( 390.852, 574.456, 21.9236, 0.4532 ) }
    dend_30 { pt3dadd( 391.724, 573.726, 21.7831, 0.5022 ) }
    dend_30 { pt3dadd( 392.686, 573.109, 21.6541, 0.5134 ) }
    dend_30 { pt3dadd( 393.639, 572.479, 21.532, 0.4632 ) }
    dend_30 { pt3dadd( 394.363, 571.641, 21.4175, 0.4848 ) }
    dend_30 { pt3dadd( 394.971, 570.68, 21.3109, 0.6546 ) }
    dend_30 { pt3dadd( 395.655, 569.767, 21.1994, 0.7984 ) }
    dend_30 { pt3dadd( 396.364, 568.875, 21.0777, 0.7504 ) }
    dend_30 { pt3dadd( 397.148, 568.045, 20.9558, 0.5864 ) }
    dend_30 { pt3dadd( 398.008, 567.298, 20.8377, 0.4192 ) }
    dend_30 { pt3dadd( 398.929, 566.625, 20.7255, 0.3588 ) }
    dend_30 { pt3dadd( 399.904, 566.029, 20.6379, 0.409 ) }
    dend_30 { pt3dadd( 400.951, 565.583, 20.5936, 0.4006 ) }
    dend_30 { pt3dadd( 402.073, 565.443, 20.6014, 0.4202 ) }
    dend_30 { pt3dadd( 403.207, 565.348, 20.6536, 0.5144 ) }
    dend_30 { pt3dadd( 404.3, 565.034, 20.7238, 0.637 ) }
    dend_30 { pt3dadd( 405.311, 564.509, 20.7776, 0.66 ) }
    dend_30 { pt3dadd( 406.315, 563.96, 20.8026, 0.5504 ) }
    dend_30 { pt3dadd( 406.962, 563.054, 20.8001, 0.3986 ) }
    dend_30 { pt3dadd( 407.084, 561.937, 20.7778, 0.3256 ) }
    dend_30 { pt3dadd( 407.116, 560.793, 20.7483, 0.3218 ) }
    dend_30 { pt3dadd( 407.455, 559.711, 20.7253, 0.363 ) }
    dend_30 { pt3dadd( 408.365, 559.092, 20.7183, 0.435 ) }
    dend_30 { pt3dadd( 409.461, 559.284, 20.7276, 0.5886 ) }
    dend_30 { pt3dadd( 410.592, 559.449, 20.7512, 0.777 ) }
    dend_30 { pt3dadd( 411.734, 559.41, 20.7852, 0.9068 ) }
    dend_30 { pt3dadd( 412.831, 559.1, 20.8259, 1.0704 ) }
    dend_30 { pt3dadd( 413.781, 558.474, 20.8849, 1.06 ) }
    dend_30 { pt3dadd( 414.685, 557.776, 20.9484, 0.9624 ) }
    dend_30 { pt3dadd( 415.591, 557.076, 21.0045, 0.9324 ) }
    dend_30 { pt3dadd( 416.608, 556.556, 21.0334, 0.8306 ) }
    dend_30 { pt3dadd( 417.617, 556.021, 21.0291, 0.8666 ) }
    dend_30 { pt3dadd( 418.55, 555.363, 21.0012, 0.9858 ) }
    dend_30 { pt3dadd( 419.46, 554.686, 20.9619, 0.9522 ) }
    dend_30 { pt3dadd( 420.043, 553.703, 20.9645, 0.754 ) }
    dend_30 { pt3dadd( 420.873, 552.928, 21.0257, 0.5872 ) }
    dend_30 { pt3dadd( 421.828, 552.312, 21.148, 0.6766 ) }
    dend_30 { pt3dadd( 422.837, 551.783, 21.3086, 0.7376 ) }
    dend_30 { pt3dadd( 423.913, 551.406, 21.4895, 0.9028 ) }
    dend_30 { pt3dadd( 424.848, 550.758, 21.6669, 0.9554 ) }
    dend_30 { pt3dadd( 425.802, 550.131, 21.8229, 0.9126 ) }
    dend_30 { pt3dadd( 426.763, 549.515, 21.9578, 0.8268 ) }
    dend_30 { pt3dadd( 427.604, 548.742, 22.0638, 0.928 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( 428.342, 547.869, 22.1303, 0.9964 ) }
    dend_30 { pt3dadd( 429.016, 546.945, 22.149, 1.0156 ) }
    dend_30 { pt3dadd( 429.769, 546.084, 22.1327, 0.8878 ) }
    dend_30 { pt3dadd( 430.478, 545.187, 22.0963, 0.986 ) }
    dend_30 { pt3dadd( 431.294, 544.385, 22.0532, 0.9142 ) }
    dend_30 { pt3dadd( 432.217, 543.71, 22.018, 0.8698 ) }
    dend_30 { pt3dadd( 433.069, 542.947, 22.0014, 0.8144 ) }
    dend_30 { pt3dadd( 433.959, 542.229, 22.0084, 0.808 ) }
    dend_30 { pt3dadd( 435.009, 541.777, 22.038, 0.7874 ) }
    dend_30 { pt3dadd( 436.15, 541.684, 22.0896, 0.7918 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 10/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 380.037, 581.048, 22.978, 0.5888 ) }
    dend_27 { pt3dadd( 380.85, 581.313, 23.0948, 0.4576 ) }
    dend_27 { pt3dadd( 381.95, 581.578, 23.4682, 0.7232 ) }
    dend_27 { pt3dadd( 383.0, 582.011, 23.6253, 0.7616 ) }
    dend_27 { pt3dadd( 383.974, 582.606, 23.7832, 0.7912 ) }
    dend_27 { pt3dadd( 384.942, 583.214, 23.932, 0.5914 ) }
    dend_27 { pt3dadd( 385.933, 583.78, 24.0652, 0.5414 ) }
    dend_27 { pt3dadd( 387.009, 584.15, 24.1798, 0.495 ) }
    dend_27 { pt3dadd( 388.149, 584.248, 24.2756, 0.6412 ) }
    dend_27 { pt3dadd( 389.287, 584.329, 24.3669, 0.7012 ) }
    dend_27 { pt3dadd( 390.381, 584.642, 24.4646, 0.694 ) }
    dend_27 { pt3dadd( 391.361, 585.229, 24.5773, 0.5674 ) }
    dend_27 { pt3dadd( 392.303, 585.874, 24.7126, 0.4248 ) }
    dend_27 { pt3dadd( 393.229, 586.524, 24.8623, 0.3998 ) }
    dend_27 { pt3dadd( 393.879, 587.444, 25.027, 0.3358 ) }
    // Section: dend_21, id: dend_21, parent: dend_19 (entry count 25/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( 366.283, 580.122, 23.3271, 0.916 ) }
    dend_21 { pt3dadd( 366.055, 578.92, 23.1486, 0.8616 ) }
    dend_21 { pt3dadd( 365.755, 577.816, 23.074, 0.8016 ) }
    dend_21 { pt3dadd( 365.336, 576.756, 23.0165, 0.7732 ) }
    dend_21 { pt3dadd( 364.764, 575.768, 22.9765, 0.7764 ) }
    dend_21 { pt3dadd( 364.096, 574.841, 22.9491, 0.7392 ) }
    dend_21 { pt3dadd( 363.353, 573.972, 22.9287, 0.652 ) }
    dend_21 { pt3dadd( 362.576, 573.133, 22.9137, 0.5782 ) }
    dend_21 { pt3dadd( 361.867, 572.238, 22.9003, 0.7018 ) }
    dend_21 { pt3dadd( 361.243, 571.279, 22.8874, 0.81 ) }
    dend_21 { pt3dadd( 360.749, 570.251, 22.8736, 0.912 ) }
    dend_21 { pt3dadd( 360.382, 569.17, 22.8535, 0.8934 ) }
    dend_21 { pt3dadd( 360.045, 568.076, 22.8368, 0.722 ) }
    dend_21 { pt3dadd( 359.743, 566.973, 22.8362, 0.6126 ) }
    dend_21 { pt3dadd( 359.429, 565.874, 22.8528, 0.5424 ) }
    dend_21 { pt3dadd( 359.079, 564.785, 22.8831, 0.6828 ) }
    dend_21 { pt3dadd( 358.726, 563.697, 22.9231, 0.7736 ) }
    dend_21 { pt3dadd( 358.502, 562.578, 22.9688, 0.8488 ) }
    dend_21 { pt3dadd( 358.201, 561.477, 23.0149, 0.7558 ) }
    dend_21 { pt3dadd( 357.8, 560.408, 23.0582, 0.5678 ) }
    dend_21 { pt3dadd( 357.505, 559.305, 23.0992, 0.5224 ) }
    dend_21 { pt3dadd( 357.715, 558.219, 23.1391, 0.568 ) }
    dend_21 { pt3dadd( 358.245, 557.21, 23.1836, 0.481 ) }
    dend_21 { pt3dadd( 358.464, 556.111, 23.2356, 0.4664 ) }
    dend_21 { pt3dadd( 358.321, 554.984, 23.2832, 0.4128 ) }
    dend_21 { pt3dadd( 357.928, 553.914, 23.3058, 0.4418 ) }
    dend_21 { pt3dadd( 357.664, 552.806, 23.3006, 0.559 ) }
    dend_21 { pt3dadd( 357.612, 551.668, 23.2763, 0.698 ) }
    dend_21 { pt3dadd( 357.588, 550.524, 23.2433, 0.8788 ) }
    dend_21 { pt3dadd( 357.424, 549.393, 23.2132, 1.128 ) }
    dend_21 { pt3dadd( 357.229, 548.267, 23.1981, 1.0936 ) }
    dend_21 { pt3dadd( 357.338, 547.137, 23.2062, 0.9218 ) }
    dend_21 { pt3dadd( 357.568, 546.018, 23.2408, 0.8988 ) }
    dend_21 { pt3dadd( 357.611, 544.879, 23.3042, 1.0236 ) }
    dend_21 { pt3dadd( 357.596, 543.736, 23.3795, 1.1294 ) }
    dend_21 { pt3dadd( 357.479, 542.599, 23.463, 1.2484 ) }
    dend_21 { pt3dadd( 357.177, 541.499, 23.5627, 1.1568 ) }
    dend_21 { pt3dadd( 356.828, 540.412, 23.686, 0.901 ) }
    dend_21 { pt3dadd( 356.588, 539.297, 23.8246, 0.6156 ) }
    dend_21 { pt3dadd( 356.309, 538.189, 23.9698, 0.5416 ) }
    dend_21 { pt3dadd( 356.188, 537.055, 24.1186, 0.7122 ) }
    dend_21 { pt3dadd( 355.902, 535.95, 24.267, 0.9074 ) }
    dend_21 { pt3dadd( 355.528, 534.87, 24.4133, 0.9424 ) }
    dend_21 { pt3dadd( 355.052, 533.832, 24.5607, 0.9918 ) }
    dend_21 { pt3dadd( 354.599, 532.782, 24.719, 0.9302 ) }
    dend_21 { pt3dadd( 354.345, 531.674, 24.9063, 1.102 ) }
    dend_21 { pt3dadd( 354.021, 530.584, 25.1218, 1.1764 ) }
    dend_21 { pt3dadd( 353.776, 529.471, 25.3564, 1.1268 ) }
    dend_21 { pt3dadd( 353.533, 528.357, 25.6022, 1.0292 ) }
    dend_21 { pt3dadd( 353.497, 527.225, 25.8624, 0.877 ) }
    dend_21 { pt3dadd( 353.496, 526.089, 26.1277, 0.9114 ) }
    dend_21 { pt3dadd( 353.496, 524.955, 26.3924, 1.0394 ) }
    dend_21 { pt3dadd( 353.495, 523.818, 26.6347, 1.1948 ) }
    dend_21 { pt3dadd( 353.489, 522.676, 26.8379, 1.195 ) }
    dend_21 { pt3dadd( 353.45, 521.535, 26.9902, 1.2188 ) }
    dend_21 { pt3dadd( 353.201, 520.419, 27.0845, 1.1506 ) }
    dend_21 { pt3dadd( 353.027, 519.289, 27.1223, 1.1106 ) }
    dend_21 { pt3dadd( 352.909, 518.151, 27.1109, 1.075 ) }
    dend_21 { pt3dadd( 352.55, 517.066, 27.0618, 1.0496 ) }
    dend_21 { pt3dadd( 352.212, 515.975, 26.9821, 1.0358 ) }
    dend_21 { pt3dadd( 352.122, 514.839, 26.8669, 0.8478 ) }
    dend_21 { pt3dadd( 352.117, 513.697, 26.7363, 0.6004 ) }
    dend_21 { pt3dadd( 352.073, 512.555, 26.6136, 0.5668 ) }
    // Section: dend_20, id: dend_20, parent: dend_19 (entry count 88/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( 366.283, 580.122, 23.3271, 0.916 ) }
    dend_20 { pt3dadd( 367.003, 579.652, 22.1518, 0.9152 ) }
    dend_20 { pt3dadd( 367.795, 578.841, 21.736, 0.8614 ) }
    dend_20 { pt3dadd( 368.635, 578.07, 21.5668, 0.9124 ) }
    dend_20 { pt3dadd( 369.47, 577.293, 21.3704, 0.8964 ) }
    dend_20 { pt3dadd( 370.1, 576.359, 21.1472, 0.9464 ) }
    dend_20 { pt3dadd( 370.336, 575.266, 20.896, 0.8818 ) }
    dend_20 { pt3dadd( 370.13, 574.167, 20.6203, 0.8392 ) }
    dend_20 { pt3dadd( 369.69, 573.125, 20.3302, 0.8426 ) }
    dend_20 { pt3dadd( 369.236, 572.083, 20.0378, 0.6772 ) }
    dend_20 { pt3dadd( 368.773, 571.045, 19.7603, 0.7458 ) }
    dend_20 { pt3dadd( 368.335, 569.992, 19.507, 0.6548 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_20 { pt3dadd( 368.034, 568.896, 19.2777, 0.6302 ) }
    dend_20 { pt3dadd( 368.498, 567.94, 19.0761, 0.5704 ) }
    dend_20 { pt3dadd( 369.05, 566.941, 18.9111, 0.7568 ) }
    dend_20 { pt3dadd( 369.575, 565.925, 18.7818, 0.8042 ) }
    dend_20 { pt3dadd( 370.166, 564.947, 18.6841, 0.737 ) }
    dend_20 { pt3dadd( 370.781, 563.982, 18.6179, 0.9086 ) }
    dend_20 { pt3dadd( 371.344, 562.988, 18.5772, 0.9334 ) }
    dend_20 { pt3dadd( 371.985, 562.04, 18.5376, 0.8018 ) }
    dend_20 { pt3dadd( 372.622, 561.092, 18.4643, 0.7322 ) }
    dend_20 { pt3dadd( 373.047, 560.035, 18.3532, 0.6722 ) }
    dend_20 { pt3dadd( 373.016, 558.899, 18.2135, 0.6836 ) }
    dend_20 { pt3dadd( 372.282, 558.035, 18.059, 0.7966 ) }
    dend_20 { pt3dadd( 371.625, 557.104, 17.8969, 0.788 ) }
    dend_20 { pt3dadd( 371.107, 556.088, 17.5535, 0.6864 ) }
    // Section: dend_14, id: dend_14, parent: dend_12 (entry count 14/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( 377.767, 625.515, 23.5822, 0.8148 ) }
    dend_14 { pt3dadd( 378.177, 626.093, 23.4342, 0.9788 ) }
    dend_14 { pt3dadd( 378.857, 627.011, 23.325, 1.1938 ) }
    dend_14 { pt3dadd( 379.453, 627.986, 23.259, 1.3376 ) }
    dend_14 { pt3dadd( 379.953, 629.015, 23.235, 1.24 ) }
    dend_14 { pt3dadd( 380.573, 629.972, 23.2484, 0.9974 ) }
    dend_14 { pt3dadd( 381.333, 630.825, 23.2902, 0.8466 ) }
    dend_14 { pt3dadd( 382.142, 631.631, 23.357, 0.7162 ) }
    dend_14 { pt3dadd( 382.984, 632.402, 23.4464, 0.895 ) }
    dend_14 { pt3dadd( 383.905, 633.075, 23.5429, 1.0146 ) }
    dend_14 { pt3dadd( 384.788, 633.8, 23.6318, 1.1206 ) }
    dend_14 { pt3dadd( 385.71, 634.475, 23.7022, 0.9654 ) }
    dend_14 { pt3dadd( 386.709, 635.029, 23.7407, 1.0108 ) }
    dend_14 { pt3dadd( 387.735, 635.533, 23.7468, 1.0806 ) }
    dend_14 { pt3dadd( 388.802, 635.942, 23.743, 1.0514 ) }
    dend_14 { pt3dadd( 389.84, 636.422, 23.7415, 0.851 ) }
    dend_14 { pt3dadd( 390.558, 637.293, 23.742, 0.9608 ) }
    dend_14 { pt3dadd( 391.234, 638.216, 23.7419, 1.1162 ) }
    dend_14 { pt3dadd( 391.651, 639.276, 23.7385, 1.18 ) }
    dend_14 { pt3dadd( 391.926, 640.386, 23.7249, 1.0136 ) }
    dend_14 { pt3dadd( 392.201, 641.493, 23.684, 0.9446 ) }
    dend_14 { pt3dadd( 392.475, 642.603, 23.6284, 0.7976 ) }
    dend_14 { pt3dadd( 392.824, 643.691, 23.5769, 0.8456 ) }
    dend_14 { pt3dadd( 393.152, 644.787, 23.5448, 0.7526 ) }
    dend_14 { pt3dadd( 393.792, 645.73, 23.5443, 0.7768 ) }
    dend_14 { pt3dadd( 394.585, 646.551, 23.592, 0.7816 ) }
    dend_14 { pt3dadd( 395.093, 647.57, 23.6767, 0.7572 ) }
    dend_14 { pt3dadd( 395.137, 648.71, 23.7789, 0.8738 ) }
    dend_14 { pt3dadd( 395.139, 649.854, 23.8838, 0.7618 ) }
    dend_14 { pt3dadd( 395.146, 650.997, 23.9795, 0.5442 ) }
    dend_14 { pt3dadd( 395.197, 652.14, 24.0505, 0.419 ) }
    dend_14 { pt3dadd( 395.515, 653.238, 24.1054, 0.438 ) }
    dend_14 { pt3dadd( 396.093, 654.219, 24.1813, 0.6264 ) }
    dend_14 { pt3dadd( 396.443, 655.299, 24.2781, 0.6908 ) }
    dend_14 { pt3dadd( 396.513, 656.439, 24.3778, 0.819 ) }
    dend_14 { pt3dadd( 396.549, 657.58, 24.4637, 0.786 ) }
    dend_14 { pt3dadd( 396.703, 658.714, 24.5223, 0.665 ) }
    dend_14 { pt3dadd( 396.867, 659.846, 24.5466, 0.7324 ) }
    dend_14 { pt3dadd( 397.111, 660.962, 24.5453, 0.8134 ) }
    dend_14 { pt3dadd( 397.368, 662.076, 24.5389, 0.9482 ) }
    dend_14 { pt3dadd( 397.596, 663.197, 24.5484, 0.8146 ) }
    dend_14 { pt3dadd( 397.795, 664.323, 24.5881, 0.5984 ) }
    dend_14 { pt3dadd( 398.006, 665.446, 24.6635, 0.5022 ) }
    dend_14 { pt3dadd( 398.242, 666.563, 24.7745, 0.6748 ) }
    dend_14 { pt3dadd( 398.472, 667.672, 24.9278, 0.6656 ) }
    dend_14 { pt3dadd( 398.667, 668.796, 25.081, 0.6452 ) }
    dend_14 { pt3dadd( 398.866, 669.922, 25.2193, 0.6226 ) }
    dend_14 { pt3dadd( 399.086, 671.043, 25.3445, 0.7356 ) }
    dend_14 { pt3dadd( 399.304, 672.164, 25.457, 0.6516 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 63/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( 377.767, 625.515, 23.5822, 0.8148 ) }
    dend_13 { pt3dadd( 377.479, 626.102, 24.7536, 0.6864 ) }
    dend_13 { pt3dadd( 377.517, 627.049, 25.9841, 0.6302 ) }
    dend_13 { pt3dadd( 377.75, 628.134, 26.4773, 0.707 ) }
    dend_13 { pt3dadd( 377.92, 629.241, 27.004, 0.8058 ) }
    dend_13 { pt3dadd( 378.17, 630.313, 27.5754, 0.742 ) }
    dend_13 { pt3dadd( 378.548, 631.366, 28.1361, 0.6784 ) }
    dend_13 { pt3dadd( 379.364, 632.122, 28.6476, 0.7532 ) }
    dend_13 { pt3dadd( 380.085, 632.997, 29.0954, 0.642 ) }
    dend_13 { pt3dadd( 380.767, 633.91, 29.5106, 0.735 ) }
    dend_13 { pt3dadd( 381.632, 634.643, 29.9214, 0.599 ) }
    dend_13 { pt3dadd( 382.215, 635.61, 30.3481, 0.6988 ) }
    dend_13 { pt3dadd( 382.361, 636.731, 30.8064, 0.5496 ) }
    dend_13 { pt3dadd( 382.151, 637.682, 31.4286, 0.5218 ) }
    dend_13 { pt3dadd( 381.087, 637.772, 32.111, 0.6354 ) }
    dend_13 { pt3dadd( 379.993, 637.972, 32.8048, 0.7312 ) }
    dend_13 { pt3dadd( 379.422, 638.913, 33.5115, 0.7802 ) }
    dend_13 { pt3dadd( 379.409, 639.971, 34.2434, 0.5786 ) }
    dend_13 { pt3dadd( 379.928, 640.942, 34.9516, 0.4818 ) }
    dend_13 { pt3dadd( 380.666, 641.789, 35.611, 0.558 ) }
    dend_13 { pt3dadd( 381.496, 642.521, 36.2508, 0.6032 ) }
    dend_13 { pt3dadd( 382.426, 643.11, 36.8998, 0.4668 ) }
    dend_13 { pt3dadd( 382.722, 644.035, 37.5519, 0.3686 ) }
    dend_13 { pt3dadd( 382.374, 645.089, 38.1965, 0.349 ) }
    dend_13 { pt3dadd( 381.915, 646.108, 38.8494, 0.4402 ) }
    dend_13 { pt3dadd( 381.563, 647.159, 39.5282, 0.4484 ) }
    dend_13 { pt3dadd( 381.428, 648.243, 40.2408, 0.5578 ) }
    dend_13 { pt3dadd( 380.77, 648.932, 40.9878, 0.5312 ) }
    dend_13 { pt3dadd( 379.699, 648.813, 41.7718, 0.4516 ) }
    dend_13 { pt3dadd( 378.591, 648.829, 42.5701, 0.452 ) }
    dend_13 { pt3dadd( 377.72, 649.472, 43.3647, 0.4208 ) }
    dend_13 { pt3dadd( 377.354, 650.03, 44.168, 0.517 ) }
    dend_13 { pt3dadd( 376.88, 650.675, 45.1136, 0.4068 ) }
    dend_13 { pt3dadd( 376.314, 650.643, 47.376, 0.4576 ) }
    // Section: dend_10, id: dend_10, parent: dend_8 (entry count 97/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( 326.93, 571.45, 26.5639, 0.9718 ) }
    dend_10 { pt3dadd( 326.28, 570.855, 26.5723, 0.9812 ) }
    dend_10 { pt3dadd( 325.32, 570.251, 26.5944, 0.7696 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_10 { pt3dadd( 324.216, 570.013, 26.6579, 0.8028 ) }
    dend_10 { pt3dadd( 323.129, 569.703, 26.79, 0.8568 ) }
    dend_10 { pt3dadd( 322.07, 569.283, 26.9632, 0.9944 ) }
    dend_10 { pt3dadd( 321.012, 568.859, 27.1561, 1.0678 ) }
    dend_10 { pt3dadd( 319.907, 568.573, 27.3527, 0.9416 ) }
    dend_10 { pt3dadd( 318.795, 568.311, 27.5397, 0.8374 ) }
    dend_10 { pt3dadd( 317.704, 567.972, 27.7071, 0.6996 ) }
    dend_10 { pt3dadd( 316.633, 567.572, 27.8557, 0.8614 ) }
    dend_10 { pt3dadd( 315.54, 567.239, 28.0011, 0.9656 ) }
    dend_10 { pt3dadd( 314.422, 567.016, 28.1574, 0.9672 ) }
    dend_10 { pt3dadd( 313.319, 566.726, 28.3268, 0.9842 ) }
    dend_10 { pt3dadd( 312.271, 566.275, 28.499, 0.9468 ) }
    dend_10 { pt3dadd( 311.234, 565.796, 28.6672, 0.9828 ) }
    dend_10 { pt3dadd( 310.271, 565.186, 28.8378, 0.9972 ) }
    dend_10 { pt3dadd( 309.283, 564.614, 28.9982, 0.821 ) }
    dend_10 { pt3dadd( 308.258, 564.107, 29.1276, 0.562 ) }
    dend_10 { pt3dadd( 307.201, 563.669, 29.2314, 0.4406 ) }
    dend_10 { pt3dadd( 306.13, 563.271, 29.3266, 0.5338 ) }
    dend_10 { pt3dadd( 305.132, 562.715, 29.4213, 0.5324 ) }
    dend_10 { pt3dadd( 304.211, 562.039, 29.5173, 0.462 ) }
    dend_10 { pt3dadd( 303.377, 561.258, 29.6164, 0.4322 ) }
    dend_10 { pt3dadd( 302.581, 560.441, 29.7172, 0.5726 ) }
    dend_10 { pt3dadd( 301.657, 559.767, 29.8138, 0.5714 ) }
    dend_10 { pt3dadd( 300.687, 559.162, 29.904, 0.6924 ) }
    dend_10 { pt3dadd( 299.729, 558.542, 29.9956, 0.7782 ) }
    dend_10 { pt3dadd( 298.829, 557.846, 30.0857, 0.6944 ) }
    dend_10 { pt3dadd( 298.125, 556.954, 30.1619, 0.5726 ) }
    dend_10 { pt3dadd( 297.562, 556.002, 30.2092, 0.6424 ) }
    dend_10 { pt3dadd( 296.693, 555.29, 30.2061, 0.709 ) }
    dend_10 { pt3dadd( 296.048, 554.354, 30.1711, 0.6802 ) }
    dend_10 { pt3dadd( 295.365, 553.444, 30.1179, 0.6798 ) }
    dend_10 { pt3dadd( 294.667, 552.541, 30.0614, 0.65 ) }
    dend_10 { pt3dadd( 294.074, 551.565, 30.0146, 0.5068 ) }
    dend_10 { pt3dadd( 293.467, 550.597, 29.9869, 0.4398 ) }
    dend_10 { pt3dadd( 292.569, 549.921, 29.9804, 0.4962 ) }
    dend_10 { pt3dadd( 291.688, 549.198, 29.9902, 0.6382 ) }
    dend_10 { pt3dadd( 291.013, 548.283, 30.014, 0.4924 ) }
    dend_10 { pt3dadd( 290.251, 547.435, 30.0496, 0.3774 ) }
    dend_10 { pt3dadd( 289.345, 546.74, 30.098, 0.3246 ) }
    dend_10 { pt3dadd( 288.53, 545.94, 30.161, 0.3642 ) }
    dend_10 { pt3dadd( 287.634, 545.233, 30.2406, 0.4558 ) }
    dend_10 { pt3dadd( 286.756, 544.5, 30.338, 0.5378 ) }
    dend_10 { pt3dadd( 285.802, 543.872, 30.4531, 0.43 ) }
    dend_10 { pt3dadd( 284.906, 543.179, 30.6163, 0.3464 ) }
    dend_10 { pt3dadd( 284.044, 542.438, 30.8014, 0.3134 ) }
    dend_10 { pt3dadd( 283.122, 541.773, 30.9915, 0.3472 ) }
    dend_10 { pt3dadd( 282.142, 541.185, 31.1674, 0.407 ) }
    dend_10 { pt3dadd( 281.162, 540.597, 31.3155, 0.531 ) }
    dend_10 { pt3dadd( 280.195, 539.989, 31.4278, 0.6974 ) }
    dend_10 { pt3dadd( 279.27, 539.316, 31.5017, 0.6272 ) }
    dend_10 { pt3dadd( 278.376, 538.602, 31.5454, 0.5056 ) }
    dend_10 { pt3dadd( 277.484, 537.887, 31.5683, 0.4668 ) }
    dend_10 { pt3dadd( 276.596, 537.165, 31.579, 0.6334 ) }
    dend_10 { pt3dadd( 275.714, 536.437, 31.5829, 0.6986 ) }
    dend_10 { pt3dadd( 274.889, 535.652, 31.5837, 0.8594 ) }
    dend_10 { pt3dadd( 274.142, 534.787, 31.584, 0.7352 ) }
    dend_10 { pt3dadd( 273.342, 533.969, 31.584, 0.4954 ) }
    dend_10 { pt3dadd( 272.541, 533.152, 31.5837, 0.3262 ) }
    dend_10 { pt3dadd( 271.74, 532.335, 31.5837, 0.2762 ) }
    dend_10 { pt3dadd( 270.937, 531.521, 31.5837, 0.2776 ) }
    dend_10 { pt3dadd( 270.085, 530.765, 31.5834, 0.28 ) }
    dend_10 { pt3dadd( 269.144, 530.111, 31.5832, 0.2848 ) }
    dend_10 { pt3dadd( 268.205, 529.458, 31.5829, 0.2936 ) }
    dend_10 { pt3dadd( 267.267, 528.805, 31.5826, 0.3094 ) }
    dend_10 { pt3dadd( 266.305, 528.188, 31.582, 0.3414 ) }
    dend_10 { pt3dadd( 265.301, 527.64, 31.5815, 0.388 ) }
    dend_10 { pt3dadd( 264.294, 527.097, 31.5806, 0.5356 ) }
    dend_10 { pt3dadd( 263.309, 526.518, 31.5795, 0.5122 ) }
    dend_10 { pt3dadd( 262.367, 525.868, 31.5781, 0.5384 ) }
    dend_10 { pt3dadd( 261.433, 525.208, 31.5762, 0.7074 ) }
    dend_10 { pt3dadd( 260.578, 524.464, 31.5739, 0.8918 ) }
    dend_10 { pt3dadd( 259.891, 523.55, 31.5706, 0.946 ) }
    dend_10 { pt3dadd( 259.237, 522.611, 31.5666, 0.8414 ) }
    dend_10 { pt3dadd( 258.585, 521.672, 31.5613, 0.7282 ) }
    dend_10 { pt3dadd( 257.932, 520.733, 31.5546, 0.5836 ) }
    dend_10 { pt3dadd( 257.287, 519.788, 31.5462, 0.456 ) }
    dend_10 { pt3dadd( 256.684, 518.817, 31.5358, 0.452 ) }
    dend_10 { pt3dadd( 256.128, 517.817, 31.523, 0.4592 ) }
    dend_10 { pt3dadd( 255.573, 516.817, 31.5087, 0.403 ) }
    dend_10 { pt3dadd( 255.005, 515.824, 31.4927, 0.4064 ) }
    dend_10 { pt3dadd( 254.405, 514.85, 31.4717, 0.3482 ) }
    dend_10 { pt3dadd( 253.819, 513.869, 31.4482, 0.326 ) }
    dend_10 { pt3dadd( 253.229, 512.89, 31.4334, 0.325 ) }
    dend_10 { pt3dadd( 252.578, 511.95, 31.4356, 0.3574 ) }
    dend_10 { pt3dadd( 251.874, 511.049, 31.4544, 0.4794 ) }
    dend_10 { pt3dadd( 251.139, 510.172, 31.4852, 0.4062 ) }
    dend_10 { pt3dadd( 250.404, 509.296, 31.5232, 0.3506 ) }
    dend_10 { pt3dadd( 249.714, 508.387, 31.563, 0.316 ) }
    dend_10 { pt3dadd( 249.091, 507.427, 31.6, 0.377 ) }
    dend_10 { pt3dadd( 248.444, 506.485, 31.6324, 0.3408 ) }
    dend_10 { pt3dadd( 247.726, 505.595, 31.6632, 0.3124 ) }
    dend_10 { pt3dadd( 246.979, 504.728, 31.6963, 0.2988 ) }
    dend_10 { pt3dadd( 246.165, 503.93, 31.7346, 0.3142 ) }
    dend_10 { pt3dadd( 245.443, 503.067, 31.7822, 0.3734 ) }
    dend_10 { pt3dadd( 244.72, 502.206, 31.843, 0.3338 ) }
    dend_10 { pt3dadd( 243.728, 501.688, 31.9208, 0.3 ) }
    dend_10 { pt3dadd( 242.637, 501.347, 32.0205, 0.2746 ) }
    dend_10 { pt3dadd( 241.788, 500.674, 32.1437, 0.2746 ) }
    dend_10 { pt3dadd( 241.147, 499.728, 32.2907, 0.2746 ) }
    dend_10 { pt3dadd( 240.25, 499.214, 32.4752, 0.2746 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_10 { pt3dadd( 239.134, 499.046, 32.7096, 0.2746 ) }
    dend_10 { pt3dadd( 238.105, 498.601, 32.9652, 0.2748 ) }
    dend_10 { pt3dadd( 237.086, 498.096, 33.2122, 0.275 ) }
    dend_10 { pt3dadd( 235.981, 497.875, 33.43, 0.2752 ) }
    dend_10 { pt3dadd( 234.875, 497.608, 33.6056, 0.2758 ) }
    dend_10 { pt3dadd( 233.878, 497.065, 33.7313, 0.277 ) }
    dend_10 { pt3dadd( 232.83, 496.621, 33.8117, 0.2792 ) }
    dend_10 { pt3dadd( 231.714, 496.385, 33.8615, 0.283 ) }
    dend_10 { pt3dadd( 230.589, 496.176, 33.8943, 0.2904 ) }
    dend_10 { pt3dadd( 229.525, 495.771, 33.92, 0.3034 ) }
    dend_10 { pt3dadd( 228.481, 495.304, 33.9455, 0.3302 ) }
    dend_10 { pt3dadd( 227.436, 494.838, 33.9749, 0.3674 ) }
    dend_10 { pt3dadd( 226.406, 494.342, 34.0108, 0.4978 ) }
    dend_10 { pt3dadd( 225.398, 493.803, 34.055, 0.4398 ) }
    dend_10 { pt3dadd( 224.395, 493.254, 34.1071, 0.415 ) }
    dend_10 { pt3dadd( 223.392, 492.704, 34.165, 0.426 ) }
    dend_10 { pt3dadd( 222.437, 492.076, 34.2236, 0.6264 ) }
    dend_10 { pt3dadd( 221.508, 491.409, 34.277, 0.5818 ) }
    dend_10 { pt3dadd( 220.583, 490.736, 34.3213, 0.4612 ) }
    dend_10 { pt3dadd( 219.755, 489.951, 34.354, 0.4202 ) }
    dend_10 { pt3dadd( 219.027, 489.07, 34.3762, 0.3732 ) }
    dend_10 { pt3dadd( 218.318, 488.172, 34.3888, 0.3746 ) }
    dend_10 { pt3dadd( 217.609, 487.274, 34.3949, 0.4044 ) }
    dend_10 { pt3dadd( 216.933, 486.352, 34.3974, 0.5558 ) }
    dend_10 { pt3dadd( 216.27, 485.42, 34.3974, 0.5992 ) }
    dend_10 { pt3dadd( 215.655, 484.455, 34.3969, 0.4594 ) }
    dend_10 { pt3dadd( 215.057, 483.481, 34.396, 0.3536 ) }
    dend_10 { pt3dadd( 214.459, 482.505, 34.3952, 0.3278 ) }
    dend_10 { pt3dadd( 213.861, 481.53, 34.3958, 0.3688 ) }
    dend_10 { pt3dadd( 213.334, 480.516, 34.3977, 0.4704 ) }
    dend_10 { pt3dadd( 212.908, 479.455, 34.4019, 0.536 ) }
    dend_10 { pt3dadd( 212.504, 478.384, 34.41, 0.5668 ) }
    dend_10 { pt3dadd( 212.101, 477.313, 34.4243, 0.6064 ) }
    dend_10 { pt3dadd( 211.627, 476.273, 34.4557, 0.5358 ) }
    dend_10 { pt3dadd( 211.077, 475.272, 34.5148, 0.4184 ) }
    dend_10 { pt3dadd( 210.485, 474.297, 34.596, 0.3644 ) }
    dend_10 { pt3dadd( 209.869, 473.333, 34.687, 0.3848 ) }
    dend_10 { pt3dadd( 209.254, 472.37, 34.7768, 0.5246 ) }
    dend_10 { pt3dadd( 208.636, 471.407, 34.8564, 0.5158 ) }
    dend_10 { pt3dadd( 207.909, 470.525, 34.9188, 0.4284 ) }
    dend_10 { pt3dadd( 207.133, 469.685, 34.963, 0.3828 ) }
    dend_10 { pt3dadd( 206.209, 469.014, 34.9941, 0.4184 ) }
    dend_10 { pt3dadd( 205.271, 468.357, 35.0182, 0.5888 ) }
    dend_10 { pt3dadd( 204.288, 467.776, 35.04, 0.6264 ) }
    dend_10 { pt3dadd( 203.276, 467.239, 35.0641, 0.674 ) }
    dend_10 { pt3dadd( 202.27, 466.697, 35.0935, 0.6406 ) }
    dend_10 { pt3dadd( 201.273, 466.135, 35.131, 0.4838 ) }
    dend_10 { pt3dadd( 200.253, 465.618, 35.1789, 0.4246 ) }
    dend_10 { pt3dadd( 199.218, 465.131, 35.2383, 0.3344 ) }
    dend_10 { pt3dadd( 198.227, 464.561, 35.3091, 0.3012 ) }
    dend_10 { pt3dadd( 197.37, 463.807, 35.3976, 0.2766 ) }
    dend_10 { pt3dadd( 196.584, 462.98, 35.5068, 0.2784 ) }
    dend_10 { pt3dadd( 195.817, 462.135, 35.6297, 0.2818 ) }
    dend_10 { pt3dadd( 195.069, 461.271, 35.7512, 0.2876 ) }
    dend_10 { pt3dadd( 194.322, 460.406, 35.8607, 0.3 ) }
    dend_10 { pt3dadd( 193.438, 459.682, 35.9498, 0.3164 ) }
    dend_10 { pt3dadd( 192.434, 459.134, 36.0147, 0.3776 ) }
    dend_10 { pt3dadd( 191.454, 458.544, 36.0556, 0.3416 ) }
    dend_10 { pt3dadd( 190.643, 457.738, 36.0786, 0.314 ) }
    dend_10 { pt3dadd( 190.181, 456.693, 36.0898, 0.3018 ) }
    dend_10 { pt3dadd( 189.722, 455.645, 36.0942, 0.3198 ) }
    dend_10 { pt3dadd( 189.406, 454.546, 36.0956, 0.3838 ) }
    dend_10 { pt3dadd( 189.063, 453.454, 36.0959, 0.353 ) }
    dend_10 { pt3dadd( 188.643, 452.39, 36.0959, 0.3362 ) }
    dend_10 { pt3dadd( 188.282, 451.305, 36.0959, 0.339 ) }
    dend_10 { pt3dadd( 188.103, 450.174, 36.0959, 0.4068 ) }
    dend_10 { pt3dadd( 188.013, 449.034, 36.0959, 0.4576 ) }
    dend_10 { pt3dadd( 187.977, 447.891, 36.0959, 0.9152 ) }
    // Section: dend_9, id: dend_9, parent: dend_8 (entry count 68/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( 326.93, 571.45, 26.5639, 0.9718 ) }
    dend_9 { pt3dadd( 326.977, 569.733, 26.9319, 0.5878 ) }
    dend_9 { pt3dadd( 327.104, 568.602, 27.075, 0.5728 ) }
    dend_9 { pt3dadd( 327.439, 567.514, 27.2213, 0.8266 ) }
    dend_9 { pt3dadd( 327.785, 566.425, 27.362, 0.8448 ) }
    dend_9 { pt3dadd( 327.869, 565.295, 27.4893, 0.7862 ) }
    dend_9 { pt3dadd( 327.869, 564.151, 27.5971, 0.6688 ) }
    dend_9 { pt3dadd( 327.999, 563.018, 27.6892, 0.4938 ) }
    dend_9 { pt3dadd( 328.163, 561.888, 27.7745, 0.4196 ) }
    dend_9 { pt3dadd( 328.241, 560.749, 27.8449, 0.4402 ) }
    dend_9 { pt3dadd( 328.298, 559.607, 27.8927, 0.6246 ) }
    dend_9 { pt3dadd( 328.323, 558.463, 27.9062, 0.7156 ) }
    dend_9 { pt3dadd( 328.327, 557.325, 27.869, 0.7284 ) }
    dend_9 { pt3dadd( 328.449, 556.193, 27.7938, 0.5948 ) }
    dend_9 { pt3dadd( 328.81, 555.11, 27.7295, 0.6536 ) }
    dend_9 { pt3dadd( 329.168, 554.024, 27.7055, 0.6462 ) }
    dend_9 { pt3dadd( 329.53, 552.94, 27.7301, 0.7414 ) }
    dend_9 { pt3dadd( 329.671, 551.807, 27.8082, 0.6162 ) }
    dend_9 { pt3dadd( 329.579, 550.669, 27.9388, 0.4776 ) }
    dend_9 { pt3dadd( 329.487, 549.533, 28.1084, 0.4516 ) }
    dend_9 { pt3dadd( 329.394, 548.396, 28.2999, 0.4272 ) }
    dend_9 { pt3dadd( 329.299, 547.26, 28.504, 0.4954 ) }
    dend_9 { pt3dadd( 329.106, 546.138, 28.7151, 0.5278 ) }
    dend_9 { pt3dadd( 328.721, 545.066, 28.9282, 0.5876 ) }
    dend_9 { pt3dadd( 328.338, 543.993, 29.1357, 0.4702 ) }
    dend_9 { pt3dadd( 327.958, 542.918, 29.3306, 0.4466 ) }
    dend_9 { pt3dadd( 327.642, 541.822, 29.5025, 0.375 ) }
    dend_9 { pt3dadd( 327.449, 540.696, 29.6374, 0.3784 ) }
    dend_9 { pt3dadd( 327.258, 539.569, 29.7284, 0.4088 ) }
    dend_9 { pt3dadd( 327.066, 538.441, 29.7752, 0.5776 ) }
    dend_9 { pt3dadd( 326.874, 537.313, 29.7825, 0.5746 ) }
    dend_9 { pt3dadd( 326.659, 536.19, 29.7578, 0.728 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_9 { pt3dadd( 326.424, 535.072, 29.7119, 0.6998 ) }
    dend_9 { pt3dadd( 326.19, 533.953, 29.6579, 0.5632 ) }
    dend_9 { pt3dadd( 325.953, 532.835, 29.6106, 0.4904 ) }
    dend_9 { pt3dadd( 325.682, 531.724, 29.5893, 0.6234 ) }
    dend_9 { pt3dadd( 325.387, 530.619, 29.612, 0.7134 ) }
    dend_9 { pt3dadd( 325.092, 529.516, 29.6848, 0.7242 ) }
    dend_9 { pt3dadd( 324.803, 528.412, 29.8046, 0.5882 ) }
    dend_9 { pt3dadd( 324.571, 527.296, 29.9589, 0.6342 ) }
    dend_9 { pt3dadd( 324.405, 526.167, 30.13, 0.645 ) }
    dend_9 { pt3dadd( 324.241, 525.035, 30.3044, 0.5694 ) }
    dend_9 { pt3dadd( 324.076, 523.905, 30.4749, 0.4362 ) }
    dend_9 { pt3dadd( 323.908, 522.775, 30.6421, 0.3848 ) }
    dend_9 { pt3dadd( 323.701, 521.651, 30.8134, 0.4828 ) }
    dend_9 { pt3dadd( 323.452, 520.539, 30.9999, 0.4126 ) }
    dend_9 { pt3dadd( 323.206, 519.429, 31.2043, 0.3624 ) }
    dend_9 { pt3dadd( 322.97, 518.317, 31.4222, 0.3378 ) }
    dend_9 { pt3dadd( 322.822, 517.19, 31.6408, 0.4186 ) }
    dend_9 { pt3dadd( 322.8, 516.052, 31.8416, 0.4118 ) }
    dend_9 { pt3dadd( 322.72, 514.913, 32.0051, 0.4722 ) }
    dend_9 { pt3dadd( 322.706, 513.769, 32.1292, 0.459 ) }
    dend_9 { pt3dadd( 322.591, 512.637, 32.2123, 0.5848 ) }
    dend_9 { pt3dadd( 322.383, 511.512, 32.2529, 0.5462 ) }
    dend_9 { pt3dadd( 322.275, 510.376, 32.2745, 0.6508 ) }
    dend_9 { pt3dadd( 322.079, 509.278, 32.298, 0.675 ) }
    dend_9 { pt3dadd( 321.805, 508.201, 32.312, 0.629 ) }
    dend_9 { pt3dadd( 321.871, 507.061, 32.3274, 0.5282 ) }
    dend_9 { pt3dadd( 322.062, 505.935, 32.3484, 0.6436 ) }
    dend_9 { pt3dadd( 322.225, 504.805, 32.3742, 0.5344 ) }
    dend_9 { pt3dadd( 322.341, 503.668, 32.4159, 0.529 ) }
    dend_9 { pt3dadd( 322.394, 502.53, 32.4884, 0.4774 ) }
    dend_9 { pt3dadd( 322.317, 501.391, 32.5998, 0.5828 ) }
    dend_9 { pt3dadd( 322.15, 500.266, 32.7496, 0.7184 ) }
    dend_9 { pt3dadd( 321.948, 499.146, 32.9336, 0.8022 ) }
    dend_9 { pt3dadd( 321.672, 498.044, 33.1358, 0.8558 ) }
    dend_9 { pt3dadd( 321.442, 496.93, 33.3329, 0.7626 ) }
    dend_9 { pt3dadd( 321.411, 495.792, 33.5045, 0.61 ) }
    dend_9 { pt3dadd( 321.483, 494.651, 33.6412, 0.4578 ) }
    dend_9 { pt3dadd( 321.448, 493.51, 33.7476, 0.4558 ) }
    dend_9 { pt3dadd( 321.378, 492.368, 33.8383, 0.4648 ) }
    dend_9 { pt3dadd( 321.509, 491.241, 33.9343, 0.4196 ) }
    dend_9 { pt3dadd( 321.823, 490.147, 34.0637, 0.4084 ) }
    dend_9 { pt3dadd( 321.827, 489.02, 34.221, 0.4914 ) }
    dend_9 { pt3dadd( 321.806, 487.878, 34.3963, 0.5994 ) }
    dend_9 { pt3dadd( 321.53, 486.781, 34.6074, 0.5646 ) }
    dend_9 { pt3dadd( 321.383, 485.653, 34.8365, 0.4974 ) }
    dend_9 { pt3dadd( 321.471, 484.518, 35.0731, 0.3862 ) }
    dend_9 { pt3dadd( 321.682, 483.398, 35.3049, 0.3446 ) }
    dend_9 { pt3dadd( 321.969, 482.302, 35.5253, 0.3828 ) }
    dend_9 { pt3dadd( 322.828, 481.56, 35.7386, 0.3512 ) }
    dend_9 { pt3dadd( 323.488, 480.628, 35.9324, 0.3316 ) }
    dend_9 { pt3dadd( 324.167, 479.712, 36.1074, 0.3352 ) }
    dend_9 { pt3dadd( 324.949, 478.879, 36.2656, 0.3778 ) }
    dend_9 { pt3dadd( 325.663, 477.986, 36.4104, 0.5116 ) }
    dend_9 { pt3dadd( 326.357, 477.087, 36.5644, 0.4918 ) }
    dend_9 { pt3dadd( 326.845, 476.071, 36.7357, 0.3842 ) }
    dend_9 { pt3dadd( 327.273, 475.013, 36.9104, 0.299 ) }
    dend_9 { pt3dadd( 327.702, 473.953, 37.0824, 0.2728 ) }
    dend_9 { pt3dadd( 328.441, 473.102, 37.2574, 0.2712 ) }
    dend_9 { pt3dadd( 329.447, 472.578, 37.4385, 0.2684 ) }
    dend_9 { pt3dadd( 330.563, 472.355, 37.6074, 0.2626 ) }
    dend_9 { pt3dadd( 331.703, 472.395, 37.7544, 0.2542 ) }
    dend_9 { pt3dadd( 332.679, 472.979, 37.8753, 0.2288 ) }
    dend_9 { pt3dadd( 333.447, 473.827, 38.0576, 0.2288 ) }
    // Section: dend_5, id: dend_5, parent: dend_1 (entry count 63/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 342.113, 591.628, 25.8418, 1.1742 ) }
    dend_5 { pt3dadd( 340.84, 592.164, 25.9542, 1.1872 ) }
    dend_5 { pt3dadd( 339.836, 592.711, 25.9946, 1.0154 ) }
    dend_5 { pt3dadd( 338.836, 593.267, 26.0405, 0.774 ) }
    dend_5 { pt3dadd( 337.807, 593.763, 26.1077, 0.868 ) }
    dend_5 { pt3dadd( 336.755, 594.207, 26.2013, 0.9306 ) }
    dend_5 { pt3dadd( 335.669, 594.554, 26.317, 0.9016 ) }
    dend_5 { pt3dadd( 334.548, 594.768, 26.4471, 0.8652 ) }
    dend_5 { pt3dadd( 333.419, 594.94, 26.5843, 0.7146 ) }
    dend_5 { pt3dadd( 332.3, 595.164, 26.7251, 0.6096 ) }
    dend_5 { pt3dadd( 331.185, 595.406, 26.8624, 0.7128 ) }
    dend_5 { pt3dadd( 330.098, 595.746, 26.9848, 0.8304 ) }
    dend_5 { pt3dadd( 329.051, 596.205, 27.085, 0.9506 ) }
    dend_5 { pt3dadd( 327.989, 596.63, 27.1591, 0.9608 ) }
    dend_5 { pt3dadd( 326.935, 597.064, 27.2044, 0.867 ) }
    dend_5 { pt3dadd( 325.998, 597.701, 27.2193, 0.7842 ) }
    dend_5 { pt3dadd( 325.138, 598.452, 27.2171, 0.6462 ) }
    dend_5 { pt3dadd( 324.154, 599.013, 27.2189, 0.773 ) }
    dend_5 { pt3dadd( 323.082, 599.412, 27.2345, 0.7506 ) }
    dend_5 { pt3dadd( 322.005, 599.799, 27.2733, 0.8164 ) }
    dend_5 { pt3dadd( 320.949, 600.233, 27.3423, 0.8736 ) }
    dend_5 { pt3dadd( 319.944, 600.769, 27.4353, 0.8372 ) }
    dend_5 { pt3dadd( 319.05, 601.468, 27.5439, 0.7746 ) }
    dend_5 { pt3dadd( 318.461, 602.413, 27.6593, 0.6342 ) }
    dend_5 { pt3dadd( 318.186, 603.517, 27.7647, 0.7216 ) }
    dend_5 { pt3dadd( 317.795, 604.575, 27.841, 0.7974 ) }
    dend_5 { pt3dadd( 317.088, 605.459, 27.8735, 0.9 ) }
    dend_5 { pt3dadd( 316.189, 606.156, 27.8632, 0.8152 ) }
    dend_5 { pt3dadd( 315.203, 606.732, 27.8243, 0.8494 ) }
    dend_5 { pt3dadd( 314.213, 607.304, 27.775, 0.8994 ) }
    dend_5 { pt3dadd( 313.277, 607.959, 27.7331, 1.057 ) }
    dend_5 { pt3dadd( 312.362, 608.646, 27.7126, 1.034 ) }
    dend_5 { pt3dadd( 311.475, 609.365, 27.7211, 0.9204 ) }
    dend_5 { pt3dadd( 310.618, 610.123, 27.7589, 0.8242 ) }
    dend_5 { pt3dadd( 309.712, 610.818, 27.8228, 0.7778 ) }
    dend_5 { pt3dadd( 308.751, 611.435, 27.9129, 0.737 ) }
    dend_5 { pt3dadd( 307.744, 611.969, 28.0277, 0.6714 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_5 { pt3dadd( 306.738, 612.509, 28.1565, 0.5002 ) }
    dend_5 { pt3dadd( 305.828, 613.191, 28.2856, 0.4238 ) }
    dend_5 { pt3dadd( 304.989, 613.968, 28.4046, 0.484 ) }
    dend_5 { pt3dadd( 304.151, 614.744, 28.5074, 0.5314 ) }
    dend_5 { pt3dadd( 303.223, 615.408, 28.5925, 0.7032 ) }
    dend_5 { pt3dadd( 302.236, 615.986, 28.6611, 0.8422 ) }
    dend_5 { pt3dadd( 301.213, 616.495, 28.7199, 0.8276 ) }
    dend_5 { pt3dadd( 300.134, 616.869, 28.7767, 0.7502 ) }
    dend_5 { pt3dadd( 299.028, 617.158, 28.838, 0.6226 ) }
    dend_5 { pt3dadd( 297.916, 617.425, 28.908, 0.5362 ) }
    dend_5 { pt3dadd( 296.898, 617.918, 28.9926, 0.562 ) }
    dend_5 { pt3dadd( 296.016, 618.636, 29.0979, 0.8524 ) }
    dend_5 { pt3dadd( 295.207, 619.44, 29.2152, 0.8986 ) }
    dend_5 { pt3dadd( 294.437, 620.285, 29.3297, 0.8578 ) }
    dend_5 { pt3dadd( 293.759, 621.202, 29.4305, 0.9378 ) }
    dend_5 { pt3dadd( 293.141, 622.166, 29.5095, 1.0172 ) }
    dend_5 { pt3dadd( 292.425, 623.053, 29.5624, 1.0412 ) }
    dend_5 { pt3dadd( 291.595, 623.838, 29.589, 0.9974 ) }
    dend_5 { pt3dadd( 290.737, 624.596, 29.5946, 0.8878 ) }
    dend_5 { pt3dadd( 289.988, 625.456, 29.5842, 0.822 ) }
    dend_5 { pt3dadd( 289.178, 626.261, 29.5621, 0.7194 ) }
    dend_5 { pt3dadd( 288.286, 626.975, 29.5294, 0.8932 ) }
    dend_5 { pt3dadd( 287.404, 627.704, 29.4868, 1.0484 ) }
    dend_5 { pt3dadd( 286.564, 628.479, 29.4344, 1.0044 ) }
    dend_5 { pt3dadd( 285.685, 629.21, 29.372, 0.9312 ) }
    dend_5 { pt3dadd( 284.696, 629.773, 29.2964, 0.9838 ) }
    dend_5 { pt3dadd( 283.631, 630.179, 29.2046, 0.8528 ) }
    dend_5 { pt3dadd( 282.584, 630.633, 29.1082, 0.804 ) }
    dend_5 { pt3dadd( 281.623, 631.248, 29.0217, 0.9166 ) }
    dend_5 { pt3dadd( 280.781, 632.019, 28.9556, 1.0548 ) }
    dend_5 { pt3dadd( 279.968, 632.822, 28.9178, 0.9666 ) }
    dend_5 { pt3dadd( 279.139, 633.611, 28.9162, 0.8738 ) }
    dend_5 { pt3dadd( 278.216, 634.282, 28.952, 0.8164 ) }
    dend_5 { pt3dadd( 277.167, 634.728, 29.0024, 0.8388 ) }
    dend_5 { pt3dadd( 276.052, 634.974, 29.0534, 0.7126 ) }
    dend_5 { pt3dadd( 274.91, 634.966, 29.1049, 0.6072 ) }
    dend_5 { pt3dadd( 273.883, 635.436, 29.1712, 0.7014 ) }
    dend_5 { pt3dadd( 273.287, 636.401, 29.2468, 0.8438 ) }
    dend_5 { pt3dadd( 272.748, 637.411, 29.3227, 0.807 ) }
    dend_5 { pt3dadd( 272.091, 638.346, 29.395, 0.8254 ) }
    dend_5 { pt3dadd( 271.273, 639.145, 29.4557, 0.8962 ) }
    dend_5 { pt3dadd( 270.32, 639.776, 29.4916, 0.8514 ) }
    dend_5 { pt3dadd( 269.309, 640.31, 29.5134, 0.9346 ) }
    dend_5 { pt3dadd( 268.319, 640.885, 29.5327, 0.9698 ) }
    dend_5 { pt3dadd( 267.425, 641.597, 29.5512, 0.9268 ) }
    dend_5 { pt3dadd( 266.446, 642.188, 29.5694, 0.9138 ) }
    dend_5 { pt3dadd( 265.421, 642.697, 29.5873, 0.7954 ) }
    dend_5 { pt3dadd( 264.377, 643.166, 29.6036, 0.8044 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 48/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 342.113, 591.628, 25.8418, 1.1742 ) }
    dend_2 { pt3dadd( 342.167, 592.44, 22.6535, 0.576 ) }
    dend_2 { pt3dadd( 342.311, 591.622, 21.7288, 0.4402 ) }
    dend_2 { pt3dadd( 341.868, 590.656, 20.8108, 0.4304 ) }
    dend_2 { pt3dadd( 341.304, 589.701, 19.9784, 0.6122 ) }
    dend_2 { pt3dadd( 340.619, 588.807, 19.281, 0.6638 ) }
    dend_2 { pt3dadd( 339.811, 588.007, 18.7516, 0.7738 ) }
    dend_2 { pt3dadd( 338.889, 587.334, 18.399, 0.6782 ) }
    dend_2 { pt3dadd( 337.797, 587.034, 18.1539, 0.582 ) }
    dend_2 { pt3dadd( 336.659, 586.989, 17.9586, 0.697 ) }
    dend_2 { pt3dadd( 335.518, 586.992, 17.786, 0.6312 ) }
    dend_2 { pt3dadd( 334.378, 587.026, 17.6312, 0.7182 ) }
    dend_2 { pt3dadd( 333.258, 587.243, 17.4941, 0.7802 ) }
    dend_2 { pt3dadd( 332.182, 587.624, 17.3714, 0.692 ) }
    dend_2 { pt3dadd( 331.067, 587.867, 17.2735, 0.599 ) }
    dend_2 { pt3dadd( 330.042, 588.373, 17.2139, 0.5412 ) }
    // Section: dend_32, id: dend_32, parent: dend_30 (entry count 64/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 436.15, 541.684, 22.0896, 0.7918 ) }
    dend_32 { pt3dadd( 436.746, 541.685, 22.16, 0.5924 ) }
    dend_32 { pt3dadd( 437.89, 541.692, 22.2535, 0.5448 ) }
    dend_32 { pt3dadd( 439.032, 541.739, 22.3772, 0.494 ) }
    dend_32 { pt3dadd( 440.149, 541.948, 22.5365, 0.676 ) }
    dend_32 { pt3dadd( 441.275, 542.083, 22.7368, 0.5884 ) }
    dend_32 { pt3dadd( 442.398, 541.973, 22.9855, 0.6572 ) }
    dend_32 { pt3dadd( 443.506, 541.758, 23.2828, 0.5786 ) }
    dend_32 { pt3dadd( 444.412, 541.141, 23.6063, 0.7474 ) }
    dend_32 { pt3dadd( 445.337, 540.498, 23.9315, 0.6772 ) }
    dend_32 { pt3dadd( 446.41, 540.168, 24.233, 0.8058 ) }
    dend_32 { pt3dadd( 447.542, 540.048, 24.4845, 0.9326 ) }
    dend_32 { pt3dadd( 448.671, 539.881, 24.6696, 1.0222 ) }
    dend_32 { pt3dadd( 449.812, 539.848, 24.7839, 0.979 ) }
    dend_32 { pt3dadd( 450.956, 539.857, 24.8328, 1.0002 ) }
    dend_32 { pt3dadd( 452.091, 539.729, 24.8259, 1.0064 ) }
    dend_32 { pt3dadd( 453.231, 539.669, 24.7748, 0.9486 ) }
    dend_32 { pt3dadd( 454.359, 539.825, 24.6899, 0.9502 ) }
    dend_32 { pt3dadd( 455.473, 540.071, 24.5751, 0.8812 ) }
    dend_32 { pt3dadd( 456.56, 540.41, 24.4376, 0.8746 ) }
    dend_32 { pt3dadd( 457.609, 540.85, 24.2933, 0.7316 ) }
    dend_32 { pt3dadd( 458.668, 541.276, 24.1681, 0.6422 ) }
    dend_32 { pt3dadd( 459.802, 541.361, 24.0939, 0.7684 ) }
    dend_32 { pt3dadd( 460.897, 541.046, 24.0793, 0.9586 ) }
    dend_32 { pt3dadd( 461.94, 540.581, 24.1189, 1.0652 ) }
    dend_32 { pt3dadd( 463.004, 540.162, 24.201, 1.0842 ) }
    dend_32 { pt3dadd( 464.113, 539.893, 24.3097, 1.0724 ) }
    dend_32 { pt3dadd( 465.229, 539.649, 24.4325, 1.0492 ) }
    dend_32 { pt3dadd( 466.364, 539.537, 24.5676, 1.0122 ) }
    dend_32 { pt3dadd( 467.45, 539.184, 24.701, 0.916 ) }
    dend_32 { pt3dadd( 468.523, 538.794, 24.8202, 0.8704 ) }
    dend_32 { pt3dadd( 469.662, 538.705, 24.9168, 0.828 ) }
    dend_32 { pt3dadd( 470.805, 538.648, 24.9851, 1.0016 ) }
    dend_32 { pt3dadd( 471.911, 538.358, 25.022, 1.0154 ) }
    dend_32 { pt3dadd( 473.025, 538.093, 25.0276, 0.9348 ) }
    dend_32 { pt3dadd( 473.992, 537.487, 25.0073, 0.843 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_32 { pt3dadd( 474.894, 536.782, 24.9647, 0.8498 ) }
    dend_32 { pt3dadd( 475.348, 535.734, 24.9017, 0.6906 ) }
    dend_32 { pt3dadd( 475.769, 534.67, 24.8196, 0.7726 ) }
    dend_32 { pt3dadd( 476.384, 533.707, 24.7187, 0.694 ) }
    // Section: dend_31, id: dend_31, parent: dend_30 (entry count 4/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( 436.15, 541.684, 22.0896, 0.7918 ) }
    dend_31 { pt3dadd( 434.404, 542.01, 22.578, 0.7768 ) }
    dend_31 { pt3dadd( 433.276, 542.084, 22.8628, 0.5642 ) }
    dend_31 { pt3dadd( 432.415, 541.367, 23.2123, 0.4938 ) }
    dend_31 { pt3dadd( 431.426, 540.823, 23.5881, 0.6222 ) }
    dend_31 { pt3dadd( 430.349, 540.46, 23.9662, 0.747 ) }
    dend_31 { pt3dadd( 429.245, 540.203, 24.325, 0.6138 ) }
    dend_31 { pt3dadd( 428.168, 540.063, 24.6752, 0.5346 ) }
    dend_31 { pt3dadd( 427.302, 539.356, 25.0462, 0.7172 ) }
    dend_31 { pt3dadd( 426.333, 538.791, 25.4376, 0.6012 ) }
    dend_31 { pt3dadd( 425.434, 538.107, 25.8394, 0.5334 ) }
    dend_31 { pt3dadd( 424.486, 537.492, 26.2415, 0.6072 ) }
    dend_31 { pt3dadd( 423.442, 537.06, 26.6413, 0.6902 ) }
    dend_31 { pt3dadd( 422.35, 536.747, 27.0295, 0.649 ) }
    dend_31 { pt3dadd( 421.287, 536.374, 27.419, 0.604 ) }
    dend_31 { pt3dadd( 420.3, 535.838, 27.8206, 0.598 ) }
    dend_31 { pt3dadd( 419.44, 535.12, 28.2232, 0.6666 ) }
    dend_31 { pt3dadd( 418.637, 534.321, 28.6129, 0.6364 ) }
    dend_31 { pt3dadd( 417.974, 533.42, 28.994, 0.6588 ) }
    dend_31 { pt3dadd( 417.471, 532.408, 29.3538, 0.5488 ) }
    dend_31 { pt3dadd( 416.784, 531.513, 29.6716, 0.621 ) }
    dend_31 { pt3dadd( 415.977, 530.713, 29.9438, 0.5598 ) }
    dend_31 { pt3dadd( 415.275, 529.82, 30.1608, 0.7068 ) }
    dend_31 { pt3dadd( 414.779, 528.798, 30.3243, 0.63 ) }
    dend_31 { pt3dadd( 414.602, 527.677, 30.4315, 0.5818 ) }
    dend_31 { pt3dadd( 414.552, 526.535, 30.4861, 0.4914 ) }
    dend_31 { pt3dadd( 414.356, 525.412, 30.4716, 0.5592 ) }
    dend_31 { pt3dadd( 413.953, 524.374, 30.1084, 0.6864 ) }
    // Section: dend_29, id: dend_29, parent: dend_27 (entry count 32/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( 393.879, 587.444, 25.027, 0.3358 ) }
    dend_29 { pt3dadd( 394.621, 587.911, 25.2326, 0.3036 ) }
    dend_29 { pt3dadd( 395.605, 588.492, 25.4608, 0.2812 ) }
    dend_29 { pt3dadd( 396.589, 589.072, 25.7195, 0.2868 ) }
    dend_29 { pt3dadd( 397.397, 588.917, 26.3014, 0.297 ) }
    dend_29 { pt3dadd( 398.199, 588.745, 27.1193, 0.3174 ) }
    dend_29 { pt3dadd( 399.284, 588.816, 27.8659, 0.3486 ) }
    dend_29 { pt3dadd( 400.419, 588.915, 28.4959, 0.4382 ) }
    dend_29 { pt3dadd( 400.915, 589.893, 29.0063, 0.4504 ) }
    dend_29 { pt3dadd( 401.442, 590.885, 29.4283, 0.5334 ) }
    dend_29 { pt3dadd( 402.26, 591.676, 29.7497, 0.6236 ) }
    dend_29 { pt3dadd( 403.117, 592.423, 30.0154, 0.6416 ) }
    dend_29 { pt3dadd( 404.094, 593.005, 30.2753, 0.4854 ) }
    dend_29 { pt3dadd( 405.152, 593.425, 30.5368, 0.4278 ) }
    dend_29 { pt3dadd( 406.207, 593.84, 30.8022, 0.3404 ) }
    dend_29 { pt3dadd( 407.182, 594.327, 31.1394, 0.312 ) }
    dend_29 { pt3dadd( 408.286, 594.505, 31.5101, 0.2966 ) }
    dend_29 { pt3dadd( 409.372, 594.83, 31.8716, 0.3156 ) }
    dend_29 { pt3dadd( 410.457, 595.166, 32.2104, 0.351 ) }
    dend_29 { pt3dadd( 411.543, 595.49, 32.529, 0.414 ) }
    dend_29 { pt3dadd( 412.64, 595.685, 32.8208, 0.5436 ) }
    dend_29 { pt3dadd( 413.775, 595.586, 33.0744, 0.722 ) }
    dend_29 { pt3dadd( 414.883, 595.323, 33.3091, 0.6676 ) }
    dend_29 { pt3dadd( 416.014, 595.216, 33.5362, 0.6056 ) }
    dend_29 { pt3dadd( 417.137, 595.373, 33.7677, 0.5298 ) }
    dend_29 { pt3dadd( 418.253, 595.596, 34.0108, 0.6584 ) }
    dend_29 { pt3dadd( 419.385, 595.667, 34.265, 0.734 ) }
    dend_29 { pt3dadd( 420.523, 595.689, 34.5262, 0.7498 ) }
    dend_29 { pt3dadd( 421.661, 595.691, 34.7864, 0.6952 ) }
    dend_29 { pt3dadd( 422.802, 595.67, 35.04, 0.545 ) }
    dend_29 { pt3dadd( 423.717, 595.071, 35.2764, 0.5034 ) }
    dend_29 { pt3dadd( 424.818, 594.848, 35.4945, 0.6486 ) }
    dend_29 { pt3dadd( 425.88, 595.262, 35.7272, 0.7552 ) }
    dend_29 { pt3dadd( 426.894, 595.767, 35.9862, 0.8258 ) }
    dend_29 { pt3dadd( 427.712, 596.524, 36.2964, 0.659 ) }
    dend_29 { pt3dadd( 428.451, 597.345, 36.6512, 0.6512 ) }
    dend_29 { pt3dadd( 429.385, 597.99, 37.0166, 0.7732 ) }
    dend_29 { pt3dadd( 430.365, 598.57, 37.366, 0.7956 ) }
    dend_29 { pt3dadd( 431.332, 599.165, 37.6978, 0.6834 ) }
    dend_29 { pt3dadd( 432.115, 599.978, 38.0568, 0.762 ) }
    dend_29 { pt3dadd( 433.124, 600.063, 38.4913, 0.8912 ) }
    dend_29 { pt3dadd( 433.897, 599.322, 39.0202, 0.9806 ) }
    dend_29 { pt3dadd( 434.706, 598.562, 39.6001, 0.7312 ) }
    dend_29 { pt3dadd( 435.805, 598.364, 40.2013, 0.6834 ) }
    dend_29 { pt3dadd( 436.758, 597.798, 40.817, 0.6418 ) }
    dend_29 { pt3dadd( 437.809, 597.399, 41.4033, 0.564 ) }
    dend_29 { pt3dadd( 438.87, 597.19, 41.9698, 0.4234 ) }
    dend_29 { pt3dadd( 439.884, 597.548, 42.5412, 0.3736 ) }
    dend_29 { pt3dadd( 441.003, 597.594, 43.0693, 0.4016 ) }
    dend_29 { pt3dadd( 442.124, 597.749, 43.5238, 0.5558 ) }
    dend_29 { pt3dadd( 443.25, 597.908, 43.913, 0.5752 ) }
    dend_29 { pt3dadd( 444.386, 597.943, 44.2616, 0.5306 ) }
    dend_29 { pt3dadd( 445.521, 597.963, 44.5852, 0.6106 ) }
    dend_29 { pt3dadd( 446.652, 598.031, 44.8952, 0.6554 ) }
    dend_29 { pt3dadd( 447.767, 598.223, 45.2001, 0.5544 ) }
    dend_29 { pt3dadd( 448.849, 598.564, 45.4908, 0.5756 ) }
    dend_29 { pt3dadd( 449.959, 598.806, 45.7573, 0.517 ) }
    dend_29 { pt3dadd( 451.095, 598.858, 45.9967, 0.4256 ) }
    dend_29 { pt3dadd( 452.236, 598.876, 46.2098, 0.4014 ) }
    dend_29 { pt3dadd( 453.36, 599.059, 46.389, 0.3384 ) }
    dend_29 { pt3dadd( 454.488, 599.244, 46.536, 0.3084 ) }
    dend_29 { pt3dadd( 455.599, 599.059, 46.6662, 0.2904 ) }
    dend_29 { pt3dadd( 456.728, 598.875, 46.7852, 0.3034 ) }
    dend_29 { pt3dadd( 457.847, 599.073, 46.9202, 0.3304 ) }
    dend_29 { pt3dadd( 458.831, 599.644, 47.0756, 0.3672 ) }
    dend_29 { pt3dadd( 459.956, 599.782, 47.2917, 0.4986 ) }
    dend_29 { pt3dadd( 461.074, 599.898, 47.5516, 0.4368 ) }
    dend_29 { pt3dadd( 462.089, 600.221, 47.8643, 0.4316 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_29 { pt3dadd( 463.013, 600.779, 48.1874, 0.3478 ) }
    dend_29 { pt3dadd( 463.66, 601.714, 48.4789, 0.3252 ) }
    dend_29 { pt3dadd( 464.169, 602.732, 48.7231, 0.3236 ) }
    dend_29 { pt3dadd( 464.565, 603.804, 48.9152, 0.3548 ) }
    dend_29 { pt3dadd( 464.899, 604.898, 49.061, 0.4744 ) }
    dend_29 { pt3dadd( 465.139, 606.013, 49.1688, 0.3972 ) }
    dend_29 { pt3dadd( 465.232, 607.152, 49.2537, 0.3328 ) }
    dend_29 { pt3dadd( 465.232, 608.294, 49.334, 0.288 ) }
    dend_29 { pt3dadd( 465.232, 609.437, 49.4222, 0.3006 ) }
    dend_29 { pt3dadd( 465.232, 610.58, 49.5172, 0.3174 ) }
    dend_29 { pt3dadd( 465.232, 611.724, 49.616, 0.3798 ) }
    dend_29 { pt3dadd( 465.232, 612.868, 49.7176, 0.3454 ) }
    dend_29 { pt3dadd( 465.232, 614.011, 49.8232, 0.3216 ) }
    dend_29 { pt3dadd( 465.353, 615.146, 49.9349, 0.3142 ) }
    dend_29 { pt3dadd( 465.444, 616.285, 50.0567, 0.35 ) }
    dend_29 { pt3dadd( 465.49, 617.428, 50.1942, 0.406 ) }
    dend_29 { pt3dadd( 465.624, 618.562, 50.351, 0.5588 ) }
    dend_29 { pt3dadd( 465.963, 619.279, 50.5904, 0.6046 ) }
    dend_29 { pt3dadd( 466.427, 620.316, 50.8519, 0.4692 ) }
    dend_29 { pt3dadd( 466.588, 621.433, 51.1154, 0.3732 ) }
    dend_29 { pt3dadd( 466.604, 622.575, 51.3702, 0.3578 ) }
    dend_29 { pt3dadd( 466.604, 623.717, 51.6116, 0.455 ) }
    dend_29 { pt3dadd( 466.604, 624.86, 51.8372, 0.4826 ) }
    dend_29 { pt3dadd( 466.826, 625.975, 52.0523, 0.588 ) }
    dend_29 { pt3dadd( 467.299, 626.985, 52.3219, 0.75 ) }
    dend_29 { pt3dadd( 467.89, 627.946, 52.6221, 0.7538 ) }
    dend_29 { pt3dadd( 468.863, 628.482, 52.929, 0.5986 ) }
    dend_29 { pt3dadd( 469.65, 629.289, 53.219, 0.6412 ) }
    dend_29 { pt3dadd( 470.599, 629.908, 53.4831, 0.4888 ) }
    dend_29 { pt3dadd( 471.707, 630.168, 53.7026, 0.414 ) }
    dend_29 { pt3dadd( 472.589, 630.882, 53.8658, 0.412 ) }
    dend_29 { pt3dadd( 473.382, 631.705, 53.9795, 0.431 ) }
    dend_29 { pt3dadd( 474.172, 632.532, 54.0546, 0.356 ) }
    dend_29 { pt3dadd( 474.385, 633.65, 54.1005, 0.2938 ) }
    dend_29 { pt3dadd( 474.385, 634.794, 54.1246, 0.2626 ) }
    dend_29 { pt3dadd( 474.385, 635.938, 54.1363, 0.2542 ) }
    dend_29 { pt3dadd( 474.771, 637.015, 54.1416, 0.2288 ) }
    dend_29 { pt3dadd( 475.3, 638.029, 54.1439, 0.2288 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( 393.879, 587.444, 25.027, 0.3358 ) }
    dend_28 { pt3dadd( 393.446, 587.812, 25.1306, 0.2288 ) }
    dend_28 { pt3dadd( 392.633, 588.474, 25.3063, 0.3308 ) }
    dend_28 { pt3dadd( 393.155, 589.261, 25.3039, 0.368 ) }
    dend_28 { pt3dadd( 394.044, 589.113, 25.3557, 0.5 ) }
    dend_28 { pt3dadd( 394.725, 588.316, 25.5907, 0.4394 ) }
    dend_28 { pt3dadd( 395.365, 587.561, 25.9604, 0.4368 ) }
    dend_28 { pt3dadd( 395.926, 586.758, 26.2311, 0.357 ) }
    dend_28 { pt3dadd( 396.531, 586.944, 26.3088, 0.3426 ) }
    dend_28 { pt3dadd( 397.286, 587.695, 26.3402, 0.3556 ) }
    dend_28 { pt3dadd( 398.064, 588.525, 26.2432, 0.415 ) }
    dend_28 { pt3dadd( 399.02, 589.078, 26.0312, 0.5826 ) }
    dend_28 { pt3dadd( 400.037, 589.571, 25.7545, 0.6138 ) }
    dend_28 { pt3dadd( 401.033, 590.116, 25.4754, 0.656 ) }
    dend_28 { pt3dadd( 402.045, 590.63, 25.2128, 0.5812 ) }
    dend_28 { pt3dadd( 403.111, 591.027, 24.9714, 0.4996 ) }
    dend_28 { pt3dadd( 404.196, 591.384, 24.7785, 0.5288 ) }
    dend_28 { pt3dadd( 405.248, 591.829, 24.6441, 0.6218 ) }
    dend_28 { pt3dadd( 406.222, 592.424, 24.5669, 0.6058 ) }
    dend_28 { pt3dadd( 407.147, 593.095, 24.5281, 0.5746 ) }
    dend_28 { pt3dadd( 408.045, 593.805, 24.5037, 0.5258 ) }
    dend_28 { pt3dadd( 409.013, 594.41, 24.4701, 0.6202 ) }
    dend_28 { pt3dadd( 410.068, 594.842, 24.4053, 0.812 ) }
    dend_28 { pt3dadd( 411.182, 595.075, 24.3012, 0.8578 ) }
    dend_28 { pt3dadd( 412.293, 595.324, 24.1595, 0.8446 ) }
    dend_28 { pt3dadd( 413.351, 595.733, 23.9892, 0.8388 ) }
    dend_28 { pt3dadd( 414.444, 596.06, 23.8269, 0.7378 ) }
    dend_28 { pt3dadd( 415.516, 596.456, 23.6999, 0.532 ) }
    dend_28 { pt3dadd( 416.659, 596.436, 23.6321, 0.4678 ) }
    dend_28 { pt3dadd( 417.784, 596.272, 23.6128, 0.4094 ) }
    dend_28 { pt3dadd( 418.847, 596.684, 23.6327, 0.4648 ) }
    dend_28 { pt3dadd( 419.632, 597.44, 23.7199, 0.4604 ) }
    dend_28 { pt3dadd( 420.286, 598.322, 23.8312, 0.5146 ) }
    dend_28 { pt3dadd( 421.19, 599.021, 23.9058, 0.769 ) }
    dend_28 { pt3dadd( 421.992, 599.82, 23.9105, 0.7234 ) }
    dend_28 { pt3dadd( 422.709, 600.703, 23.8753, 0.632 ) }
    dend_28 { pt3dadd( 423.595, 601.419, 23.8604, 0.7252 ) }
    dend_28 { pt3dadd( 424.586, 601.961, 23.9054, 0.7676 ) }
    dend_28 { pt3dadd( 425.672, 602.286, 23.9882, 0.5628 ) }
    dend_28 { pt3dadd( 426.803, 602.411, 24.0907, 0.4158 ) }
    dend_28 { pt3dadd( 427.908, 602.608, 24.1855, 0.3856 ) }
    dend_28 { pt3dadd( 428.91, 603.151, 24.2155, 0.5262 ) }
    dend_28 { pt3dadd( 429.943, 603.578, 24.1392, 0.5198 ) }
    dend_28 { pt3dadd( 430.993, 603.982, 23.9769, 0.4308 ) }
    dend_28 { pt3dadd( 432.092, 604.199, 23.7853, 0.411 ) }
    dend_28 { pt3dadd( 433.204, 604.444, 23.6098, 0.3562 ) }
    dend_28 { pt3dadd( 434.253, 604.887, 23.48, 0.3424 ) }
    dend_28 { pt3dadd( 435.379, 604.92, 23.3747, 0.3476 ) }
    dend_28 { pt3dadd( 436.487, 604.669, 23.2304, 0.4372 ) }
    dend_28 { pt3dadd( 437.621, 604.609, 23.0269, 0.4428 ) }
    dend_28 { pt3dadd( 438.73, 604.715, 22.7367, 0.5478 ) }
    dend_28 { pt3dadd( 439.812, 605.022, 22.3839, 0.5118 ) }
    dend_28 { pt3dadd( 440.903, 605.239, 21.9824, 0.421 ) }
    dend_28 { pt3dadd( 442.02, 605.317, 21.561, 0.3686 ) }
    dend_28 { pt3dadd( 443.098, 605.645, 21.1888, 0.3956 ) }
    dend_28 { pt3dadd( 444.149, 606.094, 20.882, 0.528 ) }
    dend_28 { pt3dadd( 445.196, 606.552, 20.6268, 0.6038 ) }
    dend_28 { pt3dadd( 446.05, 607.296, 20.3958, 0.8818 ) }
    dend_28 { pt3dadd( 446.893, 608.06, 20.1695, 0.9588 ) }
    dend_28 { pt3dadd( 447.881, 608.599, 19.9226, 0.7122 ) }
    dend_28 { pt3dadd( 448.986, 608.613, 19.6437, 0.5432 ) }
    dend_28 { pt3dadd( 450.052, 609.012, 19.402, 0.6624 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_28 { pt3dadd( 451.124, 609.408, 19.2471, 0.6134 ) }
    dend_28 { pt3dadd( 452.165, 609.876, 19.1589, 0.6892 ) }
    dend_28 { pt3dadd( 453.168, 610.424, 19.1139, 0.7068 ) }
    dend_28 { pt3dadd( 454.216, 610.867, 19.0873, 0.6512 ) }
    dend_28 { pt3dadd( 455.304, 611.223, 19.0522, 0.7462 ) }
    dend_28 { pt3dadd( 456.397, 611.56, 18.988, 0.8758 ) }
    dend_28 { pt3dadd( 457.462, 611.97, 18.8894, 0.8858 ) }
    dend_28 { pt3dadd( 458.473, 612.501, 18.7327, 0.8778 ) }
    dend_28 { pt3dadd( 459.485, 613.03, 18.5306, 0.7626 ) }
    dend_28 { pt3dadd( 460.477, 613.597, 18.304, 0.579 ) }
    dend_28 { pt3dadd( 461.541, 613.964, 18.0419, 0.5508 ) }
    dend_28 { pt3dadd( 462.62, 614.262, 17.7113, 0.5848 ) }
    dend_28 { pt3dadd( 463.361, 613.763, 16.4024, 0.6864 ) }
    // Section: dend_25, id: dend_25, parent: dend_21 (entry count 13/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( 352.073, 512.555, 26.6136, 0.5668 ) }
    dend_25 { pt3dadd( 352.396, 512.422, 28.8448, 0.4576 ) }
    dend_25 { pt3dadd( 353.405, 512.26, 30.0398, 0.7866 ) }
    dend_25 { pt3dadd( 354.351, 511.668, 30.52, 0.7312 ) }
    dend_25 { pt3dadd( 355.141, 510.881, 31.0551, 0.7674 ) }
    dend_25 { pt3dadd( 355.622, 509.935, 31.652, 0.617 ) }
    dend_25 { pt3dadd( 355.005, 509.078, 32.272, 0.4804 ) }
    dend_25 { pt3dadd( 354.403, 508.119, 32.8499, 0.4504 ) }
    dend_25 { pt3dadd( 354.306, 506.996, 33.3819, 0.455 ) }
    dend_25 { pt3dadd( 354.599, 506.071, 33.9466, 0.4004 ) }
    dend_25 { pt3dadd( 354.41, 505.012, 34.5038, 0.3778 ) }
    dend_25 { pt3dadd( 354.511, 503.894, 35.0342, 0.4104 ) }
    dend_25 { pt3dadd( 354.48, 502.77, 35.5314, 0.567 ) }
    dend_25 { pt3dadd( 354.362, 501.649, 36.0013, 0.62 ) }
    dend_25 { pt3dadd( 354.305, 500.525, 36.4398, 0.4976 ) }
    dend_25 { pt3dadd( 354.305, 499.483, 36.8626, 0.4262 ) }
    dend_25 { pt3dadd( 354.404, 498.352, 37.2103, 0.454 ) }
    dend_25 { pt3dadd( 354.676, 497.244, 37.4945, 0.6436 ) }
    dend_25 { pt3dadd( 355.001, 496.148, 37.7244, 0.782 ) }
    dend_25 { pt3dadd( 355.115, 495.03, 37.9182, 0.7012 ) }
    dend_25 { pt3dadd( 355.027, 493.892, 38.0934, 0.5872 ) }
    dend_25 { pt3dadd( 354.991, 492.752, 38.269, 0.6584 ) }
    dend_25 { pt3dadd( 354.991, 491.61, 38.4597, 0.7934 ) }
    dend_25 { pt3dadd( 355.243, 490.526, 38.677, 0.5716 ) }
    dend_25 { pt3dadd( 355.794, 489.529, 38.9088, 0.3928 ) }
    dend_25 { pt3dadd( 356.534, 488.657, 39.1538, 0.3046 ) }
    dend_25 { pt3dadd( 357.174, 487.719, 39.4472, 0.3326 ) }
    dend_25 { pt3dadd( 357.787, 486.764, 39.7785, 0.3712 ) }
    dend_25 { pt3dadd( 358.217, 485.732, 40.1582, 0.506 ) }
    dend_25 { pt3dadd( 358.369, 484.648, 40.6255, 0.4504 ) }
    dend_25 { pt3dadd( 358.575, 483.565, 41.1449, 0.4572 ) }
    dend_25 { pt3dadd( 358.865, 482.477, 41.6514, 0.3946 ) }
    dend_25 { pt3dadd( 359.214, 481.393, 42.1047, 0.4144 ) }
    dend_25 { pt3dadd( 359.351, 480.268, 42.5191, 0.4786 ) }
    dend_25 { pt3dadd( 359.592, 479.171, 42.9246, 0.692 ) }
    dend_25 { pt3dadd( 359.93, 478.099, 43.3322, 0.8588 ) }
    dend_25 { pt3dadd( 360.17, 477.007, 43.748, 0.9068 ) }
    dend_25 { pt3dadd( 360.349, 475.894, 44.1493, 0.661 ) }
    dend_25 { pt3dadd( 360.485, 474.81, 45.12, 0.2288 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( 352.073, 512.555, 26.6136, 0.5668 ) }
    dend_22 { pt3dadd( 351.905, 511.691, 26.4874, 0.4996 ) }
    dend_22 { pt3dadd( 351.734, 510.563, 26.3744, 0.3988 ) }
    dend_22 { pt3dadd( 351.41, 509.47, 26.2943, 0.3258 ) }
    dend_22 { pt3dadd( 351.312, 508.339, 26.2706, 0.3232 ) }
    dend_22 { pt3dadd( 351.541, 507.221, 26.2892, 0.3606 ) }
    dend_22 { pt3dadd( 351.429, 506.085, 26.3369, 0.454 ) }
    dend_22 { pt3dadd( 351.001, 505.025, 26.4038, 0.5106 ) }
    dend_22 { pt3dadd( 350.677, 503.937, 26.4833, 0.4952 ) }
    dend_22 { pt3dadd( 350.88, 502.821, 26.5516, 0.5924 ) }
    dend_22 { pt3dadd( 351.402, 501.816, 26.6043, 0.6194 ) }
    dend_22 { pt3dadd( 351.558, 500.685, 26.6584, 0.4992 ) }
    dend_22 { pt3dadd( 351.558, 499.541, 26.7214, 0.417 ) }
    dend_22 { pt3dadd( 351.558, 498.397, 26.8176, 0.4956 ) }
    dend_22 { pt3dadd( 351.66, 497.26, 26.9694, 0.436 ) }
    // Section: dend_16, id: dend_16, parent: dend_14 (entry count 67/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( 399.304, 672.164, 25.457, 0.6516 ) }
    dend_16 { pt3dadd( 399.784, 673.099, 25.5419, 0.5468 ) }
    dend_16 { pt3dadd( 400.341, 674.097, 25.5855, 0.5642 ) }
    dend_16 { pt3dadd( 400.955, 675.062, 25.6038, 0.7114 ) }
    dend_16 { pt3dadd( 401.55, 676.039, 25.6104, 0.6552 ) }
    dend_16 { pt3dadd( 402.079, 677.052, 25.6183, 0.547 ) }
    dend_16 { pt3dadd( 402.6, 678.07, 25.639, 0.5944 ) }
    dend_16 { pt3dadd( 403.14, 679.077, 25.6799, 0.6236 ) }
    dend_16 { pt3dadd( 403.786, 680.018, 25.7354, 0.505 ) }
    dend_16 { pt3dadd( 404.558, 680.859, 25.7891, 0.4356 ) }
    dend_16 { pt3dadd( 405.169, 681.818, 25.8271, 0.4932 ) }
    dend_16 { pt3dadd( 405.614, 682.87, 25.8301, 0.6104 ) }
    dend_16 { pt3dadd( 406.113, 683.897, 25.7887, 0.5488 ) }
    dend_16 { pt3dadd( 406.948, 684.663, 25.7345, 0.6434 ) }
    dend_16 { pt3dadd( 407.739, 685.49, 25.6693, 0.492 ) }
    dend_16 { pt3dadd( 408.469, 686.369, 25.59, 0.4258 ) }
    dend_16 { pt3dadd( 408.959, 687.401, 25.5103, 0.405 ) }
    dend_16 { pt3dadd( 409.453, 688.433, 25.4402, 0.557 ) }
    dend_16 { pt3dadd( 409.989, 689.443, 25.3846, 0.6016 ) }
    dend_16 { pt3dadd( 410.53, 690.451, 25.3423, 0.4636 ) }
    dend_16 { pt3dadd( 411.096, 691.445, 25.3177, 0.3626 ) }
    dend_16 { pt3dadd( 411.668, 692.436, 25.3122, 0.3384 ) }
    dend_16 { pt3dadd( 412.405, 693.309, 25.3217, 0.4184 ) }
    dend_16 { pt3dadd( 412.762, 694.391, 25.3571, 0.418 ) }
    dend_16 { pt3dadd( 413.415, 695.33, 25.3891, 0.452 ) }
    dend_16 { pt3dadd( 414.072, 696.265, 25.4193, 0.5746 ) }
    dend_16 { pt3dadd( 414.629, 697.262, 25.4625, 0.7436 ) }
    dend_16 { pt3dadd( 415.142, 698.285, 25.5034, 0.8808 ) }
    dend_16 { pt3dadd( 415.682, 699.293, 25.5397, 0.8466 ) }
    dend_16 { pt3dadd( 416.281, 700.268, 25.5783, 0.8108 ) }
    dend_16 { pt3dadd( 416.956, 701.178, 25.6321, 0.6118 ) }
    dend_16 { pt3dadd( 417.78, 701.968, 25.7094, 0.428 ) }
    dend_16 { pt3dadd( 418.48, 702.866, 25.8054, 0.3328 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_16 { pt3dadd( 419.064, 703.847, 25.9155, 0.3374 ) }
    dend_16 { pt3dadd( 419.674, 704.813, 26.0446, 0.3816 ) }
    dend_16 { pt3dadd( 420.339, 705.736, 26.1958, 0.5188 ) }
    dend_16 { pt3dadd( 421.079, 706.6, 26.3595, 0.505 ) }
    dend_16 { pt3dadd( 421.912, 707.367, 26.5173, 0.4088 ) }
    dend_16 { pt3dadd( 422.842, 708.03, 26.648, 0.3446 ) }
    dend_16 { pt3dadd( 423.846, 708.546, 26.7362, 0.358 ) }
    dend_16 { pt3dadd( 424.962, 708.735, 26.7651, 0.4254 ) }
    dend_16 { pt3dadd( 426.095, 708.74, 26.7102, 0.5722 ) }
    dend_16 { pt3dadd( 427.237, 708.74, 26.6111, 0.7394 ) }
    dend_16 { pt3dadd( 428.379, 708.74, 26.4887, 0.8722 ) }
    dend_16 { pt3dadd( 429.522, 708.74, 26.3643, 0.8356 ) }
    dend_16 { pt3dadd( 430.664, 708.748, 26.2517, 0.7668 ) }
    dend_16 { pt3dadd( 431.796, 708.853, 26.153, 0.6436 ) }
    dend_16 { pt3dadd( 432.911, 709.092, 26.0703, 0.6234 ) }
    dend_16 { pt3dadd( 434.047, 709.148, 26.0157, 0.4904 ) }
    dend_16 { pt3dadd( 435.177, 708.987, 26.0072, 0.4788 ) }
    dend_16 { pt3dadd( 436.294, 708.92, 26.0435, 0.4604 ) }
    dend_16 { pt3dadd( 437.423, 709.103, 26.1122, 0.4116 ) }
    dend_16 { pt3dadd( 438.553, 709.271, 26.2135, 0.3924 ) }
    dend_16 { pt3dadd( 439.684, 709.439, 26.3492, 0.4684 ) }
    dend_16 { pt3dadd( 440.767, 709.762, 26.5115, 0.525 ) }
    dend_16 { pt3dadd( 441.802, 710.243, 26.6921, 0.5812 ) }
    dend_16 { pt3dadd( 442.88, 710.585, 26.895, 0.4642 ) }
    dend_16 { pt3dadd( 444.005, 710.76, 27.1286, 0.4056 ) }
    dend_16 { pt3dadd( 445.103, 711.034, 27.3867, 0.4446 ) }
    dend_16 { pt3dadd( 446.167, 711.44, 27.6564, 0.4862 ) }
    dend_16 { pt3dadd( 447.24, 711.809, 27.9375, 0.4838 ) }
    dend_16 { pt3dadd( 448.316, 712.161, 28.2332, 0.4078 ) }
    dend_16 { pt3dadd( 449.339, 712.617, 28.5463, 0.3856 ) }
    dend_16 { pt3dadd( 450.335, 713.172, 28.8212, 0.4534 ) }
    dend_16 { pt3dadd( 451.216, 713.887, 29.0654, 0.5094 ) }
    dend_16 { pt3dadd( 451.993, 714.722, 29.2872, 0.493 ) }
    dend_16 { pt3dadd( 452.773, 715.555, 29.484, 0.5884 ) }
    dend_16 { pt3dadd( 453.552, 716.391, 29.6554, 0.6122 ) }
    dend_16 { pt3dadd( 454.304, 717.251, 29.8026, 0.4846 ) }
    dend_16 { pt3dadd( 454.971, 718.177, 29.9334, 0.3956 ) }
    dend_16 { pt3dadd( 455.6, 719.129, 30.0546, 0.4298 ) }
    dend_16 { pt3dadd( 456.312, 720.02, 30.1795, 0.4398 ) }
    dend_16 { pt3dadd( 457.113, 720.824, 30.3058, 0.49 ) }
    dend_16 { pt3dadd( 458.001, 721.539, 30.4153, 0.657 ) }
    dend_16 { pt3dadd( 458.831, 722.318, 30.4942, 0.8374 ) }
    dend_16 { pt3dadd( 459.585, 723.174, 30.5435, 0.6556 ) }
    dend_16 { pt3dadd( 460.15, 724.149, 30.5374, 0.537 ) }
    dend_16 { pt3dadd( 460.897, 724.981, 30.4223, 0.6274 ) }
    dend_16 { pt3dadd( 461.777, 725.694, 30.1904, 0.6634 ) }
    dend_16 { pt3dadd( 462.582, 726.478, 29.8497, 0.9116 ) }
    dend_16 { pt3dadd( 463.415, 727.214, 29.4109, 0.9468 ) }
    dend_16 { pt3dadd( 464.284, 727.879, 28.8938, 0.7886 ) }
    dend_16 { pt3dadd( 464.91, 728.809, 28.3836, 0.8926 ) }
    dend_16 { pt3dadd( 465.709, 729.532, 27.8567, 0.759 ) }
    dend_16 { pt3dadd( 466.464, 730.27, 27.3589, 0.9518 ) }
    dend_16 { pt3dadd( 467.218, 731.128, 27.0327, 0.7728 ) }
    dend_16 { pt3dadd( 467.97, 731.985, 26.8833, 0.5274 ) }
    dend_16 { pt3dadd( 468.737, 732.82, 26.8854, 0.3386 ) }
    dend_16 { pt3dadd( 469.547, 733.615, 26.9873, 0.299 ) }
    dend_16 { pt3dadd( 470.36, 734.412, 27.1341, 0.3194 ) }
    dend_16 { pt3dadd( 471.148, 735.24, 27.2681, 0.361 ) }
    dend_16 { pt3dadd( 472.035, 735.943, 27.3461, 0.4184 ) }
    dend_16 { pt3dadd( 473.054, 736.457, 27.3568, 0.6202 ) }
    dend_16 { pt3dadd( 474.155, 736.69, 27.3028, 0.5328 ) }
    dend_16 { pt3dadd( 475.297, 736.735, 27.1953, 0.5508 ) }
    dend_16 { pt3dadd( 476.409, 736.937, 27.038, 0.3972 ) }
    dend_16 { pt3dadd( 477.487, 737.289, 26.8305, 0.333 ) }
    dend_16 { pt3dadd( 478.517, 737.75, 26.5848, 0.2884 ) }
    dend_16 { pt3dadd( 479.322, 738.519, 26.3314, 0.3014 ) }
    dend_16 { pt3dadd( 480.035, 739.408, 26.0978, 0.3192 ) }
    dend_16 { pt3dadd( 480.654, 740.365, 25.902, 0.3828 ) }
    dend_16 { pt3dadd( 481.224, 741.356, 25.7546, 0.3512 ) }
    dend_16 { pt3dadd( 481.794, 742.347, 25.657, 0.3318 ) }
    dend_16 { pt3dadd( 482.365, 743.339, 25.6008, 0.3356 ) }
    dend_16 { pt3dadd( 482.953, 744.321, 25.5728, 0.3782 ) }
    dend_16 { pt3dadd( 483.552, 745.295, 25.5618, 0.5126 ) }
    dend_16 { pt3dadd( 484.151, 746.269, 25.5602, 0.4934 ) }
    dend_16 { pt3dadd( 484.751, 747.244, 25.5634, 0.3872 ) }
    dend_16 { pt3dadd( 485.213, 748.285, 25.569, 0.3044 ) }
    dend_16 { pt3dadd( 485.571, 749.37, 25.5768, 0.2828 ) }
    dend_16 { pt3dadd( 485.913, 750.463, 25.587, 0.29 ) }
    dend_16 { pt3dadd( 486.254, 751.554, 25.6004, 0.3028 ) }
    dend_16 { pt3dadd( 486.595, 752.647, 25.6179, 0.329 ) }
    dend_16 { pt3dadd( 486.937, 753.738, 25.6408, 0.3652 ) }
    dend_16 { pt3dadd( 487.278, 754.83, 25.6705, 0.4934 ) }
    dend_16 { pt3dadd( 487.62, 755.922, 25.7086, 0.4336 ) }
    dend_16 { pt3dadd( 487.961, 757.013, 25.7572, 0.3948 ) }
    dend_16 { pt3dadd( 488.306, 758.104, 25.819, 0.4294 ) }
    dend_16 { pt3dadd( 488.654, 759.194, 25.8971, 0.4342 ) }
    dend_16 { pt3dadd( 489.0, 760.283, 25.9936, 0.5022 ) }
    dend_16 { pt3dadd( 489.349, 761.371, 26.1092, 0.5714 ) }
    dend_16 { pt3dadd( 489.649, 762.473, 26.2457, 0.5178 ) }
    dend_16 { pt3dadd( 489.868, 763.591, 26.4052, 0.3854 ) }
    dend_16 { pt3dadd( 490.059, 764.714, 26.5846, 0.3014 ) }
    dend_16 { pt3dadd( 490.25, 765.836, 26.7749, 0.277 ) }
    dend_16 { pt3dadd( 490.424, 766.961, 26.9623, 0.2792 ) }
    dend_16 { pt3dadd( 490.504, 768.096, 27.1251, 0.2832 ) }
    dend_16 { pt3dadd( 490.547, 769.238, 27.2441, 0.2904 ) }
    dend_16 { pt3dadd( 490.754, 770.358, 27.3065, 0.3042 ) }
    dend_16 { pt3dadd( 491.057, 771.461, 27.306, 0.3286 ) }
    dend_16 { pt3dadd( 491.372, 772.56, 27.2427, 0.3792 ) }
    dend_16 { pt3dadd( 491.685, 773.66, 27.1219, 0.4476 ) }
    dend_16 { pt3dadd( 492.382, 774.516, 26.9446, 0.6974 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_16 { pt3dadd( 493.356, 775.084, 26.7073, 0.5634 ) }
    dend_16 { pt3dadd( 494.451, 775.329, 26.4129, 0.4686 ) }
    dend_16 { pt3dadd( 495.509, 775.725, 26.0892, 0.4608 ) }
    dend_16 { pt3dadd( 496.561, 776.154, 25.7562, 0.547 ) }
    dend_16 { pt3dadd( 497.614, 776.585, 25.4272, 0.4468 ) }
    dend_16 { pt3dadd( 498.668, 777.017, 25.111, 0.3796 ) }
    dend_16 { pt3dadd( 499.692, 777.514, 24.8031, 0.3648 ) }
    dend_16 { pt3dadd( 500.692, 778.05, 24.4915, 0.4926 ) }
    dend_16 { pt3dadd( 501.657, 778.635, 24.1591, 0.432 ) }
    dend_16 { pt3dadd( 502.106, 779.661, 23.825, 0.392 ) }
    dend_16 { pt3dadd( 502.474, 780.737, 23.5053, 0.4242 ) }
    dend_16 { pt3dadd( 502.628, 781.865, 23.2092, 0.4248 ) }
    dend_16 { pt3dadd( 502.77, 782.998, 22.9413, 0.4838 ) }
    dend_16 { pt3dadd( 503.485, 783.873, 22.6998, 0.5422 ) }
    dend_16 { pt3dadd( 504.234, 784.734, 22.4614, 0.4394 ) }
    dend_16 { pt3dadd( 504.964, 785.607, 22.2132, 0.3588 ) }
    dend_16 { pt3dadd( 505.69, 786.479, 21.9529, 0.3616 ) }
    dend_16 { pt3dadd( 506.429, 787.341, 21.6886, 0.3136 ) }
    dend_16 { pt3dadd( 507.211, 788.168, 21.4397, 0.2542 ) }
    dend_16 { pt3dadd( 507.989, 788.99, 20.9012, 0.2288 ) }
    // Section: dend_15, id: dend_15, parent: dend_14 (entry count 20/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( 399.304, 672.164, 25.457, 0.6516 ) }
    dend_15 { pt3dadd( 399.169, 672.837, 25.6888, 0.2288 ) }
    dend_15 { pt3dadd( 398.949, 673.929, 25.1953, 0.3018 ) }
    dend_15 { pt3dadd( 398.852, 675.048, 24.9899, 0.3274 ) }
    dend_15 { pt3dadd( 399.008, 676.176, 24.7852, 0.362 ) }
    dend_15 { pt3dadd( 399.195, 677.303, 24.6047, 0.4878 ) }
    dend_15 { pt3dadd( 399.421, 678.422, 24.466, 0.4214 ) }
    dend_15 { pt3dadd( 399.675, 679.536, 24.3809, 0.3798 ) }
    dend_15 { pt3dadd( 399.865, 680.664, 24.3544, 0.365 ) }
    dend_15 { pt3dadd( 400.028, 681.795, 24.3708, 0.4932 ) }
    dend_15 { pt3dadd( 400.129, 682.934, 24.4221, 0.4326 ) }
    dend_15 { pt3dadd( 400.206, 684.073, 24.499, 0.3944 ) }
    dend_15 { pt3dadd( 400.326, 685.208, 24.5839, 0.4228 ) }
    dend_15 { pt3dadd( 400.49, 686.339, 24.6566, 0.451 ) }
    dend_15 { pt3dadd( 400.618, 687.475, 24.7029, 0.393 ) }
    dend_15 { pt3dadd( 400.668, 688.617, 24.7147, 0.3642 ) }
    dend_15 { pt3dadd( 400.687, 689.761, 24.6862, 0.3842 ) }
    dend_15 { pt3dadd( 400.855, 690.877, 24.6123, 0.5238 ) }
    dend_15 { pt3dadd( 401.401, 691.857, 24.5002, 0.5142 ) }
    dend_15 { pt3dadd( 402.039, 692.797, 24.3712, 0.4266 ) }
    dend_15 { pt3dadd( 402.57, 693.808, 24.2418, 0.3732 ) }
    dend_15 { pt3dadd( 402.964, 694.874, 24.1226, 0.4308 ) }
    dend_15 { pt3dadd( 403.224, 695.987, 24.0198, 0.4654 ) }
    dend_15 { pt3dadd( 403.568, 697.075, 23.9339, 0.422 ) }
    dend_15 { pt3dadd( 404.024, 698.124, 23.8582, 0.4066 ) }
    dend_15 { pt3dadd( 404.6, 699.105, 23.7816, 0.5182 ) }
    dend_15 { pt3dadd( 405.322, 699.991, 23.6964, 0.5036 ) }
    dend_15 { pt3dadd( 406.04, 700.878, 23.5988, 0.407 ) }
    dend_15 { pt3dadd( 406.678, 701.826, 23.486, 0.3362 ) }
    dend_15 { pt3dadd( 407.362, 702.724, 23.3311, 0.3672 ) }
    dend_15 { pt3dadd( 408.185, 703.477, 23.1092, 0.322 ) }
    dend_15 { pt3dadd( 409.224, 703.783, 22.9018, 0.2796 ) }
    dend_15 { pt3dadd( 410.074, 704.495, 22.7475, 0.2288 ) }
    dend_15 { pt3dadd( 410.538, 705.54, 22.5599, 0.2288 ) }
    // Section: dend_7, id: dend_7, parent: dend_5 (entry count 54/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( 264.377, 643.166, 29.6036, 0.8044 ) }
    dend_7 { pt3dadd( 263.34, 644.647, 29.6153, 0.7814 ) }
    dend_7 { pt3dadd( 262.593, 645.513, 29.6148, 0.7846 ) }
    dend_7 { pt3dadd( 261.667, 646.185, 29.6136, 0.7886 ) }
    dend_7 { pt3dadd( 260.692, 646.783, 29.61, 0.8058 ) }
    dend_7 { pt3dadd( 259.797, 647.493, 29.6131, 0.7894 ) }
    dend_7 { pt3dadd( 258.991, 648.304, 29.6467, 0.7654 ) }
    dend_7 { pt3dadd( 258.354, 649.246, 29.7245, 0.6906 ) }
    dend_7 { pt3dadd( 257.974, 650.324, 29.8444, 0.6988 ) }
    dend_7 { pt3dadd( 257.543, 651.379, 30.0009, 0.6872 ) }
    dend_7 { pt3dadd( 256.93, 652.334, 30.1902, 0.5662 ) }
    dend_7 { pt3dadd( 256.072, 653.079, 30.4108, 0.5974 ) }
    dend_7 { pt3dadd( 255.112, 653.69, 30.6499, 0.5572 ) }
    dend_7 { pt3dadd( 254.231, 654.4, 30.896, 0.5012 ) }
    dend_7 { pt3dadd( 253.596, 655.336, 31.1419, 0.5376 ) }
    dend_7 { pt3dadd( 253.248, 656.417, 31.386, 0.6094 ) }
    dend_7 { pt3dadd( 252.93, 657.495, 31.6148, 0.7232 ) }
    dend_7 { pt3dadd( 252.284, 658.435, 31.8195, 0.7976 ) }
    dend_7 { pt3dadd( 251.645, 659.379, 32.0006, 0.6838 ) }
    dend_7 { pt3dadd( 251.039, 660.345, 32.1588, 0.5514 ) }
    dend_7 { pt3dadd( 250.281, 661.187, 32.2843, 0.61 ) }
    dend_7 { pt3dadd( 249.294, 661.699, 32.3876, 0.616 ) }
    dend_7 { pt3dadd( 248.161, 661.841, 32.4772, 0.6676 ) }
    dend_7 { pt3dadd( 247.046, 662.034, 32.5455, 0.5666 ) }
    dend_7 { pt3dadd( 246.106, 662.619, 32.5861, 0.6478 ) }
    dend_7 { pt3dadd( 245.32, 663.447, 32.5968, 0.64 ) }
    dend_7 { pt3dadd( 244.406, 664.121, 32.5758, 0.7066 ) }
    dend_7 { pt3dadd( 243.367, 664.584, 32.517, 0.6658 ) }
    dend_7 { pt3dadd( 242.298, 664.982, 32.4223, 0.7014 ) }
    dend_7 { pt3dadd( 241.227, 665.374, 32.3084, 0.6848 ) }
    dend_7 { pt3dadd( 240.13, 665.695, 32.1927, 0.5972 ) }
    dend_7 { pt3dadd( 239.033, 666.013, 32.088, 0.4824 ) }
    dend_7 { pt3dadd( 237.933, 666.323, 32.0034, 0.4958 ) }
    dend_7 { pt3dadd( 236.822, 666.597, 31.9441, 0.5656 ) }
    dend_7 { pt3dadd( 235.696, 666.785, 31.9091, 0.4762 ) }
    dend_7 { pt3dadd( 234.557, 666.883, 31.8872, 0.459 ) }
    dend_7 { pt3dadd( 233.45, 667.134, 31.8819, 0.3928 ) }
    dend_7 { pt3dadd( 232.368, 667.502, 31.9085, 0.4358 ) }
    dend_7 { pt3dadd( 231.277, 667.843, 31.9712, 0.398 ) }
    dend_7 { pt3dadd( 230.22, 668.265, 32.0676, 0.4392 ) }
    dend_7 { pt3dadd( 229.211, 668.8, 32.191, 0.4342 ) }
    dend_7 { pt3dadd( 228.196, 669.32, 32.3358, 0.3622 ) }
    dend_7 { pt3dadd( 227.178, 669.833, 32.492, 0.3052 ) }
    dend_7 { pt3dadd( 226.202, 670.423, 32.6466, 0.2842 ) }
    dend_7 { pt3dadd( 225.295, 671.115, 32.7902, 0.2924 ) }
    dend_7 { pt3dadd( 224.515, 671.942, 32.9151, 0.3086 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_15()
}

proc basic_shape_15() {
    dend_7 { pt3dadd( 223.859, 672.878, 33.0162, 0.3322 ) }
    dend_7 { pt3dadd( 223.359, 673.901, 33.0929, 0.4082 ) }
    dend_7 { pt3dadd( 222.978, 674.978, 33.147, 0.3928 ) }
    dend_7 { pt3dadd( 222.802, 676.099, 33.1839, 0.4358 ) }
    dend_7 { pt3dadd( 222.738, 677.242, 33.2091, 0.398 ) }
    dend_7 { pt3dadd( 222.86, 678.369, 33.2287, 0.4394 ) }
    dend_7 { pt3dadd( 223.148, 679.477, 33.2472, 0.4344 ) }
    dend_7 { pt3dadd( 223.508, 680.561, 33.2682, 0.3626 ) }
    dend_7 { pt3dadd( 223.938, 681.62, 33.2942, 0.306 ) }
    dend_7 { pt3dadd( 224.384, 682.674, 33.3273, 0.2856 ) }
    dend_7 { pt3dadd( 224.815, 683.733, 33.3693, 0.295 ) }
    dend_7 { pt3dadd( 225.194, 684.812, 33.4228, 0.3134 ) }
    dend_7 { pt3dadd( 225.401, 685.931, 33.4897, 0.3422 ) }
    dend_7 { pt3dadd( 225.524, 687.068, 33.5709, 0.4204 ) }
    dend_7 { pt3dadd( 225.62, 688.206, 33.6697, 0.4462 ) }
    dend_7 { pt3dadd( 225.691, 689.346, 33.7893, 0.3852 ) }
    dend_7 { pt3dadd( 225.798, 690.482, 33.9251, 0.3428 ) }
    dend_7 { pt3dadd( 225.989, 691.606, 34.0656, 0.3794 ) }
    dend_7 { pt3dadd( 226.069, 692.741, 34.2012, 0.345 ) }
    dend_7 { pt3dadd( 225.892, 693.864, 34.3244, 0.3206 ) }
    dend_7 { pt3dadd( 225.731, 694.994, 34.4299, 0.3136 ) }
    dend_7 { pt3dadd( 225.682, 696.135, 34.5148, 0.3428 ) }
    dend_7 { pt3dadd( 225.469, 697.251, 34.587, 0.4214 ) }
    dend_7 { pt3dadd( 225.098, 698.33, 34.6545, 0.4486 ) }
    dend_7 { pt3dadd( 224.977, 699.452, 34.7105, 0.3882 ) }
    dend_7 { pt3dadd( 224.848, 700.58, 34.7309, 0.3558 ) }
    dend_7 { pt3dadd( 224.544, 701.683, 34.7144, 0.3674 ) }
    dend_7 { pt3dadd( 224.234, 702.782, 34.6606, 0.4978 ) }
    dend_7 { pt3dadd( 223.814, 703.828, 34.561, 0.4402 ) }
    dend_7 { pt3dadd( 223.313, 704.855, 34.4512, 0.4144 ) }
    dend_7 { pt3dadd( 222.819, 705.886, 34.3428, 0.4308 ) }
    dend_7 { pt3dadd( 222.209, 706.836, 34.2423, 0.607 ) }
    dend_7 { pt3dadd( 221.371, 707.614, 34.148, 0.6836 ) }
    dend_7 { pt3dadd( 220.509, 708.361, 34.064, 0.6668 ) }
    dend_7 { pt3dadd( 219.572, 709.015, 34.0052, 0.4902 ) }
    dend_7 { pt3dadd( 218.568, 709.557, 33.9741, 0.4128 ) }
    dend_7 { pt3dadd( 217.496, 709.951, 33.969, 0.428 ) }
    dend_7 { pt3dadd( 216.438, 710.363, 33.9895, 0.6004 ) }
    dend_7 { pt3dadd( 215.502, 711.012, 34.036, 0.678 ) }
    dend_7 { pt3dadd( 214.708, 711.831, 34.0886, 0.6252 ) }
    dend_7 { pt3dadd( 213.883, 712.623, 34.1292, 0.5648 ) }
    dend_7 { pt3dadd( 212.948, 713.273, 34.1541, 0.5 ) }
    dend_7 { pt3dadd( 212.044, 713.97, 34.1524, 0.609 ) }
    dend_7 { pt3dadd( 211.324, 714.85, 34.1197, 0.6142 ) }
    dend_7 { pt3dadd( 210.611, 715.742, 34.0508, 0.6632 ) }
    dend_7 { pt3dadd( 209.765, 716.504, 33.9564, 0.5646 ) }
    dend_7 { pt3dadd( 208.887, 717.237, 33.8481, 0.6138 ) }
    dend_7 { pt3dadd( 208.01, 717.969, 33.7352, 0.7226 ) }
    dend_7 { pt3dadd( 207.206, 718.778, 33.6171, 0.8402 ) }
    dend_7 { pt3dadd( 206.602, 719.742, 33.4967, 0.7806 ) }
    dend_7 { pt3dadd( 205.672, 720.394, 33.3889, 0.6434 ) }
    dend_7 { pt3dadd( 204.611, 720.822, 33.3068, 0.52 ) }
    dend_7 { pt3dadd( 203.616, 721.385, 33.2506, 0.5692 ) }
    dend_7 { pt3dadd( 202.568, 721.843, 33.2119, 0.6844 ) }
    dend_7 { pt3dadd( 201.5, 722.251, 33.1862, 0.781 ) }
    dend_7 { pt3dadd( 200.463, 722.7, 33.185, 0.6142 ) }
    dend_7 { pt3dadd( 199.345, 722.943, 33.1514, 0.6096 ) }
    dend_7 { pt3dadd( 198.228, 723.162, 33.0529, 0.4958 ) }
    dend_7 { pt3dadd( 197.23, 723.644, 32.9011, 0.5668 ) }
    dend_7 { pt3dadd( 196.181, 723.991, 32.7309, 0.4746 ) }
    dend_7 { pt3dadd( 195.059, 724.21, 32.5427, 0.474 ) }
    dend_7 { pt3dadd( 194.54, 725.151, 32.2916, 0.562 ) }
    dend_7 { pt3dadd( 193.998, 725.889, 31.9194, 0.7496 ) }
    dend_7 { pt3dadd( 193.45, 726.774, 31.4896, 0.7504 ) }
    dend_7 { pt3dadd( 192.805, 727.483, 30.9935, 0.606 ) }
    dend_7 { pt3dadd( 192.694, 728.592, 30.5654, 0.5878 ) }
    dend_7 { pt3dadd( 192.239, 729.635, 30.2896, 0.7158 ) }
    dend_7 { pt3dadd( 191.63, 730.597, 30.1745, 0.6266 ) }
    dend_7 { pt3dadd( 191.127, 731.611, 30.1946, 0.6726 ) }
    dend_7 { pt3dadd( 190.465, 732.512, 30.2946, 0.6478 ) }
    dend_7 { pt3dadd( 189.989, 733.533, 30.4198, 0.6778 ) }
    dend_7 { pt3dadd( 189.601, 734.598, 30.5771, 0.8226 ) }
    dend_7 { pt3dadd( 189.374, 735.693, 30.7776, 0.6586 ) }
    dend_7 { pt3dadd( 188.714, 736.553, 30.9753, 0.623 ) }
    dend_7 { pt3dadd( 188.581, 737.66, 31.1035, 0.6258 ) }
    dend_7 { pt3dadd( 188.355, 738.779, 31.1777, 0.7558 ) }
    dend_7 { pt3dadd( 188.27, 739.92, 31.229, 0.8482 ) }
    dend_7 { pt3dadd( 188.162, 741.054, 31.2794, 0.826 ) }
    dend_7 { pt3dadd( 188.255, 742.187, 31.3471, 0.5792 ) }
    dend_7 { pt3dadd( 188.392, 743.319, 31.4056, 0.4338 ) }
    dend_7 { pt3dadd( 188.581, 744.442, 31.4432, 0.4796 ) }
    dend_7 { pt3dadd( 189.109, 745.401, 31.4843, 0.4068 ) }
    dend_7 { pt3dadd( 189.925, 746.111, 31.5179, 0.3502 ) }
    dend_7 { pt3dadd( 190.048, 747.166, 31.498, 0.322 ) }
    dend_7 { pt3dadd( 190.151, 748.232, 31.3631, 0.356 ) }
    dend_7 { pt3dadd( 189.61, 749.099, 31.0811, 0.4576 ) }
    dend_7 { pt3dadd( 189.512, 750.085, 29.892, 0.4576 ) }
    // Section: dend_6, id: dend_6, parent: dend_5 (entry count 87/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 264.377, 643.166, 29.6036, 0.8044 ) }
    dend_6 { pt3dadd( 263.812, 643.596, 29.946, 0.6864 ) }
    dend_6 { pt3dadd( 262.764, 643.854, 30.3654, 0.5696 ) }
    dend_6 { pt3dadd( 261.644, 644.04, 30.5192, 0.5742 ) }
    dend_6 { pt3dadd( 260.618, 644.53, 30.6883, 0.6592 ) }
    dend_6 { pt3dadd( 259.78, 645.296, 30.8798, 0.6724 ) }
    dend_6 { pt3dadd( 258.926, 646.055, 31.0836, 0.7134 ) }
    dend_6 { pt3dadd( 258.195, 646.918, 31.3144, 0.7082 ) }
    dend_6 { pt3dadd( 257.228, 647.506, 31.5787, 0.635 ) }
    dend_6 { pt3dadd( 256.285, 648.138, 31.8668, 0.578 ) }
    dend_6 { pt3dadd( 255.325, 648.747, 32.1602, 0.5496 ) }
    dend_6 { pt3dadd( 254.327, 649.267, 32.4458, 0.5796 ) }
    dend_6 { pt3dadd( 253.213, 649.499, 32.7312, 0.4616 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_16()
}

proc basic_shape_16() {
    dend_6 { pt3dadd( 252.091, 649.662, 33.0137, 0.3996 ) }
    dend_6 { pt3dadd( 250.951, 649.691, 33.2878, 0.4384 ) }
    dend_6 { pt3dadd( 249.957, 649.998, 33.5549, 0.4512 ) }
    dend_6 { pt3dadd( 249.369, 650.964, 33.8338, 0.532 ) }
    dend_6 { pt3dadd( 248.789, 651.93, 34.1258, 0.6338 ) }
    dend_6 { pt3dadd( 248.316, 652.954, 34.4016, 0.5994 ) }
    dend_6 { pt3dadd( 247.817, 653.968, 34.6718, 0.7028 ) }
    dend_6 { pt3dadd( 246.899, 654.622, 34.9174, 0.7688 ) }
    dend_6 { pt3dadd( 246.023, 655.352, 35.1243, 0.8162 ) }
    dend_6 { pt3dadd( 245.197, 656.141, 35.287, 0.8096 ) }
    dend_6 { pt3dadd( 244.314, 656.867, 35.411, 0.7992 ) }
    dend_6 { pt3dadd( 243.401, 657.556, 35.506, 0.7712 ) }
    dend_6 { pt3dadd( 242.459, 658.205, 35.5779, 0.7604 ) }
    dend_6 { pt3dadd( 241.504, 658.836, 35.6406, 0.5412 ) }
    dend_6 { pt3dadd( 240.424, 659.197, 35.705, 0.4156 ) }
    dend_6 { pt3dadd( 239.295, 659.373, 35.7792, 0.4214 ) }
    dend_6 { pt3dadd( 238.278, 659.882, 35.8688, 0.4174 ) }
    dend_6 { pt3dadd( 237.433, 660.65, 35.9766, 0.482 ) }
    dend_6 { pt3dadd( 236.742, 661.557, 36.1158, 0.4796 ) }
    dend_6 { pt3dadd( 236.357, 662.63, 36.286, 0.6118 ) }
    dend_6 { pt3dadd( 235.884, 663.666, 36.4806, 0.6502 ) }
    dend_6 { pt3dadd( 235.285, 664.638, 36.6867, 0.5808 ) }
    dend_6 { pt3dadd( 234.696, 665.615, 36.8976, 0.4494 ) }
    dend_6 { pt3dadd( 234.118, 666.597, 37.1132, 0.4476 ) }
    dend_6 { pt3dadd( 233.39, 667.472, 37.3307, 0.4136 ) }
    dend_6 { pt3dadd( 232.691, 668.372, 37.5427, 0.4988 ) }
    dend_6 { pt3dadd( 232.265, 669.427, 37.744, 0.3952 ) }
    dend_6 { pt3dadd( 232.246, 670.566, 37.9406, 0.3292 ) }
    dend_6 { pt3dadd( 232.226, 671.709, 38.1212, 0.2816 ) }
    dend_6 { pt3dadd( 232.494, 672.76, 38.2931, 0.2876 ) }
    dend_6 { pt3dadd( 232.947, 673.782, 38.4611, 0.2996 ) }
    dend_6 { pt3dadd( 232.971, 674.904, 38.6176, 0.3158 ) }
    dend_6 { pt3dadd( 232.527, 675.925, 38.757, 0.3768 ) }
    dend_6 { pt3dadd( 232.123, 676.968, 38.878, 0.34 ) }
    dend_6 { pt3dadd( 231.941, 678.097, 38.9889, 0.3114 ) }
    dend_6 { pt3dadd( 231.835, 679.234, 39.0958, 0.2958 ) }
    dend_6 { pt3dadd( 231.773, 680.376, 39.2062, 0.3134 ) }
    dend_6 { pt3dadd( 231.715, 681.517, 39.3288, 0.3484 ) }
    dend_6 { pt3dadd( 231.654, 682.658, 39.4727, 0.403 ) }
    dend_6 { pt3dadd( 231.591, 683.797, 39.6444, 0.5534 ) }
    dend_6 { pt3dadd( 231.595, 684.937, 39.8415, 0.5946 ) }
    dend_6 { pt3dadd( 231.66, 686.074, 40.0596, 0.4508 ) }
    dend_6 { pt3dadd( 231.594, 687.205, 40.2962, 0.3378 ) }
    dend_6 { pt3dadd( 231.393, 688.324, 40.5499, 0.2988 ) }
    dend_6 { pt3dadd( 231.271, 689.452, 40.8108, 0.3142 ) }
    dend_6 { pt3dadd( 231.248, 690.592, 41.067, 0.3734 ) }
    dend_6 { pt3dadd( 231.279, 691.732, 41.3134, 0.334 ) }
    dend_6 { pt3dadd( 231.395, 692.867, 41.5506, 0.3 ) }
    dend_6 { pt3dadd( 231.556, 693.997, 41.7836, 0.2746 ) }
    dend_6 { pt3dadd( 231.623, 695.133, 42.0252, 0.2748 ) }
    dend_6 { pt3dadd( 231.706, 696.267, 42.2909, 0.2748 ) }
    dend_6 { pt3dadd( 231.55, 697.372, 42.5844, 0.2752 ) }
    dend_6 { pt3dadd( 231.148, 698.414, 42.9254, 0.2756 ) }
    dend_6 { pt3dadd( 230.221, 699.003, 43.2978, 0.2766 ) }
    dend_6 { pt3dadd( 229.141, 699.35, 43.65, 0.2782 ) }
    dend_6 { pt3dadd( 228.077, 699.73, 43.9519, 0.2814 ) }
    dend_6 { pt3dadd( 226.942, 699.758, 44.2002, 0.287 ) }
    dend_6 { pt3dadd( 225.942, 700.209, 44.4021, 0.2988 ) }
    dend_6 { pt3dadd( 225.008, 700.806, 44.5802, 0.3142 ) }
    dend_6 { pt3dadd( 223.972, 701.266, 44.7748, 0.3734 ) }
    dend_6 { pt3dadd( 222.876, 701.449, 45.0262, 0.3338 ) }
    dend_6 { pt3dadd( 221.756, 701.612, 45.313, 0.3 ) }
    dend_6 { pt3dadd( 220.633, 701.753, 45.6198, 0.2746 ) }
    dend_6 { pt3dadd( 219.519, 701.922, 45.9208, 0.2746 ) }
    dend_6 { pt3dadd( 218.478, 702.383, 46.2008, 0.2746 ) }
    dend_6 { pt3dadd( 217.452, 702.88, 46.4439, 0.2746 ) }
    dend_6 { pt3dadd( 216.4, 703.306, 46.6435, 0.2746 ) }
    dend_6 { pt3dadd( 215.28, 703.327, 46.8068, 0.2746 ) }
    dend_6 { pt3dadd( 214.186, 702.993, 46.9431, 0.2748 ) }
    dend_6 { pt3dadd( 213.093, 702.659, 47.0669, 0.275 ) }
    dend_6 { pt3dadd( 211.999, 702.325, 47.1934, 0.2752 ) }
    dend_6 { pt3dadd( 210.916, 701.961, 47.3371, 0.2758 ) }
    dend_6 { pt3dadd( 209.824, 701.682, 47.5059, 0.2768 ) }
    dend_6 { pt3dadd( 208.69, 701.739, 47.7229, 0.2788 ) }
    dend_6 { pt3dadd( 207.588, 702.003, 48.0012, 0.2824 ) }
    dend_6 { pt3dadd( 206.537, 702.313, 48.3829, 0.2882 ) }
    dend_6 { pt3dadd( 205.482, 702.683, 48.804, 0.305 ) }
    dend_6 { pt3dadd( 204.453, 703.147, 49.2162, 0.305 ) }
    dend_6 { pt3dadd( 203.474, 703.634, 50.1959, 0.4576 ) }
    // Section: dend_4, id: dend_4, parent: dend_2 (entry count 79/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 330.042, 588.373, 17.2139, 0.5412 ) }
    dend_4 { pt3dadd( 329.32, 588.968, 17.3534, 0.432 ) }
    dend_4 { pt3dadd( 328.548, 589.719, 17.4149, 0.35 ) }
    dend_4 { pt3dadd( 327.54, 590.183, 17.4504, 0.3212 ) }
    dend_4 { pt3dadd( 326.607, 590.838, 17.4519, 0.3552 ) }
    dend_4 { pt3dadd( 325.537, 591.223, 17.414, 0.453 ) }
    dend_4 { pt3dadd( 324.556, 591.796, 17.3351, 0.4656 ) }
    dend_4 { pt3dadd( 324.024, 592.689, 17.2168, 0.6208 ) }
    dend_4 { pt3dadd( 323.473, 593.674, 17.0193, 0.497 ) }
    dend_4 { pt3dadd( 322.923, 594.659, 16.7675, 0.4362 ) }
    dend_4 { pt3dadd( 322.372, 595.644, 16.4849, 0.4182 ) }
    dend_4 { pt3dadd( 321.922, 596.63, 16.1888, 0.6124 ) }
    dend_4 { pt3dadd( 321.768, 597.732, 15.9695, 0.5546 ) }
    dend_4 { pt3dadd( 320.897, 598.351, 15.8214, 0.416 ) }
    dend_4 { pt3dadd( 320.549, 599.407, 15.7353, 0.3106 ) }
    dend_4 { pt3dadd( 319.672, 599.987, 15.6936, 0.2954 ) }
    dend_4 { pt3dadd( 318.675, 600.51, 15.68, 0.3078 ) }
    dend_4 { pt3dadd( 317.781, 601.188, 15.68, 0.3616 ) }
    dend_4 { pt3dadd( 316.75, 601.559, 15.68, 0.3136 ) }
    dend_4 { pt3dadd( 315.862, 602.092, 15.68, 0.2542 ) }
    dend_4 { pt3dadd( 314.943, 602.659, 15.68, 0.2288 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_17()
}

proc basic_shape_17() {
    // Section: dend_3, id: dend_3, parent: dend_2 (entry count 0/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 330.042, 588.373, 17.2139, 0.5412 ) }
    dend_3 { pt3dadd( 329.379, 588.615, 16.9523, 0.9152 ) }
    dend_3 { pt3dadd( 328.271, 588.846, 17.2178, 0.9058 ) }
    dend_3 { pt3dadd( 327.162, 589.094, 17.3414, 0.873 ) }
    dend_3 { pt3dadd( 326.083, 589.453, 17.4818, 0.7288 ) }
    dend_3 { pt3dadd( 325.029, 589.891, 17.6119, 0.6368 ) }
    dend_3 { pt3dadd( 323.967, 590.314, 17.7037, 0.76 ) }
    dend_3 { pt3dadd( 322.939, 590.811, 17.743, 0.9342 ) }
    dend_3 { pt3dadd( 321.861, 591.187, 17.7343, 1.0622 ) }
    dend_3 { pt3dadd( 320.743, 591.422, 17.6973, 0.8744 ) }
    dend_3 { pt3dadd( 319.616, 591.291, 17.6416, 0.9886 ) }
    dend_3 { pt3dadd( 318.515, 591.539, 17.5773, 1.014 ) }
    dend_3 { pt3dadd( 317.436, 591.919, 17.5284, 0.822 ) }
    dend_3 { pt3dadd( 316.3, 592.021, 17.4944, 0.7118 ) }
    dend_3 { pt3dadd( 315.175, 592.115, 17.2603, 1.144 ) }
    // Section: dend_34, id: dend_34, parent: dend_32 (entry count 15/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 476.384, 533.707, 24.7187, 0.694 ) }
    dend_34 { pt3dadd( 477.535, 533.395, 24.4539, 0.5576 ) }
    dend_34 { pt3dadd( 478.662, 533.231, 24.2781, 0.5234 ) }
    dend_34 { pt3dadd( 479.803, 533.202, 24.1006, 0.473 ) }
    dend_34 { pt3dadd( 480.941, 533.111, 23.9381, 0.5466 ) }
    dend_34 { pt3dadd( 482.038, 532.795, 23.8, 0.7866 ) }
    dend_34 { pt3dadd( 483.132, 532.459, 23.6849, 0.9574 ) }
    dend_34 { pt3dadd( 484.272, 532.435, 23.583, 0.7758 ) }
    dend_34 { pt3dadd( 485.361, 532.772, 23.4793, 0.7974 ) }
    dend_34 { pt3dadd( 486.456, 533.101, 23.3798, 0.7006 ) }
    dend_34 { pt3dadd( 487.599, 533.089, 23.284, 0.727 ) }
    dend_34 { pt3dadd( 488.72, 532.871, 23.1937, 0.693 ) }
    dend_34 { pt3dadd( 489.862, 532.823, 23.1169, 0.5752 ) }
    dend_34 { pt3dadd( 490.985, 533.032, 23.0613, 0.6214 ) }
    dend_34 { pt3dadd( 492.121, 533.165, 23.0279, 0.5668 ) }
    dend_34 { pt3dadd( 493.26, 533.065, 23.0084, 0.6896 ) }
    dend_34 { pt3dadd( 494.395, 532.921, 23.0108, 0.7446 ) }
    dend_34 { pt3dadd( 495.536, 532.89, 23.0545, 0.7694 ) }
    dend_34 { pt3dadd( 496.674, 532.788, 23.1389, 0.7332 ) }
    dend_34 { pt3dadd( 497.816, 532.757, 23.2606, 0.6062 ) }
    dend_34 { pt3dadd( 498.958, 532.744, 23.421, 0.6616 ) }
    dend_34 { pt3dadd( 500.09, 532.652, 23.6121, 0.7264 ) }
    dend_34 { pt3dadd( 501.161, 532.273, 23.8203, 0.571 ) }
    dend_34 { pt3dadd( 502.094, 531.619, 24.0498, 0.4778 ) }
    dend_34 { pt3dadd( 503.034, 530.989, 24.3088, 0.503 ) }
    dend_34 { pt3dadd( 504.053, 530.497, 24.5913, 0.7314 ) }
    dend_34 { pt3dadd( 505.118, 530.125, 24.8781, 0.9598 ) }
    dend_34 { pt3dadd( 506.241, 529.96, 25.1582, 0.9584 ) }
    dend_34 { pt3dadd( 507.357, 529.752, 25.4125, 0.729 ) }
    dend_34 { pt3dadd( 508.448, 529.419, 25.6181, 0.7176 ) }
    dend_34 { pt3dadd( 509.549, 529.124, 25.763, 0.7478 ) }
    dend_34 { pt3dadd( 510.672, 528.928, 25.845, 0.784 ) }
    dend_34 { pt3dadd( 511.755, 528.559, 25.8646, 0.7172 ) }
    dend_34 { pt3dadd( 512.799, 528.104, 25.8351, 0.785 ) }
    dend_34 { pt3dadd( 513.839, 527.689, 25.787, 0.6688 ) }
    dend_34 { pt3dadd( 514.976, 527.582, 25.722, 0.7114 ) }
    dend_34 { pt3dadd( 516.111, 527.442, 25.6549, 0.9098 ) }
    dend_34 { pt3dadd( 517.224, 527.199, 25.5994, 0.9276 ) }
    dend_34 { pt3dadd( 518.272, 526.758, 25.5627, 0.8298 ) }
    dend_34 { pt3dadd( 519.28, 526.219, 25.5515, 1.054 ) }
    dend_34 { pt3dadd( 520.34, 525.798, 25.5781, 1.1038 ) }
    dend_34 { pt3dadd( 521.455, 525.639, 25.6494, 0.9116 ) }
    dend_34 { pt3dadd( 522.53, 525.933, 25.7757, 0.7928 ) }
    dend_34 { pt3dadd( 523.602, 526.23, 25.9805, 0.7918 ) }
    dend_34 { pt3dadd( 524.606, 525.841, 26.2693, 0.6416 ) }
    dend_34 { pt3dadd( 525.637, 525.375, 26.5896, 0.6256 ) }
    dend_34 { pt3dadd( 526.724, 525.042, 26.9066, 0.695 ) }
    dend_34 { pt3dadd( 527.855, 525.149, 27.197, 0.8002 ) }
    dend_34 { pt3dadd( 528.782, 525.76, 27.4323, 0.651 ) }
    dend_34 { pt3dadd( 529.269, 526.788, 27.6463, 0.6722 ) }
    dend_34 { pt3dadd( 529.908, 527.686, 27.9246, 0.6394 ) }
    dend_34 { pt3dadd( 530.507, 528.637, 28.2467, 0.6988 ) }
    dend_34 { pt3dadd( 530.951, 529.671, 28.6118, 0.6846 ) }
    dend_34 { pt3dadd( 531.474, 530.666, 29.0136, 0.5744 ) }
    dend_34 { pt3dadd( 532.483, 531.171, 29.4042, 0.5482 ) }
    dend_34 { pt3dadd( 533.556, 531.564, 29.7517, 0.7804 ) }
    dend_34 { pt3dadd( 534.583, 532.023, 30.095, 0.762 ) }
    dend_34 { pt3dadd( 535.464, 532.67, 30.4713, 0.6186 ) }
    dend_34 { pt3dadd( 536.477, 532.467, 30.8927, 0.4266 ) }
    dend_34 { pt3dadd( 537.518, 532.052, 31.3001, 0.3982 ) }
    dend_34 { pt3dadd( 538.554, 531.58, 31.6484, 0.356 ) }
    dend_34 { pt3dadd( 539.697, 531.558, 32.1479, 0.2288 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 77/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 476.384, 533.707, 24.7187, 0.694 ) }
    dend_33 { pt3dadd( 477.395, 532.255, 24.2315, 0.8606 ) }
    dend_33 { pt3dadd( 478.287, 531.552, 24.0248, 0.5934 ) }
    dend_33 { pt3dadd( 479.164, 530.837, 23.8206, 0.4734 ) }
    dend_33 { pt3dadd( 479.811, 529.905, 23.6417, 0.488 ) }
    dend_33 { pt3dadd( 480.329, 528.887, 23.4935, 0.7382 ) }
    dend_33 { pt3dadd( 480.895, 527.894, 23.3767, 0.8046 ) }
    dend_33 { pt3dadd( 481.401, 526.87, 23.2978, 0.7976 ) }
    dend_33 { pt3dadd( 481.742, 525.785, 23.2457, 0.7312 ) }
    dend_33 { pt3dadd( 481.95, 524.66, 23.2063, 0.6368 ) }
    dend_33 { pt3dadd( 482.409, 523.663, 23.1568, 0.5514 ) }
    dend_33 { pt3dadd( 483.355, 523.087, 23.0784, 0.6454 ) }
    dend_33 { pt3dadd( 484.457, 522.791, 22.9694, 0.7386 ) }
    dend_33 { pt3dadd( 485.533, 522.425, 22.8337, 0.6194 ) }
    dend_33 { pt3dadd( 486.278, 521.645, 22.6721, 0.4416 ) }
    dend_33 { pt3dadd( 486.803, 520.634, 22.4944, 0.3596 ) }
    dend_33 { pt3dadd( 487.716, 520.062, 22.3207, 0.3794 ) }
    dend_33 { pt3dadd( 488.841, 519.91, 22.1703, 0.4972 ) }
    dend_33 { pt3dadd( 489.955, 519.664, 22.0476, 0.5494 ) }
    dend_33 { pt3dadd( 490.917, 519.069, 21.9492, 0.7678 ) }
    dend_33 { pt3dadd( 491.776, 518.317, 21.8721, 0.8114 ) }
    dend_33 { pt3dadd( 492.678, 517.614, 21.8107, 0.8156 ) }
    dend_33 { pt3dadd( 493.574, 516.904, 21.7575, 0.7372 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_18()
}

proc basic_shape_18() {
    dend_33 { pt3dadd( 494.462, 516.182, 21.7071, 0.782 ) }
    dend_33 { pt3dadd( 495.43, 515.577, 21.6582, 0.857 ) }
    dend_33 { pt3dadd( 496.432, 515.026, 21.6071, 0.8066 ) }
    dend_33 { pt3dadd( 497.377, 514.386, 21.5516, 0.7172 ) }
    dend_33 { pt3dadd( 498.229, 513.626, 21.5017, 0.5312 ) }
    dend_33 { pt3dadd( 499.045, 512.826, 21.4712, 0.5144 ) }
    dend_33 { pt3dadd( 499.863, 512.026, 21.4781, 0.4922 ) }
    dend_33 { pt3dadd( 500.708, 511.257, 21.5246, 0.6362 ) }
    dend_33 { pt3dadd( 501.657, 510.623, 21.6006, 0.6902 ) }
    dend_33 { pt3dadd( 502.655, 510.07, 21.6929, 0.6806 ) }
    dend_33 { pt3dadd( 503.611, 509.443, 21.7865, 0.5102 ) }
    dend_33 { pt3dadd( 504.374, 508.597, 21.8688, 0.4756 ) }
    dend_33 { pt3dadd( 505.142, 507.75, 21.9311, 0.4188 ) }
    dend_33 { pt3dadd( 506.092, 507.121, 21.9813, 0.5084 ) }
    dend_33 { pt3dadd( 506.877, 506.296, 22.0181, 0.413 ) }
    dend_33 { pt3dadd( 507.015, 505.174, 22.0126, 0.3616 ) }
    dend_33 { pt3dadd( 507.032, 504.03, 21.9615, 0.3446 ) }
    dend_33 { pt3dadd( 507.111, 502.89, 21.8656, 0.3898 ) }
    dend_33 { pt3dadd( 507.474, 501.809, 21.7238, 0.5592 ) }
    dend_33 { pt3dadd( 507.923, 500.767, 21.5277, 0.4576 ) }
    dend_33 { pt3dadd( 508.394, 499.814, 20.72, 0.2288 ) }
    // Section: dend_24, id: dend_24, parent: dend_22 (entry count 21/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( 351.66, 497.26, 26.9694, 0.436 ) }
    dend_24 { pt3dadd( 352.751, 497.022, 27.4378, 0.4156 ) }
    dend_24 { pt3dadd( 353.467, 496.192, 27.8038, 0.5864 ) }
    dend_24 { pt3dadd( 354.456, 495.677, 28.231, 0.6092 ) }
    dend_24 { pt3dadd( 355.444, 495.136, 28.6961, 0.704 ) }
    dend_24 { pt3dadd( 356.11, 494.263, 29.2149, 1.0822 ) }
    dend_24 { pt3dadd( 356.516, 493.222, 29.743, 1.259 ) }
    dend_24 { pt3dadd( 357.247, 492.394, 30.2716, 1.1584 ) }
    dend_24 { pt3dadd( 358.176, 492.225, 30.8006, 0.7632 ) }
    dend_24 { pt3dadd( 359.134, 492.538, 31.3018, 0.5852 ) }
    dend_24 { pt3dadd( 360.129, 492.056, 31.7542, 0.7658 ) }
    dend_24 { pt3dadd( 360.941, 491.27, 32.167, 0.682 ) }
    dend_24 { pt3dadd( 361.902, 490.984, 32.5525, 0.727 ) }
    dend_24 { pt3dadd( 363.011, 491.22, 32.9078, 0.7546 ) }
    dend_24 { pt3dadd( 364.125, 491.449, 33.2298, 0.6178 ) }
    dend_24 { pt3dadd( 365.256, 491.48, 33.5306, 0.591 ) }
    dend_24 { pt3dadd( 365.998, 490.784, 33.8405, 0.5838 ) }
    dend_24 { pt3dadd( 367.042, 490.853, 34.1578, 0.8212 ) }
    dend_24 { pt3dadd( 368.134, 491.152, 34.4254, 0.9608 ) }
    dend_24 { pt3dadd( 369.235, 491.433, 34.6581, 0.8478 ) }
    dend_24 { pt3dadd( 370.248, 491.098, 34.8818, 0.6124 ) }
    dend_24 { pt3dadd( 370.877, 490.181, 35.1117, 0.53 ) }
    dend_24 { pt3dadd( 370.669, 489.134, 35.3514, 0.7194 ) }
    dend_24 { pt3dadd( 369.992, 488.229, 35.6037, 0.7804 ) }
    dend_24 { pt3dadd( 369.109, 487.513, 35.8658, 0.7024 ) }
    dend_24 { pt3dadd( 368.216, 486.806, 36.1558, 0.7976 ) }
    dend_24 { pt3dadd( 367.391, 486.031, 36.4787, 0.9548 ) }
    dend_24 { pt3dadd( 366.747, 485.101, 36.8169, 1.1102 ) }
    dend_24 { pt3dadd( 366.214, 484.115, 37.1801, 0.9152 ) }
    dend_24 { pt3dadd( 366.024, 483.004, 37.539, 0.6102 ) }
    dend_24 { pt3dadd( 366.207, 481.904, 38.3519, 0.6864 ) }
    // Section: dend_23, id: dend_23, parent: dend_22 (entry count 52/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( 351.66, 497.26, 26.9694, 0.436 ) }
    dend_23 { pt3dadd( 351.592, 497.017, 26.3985, 0.2288 ) }
    dend_23 { pt3dadd( 350.854, 496.151, 26.501, 0.2836 ) }
    dend_23 { pt3dadd( 350.152, 495.249, 26.544, 0.2912 ) }
    dend_23 { pt3dadd( 349.613, 494.241, 26.5912, 0.3054 ) }
    dend_23 { pt3dadd( 349.223, 493.166, 26.6395, 0.3316 ) }
    dend_23 { pt3dadd( 348.938, 492.058, 26.6877, 0.3816 ) }
    dend_23 { pt3dadd( 348.794, 490.924, 26.7343, 0.466 ) }
    dend_23 { pt3dadd( 348.824, 489.78, 26.7795, 0.6638 ) }
    dend_23 { pt3dadd( 348.743, 488.639, 26.8228, 0.8304 ) }
    dend_23 { pt3dadd( 348.672, 487.497, 26.8616, 0.7372 ) }
    dend_23 { pt3dadd( 348.715, 486.354, 26.9394, 0.9152 ) }

}


proc subsets() { local i

    // Group: {name=soma, groups=[], sections=[soma_0]}
    soma = new SectionList()
    soma_0 soma.append()

    // Group: {name=dend, groups=[], sections=[dend_38, dend_37, dend_36, dend_35, dend_18, dend_11, dend_0, dend_26, dend_19, dend_17, dend_12, dend_8, dend_1, dend_30, dend_27, dend_21, dend_20, dend_14, dend_13, dend_10, dend_9, dend_5, dend_2, dend_32, dend_31, dend_29, dend_28, dend_25, dend_22, dend_16, dend_15, dend_7, dend_6, dend_4, dend_3, dend_34, dend_33, dend_24, dend_23]}
    dend = new SectionList()
    dend_38 dend.append()
    dend_37 dend.append()
    dend_36 dend.append()
    dend_35 dend.append()
    dend_18 dend.append()
    dend_11 dend.append()
    dend_0 dend.append()
    dend_26 dend.append()
    dend_19 dend.append()
    dend_17 dend.append()
    dend_12 dend.append()
    dend_8 dend.append()
    dend_1 dend.append()
    dend_30 dend.append()
    dend_27 dend.append()
    dend_21 dend.append()
    dend_20 dend.append()
    dend_14 dend.append()
    dend_13 dend.append()
    dend_10 dend.append()
    dend_9 dend.append()
    dend_5 dend.append()
    dend_2 dend.append()
    dend_32 dend.append()
    dend_31 dend.append()
    dend_29 dend.append()
    dend_28 dend.append()
    dend_25 dend.append()
    dend_22 dend.append()
    dend_16 dend.append()
    dend_15 dend.append()
    dend_7 dend.append()
    dend_6 dend.append()
    dend_4 dend.append()
    dend_3 dend.append()
    dend_34 dend.append()
    dend_33 dend.append()
    dend_24 dend.append()
    dend_23 dend.append()

    // Group: {name=axon, groups=[], sections=[axon_0, axon_1]}
    axon = new SectionList()
    axon_0 axon.append()
    axon_1 axon.append()

    // Group: {name=OneSecGrp_SectionRef_18601, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_18601 = new SectionList()
    soma_0 OneSecGrp_SectionRef_18601.append()

    // Group: {name=soma_group, groups=[soma], sections=[]}
    soma_group = new SectionList()
    forsec soma soma_group.append()

    // Group: {name=axon_group, groups=[axon], sections=[]}
    axon_group = new SectionList()
    forsec axon axon_group.append()

    // Group: {name=dendrite_group, groups=[dend], sections=[]}
    dendrite_group = new SectionList()
    forsec dend dendrite_group.append()

    // Group: {name=all, sections=[soma_0, soma_0, axon_0, axon_0, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, axon_1, axon_1, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_26, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_8, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_1, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_20, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_32, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_16, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_4, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23, dend_23]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_26 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_8 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_1 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_17()
}

proc subsets_17() {
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_18()
}

proc subsets_18() {
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()

}


proc subsets_inhomogeneous() {
}

proc biophys() {

    // Specific capacitance
    forsec soma cm = 2.3203053  // units: uF/cm2
    forsec axon cm = 2.3203053  // units: uF/cm2
    forsec dend cm = 2.3203053  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 216.7308  // units: ohm cm

    // Channel densities
    forsec soma {
        insert Ih
        gmax_Ih = 2.1200365E-4  // units: S cm-2
        ehcn = -45.0  // units: mV
    }
    forsec soma {
        insert NaV
        gmax_NaV = 0.06843474  // units: S cm-2
        ena = 53.0  // units: mV
    }
    forsec soma {
        insert Kd
        gmax_Kd = 3.7959112E-6  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv2like
        gmax_Kv2like = 0.021716135  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Kv3_1
        gmax_Kv3_1 = 0.41319427  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert K_T
        gmax_K_T = 0.038022578  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert Im_v2
        gmax_Im_v2 = 0.008199019  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert SK
        gmax_SK = 2.27552E-5  // units: S cm-2
        ek = -107.0  // units: mV
    }
    forsec soma {
        insert pas_nml2
        gmax_pas_nml2 = 1.5676237E-4  // units: S cm-2
        e_pas_nml2 = -88.54208  // units: mV
    }
    forsec axon {
        insert pas_nml2
        gmax_pas_nml2 = 2.0608063E-4  // units: S cm-2
        e_pas_nml2 = -88.54208  // units: mV
    }
    forsec dend {
        insert pas_nml2
        gmax_pas_nml2 = 8.370689E-6  // units: S cm-2
        e_pas_nml2 = -88.54208  // units: mV
    }
    forsec soma {
        insert Ca_HVA
        gmax_Ca_HVA = 9.919516E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec soma {
        insert Ca_LVA
        gmax_Ca_LVA = 0.0024703296  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: soma, with concentration model: CaDynamics_487245869
    forsec soma {
        insert CaDynamics_487245869
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_38 nseg = 5
    dend_37 nseg = 9
    dend_17 nseg = 3
    dend_8 nseg = 3
    dend_30 nseg = 3
    dend_21 nseg = 3
    dend_14 nseg = 3
    dend_13 nseg = 3
    dend_10 nseg = 9
    dend_9 nseg = 5
    dend_5 nseg = 5
    dend_32 nseg = 3
    dend_29 nseg = 7
    dend_28 nseg = 5
    dend_25 nseg = 3
    dend_16 nseg = 9
    dend_7 nseg = 7
    dend_6 nseg = 5
    dend_34 nseg = 3
    dend_33 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate Cell_487245869


