// Cell: cACint209_L4_BTC_04273604d2_0_0
/*
{
  "id" : "cACint209_L4_BTC_04273604d2_0_0",
  "sections" : [ {
    "name" : "soma_0",
    "id" : "soma_0",
    "points3d" : [ "-2.41353, 11.9919, 1.31418, 2.57576", "-2.15404, 10.8832, 1.19952, 4.64379", "-1.89456, 9.77439, 1.08486, 7.1282", "-1.63508, 8.66563, 0.970208, 9.55084", "-1.37559, 7.55686, 0.855552, 11.3429", "-1.11611, 6.44809, 0.740896, 12.5314", "-0.856626, 5.33932, 0.626239, 13.4739", "-0.597143, 4.23056, 0.511583, 13.1445", "-0.337659, 3.12179, 0.396927, 12.6062", "-0.0781762, 2.01302, 0.282271, 12.0679", "0.181307, 0.904256, 0.167615, 11.529", "0.44079, -0.204511, 0.0529586, 10.9839", "0.700273, -1.31328, -0.0616975, 10.4042", "0.959757, -2.42205, -0.176354, 9.22811", "1.21924, -3.53081, -0.29101, 7.93477", "1.47872, -4.63958, -0.405666, 7.09354", "1.73821, -5.74835, -0.520322, 6.0452", "1.99769, -6.85711, -0.634978, 4.95117", "2.25717, -7.96588, -0.749635, 4.10786", "2.51666, -9.07465, -0.864291, 3.50414", "2.77614, -10.1834, -0.978947, 3.28095" ]
  }, {
    "name" : "dend_26",
    "id" : "dend_26",
    "points3d" : [ "1.75135, -9.71855, 1.8584, 2.77", "2.12967, -14.5561, 1.8584, 3.05" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_11",
    "id" : "dend_11",
    "points3d" : [ "-5.09865, 10.5559, -3.7416, 1.38", "-6.36487, 12.6924, -3.97337, 1.38", "-8.34746, 16.0375, -4.33625, 1.66", "-10.0402, 18.8936, -4.6461, 1.38", "-11.3939, 21.1777, -4.89388, 1.11", "-12.4631, 22.9816, -5.08957, 1.11", "-14.9346, 27.1518, -5.54196, 1.66" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "dend_0",
    "id" : "dend_0",
    "points3d" : [ "6.01135, 6.6302, 6.4384, 1.38", "6.01645, 11.1641, 7.62566, 1.38", "6.16037, 13.9665, 8.36207, 1.38", "6.58697, 18.8664, 9.80627, 1.38", "7.17008, 24.0925, 11.4198, 1.38", "7.60896, 28.026, 12.6343, 1.38", "8.00058, 31.536, 13.7179, 0.83", "8.25634, 34.9482, 14.8456, 1.38", "8.6309, 38.9974, 16.2426, 1.38", "9.4867, 43.8263, 17.8798, 1.11" ],
    "parent" : "soma_0",
    "fractionAlong" : 0.49999977243497945
  }, {
    "name" : "axon_0",
    "id" : "axon_0",
    "points3d" : [ "2.77614, -10.1834, -0.978947, 0.64253", "6.19422, -24.7888, -0.978947, 0.64253", "9.61231, -39.3941, -0.978947, 0.64253" ],
    "parent" : "soma_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_32",
    "id" : "dend_32",
    "points3d" : [ "2.12967, -14.5561, 1.8584, 2.22", "4.01119, -18.271, 1.40498, 2.22", "4.98998, -20.2036, 1.1691, 1.66" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_27",
    "id" : "dend_27",
    "points3d" : [ "2.12967, -14.5561, 1.8584, 0.83", "-0.784496, -16.9441, 3.21901, 0.83", "-2.77508, -18.5987, 4.43609, 1.11", "-5.52143, -20.8814, 6.11526, 0.83", "-7.63087, -22.6347, 7.40501, 0.83", "-11.2074, -25.6075, 9.5918, 1.38", "-14.626, -28.449, 11.6819, 1.38", "-17.6142, -30.6767, 13.7797, 0.83" ],
    "parent" : "dend_26",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_21",
    "id" : "dend_21",
    "points3d" : [ "-14.9346, 27.1518, -5.54196, 0.55", "-19.0025, 28.0672, -3.9099, 0.55", "-20.9322, 28.2567, -2.80671, 0.55", "-22.302, 28.3104, -1.91265, 0.55", "-24.5527, 28.3023, -0.379368, 1.11", "-28.4948, 28.1525, 2.30858, 0.83", "-32.4656, 27.8298, 5.0715, 0.83", "-36.6195, 27.1577, 8.19421, 0.55", "-38.8757, 26.6532, 9.91343, 1.38", "-40.5147, 26.1847, 11.1775, 0.28", "-42.0084, 25.6582, 12.34, 0.83", "-43.8083, 25.022, 13.7888, 0.28", "-45.0538, 24.5662, 14.8422, 0.55", "-46.6343, 24.0834, 16.0981, 0.55", "-49.1442, 23.4103, 18.077, 0.55", "-51.3125, 22.8442, 19.7697, 0.55", "-55.0023, 21.9906, 22.6966, 0.55", "-56.5634, 21.669, 23.8927, 0.55", "-59.5606, 21.095, 26.0979, 0.83", "-61.6718, 20.7414, 27.5899, 0.83", "-63.3608, 20.4817, 28.6944, 0.83", "-66.963, 20.003, 30.9734, 0.83", "-68.3041, 19.8047, 31.7762, 0.83", "-71.5317, 19.286, 33.823, 0.83", "-75.9363, 18.4648, 36.6908, 0.83", "-77.043, 18.2863, 37.4041, 0.83", "-79.4606, 17.9512, 38.905, 0.28", "-80.8213, 17.7207, 39.6556, 0.83", "-84.0955, 17.1325, 41.3603, 0.28", "-86.4068, 16.6961, 42.3973, 0.83", "-89.1197, 16.1787, 43.4593, 0.28", "-89.7081, 16.0641, 43.6801, 0.55", "-93.0864, 15.5059, 44.7872, 0.55", "-95.5244, 15.1821, 45.5024, 0.28", "-98.3216, 14.8222, 46.0408, 0.83" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_12",
    "id" : "dend_12",
    "points3d" : [ "-14.9346, 27.1518, -5.54196, 1.11", "-15.6265, 30.3998, -7.33147, 1.11", "-16.0482, 32.1613, -8.15758, 1.11", "-16.5569, 34.2858, -9.15392, 1.11", "-16.9846, 36.0717, -9.99148, 1.11", "-17.4881, 38.1747, -10.9778, 0.83", "-18.0038, 40.3284, -11.9878, 0.83", "-18.405, 42.011, -12.5528, 1.11" ],
    "parent" : "dend_11",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_4",
    "id" : "dend_4",
    "points3d" : [ "9.4867, 43.8263, 17.8798, 0.83", "8.29106, 47.9285, 19.7853, 0.83", "7.39679, 50.9966, 21.2106, 0.83", "6.70413, 53.3731, 22.3145, 0.83", "5.62322, 57.0816, 24.0372, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_1",
    "id" : "dend_1",
    "points3d" : [ "9.4867, 43.8263, 17.8798, 0.83", "12.5163, 46.8316, 17.5938, 0.83" ],
    "parent" : "dend_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "axon_1",
    "id" : "axon_1",
    "points3d" : [ "9.61231, -39.3941, -0.978947, 0.64253", "13.0304, -53.9995, -0.978947, 0.64253", "16.4485, -68.6049, -0.978947, 0.64253" ],
    "parent" : "axon_0",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_42",
    "id" : "dend_42",
    "points3d" : [ "4.98998, -20.2036, 1.1691, 0.83", "5.45159, -21.94, -1.67961, 0.83", "5.7045, -22.7417, -3.37933, 0.83", "6.00318, -23.5949, -5.51979, 0.83", "7.1283, -26.9172, -14.3299, 0.83", "7.75553, -28.7447, -19.2141, 0.83", "8.69554, -31.4834, -26.534, 0.55", "8.99298, -32.6998, -30.1141, 0.83", "9.25005, -33.9828, -34.2691, 0.83", "9.47991, -35.0613, -38.2126, 1.11", "9.58166, -35.2277, -38.8936, 1.11" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_33",
    "id" : "dend_33",
    "points3d" : [ "4.98998, -20.2036, 1.1691, 1.66", "5.83492, -22.5993, 1.12925, 1.66", "7.05093, -25.4963, 1.00126, 1.11", "7.97189, -27.4206, 0.882379, 1.11", "9.78205, -30.4076, 0.877495, 1.11", "11.3275, -32.9577, 0.873326, 1.11", "12.4084, -34.7414, 0.870409, 1.38", "13.6973, -36.6497, 0.849905, 1.11", "14.5237, -37.711, 0.859446, 1.11", "18.1162, -41.388, 0.996291, 1.66" ],
    "parent" : "dend_32",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_31",
    "id" : "dend_31",
    "points3d" : [ "-17.6142, -30.6767, 13.7797, 0.28", "-18.5823, -32.4036, 17.7197, 0.28", "-19.1049, -33.1057, 19.4566, 1.11", "-20.958, -35.3666, 25.5297, 0.55", "-21.4895, -36.0678, 27.3758, 0.83", "-22.6661, -37.62, 31.4624, 0.83", "-24.0221, -39.4089, 36.1725, 0.55", "-24.848, -40.4008, 38.9378, 1.11", "-26.3058, -42.0724, 43.9312, 0.55", "-26.8717, -42.6821, 45.6667, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_28",
    "id" : "dend_28",
    "points3d" : [ "-17.6142, -30.6767, 13.7797, 0.83", "-21.9169, -31.0476, 15.4328, 0.83", "-25.1455, -31.305, 16.6238, 1.11", "-28.3447, -31.469, 17.713, 0.83", "-31.9483, -31.5914, 18.8306, 0.83", "-36.3923, -31.7424, 20.2089, 0.83", "-40.6345, -31.8865, 21.5245, 0.83", "-45.2918, -32.0471, 22.8969, 1.11", "-50.2067, -32.1575, 24.1746, 1.11", "-54.5711, -32.2075, 25.207, 1.11" ],
    "parent" : "dend_27",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_23",
    "id" : "dend_23",
    "points3d" : [ "-98.3216, 14.8222, 46.0408, 0.28", "-98.1083, 13.2075, 46.8163, 0.28", "-98.0325, 12.6343, 47.0916, 0.83", "-97.6502, 9.74061, 48.4815, 0.28" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_22",
    "id" : "dend_22",
    "points3d" : [ "-98.3216, 14.8222, 46.0408, 0.28", "-101.578, 15.3006, 47.0362, 0.28", "-102.734, 15.3908, 47.0196, 0.55", "-105.303, 15.4414, 46.6275, 0.28", "-107.604, 15.4069, 46.1547, 0.83", "-110.346, 15.3658, 45.5915, 0.28", "-112.976, 15.3264, 45.0512, 0.28", "-117.466, 15.0252, 43.4219, 0.28", "-118.383, 14.9381, 42.9866, 0.83", "-119.801, 14.7701, 42.0767, 0.83" ],
    "parent" : "dend_21",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_16",
    "id" : "dend_16",
    "points3d" : [ "-18.405, 42.011, -12.5528, 0.55", "-19.0144, 42.223, -13.2013, 0.55", "-20.0887, 42.5967, -14.3446, 0.55", "-21.1259, 42.9575, -15.4485, 0.83", "-22.9972, 43.6084, -17.44, 0.55", "-24.1701, 44.0163, -18.6883, 1.11" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_13",
    "id" : "dend_13",
    "points3d" : [ "-18.405, 42.011, -12.5528, 0.55", "-16.8618, 46.6017, -13.1517, 0.55", "-16.2082, 48.874, -13.3154, 0.55", "-15.7257, 50.8194, -13.2918, 0.83", "-15.126, 53.3773, -13.1401, 0.55", "-14.7543, 55.0205, -13.0308, 0.83", "-14.1965, 57.4675, -12.8336, 0.55", "-13.817, 59.3258, -12.5787, 0.83", "-13.18, 62.0006, -12.2685, 0.28", "-12.7611, 63.4988, -12.1328, 0.83", "-11.9737, 65.9694, -11.956, 0.55", "-11.3192, 67.9094, -11.8487, 0.83", "-10.2489, 70.8863, -11.7474, 0.55", "-8.95254, 74.2226, -11.7229, 0.83", "-7.68382, 77.3206, -11.8099, 0.83", "-5.96561, 81.4444, -11.9155, 0.55" ],
    "parent" : "dend_12",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_6",
    "id" : "dend_6",
    "points3d" : [ "5.62322, 57.0816, 24.0372, 0.83", "6.84001, 61.6104, 25.1759, 0.83", "7.94538, 66.5933, 26.4131, 0.83", "8.52314, 69.6749, 27.2881, 0.83", "9.23639, 73.9538, 28.6088, 0.83", "9.98527, 78.7712, 30.1192, 0.83", "10.7178, 84.1092, 31.7974, 0.83", "11.3004, 89.1907, 33.4749, 0.83", "11.8103, 94.2319, 35.2529, 0.83", "12.0362, 97.2647, 36.289, 0.55", "12.1945, 100.573, 37.2921, 0.55", "12.3274, 103.349, 37.9492, 0.83", "12.4747, 105.836, 38.3392, 0.83", "12.6651, 108.132, 38.5668, 0.55", "12.9341, 111.041, 38.591, 0.83", "13.1619, 113.403, 38.5414, 0.55", "13.3388, 115.432, 38.4852, 0.83", "13.5644, 118.58, 38.411, 0.55", "13.7158, 121.745, 38.2995, 0.83", "13.7775, 124.627, 37.9478, 0.55", "13.7626, 126.194, 37.6852, 0.55", "13.6774, 128.62, 37.2571, 0.83", "13.4724, 132.09, 36.6148, 0.83", "13.2778, 134.964, 36.0875, 0.55", "12.7072, 141.471, 34.8622, 0.83", "12.3376, 145.245, 34.154, 0.83", "11.9052, 149.849, 33.3572, 0.83", "11.6705, 152.645, 32.993, 0.83", "11.4546, 154.883, 32.8383, 0.83", "11.2194, 157.086, 32.8591, 0.55", "10.9187, 159.592, 33.0565, 0.55", "10.477, 162.446, 33.2721, 0.83", "9.48006, 167.741, 33.6498, 0.83", "8.67283, 171.928, 33.9149, 1.11", "8.02236, 175.109, 34.0924, 0.55", "7.22245, 178.594, 34.289, 1.11", "5.92233, 183.48, 34.5938, 0.83", "4.75559, 187.53, 34.7932, 0.83", "3.92678, 190.225, 34.8327, 0.83", "3.14047, 192.917, 34.7818, 0.55", "2.09548, 196.704, 34.623, 0.55", "1.87459, 197.599, 34.5632, 0.55", "1.1809, 200.929, 34.3568, 0.55", "0.733335, 203.365, 34.136, 0.28", "0.125758, 207.286, 33.6061, 0.55", "-0.394239, 211.769, 32.8177, 0.55", "-0.615325, 214.302, 32.3037, 0.55", "-0.963198, 218.721, 31.3886, 0.83", "-1.28704, 223.396, 30.4026, 0.83", "-1.5548, 226.717, 29.5636, 0.83", "-1.76113, 228.636, 28.9846, 0.55", "-1.96105, 230.34, 28.4236, 0.83", "-2.38358, 233.07, 27.5793, 0.83", "-3.07991, 236.518, 26.5889, 0.83", "-4.05461, 240.847, 25.6639, 0.83", "-4.71651, 243.577, 25.1753, 0.83", "-5.3828, 246.107, 24.6611, 0.83", "-6.36641, 249.684, 23.8474, 0.55", "-7.48012, 253.413, 22.984, 0.55", "-8.28309, 256.126, 22.3998, 0.55", "-9.13153, 259.142, 21.7688, 0.83", "-10.3752, 263.743, 20.7324, 1.11", "-11.517, 268.565, 19.7339, 0.55", "-12.0123, 271.382, 19.2669, 0.55", "-12.468, 274.66, 18.8448, 0.55", "-12.7729, 277.923, 18.5161, 0.83", "-12.891, 281.872, 18.2299, 0.83", "-12.7614, 287.324, 17.9447, 0.83", "-12.28, 293.858, 17.4946, 0.83", "-11.8695, 297.657, 17.1272, 0.55", "-11.3873, 301.421, 16.6653, 0.55", "-10.6877, 306.142, 15.9933, 0.83", "-10.3996, 308.353, 15.6186, 0.83", "-10.137, 311.845, 14.9844, 0.83", "-10.1125, 315.961, 14.3333, 0.83", "-10.3694, 319.356, 13.9913, 0.28", "-10.646, 321.11, 13.8995, 0.83", "-11.7186, 326.105, 13.7895, 0.83", "-12.7368, 330.075, 13.8323, 0.83", "-13.9471, 333.921, 14.0605, 0.83", "-15.3541, 337.865, 14.4668, 0.83", "-16.3712, 340.481, 14.8133, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 15
  }, {
    "name" : "dend_5",
    "id" : "dend_5",
    "points3d" : [ "5.62322, 57.0816, 24.0372, 0.83", "4.42145, 58.206, 25.318, 0.83", "3.56122, 59.2044, 26.351, 0.55", "2.1766, 60.824, 28.0117, 0.55", "0.880769, 62.3402, 29.5595, 0.55", "-0.586283, 63.8917, 31.2431, 0.55", "-1.68878, 64.9087, 32.4795, 0.55", "-3.60518, 66.3591, 34.6222, 0.55", "-4.99678, 67.1723, 36.0813, 0.55", "-6.95365, 67.9275, 37.871, 0.55", "-10.1229, 68.4015, 40.3459, 0.55", "-12.0284, 68.344, 41.6016, 0.55", "-14.1224, 67.8632, 42.7968, 0.55", "-15.3805, 67.3419, 43.3758, 0.55", "-16.3987, 66.7413, 43.7518, 0.55", "-18.2953, 65.284, 44.2596, 0.28", "-19.22, 64.4176, 44.4404, 0.83", "-20.4618, 63.1418, 44.6636, 0.55", "-21.257, 62.1879, 44.7463, 0.55", "-22.2373, 60.7039, 44.7509, 0.55", "-23.1199, 59.1281, 44.6713, 0.83", "-23.8493, 57.7179, 44.5427, 0.55", "-24.4594, 56.5189, 44.3774, 0.55", "-25.8658, 53.7031, 43.9003, 0.55", "-27.2811, 51.0295, 43.396, 0.83", "-28.4128, 49.0598, 42.9629, 0.83", "-29.6383, 47.0926, 42.3592, 0.83", "-31.1301, 44.9135, 41.6164, 0.55", "-31.8587, 43.9287, 41.3073, 0.28", "-32.8008, 42.7704, 40.998, 0.55", "-33.9418, 41.5357, 40.6655, 0.28", "-36.4154, 39.0282, 40.0844, 0.55", "-37.9638, 37.5478, 39.8019, 0.55", "-39.479, 36.1408, 39.6286, 0.28", "-40.848, 34.8802, 39.5342, 0.55", "-43.1942, 32.606, 39.4419, 0.55", "-44.0026, 31.7808, 39.4511, 0.83", "-45.4146, 30.227, 39.5247, 0.55", "-47.3265, 27.888, 39.5304, 0.55", "-48.572, 26.0379, 39.4683, 0.83", "-49.7693, 23.7574, 39.3817, 0.55", "-50.459, 21.9579, 39.2935, 0.55", "-51.0089, 20.1236, 39.1815, 0.55", "-51.219, 19.1364, 39.1103, 0.83", "-51.6085, 16.5725, 38.882, 0.55", "-51.9368, 13.5533, 38.5887, 0.28", "-52.3361, 9.17501, 38.1636, 0.28", "-52.5028, 7.33294, 37.9231, 0.83", "-52.8191, 3.7149, 37.4047, 0.28", "-52.9353, 2.44663, 37.2316, 0.83", "-53.0138, 1.65621, 37.1318, 0.28", "-53.1017, 0.41097, 36.9515, 0.83", "-53.2878, -2.071, 36.5926, 0.28", "-53.3991, -3.01911, 36.4832, 0.55", "-53.7694, -5.15081, 36.2956, 0.28", "-54.016, -6.38048, 36.1986, 0.83" ],
    "parent" : "dend_4",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_3",
    "id" : "dend_3",
    "points3d" : [ "12.5163, 46.8316, 17.5938, 0.83", "13.1536, 48.3966, 15.204, 0.83", "13.9559, 50.3908, 12.517, 0.83", "14.4843, 51.6674, 10.9856, 0.83", "17.9459, 59.3767, 2.72243, 0.55", "19.0057, 61.5099, 0.760675, 0.55", "19.6373, 62.6681, -0.143598, 0.55", "20.5163, 64.1515, -1.15309, 0.55", "21.4618, 65.6329, -1.85233, 1.11", "22.619, 67.3888, -2.20793, 0.55", "24.6727, 70.3761, -2.0653, 0.55", "26.4257, 73.0671, -1.83629, 0.55", "27.5524, 74.8197, -1.62541, 0.55", "28.9277, 77.0305, -1.18174, 0.83", "30.4662, 79.7256, -0.489101, 0.55", "31.5354, 81.8807, 0.133087, 1.11", "32.5623, 84.129, 0.863712, 0.55", "33.5316, 86.34, 1.61672, 0.83", "35.158, 90.1904, 2.88714, 0.55", "35.9988, 92.2114, 3.51441, 0.55", "37.1211, 95.0103, 4.3027, 0.55", "38.0196, 97.2092, 4.78574, 0.55", "38.5684, 98.5755, 5.01914, 0.28", "39.6735, 101.291, 5.34365, 0.55", "40.5045, 103.336, 5.47047, 0.28", "41.2929, 105.193, 5.54547, 0.55", "42.7989, 108.684, 5.62944, 0.55", "43.604, 110.654, 5.65445, 0.55", "44.7225, 113.392, 5.65178, 0.28", "45.7486, 116.215, 4.88411, 0.83", "46.5942, 118.681, 3.80741, 0.28", "46.7854, 119.221, 3.48862, 0.55", "47.2427, 120.422, 2.49988, 0.28", "47.5382, 121.147, 1.77813, 0.83", "51.256, 129.748, -7.85192, 0.55", "52.7769, 132.912, -11.5434, 0.55", "53.2624, 133.87, -12.6293, 0.83", "54.5036, 136.121, -14.7758, 0.55", "55.1651, 137.233, -15.5693, 0.55", "55.9515, 138.584, -15.8533, 0.83", "56.8873, 140.306, -15.3494, 0.28", "57.2691, 141.243, -15.1899, 0.55", "58.1266, 143.898, -14.5345, 0.28", "58.5946, 145.648, -13.87, 0.55", "58.9787, 147.164, -13.3119, 0.28", "59.2063, 148.68, -12.9134, 0.55" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_2",
    "id" : "dend_2",
    "points3d" : [ "12.5163, 46.8316, 17.5938, 0.55", "13.7795, 46.1934, 18.7921, 0.55", "15.6749, 45.2357, 20.5903, 0.28", "16.6694, 44.7332, 21.5337, 0.55", "18.4962, 43.8102, 23.2667, 0.55", "20.8846, 42.6034, 25.5325, 0.55", "22.1905, 41.9436, 26.7714, 0.28" ],
    "parent" : "dend_1",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_48",
    "id" : "dend_48",
    "points3d" : [ "9.58166, -35.2277, -38.8936, 0.55", "4.66402, -33.425, -39.9926, 0.55", "3.1489, -32.9895, -40.7345, 0.83", "-0.370904, -32.0504, -42.6829, 0.55", "-1.81368, -31.6987, -43.4643, 0.55", "-8.36077, -30.7867, -47.8446, 0.28", "-9.70827, -30.6861, -48.7879, 0.83", "-15.1141, -30.8212, -53.2263, 0.55", "-15.6885, -30.8749, -53.7196, 0.55", "-17.2143, -31.1174, -55.0786, 0.83", "-23.9563, -32.4221, -60.9804, 0.55", "-25.2503, -32.7163, -62.0743, 0.55", "-26.7074, -33.0616, -63.34, 0.83", "-29.9101, -33.7668, -66.3028, 0.55", "-30.5861, -33.8656, -66.966, 0.55", "-31.8347, -33.9396, -68.3022, 0.55", "-36.8934, -33.7212, -73.8603, 0.28", "-38.2631, -33.6035, -75.4584, 0.83", "-42.8816, -32.9587, -80.9511, 0.55", "-44.0659, -32.7014, -82.3889, 0.83", "-50.088, -30.8866, -89.6872, 0.55", "-51.7557, -30.1735, -91.8109, 0.28", "-52.7212, -29.6435, -93.0798, 0.83", "-54.3346, -28.5753, -95.3005, 0.55", "-55.4512, -27.6299, -96.8874, 0.83", "-57.7691, -25.206, -100.527, 0.55", "-60.5033, -21.2564, -105.374, 0.28", "-60.8783, -20.644, -106.108, 0.55", "-61.8018, -18.999, -108.045, 0.28", "-62.156, -18.3282, -108.834, 0.55", "-63.3044, -16.0412, -111.462, 0.28", "-63.6685, -15.225, -112.361, 0.55", "-64.8264, -12.6671, -115.146, 0.28", "-65.2843, -11.7335, -116.228, 0.55", "-66.3829, -9.68749, -118.607, 0.28", "-66.6587, -9.23287, -119.137, 0.55", "-67.7721, -7.3984, -121.116, 0.28", "-68.1614, -6.76241, -121.79, 0.55", "-69.4288, -4.78774, -123.766, 0.28", "-70.1779, -3.84039, -124.845, 0.55", "-72.5461, -1.11615, -127.941, 0.28", "-73.5947, -0.0264677, -129.221, 0.55", "-76.7664, 2.86788, -133.134, 0.28", "-77.7639, 3.72494, -134.416, 0.55", "-81.1232, 6.38985, -139.124, 0.28", "-82.3081, 7.24714, -140.831, 0.28", "-83.7449, 8.2229, -142.931, 0.55", "-86.3188, 9.88661, -146.524, 0.28", "-86.7785, 10.209, -147.142, 0.55", "-88.841, 11.541, -150.022, 0.28", "-89.8362, 12.179, -151.387, 0.83", "-91.9294, 13.4637, -154.127, 0.55", "-93.2762, 14.2999, -155.911, 0.55", "-95.5952, 15.8337, -158.991, 0.55", "-101.326, 19.6133, -167.05, 0.83", "-103.29, 20.9038, -169.99, 0.28", "-104.313, 21.5789, -171.643, 0.55", "-108.056, 24.0349, -178.296, 0.55", "-108.966, 24.6914, -180.123, 0.55", "-111.855, 26.775, -186.39, 0.83", "-113.745, 28.0699, -190.646, 0.28", "-115.025, 28.608, -193.469, 0.55", "-116.523, 28.8144, -196.92, 0.28", "-117.148, 28.741, -198.405, 0.83", "-120.676, 27.6213, -206.689, 0.55", "-122.027, 26.9364, -209.836, 0.55", "-125.24, 24.9908, -216.901, 0.55", "-130.491, 21.876, -227.129, 0.55", "-131.793, 21.122, -229.461, 0.55", "-135.206, 19.2298, -235.247, 0.55", "-138.946, 17.3185, -241.227, 0.55", "-141.998, 15.9102, -245.821, 0.55", "-146.911, 13.8298, -252.568, 0.55", "-152.196, 11.8464, -259.28, 0.55", "-153.396, 11.4284, -260.78, 0.55", "-158.645, 9.54541, -267.35, 0.55", "-159.916, 9.08514, -268.927, 0.28", "-160.217, 8.96697, -269.31, 0.55", "-171.838, 3.91055, -284.199, 0.28", "-172.906, 3.4328, -285.527, 0.83", "-179.188, 0.43957, -293.32, 0.28", "-179.594, 0.24286, -293.817, 0.55", "-182.578, -1.15103, -297.431, 0.28", "-183.803, -1.72799, -298.886, 0.55", "-186.314, -3.0235, -301.497, 0.28", "-187.169, -3.47893, -302.404, 0.55" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 17
  }, {
    "name" : "dend_43",
    "id" : "dend_43",
    "points3d" : [ "9.58166, -35.2277, -38.8936, 0.55", "10.9962, -35.6615, -42.3646, 0.55", "12.2683, -35.9645, -45.069, 0.55", "15.0131, -36.6394, -51.3305, 0.83", "15.7458, -36.8754, -53.0086, 0.83", "16.6104, -37.19, -54.9524, 0.83", "17.3522, -37.4464, -56.5579, 0.83", "18.6913, -37.8791, -59.3343, 0.83", "20.9344, -38.7226, -63.983, 0.83", "22.3639, -39.1624, -66.7339, 0.83", "23.8727, -39.5678, -69.8343, 0.83", "25.5474, -39.9359, -73.2832, 0.83", "27.0679, -40.2205, -76.4213, 0.83", "29.5874, -40.6327, -81.4001, 0.83", "31.1868, -40.7928, -84.383, 0.83", "33.2015, -40.838, -88.2092, 0.83", "34.4755, -40.8064, -90.6886, 0.83" ],
    "parent" : "dend_42",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_39",
    "id" : "dend_39",
    "points3d" : [ "18.1162, -41.388, 0.996291, 0.55", "20.7483, -41.1721, 1.79951, 0.55", "22.9388, -41.1059, 2.5258, 0.28", "24.3247, -41.1558, 3.02468, 0.55", "26.673, -41.3141, 3.90127, 1.11", "30.9282, -41.7473, 5.68804, 0.55", "32.5566, -41.9507, 6.43388, 0.55", "34.3562, -42.2575, 7.36195, 0.83", "36.261, -42.6123, 8.40938, 0.28", "36.261, -42.6123, 8.40938, 0.83", "39.4732, -43.6763, 10.4819, 0.28", "40.3348, -44.0147, 11.0578, 1.11" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_34",
    "id" : "dend_34",
    "points3d" : [ "18.1162, -41.388, 0.996291, 0.83", "20.0327, -44.788, 0.143897, 0.83", "21.7214, -47.3495, -0.954253, 0.55", "22.8205, -48.8137, -1.90956, 0.83", "23.7173, -50.0084, -2.68903, 0.83", "24.9603, -51.6642, -3.76934, 0.83", "26.0519, -53.1184, -4.71812, 0.83", "28.2901, -55.541, -7.01092, 0.83", "29.9067, -57.1295, -8.99971, 0.55" ],
    "parent" : "dend_33",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_30",
    "id" : "dend_30",
    "points3d" : [ "-54.5711, -32.2075, 25.207, 0.55", "-55.7242, -29.065, 24.6124, 0.55", "-57.1395, -24.7479, 23.7854, 0.83", "-59.1026, -18.703, 22.5019, 0.55", "-59.9462, -15.7887, 21.9327, 0.55", "-61.0663, -11.5479, 21.1552, 1.11", "-62.0148, -7.78461, 20.5217, 0.83", "-62.9321, -3.83024, 19.8825, 0.55", "-63.2685, -2.22071, 19.6492, 0.55", "-64.1485, 1.67635, 19.3781, 0.55", "-64.3334, 2.46731, 19.3261, 1.11", "-64.7957, 4.35082, 19.5508, 0.55", "-65.3176, 6.17071, 20.3258, 0.83", "-65.8874, 7.80559, 21.4449, 0.55", "-66.6358, 9.68531, 22.9303, 0.55", "-67.2612, 11.0199, 23.9972, 0.83", "-70.3774, 17.5675, 28.2107, 0.55", "-71.2238, 19.429, 29.1935, 0.83", "-72.3668, 21.9, 30.2107, 0.55", "-73.6979, 24.5253, 31.0585, 0.55", "-75.0463, 27.0334, 31.4979, 1.11", "-77.5968, 31.8632, 31.7488, 0.55", "-78.4137, 33.4628, 31.687, 0.55", "-80.4404, 37.7013, 31.4723, 0.55", "-81.7023, 40.4788, 31.3023, 0.55", "-83.2935, 44.0532, 31.1639, 1.11", "-85.0704, 48.0185, 31.1496, 0.55", "-86.1563, 50.4094, 31.3116, 1.11", "-87.5357, 53.3723, 31.5562, 0.28", "-88.0146, 54.3965, 31.6934, 0.55", "-88.8182, 56.0333, 32.0189, 0.28", "-89.9577, 58.1085, 32.6798, 0.83", "-91.851, 61.1398, 33.8687, 0.28", "-92.5574, 62.2496, 34.3929, 0.55", "-95.4758, 66.727, 36.8561, 0.28", "-96.5634, 68.4422, 37.8427, 0.83", "-98.087, 70.9345, 39.2683, 0.55", "-99.6084, 73.4933, 40.7134, 0.55", "-101.144, 76.1186, 42.1188, 0.55", "-102.28, 78.1783, 43.1761, 0.83", "-103.569, 80.6698, 44.3465, 0.28", "-104.742, 83.1333, 45.417, 0.55", "-106.053, 86.4171, 46.5536, 0.55", "-106.261, 87.0922, 46.7438, 0.83", "-107.053, 90.2298, 47.1621, 0.28", "-107.342, 92.039, 47.2167, 0.55", "-107.519, 93.5654, 47.0212, 0.28", "-107.886, 96.7184, 46.1164, 0.55", "-108.232, 100.062, 44.8113, 0.55", "-108.766, 104.834, 42.7271, 0.28", "-109.154, 108.052, 40.833, 0.83", "-109.7, 112.702, 37.6954, 0.55", "-110.067, 116.068, 35.2214, 0.55", "-110.243, 117.484, 34.1366, 0.55", "-110.582, 119.651, 32.3271, 0.83", "-111.67, 125.619, 27.4518, 0.28", "-111.956, 126.847, 26.4299, 0.83", "-112.409, 128.542, 25.1547, 0.28", "-112.943, 130.265, 24.0543, 0.55", "-114.803, 134.43, 21.8263, 0.83", "-115.544, 135.714, 21.6471, 0.83", "-116.818, 137.67, 22.3296, 0.28", "-117.422, 138.577, 22.8798, 0.55", "-118.767, 140.661, 24.5653, 0.28", "-119.632, 142.252, 25.9834, 0.55", "-121.515, 146.515, 31.2348, 0.28", "-121.836, 147.355, 32.3942, 0.55", "-122.231, 148.734, 34.3079, 0.28", "-122.47, 149.842, 35.8774, 0.83", "-122.774, 151.679, 38.5068, 0.83", "-123.354, 157.114, 45.8252, 0.28", "-123.405, 157.95, 46.8405, 0.55", "-123.499, 160.92, 50.287, 0.28", "-123.515, 162.64, 52.1739, 0.83", "-123.497, 164.543, 54.1156, 0.28", "-123.481, 166.161, 55.5455, 0.83", "-123.471, 169.804, 57.9314, 0.28", "-123.455, 171.494, 58.8883, 0.83", "-123.427, 174.729, 60.3526, 0.28", "-123.462, 176.759, 60.9189, 0.55", "-123.533, 178.925, 61.1861, 0.28", "-123.699, 181.531, 60.9884, 0.55", "-124.0, 184.785, 60.2788, 0.28", "-124.142, 186.161, 59.8498, 0.83", "-124.529, 189.573, 58.5863, 0.28", "-124.922, 192.155, 57.3193, 0.83", "-125.661, 196.779, 54.8823, 0.28", "-125.93, 198.3, 53.8994, 0.83", "-126.435, 201.03, 51.8644, 0.28", "-126.648, 202.125, 50.8938, 0.83", "-127.886, 208.548, 44.7457, 0.28", "-128.433, 211.054, 42.0623, 0.83", "-129.683, 216.779, 35.5848, 0.28", "-130.116, 218.846, 33.0671, 0.83", "-130.935, 222.584, 28.2769, 0.28", "-131.206, 223.749, 26.7216, 0.55", "-132.052, 227.226, 22.3001, 0.28", "-132.369, 228.363, 20.9103, 0.28", "-133.21, 231.175, 18.0098, 0.55", "-135.018, 235.412, 13.8507, 0.28", "-136.49, 238.33, 11.112, 0.83", "-137.956, 240.999, 8.37927, 0.28", "-138.717, 242.316, 7.03303, 0.55", "-139.98, 244.408, 5.11158, 0.28", "-145.999, 254.137, -2.61612, 0.28", "-146.69, 255.279, -3.42851, 0.83", "-151.146, 262.788, -8.40716, 0.28", "-151.628, 263.618, -8.98552, 0.83", "-156.85, 273.276, -14.916, 0.28", "-157.241, 274.211, -15.2122, 0.55", "-158.074, 278.119, -13.7862, 0.28", "-158.362, 279.336, -13.4582, 0.55", "-158.843, 281.135, -12.8405, 0.28", "-159.392, 282.881, -13.2397, 0.55", "-160.372, 285.776, -14.662, 0.28", "-160.84, 287.145, -15.3475, 1.11", "-162.093, 290.242, -16.7466, 0.28", "-162.652, 291.511, -17.398, 0.83" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 21
  }, {
    "name" : "dend_29",
    "id" : "dend_29",
    "points3d" : [ "-54.5711, -32.2075, 25.207, 0.55", "-56.4894, -33.0253, 25.5653, 0.55", "-57.3331, -33.3427, 25.7525, 0.55", "-58.618, -33.7965, 26.0946, 0.83", "-59.9283, -34.2674, 26.4613, 0.55", "-61.0142, -34.7329, 26.8148, 0.55", "-61.5191, -34.9834, 26.9899, 0.83", "-62.2332, -35.424, 27.294, 0.55", "-63.4088, -36.3098, 28.0057, 0.55", "-63.9674, -36.828, 28.4375, 0.55", "-64.932, -37.9005, 29.3023, 0.55", "-65.3321, -38.4296, 29.7353, 0.28", "-66.1911, -39.7152, 30.7725, 0.83", "-67.1335, -41.2666, 32.0986, 0.55", "-67.2949, -41.5423, 32.35, 0.55", "-67.8155, -42.3714, 33.1485, 0.83", "-68.4658, -43.2569, 34.0574, 0.55", "-68.9567, -43.8636, 34.7088, 0.83", "-70.372, -45.3821, 36.2881, 0.55", "-71.0621, -46.0211, 36.8865, 0.83", "-71.9603, -46.7452, 37.5565, 0.28", "-72.6994, -47.238, 38.0072, 0.55", "-73.5565, -47.7025, 38.3907, 0.55", "-74.8616, -48.3029, 38.8274, 0.28", "-75.4534, -48.5297, 38.9438, 0.28", "-75.9684, -48.7084, 39.0354, 0.55", "-77.362, -49.2548, 39.2769, 0.28", "-77.8737, -49.5172, 39.407, 0.55", "-78.1233, -49.6644, 39.4742, 0.28", "-78.7738, -50.1105, 39.7011, 0.28", "-79.2059, -50.4113, 39.8545, 0.55", "-80.0681, -51.057, 40.1503, 0.28", "-80.9485, -51.7808, 40.4132, 0.55", "-82.0262, -52.6757, 40.7636, 0.28", "-82.8344, -53.3759, 41.0353, 0.55" ],
    "parent" : "dend_28",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_25",
    "id" : "dend_25",
    "points3d" : [ "-97.6502, 9.74061, 48.4815, 0.28", "-100.184, 11.6584, 48.2359, 0.28", "-100.87, 12.2524, 48.1528, 0.55", "-102.344, 13.5716, 47.9852, 0.28", "-102.671, 13.8955, 47.9493, 0.55", "-105.732, 17.1762, 47.6324, 0.28", "-108.101, 19.8084, 47.4833, 0.28", "-109.486, 21.5561, 47.4264, 0.28", "-110.464, 22.9043, 47.4101, 0.55", "-112.652, 26.1134, 47.2845, 0.28", "-113.457, 27.3301, 47.263, 0.55", "-114.686, 29.3012, 47.3081, 0.28", "-115.322, 30.4313, 47.3469, 0.55", "-116.316, 32.3099, 47.4305, 0.28", "-117.561, 34.9094, 47.4915, 0.55" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_24",
    "id" : "dend_24",
    "points3d" : [ "-97.6502, 9.74061, 48.4815, 0.28", "-95.0943, 8.95819, 46.8594, 0.28", "-94.3893, 8.76202, 46.3267, 0.83", "-90.9793, 8.04811, 43.9915, 0.28", "-90.6224, 7.9791, 43.76, 0.83", "-87.4503, 7.43241, 41.9877, 0.28", "-86.5065, 7.27127, 41.5112, 0.83", "-80.2893, 6.36986, 38.6398, 0.28", "-76.7651, 5.89102, 37.171, 0.28", "-75.9858, 5.79859, 36.8985, 1.11", "-71.8909, 5.32582, 35.6952, 0.28", "-70.6863, 5.17158, 35.3447, 0.55", "-66.2799, 4.54963, 33.9954, 0.28", "-64.2296, 4.21211, 33.3895, 0.28", "-62.9577, 3.96802, 32.9423, 0.55", "-61.051, 3.59532, 32.1992, 0.28", "-55.4895, 2.30233, 29.578, 0.28", "-52.5844, 1.58163, 28.143, 0.28", "-51.9575, 1.37379, 27.8218, 0.83", "-50.6032, 0.84242, 27.116, 0.28", "-50.6032, 0.84242, 27.116, 0.83", "-47.6529, -0.463981, 25.7172, 0.28", "-46.8865, -0.873489, 25.4791, 0.83", "-44.658, -2.41037, 24.5565, 0.28", "-43.3188, -3.40398, 23.9475, 0.83" ],
    "parent" : "dend_23",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_18",
    "id" : "dend_18",
    "points3d" : [ "-24.1701, 44.0163, -18.6883, 0.28", "-25.4897, 42.2994, -19.7265, 0.28", "-26.5092, 40.9563, -20.6743, 0.83", "-27.6188, 39.4866, -21.6878, 0.55", "-28.7526, 37.9771, -22.9279, 1.11", "-31.8123, 33.6555, -26.7957, 0.28", "-32.0238, 33.3592, -27.1043, 0.83", "-32.958, 32.0214, -28.7502, 0.83", "-33.525, 31.1834, -29.8707, 0.83", "-35.5851, 28.126, -34.2366, 0.28", "-36.1196, 27.3527, -35.3409, 0.83", "-38.0658, 24.7914, -39.6056, 0.28", "-38.4124, 24.3425, -40.4175, 0.55", "-39.0051, 23.5871, -41.8568, 0.55", "-39.611, 22.8178, -43.4017, 0.55", "-40.4086, 21.844, -45.3696, 1.11", "-43.5989, 17.9777, -54.0287, 0.55", "-44.0294, 17.4194, -55.3659, 0.28", "-44.1542, 17.272, -55.7733, 0.55", "-44.987, 16.3928, -58.4923, 0.28", "-45.32, 16.0177, -59.7061, 0.83", "-47.1999, 13.8334, -67.0266, 0.28", "-47.2866, 13.7361, -67.3396, 0.55", "-49.2397, 11.5812, -74.3134, 0.28", "-49.5812, 11.1683, -75.573, 0.55", "-50.5947, 9.91421, -79.0733, 0.28", "-50.7727, 9.67901, -79.6759, 0.83", "-51.6504, 8.46989, -82.4116, 0.28", "-52.0891, 7.85629, -83.7655, 0.83", "-54.2119, 4.61048, -90.257, 0.28", "-54.7579, 3.82051, -91.7294, 0.83", "-56.9851, 0.77634, -97.0373, 0.55", "-57.2689, 0.37776, -97.6951, 0.83", "-58.8305, -1.89615, -101.213, 0.28", "-59.3228, -2.62601, -102.241, 0.55", "-61.3496, -5.7162, -106.123, 0.28", "-62.0704, -6.8548, -107.514, 0.83", "-65.638, -12.5623, -113.863, 0.28", "-65.817, -12.8535, -114.182, 0.83", "-66.9032, -14.7054, -116.119, 0.28", "-67.1768, -15.1684, -116.634, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_17",
    "id" : "dend_17",
    "points3d" : [ "-24.1701, 44.0163, -18.6883, 0.55", "-25.2735, 47.018, -19.1787, 0.55", "-26.0894, 49.2905, -19.6076, 0.55", "-26.9198, 51.6849, -20.2038, 0.28", "-27.461, 53.2691, -20.6375, 1.38", "-28.2674, 55.5808, -21.3662, 0.55", "-29.1784, 58.161, -22.2181, 0.55", "-29.5854, 59.2584, -22.5659, 0.83", "-30.3023, 61.2156, -23.253, 0.28", "-30.6705, 62.336, -23.6639, 0.55", "-31.2653, 64.3084, -24.3352, 0.28", "-31.6841, 65.7371, -24.7286, 0.83", "-32.4818, 68.6665, -25.2541, 0.28", "-32.8607, 70.2418, -25.5415, 0.55", "-33.2408, 72.1276, -25.8604, 0.28", "-33.4734, 73.7261, -26.2059, 0.83", "-33.724, 76.7174, -26.9156, 0.28", "-33.8429, 79.3667, -27.7026, 0.83", "-33.829, 83.8245, -29.2167, 0.28", "-33.7493, 85.3697, -29.7879, 0.83", "-33.4198, 89.5966, -31.6848, 0.28", "-33.2053, 91.552, -32.6784, 0.83", "-32.8829, 93.9547, -33.9985, 0.28", "-32.6243, 95.8498, -35.1102, 0.55", "-32.3661, 97.744, -36.2117, 0.83", "-31.9356, 101.93, -38.6414, 0.28", "-31.8467, 103.565, -39.5442, 0.83", "-31.8187, 105.774, -40.7361, 0.83", "-31.8977, 107.979, -41.854, 0.28", "-32.1355, 109.673, -42.7513, 0.83", "-32.5173, 111.369, -43.5885, 0.28", "-32.8643, 112.577, -44.0982, 0.55", "-33.1959, 113.453, -44.474, 0.28", "-34.042, 115.251, -45.1528, 0.55", "-35.7915, 118.585, -46.1068, 0.28", "-36.53, 119.767, -46.4172, 0.55", "-37.4156, 121.038, -46.7064, 0.28", "-38.4438, 122.398, -46.9704, 0.83", "-39.8472, 124.136, -47.2057, 0.28", "-41.2544, 125.826, -47.3224, 0.83", "-43.3648, 128.337, -47.3084, 0.28", "-44.1937, 129.337, -47.3406, 0.83", "-45.1399, 130.525, -47.3977, 0.28", "-46.3439, 132.173, -47.5151, 0.28", "-46.8569, 132.975, -47.6494, 0.55", "-47.9429, 135.035, -48.1571, 0.28", "-48.7215, 136.86, -48.8943, 0.55", "-49.1199, 137.917, -49.4444, 0.55", "-49.6609, 139.5, -50.3766, 0.83", "-50.6661, 142.401, -52.3891, 0.28", "-51.3933, 144.51, -53.9989, 0.83", "-52.4217, 147.436, -56.5513, 0.28", "-52.8235, 148.503, -57.5629, 0.28", "-53.354, 149.989, -59.0131, 0.83", "-54.3214, 152.791, -61.8555, 0.28", "-54.681, 153.83, -62.8712, 0.83", "-55.9307, 157.662, -66.4587, 0.28", "-56.5408, 159.527, -68.171, 1.11", "-57.7072, 163.196, -71.5877, 0.28", "-58.1462, 164.744, -73.047, 0.55", "-58.4979, 166.195, -74.3016, 0.28", "-58.772, 167.385, -75.2505, 0.55", "-59.3789, 170.529, -77.5387, 0.28", "-59.6378, 171.782, -78.5458, 0.55", "-60.0648, 173.695, -80.1473, 0.28", "-60.3204, 174.937, -81.2875, 0.55", "-60.5794, 176.428, -82.7408, 0.28", "-60.91, 178.633, -84.9352, 0.55", "-61.4216, 182.71, -88.7627, 0.28", "-61.6139, 184.391, -90.4079, 0.55", "-61.8509, 186.79, -92.7709, 0.28", "-61.9353, 188.121, -94.147, 0.83", "-61.9652, 189.931, -95.9846, 0.28", "-61.947, 191.227, -97.3357, 0.83", "-61.8607, 193.464, -99.6378, 0.28", "-61.8316, 194.469, -100.776, 0.55", "-61.764, 195.876, -102.437, 0.28", "-61.6703, 197.056, -103.914, 0.55", "-61.4235, 200.492, -108.033, 0.28", "-61.3652, 201.687, -109.393, 0.28", "-61.4112, 204.345, -112.023, 0.55", "-61.518, 206.572, -113.985, 0.28", "-61.6364, 207.786, -114.9, 0.55", "-62.1676, 211.023, -116.909, 0.28", "-62.6941, 212.88, -117.721, 0.83", "-63.7652, 215.555, -118.617, 0.28", "-64.2363, 216.369, -118.812, 0.55", "-65.1442, 217.57, -119.061, 0.28", "-66.1389, 218.671, -119.326, 0.55", "-68.5022, 220.858, -119.885, 0.28", "-69.056, 221.334, -119.986, 0.55", "-72.5663, 224.313, -120.715, 0.28", "-73.4294, 225.134, -120.927, 0.55", "-74.5672, 226.406, -121.218, 0.28", "-75.6799, 227.752, -121.529, 0.55", "-77.3822, 230.136, -122.045, 0.28", "-78.3786, 231.68, -122.333, 0.55", "-80.211, 235.321, -122.59, 0.28", "-80.8414, 236.804, -122.69, 0.55" ],
    "parent" : "dend_16",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 13
  }, {
    "name" : "dend_15",
    "id" : "dend_15",
    "points3d" : [ "-5.96561, 81.4444, -11.9155, 0.55", "-4.52141, 82.861, -13.0355, 0.55", "-2.8626, 85.1957, -15.8826, 0.55", "-2.31489, 86.1969, -17.3426, 0.83", "-1.90419, 87.0254, -18.6267, 0.83", "-0.837199, 89.3804, -22.3772, 0.28", "-0.443116, 90.2657, -23.7611, 0.83", "0.441575, 93.5908, -29.7049, 0.55", "0.487632, 94.3381, -31.1966, 0.28", "0.455599, 94.6873, -31.9476, 0.28", "0.310046, 95.2671, -33.2548, 0.55", "0.0702842, 95.9608, -34.779, 0.55", "-0.811029, 98.3925, -39.7599, 0.28", "-1.17685, 99.5506, -41.9072, 0.83", "-1.89639, 102.093, -46.3931, 0.83", "-2.4705, 104.339, -50.2224, 0.83", "-3.12752, 107.218, -55.0355, 0.28", "-3.31725, 108.223, -56.6612, 0.28", "-3.3593, 108.779, -57.4624, 0.55", "-3.24676, 111.255, -60.7472, 0.28", "-3.18511, 111.627, -61.1968, 0.55", "-2.49728, 114.036, -64.0773, 0.28", "-2.23519, 114.854, -65.3072, 0.55", "-1.9814, 115.582, -66.5906, 0.28", "-1.88014, 115.853, -67.1058, 0.55", "-1.09443, 117.593, -70.7431, 0.28", "-0.822779, 118.095, -71.8299, 0.55", "0.787765, 120.554, -77.6136, 0.28", "1.27168, 121.249, -79.247, 0.28", "1.80739, 121.971, -80.8837, 0.55", "2.93962, 123.503, -84.3865, 0.28", "3.32205, 123.982, -85.4507, 0.55", "4.92375, 125.911, -89.7314, 0.28", "5.77202, 126.853, -91.8039, 0.28", "6.51382, 127.678, -93.666, 0.83", "9.23275, 130.464, -100.059, 0.28", "9.97618, 131.168, -101.683, 0.28", "11.0593, 132.116, -103.855, 0.55", "12.0513, 132.92, -105.614, 0.28", "12.7624, 133.437, -106.884, 0.55", "13.4829, 133.916, -108.049, 0.28", "13.9952, 134.21, -108.559, 0.55", "15.2, 134.961, -109.769, 0.28", "16.9898, 136.226, -111.2, 0.55" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_14",
    "id" : "dend_14",
    "points3d" : [ "-5.96561, 81.4444, -11.9155, 0.55", "-7.09172, 85.1084, -10.7058, 0.55", "-7.69241, 87.5571, -9.72406, 0.55", "-7.94484, 88.5968, -9.29833, 0.55", "-8.32928, 90.2596, -8.6274, 0.55", "-8.64084, 91.6656, -8.12466, 0.55", "-9.36875, 95.0467, -6.919, 0.28", "-9.60989, 96.2386, -6.47982, 0.55", "-9.89965, 97.9041, -5.73247, 0.55", "-10.0749, 98.7039, -5.31648, 0.83", "-10.5833, 100.506, -4.30395, 0.28", "-11.0372, 102.021, -3.46542, 0.83", "-11.9392, 104.773, -1.94503, 0.28", "-12.0457, 105.088, -1.73144, 0.83", "-12.7817, 107.48, 0.141869, 0.55", "-13.098, 108.563, 1.08295, 0.55", "-13.5272, 110.153, 2.52265, 0.83", "-14.2495, 113.05, 5.21037, 0.55", "-14.7498, 115.274, 7.30428, 0.83", "-14.9779, 116.401, 8.39469, 0.28", "-15.1344, 117.397, 9.30513, 0.83", "-15.3726, 118.879, 10.6442, 0.83", "-15.862, 121.484, 12.8906, 0.83", "-16.2779, 123.687, 14.4181, 0.28", "-16.4452, 124.442, 14.8835, 0.83", "-17.0076, 126.72, 16.3197, 0.83", "-17.5315, 128.715, 17.5978, 0.28", "-17.8143, 129.751, 18.2984, 0.55", "-18.3928, 131.812, 19.6017, 0.28", "-19.1121, 133.932, 21.0037, 0.55", "-20.1566, 136.693, 22.9565, 0.28", "-20.4184, 137.309, 23.4298, 0.83", "-20.9499, 138.557, 24.3673, 0.28", "-21.6008, 140.05, 25.5479, 0.55", "-22.5312, 142.216, 27.4726, 0.28", "-22.693, 142.634, 27.8251, 0.55", "-23.0321, 143.535, 28.6249, 0.28", "-23.3577, 144.474, 29.5728, 0.83", "-23.6957, 145.707, 30.9027, 0.28", "-24.0178, 147.235, 32.6694, 0.55", "-24.2242, 148.264, 34.0096, 0.28", "-24.3498, 148.907, 34.808, 0.83", "-24.5678, 150.278, 36.4205, 0.83", "-24.7573, 151.672, 37.9388, 0.55", "-24.8225, 152.442, 38.6886, 0.83", "-25.1056, 156.793, 42.4912, 0.55", "-25.1815, 158.449, 43.7591, 0.83", "-25.2756, 163.951, 47.2994, 0.28", "-25.2673, 165.142, 47.7994, 0.55", "-25.1556, 167.541, 48.3702, 0.28", "-25.0424, 168.989, 48.5588, 0.83", "-24.7009, 171.998, 48.4205, 0.28", "-24.4931, 173.822, 48.1398, 0.55", "-23.8328, 178.965, 46.2369, 0.28", "-23.5727, 181.228, 45.2988, 0.83" ],
    "parent" : "dend_13",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_10",
    "id" : "dend_10",
    "points3d" : [ "-16.3712, 340.481, 14.8133, 0.55", "-16.3117, 342.712, 14.812, 0.55", "-16.355, 345.369, 14.7806, 0.55", "-16.4214, 347.921, 14.7483, 0.83", "-16.4833, 349.685, 14.7393, 0.55", "-16.5628, 351.876, 14.7565, 1.11", "-16.6437, 355.236, 14.82, 0.55", "-16.6687, 357.617, 14.8975, 1.11", "-16.6305, 359.421, 14.9249, 0.83", "-16.4731, 361.124, 14.941, 0.55", "-16.0433, 363.359, 14.9676, 0.55", "-15.4408, 365.293, 14.9773, 0.83", "-14.48, 367.319, 14.9109, 0.55", "-13.2473, 369.321, 14.7487, 0.83", "-12.1318, 370.841, 14.5758, 0.83", "-11.0704, 372.091, 14.3903, 0.83", "-10.1405, 373.089, 14.2352, 1.11", "-8.13439, 375.178, 13.8413, 0.83", "-7.27673, 376.084, 13.669, 0.55", "-5.91461, 377.54, 13.4454, 0.83", "-3.94307, 379.792, 13.1144, 0.55", "-2.69582, 381.198, 12.9184, 1.11", "-0.821397, 383.331, 12.6695, 0.55", "-0.179884, 384.088, 12.6197, 0.55", "0.688288, 385.15, 12.5592, 0.55", "2.59577, 387.712, 12.492, 0.55", "3.30666, 388.781, 12.5214, 0.28", "3.72894, 389.512, 12.5693, 0.55", "4.44155, 390.922, 12.7351, 0.28", "5.0031, 392.17, 12.8671, 0.83", "5.95195, 394.525, 13.0986, 0.55", "6.25205, 395.314, 13.1908, 0.83", "6.8602, 397.012, 13.3611, 0.55", "7.2529, 398.112, 13.448, 0.83", "8.44265, 401.461, 13.659, 0.28", "9.24189, 403.679, 13.7536, 0.83", "10.0785, 405.97, 13.8175, 0.28", "10.8072, 407.992, 13.8538, 0.55", "11.5493, 410.126, 13.8745, 0.55", "12.1542, 412.062, 13.8302, 0.55", "12.4383, 413.137, 13.7701, 0.28", "12.6694, 414.175, 13.6904, 0.55", "13.0063, 416.185, 13.5179, 0.28", "13.1631, 417.372, 13.3529, 0.55", "13.3854, 419.532, 12.9403, 0.28", "13.5134, 421.002, 12.6247, 0.28", "13.6778, 423.057, 12.1583, 0.83", "13.8081, 424.9, 11.7088, 0.83", "14.0543, 428.416, 10.8509, 0.55", "14.2198, 430.39, 10.4112, 0.55", "14.3677, 431.669, 10.1883, 0.55", "14.4908, 432.398, 10.0587, 0.28", "14.7033, 433.426, 9.88736, 0.55", "14.9195, 434.3, 9.78343, 0.28", "15.1218, 435.12, 9.67848, 1.11", "15.668, 437.597, 9.12821, 0.55", "15.968, 439.403, 8.63216, 0.55", "16.1674, 440.988, 8.09531, 0.28", "16.2464, 441.885, 7.71545, 0.83", "16.4437, 444.469, 6.42994, 0.55", "16.5688, 446.141, 5.53126, 0.83", "16.705, 447.986, 4.44831, 0.83", "16.9104, 449.856, 3.28309, 0.55", "17.1368, 451.332, 2.31113, 0.28", "17.4036, 452.772, 1.36009, 0.55", "17.6718, 454.096, 0.497856, 0.55", "18.0538, 455.835, -0.680857, 1.11", "18.5668, 458.124, -2.19356, 0.55", "18.7773, 459.116, -2.80264, 0.55", "18.9852, 460.187, -3.4784, 0.55", "19.3675, 462.716, -5.12486, 0.55", "19.5591, 463.993, -5.98242, 0.83", "19.925, 466.697, -7.68352, 0.28", "20.0181, 467.506, -8.16747, 0.55", "20.2908, 469.817, -9.46716, 0.28", "20.441, 470.946, -10.0619, 0.55", "20.702, 472.719, -10.8804, 0.28", "20.9086, 474.49, -11.6115, 0.55", "21.0046, 475.409, -11.9462, 0.28", "21.1583, 476.918, -12.4188, 0.55", "21.4429, 479.43, -12.9867, 0.55", "21.6121, 480.729, -13.292, 0.28", "21.7063, 481.873, -13.5888, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_7",
    "id" : "dend_7",
    "points3d" : [ "-16.3712, 340.481, 14.8133, 0.55", "-17.504, 341.543, 14.349, 0.55", "-18.8472, 342.868, 13.8772, 1.11", "-20.3451, 344.247, 13.4356, 0.55", "-20.8321, 344.705, 13.2649, 0.83", "-21.9901, 345.824, 12.8368, 0.55", "-22.9512, 346.711, 12.487, 0.55", "-23.6993, 347.389, 12.2136, 0.83", "-25.9186, 349.346, 11.4067, 0.55", "-27.5795, 350.765, 10.8739, 0.55", "-28.1633, 351.262, 10.6679, 0.83", "-29.7595, 352.595, 10.0867, 0.55", "-30.0168, 352.806, 9.98773, 0.83", "-30.8658, 353.527, 9.69278, 0.28", "-31.0041, 353.653, 9.66201, 0.55", "-31.8587, 354.412, 9.61513, 0.28", "-32.3932, 354.917, 9.62046, 0.55", "-33.0023, 355.471, 9.61408, 0.55", "-34.6596, 356.899, 9.56117, 0.55", "-35.7898, 357.877, 9.50161, 0.55", "-36.6584, 358.667, 9.3811, 0.83", "-37.8342, 359.788, 9.15133, 0.83", "-39.3064, 361.327, 8.65872, 0.55", "-40.3565, 362.501, 8.18562, 0.55", "-41.4599, 363.826, 7.55967, 1.11", "-42.639, 365.469, 6.77285, 0.55", "-42.9428, 365.95, 6.53829, 0.83", "-43.8496, 367.608, 5.81749, 0.28", "-44.2536, 368.517, 5.29502, 0.55", "-44.5001, 369.134, 4.8602, 0.28", "-44.7141, 369.744, 4.40168, 0.83", "-45.1055, 371.056, 3.38355, 0.28", "-45.4256, 372.252, 2.43451, 0.83", "-46.4804, 376.92, -1.24596, 0.55", "-46.6566, 377.822, -1.9619, 0.55", "-46.792, 378.644, -2.60352, 0.83", "-46.9448, 379.696, -3.37809, 0.28", "-47.0007, 380.212, -3.70146, 0.55", "-47.082, 380.985, -4.08089, 0.28", "-47.1923, 382.032, -4.29647, 0.55", "-47.377, 383.508, -4.62575, 0.55", "-47.4924, 384.35, -4.81154, 0.55", "-47.6211, 385.289, -5.00195, 0.83", "-47.8072, 386.792, -5.30919, 0.28", "-47.9583, 388.054, -5.55276, 0.83", "-48.0942, 389.613, -5.81477, 0.55", "-48.1463, 390.234, -5.90029, 0.55", "-48.2239, 391.417, -6.01064, 0.83", "-48.2724, 392.038, -6.03619, 0.55", "-48.3713, 393.203, -5.97854, 0.83", "-48.535, 394.271, -5.9096, 0.28", "-48.6288, 394.711, -5.91947, 0.28", "-48.9579, 395.892, -6.05482, 0.28", "-49.1133, 396.402, -6.16007, 0.83", "-49.5072, 397.591, -6.53795, 0.55", "-49.9671, 398.907, -7.22877, 0.83", "-50.6801, 400.696, -8.43655, 0.28", "-50.9334, 401.249, -8.91378, 0.55", "-51.2385, 401.791, -9.51978, 0.28", "-51.5019, 402.175, -9.98343, 0.83", "-52.5418, 403.575, -11.7252, 0.83", "-52.8926, 404.024, -12.2724, 0.83", "-54.0346, 405.407, -13.8499, 0.83", "-55.385, 406.999, -15.6027, 0.55", "-56.2155, 407.937, -16.6301, 0.55", "-56.9654, 408.786, -17.5235, 0.55", "-57.7864, 409.721, -18.4433, 0.55", "-58.957, 411.187, -19.7772, 0.55", "-59.8765, 412.406, -20.7308, 0.55" ],
    "parent" : "dend_6",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_45",
    "id" : "dend_45",
    "points3d" : [ "34.4755, -40.8064, -90.6886, 0.55", "35.3363, -40.0838, -92.0866, 0.55", "36.2035, -39.2814, -93.5052, 0.83", "37.9694, -37.5827, -96.3913, 0.28", "38.8719, -36.6895, -97.8246, 0.83", "41.0802, -34.4974, -101.18, 0.28", "41.8465, -33.7416, -102.289, 0.55", "43.5344, -31.9648, -104.844, 0.55", "45.3172, -29.998, -107.395, 0.55", "46.8621, -28.3034, -109.463, 0.28", "47.5028, -27.6032, -110.276, 0.28", "48.156, -26.8974, -111.06, 0.55", "49.5769, -25.4374, -112.681, 0.28", "51.5656, -23.4887, -114.649, 0.55", "53.8782, -21.066, -117.095, 0.28", "54.4741, -20.4385, -117.75, 0.55", "56.8776, -17.7564, -120.454, 0.28", "58.4279, -15.9605, -122.241, 0.28", "60.1809, -13.8698, -124.366, 0.83", "62.8682, -10.4287, -127.913, 0.55", "63.5103, -9.58473, -128.8, 0.55", "64.7715, -7.89181, -130.74, 0.55", "66.028, -6.25362, -132.789, 0.83", "67.8913, -3.95737, -135.851, 0.28", "68.4799, -3.32016, -136.733, 0.55", "70.1445, -1.83802, -138.675, 0.28", "70.4554, -1.58557, -139.016, 0.55", "71.9538, -0.594916, -140.454, 0.55", "74.2554, 0.74507, -142.278, 0.28", "75.1205, 1.21517, -142.856, 0.55", "77.2328, 2.27556, -144.186, 0.28", "78.1087, 2.69155, -144.687, 0.55", "79.9924, 3.47739, -145.75, 0.28", "81.1743, 3.8436, -146.437, 0.55", "81.8295, 3.98704, -146.792, 0.55", "83.6864, 4.40896, -147.693, 0.28", "84.9413, 4.7167, -148.213, 0.28", "86.1857, 5.11128, -148.724, 0.55", "89.2287, 6.29123, -149.926, 0.28", "91.369, 7.3246, -150.736, 0.55", "93.3947, 8.4822, -151.423, 0.55", "95.2762, 9.76441, -151.98, 0.83", "98.0876, 11.9769, -152.668, 0.28", "99.1306, 12.9329, -152.874, 0.28", "100.965, 14.9174, -153.097, 0.55", "102.78, 17.0969, -153.216, 0.28", "103.568, 18.0973, -153.222, 0.55", "104.804, 19.7303, -153.124, 0.55", "106.617, 22.1637, -152.821, 0.28", "107.703, 23.6482, -152.626, 0.55", "109.339, 25.9661, -152.314, 0.28", "111.14, 28.6174, -151.992, 0.55", "112.969, 31.3726, -151.685, 0.55", "113.765, 32.6183, -151.553, 0.55", "115.296, 35.1496, -151.348, 0.55", "116.688, 37.5081, -151.26, 0.55", "118.053, 39.959, -151.239, 0.55", "119.321, 42.3017, -151.248, 0.28", "119.98, 43.5347, -151.307, 0.55", "122.05, 47.4197, -151.546, 0.28", "123.374, 50.0454, -151.792, 0.28", "124.004, 51.3767, -151.942, 0.55", "125.114, 53.7368, -152.247, 0.28", "126.101, 55.8668, -152.54, 0.55", "126.848, 57.4998, -152.751, 0.55", "128.863, 62.1231, -153.275, 0.28", "130.04, 65.0113, -153.569, 0.28", "130.497, 66.1936, -153.673, 0.55", "131.382, 68.588, -153.843, 0.55", "132.576, 71.8296, -153.95, 0.28", "133.495, 74.3379, -153.989, 0.55", "134.341, 76.6502, -153.94, 0.28", "135.002, 78.6532, -153.864, 0.55", "135.388, 79.8599, -153.788, 0.28", "135.668, 80.672, -153.663, 0.55", "136.505, 83.0116, -153.118, 0.28", "136.956, 84.1442, -152.771, 0.55", "138.566, 87.8552, -151.474, 0.28", "139.738, 90.3866, -150.538, 0.55", "141.346, 93.72, -149.226, 0.28", "142.248, 95.5054, -148.503, 0.55", "143.326, 97.5311, -147.644, 0.28", "144.32, 99.3306, -146.842, 0.55", "145.276, 101.019, -146.077, 0.28", "145.993, 102.328, -145.495, 0.55", "147.684, 105.614, -144.122, 0.28", "148.546, 107.286, -143.376, 0.55", "149.737, 109.692, -142.25, 0.28", "150.175, 110.586, -141.798, 0.55", "151.234, 112.866, -140.595, 0.28", "152.283, 115.286, -139.32, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 11
  }, {
    "name" : "dend_44",
    "id" : "dend_44",
    "points3d" : [ "34.4755, -40.8064, -90.6886, 0.28", "36.426, -40.8882, -92.3708, 0.28", "36.9929, -40.9135, -92.9108, 0.55", "37.7383, -40.8924, -93.7021, 0.55", "38.8679, -40.8184, -94.9226, 0.28", "39.5443, -40.7711, -95.6296, 0.55", "41.9313, -40.5502, -98.0238, 0.28", "42.5746, -40.4317, -98.6417, 0.55", "44.1056, -40.0481, -100.055, 0.28", "44.763, -39.8389, -100.63, 0.28", "45.8577, -39.4354, -101.498, 0.55", "46.8988, -39.0505, -102.237, 0.55", "49.5214, -38.119, -103.777, 0.28", "50.5214, -37.8293, -104.329, 0.55", "51.6804, -37.5911, -104.932, 0.55", "53.8278, -37.2941, -106.044, 0.28", "55.2559, -37.2158, -106.773, 0.55", "57.0961, -37.3233, -107.634, 0.28", "58.1129, -37.5107, -108.061, 0.55", "60.0226, -38.0344, -108.804, 0.28", "60.86, -38.3562, -109.083, 0.55", "61.8106, -38.823, -109.337, 0.55", "63.1039, -39.586, -109.536, 0.28", "63.8694, -40.1148, -109.587, 0.28", "64.726, -40.8371, -109.559, 0.55", "65.8438, -41.9747, -109.415, 0.28", "65.9973, -42.1537, -109.384, 0.55", "67.3029, -43.9118, -109.086, 0.28", "67.4317, -44.1238, -109.07, 0.83", "69.0163, -47.0583, -109.051, 0.28", "69.2818, -47.6321, -109.154, 0.55", "69.8549, -49.0806, -109.607, 0.28", "70.1767, -49.9932, -109.974, 0.55", "70.8351, -52.0976, -111.077, 0.28", "70.9126, -52.3654, -111.228, 0.55", "71.7482, -55.5014, -113.211, 0.28", "71.8562, -55.9333, -113.471, 0.55", "71.9277, -56.1957, -113.633, 0.55", "72.2312, -57.1491, -114.128, 0.28", "72.515, -57.9376, -114.462, 0.55", "73.0683, -59.2843, -114.937, 0.28", "73.3107, -59.8325, -115.108, 0.55", "74.8318, -63.1008, -116.25, 0.28", "75.1537, -63.765, -116.496, 0.55", "75.519, -64.5223, -116.82, 0.28", "76.7075, -66.9559, -117.962, 0.28", "77.0816, -67.7471, -118.307, 0.55", "78.1405, -70.0301, -119.22, 0.28", "78.2231, -70.2254, -119.279, 0.55", "79.2085, -72.7954, -119.966, 0.28", "79.6615, -74.0694, -120.182, 0.55", "80.2332, -75.7089, -120.28, 0.28", "80.498, -76.3886, -120.247, 0.55", "81.0862, -77.7723, -120.071, 0.28", "81.3636, -78.3753, -119.981, 0.55", "82.4727, -80.7085, -119.79, 0.28", "83.3965, -82.6144, -119.777, 0.28", "83.8139, -83.4339, -119.857, 0.55", "84.8667, -85.4216, -120.163, 0.28", "85.2083, -86.0201, -120.284, 0.55", "87.496, -89.9531, -121.164, 0.28", "88.3884, -91.4241, -121.567, 0.55", "89.7767, -93.5593, -122.217, 0.28", "90.056, -93.9752, -122.352, 0.55", "91.4584, -95.9194, -123.013, 0.28", "91.6638, -96.1767, -123.099, 0.55", "92.5625, -96.9561, -123.318, 0.28", "93.1741, -97.4218, -123.509, 0.55" ],
    "parent" : "dend_43",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 5
  }, {
    "name" : "dend_41",
    "id" : "dend_41",
    "points3d" : [ "40.3348, -44.0147, 11.0578, 0.55", "41.2056, -43.9527, 12.4547, 0.55", "42.9417, -43.745, 15.2976, 0.55", "46.1285, -43.324, 20.4175, 0.55", "48.5879, -43.0079, 24.2978, 0.55", "50.8261, -42.7835, 27.7599, 0.28", "52.0745, -42.6776, 29.6453, 0.83", "53.6325, -42.5939, 32.0271, 0.55", "54.8227, -42.6087, 33.7656, 0.28", "55.4363, -42.6312, 34.5099, 0.55", "56.7674, -42.6866, 35.9798, 0.28", "57.2151, -42.7201, 36.4668, 0.55", "59.2057, -43.0101, 38.3383, 0.28", "60.5144, -43.3877, 39.3984, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_40",
    "id" : "dend_40",
    "points3d" : [ "40.3348, -44.0147, 11.0578, 0.28", "48.2819, -45.4489, 7.22017, 0.28", "49.3677, -45.5957, 6.78912, 0.83", "53.0807, -45.9692, 5.51082, 0.28", "54.1384, -45.9848, 5.23182, 0.83", "56.5718, -45.8637, 4.70402, 0.28", "57.5884, -45.7537, 4.52533, 0.83", "60.4153, -44.9813, 4.6693, 0.28", "61.0145, -44.6745, 4.71573, 0.83", "63.9591, -42.514, 5.02658, 0.28", "64.6727, -41.9584, 5.0962, 0.28", "65.6822, -41.1344, 5.18894, 0.55", "67.4916, -39.6953, 5.7312, 0.28", "70.1823, -37.6198, 6.98606, 0.28", "70.8258, -37.1584, 7.44997, 0.83", "75.2452, -34.2574, 11.5738, 0.28", "75.9846, -33.8403, 12.3655, 0.55", "81.1188, -31.3383, 18.9291, 0.28", "81.6438, -31.1112, 19.7116, 0.83", "84.6155, -29.841, 24.9779, 0.28", "84.9867, -29.6521, 25.7451, 0.55", "86.0066, -29.0347, 28.2643, 0.28", "86.9673, -28.4161, 30.6155, 0.55", "88.2451, -27.5208, 33.3069, 0.28", "88.7728, -27.1149, 34.3466, 0.55", "90.514, -25.4087, 37.2454, 0.28", "91.1231, -24.6883, 38.3459, 0.55" ],
    "parent" : "dend_39",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_38",
    "id" : "dend_38",
    "points3d" : [ "29.9067, -57.1295, -8.99971, 0.55", "31.5751, -57.7684, -10.149, 0.55", "34.2406, -58.8149, -12.0008, 0.55", "36.1642, -59.603, -13.3682, 0.28", "37.5377, -60.1589, -14.3328, 0.55", "39.6982, -61.0092, -15.7828, 0.55", "40.6306, -61.4097, -16.3672, 0.28", "41.2684, -61.6955, -16.7921, 0.55", "41.9827, -62.0858, -17.2523, 0.28", "43.0322, -62.7571, -17.931, 0.55", "44.5928, -63.8299, -18.8304, 0.55", "46.8384, -65.4026, -20.0632, 0.55", "49.7387, -67.3697, -22.0867, 1.38", "51.5309, -68.5327, -23.5159, 0.83", "53.0322, -69.4308, -24.8052, 0.55", "54.8947, -70.4602, -26.5194, 0.28", "57.1497, -71.5921, -28.7154, 0.83", "61.3085, -73.3378, -33.2152, 0.28", "61.834, -73.5596, -33.8367, 0.28", "63.1007, -74.1371, -35.56, 0.55", "63.9291, -74.5195, -36.7682, 0.55", "64.6537, -74.8928, -37.9314, 0.55", "66.6665, -76.135, -41.0808, 0.55", "68.6281, -77.5617, -44.0442, 0.28", "69.801, -78.5124, -45.9129, 0.83", "70.5071, -79.1253, -47.083, 0.83", "72.3787, -80.7525, -50.1383, 0.55", "73.1521, -81.4263, -51.3227, 0.83", "74.2829, -82.3747, -52.7335, 0.28", "75.1369, -83.0129, -53.6031, 0.55", "75.6724, -83.442, -54.0628, 0.28", "75.9387, -83.6785, -54.257, 0.55", "77.2624, -84.7982, -55.0064, 0.28", "78.6937, -86.0479, -55.9471, 0.28", "79.7956, -87.0303, -56.6641, 0.83", "80.7153, -87.9557, -57.3108, 0.55", "82.9959, -90.4257, -58.9717, 0.28", "83.6485, -91.2086, -59.5186, 0.83", "85.674, -93.869, -61.3777, 0.28", "86.4042, -95.0042, -62.1269, 0.83", "87.648, -97.0689, -63.3749, 0.28", "87.9973, -97.66, -63.7386, 0.83", "89.4196, -100.208, -65.2529, 0.28", "90.2771, -101.779, -66.1541, 0.28", "91.0752, -103.125, -66.8331, 0.55", "92.0122, -104.586, -67.6586, 0.55", "93.6047, -106.806, -68.9775, 0.55", "94.4741, -107.935, -69.6582, 0.28", "94.9447, -108.513, -70.0249, 0.55", "96.4806, -110.358, -71.3823, 0.28", "97.6512, -111.648, -72.4049, 0.55", "98.865, -113.036, -73.517, 0.28", "99.2339, -113.454, -73.8218, 0.83", "100.808, -115.211, -75.1995, 0.28", "101.177, -115.594, -75.5223, 0.55", "102.138, -116.491, -76.3744, 0.55", "103.813, -117.976, -77.5885, 0.28", "103.88, -118.032, -77.6377, 0.55", "105.367, -119.18, -78.8456, 0.28", "105.959, -119.597, -79.3263, 0.55", "107.52, -120.724, -80.7612, 0.28", "108.534, -121.435, -81.7698, 0.55", "110.358, -122.616, -83.6572, 0.55", "111.926, -123.64, -85.3631, 0.28", "112.876, -124.294, -86.4347, 0.83", "114.501, -125.465, -88.2964, 0.28", "114.863, -125.695, -88.656, 0.55", "116.249, -126.445, -89.8813, 0.28", "116.747, -126.664, -90.1819, 0.55", "119.207, -127.544, -91.3413, 0.28", "120.007, -127.777, -91.6659, 0.83", "123.207, -128.477, -92.5776, 0.28", "123.811, -128.585, -92.7166, 0.55", "126.325, -128.826, -93.0542, 0.28", "128.495, -128.847, -93.2743, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 7
  }, {
    "name" : "dend_35",
    "id" : "dend_35",
    "points3d" : [ "29.9067, -57.1295, -8.99971, 0.55", "30.1112, -58.4309, -11.2194, 0.55", "30.3725, -61.2481, -15.8735, 0.55", "30.654, -63.6666, -19.819, 0.28", "30.8929, -65.3805, -22.7084, 0.83", "31.4428, -68.0794, -27.4087, 0.28", "31.5722, -68.6809, -28.5443, 0.55", "31.6581, -69.1695, -29.5717, 0.55", "31.913, -70.0099, -31.7082, 0.55", "32.4059, -71.2034, -34.9909, 0.55", "32.698, -71.8228, -36.8005, 0.55", "33.8284, -73.3659, -41.6925, 0.83", "34.5527, -74.2556, -44.7163, 0.28", "34.8174, -74.5871, -45.9635, 0.55" ],
    "parent" : "dend_34",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_20",
    "id" : "dend_20",
    "points3d" : [ "-67.1768, -15.1684, -116.634, 0.28", "-68.5217, -15.3445, -116.435, 0.28", "-70.2689, -15.5733, -116.176, 0.55" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_19",
    "id" : "dend_19",
    "points3d" : [ "-67.1768, -15.1684, -116.634, 0.28", "-69.5162, -17.9419, -118.792, 0.28", "-70.2001, -18.7528, -119.423, 0.55", "-72.3398, -21.2898, -121.397, 0.28", "-73.2868, -22.4128, -122.271, 0.83", "-77.4317, -27.327, -126.095, 0.28", "-78.1129, -28.1347, -126.724, 0.83" ],
    "parent" : "dend_18",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_9",
    "id" : "dend_9",
    "points3d" : [ "-59.8765, 412.406, -20.7308, 0.55", "-60.7803, 413.202, -21.834, 0.55", "-61.7379, 414.155, -22.9574, 0.28", "-62.6927, 415.105, -24.0777, 0.55", "-65.4538, 417.851, -27.3169, 0.28", "-65.7711, 418.167, -27.6893, 0.55", "-67.8185, 420.204, -30.0912, 0.28", "-68.8293, 421.074, -31.4466, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_8",
    "id" : "dend_8",
    "points3d" : [ "-59.8765, 412.406, -20.7308, 0.28", "-61.9532, 411.59, -20.1172, 0.28", "-63.109, 411.136, -19.7757, 0.83" ],
    "parent" : "dend_7",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_47",
    "id" : "dend_47",
    "points3d" : [ "152.283, 115.286, -139.32, 0.28", "149.038, 118.194, -137.964, 0.28", "147.938, 119.18, -137.504, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_46",
    "id" : "dend_46",
    "points3d" : [ "152.283, 115.286, -139.32, 0.28", "152.511, 116.47, -139.121, 0.28", "152.922, 118.7, -138.717, 0.28", "153.019, 119.3, -138.581, 0.55", "153.315, 121.491, -137.967, 0.28", "153.486, 122.75, -137.615, 0.55", "153.706, 124.376, -137.159, 0.28", "153.803, 125.234, -136.87, 0.55", "153.921, 126.597, -136.311, 0.28", "153.982, 127.702, -135.838, 0.55" ],
    "parent" : "dend_45",
    "fractionAlong" : 1.0
  }, {
    "name" : "dend_37",
    "id" : "dend_37",
    "points3d" : [ "34.8174, -74.5871, -45.9635, 0.55", "34.1268, -75.1064, -46.7976, 0.55", "33.811, -75.3642, -47.2012, 0.28", "33.5965, -75.5238, -47.4697, 0.83", "32.2555, -76.4462, -49.0289, 0.28", "31.8771, -76.7178, -49.4634, 0.83", "30.2384, -77.9334, -51.2894, 0.28", "30.0102, -78.1011, -51.5402, 0.83", "28.5854, -79.0489, -53.0095, 0.28", "28.1609, -79.3137, -53.4015, 0.55", "26.2796, -80.3787, -54.9519, 0.28", "25.8954, -80.5815, -55.2652, 0.28", "25.0661, -80.9847, -55.936, 0.83", "22.6205, -82.1109, -57.9331, 0.28", "21.9501, -82.409, -58.5019, 0.55", "20.6386, -82.9678, -59.6449, 0.55", "19.6631, -83.3502, -60.4862, 0.55", "17.9853, -84.0268, -61.9479, 0.28", "17.5191, -84.2406, -62.3604, 0.83", "15.9531, -85.0391, -63.7095, 0.28", "15.6507, -85.2117, -63.9601, 0.55", "14.3073, -86.0692, -64.9035, 0.28", "13.9007, -86.3212, -65.1398, 0.55", "12.3415, -87.3299, -65.9106, 0.28", "12.2013, -87.4149, -65.9778, 0.83", "11.3682, -87.8927, -66.2996, 0.28", "10.6927, -88.2691, -66.5144, 0.55", "8.63064, -89.3567, -67.1111, 0.28", "8.01226, -89.6904, -67.2616, 0.83", "5.34622, -91.1612, -67.7583, 0.28", "4.20151, -91.8103, -67.952, 0.55", "2.69654, -92.7011, -68.2152, 0.55", "1.02706, -93.7555, -68.4719, 0.28", "-0.362991, -94.7065, -68.6146, 0.55", "-1.36225, -95.4092, -68.7615, 0.28", "-1.50836, -95.5198, -68.7862, 0.55", "-2.40708, -96.1645, -68.9864, 0.28", "-3.1107, -96.621, -69.1546, 0.55", "-3.89103, -97.0674, -69.3539, 0.55", "-5.24746, -97.7056, -69.767, 0.28", "-5.82984, -97.9429, -69.9323, 0.55", "-6.66614, -98.2661, -70.1626, 0.28", "-7.19893, -98.4534, -70.2915, 0.55", "-8.64276, -98.9301, -70.6429, 0.28", "-9.12914, -99.0789, -70.779, 0.55", "-10.3487, -99.4703, -71.1223, 0.28", "-11.1321, -99.7457, -71.4285, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  }, {
    "name" : "dend_36",
    "id" : "dend_36",
    "points3d" : [ "34.8174, -74.5871, -45.9635, 0.28", "36.6238, -74.6779, -47.2011, 0.28", "36.8724, -74.7065, -47.404, 0.83", "38.0145, -74.9132, -48.3404, 0.28", "38.4104, -74.9732, -48.6721, 0.28", "38.8908, -75.0783, -49.0985, 0.55", "39.6682, -75.3095, -49.9663, 0.28", "40.4212, -75.634, -51.023, 0.55", "40.8582, -75.8727, -51.6569, 0.55", "41.354, -76.2353, -52.5167, 0.55", "42.1536, -76.9107, -54.1094, 0.83", "43.0319, -77.7644, -56.1244, 0.28", "43.3167, -78.0715, -56.8432, 0.28", "43.4452, -78.2568, -57.2386, 0.83", "44.2471, -79.55, -59.9424, 0.28", "44.4494, -79.9612, -60.7402, 0.83", "44.6003, -80.3465, -61.4368, 0.83", "44.8727, -81.0959, -62.6481, 0.83", "45.3158, -82.4424, -64.7229, 0.55", "45.6907, -83.7482, -66.504, 0.55", "46.1631, -85.5969, -68.6316, 0.55", "46.3559, -86.6158, -69.6493, 0.55", "46.4944, -87.6182, -70.5088, 0.28", "46.5092, -87.7509, -70.5998, 0.55", "46.6912, -89.7771, -71.6368, 0.28", "46.7435, -90.548, -71.9285, 0.55", "46.9387, -92.8204, -72.6283, 0.28", "47.0944, -94.0984, -72.974, 0.55", "47.3166, -95.4664, -73.3177, 0.28", "47.5538, -96.4792, -73.536, 0.55", "48.2605, -98.8106, -73.9408, 0.28", "48.4711, -99.3622, -74.015, 1.11", "49.8208, -102.076, -74.2845, 0.28", "50.6113, -103.371, -74.377, 0.55", "51.5455, -104.543, -74.3203, 0.28", "51.9136, -104.894, -74.2495, 0.55", "53.0047, -105.73, -73.9227, 0.28", "53.7891, -106.242, -73.6365, 0.28", "55.4146, -107.086, -72.9379, 0.55", "57.8618, -108.328, -71.8054, 0.55", "58.8217, -108.812, -71.3496, 0.28", "59.0191, -108.902, -71.2643, 0.55", "60.4449, -109.49, -70.7375, 0.28", "60.6898, -109.588, -70.6581, 0.55", "61.7942, -109.972, -70.4339, 0.28", "62.2759, -110.114, -70.4042, 0.55", "64.2336, -110.456, -70.2605, 0.28", "64.8766, -110.484, -70.1648, 0.55", "65.8992, -110.408, -70.0297, 0.28", "66.2471, -110.336, -69.9445, 0.55", "67.2798, -110.006, -69.6186, 0.28", "68.1868, -109.68, -69.291, 0.55", "69.9025, -108.956, -68.4793, 0.28", "71.2283, -108.337, -67.7834, 0.55", "74.0558, -106.837, -66.1923, 0.28", "74.4696, -106.608, -65.9437, 0.55" ],
    "parent" : "dend_35",
    "fractionAlong" : 1.0,
    "numberInternalDivisions" : 3
  } ],
  "groups" : [ {
    "name" : "ModelViewParmSubset_1",
    "groups" : [ ],
    "sections" : [ "soma_0", "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_2",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_3",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "ModelViewParmSubset_4",
    "groups" : [ ],
    "sections" : [ "soma_0", "dend_26", "dend_11", "dend_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "ModelViewParmSubset_5",
    "groups" : [ ],
    "sections" : [ "dend_26", "dend_11", "dend_0", "axon_0", "dend_32", "dend_27", "dend_21", "dend_12", "dend_4", "dend_1", "axon_1", "dend_42", "dend_33", "dend_31", "dend_28", "dend_23", "dend_22", "dend_16", "dend_13", "dend_6", "dend_5", "dend_3", "dend_2", "dend_48", "dend_43", "dend_39", "dend_34", "dend_30", "dend_29", "dend_25", "dend_24", "dend_18", "dend_17", "dend_15", "dend_14", "dend_10", "dend_7", "dend_45", "dend_44", "dend_41", "dend_40", "dend_38", "dend_35", "dend_20", "dend_19", "dend_9", "dend_8", "dend_47", "dend_46", "dend_37", "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_1",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_8",
    "groups" : [ ],
    "sections" : [ "dend_21" ]
  }, {
    "name" : "OneSecGrp_SectionRef_13",
    "groups" : [ ],
    "sections" : [ "dend_42" ]
  }, {
    "name" : "OneSecGrp_SectionRef_20",
    "groups" : [ ],
    "sections" : [ "dend_13" ]
  }, {
    "name" : "OneSecGrp_SectionRef_21",
    "groups" : [ ],
    "sections" : [ "dend_6" ]
  }, {
    "name" : "OneSecGrp_SectionRef_22",
    "groups" : [ ],
    "sections" : [ "dend_5" ]
  }, {
    "name" : "OneSecGrp_SectionRef_23",
    "groups" : [ ],
    "sections" : [ "dend_3" ]
  }, {
    "name" : "OneSecGrp_SectionRef_25",
    "groups" : [ ],
    "sections" : [ "dend_48" ]
  }, {
    "name" : "OneSecGrp_SectionRef_26",
    "groups" : [ ],
    "sections" : [ "dend_43" ]
  }, {
    "name" : "OneSecGrp_SectionRef_29",
    "groups" : [ ],
    "sections" : [ "dend_30" ]
  }, {
    "name" : "OneSecGrp_SectionRef_30",
    "groups" : [ ],
    "sections" : [ "dend_29" ]
  }, {
    "name" : "OneSecGrp_SectionRef_32",
    "groups" : [ ],
    "sections" : [ "dend_24" ]
  }, {
    "name" : "OneSecGrp_SectionRef_33",
    "groups" : [ ],
    "sections" : [ "dend_18" ]
  }, {
    "name" : "OneSecGrp_SectionRef_34",
    "groups" : [ ],
    "sections" : [ "dend_17" ]
  }, {
    "name" : "OneSecGrp_SectionRef_35",
    "groups" : [ ],
    "sections" : [ "dend_15" ]
  }, {
    "name" : "OneSecGrp_SectionRef_36",
    "groups" : [ ],
    "sections" : [ "dend_14" ]
  }, {
    "name" : "OneSecGrp_SectionRef_37",
    "groups" : [ ],
    "sections" : [ "dend_10" ]
  }, {
    "name" : "OneSecGrp_SectionRef_38",
    "groups" : [ ],
    "sections" : [ "dend_7" ]
  }, {
    "name" : "OneSecGrp_SectionRef_39",
    "groups" : [ ],
    "sections" : [ "dend_45" ]
  }, {
    "name" : "OneSecGrp_SectionRef_40",
    "groups" : [ ],
    "sections" : [ "dend_44" ]
  }, {
    "name" : "OneSecGrp_SectionRef_42",
    "groups" : [ ],
    "sections" : [ "dend_40" ]
  }, {
    "name" : "OneSecGrp_SectionRef_43",
    "groups" : [ ],
    "sections" : [ "dend_38" ]
  }, {
    "name" : "OneSecGrp_SectionRef_44",
    "groups" : [ ],
    "sections" : [ "dend_35" ]
  }, {
    "name" : "OneSecGrp_SectionRef_51",
    "groups" : [ ],
    "sections" : [ "dend_37" ]
  }, {
    "name" : "OneSecGrp_SectionRef_52",
    "groups" : [ ],
    "sections" : [ "dend_36" ]
  }, {
    "name" : "OneSecGrp_SectionRef_2",
    "groups" : [ ],
    "sections" : [ "dend_26" ]
  }, {
    "name" : "OneSecGrp_SectionRef_6",
    "groups" : [ ],
    "sections" : [ "dend_32" ]
  }, {
    "name" : "OneSecGrp_SectionRef_3",
    "groups" : [ ],
    "sections" : [ "dend_11" ]
  }, {
    "name" : "OneSecGrp_SectionRef_7",
    "groups" : [ ],
    "sections" : [ "dend_27" ]
  }, {
    "name" : "OneSecGrp_SectionRef_9",
    "groups" : [ ],
    "sections" : [ "dend_12" ]
  }, {
    "name" : "OneSecGrp_SectionRef_14",
    "groups" : [ ],
    "sections" : [ "dend_33" ]
  }, {
    "name" : "OneSecGrp_SectionRef_4",
    "groups" : [ ],
    "sections" : [ "dend_0" ]
  }, {
    "name" : "OneSecGrp_SectionRef_11",
    "groups" : [ ],
    "sections" : [ "dend_1" ]
  }, {
    "name" : "OneSecGrp_SectionRef_19",
    "groups" : [ ],
    "sections" : [ "dend_16" ]
  }, {
    "name" : "OneSecGrp_SectionRef_10",
    "groups" : [ ],
    "sections" : [ "dend_4" ]
  }, {
    "name" : "OneSecGrp_SectionRef_24",
    "groups" : [ ],
    "sections" : [ "dend_2" ]
  }, {
    "name" : "OneSecGrp_SectionRef_28",
    "groups" : [ ],
    "sections" : [ "dend_34" ]
  }, {
    "name" : "OneSecGrp_SectionRef_27",
    "groups" : [ ],
    "sections" : [ "dend_39" ]
  }, {
    "name" : "OneSecGrp_SectionRef_15",
    "groups" : [ ],
    "sections" : [ "dend_31" ]
  }, {
    "name" : "OneSecGrp_SectionRef_16",
    "groups" : [ ],
    "sections" : [ "dend_28" ]
  }, {
    "name" : "OneSecGrp_SectionRef_41",
    "groups" : [ ],
    "sections" : [ "dend_41" ]
  }, {
    "name" : "OneSecGrp_SectionRef_17",
    "groups" : [ ],
    "sections" : [ "dend_23" ]
  }, {
    "name" : "OneSecGrp_SectionRef_18",
    "groups" : [ ],
    "sections" : [ "dend_22" ]
  }, {
    "name" : "OneSecGrp_SectionRef_31",
    "groups" : [ ],
    "sections" : [ "dend_25" ]
  }, {
    "name" : "OneSecGrp_SectionRef_45",
    "groups" : [ ],
    "sections" : [ "dend_20" ]
  }, {
    "name" : "OneSecGrp_SectionRef_46",
    "groups" : [ ],
    "sections" : [ "dend_19" ]
  }, {
    "name" : "OneSecGrp_SectionRef_49",
    "groups" : [ ],
    "sections" : [ "dend_47" ]
  }, {
    "name" : "OneSecGrp_SectionRef_50",
    "groups" : [ ],
    "sections" : [ "dend_46" ]
  }, {
    "name" : "OneSecGrp_SectionRef_48",
    "groups" : [ ],
    "sections" : [ "dend_8" ]
  }, {
    "name" : "OneSecGrp_SectionRef_47",
    "groups" : [ ],
    "sections" : [ "dend_9" ]
  }, {
    "name" : "basal",
    "groups" : [ ],
    "sections" : [ "dend_0", "dend_1", "dend_2", "dend_3", "dend_4", "dend_5", "dend_6", "dend_7", "dend_8", "dend_9", "dend_10", "dend_11", "dend_12", "dend_13", "dend_14", "dend_15", "dend_16", "dend_17", "dend_18", "dend_19", "dend_20", "dend_21", "dend_22", "dend_23", "dend_24", "dend_25", "dend_26", "dend_27", "dend_28", "dend_29", "dend_30", "dend_31", "dend_32", "dend_33", "dend_34", "dend_35", "dend_36", "dend_37", "dend_38", "dend_39", "dend_40", "dend_41", "dend_42", "dend_43", "dend_44", "dend_45", "dend_46", "dend_47", "dend_48" ],
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_basal",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "apical",
    "inhomogeneousParameters" : [ {
      "id" : "PathLengthOver_apical",
      "variable" : "p",
      "metric" : "Path Length from root",
      "proximalTranslationStart" : "0.0"
    } ]
  }, {
    "name" : "axonal",
    "groups" : [ ],
    "sections" : [ "axon_0", "axon_1" ]
  }, {
    "name" : "somatic",
    "groups" : [ ],
    "sections" : [ "soma_0" ]
  }, {
    "name" : "all",
    "sections" : [ "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "soma_0", "dend_26", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_11", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "dend_0", "axon_0", "axon_0", "dend_32", "dend_32", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_27", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_21", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_12", "dend_4", "dend_4", "dend_4", "dend_4", "dend_1", "axon_1", "axon_1", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_42", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_33", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_31", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_28", "dend_23", "dend_23", "dend_23", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_22", "dend_16", "dend_16", "dend_16", "dend_16", "dend_16", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_13", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_6", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_5", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_3", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_2", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_48", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_43", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_39", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_34", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_30", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_29", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_25", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_24", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_18", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_17", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_15", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_14", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_10", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_7", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_45", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_44", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_41", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_40", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_38", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_35", "dend_20", "dend_20", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_19", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_9", "dend_8", "dend_8", "dend_47", "dend_47", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_46", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_37", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36", "dend_36" ]
  } ],
  "specificCapacitance" : [ {
    "group" : "basal",
    "value" : "1.0"
  }, {
    "group" : "apical",
    "value" : "1.0"
  }, {
    "group" : "axonal",
    "value" : "1.0"
  }, {
    "group" : "somatic",
    "value" : "1.0"
  } ],
  "initMembPotential" : [ {
    "group" : "all",
    "value" : "-80.0"
  } ],
  "resistivity" : [ {
    "group" : "all",
    "value" : "100.0"
  } ],
  "channelDensity" : [ {
    "id" : "basal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "basal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "basal_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "basal",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "basal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "basal",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "basal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "basal",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "0.007375",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "4.1E-5",
    "erev" : "-85.0"
  }, {
    "id" : "apical_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "apical_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "apical",
    "condDens" : "0.001373",
    "erev" : "50.0"
  }, {
    "id" : "apical_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "apical",
    "condDens" : "1.0E-6",
    "erev" : "-63.118496"
  }, {
    "id" : "apical_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "apical",
    "condDens" : "1.3999999E-5",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNaTa_tbar_NaTa_t",
    "ionChannel" : "NaTa_t",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "3.993125",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "axonal",
    "condDens" : "0.0",
    "erev" : "50.0"
  }, {
    "id" : "axonal_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.005611",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.068459995",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "0.517764",
    "erev" : "-85.0"
  }, {
    "id" : "axonal_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "axonal",
    "condDens" : "6.3E-5",
    "erev" : "-64.6017"
  }, {
    "id" : "axonal_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "axonal",
    "condDens" : "3.45E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Tstbar_K_Tst",
    "ionChannel" : "K_Tst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.077616",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNap_Et2bar_Nap_Et2",
    "ionChannel" : "Nap_Et2",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "1.0E-6",
    "erev" : "50.0"
  }, {
    "id" : "somatic_gSK_E2bar_SK_E2",
    "ionChannel" : "SK_E2",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.002099",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gK_Pstbar_K_Pst",
    "ionChannel" : "K_Pst",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "1.13999995E-4",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gSKv3_1bar_SKv3_1",
    "ionChannel" : "SKv3_1",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "0.26087198",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_g_pas",
    "ionChannel" : "pas_nml2",
    "ion" : "non_specific",
    "group" : "somatic",
    "condDens" : "2.0E-5",
    "erev" : "-69.78141"
  }, {
    "id" : "somatic_gImbar_Im",
    "ionChannel" : "Im",
    "ion" : "k",
    "group" : "somatic",
    "condDens" : "3.2E-5",
    "erev" : "-85.0"
  }, {
    "id" : "somatic_gNaTs2_tbar_NaTs2_t",
    "ionChannel" : "NaTs2_t",
    "ion" : "na",
    "group" : "somatic",
    "condDens" : "0.395881",
    "erev" : "50.0"
  }, {
    "id" : "basal_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "basal",
    "inhomogeneousParameter" : "PathLengthOver_basal",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "apical_gIhbar_Ih",
    "ionChannel" : "Ih",
    "group" : "apical",
    "inhomogeneousParameter" : "PathLengthOver_apical",
    "parameterName" : "gmax",
    "variable" : "p",
    "inhomogeneousValue" : "1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))",
    "comment" : "Conversion factor of:  (1.0E-4 * ) added",
    "ion" : "hcn",
    "erev" : "-45.0"
  }, {
    "id" : "axonal_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "0.009986",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "axonal_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "axonal",
    "condDens" : "5.0100003E-4",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCa_LVAstbar_Ca_LVAst",
    "ionChannel" : "Ca_LVAst",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "0.009728",
    "erev" : "calculated_by_Nernst_equation"
  }, {
    "id" : "somatic_gCabar_Ca",
    "ionChannel" : "Ca",
    "ion" : "ca",
    "group" : "somatic",
    "condDens" : "2.7999999E-5",
    "erev" : "calculated_by_Nernst_equation"
  } ],
  "species" : [ {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_axonal",
    "group" : "axonal",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  }, {
    "id" : "ca",
    "ion" : "ca",
    "concentrationModel" : "CaDynamics_E2_NML2__cACint_237_somatic",
    "group" : "somatic",
    "initialConcentration" : "5.0E-5",
    "initialExtConcentration" : "2.0"
  } ]
}
*/

load_file("subiter.hoc")

begintemplate cACint209_L4_BTC_04273604d2_0_0

public init, topol, basic_shape, subsets, geom, memb
public x, y, z, position


//  Some methods for referencing the cells

public toString, netInfo, set_initial_v, set_initial_ion_properties, synlist


// Section: soma_0, id: soma_0, parent: $s.parent
create soma_0
public soma_0
// Section: dend_26, id: dend_26, parent: soma_0
create dend_26
public dend_26
// Section: dend_11, id: dend_11, parent: soma_0
create dend_11
public dend_11
// Section: dend_0, id: dend_0, parent: soma_0
create dend_0
public dend_0
// Section: axon_0, id: axon_0, parent: soma_0
create axon_0
public axon_0
// Section: dend_32, id: dend_32, parent: dend_26
create dend_32
public dend_32
// Section: dend_27, id: dend_27, parent: dend_26
create dend_27
public dend_27
// Section: dend_21, id: dend_21, parent: dend_11
create dend_21
public dend_21
// Section: dend_12, id: dend_12, parent: dend_11
create dend_12
public dend_12
// Section: dend_4, id: dend_4, parent: dend_0
create dend_4
public dend_4
// Section: dend_1, id: dend_1, parent: dend_0
create dend_1
public dend_1
// Section: axon_1, id: axon_1, parent: axon_0
create axon_1
public axon_1
// Section: dend_42, id: dend_42, parent: dend_32
create dend_42
public dend_42
// Section: dend_33, id: dend_33, parent: dend_32
create dend_33
public dend_33
// Section: dend_31, id: dend_31, parent: dend_27
create dend_31
public dend_31
// Section: dend_28, id: dend_28, parent: dend_27
create dend_28
public dend_28
// Section: dend_23, id: dend_23, parent: dend_21
create dend_23
public dend_23
// Section: dend_22, id: dend_22, parent: dend_21
create dend_22
public dend_22
// Section: dend_16, id: dend_16, parent: dend_12
create dend_16
public dend_16
// Section: dend_13, id: dend_13, parent: dend_12
create dend_13
public dend_13
// Section: dend_6, id: dend_6, parent: dend_4
create dend_6
public dend_6
// Section: dend_5, id: dend_5, parent: dend_4
create dend_5
public dend_5
// Section: dend_3, id: dend_3, parent: dend_1
create dend_3
public dend_3
// Section: dend_2, id: dend_2, parent: dend_1
create dend_2
public dend_2
// Section: dend_48, id: dend_48, parent: dend_42
create dend_48
public dend_48
// Section: dend_43, id: dend_43, parent: dend_42
create dend_43
public dend_43
// Section: dend_39, id: dend_39, parent: dend_33
create dend_39
public dend_39
// Section: dend_34, id: dend_34, parent: dend_33
create dend_34
public dend_34
// Section: dend_30, id: dend_30, parent: dend_28
create dend_30
public dend_30
// Section: dend_29, id: dend_29, parent: dend_28
create dend_29
public dend_29
// Section: dend_25, id: dend_25, parent: dend_23
create dend_25
public dend_25
// Section: dend_24, id: dend_24, parent: dend_23
create dend_24
public dend_24
// Section: dend_18, id: dend_18, parent: dend_16
create dend_18
public dend_18
// Section: dend_17, id: dend_17, parent: dend_16
create dend_17
public dend_17
// Section: dend_15, id: dend_15, parent: dend_13
create dend_15
public dend_15
// Section: dend_14, id: dend_14, parent: dend_13
create dend_14
public dend_14
// Section: dend_10, id: dend_10, parent: dend_6
create dend_10
public dend_10
// Section: dend_7, id: dend_7, parent: dend_6
create dend_7
public dend_7
// Section: dend_45, id: dend_45, parent: dend_43
create dend_45
public dend_45
// Section: dend_44, id: dend_44, parent: dend_43
create dend_44
public dend_44
// Section: dend_41, id: dend_41, parent: dend_39
create dend_41
public dend_41
// Section: dend_40, id: dend_40, parent: dend_39
create dend_40
public dend_40
// Section: dend_38, id: dend_38, parent: dend_34
create dend_38
public dend_38
// Section: dend_35, id: dend_35, parent: dend_34
create dend_35
public dend_35
// Section: dend_20, id: dend_20, parent: dend_18
create dend_20
public dend_20
// Section: dend_19, id: dend_19, parent: dend_18
create dend_19
public dend_19
// Section: dend_9, id: dend_9, parent: dend_7
create dend_9
public dend_9
// Section: dend_8, id: dend_8, parent: dend_7
create dend_8
public dend_8
// Section: dend_47, id: dend_47, parent: dend_45
create dend_47
public dend_47
// Section: dend_46, id: dend_46, parent: dend_45
create dend_46
public dend_46
// Section: dend_37, id: dend_37, parent: dend_35
create dend_37
public dend_37
// Section: dend_36, id: dend_36, parent: dend_35
create dend_36
public dend_36

// Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
objref ModelViewParmSubset_1
// Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_2
// Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
objref ModelViewParmSubset_3
// Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_4
// Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_11, dend_0, axon_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, axon_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
objref ModelViewParmSubset_5
// Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
objref OneSecGrp_SectionRef_1
// Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
objref OneSecGrp_SectionRef_8
// Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
objref OneSecGrp_SectionRef_13
// Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
objref OneSecGrp_SectionRef_20
// Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
objref OneSecGrp_SectionRef_21
// Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
objref OneSecGrp_SectionRef_22
// Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
objref OneSecGrp_SectionRef_23
// Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
objref OneSecGrp_SectionRef_25
// Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
objref OneSecGrp_SectionRef_26
// Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
objref OneSecGrp_SectionRef_29
// Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
objref OneSecGrp_SectionRef_30
// Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
objref OneSecGrp_SectionRef_32
// Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
objref OneSecGrp_SectionRef_33
// Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
objref OneSecGrp_SectionRef_34
// Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
objref OneSecGrp_SectionRef_35
// Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
objref OneSecGrp_SectionRef_36
// Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
objref OneSecGrp_SectionRef_37
// Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
objref OneSecGrp_SectionRef_38
// Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
objref OneSecGrp_SectionRef_39
// Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
objref OneSecGrp_SectionRef_40
// Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
objref OneSecGrp_SectionRef_42
// Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
objref OneSecGrp_SectionRef_43
// Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
objref OneSecGrp_SectionRef_44
// Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
objref OneSecGrp_SectionRef_51
// Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
objref OneSecGrp_SectionRef_52
// Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
objref OneSecGrp_SectionRef_2
// Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
objref OneSecGrp_SectionRef_6
// Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
objref OneSecGrp_SectionRef_3
// Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
objref OneSecGrp_SectionRef_7
// Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
objref OneSecGrp_SectionRef_9
// Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
objref OneSecGrp_SectionRef_14
// Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
objref OneSecGrp_SectionRef_4
// Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
objref OneSecGrp_SectionRef_11
// Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
objref OneSecGrp_SectionRef_19
// Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
objref OneSecGrp_SectionRef_10
// Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
objref OneSecGrp_SectionRef_24
// Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
objref OneSecGrp_SectionRef_28
// Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
objref OneSecGrp_SectionRef_27
// Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
objref OneSecGrp_SectionRef_15
// Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
objref OneSecGrp_SectionRef_16
// Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
objref OneSecGrp_SectionRef_41
// Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
objref OneSecGrp_SectionRef_17
// Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
objref OneSecGrp_SectionRef_18
// Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
objref OneSecGrp_SectionRef_31
// Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
objref OneSecGrp_SectionRef_45
// Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
objref OneSecGrp_SectionRef_46
// Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
objref OneSecGrp_SectionRef_49
// Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
objref OneSecGrp_SectionRef_50
// Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
objref OneSecGrp_SectionRef_48
// Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
objref OneSecGrp_SectionRef_47
// Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref basal
// Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
objref apical
// Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
objref axonal
// Group: {name=somatic, groups=[], sections=[soma_0]}
objref somatic
// Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
objref all

objref synlist

proc init() {
    topol()
    geom_nseg()
    subsets()
    subsets_inhomogeneous()
    biophys()
    biophys_inhomogeneous()
    synlist = new List()
    x = y = z = 0

}

proc set_initial_v() {
    // Taken from the initMembPotential value
    forsec all v = -80.0  // units: mV
}


proc set_initial_ion_properties() {
    // From species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        cai = 5.0E-5  // units: mM
        cao = 2.0  // units: mM
    }
}


proc topol() {
    basic_shape()
    connect dend_26(0), soma_0(0.49999977243497945)
    connect dend_11(0), soma_0(0.49999977243497945)
    connect dend_0(0), soma_0(0.49999977243497945)
    connect axon_0(0), soma_0(1.0)
    connect dend_32(0), dend_26(1.0)
    connect dend_27(0), dend_26(1.0)
    connect dend_21(0), dend_11(1.0)
    connect dend_12(0), dend_11(1.0)
    connect dend_4(0), dend_0(1.0)
    connect dend_1(0), dend_0(1.0)
    connect axon_1(0), axon_0(1.0)
    connect dend_42(0), dend_32(1.0)
    connect dend_33(0), dend_32(1.0)
    connect dend_31(0), dend_27(1.0)
    connect dend_28(0), dend_27(1.0)
    connect dend_23(0), dend_21(1.0)
    connect dend_22(0), dend_21(1.0)
    connect dend_16(0), dend_12(1.0)
    connect dend_13(0), dend_12(1.0)
    connect dend_6(0), dend_4(1.0)
    connect dend_5(0), dend_4(1.0)
    connect dend_3(0), dend_1(1.0)
    connect dend_2(0), dend_1(1.0)
    connect dend_48(0), dend_42(1.0)
    connect dend_43(0), dend_42(1.0)
    connect dend_39(0), dend_33(1.0)
    connect dend_34(0), dend_33(1.0)
    connect dend_30(0), dend_28(1.0)
    connect dend_29(0), dend_28(1.0)
    connect dend_25(0), dend_23(1.0)
    connect dend_24(0), dend_23(1.0)
    connect dend_18(0), dend_16(1.0)
    connect dend_17(0), dend_16(1.0)
    connect dend_15(0), dend_13(1.0)
    connect dend_14(0), dend_13(1.0)
    connect dend_10(0), dend_6(1.0)
    connect dend_7(0), dend_6(1.0)
    connect dend_45(0), dend_43(1.0)
    connect dend_44(0), dend_43(1.0)
    connect dend_41(0), dend_39(1.0)
    connect dend_40(0), dend_39(1.0)
    connect dend_38(0), dend_34(1.0)
    connect dend_35(0), dend_34(1.0)
    connect dend_20(0), dend_18(1.0)
    connect dend_19(0), dend_18(1.0)
    connect dend_9(0), dend_7(1.0)
    connect dend_8(0), dend_7(1.0)
    connect dend_47(0), dend_45(1.0)
    connect dend_46(0), dend_45(1.0)
    connect dend_37(0), dend_35(1.0)
    connect dend_36(0), dend_35(1.0)

}


proc basic_shape() {

    // Section: soma_0, id: soma_0, parent: $s.parent (entry count 0/100)
    soma_0 { pt3dclear() }
    soma_0 { pt3dadd( -2.41353, 11.9919, 1.31418, 2.57576 ) }
    soma_0 { pt3dadd( -2.15404, 10.8832, 1.19952, 4.64379 ) }
    soma_0 { pt3dadd( -1.89456, 9.77439, 1.08486, 7.1282 ) }
    soma_0 { pt3dadd( -1.63508, 8.66563, 0.970208, 9.55084 ) }
    soma_0 { pt3dadd( -1.37559, 7.55686, 0.855552, 11.3429 ) }
    soma_0 { pt3dadd( -1.11611, 6.44809, 0.740896, 12.5314 ) }
    soma_0 { pt3dadd( -0.856626, 5.33932, 0.626239, 13.4739 ) }
    soma_0 { pt3dadd( -0.597143, 4.23056, 0.511583, 13.1445 ) }
    soma_0 { pt3dadd( -0.337659, 3.12179, 0.396927, 12.6062 ) }
    soma_0 { pt3dadd( -0.0781762, 2.01302, 0.282271, 12.0679 ) }
    soma_0 { pt3dadd( 0.181307, 0.904256, 0.167615, 11.529 ) }
    soma_0 { pt3dadd( 0.44079, -0.204511, 0.0529586, 10.9839 ) }
    soma_0 { pt3dadd( 0.700273, -1.31328, -0.0616975, 10.4042 ) }
    soma_0 { pt3dadd( 0.959757, -2.42205, -0.176354, 9.22811 ) }
    soma_0 { pt3dadd( 1.21924, -3.53081, -0.29101, 7.93477 ) }
    soma_0 { pt3dadd( 1.47872, -4.63958, -0.405666, 7.09354 ) }
    soma_0 { pt3dadd( 1.73821, -5.74835, -0.520322, 6.0452 ) }
    soma_0 { pt3dadd( 1.99769, -6.85711, -0.634978, 4.95117 ) }
    soma_0 { pt3dadd( 2.25717, -7.96588, -0.749635, 4.10786 ) }
    soma_0 { pt3dadd( 2.51666, -9.07465, -0.864291, 3.50414 ) }
    soma_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 3.28095 ) }
    // Section: dend_26, id: dend_26, parent: soma_0 (entry count 21/100)
    dend_26 { pt3dclear() }
    dend_26 { pt3dadd( 1.75135, -9.71855, 1.8584, 2.77 ) }
    dend_26 { pt3dadd( 2.12967, -14.5561, 1.8584, 3.05 ) }
    // Section: dend_11, id: dend_11, parent: soma_0 (entry count 23/100)
    dend_11 { pt3dclear() }
    dend_11 { pt3dadd( -5.09865, 10.5559, -3.7416, 1.38 ) }
    dend_11 { pt3dadd( -6.36487, 12.6924, -3.97337, 1.38 ) }
    dend_11 { pt3dadd( -8.34746, 16.0375, -4.33625, 1.66 ) }
    dend_11 { pt3dadd( -10.0402, 18.8936, -4.6461, 1.38 ) }
    dend_11 { pt3dadd( -11.3939, 21.1777, -4.89388, 1.11 ) }
    dend_11 { pt3dadd( -12.4631, 22.9816, -5.08957, 1.11 ) }
    dend_11 { pt3dadd( -14.9346, 27.1518, -5.54196, 1.66 ) }
    // Section: dend_0, id: dend_0, parent: soma_0 (entry count 30/100)
    dend_0 { pt3dclear() }
    dend_0 { pt3dadd( 6.01135, 6.6302, 6.4384, 1.38 ) }
    dend_0 { pt3dadd( 6.01645, 11.1641, 7.62566, 1.38 ) }
    dend_0 { pt3dadd( 6.16037, 13.9665, 8.36207, 1.38 ) }
    dend_0 { pt3dadd( 6.58697, 18.8664, 9.80627, 1.38 ) }
    dend_0 { pt3dadd( 7.17008, 24.0925, 11.4198, 1.38 ) }
    dend_0 { pt3dadd( 7.60896, 28.026, 12.6343, 1.38 ) }
    dend_0 { pt3dadd( 8.00058, 31.536, 13.7179, 0.83 ) }
    dend_0 { pt3dadd( 8.25634, 34.9482, 14.8456, 1.38 ) }
    dend_0 { pt3dadd( 8.6309, 38.9974, 16.2426, 1.38 ) }
    dend_0 { pt3dadd( 9.4867, 43.8263, 17.8798, 1.11 ) }
    // Section: axon_0, id: axon_0, parent: soma_0 (entry count 40/100)
    axon_0 { pt3dclear() }
    axon_0 { pt3dadd( 2.77614, -10.1834, -0.978947, 0.64253 ) }
    axon_0 { pt3dadd( 6.19422, -24.7888, -0.978947, 0.64253 ) }
    axon_0 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.64253 ) }
    // Section: dend_32, id: dend_32, parent: dend_26 (entry count 43/100)
    dend_32 { pt3dclear() }
    dend_32 { pt3dadd( 2.12967, -14.5561, 1.8584, 2.22 ) }
    dend_32 { pt3dadd( 4.01119, -18.271, 1.40498, 2.22 ) }
    dend_32 { pt3dadd( 4.98998, -20.2036, 1.1691, 1.66 ) }
    // Section: dend_27, id: dend_27, parent: dend_26 (entry count 46/100)
    dend_27 { pt3dclear() }
    dend_27 { pt3dadd( 2.12967, -14.5561, 1.8584, 0.83 ) }
    dend_27 { pt3dadd( -0.784496, -16.9441, 3.21901, 0.83 ) }
    dend_27 { pt3dadd( -2.77508, -18.5987, 4.43609, 1.11 ) }
    dend_27 { pt3dadd( -5.52143, -20.8814, 6.11526, 0.83 ) }
    dend_27 { pt3dadd( -7.63087, -22.6347, 7.40501, 0.83 ) }
    dend_27 { pt3dadd( -11.2074, -25.6075, 9.5918, 1.38 ) }
    dend_27 { pt3dadd( -14.626, -28.449, 11.6819, 1.38 ) }
    dend_27 { pt3dadd( -17.6142, -30.6767, 13.7797, 0.83 ) }
    // Section: dend_21, id: dend_21, parent: dend_11 (entry count 54/100)
    dend_21 { pt3dclear() }
    dend_21 { pt3dadd( -14.9346, 27.1518, -5.54196, 0.55 ) }
    dend_21 { pt3dadd( -19.0025, 28.0672, -3.9099, 0.55 ) }
    dend_21 { pt3dadd( -20.9322, 28.2567, -2.80671, 0.55 ) }
    dend_21 { pt3dadd( -22.302, 28.3104, -1.91265, 0.55 ) }
    dend_21 { pt3dadd( -24.5527, 28.3023, -0.379368, 1.11 ) }
    dend_21 { pt3dadd( -28.4948, 28.1525, 2.30858, 0.83 ) }
    dend_21 { pt3dadd( -32.4656, 27.8298, 5.0715, 0.83 ) }
    dend_21 { pt3dadd( -36.6195, 27.1577, 8.19421, 0.55 ) }
    dend_21 { pt3dadd( -38.8757, 26.6532, 9.91343, 1.38 ) }
    dend_21 { pt3dadd( -40.5147, 26.1847, 11.1775, 0.28 ) }
    dend_21 { pt3dadd( -42.0084, 25.6582, 12.34, 0.83 ) }
    dend_21 { pt3dadd( -43.8083, 25.022, 13.7888, 0.28 ) }
    dend_21 { pt3dadd( -45.0538, 24.5662, 14.8422, 0.55 ) }
    dend_21 { pt3dadd( -46.6343, 24.0834, 16.0981, 0.55 ) }
    dend_21 { pt3dadd( -49.1442, 23.4103, 18.077, 0.55 ) }
    dend_21 { pt3dadd( -51.3125, 22.8442, 19.7697, 0.55 ) }
    dend_21 { pt3dadd( -55.0023, 21.9906, 22.6966, 0.55 ) }
    dend_21 { pt3dadd( -56.5634, 21.669, 23.8927, 0.55 ) }
    dend_21 { pt3dadd( -59.5606, 21.095, 26.0979, 0.83 ) }
    dend_21 { pt3dadd( -61.6718, 20.7414, 27.5899, 0.83 ) }
    dend_21 { pt3dadd( -63.3608, 20.4817, 28.6944, 0.83 ) }
    dend_21 { pt3dadd( -66.963, 20.003, 30.9734, 0.83 ) }
    dend_21 { pt3dadd( -68.3041, 19.8047, 31.7762, 0.83 ) }
    dend_21 { pt3dadd( -71.5317, 19.286, 33.823, 0.83 ) }
    dend_21 { pt3dadd( -75.9363, 18.4648, 36.6908, 0.83 ) }
    dend_21 { pt3dadd( -77.043, 18.2863, 37.4041, 0.83 ) }
    dend_21 { pt3dadd( -79.4606, 17.9512, 38.905, 0.28 ) }
    dend_21 { pt3dadd( -80.8213, 17.7207, 39.6556, 0.83 ) }
    dend_21 { pt3dadd( -84.0955, 17.1325, 41.3603, 0.28 ) }
    dend_21 { pt3dadd( -86.4068, 16.6961, 42.3973, 0.83 ) }
    dend_21 { pt3dadd( -89.1197, 16.1787, 43.4593, 0.28 ) }
    dend_21 { pt3dadd( -89.7081, 16.0641, 43.6801, 0.55 ) }
    dend_21 { pt3dadd( -93.0864, 15.5059, 44.7872, 0.55 ) }
    dend_21 { pt3dadd( -95.5244, 15.1821, 45.5024, 0.28 ) }
    dend_21 { pt3dadd( -98.3216, 14.8222, 46.0408, 0.83 ) }
    // Section: dend_12, id: dend_12, parent: dend_11 (entry count 89/100)
    dend_12 { pt3dclear() }
    dend_12 { pt3dadd( -14.9346, 27.1518, -5.54196, 1.11 ) }
    dend_12 { pt3dadd( -15.6265, 30.3998, -7.33147, 1.11 ) }
    dend_12 { pt3dadd( -16.0482, 32.1613, -8.15758, 1.11 ) }
    dend_12 { pt3dadd( -16.5569, 34.2858, -9.15392, 1.11 ) }
    dend_12 { pt3dadd( -16.9846, 36.0717, -9.99148, 1.11 ) }
    dend_12 { pt3dadd( -17.4881, 38.1747, -10.9778, 0.83 ) }
    dend_12 { pt3dadd( -18.0038, 40.3284, -11.9878, 0.83 ) }
    dend_12 { pt3dadd( -18.405, 42.011, -12.5528, 1.11 ) }
    // Section: dend_4, id: dend_4, parent: dend_0 (entry count 97/100)
    dend_4 { pt3dclear() }
    dend_4 { pt3dadd( 9.4867, 43.8263, 17.8798, 0.83 ) }
    dend_4 { pt3dadd( 8.29106, 47.9285, 19.7853, 0.83 ) }
    dend_4 { pt3dadd( 7.39679, 50.9966, 21.2106, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_0()
}

proc basic_shape_0() {
    dend_4 { pt3dadd( 6.70413, 53.3731, 22.3145, 0.83 ) }
    dend_4 { pt3dadd( 5.62322, 57.0816, 24.0372, 0.83 ) }
    // Section: dend_1, id: dend_1, parent: dend_0 (entry count 2/100)
    dend_1 { pt3dclear() }
    dend_1 { pt3dadd( 9.4867, 43.8263, 17.8798, 0.83 ) }
    dend_1 { pt3dadd( 12.5163, 46.8316, 17.5938, 0.83 ) }
    // Section: axon_1, id: axon_1, parent: axon_0 (entry count 4/100)
    axon_1 { pt3dclear() }
    axon_1 { pt3dadd( 9.61231, -39.3941, -0.978947, 0.64253 ) }
    axon_1 { pt3dadd( 13.0304, -53.9995, -0.978947, 0.64253 ) }
    axon_1 { pt3dadd( 16.4485, -68.6049, -0.978947, 0.64253 ) }
    // Section: dend_42, id: dend_42, parent: dend_32 (entry count 7/100)
    dend_42 { pt3dclear() }
    dend_42 { pt3dadd( 4.98998, -20.2036, 1.1691, 0.83 ) }
    dend_42 { pt3dadd( 5.45159, -21.94, -1.67961, 0.83 ) }
    dend_42 { pt3dadd( 5.7045, -22.7417, -3.37933, 0.83 ) }
    dend_42 { pt3dadd( 6.00318, -23.5949, -5.51979, 0.83 ) }
    dend_42 { pt3dadd( 7.1283, -26.9172, -14.3299, 0.83 ) }
    dend_42 { pt3dadd( 7.75553, -28.7447, -19.2141, 0.83 ) }
    dend_42 { pt3dadd( 8.69554, -31.4834, -26.534, 0.55 ) }
    dend_42 { pt3dadd( 8.99298, -32.6998, -30.1141, 0.83 ) }
    dend_42 { pt3dadd( 9.25005, -33.9828, -34.2691, 0.83 ) }
    dend_42 { pt3dadd( 9.47991, -35.0613, -38.2126, 1.11 ) }
    dend_42 { pt3dadd( 9.58166, -35.2277, -38.8936, 1.11 ) }
    // Section: dend_33, id: dend_33, parent: dend_32 (entry count 18/100)
    dend_33 { pt3dclear() }
    dend_33 { pt3dadd( 4.98998, -20.2036, 1.1691, 1.66 ) }
    dend_33 { pt3dadd( 5.83492, -22.5993, 1.12925, 1.66 ) }
    dend_33 { pt3dadd( 7.05093, -25.4963, 1.00126, 1.11 ) }
    dend_33 { pt3dadd( 7.97189, -27.4206, 0.882379, 1.11 ) }
    dend_33 { pt3dadd( 9.78205, -30.4076, 0.877495, 1.11 ) }
    dend_33 { pt3dadd( 11.3275, -32.9577, 0.873326, 1.11 ) }
    dend_33 { pt3dadd( 12.4084, -34.7414, 0.870409, 1.38 ) }
    dend_33 { pt3dadd( 13.6973, -36.6497, 0.849905, 1.11 ) }
    dend_33 { pt3dadd( 14.5237, -37.711, 0.859446, 1.11 ) }
    dend_33 { pt3dadd( 18.1162, -41.388, 0.996291, 1.66 ) }
    // Section: dend_31, id: dend_31, parent: dend_27 (entry count 28/100)
    dend_31 { pt3dclear() }
    dend_31 { pt3dadd( -17.6142, -30.6767, 13.7797, 0.28 ) }
    dend_31 { pt3dadd( -18.5823, -32.4036, 17.7197, 0.28 ) }
    dend_31 { pt3dadd( -19.1049, -33.1057, 19.4566, 1.11 ) }
    dend_31 { pt3dadd( -20.958, -35.3666, 25.5297, 0.55 ) }
    dend_31 { pt3dadd( -21.4895, -36.0678, 27.3758, 0.83 ) }
    dend_31 { pt3dadd( -22.6661, -37.62, 31.4624, 0.83 ) }
    dend_31 { pt3dadd( -24.0221, -39.4089, 36.1725, 0.55 ) }
    dend_31 { pt3dadd( -24.848, -40.4008, 38.9378, 1.11 ) }
    dend_31 { pt3dadd( -26.3058, -42.0724, 43.9312, 0.55 ) }
    dend_31 { pt3dadd( -26.8717, -42.6821, 45.6667, 1.11 ) }
    // Section: dend_28, id: dend_28, parent: dend_27 (entry count 38/100)
    dend_28 { pt3dclear() }
    dend_28 { pt3dadd( -17.6142, -30.6767, 13.7797, 0.83 ) }
    dend_28 { pt3dadd( -21.9169, -31.0476, 15.4328, 0.83 ) }
    dend_28 { pt3dadd( -25.1455, -31.305, 16.6238, 1.11 ) }
    dend_28 { pt3dadd( -28.3447, -31.469, 17.713, 0.83 ) }
    dend_28 { pt3dadd( -31.9483, -31.5914, 18.8306, 0.83 ) }
    dend_28 { pt3dadd( -36.3923, -31.7424, 20.2089, 0.83 ) }
    dend_28 { pt3dadd( -40.6345, -31.8865, 21.5245, 0.83 ) }
    dend_28 { pt3dadd( -45.2918, -32.0471, 22.8969, 1.11 ) }
    dend_28 { pt3dadd( -50.2067, -32.1575, 24.1746, 1.11 ) }
    dend_28 { pt3dadd( -54.5711, -32.2075, 25.207, 1.11 ) }
    // Section: dend_23, id: dend_23, parent: dend_21 (entry count 48/100)
    dend_23 { pt3dclear() }
    dend_23 { pt3dadd( -98.3216, 14.8222, 46.0408, 0.28 ) }
    dend_23 { pt3dadd( -98.1083, 13.2075, 46.8163, 0.28 ) }
    dend_23 { pt3dadd( -98.0325, 12.6343, 47.0916, 0.83 ) }
    dend_23 { pt3dadd( -97.6502, 9.74061, 48.4815, 0.28 ) }
    // Section: dend_22, id: dend_22, parent: dend_21 (entry count 52/100)
    dend_22 { pt3dclear() }
    dend_22 { pt3dadd( -98.3216, 14.8222, 46.0408, 0.28 ) }
    dend_22 { pt3dadd( -101.578, 15.3006, 47.0362, 0.28 ) }
    dend_22 { pt3dadd( -102.734, 15.3908, 47.0196, 0.55 ) }
    dend_22 { pt3dadd( -105.303, 15.4414, 46.6275, 0.28 ) }
    dend_22 { pt3dadd( -107.604, 15.4069, 46.1547, 0.83 ) }
    dend_22 { pt3dadd( -110.346, 15.3658, 45.5915, 0.28 ) }
    dend_22 { pt3dadd( -112.976, 15.3264, 45.0512, 0.28 ) }
    dend_22 { pt3dadd( -117.466, 15.0252, 43.4219, 0.28 ) }
    dend_22 { pt3dadd( -118.383, 14.9381, 42.9866, 0.83 ) }
    dend_22 { pt3dadd( -119.801, 14.7701, 42.0767, 0.83 ) }
    // Section: dend_16, id: dend_16, parent: dend_12 (entry count 62/100)
    dend_16 { pt3dclear() }
    dend_16 { pt3dadd( -18.405, 42.011, -12.5528, 0.55 ) }
    dend_16 { pt3dadd( -19.0144, 42.223, -13.2013, 0.55 ) }
    dend_16 { pt3dadd( -20.0887, 42.5967, -14.3446, 0.55 ) }
    dend_16 { pt3dadd( -21.1259, 42.9575, -15.4485, 0.83 ) }
    dend_16 { pt3dadd( -22.9972, 43.6084, -17.44, 0.55 ) }
    dend_16 { pt3dadd( -24.1701, 44.0163, -18.6883, 1.11 ) }
    // Section: dend_13, id: dend_13, parent: dend_12 (entry count 68/100)
    dend_13 { pt3dclear() }
    dend_13 { pt3dadd( -18.405, 42.011, -12.5528, 0.55 ) }
    dend_13 { pt3dadd( -16.8618, 46.6017, -13.1517, 0.55 ) }
    dend_13 { pt3dadd( -16.2082, 48.874, -13.3154, 0.55 ) }
    dend_13 { pt3dadd( -15.7257, 50.8194, -13.2918, 0.83 ) }
    dend_13 { pt3dadd( -15.126, 53.3773, -13.1401, 0.55 ) }
    dend_13 { pt3dadd( -14.7543, 55.0205, -13.0308, 0.83 ) }
    dend_13 { pt3dadd( -14.1965, 57.4675, -12.8336, 0.55 ) }
    dend_13 { pt3dadd( -13.817, 59.3258, -12.5787, 0.83 ) }
    dend_13 { pt3dadd( -13.18, 62.0006, -12.2685, 0.28 ) }
    dend_13 { pt3dadd( -12.7611, 63.4988, -12.1328, 0.83 ) }
    dend_13 { pt3dadd( -11.9737, 65.9694, -11.956, 0.55 ) }
    dend_13 { pt3dadd( -11.3192, 67.9094, -11.8487, 0.83 ) }
    dend_13 { pt3dadd( -10.2489, 70.8863, -11.7474, 0.55 ) }
    dend_13 { pt3dadd( -8.95254, 74.2226, -11.7229, 0.83 ) }
    dend_13 { pt3dadd( -7.68382, 77.3206, -11.8099, 0.83 ) }
    dend_13 { pt3dadd( -5.96561, 81.4444, -11.9155, 0.55 ) }
    // Section: dend_6, id: dend_6, parent: dend_4 (entry count 84/100)
    dend_6 { pt3dclear() }
    dend_6 { pt3dadd( 5.62322, 57.0816, 24.0372, 0.83 ) }
    dend_6 { pt3dadd( 6.84001, 61.6104, 25.1759, 0.83 ) }
    dend_6 { pt3dadd( 7.94538, 66.5933, 26.4131, 0.83 ) }
    dend_6 { pt3dadd( 8.52314, 69.6749, 27.2881, 0.83 ) }
    dend_6 { pt3dadd( 9.23639, 73.9538, 28.6088, 0.83 ) }
    dend_6 { pt3dadd( 9.98527, 78.7712, 30.1192, 0.83 ) }
    dend_6 { pt3dadd( 10.7178, 84.1092, 31.7974, 0.83 ) }
    dend_6 { pt3dadd( 11.3004, 89.1907, 33.4749, 0.83 ) }
    dend_6 { pt3dadd( 11.8103, 94.2319, 35.2529, 0.83 ) }
    dend_6 { pt3dadd( 12.0362, 97.2647, 36.289, 0.55 ) }
    dend_6 { pt3dadd( 12.1945, 100.573, 37.2921, 0.55 ) }
    dend_6 { pt3dadd( 12.3274, 103.349, 37.9492, 0.83 ) }
    dend_6 { pt3dadd( 12.4747, 105.836, 38.3392, 0.83 ) }
    dend_6 { pt3dadd( 12.6651, 108.132, 38.5668, 0.55 ) }
    dend_6 { pt3dadd( 12.9341, 111.041, 38.591, 0.83 ) }
    dend_6 { pt3dadd( 13.1619, 113.403, 38.5414, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_1()
}

proc basic_shape_1() {
    dend_6 { pt3dadd( 13.3388, 115.432, 38.4852, 0.83 ) }
    dend_6 { pt3dadd( 13.5644, 118.58, 38.411, 0.55 ) }
    dend_6 { pt3dadd( 13.7158, 121.745, 38.2995, 0.83 ) }
    dend_6 { pt3dadd( 13.7775, 124.627, 37.9478, 0.55 ) }
    dend_6 { pt3dadd( 13.7626, 126.194, 37.6852, 0.55 ) }
    dend_6 { pt3dadd( 13.6774, 128.62, 37.2571, 0.83 ) }
    dend_6 { pt3dadd( 13.4724, 132.09, 36.6148, 0.83 ) }
    dend_6 { pt3dadd( 13.2778, 134.964, 36.0875, 0.55 ) }
    dend_6 { pt3dadd( 12.7072, 141.471, 34.8622, 0.83 ) }
    dend_6 { pt3dadd( 12.3376, 145.245, 34.154, 0.83 ) }
    dend_6 { pt3dadd( 11.9052, 149.849, 33.3572, 0.83 ) }
    dend_6 { pt3dadd( 11.6705, 152.645, 32.993, 0.83 ) }
    dend_6 { pt3dadd( 11.4546, 154.883, 32.8383, 0.83 ) }
    dend_6 { pt3dadd( 11.2194, 157.086, 32.8591, 0.55 ) }
    dend_6 { pt3dadd( 10.9187, 159.592, 33.0565, 0.55 ) }
    dend_6 { pt3dadd( 10.477, 162.446, 33.2721, 0.83 ) }
    dend_6 { pt3dadd( 9.48006, 167.741, 33.6498, 0.83 ) }
    dend_6 { pt3dadd( 8.67283, 171.928, 33.9149, 1.11 ) }
    dend_6 { pt3dadd( 8.02236, 175.109, 34.0924, 0.55 ) }
    dend_6 { pt3dadd( 7.22245, 178.594, 34.289, 1.11 ) }
    dend_6 { pt3dadd( 5.92233, 183.48, 34.5938, 0.83 ) }
    dend_6 { pt3dadd( 4.75559, 187.53, 34.7932, 0.83 ) }
    dend_6 { pt3dadd( 3.92678, 190.225, 34.8327, 0.83 ) }
    dend_6 { pt3dadd( 3.14047, 192.917, 34.7818, 0.55 ) }
    dend_6 { pt3dadd( 2.09548, 196.704, 34.623, 0.55 ) }
    dend_6 { pt3dadd( 1.87459, 197.599, 34.5632, 0.55 ) }
    dend_6 { pt3dadd( 1.1809, 200.929, 34.3568, 0.55 ) }
    dend_6 { pt3dadd( 0.733335, 203.365, 34.136, 0.28 ) }
    dend_6 { pt3dadd( 0.125758, 207.286, 33.6061, 0.55 ) }
    dend_6 { pt3dadd( -0.394239, 211.769, 32.8177, 0.55 ) }
    dend_6 { pt3dadd( -0.615325, 214.302, 32.3037, 0.55 ) }
    dend_6 { pt3dadd( -0.963198, 218.721, 31.3886, 0.83 ) }
    dend_6 { pt3dadd( -1.28704, 223.396, 30.4026, 0.83 ) }
    dend_6 { pt3dadd( -1.5548, 226.717, 29.5636, 0.83 ) }
    dend_6 { pt3dadd( -1.76113, 228.636, 28.9846, 0.55 ) }
    dend_6 { pt3dadd( -1.96105, 230.34, 28.4236, 0.83 ) }
    dend_6 { pt3dadd( -2.38358, 233.07, 27.5793, 0.83 ) }
    dend_6 { pt3dadd( -3.07991, 236.518, 26.5889, 0.83 ) }
    dend_6 { pt3dadd( -4.05461, 240.847, 25.6639, 0.83 ) }
    dend_6 { pt3dadd( -4.71651, 243.577, 25.1753, 0.83 ) }
    dend_6 { pt3dadd( -5.3828, 246.107, 24.6611, 0.83 ) }
    dend_6 { pt3dadd( -6.36641, 249.684, 23.8474, 0.55 ) }
    dend_6 { pt3dadd( -7.48012, 253.413, 22.984, 0.55 ) }
    dend_6 { pt3dadd( -8.28309, 256.126, 22.3998, 0.55 ) }
    dend_6 { pt3dadd( -9.13153, 259.142, 21.7688, 0.83 ) }
    dend_6 { pt3dadd( -10.3752, 263.743, 20.7324, 1.11 ) }
    dend_6 { pt3dadd( -11.517, 268.565, 19.7339, 0.55 ) }
    dend_6 { pt3dadd( -12.0123, 271.382, 19.2669, 0.55 ) }
    dend_6 { pt3dadd( -12.468, 274.66, 18.8448, 0.55 ) }
    dend_6 { pt3dadd( -12.7729, 277.923, 18.5161, 0.83 ) }
    dend_6 { pt3dadd( -12.891, 281.872, 18.2299, 0.83 ) }
    dend_6 { pt3dadd( -12.7614, 287.324, 17.9447, 0.83 ) }
    dend_6 { pt3dadd( -12.28, 293.858, 17.4946, 0.83 ) }
    dend_6 { pt3dadd( -11.8695, 297.657, 17.1272, 0.55 ) }
    dend_6 { pt3dadd( -11.3873, 301.421, 16.6653, 0.55 ) }
    dend_6 { pt3dadd( -10.6877, 306.142, 15.9933, 0.83 ) }
    dend_6 { pt3dadd( -10.3996, 308.353, 15.6186, 0.83 ) }
    dend_6 { pt3dadd( -10.137, 311.845, 14.9844, 0.83 ) }
    dend_6 { pt3dadd( -10.1125, 315.961, 14.3333, 0.83 ) }
    dend_6 { pt3dadd( -10.3694, 319.356, 13.9913, 0.28 ) }
    dend_6 { pt3dadd( -10.646, 321.11, 13.8995, 0.83 ) }
    dend_6 { pt3dadd( -11.7186, 326.105, 13.7895, 0.83 ) }
    dend_6 { pt3dadd( -12.7368, 330.075, 13.8323, 0.83 ) }
    dend_6 { pt3dadd( -13.9471, 333.921, 14.0605, 0.83 ) }
    dend_6 { pt3dadd( -15.3541, 337.865, 14.4668, 0.83 ) }
    dend_6 { pt3dadd( -16.3712, 340.481, 14.8133, 0.83 ) }
    // Section: dend_5, id: dend_5, parent: dend_4 (entry count 66/100)
    dend_5 { pt3dclear() }
    dend_5 { pt3dadd( 5.62322, 57.0816, 24.0372, 0.83 ) }
    dend_5 { pt3dadd( 4.42145, 58.206, 25.318, 0.83 ) }
    dend_5 { pt3dadd( 3.56122, 59.2044, 26.351, 0.55 ) }
    dend_5 { pt3dadd( 2.1766, 60.824, 28.0117, 0.55 ) }
    dend_5 { pt3dadd( 0.880769, 62.3402, 29.5595, 0.55 ) }
    dend_5 { pt3dadd( -0.586283, 63.8917, 31.2431, 0.55 ) }
    dend_5 { pt3dadd( -1.68878, 64.9087, 32.4795, 0.55 ) }
    dend_5 { pt3dadd( -3.60518, 66.3591, 34.6222, 0.55 ) }
    dend_5 { pt3dadd( -4.99678, 67.1723, 36.0813, 0.55 ) }
    dend_5 { pt3dadd( -6.95365, 67.9275, 37.871, 0.55 ) }
    dend_5 { pt3dadd( -10.1229, 68.4015, 40.3459, 0.55 ) }
    dend_5 { pt3dadd( -12.0284, 68.344, 41.6016, 0.55 ) }
    dend_5 { pt3dadd( -14.1224, 67.8632, 42.7968, 0.55 ) }
    dend_5 { pt3dadd( -15.3805, 67.3419, 43.3758, 0.55 ) }
    dend_5 { pt3dadd( -16.3987, 66.7413, 43.7518, 0.55 ) }
    dend_5 { pt3dadd( -18.2953, 65.284, 44.2596, 0.28 ) }
    dend_5 { pt3dadd( -19.22, 64.4176, 44.4404, 0.83 ) }
    dend_5 { pt3dadd( -20.4618, 63.1418, 44.6636, 0.55 ) }
    dend_5 { pt3dadd( -21.257, 62.1879, 44.7463, 0.55 ) }
    dend_5 { pt3dadd( -22.2373, 60.7039, 44.7509, 0.55 ) }
    dend_5 { pt3dadd( -23.1199, 59.1281, 44.6713, 0.83 ) }
    dend_5 { pt3dadd( -23.8493, 57.7179, 44.5427, 0.55 ) }
    dend_5 { pt3dadd( -24.4594, 56.5189, 44.3774, 0.55 ) }
    dend_5 { pt3dadd( -25.8658, 53.7031, 43.9003, 0.55 ) }
    dend_5 { pt3dadd( -27.2811, 51.0295, 43.396, 0.83 ) }
    dend_5 { pt3dadd( -28.4128, 49.0598, 42.9629, 0.83 ) }
    dend_5 { pt3dadd( -29.6383, 47.0926, 42.3592, 0.83 ) }
    dend_5 { pt3dadd( -31.1301, 44.9135, 41.6164, 0.55 ) }
    dend_5 { pt3dadd( -31.8587, 43.9287, 41.3073, 0.28 ) }
    dend_5 { pt3dadd( -32.8008, 42.7704, 40.998, 0.55 ) }
    dend_5 { pt3dadd( -33.9418, 41.5357, 40.6655, 0.28 ) }
    dend_5 { pt3dadd( -36.4154, 39.0282, 40.0844, 0.55 ) }
    dend_5 { pt3dadd( -37.9638, 37.5478, 39.8019, 0.55 ) }
    dend_5 { pt3dadd( -39.479, 36.1408, 39.6286, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_2()
}

proc basic_shape_2() {
    dend_5 { pt3dadd( -40.848, 34.8802, 39.5342, 0.55 ) }
    dend_5 { pt3dadd( -43.1942, 32.606, 39.4419, 0.55 ) }
    dend_5 { pt3dadd( -44.0026, 31.7808, 39.4511, 0.83 ) }
    dend_5 { pt3dadd( -45.4146, 30.227, 39.5247, 0.55 ) }
    dend_5 { pt3dadd( -47.3265, 27.888, 39.5304, 0.55 ) }
    dend_5 { pt3dadd( -48.572, 26.0379, 39.4683, 0.83 ) }
    dend_5 { pt3dadd( -49.7693, 23.7574, 39.3817, 0.55 ) }
    dend_5 { pt3dadd( -50.459, 21.9579, 39.2935, 0.55 ) }
    dend_5 { pt3dadd( -51.0089, 20.1236, 39.1815, 0.55 ) }
    dend_5 { pt3dadd( -51.219, 19.1364, 39.1103, 0.83 ) }
    dend_5 { pt3dadd( -51.6085, 16.5725, 38.882, 0.55 ) }
    dend_5 { pt3dadd( -51.9368, 13.5533, 38.5887, 0.28 ) }
    dend_5 { pt3dadd( -52.3361, 9.17501, 38.1636, 0.28 ) }
    dend_5 { pt3dadd( -52.5028, 7.33294, 37.9231, 0.83 ) }
    dend_5 { pt3dadd( -52.8191, 3.7149, 37.4047, 0.28 ) }
    dend_5 { pt3dadd( -52.9353, 2.44663, 37.2316, 0.83 ) }
    dend_5 { pt3dadd( -53.0138, 1.65621, 37.1318, 0.28 ) }
    dend_5 { pt3dadd( -53.1017, 0.41097, 36.9515, 0.83 ) }
    dend_5 { pt3dadd( -53.2878, -2.071, 36.5926, 0.28 ) }
    dend_5 { pt3dadd( -53.3991, -3.01911, 36.4832, 0.55 ) }
    dend_5 { pt3dadd( -53.7694, -5.15081, 36.2956, 0.28 ) }
    dend_5 { pt3dadd( -54.016, -6.38048, 36.1986, 0.83 ) }
    // Section: dend_3, id: dend_3, parent: dend_1 (entry count 22/100)
    dend_3 { pt3dclear() }
    dend_3 { pt3dadd( 12.5163, 46.8316, 17.5938, 0.83 ) }
    dend_3 { pt3dadd( 13.1536, 48.3966, 15.204, 0.83 ) }
    dend_3 { pt3dadd( 13.9559, 50.3908, 12.517, 0.83 ) }
    dend_3 { pt3dadd( 14.4843, 51.6674, 10.9856, 0.83 ) }
    dend_3 { pt3dadd( 17.9459, 59.3767, 2.72243, 0.55 ) }
    dend_3 { pt3dadd( 19.0057, 61.5099, 0.760675, 0.55 ) }
    dend_3 { pt3dadd( 19.6373, 62.6681, -0.143598, 0.55 ) }
    dend_3 { pt3dadd( 20.5163, 64.1515, -1.15309, 0.55 ) }
    dend_3 { pt3dadd( 21.4618, 65.6329, -1.85233, 1.11 ) }
    dend_3 { pt3dadd( 22.619, 67.3888, -2.20793, 0.55 ) }
    dend_3 { pt3dadd( 24.6727, 70.3761, -2.0653, 0.55 ) }
    dend_3 { pt3dadd( 26.4257, 73.0671, -1.83629, 0.55 ) }
    dend_3 { pt3dadd( 27.5524, 74.8197, -1.62541, 0.55 ) }
    dend_3 { pt3dadd( 28.9277, 77.0305, -1.18174, 0.83 ) }
    dend_3 { pt3dadd( 30.4662, 79.7256, -0.489101, 0.55 ) }
    dend_3 { pt3dadd( 31.5354, 81.8807, 0.133087, 1.11 ) }
    dend_3 { pt3dadd( 32.5623, 84.129, 0.863712, 0.55 ) }
    dend_3 { pt3dadd( 33.5316, 86.34, 1.61672, 0.83 ) }
    dend_3 { pt3dadd( 35.158, 90.1904, 2.88714, 0.55 ) }
    dend_3 { pt3dadd( 35.9988, 92.2114, 3.51441, 0.55 ) }
    dend_3 { pt3dadd( 37.1211, 95.0103, 4.3027, 0.55 ) }
    dend_3 { pt3dadd( 38.0196, 97.2092, 4.78574, 0.55 ) }
    dend_3 { pt3dadd( 38.5684, 98.5755, 5.01914, 0.28 ) }
    dend_3 { pt3dadd( 39.6735, 101.291, 5.34365, 0.55 ) }
    dend_3 { pt3dadd( 40.5045, 103.336, 5.47047, 0.28 ) }
    dend_3 { pt3dadd( 41.2929, 105.193, 5.54547, 0.55 ) }
    dend_3 { pt3dadd( 42.7989, 108.684, 5.62944, 0.55 ) }
    dend_3 { pt3dadd( 43.604, 110.654, 5.65445, 0.55 ) }
    dend_3 { pt3dadd( 44.7225, 113.392, 5.65178, 0.28 ) }
    dend_3 { pt3dadd( 45.7486, 116.215, 4.88411, 0.83 ) }
    dend_3 { pt3dadd( 46.5942, 118.681, 3.80741, 0.28 ) }
    dend_3 { pt3dadd( 46.7854, 119.221, 3.48862, 0.55 ) }
    dend_3 { pt3dadd( 47.2427, 120.422, 2.49988, 0.28 ) }
    dend_3 { pt3dadd( 47.5382, 121.147, 1.77813, 0.83 ) }
    dend_3 { pt3dadd( 51.256, 129.748, -7.85192, 0.55 ) }
    dend_3 { pt3dadd( 52.7769, 132.912, -11.5434, 0.55 ) }
    dend_3 { pt3dadd( 53.2624, 133.87, -12.6293, 0.83 ) }
    dend_3 { pt3dadd( 54.5036, 136.121, -14.7758, 0.55 ) }
    dend_3 { pt3dadd( 55.1651, 137.233, -15.5693, 0.55 ) }
    dend_3 { pt3dadd( 55.9515, 138.584, -15.8533, 0.83 ) }
    dend_3 { pt3dadd( 56.8873, 140.306, -15.3494, 0.28 ) }
    dend_3 { pt3dadd( 57.2691, 141.243, -15.1899, 0.55 ) }
    dend_3 { pt3dadd( 58.1266, 143.898, -14.5345, 0.28 ) }
    dend_3 { pt3dadd( 58.5946, 145.648, -13.87, 0.55 ) }
    dend_3 { pt3dadd( 58.9787, 147.164, -13.3119, 0.28 ) }
    dend_3 { pt3dadd( 59.2063, 148.68, -12.9134, 0.55 ) }
    // Section: dend_2, id: dend_2, parent: dend_1 (entry count 68/100)
    dend_2 { pt3dclear() }
    dend_2 { pt3dadd( 12.5163, 46.8316, 17.5938, 0.55 ) }
    dend_2 { pt3dadd( 13.7795, 46.1934, 18.7921, 0.55 ) }
    dend_2 { pt3dadd( 15.6749, 45.2357, 20.5903, 0.28 ) }
    dend_2 { pt3dadd( 16.6694, 44.7332, 21.5337, 0.55 ) }
    dend_2 { pt3dadd( 18.4962, 43.8102, 23.2667, 0.55 ) }
    dend_2 { pt3dadd( 20.8846, 42.6034, 25.5325, 0.55 ) }
    dend_2 { pt3dadd( 22.1905, 41.9436, 26.7714, 0.28 ) }
    // Section: dend_48, id: dend_48, parent: dend_42 (entry count 75/100)
    dend_48 { pt3dclear() }
    dend_48 { pt3dadd( 9.58166, -35.2277, -38.8936, 0.55 ) }
    dend_48 { pt3dadd( 4.66402, -33.425, -39.9926, 0.55 ) }
    dend_48 { pt3dadd( 3.1489, -32.9895, -40.7345, 0.83 ) }
    dend_48 { pt3dadd( -0.370904, -32.0504, -42.6829, 0.55 ) }
    dend_48 { pt3dadd( -1.81368, -31.6987, -43.4643, 0.55 ) }
    dend_48 { pt3dadd( -8.36077, -30.7867, -47.8446, 0.28 ) }
    dend_48 { pt3dadd( -9.70827, -30.6861, -48.7879, 0.83 ) }
    dend_48 { pt3dadd( -15.1141, -30.8212, -53.2263, 0.55 ) }
    dend_48 { pt3dadd( -15.6885, -30.8749, -53.7196, 0.55 ) }
    dend_48 { pt3dadd( -17.2143, -31.1174, -55.0786, 0.83 ) }
    dend_48 { pt3dadd( -23.9563, -32.4221, -60.9804, 0.55 ) }
    dend_48 { pt3dadd( -25.2503, -32.7163, -62.0743, 0.55 ) }
    dend_48 { pt3dadd( -26.7074, -33.0616, -63.34, 0.83 ) }
    dend_48 { pt3dadd( -29.9101, -33.7668, -66.3028, 0.55 ) }
    dend_48 { pt3dadd( -30.5861, -33.8656, -66.966, 0.55 ) }
    dend_48 { pt3dadd( -31.8347, -33.9396, -68.3022, 0.55 ) }
    dend_48 { pt3dadd( -36.8934, -33.7212, -73.8603, 0.28 ) }
    dend_48 { pt3dadd( -38.2631, -33.6035, -75.4584, 0.83 ) }
    dend_48 { pt3dadd( -42.8816, -32.9587, -80.9511, 0.55 ) }
    dend_48 { pt3dadd( -44.0659, -32.7014, -82.3889, 0.83 ) }
    dend_48 { pt3dadd( -50.088, -30.8866, -89.6872, 0.55 ) }
    dend_48 { pt3dadd( -51.7557, -30.1735, -91.8109, 0.28 ) }
    dend_48 { pt3dadd( -52.7212, -29.6435, -93.0798, 0.83 ) }
    dend_48 { pt3dadd( -54.3346, -28.5753, -95.3005, 0.55 ) }
    dend_48 { pt3dadd( -55.4512, -27.6299, -96.8874, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_3()
}

proc basic_shape_3() {
    dend_48 { pt3dadd( -57.7691, -25.206, -100.527, 0.55 ) }
    dend_48 { pt3dadd( -60.5033, -21.2564, -105.374, 0.28 ) }
    dend_48 { pt3dadd( -60.8783, -20.644, -106.108, 0.55 ) }
    dend_48 { pt3dadd( -61.8018, -18.999, -108.045, 0.28 ) }
    dend_48 { pt3dadd( -62.156, -18.3282, -108.834, 0.55 ) }
    dend_48 { pt3dadd( -63.3044, -16.0412, -111.462, 0.28 ) }
    dend_48 { pt3dadd( -63.6685, -15.225, -112.361, 0.55 ) }
    dend_48 { pt3dadd( -64.8264, -12.6671, -115.146, 0.28 ) }
    dend_48 { pt3dadd( -65.2843, -11.7335, -116.228, 0.55 ) }
    dend_48 { pt3dadd( -66.3829, -9.68749, -118.607, 0.28 ) }
    dend_48 { pt3dadd( -66.6587, -9.23287, -119.137, 0.55 ) }
    dend_48 { pt3dadd( -67.7721, -7.3984, -121.116, 0.28 ) }
    dend_48 { pt3dadd( -68.1614, -6.76241, -121.79, 0.55 ) }
    dend_48 { pt3dadd( -69.4288, -4.78774, -123.766, 0.28 ) }
    dend_48 { pt3dadd( -70.1779, -3.84039, -124.845, 0.55 ) }
    dend_48 { pt3dadd( -72.5461, -1.11615, -127.941, 0.28 ) }
    dend_48 { pt3dadd( -73.5947, -0.0264677, -129.221, 0.55 ) }
    dend_48 { pt3dadd( -76.7664, 2.86788, -133.134, 0.28 ) }
    dend_48 { pt3dadd( -77.7639, 3.72494, -134.416, 0.55 ) }
    dend_48 { pt3dadd( -81.1232, 6.38985, -139.124, 0.28 ) }
    dend_48 { pt3dadd( -82.3081, 7.24714, -140.831, 0.28 ) }
    dend_48 { pt3dadd( -83.7449, 8.2229, -142.931, 0.55 ) }
    dend_48 { pt3dadd( -86.3188, 9.88661, -146.524, 0.28 ) }
    dend_48 { pt3dadd( -86.7785, 10.209, -147.142, 0.55 ) }
    dend_48 { pt3dadd( -88.841, 11.541, -150.022, 0.28 ) }
    dend_48 { pt3dadd( -89.8362, 12.179, -151.387, 0.83 ) }
    dend_48 { pt3dadd( -91.9294, 13.4637, -154.127, 0.55 ) }
    dend_48 { pt3dadd( -93.2762, 14.2999, -155.911, 0.55 ) }
    dend_48 { pt3dadd( -95.5952, 15.8337, -158.991, 0.55 ) }
    dend_48 { pt3dadd( -101.326, 19.6133, -167.05, 0.83 ) }
    dend_48 { pt3dadd( -103.29, 20.9038, -169.99, 0.28 ) }
    dend_48 { pt3dadd( -104.313, 21.5789, -171.643, 0.55 ) }
    dend_48 { pt3dadd( -108.056, 24.0349, -178.296, 0.55 ) }
    dend_48 { pt3dadd( -108.966, 24.6914, -180.123, 0.55 ) }
    dend_48 { pt3dadd( -111.855, 26.775, -186.39, 0.83 ) }
    dend_48 { pt3dadd( -113.745, 28.0699, -190.646, 0.28 ) }
    dend_48 { pt3dadd( -115.025, 28.608, -193.469, 0.55 ) }
    dend_48 { pt3dadd( -116.523, 28.8144, -196.92, 0.28 ) }
    dend_48 { pt3dadd( -117.148, 28.741, -198.405, 0.83 ) }
    dend_48 { pt3dadd( -120.676, 27.6213, -206.689, 0.55 ) }
    dend_48 { pt3dadd( -122.027, 26.9364, -209.836, 0.55 ) }
    dend_48 { pt3dadd( -125.24, 24.9908, -216.901, 0.55 ) }
    dend_48 { pt3dadd( -130.491, 21.876, -227.129, 0.55 ) }
    dend_48 { pt3dadd( -131.793, 21.122, -229.461, 0.55 ) }
    dend_48 { pt3dadd( -135.206, 19.2298, -235.247, 0.55 ) }
    dend_48 { pt3dadd( -138.946, 17.3185, -241.227, 0.55 ) }
    dend_48 { pt3dadd( -141.998, 15.9102, -245.821, 0.55 ) }
    dend_48 { pt3dadd( -146.911, 13.8298, -252.568, 0.55 ) }
    dend_48 { pt3dadd( -152.196, 11.8464, -259.28, 0.55 ) }
    dend_48 { pt3dadd( -153.396, 11.4284, -260.78, 0.55 ) }
    dend_48 { pt3dadd( -158.645, 9.54541, -267.35, 0.55 ) }
    dend_48 { pt3dadd( -159.916, 9.08514, -268.927, 0.28 ) }
    dend_48 { pt3dadd( -160.217, 8.96697, -269.31, 0.55 ) }
    dend_48 { pt3dadd( -171.838, 3.91055, -284.199, 0.28 ) }
    dend_48 { pt3dadd( -172.906, 3.4328, -285.527, 0.83 ) }
    dend_48 { pt3dadd( -179.188, 0.43957, -293.32, 0.28 ) }
    dend_48 { pt3dadd( -179.594, 0.24286, -293.817, 0.55 ) }
    dend_48 { pt3dadd( -182.578, -1.15103, -297.431, 0.28 ) }
    dend_48 { pt3dadd( -183.803, -1.72799, -298.886, 0.55 ) }
    dend_48 { pt3dadd( -186.314, -3.0235, -301.497, 0.28 ) }
    dend_48 { pt3dadd( -187.169, -3.47893, -302.404, 0.55 ) }
    // Section: dend_43, id: dend_43, parent: dend_42 (entry count 61/100)
    dend_43 { pt3dclear() }
    dend_43 { pt3dadd( 9.58166, -35.2277, -38.8936, 0.55 ) }
    dend_43 { pt3dadd( 10.9962, -35.6615, -42.3646, 0.55 ) }
    dend_43 { pt3dadd( 12.2683, -35.9645, -45.069, 0.55 ) }
    dend_43 { pt3dadd( 15.0131, -36.6394, -51.3305, 0.83 ) }
    dend_43 { pt3dadd( 15.7458, -36.8754, -53.0086, 0.83 ) }
    dend_43 { pt3dadd( 16.6104, -37.19, -54.9524, 0.83 ) }
    dend_43 { pt3dadd( 17.3522, -37.4464, -56.5579, 0.83 ) }
    dend_43 { pt3dadd( 18.6913, -37.8791, -59.3343, 0.83 ) }
    dend_43 { pt3dadd( 20.9344, -38.7226, -63.983, 0.83 ) }
    dend_43 { pt3dadd( 22.3639, -39.1624, -66.7339, 0.83 ) }
    dend_43 { pt3dadd( 23.8727, -39.5678, -69.8343, 0.83 ) }
    dend_43 { pt3dadd( 25.5474, -39.9359, -73.2832, 0.83 ) }
    dend_43 { pt3dadd( 27.0679, -40.2205, -76.4213, 0.83 ) }
    dend_43 { pt3dadd( 29.5874, -40.6327, -81.4001, 0.83 ) }
    dend_43 { pt3dadd( 31.1868, -40.7928, -84.383, 0.83 ) }
    dend_43 { pt3dadd( 33.2015, -40.838, -88.2092, 0.83 ) }
    dend_43 { pt3dadd( 34.4755, -40.8064, -90.6886, 0.83 ) }
    // Section: dend_39, id: dend_39, parent: dend_33 (entry count 78/100)
    dend_39 { pt3dclear() }
    dend_39 { pt3dadd( 18.1162, -41.388, 0.996291, 0.55 ) }
    dend_39 { pt3dadd( 20.7483, -41.1721, 1.79951, 0.55 ) }
    dend_39 { pt3dadd( 22.9388, -41.1059, 2.5258, 0.28 ) }
    dend_39 { pt3dadd( 24.3247, -41.1558, 3.02468, 0.55 ) }
    dend_39 { pt3dadd( 26.673, -41.3141, 3.90127, 1.11 ) }
    dend_39 { pt3dadd( 30.9282, -41.7473, 5.68804, 0.55 ) }
    dend_39 { pt3dadd( 32.5566, -41.9507, 6.43388, 0.55 ) }
    dend_39 { pt3dadd( 34.3562, -42.2575, 7.36195, 0.83 ) }
    dend_39 { pt3dadd( 36.261, -42.6123, 8.40938, 0.28 ) }
    dend_39 { pt3dadd( 36.261, -42.6123, 8.40938, 0.83 ) }
    dend_39 { pt3dadd( 39.4732, -43.6763, 10.4819, 0.28 ) }
    dend_39 { pt3dadd( 40.3348, -44.0147, 11.0578, 1.11 ) }
    // Section: dend_34, id: dend_34, parent: dend_33 (entry count 90/100)
    dend_34 { pt3dclear() }
    dend_34 { pt3dadd( 18.1162, -41.388, 0.996291, 0.83 ) }
    dend_34 { pt3dadd( 20.0327, -44.788, 0.143897, 0.83 ) }
    dend_34 { pt3dadd( 21.7214, -47.3495, -0.954253, 0.55 ) }
    dend_34 { pt3dadd( 22.8205, -48.8137, -1.90956, 0.83 ) }
    dend_34 { pt3dadd( 23.7173, -50.0084, -2.68903, 0.83 ) }
    dend_34 { pt3dadd( 24.9603, -51.6642, -3.76934, 0.83 ) }
    dend_34 { pt3dadd( 26.0519, -53.1184, -4.71812, 0.83 ) }
    dend_34 { pt3dadd( 28.2901, -55.541, -7.01092, 0.83 ) }
    dend_34 { pt3dadd( 29.9067, -57.1295, -8.99971, 0.55 ) }
    // Section: dend_30, id: dend_30, parent: dend_28 (entry count 99/100)
    dend_30 { pt3dclear() }
    dend_30 { pt3dadd( -54.5711, -32.2075, 25.207, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_4()
}

proc basic_shape_4() {
    dend_30 { pt3dadd( -55.7242, -29.065, 24.6124, 0.55 ) }
    dend_30 { pt3dadd( -57.1395, -24.7479, 23.7854, 0.83 ) }
    dend_30 { pt3dadd( -59.1026, -18.703, 22.5019, 0.55 ) }
    dend_30 { pt3dadd( -59.9462, -15.7887, 21.9327, 0.55 ) }
    dend_30 { pt3dadd( -61.0663, -11.5479, 21.1552, 1.11 ) }
    dend_30 { pt3dadd( -62.0148, -7.78461, 20.5217, 0.83 ) }
    dend_30 { pt3dadd( -62.9321, -3.83024, 19.8825, 0.55 ) }
    dend_30 { pt3dadd( -63.2685, -2.22071, 19.6492, 0.55 ) }
    dend_30 { pt3dadd( -64.1485, 1.67635, 19.3781, 0.55 ) }
    dend_30 { pt3dadd( -64.3334, 2.46731, 19.3261, 1.11 ) }
    dend_30 { pt3dadd( -64.7957, 4.35082, 19.5508, 0.55 ) }
    dend_30 { pt3dadd( -65.3176, 6.17071, 20.3258, 0.83 ) }
    dend_30 { pt3dadd( -65.8874, 7.80559, 21.4449, 0.55 ) }
    dend_30 { pt3dadd( -66.6358, 9.68531, 22.9303, 0.55 ) }
    dend_30 { pt3dadd( -67.2612, 11.0199, 23.9972, 0.83 ) }
    dend_30 { pt3dadd( -70.3774, 17.5675, 28.2107, 0.55 ) }
    dend_30 { pt3dadd( -71.2238, 19.429, 29.1935, 0.83 ) }
    dend_30 { pt3dadd( -72.3668, 21.9, 30.2107, 0.55 ) }
    dend_30 { pt3dadd( -73.6979, 24.5253, 31.0585, 0.55 ) }
    dend_30 { pt3dadd( -75.0463, 27.0334, 31.4979, 1.11 ) }
    dend_30 { pt3dadd( -77.5968, 31.8632, 31.7488, 0.55 ) }
    dend_30 { pt3dadd( -78.4137, 33.4628, 31.687, 0.55 ) }
    dend_30 { pt3dadd( -80.4404, 37.7013, 31.4723, 0.55 ) }
    dend_30 { pt3dadd( -81.7023, 40.4788, 31.3023, 0.55 ) }
    dend_30 { pt3dadd( -83.2935, 44.0532, 31.1639, 1.11 ) }
    dend_30 { pt3dadd( -85.0704, 48.0185, 31.1496, 0.55 ) }
    dend_30 { pt3dadd( -86.1563, 50.4094, 31.3116, 1.11 ) }
    dend_30 { pt3dadd( -87.5357, 53.3723, 31.5562, 0.28 ) }
    dend_30 { pt3dadd( -88.0146, 54.3965, 31.6934, 0.55 ) }
    dend_30 { pt3dadd( -88.8182, 56.0333, 32.0189, 0.28 ) }
    dend_30 { pt3dadd( -89.9577, 58.1085, 32.6798, 0.83 ) }
    dend_30 { pt3dadd( -91.851, 61.1398, 33.8687, 0.28 ) }
    dend_30 { pt3dadd( -92.5574, 62.2496, 34.3929, 0.55 ) }
    dend_30 { pt3dadd( -95.4758, 66.727, 36.8561, 0.28 ) }
    dend_30 { pt3dadd( -96.5634, 68.4422, 37.8427, 0.83 ) }
    dend_30 { pt3dadd( -98.087, 70.9345, 39.2683, 0.55 ) }
    dend_30 { pt3dadd( -99.6084, 73.4933, 40.7134, 0.55 ) }
    dend_30 { pt3dadd( -101.144, 76.1186, 42.1188, 0.55 ) }
    dend_30 { pt3dadd( -102.28, 78.1783, 43.1761, 0.83 ) }
    dend_30 { pt3dadd( -103.569, 80.6698, 44.3465, 0.28 ) }
    dend_30 { pt3dadd( -104.742, 83.1333, 45.417, 0.55 ) }
    dend_30 { pt3dadd( -106.053, 86.4171, 46.5536, 0.55 ) }
    dend_30 { pt3dadd( -106.261, 87.0922, 46.7438, 0.83 ) }
    dend_30 { pt3dadd( -107.053, 90.2298, 47.1621, 0.28 ) }
    dend_30 { pt3dadd( -107.342, 92.039, 47.2167, 0.55 ) }
    dend_30 { pt3dadd( -107.519, 93.5654, 47.0212, 0.28 ) }
    dend_30 { pt3dadd( -107.886, 96.7184, 46.1164, 0.55 ) }
    dend_30 { pt3dadd( -108.232, 100.062, 44.8113, 0.55 ) }
    dend_30 { pt3dadd( -108.766, 104.834, 42.7271, 0.28 ) }
    dend_30 { pt3dadd( -109.154, 108.052, 40.833, 0.83 ) }
    dend_30 { pt3dadd( -109.7, 112.702, 37.6954, 0.55 ) }
    dend_30 { pt3dadd( -110.067, 116.068, 35.2214, 0.55 ) }
    dend_30 { pt3dadd( -110.243, 117.484, 34.1366, 0.55 ) }
    dend_30 { pt3dadd( -110.582, 119.651, 32.3271, 0.83 ) }
    dend_30 { pt3dadd( -111.67, 125.619, 27.4518, 0.28 ) }
    dend_30 { pt3dadd( -111.956, 126.847, 26.4299, 0.83 ) }
    dend_30 { pt3dadd( -112.409, 128.542, 25.1547, 0.28 ) }
    dend_30 { pt3dadd( -112.943, 130.265, 24.0543, 0.55 ) }
    dend_30 { pt3dadd( -114.803, 134.43, 21.8263, 0.83 ) }
    dend_30 { pt3dadd( -115.544, 135.714, 21.6471, 0.83 ) }
    dend_30 { pt3dadd( -116.818, 137.67, 22.3296, 0.28 ) }
    dend_30 { pt3dadd( -117.422, 138.577, 22.8798, 0.55 ) }
    dend_30 { pt3dadd( -118.767, 140.661, 24.5653, 0.28 ) }
    dend_30 { pt3dadd( -119.632, 142.252, 25.9834, 0.55 ) }
    dend_30 { pt3dadd( -121.515, 146.515, 31.2348, 0.28 ) }
    dend_30 { pt3dadd( -121.836, 147.355, 32.3942, 0.55 ) }
    dend_30 { pt3dadd( -122.231, 148.734, 34.3079, 0.28 ) }
    dend_30 { pt3dadd( -122.47, 149.842, 35.8774, 0.83 ) }
    dend_30 { pt3dadd( -122.774, 151.679, 38.5068, 0.83 ) }
    dend_30 { pt3dadd( -123.354, 157.114, 45.8252, 0.28 ) }
    dend_30 { pt3dadd( -123.405, 157.95, 46.8405, 0.55 ) }
    dend_30 { pt3dadd( -123.499, 160.92, 50.287, 0.28 ) }
    dend_30 { pt3dadd( -123.515, 162.64, 52.1739, 0.83 ) }
    dend_30 { pt3dadd( -123.497, 164.543, 54.1156, 0.28 ) }
    dend_30 { pt3dadd( -123.481, 166.161, 55.5455, 0.83 ) }
    dend_30 { pt3dadd( -123.471, 169.804, 57.9314, 0.28 ) }
    dend_30 { pt3dadd( -123.455, 171.494, 58.8883, 0.83 ) }
    dend_30 { pt3dadd( -123.427, 174.729, 60.3526, 0.28 ) }
    dend_30 { pt3dadd( -123.462, 176.759, 60.9189, 0.55 ) }
    dend_30 { pt3dadd( -123.533, 178.925, 61.1861, 0.28 ) }
    dend_30 { pt3dadd( -123.699, 181.531, 60.9884, 0.55 ) }
    dend_30 { pt3dadd( -124.0, 184.785, 60.2788, 0.28 ) }
    dend_30 { pt3dadd( -124.142, 186.161, 59.8498, 0.83 ) }
    dend_30 { pt3dadd( -124.529, 189.573, 58.5863, 0.28 ) }
    dend_30 { pt3dadd( -124.922, 192.155, 57.3193, 0.83 ) }
    dend_30 { pt3dadd( -125.661, 196.779, 54.8823, 0.28 ) }
    dend_30 { pt3dadd( -125.93, 198.3, 53.8994, 0.83 ) }
    dend_30 { pt3dadd( -126.435, 201.03, 51.8644, 0.28 ) }
    dend_30 { pt3dadd( -126.648, 202.125, 50.8938, 0.83 ) }
    dend_30 { pt3dadd( -127.886, 208.548, 44.7457, 0.28 ) }
    dend_30 { pt3dadd( -128.433, 211.054, 42.0623, 0.83 ) }
    dend_30 { pt3dadd( -129.683, 216.779, 35.5848, 0.28 ) }
    dend_30 { pt3dadd( -130.116, 218.846, 33.0671, 0.83 ) }
    dend_30 { pt3dadd( -130.935, 222.584, 28.2769, 0.28 ) }
    dend_30 { pt3dadd( -131.206, 223.749, 26.7216, 0.55 ) }
    dend_30 { pt3dadd( -132.052, 227.226, 22.3001, 0.28 ) }
    dend_30 { pt3dadd( -132.369, 228.363, 20.9103, 0.28 ) }
    dend_30 { pt3dadd( -133.21, 231.175, 18.0098, 0.55 ) }
    dend_30 { pt3dadd( -135.018, 235.412, 13.8507, 0.28 ) }
    dend_30 { pt3dadd( -136.49, 238.33, 11.112, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_5()
}

proc basic_shape_5() {
    dend_30 { pt3dadd( -137.956, 240.999, 8.37927, 0.28 ) }
    dend_30 { pt3dadd( -138.717, 242.316, 7.03303, 0.55 ) }
    dend_30 { pt3dadd( -139.98, 244.408, 5.11158, 0.28 ) }
    dend_30 { pt3dadd( -145.999, 254.137, -2.61612, 0.28 ) }
    dend_30 { pt3dadd( -146.69, 255.279, -3.42851, 0.83 ) }
    dend_30 { pt3dadd( -151.146, 262.788, -8.40716, 0.28 ) }
    dend_30 { pt3dadd( -151.628, 263.618, -8.98552, 0.83 ) }
    dend_30 { pt3dadd( -156.85, 273.276, -14.916, 0.28 ) }
    dend_30 { pt3dadd( -157.241, 274.211, -15.2122, 0.55 ) }
    dend_30 { pt3dadd( -158.074, 278.119, -13.7862, 0.28 ) }
    dend_30 { pt3dadd( -158.362, 279.336, -13.4582, 0.55 ) }
    dend_30 { pt3dadd( -158.843, 281.135, -12.8405, 0.28 ) }
    dend_30 { pt3dadd( -159.392, 282.881, -13.2397, 0.55 ) }
    dend_30 { pt3dadd( -160.372, 285.776, -14.662, 0.28 ) }
    dend_30 { pt3dadd( -160.84, 287.145, -15.3475, 1.11 ) }
    dend_30 { pt3dadd( -162.093, 290.242, -16.7466, 0.28 ) }
    dend_30 { pt3dadd( -162.652, 291.511, -17.398, 0.83 ) }
    // Section: dend_29, id: dend_29, parent: dend_28 (entry count 17/100)
    dend_29 { pt3dclear() }
    dend_29 { pt3dadd( -54.5711, -32.2075, 25.207, 0.55 ) }
    dend_29 { pt3dadd( -56.4894, -33.0253, 25.5653, 0.55 ) }
    dend_29 { pt3dadd( -57.3331, -33.3427, 25.7525, 0.55 ) }
    dend_29 { pt3dadd( -58.618, -33.7965, 26.0946, 0.83 ) }
    dend_29 { pt3dadd( -59.9283, -34.2674, 26.4613, 0.55 ) }
    dend_29 { pt3dadd( -61.0142, -34.7329, 26.8148, 0.55 ) }
    dend_29 { pt3dadd( -61.5191, -34.9834, 26.9899, 0.83 ) }
    dend_29 { pt3dadd( -62.2332, -35.424, 27.294, 0.55 ) }
    dend_29 { pt3dadd( -63.4088, -36.3098, 28.0057, 0.55 ) }
    dend_29 { pt3dadd( -63.9674, -36.828, 28.4375, 0.55 ) }
    dend_29 { pt3dadd( -64.932, -37.9005, 29.3023, 0.55 ) }
    dend_29 { pt3dadd( -65.3321, -38.4296, 29.7353, 0.28 ) }
    dend_29 { pt3dadd( -66.1911, -39.7152, 30.7725, 0.83 ) }
    dend_29 { pt3dadd( -67.1335, -41.2666, 32.0986, 0.55 ) }
    dend_29 { pt3dadd( -67.2949, -41.5423, 32.35, 0.55 ) }
    dend_29 { pt3dadd( -67.8155, -42.3714, 33.1485, 0.83 ) }
    dend_29 { pt3dadd( -68.4658, -43.2569, 34.0574, 0.55 ) }
    dend_29 { pt3dadd( -68.9567, -43.8636, 34.7088, 0.83 ) }
    dend_29 { pt3dadd( -70.372, -45.3821, 36.2881, 0.55 ) }
    dend_29 { pt3dadd( -71.0621, -46.0211, 36.8865, 0.83 ) }
    dend_29 { pt3dadd( -71.9603, -46.7452, 37.5565, 0.28 ) }
    dend_29 { pt3dadd( -72.6994, -47.238, 38.0072, 0.55 ) }
    dend_29 { pt3dadd( -73.5565, -47.7025, 38.3907, 0.55 ) }
    dend_29 { pt3dadd( -74.8616, -48.3029, 38.8274, 0.28 ) }
    dend_29 { pt3dadd( -75.4534, -48.5297, 38.9438, 0.28 ) }
    dend_29 { pt3dadd( -75.9684, -48.7084, 39.0354, 0.55 ) }
    dend_29 { pt3dadd( -77.362, -49.2548, 39.2769, 0.28 ) }
    dend_29 { pt3dadd( -77.8737, -49.5172, 39.407, 0.55 ) }
    dend_29 { pt3dadd( -78.1233, -49.6644, 39.4742, 0.28 ) }
    dend_29 { pt3dadd( -78.7738, -50.1105, 39.7011, 0.28 ) }
    dend_29 { pt3dadd( -79.2059, -50.4113, 39.8545, 0.55 ) }
    dend_29 { pt3dadd( -80.0681, -51.057, 40.1503, 0.28 ) }
    dend_29 { pt3dadd( -80.9485, -51.7808, 40.4132, 0.55 ) }
    dend_29 { pt3dadd( -82.0262, -52.6757, 40.7636, 0.28 ) }
    dend_29 { pt3dadd( -82.8344, -53.3759, 41.0353, 0.55 ) }
    // Section: dend_25, id: dend_25, parent: dend_23 (entry count 52/100)
    dend_25 { pt3dclear() }
    dend_25 { pt3dadd( -97.6502, 9.74061, 48.4815, 0.28 ) }
    dend_25 { pt3dadd( -100.184, 11.6584, 48.2359, 0.28 ) }
    dend_25 { pt3dadd( -100.87, 12.2524, 48.1528, 0.55 ) }
    dend_25 { pt3dadd( -102.344, 13.5716, 47.9852, 0.28 ) }
    dend_25 { pt3dadd( -102.671, 13.8955, 47.9493, 0.55 ) }
    dend_25 { pt3dadd( -105.732, 17.1762, 47.6324, 0.28 ) }
    dend_25 { pt3dadd( -108.101, 19.8084, 47.4833, 0.28 ) }
    dend_25 { pt3dadd( -109.486, 21.5561, 47.4264, 0.28 ) }
    dend_25 { pt3dadd( -110.464, 22.9043, 47.4101, 0.55 ) }
    dend_25 { pt3dadd( -112.652, 26.1134, 47.2845, 0.28 ) }
    dend_25 { pt3dadd( -113.457, 27.3301, 47.263, 0.55 ) }
    dend_25 { pt3dadd( -114.686, 29.3012, 47.3081, 0.28 ) }
    dend_25 { pt3dadd( -115.322, 30.4313, 47.3469, 0.55 ) }
    dend_25 { pt3dadd( -116.316, 32.3099, 47.4305, 0.28 ) }
    dend_25 { pt3dadd( -117.561, 34.9094, 47.4915, 0.55 ) }
    // Section: dend_24, id: dend_24, parent: dend_23 (entry count 67/100)
    dend_24 { pt3dclear() }
    dend_24 { pt3dadd( -97.6502, 9.74061, 48.4815, 0.28 ) }
    dend_24 { pt3dadd( -95.0943, 8.95819, 46.8594, 0.28 ) }
    dend_24 { pt3dadd( -94.3893, 8.76202, 46.3267, 0.83 ) }
    dend_24 { pt3dadd( -90.9793, 8.04811, 43.9915, 0.28 ) }
    dend_24 { pt3dadd( -90.6224, 7.9791, 43.76, 0.83 ) }
    dend_24 { pt3dadd( -87.4503, 7.43241, 41.9877, 0.28 ) }
    dend_24 { pt3dadd( -86.5065, 7.27127, 41.5112, 0.83 ) }
    dend_24 { pt3dadd( -80.2893, 6.36986, 38.6398, 0.28 ) }
    dend_24 { pt3dadd( -76.7651, 5.89102, 37.171, 0.28 ) }
    dend_24 { pt3dadd( -75.9858, 5.79859, 36.8985, 1.11 ) }
    dend_24 { pt3dadd( -71.8909, 5.32582, 35.6952, 0.28 ) }
    dend_24 { pt3dadd( -70.6863, 5.17158, 35.3447, 0.55 ) }
    dend_24 { pt3dadd( -66.2799, 4.54963, 33.9954, 0.28 ) }
    dend_24 { pt3dadd( -64.2296, 4.21211, 33.3895, 0.28 ) }
    dend_24 { pt3dadd( -62.9577, 3.96802, 32.9423, 0.55 ) }
    dend_24 { pt3dadd( -61.051, 3.59532, 32.1992, 0.28 ) }
    dend_24 { pt3dadd( -55.4895, 2.30233, 29.578, 0.28 ) }
    dend_24 { pt3dadd( -52.5844, 1.58163, 28.143, 0.28 ) }
    dend_24 { pt3dadd( -51.9575, 1.37379, 27.8218, 0.83 ) }
    dend_24 { pt3dadd( -50.6032, 0.84242, 27.116, 0.28 ) }
    dend_24 { pt3dadd( -50.6032, 0.84242, 27.116, 0.83 ) }
    dend_24 { pt3dadd( -47.6529, -0.463981, 25.7172, 0.28 ) }
    dend_24 { pt3dadd( -46.8865, -0.873489, 25.4791, 0.83 ) }
    dend_24 { pt3dadd( -44.658, -2.41037, 24.5565, 0.28 ) }
    dend_24 { pt3dadd( -43.3188, -3.40398, 23.9475, 0.83 ) }
    // Section: dend_18, id: dend_18, parent: dend_16 (entry count 92/100)
    dend_18 { pt3dclear() }
    dend_18 { pt3dadd( -24.1701, 44.0163, -18.6883, 0.28 ) }
    dend_18 { pt3dadd( -25.4897, 42.2994, -19.7265, 0.28 ) }
    dend_18 { pt3dadd( -26.5092, 40.9563, -20.6743, 0.83 ) }
    dend_18 { pt3dadd( -27.6188, 39.4866, -21.6878, 0.55 ) }
    dend_18 { pt3dadd( -28.7526, 37.9771, -22.9279, 1.11 ) }
    dend_18 { pt3dadd( -31.8123, 33.6555, -26.7957, 0.28 ) }
    dend_18 { pt3dadd( -32.0238, 33.3592, -27.1043, 0.83 ) }
    dend_18 { pt3dadd( -32.958, 32.0214, -28.7502, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_6()
}

proc basic_shape_6() {
    dend_18 { pt3dadd( -33.525, 31.1834, -29.8707, 0.83 ) }
    dend_18 { pt3dadd( -35.5851, 28.126, -34.2366, 0.28 ) }
    dend_18 { pt3dadd( -36.1196, 27.3527, -35.3409, 0.83 ) }
    dend_18 { pt3dadd( -38.0658, 24.7914, -39.6056, 0.28 ) }
    dend_18 { pt3dadd( -38.4124, 24.3425, -40.4175, 0.55 ) }
    dend_18 { pt3dadd( -39.0051, 23.5871, -41.8568, 0.55 ) }
    dend_18 { pt3dadd( -39.611, 22.8178, -43.4017, 0.55 ) }
    dend_18 { pt3dadd( -40.4086, 21.844, -45.3696, 1.11 ) }
    dend_18 { pt3dadd( -43.5989, 17.9777, -54.0287, 0.55 ) }
    dend_18 { pt3dadd( -44.0294, 17.4194, -55.3659, 0.28 ) }
    dend_18 { pt3dadd( -44.1542, 17.272, -55.7733, 0.55 ) }
    dend_18 { pt3dadd( -44.987, 16.3928, -58.4923, 0.28 ) }
    dend_18 { pt3dadd( -45.32, 16.0177, -59.7061, 0.83 ) }
    dend_18 { pt3dadd( -47.1999, 13.8334, -67.0266, 0.28 ) }
    dend_18 { pt3dadd( -47.2866, 13.7361, -67.3396, 0.55 ) }
    dend_18 { pt3dadd( -49.2397, 11.5812, -74.3134, 0.28 ) }
    dend_18 { pt3dadd( -49.5812, 11.1683, -75.573, 0.55 ) }
    dend_18 { pt3dadd( -50.5947, 9.91421, -79.0733, 0.28 ) }
    dend_18 { pt3dadd( -50.7727, 9.67901, -79.6759, 0.83 ) }
    dend_18 { pt3dadd( -51.6504, 8.46989, -82.4116, 0.28 ) }
    dend_18 { pt3dadd( -52.0891, 7.85629, -83.7655, 0.83 ) }
    dend_18 { pt3dadd( -54.2119, 4.61048, -90.257, 0.28 ) }
    dend_18 { pt3dadd( -54.7579, 3.82051, -91.7294, 0.83 ) }
    dend_18 { pt3dadd( -56.9851, 0.77634, -97.0373, 0.55 ) }
    dend_18 { pt3dadd( -57.2689, 0.37776, -97.6951, 0.83 ) }
    dend_18 { pt3dadd( -58.8305, -1.89615, -101.213, 0.28 ) }
    dend_18 { pt3dadd( -59.3228, -2.62601, -102.241, 0.55 ) }
    dend_18 { pt3dadd( -61.3496, -5.7162, -106.123, 0.28 ) }
    dend_18 { pt3dadd( -62.0704, -6.8548, -107.514, 0.83 ) }
    dend_18 { pt3dadd( -65.638, -12.5623, -113.863, 0.28 ) }
    dend_18 { pt3dadd( -65.817, -12.8535, -114.182, 0.83 ) }
    dend_18 { pt3dadd( -66.9032, -14.7054, -116.119, 0.28 ) }
    dend_18 { pt3dadd( -67.1768, -15.1684, -116.634, 0.55 ) }
    // Section: dend_17, id: dend_17, parent: dend_16 (entry count 33/100)
    dend_17 { pt3dclear() }
    dend_17 { pt3dadd( -24.1701, 44.0163, -18.6883, 0.55 ) }
    dend_17 { pt3dadd( -25.2735, 47.018, -19.1787, 0.55 ) }
    dend_17 { pt3dadd( -26.0894, 49.2905, -19.6076, 0.55 ) }
    dend_17 { pt3dadd( -26.9198, 51.6849, -20.2038, 0.28 ) }
    dend_17 { pt3dadd( -27.461, 53.2691, -20.6375, 1.38 ) }
    dend_17 { pt3dadd( -28.2674, 55.5808, -21.3662, 0.55 ) }
    dend_17 { pt3dadd( -29.1784, 58.161, -22.2181, 0.55 ) }
    dend_17 { pt3dadd( -29.5854, 59.2584, -22.5659, 0.83 ) }
    dend_17 { pt3dadd( -30.3023, 61.2156, -23.253, 0.28 ) }
    dend_17 { pt3dadd( -30.6705, 62.336, -23.6639, 0.55 ) }
    dend_17 { pt3dadd( -31.2653, 64.3084, -24.3352, 0.28 ) }
    dend_17 { pt3dadd( -31.6841, 65.7371, -24.7286, 0.83 ) }
    dend_17 { pt3dadd( -32.4818, 68.6665, -25.2541, 0.28 ) }
    dend_17 { pt3dadd( -32.8607, 70.2418, -25.5415, 0.55 ) }
    dend_17 { pt3dadd( -33.2408, 72.1276, -25.8604, 0.28 ) }
    dend_17 { pt3dadd( -33.4734, 73.7261, -26.2059, 0.83 ) }
    dend_17 { pt3dadd( -33.724, 76.7174, -26.9156, 0.28 ) }
    dend_17 { pt3dadd( -33.8429, 79.3667, -27.7026, 0.83 ) }
    dend_17 { pt3dadd( -33.829, 83.8245, -29.2167, 0.28 ) }
    dend_17 { pt3dadd( -33.7493, 85.3697, -29.7879, 0.83 ) }
    dend_17 { pt3dadd( -33.4198, 89.5966, -31.6848, 0.28 ) }
    dend_17 { pt3dadd( -33.2053, 91.552, -32.6784, 0.83 ) }
    dend_17 { pt3dadd( -32.8829, 93.9547, -33.9985, 0.28 ) }
    dend_17 { pt3dadd( -32.6243, 95.8498, -35.1102, 0.55 ) }
    dend_17 { pt3dadd( -32.3661, 97.744, -36.2117, 0.83 ) }
    dend_17 { pt3dadd( -31.9356, 101.93, -38.6414, 0.28 ) }
    dend_17 { pt3dadd( -31.8467, 103.565, -39.5442, 0.83 ) }
    dend_17 { pt3dadd( -31.8187, 105.774, -40.7361, 0.83 ) }
    dend_17 { pt3dadd( -31.8977, 107.979, -41.854, 0.28 ) }
    dend_17 { pt3dadd( -32.1355, 109.673, -42.7513, 0.83 ) }
    dend_17 { pt3dadd( -32.5173, 111.369, -43.5885, 0.28 ) }
    dend_17 { pt3dadd( -32.8643, 112.577, -44.0982, 0.55 ) }
    dend_17 { pt3dadd( -33.1959, 113.453, -44.474, 0.28 ) }
    dend_17 { pt3dadd( -34.042, 115.251, -45.1528, 0.55 ) }
    dend_17 { pt3dadd( -35.7915, 118.585, -46.1068, 0.28 ) }
    dend_17 { pt3dadd( -36.53, 119.767, -46.4172, 0.55 ) }
    dend_17 { pt3dadd( -37.4156, 121.038, -46.7064, 0.28 ) }
    dend_17 { pt3dadd( -38.4438, 122.398, -46.9704, 0.83 ) }
    dend_17 { pt3dadd( -39.8472, 124.136, -47.2057, 0.28 ) }
    dend_17 { pt3dadd( -41.2544, 125.826, -47.3224, 0.83 ) }
    dend_17 { pt3dadd( -43.3648, 128.337, -47.3084, 0.28 ) }
    dend_17 { pt3dadd( -44.1937, 129.337, -47.3406, 0.83 ) }
    dend_17 { pt3dadd( -45.1399, 130.525, -47.3977, 0.28 ) }
    dend_17 { pt3dadd( -46.3439, 132.173, -47.5151, 0.28 ) }
    dend_17 { pt3dadd( -46.8569, 132.975, -47.6494, 0.55 ) }
    dend_17 { pt3dadd( -47.9429, 135.035, -48.1571, 0.28 ) }
    dend_17 { pt3dadd( -48.7215, 136.86, -48.8943, 0.55 ) }
    dend_17 { pt3dadd( -49.1199, 137.917, -49.4444, 0.55 ) }
    dend_17 { pt3dadd( -49.6609, 139.5, -50.3766, 0.83 ) }
    dend_17 { pt3dadd( -50.6661, 142.401, -52.3891, 0.28 ) }
    dend_17 { pt3dadd( -51.3933, 144.51, -53.9989, 0.83 ) }
    dend_17 { pt3dadd( -52.4217, 147.436, -56.5513, 0.28 ) }
    dend_17 { pt3dadd( -52.8235, 148.503, -57.5629, 0.28 ) }
    dend_17 { pt3dadd( -53.354, 149.989, -59.0131, 0.83 ) }
    dend_17 { pt3dadd( -54.3214, 152.791, -61.8555, 0.28 ) }
    dend_17 { pt3dadd( -54.681, 153.83, -62.8712, 0.83 ) }
    dend_17 { pt3dadd( -55.9307, 157.662, -66.4587, 0.28 ) }
    dend_17 { pt3dadd( -56.5408, 159.527, -68.171, 1.11 ) }
    dend_17 { pt3dadd( -57.7072, 163.196, -71.5877, 0.28 ) }
    dend_17 { pt3dadd( -58.1462, 164.744, -73.047, 0.55 ) }
    dend_17 { pt3dadd( -58.4979, 166.195, -74.3016, 0.28 ) }
    dend_17 { pt3dadd( -58.772, 167.385, -75.2505, 0.55 ) }
    dend_17 { pt3dadd( -59.3789, 170.529, -77.5387, 0.28 ) }
    dend_17 { pt3dadd( -59.6378, 171.782, -78.5458, 0.55 ) }
    dend_17 { pt3dadd( -60.0648, 173.695, -80.1473, 0.28 ) }
    dend_17 { pt3dadd( -60.3204, 174.937, -81.2875, 0.55 ) }
    dend_17 { pt3dadd( -60.5794, 176.428, -82.7408, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_7()
}

proc basic_shape_7() {
    dend_17 { pt3dadd( -60.91, 178.633, -84.9352, 0.55 ) }
    dend_17 { pt3dadd( -61.4216, 182.71, -88.7627, 0.28 ) }
    dend_17 { pt3dadd( -61.6139, 184.391, -90.4079, 0.55 ) }
    dend_17 { pt3dadd( -61.8509, 186.79, -92.7709, 0.28 ) }
    dend_17 { pt3dadd( -61.9353, 188.121, -94.147, 0.83 ) }
    dend_17 { pt3dadd( -61.9652, 189.931, -95.9846, 0.28 ) }
    dend_17 { pt3dadd( -61.947, 191.227, -97.3357, 0.83 ) }
    dend_17 { pt3dadd( -61.8607, 193.464, -99.6378, 0.28 ) }
    dend_17 { pt3dadd( -61.8316, 194.469, -100.776, 0.55 ) }
    dend_17 { pt3dadd( -61.764, 195.876, -102.437, 0.28 ) }
    dend_17 { pt3dadd( -61.6703, 197.056, -103.914, 0.55 ) }
    dend_17 { pt3dadd( -61.4235, 200.492, -108.033, 0.28 ) }
    dend_17 { pt3dadd( -61.3652, 201.687, -109.393, 0.28 ) }
    dend_17 { pt3dadd( -61.4112, 204.345, -112.023, 0.55 ) }
    dend_17 { pt3dadd( -61.518, 206.572, -113.985, 0.28 ) }
    dend_17 { pt3dadd( -61.6364, 207.786, -114.9, 0.55 ) }
    dend_17 { pt3dadd( -62.1676, 211.023, -116.909, 0.28 ) }
    dend_17 { pt3dadd( -62.6941, 212.88, -117.721, 0.83 ) }
    dend_17 { pt3dadd( -63.7652, 215.555, -118.617, 0.28 ) }
    dend_17 { pt3dadd( -64.2363, 216.369, -118.812, 0.55 ) }
    dend_17 { pt3dadd( -65.1442, 217.57, -119.061, 0.28 ) }
    dend_17 { pt3dadd( -66.1389, 218.671, -119.326, 0.55 ) }
    dend_17 { pt3dadd( -68.5022, 220.858, -119.885, 0.28 ) }
    dend_17 { pt3dadd( -69.056, 221.334, -119.986, 0.55 ) }
    dend_17 { pt3dadd( -72.5663, 224.313, -120.715, 0.28 ) }
    dend_17 { pt3dadd( -73.4294, 225.134, -120.927, 0.55 ) }
    dend_17 { pt3dadd( -74.5672, 226.406, -121.218, 0.28 ) }
    dend_17 { pt3dadd( -75.6799, 227.752, -121.529, 0.55 ) }
    dend_17 { pt3dadd( -77.3822, 230.136, -122.045, 0.28 ) }
    dend_17 { pt3dadd( -78.3786, 231.68, -122.333, 0.55 ) }
    dend_17 { pt3dadd( -80.211, 235.321, -122.59, 0.28 ) }
    dend_17 { pt3dadd( -80.8414, 236.804, -122.69, 0.55 ) }
    // Section: dend_15, id: dend_15, parent: dend_13 (entry count 32/100)
    dend_15 { pt3dclear() }
    dend_15 { pt3dadd( -5.96561, 81.4444, -11.9155, 0.55 ) }
    dend_15 { pt3dadd( -4.52141, 82.861, -13.0355, 0.55 ) }
    dend_15 { pt3dadd( -2.8626, 85.1957, -15.8826, 0.55 ) }
    dend_15 { pt3dadd( -2.31489, 86.1969, -17.3426, 0.83 ) }
    dend_15 { pt3dadd( -1.90419, 87.0254, -18.6267, 0.83 ) }
    dend_15 { pt3dadd( -0.837199, 89.3804, -22.3772, 0.28 ) }
    dend_15 { pt3dadd( -0.443116, 90.2657, -23.7611, 0.83 ) }
    dend_15 { pt3dadd( 0.441575, 93.5908, -29.7049, 0.55 ) }
    dend_15 { pt3dadd( 0.487632, 94.3381, -31.1966, 0.28 ) }
    dend_15 { pt3dadd( 0.455599, 94.6873, -31.9476, 0.28 ) }
    dend_15 { pt3dadd( 0.310046, 95.2671, -33.2548, 0.55 ) }
    dend_15 { pt3dadd( 0.0702842, 95.9608, -34.779, 0.55 ) }
    dend_15 { pt3dadd( -0.811029, 98.3925, -39.7599, 0.28 ) }
    dend_15 { pt3dadd( -1.17685, 99.5506, -41.9072, 0.83 ) }
    dend_15 { pt3dadd( -1.89639, 102.093, -46.3931, 0.83 ) }
    dend_15 { pt3dadd( -2.4705, 104.339, -50.2224, 0.83 ) }
    dend_15 { pt3dadd( -3.12752, 107.218, -55.0355, 0.28 ) }
    dend_15 { pt3dadd( -3.31725, 108.223, -56.6612, 0.28 ) }
    dend_15 { pt3dadd( -3.3593, 108.779, -57.4624, 0.55 ) }
    dend_15 { pt3dadd( -3.24676, 111.255, -60.7472, 0.28 ) }
    dend_15 { pt3dadd( -3.18511, 111.627, -61.1968, 0.55 ) }
    dend_15 { pt3dadd( -2.49728, 114.036, -64.0773, 0.28 ) }
    dend_15 { pt3dadd( -2.23519, 114.854, -65.3072, 0.55 ) }
    dend_15 { pt3dadd( -1.9814, 115.582, -66.5906, 0.28 ) }
    dend_15 { pt3dadd( -1.88014, 115.853, -67.1058, 0.55 ) }
    dend_15 { pt3dadd( -1.09443, 117.593, -70.7431, 0.28 ) }
    dend_15 { pt3dadd( -0.822779, 118.095, -71.8299, 0.55 ) }
    dend_15 { pt3dadd( 0.787765, 120.554, -77.6136, 0.28 ) }
    dend_15 { pt3dadd( 1.27168, 121.249, -79.247, 0.28 ) }
    dend_15 { pt3dadd( 1.80739, 121.971, -80.8837, 0.55 ) }
    dend_15 { pt3dadd( 2.93962, 123.503, -84.3865, 0.28 ) }
    dend_15 { pt3dadd( 3.32205, 123.982, -85.4507, 0.55 ) }
    dend_15 { pt3dadd( 4.92375, 125.911, -89.7314, 0.28 ) }
    dend_15 { pt3dadd( 5.77202, 126.853, -91.8039, 0.28 ) }
    dend_15 { pt3dadd( 6.51382, 127.678, -93.666, 0.83 ) }
    dend_15 { pt3dadd( 9.23275, 130.464, -100.059, 0.28 ) }
    dend_15 { pt3dadd( 9.97618, 131.168, -101.683, 0.28 ) }
    dend_15 { pt3dadd( 11.0593, 132.116, -103.855, 0.55 ) }
    dend_15 { pt3dadd( 12.0513, 132.92, -105.614, 0.28 ) }
    dend_15 { pt3dadd( 12.7624, 133.437, -106.884, 0.55 ) }
    dend_15 { pt3dadd( 13.4829, 133.916, -108.049, 0.28 ) }
    dend_15 { pt3dadd( 13.9952, 134.21, -108.559, 0.55 ) }
    dend_15 { pt3dadd( 15.2, 134.961, -109.769, 0.28 ) }
    dend_15 { pt3dadd( 16.9898, 136.226, -111.2, 0.55 ) }
    // Section: dend_14, id: dend_14, parent: dend_13 (entry count 76/100)
    dend_14 { pt3dclear() }
    dend_14 { pt3dadd( -5.96561, 81.4444, -11.9155, 0.55 ) }
    dend_14 { pt3dadd( -7.09172, 85.1084, -10.7058, 0.55 ) }
    dend_14 { pt3dadd( -7.69241, 87.5571, -9.72406, 0.55 ) }
    dend_14 { pt3dadd( -7.94484, 88.5968, -9.29833, 0.55 ) }
    dend_14 { pt3dadd( -8.32928, 90.2596, -8.6274, 0.55 ) }
    dend_14 { pt3dadd( -8.64084, 91.6656, -8.12466, 0.55 ) }
    dend_14 { pt3dadd( -9.36875, 95.0467, -6.919, 0.28 ) }
    dend_14 { pt3dadd( -9.60989, 96.2386, -6.47982, 0.55 ) }
    dend_14 { pt3dadd( -9.89965, 97.9041, -5.73247, 0.55 ) }
    dend_14 { pt3dadd( -10.0749, 98.7039, -5.31648, 0.83 ) }
    dend_14 { pt3dadd( -10.5833, 100.506, -4.30395, 0.28 ) }
    dend_14 { pt3dadd( -11.0372, 102.021, -3.46542, 0.83 ) }
    dend_14 { pt3dadd( -11.9392, 104.773, -1.94503, 0.28 ) }
    dend_14 { pt3dadd( -12.0457, 105.088, -1.73144, 0.83 ) }
    dend_14 { pt3dadd( -12.7817, 107.48, 0.141869, 0.55 ) }
    dend_14 { pt3dadd( -13.098, 108.563, 1.08295, 0.55 ) }
    dend_14 { pt3dadd( -13.5272, 110.153, 2.52265, 0.83 ) }
    dend_14 { pt3dadd( -14.2495, 113.05, 5.21037, 0.55 ) }
    dend_14 { pt3dadd( -14.7498, 115.274, 7.30428, 0.83 ) }
    dend_14 { pt3dadd( -14.9779, 116.401, 8.39469, 0.28 ) }
    dend_14 { pt3dadd( -15.1344, 117.397, 9.30513, 0.83 ) }
    dend_14 { pt3dadd( -15.3726, 118.879, 10.6442, 0.83 ) }
    dend_14 { pt3dadd( -15.862, 121.484, 12.8906, 0.83 ) }
    dend_14 { pt3dadd( -16.2779, 123.687, 14.4181, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_8()
}

proc basic_shape_8() {
    dend_14 { pt3dadd( -16.4452, 124.442, 14.8835, 0.83 ) }
    dend_14 { pt3dadd( -17.0076, 126.72, 16.3197, 0.83 ) }
    dend_14 { pt3dadd( -17.5315, 128.715, 17.5978, 0.28 ) }
    dend_14 { pt3dadd( -17.8143, 129.751, 18.2984, 0.55 ) }
    dend_14 { pt3dadd( -18.3928, 131.812, 19.6017, 0.28 ) }
    dend_14 { pt3dadd( -19.1121, 133.932, 21.0037, 0.55 ) }
    dend_14 { pt3dadd( -20.1566, 136.693, 22.9565, 0.28 ) }
    dend_14 { pt3dadd( -20.4184, 137.309, 23.4298, 0.83 ) }
    dend_14 { pt3dadd( -20.9499, 138.557, 24.3673, 0.28 ) }
    dend_14 { pt3dadd( -21.6008, 140.05, 25.5479, 0.55 ) }
    dend_14 { pt3dadd( -22.5312, 142.216, 27.4726, 0.28 ) }
    dend_14 { pt3dadd( -22.693, 142.634, 27.8251, 0.55 ) }
    dend_14 { pt3dadd( -23.0321, 143.535, 28.6249, 0.28 ) }
    dend_14 { pt3dadd( -23.3577, 144.474, 29.5728, 0.83 ) }
    dend_14 { pt3dadd( -23.6957, 145.707, 30.9027, 0.28 ) }
    dend_14 { pt3dadd( -24.0178, 147.235, 32.6694, 0.55 ) }
    dend_14 { pt3dadd( -24.2242, 148.264, 34.0096, 0.28 ) }
    dend_14 { pt3dadd( -24.3498, 148.907, 34.808, 0.83 ) }
    dend_14 { pt3dadd( -24.5678, 150.278, 36.4205, 0.83 ) }
    dend_14 { pt3dadd( -24.7573, 151.672, 37.9388, 0.55 ) }
    dend_14 { pt3dadd( -24.8225, 152.442, 38.6886, 0.83 ) }
    dend_14 { pt3dadd( -25.1056, 156.793, 42.4912, 0.55 ) }
    dend_14 { pt3dadd( -25.1815, 158.449, 43.7591, 0.83 ) }
    dend_14 { pt3dadd( -25.2756, 163.951, 47.2994, 0.28 ) }
    dend_14 { pt3dadd( -25.2673, 165.142, 47.7994, 0.55 ) }
    dend_14 { pt3dadd( -25.1556, 167.541, 48.3702, 0.28 ) }
    dend_14 { pt3dadd( -25.0424, 168.989, 48.5588, 0.83 ) }
    dend_14 { pt3dadd( -24.7009, 171.998, 48.4205, 0.28 ) }
    dend_14 { pt3dadd( -24.4931, 173.822, 48.1398, 0.55 ) }
    dend_14 { pt3dadd( -23.8328, 178.965, 46.2369, 0.28 ) }
    dend_14 { pt3dadd( -23.5727, 181.228, 45.2988, 0.83 ) }
    // Section: dend_10, id: dend_10, parent: dend_6 (entry count 31/100)
    dend_10 { pt3dclear() }
    dend_10 { pt3dadd( -16.3712, 340.481, 14.8133, 0.55 ) }
    dend_10 { pt3dadd( -16.3117, 342.712, 14.812, 0.55 ) }
    dend_10 { pt3dadd( -16.355, 345.369, 14.7806, 0.55 ) }
    dend_10 { pt3dadd( -16.4214, 347.921, 14.7483, 0.83 ) }
    dend_10 { pt3dadd( -16.4833, 349.685, 14.7393, 0.55 ) }
    dend_10 { pt3dadd( -16.5628, 351.876, 14.7565, 1.11 ) }
    dend_10 { pt3dadd( -16.6437, 355.236, 14.82, 0.55 ) }
    dend_10 { pt3dadd( -16.6687, 357.617, 14.8975, 1.11 ) }
    dend_10 { pt3dadd( -16.6305, 359.421, 14.9249, 0.83 ) }
    dend_10 { pt3dadd( -16.4731, 361.124, 14.941, 0.55 ) }
    dend_10 { pt3dadd( -16.0433, 363.359, 14.9676, 0.55 ) }
    dend_10 { pt3dadd( -15.4408, 365.293, 14.9773, 0.83 ) }
    dend_10 { pt3dadd( -14.48, 367.319, 14.9109, 0.55 ) }
    dend_10 { pt3dadd( -13.2473, 369.321, 14.7487, 0.83 ) }
    dend_10 { pt3dadd( -12.1318, 370.841, 14.5758, 0.83 ) }
    dend_10 { pt3dadd( -11.0704, 372.091, 14.3903, 0.83 ) }
    dend_10 { pt3dadd( -10.1405, 373.089, 14.2352, 1.11 ) }
    dend_10 { pt3dadd( -8.13439, 375.178, 13.8413, 0.83 ) }
    dend_10 { pt3dadd( -7.27673, 376.084, 13.669, 0.55 ) }
    dend_10 { pt3dadd( -5.91461, 377.54, 13.4454, 0.83 ) }
    dend_10 { pt3dadd( -3.94307, 379.792, 13.1144, 0.55 ) }
    dend_10 { pt3dadd( -2.69582, 381.198, 12.9184, 1.11 ) }
    dend_10 { pt3dadd( -0.821397, 383.331, 12.6695, 0.55 ) }
    dend_10 { pt3dadd( -0.179884, 384.088, 12.6197, 0.55 ) }
    dend_10 { pt3dadd( 0.688288, 385.15, 12.5592, 0.55 ) }
    dend_10 { pt3dadd( 2.59577, 387.712, 12.492, 0.55 ) }
    dend_10 { pt3dadd( 3.30666, 388.781, 12.5214, 0.28 ) }
    dend_10 { pt3dadd( 3.72894, 389.512, 12.5693, 0.55 ) }
    dend_10 { pt3dadd( 4.44155, 390.922, 12.7351, 0.28 ) }
    dend_10 { pt3dadd( 5.0031, 392.17, 12.8671, 0.83 ) }
    dend_10 { pt3dadd( 5.95195, 394.525, 13.0986, 0.55 ) }
    dend_10 { pt3dadd( 6.25205, 395.314, 13.1908, 0.83 ) }
    dend_10 { pt3dadd( 6.8602, 397.012, 13.3611, 0.55 ) }
    dend_10 { pt3dadd( 7.2529, 398.112, 13.448, 0.83 ) }
    dend_10 { pt3dadd( 8.44265, 401.461, 13.659, 0.28 ) }
    dend_10 { pt3dadd( 9.24189, 403.679, 13.7536, 0.83 ) }
    dend_10 { pt3dadd( 10.0785, 405.97, 13.8175, 0.28 ) }
    dend_10 { pt3dadd( 10.8072, 407.992, 13.8538, 0.55 ) }
    dend_10 { pt3dadd( 11.5493, 410.126, 13.8745, 0.55 ) }
    dend_10 { pt3dadd( 12.1542, 412.062, 13.8302, 0.55 ) }
    dend_10 { pt3dadd( 12.4383, 413.137, 13.7701, 0.28 ) }
    dend_10 { pt3dadd( 12.6694, 414.175, 13.6904, 0.55 ) }
    dend_10 { pt3dadd( 13.0063, 416.185, 13.5179, 0.28 ) }
    dend_10 { pt3dadd( 13.1631, 417.372, 13.3529, 0.55 ) }
    dend_10 { pt3dadd( 13.3854, 419.532, 12.9403, 0.28 ) }
    dend_10 { pt3dadd( 13.5134, 421.002, 12.6247, 0.28 ) }
    dend_10 { pt3dadd( 13.6778, 423.057, 12.1583, 0.83 ) }
    dend_10 { pt3dadd( 13.8081, 424.9, 11.7088, 0.83 ) }
    dend_10 { pt3dadd( 14.0543, 428.416, 10.8509, 0.55 ) }
    dend_10 { pt3dadd( 14.2198, 430.39, 10.4112, 0.55 ) }
    dend_10 { pt3dadd( 14.3677, 431.669, 10.1883, 0.55 ) }
    dend_10 { pt3dadd( 14.4908, 432.398, 10.0587, 0.28 ) }
    dend_10 { pt3dadd( 14.7033, 433.426, 9.88736, 0.55 ) }
    dend_10 { pt3dadd( 14.9195, 434.3, 9.78343, 0.28 ) }
    dend_10 { pt3dadd( 15.1218, 435.12, 9.67848, 1.11 ) }
    dend_10 { pt3dadd( 15.668, 437.597, 9.12821, 0.55 ) }
    dend_10 { pt3dadd( 15.968, 439.403, 8.63216, 0.55 ) }
    dend_10 { pt3dadd( 16.1674, 440.988, 8.09531, 0.28 ) }
    dend_10 { pt3dadd( 16.2464, 441.885, 7.71545, 0.83 ) }
    dend_10 { pt3dadd( 16.4437, 444.469, 6.42994, 0.55 ) }
    dend_10 { pt3dadd( 16.5688, 446.141, 5.53126, 0.83 ) }
    dend_10 { pt3dadd( 16.705, 447.986, 4.44831, 0.83 ) }
    dend_10 { pt3dadd( 16.9104, 449.856, 3.28309, 0.55 ) }
    dend_10 { pt3dadd( 17.1368, 451.332, 2.31113, 0.28 ) }
    dend_10 { pt3dadd( 17.4036, 452.772, 1.36009, 0.55 ) }
    dend_10 { pt3dadd( 17.6718, 454.096, 0.497856, 0.55 ) }
    dend_10 { pt3dadd( 18.0538, 455.835, -0.680857, 1.11 ) }
    dend_10 { pt3dadd( 18.5668, 458.124, -2.19356, 0.55 ) }
    dend_10 { pt3dadd( 18.7773, 459.116, -2.80264, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_9()
}

proc basic_shape_9() {
    dend_10 { pt3dadd( 18.9852, 460.187, -3.4784, 0.55 ) }
    dend_10 { pt3dadd( 19.3675, 462.716, -5.12486, 0.55 ) }
    dend_10 { pt3dadd( 19.5591, 463.993, -5.98242, 0.83 ) }
    dend_10 { pt3dadd( 19.925, 466.697, -7.68352, 0.28 ) }
    dend_10 { pt3dadd( 20.0181, 467.506, -8.16747, 0.55 ) }
    dend_10 { pt3dadd( 20.2908, 469.817, -9.46716, 0.28 ) }
    dend_10 { pt3dadd( 20.441, 470.946, -10.0619, 0.55 ) }
    dend_10 { pt3dadd( 20.702, 472.719, -10.8804, 0.28 ) }
    dend_10 { pt3dadd( 20.9086, 474.49, -11.6115, 0.55 ) }
    dend_10 { pt3dadd( 21.0046, 475.409, -11.9462, 0.28 ) }
    dend_10 { pt3dadd( 21.1583, 476.918, -12.4188, 0.55 ) }
    dend_10 { pt3dadd( 21.4429, 479.43, -12.9867, 0.55 ) }
    dend_10 { pt3dadd( 21.6121, 480.729, -13.292, 0.28 ) }
    dend_10 { pt3dadd( 21.7063, 481.873, -13.5888, 0.55 ) }
    // Section: dend_7, id: dend_7, parent: dend_6 (entry count 14/100)
    dend_7 { pt3dclear() }
    dend_7 { pt3dadd( -16.3712, 340.481, 14.8133, 0.55 ) }
    dend_7 { pt3dadd( -17.504, 341.543, 14.349, 0.55 ) }
    dend_7 { pt3dadd( -18.8472, 342.868, 13.8772, 1.11 ) }
    dend_7 { pt3dadd( -20.3451, 344.247, 13.4356, 0.55 ) }
    dend_7 { pt3dadd( -20.8321, 344.705, 13.2649, 0.83 ) }
    dend_7 { pt3dadd( -21.9901, 345.824, 12.8368, 0.55 ) }
    dend_7 { pt3dadd( -22.9512, 346.711, 12.487, 0.55 ) }
    dend_7 { pt3dadd( -23.6993, 347.389, 12.2136, 0.83 ) }
    dend_7 { pt3dadd( -25.9186, 349.346, 11.4067, 0.55 ) }
    dend_7 { pt3dadd( -27.5795, 350.765, 10.8739, 0.55 ) }
    dend_7 { pt3dadd( -28.1633, 351.262, 10.6679, 0.83 ) }
    dend_7 { pt3dadd( -29.7595, 352.595, 10.0867, 0.55 ) }
    dend_7 { pt3dadd( -30.0168, 352.806, 9.98773, 0.83 ) }
    dend_7 { pt3dadd( -30.8658, 353.527, 9.69278, 0.28 ) }
    dend_7 { pt3dadd( -31.0041, 353.653, 9.66201, 0.55 ) }
    dend_7 { pt3dadd( -31.8587, 354.412, 9.61513, 0.28 ) }
    dend_7 { pt3dadd( -32.3932, 354.917, 9.62046, 0.55 ) }
    dend_7 { pt3dadd( -33.0023, 355.471, 9.61408, 0.55 ) }
    dend_7 { pt3dadd( -34.6596, 356.899, 9.56117, 0.55 ) }
    dend_7 { pt3dadd( -35.7898, 357.877, 9.50161, 0.55 ) }
    dend_7 { pt3dadd( -36.6584, 358.667, 9.3811, 0.83 ) }
    dend_7 { pt3dadd( -37.8342, 359.788, 9.15133, 0.83 ) }
    dend_7 { pt3dadd( -39.3064, 361.327, 8.65872, 0.55 ) }
    dend_7 { pt3dadd( -40.3565, 362.501, 8.18562, 0.55 ) }
    dend_7 { pt3dadd( -41.4599, 363.826, 7.55967, 1.11 ) }
    dend_7 { pt3dadd( -42.639, 365.469, 6.77285, 0.55 ) }
    dend_7 { pt3dadd( -42.9428, 365.95, 6.53829, 0.83 ) }
    dend_7 { pt3dadd( -43.8496, 367.608, 5.81749, 0.28 ) }
    dend_7 { pt3dadd( -44.2536, 368.517, 5.29502, 0.55 ) }
    dend_7 { pt3dadd( -44.5001, 369.134, 4.8602, 0.28 ) }
    dend_7 { pt3dadd( -44.7141, 369.744, 4.40168, 0.83 ) }
    dend_7 { pt3dadd( -45.1055, 371.056, 3.38355, 0.28 ) }
    dend_7 { pt3dadd( -45.4256, 372.252, 2.43451, 0.83 ) }
    dend_7 { pt3dadd( -46.4804, 376.92, -1.24596, 0.55 ) }
    dend_7 { pt3dadd( -46.6566, 377.822, -1.9619, 0.55 ) }
    dend_7 { pt3dadd( -46.792, 378.644, -2.60352, 0.83 ) }
    dend_7 { pt3dadd( -46.9448, 379.696, -3.37809, 0.28 ) }
    dend_7 { pt3dadd( -47.0007, 380.212, -3.70146, 0.55 ) }
    dend_7 { pt3dadd( -47.082, 380.985, -4.08089, 0.28 ) }
    dend_7 { pt3dadd( -47.1923, 382.032, -4.29647, 0.55 ) }
    dend_7 { pt3dadd( -47.377, 383.508, -4.62575, 0.55 ) }
    dend_7 { pt3dadd( -47.4924, 384.35, -4.81154, 0.55 ) }
    dend_7 { pt3dadd( -47.6211, 385.289, -5.00195, 0.83 ) }
    dend_7 { pt3dadd( -47.8072, 386.792, -5.30919, 0.28 ) }
    dend_7 { pt3dadd( -47.9583, 388.054, -5.55276, 0.83 ) }
    dend_7 { pt3dadd( -48.0942, 389.613, -5.81477, 0.55 ) }
    dend_7 { pt3dadd( -48.1463, 390.234, -5.90029, 0.55 ) }
    dend_7 { pt3dadd( -48.2239, 391.417, -6.01064, 0.83 ) }
    dend_7 { pt3dadd( -48.2724, 392.038, -6.03619, 0.55 ) }
    dend_7 { pt3dadd( -48.3713, 393.203, -5.97854, 0.83 ) }
    dend_7 { pt3dadd( -48.535, 394.271, -5.9096, 0.28 ) }
    dend_7 { pt3dadd( -48.6288, 394.711, -5.91947, 0.28 ) }
    dend_7 { pt3dadd( -48.9579, 395.892, -6.05482, 0.28 ) }
    dend_7 { pt3dadd( -49.1133, 396.402, -6.16007, 0.83 ) }
    dend_7 { pt3dadd( -49.5072, 397.591, -6.53795, 0.55 ) }
    dend_7 { pt3dadd( -49.9671, 398.907, -7.22877, 0.83 ) }
    dend_7 { pt3dadd( -50.6801, 400.696, -8.43655, 0.28 ) }
    dend_7 { pt3dadd( -50.9334, 401.249, -8.91378, 0.55 ) }
    dend_7 { pt3dadd( -51.2385, 401.791, -9.51978, 0.28 ) }
    dend_7 { pt3dadd( -51.5019, 402.175, -9.98343, 0.83 ) }
    dend_7 { pt3dadd( -52.5418, 403.575, -11.7252, 0.83 ) }
    dend_7 { pt3dadd( -52.8926, 404.024, -12.2724, 0.83 ) }
    dend_7 { pt3dadd( -54.0346, 405.407, -13.8499, 0.83 ) }
    dend_7 { pt3dadd( -55.385, 406.999, -15.6027, 0.55 ) }
    dend_7 { pt3dadd( -56.2155, 407.937, -16.6301, 0.55 ) }
    dend_7 { pt3dadd( -56.9654, 408.786, -17.5235, 0.55 ) }
    dend_7 { pt3dadd( -57.7864, 409.721, -18.4433, 0.55 ) }
    dend_7 { pt3dadd( -58.957, 411.187, -19.7772, 0.55 ) }
    dend_7 { pt3dadd( -59.8765, 412.406, -20.7308, 0.55 ) }
    // Section: dend_45, id: dend_45, parent: dend_43 (entry count 83/100)
    dend_45 { pt3dclear() }
    dend_45 { pt3dadd( 34.4755, -40.8064, -90.6886, 0.55 ) }
    dend_45 { pt3dadd( 35.3363, -40.0838, -92.0866, 0.55 ) }
    dend_45 { pt3dadd( 36.2035, -39.2814, -93.5052, 0.83 ) }
    dend_45 { pt3dadd( 37.9694, -37.5827, -96.3913, 0.28 ) }
    dend_45 { pt3dadd( 38.8719, -36.6895, -97.8246, 0.83 ) }
    dend_45 { pt3dadd( 41.0802, -34.4974, -101.18, 0.28 ) }
    dend_45 { pt3dadd( 41.8465, -33.7416, -102.289, 0.55 ) }
    dend_45 { pt3dadd( 43.5344, -31.9648, -104.844, 0.55 ) }
    dend_45 { pt3dadd( 45.3172, -29.998, -107.395, 0.55 ) }
    dend_45 { pt3dadd( 46.8621, -28.3034, -109.463, 0.28 ) }
    dend_45 { pt3dadd( 47.5028, -27.6032, -110.276, 0.28 ) }
    dend_45 { pt3dadd( 48.156, -26.8974, -111.06, 0.55 ) }
    dend_45 { pt3dadd( 49.5769, -25.4374, -112.681, 0.28 ) }
    dend_45 { pt3dadd( 51.5656, -23.4887, -114.649, 0.55 ) }
    dend_45 { pt3dadd( 53.8782, -21.066, -117.095, 0.28 ) }
    dend_45 { pt3dadd( 54.4741, -20.4385, -117.75, 0.55 ) }
    dend_45 { pt3dadd( 56.8776, -17.7564, -120.454, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_10()
}

proc basic_shape_10() {
    dend_45 { pt3dadd( 58.4279, -15.9605, -122.241, 0.28 ) }
    dend_45 { pt3dadd( 60.1809, -13.8698, -124.366, 0.83 ) }
    dend_45 { pt3dadd( 62.8682, -10.4287, -127.913, 0.55 ) }
    dend_45 { pt3dadd( 63.5103, -9.58473, -128.8, 0.55 ) }
    dend_45 { pt3dadd( 64.7715, -7.89181, -130.74, 0.55 ) }
    dend_45 { pt3dadd( 66.028, -6.25362, -132.789, 0.83 ) }
    dend_45 { pt3dadd( 67.8913, -3.95737, -135.851, 0.28 ) }
    dend_45 { pt3dadd( 68.4799, -3.32016, -136.733, 0.55 ) }
    dend_45 { pt3dadd( 70.1445, -1.83802, -138.675, 0.28 ) }
    dend_45 { pt3dadd( 70.4554, -1.58557, -139.016, 0.55 ) }
    dend_45 { pt3dadd( 71.9538, -0.594916, -140.454, 0.55 ) }
    dend_45 { pt3dadd( 74.2554, 0.74507, -142.278, 0.28 ) }
    dend_45 { pt3dadd( 75.1205, 1.21517, -142.856, 0.55 ) }
    dend_45 { pt3dadd( 77.2328, 2.27556, -144.186, 0.28 ) }
    dend_45 { pt3dadd( 78.1087, 2.69155, -144.687, 0.55 ) }
    dend_45 { pt3dadd( 79.9924, 3.47739, -145.75, 0.28 ) }
    dend_45 { pt3dadd( 81.1743, 3.8436, -146.437, 0.55 ) }
    dend_45 { pt3dadd( 81.8295, 3.98704, -146.792, 0.55 ) }
    dend_45 { pt3dadd( 83.6864, 4.40896, -147.693, 0.28 ) }
    dend_45 { pt3dadd( 84.9413, 4.7167, -148.213, 0.28 ) }
    dend_45 { pt3dadd( 86.1857, 5.11128, -148.724, 0.55 ) }
    dend_45 { pt3dadd( 89.2287, 6.29123, -149.926, 0.28 ) }
    dend_45 { pt3dadd( 91.369, 7.3246, -150.736, 0.55 ) }
    dend_45 { pt3dadd( 93.3947, 8.4822, -151.423, 0.55 ) }
    dend_45 { pt3dadd( 95.2762, 9.76441, -151.98, 0.83 ) }
    dend_45 { pt3dadd( 98.0876, 11.9769, -152.668, 0.28 ) }
    dend_45 { pt3dadd( 99.1306, 12.9329, -152.874, 0.28 ) }
    dend_45 { pt3dadd( 100.965, 14.9174, -153.097, 0.55 ) }
    dend_45 { pt3dadd( 102.78, 17.0969, -153.216, 0.28 ) }
    dend_45 { pt3dadd( 103.568, 18.0973, -153.222, 0.55 ) }
    dend_45 { pt3dadd( 104.804, 19.7303, -153.124, 0.55 ) }
    dend_45 { pt3dadd( 106.617, 22.1637, -152.821, 0.28 ) }
    dend_45 { pt3dadd( 107.703, 23.6482, -152.626, 0.55 ) }
    dend_45 { pt3dadd( 109.339, 25.9661, -152.314, 0.28 ) }
    dend_45 { pt3dadd( 111.14, 28.6174, -151.992, 0.55 ) }
    dend_45 { pt3dadd( 112.969, 31.3726, -151.685, 0.55 ) }
    dend_45 { pt3dadd( 113.765, 32.6183, -151.553, 0.55 ) }
    dend_45 { pt3dadd( 115.296, 35.1496, -151.348, 0.55 ) }
    dend_45 { pt3dadd( 116.688, 37.5081, -151.26, 0.55 ) }
    dend_45 { pt3dadd( 118.053, 39.959, -151.239, 0.55 ) }
    dend_45 { pt3dadd( 119.321, 42.3017, -151.248, 0.28 ) }
    dend_45 { pt3dadd( 119.98, 43.5347, -151.307, 0.55 ) }
    dend_45 { pt3dadd( 122.05, 47.4197, -151.546, 0.28 ) }
    dend_45 { pt3dadd( 123.374, 50.0454, -151.792, 0.28 ) }
    dend_45 { pt3dadd( 124.004, 51.3767, -151.942, 0.55 ) }
    dend_45 { pt3dadd( 125.114, 53.7368, -152.247, 0.28 ) }
    dend_45 { pt3dadd( 126.101, 55.8668, -152.54, 0.55 ) }
    dend_45 { pt3dadd( 126.848, 57.4998, -152.751, 0.55 ) }
    dend_45 { pt3dadd( 128.863, 62.1231, -153.275, 0.28 ) }
    dend_45 { pt3dadd( 130.04, 65.0113, -153.569, 0.28 ) }
    dend_45 { pt3dadd( 130.497, 66.1936, -153.673, 0.55 ) }
    dend_45 { pt3dadd( 131.382, 68.588, -153.843, 0.55 ) }
    dend_45 { pt3dadd( 132.576, 71.8296, -153.95, 0.28 ) }
    dend_45 { pt3dadd( 133.495, 74.3379, -153.989, 0.55 ) }
    dend_45 { pt3dadd( 134.341, 76.6502, -153.94, 0.28 ) }
    dend_45 { pt3dadd( 135.002, 78.6532, -153.864, 0.55 ) }
    dend_45 { pt3dadd( 135.388, 79.8599, -153.788, 0.28 ) }
    dend_45 { pt3dadd( 135.668, 80.672, -153.663, 0.55 ) }
    dend_45 { pt3dadd( 136.505, 83.0116, -153.118, 0.28 ) }
    dend_45 { pt3dadd( 136.956, 84.1442, -152.771, 0.55 ) }
    dend_45 { pt3dadd( 138.566, 87.8552, -151.474, 0.28 ) }
    dend_45 { pt3dadd( 139.738, 90.3866, -150.538, 0.55 ) }
    dend_45 { pt3dadd( 141.346, 93.72, -149.226, 0.28 ) }
    dend_45 { pt3dadd( 142.248, 95.5054, -148.503, 0.55 ) }
    dend_45 { pt3dadd( 143.326, 97.5311, -147.644, 0.28 ) }
    dend_45 { pt3dadd( 144.32, 99.3306, -146.842, 0.55 ) }
    dend_45 { pt3dadd( 145.276, 101.019, -146.077, 0.28 ) }
    dend_45 { pt3dadd( 145.993, 102.328, -145.495, 0.55 ) }
    dend_45 { pt3dadd( 147.684, 105.614, -144.122, 0.28 ) }
    dend_45 { pt3dadd( 148.546, 107.286, -143.376, 0.55 ) }
    dend_45 { pt3dadd( 149.737, 109.692, -142.25, 0.28 ) }
    dend_45 { pt3dadd( 150.175, 110.586, -141.798, 0.55 ) }
    dend_45 { pt3dadd( 151.234, 112.866, -140.595, 0.28 ) }
    dend_45 { pt3dadd( 152.283, 115.286, -139.32, 0.55 ) }
    // Section: dend_44, id: dend_44, parent: dend_43 (entry count 74/100)
    dend_44 { pt3dclear() }
    dend_44 { pt3dadd( 34.4755, -40.8064, -90.6886, 0.28 ) }
    dend_44 { pt3dadd( 36.426, -40.8882, -92.3708, 0.28 ) }
    dend_44 { pt3dadd( 36.9929, -40.9135, -92.9108, 0.55 ) }
    dend_44 { pt3dadd( 37.7383, -40.8924, -93.7021, 0.55 ) }
    dend_44 { pt3dadd( 38.8679, -40.8184, -94.9226, 0.28 ) }
    dend_44 { pt3dadd( 39.5443, -40.7711, -95.6296, 0.55 ) }
    dend_44 { pt3dadd( 41.9313, -40.5502, -98.0238, 0.28 ) }
    dend_44 { pt3dadd( 42.5746, -40.4317, -98.6417, 0.55 ) }
    dend_44 { pt3dadd( 44.1056, -40.0481, -100.055, 0.28 ) }
    dend_44 { pt3dadd( 44.763, -39.8389, -100.63, 0.28 ) }
    dend_44 { pt3dadd( 45.8577, -39.4354, -101.498, 0.55 ) }
    dend_44 { pt3dadd( 46.8988, -39.0505, -102.237, 0.55 ) }
    dend_44 { pt3dadd( 49.5214, -38.119, -103.777, 0.28 ) }
    dend_44 { pt3dadd( 50.5214, -37.8293, -104.329, 0.55 ) }
    dend_44 { pt3dadd( 51.6804, -37.5911, -104.932, 0.55 ) }
    dend_44 { pt3dadd( 53.8278, -37.2941, -106.044, 0.28 ) }
    dend_44 { pt3dadd( 55.2559, -37.2158, -106.773, 0.55 ) }
    dend_44 { pt3dadd( 57.0961, -37.3233, -107.634, 0.28 ) }
    dend_44 { pt3dadd( 58.1129, -37.5107, -108.061, 0.55 ) }
    dend_44 { pt3dadd( 60.0226, -38.0344, -108.804, 0.28 ) }
    dend_44 { pt3dadd( 60.86, -38.3562, -109.083, 0.55 ) }
    dend_44 { pt3dadd( 61.8106, -38.823, -109.337, 0.55 ) }
    dend_44 { pt3dadd( 63.1039, -39.586, -109.536, 0.28 ) }
    dend_44 { pt3dadd( 63.8694, -40.1148, -109.587, 0.28 ) }
    dend_44 { pt3dadd( 64.726, -40.8371, -109.559, 0.55 ) }
    dend_44 { pt3dadd( 65.8438, -41.9747, -109.415, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_11()
}

proc basic_shape_11() {
    dend_44 { pt3dadd( 65.9973, -42.1537, -109.384, 0.55 ) }
    dend_44 { pt3dadd( 67.3029, -43.9118, -109.086, 0.28 ) }
    dend_44 { pt3dadd( 67.4317, -44.1238, -109.07, 0.83 ) }
    dend_44 { pt3dadd( 69.0163, -47.0583, -109.051, 0.28 ) }
    dend_44 { pt3dadd( 69.2818, -47.6321, -109.154, 0.55 ) }
    dend_44 { pt3dadd( 69.8549, -49.0806, -109.607, 0.28 ) }
    dend_44 { pt3dadd( 70.1767, -49.9932, -109.974, 0.55 ) }
    dend_44 { pt3dadd( 70.8351, -52.0976, -111.077, 0.28 ) }
    dend_44 { pt3dadd( 70.9126, -52.3654, -111.228, 0.55 ) }
    dend_44 { pt3dadd( 71.7482, -55.5014, -113.211, 0.28 ) }
    dend_44 { pt3dadd( 71.8562, -55.9333, -113.471, 0.55 ) }
    dend_44 { pt3dadd( 71.9277, -56.1957, -113.633, 0.55 ) }
    dend_44 { pt3dadd( 72.2312, -57.1491, -114.128, 0.28 ) }
    dend_44 { pt3dadd( 72.515, -57.9376, -114.462, 0.55 ) }
    dend_44 { pt3dadd( 73.0683, -59.2843, -114.937, 0.28 ) }
    dend_44 { pt3dadd( 73.3107, -59.8325, -115.108, 0.55 ) }
    dend_44 { pt3dadd( 74.8318, -63.1008, -116.25, 0.28 ) }
    dend_44 { pt3dadd( 75.1537, -63.765, -116.496, 0.55 ) }
    dend_44 { pt3dadd( 75.519, -64.5223, -116.82, 0.28 ) }
    dend_44 { pt3dadd( 76.7075, -66.9559, -117.962, 0.28 ) }
    dend_44 { pt3dadd( 77.0816, -67.7471, -118.307, 0.55 ) }
    dend_44 { pt3dadd( 78.1405, -70.0301, -119.22, 0.28 ) }
    dend_44 { pt3dadd( 78.2231, -70.2254, -119.279, 0.55 ) }
    dend_44 { pt3dadd( 79.2085, -72.7954, -119.966, 0.28 ) }
    dend_44 { pt3dadd( 79.6615, -74.0694, -120.182, 0.55 ) }
    dend_44 { pt3dadd( 80.2332, -75.7089, -120.28, 0.28 ) }
    dend_44 { pt3dadd( 80.498, -76.3886, -120.247, 0.55 ) }
    dend_44 { pt3dadd( 81.0862, -77.7723, -120.071, 0.28 ) }
    dend_44 { pt3dadd( 81.3636, -78.3753, -119.981, 0.55 ) }
    dend_44 { pt3dadd( 82.4727, -80.7085, -119.79, 0.28 ) }
    dend_44 { pt3dadd( 83.3965, -82.6144, -119.777, 0.28 ) }
    dend_44 { pt3dadd( 83.8139, -83.4339, -119.857, 0.55 ) }
    dend_44 { pt3dadd( 84.8667, -85.4216, -120.163, 0.28 ) }
    dend_44 { pt3dadd( 85.2083, -86.0201, -120.284, 0.55 ) }
    dend_44 { pt3dadd( 87.496, -89.9531, -121.164, 0.28 ) }
    dend_44 { pt3dadd( 88.3884, -91.4241, -121.567, 0.55 ) }
    dend_44 { pt3dadd( 89.7767, -93.5593, -122.217, 0.28 ) }
    dend_44 { pt3dadd( 90.056, -93.9752, -122.352, 0.55 ) }
    dend_44 { pt3dadd( 91.4584, -95.9194, -123.013, 0.28 ) }
    dend_44 { pt3dadd( 91.6638, -96.1767, -123.099, 0.55 ) }
    dend_44 { pt3dadd( 92.5625, -96.9561, -123.318, 0.28 ) }
    dend_44 { pt3dadd( 93.1741, -97.4218, -123.509, 0.55 ) }
    // Section: dend_41, id: dend_41, parent: dend_39 (entry count 42/100)
    dend_41 { pt3dclear() }
    dend_41 { pt3dadd( 40.3348, -44.0147, 11.0578, 0.55 ) }
    dend_41 { pt3dadd( 41.2056, -43.9527, 12.4547, 0.55 ) }
    dend_41 { pt3dadd( 42.9417, -43.745, 15.2976, 0.55 ) }
    dend_41 { pt3dadd( 46.1285, -43.324, 20.4175, 0.55 ) }
    dend_41 { pt3dadd( 48.5879, -43.0079, 24.2978, 0.55 ) }
    dend_41 { pt3dadd( 50.8261, -42.7835, 27.7599, 0.28 ) }
    dend_41 { pt3dadd( 52.0745, -42.6776, 29.6453, 0.83 ) }
    dend_41 { pt3dadd( 53.6325, -42.5939, 32.0271, 0.55 ) }
    dend_41 { pt3dadd( 54.8227, -42.6087, 33.7656, 0.28 ) }
    dend_41 { pt3dadd( 55.4363, -42.6312, 34.5099, 0.55 ) }
    dend_41 { pt3dadd( 56.7674, -42.6866, 35.9798, 0.28 ) }
    dend_41 { pt3dadd( 57.2151, -42.7201, 36.4668, 0.55 ) }
    dend_41 { pt3dadd( 59.2057, -43.0101, 38.3383, 0.28 ) }
    dend_41 { pt3dadd( 60.5144, -43.3877, 39.3984, 0.55 ) }
    // Section: dend_40, id: dend_40, parent: dend_39 (entry count 56/100)
    dend_40 { pt3dclear() }
    dend_40 { pt3dadd( 40.3348, -44.0147, 11.0578, 0.28 ) }
    dend_40 { pt3dadd( 48.2819, -45.4489, 7.22017, 0.28 ) }
    dend_40 { pt3dadd( 49.3677, -45.5957, 6.78912, 0.83 ) }
    dend_40 { pt3dadd( 53.0807, -45.9692, 5.51082, 0.28 ) }
    dend_40 { pt3dadd( 54.1384, -45.9848, 5.23182, 0.83 ) }
    dend_40 { pt3dadd( 56.5718, -45.8637, 4.70402, 0.28 ) }
    dend_40 { pt3dadd( 57.5884, -45.7537, 4.52533, 0.83 ) }
    dend_40 { pt3dadd( 60.4153, -44.9813, 4.6693, 0.28 ) }
    dend_40 { pt3dadd( 61.0145, -44.6745, 4.71573, 0.83 ) }
    dend_40 { pt3dadd( 63.9591, -42.514, 5.02658, 0.28 ) }
    dend_40 { pt3dadd( 64.6727, -41.9584, 5.0962, 0.28 ) }
    dend_40 { pt3dadd( 65.6822, -41.1344, 5.18894, 0.55 ) }
    dend_40 { pt3dadd( 67.4916, -39.6953, 5.7312, 0.28 ) }
    dend_40 { pt3dadd( 70.1823, -37.6198, 6.98606, 0.28 ) }
    dend_40 { pt3dadd( 70.8258, -37.1584, 7.44997, 0.83 ) }
    dend_40 { pt3dadd( 75.2452, -34.2574, 11.5738, 0.28 ) }
    dend_40 { pt3dadd( 75.9846, -33.8403, 12.3655, 0.55 ) }
    dend_40 { pt3dadd( 81.1188, -31.3383, 18.9291, 0.28 ) }
    dend_40 { pt3dadd( 81.6438, -31.1112, 19.7116, 0.83 ) }
    dend_40 { pt3dadd( 84.6155, -29.841, 24.9779, 0.28 ) }
    dend_40 { pt3dadd( 84.9867, -29.6521, 25.7451, 0.55 ) }
    dend_40 { pt3dadd( 86.0066, -29.0347, 28.2643, 0.28 ) }
    dend_40 { pt3dadd( 86.9673, -28.4161, 30.6155, 0.55 ) }
    dend_40 { pt3dadd( 88.2451, -27.5208, 33.3069, 0.28 ) }
    dend_40 { pt3dadd( 88.7728, -27.1149, 34.3466, 0.55 ) }
    dend_40 { pt3dadd( 90.514, -25.4087, 37.2454, 0.28 ) }
    dend_40 { pt3dadd( 91.1231, -24.6883, 38.3459, 0.55 ) }
    // Section: dend_38, id: dend_38, parent: dend_34 (entry count 83/100)
    dend_38 { pt3dclear() }
    dend_38 { pt3dadd( 29.9067, -57.1295, -8.99971, 0.55 ) }
    dend_38 { pt3dadd( 31.5751, -57.7684, -10.149, 0.55 ) }
    dend_38 { pt3dadd( 34.2406, -58.8149, -12.0008, 0.55 ) }
    dend_38 { pt3dadd( 36.1642, -59.603, -13.3682, 0.28 ) }
    dend_38 { pt3dadd( 37.5377, -60.1589, -14.3328, 0.55 ) }
    dend_38 { pt3dadd( 39.6982, -61.0092, -15.7828, 0.55 ) }
    dend_38 { pt3dadd( 40.6306, -61.4097, -16.3672, 0.28 ) }
    dend_38 { pt3dadd( 41.2684, -61.6955, -16.7921, 0.55 ) }
    dend_38 { pt3dadd( 41.9827, -62.0858, -17.2523, 0.28 ) }
    dend_38 { pt3dadd( 43.0322, -62.7571, -17.931, 0.55 ) }
    dend_38 { pt3dadd( 44.5928, -63.8299, -18.8304, 0.55 ) }
    dend_38 { pt3dadd( 46.8384, -65.4026, -20.0632, 0.55 ) }
    dend_38 { pt3dadd( 49.7387, -67.3697, -22.0867, 1.38 ) }
    dend_38 { pt3dadd( 51.5309, -68.5327, -23.5159, 0.83 ) }
    dend_38 { pt3dadd( 53.0322, -69.4308, -24.8052, 0.55 ) }
    dend_38 { pt3dadd( 54.8947, -70.4602, -26.5194, 0.28 ) }
    dend_38 { pt3dadd( 57.1497, -71.5921, -28.7154, 0.83 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_12()
}

proc basic_shape_12() {
    dend_38 { pt3dadd( 61.3085, -73.3378, -33.2152, 0.28 ) }
    dend_38 { pt3dadd( 61.834, -73.5596, -33.8367, 0.28 ) }
    dend_38 { pt3dadd( 63.1007, -74.1371, -35.56, 0.55 ) }
    dend_38 { pt3dadd( 63.9291, -74.5195, -36.7682, 0.55 ) }
    dend_38 { pt3dadd( 64.6537, -74.8928, -37.9314, 0.55 ) }
    dend_38 { pt3dadd( 66.6665, -76.135, -41.0808, 0.55 ) }
    dend_38 { pt3dadd( 68.6281, -77.5617, -44.0442, 0.28 ) }
    dend_38 { pt3dadd( 69.801, -78.5124, -45.9129, 0.83 ) }
    dend_38 { pt3dadd( 70.5071, -79.1253, -47.083, 0.83 ) }
    dend_38 { pt3dadd( 72.3787, -80.7525, -50.1383, 0.55 ) }
    dend_38 { pt3dadd( 73.1521, -81.4263, -51.3227, 0.83 ) }
    dend_38 { pt3dadd( 74.2829, -82.3747, -52.7335, 0.28 ) }
    dend_38 { pt3dadd( 75.1369, -83.0129, -53.6031, 0.55 ) }
    dend_38 { pt3dadd( 75.6724, -83.442, -54.0628, 0.28 ) }
    dend_38 { pt3dadd( 75.9387, -83.6785, -54.257, 0.55 ) }
    dend_38 { pt3dadd( 77.2624, -84.7982, -55.0064, 0.28 ) }
    dend_38 { pt3dadd( 78.6937, -86.0479, -55.9471, 0.28 ) }
    dend_38 { pt3dadd( 79.7956, -87.0303, -56.6641, 0.83 ) }
    dend_38 { pt3dadd( 80.7153, -87.9557, -57.3108, 0.55 ) }
    dend_38 { pt3dadd( 82.9959, -90.4257, -58.9717, 0.28 ) }
    dend_38 { pt3dadd( 83.6485, -91.2086, -59.5186, 0.83 ) }
    dend_38 { pt3dadd( 85.674, -93.869, -61.3777, 0.28 ) }
    dend_38 { pt3dadd( 86.4042, -95.0042, -62.1269, 0.83 ) }
    dend_38 { pt3dadd( 87.648, -97.0689, -63.3749, 0.28 ) }
    dend_38 { pt3dadd( 87.9973, -97.66, -63.7386, 0.83 ) }
    dend_38 { pt3dadd( 89.4196, -100.208, -65.2529, 0.28 ) }
    dend_38 { pt3dadd( 90.2771, -101.779, -66.1541, 0.28 ) }
    dend_38 { pt3dadd( 91.0752, -103.125, -66.8331, 0.55 ) }
    dend_38 { pt3dadd( 92.0122, -104.586, -67.6586, 0.55 ) }
    dend_38 { pt3dadd( 93.6047, -106.806, -68.9775, 0.55 ) }
    dend_38 { pt3dadd( 94.4741, -107.935, -69.6582, 0.28 ) }
    dend_38 { pt3dadd( 94.9447, -108.513, -70.0249, 0.55 ) }
    dend_38 { pt3dadd( 96.4806, -110.358, -71.3823, 0.28 ) }
    dend_38 { pt3dadd( 97.6512, -111.648, -72.4049, 0.55 ) }
    dend_38 { pt3dadd( 98.865, -113.036, -73.517, 0.28 ) }
    dend_38 { pt3dadd( 99.2339, -113.454, -73.8218, 0.83 ) }
    dend_38 { pt3dadd( 100.808, -115.211, -75.1995, 0.28 ) }
    dend_38 { pt3dadd( 101.177, -115.594, -75.5223, 0.55 ) }
    dend_38 { pt3dadd( 102.138, -116.491, -76.3744, 0.55 ) }
    dend_38 { pt3dadd( 103.813, -117.976, -77.5885, 0.28 ) }
    dend_38 { pt3dadd( 103.88, -118.032, -77.6377, 0.55 ) }
    dend_38 { pt3dadd( 105.367, -119.18, -78.8456, 0.28 ) }
    dend_38 { pt3dadd( 105.959, -119.597, -79.3263, 0.55 ) }
    dend_38 { pt3dadd( 107.52, -120.724, -80.7612, 0.28 ) }
    dend_38 { pt3dadd( 108.534, -121.435, -81.7698, 0.55 ) }
    dend_38 { pt3dadd( 110.358, -122.616, -83.6572, 0.55 ) }
    dend_38 { pt3dadd( 111.926, -123.64, -85.3631, 0.28 ) }
    dend_38 { pt3dadd( 112.876, -124.294, -86.4347, 0.83 ) }
    dend_38 { pt3dadd( 114.501, -125.465, -88.2964, 0.28 ) }
    dend_38 { pt3dadd( 114.863, -125.695, -88.656, 0.55 ) }
    dend_38 { pt3dadd( 116.249, -126.445, -89.8813, 0.28 ) }
    dend_38 { pt3dadd( 116.747, -126.664, -90.1819, 0.55 ) }
    dend_38 { pt3dadd( 119.207, -127.544, -91.3413, 0.28 ) }
    dend_38 { pt3dadd( 120.007, -127.777, -91.6659, 0.83 ) }
    dend_38 { pt3dadd( 123.207, -128.477, -92.5776, 0.28 ) }
    dend_38 { pt3dadd( 123.811, -128.585, -92.7166, 0.55 ) }
    dend_38 { pt3dadd( 126.325, -128.826, -93.0542, 0.28 ) }
    dend_38 { pt3dadd( 128.495, -128.847, -93.2743, 0.55 ) }
    // Section: dend_35, id: dend_35, parent: dend_34 (entry count 58/100)
    dend_35 { pt3dclear() }
    dend_35 { pt3dadd( 29.9067, -57.1295, -8.99971, 0.55 ) }
    dend_35 { pt3dadd( 30.1112, -58.4309, -11.2194, 0.55 ) }
    dend_35 { pt3dadd( 30.3725, -61.2481, -15.8735, 0.55 ) }
    dend_35 { pt3dadd( 30.654, -63.6666, -19.819, 0.28 ) }
    dend_35 { pt3dadd( 30.8929, -65.3805, -22.7084, 0.83 ) }
    dend_35 { pt3dadd( 31.4428, -68.0794, -27.4087, 0.28 ) }
    dend_35 { pt3dadd( 31.5722, -68.6809, -28.5443, 0.55 ) }
    dend_35 { pt3dadd( 31.6581, -69.1695, -29.5717, 0.55 ) }
    dend_35 { pt3dadd( 31.913, -70.0099, -31.7082, 0.55 ) }
    dend_35 { pt3dadd( 32.4059, -71.2034, -34.9909, 0.55 ) }
    dend_35 { pt3dadd( 32.698, -71.8228, -36.8005, 0.55 ) }
    dend_35 { pt3dadd( 33.8284, -73.3659, -41.6925, 0.83 ) }
    dend_35 { pt3dadd( 34.5527, -74.2556, -44.7163, 0.28 ) }
    dend_35 { pt3dadd( 34.8174, -74.5871, -45.9635, 0.55 ) }
    // Section: dend_20, id: dend_20, parent: dend_18 (entry count 72/100)
    dend_20 { pt3dclear() }
    dend_20 { pt3dadd( -67.1768, -15.1684, -116.634, 0.28 ) }
    dend_20 { pt3dadd( -68.5217, -15.3445, -116.435, 0.28 ) }
    dend_20 { pt3dadd( -70.2689, -15.5733, -116.176, 0.55 ) }
    // Section: dend_19, id: dend_19, parent: dend_18 (entry count 75/100)
    dend_19 { pt3dclear() }
    dend_19 { pt3dadd( -67.1768, -15.1684, -116.634, 0.28 ) }
    dend_19 { pt3dadd( -69.5162, -17.9419, -118.792, 0.28 ) }
    dend_19 { pt3dadd( -70.2001, -18.7528, -119.423, 0.55 ) }
    dend_19 { pt3dadd( -72.3398, -21.2898, -121.397, 0.28 ) }
    dend_19 { pt3dadd( -73.2868, -22.4128, -122.271, 0.83 ) }
    dend_19 { pt3dadd( -77.4317, -27.327, -126.095, 0.28 ) }
    dend_19 { pt3dadd( -78.1129, -28.1347, -126.724, 0.83 ) }
    // Section: dend_9, id: dend_9, parent: dend_7 (entry count 82/100)
    dend_9 { pt3dclear() }
    dend_9 { pt3dadd( -59.8765, 412.406, -20.7308, 0.55 ) }
    dend_9 { pt3dadd( -60.7803, 413.202, -21.834, 0.55 ) }
    dend_9 { pt3dadd( -61.7379, 414.155, -22.9574, 0.28 ) }
    dend_9 { pt3dadd( -62.6927, 415.105, -24.0777, 0.55 ) }
    dend_9 { pt3dadd( -65.4538, 417.851, -27.3169, 0.28 ) }
    dend_9 { pt3dadd( -65.7711, 418.167, -27.6893, 0.55 ) }
    dend_9 { pt3dadd( -67.8185, 420.204, -30.0912, 0.28 ) }
    dend_9 { pt3dadd( -68.8293, 421.074, -31.4466, 0.83 ) }
    // Section: dend_8, id: dend_8, parent: dend_7 (entry count 90/100)
    dend_8 { pt3dclear() }
    dend_8 { pt3dadd( -59.8765, 412.406, -20.7308, 0.28 ) }
    dend_8 { pt3dadd( -61.9532, 411.59, -20.1172, 0.28 ) }
    dend_8 { pt3dadd( -63.109, 411.136, -19.7757, 0.83 ) }
    // Section: dend_47, id: dend_47, parent: dend_45 (entry count 93/100)
    dend_47 { pt3dclear() }
    dend_47 { pt3dadd( 152.283, 115.286, -139.32, 0.28 ) }
    dend_47 { pt3dadd( 149.038, 118.194, -137.964, 0.28 ) }
    dend_47 { pt3dadd( 147.938, 119.18, -137.504, 0.55 ) }
    // Section: dend_46, id: dend_46, parent: dend_45 (entry count 96/100)
    dend_46 { pt3dclear() }
    dend_46 { pt3dadd( 152.283, 115.286, -139.32, 0.28 ) }
    dend_46 { pt3dadd( 152.511, 116.47, -139.121, 0.28 ) }
    dend_46 { pt3dadd( 152.922, 118.7, -138.717, 0.28 ) }
    dend_46 { pt3dadd( 153.019, 119.3, -138.581, 0.55 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_13()
}

proc basic_shape_13() {
    dend_46 { pt3dadd( 153.315, 121.491, -137.967, 0.28 ) }
    dend_46 { pt3dadd( 153.486, 122.75, -137.615, 0.55 ) }
    dend_46 { pt3dadd( 153.706, 124.376, -137.159, 0.28 ) }
    dend_46 { pt3dadd( 153.803, 125.234, -136.87, 0.55 ) }
    dend_46 { pt3dadd( 153.921, 126.597, -136.311, 0.28 ) }
    dend_46 { pt3dadd( 153.982, 127.702, -135.838, 0.55 ) }
    // Section: dend_37, id: dend_37, parent: dend_35 (entry count 6/100)
    dend_37 { pt3dclear() }
    dend_37 { pt3dadd( 34.8174, -74.5871, -45.9635, 0.55 ) }
    dend_37 { pt3dadd( 34.1268, -75.1064, -46.7976, 0.55 ) }
    dend_37 { pt3dadd( 33.811, -75.3642, -47.2012, 0.28 ) }
    dend_37 { pt3dadd( 33.5965, -75.5238, -47.4697, 0.83 ) }
    dend_37 { pt3dadd( 32.2555, -76.4462, -49.0289, 0.28 ) }
    dend_37 { pt3dadd( 31.8771, -76.7178, -49.4634, 0.83 ) }
    dend_37 { pt3dadd( 30.2384, -77.9334, -51.2894, 0.28 ) }
    dend_37 { pt3dadd( 30.0102, -78.1011, -51.5402, 0.83 ) }
    dend_37 { pt3dadd( 28.5854, -79.0489, -53.0095, 0.28 ) }
    dend_37 { pt3dadd( 28.1609, -79.3137, -53.4015, 0.55 ) }
    dend_37 { pt3dadd( 26.2796, -80.3787, -54.9519, 0.28 ) }
    dend_37 { pt3dadd( 25.8954, -80.5815, -55.2652, 0.28 ) }
    dend_37 { pt3dadd( 25.0661, -80.9847, -55.936, 0.83 ) }
    dend_37 { pt3dadd( 22.6205, -82.1109, -57.9331, 0.28 ) }
    dend_37 { pt3dadd( 21.9501, -82.409, -58.5019, 0.55 ) }
    dend_37 { pt3dadd( 20.6386, -82.9678, -59.6449, 0.55 ) }
    dend_37 { pt3dadd( 19.6631, -83.3502, -60.4862, 0.55 ) }
    dend_37 { pt3dadd( 17.9853, -84.0268, -61.9479, 0.28 ) }
    dend_37 { pt3dadd( 17.5191, -84.2406, -62.3604, 0.83 ) }
    dend_37 { pt3dadd( 15.9531, -85.0391, -63.7095, 0.28 ) }
    dend_37 { pt3dadd( 15.6507, -85.2117, -63.9601, 0.55 ) }
    dend_37 { pt3dadd( 14.3073, -86.0692, -64.9035, 0.28 ) }
    dend_37 { pt3dadd( 13.9007, -86.3212, -65.1398, 0.55 ) }
    dend_37 { pt3dadd( 12.3415, -87.3299, -65.9106, 0.28 ) }
    dend_37 { pt3dadd( 12.2013, -87.4149, -65.9778, 0.83 ) }
    dend_37 { pt3dadd( 11.3682, -87.8927, -66.2996, 0.28 ) }
    dend_37 { pt3dadd( 10.6927, -88.2691, -66.5144, 0.55 ) }
    dend_37 { pt3dadd( 8.63064, -89.3567, -67.1111, 0.28 ) }
    dend_37 { pt3dadd( 8.01226, -89.6904, -67.2616, 0.83 ) }
    dend_37 { pt3dadd( 5.34622, -91.1612, -67.7583, 0.28 ) }
    dend_37 { pt3dadd( 4.20151, -91.8103, -67.952, 0.55 ) }
    dend_37 { pt3dadd( 2.69654, -92.7011, -68.2152, 0.55 ) }
    dend_37 { pt3dadd( 1.02706, -93.7555, -68.4719, 0.28 ) }
    dend_37 { pt3dadd( -0.362991, -94.7065, -68.6146, 0.55 ) }
    dend_37 { pt3dadd( -1.36225, -95.4092, -68.7615, 0.28 ) }
    dend_37 { pt3dadd( -1.50836, -95.5198, -68.7862, 0.55 ) }
    dend_37 { pt3dadd( -2.40708, -96.1645, -68.9864, 0.28 ) }
    dend_37 { pt3dadd( -3.1107, -96.621, -69.1546, 0.55 ) }
    dend_37 { pt3dadd( -3.89103, -97.0674, -69.3539, 0.55 ) }
    dend_37 { pt3dadd( -5.24746, -97.7056, -69.767, 0.28 ) }
    dend_37 { pt3dadd( -5.82984, -97.9429, -69.9323, 0.55 ) }
    dend_37 { pt3dadd( -6.66614, -98.2661, -70.1626, 0.28 ) }
    dend_37 { pt3dadd( -7.19893, -98.4534, -70.2915, 0.55 ) }
    dend_37 { pt3dadd( -8.64276, -98.9301, -70.6429, 0.28 ) }
    dend_37 { pt3dadd( -9.12914, -99.0789, -70.779, 0.55 ) }
    dend_37 { pt3dadd( -10.3487, -99.4703, -71.1223, 0.28 ) }
    dend_37 { pt3dadd( -11.1321, -99.7457, -71.4285, 0.55 ) }
    // Section: dend_36, id: dend_36, parent: dend_35 (entry count 53/100)
    dend_36 { pt3dclear() }
    dend_36 { pt3dadd( 34.8174, -74.5871, -45.9635, 0.28 ) }
    dend_36 { pt3dadd( 36.6238, -74.6779, -47.2011, 0.28 ) }
    dend_36 { pt3dadd( 36.8724, -74.7065, -47.404, 0.83 ) }
    dend_36 { pt3dadd( 38.0145, -74.9132, -48.3404, 0.28 ) }
    dend_36 { pt3dadd( 38.4104, -74.9732, -48.6721, 0.28 ) }
    dend_36 { pt3dadd( 38.8908, -75.0783, -49.0985, 0.55 ) }
    dend_36 { pt3dadd( 39.6682, -75.3095, -49.9663, 0.28 ) }
    dend_36 { pt3dadd( 40.4212, -75.634, -51.023, 0.55 ) }
    dend_36 { pt3dadd( 40.8582, -75.8727, -51.6569, 0.55 ) }
    dend_36 { pt3dadd( 41.354, -76.2353, -52.5167, 0.55 ) }
    dend_36 { pt3dadd( 42.1536, -76.9107, -54.1094, 0.83 ) }
    dend_36 { pt3dadd( 43.0319, -77.7644, -56.1244, 0.28 ) }
    dend_36 { pt3dadd( 43.3167, -78.0715, -56.8432, 0.28 ) }
    dend_36 { pt3dadd( 43.4452, -78.2568, -57.2386, 0.83 ) }
    dend_36 { pt3dadd( 44.2471, -79.55, -59.9424, 0.28 ) }
    dend_36 { pt3dadd( 44.4494, -79.9612, -60.7402, 0.83 ) }
    dend_36 { pt3dadd( 44.6003, -80.3465, -61.4368, 0.83 ) }
    dend_36 { pt3dadd( 44.8727, -81.0959, -62.6481, 0.83 ) }
    dend_36 { pt3dadd( 45.3158, -82.4424, -64.7229, 0.55 ) }
    dend_36 { pt3dadd( 45.6907, -83.7482, -66.504, 0.55 ) }
    dend_36 { pt3dadd( 46.1631, -85.5969, -68.6316, 0.55 ) }
    dend_36 { pt3dadd( 46.3559, -86.6158, -69.6493, 0.55 ) }
    dend_36 { pt3dadd( 46.4944, -87.6182, -70.5088, 0.28 ) }
    dend_36 { pt3dadd( 46.5092, -87.7509, -70.5998, 0.55 ) }
    dend_36 { pt3dadd( 46.6912, -89.7771, -71.6368, 0.28 ) }
    dend_36 { pt3dadd( 46.7435, -90.548, -71.9285, 0.55 ) }
    dend_36 { pt3dadd( 46.9387, -92.8204, -72.6283, 0.28 ) }
    dend_36 { pt3dadd( 47.0944, -94.0984, -72.974, 0.55 ) }
    dend_36 { pt3dadd( 47.3166, -95.4664, -73.3177, 0.28 ) }
    dend_36 { pt3dadd( 47.5538, -96.4792, -73.536, 0.55 ) }
    dend_36 { pt3dadd( 48.2605, -98.8106, -73.9408, 0.28 ) }
    dend_36 { pt3dadd( 48.4711, -99.3622, -74.015, 1.11 ) }
    dend_36 { pt3dadd( 49.8208, -102.076, -74.2845, 0.28 ) }
    dend_36 { pt3dadd( 50.6113, -103.371, -74.377, 0.55 ) }
    dend_36 { pt3dadd( 51.5455, -104.543, -74.3203, 0.28 ) }
    dend_36 { pt3dadd( 51.9136, -104.894, -74.2495, 0.55 ) }
    dend_36 { pt3dadd( 53.0047, -105.73, -73.9227, 0.28 ) }
    dend_36 { pt3dadd( 53.7891, -106.242, -73.6365, 0.28 ) }
    dend_36 { pt3dadd( 55.4146, -107.086, -72.9379, 0.55 ) }
    dend_36 { pt3dadd( 57.8618, -108.328, -71.8054, 0.55 ) }
    dend_36 { pt3dadd( 58.8217, -108.812, -71.3496, 0.28 ) }
    dend_36 { pt3dadd( 59.0191, -108.902, -71.2643, 0.55 ) }
    dend_36 { pt3dadd( 60.4449, -109.49, -70.7375, 0.28 ) }
    dend_36 { pt3dadd( 60.6898, -109.588, -70.6581, 0.55 ) }
    dend_36 { pt3dadd( 61.7942, -109.972, -70.4339, 0.28 ) }
    dend_36 { pt3dadd( 62.2759, -110.114, -70.4042, 0.55 ) }
    dend_36 { pt3dadd( 64.2336, -110.456, -70.2605, 0.28 ) }

    // Procedure too big; splitting & calling another procedure...
    basic_shape_14()
}

proc basic_shape_14() {
    dend_36 { pt3dadd( 64.8766, -110.484, -70.1648, 0.55 ) }
    dend_36 { pt3dadd( 65.8992, -110.408, -70.0297, 0.28 ) }
    dend_36 { pt3dadd( 66.2471, -110.336, -69.9445, 0.55 ) }
    dend_36 { pt3dadd( 67.2798, -110.006, -69.6186, 0.28 ) }
    dend_36 { pt3dadd( 68.1868, -109.68, -69.291, 0.55 ) }
    dend_36 { pt3dadd( 69.9025, -108.956, -68.4793, 0.28 ) }
    dend_36 { pt3dadd( 71.2283, -108.337, -67.7834, 0.55 ) }
    dend_36 { pt3dadd( 74.0558, -106.837, -66.1923, 0.28 ) }
    dend_36 { pt3dadd( 74.4696, -106.608, -65.9437, 0.55 ) }

}


proc subsets() { local i

    // Group: {name=ModelViewParmSubset_1, groups=[], sections=[soma_0, axon_0, axon_1]}
    ModelViewParmSubset_1 = new SectionList()
    soma_0 ModelViewParmSubset_1.append()
    axon_0 ModelViewParmSubset_1.append()
    axon_1 ModelViewParmSubset_1.append()

    // Group: {name=ModelViewParmSubset_2, groups=[], sections=[dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_2 = new SectionList()
    dend_26 ModelViewParmSubset_2.append()
    dend_11 ModelViewParmSubset_2.append()
    dend_0 ModelViewParmSubset_2.append()
    dend_32 ModelViewParmSubset_2.append()
    dend_27 ModelViewParmSubset_2.append()
    dend_21 ModelViewParmSubset_2.append()
    dend_12 ModelViewParmSubset_2.append()
    dend_4 ModelViewParmSubset_2.append()
    dend_1 ModelViewParmSubset_2.append()
    dend_42 ModelViewParmSubset_2.append()
    dend_33 ModelViewParmSubset_2.append()
    dend_31 ModelViewParmSubset_2.append()
    dend_28 ModelViewParmSubset_2.append()
    dend_23 ModelViewParmSubset_2.append()
    dend_22 ModelViewParmSubset_2.append()
    dend_16 ModelViewParmSubset_2.append()
    dend_13 ModelViewParmSubset_2.append()
    dend_6 ModelViewParmSubset_2.append()
    dend_5 ModelViewParmSubset_2.append()
    dend_3 ModelViewParmSubset_2.append()
    dend_2 ModelViewParmSubset_2.append()
    dend_48 ModelViewParmSubset_2.append()
    dend_43 ModelViewParmSubset_2.append()
    dend_39 ModelViewParmSubset_2.append()
    dend_34 ModelViewParmSubset_2.append()
    dend_30 ModelViewParmSubset_2.append()
    dend_29 ModelViewParmSubset_2.append()
    dend_25 ModelViewParmSubset_2.append()
    dend_24 ModelViewParmSubset_2.append()
    dend_18 ModelViewParmSubset_2.append()
    dend_17 ModelViewParmSubset_2.append()
    dend_15 ModelViewParmSubset_2.append()
    dend_14 ModelViewParmSubset_2.append()
    dend_10 ModelViewParmSubset_2.append()
    dend_7 ModelViewParmSubset_2.append()
    dend_45 ModelViewParmSubset_2.append()
    dend_44 ModelViewParmSubset_2.append()
    dend_41 ModelViewParmSubset_2.append()
    dend_40 ModelViewParmSubset_2.append()
    dend_38 ModelViewParmSubset_2.append()
    dend_35 ModelViewParmSubset_2.append()
    dend_20 ModelViewParmSubset_2.append()
    dend_19 ModelViewParmSubset_2.append()
    dend_9 ModelViewParmSubset_2.append()
    dend_8 ModelViewParmSubset_2.append()
    dend_47 ModelViewParmSubset_2.append()
    dend_46 ModelViewParmSubset_2.append()
    dend_37 ModelViewParmSubset_2.append()
    dend_36 ModelViewParmSubset_2.append()

    // Group: {name=ModelViewParmSubset_3, groups=[], sections=[axon_0, axon_1]}
    ModelViewParmSubset_3 = new SectionList()
    axon_0 ModelViewParmSubset_3.append()
    axon_1 ModelViewParmSubset_3.append()

    // Group: {name=ModelViewParmSubset_4, groups=[], sections=[soma_0, dend_26, dend_11, dend_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_4 = new SectionList()
    soma_0 ModelViewParmSubset_4.append()
    dend_26 ModelViewParmSubset_4.append()
    dend_11 ModelViewParmSubset_4.append()
    dend_0 ModelViewParmSubset_4.append()
    dend_32 ModelViewParmSubset_4.append()
    dend_27 ModelViewParmSubset_4.append()
    dend_21 ModelViewParmSubset_4.append()
    dend_12 ModelViewParmSubset_4.append()
    dend_4 ModelViewParmSubset_4.append()
    dend_1 ModelViewParmSubset_4.append()
    dend_42 ModelViewParmSubset_4.append()
    dend_33 ModelViewParmSubset_4.append()
    dend_31 ModelViewParmSubset_4.append()
    dend_28 ModelViewParmSubset_4.append()
    dend_23 ModelViewParmSubset_4.append()
    dend_22 ModelViewParmSubset_4.append()
    dend_16 ModelViewParmSubset_4.append()
    dend_13 ModelViewParmSubset_4.append()
    dend_6 ModelViewParmSubset_4.append()
    dend_5 ModelViewParmSubset_4.append()
    dend_3 ModelViewParmSubset_4.append()
    dend_2 ModelViewParmSubset_4.append()
    dend_48 ModelViewParmSubset_4.append()
    dend_43 ModelViewParmSubset_4.append()
    dend_39 ModelViewParmSubset_4.append()
    dend_34 ModelViewParmSubset_4.append()
    dend_30 ModelViewParmSubset_4.append()
    dend_29 ModelViewParmSubset_4.append()
    dend_25 ModelViewParmSubset_4.append()
    dend_24 ModelViewParmSubset_4.append()
    dend_18 ModelViewParmSubset_4.append()
    dend_17 ModelViewParmSubset_4.append()
    dend_15 ModelViewParmSubset_4.append()
    dend_14 ModelViewParmSubset_4.append()
    dend_10 ModelViewParmSubset_4.append()
    dend_7 ModelViewParmSubset_4.append()
    dend_45 ModelViewParmSubset_4.append()
    dend_44 ModelViewParmSubset_4.append()
    dend_41 ModelViewParmSubset_4.append()
    dend_40 ModelViewParmSubset_4.append()
    dend_38 ModelViewParmSubset_4.append()
    dend_35 ModelViewParmSubset_4.append()
    dend_20 ModelViewParmSubset_4.append()
    dend_19 ModelViewParmSubset_4.append()
    dend_9 ModelViewParmSubset_4.append()
    dend_8 ModelViewParmSubset_4.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_0()
}

proc subsets_0() {
    dend_47 ModelViewParmSubset_4.append()
    dend_46 ModelViewParmSubset_4.append()
    dend_37 ModelViewParmSubset_4.append()
    dend_36 ModelViewParmSubset_4.append()

    // Group: {name=ModelViewParmSubset_5, groups=[], sections=[dend_26, dend_11, dend_0, axon_0, dend_32, dend_27, dend_21, dend_12, dend_4, dend_1, axon_1, dend_42, dend_33, dend_31, dend_28, dend_23, dend_22, dend_16, dend_13, dend_6, dend_5, dend_3, dend_2, dend_48, dend_43, dend_39, dend_34, dend_30, dend_29, dend_25, dend_24, dend_18, dend_17, dend_15, dend_14, dend_10, dend_7, dend_45, dend_44, dend_41, dend_40, dend_38, dend_35, dend_20, dend_19, dend_9, dend_8, dend_47, dend_46, dend_37, dend_36]}
    ModelViewParmSubset_5 = new SectionList()
    dend_26 ModelViewParmSubset_5.append()
    dend_11 ModelViewParmSubset_5.append()
    dend_0 ModelViewParmSubset_5.append()
    axon_0 ModelViewParmSubset_5.append()
    dend_32 ModelViewParmSubset_5.append()
    dend_27 ModelViewParmSubset_5.append()
    dend_21 ModelViewParmSubset_5.append()
    dend_12 ModelViewParmSubset_5.append()
    dend_4 ModelViewParmSubset_5.append()
    dend_1 ModelViewParmSubset_5.append()
    axon_1 ModelViewParmSubset_5.append()
    dend_42 ModelViewParmSubset_5.append()
    dend_33 ModelViewParmSubset_5.append()
    dend_31 ModelViewParmSubset_5.append()
    dend_28 ModelViewParmSubset_5.append()
    dend_23 ModelViewParmSubset_5.append()
    dend_22 ModelViewParmSubset_5.append()
    dend_16 ModelViewParmSubset_5.append()
    dend_13 ModelViewParmSubset_5.append()
    dend_6 ModelViewParmSubset_5.append()
    dend_5 ModelViewParmSubset_5.append()
    dend_3 ModelViewParmSubset_5.append()
    dend_2 ModelViewParmSubset_5.append()
    dend_48 ModelViewParmSubset_5.append()
    dend_43 ModelViewParmSubset_5.append()
    dend_39 ModelViewParmSubset_5.append()
    dend_34 ModelViewParmSubset_5.append()
    dend_30 ModelViewParmSubset_5.append()
    dend_29 ModelViewParmSubset_5.append()
    dend_25 ModelViewParmSubset_5.append()
    dend_24 ModelViewParmSubset_5.append()
    dend_18 ModelViewParmSubset_5.append()
    dend_17 ModelViewParmSubset_5.append()
    dend_15 ModelViewParmSubset_5.append()
    dend_14 ModelViewParmSubset_5.append()
    dend_10 ModelViewParmSubset_5.append()
    dend_7 ModelViewParmSubset_5.append()
    dend_45 ModelViewParmSubset_5.append()
    dend_44 ModelViewParmSubset_5.append()
    dend_41 ModelViewParmSubset_5.append()
    dend_40 ModelViewParmSubset_5.append()
    dend_38 ModelViewParmSubset_5.append()
    dend_35 ModelViewParmSubset_5.append()
    dend_20 ModelViewParmSubset_5.append()
    dend_19 ModelViewParmSubset_5.append()
    dend_9 ModelViewParmSubset_5.append()
    dend_8 ModelViewParmSubset_5.append()
    dend_47 ModelViewParmSubset_5.append()
    dend_46 ModelViewParmSubset_5.append()
    dend_37 ModelViewParmSubset_5.append()
    dend_36 ModelViewParmSubset_5.append()

    // Group: {name=OneSecGrp_SectionRef_1, groups=[], sections=[soma_0]}
    OneSecGrp_SectionRef_1 = new SectionList()
    soma_0 OneSecGrp_SectionRef_1.append()

    // Group: {name=OneSecGrp_SectionRef_8, groups=[], sections=[dend_21]}
    OneSecGrp_SectionRef_8 = new SectionList()
    dend_21 OneSecGrp_SectionRef_8.append()

    // Group: {name=OneSecGrp_SectionRef_13, groups=[], sections=[dend_42]}
    OneSecGrp_SectionRef_13 = new SectionList()
    dend_42 OneSecGrp_SectionRef_13.append()

    // Group: {name=OneSecGrp_SectionRef_20, groups=[], sections=[dend_13]}
    OneSecGrp_SectionRef_20 = new SectionList()
    dend_13 OneSecGrp_SectionRef_20.append()

    // Group: {name=OneSecGrp_SectionRef_21, groups=[], sections=[dend_6]}
    OneSecGrp_SectionRef_21 = new SectionList()
    dend_6 OneSecGrp_SectionRef_21.append()

    // Group: {name=OneSecGrp_SectionRef_22, groups=[], sections=[dend_5]}
    OneSecGrp_SectionRef_22 = new SectionList()
    dend_5 OneSecGrp_SectionRef_22.append()

    // Group: {name=OneSecGrp_SectionRef_23, groups=[], sections=[dend_3]}
    OneSecGrp_SectionRef_23 = new SectionList()
    dend_3 OneSecGrp_SectionRef_23.append()

    // Group: {name=OneSecGrp_SectionRef_25, groups=[], sections=[dend_48]}
    OneSecGrp_SectionRef_25 = new SectionList()
    dend_48 OneSecGrp_SectionRef_25.append()

    // Group: {name=OneSecGrp_SectionRef_26, groups=[], sections=[dend_43]}
    OneSecGrp_SectionRef_26 = new SectionList()
    dend_43 OneSecGrp_SectionRef_26.append()

    // Group: {name=OneSecGrp_SectionRef_29, groups=[], sections=[dend_30]}
    OneSecGrp_SectionRef_29 = new SectionList()
    dend_30 OneSecGrp_SectionRef_29.append()

    // Group: {name=OneSecGrp_SectionRef_30, groups=[], sections=[dend_29]}
    OneSecGrp_SectionRef_30 = new SectionList()
    dend_29 OneSecGrp_SectionRef_30.append()

    // Group: {name=OneSecGrp_SectionRef_32, groups=[], sections=[dend_24]}
    OneSecGrp_SectionRef_32 = new SectionList()
    dend_24 OneSecGrp_SectionRef_32.append()

    // Group: {name=OneSecGrp_SectionRef_33, groups=[], sections=[dend_18]}
    OneSecGrp_SectionRef_33 = new SectionList()
    dend_18 OneSecGrp_SectionRef_33.append()

    // Group: {name=OneSecGrp_SectionRef_34, groups=[], sections=[dend_17]}
    OneSecGrp_SectionRef_34 = new SectionList()
    dend_17 OneSecGrp_SectionRef_34.append()

    // Group: {name=OneSecGrp_SectionRef_35, groups=[], sections=[dend_15]}
    OneSecGrp_SectionRef_35 = new SectionList()
    dend_15 OneSecGrp_SectionRef_35.append()

    // Group: {name=OneSecGrp_SectionRef_36, groups=[], sections=[dend_14]}
    OneSecGrp_SectionRef_36 = new SectionList()
    dend_14 OneSecGrp_SectionRef_36.append()

    // Group: {name=OneSecGrp_SectionRef_37, groups=[], sections=[dend_10]}
    OneSecGrp_SectionRef_37 = new SectionList()
    dend_10 OneSecGrp_SectionRef_37.append()

    // Group: {name=OneSecGrp_SectionRef_38, groups=[], sections=[dend_7]}
    OneSecGrp_SectionRef_38 = new SectionList()
    dend_7 OneSecGrp_SectionRef_38.append()

    // Group: {name=OneSecGrp_SectionRef_39, groups=[], sections=[dend_45]}
    OneSecGrp_SectionRef_39 = new SectionList()
    dend_45 OneSecGrp_SectionRef_39.append()

    // Group: {name=OneSecGrp_SectionRef_40, groups=[], sections=[dend_44]}
    OneSecGrp_SectionRef_40 = new SectionList()
    dend_44 OneSecGrp_SectionRef_40.append()

    // Group: {name=OneSecGrp_SectionRef_42, groups=[], sections=[dend_40]}
    OneSecGrp_SectionRef_42 = new SectionList()
    dend_40 OneSecGrp_SectionRef_42.append()

    // Group: {name=OneSecGrp_SectionRef_43, groups=[], sections=[dend_38]}
    OneSecGrp_SectionRef_43 = new SectionList()
    dend_38 OneSecGrp_SectionRef_43.append()

    // Group: {name=OneSecGrp_SectionRef_44, groups=[], sections=[dend_35]}
    OneSecGrp_SectionRef_44 = new SectionList()
    dend_35 OneSecGrp_SectionRef_44.append()

    // Group: {name=OneSecGrp_SectionRef_51, groups=[], sections=[dend_37]}
    OneSecGrp_SectionRef_51 = new SectionList()
    dend_37 OneSecGrp_SectionRef_51.append()

    // Group: {name=OneSecGrp_SectionRef_52, groups=[], sections=[dend_36]}
    OneSecGrp_SectionRef_52 = new SectionList()
    dend_36 OneSecGrp_SectionRef_52.append()

    // Group: {name=OneSecGrp_SectionRef_2, groups=[], sections=[dend_26]}
    OneSecGrp_SectionRef_2 = new SectionList()
    dend_26 OneSecGrp_SectionRef_2.append()

    // Group: {name=OneSecGrp_SectionRef_6, groups=[], sections=[dend_32]}
    OneSecGrp_SectionRef_6 = new SectionList()
    dend_32 OneSecGrp_SectionRef_6.append()

    // Group: {name=OneSecGrp_SectionRef_3, groups=[], sections=[dend_11]}
    OneSecGrp_SectionRef_3 = new SectionList()
    dend_11 OneSecGrp_SectionRef_3.append()

    // Group: {name=OneSecGrp_SectionRef_7, groups=[], sections=[dend_27]}
    OneSecGrp_SectionRef_7 = new SectionList()
    dend_27 OneSecGrp_SectionRef_7.append()

    // Group: {name=OneSecGrp_SectionRef_9, groups=[], sections=[dend_12]}
    OneSecGrp_SectionRef_9 = new SectionList()
    dend_12 OneSecGrp_SectionRef_9.append()

    // Group: {name=OneSecGrp_SectionRef_14, groups=[], sections=[dend_33]}
    OneSecGrp_SectionRef_14 = new SectionList()
    dend_33 OneSecGrp_SectionRef_14.append()

    // Group: {name=OneSecGrp_SectionRef_4, groups=[], sections=[dend_0]}
    OneSecGrp_SectionRef_4 = new SectionList()
    dend_0 OneSecGrp_SectionRef_4.append()

    // Group: {name=OneSecGrp_SectionRef_11, groups=[], sections=[dend_1]}
    OneSecGrp_SectionRef_11 = new SectionList()
    dend_1 OneSecGrp_SectionRef_11.append()

    // Group: {name=OneSecGrp_SectionRef_19, groups=[], sections=[dend_16]}
    OneSecGrp_SectionRef_19 = new SectionList()
    dend_16 OneSecGrp_SectionRef_19.append()

    // Group: {name=OneSecGrp_SectionRef_10, groups=[], sections=[dend_4]}
    OneSecGrp_SectionRef_10 = new SectionList()
    dend_4 OneSecGrp_SectionRef_10.append()

    // Group: {name=OneSecGrp_SectionRef_24, groups=[], sections=[dend_2]}
    OneSecGrp_SectionRef_24 = new SectionList()
    dend_2 OneSecGrp_SectionRef_24.append()

    // Group: {name=OneSecGrp_SectionRef_28, groups=[], sections=[dend_34]}
    OneSecGrp_SectionRef_28 = new SectionList()
    dend_34 OneSecGrp_SectionRef_28.append()

    // Group: {name=OneSecGrp_SectionRef_27, groups=[], sections=[dend_39]}
    OneSecGrp_SectionRef_27 = new SectionList()
    dend_39 OneSecGrp_SectionRef_27.append()

    // Group: {name=OneSecGrp_SectionRef_15, groups=[], sections=[dend_31]}
    OneSecGrp_SectionRef_15 = new SectionList()
    dend_31 OneSecGrp_SectionRef_15.append()

    // Group: {name=OneSecGrp_SectionRef_16, groups=[], sections=[dend_28]}
    OneSecGrp_SectionRef_16 = new SectionList()
    dend_28 OneSecGrp_SectionRef_16.append()

    // Group: {name=OneSecGrp_SectionRef_41, groups=[], sections=[dend_41]}
    OneSecGrp_SectionRef_41 = new SectionList()
    dend_41 OneSecGrp_SectionRef_41.append()

    // Group: {name=OneSecGrp_SectionRef_17, groups=[], sections=[dend_23]}
    OneSecGrp_SectionRef_17 = new SectionList()
    dend_23 OneSecGrp_SectionRef_17.append()

    // Group: {name=OneSecGrp_SectionRef_18, groups=[], sections=[dend_22]}
    OneSecGrp_SectionRef_18 = new SectionList()
    dend_22 OneSecGrp_SectionRef_18.append()

    // Group: {name=OneSecGrp_SectionRef_31, groups=[], sections=[dend_25]}
    OneSecGrp_SectionRef_31 = new SectionList()
    dend_25 OneSecGrp_SectionRef_31.append()

    // Group: {name=OneSecGrp_SectionRef_45, groups=[], sections=[dend_20]}
    OneSecGrp_SectionRef_45 = new SectionList()
    dend_20 OneSecGrp_SectionRef_45.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_1()
}

proc subsets_1() {

    // Group: {name=OneSecGrp_SectionRef_46, groups=[], sections=[dend_19]}
    OneSecGrp_SectionRef_46 = new SectionList()
    dend_19 OneSecGrp_SectionRef_46.append()

    // Group: {name=OneSecGrp_SectionRef_49, groups=[], sections=[dend_47]}
    OneSecGrp_SectionRef_49 = new SectionList()
    dend_47 OneSecGrp_SectionRef_49.append()

    // Group: {name=OneSecGrp_SectionRef_50, groups=[], sections=[dend_46]}
    OneSecGrp_SectionRef_50 = new SectionList()
    dend_46 OneSecGrp_SectionRef_50.append()

    // Group: {name=OneSecGrp_SectionRef_48, groups=[], sections=[dend_8]}
    OneSecGrp_SectionRef_48 = new SectionList()
    dend_8 OneSecGrp_SectionRef_48.append()

    // Group: {name=OneSecGrp_SectionRef_47, groups=[], sections=[dend_9]}
    OneSecGrp_SectionRef_47 = new SectionList()
    dend_9 OneSecGrp_SectionRef_47.append()

    // Group: {name=basal, groups=[], sections=[dend_0, dend_1, dend_2, dend_3, dend_4, dend_5, dend_6, dend_7, dend_8, dend_9, dend_10, dend_11, dend_12, dend_13, dend_14, dend_15, dend_16, dend_17, dend_18, dend_19, dend_20, dend_21, dend_22, dend_23, dend_24, dend_25, dend_26, dend_27, dend_28, dend_29, dend_30, dend_31, dend_32, dend_33, dend_34, dend_35, dend_36, dend_37, dend_38, dend_39, dend_40, dend_41, dend_42, dend_43, dend_44, dend_45, dend_46, dend_47, dend_48], inhomogeneousParameters=[{id=PathLengthOver_basal, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    basal = new SectionList()
    dend_0 basal.append()
    dend_1 basal.append()
    dend_2 basal.append()
    dend_3 basal.append()
    dend_4 basal.append()
    dend_5 basal.append()
    dend_6 basal.append()
    dend_7 basal.append()
    dend_8 basal.append()
    dend_9 basal.append()
    dend_10 basal.append()
    dend_11 basal.append()
    dend_12 basal.append()
    dend_13 basal.append()
    dend_14 basal.append()
    dend_15 basal.append()
    dend_16 basal.append()
    dend_17 basal.append()
    dend_18 basal.append()
    dend_19 basal.append()
    dend_20 basal.append()
    dend_21 basal.append()
    dend_22 basal.append()
    dend_23 basal.append()
    dend_24 basal.append()
    dend_25 basal.append()
    dend_26 basal.append()
    dend_27 basal.append()
    dend_28 basal.append()
    dend_29 basal.append()
    dend_30 basal.append()
    dend_31 basal.append()
    dend_32 basal.append()
    dend_33 basal.append()
    dend_34 basal.append()
    dend_35 basal.append()
    dend_36 basal.append()
    dend_37 basal.append()
    dend_38 basal.append()
    dend_39 basal.append()
    dend_40 basal.append()
    dend_41 basal.append()
    dend_42 basal.append()
    dend_43 basal.append()
    dend_44 basal.append()
    dend_45 basal.append()
    dend_46 basal.append()
    dend_47 basal.append()
    dend_48 basal.append()

    // Group: {name=apical, inhomogeneousParameters=[{id=PathLengthOver_apical, variable=p, metric=Path Length from root, proximalTranslationStart=0.0}]}
    apical = new SectionList()

    // Group: {name=axonal, groups=[], sections=[axon_0, axon_1]}
    axonal = new SectionList()
    axon_0 axonal.append()
    axon_1 axonal.append()

    // Group: {name=somatic, groups=[], sections=[soma_0]}
    somatic = new SectionList()
    soma_0 somatic.append()

    // Group: {name=all, sections=[soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, soma_0, dend_26, dend_11, dend_11, dend_11, dend_11, dend_11, dend_11, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, dend_0, axon_0, axon_0, dend_32, dend_32, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_27, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_21, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_12, dend_4, dend_4, dend_4, dend_4, dend_1, axon_1, axon_1, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_42, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_33, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_31, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_28, dend_23, dend_23, dend_23, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_22, dend_16, dend_16, dend_16, dend_16, dend_16, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_13, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_6, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_5, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_3, dend_2, dend_2, dend_2, dend_2, dend_2, dend_2, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_48, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_43, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_39, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_34, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_30, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_29, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_25, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_24, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_18, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_17, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_15, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_14, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_10, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_7, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_45, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_44, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_41, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_40, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_38, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_35, dend_20, dend_20, dend_19, dend_19, dend_19, dend_19, dend_19, dend_19, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_9, dend_8, dend_8, dend_47, dend_47, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_46, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_37, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36, dend_36]}
    all = new SectionList()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    soma_0 all.append()
    dend_26 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_11 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    dend_0 all.append()
    axon_0 all.append()
    axon_0 all.append()
    dend_32 all.append()
    dend_32 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_2()
}

proc subsets_2() {
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_27 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_21 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_12 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_4 all.append()
    dend_1 all.append()
    axon_1 all.append()
    axon_1 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_42 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_33 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_31 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_28 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_23 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()
    dend_22 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_3()
}

proc subsets_3() {
    dend_22 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_16 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_13 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()
    dend_6 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_4()
}

proc subsets_4() {
    dend_6 all.append()
    dend_6 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_5 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()
    dend_3 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_5()
}

proc subsets_5() {
    dend_3 all.append()
    dend_3 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_2 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_48 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_6()
}

proc subsets_6() {
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_43 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_39 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_34 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_7()
}

proc subsets_7() {
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_30 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_29 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_25 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_8()
}

proc subsets_8() {
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_24 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_18 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_9()
}

proc subsets_9() {
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_17 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_15 all.append()
    dend_14 all.append()
    dend_14 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_10()
}

proc subsets_10() {
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_14 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_11()
}

proc subsets_11() {
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_10 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()
    dend_7 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_12()
}

proc subsets_12() {
    dend_7 all.append()
    dend_7 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_45 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_13()
}

proc subsets_13() {
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_44 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_41 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_40 all.append()
    dend_38 all.append()
    dend_38 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_14()
}

proc subsets_14() {
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_38 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_35 all.append()
    dend_20 all.append()
    dend_20 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_19 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()
    dend_9 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_15()
}

proc subsets_15() {
    dend_8 all.append()
    dend_8 all.append()
    dend_47 all.append()
    dend_47 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_46 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_37 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

    // Procedure too big; splitting & calling another procedure...
    subsets_16()
}

proc subsets_16() {
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()
    dend_36 all.append()

}

objref PathLengthOver_basal // inhomogeneous parameter over basal
objref PathLengthOver_apical // inhomogeneous parameter over apical

proc subsets_inhomogeneous() {
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_basal = new SubsetDomainIterator(basal, metric, proximal_style, distal_style)
    metric = 0
    proximal_style =  1 
    distal_style = 0
    PathLengthOver_apical = new SubsetDomainIterator(apical, metric, proximal_style, distal_style)
}

proc biophys() {

    // Specific capacitance
    forsec basal cm = 1.0  // units: uF/cm2
    forsec apical cm = 1.0  // units: uF/cm2
    forsec axonal cm = 1.0  // units: uF/cm2
    forsec somatic cm = 1.0  // units: uF/cm2

    // Specific axial resistance/resistivity
    forsec all Ra = 100.0  // units: ohm cm

    // Channel densities
    forsec basal {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec basal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec basal {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert K_Tst
        gmax_K_Tst = 0.007375  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert SKv3_1
        gmax_SKv3_1 = 4.1E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec apical {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert NaTs2_t
        gmax_NaTs2_t = 0.001373  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec apical {
        insert pas_nml2
        gmax_pas_nml2 = 1.0E-6  // units: S cm-2
        e_pas_nml2 = -63.118496  // units: mV
    }
    forsec apical {
        insert Im
        gmax_Im = 1.3999999E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert NaTa_t
        gmax_NaTa_t = 3.993125  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert K_Tst
        gmax_K_Tst = 0.0  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert Nap_Et2
        gmax_Nap_Et2 = 0.0  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec axonal {
        insert SK_E2
        gmax_SK_E2 = 0.005611  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert K_Pst
        gmax_K_Pst = 0.068459995  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert SKv3_1
        gmax_SKv3_1 = 0.517764  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec axonal {
        insert pas_nml2
        gmax_pas_nml2 = 6.3E-5  // units: S cm-2
        e_pas_nml2 = -64.6017  // units: mV
    }
    forsec axonal {
        insert Im
        gmax_Im = 3.45E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Tst
        gmax_K_Tst = 0.077616  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert Nap_Et2
        gmax_Nap_Et2 = 1.0E-6  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec somatic {
        insert SK_E2
        gmax_SK_E2 = 0.002099  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert K_Pst
        gmax_K_Pst = 1.13999995E-4  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert SKv3_1
        gmax_SKv3_1 = 0.26087198  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert pas_nml2
        gmax_pas_nml2 = 2.0E-5  // units: S cm-2
        e_pas_nml2 = -69.78141  // units: mV
    }
    forsec somatic {
        insert Im
        gmax_Im = 3.2E-5  // units: S cm-2
        ek = -85.0  // units: mV
    }
    forsec somatic {
        insert NaTs2_t
        gmax_NaTs2_t = 0.395881  // units: S cm-2
        ena = 50.0  // units: mV
    }
    forsec basal {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec apical {
        insert Ih
        // gmax_Ih will be set later...
        ehcn = -45.0  // units: mV
    }
    forsec axonal {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009986  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec axonal {
        insert Ca
        gmax_Ca = 5.0100003E-4  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca_LVAst
        gmax_Ca_LVAst = 0.009728  // units: S cm-2
        // erev is calculated by Nernst equation
    }
    forsec somatic {
        insert Ca
        gmax_Ca = 2.7999999E-5  // units: S cm-2
        // erev is calculated by Nernst equation
    }

    // Concentration models for species
    // Ion: ca on group: axonal, with concentration model: CaDynamics_E2_NML2__cACint_237_axonal
    forsec axonal {
        insert CaDynamics_E2_NML2__cACint_237_axonal
    }
    // Ion: ca on group: somatic, with concentration model: CaDynamics_E2_NML2__cACint_237_somatic
    forsec somatic {
        insert CaDynamics_E2_NML2__cACint_237_somatic
    }

}

func H() { // Heaviside function
    if ($1>=0) return 1
    if ($1==0) return 0.5
    return 0
}

proc biophys_inhomogeneous() {

    PathLengthOver_basal.update()
    for PathLengthOver_basal.loop() {
        x = PathLengthOver_basal.x
        p = PathLengthOver_basal.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }

    PathLengthOver_apical.update()
    for PathLengthOver_apical.loop() {
        x = PathLengthOver_apical.x
        p = PathLengthOver_apical.p
        gmax_Ih(x) = 1.0E-4 * (1e4 * ((-0.869600 + 2.087000*exp((p-0.000000)*0.003000))*0.000023))
    }
}

proc geom_nseg() {
    // All sections not mentioned here have nseg = 1
    dend_21 nseg = 5
    dend_42 nseg = 3
    dend_13 nseg = 3
    dend_6 nseg = 15
    dend_5 nseg = 5
    dend_3 nseg = 7
    dend_48 nseg = 17
    dend_43 nseg = 3
    dend_30 nseg = 21
    dend_29 nseg = 3
    dend_24 nseg = 3
    dend_18 nseg = 7
    dend_17 nseg = 13
    dend_15 nseg = 5
    dend_14 nseg = 7
    dend_10 nseg = 7
    dend_7 nseg = 5
    dend_45 nseg = 11
    dend_44 nseg = 5
    dend_40 nseg = 3
    dend_38 nseg = 7
    dend_35 nseg = 3
    dend_37 nseg = 3
    dend_36 nseg = 3
}


proc position() { local i
    forsec all {
        for i = 0, n3d()-1 {
            pt3dchange(i, $1+x3d(i), $2+y3d(i), $3+z3d(i), diam3d(i))
        }
    }
    x = $1  y = $2  z = $3
}


endtemplate cACint209_L4_BTC_04273604d2_0_0


